

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Dec 28 02:40:52 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1719
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	stringtext14,global,class=STRCODE,delta=2
    19                           	psect	stringtext15,global,class=STRCODE,delta=2
    20                           	psect	stringtext16,global,class=STRCODE,delta=2
    21                           	psect	stringtext17,global,class=STRCODE,delta=2
    22                           	psect	stringtext18,global,class=STRCODE,delta=2
    23                           	psect	stringtext19,global,class=STRCODE,delta=2
    24                           	psect	stringtext20,global,class=STRCODE,delta=2
    25                           	psect	stringtext21,global,class=STRCODE,delta=2
    26                           	psect	stringtext22,global,class=STRCODE,delta=2
    27                           	psect	stringtext23,global,class=STRCODE,delta=2
    28                           	psect	stringtext24,global,class=STRCODE,delta=2
    29                           	psect	stringtext25,global,class=STRCODE,delta=2
    30                           	psect	stringtext26,global,class=STRCODE,delta=2
    31                           	psect	stringtext27,global,class=STRCODE,delta=2
    32                           	psect	stringtext28,global,class=STRCODE,delta=2
    33                           	psect	stringtext29,global,class=STRCODE,delta=2
    34                           	psect	stringtext30,global,class=STRCODE,delta=2
    35                           	psect	stringtext31,global,class=STRCODE,delta=2
    36                           	psect	stringtext32,global,class=STRCODE,delta=2
    37                           	psect	stringtext33,global,class=STRCODE,delta=2
    38                           	psect	stringtext34,global,class=STRCODE,delta=2
    39                           	psect	stringtext35,global,class=STRCODE,delta=2
    40                           	psect	stringtext36,global,class=STRCODE,delta=2
    41                           	psect	stringtext37,global,class=STRCODE,delta=2
    42                           	psect	stringtext38,global,class=STRCODE,delta=2
    43                           	psect	stringtext39,global,class=STRCODE,delta=2
    44                           	psect	stringtext40,global,class=STRCODE,delta=2
    45                           	psect	stringtext41,global,class=STRCODE,delta=2
    46                           	psect	stringtext42,global,class=STRCODE,delta=2
    47                           	psect	stringtext43,global,class=STRCODE,delta=2
    48                           	psect	stringtext44,global,class=STRCODE,delta=2
    49                           	psect	stringtext45,global,class=STRCODE,delta=2
    50                           	psect	stringtext46,global,class=STRCODE,delta=2
    51                           	psect	stringtext47,global,class=STRCODE,delta=2
    52                           	psect	stringtext48,global,class=STRCODE,delta=2
    53                           	psect	stringtext49,global,class=STRCODE,delta=2
    54                           	psect	stringtext50,global,class=STRCODE,delta=2
    55                           	psect	stringtext51,global,class=STRCODE,delta=2
    56                           	psect	stringtext52,global,class=STRCODE,delta=2
    57                           	psect	stringtext53,global,class=STRCODE,delta=2
    58                           	psect	stringtext54,global,class=STRCODE,delta=2
    59                           	psect	stringtext55,global,class=STRCODE,delta=2
    60                           	psect	cinit,global,class=CODE,merge=1,delta=2
    61                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    62                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    63                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    64                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    65                           	psect	clrtext,global,class=CODE,delta=2
    66                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    67                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    68                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    69                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    70                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    71                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    72                           	psect	text1,local,class=CODE,merge=1,delta=2
    73                           	psect	text2,local,class=CODE,merge=1,delta=2
    74                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    75                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    76                           	psect	text5,local,class=CODE,merge=1,delta=2
    77                           	psect	text6,local,class=CODE,merge=1,delta=2
    78                           	psect	text7,local,class=CODE,merge=1,delta=2
    79                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    80                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    81                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    82                           	psect	text11,local,class=CODE,merge=1,delta=2
    83                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    84                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    85                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    86                           	psect	text15,local,class=CODE,merge=1,delta=2
    87                           	psect	text16,local,class=CODE,merge=1,delta=2
    88                           	psect	text17,local,class=CODE,merge=1,delta=2
    89                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    90                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    91                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    92                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    93                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    94                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    95                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    96                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    97                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    98                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    99                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
   100                           	psect	text29,local,class=CODE,merge=1,delta=2
   101                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
   102                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
   103                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
   104                           	psect	text33,local,class=CODE,merge=1,delta=2
   105                           	psect	text34,local,class=CODE,merge=1,delta=2
   106                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
   107                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
   108                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
   109                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
   110                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
   111                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
   112                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
   113                           	psect	text42,local,class=CODE,merge=1,delta=2
   114                           	psect	text43,local,class=CODE,merge=1,delta=2
   115                           	psect	text44,local,class=CODE,merge=1,delta=2
   116                           	psect	text45,local,class=CODE,merge=1,delta=2
   117                           	psect	text46,local,class=CODE,merge=1,delta=2,group=1
   118                           	psect	text47,local,class=CODE,merge=1,delta=2
   119                           	psect	text48,local,class=CODE,merge=1,delta=2
   120                           	psect	text49,local,class=CODE,merge=1,delta=2
   121                           	psect	text50,local,class=CODE,merge=1,delta=2,group=1
   122                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
   123                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
   124                           	psect	text53,local,class=CODE,merge=1,delta=2
   125                           	psect	text54,local,class=CODE,merge=1,delta=2
   126                           	psect	text55,local,class=CODE,merge=1,delta=2
   127                           	psect	text56,local,class=CODE,merge=1,delta=2
   128                           	psect	text57,local,class=CODE,merge=1,delta=2
   129                           	psect	text58,local,class=CODE,merge=1,delta=2
   130                           	psect	text59,local,class=CODE,merge=1,delta=2
   131                           	psect	text60,local,class=CODE,merge=1,delta=2
   132                           	psect	text61,local,class=CODE,merge=1,delta=2
   133                           	psect	text62,local,class=CODE,merge=1,delta=2
   134                           	psect	text63,local,class=CODE,merge=1,delta=2
   135                           	psect	text64,local,class=CODE,merge=1,delta=2
   136                           	psect	text65,local,class=CODE,merge=1,delta=2
   137                           	psect	text66,local,class=CODE,merge=1,delta=2
   138                           	psect	text67,local,class=CODE,merge=1,delta=2,group=1
   139                           	psect	text68,local,class=CODE,merge=1,delta=2,group=1
   140                           	psect	text69,local,class=CODE,merge=1,delta=2,group=1
   141                           	psect	text70,local,class=CODE,merge=1,delta=2
   142                           	psect	text71,local,class=CODE,merge=1,delta=2
   143                           	psect	text72,local,class=CODE,merge=1,delta=2
   144                           	psect	text73,local,class=CODE,merge=1,delta=2
   145                           	psect	text74,local,class=CODE,merge=1,delta=2
   146                           	psect	text75,local,class=CODE,merge=1,delta=2
   147                           	psect	text76,local,class=CODE,merge=1,delta=2
   148                           	psect	text77,local,class=CODE,merge=1,delta=2,group=1
   149                           	psect	intentry,global,class=CODE,delta=2
   150                           	psect	text6_split_1,local,class=CODE,merge=1,delta=2
   151                           	psect	text6_split_2,local,class=CODE,merge=1,delta=2
   152                           	psect	text6_split_3,local,class=CODE,merge=1,delta=2
   153                           	psect	text6_split_4,local,class=CODE,merge=1,delta=2
   154                           	psect	text6_split_5,local,class=CODE,merge=1,delta=2
   155                           	psect	text6_split_6,local,class=CODE,merge=1,delta=2
   156                           	psect	text6_split_7,local,class=CODE,merge=1,delta=2
   157                           	psect	text6_split_8,local,class=CODE,merge=1,delta=2
   158                           	dabs	1,0xCA0,32
   159                           	dabs	1,0xC20,80
   160                           	dabs	1,0xBE1,15
   161                           	dabs	1,0x2771,0,_messageBuffer
   162                           	dabs	1,0x7E,2
   163  0000                     
   164                           ; Version 2.05
   165                           ; Generated 20/12/2018 GMT
   166                           ; 
   167                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   168                           ; All rights reserved.
   169                           ; 
   170                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   171                           ; 
   172                           ; Redistribution and use in source and binary forms, with or without modification, are
   173                           ; permitted provided that the following conditions are met:
   174                           ; 
   175                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   176                           ;        conditions and the following disclaimer.
   177                           ; 
   178                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   179                           ;        of conditions and the following disclaimer in the documentation and/or other
   180                           ;        materials provided with the distribution.
   181                           ; 
   182                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   183                           ;        software without specific prior written permission.
   184                           ; 
   185                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   186                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   187                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   188                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   189                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   190                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   191                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   192                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   193                           ; 
   194                           ; 
   195                           ; Code-generator required, PIC16F1719 Definitions
   196                           ; 
   197                           ; SFR Addresses
   198  0000                     	;# 
   199  0001                     	;# 
   200  0002                     	;# 
   201  0003                     	;# 
   202  0004                     	;# 
   203  0005                     	;# 
   204  0006                     	;# 
   205  0007                     	;# 
   206  0008                     	;# 
   207  0009                     	;# 
   208  000A                     	;# 
   209  000B                     	;# 
   210  000C                     	;# 
   211  000D                     	;# 
   212  000E                     	;# 
   213  000F                     	;# 
   214  0010                     	;# 
   215  0011                     	;# 
   216  0012                     	;# 
   217  0013                     	;# 
   218  0015                     	;# 
   219  0016                     	;# 
   220  0016                     	;# 
   221  0017                     	;# 
   222  0018                     	;# 
   223  0019                     	;# 
   224  001A                     	;# 
   225  001B                     	;# 
   226  001C                     	;# 
   227  008C                     	;# 
   228  008D                     	;# 
   229  008E                     	;# 
   230  008F                     	;# 
   231  0090                     	;# 
   232  0091                     	;# 
   233  0092                     	;# 
   234  0093                     	;# 
   235  0095                     	;# 
   236  0096                     	;# 
   237  0097                     	;# 
   238  0098                     	;# 
   239  0099                     	;# 
   240  009A                     	;# 
   241  009B                     	;# 
   242  009B                     	;# 
   243  009C                     	;# 
   244  009D                     	;# 
   245  009E                     	;# 
   246  009F                     	;# 
   247  010C                     	;# 
   248  010D                     	;# 
   249  010E                     	;# 
   250  010F                     	;# 
   251  0110                     	;# 
   252  0111                     	;# 
   253  0112                     	;# 
   254  0113                     	;# 
   255  0114                     	;# 
   256  0115                     	;# 
   257  0116                     	;# 
   258  0117                     	;# 
   259  0118                     	;# 
   260  0119                     	;# 
   261  011A                     	;# 
   262  011B                     	;# 
   263  011B                     	;# 
   264  011C                     	;# 
   265  018C                     	;# 
   266  018D                     	;# 
   267  018E                     	;# 
   268  018F                     	;# 
   269  0190                     	;# 
   270  0191                     	;# 
   271  0191                     	;# 
   272  0192                     	;# 
   273  0193                     	;# 
   274  0193                     	;# 
   275  0194                     	;# 
   276  0195                     	;# 
   277  0196                     	;# 
   278  0197                     	;# 
   279  0199                     	;# 
   280  0199                     	;# 
   281  0199                     	;# 
   282  019A                     	;# 
   283  019A                     	;# 
   284  019A                     	;# 
   285  019B                     	;# 
   286  019B                     	;# 
   287  019B                     	;# 
   288  019B                     	;# 
   289  019B                     	;# 
   290  019C                     	;# 
   291  019C                     	;# 
   292  019C                     	;# 
   293  019D                     	;# 
   294  019D                     	;# 
   295  019D                     	;# 
   296  019E                     	;# 
   297  019E                     	;# 
   298  019E                     	;# 
   299  019F                     	;# 
   300  019F                     	;# 
   301  019F                     	;# 
   302  019F                     	;# 
   303  019F                     	;# 
   304  020C                     	;# 
   305  020D                     	;# 
   306  020E                     	;# 
   307  020F                     	;# 
   308  0210                     	;# 
   309  0211                     	;# 
   310  0211                     	;# 
   311  0212                     	;# 
   312  0212                     	;# 
   313  0213                     	;# 
   314  0213                     	;# 
   315  0214                     	;# 
   316  0214                     	;# 
   317  0215                     	;# 
   318  0215                     	;# 
   319  0215                     	;# 
   320  0215                     	;# 
   321  0216                     	;# 
   322  0216                     	;# 
   323  0217                     	;# 
   324  0217                     	;# 
   325  028C                     	;# 
   326  028D                     	;# 
   327  028E                     	;# 
   328  028F                     	;# 
   329  0290                     	;# 
   330  0291                     	;# 
   331  0291                     	;# 
   332  0292                     	;# 
   333  0293                     	;# 
   334  0293                     	;# 
   335  0298                     	;# 
   336  0298                     	;# 
   337  0299                     	;# 
   338  029A                     	;# 
   339  029A                     	;# 
   340  029E                     	;# 
   341  030C                     	;# 
   342  030D                     	;# 
   343  030E                     	;# 
   344  030F                     	;# 
   345  0310                     	;# 
   346  038C                     	;# 
   347  038D                     	;# 
   348  038E                     	;# 
   349  038F                     	;# 
   350  0390                     	;# 
   351  0391                     	;# 
   352  0392                     	;# 
   353  0393                     	;# 
   354  0394                     	;# 
   355  0395                     	;# 
   356  0396                     	;# 
   357  0397                     	;# 
   358  0398                     	;# 
   359  0399                     	;# 
   360  039D                     	;# 
   361  039E                     	;# 
   362  039F                     	;# 
   363  0415                     	;# 
   364  0416                     	;# 
   365  0417                     	;# 
   366  041C                     	;# 
   367  041D                     	;# 
   368  041E                     	;# 
   369  0498                     	;# 
   370  0498                     	;# 
   371  0499                     	;# 
   372  049A                     	;# 
   373  049B                     	;# 
   374  049B                     	;# 
   375  049C                     	;# 
   376  049D                     	;# 
   377  049E                     	;# 
   378  049F                     	;# 
   379  0511                     	;# 
   380  0515                     	;# 
   381  0617                     	;# 
   382  0618                     	;# 
   383  0619                     	;# 
   384  0619                     	;# 
   385  061A                     	;# 
   386  061B                     	;# 
   387  061C                     	;# 
   388  061C                     	;# 
   389  0691                     	;# 
   390  0692                     	;# 
   391  0693                     	;# 
   392  0694                     	;# 
   393  0695                     	;# 
   394  0696                     	;# 
   395  0697                     	;# 
   396  0698                     	;# 
   397  0699                     	;# 
   398  069A                     	;# 
   399  069B                     	;# 
   400  069C                     	;# 
   401  069D                     	;# 
   402  069E                     	;# 
   403  069F                     	;# 
   404  0E0F                     	;# 
   405  0E10                     	;# 
   406  0E11                     	;# 
   407  0E12                     	;# 
   408  0E13                     	;# 
   409  0E14                     	;# 
   410  0E15                     	;# 
   411  0E17                     	;# 
   412  0E20                     	;# 
   413  0E21                     	;# 
   414  0E22                     	;# 
   415  0E24                     	;# 
   416  0E25                     	;# 
   417  0E28                     	;# 
   418  0E29                     	;# 
   419  0E2A                     	;# 
   420  0E2B                     	;# 
   421  0E90                     	;# 
   422  0E91                     	;# 
   423  0E92                     	;# 
   424  0E93                     	;# 
   425  0E94                     	;# 
   426  0E95                     	;# 
   427  0E96                     	;# 
   428  0E97                     	;# 
   429  0E98                     	;# 
   430  0E99                     	;# 
   431  0E9A                     	;# 
   432  0E9B                     	;# 
   433  0E9C                     	;# 
   434  0E9D                     	;# 
   435  0E9E                     	;# 
   436  0E9F                     	;# 
   437  0EA0                     	;# 
   438  0EA1                     	;# 
   439  0EA2                     	;# 
   440  0EA3                     	;# 
   441  0EA4                     	;# 
   442  0EA5                     	;# 
   443  0EA6                     	;# 
   444  0EA7                     	;# 
   445  0EA8                     	;# 
   446  0EA9                     	;# 
   447  0EAA                     	;# 
   448  0EAB                     	;# 
   449  0EAC                     	;# 
   450  0EAD                     	;# 
   451  0EAE                     	;# 
   452  0EAF                     	;# 
   453  0EB0                     	;# 
   454  0EB1                     	;# 
   455  0EB2                     	;# 
   456  0F0F                     	;# 
   457  0F10                     	;# 
   458  0F11                     	;# 
   459  0F12                     	;# 
   460  0F13                     	;# 
   461  0F14                     	;# 
   462  0F15                     	;# 
   463  0F16                     	;# 
   464  0F17                     	;# 
   465  0F18                     	;# 
   466  0F19                     	;# 
   467  0F1A                     	;# 
   468  0F1B                     	;# 
   469  0F1C                     	;# 
   470  0F1D                     	;# 
   471  0F1E                     	;# 
   472  0F1F                     	;# 
   473  0F20                     	;# 
   474  0F21                     	;# 
   475  0F22                     	;# 
   476  0F23                     	;# 
   477  0F24                     	;# 
   478  0F25                     	;# 
   479  0F26                     	;# 
   480  0F27                     	;# 
   481  0F28                     	;# 
   482  0F29                     	;# 
   483  0F2A                     	;# 
   484  0F2B                     	;# 
   485  0F2C                     	;# 
   486  0F2D                     	;# 
   487  0F2E                     	;# 
   488  0F2F                     	;# 
   489  0F30                     	;# 
   490  0F31                     	;# 
   491  0F32                     	;# 
   492  0F33                     	;# 
   493  0F34                     	;# 
   494  0F35                     	;# 
   495  0F36                     	;# 
   496  0F37                     	;# 
   497  0FE4                     	;# 
   498  0FE5                     	;# 
   499  0FE6                     	;# 
   500  0FE7                     	;# 
   501  0FE8                     	;# 
   502  0FE9                     	;# 
   503  0FEA                     	;# 
   504  0FEB                     	;# 
   505  0FED                     	;# 
   506  0FEE                     	;# 
   507  0FEF                     	;# 
   508  0000                     	;# 
   509  0001                     	;# 
   510  0002                     	;# 
   511  0003                     	;# 
   512  0004                     	;# 
   513  0005                     	;# 
   514  0006                     	;# 
   515  0007                     	;# 
   516  0008                     	;# 
   517  0009                     	;# 
   518  000A                     	;# 
   519  000B                     	;# 
   520  000C                     	;# 
   521  000D                     	;# 
   522  000E                     	;# 
   523  000F                     	;# 
   524  0010                     	;# 
   525  0011                     	;# 
   526  0012                     	;# 
   527  0013                     	;# 
   528  0015                     	;# 
   529  0016                     	;# 
   530  0016                     	;# 
   531  0017                     	;# 
   532  0018                     	;# 
   533  0019                     	;# 
   534  001A                     	;# 
   535  001B                     	;# 
   536  001C                     	;# 
   537  008C                     	;# 
   538  008D                     	;# 
   539  008E                     	;# 
   540  008F                     	;# 
   541  0090                     	;# 
   542  0091                     	;# 
   543  0092                     	;# 
   544  0093                     	;# 
   545  0095                     	;# 
   546  0096                     	;# 
   547  0097                     	;# 
   548  0098                     	;# 
   549  0099                     	;# 
   550  009A                     	;# 
   551  009B                     	;# 
   552  009B                     	;# 
   553  009C                     	;# 
   554  009D                     	;# 
   555  009E                     	;# 
   556  009F                     	;# 
   557  010C                     	;# 
   558  010D                     	;# 
   559  010E                     	;# 
   560  010F                     	;# 
   561  0110                     	;# 
   562  0111                     	;# 
   563  0112                     	;# 
   564  0113                     	;# 
   565  0114                     	;# 
   566  0115                     	;# 
   567  0116                     	;# 
   568  0117                     	;# 
   569  0118                     	;# 
   570  0119                     	;# 
   571  011A                     	;# 
   572  011B                     	;# 
   573  011B                     	;# 
   574  011C                     	;# 
   575  018C                     	;# 
   576  018D                     	;# 
   577  018E                     	;# 
   578  018F                     	;# 
   579  0190                     	;# 
   580  0191                     	;# 
   581  0191                     	;# 
   582  0192                     	;# 
   583  0193                     	;# 
   584  0193                     	;# 
   585  0194                     	;# 
   586  0195                     	;# 
   587  0196                     	;# 
   588  0197                     	;# 
   589  0199                     	;# 
   590  0199                     	;# 
   591  0199                     	;# 
   592  019A                     	;# 
   593  019A                     	;# 
   594  019A                     	;# 
   595  019B                     	;# 
   596  019B                     	;# 
   597  019B                     	;# 
   598  019B                     	;# 
   599  019B                     	;# 
   600  019C                     	;# 
   601  019C                     	;# 
   602  019C                     	;# 
   603  019D                     	;# 
   604  019D                     	;# 
   605  019D                     	;# 
   606  019E                     	;# 
   607  019E                     	;# 
   608  019E                     	;# 
   609  019F                     	;# 
   610  019F                     	;# 
   611  019F                     	;# 
   612  019F                     	;# 
   613  019F                     	;# 
   614  020C                     	;# 
   615  020D                     	;# 
   616  020E                     	;# 
   617  020F                     	;# 
   618  0210                     	;# 
   619  0211                     	;# 
   620  0211                     	;# 
   621  0212                     	;# 
   622  0212                     	;# 
   623  0213                     	;# 
   624  0213                     	;# 
   625  0214                     	;# 
   626  0214                     	;# 
   627  0215                     	;# 
   628  0215                     	;# 
   629  0215                     	;# 
   630  0215                     	;# 
   631  0216                     	;# 
   632  0216                     	;# 
   633  0217                     	;# 
   634  0217                     	;# 
   635  028C                     	;# 
   636  028D                     	;# 
   637  028E                     	;# 
   638  028F                     	;# 
   639  0290                     	;# 
   640  0291                     	;# 
   641  0291                     	;# 
   642  0292                     	;# 
   643  0293                     	;# 
   644  0293                     	;# 
   645  0298                     	;# 
   646  0298                     	;# 
   647  0299                     	;# 
   648  029A                     	;# 
   649  029A                     	;# 
   650  029E                     	;# 
   651  030C                     	;# 
   652  030D                     	;# 
   653  030E                     	;# 
   654  030F                     	;# 
   655  0310                     	;# 
   656  038C                     	;# 
   657  038D                     	;# 
   658  038E                     	;# 
   659  038F                     	;# 
   660  0390                     	;# 
   661  0391                     	;# 
   662  0392                     	;# 
   663  0393                     	;# 
   664  0394                     	;# 
   665  0395                     	;# 
   666  0396                     	;# 
   667  0397                     	;# 
   668  0398                     	;# 
   669  0399                     	;# 
   670  039D                     	;# 
   671  039E                     	;# 
   672  039F                     	;# 
   673  0415                     	;# 
   674  0416                     	;# 
   675  0417                     	;# 
   676  041C                     	;# 
   677  041D                     	;# 
   678  041E                     	;# 
   679  0498                     	;# 
   680  0498                     	;# 
   681  0499                     	;# 
   682  049A                     	;# 
   683  049B                     	;# 
   684  049B                     	;# 
   685  049C                     	;# 
   686  049D                     	;# 
   687  049E                     	;# 
   688  049F                     	;# 
   689  0511                     	;# 
   690  0515                     	;# 
   691  0617                     	;# 
   692  0618                     	;# 
   693  0619                     	;# 
   694  0619                     	;# 
   695  061A                     	;# 
   696  061B                     	;# 
   697  061C                     	;# 
   698  061C                     	;# 
   699  0691                     	;# 
   700  0692                     	;# 
   701  0693                     	;# 
   702  0694                     	;# 
   703  0695                     	;# 
   704  0696                     	;# 
   705  0697                     	;# 
   706  0698                     	;# 
   707  0699                     	;# 
   708  069A                     	;# 
   709  069B                     	;# 
   710  069C                     	;# 
   711  069D                     	;# 
   712  069E                     	;# 
   713  069F                     	;# 
   714  0E0F                     	;# 
   715  0E10                     	;# 
   716  0E11                     	;# 
   717  0E12                     	;# 
   718  0E13                     	;# 
   719  0E14                     	;# 
   720  0E15                     	;# 
   721  0E17                     	;# 
   722  0E20                     	;# 
   723  0E21                     	;# 
   724  0E22                     	;# 
   725  0E24                     	;# 
   726  0E25                     	;# 
   727  0E28                     	;# 
   728  0E29                     	;# 
   729  0E2A                     	;# 
   730  0E2B                     	;# 
   731  0E90                     	;# 
   732  0E91                     	;# 
   733  0E92                     	;# 
   734  0E93                     	;# 
   735  0E94                     	;# 
   736  0E95                     	;# 
   737  0E96                     	;# 
   738  0E97                     	;# 
   739  0E98                     	;# 
   740  0E99                     	;# 
   741  0E9A                     	;# 
   742  0E9B                     	;# 
   743  0E9C                     	;# 
   744  0E9D                     	;# 
   745  0E9E                     	;# 
   746  0E9F                     	;# 
   747  0EA0                     	;# 
   748  0EA1                     	;# 
   749  0EA2                     	;# 
   750  0EA3                     	;# 
   751  0EA4                     	;# 
   752  0EA5                     	;# 
   753  0EA6                     	;# 
   754  0EA7                     	;# 
   755  0EA8                     	;# 
   756  0EA9                     	;# 
   757  0EAA                     	;# 
   758  0EAB                     	;# 
   759  0EAC                     	;# 
   760  0EAD                     	;# 
   761  0EAE                     	;# 
   762  0EAF                     	;# 
   763  0EB0                     	;# 
   764  0EB1                     	;# 
   765  0EB2                     	;# 
   766  0F0F                     	;# 
   767  0F10                     	;# 
   768  0F11                     	;# 
   769  0F12                     	;# 
   770  0F13                     	;# 
   771  0F14                     	;# 
   772  0F15                     	;# 
   773  0F16                     	;# 
   774  0F17                     	;# 
   775  0F18                     	;# 
   776  0F19                     	;# 
   777  0F1A                     	;# 
   778  0F1B                     	;# 
   779  0F1C                     	;# 
   780  0F1D                     	;# 
   781  0F1E                     	;# 
   782  0F1F                     	;# 
   783  0F20                     	;# 
   784  0F21                     	;# 
   785  0F22                     	;# 
   786  0F23                     	;# 
   787  0F24                     	;# 
   788  0F25                     	;# 
   789  0F26                     	;# 
   790  0F27                     	;# 
   791  0F28                     	;# 
   792  0F29                     	;# 
   793  0F2A                     	;# 
   794  0F2B                     	;# 
   795  0F2C                     	;# 
   796  0F2D                     	;# 
   797  0F2E                     	;# 
   798  0F2F                     	;# 
   799  0F30                     	;# 
   800  0F31                     	;# 
   801  0F32                     	;# 
   802  0F33                     	;# 
   803  0F34                     	;# 
   804  0F35                     	;# 
   805  0F36                     	;# 
   806  0F37                     	;# 
   807  0FE4                     	;# 
   808  0FE5                     	;# 
   809  0FE6                     	;# 
   810  0FE7                     	;# 
   811  0FE8                     	;# 
   812  0FE9                     	;# 
   813  0FEA                     	;# 
   814  0FEB                     	;# 
   815  0FED                     	;# 
   816  0FEE                     	;# 
   817  0FEF                     	;# 
   818  0000                     	;# 
   819  0001                     	;# 
   820  0002                     	;# 
   821  0003                     	;# 
   822  0004                     	;# 
   823  0005                     	;# 
   824  0006                     	;# 
   825  0007                     	;# 
   826  0008                     	;# 
   827  0009                     	;# 
   828  000A                     	;# 
   829  000B                     	;# 
   830  000C                     	;# 
   831  000D                     	;# 
   832  000E                     	;# 
   833  000F                     	;# 
   834  0010                     	;# 
   835  0011                     	;# 
   836  0012                     	;# 
   837  0013                     	;# 
   838  0015                     	;# 
   839  0016                     	;# 
   840  0016                     	;# 
   841  0017                     	;# 
   842  0018                     	;# 
   843  0019                     	;# 
   844  001A                     	;# 
   845  001B                     	;# 
   846  001C                     	;# 
   847  008C                     	;# 
   848  008D                     	;# 
   849  008E                     	;# 
   850  008F                     	;# 
   851  0090                     	;# 
   852  0091                     	;# 
   853  0092                     	;# 
   854  0093                     	;# 
   855  0095                     	;# 
   856  0096                     	;# 
   857  0097                     	;# 
   858  0098                     	;# 
   859  0099                     	;# 
   860  009A                     	;# 
   861  009B                     	;# 
   862  009B                     	;# 
   863  009C                     	;# 
   864  009D                     	;# 
   865  009E                     	;# 
   866  009F                     	;# 
   867  010C                     	;# 
   868  010D                     	;# 
   869  010E                     	;# 
   870  010F                     	;# 
   871  0110                     	;# 
   872  0111                     	;# 
   873  0112                     	;# 
   874  0113                     	;# 
   875  0114                     	;# 
   876  0115                     	;# 
   877  0116                     	;# 
   878  0117                     	;# 
   879  0118                     	;# 
   880  0119                     	;# 
   881  011A                     	;# 
   882  011B                     	;# 
   883  011B                     	;# 
   884  011C                     	;# 
   885  018C                     	;# 
   886  018D                     	;# 
   887  018E                     	;# 
   888  018F                     	;# 
   889  0190                     	;# 
   890  0191                     	;# 
   891  0191                     	;# 
   892  0192                     	;# 
   893  0193                     	;# 
   894  0193                     	;# 
   895  0194                     	;# 
   896  0195                     	;# 
   897  0196                     	;# 
   898  0197                     	;# 
   899  0199                     	;# 
   900  0199                     	;# 
   901  0199                     	;# 
   902  019A                     	;# 
   903  019A                     	;# 
   904  019A                     	;# 
   905  019B                     	;# 
   906  019B                     	;# 
   907  019B                     	;# 
   908  019B                     	;# 
   909  019B                     	;# 
   910  019C                     	;# 
   911  019C                     	;# 
   912  019C                     	;# 
   913  019D                     	;# 
   914  019D                     	;# 
   915  019D                     	;# 
   916  019E                     	;# 
   917  019E                     	;# 
   918  019E                     	;# 
   919  019F                     	;# 
   920  019F                     	;# 
   921  019F                     	;# 
   922  019F                     	;# 
   923  019F                     	;# 
   924  020C                     	;# 
   925  020D                     	;# 
   926  020E                     	;# 
   927  020F                     	;# 
   928  0210                     	;# 
   929  0211                     	;# 
   930  0211                     	;# 
   931  0212                     	;# 
   932  0212                     	;# 
   933  0213                     	;# 
   934  0213                     	;# 
   935  0214                     	;# 
   936  0214                     	;# 
   937  0215                     	;# 
   938  0215                     	;# 
   939  0215                     	;# 
   940  0215                     	;# 
   941  0216                     	;# 
   942  0216                     	;# 
   943  0217                     	;# 
   944  0217                     	;# 
   945  028C                     	;# 
   946  028D                     	;# 
   947  028E                     	;# 
   948  028F                     	;# 
   949  0290                     	;# 
   950  0291                     	;# 
   951  0291                     	;# 
   952  0292                     	;# 
   953  0293                     	;# 
   954  0293                     	;# 
   955  0298                     	;# 
   956  0298                     	;# 
   957  0299                     	;# 
   958  029A                     	;# 
   959  029A                     	;# 
   960  029E                     	;# 
   961  030C                     	;# 
   962  030D                     	;# 
   963  030E                     	;# 
   964  030F                     	;# 
   965  0310                     	;# 
   966  038C                     	;# 
   967  038D                     	;# 
   968  038E                     	;# 
   969  038F                     	;# 
   970  0390                     	;# 
   971  0391                     	;# 
   972  0392                     	;# 
   973  0393                     	;# 
   974  0394                     	;# 
   975  0395                     	;# 
   976  0396                     	;# 
   977  0397                     	;# 
   978  0398                     	;# 
   979  0399                     	;# 
   980  039D                     	;# 
   981  039E                     	;# 
   982  039F                     	;# 
   983  0415                     	;# 
   984  0416                     	;# 
   985  0417                     	;# 
   986  041C                     	;# 
   987  041D                     	;# 
   988  041E                     	;# 
   989  0498                     	;# 
   990  0498                     	;# 
   991  0499                     	;# 
   992  049A                     	;# 
   993  049B                     	;# 
   994  049B                     	;# 
   995  049C                     	;# 
   996  049D                     	;# 
   997  049E                     	;# 
   998  049F                     	;# 
   999  0511                     	;# 
  1000  0515                     	;# 
  1001  0617                     	;# 
  1002  0618                     	;# 
  1003  0619                     	;# 
  1004  0619                     	;# 
  1005  061A                     	;# 
  1006  061B                     	;# 
  1007  061C                     	;# 
  1008  061C                     	;# 
  1009  0691                     	;# 
  1010  0692                     	;# 
  1011  0693                     	;# 
  1012  0694                     	;# 
  1013  0695                     	;# 
  1014  0696                     	;# 
  1015  0697                     	;# 
  1016  0698                     	;# 
  1017  0699                     	;# 
  1018  069A                     	;# 
  1019  069B                     	;# 
  1020  069C                     	;# 
  1021  069D                     	;# 
  1022  069E                     	;# 
  1023  069F                     	;# 
  1024  0E0F                     	;# 
  1025  0E10                     	;# 
  1026  0E11                     	;# 
  1027  0E12                     	;# 
  1028  0E13                     	;# 
  1029  0E14                     	;# 
  1030  0E15                     	;# 
  1031  0E17                     	;# 
  1032  0E20                     	;# 
  1033  0E21                     	;# 
  1034  0E22                     	;# 
  1035  0E24                     	;# 
  1036  0E25                     	;# 
  1037  0E28                     	;# 
  1038  0E29                     	;# 
  1039  0E2A                     	;# 
  1040  0E2B                     	;# 
  1041  0E90                     	;# 
  1042  0E91                     	;# 
  1043  0E92                     	;# 
  1044  0E93                     	;# 
  1045  0E94                     	;# 
  1046  0E95                     	;# 
  1047  0E96                     	;# 
  1048  0E97                     	;# 
  1049  0E98                     	;# 
  1050  0E99                     	;# 
  1051  0E9A                     	;# 
  1052  0E9B                     	;# 
  1053  0E9C                     	;# 
  1054  0E9D                     	;# 
  1055  0E9E                     	;# 
  1056  0E9F                     	;# 
  1057  0EA0                     	;# 
  1058  0EA1                     	;# 
  1059  0EA2                     	;# 
  1060  0EA3                     	;# 
  1061  0EA4                     	;# 
  1062  0EA5                     	;# 
  1063  0EA6                     	;# 
  1064  0EA7                     	;# 
  1065  0EA8                     	;# 
  1066  0EA9                     	;# 
  1067  0EAA                     	;# 
  1068  0EAB                     	;# 
  1069  0EAC                     	;# 
  1070  0EAD                     	;# 
  1071  0EAE                     	;# 
  1072  0EAF                     	;# 
  1073  0EB0                     	;# 
  1074  0EB1                     	;# 
  1075  0EB2                     	;# 
  1076  0F0F                     	;# 
  1077  0F10                     	;# 
  1078  0F11                     	;# 
  1079  0F12                     	;# 
  1080  0F13                     	;# 
  1081  0F14                     	;# 
  1082  0F15                     	;# 
  1083  0F16                     	;# 
  1084  0F17                     	;# 
  1085  0F18                     	;# 
  1086  0F19                     	;# 
  1087  0F1A                     	;# 
  1088  0F1B                     	;# 
  1089  0F1C                     	;# 
  1090  0F1D                     	;# 
  1091  0F1E                     	;# 
  1092  0F1F                     	;# 
  1093  0F20                     	;# 
  1094  0F21                     	;# 
  1095  0F22                     	;# 
  1096  0F23                     	;# 
  1097  0F24                     	;# 
  1098  0F25                     	;# 
  1099  0F26                     	;# 
  1100  0F27                     	;# 
  1101  0F28                     	;# 
  1102  0F29                     	;# 
  1103  0F2A                     	;# 
  1104  0F2B                     	;# 
  1105  0F2C                     	;# 
  1106  0F2D                     	;# 
  1107  0F2E                     	;# 
  1108  0F2F                     	;# 
  1109  0F30                     	;# 
  1110  0F31                     	;# 
  1111  0F32                     	;# 
  1112  0F33                     	;# 
  1113  0F34                     	;# 
  1114  0F35                     	;# 
  1115  0F36                     	;# 
  1116  0F37                     	;# 
  1117  0FE4                     	;# 
  1118  0FE5                     	;# 
  1119  0FE6                     	;# 
  1120  0FE7                     	;# 
  1121  0FE8                     	;# 
  1122  0FE9                     	;# 
  1123  0FEA                     	;# 
  1124  0FEB                     	;# 
  1125  0FED                     	;# 
  1126  0FEE                     	;# 
  1127  0FEF                     	;# 
  1128  0000                     	;# 
  1129  0001                     	;# 
  1130  0002                     	;# 
  1131  0003                     	;# 
  1132  0004                     	;# 
  1133  0005                     	;# 
  1134  0006                     	;# 
  1135  0007                     	;# 
  1136  0008                     	;# 
  1137  0009                     	;# 
  1138  000A                     	;# 
  1139  000B                     	;# 
  1140  000C                     	;# 
  1141  000D                     	;# 
  1142  000E                     	;# 
  1143  000F                     	;# 
  1144  0010                     	;# 
  1145  0011                     	;# 
  1146  0012                     	;# 
  1147  0013                     	;# 
  1148  0015                     	;# 
  1149  0016                     	;# 
  1150  0016                     	;# 
  1151  0017                     	;# 
  1152  0018                     	;# 
  1153  0019                     	;# 
  1154  001A                     	;# 
  1155  001B                     	;# 
  1156  001C                     	;# 
  1157  008C                     	;# 
  1158  008D                     	;# 
  1159  008E                     	;# 
  1160  008F                     	;# 
  1161  0090                     	;# 
  1162  0091                     	;# 
  1163  0092                     	;# 
  1164  0093                     	;# 
  1165  0095                     	;# 
  1166  0096                     	;# 
  1167  0097                     	;# 
  1168  0098                     	;# 
  1169  0099                     	;# 
  1170  009A                     	;# 
  1171  009B                     	;# 
  1172  009B                     	;# 
  1173  009C                     	;# 
  1174  009D                     	;# 
  1175  009E                     	;# 
  1176  009F                     	;# 
  1177  010C                     	;# 
  1178  010D                     	;# 
  1179  010E                     	;# 
  1180  010F                     	;# 
  1181  0110                     	;# 
  1182  0111                     	;# 
  1183  0112                     	;# 
  1184  0113                     	;# 
  1185  0114                     	;# 
  1186  0115                     	;# 
  1187  0116                     	;# 
  1188  0117                     	;# 
  1189  0118                     	;# 
  1190  0119                     	;# 
  1191  011A                     	;# 
  1192  011B                     	;# 
  1193  011B                     	;# 
  1194  011C                     	;# 
  1195  018C                     	;# 
  1196  018D                     	;# 
  1197  018E                     	;# 
  1198  018F                     	;# 
  1199  0190                     	;# 
  1200  0191                     	;# 
  1201  0191                     	;# 
  1202  0192                     	;# 
  1203  0193                     	;# 
  1204  0193                     	;# 
  1205  0194                     	;# 
  1206  0195                     	;# 
  1207  0196                     	;# 
  1208  0197                     	;# 
  1209  0199                     	;# 
  1210  0199                     	;# 
  1211  0199                     	;# 
  1212  019A                     	;# 
  1213  019A                     	;# 
  1214  019A                     	;# 
  1215  019B                     	;# 
  1216  019B                     	;# 
  1217  019B                     	;# 
  1218  019B                     	;# 
  1219  019B                     	;# 
  1220  019C                     	;# 
  1221  019C                     	;# 
  1222  019C                     	;# 
  1223  019D                     	;# 
  1224  019D                     	;# 
  1225  019D                     	;# 
  1226  019E                     	;# 
  1227  019E                     	;# 
  1228  019E                     	;# 
  1229  019F                     	;# 
  1230  019F                     	;# 
  1231  019F                     	;# 
  1232  019F                     	;# 
  1233  019F                     	;# 
  1234  020C                     	;# 
  1235  020D                     	;# 
  1236  020E                     	;# 
  1237  020F                     	;# 
  1238  0210                     	;# 
  1239  0211                     	;# 
  1240  0211                     	;# 
  1241  0212                     	;# 
  1242  0212                     	;# 
  1243  0213                     	;# 
  1244  0213                     	;# 
  1245  0214                     	;# 
  1246  0214                     	;# 
  1247  0215                     	;# 
  1248  0215                     	;# 
  1249  0215                     	;# 
  1250  0215                     	;# 
  1251  0216                     	;# 
  1252  0216                     	;# 
  1253  0217                     	;# 
  1254  0217                     	;# 
  1255  028C                     	;# 
  1256  028D                     	;# 
  1257  028E                     	;# 
  1258  028F                     	;# 
  1259  0290                     	;# 
  1260  0291                     	;# 
  1261  0291                     	;# 
  1262  0292                     	;# 
  1263  0293                     	;# 
  1264  0293                     	;# 
  1265  0298                     	;# 
  1266  0298                     	;# 
  1267  0299                     	;# 
  1268  029A                     	;# 
  1269  029A                     	;# 
  1270  029E                     	;# 
  1271  030C                     	;# 
  1272  030D                     	;# 
  1273  030E                     	;# 
  1274  030F                     	;# 
  1275  0310                     	;# 
  1276  038C                     	;# 
  1277  038D                     	;# 
  1278  038E                     	;# 
  1279  038F                     	;# 
  1280  0390                     	;# 
  1281  0391                     	;# 
  1282  0392                     	;# 
  1283  0393                     	;# 
  1284  0394                     	;# 
  1285  0395                     	;# 
  1286  0396                     	;# 
  1287  0397                     	;# 
  1288  0398                     	;# 
  1289  0399                     	;# 
  1290  039D                     	;# 
  1291  039E                     	;# 
  1292  039F                     	;# 
  1293  0415                     	;# 
  1294  0416                     	;# 
  1295  0417                     	;# 
  1296  041C                     	;# 
  1297  041D                     	;# 
  1298  041E                     	;# 
  1299  0498                     	;# 
  1300  0498                     	;# 
  1301  0499                     	;# 
  1302  049A                     	;# 
  1303  049B                     	;# 
  1304  049B                     	;# 
  1305  049C                     	;# 
  1306  049D                     	;# 
  1307  049E                     	;# 
  1308  049F                     	;# 
  1309  0511                     	;# 
  1310  0515                     	;# 
  1311  0617                     	;# 
  1312  0618                     	;# 
  1313  0619                     	;# 
  1314  0619                     	;# 
  1315  061A                     	;# 
  1316  061B                     	;# 
  1317  061C                     	;# 
  1318  061C                     	;# 
  1319  0691                     	;# 
  1320  0692                     	;# 
  1321  0693                     	;# 
  1322  0694                     	;# 
  1323  0695                     	;# 
  1324  0696                     	;# 
  1325  0697                     	;# 
  1326  0698                     	;# 
  1327  0699                     	;# 
  1328  069A                     	;# 
  1329  069B                     	;# 
  1330  069C                     	;# 
  1331  069D                     	;# 
  1332  069E                     	;# 
  1333  069F                     	;# 
  1334  0E0F                     	;# 
  1335  0E10                     	;# 
  1336  0E11                     	;# 
  1337  0E12                     	;# 
  1338  0E13                     	;# 
  1339  0E14                     	;# 
  1340  0E15                     	;# 
  1341  0E17                     	;# 
  1342  0E20                     	;# 
  1343  0E21                     	;# 
  1344  0E22                     	;# 
  1345  0E24                     	;# 
  1346  0E25                     	;# 
  1347  0E28                     	;# 
  1348  0E29                     	;# 
  1349  0E2A                     	;# 
  1350  0E2B                     	;# 
  1351  0E90                     	;# 
  1352  0E91                     	;# 
  1353  0E92                     	;# 
  1354  0E93                     	;# 
  1355  0E94                     	;# 
  1356  0E95                     	;# 
  1357  0E96                     	;# 
  1358  0E97                     	;# 
  1359  0E98                     	;# 
  1360  0E99                     	;# 
  1361  0E9A                     	;# 
  1362  0E9B                     	;# 
  1363  0E9C                     	;# 
  1364  0E9D                     	;# 
  1365  0E9E                     	;# 
  1366  0E9F                     	;# 
  1367  0EA0                     	;# 
  1368  0EA1                     	;# 
  1369  0EA2                     	;# 
  1370  0EA3                     	;# 
  1371  0EA4                     	;# 
  1372  0EA5                     	;# 
  1373  0EA6                     	;# 
  1374  0EA7                     	;# 
  1375  0EA8                     	;# 
  1376  0EA9                     	;# 
  1377  0EAA                     	;# 
  1378  0EAB                     	;# 
  1379  0EAC                     	;# 
  1380  0EAD                     	;# 
  1381  0EAE                     	;# 
  1382  0EAF                     	;# 
  1383  0EB0                     	;# 
  1384  0EB1                     	;# 
  1385  0EB2                     	;# 
  1386  0F0F                     	;# 
  1387  0F10                     	;# 
  1388  0F11                     	;# 
  1389  0F12                     	;# 
  1390  0F13                     	;# 
  1391  0F14                     	;# 
  1392  0F15                     	;# 
  1393  0F16                     	;# 
  1394  0F17                     	;# 
  1395  0F18                     	;# 
  1396  0F19                     	;# 
  1397  0F1A                     	;# 
  1398  0F1B                     	;# 
  1399  0F1C                     	;# 
  1400  0F1D                     	;# 
  1401  0F1E                     	;# 
  1402  0F1F                     	;# 
  1403  0F20                     	;# 
  1404  0F21                     	;# 
  1405  0F22                     	;# 
  1406  0F23                     	;# 
  1407  0F24                     	;# 
  1408  0F25                     	;# 
  1409  0F26                     	;# 
  1410  0F27                     	;# 
  1411  0F28                     	;# 
  1412  0F29                     	;# 
  1413  0F2A                     	;# 
  1414  0F2B                     	;# 
  1415  0F2C                     	;# 
  1416  0F2D                     	;# 
  1417  0F2E                     	;# 
  1418  0F2F                     	;# 
  1419  0F30                     	;# 
  1420  0F31                     	;# 
  1421  0F32                     	;# 
  1422  0F33                     	;# 
  1423  0F34                     	;# 
  1424  0F35                     	;# 
  1425  0F36                     	;# 
  1426  0F37                     	;# 
  1427  0FE4                     	;# 
  1428  0FE5                     	;# 
  1429  0FE6                     	;# 
  1430  0FE7                     	;# 
  1431  0FE8                     	;# 
  1432  0FE9                     	;# 
  1433  0FEA                     	;# 
  1434  0FEB                     	;# 
  1435  0FED                     	;# 
  1436  0FEE                     	;# 
  1437  0FEF                     	;# 
  1438  0000                     	;# 
  1439  0001                     	;# 
  1440  0002                     	;# 
  1441  0003                     	;# 
  1442  0004                     	;# 
  1443  0005                     	;# 
  1444  0006                     	;# 
  1445  0007                     	;# 
  1446  0008                     	;# 
  1447  0009                     	;# 
  1448  000A                     	;# 
  1449  000B                     	;# 
  1450  000C                     	;# 
  1451  000D                     	;# 
  1452  000E                     	;# 
  1453  000F                     	;# 
  1454  0010                     	;# 
  1455  0011                     	;# 
  1456  0012                     	;# 
  1457  0013                     	;# 
  1458  0015                     	;# 
  1459  0016                     	;# 
  1460  0016                     	;# 
  1461  0017                     	;# 
  1462  0018                     	;# 
  1463  0019                     	;# 
  1464  001A                     	;# 
  1465  001B                     	;# 
  1466  001C                     	;# 
  1467  008C                     	;# 
  1468  008D                     	;# 
  1469  008E                     	;# 
  1470  008F                     	;# 
  1471  0090                     	;# 
  1472  0091                     	;# 
  1473  0092                     	;# 
  1474  0093                     	;# 
  1475  0095                     	;# 
  1476  0096                     	;# 
  1477  0097                     	;# 
  1478  0098                     	;# 
  1479  0099                     	;# 
  1480  009A                     	;# 
  1481  009B                     	;# 
  1482  009B                     	;# 
  1483  009C                     	;# 
  1484  009D                     	;# 
  1485  009E                     	;# 
  1486  009F                     	;# 
  1487  010C                     	;# 
  1488  010D                     	;# 
  1489  010E                     	;# 
  1490  010F                     	;# 
  1491  0110                     	;# 
  1492  0111                     	;# 
  1493  0112                     	;# 
  1494  0113                     	;# 
  1495  0114                     	;# 
  1496  0115                     	;# 
  1497  0116                     	;# 
  1498  0117                     	;# 
  1499  0118                     	;# 
  1500  0119                     	;# 
  1501  011A                     	;# 
  1502  011B                     	;# 
  1503  011B                     	;# 
  1504  011C                     	;# 
  1505  018C                     	;# 
  1506  018D                     	;# 
  1507  018E                     	;# 
  1508  018F                     	;# 
  1509  0190                     	;# 
  1510  0191                     	;# 
  1511  0191                     	;# 
  1512  0192                     	;# 
  1513  0193                     	;# 
  1514  0193                     	;# 
  1515  0194                     	;# 
  1516  0195                     	;# 
  1517  0196                     	;# 
  1518  0197                     	;# 
  1519  0199                     	;# 
  1520  0199                     	;# 
  1521  0199                     	;# 
  1522  019A                     	;# 
  1523  019A                     	;# 
  1524  019A                     	;# 
  1525  019B                     	;# 
  1526  019B                     	;# 
  1527  019B                     	;# 
  1528  019B                     	;# 
  1529  019B                     	;# 
  1530  019C                     	;# 
  1531  019C                     	;# 
  1532  019C                     	;# 
  1533  019D                     	;# 
  1534  019D                     	;# 
  1535  019D                     	;# 
  1536  019E                     	;# 
  1537  019E                     	;# 
  1538  019E                     	;# 
  1539  019F                     	;# 
  1540  019F                     	;# 
  1541  019F                     	;# 
  1542  019F                     	;# 
  1543  019F                     	;# 
  1544  020C                     	;# 
  1545  020D                     	;# 
  1546  020E                     	;# 
  1547  020F                     	;# 
  1548  0210                     	;# 
  1549  0211                     	;# 
  1550  0211                     	;# 
  1551  0212                     	;# 
  1552  0212                     	;# 
  1553  0213                     	;# 
  1554  0213                     	;# 
  1555  0214                     	;# 
  1556  0214                     	;# 
  1557  0215                     	;# 
  1558  0215                     	;# 
  1559  0215                     	;# 
  1560  0215                     	;# 
  1561  0216                     	;# 
  1562  0216                     	;# 
  1563  0217                     	;# 
  1564  0217                     	;# 
  1565  028C                     	;# 
  1566  028D                     	;# 
  1567  028E                     	;# 
  1568  028F                     	;# 
  1569  0290                     	;# 
  1570  0291                     	;# 
  1571  0291                     	;# 
  1572  0292                     	;# 
  1573  0293                     	;# 
  1574  0293                     	;# 
  1575  0298                     	;# 
  1576  0298                     	;# 
  1577  0299                     	;# 
  1578  029A                     	;# 
  1579  029A                     	;# 
  1580  029E                     	;# 
  1581  030C                     	;# 
  1582  030D                     	;# 
  1583  030E                     	;# 
  1584  030F                     	;# 
  1585  0310                     	;# 
  1586  038C                     	;# 
  1587  038D                     	;# 
  1588  038E                     	;# 
  1589  038F                     	;# 
  1590  0390                     	;# 
  1591  0391                     	;# 
  1592  0392                     	;# 
  1593  0393                     	;# 
  1594  0394                     	;# 
  1595  0395                     	;# 
  1596  0396                     	;# 
  1597  0397                     	;# 
  1598  0398                     	;# 
  1599  0399                     	;# 
  1600  039D                     	;# 
  1601  039E                     	;# 
  1602  039F                     	;# 
  1603  0415                     	;# 
  1604  0416                     	;# 
  1605  0417                     	;# 
  1606  041C                     	;# 
  1607  041D                     	;# 
  1608  041E                     	;# 
  1609  0498                     	;# 
  1610  0498                     	;# 
  1611  0499                     	;# 
  1612  049A                     	;# 
  1613  049B                     	;# 
  1614  049B                     	;# 
  1615  049C                     	;# 
  1616  049D                     	;# 
  1617  049E                     	;# 
  1618  049F                     	;# 
  1619  0511                     	;# 
  1620  0515                     	;# 
  1621  0617                     	;# 
  1622  0618                     	;# 
  1623  0619                     	;# 
  1624  0619                     	;# 
  1625  061A                     	;# 
  1626  061B                     	;# 
  1627  061C                     	;# 
  1628  061C                     	;# 
  1629  0691                     	;# 
  1630  0692                     	;# 
  1631  0693                     	;# 
  1632  0694                     	;# 
  1633  0695                     	;# 
  1634  0696                     	;# 
  1635  0697                     	;# 
  1636  0698                     	;# 
  1637  0699                     	;# 
  1638  069A                     	;# 
  1639  069B                     	;# 
  1640  069C                     	;# 
  1641  069D                     	;# 
  1642  069E                     	;# 
  1643  069F                     	;# 
  1644  0E0F                     	;# 
  1645  0E10                     	;# 
  1646  0E11                     	;# 
  1647  0E12                     	;# 
  1648  0E13                     	;# 
  1649  0E14                     	;# 
  1650  0E15                     	;# 
  1651  0E17                     	;# 
  1652  0E20                     	;# 
  1653  0E21                     	;# 
  1654  0E22                     	;# 
  1655  0E24                     	;# 
  1656  0E25                     	;# 
  1657  0E28                     	;# 
  1658  0E29                     	;# 
  1659  0E2A                     	;# 
  1660  0E2B                     	;# 
  1661  0E90                     	;# 
  1662  0E91                     	;# 
  1663  0E92                     	;# 
  1664  0E93                     	;# 
  1665  0E94                     	;# 
  1666  0E95                     	;# 
  1667  0E96                     	;# 
  1668  0E97                     	;# 
  1669  0E98                     	;# 
  1670  0E99                     	;# 
  1671  0E9A                     	;# 
  1672  0E9B                     	;# 
  1673  0E9C                     	;# 
  1674  0E9D                     	;# 
  1675  0E9E                     	;# 
  1676  0E9F                     	;# 
  1677  0EA0                     	;# 
  1678  0EA1                     	;# 
  1679  0EA2                     	;# 
  1680  0EA3                     	;# 
  1681  0EA4                     	;# 
  1682  0EA5                     	;# 
  1683  0EA6                     	;# 
  1684  0EA7                     	;# 
  1685  0EA8                     	;# 
  1686  0EA9                     	;# 
  1687  0EAA                     	;# 
  1688  0EAB                     	;# 
  1689  0EAC                     	;# 
  1690  0EAD                     	;# 
  1691  0EAE                     	;# 
  1692  0EAF                     	;# 
  1693  0EB0                     	;# 
  1694  0EB1                     	;# 
  1695  0EB2                     	;# 
  1696  0F0F                     	;# 
  1697  0F10                     	;# 
  1698  0F11                     	;# 
  1699  0F12                     	;# 
  1700  0F13                     	;# 
  1701  0F14                     	;# 
  1702  0F15                     	;# 
  1703  0F16                     	;# 
  1704  0F17                     	;# 
  1705  0F18                     	;# 
  1706  0F19                     	;# 
  1707  0F1A                     	;# 
  1708  0F1B                     	;# 
  1709  0F1C                     	;# 
  1710  0F1D                     	;# 
  1711  0F1E                     	;# 
  1712  0F1F                     	;# 
  1713  0F20                     	;# 
  1714  0F21                     	;# 
  1715  0F22                     	;# 
  1716  0F23                     	;# 
  1717  0F24                     	;# 
  1718  0F25                     	;# 
  1719  0F26                     	;# 
  1720  0F27                     	;# 
  1721  0F28                     	;# 
  1722  0F29                     	;# 
  1723  0F2A                     	;# 
  1724  0F2B                     	;# 
  1725  0F2C                     	;# 
  1726  0F2D                     	;# 
  1727  0F2E                     	;# 
  1728  0F2F                     	;# 
  1729  0F30                     	;# 
  1730  0F31                     	;# 
  1731  0F32                     	;# 
  1732  0F33                     	;# 
  1733  0F34                     	;# 
  1734  0F35                     	;# 
  1735  0F36                     	;# 
  1736  0F37                     	;# 
  1737  0FE4                     	;# 
  1738  0FE5                     	;# 
  1739  0FE6                     	;# 
  1740  0FE7                     	;# 
  1741  0FE8                     	;# 
  1742  0FE9                     	;# 
  1743  0FEA                     	;# 
  1744  0FEB                     	;# 
  1745  0FED                     	;# 
  1746  0FEE                     	;# 
  1747  0FEF                     	;# 
  1748  0000                     	;# 
  1749  0001                     	;# 
  1750  0002                     	;# 
  1751  0003                     	;# 
  1752  0004                     	;# 
  1753  0005                     	;# 
  1754  0006                     	;# 
  1755  0007                     	;# 
  1756  0008                     	;# 
  1757  0009                     	;# 
  1758  000A                     	;# 
  1759  000B                     	;# 
  1760  000C                     	;# 
  1761  000D                     	;# 
  1762  000E                     	;# 
  1763  000F                     	;# 
  1764  0010                     	;# 
  1765  0011                     	;# 
  1766  0012                     	;# 
  1767  0013                     	;# 
  1768  0015                     	;# 
  1769  0016                     	;# 
  1770  0016                     	;# 
  1771  0017                     	;# 
  1772  0018                     	;# 
  1773  0019                     	;# 
  1774  001A                     	;# 
  1775  001B                     	;# 
  1776  001C                     	;# 
  1777  008C                     	;# 
  1778  008D                     	;# 
  1779  008E                     	;# 
  1780  008F                     	;# 
  1781  0090                     	;# 
  1782  0091                     	;# 
  1783  0092                     	;# 
  1784  0093                     	;# 
  1785  0095                     	;# 
  1786  0096                     	;# 
  1787  0097                     	;# 
  1788  0098                     	;# 
  1789  0099                     	;# 
  1790  009A                     	;# 
  1791  009B                     	;# 
  1792  009B                     	;# 
  1793  009C                     	;# 
  1794  009D                     	;# 
  1795  009E                     	;# 
  1796  009F                     	;# 
  1797  010C                     	;# 
  1798  010D                     	;# 
  1799  010E                     	;# 
  1800  010F                     	;# 
  1801  0110                     	;# 
  1802  0111                     	;# 
  1803  0112                     	;# 
  1804  0113                     	;# 
  1805  0114                     	;# 
  1806  0115                     	;# 
  1807  0116                     	;# 
  1808  0117                     	;# 
  1809  0118                     	;# 
  1810  0119                     	;# 
  1811  011A                     	;# 
  1812  011B                     	;# 
  1813  011B                     	;# 
  1814  011C                     	;# 
  1815  018C                     	;# 
  1816  018D                     	;# 
  1817  018E                     	;# 
  1818  018F                     	;# 
  1819  0190                     	;# 
  1820  0191                     	;# 
  1821  0191                     	;# 
  1822  0192                     	;# 
  1823  0193                     	;# 
  1824  0193                     	;# 
  1825  0194                     	;# 
  1826  0195                     	;# 
  1827  0196                     	;# 
  1828  0197                     	;# 
  1829  0199                     	;# 
  1830  0199                     	;# 
  1831  0199                     	;# 
  1832  019A                     	;# 
  1833  019A                     	;# 
  1834  019A                     	;# 
  1835  019B                     	;# 
  1836  019B                     	;# 
  1837  019B                     	;# 
  1838  019B                     	;# 
  1839  019B                     	;# 
  1840  019C                     	;# 
  1841  019C                     	;# 
  1842  019C                     	;# 
  1843  019D                     	;# 
  1844  019D                     	;# 
  1845  019D                     	;# 
  1846  019E                     	;# 
  1847  019E                     	;# 
  1848  019E                     	;# 
  1849  019F                     	;# 
  1850  019F                     	;# 
  1851  019F                     	;# 
  1852  019F                     	;# 
  1853  019F                     	;# 
  1854  020C                     	;# 
  1855  020D                     	;# 
  1856  020E                     	;# 
  1857  020F                     	;# 
  1858  0210                     	;# 
  1859  0211                     	;# 
  1860  0211                     	;# 
  1861  0212                     	;# 
  1862  0212                     	;# 
  1863  0213                     	;# 
  1864  0213                     	;# 
  1865  0214                     	;# 
  1866  0214                     	;# 
  1867  0215                     	;# 
  1868  0215                     	;# 
  1869  0215                     	;# 
  1870  0215                     	;# 
  1871  0216                     	;# 
  1872  0216                     	;# 
  1873  0217                     	;# 
  1874  0217                     	;# 
  1875  028C                     	;# 
  1876  028D                     	;# 
  1877  028E                     	;# 
  1878  028F                     	;# 
  1879  0290                     	;# 
  1880  0291                     	;# 
  1881  0291                     	;# 
  1882  0292                     	;# 
  1883  0293                     	;# 
  1884  0293                     	;# 
  1885  0298                     	;# 
  1886  0298                     	;# 
  1887  0299                     	;# 
  1888  029A                     	;# 
  1889  029A                     	;# 
  1890  029E                     	;# 
  1891  030C                     	;# 
  1892  030D                     	;# 
  1893  030E                     	;# 
  1894  030F                     	;# 
  1895  0310                     	;# 
  1896  038C                     	;# 
  1897  038D                     	;# 
  1898  038E                     	;# 
  1899  038F                     	;# 
  1900  0390                     	;# 
  1901  0391                     	;# 
  1902  0392                     	;# 
  1903  0393                     	;# 
  1904  0394                     	;# 
  1905  0395                     	;# 
  1906  0396                     	;# 
  1907  0397                     	;# 
  1908  0398                     	;# 
  1909  0399                     	;# 
  1910  039D                     	;# 
  1911  039E                     	;# 
  1912  039F                     	;# 
  1913  0415                     	;# 
  1914  0416                     	;# 
  1915  0417                     	;# 
  1916  041C                     	;# 
  1917  041D                     	;# 
  1918  041E                     	;# 
  1919  0498                     	;# 
  1920  0498                     	;# 
  1921  0499                     	;# 
  1922  049A                     	;# 
  1923  049B                     	;# 
  1924  049B                     	;# 
  1925  049C                     	;# 
  1926  049D                     	;# 
  1927  049E                     	;# 
  1928  049F                     	;# 
  1929  0511                     	;# 
  1930  0515                     	;# 
  1931  0617                     	;# 
  1932  0618                     	;# 
  1933  0619                     	;# 
  1934  0619                     	;# 
  1935  061A                     	;# 
  1936  061B                     	;# 
  1937  061C                     	;# 
  1938  061C                     	;# 
  1939  0691                     	;# 
  1940  0692                     	;# 
  1941  0693                     	;# 
  1942  0694                     	;# 
  1943  0695                     	;# 
  1944  0696                     	;# 
  1945  0697                     	;# 
  1946  0698                     	;# 
  1947  0699                     	;# 
  1948  069A                     	;# 
  1949  069B                     	;# 
  1950  069C                     	;# 
  1951  069D                     	;# 
  1952  069E                     	;# 
  1953  069F                     	;# 
  1954  0E0F                     	;# 
  1955  0E10                     	;# 
  1956  0E11                     	;# 
  1957  0E12                     	;# 
  1958  0E13                     	;# 
  1959  0E14                     	;# 
  1960  0E15                     	;# 
  1961  0E17                     	;# 
  1962  0E20                     	;# 
  1963  0E21                     	;# 
  1964  0E22                     	;# 
  1965  0E24                     	;# 
  1966  0E25                     	;# 
  1967  0E28                     	;# 
  1968  0E29                     	;# 
  1969  0E2A                     	;# 
  1970  0E2B                     	;# 
  1971  0E90                     	;# 
  1972  0E91                     	;# 
  1973  0E92                     	;# 
  1974  0E93                     	;# 
  1975  0E94                     	;# 
  1976  0E95                     	;# 
  1977  0E96                     	;# 
  1978  0E97                     	;# 
  1979  0E98                     	;# 
  1980  0E99                     	;# 
  1981  0E9A                     	;# 
  1982  0E9B                     	;# 
  1983  0E9C                     	;# 
  1984  0E9D                     	;# 
  1985  0E9E                     	;# 
  1986  0E9F                     	;# 
  1987  0EA0                     	;# 
  1988  0EA1                     	;# 
  1989  0EA2                     	;# 
  1990  0EA3                     	;# 
  1991  0EA4                     	;# 
  1992  0EA5                     	;# 
  1993  0EA6                     	;# 
  1994  0EA7                     	;# 
  1995  0EA8                     	;# 
  1996  0EA9                     	;# 
  1997  0EAA                     	;# 
  1998  0EAB                     	;# 
  1999  0EAC                     	;# 
  2000  0EAD                     	;# 
  2001  0EAE                     	;# 
  2002  0EAF                     	;# 
  2003  0EB0                     	;# 
  2004  0EB1                     	;# 
  2005  0EB2                     	;# 
  2006  0F0F                     	;# 
  2007  0F10                     	;# 
  2008  0F11                     	;# 
  2009  0F12                     	;# 
  2010  0F13                     	;# 
  2011  0F14                     	;# 
  2012  0F15                     	;# 
  2013  0F16                     	;# 
  2014  0F17                     	;# 
  2015  0F18                     	;# 
  2016  0F19                     	;# 
  2017  0F1A                     	;# 
  2018  0F1B                     	;# 
  2019  0F1C                     	;# 
  2020  0F1D                     	;# 
  2021  0F1E                     	;# 
  2022  0F1F                     	;# 
  2023  0F20                     	;# 
  2024  0F21                     	;# 
  2025  0F22                     	;# 
  2026  0F23                     	;# 
  2027  0F24                     	;# 
  2028  0F25                     	;# 
  2029  0F26                     	;# 
  2030  0F27                     	;# 
  2031  0F28                     	;# 
  2032  0F29                     	;# 
  2033  0F2A                     	;# 
  2034  0F2B                     	;# 
  2035  0F2C                     	;# 
  2036  0F2D                     	;# 
  2037  0F2E                     	;# 
  2038  0F2F                     	;# 
  2039  0F30                     	;# 
  2040  0F31                     	;# 
  2041  0F32                     	;# 
  2042  0F33                     	;# 
  2043  0F34                     	;# 
  2044  0F35                     	;# 
  2045  0F36                     	;# 
  2046  0F37                     	;# 
  2047  0FE4                     	;# 
  2048  0FE5                     	;# 
  2049  0FE6                     	;# 
  2050  0FE7                     	;# 
  2051  0FE8                     	;# 
  2052  0FE9                     	;# 
  2053  0FEA                     	;# 
  2054  0FEB                     	;# 
  2055  0FED                     	;# 
  2056  0FEE                     	;# 
  2057  0FEF                     	;_messageBuffer
  2058                           
  2059                           	psect	idataBANK3
  2060  32CC                     __pidataBANK3:	
  2061                           
  2062                           ;initializer for stoa@F1174
  2063  32CC  3428               	retlw	40
  2064  32CD  346E               	retlw	110
  2065  32CE  3475               	retlw	117
  2066  32CF  346C               	retlw	108
  2067  32D0  346C               	retlw	108
  2068  32D1  3429               	retlw	41
  2069  32D2  3400               	retlw	0
  2070                           
  2071                           	psect	stringtext1
  2072  39C8                     __pstringtext1:	
  2073  39C8                     _OCD_threshold_setting:	
  2074  39C8  3411               	retlw	17
  2075  39C9  3400               	retlw	0
  2076  39CA  3416               	retlw	22
  2077  39CB  3400               	retlw	0
  2078  39CC  341C               	retlw	28
  2079  39CD  3400               	retlw	0
  2080  39CE  3421               	retlw	33
  2081  39CF  3400               	retlw	0
  2082  39D0  3427               	retlw	39
  2083  39D1  3400               	retlw	0
  2084  39D2  342C               	retlw	44
  2085  39D3  3400               	retlw	0
  2086  39D4  3432               	retlw	50
  2087  39D5  3400               	retlw	0
  2088  39D6  3438               	retlw	56
  2089  39D7  3400               	retlw	0
  2090  39D8  343D               	retlw	61
  2091  39D9  3400               	retlw	0
  2092  39DA  3443               	retlw	67
  2093  39DB  3400               	retlw	0
  2094  39DC  3448               	retlw	72
  2095  39DD  3400               	retlw	0
  2096  39DE  344E               	retlw	78
  2097  39DF  3400               	retlw	0
  2098  39E0  3453               	retlw	83
  2099  39E1  3400               	retlw	0
  2100  39E2  3459               	retlw	89
  2101  39E3  3400               	retlw	0
  2102  39E4  345E               	retlw	94
  2103  39E5  3400               	retlw	0
  2104  39E6  3464               	retlw	100
  2105  39E7  3400               	retlw	0
  2106  39E8                     __end_of_OCD_threshold_setting:	
  2107                           
  2108                           	psect	stringtext2
  2109  3ADC                     __pstringtext2:	
  2110  3ADC                     _OCD_delay_setting:	
  2111  3ADC  3408               	retlw	8
  2112  3ADD  3400               	retlw	0
  2113  3ADE  3414               	retlw	20
  2114  3ADF  3400               	retlw	0
  2115  3AE0  3428               	retlw	40
  2116  3AE1  3400               	retlw	0
  2117  3AE2  3450               	retlw	80
  2118  3AE3  3400               	retlw	0
  2119  3AE4  34A0               	retlw	160
  2120  3AE5  3400               	retlw	0
  2121  3AE6  3440               	retlw	64
  2122  3AE7  3401               	retlw	1
  2123  3AE8  3480               	retlw	128
  2124  3AE9  3402               	retlw	2
  2125  3AEA  3400               	retlw	0
  2126  3AEB  3405               	retlw	5
  2127  3AEC                     __end_of_OCD_delay_setting:	
  2128                           
  2129                           	psect	stringtext3
  2130  3AEC                     __pstringtext3:	
  2131  3AEC                     _SCD_threshold_setting:	
  2132  3AEC  342C               	retlw	44
  2133  3AED  3400               	retlw	0
  2134  3AEE  3443               	retlw	67
  2135  3AEF  3400               	retlw	0
  2136  3AF0  3459               	retlw	89
  2137  3AF1  3400               	retlw	0
  2138  3AF2  346F               	retlw	111
  2139  3AF3  3400               	retlw	0
  2140  3AF4  3485               	retlw	133
  2141  3AF5  3400               	retlw	0
  2142  3AF6  349B               	retlw	155
  2143  3AF7  3400               	retlw	0
  2144  3AF8  34B2               	retlw	178
  2145  3AF9  3400               	retlw	0
  2146  3AFA  34C8               	retlw	200
  2147  3AFB  3400               	retlw	0
  2148  3AFC                     __end_of_SCD_threshold_setting:	
  2149                           
  2150                           	psect	stringtext4
  2151  3AFC                     __pstringtext4:	
  2152  3AFC                     _OV_delay_setting:	
  2153  3AFC  3401               	retlw	1
  2154  3AFD  3400               	retlw	0
  2155  3AFE  3402               	retlw	2
  2156  3AFF  3400               	retlw	0
  2157  3B00  3404               	retlw	4
  2158  3B01  3400               	retlw	0
  2159  3B02  3408               	retlw	8
  2160  3B03  3400               	retlw	0
  2161  3B04                     __end_of_OV_delay_setting:	
  2162                           
  2163                           	psect	stringtext5
  2164  3B04                     __pstringtext5:	
  2165  3B04                     _UV_delay_setting:	
  2166  3B04  3401               	retlw	1
  2167  3B05  3400               	retlw	0
  2168  3B06  3404               	retlw	4
  2169  3B07  3400               	retlw	0
  2170  3B08  3408               	retlw	8
  2171  3B09  3400               	retlw	0
  2172  3B0A  3410               	retlw	16
  2173  3B0B  3400               	retlw	0
  2174  3B0C                     __end_of_UV_delay_setting:	
  2175                           
  2176                           	psect	stringtext6
  2177  3B0C                     __pstringtext6:	
  2178  3B0C                     _SCD_delay_setting:	
  2179  3B0C  3446               	retlw	70
  2180  3B0D  3400               	retlw	0
  2181  3B0E  3464               	retlw	100
  2182  3B0F  3400               	retlw	0
  2183  3B10  34C8               	retlw	200
  2184  3B11  3400               	retlw	0
  2185  3B12  3490               	retlw	144
  2186  3B13  3401               	retlw	1
  2187  3B14                     __end_of_SCD_delay_setting:	
  2188                           
  2189                           	psect	stringtext7
  2190  3800                     __pstringtext7:	
  2191  3800                     _ATmega328_address:	
  2192  3800  3402               	retlw	2
  2193  3801  3400               	retlw	0
  2194  3802                     __end_of_ATmega328_address:	
  2195  0016                     _TMR1	set	22
  2196  000B                     _INTCONbits	set	11
  2197  0018                     _T1CONbits	set	24
  2198  0011                     _PIR1bits	set	17
  2199  0090                     _TRISEbits	set	144
  2200  008C                     _TRISAbits	set	140
  2201  008E                     _TRISCbits	set	142
  2202  008D                     _TRISBbits	set	141
  2203  0091                     _PIE1bits	set	145
  2204  0476                     _TRISC6	set	1142
  2205  0477                     _TRISC7	set	1143
  2206  04CF                     _SPLLEN	set	1231
  2207  04CE                     _IRCF3	set	1230
  2208  04CD                     _IRCF2	set	1229
  2209  04CC                     _IRCF1	set	1228
  2210  04CB                     _IRCF0	set	1227
  2211  04C9                     _SCS1	set	1225
  2212  04C8                     _SCS0	set	1224
  2213  0110                     _LATEbits	set	272
  2214  010C                     _LATAbits	set	268
  2215  019A                     _TX1REG	set	410
  2216  0199                     _RC1REG	set	409
  2217  019D                     _RC1STAbits	set	413
  2218  019B                     _SPBRG	set	411
  2219  018E                     _ANSELCbits	set	398
  2220  018D                     _ANSELBbits	set	397
  2221  0CF5                     _TXEN	set	3317
  2222  0CEC                     _CREN	set	3308
  2223  0CEF                     _SPEN	set	3311
  2224  0CF4                     _SYNC	set	3316
  2225  0CF2                     _BRGH	set	3314
  2226  0216                     _SSPCON2bits	set	534
  2227  0211                     _SSPBUF	set	529
  2228  0212                     _SSPADD	set	530
  2229  0215                     _SSPCONbits	set	533
  2230  0E24                     _RXPPSbits	set	3620
  2231  0E20                     _SSPCLKPPSbits	set	3616
  2232  0E21                     _SSPDATPPSbits	set	3617
  2233  0E0F                     _PPSLOCKbits	set	3599
  2234  0E0F                     _PPSLOCK	set	3599
  2235  0E9A                     _RB2PPSbits	set	3738
  2236  0EA5                     _RC5PPSbits	set	3749
  2237  0EA4                     _RC4PPSbits	set	3748
  2238  3802                     STR_8:	
  2239  3802  3453               	retlw	83	;'S'
  2240  3803  3465               	retlw	101	;'e'
  2241  3804  3474               	retlw	116	;'t'
  2242  3805  3420               	retlw	32	;' '
  2243  3806  344F               	retlw	79	;'O'
  2244  3807  3476               	retlw	118	;'v'
  2245  3808  3465               	retlw	101	;'e'
  2246  3809  3472               	retlw	114	;'r'
  2247  380A  342D               	retlw	45	;'-'
  2248  380B  3463               	retlw	99	;'c'
  2249  380C  3475               	retlw	117	;'u'
  2250  380D  3472               	retlw	114	;'r'
  2251  380E  3472               	retlw	114	;'r'
  2252  380F  3465               	retlw	101	;'e'
  2253  3810  346E               	retlw	110	;'n'
  2254  3811  3474               	retlw	116	;'t'
  2255  3812  3420               	retlw	32	;' '
  2256  3813  3464               	retlw	100	;'d'
  2257  3814  3469               	retlw	105	;'i'
  2258  3815  3473               	retlw	115	;'s'
  2259  3816  3463               	retlw	99	;'c'
  2260  3817  3468               	retlw	104	;'h'
  2261  3818  3461               	retlw	97	;'a'
  2262  3819  3472               	retlw	114	;'r'
  2263  381A  3467               	retlw	103	;'g'
  2264  381B  3465               	retlw	101	;'e'
  2265  381C  3420               	retlw	32	;' '
  2266  381D  3470               	retlw	112	;'p'
  2267  381E  3472               	retlw	114	;'r'
  2268  381F  346F               	retlw	111	;'o'
  2269  3820  3474               	retlw	116	;'t'
  2270  3821  3465               	retlw	101	;'e'
  2271  3822  3463               	retlw	99	;'c'
  2272  3823  3474               	retlw	116	;'t'
  2273  3824  3469               	retlw	105	;'i'
  2274  3825  346F               	retlw	111	;'o'
  2275  3826  346E               	retlw	110	;'n'
  2276  3827  3420               	retlw	32	;' '
  2277  3828  3420               	retlw	32	;' '
  2278  3829  3466               	retlw	102	;'f'
  2279  382A  346F               	retlw	111	;'o'
  2280  382B  3472               	retlw	114	;'r'
  2281  382C  3420               	retlw	32	;' '
  2282  382D  3441               	retlw	65	;'A'
  2283  382E  3446               	retlw	70	;'F'
  2284  382F  3445               	retlw	69	;'E'
  2285  3830  343A               	retlw	58	;':'
  2286  3831  3420               	retlw	32	;' '
  2287  3832  3425               	retlw	37	;'%'
  2288  3833  346C               	retlw	108	;'l'
  2289  3834  3475               	retlw	117	;'u'
  2290  3835  3420               	retlw	32	;' '
  2291  3836  346D               	retlw	109	;'m'
  2292  3837  3441               	retlw	65	;'A'
  2293  3838  340A               	retlw	10
  2294  3839  340D               	retlw	13
  2295  383A  3400               	retlw	0
  2296                           
  2297                           	psect	stringtext8
  2298  383B                     __pstringtext8:	
  2299  383B                     STR_4:	
  2300  383B  3441               	retlw	65	;'A'
  2301  383C  3474               	retlw	116	;'t'
  2302  383D  3474               	retlw	116	;'t'
  2303  383E  3465               	retlw	101	;'e'
  2304  383F  346D               	retlw	109	;'m'
  2305  3840  3470               	retlw	112	;'p'
  2306  3841  3474               	retlw	116	;'t'
  2307  3842  3420               	retlw	32	;' '
  2308  3843  3474               	retlw	116	;'t'
  2309  3844  346F               	retlw	111	;'o'
  2310  3845  3420               	retlw	32	;' '
  2311  3846  3473               	retlw	115	;'s'
  2312  3847  3465               	retlw	101	;'e'
  2313  3848  3474               	retlw	116	;'t'
  2314  3849  3420               	retlw	32	;' '
  2315  384A  3469               	retlw	105	;'i'
  2316  384B  346E               	retlw	110	;'n'
  2317  384C  3469               	retlw	105	;'i'
  2318  384D  3474               	retlw	116	;'t'
  2319  384E  3469               	retlw	105	;'i'
  2320  384F  3461               	retlw	97	;'a'
  2321  3850  346C               	retlw	108	;'l'
  2322  3851  3420               	retlw	32	;' '
  2323  3852  3473               	retlw	115	;'s'
  2324  3853  3479               	retlw	121	;'y'
  2325  3854  3473               	retlw	115	;'s'
  2326  3855  3474               	retlw	116	;'t'
  2327  3856  3465               	retlw	101	;'e'
  2328  3857  346D               	retlw	109	;'m'
  2329  3858  3420               	retlw	32	;' '
  2330  3859  3470               	retlw	112	;'p'
  2331  385A  3461               	retlw	97	;'a'
  2332  385B  3472               	retlw	114	;'r'
  2333  385C  3461               	retlw	97	;'a'
  2334  385D  346D               	retlw	109	;'m'
  2335  385E  3465               	retlw	101	;'e'
  2336  385F  3474               	retlw	116	;'t'
  2337  3860  3465               	retlw	101	;'e'
  2338  3861  3472               	retlw	114	;'r'
  2339  3862  3473               	retlw	115	;'s'
  2340  3863  3420               	retlw	32	;' '
  2341  3864  3474               	retlw	116	;'t'
  2342  3865  346F               	retlw	111	;'o'
  2343  3866  3420               	retlw	32	;' '
  2344  3867  3441               	retlw	65	;'A'
  2345  3868  3446               	retlw	70	;'F'
  2346  3869  3445               	retlw	69	;'E'
  2347  386A  342E               	retlw	46	;'.'
  2348  386B  342E               	retlw	46	;'.'
  2349  386C  342E               	retlw	46	;'.'
  2350  386D  340A               	retlw	10
  2351  386E  340D               	retlw	13
  2352  386F  3400               	retlw	0
  2353                           
  2354                           	psect	stringtext9
  2355  3870                     __pstringtext9:	
  2356  3870                     STR_2:	
  2357  3870  3443               	retlw	67	;'C'
  2358  3871  346F               	retlw	111	;'o'
  2359  3872  346D               	retlw	109	;'m'
  2360  3873  346D               	retlw	109	;'m'
  2361  3874  3475               	retlw	117	;'u'
  2362  3875  346E               	retlw	110	;'n'
  2363  3876  3469               	retlw	105	;'i'
  2364  3877  3463               	retlw	99	;'c'
  2365  3878  3461               	retlw	97	;'a'
  2366  3879  3474               	retlw	116	;'t'
  2367  387A  3469               	retlw	105	;'i'
  2368  387B  346F               	retlw	111	;'o'
  2369  387C  346E               	retlw	110	;'n'
  2370  387D  3420               	retlw	32	;' '
  2371  387E  3477               	retlw	119	;'w'
  2372  387F  3469               	retlw	105	;'i'
  2373  3880  3474               	retlw	116	;'t'
  2374  3881  3468               	retlw	104	;'h'
  2375  3882  3420               	retlw	32	;' '
  2376  3883  3442               	retlw	66	;'B'
  2377  3884  3451               	retlw	81	;'Q'
  2378  3885  3437               	retlw	55	;'7'
  2379  3886  3436               	retlw	54	;'6'
  2380  3887  3439               	retlw	57	;'9'
  2381  3888  3432               	retlw	50	;'2'
  2382  3889  3430               	retlw	48	;'0'
  2383  388A  3420               	retlw	32	;' '
  2384  388B  3441               	retlw	65	;'A'
  2385  388C  3446               	retlw	70	;'F'
  2386  388D  3445               	retlw	69	;'E'
  2387  388E  3420               	retlw	32	;' '
  2388  388F  3465               	retlw	101	;'e'
  2389  3890  3473               	retlw	115	;'s'
  2390  3891  3474               	retlw	116	;'t'
  2391  3892  3461               	retlw	97	;'a'
  2392  3893  3462               	retlw	98	;'b'
  2393  3894  346C               	retlw	108	;'l'
  2394  3895  3469               	retlw	105	;'i'
  2395  3896  3473               	retlw	115	;'s'
  2396  3897  3468               	retlw	104	;'h'
  2397  3898  3465               	retlw	101	;'e'
  2398  3899  3464               	retlw	100	;'d'
  2399  389A  3421               	retlw	33	;'!'
  2400  389B  340A               	retlw	10
  2401  389C  340D               	retlw	13
  2402  389D  3400               	retlw	0
  2403                           
  2404                           	psect	stringtext10
  2405  389E                     __pstringtext10:	
  2406  389E                     STR_10:	
  2407  389E  344E               	retlw	78	;'N'
  2408  389F  346F               	retlw	111	;'o'
  2409  38A0  3477               	retlw	119	;'w'
  2410  38A1  3420               	retlw	32	;' '
  2411  38A2  3472               	retlw	114	;'r'
  2412  38A3  3465               	retlw	101	;'e'
  2413  38A4  3461               	retlw	97	;'a'
  2414  38A5  3464               	retlw	100	;'d'
  2415  38A6  3469               	retlw	105	;'i'
  2416  38A7  346E               	retlw	110	;'n'
  2417  38A8  3467               	retlw	103	;'g'
  2418  38A9  3420               	retlw	32	;' '
  2419  38AA  3441               	retlw	65	;'A'
  2420  38AB  3446               	retlw	70	;'F'
  2421  38AC  3445               	retlw	69	;'E'
  2422  38AD  3420               	retlw	32	;' '
  2423  38AE  3464               	retlw	100	;'d'
  2424  38AF  3461               	retlw	97	;'a'
  2425  38B0  3474               	retlw	116	;'t'
  2426  38B1  3461               	retlw	97	;'a'
  2427  38B2  3420               	retlw	32	;' '
  2428  38B3  3461               	retlw	97	;'a'
  2429  38B4  3474               	retlw	116	;'t'
  2430  38B5  3420               	retlw	32	;' '
  2431  38B6  3472               	retlw	114	;'r'
  2432  38B7  3465               	retlw	101	;'e'
  2433  38B8  3467               	retlw	103	;'g'
  2434  38B9  3475               	retlw	117	;'u'
  2435  38BA  346C               	retlw	108	;'l'
  2436  38BB  3461               	retlw	97	;'a'
  2437  38BC  3472               	retlw	114	;'r'
  2438  38BD  3420               	retlw	32	;' '
  2439  38BE  3469               	retlw	105	;'i'
  2440  38BF  346E               	retlw	110	;'n'
  2441  38C0  3474               	retlw	116	;'t'
  2442  38C1  3465               	retlw	101	;'e'
  2443  38C2  3472               	retlw	114	;'r'
  2444  38C3  3476               	retlw	118	;'v'
  2445  38C4  3461               	retlw	97	;'a'
  2446  38C5  346C               	retlw	108	;'l'
  2447  38C6  3473               	retlw	115	;'s'
  2448  38C7  342E               	retlw	46	;'.'
  2449  38C8  340A               	retlw	10
  2450  38C9  340D               	retlw	13
  2451  38CA  3400               	retlw	0
  2452                           
  2453                           	psect	stringtext11
  2454  38CB                     __pstringtext11:	
  2455  38CB                     STR_7:	
  2456  38CB  3453               	retlw	83	;'S'
  2457  38CC  3465               	retlw	101	;'e'
  2458  38CD  3474               	retlw	116	;'t'
  2459  38CE  3420               	retlw	32	;' '
  2460  38CF  3473               	retlw	115	;'s'
  2461  38D0  3468               	retlw	104	;'h'
  2462  38D1  346F               	retlw	111	;'o'
  2463  38D2  3472               	retlw	114	;'r'
  2464  38D3  3474               	retlw	116	;'t'
  2465  38D4  3420               	retlw	32	;' '
  2466  38D5  3463               	retlw	99	;'c'
  2467  38D6  3469               	retlw	105	;'i'
  2468  38D7  3472               	retlw	114	;'r'
  2469  38D8  3463               	retlw	99	;'c'
  2470  38D9  3475               	retlw	117	;'u'
  2471  38DA  3469               	retlw	105	;'i'
  2472  38DB  3474               	retlw	116	;'t'
  2473  38DC  3420               	retlw	32	;' '
  2474  38DD  3463               	retlw	99	;'c'
  2475  38DE  3475               	retlw	117	;'u'
  2476  38DF  3472               	retlw	114	;'r'
  2477  38E0  3472               	retlw	114	;'r'
  2478  38E1  3465               	retlw	101	;'e'
  2479  38E2  346E               	retlw	110	;'n'
  2480  38E3  3474               	retlw	116	;'t'
  2481  38E4  3420               	retlw	32	;' '
  2482  38E5  3466               	retlw	102	;'f'
  2483  38E6  346F               	retlw	111	;'o'
  2484  38E7  3472               	retlw	114	;'r'
  2485  38E8  3420               	retlw	32	;' '
  2486  38E9  3441               	retlw	65	;'A'
  2487  38EA  3446               	retlw	70	;'F'
  2488  38EB  3445               	retlw	69	;'E'
  2489  38EC  343A               	retlw	58	;':'
  2490  38ED  3420               	retlw	32	;' '
  2491  38EE  3425               	retlw	37	;'%'
  2492  38EF  346C               	retlw	108	;'l'
  2493  38F0  3475               	retlw	117	;'u'
  2494  38F1  3420               	retlw	32	;' '
  2495  38F2  346D               	retlw	109	;'m'
  2496  38F3  3441               	retlw	65	;'A'
  2497  38F4  340A               	retlw	10
  2498  38F5  340D               	retlw	13
  2499  38F6  3400               	retlw	0
  2500                           
  2501                           	psect	stringtext12
  2502  38F7                     __pstringtext12:	
  2503  38F7                     STR_3:	
  2504  38F7  344F               	retlw	79	;'O'
  2505  38F8  3462               	retlw	98	;'b'
  2506  38F9  3474               	retlw	116	;'t'
  2507  38FA  3461               	retlw	97	;'a'
  2508  38FB  3469               	retlw	105	;'i'
  2509  38FC  346E               	retlw	110	;'n'
  2510  38FD  3465               	retlw	101	;'e'
  2511  38FE  3464               	retlw	100	;'d'
  2512  38FF  3420               	retlw	32	;' '
  2513  3900  3461               	retlw	97	;'a'
  2514  3901  3464               	retlw	100	;'d'
  2515  3902  3463               	retlw	99	;'c'
  2516  3903  344F               	retlw	79	;'O'
  2517  3904  3466               	retlw	102	;'f'
  2518  3905  3466               	retlw	102	;'f'
  2519  3906  3473               	retlw	115	;'s'
  2520  3907  3465               	retlw	101	;'e'
  2521  3908  3474               	retlw	116	;'t'
  2522  3909  3420               	retlw	32	;' '
  2523  390A  343D               	retlw	61	;'='
  2524  390B  3420               	retlw	32	;' '
  2525  390C  3425               	retlw	37	;'%'
  2526  390D  3469               	retlw	105	;'i'
  2527  390E  3420               	retlw	32	;' '
  2528  390F  3461               	retlw	97	;'a'
  2529  3910  346E               	retlw	110	;'n'
  2530  3911  3464               	retlw	100	;'d'
  2531  3912  3420               	retlw	32	;' '
  2532  3913  3461               	retlw	97	;'a'
  2533  3914  3464               	retlw	100	;'d'
  2534  3915  3463               	retlw	99	;'c'
  2535  3916  3447               	retlw	71	;'G'
  2536  3917  3461               	retlw	97	;'a'
  2537  3918  3469               	retlw	105	;'i'
  2538  3919  346E               	retlw	110	;'n'
  2539  391A  3420               	retlw	32	;' '
  2540  391B  343D               	retlw	61	;'='
  2541  391C  3420               	retlw	32	;' '
  2542  391D  3425               	retlw	37	;'%'
  2543  391E  3469               	retlw	105	;'i'
  2544  391F  340A               	retlw	10
  2545  3920  340D               	retlw	13
  2546  3921  3400               	retlw	0
  2547                           
  2548                           	psect	stringtext13
  2549  3922                     __pstringtext13:	
  2550  3922                     STR_11:	
  2551  3922  3450               	retlw	80	;'P'
  2552  3923  3472               	retlw	114	;'r'
  2553  3924  3469               	retlw	105	;'i'
  2554  3925  346E               	retlw	110	;'n'
  2555  3926  3474               	retlw	116	;'t'
  2556  3927  3469               	retlw	105	;'i'
  2557  3928  346E               	retlw	110	;'n'
  2558  3929  3467               	retlw	103	;'g'
  2559  392A  3420               	retlw	32	;' '
  2560  392B  346F               	retlw	111	;'o'
  2561  392C  3475               	retlw	117	;'u'
  2562  392D  3474               	retlw	116	;'t'
  2563  392E  3420               	retlw	32	;' '
  2564  392F  3441               	retlw	65	;'A'
  2565  3930  3446               	retlw	70	;'F'
  2566  3931  3445               	retlw	69	;'E'
  2567  3932  3420               	retlw	32	;' '
  2568  3933  3472               	retlw	114	;'r'
  2569  3934  3465               	retlw	101	;'e'
  2570  3935  3467               	retlw	103	;'g'
  2571  3936  3469               	retlw	105	;'i'
  2572  3937  3473               	retlw	115	;'s'
  2573  3938  3474               	retlw	116	;'t'
  2574  3939  3465               	retlw	101	;'e'
  2575  393A  3472               	retlw	114	;'r'
  2576  393B  3420               	retlw	32	;' '
  2577  393C  3476               	retlw	118	;'v'
  2578  393D  3461               	retlw	97	;'a'
  2579  393E  346C               	retlw	108	;'l'
  2580  393F  3475               	retlw	117	;'u'
  2581  3940  3465               	retlw	101	;'e'
  2582  3941  3473               	retlw	115	;'s'
  2583  3942  342E               	retlw	46	;'.'
  2584  3943  342E               	retlw	46	;'.'
  2585  3944  342E               	retlw	46	;'.'
  2586  3945  3420               	retlw	32	;' '
  2587  3946  346F               	retlw	111	;'o'
  2588  3947  3475               	retlw	117	;'u'
  2589  3948  3474               	retlw	116	;'t'
  2590  3949  340A               	retlw	10
  2591  394A  340D               	retlw	13
  2592  394B  3400               	retlw	0
  2593                           
  2594                           	psect	stringtext14
  2595  394C                     __pstringtext14:	
  2596  394C                     STR_9:	
  2597  394C  3449               	retlw	73	;'I'
  2598  394D  346E               	retlw	110	;'n'
  2599  394E  3469               	retlw	105	;'i'
  2600  394F  3474               	retlw	116	;'t'
  2601  3950  3469               	retlw	105	;'i'
  2602  3951  3461               	retlw	97	;'a'
  2603  3952  346C               	retlw	108	;'l'
  2604  3953  3420               	retlw	32	;' '
  2605  3954  3470               	retlw	112	;'p'
  2606  3955  3461               	retlw	97	;'a'
  2607  3956  3472               	retlw	114	;'r'
  2608  3957  3461               	retlw	97	;'a'
  2609  3958  346D               	retlw	109	;'m'
  2610  3959  3465               	retlw	101	;'e'
  2611  395A  3474               	retlw	116	;'t'
  2612  395B  3465               	retlw	101	;'e'
  2613  395C  3472               	retlw	114	;'r'
  2614  395D  3473               	retlw	115	;'s'
  2615  395E  3420               	retlw	32	;' '
  2616  395F  3466               	retlw	102	;'f'
  2617  3960  346F               	retlw	111	;'o'
  2618  3961  3472               	retlw	114	;'r'
  2619  3962  3420               	retlw	32	;' '
  2620  3963  3442               	retlw	66	;'B'
  2621  3964  3451               	retlw	81	;'Q'
  2622  3965  3437               	retlw	55	;'7'
  2623  3966  3436               	retlw	54	;'6'
  2624  3967  3439               	retlw	57	;'9'
  2625  3968  3432               	retlw	50	;'2'
  2626  3969  3430               	retlw	48	;'0'
  2627  396A  3420               	retlw	32	;' '
  2628  396B  3441               	retlw	65	;'A'
  2629  396C  3446               	retlw	70	;'F'
  2630  396D  3445               	retlw	69	;'E'
  2631  396E  3420               	retlw	32	;' '
  2632  396F  3473               	retlw	115	;'s'
  2633  3970  3465               	retlw	101	;'e'
  2634  3971  3474               	retlw	116	;'t'
  2635  3972  3421               	retlw	33	;'!'
  2636  3973  340A               	retlw	10
  2637  3974  340D               	retlw	13
  2638  3975  3400               	retlw	0
  2639                           
  2640                           	psect	stringtext15
  2641  3976                     __pstringtext15:	
  2642  3976                     STR_6:	
  2643  3976  3443               	retlw	67	;'C'
  2644  3977  3475               	retlw	117	;'u'
  2645  3978  3472               	retlw	114	;'r'
  2646  3979  3472               	retlw	114	;'r'
  2647  397A  3465               	retlw	101	;'e'
  2648  397B  346E               	retlw	110	;'n'
  2649  397C  3474               	retlw	116	;'t'
  2650  397D  3420               	retlw	32	;' '
  2651  397E  3473               	retlw	115	;'s'
  2652  397F  3465               	retlw	101	;'e'
  2653  3980  346E               	retlw	110	;'n'
  2654  3981  3473               	retlw	115	;'s'
  2655  3982  3465               	retlw	101	;'e'
  2656  3983  3420               	retlw	32	;' '
  2657  3984  3472               	retlw	114	;'r'
  2658  3985  3465               	retlw	101	;'e'
  2659  3986  3473               	retlw	115	;'s'
  2660  3987  3469               	retlw	105	;'i'
  2661  3988  3473               	retlw	115	;'s'
  2662  3989  3474               	retlw	116	;'t'
  2663  398A  346F               	retlw	111	;'o'
  2664  398B  3472               	retlw	114	;'r'
  2665  398C  3420               	retlw	32	;' '
  2666  398D  3476               	retlw	118	;'v'
  2667  398E  3461               	retlw	97	;'a'
  2668  398F  346C               	retlw	108	;'l'
  2669  3990  3475               	retlw	117	;'u'
  2670  3991  3465               	retlw	101	;'e'
  2671  3992  343A               	retlw	58	;':'
  2672  3993  3420               	retlw	32	;' '
  2673  3994  3425               	retlw	37	;'%'
  2674  3995  342E               	retlw	46	;'.'
  2675  3996  3434               	retlw	52	;'4'
  2676  3997  3466               	retlw	102	;'f'
  2677  3998  3420               	retlw	32	;' '
  2678  3999  346F               	retlw	111	;'o'
  2679  399A  3468               	retlw	104	;'h'
  2680  399B  346D               	retlw	109	;'m'
  2681  399C  3473               	retlw	115	;'s'
  2682  399D  340A               	retlw	10
  2683  399E  340D               	retlw	13
  2684  399F  3400               	retlw	0
  2685                           
  2686                           	psect	stringtext16
  2687  39A0                     __pstringtext16:	
  2688  39A0                     STR_1:	
  2689  39A0  3441               	retlw	65	;'A'
  2690  39A1  3474               	retlw	116	;'t'
  2691  39A2  3474               	retlw	116	;'t'
  2692  39A3  3465               	retlw	101	;'e'
  2693  39A4  346D               	retlw	109	;'m'
  2694  39A5  3470               	retlw	112	;'p'
  2695  39A6  3474               	retlw	116	;'t'
  2696  39A7  3469               	retlw	105	;'i'
  2697  39A8  346E               	retlw	110	;'n'
  2698  39A9  3467               	retlw	103	;'g'
  2699  39AA  3420               	retlw	32	;' '
  2700  39AB  3474               	retlw	116	;'t'
  2701  39AC  346F               	retlw	111	;'o'
  2702  39AD  3420               	retlw	32	;' '
  2703  39AE  3463               	retlw	99	;'c'
  2704  39AF  346F               	retlw	111	;'o'
  2705  39B0  346D               	retlw	109	;'m'
  2706  39B1  346D               	retlw	109	;'m'
  2707  39B2  3475               	retlw	117	;'u'
  2708  39B3  346E               	retlw	110	;'n'
  2709  39B4  3469               	retlw	105	;'i'
  2710  39B5  3463               	retlw	99	;'c'
  2711  39B6  3461               	retlw	97	;'a'
  2712  39B7  3474               	retlw	116	;'t'
  2713  39B8  3465               	retlw	101	;'e'
  2714  39B9  3420               	retlw	32	;' '
  2715  39BA  3477               	retlw	119	;'w'
  2716  39BB  3469               	retlw	105	;'i'
  2717  39BC  3474               	retlw	116	;'t'
  2718  39BD  3468               	retlw	104	;'h'
  2719  39BE  3420               	retlw	32	;' '
  2720  39BF  3441               	retlw	65	;'A'
  2721  39C0  3446               	retlw	70	;'F'
  2722  39C1  3445               	retlw	69	;'E'
  2723  39C2  342E               	retlw	46	;'.'
  2724  39C3  342E               	retlw	46	;'.'
  2725  39C4  342E               	retlw	46	;'.'
  2726  39C5  340A               	retlw	10
  2727  39C6  340D               	retlw	13
  2728  39C7  3400               	retlw	0
  2729                           
  2730                           	psect	stringtext17
  2731  39E8                     __pstringtext17:	
  2732  39E8                     STR_15:	
  2733  39E8  3430               	retlw	48	;'0'
  2734  39E9  3478               	retlw	120	;'x'
  2735  39EA  3430               	retlw	48	;'0'
  2736  39EB  3434               	retlw	52	;'4'
  2737  39EC  3420               	retlw	32	;' '
  2738  39ED  3453               	retlw	83	;'S'
  2739  39EE  3459               	retlw	89	;'Y'
  2740  39EF  3453               	retlw	83	;'S'
  2741  39F0  345F               	retlw	95	;'_'
  2742  39F1  3443               	retlw	67	;'C'
  2743  39F2  3454               	retlw	84	;'T'
  2744  39F3  3452               	retlw	82	;'R'
  2745  39F4  344C               	retlw	76	;'L'
  2746  39F5  3431               	retlw	49	;'1'
  2747  39F6  343A               	retlw	58	;':'
  2748  39F7  3420               	retlw	32	;' '
  2749  39F8  3425               	retlw	37	;'%'
  2750  39F9  3469               	retlw	105	;'i'
  2751  39FA  3420               	retlw	32	;' '
  2752  39FB  340A               	retlw	10
  2753  39FC  340D               	retlw	13
  2754  39FD  3400               	retlw	0
  2755                           
  2756                           	psect	stringtext18
  2757  39FE                     __pstringtext18:	
  2758  39FE                     STR_16:	
  2759  39FE  3430               	retlw	48	;'0'
  2760  39FF  3478               	retlw	120	;'x'
  2761  3A00  3430               	retlw	48	;'0'
  2762  3A01  3435               	retlw	53	;'5'
  2763  3A02  3420               	retlw	32	;' '
  2764  3A03  3453               	retlw	83	;'S'
  2765  3A04  3459               	retlw	89	;'Y'
  2766  3A05  3453               	retlw	83	;'S'
  2767  3A06  345F               	retlw	95	;'_'
  2768  3A07  3443               	retlw	67	;'C'
  2769  3A08  3454               	retlw	84	;'T'
  2770  3A09  3452               	retlw	82	;'R'
  2771  3A0A  344C               	retlw	76	;'L'
  2772  3A0B  3432               	retlw	50	;'2'
  2773  3A0C  343A               	retlw	58	;':'
  2774  3A0D  3420               	retlw	32	;' '
  2775  3A0E  3425               	retlw	37	;'%'
  2776  3A0F  3469               	retlw	105	;'i'
  2777  3A10  3420               	retlw	32	;' '
  2778  3A11  340A               	retlw	10
  2779  3A12  340D               	retlw	13
  2780  3A13  3400               	retlw	0
  2781                           
  2782                           	psect	stringtext19
  2783  3A14                     __pstringtext19:	
  2784  3A14                     STR_14:	
  2785  3A14  3430               	retlw	48	;'0'
  2786  3A15  3478               	retlw	120	;'x'
  2787  3A16  3430               	retlw	48	;'0'
  2788  3A17  3431               	retlw	49	;'1'
  2789  3A18  3420               	retlw	32	;' '
  2790  3A19  3443               	retlw	67	;'C'
  2791  3A1A  3445               	retlw	69	;'E'
  2792  3A1B  344C               	retlw	76	;'L'
  2793  3A1C  344C               	retlw	76	;'L'
  2794  3A1D  3442               	retlw	66	;'B'
  2795  3A1E  3441               	retlw	65	;'A'
  2796  3A1F  344C               	retlw	76	;'L'
  2797  3A20  3431               	retlw	49	;'1'
  2798  3A21  343A               	retlw	58	;':'
  2799  3A22  3420               	retlw	32	;' '
  2800  3A23  3425               	retlw	37	;'%'
  2801  3A24  3469               	retlw	105	;'i'
  2802  3A25  3420               	retlw	32	;' '
  2803  3A26  340A               	retlw	10
  2804  3A27  340D               	retlw	13
  2805  3A28  3400               	retlw	0
  2806                           
  2807                           	psect	stringtext20
  2808  3A29                     __pstringtext20:	
  2809  3A29                     STR_17:	
  2810  3A29  3430               	retlw	48	;'0'
  2811  3A2A  3478               	retlw	120	;'x'
  2812  3A2B  3430               	retlw	48	;'0'
  2813  3A2C  3436               	retlw	54	;'6'
  2814  3A2D  3420               	retlw	32	;' '
  2815  3A2E  3450               	retlw	80	;'P'
  2816  3A2F  3452               	retlw	82	;'R'
  2817  3A30  344F               	retlw	79	;'O'
  2818  3A31  3454               	retlw	84	;'T'
  2819  3A32  3445               	retlw	69	;'E'
  2820  3A33  3443               	retlw	67	;'C'
  2821  3A34  3454               	retlw	84	;'T'
  2822  3A35  3431               	retlw	49	;'1'
  2823  3A36  343A               	retlw	58	;':'
  2824  3A37  3420               	retlw	32	;' '
  2825  3A38  3425               	retlw	37	;'%'
  2826  3A39  3469               	retlw	105	;'i'
  2827  3A3A  3420               	retlw	32	;' '
  2828  3A3B  340A               	retlw	10
  2829  3A3C  340D               	retlw	13
  2830  3A3D  3400               	retlw	0
  2831                           
  2832                           	psect	stringtext21
  2833  3A3E                     __pstringtext21:	
  2834  3A3E                     STR_18:	
  2835  3A3E  3430               	retlw	48	;'0'
  2836  3A3F  3478               	retlw	120	;'x'
  2837  3A40  3430               	retlw	48	;'0'
  2838  3A41  3437               	retlw	55	;'7'
  2839  3A42  3420               	retlw	32	;' '
  2840  3A43  3450               	retlw	80	;'P'
  2841  3A44  3452               	retlw	82	;'R'
  2842  3A45  344F               	retlw	79	;'O'
  2843  3A46  3454               	retlw	84	;'T'
  2844  3A47  3445               	retlw	69	;'E'
  2845  3A48  3443               	retlw	67	;'C'
  2846  3A49  3454               	retlw	84	;'T'
  2847  3A4A  3432               	retlw	50	;'2'
  2848  3A4B  343A               	retlw	58	;':'
  2849  3A4C  3420               	retlw	32	;' '
  2850  3A4D  3425               	retlw	37	;'%'
  2851  3A4E  3469               	retlw	105	;'i'
  2852  3A4F  3420               	retlw	32	;' '
  2853  3A50  340A               	retlw	10
  2854  3A51  340D               	retlw	13
  2855  3A52  3400               	retlw	0
  2856                           
  2857                           	psect	stringtext22
  2858  3A53                     __pstringtext22:	
  2859  3A53                     STR_19:	
  2860  3A53  3430               	retlw	48	;'0'
  2861  3A54  3478               	retlw	120	;'x'
  2862  3A55  3430               	retlw	48	;'0'
  2863  3A56  3438               	retlw	56	;'8'
  2864  3A57  3420               	retlw	32	;' '
  2865  3A58  3450               	retlw	80	;'P'
  2866  3A59  3452               	retlw	82	;'R'
  2867  3A5A  344F               	retlw	79	;'O'
  2868  3A5B  3454               	retlw	84	;'T'
  2869  3A5C  3445               	retlw	69	;'E'
  2870  3A5D  3443               	retlw	67	;'C'
  2871  3A5E  3454               	retlw	84	;'T'
  2872  3A5F  3433               	retlw	51	;'3'
  2873  3A60  343A               	retlw	58	;':'
  2874  3A61  3420               	retlw	32	;' '
  2875  3A62  3425               	retlw	37	;'%'
  2876  3A63  3469               	retlw	105	;'i'
  2877  3A64  3420               	retlw	32	;' '
  2878  3A65  340A               	retlw	10
  2879  3A66  340D               	retlw	13
  2880  3A67  3400               	retlw	0
  2881                           
  2882                           	psect	stringtext23
  2883  3A68                     __pstringtext23:	
  2884  3A68                     STR_13:	
  2885  3A68  3430               	retlw	48	;'0'
  2886  3A69  3478               	retlw	120	;'x'
  2887  3A6A  3430               	retlw	48	;'0'
  2888  3A6B  3430               	retlw	48	;'0'
  2889  3A6C  3420               	retlw	32	;' '
  2890  3A6D  3453               	retlw	83	;'S'
  2891  3A6E  3459               	retlw	89	;'Y'
  2892  3A6F  3453               	retlw	83	;'S'
  2893  3A70  345F               	retlw	95	;'_'
  2894  3A71  3453               	retlw	83	;'S'
  2895  3A72  3454               	retlw	84	;'T'
  2896  3A73  3441               	retlw	65	;'A'
  2897  3A74  3454               	retlw	84	;'T'
  2898  3A75  343A               	retlw	58	;':'
  2899  3A76  3420               	retlw	32	;' '
  2900  3A77  3425               	retlw	37	;'%'
  2901  3A78  3469               	retlw	105	;'i'
  2902  3A79  3420               	retlw	32	;' '
  2903  3A7A  340A               	retlw	10
  2904  3A7B  340D               	retlw	13
  2905  3A7C  3400               	retlw	0
  2906                           
  2907                           	psect	stringtext24
  2908  3A7D                     __pstringtext24:	
  2909  3A7D                     STR_20:	
  2910  3A7D  3430               	retlw	48	;'0'
  2911  3A7E  3478               	retlw	120	;'x'
  2912  3A7F  3430               	retlw	48	;'0'
  2913  3A80  3439               	retlw	57	;'9'
  2914  3A81  3420               	retlw	32	;' '
  2915  3A82  344F               	retlw	79	;'O'
  2916  3A83  3456               	retlw	86	;'V'
  2917  3A84  345F               	retlw	95	;'_'
  2918  3A85  3454               	retlw	84	;'T'
  2919  3A86  3452               	retlw	82	;'R'
  2920  3A87  3449               	retlw	73	;'I'
  2921  3A88  3450               	retlw	80	;'P'
  2922  3A89  343A               	retlw	58	;':'
  2923  3A8A  3420               	retlw	32	;' '
  2924  3A8B  3425               	retlw	37	;'%'
  2925  3A8C  3469               	retlw	105	;'i'
  2926  3A8D  3420               	retlw	32	;' '
  2927  3A8E  340A               	retlw	10
  2928  3A8F  340D               	retlw	13
  2929  3A90  3400               	retlw	0
  2930                           
  2931                           	psect	stringtext25
  2932  3A91                     __pstringtext25:	
  2933  3A91                     STR_21:	
  2934  3A91  3430               	retlw	48	;'0'
  2935  3A92  3478               	retlw	120	;'x'
  2936  3A93  3430               	retlw	48	;'0'
  2937  3A94  3441               	retlw	65	;'A'
  2938  3A95  3420               	retlw	32	;' '
  2939  3A96  3455               	retlw	85	;'U'
  2940  3A97  3456               	retlw	86	;'V'
  2941  3A98  345F               	retlw	95	;'_'
  2942  3A99  3454               	retlw	84	;'T'
  2943  3A9A  3452               	retlw	82	;'R'
  2944  3A9B  3449               	retlw	73	;'I'
  2945  3A9C  3450               	retlw	80	;'P'
  2946  3A9D  343A               	retlw	58	;':'
  2947  3A9E  3420               	retlw	32	;' '
  2948  3A9F  3425               	retlw	37	;'%'
  2949  3AA0  3469               	retlw	105	;'i'
  2950  3AA1  3420               	retlw	32	;' '
  2951  3AA2  340A               	retlw	10
  2952  3AA3  340D               	retlw	13
  2953  3AA4  3400               	retlw	0
  2954                           
  2955                           	psect	stringtext26
  2956  3AA5                     __pstringtext26:	
  2957  3AA5                     STR_22:	
  2958  3AA5  3430               	retlw	48	;'0'
  2959  3AA6  3478               	retlw	120	;'x'
  2960  3AA7  3430               	retlw	48	;'0'
  2961  3AA8  3442               	retlw	66	;'B'
  2962  3AA9  3420               	retlw	32	;' '
  2963  3AAA  3443               	retlw	67	;'C'
  2964  3AAB  3443               	retlw	67	;'C'
  2965  3AAC  345F               	retlw	95	;'_'
  2966  3AAD  3443               	retlw	67	;'C'
  2967  3AAE  3446               	retlw	70	;'F'
  2968  3AAF  3447               	retlw	71	;'G'
  2969  3AB0  343A               	retlw	58	;':'
  2970  3AB1  3420               	retlw	32	;' '
  2971  3AB2  3425               	retlw	37	;'%'
  2972  3AB3  3469               	retlw	105	;'i'
  2973  3AB4  3420               	retlw	32	;' '
  2974  3AB5  340A               	retlw	10
  2975  3AB6  340D               	retlw	13
  2976  3AB7  3400               	retlw	0
  2977                           
  2978                           	psect	stringtext27
  2979  3AB8                     __pstringtext27:	
  2980  3AB8                     STR_23:	
  2981  3AB8  3430               	retlw	48	;'0'
  2982  3AB9  3478               	retlw	120	;'x'
  2983  3ABA  3433               	retlw	51	;'3'
  2984  3ABB  3432               	retlw	50	;'2'
  2985  3ABC  3420               	retlw	32	;' '
  2986  3ABD  3443               	retlw	67	;'C'
  2987  3ABE  3443               	retlw	67	;'C'
  2988  3ABF  345F               	retlw	95	;'_'
  2989  3AC0  3448               	retlw	72	;'H'
  2990  3AC1  3449               	retlw	73	;'I'
  2991  3AC2  343A               	retlw	58	;':'
  2992  3AC3  3420               	retlw	32	;' '
  2993  3AC4  3425               	retlw	37	;'%'
  2994  3AC5  3469               	retlw	105	;'i'
  2995  3AC6  3420               	retlw	32	;' '
  2996  3AC7  340A               	retlw	10
  2997  3AC8  340D               	retlw	13
  2998  3AC9  3400               	retlw	0
  2999                           
  3000                           	psect	stringtext28
  3001  3ACA                     __pstringtext28:	
  3002  3ACA                     STR_24:	
  3003  3ACA  3430               	retlw	48	;'0'
  3004  3ACB  3478               	retlw	120	;'x'
  3005  3ACC  3433               	retlw	51	;'3'
  3006  3ACD  3433               	retlw	51	;'3'
  3007  3ACE  3420               	retlw	32	;' '
  3008  3ACF  3443               	retlw	67	;'C'
  3009  3AD0  3443               	retlw	67	;'C'
  3010  3AD1  345F               	retlw	95	;'_'
  3011  3AD2  344C               	retlw	76	;'L'
  3012  3AD3  344F               	retlw	79	;'O'
  3013  3AD4  343A               	retlw	58	;':'
  3014  3AD5  3420               	retlw	32	;' '
  3015  3AD6  3425               	retlw	37	;'%'
  3016  3AD7  3469               	retlw	105	;'i'
  3017  3AD8  3420               	retlw	32	;' '
  3018  3AD9  340A               	retlw	10
  3019  3ADA  340D               	retlw	13
  3020  3ADB  3400               	retlw	0
  3021                           
  3022                           	psect	stringtext29
  3023  3B14                     __pstringtext29:	
  3024  3B14                     STR_26:	
  3025  3B14  3449               	retlw	73	;'I'
  3026  3B15  344E               	retlw	78	;'N'
  3027  3B16  3446               	retlw	70	;'F'
  3028  3B17  3400               	retlw	0
  3029                           
  3030                           	psect	stringtext30
  3031  3B18                     __pstringtext30:	
  3032  3B18                     STR_30:	
  3033  3B18  344E               	retlw	78	;'N'
  3034  3B19  3441               	retlw	65	;'A'
  3035  3B1A  344E               	retlw	78	;'N'
  3036  3B1B  3400               	retlw	0
  3037                           
  3038                           	psect	stringtext31
  3039  3B1C                     __pstringtext31:	
  3040  3B1C                     STR_139:	
  3041  3B1C  3468               	retlw	104	;'h'
  3042  3B1D  3468               	retlw	104	;'h'
  3043  3B1E  3458               	retlw	88	;'X'
  3044  3B1F  3400               	retlw	0
  3045                           
  3046                           	psect	stringtext32
  3047  3B20                     __pstringtext32:	
  3048  3B20                     STR_34:	
  3049  3B20  3468               	retlw	104	;'h'
  3050  3B21  3468               	retlw	104	;'h'
  3051  3B22  3464               	retlw	100	;'d'
  3052  3B23  3400               	retlw	0
  3053                           
  3054                           	psect	stringtext33
  3055  3B24                     __pstringtext33:	
  3056  3B24                     STR_27:	
  3057  3B24  3469               	retlw	105	;'i'
  3058  3B25  346E               	retlw	110	;'n'
  3059  3B26  3466               	retlw	102	;'f'
  3060  3B27  3400               	retlw	0
  3061                           
  3062                           	psect	stringtext34
  3063  3B28                     __pstringtext34:	
  3064  3B28                     STR_38:	
  3065  3B28  3468               	retlw	104	;'h'
  3066  3B29  3468               	retlw	104	;'h'
  3067  3B2A  3469               	retlw	105	;'i'
  3068  3B2B  3400               	retlw	0
  3069                           
  3070                           	psect	stringtext35
  3071  3B2C                     __pstringtext35:	
  3072  3B2C                     STR_31:	
  3073  3B2C  346E               	retlw	110	;'n'
  3074  3B2D  3461               	retlw	97	;'a'
  3075  3B2E  346E               	retlw	110	;'n'
  3076  3B2F  3400               	retlw	0
  3077                           
  3078                           	psect	stringtext36
  3079  3B30                     __pstringtext36:	
  3080  3B30                     STR_95:	
  3081  3B30  3468               	retlw	104	;'h'
  3082  3B31  3468               	retlw	104	;'h'
  3083  3B32  346E               	retlw	110	;'n'
  3084  3B33  3400               	retlw	0
  3085                           
  3086                           	psect	stringtext37
  3087  3B34                     __pstringtext37:	
  3088  3B34                     STR_75:	
  3089  3B34  3468               	retlw	104	;'h'
  3090  3B35  3468               	retlw	104	;'h'
  3091  3B36  346F               	retlw	111	;'o'
  3092  3B37  3400               	retlw	0
  3093                           
  3094                           	psect	stringtext38
  3095  3B38                     __pstringtext38:	
  3096  3B38                     STR_115:	
  3097  3B38  3468               	retlw	104	;'h'
  3098  3B39  3468               	retlw	104	;'h'
  3099  3B3A  3475               	retlw	117	;'u'
  3100  3B3B  3400               	retlw	0
  3101                           
  3102                           	psect	stringtext39
  3103  3B3C                     __pstringtext39:	
  3104  3B3C                     STR_135:	
  3105  3B3C  3468               	retlw	104	;'h'
  3106  3B3D  3468               	retlw	104	;'h'
  3107  3B3E  3478               	retlw	120	;'x'
  3108  3B3F  3400               	retlw	0
  3109                           
  3110                           	psect	stringtext40
  3111  3B40                     __pstringtext40:	
  3112  3B40                     STR_157:	
  3113  3B40  346C               	retlw	108	;'l'
  3114  3B41  3458               	retlw	88	;'X'
  3115  3B42  3400               	retlw	0
  3116                           
  3117                           	psect	stringtext41
  3118  3B43                     __pstringtext41:	
  3119  3B43                     STR_166:	
  3120  3B43  347A               	retlw	122	;'z'
  3121  3B44  3458               	retlw	88	;'X'
  3122  3B45  3400               	retlw	0
  3123                           
  3124                           	psect	stringtext42
  3125  3B46                     __pstringtext42:	
  3126  3B46                     STR_52:	
  3127  3B46  346C               	retlw	108	;'l'
  3128  3B47  3464               	retlw	100	;'d'
  3129  3B48  3400               	retlw	0
  3130                           
  3131                           	psect	stringtext43
  3132  3B49                     __pstringtext43:	
  3133  3B49                     STR_61:	
  3134  3B49  347A               	retlw	122	;'z'
  3135  3B4A  3464               	retlw	100	;'d'
  3136  3B4B  3400               	retlw	0
  3137                           
  3138                           	psect	stringtext44
  3139  3B4C                     __pstringtext44:	
  3140  3B4C                     STR_70:	
  3141  3B4C  346C               	retlw	108	;'l'
  3142  3B4D  3466               	retlw	102	;'f'
  3143  3B4E  3400               	retlw	0
  3144                           
  3145                           	psect	stringtext45
  3146  3B4F                     __pstringtext45:	
  3147  3B4F                     STR_56:	
  3148  3B4F  346C               	retlw	108	;'l'
  3149  3B50  3469               	retlw	105	;'i'
  3150  3B51  3400               	retlw	0
  3151                           
  3152                           	psect	stringtext46
  3153  3B52                     __pstringtext46:	
  3154  3B52                     STR_65:	
  3155  3B52  347A               	retlw	122	;'z'
  3156  3B53  3469               	retlw	105	;'i'
  3157  3B54  3400               	retlw	0
  3158                           
  3159                           	psect	stringtext47
  3160  3B55                     __pstringtext47:	
  3161  3B55                     STR_105:	
  3162  3B55  346C               	retlw	108	;'l'
  3163  3B56  346E               	retlw	110	;'n'
  3164  3B57  3400               	retlw	0
  3165                           
  3166                           	psect	stringtext48
  3167  3B58                     __pstringtext48:	
  3168  3B58                     STR_110:	
  3169  3B58  347A               	retlw	122	;'z'
  3170  3B59  346E               	retlw	110	;'n'
  3171  3B5A  3400               	retlw	0
  3172                           
  3173                           	psect	stringtext49
  3174  3B5B                     __pstringtext49:	
  3175  3B5B                     STR_85:	
  3176  3B5B  346C               	retlw	108	;'l'
  3177  3B5C  346F               	retlw	111	;'o'
  3178  3B5D  3400               	retlw	0
  3179                           
  3180                           	psect	stringtext50
  3181  3B5E                     __pstringtext50:	
  3182  3B5E                     STR_90:	
  3183  3B5E  347A               	retlw	122	;'z'
  3184  3B5F  346F               	retlw	111	;'o'
  3185  3B60  3400               	retlw	0
  3186                           
  3187                           	psect	stringtext51
  3188  3B61                     __pstringtext51:	
  3189  3B61                     STR_125:	
  3190  3B61  346C               	retlw	108	;'l'
  3191  3B62  3475               	retlw	117	;'u'
  3192  3B63  3400               	retlw	0
  3193                           
  3194                           	psect	stringtext52
  3195  3B64                     __pstringtext52:	
  3196  3B64                     STR_130:	
  3197  3B64  347A               	retlw	122	;'z'
  3198  3B65  3475               	retlw	117	;'u'
  3199  3B66  3400               	retlw	0
  3200                           
  3201                           	psect	stringtext53
  3202  3B67                     __pstringtext53:	
  3203  3B67                     STR_153:	
  3204  3B67  346C               	retlw	108	;'l'
  3205  3B68  3478               	retlw	120	;'x'
  3206  3B69  3400               	retlw	0
  3207                           
  3208                           	psect	stringtext54
  3209  3B6A                     __pstringtext54:	
  3210  3B6A                     STR_162:	
  3211  3B6A  347A               	retlw	122	;'z'
  3212  3B6B  3478               	retlw	120	;'x'
  3213  3B6C  3400               	retlw	0
  3214                           
  3215                           	psect	stringtext55
  3216  0000                     __pstringtext55:	
  3217  3A26                     
  3218                           ; #config settings
  3219  0000                     
  3220                           	psect	cinit
  3221  0020                     start_initialization:	
  3222  0020                     __initialization:		;BIGRAM
  3223                           
  3224                           ; Initialize objects allocated to BANK3
  3225  0020  30CC               	movlw	low __pidataBANK3
  3226  0021  0084               	movwf	4
  3227  0022  30B2               	movlw	(high __pidataBANK3)| (0+128)
  3228  0023  0085               	movwf	5
  3229  0024  0023               	movlb	3	; select bank3
  3230  0025  0012               	moviw fsr0++
  3231  0026  00D7               	movwf	__pdataBANK3& (0+127)
  3232  0027  0012               	moviw fsr0++
  3233  0028  00D8               	movwf	(__pdataBANK3+1)& (0+127)
  3234  0029  0012               	moviw fsr0++
  3235  002A  00D9               	movwf	(__pdataBANK3+2)& (0+127)
  3236  002B  0012               	moviw fsr0++
  3237  002C  00DA               	movwf	(__pdataBANK3+3)& (0+127)
  3238  002D  0012               	moviw fsr0++
  3239  002E  00DB               	movwf	(__pdataBANK3+4)& (0+127)
  3240  002F  0012               	moviw fsr0++
  3241  0030  00DC               	movwf	(__pdataBANK3+5)& (0+127)
  3242  0031  0012               	moviw fsr0++
  3243  0032  00DD               	movwf	(__pdataBANK3+6)& (0+127)
  3244                           
  3245                           ; Clear objects allocated to BIGRAM
  3246  0033  3071               	movlw	low (0+10097)
  3247  0034  0084               	movwf	4
  3248  0035  3027               	movlw	high (0+10097)
  3249  0036  0085               	movwf	5
  3250  0037  307F               	movlw	127
  3251  0038  00FE               	movwf	btemp
  3252  0039  3000               	movlw	0
  3253  003A  00FF               	movwf	btemp+1
  3254  003B  31B3  2338  3180   	fcall	clear_ram0
  3255                           
  3256                           ; Clear objects allocated to COMMON
  3257  003E  01FC               	clrf	__pbssCOMMON& (0+127)
  3258                           
  3259                           ; Clear objects allocated to BANK3
  3260  003F  30A0               	movlw	low __pbssBANK3
  3261  0040  0084               	movwf	4
  3262  0041  3001               	movlw	high __pbssBANK3
  3263  0042  0085               	movwf	5
  3264  0043  3037               	movlw	55
  3265  0044  00FE               	movwf	btemp
  3266  0045  3000               	movlw	0
  3267  0046  00FF               	movwf	btemp+1
  3268  0047  31B3  2338  3180   	fcall	clear_ram0
  3269                           
  3270                           ; Clear objects allocated to BANK4
  3271  004A  3020               	movlw	low __pbssBANK4
  3272  004B  0084               	movwf	4
  3273  004C  3002               	movlw	high __pbssBANK4
  3274  004D  0085               	movwf	5
  3275  004E  3050               	movlw	80
  3276  004F  00FE               	movwf	btemp
  3277  0050  3000               	movlw	0
  3278  0051  00FF               	movwf	btemp+1
  3279  0052  31B3  2338         	fcall	clear_ram0
  3280  0054                     end_of_initialization:	
  3281                           ;End of C runtime variable initialization code
  3282                           
  3283  0054                     __end_of__initialization:	
  3284  0054  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3285  0055  0020               	movlb	0
  3286  0056  31A8  2804         	ljmp	_main	;jump to C main() function
  3287                           
  3288                           	psect	bssCOMMON
  3289  007C                     __pbssCOMMON:	
  3290  007C                     _toggleColor:	
  3291  007C                     	ds	1
  3292                           
  3293                           	psect	bssBANK3
  3294  01A0                     __pbssBANK3:	
  3295  01A0                     _cellVoltages:	
  3296  01A0                     	ds	10
  3297  01AA                     floorf@F524:	
  3298  01AA                     	ds	4
  3299  01AE                     ___fpclassifyf@F463:	
  3300  01AE                     	ds	4
  3301  01B2                     BQ76920@shuntResistorValue_mOhm:	
  3302  01B2                     	ds	4
  3303  01B6                     _shuntResistorValue_mOhm:	
  3304  01B6                     	ds	4
  3305  01BA                     _errno:	
  3306  01BA                     	ds	2
  3307  01BC                     _nout:	
  3308  01BC                     	ds	2
  3309  01BE                     _width:	
  3310  01BE                     	ds	2
  3311  01C0                     _prec:	
  3312  01C0                     	ds	2
  3313  01C2                     _flags:	
  3314  01C2                     	ds	2
  3315  01C4                     _maxCellTempDischarge:	
  3316  01C4                     	ds	2
  3317  01C6                     _maxCellTempCharge:	
  3318  01C6                     	ds	2
  3319  01C8                     _minCellTempDischarge:	
  3320  01C8                     	ds	2
  3321  01CA                     _minCellTempCharge:	
  3322  01CA                     	ds	2
  3323  01CC                     _adcOffset:	
  3324  01CC                     	ds	2
  3325  01CE                     _adcGain:	
  3326  01CE                     	ds	2
  3327  01D0                     BQ76920@protect2:	
  3328  01D0                     	ds	1
  3329  01D1                     BQ76920@protect1:	
  3330  01D1                     	ds	1
  3331  01D2                     myIsr@count:	
  3332  01D2                     	ds	1
  3333  01D3                     _tmr1_flag:	
  3334  01D3                     	ds	1
  3335  01D4                     _currState:	
  3336  01D4                     	ds	1
  3337  01D5                     _protect2:	
  3338  01D5                     	ds	1
  3339  01D6                     _protect1:	
  3340  01D6                     	ds	1
  3341                           
  3342                           	psect	dataBANK3
  3343  01D7                     __pdataBANK3:	
  3344  01D7                     stoa@F1174:	
  3345  01D7                     	ds	7
  3346                           
  3347                           	psect	bssBANK4
  3348  0220                     __pbssBANK4:	
  3349  0220                     _dbuf:	
  3350  0220                     	ds	80
  3351                           
  3352                           	psect	clrtext
  3353  3338                     clear_ram0:	
  3354                           ;	Called with FSR0 containing the base address, and
  3355                           ;	btemp/btemp+1 has the size to clear
  3356                           
  3357  3338  0064               	clrwdt	;clear the watchdog before getting into this loop
  3358  3339                     clrloop0:	
  3359  3339  0180               	clrf	0	;clear RAM location pointed to by FSR
  3360  333A  3101               	addfsr 0,1
  3361  333B  3001               	movlw	1
  3362  333C  02FE               	subwf	126,f
  3363  333D  3000               	movlw	0
  3364  333E  3BFF               	subwfb	127,f
  3365  333F  087F               	movf	127,w
  3366  3340  047E               	iorwf	126,w
  3367  3341  1903               	btfsc	3,2
  3368  3342  3400               	retlw	0	;all done for this memory range, return
  3369  3343  2B39               	goto	clrloop0	;have we reached the end yet?
  3370                           
  3371                           	psect	cstackBANK3
  3372  01DE                     __pcstackBANK3:	
  3373  01DE                     statemachine@success:	
  3374                           
  3375                           ; 1 bytes @ 0x0
  3376  01DE                     	ds	1
  3377  01DF                     ??_main:	
  3378                           
  3379                           ; 1 bytes @ 0x1
  3380  01DF                     	ds	1
  3381                           
  3382                           	psect	cstackBANK2
  3383  0120                     __pcstackBANK2:	
  3384  0120                     ??_vfpfcnvrt:	
  3385                           
  3386                           ; 1 bytes @ 0x0
  3387  0120                     	ds	12
  3388  012C                     vfpfcnvrt@cp:	
  3389                           
  3390                           ; 1 bytes @ 0xC
  3391  012C                     	ds	1
  3392  012D                     vfpfcnvrt@done:	
  3393                           
  3394                           ; 2 bytes @ 0xD
  3395  012D                     	ds	2
  3396  012F                     _vfpfcnvrt$1103:	
  3397                           
  3398                           ; 2 bytes @ 0xF
  3399  012F                     	ds	2
  3400  0131                     _vfpfcnvrt$1104:	
  3401                           
  3402                           ; 2 bytes @ 0x11
  3403  0131                     	ds	2
  3404  0133                     _vfpfcnvrt$1130:	
  3405                           
  3406                           ; 2 bytes @ 0x13
  3407  0133                     	ds	2
  3408  0135                     vfpfcnvrt@ct:	
  3409                           
  3410                           ; 3 bytes @ 0x15
  3411  0135                     	ds	3
  3412  0138                     vfpfcnvrt@f:	
  3413                           
  3414                           ; 4 bytes @ 0x18
  3415  0138                     	ds	4
  3416  013C                     vfpfcnvrt@ll:	
  3417                           
  3418                           ; 8 bytes @ 0x1C
  3419  013C                     	ds	8
  3420  0144                     vfpfcnvrt@vp:	
  3421                           
  3422                           ; 1 bytes @ 0x24
  3423  0144                     	ds	1
  3424  0145                     vfpfcnvrt@c:	
  3425                           
  3426                           ; 1 bytes @ 0x25
  3427  0145                     	ds	1
  3428  0146                     vfpfcnvrt@llu:	
  3429                           
  3430                           ; 8 bytes @ 0x26
  3431  0146                     	ds	8
  3432  014E                     ?_vsnprintf:	
  3433  014E                     vsnprintf@s:	
  3434                           ; 2 bytes @ 0x2E
  3435                           
  3436                           
  3437                           ; 2 bytes @ 0x2E
  3438  014E                     	ds	2
  3439  0150                     vsnprintf@n:	
  3440                           
  3441                           ; 2 bytes @ 0x30
  3442  0150                     	ds	2
  3443  0152                     vsnprintf@fmt:	
  3444                           
  3445                           ; 2 bytes @ 0x32
  3446  0152                     	ds	2
  3447  0154                     vsnprintf@ap:	
  3448                           
  3449                           ; 1 bytes @ 0x34
  3450  0154                     	ds	1
  3451  0155                     _vsnprintf$1732:	
  3452                           
  3453                           ; 2 bytes @ 0x35
  3454  0155                     	ds	2
  3455  0157                     vsnprintf@cnt:	
  3456                           
  3457                           ; 2 bytes @ 0x37
  3458  0157                     	ds	2
  3459  0159                     vsnprintf@f:	
  3460                           
  3461                           ; 6 bytes @ 0x39
  3462  0159                     	ds	6
  3463  015F                     ?_snprintf:	
  3464  015F                     snprintf@s:	
  3465                           ; 2 bytes @ 0x3F
  3466                           
  3467                           
  3468                           ; 2 bytes @ 0x3F
  3469  015F                     	ds	2
  3470  0161                     snprintf@n:	
  3471                           
  3472                           ; 2 bytes @ 0x41
  3473  0161                     	ds	2
  3474  0163                     snprintf@fmt:	
  3475                           
  3476                           ; 2 bytes @ 0x43
  3477  0163                     	ds	6
  3478  0169                     ??_snprintf:	
  3479                           
  3480                           ; 1 bytes @ 0x49
  3481  0169                     	ds	3
  3482  016C                     snprintf@ap:	
  3483                           
  3484                           ; 1 bytes @ 0x4C
  3485  016C                     	ds	1
  3486  016D                     ??_printotAFERegisters:	
  3487                           
  3488                           ; 1 bytes @ 0x4D
  3489  016D                     	ds	1
  3490  016E                     ??_statemachine:	
  3491                           
  3492                           ; 1 bytes @ 0x4E
  3493  016E                     	ds	2
  3494                           
  3495                           	psect	cstackBANK1
  3496  00A0                     __pcstackBANK1:	
  3497  00A0                     ?_efgtoa:	
  3498  00A0                     efgtoa@fp:	
  3499                           ; 2 bytes @ 0x0
  3500                           
  3501  00A0                     setShortCircuitProtection@scaler:	
  3502                           ; 2 bytes @ 0x0
  3503                           
  3504  00A0                     setOverCurrentDischargeProtection@scaler:	
  3505                           ; 4 bytes @ 0x0
  3506                           
  3507                           
  3508                           ; 4 bytes @ 0x0
  3509  00A0                     	ds	2
  3510  00A2                     efgtoa@f:	
  3511                           
  3512                           ; 4 bytes @ 0x2
  3513  00A2                     	ds	2
  3514  00A4                     _setShortCircuitProtection$1929:	
  3515  00A4                     _setOverCurrentDischargeProtection$1930:	
  3516                           ; 4 bytes @ 0x4
  3517                           
  3518                           
  3519                           ; 4 bytes @ 0x4
  3520  00A4                     	ds	2
  3521  00A6                     efgtoa@c:	
  3522                           
  3523                           ; 1 bytes @ 0x6
  3524  00A6                     	ds	1
  3525  00A7                     ??_efgtoa:	
  3526                           
  3527                           ; 1 bytes @ 0x7
  3528  00A7                     	ds	1
  3529  00A8                     setShortCircuitProtection@i:	
  3530  00A8                     setOverCurrentDischargeProtection@i:	
  3531                           ; 2 bytes @ 0x8
  3532                           
  3533                           
  3534                           ; 2 bytes @ 0x8
  3535  00A8                     	ds	2
  3536  00AA                     setShortCircuitProtection@i_851:	
  3537  00AA                     setOverCurrentDischargeProtection@i_860:	
  3538                           ; 2 bytes @ 0xA
  3539                           
  3540                           
  3541                           ; 2 bytes @ 0xA
  3542  00AA                     	ds	1
  3543  00AB                     efgtoa@ou:	
  3544                           
  3545                           ; 4 bytes @ 0xB
  3546  00AB                     	ds	4
  3547  00AF                     _efgtoa$1041:	
  3548                           
  3549                           ; 2 bytes @ 0xF
  3550  00AF                     	ds	2
  3551  00B1                     _efgtoa$1042:	
  3552                           
  3553                           ; 2 bytes @ 0x11
  3554  00B1                     	ds	2
  3555  00B3                     _efgtoa$1046:	
  3556                           
  3557                           ; 2 bytes @ 0x13
  3558  00B3                     	ds	2
  3559  00B5                     _efgtoa$1050:	
  3560                           
  3561                           ; 2 bytes @ 0x15
  3562  00B5                     	ds	2
  3563  00B7                     _efgtoa$1051:	
  3564                           
  3565                           ; 2 bytes @ 0x17
  3566  00B7                     	ds	2
  3567  00B9                     _efgtoa$1052:	
  3568                           
  3569                           ; 2 bytes @ 0x19
  3570  00B9                     	ds	2
  3571  00BB                     efgtoa@t:	
  3572                           
  3573                           ; 2 bytes @ 0x1B
  3574  00BB                     	ds	2
  3575  00BD                     efgtoa@pp:	
  3576                           
  3577                           ; 2 bytes @ 0x1D
  3578  00BD                     	ds	2
  3579  00BF                     efgtoa@m:	
  3580                           
  3581                           ; 2 bytes @ 0x1F
  3582  00BF                     	ds	2
  3583  00C1                     efgtoa@ne:	
  3584                           
  3585                           ; 2 bytes @ 0x21
  3586  00C1                     	ds	2
  3587  00C3                     efgtoa@d:	
  3588                           
  3589                           ; 2 bytes @ 0x23
  3590  00C3                     	ds	2
  3591  00C5                     efgtoa@sign:	
  3592                           
  3593                           ; 2 bytes @ 0x25
  3594  00C5                     	ds	2
  3595  00C7                     efgtoa@p:	
  3596                           
  3597                           ; 2 bytes @ 0x27
  3598  00C7                     	ds	2
  3599  00C9                     efgtoa@nmode:	
  3600                           
  3601                           ; 1 bytes @ 0x29
  3602  00C9                     	ds	1
  3603  00CA                     efgtoa@w:	
  3604                           
  3605                           ; 2 bytes @ 0x2A
  3606  00CA                     	ds	2
  3607  00CC                     efgtoa@mode:	
  3608                           
  3609                           ; 1 bytes @ 0x2C
  3610  00CC                     	ds	1
  3611  00CD                     efgtoa@h:	
  3612                           
  3613                           ; 4 bytes @ 0x2D
  3614  00CD                     	ds	4
  3615  00D1                     efgtoa@l:	
  3616                           
  3617                           ; 4 bytes @ 0x31
  3618  00D1                     	ds	4
  3619  00D5                     efgtoa@i:	
  3620                           
  3621                           ; 2 bytes @ 0x35
  3622  00D5                     	ds	2
  3623  00D7                     efgtoa@g:	
  3624                           
  3625                           ; 4 bytes @ 0x37
  3626  00D7                     	ds	4
  3627  00DB                     efgtoa@e:	
  3628                           
  3629                           ; 2 bytes @ 0x3B
  3630  00DB                     	ds	2
  3631  00DD                     efgtoa@n:	
  3632                           
  3633                           ; 2 bytes @ 0x3D
  3634  00DD                     	ds	2
  3635  00DF                     efgtoa@u:	
  3636                           
  3637                           ; 4 bytes @ 0x3F
  3638  00DF                     	ds	4
  3639  00E3                     ?_vfpfcnvrt:	
  3640  00E3                     vfpfcnvrt@fp:	
  3641                           ; 2 bytes @ 0x43
  3642                           
  3643                           
  3644                           ; 2 bytes @ 0x43
  3645  00E3                     	ds	2
  3646  00E5                     vfpfcnvrt@fmt:	
  3647                           
  3648                           ; 1 bytes @ 0x45
  3649  00E5                     	ds	1
  3650  00E6                     vfpfcnvrt@ap:	
  3651                           
  3652                           ; 1 bytes @ 0x46
  3653  00E6                     	ds	1
  3654  00E7                     ?_vfprintf:	
  3655  00E7                     vfprintf@fp:	
  3656                           ; 2 bytes @ 0x47
  3657                           
  3658                           
  3659                           ; 2 bytes @ 0x47
  3660  00E7                     	ds	2
  3661  00E9                     vfprintf@fmt:	
  3662                           
  3663                           ; 2 bytes @ 0x49
  3664  00E9                     	ds	2
  3665  00EB                     vfprintf@ap:	
  3666                           
  3667                           ; 1 bytes @ 0x4B
  3668  00EB                     	ds	1
  3669  00EC                     vfprintf@cfmt:	
  3670                           
  3671                           ; 2 bytes @ 0x4C
  3672  00EC                     	ds	2
  3673  00EE                     ??_vsnprintf:	
  3674                           
  3675                           ; 1 bytes @ 0x4E
  3676  00EE                     	ds	2
  3677                           
  3678                           	psect	cstackCOMMON
  3679  0070                     __pcstackCOMMON:	
  3680  0070                     ?_initClock:	
  3681  0070                     ?_init_GPIO:	
  3682                           ; 1 bytes @ 0x0
  3683                           
  3684  0070                     ?_init_I2C:	
  3685                           ; 1 bytes @ 0x0
  3686                           
  3687  0070                     ?_init_TMR1:	
  3688                           ; 1 bytes @ 0x0
  3689                           
  3690  0070                     ?_init_RGB:	
  3691                           ; 1 bytes @ 0x0
  3692                           
  3693  0070                     ?_statemachine:	
  3694                           ; 1 bytes @ 0x0
  3695                           
  3696  0070                     ?_RGB_AWAIT_AFE_CONN:	
  3697                           ; 1 bytes @ 0x0
  3698                           
  3699  0070                     ?_init_AFE:	
  3700                           ; 1 bytes @ 0x0
  3701                           
  3702  0070                     ?_printotAFERegisters:	
  3703                           ; 1 bytes @ 0x0
  3704                           
  3705  0070                     ?_internal_16:	
  3706                           ; 1 bytes @ 0x0
  3707                           
  3708  0070                     ?_putch:	
  3709                           ; 1 bytes @ 0x0
  3710                           
  3711  0070                     ?_myIsr:	
  3712                           ; 1 bytes @ 0x0
  3713                           
  3714  0070                     ??_myIsr:	
  3715                           ; 1 bytes @ 0x0
  3716                           
  3717  0070                     ?_main:	
  3718                           ; 1 bytes @ 0x0
  3719                           
  3720  0070                     ?_EUSART_Write:	
  3721                           ; 1 bytes @ 0x0
  3722                           
  3723  0070                     ?_send_I2C_startBit:	
  3724                           ; 1 bytes @ 0x0
  3725                           
  3726  0070                     ?_send_I2C_stopBit:	
  3727                           ; 1 bytes @ 0x0
  3728                           
  3729  0070                     ?_send_I2C_NACK:	
  3730                           ; 1 bytes @ 0x0
  3731                           
  3732  0070                     putch@c:	
  3733                           ; 1 bytes @ 0x0
  3734                           
  3735                           
  3736                           ; 1 bytes @ 0x0
  3737  0070                     	ds	1
  3738  0071                     ?___fleq:	
  3739  0071                     ??_initClock:	
  3740                           ; 1 bit 
  3741                           
  3742  0071                     ??_init_GPIO:	
  3743                           ; 1 bytes @ 0x1
  3744                           
  3745  0071                     ??_init_I2C:	
  3746                           ; 1 bytes @ 0x1
  3747                           
  3748  0071                     ??_init_TMR1:	
  3749                           ; 1 bytes @ 0x1
  3750                           
  3751  0071                     ??_init_RGB:	
  3752                           ; 1 bytes @ 0x1
  3753                           
  3754  0071                     ?_RGB_color:	
  3755                           ; 1 bytes @ 0x1
  3756                           
  3757  0071                     ??_internal_16:	
  3758                           ; 1 bytes @ 0x1
  3759                           
  3760  0071                     ?_setShuntResistorValue:	
  3761                           ; 1 bytes @ 0x1
  3762                           
  3763  0071                     ?_strcpy:	
  3764                           ; 1 bytes @ 0x1
  3765                           
  3766  0071                     ??_putch:	
  3767                           ; 1 bytes @ 0x1
  3768                           
  3769  0071                     ??_EUSART_Write:	
  3770                           ; 1 bytes @ 0x1
  3771                           
  3772  0071                     ?_send_I2C_data:	
  3773                           ; 1 bytes @ 0x1
  3774                           
  3775  0071                     ?_send_I2C_controlByte:	
  3776                           ; 1 bytes @ 0x1
  3777                           
  3778  0071                     ??_send_I2C_startBit:	
  3779                           ; 1 bytes @ 0x1
  3780                           
  3781  0071                     ??_send_I2C_stopBit:	
  3782                           ; 1 bytes @ 0x1
  3783                           
  3784  0071                     ??_send_I2C_NACK:	
  3785                           ; 1 bytes @ 0x1
  3786                           
  3787  0071                     ??___aodiv:	
  3788                           ; 1 bytes @ 0x1
  3789                           
  3790  0071                     ??___aomod:	
  3791                           ; 1 bytes @ 0x1
  3792                           
  3793  0071                     ??___lodiv:	
  3794                           ; 1 bytes @ 0x1
  3795                           
  3796  0071                     ??___lomod:	
  3797                           ; 1 bytes @ 0x1
  3798                           
  3799  0071                     ?_fputc:	
  3800                           ; 1 bytes @ 0x1
  3801                           
  3802  0071                     ?_strlen:	
  3803                           ; 2 bytes @ 0x1
  3804                           
  3805  0071                     ?___fpclassifyf:	
  3806                           ; 2 bytes @ 0x1
  3807                           
  3808  0071                     ?_isupper:	
  3809                           ; 2 bytes @ 0x1
  3810                           
  3811  0071                     ?_isalpha:	
  3812                           ; 2 bytes @ 0x1
  3813                           
  3814  0071                     ?_isdigit:	
  3815                           ; 2 bytes @ 0x1
  3816                           
  3817  0071                     ?_strncmp:	
  3818                           ; 2 bytes @ 0x1
  3819                           
  3820  0071                     ?__Umul8_16:	
  3821                           ; 2 bytes @ 0x1
  3822                           
  3823  0071                     ?_isspace:	
  3824                           ; 2 bytes @ 0x1
  3825                           
  3826  0071                     ?_islower:	
  3827                           ; 2 bytes @ 0x1
  3828                           
  3829  0071                     ?_read_I2C_data:	
  3830                           ; 2 bytes @ 0x1
  3831                           
  3832  0071                     ?___wmul:	
  3833                           ; 2 bytes @ 0x1
  3834                           
  3835  0071                     ?___awdiv:	
  3836                           ; 2 bytes @ 0x1
  3837                           
  3838  0071                     ?___awmod:	
  3839                           ; 2 bytes @ 0x1
  3840                           
  3841  0071                     ?_AFE_getSetCurrentSenseRes:	
  3842                           ; 2 bytes @ 0x1
  3843                           
  3844  0071                     ?___aldiv:	
  3845                           ; 4 bytes @ 0x1
  3846                           
  3847  0071                     ?___flneg:	
  3848                           ; 4 bytes @ 0x1
  3849                           
  3850  0071                     ?___fladd:	
  3851                           ; 4 bytes @ 0x1
  3852                           
  3853  0071                     ?___xxtofl:	
  3854                           ; 4 bytes @ 0x1
  3855                           
  3856  0071                     EUSART_Write@txData:	
  3857                           ; 4 bytes @ 0x1
  3858                           
  3859  0071                     __Umul8_16@multiplicand:	
  3860                           ; 1 bytes @ 0x1
  3861                           
  3862  0071                     send_I2C_data@databyte:	
  3863                           ; 1 bytes @ 0x1
  3864                           
  3865  0071                     send_I2C_controlByte@BlockAddress:	
  3866                           ; 2 bytes @ 0x1
  3867                           
  3868  0071                     RGB_color@color:	
  3869                           ; 2 bytes @ 0x1
  3870                           
  3871  0071                     ___wmul@multiplier:	
  3872                           ; 2 bytes @ 0x1
  3873                           
  3874  0071                     ___awdiv@divisor:	
  3875                           ; 2 bytes @ 0x1
  3876                           
  3877  0071                     ___awmod@divisor:	
  3878                           ; 2 bytes @ 0x1
  3879                           
  3880  0071                     isalpha@c:	
  3881                           ; 2 bytes @ 0x1
  3882                           
  3883  0071                     isdigit@c:	
  3884                           ; 2 bytes @ 0x1
  3885                           
  3886  0071                     isspace@c:	
  3887                           ; 2 bytes @ 0x1
  3888                           
  3889  0071                     isupper@c:	
  3890                           ; 2 bytes @ 0x1
  3891                           
  3892  0071                     fputc@c:	
  3893                           ; 2 bytes @ 0x1
  3894                           
  3895  0071                     strcpy@src:	
  3896                           ; 2 bytes @ 0x1
  3897                           
  3898  0071                     strlen@s:	
  3899                           ; 2 bytes @ 0x1
  3900                           
  3901  0071                     strncmp@_l:	
  3902                           ; 2 bytes @ 0x1
  3903                           
  3904  0071                     islower@c:	
  3905                           ; 2 bytes @ 0x1
  3906                           
  3907  0071                     setShuntResistorValue@res_mOhm:	
  3908                           ; 2 bytes @ 0x1
  3909                           
  3910  0071                     ___aldiv@divisor:	
  3911                           ; 4 bytes @ 0x1
  3912                           
  3913  0071                     ___fleq@ff1:	
  3914                           ; 4 bytes @ 0x1
  3915                           
  3916  0071                     ___flneg@f1:	
  3917                           ; 4 bytes @ 0x1
  3918                           
  3919  0071                     ___fladd@b:	
  3920                           ; 4 bytes @ 0x1
  3921                           
  3922  0071                     ___xxtofl@val:	
  3923                           ; 4 bytes @ 0x1
  3924                           
  3925  0071                     ___fpclassifyf@x:	
  3926                           ; 4 bytes @ 0x1
  3927                           
  3928                           
  3929                           ; 4 bytes @ 0x1
  3930  0071                     	ds	1
  3931  0072                     ?_EUSART_Write_Text:	
  3932  0072                     ___aodiv@counter:	
  3933                           ; 1 bytes @ 0x2
  3934                           
  3935  0072                     ___aomod@counter:	
  3936                           ; 1 bytes @ 0x2
  3937                           
  3938  0072                     ___lomod@counter:	
  3939                           ; 1 bytes @ 0x2
  3940                           
  3941  0072                     EUSART_Write_Text@text:	
  3942                           ; 1 bytes @ 0x2
  3943                           
  3944  0072                     ___lodiv@quotient:	
  3945                           ; 2 bytes @ 0x2
  3946                           
  3947                           
  3948                           ; 8 bytes @ 0x2
  3949  0072                     	ds	1
  3950  0073                     ??_RGB_AWAIT_AFE_CONN:	
  3951  0073                     ??_RGB_color:	
  3952                           ; 1 bytes @ 0x3
  3953                           
  3954  0073                     ??_strlen:	
  3955                           ; 1 bytes @ 0x3
  3956                           
  3957  0073                     ??_isupper:	
  3958                           ; 1 bytes @ 0x3
  3959                           
  3960  0073                     ??_strcpy:	
  3961                           ; 1 bytes @ 0x3
  3962                           
  3963  0073                     ??_isalpha:	
  3964                           ; 1 bytes @ 0x3
  3965                           
  3966  0073                     ??_isdigit:	
  3967                           ; 1 bytes @ 0x3
  3968                           
  3969  0073                     ??__Umul8_16:	
  3970                           ; 1 bytes @ 0x3
  3971                           
  3972  0073                     ??_isspace:	
  3973                           ; 1 bytes @ 0x3
  3974                           
  3975  0073                     ??_islower:	
  3976                           ; 1 bytes @ 0x3
  3977                           
  3978  0073                     ??_send_I2C_data:	
  3979                           ; 1 bytes @ 0x3
  3980                           
  3981  0073                     ??_read_I2C_data:	
  3982                           ; 1 bytes @ 0x3
  3983                           
  3984  0073                     ___aodiv@sign:	
  3985                           ; 1 bytes @ 0x3
  3986                           
  3987  0073                     ___aomod@sign:	
  3988                           ; 1 bytes @ 0x3
  3989                           
  3990  0073                     send_I2C_controlByte@RW_bit:	
  3991                           ; 1 bytes @ 0x3
  3992                           
  3993  0073                     ___wmul@multiplicand:	
  3994                           ; 2 bytes @ 0x3
  3995                           
  3996  0073                     ___awdiv@dividend:	
  3997                           ; 2 bytes @ 0x3
  3998                           
  3999  0073                     ___awmod@dividend:	
  4000                           ; 2 bytes @ 0x3
  4001                           
  4002  0073                     fputc@fp:	
  4003                           ; 2 bytes @ 0x3
  4004                           
  4005  0073                     strlen@a:	
  4006                           ; 2 bytes @ 0x3
  4007                           
  4008  0073                     strncmp@_r:	
  4009                           ; 2 bytes @ 0x3
  4010                           
  4011                           
  4012                           ; 2 bytes @ 0x3
  4013  0073                     	ds	1
  4014  0074                     ??_EUSART_Write_Text:	
  4015  0074                     ?_abs:	
  4016                           ; 1 bytes @ 0x4
  4017                           
  4018  0074                     abs@a:	
  4019                           ; 2 bytes @ 0x4
  4020                           
  4021  0074                     ___aodiv@quotient:	
  4022                           ; 2 bytes @ 0x4
  4023                           
  4024                           
  4025                           ; 8 bytes @ 0x4
  4026  0074                     	ds	1
  4027  0075                     ??_AFE_getSetCurrentSenseRes:	
  4028  0075                     ??_setShuntResistorValue:	
  4029                           ; 1 bytes @ 0x5
  4030                           
  4031  0075                     ??_fputc:	
  4032                           ; 1 bytes @ 0x5
  4033                           
  4034  0075                     ??___fpclassifyf:	
  4035                           ; 1 bytes @ 0x5
  4036                           
  4037  0075                     ??_send_I2C_controlByte:	
  4038                           ; 1 bytes @ 0x5
  4039                           
  4040  0075                     ?_I2C_writeRegister:	
  4041                           ; 1 bytes @ 0x5
  4042                           
  4043  0075                     ??___wmul:	
  4044                           ; 1 bytes @ 0x5
  4045                           
  4046  0075                     ??___awdiv:	
  4047                           ; 1 bytes @ 0x5
  4048                           
  4049  0075                     ??___awmod:	
  4050                           ; 1 bytes @ 0x5
  4051                           
  4052  0075                     ??___flneg:	
  4053                           ; 1 bytes @ 0x5
  4054                           
  4055  0075                     ??___xxtofl:	
  4056                           ; 1 bytes @ 0x5
  4057                           
  4058  0075                     ?_readRegister:	
  4059                           ; 1 bytes @ 0x5
  4060                           
  4061  0075                     _isspace$1597:	
  4062                           ; 2 bytes @ 0x5
  4063                           
  4064  0075                     EUSART_Write_Text@i:	
  4065                           ; 1 bytes @ 0x5
  4066                           
  4067  0075                     I2C_writeRegister@slaveAddress:	
  4068                           ; 2 bytes @ 0x5
  4069                           
  4070  0075                     readRegister@slaveAddress:	
  4071                           ; 2 bytes @ 0x5
  4072                           
  4073  0075                     ___wmul@product:	
  4074                           ; 2 bytes @ 0x5
  4075                           
  4076  0075                     strcpy@s:	
  4077                           ; 2 bytes @ 0x5
  4078                           
  4079  0075                     strncmp@n:	
  4080                           ; 2 bytes @ 0x5
  4081                           
  4082  0075                     __Umul8_16@product:	
  4083                           ; 2 bytes @ 0x5
  4084                           
  4085  0075                     ___aldiv@dividend:	
  4086                           ; 2 bytes @ 0x5
  4087                           
  4088  0075                     ___fleq@ff2:	
  4089                           ; 4 bytes @ 0x5
  4090                           
  4091  0075                     ___fladd@a:	
  4092                           ; 4 bytes @ 0x5
  4093                           
  4094                           
  4095                           ; 4 bytes @ 0x5
  4096  0075                     	ds	1
  4097  0076                     ??_abs:	
  4098  0076                     ___awdiv@counter:	
  4099                           ; 1 bytes @ 0x6
  4100                           
  4101  0076                     ___awmod@counter:	
  4102                           ; 1 bytes @ 0x6
  4103                           
  4104                           
  4105                           ; 1 bytes @ 0x6
  4106  0076                     	ds	1
  4107  0077                     ??_setTemperatureLimitsint:	
  4108  0077                     ??_strncmp:	
  4109                           ; 1 bytes @ 0x7
  4110                           
  4111  0077                     ?_tolower:	
  4112                           ; 1 bytes @ 0x7
  4113                           
  4114  0077                     ?_toupper:	
  4115                           ; 2 bytes @ 0x7
  4116                           
  4117  0077                     ?_atoi:	
  4118                           ; 2 bytes @ 0x7
  4119                           
  4120  0077                     ___awdiv@sign:	
  4121                           ; 2 bytes @ 0x7
  4122                           
  4123  0077                     ___awmod@sign:	
  4124                           ; 1 bytes @ 0x7
  4125                           
  4126  0077                     strcpy@d:	
  4127                           ; 1 bytes @ 0x7
  4128                           
  4129  0077                     I2C_writeRegister@regAddress:	
  4130                           ; 1 bytes @ 0x7
  4131                           
  4132  0077                     readRegister@regAddress:	
  4133                           ; 2 bytes @ 0x7
  4134                           
  4135  0077                     atoi@s:	
  4136                           ; 2 bytes @ 0x7
  4137                           
  4138  0077                     tolower@c:	
  4139                           ; 2 bytes @ 0x7
  4140                           
  4141  0077                     toupper@c:	
  4142                           ; 2 bytes @ 0x7
  4143                           
  4144  0077                     __Umul8_16@word_mpld:	
  4145                           ; 2 bytes @ 0x7
  4146                           
  4147                           
  4148                           ; 2 bytes @ 0x7
  4149  0077                     	ds	1
  4150  0078                     strcpy@dest:	
  4151  0078                     ___awdiv@quotient:	
  4152                           ; 1 bytes @ 0x8
  4153                           
  4154  0078                     strncmp@l:	
  4155                           ; 2 bytes @ 0x8
  4156                           
  4157                           
  4158                           ; 2 bytes @ 0x8
  4159  0078                     	ds	1
  4160  0079                     ??_readRegister:	
  4161  0079                     ??___aldiv:	
  4162                           ; 1 bytes @ 0x9
  4163                           
  4164  0079                     __Umul8_16@multiplier:	
  4165                           ; 1 bytes @ 0x9
  4166                           
  4167  0079                     I2C_writeRegister@data:	
  4168                           ; 1 bytes @ 0x9
  4169                           
  4170  0079                     readRegister@recievedData:	
  4171                           ; 2 bytes @ 0x9
  4172                           
  4173  0079                     _tolower$1680:	
  4174                           ; 2 bytes @ 0x9
  4175                           
  4176  0079                     _toupper$1695:	
  4177                           ; 2 bytes @ 0x9
  4178                           
  4179                           
  4180                           ; 2 bytes @ 0x9
  4181  0079                     	ds	1
  4182  007A                     ??_stoa:	
  4183  007A                     ??___flsub:	
  4184                           ; 1 bytes @ 0xA
  4185                           
  4186  007A                     ?_fputs:	
  4187                           ; 1 bytes @ 0xA
  4188                           
  4189  007A                     ___fltol@sign1:	
  4190                           ; 2 bytes @ 0xA
  4191                           
  4192  007A                     ___lodiv@counter:	
  4193                           ; 1 bytes @ 0xA
  4194                           
  4195  007A                     EUSART_Initialize@x:	
  4196                           ; 1 bytes @ 0xA
  4197                           
  4198  007A                     fputs@fp:	
  4199                           ; 2 bytes @ 0xA
  4200                           
  4201  007A                     strncmp@r:	
  4202                           ; 2 bytes @ 0xA
  4203                           
  4204                           
  4205                           ; 2 bytes @ 0xA
  4206  007A                     	ds	1
  4207  007B                     ??_init_AFE:	
  4208  007B                     ??_I2C_writeRegister:	
  4209                           ; 1 bytes @ 0xB
  4210                           
  4211  007B                     ___fltol@exp1:	
  4212                           ; 1 bytes @ 0xB
  4213                           
  4214                           
  4215                           ; 1 bytes @ 0xB
  4216  007B                     	ds	1
  4217                           
  4218                           	psect	cstackBANK0
  4219  0020                     __pcstackBANK0:	
  4220  0020                     ?_setTemperatureLimitsint:	
  4221  0020                     ??_fputs:	
  4222                           ; 1 bytes @ 0x0
  4223                           
  4224  0020                     ??_tolower:	
  4225                           ; 1 bytes @ 0x0
  4226                           
  4227  0020                     ??_toupper:	
  4228                           ; 1 bytes @ 0x0
  4229                           
  4230  0020                     ??_atoi:	
  4231                           ; 1 bytes @ 0x0
  4232                           
  4233  0020                     ??___fleq:	
  4234                           ; 1 bytes @ 0x0
  4235                           
  4236  0020                     ??___fladd:	
  4237                           ; 1 bytes @ 0x0
  4238                           
  4239  0020                     ?_beginAFEcommunication:	
  4240                           ; 1 bytes @ 0x0
  4241                           
  4242  0020                     ?_stoa:	
  4243                           ; 2 bytes @ 0x0
  4244                           
  4245  0020                     ?___aodiv:	
  4246                           ; 2 bytes @ 0x0
  4247                           
  4248  0020                     ?___aomod:	
  4249                           ; 8 bytes @ 0x0
  4250                           
  4251  0020                     ?___lodiv:	
  4252                           ; 8 bytes @ 0x0
  4253                           
  4254  0020                     ?___lomod:	
  4255                           ; 8 bytes @ 0x0
  4256                           
  4257  0020                     ___aldiv@counter:	
  4258                           ; 8 bytes @ 0x0
  4259                           
  4260  0020                     ___xxtofl@sign:	
  4261                           ; 1 bytes @ 0x0
  4262                           
  4263  0020                     setTemperatureLimitsint@minDischarge_degC:	
  4264                           ; 1 bytes @ 0x0
  4265                           
  4266  0020                     stoa@fp:	
  4267                           ; 2 bytes @ 0x0
  4268                           
  4269  0020                     ___fpclassifyf@e:	
  4270                           ; 2 bytes @ 0x0
  4271                           
  4272  0020                     ___aodiv@divisor:	
  4273                           ; 2 bytes @ 0x0
  4274                           
  4275  0020                     ___aomod@divisor:	
  4276                           ; 8 bytes @ 0x0
  4277                           
  4278  0020                     ___lodiv@divisor:	
  4279                           ; 8 bytes @ 0x0
  4280                           
  4281  0020                     ___lomod@divisor:	
  4282                           ; 8 bytes @ 0x0
  4283                           
  4284                           
  4285                           ; 8 bytes @ 0x0
  4286  0020                     	ds	1
  4287  0021                     ___aldiv@sign:	
  4288  0021                     ___xxtofl@exp:	
  4289                           ; 1 bytes @ 0x1
  4290                           
  4291                           
  4292                           ; 1 bytes @ 0x1
  4293  0021                     	ds	1
  4294  0022                     ??_beginAFEcommunication:	
  4295  0022                     stoa@s:	
  4296                           ; 1 bytes @ 0x2
  4297                           
  4298  0022                     fputs@c:	
  4299                           ; 1 bytes @ 0x2
  4300                           
  4301  0022                     setTemperatureLimitsint@maxDischarge_degC:	
  4302                           ; 1 bytes @ 0x2
  4303                           
  4304  0022                     ___aldiv@quotient:	
  4305                           ; 2 bytes @ 0x2
  4306                           
  4307  0022                     ___xxtofl@arg:	
  4308                           ; 4 bytes @ 0x2
  4309                           
  4310  0022                     ___fpclassifyf@u:	
  4311                           ; 4 bytes @ 0x2
  4312                           
  4313                           
  4314                           ; 4 bytes @ 0x2
  4315  0022                     	ds	1
  4316  0023                     fputs@i:	
  4317  0023                     stoa@nuls:	
  4318                           ; 2 bytes @ 0x3
  4319                           
  4320                           
  4321                           ; 7 bytes @ 0x3
  4322  0023                     	ds	1
  4323  0024                     setTemperatureLimitsint@minCharge_degC:	
  4324  0024                     atoi@neg:	
  4325                           ; 2 bytes @ 0x4
  4326                           
  4327                           
  4328                           ; 2 bytes @ 0x4
  4329  0024                     	ds	1
  4330  0025                     fputs@s:	
  4331                           
  4332                           ; 1 bytes @ 0x5
  4333  0025                     	ds	1
  4334  0026                     ?_EUSART_Initialize:	
  4335  0026                     ?_pad:	
  4336                           ; 1 bytes @ 0x6
  4337                           
  4338  0026                     ?___flmul:	
  4339                           ; 2 bytes @ 0x6
  4340                           
  4341  0026                     setTemperatureLimitsint@maxCharge_degC:	
  4342                           ; 4 bytes @ 0x6
  4343                           
  4344  0026                     pad@fp:	
  4345                           ; 2 bytes @ 0x6
  4346                           
  4347  0026                     _atoi$1557:	
  4348                           ; 2 bytes @ 0x6
  4349                           
  4350  0026                     EUSART_Initialize@baudrate:	
  4351                           ; 2 bytes @ 0x6
  4352                           
  4353  0026                     ___flmul@b:	
  4354                           ; 4 bytes @ 0x6
  4355                           
  4356                           
  4357                           ; 4 bytes @ 0x6
  4358  0026                     	ds	2
  4359  0028                     pad@buf:	
  4360  0028                     ___fladd@signs:	
  4361                           ; 1 bytes @ 0x8
  4362                           
  4363  0028                     _atoi$1559:	
  4364                           ; 1 bytes @ 0x8
  4365                           
  4366  0028                     ___aodiv@dividend:	
  4367                           ; 2 bytes @ 0x8
  4368                           
  4369  0028                     ___aomod@dividend:	
  4370                           ; 8 bytes @ 0x8
  4371                           
  4372  0028                     ___lodiv@dividend:	
  4373                           ; 8 bytes @ 0x8
  4374                           
  4375  0028                     ___lomod@dividend:	
  4376                           ; 8 bytes @ 0x8
  4377                           
  4378                           
  4379                           ; 8 bytes @ 0x8
  4380  0028                     	ds	1
  4381  0029                     ___fladd@aexp:	
  4382  0029                     pad@p:	
  4383                           ; 1 bytes @ 0x9
  4384                           
  4385                           
  4386                           ; 2 bytes @ 0x9
  4387  0029                     	ds	1
  4388  002A                     ??_EUSART_Initialize:	
  4389  002A                     ___fladd@bexp:	
  4390                           ; 1 bytes @ 0xA
  4391                           
  4392  002A                     _atoi$1558:	
  4393                           ; 1 bytes @ 0xA
  4394                           
  4395  002A                     stoa@i:	
  4396                           ; 1 bytes @ 0xA
  4397                           
  4398  002A                     ___flmul@a:	
  4399                           ; 2 bytes @ 0xA
  4400                           
  4401                           
  4402                           ; 4 bytes @ 0xA
  4403  002A                     	ds	1
  4404  002B                     ??_pad:	
  4405  002B                     ___fladd@grs:	
  4406                           ; 1 bytes @ 0xB
  4407                           
  4408  002B                     beginAFEcommunication@commSuccess:	
  4409                           ; 1 bytes @ 0xB
  4410                           
  4411  002B                     atoi@n:	
  4412                           ; 2 bytes @ 0xB
  4413                           
  4414                           
  4415                           ; 2 bytes @ 0xB
  4416  002B                     	ds	1
  4417  002C                     pad@i:	
  4418  002C                     stoa@w:	
  4419                           ; 2 bytes @ 0xC
  4420                           
  4421                           
  4422                           ; 2 bytes @ 0xC
  4423  002C                     	ds	1
  4424  002D                     beginAFEcommunication@i:	
  4425                           
  4426                           ; 2 bytes @ 0xD
  4427  002D                     	ds	1
  4428  002E                     ??___flmul:	
  4429  002E                     pad@w:	
  4430                           ; 1 bytes @ 0xE
  4431                           
  4432  002E                     stoa@cp:	
  4433                           ; 2 bytes @ 0xE
  4434                           
  4435                           
  4436                           ; 2 bytes @ 0xE
  4437  002E                     	ds	2
  4438  0030                     ?_ctoa:	
  4439  0030                     ?_dtoa:	
  4440                           ; 2 bytes @ 0x10
  4441                           
  4442  0030                     ?_otoa:	
  4443                           ; 2 bytes @ 0x10
  4444                           
  4445  0030                     ?_utoa:	
  4446                           ; 2 bytes @ 0x10
  4447                           
  4448  0030                     ?_xtoa:	
  4449                           ; 2 bytes @ 0x10
  4450                           
  4451  0030                     ctoa@fp:	
  4452                           ; 2 bytes @ 0x10
  4453                           
  4454  0030                     dtoa@fp:	
  4455                           ; 2 bytes @ 0x10
  4456                           
  4457  0030                     otoa@fp:	
  4458                           ; 2 bytes @ 0x10
  4459                           
  4460  0030                     stoa@p:	
  4461                           ; 2 bytes @ 0x10
  4462                           
  4463  0030                     utoa@fp:	
  4464                           ; 2 bytes @ 0x10
  4465                           
  4466  0030                     xtoa@fp:	
  4467                           ; 2 bytes @ 0x10
  4468                           
  4469                           
  4470                           ; 2 bytes @ 0x10
  4471  0030                     	ds	2
  4472  0032                     ctoa@c:	
  4473  0032                     stoa@l:	
  4474                           ; 1 bytes @ 0x12
  4475                           
  4476  0032                     dtoa@d:	
  4477                           ; 2 bytes @ 0x12
  4478                           
  4479  0032                     otoa@d:	
  4480                           ; 8 bytes @ 0x12
  4481                           
  4482  0032                     utoa@d:	
  4483                           ; 8 bytes @ 0x12
  4484                           
  4485  0032                     xtoa@d:	
  4486                           ; 8 bytes @ 0x12
  4487                           
  4488                           
  4489                           ; 8 bytes @ 0x12
  4490  0032                     	ds	1
  4491  0033                     ??_ctoa:	
  4492  0033                     ___flmul@sign:	
  4493                           ; 1 bytes @ 0x13
  4494                           
  4495                           
  4496                           ; 1 bytes @ 0x13
  4497  0033                     	ds	1
  4498  0034                     ctoa@w:	
  4499  0034                     ___flmul@grs:	
  4500                           ; 2 bytes @ 0x14
  4501                           
  4502                           
  4503                           ; 4 bytes @ 0x14
  4504  0034                     	ds	4
  4505  0038                     ___flmul@aexp:	
  4506                           
  4507                           ; 1 bytes @ 0x18
  4508  0038                     	ds	1
  4509  0039                     ___flmul@bexp:	
  4510                           
  4511                           ; 1 bytes @ 0x19
  4512  0039                     	ds	1
  4513  003A                     ??_dtoa:	
  4514  003A                     ??_otoa:	
  4515                           ; 1 bytes @ 0x1A
  4516                           
  4517  003A                     ??_utoa:	
  4518                           ; 1 bytes @ 0x1A
  4519                           
  4520  003A                     xtoa@x:	
  4521                           ; 1 bytes @ 0x1A
  4522                           
  4523  003A                     ___flmul@prod:	
  4524                           ; 1 bytes @ 0x1A
  4525                           
  4526                           
  4527                           ; 4 bytes @ 0x1A
  4528  003A                     	ds	1
  4529  003B                     ??_xtoa:	
  4530  003B                     utoa@p:	
  4531                           ; 1 bytes @ 0x1B
  4532                           
  4533                           
  4534                           ; 2 bytes @ 0x1B
  4535  003B                     	ds	2
  4536  003D                     _dtoa$1018:	
  4537  003D                     utoa@w:	
  4538                           ; 2 bytes @ 0x1D
  4539                           
  4540                           
  4541                           ; 2 bytes @ 0x1D
  4542  003D                     	ds	1
  4543  003E                     ___flmul@temp:	
  4544                           
  4545                           ; 2 bytes @ 0x1E
  4546  003E                     	ds	1
  4547  003F                     dtoa@p:	
  4548  003F                     utoa@n:	
  4549                           ; 2 bytes @ 0x1F
  4550                           
  4551                           
  4552                           ; 8 bytes @ 0x1F
  4553  003F                     	ds	1
  4554  0040                     ?___flsub:	
  4555  0040                     ?___fldiv:	
  4556                           ; 4 bytes @ 0x20
  4557                           
  4558  0040                     ___flsub@a:	
  4559                           ; 4 bytes @ 0x20
  4560                           
  4561  0040                     ___fldiv@a:	
  4562                           ; 4 bytes @ 0x20
  4563                           
  4564                           
  4565                           ; 4 bytes @ 0x20
  4566  0040                     	ds	1
  4567  0041                     dtoa@w:	
  4568                           
  4569                           ; 2 bytes @ 0x21
  4570  0041                     	ds	1
  4571  0042                     otoa@p:	
  4572                           
  4573                           ; 2 bytes @ 0x22
  4574  0042                     	ds	1
  4575  0043                     dtoa@s:	
  4576  0043                     _xtoa$1088:	
  4577                           ; 2 bytes @ 0x23
  4578                           
  4579                           
  4580                           ; 2 bytes @ 0x23
  4581  0043                     	ds	1
  4582  0044                     otoa@t:	
  4583  0044                     ___flsub@b:	
  4584                           ; 2 bytes @ 0x24
  4585                           
  4586  0044                     ___fldiv@b:	
  4587                           ; 4 bytes @ 0x24
  4588                           
  4589                           
  4590                           ; 4 bytes @ 0x24
  4591  0044                     	ds	1
  4592  0045                     _xtoa$1089:	
  4593  0045                     dtoa@n:	
  4594                           ; 2 bytes @ 0x25
  4595                           
  4596                           
  4597                           ; 8 bytes @ 0x25
  4598  0045                     	ds	1
  4599  0046                     otoa@w:	
  4600                           
  4601                           ; 2 bytes @ 0x26
  4602  0046                     	ds	1
  4603  0047                     utoa@i:	
  4604  0047                     xtoa@p:	
  4605                           ; 2 bytes @ 0x27
  4606                           
  4607                           
  4608                           ; 2 bytes @ 0x27
  4609  0047                     	ds	1
  4610  0048                     ??___fldiv:	
  4611  0048                     otoa@n:	
  4612                           ; 1 bytes @ 0x28
  4613                           
  4614                           
  4615                           ; 8 bytes @ 0x28
  4616  0048                     	ds	1
  4617  0049                     xtoa@w:	
  4618                           
  4619                           ; 2 bytes @ 0x29
  4620  0049                     	ds	2
  4621  004B                     xtoa@n:	
  4622                           
  4623                           ; 8 bytes @ 0x2B
  4624  004B                     	ds	2
  4625  004D                     dtoa@i:	
  4626  004D                     ___fldiv@rem:	
  4627                           ; 2 bytes @ 0x2D
  4628                           
  4629                           
  4630                           ; 4 bytes @ 0x2D
  4631  004D                     	ds	3
  4632  0050                     otoa@i:	
  4633                           
  4634                           ; 2 bytes @ 0x30
  4635  0050                     	ds	1
  4636  0051                     ___fldiv@sign:	
  4637                           
  4638                           ; 1 bytes @ 0x31
  4639  0051                     	ds	1
  4640  0052                     ___fldiv@new_exp:	
  4641                           
  4642                           ; 2 bytes @ 0x32
  4643  0052                     	ds	1
  4644  0053                     xtoa@i:	
  4645                           
  4646                           ; 2 bytes @ 0x33
  4647  0053                     	ds	1
  4648  0054                     ___fldiv@grs:	
  4649                           
  4650                           ; 4 bytes @ 0x34
  4651  0054                     	ds	1
  4652  0055                     xtoa@c:	
  4653                           
  4654                           ; 2 bytes @ 0x35
  4655  0055                     	ds	3
  4656  0058                     ___fldiv@bexp:	
  4657                           
  4658                           ; 1 bytes @ 0x38
  4659  0058                     	ds	1
  4660  0059                     ___fldiv@aexp:	
  4661                           
  4662                           ; 1 bytes @ 0x39
  4663  0059                     	ds	1
  4664  005A                     ?___flge:	
  4665  005A                     ?_floorf:	
  4666                           ; 1 bit 
  4667                           
  4668  005A                     ?___fltol:	
  4669                           ; 4 bytes @ 0x3A
  4670                           
  4671  005A                     ___flge@ff1:	
  4672                           ; 4 bytes @ 0x3A
  4673                           
  4674  005A                     ___fltol@f1:	
  4675                           ; 4 bytes @ 0x3A
  4676                           
  4677  005A                     floorf@x:	
  4678                           ; 4 bytes @ 0x3A
  4679                           
  4680                           
  4681                           ; 4 bytes @ 0x3A
  4682  005A                     	ds	4
  4683  005E                     ??_floorf:	
  4684  005E                     ??___fltol:	
  4685                           ; 1 bytes @ 0x3E
  4686                           
  4687  005E                     ___flge@ff2:	
  4688                           ; 1 bytes @ 0x3E
  4689                           
  4690                           
  4691                           ; 4 bytes @ 0x3E
  4692  005E                     	ds	4
  4693  0062                     ??___flge:	
  4694                           
  4695                           ; 1 bytes @ 0x42
  4696  0062                     	ds	1
  4697  0063                     ?_AFE_getSetShortCircuitCurrent:	
  4698  0063                     ?_AFE_getOverCurrentDischargeCurrent:	
  4699                           ; 4 bytes @ 0x43
  4700                           
  4701                           
  4702                           ; 4 bytes @ 0x43
  4703  0063                     	ds	1
  4704  0064                     floorf@m:	
  4705                           
  4706                           ; 4 bytes @ 0x44
  4707  0064                     	ds	2
  4708  0066                     ?_setShortCircuitProtection:	
  4709  0066                     ?_setOverCurrentDischargeProtection:	
  4710                           ; 1 bytes @ 0x46
  4711                           
  4712  0066                     setShortCircuitProtection@current_mA:	
  4713                           ; 1 bytes @ 0x46
  4714                           
  4715  0066                     setOverCurrentDischargeProtection@current_mA:	
  4716                           ; 4 bytes @ 0x46
  4717                           
  4718                           
  4719                           ; 4 bytes @ 0x46
  4720  0066                     	ds	1
  4721  0067                     ??_AFE_getSetShortCircuitCurrent:	
  4722  0067                     ??_AFE_getOverCurrentDischargeCurrent:	
  4723                           ; 1 bytes @ 0x47
  4724                           
  4725                           
  4726                           ; 1 bytes @ 0x47
  4727  0067                     	ds	1
  4728  0068                     floorf@e:	
  4729                           
  4730                           ; 2 bytes @ 0x48
  4731  0068                     	ds	2
  4732  006A                     setShortCircuitProtection@delay_us:	
  4733  006A                     setOverCurrentDischargeProtection@delay_ms:	
  4734                           ; 2 bytes @ 0x4A
  4735                           
  4736  006A                     floorf@u:	
  4737                           ; 2 bytes @ 0x4A
  4738                           
  4739                           
  4740                           ; 4 bytes @ 0x4A
  4741  006A                     	ds	2
  4742  006C                     ??_setShortCircuitProtection:	
  4743  006C                     ??_setOverCurrentDischargeProtection:	
  4744                           ; 1 bytes @ 0x4C
  4745                           
  4746                           
  4747                           ; 1 bytes @ 0x4C
  4748  006C                     	ds	2
  4749  006E                     ??_vfprintf:	
  4750                           
  4751                           ; 1 bytes @ 0x4E
  4752  006E                     	ds	2
  4753                           
  4754                           	psect	maintext
  4755  2804                     __pmaintext:	
  4756 ;;
  4757 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4758 ;;
  4759 ;; *************** function _main *****************
  4760 ;; Defined at:
  4761 ;;		line 75 in file "main.c"
  4762 ;; Parameters:    Size  Location     Type
  4763 ;;		None
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;		None
  4766 ;; Return value:  Size  Location     Type
  4767 ;;                  1    wreg      void 
  4768 ;; Registers used:
  4769 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4770 ;; Tracked objects:
  4771 ;;		On entry : B1F/0
  4772 ;;		On exit  : 0/0
  4773 ;;		Unchanged: 0/0
  4774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4777 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4778 ;;      Totals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4779 ;;Total ram usage:        1 bytes
  4780 ;; Hardware stack levels required when called:   12
  4781 ;; This function calls:
  4782 ;;		_EUSART_Initialize
  4783 ;;		_initClock
  4784 ;;		_init_GPIO
  4785 ;;		_init_I2C
  4786 ;;		_init_RGB
  4787 ;;		_init_TMR1
  4788 ;;		_statemachine
  4789 ;; This function is called by:
  4790 ;;		Startup code after reset
  4791 ;; This function uses a non-reentrant model
  4792 ;;
  4793                           
  4794                           
  4795                           ;psect for function _main
  4796  2804                     _main:	
  4797                           
  4798                           ;main.c: 78:     initClock();
  4799                           
  4800                           ;incstack = 0
  4801                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4802  2804  31A8  2001  31A8   	fcall	_initClock
  4803                           
  4804                           ;main.c: 79:     init_GPIO();
  4805  2807  3198  2006  31A8   	fcall	_init_GPIO
  4806                           
  4807                           ;main.c: 80:     init_I2C();
  4808  280A  31B3  2344  31A8   	fcall	_init_I2C
  4809                           
  4810                           ;main.c: 81:     EUSART_Initialize(9600);
  4811  280D  3000               	movlw	0
  4812  280E  0020               	movlb	0	; select bank0
  4813  280F  00A9               	movwf	EUSART_Initialize@baudrate+3
  4814  2810  3000               	movlw	0
  4815  2811  00A8               	movwf	EUSART_Initialize@baudrate+2
  4816  2812  3025               	movlw	37
  4817  2813  00A7               	movwf	EUSART_Initialize@baudrate+1
  4818  2814  3080               	movlw	128
  4819  2815  00A6               	movwf	EUSART_Initialize@baudrate
  4820  2816  31AE  26A4  31A8   	fcall	_EUSART_Initialize
  4821                           
  4822                           ;main.c: 82:     init_TMR1();
  4823  2819  31B3  232D  31A8   	fcall	_init_TMR1
  4824                           
  4825                           ;main.c: 83:     init_RGB();
  4826  281C  3198  2001  31A8   	fcall	_init_RGB
  4827  281F                     l8402:	
  4828                           
  4829                           ;main.c: 87:         statemachine();
  4830  281F  3186  26D5  31A8   	fcall	_statemachine
  4831                           
  4832                           ;main.c: 89:         _delay((unsigned long)((10)*(16000000/4000.0)));
  4833  2822  3034               	movlw	52
  4834  2823  0023               	movlb	3	; select bank3
  4835  2824  00DF               	movwf	??_main^(0+384)
  4836  2825  30F1               	movlw	241
  4837  2826                     u11907:	
  4838  2826  0B89               	decfsz	9,f
  4839  2827  2826               	goto	u11907
  4840  2828  0BDF               	decfsz	??_main^(0+384),f
  4841  2829  2826               	goto	u11907
  4842  282A  3200               	nop2
  4843  282B  281F               	goto	l8402
  4844  282C                     __end_of_main:	
  4845                           
  4846                           	psect	text1
  4847  06D5                     __ptext1:	
  4848 ;; *************** function _statemachine *****************
  4849 ;; Defined at:
  4850 ;;		line 95 in file "main.c"
  4851 ;; Parameters:    Size  Location     Type
  4852 ;;		None
  4853 ;; Auto vars:     Size  Location     Type
  4854 ;;  success         1    0[BANK3 ] unsigned char 
  4855 ;; Return value:  Size  Location     Type
  4856 ;;                  1    wreg      void 
  4857 ;; Registers used:
  4858 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4859 ;; Tracked objects:
  4860 ;;		On entry : 0/0
  4861 ;;		On exit  : 0/0
  4862 ;;		Unchanged: 0/0
  4863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4865 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4866 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4867 ;;      Totals:         0       0       0       2       1       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4868 ;;Total ram usage:        3 bytes
  4869 ;; Hardware stack levels used:    1
  4870 ;; Hardware stack levels required when called:   11
  4871 ;; This function calls:
  4872 ;;		_AFE_getOverCurrentDischargeCurrent
  4873 ;;		_AFE_getSetCurrentSenseRes
  4874 ;;		_AFE_getSetShortCircuitCurrent
  4875 ;;		_EUSART_Write_Text
  4876 ;;		_RGB_AWAIT_AFE_CONN
  4877 ;;		_RGB_color
  4878 ;;		_beginAFEcommunication
  4879 ;;		_init_AFE
  4880 ;;		_printotAFERegisters
  4881 ;;		_snprintf
  4882 ;; This function is called by:
  4883 ;;		_main
  4884 ;; This function uses a non-reentrant model
  4885 ;;
  4886                           
  4887                           
  4888                           ;psect for function _statemachine
  4889  06D5                     _statemachine:	
  4890                           
  4891                           ;main.c: 97:     switch (currState) {
  4892                           
  4893                           ;incstack = 0
  4894                           ; Regs used in _statemachine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4895  06D5  2FE8               	goto	l8384
  4896  06D6                     l8326:	
  4897                           
  4898                           ;main.c: 100:             if (tmr1_flag) {
  4899  06D6  0023               	movlb	3	; select bank3
  4900  06D7  0853               	movf	_tmr1_flag^(0+384),w	;volatile
  4901  06D8  1903               	btfsc	3,2
  4902  06D9  0008               	return
  4903                           
  4904                           ;main.c: 101:                 tmr1_flag = 0;
  4905  06DA  01D3               	clrf	_tmr1_flag^(0+384)	;volatile
  4906                           
  4907                           ;main.c: 102:                 RGB_AWAIT_AFE_CONN();
  4908  06DB  31B4  24F9  3186   	fcall	_RGB_AWAIT_AFE_CONN
  4909                           
  4910                           ;main.c: 103:                 uint8_t success = beginAFEcommunication();
  4911  06DE  31AF  274C  3186   	fcall	_beginAFEcommunication
  4912  06E1  0020               	movlb	0	; select bank0
  4913  06E2  0820               	movf	?_beginAFEcommunication,w
  4914  06E3  0022               	movlb	2	; select bank2
  4915  06E4  00EE               	movwf	??_statemachine^(0+256)
  4916  06E5  086E               	movf	??_statemachine^(0+256),w
  4917  06E6  0023               	movlb	3	; select bank3
  4918  06E7  00DE               	movwf	statemachine@success^(0+384)
  4919                           
  4920                           ;main.c: 106:                 EUSART_Write_Text("Attempting to communicate with AFE...\n
      +                          \r");
  4921  06E8  30A0               	movlw	low (STR_1| (0+32768))
  4922  06E9  00F2               	movwf	EUSART_Write_Text@text
  4923  06EA  30B9               	movlw	high (STR_1| (0+32768))
  4924  06EB  00F3               	movwf	EUSART_Write_Text@text+1
  4925  06EC  31B3  23EF  3186   	fcall	_EUSART_Write_Text
  4926                           
  4927                           ;main.c: 108:                 if (success) {
  4928  06EF  0023               	movlb	3	; select bank3
  4929  06F0  085E               	movf	statemachine@success^(0+384),w
  4930  06F1  1903               	btfsc	3,2
  4931  06F2  0008               	return
  4932                           
  4933                           ;main.c: 109:                     T1CONbits.TMR1ON = 0;
  4934  06F3  0020               	movlb	0	; select bank0
  4935  06F4  1018               	bcf	24,0	;volatile
  4936                           
  4937                           ;main.c: 110:                     PIE1bits.TMR1IE = 0;
  4938  06F5  0021               	movlb	1	; select bank1
  4939  06F6  1011               	bcf	17,0	;volatile
  4940                           
  4941                           ;main.c: 111:                     RGB_color(0);
  4942  06F7  3000               	movlw	0
  4943  06F8  00F1               	movwf	RGB_color@color
  4944  06F9  00F2               	movwf	RGB_color@color+1
  4945  06FA  31B4  24D8  3186   	fcall	_RGB_color
  4946                           
  4947                           ;main.c: 112:                     tmr1_flag = 0;
  4948  06FD  0023               	movlb	3	; select bank3
  4949  06FE  01D3               	clrf	_tmr1_flag^(0+384)	;volatile
  4950                           
  4951                           ;main.c: 115:                     _delay((unsigned long)((5)*(16000000/4000.0)));
  4952  06FF  301A               	movlw	26
  4953  0700  0022               	movlb	2	; select bank2
  4954  0701  00EE               	movwf	??_statemachine^(0+256)
  4955  0702  30F8               	movlw	248
  4956  0703                     u11917:	
  4957  0703  0B89               	decfsz	9,f
  4958  0704  2F03               	goto	u11917
  4959  0705  0BEE               	decfsz	??_statemachine^(0+256),f
  4960  0706  2F03               	goto	u11917
  4961  0707  0000               	nop
  4962                           
  4963                           ;main.c: 116:                     EUSART_Write_Text("Communication with BQ76920 AFE esta
      +                          blished!\n\r");
  4964  0708  3070               	movlw	low (STR_2| (0+32768))
  4965  0709  00F2               	movwf	EUSART_Write_Text@text
  4966  070A  30B8               	movlw	high (STR_2| (0+32768))
  4967  070B  00F3               	movwf	EUSART_Write_Text@text+1
  4968  070C  31B3  23EF  3186   	fcall	_EUSART_Write_Text
  4969                           
  4970                           ;main.c: 117:                     snprintf(messageBuffer, 127, "Obtained adcOffset = %i 
      +                          and adcGain = %i\n\r", adcOffset, adcGain);
  4971  070F  3071               	movlw	113
  4972  0710  0022               	movlb	2	; select bank2
  4973  0711  00DF               	movwf	snprintf@s^(0+256)
  4974  0712  3027               	movlw	39
  4975  0713  00E0               	movwf	(snprintf@s^(0+256)+1)
  4976  0714  307F               	movlw	127
  4977  0715  00E1               	movwf	snprintf@n^(0+256)
  4978  0716  3000               	movlw	0
  4979  0717  00E2               	movwf	(snprintf@n^(0+256)+1)
  4980  0718  30F7               	movlw	low (STR_3| (0+32768))
  4981  0719  00E3               	movwf	snprintf@fmt^(0+256)
  4982  071A  30B8               	movlw	high (STR_3| (0+32768))
  4983  071B  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  4984  071C  0023               	movlb	3	; select bank3
  4985  071D  084D               	movf	(_adcOffset+1)^(0+384),w
  4986  071E  0022               	movlb	2	; select bank2
  4987  071F  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  4988  0720  0023               	movlb	3	; select bank3
  4989  0721  084C               	movf	_adcOffset^(0+384),w
  4990  0722  0022               	movlb	2	; select bank2
  4991  0723  00E5               	movwf	(?_snprintf^(0+256)+6)
  4992  0724  0023               	movlb	3	; select bank3
  4993  0725  084F               	movf	(_adcGain+1)^(0+384),w
  4994  0726  0022               	movlb	2	; select bank2
  4995  0727  00E8               	movwf	((?_snprintf+1)^(0+256)+8)
  4996  0728  0023               	movlb	3	; select bank3
  4997  0729  084E               	movf	_adcGain^(0+384),w
  4998  072A  0022               	movlb	2	; select bank2
  4999  072B  00E7               	movwf	(?_snprintf^(0+256)+8)
  5000  072C  31B3  23D7  3186   	fcall	_snprintf
  5001                           
  5002                           ;main.c: 118:                     EUSART_Write_Text(messageBuffer);
  5003  072F  3071               	movlw	113
  5004  0730  00F2               	movwf	EUSART_Write_Text@text
  5005  0731  3027               	movlw	39
  5006  0732  00F3               	movwf	EUSART_Write_Text@text+1
  5007  0733  31B3  23EF  3186   	fcall	_EUSART_Write_Text
  5008                           
  5009                           ;main.c: 119:                     EUSART_Write_Text("Attempt to set initial system param
      +                          eters to AFE...\n\r");
  5010  0736  303B               	movlw	low (STR_4| (0+32768))
  5011  0737  00F2               	movwf	EUSART_Write_Text@text
  5012  0738  30B8               	movlw	high (STR_4| (0+32768))
  5013  0739  00F3               	movwf	EUSART_Write_Text@text+1
  5014  073A  31B3  23EF         	fcall	_EUSART_Write_Text
  5015                           
  5016                           ;main.c: 121:                     currState = 1;
  5017  073C  0023               	movlb	3	; select bank3
  5018  073D  01D4               	clrf	_currState^(0+384)
  5019  073E  0AD4               	incf	_currState^(0+384),f
  5020  073F  0008               	return
  5021  0740                     l8356:	
  5022                           
  5023                           ;main.c: 130:             init_AFE();
  5024  0740  3188  2001  3186   	fcall	_init_AFE
  5025                           
  5026                           ;main.c: 133:             _delay((unsigned long)((5)*(16000000/4000.0)));
  5027  0743  301A               	movlw	26
  5028  0744  0022               	movlb	2	; select bank2
  5029  0745  00EE               	movwf	??_statemachine^(0+256)
  5030  0746  30F8               	movlw	248
  5031  0747                     u11927:	
  5032  0747  0B89               	decfsz	9,f
  5033  0748  2F47               	goto	u11927
  5034  0749  0BEE               	decfsz	??_statemachine^(0+256),f
  5035  074A  2F47               	goto	u11927
  5036  074B  0000               	nop
  5037                           
  5038                           ;main.c: 134:             EUSART_Write_Text("\n\r");
  5039  074C  3026               	movlw	low ((STR_14+18)| (0+32768))
  5040  074D  00F2               	movwf	EUSART_Write_Text@text
  5041  074E  30BA               	movlw	high ((STR_14+18)| (0+32768))
  5042  074F  00F3               	movwf	EUSART_Write_Text@text+1
  5043  0750  31B3  23EF  3186   	fcall	_EUSART_Write_Text
  5044                           
  5045                           ;main.c: 135:             snprintf(messageBuffer, 127, "Current sense resistor value: %.
      +                          4f ohms\n\r", AFE_getSetCurrentSenseRes());
  5046  0753  3071               	movlw	113
  5047  0754  0022               	movlb	2	; select bank2
  5048  0755  00DF               	movwf	snprintf@s^(0+256)
  5049  0756  3027               	movlw	39
  5050  0757  00E0               	movwf	(snprintf@s^(0+256)+1)
  5051  0758  307F               	movlw	127
  5052  0759  00E1               	movwf	snprintf@n^(0+256)
  5053  075A  3000               	movlw	0
  5054  075B  00E2               	movwf	(snprintf@n^(0+256)+1)
  5055  075C  3076               	movlw	low (STR_6| (0+32768))
  5056  075D  00E3               	movwf	snprintf@fmt^(0+256)
  5057  075E  30B9               	movlw	high (STR_6| (0+32768))
  5058  075F  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5059  0760  31B3  230F  3186   	fcall	_AFE_getSetCurrentSenseRes
  5060  0763  0874               	movf	?_AFE_getSetCurrentSenseRes+3,w
  5061  0764  0022               	movlb	2	; select bank2
  5062  0765  00E8               	movwf	((?_snprintf+3)^(0+256)+6)
  5063  0766  0873               	movf	?_AFE_getSetCurrentSenseRes+2,w
  5064  0767  00E7               	movwf	((?_snprintf+2)^(0+256)+6)
  5065  0768  0872               	movf	?_AFE_getSetCurrentSenseRes+1,w
  5066  0769  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5067  076A  0871               	movf	?_AFE_getSetCurrentSenseRes,w
  5068  076B  00E5               	movwf	(?_snprintf^(0+256)+6)
  5069  076C  31B3  23D7  3186   	fcall	_snprintf
  5070                           
  5071                           ;main.c: 136:             EUSART_Write_Text(messageBuffer);
  5072  076F  3071               	movlw	113
  5073  0770  00F2               	movwf	EUSART_Write_Text@text
  5074  0771  3027               	movlw	39
  5075  0772  00F3               	movwf	EUSART_Write_Text@text+1
  5076  0773  31B3  23EF  3186   	fcall	_EUSART_Write_Text
  5077                           
  5078                           ;main.c: 137:             snprintf(messageBuffer, 127, "Set short circuit current for AF
      +                          E: %lu mA\n\r", AFE_getSetShortCircuitCurrent());
  5079  0776  3071               	movlw	113
  5080  0777  0022               	movlb	2	; select bank2
  5081  0778  00DF               	movwf	snprintf@s^(0+256)
  5082  0779  3027               	movlw	39
  5083  077A  00E0               	movwf	(snprintf@s^(0+256)+1)
  5084  077B  307F               	movlw	127
  5085  077C  00E1               	movwf	snprintf@n^(0+256)
  5086  077D  3000               	movlw	0
  5087  077E  00E2               	movwf	(snprintf@n^(0+256)+1)
  5088  077F  30CB               	movlw	low (STR_7| (0+32768))
  5089  0780  00E3               	movwf	snprintf@fmt^(0+256)
  5090  0781  30B8               	movlw	high (STR_7| (0+32768))
  5091  0782  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5092  0783  31B7  270E  3186   	fcall	_AFE_getSetShortCircuitCurrent
  5093  0786  0020               	movlb	0	; select bank0
  5094  0787  0866               	movf	?_AFE_getSetShortCircuitCurrent+3,w
  5095  0788  0022               	movlb	2	; select bank2
  5096  0789  00E8               	movwf	((?_snprintf+3)^(0+256)+6)
  5097  078A  0020               	movlb	0	; select bank0
  5098  078B  0865               	movf	?_AFE_getSetShortCircuitCurrent+2,w
  5099  078C  0022               	movlb	2	; select bank2
  5100  078D  00E7               	movwf	((?_snprintf+2)^(0+256)+6)
  5101  078E  0020               	movlb	0	; select bank0
  5102  078F  0864               	movf	?_AFE_getSetShortCircuitCurrent+1,w
  5103  0790  0022               	movlb	2	; select bank2
  5104  0791  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5105  0792  0020               	movlb	0	; select bank0
  5106  0793  0863               	movf	?_AFE_getSetShortCircuitCurrent,w
  5107  0794  0022               	movlb	2	; select bank2
  5108  0795  00E5               	movwf	(?_snprintf^(0+256)+6)
  5109  0796  31B3  23D7  3186   	fcall	_snprintf
  5110                           
  5111                           ;main.c: 138:             EUSART_Write_Text(messageBuffer);
  5112  0799  3071               	movlw	113
  5113  079A  00F2               	movwf	EUSART_Write_Text@text
  5114  079B  3027               	movlw	39
  5115  079C  00F3               	movwf	EUSART_Write_Text@text+1
  5116  079D  31B3  23EF  3186   	fcall	_EUSART_Write_Text
  5117                           
  5118                           ;main.c: 139:             snprintf(messageBuffer, 127, "Set Over-current discharge prote
      +                          ction  for AFE: %lu mA\n\r", AFE_getOverCurrentDischargeCurrent());
  5119  07A0  3071               	movlw	113
  5120  07A1  0022               	movlb	2	; select bank2
  5121  07A2  00DF               	movwf	snprintf@s^(0+256)
  5122  07A3  3027               	movlw	39
  5123  07A4  00E0               	movwf	(snprintf@s^(0+256)+1)
  5124  07A5  307F               	movlw	127
  5125  07A6  00E1               	movwf	snprintf@n^(0+256)
  5126  07A7  3000               	movlw	0
  5127  07A8  00E2               	movwf	(snprintf@n^(0+256)+1)
  5128  07A9  3002               	movlw	low (STR_8| (0+32768))
  5129  07AA  00E3               	movwf	snprintf@fmt^(0+256)
  5130  07AB  30B8               	movlw	high (STR_8| (0+32768))
  5131  07AC  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5132  07AD  31B6  26BE  3186   	fcall	_AFE_getOverCurrentDischargeCurrent
  5133  07B0  0020               	movlb	0	; select bank0
  5134  07B1  0866               	movf	?_AFE_getOverCurrentDischargeCurrent+3,w
  5135  07B2  0022               	movlb	2	; select bank2
  5136  07B3  00E8               	movwf	((?_snprintf+3)^(0+256)+6)
  5137  07B4  0020               	movlb	0	; select bank0
  5138  07B5  0865               	movf	?_AFE_getOverCurrentDischargeCurrent+2,w
  5139  07B6  0022               	movlb	2	; select bank2
  5140  07B7  00E7               	movwf	((?_snprintf+2)^(0+256)+6)
  5141  07B8  0020               	movlb	0	; select bank0
  5142  07B9  0864               	movf	?_AFE_getOverCurrentDischargeCurrent+1,w
  5143  07BA  0022               	movlb	2	; select bank2
  5144  07BB  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5145  07BC  0020               	movlb	0	; select bank0
  5146  07BD  0863               	movf	?_AFE_getOverCurrentDischargeCurrent,w
  5147  07BE  0022               	movlb	2	; select bank2
  5148  07BF  00E5               	movwf	(?_snprintf^(0+256)+6)
  5149  07C0  31B3  23D7  3186   	fcall	_snprintf
  5150                           
  5151                           ;main.c: 140:             EUSART_Write_Text(messageBuffer);
  5152  07C3  3071               	movlw	113
  5153  07C4  00F2               	movwf	EUSART_Write_Text@text
  5154  07C5  3027               	movlw	39
  5155  07C6  00F3               	movwf	EUSART_Write_Text@text+1
  5156  07C7  31B3  23EF  3186   	fcall	_EUSART_Write_Text
  5157                           
  5158                           ;main.c: 141:             printotAFERegisters();
  5159  07CA  3191  21CC  3186   	fcall	_printotAFERegisters
  5160                           
  5161                           ;main.c: 142:             EUSART_Write_Text("Initial parameters for BQ76920 AFE set!\n\r
      +                          ");
  5162  07CD  304C               	movlw	low (STR_9| (0+32768))
  5163  07CE  00F2               	movwf	EUSART_Write_Text@text
  5164  07CF  30B9               	movlw	high (STR_9| (0+32768))
  5165  07D0  00F3               	movwf	EUSART_Write_Text@text+1
  5166  07D1  31B3  23EF  3186   	fcall	_EUSART_Write_Text
  5167                           
  5168                           ;main.c: 143:             EUSART_Write_Text("Now reading AFE data at regular intervals.\
      +                          n\r");
  5169  07D4  309E               	movlw	low (STR_10| (0+32768))
  5170  07D5  00F2               	movwf	EUSART_Write_Text@text
  5171  07D6  30B8               	movlw	high (STR_10| (0+32768))
  5172  07D7  00F3               	movwf	EUSART_Write_Text@text+1
  5173  07D8  31B3  23EF  3186   	fcall	_EUSART_Write_Text
  5174                           
  5175                           ;main.c: 149:             RGB_color(1);
  5176  07DB  3001               	movlw	1
  5177  07DC  00F1               	movwf	RGB_color@color
  5178  07DD  3000               	movlw	0
  5179  07DE  00F2               	movwf	RGB_color@color+1
  5180  07DF  31B4  24D8         	fcall	_RGB_color
  5181                           
  5182                           ;main.c: 150:             currState = 2;
  5183  07E1  3002               	movlw	2
  5184  07E2  0022               	movlb	2	; select bank2
  5185  07E3  00EE               	movwf	??_statemachine^(0+256)
  5186  07E4  086E               	movf	??_statemachine^(0+256),w
  5187  07E5  0023               	movlb	3	; select bank3
  5188  07E6  00D4               	movwf	_currState^(0+384)
  5189                           
  5190                           ;main.c: 151:             break;
  5191  07E7  0008               	return
  5192  07E8                     l8384:	
  5193  07E8  0023               	movlb	3	; select bank3
  5194  07E9  0854               	movf	_currState^(0+384),w
  5195  07EA  0022               	movlb	2	; select bank2
  5196  07EB  00EE               	movwf	??_statemachine^(0+256)
  5197  07EC  01EF               	clrf	(??_statemachine^(0+256)+1)
  5198                           
  5199                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5200                           ; Switch size 1, requested type "simple"
  5201                           ; Number of cases is 1, Range of values is 0 to 0
  5202                           ; switch strategies available:
  5203                           ; Name         Instructions Cycles
  5204                           ; simple_byte            4     3 (average)
  5205                           ; direct_byte            8     6 (fixed)
  5206                           ; jumptable            260     6 (fixed)
  5207                           ;	Chosen strategy is simple_byte
  5208  07ED  086F               	movf	(??_statemachine+1)^(0+256),w
  5209  07EE  3A00               	xorlw	0	; case 0
  5210  07EF  1903               	skipnz
  5211  07F0  2FF2               	goto	l8506
  5212  07F1  2FFD               	goto	l145
  5213  07F2                     l8506:	
  5214                           
  5215                           ; Switch size 1, requested type "simple"
  5216                           ; Number of cases is 3, Range of values is 0 to 2
  5217                           ; switch strategies available:
  5218                           ; Name         Instructions Cycles
  5219                           ; simple_byte           10     6 (average)
  5220                           ; direct_byte           12     6 (fixed)
  5221                           ; jumptable            260     6 (fixed)
  5222                           ;	Chosen strategy is simple_byte
  5223  07F2  086E               	movf	??_statemachine^(0+256),w
  5224  07F3  3A00               	xorlw	0	; case 0
  5225  07F4  1903               	skipnz
  5226  07F5  2ED6               	goto	l8326
  5227  07F6  3A01               	xorlw	1	; case 1
  5228  07F7  1903               	skipnz
  5229  07F8  2F40               	goto	l8356
  5230  07F9  3A03               	xorlw	3	; case 2
  5231  07FA  1903               	skipnz
  5232  07FB  2FFD               	goto	l145
  5233  07FC  2FFD               	goto	l145
  5234  07FD                     l145:	
  5235  07FD  0008               	return
  5236  07FE                     __end_of_statemachine:	
  5237                           
  5238                           	psect	text2
  5239  11CC                     __ptext2:	
  5240 ;; *************** function _printotAFERegisters *****************
  5241 ;; Defined at:
  5242 ;;		line 144 in file "BQ76920.c"
  5243 ;; Parameters:    Size  Location     Type
  5244 ;;		None
  5245 ;; Auto vars:     Size  Location     Type
  5246 ;;		None
  5247 ;; Return value:  Size  Location     Type
  5248 ;;                  1    wreg      void 
  5249 ;; Registers used:
  5250 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5251 ;; Tracked objects:
  5252 ;;		On entry : 0/0
  5253 ;;		On exit  : 0/0
  5254 ;;		Unchanged: 0/0
  5255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5258 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5259 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5260 ;;Total ram usage:        1 bytes
  5261 ;; Hardware stack levels used:    1
  5262 ;; Hardware stack levels required when called:   10
  5263 ;; This function calls:
  5264 ;;		_EUSART_Write_Text
  5265 ;;		_readRegister
  5266 ;;		_snprintf
  5267 ;; This function is called by:
  5268 ;;		_statemachine
  5269 ;; This function uses a non-reentrant model
  5270 ;;
  5271                           
  5272                           
  5273                           ;psect for function _printotAFERegisters
  5274  11CC                     _printotAFERegisters:	
  5275                           
  5276                           ;BQ76920.c: 146:     _delay((unsigned long)((5)*(16000000/4000.0)));
  5277                           
  5278                           ;incstack = 0
  5279                           ; Regs used in _printotAFERegisters: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5280  11CC  301A               	movlw	26
  5281  11CD  0022               	movlb	2	; select bank2
  5282  11CE  00ED               	movwf	??_printotAFERegisters^(0+256)
  5283  11CF  30F8               	movlw	248
  5284  11D0                     u11937:	
  5285  11D0  0B89               	decfsz	9,f
  5286  11D1  29D0               	goto	u11937
  5287  11D2  0BED               	decfsz	??_printotAFERegisters^(0+256),f
  5288  11D3  29D0               	goto	u11937
  5289  11D4  0000               	nop
  5290                           
  5291                           ;BQ76920.c: 148:     EUSART_Write_Text("Printing out AFE register values... out\n\r");
  5292  11D5  3022               	movlw	low (STR_11| (0+32768))
  5293  11D6  00F2               	movwf	EUSART_Write_Text@text
  5294  11D7  30B9               	movlw	high (STR_11| (0+32768))
  5295  11D8  00F3               	movwf	EUSART_Write_Text@text+1
  5296  11D9  31B3  23EF  3191   	fcall	_EUSART_Write_Text
  5297                           
  5298                           ;BQ76920.c: 149:     EUSART_Write_Text("\n\r");
  5299  11DC  3026               	movlw	low ((STR_14+18)| (0+32768))
  5300  11DD  00F2               	movwf	EUSART_Write_Text@text
  5301  11DE  30BA               	movlw	high ((STR_14+18)| (0+32768))
  5302  11DF  00F3               	movwf	EUSART_Write_Text@text+1
  5303  11E0  31B3  23EF  3191   	fcall	_EUSART_Write_Text
  5304                           
  5305                           ;BQ76920.c: 150:     snprintf(messageBuffer, 127, "0x00 SYS_STAT: %i \n\r", readRegister
      +                          (0x18, 0x00));
  5306  11E3  3071               	movlw	113
  5307  11E4  0022               	movlb	2	; select bank2
  5308  11E5  00DF               	movwf	snprintf@s^(0+256)
  5309  11E6  3027               	movlw	39
  5310  11E7  00E0               	movwf	(snprintf@s^(0+256)+1)
  5311  11E8  307F               	movlw	127
  5312  11E9  00E1               	movwf	snprintf@n^(0+256)
  5313  11EA  3000               	movlw	0
  5314  11EB  00E2               	movwf	(snprintf@n^(0+256)+1)
  5315  11EC  3068               	movlw	low (STR_13| (0+32768))
  5316  11ED  00E3               	movwf	snprintf@fmt^(0+256)
  5317  11EE  30BA               	movlw	high (STR_13| (0+32768))
  5318  11EF  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5319  11F0  3018               	movlw	24
  5320  11F1  00F5               	movwf	readRegister@slaveAddress
  5321  11F2  3000               	movlw	0
  5322  11F3  00F6               	movwf	readRegister@slaveAddress+1
  5323  11F4  3000               	movlw	0
  5324  11F5  00F7               	movwf	readRegister@regAddress
  5325  11F6  00F8               	movwf	readRegister@regAddress+1
  5326  11F7  31B5  25B6  3191   	fcall	_readRegister
  5327  11FA  0876               	movf	?_readRegister+1,w
  5328  11FB  0022               	movlb	2	; select bank2
  5329  11FC  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5330  11FD  0875               	movf	?_readRegister,w
  5331  11FE  00E5               	movwf	(?_snprintf^(0+256)+6)
  5332  11FF  31B3  23D7  3191   	fcall	_snprintf
  5333                           
  5334                           ;BQ76920.c: 151:     EUSART_Write_Text(messageBuffer);
  5335  1202  3071               	movlw	113
  5336  1203  00F2               	movwf	EUSART_Write_Text@text
  5337  1204  3027               	movlw	39
  5338  1205  00F3               	movwf	EUSART_Write_Text@text+1
  5339  1206  31B3  23EF  3191   	fcall	_EUSART_Write_Text
  5340                           
  5341                           ;BQ76920.c: 152:     snprintf(messageBuffer, 127, "0x01 CELLBAL1: %i \n\r", readRegister
      +                          (0x18, 0x01));
  5342  1209  3071               	movlw	113
  5343  120A  0022               	movlb	2	; select bank2
  5344  120B  00DF               	movwf	snprintf@s^(0+256)
  5345  120C  3027               	movlw	39
  5346  120D  00E0               	movwf	(snprintf@s^(0+256)+1)
  5347  120E  307F               	movlw	127
  5348  120F  00E1               	movwf	snprintf@n^(0+256)
  5349  1210  3000               	movlw	0
  5350  1211  00E2               	movwf	(snprintf@n^(0+256)+1)
  5351  1212  3014               	movlw	low (STR_14| (0+32768))
  5352  1213  00E3               	movwf	snprintf@fmt^(0+256)
  5353  1214  30BA               	movlw	high (STR_14| (0+32768))
  5354  1215  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5355  1216  3018               	movlw	24
  5356  1217  00F5               	movwf	readRegister@slaveAddress
  5357  1218  3000               	movlw	0
  5358  1219  00F6               	movwf	readRegister@slaveAddress+1
  5359  121A  3001               	movlw	1
  5360  121B  00F7               	movwf	readRegister@regAddress
  5361  121C  3000               	movlw	0
  5362  121D  00F8               	movwf	readRegister@regAddress+1
  5363  121E  31B5  25B6  3191   	fcall	_readRegister
  5364  1221  0876               	movf	?_readRegister+1,w
  5365  1222  0022               	movlb	2	; select bank2
  5366  1223  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5367  1224  0875               	movf	?_readRegister,w
  5368  1225  00E5               	movwf	(?_snprintf^(0+256)+6)
  5369  1226  31B3  23D7  3191   	fcall	_snprintf
  5370                           
  5371                           ;BQ76920.c: 153:     EUSART_Write_Text(messageBuffer);
  5372  1229  3071               	movlw	113
  5373  122A  00F2               	movwf	EUSART_Write_Text@text
  5374  122B  3027               	movlw	39
  5375  122C  00F3               	movwf	EUSART_Write_Text@text+1
  5376  122D  31B3  23EF  3191   	fcall	_EUSART_Write_Text
  5377                           
  5378                           ;BQ76920.c: 154:     snprintf(messageBuffer, 127, "0x04 SYS_CTRL1: %i \n\r", readRegiste
      +                          r(0x18, 0x04));
  5379  1230  3071               	movlw	113
  5380  1231  0022               	movlb	2	; select bank2
  5381  1232  00DF               	movwf	snprintf@s^(0+256)
  5382  1233  3027               	movlw	39
  5383  1234  00E0               	movwf	(snprintf@s^(0+256)+1)
  5384  1235  307F               	movlw	127
  5385  1236  00E1               	movwf	snprintf@n^(0+256)
  5386  1237  3000               	movlw	0
  5387  1238  00E2               	movwf	(snprintf@n^(0+256)+1)
  5388  1239  30E8               	movlw	low (STR_15| (0+32768))
  5389  123A  00E3               	movwf	snprintf@fmt^(0+256)
  5390  123B  30B9               	movlw	high (STR_15| (0+32768))
  5391  123C  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5392  123D  3018               	movlw	24
  5393  123E  00F5               	movwf	readRegister@slaveAddress
  5394  123F  3000               	movlw	0
  5395  1240  00F6               	movwf	readRegister@slaveAddress+1
  5396  1241  3004               	movlw	4
  5397  1242  00F7               	movwf	readRegister@regAddress
  5398  1243  3000               	movlw	0
  5399  1244  00F8               	movwf	readRegister@regAddress+1
  5400  1245  31B5  25B6  3191   	fcall	_readRegister
  5401  1248  0876               	movf	?_readRegister+1,w
  5402  1249  0022               	movlb	2	; select bank2
  5403  124A  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5404  124B  0875               	movf	?_readRegister,w
  5405  124C  00E5               	movwf	(?_snprintf^(0+256)+6)
  5406  124D  31B3  23D7  3191   	fcall	_snprintf
  5407                           
  5408                           ;BQ76920.c: 155:     EUSART_Write_Text(messageBuffer);
  5409  1250  3071               	movlw	113
  5410  1251  00F2               	movwf	EUSART_Write_Text@text
  5411  1252  3027               	movlw	39
  5412  1253  00F3               	movwf	EUSART_Write_Text@text+1
  5413  1254  31B3  23EF  3191   	fcall	_EUSART_Write_Text
  5414                           
  5415                           ;BQ76920.c: 156:     snprintf(messageBuffer, 127, "0x05 SYS_CTRL2: %i \n\r", readRegiste
      +                          r(0x18, 0x05));
  5416  1257  3071               	movlw	113
  5417  1258  0022               	movlb	2	; select bank2
  5418  1259  00DF               	movwf	snprintf@s^(0+256)
  5419  125A  3027               	movlw	39
  5420  125B  00E0               	movwf	(snprintf@s^(0+256)+1)
  5421  125C  307F               	movlw	127
  5422  125D  00E1               	movwf	snprintf@n^(0+256)
  5423  125E  3000               	movlw	0
  5424  125F  00E2               	movwf	(snprintf@n^(0+256)+1)
  5425  1260  30FE               	movlw	low (STR_16| (0+32768))
  5426  1261  00E3               	movwf	snprintf@fmt^(0+256)
  5427  1262  30B9               	movlw	high (STR_16| (0+32768))
  5428  1263  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5429  1264  3018               	movlw	24
  5430  1265  00F5               	movwf	readRegister@slaveAddress
  5431  1266  3000               	movlw	0
  5432  1267  00F6               	movwf	readRegister@slaveAddress+1
  5433  1268  3005               	movlw	5
  5434  1269  00F7               	movwf	readRegister@regAddress
  5435  126A  3000               	movlw	0
  5436  126B  00F8               	movwf	readRegister@regAddress+1
  5437  126C  31B5  25B6  3191   	fcall	_readRegister
  5438  126F  0876               	movf	?_readRegister+1,w
  5439  1270  0022               	movlb	2	; select bank2
  5440  1271  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5441  1272  0875               	movf	?_readRegister,w
  5442  1273  00E5               	movwf	(?_snprintf^(0+256)+6)
  5443  1274  31B3  23D7  3191   	fcall	_snprintf
  5444                           
  5445                           ;BQ76920.c: 157:     EUSART_Write_Text(messageBuffer);
  5446  1277  3071               	movlw	113
  5447  1278  00F2               	movwf	EUSART_Write_Text@text
  5448  1279  3027               	movlw	39
  5449  127A  00F3               	movwf	EUSART_Write_Text@text+1
  5450  127B  31B3  23EF  3191   	fcall	_EUSART_Write_Text
  5451                           
  5452                           ;BQ76920.c: 158:     snprintf(messageBuffer, 127, "0x06 PROTECT1: %i \n\r", readRegister
      +                          (0x18, 0x06));
  5453  127E  3071               	movlw	113
  5454  127F  0022               	movlb	2	; select bank2
  5455  1280  00DF               	movwf	snprintf@s^(0+256)
  5456  1281  3027               	movlw	39
  5457  1282  00E0               	movwf	(snprintf@s^(0+256)+1)
  5458  1283  307F               	movlw	127
  5459  1284  00E1               	movwf	snprintf@n^(0+256)
  5460  1285  3000               	movlw	0
  5461  1286  00E2               	movwf	(snprintf@n^(0+256)+1)
  5462  1287  3029               	movlw	low (STR_17| (0+32768))
  5463  1288  00E3               	movwf	snprintf@fmt^(0+256)
  5464  1289  30BA               	movlw	high (STR_17| (0+32768))
  5465  128A  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5466  128B  3018               	movlw	24
  5467  128C  00F5               	movwf	readRegister@slaveAddress
  5468  128D  3000               	movlw	0
  5469  128E  00F6               	movwf	readRegister@slaveAddress+1
  5470  128F  3006               	movlw	6
  5471  1290  00F7               	movwf	readRegister@regAddress
  5472  1291  3000               	movlw	0
  5473  1292  00F8               	movwf	readRegister@regAddress+1
  5474  1293  31B5  25B6  3191   	fcall	_readRegister
  5475  1296  0876               	movf	?_readRegister+1,w
  5476  1297  0022               	movlb	2	; select bank2
  5477  1298  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5478  1299  0875               	movf	?_readRegister,w
  5479  129A  00E5               	movwf	(?_snprintf^(0+256)+6)
  5480  129B  31B3  23D7  3191   	fcall	_snprintf
  5481                           
  5482                           ;BQ76920.c: 159:     EUSART_Write_Text(messageBuffer);
  5483  129E  3071               	movlw	113
  5484  129F  00F2               	movwf	EUSART_Write_Text@text
  5485  12A0  3027               	movlw	39
  5486  12A1  00F3               	movwf	EUSART_Write_Text@text+1
  5487  12A2  31B3  23EF  3191   	fcall	_EUSART_Write_Text
  5488                           
  5489                           ;BQ76920.c: 160:     snprintf(messageBuffer, 127, "0x07 PROTECT2: %i \n\r", readRegister
      +                          (0x18, 0x07));
  5490  12A5  3071               	movlw	113
  5491  12A6  0022               	movlb	2	; select bank2
  5492  12A7  00DF               	movwf	snprintf@s^(0+256)
  5493  12A8  3027               	movlw	39
  5494  12A9  00E0               	movwf	(snprintf@s^(0+256)+1)
  5495  12AA  307F               	movlw	127
  5496  12AB  00E1               	movwf	snprintf@n^(0+256)
  5497  12AC  3000               	movlw	0
  5498  12AD  00E2               	movwf	(snprintf@n^(0+256)+1)
  5499  12AE  303E               	movlw	low (STR_18| (0+32768))
  5500  12AF  00E3               	movwf	snprintf@fmt^(0+256)
  5501  12B0  30BA               	movlw	high (STR_18| (0+32768))
  5502  12B1  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5503  12B2  3018               	movlw	24
  5504  12B3  00F5               	movwf	readRegister@slaveAddress
  5505  12B4  3000               	movlw	0
  5506  12B5  00F6               	movwf	readRegister@slaveAddress+1
  5507  12B6  3007               	movlw	7
  5508  12B7  00F7               	movwf	readRegister@regAddress
  5509  12B8  3000               	movlw	0
  5510  12B9  00F8               	movwf	readRegister@regAddress+1
  5511  12BA  31B5  25B6  3191   	fcall	_readRegister
  5512  12BD  0876               	movf	?_readRegister+1,w
  5513  12BE  0022               	movlb	2	; select bank2
  5514  12BF  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5515  12C0  0875               	movf	?_readRegister,w
  5516  12C1  00E5               	movwf	(?_snprintf^(0+256)+6)
  5517  12C2  31B3  23D7  3191   	fcall	_snprintf
  5518                           
  5519                           ;BQ76920.c: 161:     EUSART_Write_Text(messageBuffer);
  5520  12C5  3071               	movlw	113
  5521  12C6  00F2               	movwf	EUSART_Write_Text@text
  5522  12C7  3027               	movlw	39
  5523  12C8  00F3               	movwf	EUSART_Write_Text@text+1
  5524  12C9  31B3  23EF  3191   	fcall	_EUSART_Write_Text
  5525                           
  5526                           ;BQ76920.c: 162:     snprintf(messageBuffer, 127, "0x08 PROTECT3: %i \n\r", readRegister
      +                          (0x18, 0x08));
  5527  12CC  3071               	movlw	113
  5528  12CD  0022               	movlb	2	; select bank2
  5529  12CE  00DF               	movwf	snprintf@s^(0+256)
  5530  12CF  3027               	movlw	39
  5531  12D0  00E0               	movwf	(snprintf@s^(0+256)+1)
  5532  12D1  307F               	movlw	127
  5533  12D2  00E1               	movwf	snprintf@n^(0+256)
  5534  12D3  3000               	movlw	0
  5535  12D4  00E2               	movwf	(snprintf@n^(0+256)+1)
  5536  12D5  3053               	movlw	low (STR_19| (0+32768))
  5537  12D6  00E3               	movwf	snprintf@fmt^(0+256)
  5538  12D7  30BA               	movlw	high (STR_19| (0+32768))
  5539  12D8  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5540  12D9  3018               	movlw	24
  5541  12DA  00F5               	movwf	readRegister@slaveAddress
  5542  12DB  3000               	movlw	0
  5543  12DC  00F6               	movwf	readRegister@slaveAddress+1
  5544  12DD  3008               	movlw	8
  5545  12DE  00F7               	movwf	readRegister@regAddress
  5546  12DF  3000               	movlw	0
  5547  12E0  00F8               	movwf	readRegister@regAddress+1
  5548  12E1  31B5  25B6  3191   	fcall	_readRegister
  5549  12E4  0876               	movf	?_readRegister+1,w
  5550  12E5  0022               	movlb	2	; select bank2
  5551  12E6  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5552  12E7  0875               	movf	?_readRegister,w
  5553  12E8  00E5               	movwf	(?_snprintf^(0+256)+6)
  5554  12E9  31B3  23D7  3191   	fcall	_snprintf
  5555                           
  5556                           ;BQ76920.c: 163:     EUSART_Write_Text(messageBuffer);
  5557  12EC  3071               	movlw	113
  5558  12ED  00F2               	movwf	EUSART_Write_Text@text
  5559  12EE  3027               	movlw	39
  5560  12EF  00F3               	movwf	EUSART_Write_Text@text+1
  5561  12F0  31B3  23EF  3191   	fcall	_EUSART_Write_Text
  5562                           
  5563                           ;BQ76920.c: 164:     snprintf(messageBuffer, 127, "0x09 OV_TRIP: %i \n\r", readRegister(
      +                          0x18, 0x09));
  5564  12F3  3071               	movlw	113
  5565  12F4  0022               	movlb	2	; select bank2
  5566  12F5  00DF               	movwf	snprintf@s^(0+256)
  5567  12F6  3027               	movlw	39
  5568  12F7  00E0               	movwf	(snprintf@s^(0+256)+1)
  5569  12F8  307F               	movlw	127
  5570  12F9  00E1               	movwf	snprintf@n^(0+256)
  5571  12FA  3000               	movlw	0
  5572  12FB  00E2               	movwf	(snprintf@n^(0+256)+1)
  5573  12FC  307D               	movlw	low (STR_20| (0+32768))
  5574  12FD  00E3               	movwf	snprintf@fmt^(0+256)
  5575  12FE  30BA               	movlw	high (STR_20| (0+32768))
  5576  12FF  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5577  1300  3018               	movlw	24
  5578  1301  00F5               	movwf	readRegister@slaveAddress
  5579  1302  3000               	movlw	0
  5580  1303  00F6               	movwf	readRegister@slaveAddress+1
  5581  1304  3009               	movlw	9
  5582  1305  00F7               	movwf	readRegister@regAddress
  5583  1306  3000               	movlw	0
  5584  1307  00F8               	movwf	readRegister@regAddress+1
  5585  1308  31B5  25B6  3191   	fcall	_readRegister
  5586  130B  0876               	movf	?_readRegister+1,w
  5587  130C  0022               	movlb	2	; select bank2
  5588  130D  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5589  130E  0875               	movf	?_readRegister,w
  5590  130F  00E5               	movwf	(?_snprintf^(0+256)+6)
  5591  1310  31B3  23D7  3191   	fcall	_snprintf
  5592                           
  5593                           ;BQ76920.c: 165:     EUSART_Write_Text(messageBuffer);
  5594  1313  3071               	movlw	113
  5595  1314  00F2               	movwf	EUSART_Write_Text@text
  5596  1315  3027               	movlw	39
  5597  1316  00F3               	movwf	EUSART_Write_Text@text+1
  5598  1317  31B3  23EF  3191   	fcall	_EUSART_Write_Text
  5599                           
  5600                           ;BQ76920.c: 166:     snprintf(messageBuffer, 127, "0x0A UV_TRIP: %i \n\r", readRegister(
      +                          0x18, 0x0A));
  5601  131A  3071               	movlw	113
  5602  131B  0022               	movlb	2	; select bank2
  5603  131C  00DF               	movwf	snprintf@s^(0+256)
  5604  131D  3027               	movlw	39
  5605  131E  00E0               	movwf	(snprintf@s^(0+256)+1)
  5606  131F  307F               	movlw	127
  5607  1320  00E1               	movwf	snprintf@n^(0+256)
  5608  1321  3000               	movlw	0
  5609  1322  00E2               	movwf	(snprintf@n^(0+256)+1)
  5610  1323  3091               	movlw	low (STR_21| (0+32768))
  5611  1324  00E3               	movwf	snprintf@fmt^(0+256)
  5612  1325  30BA               	movlw	high (STR_21| (0+32768))
  5613  1326  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5614  1327  3018               	movlw	24
  5615  1328  00F5               	movwf	readRegister@slaveAddress
  5616  1329  3000               	movlw	0
  5617  132A  00F6               	movwf	readRegister@slaveAddress+1
  5618  132B  300A               	movlw	10
  5619  132C  00F7               	movwf	readRegister@regAddress
  5620  132D  3000               	movlw	0
  5621  132E  00F8               	movwf	readRegister@regAddress+1
  5622  132F  31B5  25B6  3191   	fcall	_readRegister
  5623  1332  0876               	movf	?_readRegister+1,w
  5624  1333  0022               	movlb	2	; select bank2
  5625  1334  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5626  1335  0875               	movf	?_readRegister,w
  5627  1336  00E5               	movwf	(?_snprintf^(0+256)+6)
  5628  1337  31B3  23D7  3191   	fcall	_snprintf
  5629                           
  5630                           ;BQ76920.c: 167:     EUSART_Write_Text(messageBuffer);
  5631  133A  3071               	movlw	113
  5632  133B  00F2               	movwf	EUSART_Write_Text@text
  5633  133C  3027               	movlw	39
  5634  133D  00F3               	movwf	EUSART_Write_Text@text+1
  5635  133E  31B3  23EF  3191   	fcall	_EUSART_Write_Text
  5636                           
  5637                           ;BQ76920.c: 168:     snprintf(messageBuffer, 127, "0x0B CC_CFG: %i \n\r", readRegister(0
      +                          x18, 0x0B));
  5638  1341  3071               	movlw	113
  5639  1342  0022               	movlb	2	; select bank2
  5640  1343  00DF               	movwf	snprintf@s^(0+256)
  5641  1344  3027               	movlw	39
  5642  1345  00E0               	movwf	(snprintf@s^(0+256)+1)
  5643  1346  307F               	movlw	127
  5644  1347  00E1               	movwf	snprintf@n^(0+256)
  5645  1348  3000               	movlw	0
  5646  1349  00E2               	movwf	(snprintf@n^(0+256)+1)
  5647  134A  30A5               	movlw	low (STR_22| (0+32768))
  5648  134B  00E3               	movwf	snprintf@fmt^(0+256)
  5649  134C  30BA               	movlw	high (STR_22| (0+32768))
  5650  134D  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5651  134E  3018               	movlw	24
  5652  134F  00F5               	movwf	readRegister@slaveAddress
  5653  1350  3000               	movlw	0
  5654  1351  00F6               	movwf	readRegister@slaveAddress+1
  5655  1352  300B               	movlw	11
  5656  1353  00F7               	movwf	readRegister@regAddress
  5657  1354  3000               	movlw	0
  5658  1355  00F8               	movwf	readRegister@regAddress+1
  5659  1356  31B5  25B6  3191   	fcall	_readRegister
  5660  1359  0876               	movf	?_readRegister+1,w
  5661  135A  0022               	movlb	2	; select bank2
  5662  135B  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5663  135C  0875               	movf	?_readRegister,w
  5664  135D  00E5               	movwf	(?_snprintf^(0+256)+6)
  5665  135E  31B3  23D7  3191   	fcall	_snprintf
  5666                           
  5667                           ;BQ76920.c: 169:     EUSART_Write_Text(messageBuffer);
  5668  1361  3071               	movlw	113
  5669  1362  00F2               	movwf	EUSART_Write_Text@text
  5670  1363  3027               	movlw	39
  5671  1364  00F3               	movwf	EUSART_Write_Text@text+1
  5672  1365  31B3  23EF  3191   	fcall	_EUSART_Write_Text
  5673                           
  5674                           ;BQ76920.c: 170:     snprintf(messageBuffer, 127, "0x32 CC_HI: %i \n\r", readRegister(0x
      +                          18, 0x32));
  5675  1368  3071               	movlw	113
  5676  1369  0022               	movlb	2	; select bank2
  5677  136A  00DF               	movwf	snprintf@s^(0+256)
  5678  136B  3027               	movlw	39
  5679  136C  00E0               	movwf	(snprintf@s^(0+256)+1)
  5680  136D  307F               	movlw	127
  5681  136E  00E1               	movwf	snprintf@n^(0+256)
  5682  136F  3000               	movlw	0
  5683  1370  00E2               	movwf	(snprintf@n^(0+256)+1)
  5684  1371  30B8               	movlw	low (STR_23| (0+32768))
  5685  1372  00E3               	movwf	snprintf@fmt^(0+256)
  5686  1373  30BA               	movlw	high (STR_23| (0+32768))
  5687  1374  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5688  1375  3018               	movlw	24
  5689  1376  00F5               	movwf	readRegister@slaveAddress
  5690  1377  3000               	movlw	0
  5691  1378  00F6               	movwf	readRegister@slaveAddress+1
  5692  1379  3032               	movlw	50
  5693  137A  00F7               	movwf	readRegister@regAddress
  5694  137B  3000               	movlw	0
  5695  137C  00F8               	movwf	readRegister@regAddress+1
  5696  137D  31B5  25B6  3191   	fcall	_readRegister
  5697  1380  0876               	movf	?_readRegister+1,w
  5698  1381  0022               	movlb	2	; select bank2
  5699  1382  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5700  1383  0875               	movf	?_readRegister,w
  5701  1384  00E5               	movwf	(?_snprintf^(0+256)+6)
  5702  1385  31B3  23D7  3191   	fcall	_snprintf
  5703                           
  5704                           ;BQ76920.c: 171:     EUSART_Write_Text(messageBuffer);
  5705  1388  3071               	movlw	113
  5706  1389  00F2               	movwf	EUSART_Write_Text@text
  5707  138A  3027               	movlw	39
  5708  138B  00F3               	movwf	EUSART_Write_Text@text+1
  5709  138C  31B3  23EF  3191   	fcall	_EUSART_Write_Text
  5710                           
  5711                           ;BQ76920.c: 172:     snprintf(messageBuffer, 127, "0x33 CC_LO: %i \n\r", readRegister(0x
      +                          18, 0x33));
  5712  138F  3071               	movlw	113
  5713  1390  0022               	movlb	2	; select bank2
  5714  1391  00DF               	movwf	snprintf@s^(0+256)
  5715  1392  3027               	movlw	39
  5716  1393  00E0               	movwf	(snprintf@s^(0+256)+1)
  5717  1394  307F               	movlw	127
  5718  1395  00E1               	movwf	snprintf@n^(0+256)
  5719  1396  3000               	movlw	0
  5720  1397  00E2               	movwf	(snprintf@n^(0+256)+1)
  5721  1398  30CA               	movlw	low (STR_24| (0+32768))
  5722  1399  00E3               	movwf	snprintf@fmt^(0+256)
  5723  139A  30BA               	movlw	high (STR_24| (0+32768))
  5724  139B  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5725  139C  3018               	movlw	24
  5726  139D  00F5               	movwf	readRegister@slaveAddress
  5727  139E  3000               	movlw	0
  5728  139F  00F6               	movwf	readRegister@slaveAddress+1
  5729  13A0  3033               	movlw	51
  5730  13A1  00F7               	movwf	readRegister@regAddress
  5731  13A2  3000               	movlw	0
  5732  13A3  00F8               	movwf	readRegister@regAddress+1
  5733  13A4  31B5  25B6  3191   	fcall	_readRegister
  5734  13A7  0876               	movf	?_readRegister+1,w
  5735  13A8  0022               	movlb	2	; select bank2
  5736  13A9  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5737  13AA  0875               	movf	?_readRegister,w
  5738  13AB  00E5               	movwf	(?_snprintf^(0+256)+6)
  5739  13AC  31B3  23D7  3191   	fcall	_snprintf
  5740                           
  5741                           ;BQ76920.c: 173:     EUSART_Write_Text(messageBuffer);
  5742  13AF  3071               	movlw	113
  5743  13B0  00F2               	movwf	EUSART_Write_Text@text
  5744  13B1  3027               	movlw	39
  5745  13B2  00F3               	movwf	EUSART_Write_Text@text+1
  5746  13B3  31B3  23EF  3191   	fcall	_EUSART_Write_Text
  5747                           
  5748                           ;BQ76920.c: 174:     EUSART_Write_Text("\n\r");
  5749  13B6  3026               	movlw	low ((STR_14+18)| (0+32768))
  5750  13B7  00F2               	movwf	EUSART_Write_Text@text
  5751  13B8  30BA               	movlw	high ((STR_14+18)| (0+32768))
  5752  13B9  00F3               	movwf	EUSART_Write_Text@text+1
  5753  13BA  31B3  23EF         	fcall	_EUSART_Write_Text
  5754  13BC  0008               	return
  5755  13BD                     __end_of_printotAFERegisters:	
  5756                           
  5757                           	psect	text3
  5758  33D7                     __ptext3:	
  5759 ;; *************** function _snprintf *****************
  5760 ;; Defined at:
  5761 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\snprintf.c"
  5762 ;; Parameters:    Size  Location     Type
  5763 ;;  s               2   63[BANK2 ] PTR unsigned char 
  5764 ;;		 -> messageBuffer(127), 
  5765 ;;  n               2   65[BANK2 ] unsigned int 
  5766 ;;  fmt             2   67[BANK2 ] PTR const unsigned char 
  5767 ;;		 -> STR_24(18), STR_23(18), STR_22(19), STR_21(20), 
  5768 ;;		 -> STR_20(20), STR_19(21), STR_18(21), STR_17(21), 
  5769 ;;		 -> STR_16(22), STR_15(22), STR_14(21), STR_13(21), 
  5770 ;;		 -> STR_8(57), STR_7(44), STR_6(42), STR_3(43), 
  5771 ;; Auto vars:     Size  Location     Type
  5772 ;;  ret             2    0        int 
  5773 ;;  ap              1   76[BANK2 ] PTR void [1]
  5774 ;;		 -> ?_snprintf(2), 
  5775 ;; Return value:  Size  Location     Type
  5776 ;;                  2   63[BANK2 ] int 
  5777 ;; Registers used:
  5778 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5779 ;; Tracked objects:
  5780 ;;		On entry : 0/0
  5781 ;;		On exit  : 0/0
  5782 ;;		Unchanged: 0/0
  5783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5784 ;;      Params:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5785 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5786 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5787 ;;      Totals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5788 ;;Total ram usage:       14 bytes
  5789 ;; Hardware stack levels used:    1
  5790 ;; Hardware stack levels required when called:    9
  5791 ;; This function calls:
  5792 ;;		_vsnprintf
  5793 ;; This function is called by:
  5794 ;;		_statemachine
  5795 ;;		_printotAFERegisters
  5796 ;; This function uses a non-reentrant model
  5797 ;;
  5798                           
  5799                           
  5800                           ;psect for function _snprintf
  5801  33D7                     _snprintf:	
  5802                           
  5803                           ;incstack = 0
  5804                           ; Regs used in _snprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5805  33D7  3065               	movlw	(low ((?_snprintf| (0+256)+6)))& (0+255)
  5806  33D8  0022               	movlb	2	; select bank2
  5807  33D9  00E9               	movwf	??_snprintf^(0+256)
  5808  33DA  0869               	movf	??_snprintf^(0+256),w
  5809  33DB  00EC               	movwf	snprintf@ap^(0+256)
  5810  33DC  0860               	movf	(snprintf@s+1)^(0+256),w
  5811  33DD  00CF               	movwf	(vsnprintf@s+1)^(0+256)
  5812  33DE  085F               	movf	snprintf@s^(0+256),w
  5813  33DF  00CE               	movwf	vsnprintf@s^(0+256)
  5814  33E0  0862               	movf	(snprintf@n+1)^(0+256),w
  5815  33E1  00D1               	movwf	(vsnprintf@n+1)^(0+256)
  5816  33E2  0861               	movf	snprintf@n^(0+256),w
  5817  33E3  00D0               	movwf	vsnprintf@n^(0+256)
  5818  33E4  0864               	movf	(snprintf@fmt+1)^(0+256),w
  5819  33E5  00D3               	movwf	(vsnprintf@fmt+1)^(0+256)
  5820  33E6  0863               	movf	snprintf@fmt^(0+256),w
  5821  33E7  00D2               	movwf	vsnprintf@fmt^(0+256)
  5822  33E8  306C               	movlw	(low (snprintf@ap| (0+256)))& (0+255)
  5823  33E9  00E9               	movwf	??_snprintf^(0+256)
  5824  33EA  0869               	movf	??_snprintf^(0+256),w
  5825  33EB  00D4               	movwf	vsnprintf@ap^(0+256)
  5826  33EC  31AA  22BF         	fcall	_vsnprintf
  5827  33EE  0008               	return
  5828  33EF                     __end_of_snprintf:	
  5829                           
  5830                           	psect	text4
  5831  2ABF                     __ptext4:	
  5832 ;; *************** function _vsnprintf *****************
  5833 ;; Defined at:
  5834 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_vsnprintf.c"
  5835 ;; Parameters:    Size  Location     Type
  5836 ;;  s               2   46[BANK2 ] PTR unsigned char 
  5837 ;;		 -> messageBuffer(127), 
  5838 ;;  n               2   48[BANK2 ] unsigned int 
  5839 ;;  fmt             2   50[BANK2 ] PTR const unsigned char 
  5840 ;;		 -> STR_24(18), STR_23(18), STR_22(19), STR_21(20), 
  5841 ;;		 -> STR_20(20), STR_19(21), STR_18(21), STR_17(21), 
  5842 ;;		 -> STR_16(22), STR_15(22), STR_14(21), STR_13(21), 
  5843 ;;		 -> STR_8(57), STR_7(44), STR_6(42), STR_3(43), 
  5844 ;;  ap              1   52[BANK2 ] PTR PTR void 
  5845 ;;		 -> snprintf@ap(1), 
  5846 ;; Auto vars:     Size  Location     Type
  5847 ;;  f               6   57[BANK2 ] struct _IO_FILE
  5848 ;;  cnt             2   55[BANK2 ] int 
  5849 ;; Return value:  Size  Location     Type
  5850 ;;                  2   46[BANK2 ] int 
  5851 ;; Registers used:
  5852 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5853 ;; Tracked objects:
  5854 ;;		On entry : 0/0
  5855 ;;		On exit  : 0/0
  5856 ;;		Unchanged: 0/0
  5857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5858 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5859 ;;      Locals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5860 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5861 ;;      Totals:         0       0       2      17       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5862 ;;Total ram usage:       19 bytes
  5863 ;; Hardware stack levels used:    1
  5864 ;; Hardware stack levels required when called:    8
  5865 ;; This function calls:
  5866 ;;		_vfprintf
  5867 ;; This function is called by:
  5868 ;;		_snprintf
  5869 ;; This function uses a non-reentrant model
  5870 ;;
  5871                           
  5872                           
  5873                           ;psect for function _vsnprintf
  5874  2ABF                     _vsnprintf:	
  5875                           
  5876                           ;incstack = 0
  5877                           ; Regs used in _vsnprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5878  2ABF  3080               	movlw	128
  5879  2AC0  0022               	movlb	2	; select bank2
  5880  2AC1  0251               	subwf	(vsnprintf@n+1)^(0+256),w
  5881  2AC2  3000               	movlw	0
  5882  2AC3  1903               	skipnz
  5883  2AC4  0250               	subwf	vsnprintf@n^(0+256),w
  5884  2AC5  1C03               	skipc
  5885  2AC6  2AD2               	goto	l8210
  5886  2AC7  304B               	movlw	75
  5887  2AC8  0023               	movlb	3	; select bank3
  5888  2AC9  00BA               	movwf	_errno^(0+384)
  5889  2ACA  3000               	movlw	0
  5890  2ACB  00BB               	movwf	(_errno^(0+384)+1)
  5891  2ACC  30FF               	movlw	255
  5892  2ACD  0022               	movlb	2	; select bank2
  5893  2ACE  00CE               	movwf	?_vsnprintf^(0+256)
  5894  2ACF  30FF               	movlw	255
  5895  2AD0  00CF               	movwf	(?_vsnprintf^(0+256)+1)
  5896  2AD1  0008               	return
  5897  2AD2                     l8210:	
  5898  2AD2  084F               	movf	(vsnprintf@s+1)^(0+256),w
  5899  2AD3  00DA               	movwf	(vsnprintf@f+1)^(0+256)
  5900  2AD4  084E               	movf	vsnprintf@s^(0+256),w
  5901  2AD5  00D9               	movwf	vsnprintf@f^(0+256)
  5902  2AD6  3000               	movlw	0
  5903  2AD7  0251               	subwf	(vsnprintf@n+1)^(0+256),w
  5904  2AD8  3002               	movlw	2
  5905  2AD9  1903               	skipnz
  5906  2ADA  0250               	subwf	vsnprintf@n^(0+256),w
  5907  2ADB  1C03               	skipc
  5908  2ADC  2AE6               	goto	l8216
  5909  2ADD  0850               	movf	vsnprintf@n^(0+256),w
  5910  2ADE  3EFF               	addlw	255
  5911  2ADF  00DD               	movwf	(vsnprintf@f^(0+256)+4)
  5912  2AE0  30FF               	movlw	255
  5913  2AE1  3D51               	addwfc	(vsnprintf@n+1)^(0+256),w
  5914  2AE2  00DE               	movwf	((vsnprintf@f+1)^(0+256)+4)
  5915  2AE3  01DB               	clrf	(vsnprintf@f^(0+256)+2)
  5916  2AE4  01DC               	clrf	((vsnprintf@f+1)^(0+256)+2)
  5917  2AE5  2AEE               	goto	l8218
  5918  2AE6                     l8216:	
  5919  2AE6  3001               	movlw	1
  5920  2AE7  00DD               	movwf	(vsnprintf@f^(0+256)+4)
  5921  2AE8  3000               	movlw	0
  5922  2AE9  00DE               	movwf	(vsnprintf@f^(0+256)+5)
  5923  2AEA  3001               	movlw	1
  5924  2AEB  00DB               	movwf	(vsnprintf@f^(0+256)+2)
  5925  2AEC  3000               	movlw	0
  5926  2AED  00DC               	movwf	(vsnprintf@f^(0+256)+3)
  5927  2AEE                     l8218:	
  5928  2AEE  3059               	movlw	low vsnprintf@f
  5929  2AEF  0021               	movlb	1	; select bank1
  5930  2AF0  00E7               	movwf	vfprintf@fp^(0+128)
  5931  2AF1  3001               	movlw	high vsnprintf@f
  5932  2AF2  00E8               	movwf	(vfprintf@fp^(0+128)+1)
  5933  2AF3  0022               	movlb	2	; select bank2
  5934  2AF4  0853               	movf	(vsnprintf@fmt+1)^(0+256),w
  5935  2AF5  0021               	movlb	1	; select bank1
  5936  2AF6  00EA               	movwf	(vfprintf@fmt+1)^(0+128)
  5937  2AF7  0022               	movlb	2	; select bank2
  5938  2AF8  0852               	movf	vsnprintf@fmt^(0+256),w
  5939  2AF9  0021               	movlb	1	; select bank1
  5940  2AFA  00E9               	movwf	vfprintf@fmt^(0+128)
  5941  2AFB  0022               	movlb	2	; select bank2
  5942  2AFC  0854               	movf	vsnprintf@ap^(0+256),w
  5943  2AFD  0021               	movlb	1	; select bank1
  5944  2AFE  00EE               	movwf	??_vsnprintf^(0+128)
  5945  2AFF  086E               	movf	??_vsnprintf^(0+128),w
  5946  2B00  00EB               	movwf	vfprintf@ap^(0+128)
  5947  2B01  31A0  2000  31AA   	fcall	_vfprintf
  5948  2B04  0021               	movlb	1	; select bank1
  5949  2B05  0868               	movf	(?_vfprintf+1)^(0+128),w
  5950  2B06  0022               	movlb	2	; select bank2
  5951  2B07  00D8               	movwf	(vsnprintf@cnt+1)^(0+256)
  5952  2B08  0021               	movlb	1	; select bank1
  5953  2B09  0867               	movf	?_vfprintf^(0+128),w
  5954  2B0A  0022               	movlb	2	; select bank2
  5955  2B0B  00D7               	movwf	vsnprintf@cnt^(0+256)
  5956  2B0C  0850               	movf	vsnprintf@n^(0+256),w
  5957  2B0D  0451               	iorwf	(vsnprintf@n+1)^(0+256),w
  5958  2B0E  1D03               	btfss	3,2
  5959  2B0F  1BD8               	btfsc	(vsnprintf@cnt+1)^(0+256),7
  5960  2B10  2B37               	goto	l8232
  5961  2B11  0850               	movf	vsnprintf@n^(0+256),w
  5962  2B12  3EFF               	addlw	255
  5963  2B13  0021               	movlb	1	; select bank1
  5964  2B14  00EE               	movwf	??_vsnprintf^(0+128)
  5965  2B15  30FF               	movlw	255
  5966  2B16  0022               	movlb	2	; select bank2
  5967  2B17  3D51               	addwfc	(vsnprintf@n+1)^(0+256),w
  5968  2B18  0021               	movlb	1	; select bank1
  5969  2B19  00EF               	movwf	(??_vsnprintf+1)^(0+128)
  5970  2B1A  086F               	movf	(??_vsnprintf+1)^(0+128),w
  5971  2B1B  0022               	movlb	2	; select bank2
  5972  2B1C  0258               	subwf	(vsnprintf@cnt+1)^(0+256),w
  5973  2B1D  1D03               	skipz
  5974  2B1E  2B23               	goto	u11845
  5975  2B1F  0021               	movlb	1	; select bank1
  5976  2B20  086E               	movf	??_vsnprintf^(0+128),w
  5977  2B21  0022               	movlb	2	; select bank2
  5978  2B22  0257               	subwf	vsnprintf@cnt^(0+256),w
  5979  2B23                     u11845:	
  5980  2B23  1C03               	skipc
  5981  2B24  2B2C               	goto	l8228
  5982  2B25  0850               	movf	vsnprintf@n^(0+256),w
  5983  2B26  3EFF               	addlw	255
  5984  2B27  00D5               	movwf	_vsnprintf$1732^(0+256)
  5985  2B28  30FF               	movlw	255
  5986  2B29  3D51               	addwfc	(vsnprintf@n+1)^(0+256),w
  5987  2B2A  00D6               	movwf	(_vsnprintf$1732+1)^(0+256)
  5988  2B2B  2B30               	goto	l8230
  5989  2B2C                     l8228:	
  5990  2B2C  0858               	movf	(vsnprintf@cnt+1)^(0+256),w
  5991  2B2D  00D6               	movwf	(_vsnprintf$1732+1)^(0+256)
  5992  2B2E  0857               	movf	vsnprintf@cnt^(0+256),w
  5993  2B2F  00D5               	movwf	_vsnprintf$1732^(0+256)
  5994  2B30                     l8230:	
  5995  2B30  0855               	movf	_vsnprintf$1732^(0+256),w
  5996  2B31  074E               	addwf	vsnprintf@s^(0+256),w
  5997  2B32  0086               	movwf	6
  5998  2B33  0856               	movf	(_vsnprintf$1732+1)^(0+256),w
  5999  2B34  3D4F               	addwfc	(vsnprintf@s+1)^(0+256),w
  6000  2B35  0087               	movwf	7
  6001  2B36  0181               	clrf	1
  6002  2B37                     l8232:	
  6003  2B37  0858               	movf	(vsnprintf@cnt+1)^(0+256),w
  6004  2B38  00CF               	movwf	(?_vsnprintf+1)^(0+256)
  6005  2B39  0857               	movf	vsnprintf@cnt^(0+256),w
  6006  2B3A  00CE               	movwf	?_vsnprintf^(0+256)
  6007  2B3B  0008               	return
  6008  2B3C                     __end_of_vsnprintf:	
  6009                           
  6010                           	psect	text5
  6011  2000                     __ptext5:	
  6012 ;; *************** function _vfprintf *****************
  6013 ;; Defined at:
  6014 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6015 ;; Parameters:    Size  Location     Type
  6016 ;;  fp              2   71[BANK1 ] PTR struct _IO_FILE
  6017 ;;		 -> vsnprintf@f(6), 
  6018 ;;  fmt             2   73[BANK1 ] PTR const unsigned char 
  6019 ;;		 -> STR_24(18), STR_23(18), STR_22(19), STR_21(20), 
  6020 ;;		 -> STR_20(20), STR_19(21), STR_18(21), STR_17(21), 
  6021 ;;		 -> STR_16(22), STR_15(22), STR_14(21), STR_13(21), 
  6022 ;;		 -> STR_8(57), STR_7(44), STR_6(42), STR_3(43), 
  6023 ;;  ap              1   75[BANK1 ] PTR PTR void 
  6024 ;;		 -> snprintf@ap(1), 
  6025 ;; Auto vars:     Size  Location     Type
  6026 ;;  cfmt            2   76[BANK1 ] PTR unsigned char 
  6027 ;;		 -> STR_24(18), STR_23(18), STR_22(19), STR_21(20), 
  6028 ;;		 -> STR_20(20), STR_19(21), STR_18(21), STR_17(21), 
  6029 ;;		 -> STR_16(22), STR_15(22), STR_14(21), STR_13(21), 
  6030 ;;		 -> STR_8(57), STR_7(44), STR_6(42), STR_3(43), 
  6031 ;; Return value:  Size  Location     Type
  6032 ;;                  2   71[BANK1 ] int 
  6033 ;; Registers used:
  6034 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6035 ;; Tracked objects:
  6036 ;;		On entry : 0/0
  6037 ;;		On exit  : 0/0
  6038 ;;		Unchanged: 0/0
  6039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6040 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6041 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6042 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6043 ;;      Totals:         0       2       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6044 ;;Total ram usage:        9 bytes
  6045 ;; Hardware stack levels used:    1
  6046 ;; Hardware stack levels required when called:    7
  6047 ;; This function calls:
  6048 ;;		_vfpfcnvrt
  6049 ;; This function is called by:
  6050 ;;		_vsnprintf
  6051 ;; This function uses a non-reentrant model
  6052 ;;
  6053                           
  6054                           
  6055                           ;psect for function _vfprintf
  6056  2000                     _vfprintf:	
  6057                           
  6058                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6059                           
  6060                           ;incstack = 0
  6061                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6062  2000  0021               	movlb	1	; select bank1
  6063  2001  086A               	movf	(vfprintf@fmt+1)^(0+128),w
  6064  2002  00ED               	movwf	(vfprintf@cfmt+1)^(0+128)
  6065  2003  0869               	movf	vfprintf@fmt^(0+128),w
  6066  2004  00EC               	movwf	vfprintf@cfmt^(0+128)
  6067                           
  6068                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  6069  2005  0023               	movlb	3	; select bank3
  6070  2006  01BC               	clrf	_nout^(0+384)
  6071  2007  01BD               	clrf	(_nout+1)^(0+384)
  6072  2008                     l8198:	
  6073                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6074                           
  6075                           
  6076                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6077  2008  0021               	movlb	1	; select bank1
  6078  2009  086C               	movf	vfprintf@cfmt^(0+128),w
  6079  200A  0084               	movwf	4
  6080  200B  086D               	movf	(vfprintf@cfmt+1)^(0+128),w
  6081  200C  0085               	movwf	5
  6082  200D  0012               	moviw fsr0++
  6083  200E  1903               	btfsc	3,2
  6084  200F  282C               	goto	l8200
  6085                           
  6086                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  6087  2010  0868               	movf	(vfprintf@fp+1)^(0+128),w
  6088  2011  00E4               	movwf	(vfpfcnvrt@fp+1)^(0+128)
  6089  2012  0867               	movf	vfprintf@fp^(0+128),w
  6090  2013  00E3               	movwf	vfpfcnvrt@fp^(0+128)
  6091  2014  30EC               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  6092  2015  0020               	movlb	0	; select bank0
  6093  2016  00EE               	movwf	??_vfprintf
  6094  2017  086E               	movf	??_vfprintf,w
  6095  2018  0021               	movlb	1	; select bank1
  6096  2019  00E5               	movwf	vfpfcnvrt@fmt^(0+128)
  6097  201A  086B               	movf	vfprintf@ap^(0+128),w
  6098  201B  0020               	movlb	0	; select bank0
  6099  201C  00EF               	movwf	??_vfprintf+1
  6100  201D  086F               	movf	??_vfprintf+1,w
  6101  201E  0021               	movlb	1	; select bank1
  6102  201F  00E6               	movwf	vfpfcnvrt@ap^(0+128)
  6103  2020  3193  23BD  31A0   	fcall	_vfpfcnvrt
  6104  2023  0021               	movlb	1	; select bank1
  6105  2024  0863               	movf	?_vfpfcnvrt^(0+128),w
  6106  2025  0023               	movlb	3	; select bank3
  6107  2026  07BC               	addwf	_nout^(0+384),f
  6108  2027  0021               	movlb	1	; select bank1
  6109  2028  0864               	movf	(?_vfpfcnvrt+1)^(0+128),w
  6110  2029  0023               	movlb	3	; select bank3
  6111  202A  3DBD               	addwfc	(_nout+1)^(0+384),f
  6112  202B  2808               	goto	l8198
  6113  202C                     l8200:	
  6114                           
  6115                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  6116  202C  0023               	movlb	3	; select bank3
  6117  202D  083D               	movf	(_nout+1)^(0+384),w
  6118  202E  0021               	movlb	1	; select bank1
  6119  202F  00E8               	movwf	(?_vfprintf+1)^(0+128)
  6120  2030  0023               	movlb	3	; select bank3
  6121  2031  083C               	movf	_nout^(0+384),w
  6122  2032  0021               	movlb	1	; select bank1
  6123  2033  00E7               	movwf	?_vfprintf^(0+128)
  6124  2034  0008               	return
  6125  2035                     __end_of_vfprintf:	
  6126                           
  6127                           	psect	text6
  6128  13BD                     __ptext6:	
  6129 ;; *************** function _vfpfcnvrt *****************
  6130 ;; Defined at:
  6131 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6132 ;; Parameters:    Size  Location     Type
  6133 ;;  fp              2   67[BANK1 ] PTR struct _IO_FILE
  6134 ;;		 -> vsnprintf@f(6), 
  6135 ;;  fmt             1   69[BANK1 ] PTR PTR unsigned char 
  6136 ;;		 -> vfprintf@cfmt(2), 
  6137 ;;  ap              1   70[BANK1 ] PTR PTR void 
  6138 ;;		 -> snprintf@ap(1), 
  6139 ;; Auto vars:     Size  Location     Type
  6140 ;;  llu             8   38[BANK2 ] unsigned long long 
  6141 ;;  ll              8   28[BANK2 ] long long 
  6142 ;;  f               4   24[BANK2 ] long long 
  6143 ;;  ct              3   21[BANK2 ] unsigned char [3]
  6144 ;;  done            2   13[BANK2 ] int 
  6145 ;;  i               2    0        int 
  6146 ;;  c               1   37[BANK2 ] unsigned char 
  6147 ;;  vp              1   36[BANK2 ] PTR void 
  6148 ;;		 -> ?_snprintf(2), 
  6149 ;;  cp              1   12[BANK2 ] PTR unsigned char 
  6150 ;;		 -> ?_snprintf(2), 
  6151 ;; Return value:  Size  Location     Type
  6152 ;;                  2   67[BANK1 ] int 
  6153 ;; Registers used:
  6154 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6155 ;; Tracked objects:
  6156 ;;		On entry : 0/0
  6157 ;;		On exit  : 0/0
  6158 ;;		Unchanged: 0/0
  6159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6160 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6161 ;;      Locals:         0       0       0      34       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6162 ;;      Temps:          0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6163 ;;      Totals:         0       0       4      46       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6164 ;;Total ram usage:       50 bytes
  6165 ;; Hardware stack levels used:    1
  6166 ;; Hardware stack levels required when called:    6
  6167 ;; This function calls:
  6168 ;;		_atoi
  6169 ;;		_ctoa
  6170 ;;		_dtoa
  6171 ;;		_efgtoa
  6172 ;;		_fputc
  6173 ;;		_isdigit
  6174 ;;		_isupper
  6175 ;;		_otoa
  6176 ;;		_stoa
  6177 ;;		_strncmp
  6178 ;;		_tolower
  6179 ;;		_utoa
  6180 ;;		_xtoa
  6181 ;; This function is called by:
  6182 ;;		_vfprintf
  6183 ;; This function uses a non-reentrant model
  6184 ;;
  6185                           
  6186                           
  6187                           ;psect for function _vfpfcnvrt
  6188  13BD                     _vfpfcnvrt:	
  6189                           
  6190                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  6191                           
  6192                           ;incstack = 0
  6193                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6194  13BD  0021               	movlb	1	; select bank1
  6195  13BE  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6196  13BF  0086               	movwf	6
  6197  13C0  0187               	clrf	7
  6198  13C1  3F40               	moviw [0]fsr1
  6199  13C2  0022               	movlb	2	; select bank2
  6200  13C3  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6201  13C4  3F41               	moviw [1]fsr1
  6202  13C5  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6203  13C6  0820               	movf	??_vfpfcnvrt^(0+256),w
  6204  13C7  0084               	movwf	4
  6205  13C8  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  6206  13C9  0085               	movwf	5
  6207  13CA  0012               	moviw fsr0++
  6208  13CB  3A25               	xorlw	37
  6209  13CC  1D03               	btfss	3,2
  6210  13CD  2DD2               	goto	L16
  6211                           
  6212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  6213  13CE  0021               	movlb	1	; select bank1
  6214  13CF  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6215  13D0  0086               	movwf	6
  6216  13D1  0187               	clrf	7
  6217  13D2  3001               	movlw	1
  6218  13D3  0781               	addwf	1,f
  6219  13D4  3141               	addfsr 1,1
  6220  13D5  1803               	skipnc
  6221  13D6  0A81               	incf	1,f
  6222                           
  6223                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  6224  13D7  0023               	movlb	3	; select bank3
  6225  13D8  01BE               	clrf	_width^(0+384)
  6226  13D9  01BF               	clrf	(_width+1)^(0+384)
  6227  13DA  01C2               	clrf	_flags^(0+384)
  6228  13DB  01C3               	clrf	(_flags+1)^(0+384)
  6229                           
  6230                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  6231  13DC  30FF               	movlw	255
  6232  13DD  00C0               	movwf	_prec^(0+384)
  6233  13DE  30FF               	movlw	255
  6234  13DF  00C1               	movwf	(_prec^(0+384)+1)
  6235                           
  6236                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  6237  13E0  0022               	movlb	2	; select bank2
  6238  13E1  01AD               	clrf	vfpfcnvrt@done^(0+256)
  6239  13E2  01AE               	clrf	(vfpfcnvrt@done+1)^(0+256)
  6240                           
  6241                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6242  13E3  2C00               	goto	l7756
  6243  13E4                     l756:	
  6244                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 691:       
      +                                    case '-' :
  6245                           
  6246                           
  6247                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  6248  13E4  0023               	movlb	3	; select bank3
  6249  13E5  1442               	bsf	_flags^(0+384),0
  6250  13E6                     l7740:	
  6251                           
  6252                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  6253  13E6  0021               	movlb	1	; select bank1
  6254  13E7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6255  13E8  0086               	movwf	6
  6256  13E9  0187               	clrf	7
  6257  13EA  3001               	movlw	1
  6258  13EB  0781               	addwf	1,f
  6259  13EC  3141               	addfsr 1,1
  6260  13ED  1803               	skipnc
  6261  13EE  0A81               	incf	1,f
  6262                           
  6263                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  6264  13EF  2C00               	goto	l7756
  6265  13F0                     l758:	
  6266                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 695:       
      +                                    case '0' :
  6267                           
  6268                           
  6269                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  6270  13F0  0023               	movlb	3	; select bank3
  6271  13F1  14C2               	bsf	_flags^(0+384),1
  6272  13F2  2BE6               	goto	l7740
  6273  13F3                     l759:	
  6274                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 699:       
      +                                    case '+' :
  6275                           
  6276                           
  6277                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  6278  13F3  0023               	movlb	3	; select bank3
  6279  13F4  1542               	bsf	_flags^(0+384),2
  6280  13F5  2BE6               	goto	l7740
  6281  13F6                     l760:	
  6282                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 703:       
      +                                    case ' ' :
  6283                           
  6284                           
  6285                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  6286  13F6  0023               	movlb	3	; select bank3
  6287  13F7  15C2               	bsf	_flags^(0+384),3
  6288  13F8  2BE6               	goto	l7740
  6289  13F9                     l761:	
  6290                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 707:       
      +                                    case '#' :
  6291                           
  6292                           
  6293                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  6294  13F9  0023               	movlb	3	; select bank3
  6295  13FA  1642               	bsf	_flags^(0+384),4
  6296  13FB  2BE6               	goto	l7740
  6297  13FC                     l7750:	
  6298                           
  6299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  6300  13FC  3001               	movlw	1
  6301  13FD  00AD               	movwf	vfpfcnvrt@done^(0+256)
  6302  13FE  3000               	movlw	0
  6303  13FF  00AE               	movwf	(vfpfcnvrt@done^(0+256)+1)
  6304  1400                     l7756:	
  6305                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  6306                           
  6307                           
  6308                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6309  1400  0022               	movlb	2	; select bank2
  6310  1401  082D               	movf	vfpfcnvrt@done^(0+256),w
  6311  1402  042E               	iorwf	(vfpfcnvrt@done+1)^(0+256),w
  6312  1403  1D03               	btfss	3,2
  6313  1404  2C2C               	goto	l763
  6314  1405  0021               	movlb	1	; select bank1
  6315  1406  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6316  1407  0086               	movwf	6
  6317  1408  0187               	clrf	7
  6318  1409  3F40               	moviw [0]fsr1
  6319  140A  0022               	movlb	2	; select bank2
  6320  140B  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6321  140C  3F41               	moviw [1]fsr1
  6322  140D  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6323  140E  0820               	movf	??_vfpfcnvrt^(0+256),w
  6324  140F  0084               	movwf	4
  6325  1410  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  6326  1411  0085               	movwf	5
  6327  1412  0800               	movf	0,w	;code access
  6328  1413  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  6329  1414  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  6330                           
  6331                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6332                           ; Switch size 1, requested type "simple"
  6333                           ; Number of cases is 1, Range of values is 0 to 0
  6334                           ; switch strategies available:
  6335                           ; Name         Instructions Cycles
  6336                           ; simple_byte            4     3 (average)
  6337                           ; direct_byte            8     6 (fixed)
  6338                           ; jumptable            260     6 (fixed)
  6339                           ;	Chosen strategy is simple_byte
  6340  1415  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  6341  1416  3A00               	xorlw	0	; case 0
  6342  1417  1903               	skipnz
  6343  1418  2C1A               	goto	l8508
  6344  1419  2BFC               	goto	l7750
  6345  141A                     l8508:	
  6346                           
  6347                           ; Switch size 1, requested type "simple"
  6348                           ; Number of cases is 5, Range of values is 32 to 48
  6349                           ; switch strategies available:
  6350                           ; Name         Instructions Cycles
  6351                           ; simple_byte           16     9 (average)
  6352                           ; direct_byte           43     9 (fixed)
  6353                           ; jumptable            263     9 (fixed)
  6354                           ;	Chosen strategy is simple_byte
  6355  141A  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  6356  141B  3A20               	xorlw	32	; case 32
  6357  141C  1903               	skipnz
  6358  141D  2BF6               	goto	l760
  6359  141E  3A03               	xorlw	3	; case 35
  6360  141F  1903               	skipnz
  6361  1420  2BF9               	goto	l761
  6362  1421  3A08               	xorlw	8	; case 43
  6363  1422  1903               	skipnz
  6364  1423  2BF3               	goto	l759
  6365  1424  3A06               	xorlw	6	; case 45
  6366  1425  1903               	skipnz
  6367  1426  2BE4               	goto	l756
  6368  1427  3A1D               	xorlw	29	; case 48
  6369  1428  1903               	skipnz
  6370  1429  2BF0               	goto	l758
  6371  142A  2BFC               	goto	l7750
  6372  142B  2C00               	goto	l7756
  6373  142C                     l763:	
  6374                           
  6375                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  6376  142C  0023               	movlb	3	; select bank3
  6377  142D  1C42               	btfss	_flags^(0+384),0
  6378  142E  2C33               	goto	l7760
  6379                           
  6380                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  6381  142F  30FD               	movlw	253
  6382  1430  05C2               	andwf	_flags^(0+384),f
  6383  1431  30FF               	movlw	255
  6384  1432  05C3               	andwf	(_flags+1)^(0+384),f
  6385  1433                     l7760:	
  6386                           
  6387                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  6388  1433  0021               	movlb	1	; select bank1
  6389  1434  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6390  1435  0086               	movwf	6
  6391  1436  0187               	clrf	7
  6392  1437  3F40               	moviw [0]fsr1
  6393  1438  0022               	movlb	2	; select bank2
  6394  1439  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6395  143A  3F41               	moviw [1]fsr1
  6396  143B  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6397  143C  0820               	movf	??_vfpfcnvrt^(0+256),w
  6398  143D  0084               	movwf	4
  6399  143E  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  6400  143F  0085               	movwf	5
  6401  1440  0012               	moviw fsr0++
  6402  1441  3A2A               	xorlw	42
  6403  1442  1D03               	btfss	3,2
  6404  1443  2C65               	goto	l7772
  6405                           
  6406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  6407  1444  0021               	movlb	1	; select bank1
  6408  1445  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6409  1446  0086               	movwf	6
  6410  1447  0187               	clrf	7
  6411  1448  3001               	movlw	1
  6412  1449  0781               	addwf	1,f
  6413  144A  3141               	addfsr 1,1
  6414  144B  1803               	skipnc
  6415  144C  0A81               	incf	1,f
  6416                           
  6417                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6418  144D  0866               	movf	vfpfcnvrt@ap^(0+128),w
  6419  144E  0086               	movwf	6
  6420  144F  3001               	movlw	1	; select bank2/3
  6421  1450  0087               	movwf	7
  6422  1451  0801               	movf	1,w
  6423  1452  0084               	movwf	4
  6424  1453  3001               	movlw	1	; select bank2/3
  6425  1454  0085               	movwf	5
  6426  1455  3002               	movlw	2
  6427  1456  0781               	addwf	1,f
  6428  1457  3F00               	moviw [0]fsr0
  6429  1458  0023               	movlb	3	; select bank3
  6430  1459  00BE               	movwf	_width^(0+384)
  6431  145A  3F01               	moviw [1]fsr0
  6432  145B  00BF               	movwf	(_width+1)^(0+384)
  6433                           
  6434                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  6435  145C  1FBF               	btfss	(_width+1)^(0+384),7
  6436  145D  2CA7               	goto	l7782
  6437                           
  6438                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  6439  145E  1442               	bsf	_flags^(0+384),0
  6440                           
  6441                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  6442  145F  09BE               	comf	_width^(0+384),f
  6443  1460  09BF               	comf	(_width+1)^(0+384),f
  6444  1461  0ABE               	incf	_width^(0+384),f
  6445  1462  1903               	skipnz
  6446  1463  0ABF               	incf	(_width+1)^(0+384),f
  6447  1464  2CA7               	goto	l7782
  6448  1465                     l7772:	
  6449                           
  6450                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  6451  1465  0021               	movlb	1	; select bank1
  6452  1466  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6453  1467  0086               	movwf	6
  6454  1468  0187               	clrf	7
  6455  1469  3F40               	moviw [0]fsr1
  6456  146A  00F7               	movwf	atoi@s
  6457  146B  3F41               	moviw [1]fsr1
  6458  146C  00F8               	movwf	atoi@s+1
  6459  146D  31AD  255F  3193   	fcall	_atoi
  6460  1470  0878               	movf	?_atoi+1,w
  6461  1471  0023               	movlb	3	; select bank3
  6462  1472  00BF               	movwf	(_width+1)^(0+384)
  6463  1473  0877               	movf	?_atoi,w
  6464  1474  00BE               	movwf	_width^(0+384)
  6465                           
  6466                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6467  1475  2C7F               	goto	l7776
  6468  1476                     l7774:	
  6469                           
  6470                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  6471  1476  0021               	movlb	1	; select bank1
  6472  1477  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6473  1478  0086               	movwf	6
  6474  1479  0187               	clrf	7
  6475  147A  3001               	movlw	1
  6476  147B  0781               	addwf	1,f
  6477  147C  3141               	addfsr 1,1
  6478  147D  1803               	skipnc
  6479  147E  0A81               	incf	1,f
  6480  147F                     l7776:	
  6481  147F  0021               	movlb	1	; select bank1
  6482  1480  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6483  1481  0086               	movwf	6
  6484  1482  0187               	clrf	7
  6485  1483  3F40               	moviw [0]fsr1
  6486  1484  0022               	movlb	2	; select bank2
  6487  1485  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6488  1486  3F41               	moviw [1]fsr1
  6489  1487  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6490  1488  0820               	movf	??_vfpfcnvrt^(0+256),w
  6491  1489  0084               	movwf	4
  6492  148A  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  6493  148B  0085               	movwf	5
  6494  148C  0800               	movf	0,w	;code access
  6495  148D  3ED0               	addlw	208
  6496  148E  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  6497  148F  30FF               	movlw	255
  6498  1490  1803               	skipnc
  6499  1491  3000               	movlw	0
  6500  1492  00A3               	movwf	((??_vfpfcnvrt+2)^(0+256)+1)
  6501  1493  3000               	movlw	0
  6502  1494  0223               	subwf	(??_vfpfcnvrt+3)^(0+256),w
  6503  1495  300A               	movlw	10
  6504  1496  1903               	skipnz
  6505  1497  0222               	subwf	(??_vfpfcnvrt+2)^(0+256),w
  6506  1498  1803               	btfsc	3,0
  6507  1499  2C9C               	goto	u11250
  6508  149A  3001               	movlw	1
  6509  149B  2C9D               	goto	u11260
  6510  149C                     u11250:	
  6511  149C  3000               	movlw	0
  6512  149D                     u11260:	
  6513  149D  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  6514  149E  01A5               	clrf	((??_vfpfcnvrt+4)^(0+256)+1)
  6515  149F  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  6516  14A0  00AF               	movwf	_vfpfcnvrt$1103^(0+256)
  6517  14A1  0825               	movf	(??_vfpfcnvrt+5)^(0+256),w
  6518  14A2  00B0               	movwf	(_vfpfcnvrt$1103+1)^(0+256)
  6519  14A3  082F               	movf	_vfpfcnvrt$1103^(0+256),w
  6520  14A4  0430               	iorwf	(_vfpfcnvrt$1103+1)^(0+256),w
  6521  14A5  1D03               	btfss	3,2
  6522  14A6  2C76               	goto	l7774
  6523  14A7                     l7782:	
  6524                           
  6525                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  6526  14A7  0021               	movlb	1	; select bank1
  6527  14A8  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6528  14A9  0086               	movwf	6
  6529  14AA  0187               	clrf	7
  6530  14AB  3F40               	moviw [0]fsr1
  6531  14AC  0022               	movlb	2	; select bank2
  6532  14AD  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6533  14AE  3F41               	moviw [1]fsr1
  6534  14AF  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6535  14B0  0820               	movf	??_vfpfcnvrt^(0+256),w
  6536  14B1  0084               	movwf	4
  6537  14B2  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  6538  14B3  0085               	movwf	5
  6539  14B4  0012               	moviw fsr0++
  6540  14B5  3A2E               	xorlw	46
  6541  14B6  1D03               	btfss	3,2
  6542  14B7  2D2F               	goto	l7804
  6543                           
  6544                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  6545  14B8  0023               	movlb	3	; select bank3
  6546  14B9  01C0               	clrf	_prec^(0+384)
  6547  14BA  01C1               	clrf	(_prec+1)^(0+384)
  6548                           
  6549                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  6550  14BB  0021               	movlb	1	; select bank1
  6551  14BC  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6552  14BD  0086               	movwf	6
  6553  14BE  0187               	clrf	7
  6554  14BF  3001               	movlw	1
  6555  14C0  0781               	addwf	1,f
  6556  14C1  3141               	addfsr 1,1
  6557  14C2  1803               	skipnc
  6558  14C3  0A81               	incf	1,f
  6559                           
  6560                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  6561  14C4  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6562  14C5  0086               	movwf	6
  6563  14C6  0187               	clrf	7
  6564  14C7  3F40               	moviw [0]fsr1
  6565  14C8  0022               	movlb	2	; select bank2
  6566  14C9  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6567  14CA  3F41               	moviw [1]fsr1
  6568  14CB  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6569  14CC  0820               	movf	??_vfpfcnvrt^(0+256),w
  6570  14CD  0084               	movwf	4
  6571  14CE  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  6572  14CF  0085               	movwf	5
  6573  14D0  0012               	moviw fsr0++
  6574  14D1  3A2A               	xorlw	42
  6575  14D2  1D03               	btfss	3,2
  6576  14D3  2CED               	goto	l7794
  6577                           
  6578                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  6579  14D4  0021               	movlb	1	; select bank1
  6580  14D5  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6581  14D6  0086               	movwf	6
  6582  14D7  0187               	clrf	7
  6583  14D8  3001               	movlw	1
  6584  14D9  0781               	addwf	1,f
  6585  14DA  3141               	addfsr 1,1
  6586  14DB  1803               	skipnc
  6587  14DC  0A81               	incf	1,f
  6588                           
  6589                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  6590  14DD  0866               	movf	vfpfcnvrt@ap^(0+128),w
  6591  14DE  0086               	movwf	6
  6592  14DF  3001               	movlw	1	; select bank2/3
  6593  14E0  0087               	movwf	7
  6594  14E1  0801               	movf	1,w
  6595  14E2  0084               	movwf	4
  6596  14E3  3001               	movlw	1	; select bank2/3
  6597  14E4  0085               	movwf	5
  6598  14E5  3002               	movlw	2
  6599  14E6  0781               	addwf	1,f
  6600  14E7  3F00               	moviw [0]fsr0
  6601  14E8  0023               	movlb	3	; select bank3
  6602  14E9  00C0               	movwf	_prec^(0+384)
  6603  14EA  3F01               	moviw [1]fsr0
  6604  14EB  00C1               	movwf	(_prec+1)^(0+384)
  6605                           
  6606                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  6607  14EC  2D2F               	goto	l7804
  6608  14ED                     l7794:	
  6609                           
  6610                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  6611  14ED  0021               	movlb	1	; select bank1
  6612  14EE  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6613  14EF  0086               	movwf	6
  6614  14F0  0187               	clrf	7
  6615  14F1  3F40               	moviw [0]fsr1
  6616  14F2  00F7               	movwf	atoi@s
  6617  14F3  3F41               	moviw [1]fsr1
  6618  14F4  00F8               	movwf	atoi@s+1
  6619  14F5  31AD  255F  3193   	fcall	_atoi
  6620  14F8  0878               	movf	?_atoi+1,w
  6621  14F9  0023               	movlb	3	; select bank3
  6622  14FA  00C1               	movwf	(_prec+1)^(0+384)
  6623  14FB  0877               	movf	?_atoi,w
  6624  14FC  00C0               	movwf	_prec^(0+384)
  6625                           
  6626                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6627  14FD  2D07               	goto	l7798
  6628  14FE                     l7796:	
  6629                           
  6630                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  6631  14FE  0021               	movlb	1	; select bank1
  6632  14FF  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6633  1500  0086               	movwf	6
  6634  1501  0187               	clrf	7
  6635  1502  3001               	movlw	1
  6636  1503  0781               	addwf	1,f
  6637  1504  3141               	addfsr 1,1
  6638  1505  1803               	skipnc
  6639  1506  0A81               	incf	1,f
  6640  1507                     l7798:	
  6641  1507  0021               	movlb	1	; select bank1
  6642  1508  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6643  1509  0086               	movwf	6
  6644  150A  0187               	clrf	7
  6645  150B  3F40               	moviw [0]fsr1
  6646  150C  0022               	movlb	2	; select bank2
  6647  150D  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6648  150E  3F41               	moviw [1]fsr1
  6649  150F  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6650  1510  0820               	movf	??_vfpfcnvrt^(0+256),w
  6651  1511  0084               	movwf	4
  6652  1512  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  6653  1513  0085               	movwf	5
  6654  1514  0800               	movf	0,w	;code access
  6655  1515  3ED0               	addlw	208
  6656  1516  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  6657  1517  30FF               	movlw	255
  6658  1518  1803               	skipnc
  6659  1519  3000               	movlw	0
  6660  151A  00A3               	movwf	((??_vfpfcnvrt+2)^(0+256)+1)
  6661  151B  3000               	movlw	0
  6662  151C  0223               	subwf	(??_vfpfcnvrt+3)^(0+256),w
  6663  151D  300A               	movlw	10
  6664  151E  1903               	skipnz
  6665  151F  0222               	subwf	(??_vfpfcnvrt+2)^(0+256),w
  6666  1520  1803               	btfsc	3,0
  6667  1521  2D24               	goto	u11300
  6668  1522  3001               	movlw	1
  6669  1523  2D25               	goto	u11310
  6670  1524                     u11300:	
  6671  1524  3000               	movlw	0
  6672  1525                     u11310:	
  6673  1525  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  6674  1526  01A5               	clrf	((??_vfpfcnvrt+4)^(0+256)+1)
  6675  1527  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  6676  1528  00B1               	movwf	_vfpfcnvrt$1104^(0+256)
  6677  1529  0825               	movf	(??_vfpfcnvrt+5)^(0+256),w
  6678  152A  00B2               	movwf	(_vfpfcnvrt$1104+1)^(0+256)
  6679  152B  0831               	movf	_vfpfcnvrt$1104^(0+256),w
  6680  152C  0432               	iorwf	(_vfpfcnvrt$1104+1)^(0+256),w
  6681  152D  1D03               	btfss	3,2
  6682  152E  2CFE               	goto	l7796
  6683  152F                     l7804:	
  6684                           
  6685                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  6686  152F  0021               	movlb	1	; select bank1
  6687  1530  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6688  1531  0086               	movwf	6
  6689  1532  0187               	clrf	7
  6690  1533  3F40               	moviw [0]fsr1
  6691  1534  0022               	movlb	2	; select bank2
  6692  1535  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6693  1536  3F41               	moviw [1]fsr1
  6694  1537  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6695  1538  0820               	movf	??_vfpfcnvrt^(0+256),w
  6696  1539  0084               	movwf	4
  6697  153A  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  6698  153B  0085               	movwf	5
  6699  153C  0800               	movf	0,w	;code access
  6700  153D  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  6701  153E  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  6702  153F  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  6703  1540  00F7               	movwf	tolower@c
  6704  1541  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  6705  1542  00F8               	movwf	tolower@c+1
  6706  1543  31B5  251B  3193   	fcall	_tolower
  6707  1546  0877               	movf	?_tolower,w
  6708  1547  0022               	movlb	2	; select bank2
  6709  1548  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  6710  1549  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  6711  154A  00B5               	movwf	vfpfcnvrt@ct^(0+256)
  6712                           
  6713                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  6714  154B  0835               	movf	vfpfcnvrt@ct^(0+256),w
  6715  154C  1903               	btfsc	3,2
  6716  154D  2D8F               	goto	l7814
  6717                           
  6718                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  6719  154E  0021               	movlb	1	; select bank1
  6720  154F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6721  1550  0086               	movwf	6
  6722  1551  0187               	clrf	7
  6723  1552  3F40               	moviw [0]fsr1
  6724  1553  0022               	movlb	2	; select bank2
  6725  1554  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6726  1555  3F41               	moviw [1]fsr1
  6727  1556  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6728  1557  3001               	movlw	1
  6729  1558  0720               	addwf	??_vfpfcnvrt^(0+256),w
  6730  1559  0084               	movwf	4
  6731  155A  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
  6732  155B  1803               	skipnc
  6733  155C  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
  6734  155D  0085               	movwf	5
  6735  155E  0800               	movf	0,w	;code access
  6736  155F  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  6737  1560  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  6738  1561  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  6739  1562  00F7               	movwf	tolower@c
  6740  1563  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  6741  1564  00F8               	movwf	tolower@c+1
  6742  1565  31B5  251B  3193   	fcall	_tolower
  6743  1568  0877               	movf	?_tolower,w
  6744  1569  0022               	movlb	2	; select bank2
  6745  156A  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  6746  156B  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  6747  156C  00B6               	movwf	(vfpfcnvrt@ct^(0+256)+1)
  6748                           
  6749                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  6750  156D  0836               	movf	(vfpfcnvrt@ct^(0+256)+1),w
  6751  156E  1903               	btfsc	3,2
  6752  156F  2D8F               	goto	l7814
  6753                           
  6754                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  6755  1570  0021               	movlb	1	; select bank1
  6756  1571  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6757  1572  0086               	movwf	6
  6758  1573  0187               	clrf	7
  6759  1574  3F40               	moviw [0]fsr1
  6760  1575  0022               	movlb	2	; select bank2
  6761  1576  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6762  1577  3F41               	moviw [1]fsr1
  6763  1578  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6764  1579  3002               	movlw	2
  6765  157A  0720               	addwf	??_vfpfcnvrt^(0+256),w
  6766  157B  0084               	movwf	4
  6767  157C  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
  6768  157D  1803               	skipnc
  6769  157E  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
  6770  157F  0085               	movwf	5
  6771  1580  0800               	movf	0,w	;code access
  6772  1581  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  6773  1582  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  6774  1583  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  6775  1584  00F7               	movwf	tolower@c
  6776  1585  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  6777  1586  00F8               	movwf	tolower@c+1
  6778  1587  31B5  251B  3193   	fcall	_tolower
  6779  158A  0877               	movf	?_tolower,w
  6780  158B  0022               	movlb	2	; select bank2
  6781  158C  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  6782  158D  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  6783  158E  00B7               	movwf	(vfpfcnvrt@ct^(0+256)+2)
  6784  158F                     l7814:	
  6785                           
  6786                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  6787  158F  0021               	movlb	1	; select bank1
  6788  1590  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6789  1591  0086               	movwf	6
  6790  1592  0187               	clrf	7
  6791  1593  3F40               	moviw [0]fsr1
  6792  1594  0022               	movlb	2	; select bank2
  6793  1595  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6794  1596  3F41               	moviw [1]fsr1
  6795  1597  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6796  1598  0820               	movf	??_vfpfcnvrt^(0+256),w
  6797  1599  0084               	movwf	4
  6798  159A  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  6799  159B  0085               	movwf	5
  6800  159C  0012               	moviw fsr0++
  6801  159D  3A63               	xorlw	99
  6802  159E  31AB  1D03         	btfss	3,2
  6803  15A0  2BBE               	goto	l7824
  6804                           
  6805                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  6806  15A1  0021               	movlb	1	; select bank1
  6807  15A2  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6808  15A3  0086               	movwf	6
  6809  15A4  0187               	clrf	7
  6810  15A5  3001               	movlw	1
  6811  15A6  0781               	addwf	1,f
  6812  15A7  3141               	addfsr 1,1
  6813  15A8  1803               	skipnc
  6814  15A9  0A81               	incf	1,f
  6815                           
  6816                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6817  15AA  0866               	movf	vfpfcnvrt@ap^(0+128),w
  6818  15AB  0086               	movwf	6
  6819  15AC  3001               	movlw	1	; select bank2/3
  6820  15AD  0087               	movwf	7
  6821  15AE  0801               	movf	1,w
  6822  15AF  0084               	movwf	4
  6823  15B0  3001               	movlw	1	; select bank2/3
  6824  15B1  0085               	movwf	5
  6825  15B2  3002               	movlw	2
  6826  15B3  0781               	addwf	1,f
  6827  15B4  0800               	movf	0,w
  6828  15B5  0022               	movlb	2	; select bank2
  6829  15B6  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6830  15B7  0820               	movf	??_vfpfcnvrt^(0+256),w
  6831  15B8  00C5               	movwf	vfpfcnvrt@c^(0+256)
  6832                           
  6833                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  6834  15B9  0021               	movlb	1	; select bank1
  6835  15BA  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
  6836  15BB  0020               	movlb	0	; select bank0
  6837  15BC  00B1               	movwf	ctoa@fp+1
  6838  15BD  0021               	movlb	1	; select bank1
  6839  15BE  0863               	movf	vfpfcnvrt@fp^(0+128),w
  6840  15BF  0020               	movlb	0	; select bank0
  6841  15C0  00B0               	movwf	ctoa@fp
  6842  15C1  0022               	movlb	2	; select bank2
  6843  15C2  0845               	movf	vfpfcnvrt@c^(0+256),w
  6844  15C3  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6845  15C4  0820               	movf	??_vfpfcnvrt^(0+256),w
  6846  15C5  0020               	movlb	0	; select bank0
  6847  15C6  00B2               	movwf	ctoa@c
  6848  15C7  31B5  2585         	fcall	_ctoa
  6849  15C9  0020               	movlb	0	; select bank0
  6850  15CA  0831               	movf	?_ctoa+1,w
  6851  15CB  0021               	movlb	1	; select bank1
  6852  15CC  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
  6853  15CD  0020               	movlb	0	; select bank0
  6854  15CE  0830               	movf	?_ctoa,w
  6855  15CF  0021               	movlb	1	; select bank1
  6856  15D0  00E3               	movwf	?_vfpfcnvrt^(0+128)
  6857  15D1  0008               	return
  6858  15D2                     L16:	
  6859  15D2                     L15:	
  6860  15D2  318F  2FDA         	ljmp	l8180
  6861                           
  6862                           	psect	text7
  6863  1CC5                     __ptext7:	
  6864 ;; *************** function _xtoa *****************
  6865 ;; Defined at:
  6866 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6867 ;; Parameters:    Size  Location     Type
  6868 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  6869 ;;		 -> vsnprintf@f(6), 
  6870 ;;  d               8   18[BANK0 ] unsigned long long 
  6871 ;;  x               1   26[BANK0 ] unsigned char 
  6872 ;; Auto vars:     Size  Location     Type
  6873 ;;  n               8   43[BANK0 ] unsigned long long 
  6874 ;;  c               2   53[BANK0 ] int 
  6875 ;;  i               2   51[BANK0 ] int 
  6876 ;;  w               2   41[BANK0 ] int 
  6877 ;;  p               2   39[BANK0 ] int 
  6878 ;; Return value:  Size  Location     Type
  6879 ;;                  2   16[BANK0 ] int 
  6880 ;; Registers used:
  6881 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6882 ;; Tracked objects:
  6883 ;;		On entry : 0/0
  6884 ;;		On exit  : 0/0
  6885 ;;		Unchanged: 0/0
  6886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6887 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6888 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6889 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6890 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6891 ;;Total ram usage:       39 bytes
  6892 ;; Hardware stack levels used:    1
  6893 ;; Hardware stack levels required when called:    5
  6894 ;; This function calls:
  6895 ;;		_isalpha
  6896 ;;		_isupper
  6897 ;;		_pad
  6898 ;;		_toupper
  6899 ;; This function is called by:
  6900 ;;		_vfpfcnvrt
  6901 ;; This function uses a non-reentrant model
  6902 ;;
  6903                           
  6904                           
  6905                           ;psect for function _xtoa
  6906  1CC5                     _xtoa:	
  6907                           
  6908                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  6909                           
  6910                           ;incstack = 0
  6911                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6912  1CC5  0023               	movlb	3	; select bank3
  6913  1CC6  1BC1               	btfsc	(_prec+1)^(0+384),7
  6914  1CC7  2CCC               	goto	l722
  6915                           
  6916                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  6917  1CC8  30FD               	movlw	253
  6918  1CC9  05C2               	andwf	_flags^(0+384),f
  6919  1CCA  30FF               	movlw	255
  6920  1CCB  05C3               	andwf	(_flags+1)^(0+384),f
  6921  1CCC                     l722:	
  6922                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 631:     }
  6923                           
  6924                           
  6925                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  6926  1CCC  0841               	movf	(_prec+1)^(0+384),w
  6927  1CCD  3A80               	xorlw	128
  6928  1CCE  0020               	movlb	0	; select bank0
  6929  1CCF  00BB               	movwf	??_xtoa
  6930  1CD0  3080               	movlw	128
  6931  1CD1  023B               	subwf	??_xtoa,w
  6932  1CD2  1D03               	skipz
  6933  1CD3  2CD7               	goto	u10975
  6934  1CD4  3001               	movlw	1
  6935  1CD5  0023               	movlb	3	; select bank3
  6936  1CD6  0240               	subwf	_prec^(0+384),w
  6937  1CD7                     u10975:	
  6938  1CD7  1803               	skipnc
  6939  1CD8  2CDF               	goto	l7626
  6940  1CD9  3001               	movlw	1
  6941  1CDA  0020               	movlb	0	; select bank0
  6942  1CDB  00C7               	movwf	xtoa@p
  6943  1CDC  3000               	movlw	0
  6944  1CDD  00C8               	movwf	xtoa@p+1
  6945  1CDE  2CE7               	goto	l726
  6946  1CDF                     l7626:	
  6947  1CDF  0023               	movlb	3	; select bank3
  6948  1CE0  0841               	movf	(_prec+1)^(0+384),w
  6949  1CE1  0020               	movlb	0	; select bank0
  6950  1CE2  00C8               	movwf	xtoa@p+1
  6951  1CE3  0023               	movlb	3	; select bank3
  6952  1CE4  0840               	movf	_prec^(0+384),w
  6953  1CE5  0020               	movlb	0	; select bank0
  6954  1CE6  00C7               	movwf	xtoa@p
  6955  1CE7                     l726:	
  6956                           
  6957                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  6958  1CE7  0023               	movlb	3	; select bank3
  6959  1CE8  083F               	movf	(_width+1)^(0+384),w
  6960  1CE9  0020               	movlb	0	; select bank0
  6961  1CEA  00CA               	movwf	xtoa@w+1
  6962  1CEB  0023               	movlb	3	; select bank3
  6963  1CEC  083E               	movf	_width^(0+384),w
  6964  1CED  0020               	movlb	0	; select bank0
  6965  1CEE  00C9               	movwf	xtoa@w
  6966                           
  6967                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  6968  1CEF  0023               	movlb	3	; select bank3
  6969  1CF0  1E42               	btfss	_flags^(0+384),4
  6970  1CF1  2CF7               	goto	l7632
  6971                           
  6972                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  6973  1CF2  30FE               	movlw	254
  6974  1CF3  0020               	movlb	0	; select bank0
  6975  1CF4  07C9               	addwf	xtoa@w,f
  6976  1CF5  30FF               	movlw	255
  6977  1CF6  3DCA               	addwfc	xtoa@w+1,f
  6978  1CF7                     l7632:	
  6979                           
  6980                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  6981  1CF7  0020               	movlb	0	; select bank0
  6982  1CF8  0832               	movf	xtoa@d,w
  6983  1CF9  00CB               	movwf	xtoa@n
  6984  1CFA  0833               	movf	xtoa@d+1,w
  6985  1CFB  00CC               	movwf	xtoa@n+1
  6986  1CFC  0834               	movf	xtoa@d+2,w
  6987  1CFD  00CD               	movwf	xtoa@n+2
  6988  1CFE  0835               	movf	xtoa@d+3,w
  6989  1CFF  00CE               	movwf	xtoa@n+3
  6990  1D00  0836               	movf	xtoa@d+4,w
  6991  1D01  00CF               	movwf	xtoa@n+4
  6992  1D02  0837               	movf	xtoa@d+5,w
  6993  1D03  00D0               	movwf	xtoa@n+5
  6994  1D04  0838               	movf	xtoa@d+6,w
  6995  1D05  00D1               	movwf	xtoa@n+6
  6996  1D06  0839               	movf	xtoa@d+7,w
  6997  1D07  00D2               	movwf	xtoa@n+7
  6998                           
  6999                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  7000  1D08  304F               	movlw	79
  7001  1D09  00D3               	movwf	xtoa@i
  7002  1D0A  3000               	movlw	0
  7003  1D0B  00D4               	movwf	xtoa@i+1
  7004                           
  7005                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  7006  1D0C  0024               	movlb	4	; select bank4
  7007  1D0D  01EF               	clrf	(_dbuf^(0+512)+79)
  7008                           
  7009                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7010  1D0E  2DB9               	goto	l7664
  7011  1D0F                     l7636:	
  7012                           
  7013                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  7014  1D0F  30FF               	movlw	255
  7015  1D10  0020               	movlb	0	; select bank0
  7016  1D11  07D3               	addwf	xtoa@i,f
  7017  1D12  30FF               	movlw	255
  7018  1D13  3DD4               	addwfc	xtoa@i+1,f
  7019                           
  7020                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  7021  1D14  300F               	movlw	15
  7022  1D15  054B               	andwf	xtoa@n,w
  7023  1D16  00D5               	movwf	xtoa@c
  7024  1D17  3000               	movlw	0
  7025  1D18  054C               	andwf	xtoa@n+1,w
  7026  1D19  00D6               	movwf	xtoa@c+1
  7027                           
  7028                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  7029  1D1A  0856               	movf	xtoa@c+1,w
  7030  1D1B  3A80               	xorlw	128
  7031  1D1C  00BB               	movwf	??_xtoa
  7032  1D1D  3080               	movlw	128
  7033  1D1E  023B               	subwf	??_xtoa,w
  7034  1D1F  1D03               	skipz
  7035  1D20  2D23               	goto	u10995
  7036  1D21  300A               	movlw	10
  7037  1D22  0255               	subwf	xtoa@c,w
  7038  1D23                     u10995:	
  7039  1D23  1C03               	skipc
  7040  1D24  2D29               	goto	l7640
  7041  1D25  0020               	movlb	0	; select bank0
  7042  1D26  0855               	movf	xtoa@c,w
  7043  1D27  3E57               	addlw	87
  7044  1D28  2D2C               	goto	L2
  7045  1D29                     l7640:	
  7046  1D29  0020               	movlb	0	; select bank0
  7047  1D2A  0855               	movf	xtoa@c,w
  7048  1D2B  3E30               	addlw	48
  7049  1D2C                     L2:	
  7050  1D2C  00D5               	movwf	xtoa@c
  7051  1D2D  3000               	movlw	0
  7052  1D2E  3D56               	addwfc	xtoa@c+1,w
  7053  1D2F  00D6               	movwf	xtoa@c+1
  7054  1D30  083A               	movf	xtoa@x,w
  7055  1D31  3EBF               	addlw	191
  7056  1D32  00BB               	movwf	??_xtoa
  7057  1D33  30FF               	movlw	255
  7058  1D34  1803               	skipnc
  7059  1D35  3000               	movlw	0
  7060  1D36  00BC               	movwf	??_xtoa+1
  7061  1D37  3000               	movlw	0
  7062  1D38  023C               	subwf	??_xtoa+1,w
  7063  1D39  301A               	movlw	26
  7064  1D3A  1903               	skipnz
  7065  1D3B  023B               	subwf	??_xtoa,w
  7066  1D3C  1803               	btfsc	3,0
  7067  1D3D  2D40               	goto	u11000
  7068  1D3E  3001               	movlw	1
  7069  1D3F  2D41               	goto	u11010
  7070  1D40                     u11000:	
  7071  1D40  3000               	movlw	0
  7072  1D41                     u11010:	
  7073  1D41  00BD               	movwf	??_xtoa+2
  7074  1D42  01BE               	clrf	??_xtoa+3
  7075  1D43  083D               	movf	??_xtoa+2,w
  7076  1D44  00C3               	movwf	_xtoa$1088
  7077  1D45  083E               	movf	??_xtoa+3,w
  7078  1D46  00C4               	movwf	_xtoa$1088+1
  7079  1D47  0843               	movf	_xtoa$1088,w
  7080  1D48  0444               	iorwf	_xtoa$1088+1,w
  7081  1D49  1903               	btfsc	3,2
  7082  1D4A  2D77               	goto	l7656
  7083  1D4B  3020               	movlw	32
  7084  1D4C  0455               	iorwf	xtoa@c,w
  7085  1D4D  00BB               	movwf	??_xtoa
  7086  1D4E  3000               	movlw	0
  7087  1D4F  0456               	iorwf	xtoa@c+1,w
  7088  1D50  00BC               	movwf	??_xtoa+1
  7089  1D51  083B               	movf	??_xtoa,w
  7090  1D52  3E9F               	addlw	159
  7091  1D53  00BD               	movwf	??_xtoa+2
  7092  1D54  30FF               	movlw	255
  7093  1D55  3D3C               	addwfc	??_xtoa+1,w
  7094  1D56  00BE               	movwf	??_xtoa+3
  7095  1D57  3000               	movlw	0
  7096  1D58  023E               	subwf	??_xtoa+3,w
  7097  1D59  301A               	movlw	26
  7098  1D5A  1903               	skipnz
  7099  1D5B  023D               	subwf	??_xtoa+2,w
  7100  1D5C  1803               	btfsc	3,0
  7101  1D5D  2D60               	goto	u11030
  7102  1D5E  3001               	movlw	1
  7103  1D5F  2D61               	goto	u11040
  7104  1D60                     u11030:	
  7105  1D60  3000               	movlw	0
  7106  1D61                     u11040:	
  7107  1D61  00BF               	movwf	??_xtoa+4
  7108  1D62  01C0               	clrf	??_xtoa+5
  7109  1D63  083F               	movf	??_xtoa+4,w
  7110  1D64  00C5               	movwf	_xtoa$1089
  7111  1D65  0840               	movf	??_xtoa+5,w
  7112  1D66  00C6               	movwf	_xtoa$1089+1
  7113  1D67  0845               	movf	_xtoa$1089,w
  7114  1D68  0446               	iorwf	_xtoa$1089+1,w
  7115  1D69  1903               	btfsc	3,2
  7116  1D6A  2D77               	goto	l7656
  7117                           
  7118                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  7119  1D6B  0856               	movf	xtoa@c+1,w
  7120  1D6C  00F8               	movwf	toupper@c+1
  7121  1D6D  0855               	movf	xtoa@c,w
  7122  1D6E  00F7               	movwf	toupper@c
  7123  1D6F  31B5  253D  319C   	fcall	_toupper
  7124  1D72  0878               	movf	?_toupper+1,w
  7125  1D73  0020               	movlb	0	; select bank0
  7126  1D74  00D6               	movwf	xtoa@c+1
  7127  1D75  0877               	movf	?_toupper,w
  7128  1D76  00D5               	movwf	xtoa@c
  7129  1D77                     l7656:	
  7130                           
  7131                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  7132  1D77  0855               	movf	xtoa@c,w
  7133  1D78  00BB               	movwf	??_xtoa
  7134  1D79  0853               	movf	xtoa@i,w
  7135  1D7A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7136  1D7B  0086               	movwf	6
  7137  1D7C  3002               	movlw	2	; select bank4/5
  7138  1D7D  0087               	movwf	7
  7139  1D7E  083B               	movf	??_xtoa,w
  7140  1D7F  0081               	movwf	1
  7141                           
  7142                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  7143  1D80  30FF               	movlw	255
  7144  1D81  07C7               	addwf	xtoa@p,f
  7145  1D82  30FF               	movlw	255
  7146  1D83  3DC8               	addwfc	xtoa@p+1,f
  7147                           
  7148                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  7149  1D84  30FF               	movlw	255
  7150  1D85  07C9               	addwf	xtoa@w,f
  7151  1D86  30FF               	movlw	255
  7152  1D87  3DCA               	addwfc	xtoa@w+1,f
  7153                           
  7154                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  7155  1D88  304B               	movlw	low xtoa@n
  7156  1D89  0086               	movwf	6
  7157  1D8A  3000               	movlw	high xtoa@n
  7158  1D8B  0087               	movwf	7
  7159  1D8C  3F40               	moviw [0]fsr1
  7160  1D8D  00BB               	movwf	??_xtoa
  7161  1D8E  3F41               	moviw [1]fsr1
  7162  1D8F  00BC               	movwf	??_xtoa+1
  7163  1D90  3F42               	moviw [2]fsr1
  7164  1D91  00BD               	movwf	??_xtoa+2
  7165  1D92  3F43               	moviw [3]fsr1
  7166  1D93  00BE               	movwf	??_xtoa+3
  7167  1D94  3F44               	moviw [4]fsr1
  7168  1D95  00BF               	movwf	??_xtoa+4
  7169  1D96  3F45               	moviw [5]fsr1
  7170  1D97  00C0               	movwf	??_xtoa+5
  7171  1D98  3F46               	moviw [6]fsr1
  7172  1D99  00C1               	movwf	??_xtoa+6
  7173  1D9A  3F47               	moviw [7]fsr1
  7174  1D9B  00C2               	movwf	??_xtoa+7
  7175  1D9C  3004               	movlw	4
  7176  1D9D                     u11065:	
  7177  1D9D  0020               	movlb	0	; select bank0
  7178  1D9E  36C2               	lsrf	??_xtoa+7,f
  7179  1D9F  0CC1               	rrf	??_xtoa+6,f
  7180  1DA0  0CC0               	rrf	??_xtoa+5,f
  7181  1DA1  0CBF               	rrf	??_xtoa+4,f
  7182  1DA2  0CBE               	rrf	??_xtoa+3,f
  7183  1DA3  0CBD               	rrf	??_xtoa+2,f
  7184  1DA4  0CBC               	rrf	??_xtoa+1,f
  7185  1DA5  0CBB               	rrf	??_xtoa,f
  7186  1DA6  0B89               	decfsz	9,f
  7187  1DA7  2D9D               	goto	u11065
  7188  1DA8  0020               	movlb	0	; select bank0
  7189  1DA9  0842               	movf	??_xtoa+7,w
  7190  1DAA  00D2               	movwf	xtoa@n+7
  7191  1DAB  0841               	movf	??_xtoa+6,w
  7192  1DAC  00D1               	movwf	xtoa@n+6
  7193  1DAD  0840               	movf	??_xtoa+5,w
  7194  1DAE  00D0               	movwf	xtoa@n+5
  7195  1DAF  083F               	movf	??_xtoa+4,w
  7196  1DB0  00CF               	movwf	xtoa@n+4
  7197  1DB1  083E               	movf	??_xtoa+3,w
  7198  1DB2  00CE               	movwf	xtoa@n+3
  7199  1DB3  083D               	movf	??_xtoa+2,w
  7200  1DB4  00CD               	movwf	xtoa@n+2
  7201  1DB5  083C               	movf	??_xtoa+1,w
  7202  1DB6  00CC               	movwf	xtoa@n+1
  7203  1DB7  083B               	movf	??_xtoa,w
  7204  1DB8  00CB               	movwf	xtoa@n
  7205  1DB9                     l7664:	
  7206                           
  7207                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7208  1DB9  0020               	movlb	0	; select bank0
  7209  1DBA  0854               	movf	xtoa@i+1,w
  7210  1DBB  3A80               	xorlw	128
  7211  1DBC  00BB               	movwf	??_xtoa
  7212  1DBD  3080               	movlw	128
  7213  1DBE  023B               	subwf	??_xtoa,w
  7214  1DBF  1D03               	skipz
  7215  1DC0  2DC3               	goto	u11075
  7216  1DC1  3002               	movlw	2
  7217  1DC2  0253               	subwf	xtoa@i,w
  7218  1DC3                     u11075:	
  7219  1DC3  1C03               	skipc
  7220  1DC4  2DEA               	goto	l747
  7221  1DC5  0020               	movlb	0	; select bank0
  7222  1DC6  084B               	movf	xtoa@n,w
  7223  1DC7  044C               	iorwf	xtoa@n+1,w
  7224  1DC8  044D               	iorwf	xtoa@n+2,w
  7225  1DC9  044E               	iorwf	xtoa@n+3,w
  7226  1DCA  044F               	iorwf	xtoa@n+4,w
  7227  1DCB  0450               	iorwf	xtoa@n+5,w
  7228  1DCC  0451               	iorwf	xtoa@n+6,w
  7229  1DCD  0452               	iorwf	xtoa@n+7,w
  7230  1DCE  1D03               	skipz
  7231  1DCF  2D0F               	goto	l7636
  7232  1DD0  0848               	movf	xtoa@p+1,w
  7233  1DD1  3A80               	xorlw	128
  7234  1DD2  00BB               	movwf	??_xtoa
  7235  1DD3  3080               	movlw	128
  7236  1DD4  023B               	subwf	??_xtoa,w
  7237  1DD5  1D03               	skipz
  7238  1DD6  2DD9               	goto	u11095
  7239  1DD7  3001               	movlw	1
  7240  1DD8  0247               	subwf	xtoa@p,w
  7241  1DD9                     u11095:	
  7242  1DD9  1803               	skipnc
  7243  1DDA  2D0F               	goto	l7636
  7244  1DDB  0020               	movlb	0	; select bank0
  7245  1DDC  084A               	movf	xtoa@w+1,w
  7246  1DDD  3A80               	xorlw	128
  7247  1DDE  00BB               	movwf	??_xtoa
  7248  1DDF  3080               	movlw	128
  7249  1DE0  023B               	subwf	??_xtoa,w
  7250  1DE1  1D03               	skipz
  7251  1DE2  2DE5               	goto	u11105
  7252  1DE3  3001               	movlw	1
  7253  1DE4  0249               	subwf	xtoa@w,w
  7254  1DE5                     u11105:	
  7255  1DE5  1C03               	skipc
  7256  1DE6  2DEA               	goto	l747
  7257  1DE7  0023               	movlb	3	; select bank3
  7258  1DE8  18C2               	btfsc	_flags^(0+384),1
  7259  1DE9  2D0F               	goto	l7636
  7260  1DEA                     l747:	
  7261                           
  7262                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  7263  1DEA  0023               	movlb	3	; select bank3
  7264  1DEB  1E42               	btfss	_flags^(0+384),4
  7265  1DEC  2E08               	goto	l7680
  7266                           
  7267                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  7268  1DED  30FF               	movlw	255
  7269  1DEE  0020               	movlb	0	; select bank0
  7270  1DEF  07D3               	addwf	xtoa@i,f
  7271  1DF0  30FF               	movlw	255
  7272  1DF1  3DD4               	addwfc	xtoa@i+1,f
  7273                           
  7274                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  7275  1DF2  083A               	movf	xtoa@x,w
  7276  1DF3  00BB               	movwf	??_xtoa
  7277  1DF4  0853               	movf	xtoa@i,w
  7278  1DF5  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7279  1DF6  0086               	movwf	6
  7280  1DF7  3002               	movlw	2	; select bank4/5
  7281  1DF8  0087               	movwf	7
  7282  1DF9  083B               	movf	??_xtoa,w
  7283  1DFA  0081               	movwf	1
  7284                           
  7285                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  7286  1DFB  30FF               	movlw	255
  7287  1DFC  07D3               	addwf	xtoa@i,f
  7288  1DFD  30FF               	movlw	255
  7289  1DFE  3DD4               	addwfc	xtoa@i+1,f
  7290                           
  7291                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  7292  1DFF  3030               	movlw	48
  7293  1E00  00BB               	movwf	??_xtoa
  7294  1E01  0853               	movf	xtoa@i,w
  7295  1E02  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7296  1E03  0086               	movwf	6
  7297  1E04  3002               	movlw	2	; select bank4/5
  7298  1E05  0087               	movwf	7
  7299  1E06  083B               	movf	??_xtoa,w
  7300  1E07  0081               	movwf	1
  7301  1E08                     l7680:	
  7302                           
  7303                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  7304  1E08  0020               	movlb	0	; select bank0
  7305  1E09  0831               	movf	xtoa@fp+1,w
  7306  1E0A  00A7               	movwf	pad@fp+1
  7307  1E0B  0830               	movf	xtoa@fp,w
  7308  1E0C  00A6               	movwf	pad@fp
  7309  1E0D  0853               	movf	xtoa@i,w
  7310  1E0E  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7311  1E0F  00BB               	movwf	??_xtoa
  7312  1E10  083B               	movf	??_xtoa,w
  7313  1E11  00A8               	movwf	pad@buf
  7314  1E12  084A               	movf	xtoa@w+1,w
  7315  1E13  00AA               	movwf	pad@p+1
  7316  1E14  0849               	movf	xtoa@w,w
  7317  1E15  00A9               	movwf	pad@p
  7318  1E16  31B7  275E         	fcall	_pad
  7319  1E18  0020               	movlb	0	; select bank0
  7320  1E19  0827               	movf	?_pad+1,w
  7321  1E1A  00B1               	movwf	?_xtoa+1
  7322  1E1B  0826               	movf	?_pad,w
  7323  1E1C  00B0               	movwf	?_xtoa
  7324  1E1D  0008               	return
  7325  1E1E                     __end_of_xtoa:	
  7326                           
  7327                           	psect	text8
  7328  353D                     __ptext8:	
  7329 ;; *************** function _toupper *****************
  7330 ;; Defined at:
  7331 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  7332 ;; Parameters:    Size  Location     Type
  7333 ;;  c               2    7[COMMON] int 
  7334 ;; Auto vars:     Size  Location     Type
  7335 ;;		None
  7336 ;; Return value:  Size  Location     Type
  7337 ;;                  2    7[COMMON] int 
  7338 ;; Registers used:
  7339 ;;		wreg, status,2, status,0
  7340 ;; Tracked objects:
  7341 ;;		On entry : 0/0
  7342 ;;		On exit  : 0/0
  7343 ;;		Unchanged: 0/0
  7344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7345 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7346 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7347 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7348 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7349 ;;Total ram usage:        8 bytes
  7350 ;; Hardware stack levels used:    1
  7351 ;; Hardware stack levels required when called:    2
  7352 ;; This function calls:
  7353 ;;		_islower
  7354 ;; This function is called by:
  7355 ;;		_xtoa
  7356 ;; This function uses a non-reentrant model
  7357 ;;
  7358                           
  7359                           
  7360                           ;psect for function _toupper
  7361  353D                     _toupper:	
  7362                           
  7363                           ;incstack = 0
  7364                           ; Regs used in _toupper: [wreg+status,2+status,0]
  7365  353D  0877               	movf	toupper@c,w
  7366  353E  3E9F               	addlw	159
  7367  353F  0020               	movlb	0	; select bank0
  7368  3540  00A0               	movwf	??_toupper
  7369  3541  30FF               	movlw	255
  7370  3542  3D78               	addwfc	toupper@c+1,w
  7371  3543  00A1               	movwf	??_toupper+1
  7372  3544  3000               	movlw	0
  7373  3545  0221               	subwf	??_toupper+1,w
  7374  3546  301A               	movlw	26
  7375  3547  1903               	skipnz
  7376  3548  0220               	subwf	??_toupper,w
  7377  3549  1803               	btfsc	3,0
  7378  354A  2D4D               	goto	u9950
  7379  354B  3001               	movlw	1
  7380  354C  2D4E               	goto	u9960
  7381  354D                     u9950:	
  7382  354D  3000               	movlw	0
  7383  354E                     u9960:	
  7384  354E  00A2               	movwf	??_toupper+2
  7385  354F  01A3               	clrf	??_toupper+3
  7386  3550  0822               	movf	??_toupper+2,w
  7387  3551  00F9               	movwf	_toupper$1695
  7388  3552  0823               	movf	??_toupper+3,w
  7389  3553  00FA               	movwf	_toupper$1695+1
  7390  3554  0879               	movf	_toupper$1695,w
  7391  3555  047A               	iorwf	_toupper$1695+1,w
  7392  3556  1903               	btfsc	3,2
  7393  3557  0008               	return
  7394  3558  305F               	movlw	95
  7395  3559  0577               	andwf	toupper@c,w
  7396  355A  00F7               	movwf	?_toupper
  7397  355B  3000               	movlw	0
  7398  355C  0578               	andwf	toupper@c+1,w
  7399  355D  00F8               	movwf	?_toupper+1
  7400  355E  0008               	return
  7401  355F                     __end_of_toupper:	
  7402                           
  7403                           	psect	text9
  7404  33C0                     __ptext9:	
  7405 ;; *************** function _islower *****************
  7406 ;; Defined at:
  7407 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  7408 ;; Parameters:    Size  Location     Type
  7409 ;;  c               2    1[COMMON] int 
  7410 ;; Auto vars:     Size  Location     Type
  7411 ;;		None
  7412 ;; Return value:  Size  Location     Type
  7413 ;;                  2    1[COMMON] int 
  7414 ;; Registers used:
  7415 ;;		wreg, status,2, status,0
  7416 ;; Tracked objects:
  7417 ;;		On entry : 0/0
  7418 ;;		On exit  : 0/0
  7419 ;;		Unchanged: 0/0
  7420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7421 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7423 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7424 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7425 ;;Total ram usage:        6 bytes
  7426 ;; Hardware stack levels used:    1
  7427 ;; Hardware stack levels required when called:    1
  7428 ;; This function calls:
  7429 ;;		Nothing
  7430 ;; This function is called by:
  7431 ;;		_toupper
  7432 ;; This function uses a non-reentrant model
  7433 ;;
  7434                           
  7435                           
  7436                           ;psect for function _islower
  7437  33C0                     _islower:	
  7438                           
  7439                           ;incstack = 0
  7440                           ; Regs used in _islower: [wreg+status,2+status,0]
  7441  33C0  0871               	movf	islower@c,w
  7442  33C1  3E9F               	addlw	159
  7443  33C2  00F3               	movwf	??_islower
  7444  33C3  30FF               	movlw	255
  7445  33C4  3D72               	addwfc	islower@c+1,w
  7446  33C5  00F4               	movwf	??_islower+1
  7447  33C6  3000               	movlw	0
  7448  33C7  0274               	subwf	??_islower+1,w
  7449  33C8  301A               	movlw	26
  7450  33C9  1903               	skipnz
  7451  33CA  0273               	subwf	??_islower,w
  7452  33CB  1803               	btfsc	3,0
  7453  33CC  2BCF               	goto	u9860
  7454  33CD  3001               	movlw	1
  7455  33CE  2BD0               	goto	u9870
  7456  33CF                     u9860:	
  7457  33CF  3000               	movlw	0
  7458  33D0                     u9870:	
  7459  33D0  00F5               	movwf	??_islower+2
  7460  33D1  01F6               	clrf	??_islower+3
  7461  33D2  0875               	movf	??_islower+2,w
  7462  33D3  00F1               	movwf	?_islower
  7463  33D4  0876               	movf	??_islower+3,w
  7464  33D5  00F2               	movwf	?_islower+1
  7465  33D6  0008               	return
  7466  33D7                     __end_of_islower:	
  7467                           
  7468                           	psect	text10
  7469  3440                     __ptext10:	
  7470 ;; *************** function _isalpha *****************
  7471 ;; Defined at:
  7472 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  7473 ;; Parameters:    Size  Location     Type
  7474 ;;  c               2    1[COMMON] int 
  7475 ;; Auto vars:     Size  Location     Type
  7476 ;;		None
  7477 ;; Return value:  Size  Location     Type
  7478 ;;                  2    1[COMMON] int 
  7479 ;; Registers used:
  7480 ;;		wreg, status,2, status,0
  7481 ;; Tracked objects:
  7482 ;;		On entry : 0/0
  7483 ;;		On exit  : 0/0
  7484 ;;		Unchanged: 0/0
  7485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7486 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7488 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7489 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7490 ;;Total ram usage:        8 bytes
  7491 ;; Hardware stack levels used:    1
  7492 ;; Hardware stack levels required when called:    1
  7493 ;; This function calls:
  7494 ;;		Nothing
  7495 ;; This function is called by:
  7496 ;;		_xtoa
  7497 ;; This function uses a non-reentrant model
  7498 ;;
  7499                           
  7500                           
  7501                           ;psect for function _isalpha
  7502  3440                     _isalpha:	
  7503                           
  7504                           ;incstack = 0
  7505                           ; Regs used in _isalpha: [wreg+status,2+status,0]
  7506  3440  3020               	movlw	32
  7507  3441  0471               	iorwf	isalpha@c,w
  7508  3442  00F3               	movwf	??_isalpha
  7509  3443  3000               	movlw	0
  7510  3444  0472               	iorwf	isalpha@c+1,w
  7511  3445  00F4               	movwf	??_isalpha+1
  7512  3446  0873               	movf	??_isalpha,w
  7513  3447  3E9F               	addlw	159
  7514  3448  00F5               	movwf	??_isalpha+2
  7515  3449  30FF               	movlw	255
  7516  344A  3D74               	addwfc	??_isalpha+1,w
  7517  344B  00F6               	movwf	??_isalpha+3
  7518  344C  3000               	movlw	0
  7519  344D  0276               	subwf	??_isalpha+3,w
  7520  344E  301A               	movlw	26
  7521  344F  1903               	skipnz
  7522  3450  0275               	subwf	??_isalpha+2,w
  7523  3451  1803               	btfsc	3,0
  7524  3452  2C55               	goto	u5570
  7525  3453  3001               	movlw	1
  7526  3454  2C56               	goto	u5580
  7527  3455                     u5570:	
  7528  3455  3000               	movlw	0
  7529  3456                     u5580:	
  7530  3456  00F7               	movwf	??_isalpha+4
  7531  3457  01F8               	clrf	??_isalpha+5
  7532  3458  0877               	movf	??_isalpha+4,w
  7533  3459  00F1               	movwf	?_isalpha
  7534  345A  0878               	movf	??_isalpha+5,w
  7535  345B  00F2               	movwf	?_isalpha+1
  7536  345C  0008               	return
  7537  345D                     __end_of_isalpha:	
  7538                           
  7539                           	psect	text11
  7540  2455                     __ptext11:	
  7541 ;; *************** function _utoa *****************
  7542 ;; Defined at:
  7543 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7544 ;; Parameters:    Size  Location     Type
  7545 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  7546 ;;		 -> vsnprintf@f(6), 
  7547 ;;  d               8   18[BANK0 ] unsigned long long 
  7548 ;; Auto vars:     Size  Location     Type
  7549 ;;  n               8   31[BANK0 ] unsigned long long 
  7550 ;;  i               2   39[BANK0 ] int 
  7551 ;;  w               2   29[BANK0 ] int 
  7552 ;;  p               2   27[BANK0 ] int 
  7553 ;; Return value:  Size  Location     Type
  7554 ;;                  2   16[BANK0 ] int 
  7555 ;; Registers used:
  7556 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7557 ;; Tracked objects:
  7558 ;;		On entry : 0/0
  7559 ;;		On exit  : 0/0
  7560 ;;		Unchanged: 0/0
  7561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7562 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7563 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7564 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7565 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7566 ;;Total ram usage:       25 bytes
  7567 ;; Hardware stack levels used:    1
  7568 ;; Hardware stack levels required when called:    5
  7569 ;; This function calls:
  7570 ;;		___lodiv
  7571 ;;		___lomod
  7572 ;;		_pad
  7573 ;; This function is called by:
  7574 ;;		_vfpfcnvrt
  7575 ;; This function uses a non-reentrant model
  7576 ;;
  7577                           
  7578                           
  7579                           ;psect for function _utoa
  7580  2455                     _utoa:	
  7581                           
  7582                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  7583                           
  7584                           ;incstack = 0
  7585                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7586  2455  0023               	movlb	3	; select bank3
  7587  2456  1BC1               	btfsc	(_prec+1)^(0+384),7
  7588  2457  2C5C               	goto	l707
  7589                           
  7590                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  7591  2458  30FD               	movlw	253
  7592  2459  05C2               	andwf	_flags^(0+384),f
  7593  245A  30FF               	movlw	255
  7594  245B  05C3               	andwf	(_flags+1)^(0+384),f
  7595  245C                     l707:	
  7596                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 601:     }
  7597                           
  7598                           
  7599                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  7600  245C  0841               	movf	(_prec+1)^(0+384),w
  7601  245D  3A80               	xorlw	128
  7602  245E  0020               	movlb	0	; select bank0
  7603  245F  00BA               	movwf	??_utoa
  7604  2460  3080               	movlw	128
  7605  2461  023A               	subwf	??_utoa,w
  7606  2462  1D03               	skipz
  7607  2463  2C67               	goto	u10905
  7608  2464  3001               	movlw	1
  7609  2465  0023               	movlb	3	; select bank3
  7610  2466  0240               	subwf	_prec^(0+384),w
  7611  2467                     u10905:	
  7612  2467  1803               	skipnc
  7613  2468  2C6F               	goto	l7590
  7614  2469  3001               	movlw	1
  7615  246A  0020               	movlb	0	; select bank0
  7616  246B  00BB               	movwf	utoa@p
  7617  246C  3000               	movlw	0
  7618  246D  00BC               	movwf	utoa@p+1
  7619  246E  2C77               	goto	l711
  7620  246F                     l7590:	
  7621  246F  0023               	movlb	3	; select bank3
  7622  2470  0841               	movf	(_prec+1)^(0+384),w
  7623  2471  0020               	movlb	0	; select bank0
  7624  2472  00BC               	movwf	utoa@p+1
  7625  2473  0023               	movlb	3	; select bank3
  7626  2474  0840               	movf	_prec^(0+384),w
  7627  2475  0020               	movlb	0	; select bank0
  7628  2476  00BB               	movwf	utoa@p
  7629  2477                     l711:	
  7630                           
  7631                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  7632  2477  0023               	movlb	3	; select bank3
  7633  2478  083F               	movf	(_width+1)^(0+384),w
  7634  2479  0020               	movlb	0	; select bank0
  7635  247A  00BE               	movwf	utoa@w+1
  7636  247B  0023               	movlb	3	; select bank3
  7637  247C  083E               	movf	_width^(0+384),w
  7638  247D  0020               	movlb	0	; select bank0
  7639  247E  00BD               	movwf	utoa@w
  7640                           
  7641                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  7642  247F  0832               	movf	utoa@d,w
  7643  2480  00BF               	movwf	utoa@n
  7644  2481  0833               	movf	utoa@d+1,w
  7645  2482  00C0               	movwf	utoa@n+1
  7646  2483  0834               	movf	utoa@d+2,w
  7647  2484  00C1               	movwf	utoa@n+2
  7648  2485  0835               	movf	utoa@d+3,w
  7649  2486  00C2               	movwf	utoa@n+3
  7650  2487  0836               	movf	utoa@d+4,w
  7651  2488  00C3               	movwf	utoa@n+4
  7652  2489  0837               	movf	utoa@d+5,w
  7653  248A  00C4               	movwf	utoa@n+5
  7654  248B  0838               	movf	utoa@d+6,w
  7655  248C  00C5               	movwf	utoa@n+6
  7656  248D  0839               	movf	utoa@d+7,w
  7657  248E  00C6               	movwf	utoa@n+7
  7658                           
  7659                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  7660  248F  304F               	movlw	79
  7661  2490  00C7               	movwf	utoa@i
  7662  2491  3000               	movlw	0
  7663  2492  00C8               	movwf	utoa@i+1
  7664                           
  7665                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  7666  2493  0024               	movlb	4	; select bank4
  7667  2494  01EF               	clrf	(_dbuf^(0+512)+79)
  7668                           
  7669                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7670  2495  2D1B               	goto	l7606
  7671  2496                     l7608:	
  7672  2496  083F               	movf	utoa@n,w
  7673  2497  0440               	iorwf	utoa@n+1,w
  7674  2498  0441               	iorwf	utoa@n+2,w
  7675  2499  0442               	iorwf	utoa@n+3,w
  7676  249A  0443               	iorwf	utoa@n+4,w
  7677  249B  0444               	iorwf	utoa@n+5,w
  7678  249C  0445               	iorwf	utoa@n+6,w
  7679  249D  0446               	iorwf	utoa@n+7,w
  7680  249E  1D03               	skipz
  7681  249F  2CBA               	goto	l7596
  7682  24A0  083C               	movf	utoa@p+1,w
  7683  24A1  3A80               	xorlw	128
  7684  24A2  00BA               	movwf	??_utoa
  7685  24A3  3080               	movlw	128
  7686  24A4  023A               	subwf	??_utoa,w
  7687  24A5  1D03               	skipz
  7688  24A6  2CA9               	goto	u10935
  7689  24A7  3001               	movlw	1
  7690  24A8  023B               	subwf	utoa@p,w
  7691  24A9                     u10935:	
  7692  24A9  1803               	skipnc
  7693  24AA  2CBA               	goto	l7596
  7694  24AB  0020               	movlb	0	; select bank0
  7695  24AC  083E               	movf	utoa@w+1,w
  7696  24AD  3A80               	xorlw	128
  7697  24AE  00BA               	movwf	??_utoa
  7698  24AF  3080               	movlw	128
  7699  24B0  023A               	subwf	??_utoa,w
  7700  24B1  1D03               	skipz
  7701  24B2  2CB5               	goto	u10945
  7702  24B3  3001               	movlw	1
  7703  24B4  023D               	subwf	utoa@w,w
  7704  24B5                     u10945:	
  7705  24B5  1C03               	skipc
  7706  24B6  2D20               	goto	l7616
  7707  24B7  0023               	movlb	3	; select bank3
  7708  24B8  1CC2               	btfss	_flags^(0+384),1
  7709  24B9  2D20               	goto	l7616
  7710  24BA                     l7596:	
  7711                           
  7712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  7713  24BA  30FF               	movlw	255
  7714  24BB  0020               	movlb	0	; select bank0
  7715  24BC  07C7               	addwf	utoa@i,f
  7716  24BD  30FF               	movlw	255
  7717  24BE  3DC8               	addwfc	utoa@i+1,f
  7718                           
  7719                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  7720  24BF  300A               	movlw	10
  7721  24C0  00A0               	movwf	___lomod@divisor
  7722  24C1  01A1               	clrf	___lomod@divisor+1
  7723  24C2  01A2               	clrf	___lomod@divisor+2
  7724  24C3  01A3               	clrf	___lomod@divisor+3
  7725  24C4  01A4               	clrf	___lomod@divisor+4
  7726  24C5  01A5               	clrf	___lomod@divisor+5
  7727  24C6  01A6               	clrf	___lomod@divisor+6
  7728  24C7  01A7               	clrf	___lomod@divisor+7
  7729  24C8  083F               	movf	utoa@n,w
  7730  24C9  00A8               	movwf	___lomod@dividend
  7731  24CA  0840               	movf	utoa@n+1,w
  7732  24CB  00A9               	movwf	___lomod@dividend+1
  7733  24CC  0841               	movf	utoa@n+2,w
  7734  24CD  00AA               	movwf	___lomod@dividend+2
  7735  24CE  0842               	movf	utoa@n+3,w
  7736  24CF  00AB               	movwf	___lomod@dividend+3
  7737  24D0  0843               	movf	utoa@n+4,w
  7738  24D1  00AC               	movwf	___lomod@dividend+4
  7739  24D2  0844               	movf	utoa@n+5,w
  7740  24D3  00AD               	movwf	___lomod@dividend+5
  7741  24D4  0845               	movf	utoa@n+6,w
  7742  24D5  00AE               	movwf	___lomod@dividend+6
  7743  24D6  0846               	movf	utoa@n+7,w
  7744  24D7  00AF               	movwf	___lomod@dividend+7
  7745  24D8  31A8  20E6  31A4   	fcall	___lomod
  7746  24DB  0020               	movlb	0	; select bank0
  7747  24DC  0820               	movf	?___lomod,w
  7748  24DD  3E30               	addlw	48
  7749  24DE  00BA               	movwf	??_utoa
  7750  24DF  0847               	movf	utoa@i,w
  7751  24E0  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7752  24E1  0086               	movwf	6
  7753  24E2  3002               	movlw	2	; select bank4/5
  7754  24E3  0087               	movwf	7
  7755  24E4  083A               	movf	??_utoa,w
  7756  24E5  0081               	movwf	1
  7757                           
  7758                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  7759  24E6  30FF               	movlw	255
  7760  24E7  07BB               	addwf	utoa@p,f
  7761  24E8  30FF               	movlw	255
  7762  24E9  3DBC               	addwfc	utoa@p+1,f
  7763                           
  7764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  7765  24EA  30FF               	movlw	255
  7766  24EB  07BD               	addwf	utoa@w,f
  7767  24EC  30FF               	movlw	255
  7768  24ED  3DBE               	addwfc	utoa@w+1,f
  7769                           
  7770                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  7771  24EE  300A               	movlw	10
  7772  24EF  00A0               	movwf	___lodiv@divisor
  7773  24F0  01A1               	clrf	___lodiv@divisor+1
  7774  24F1  01A2               	clrf	___lodiv@divisor+2
  7775  24F2  01A3               	clrf	___lodiv@divisor+3
  7776  24F3  01A4               	clrf	___lodiv@divisor+4
  7777  24F4  01A5               	clrf	___lodiv@divisor+5
  7778  24F5  01A6               	clrf	___lodiv@divisor+6
  7779  24F6  01A7               	clrf	___lodiv@divisor+7
  7780  24F7  083F               	movf	utoa@n,w
  7781  24F8  00A8               	movwf	___lodiv@dividend
  7782  24F9  0840               	movf	utoa@n+1,w
  7783  24FA  00A9               	movwf	___lodiv@dividend+1
  7784  24FB  0841               	movf	utoa@n+2,w
  7785  24FC  00AA               	movwf	___lodiv@dividend+2
  7786  24FD  0842               	movf	utoa@n+3,w
  7787  24FE  00AB               	movwf	___lodiv@dividend+3
  7788  24FF  0843               	movf	utoa@n+4,w
  7789  2500  00AC               	movwf	___lodiv@dividend+4
  7790  2501  0844               	movf	utoa@n+5,w
  7791  2502  00AD               	movwf	___lodiv@dividend+5
  7792  2503  0845               	movf	utoa@n+6,w
  7793  2504  00AE               	movwf	___lodiv@dividend+6
  7794  2505  0846               	movf	utoa@n+7,w
  7795  2506  00AF               	movwf	___lodiv@dividend+7
  7796  2507  31AA  2243  31A4   	fcall	___lodiv
  7797  250A  0020               	movlb	0	; select bank0
  7798  250B  0820               	movf	?___lodiv,w
  7799  250C  00BF               	movwf	utoa@n
  7800  250D  0821               	movf	?___lodiv+1,w
  7801  250E  00C0               	movwf	utoa@n+1
  7802  250F  0822               	movf	?___lodiv+2,w
  7803  2510  00C1               	movwf	utoa@n+2
  7804  2511  0823               	movf	?___lodiv+3,w
  7805  2512  00C2               	movwf	utoa@n+3
  7806  2513  0824               	movf	?___lodiv+4,w
  7807  2514  00C3               	movwf	utoa@n+4
  7808  2515  0825               	movf	?___lodiv+5,w
  7809  2516  00C4               	movwf	utoa@n+5
  7810  2517  0826               	movf	?___lodiv+6,w
  7811  2518  00C5               	movwf	utoa@n+6
  7812  2519  0827               	movf	?___lodiv+7,w
  7813  251A  00C6               	movwf	utoa@n+7
  7814  251B                     l7606:	
  7815                           
  7816                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7817  251B  0020               	movlb	0	; select bank0
  7818  251C  0847               	movf	utoa@i,w
  7819  251D  0448               	iorwf	utoa@i+1,w
  7820  251E  1D03               	btfss	3,2
  7821  251F  2C96               	goto	l7608
  7822  2520                     l7616:	
  7823                           
  7824                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  7825  2520  0020               	movlb	0	; select bank0
  7826  2521  0831               	movf	utoa@fp+1,w
  7827  2522  00A7               	movwf	pad@fp+1
  7828  2523  0830               	movf	utoa@fp,w
  7829  2524  00A6               	movwf	pad@fp
  7830  2525  0847               	movf	utoa@i,w
  7831  2526  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7832  2527  00BA               	movwf	??_utoa
  7833  2528  083A               	movf	??_utoa,w
  7834  2529  00A8               	movwf	pad@buf
  7835  252A  083E               	movf	utoa@w+1,w
  7836  252B  00AA               	movwf	pad@p+1
  7837  252C  083D               	movf	utoa@w,w
  7838  252D  00A9               	movwf	pad@p
  7839  252E  31B7  275E         	fcall	_pad
  7840  2530  0020               	movlb	0	; select bank0
  7841  2531  0827               	movf	?_pad+1,w
  7842  2532  00B1               	movwf	?_utoa+1
  7843  2533  0826               	movf	?_pad,w
  7844  2534  00B0               	movwf	?_utoa
  7845  2535  0008               	return
  7846  2536                     __end_of_utoa:	
  7847                           
  7848                           	psect	text12
  7849  28E6                     __ptext12:	
  7850 ;; *************** function ___lomod *****************
  7851 ;; Defined at:
  7852 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  7853 ;; Parameters:    Size  Location     Type
  7854 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7855 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7856 ;; Auto vars:     Size  Location     Type
  7857 ;;  counter         1    2[COMMON] unsigned char 
  7858 ;; Return value:  Size  Location     Type
  7859 ;;                  8    0[BANK0 ] unsigned long long 
  7860 ;; Registers used:
  7861 ;;		wreg, status,2, status,0
  7862 ;; Tracked objects:
  7863 ;;		On entry : 0/0
  7864 ;;		On exit  : 0/0
  7865 ;;		Unchanged: 0/0
  7866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7867 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7868 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7869 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7870 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7871 ;;Total ram usage:       18 bytes
  7872 ;; Hardware stack levels used:    1
  7873 ;; Hardware stack levels required when called:    1
  7874 ;; This function calls:
  7875 ;;		Nothing
  7876 ;; This function is called by:
  7877 ;;		_utoa
  7878 ;; This function uses a non-reentrant model
  7879 ;;
  7880                           
  7881                           
  7882                           ;psect for function ___lomod
  7883  28E6                     ___lomod:	
  7884                           
  7885                           ;incstack = 0
  7886                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  7887  28E6  0020               	movlb	0	; select bank0
  7888  28E7  0820               	movf	___lomod@divisor,w
  7889  28E8  0421               	iorwf	___lomod@divisor+1,w
  7890  28E9  0422               	iorwf	___lomod@divisor+2,w
  7891  28EA  0423               	iorwf	___lomod@divisor+3,w
  7892  28EB  0424               	iorwf	___lomod@divisor+4,w
  7893  28EC  0425               	iorwf	___lomod@divisor+5,w
  7894  28ED  0426               	iorwf	___lomod@divisor+6,w
  7895  28EE  0427               	iorwf	___lomod@divisor+7,w
  7896  28EF  1903               	skipnz
  7897  28F0  293E               	goto	l1097
  7898  28F1  01F2               	clrf	___lomod@counter
  7899  28F2  0AF2               	incf	___lomod@counter,f
  7900  28F3                     l4850:	
  7901  28F3  1BA7               	btfsc	___lomod@divisor+7,7
  7902  28F4  2902               	goto	l4852
  7903  28F5  35A0               	lslf	___lomod@divisor,f
  7904  28F6  0DA1               	rlf	___lomod@divisor+1,f
  7905  28F7  0DA2               	rlf	___lomod@divisor+2,f
  7906  28F8  0DA3               	rlf	___lomod@divisor+3,f
  7907  28F9  0DA4               	rlf	___lomod@divisor+4,f
  7908  28FA  0DA5               	rlf	___lomod@divisor+5,f
  7909  28FB  0DA6               	rlf	___lomod@divisor+6,f
  7910  28FC  0DA7               	rlf	___lomod@divisor+7,f
  7911  28FD  3001               	movlw	1
  7912  28FE  00F1               	movwf	??___lomod
  7913  28FF  0871               	movf	??___lomod,w
  7914  2900  07F2               	addwf	___lomod@counter,f
  7915  2901  28F3               	goto	l4850
  7916  2902                     l4852:	
  7917  2902  0827               	movf	___lomod@divisor+7,w
  7918  2903  022F               	subwf	___lomod@dividend+7,w
  7919  2904  1D03               	skipz
  7920  2905  2920               	goto	u6345
  7921  2906  0826               	movf	___lomod@divisor+6,w
  7922  2907  022E               	subwf	___lomod@dividend+6,w
  7923  2908  1D03               	skipz
  7924  2909  2920               	goto	u6345
  7925  290A  0825               	movf	___lomod@divisor+5,w
  7926  290B  022D               	subwf	___lomod@dividend+5,w
  7927  290C  1D03               	skipz
  7928  290D  2920               	goto	u6345
  7929  290E  0824               	movf	___lomod@divisor+4,w
  7930  290F  022C               	subwf	___lomod@dividend+4,w
  7931  2910  1D03               	skipz
  7932  2911  2920               	goto	u6345
  7933  2912  0823               	movf	___lomod@divisor+3,w
  7934  2913  022B               	subwf	___lomod@dividend+3,w
  7935  2914  1D03               	skipz
  7936  2915  2920               	goto	u6345
  7937  2916  0822               	movf	___lomod@divisor+2,w
  7938  2917  022A               	subwf	___lomod@dividend+2,w
  7939  2918  1D03               	skipz
  7940  2919  2920               	goto	u6345
  7941  291A  0821               	movf	___lomod@divisor+1,w
  7942  291B  0229               	subwf	___lomod@dividend+1,w
  7943  291C  1D03               	skipz
  7944  291D  2920               	goto	u6345
  7945  291E  0820               	movf	___lomod@divisor,w
  7946  291F  0228               	subwf	___lomod@dividend,w
  7947  2920                     u6345:	
  7948  2920  1C03               	skipc
  7949  2921  2932               	goto	l4856
  7950  2922  0820               	movf	___lomod@divisor,w
  7951  2923  02A8               	subwf	___lomod@dividend,f
  7952  2924  0821               	movf	___lomod@divisor+1,w
  7953  2925  3BA9               	subwfb	___lomod@dividend+1,f
  7954  2926  0822               	movf	___lomod@divisor+2,w
  7955  2927  3BAA               	subwfb	___lomod@dividend+2,f
  7956  2928  0823               	movf	___lomod@divisor+3,w
  7957  2929  3BAB               	subwfb	___lomod@dividend+3,f
  7958  292A  0824               	movf	___lomod@divisor+4,w
  7959  292B  3BAC               	subwfb	___lomod@dividend+4,f
  7960  292C  0825               	movf	___lomod@divisor+5,w
  7961  292D  3BAD               	subwfb	___lomod@dividend+5,f
  7962  292E  0826               	movf	___lomod@divisor+6,w
  7963  292F  3BAE               	subwfb	___lomod@dividend+6,f
  7964  2930  0827               	movf	___lomod@divisor+7,w
  7965  2931  3BAF               	subwfb	___lomod@dividend+7,f
  7966  2932                     l4856:	
  7967  2932  36A7               	lsrf	___lomod@divisor+7,f
  7968  2933  0CA6               	rrf	___lomod@divisor+6,f
  7969  2934  0CA5               	rrf	___lomod@divisor+5,f
  7970  2935  0CA4               	rrf	___lomod@divisor+4,f
  7971  2936  0CA3               	rrf	___lomod@divisor+3,f
  7972  2937  0CA2               	rrf	___lomod@divisor+2,f
  7973  2938  0CA1               	rrf	___lomod@divisor+1,f
  7974  2939  0CA0               	rrf	___lomod@divisor,f
  7975  293A  3001               	movlw	1
  7976  293B  02F2               	subwf	___lomod@counter,f
  7977  293C  1D03               	btfss	3,2
  7978  293D  2902               	goto	l4852
  7979  293E                     l1097:	
  7980  293E  0828               	movf	___lomod@dividend,w
  7981  293F  00A0               	movwf	?___lomod
  7982  2940  0829               	movf	___lomod@dividend+1,w
  7983  2941  00A1               	movwf	?___lomod+1
  7984  2942  082A               	movf	___lomod@dividend+2,w
  7985  2943  00A2               	movwf	?___lomod+2
  7986  2944  082B               	movf	___lomod@dividend+3,w
  7987  2945  00A3               	movwf	?___lomod+3
  7988  2946  082C               	movf	___lomod@dividend+4,w
  7989  2947  00A4               	movwf	?___lomod+4
  7990  2948  082D               	movf	___lomod@dividend+5,w
  7991  2949  00A5               	movwf	?___lomod+5
  7992  294A  082E               	movf	___lomod@dividend+6,w
  7993  294B  00A6               	movwf	?___lomod+6
  7994  294C  082F               	movf	___lomod@dividend+7,w
  7995  294D  00A7               	movwf	?___lomod+7
  7996  294E  0008               	return
  7997  294F                     __end_of___lomod:	
  7998                           
  7999                           	psect	text13
  8000  2A43                     __ptext13:	
  8001 ;; *************** function ___lodiv *****************
  8002 ;; Defined at:
  8003 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  8004 ;; Parameters:    Size  Location     Type
  8005 ;;  divisor         8    0[BANK0 ] unsigned long long 
  8006 ;;  dividend        8    8[BANK0 ] unsigned long long 
  8007 ;; Auto vars:     Size  Location     Type
  8008 ;;  quotient        8    2[COMMON] unsigned long long 
  8009 ;;  counter         1   10[COMMON] unsigned char 
  8010 ;; Return value:  Size  Location     Type
  8011 ;;                  8    0[BANK0 ] unsigned long long 
  8012 ;; Registers used:
  8013 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8014 ;; Tracked objects:
  8015 ;;		On entry : 0/0
  8016 ;;		On exit  : 0/0
  8017 ;;		Unchanged: 0/0
  8018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8019 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8020 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8021 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8022 ;;      Totals:        10      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8023 ;;Total ram usage:       26 bytes
  8024 ;; Hardware stack levels used:    1
  8025 ;; Hardware stack levels required when called:    1
  8026 ;; This function calls:
  8027 ;;		Nothing
  8028 ;; This function is called by:
  8029 ;;		_utoa
  8030 ;; This function uses a non-reentrant model
  8031 ;;
  8032                           
  8033                           
  8034                           ;psect for function ___lodiv
  8035  2A43                     ___lodiv:	
  8036                           
  8037                           ;incstack = 0
  8038                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  8039  2A43  3072               	movlw	low ___lodiv@quotient
  8040  2A44  0086               	movwf	6
  8041  2A45  3000               	movlw	high ___lodiv@quotient
  8042  2A46  0087               	movwf	7
  8043  2A47  3008               	movlw	8
  8044  2A48  00F1               	movwf	??___lodiv
  8045  2A49  3000               	movlw	0
  8046  2A4A                     u6270:	
  8047  2A4A  001E               	movwi fsr1++
  8048  2A4B  0BF1               	decfsz	??___lodiv,f
  8049  2A4C  2A4A               	goto	u6270
  8050  2A4D  0020               	movlb	0	; select bank0
  8051  2A4E  0820               	movf	___lodiv@divisor,w
  8052  2A4F  0421               	iorwf	___lodiv@divisor+1,w
  8053  2A50  0422               	iorwf	___lodiv@divisor+2,w
  8054  2A51  0423               	iorwf	___lodiv@divisor+3,w
  8055  2A52  0424               	iorwf	___lodiv@divisor+4,w
  8056  2A53  0425               	iorwf	___lodiv@divisor+5,w
  8057  2A54  0426               	iorwf	___lodiv@divisor+6,w
  8058  2A55  0427               	iorwf	___lodiv@divisor+7,w
  8059  2A56  1903               	skipnz
  8060  2A57  2AAE               	goto	l1087
  8061  2A58  01FA               	clrf	___lodiv@counter
  8062  2A59  0AFA               	incf	___lodiv@counter,f
  8063  2A5A                     l4830:	
  8064  2A5A  1BA7               	btfsc	___lodiv@divisor+7,7
  8065  2A5B  2A69               	goto	l4832
  8066  2A5C  35A0               	lslf	___lodiv@divisor,f
  8067  2A5D  0DA1               	rlf	___lodiv@divisor+1,f
  8068  2A5E  0DA2               	rlf	___lodiv@divisor+2,f
  8069  2A5F  0DA3               	rlf	___lodiv@divisor+3,f
  8070  2A60  0DA4               	rlf	___lodiv@divisor+4,f
  8071  2A61  0DA5               	rlf	___lodiv@divisor+5,f
  8072  2A62  0DA6               	rlf	___lodiv@divisor+6,f
  8073  2A63  0DA7               	rlf	___lodiv@divisor+7,f
  8074  2A64  3001               	movlw	1
  8075  2A65  00F1               	movwf	??___lodiv
  8076  2A66  0871               	movf	??___lodiv,w
  8077  2A67  07FA               	addwf	___lodiv@counter,f
  8078  2A68  2A5A               	goto	l4830
  8079  2A69                     l4832:	
  8080  2A69  35F2               	lslf	___lodiv@quotient,f
  8081  2A6A  0DF3               	rlf	___lodiv@quotient+1,f
  8082  2A6B  0DF4               	rlf	___lodiv@quotient+2,f
  8083  2A6C  0DF5               	rlf	___lodiv@quotient+3,f
  8084  2A6D  0DF6               	rlf	___lodiv@quotient+4,f
  8085  2A6E  0DF7               	rlf	___lodiv@quotient+5,f
  8086  2A6F  0DF8               	rlf	___lodiv@quotient+6,f
  8087  2A70  0DF9               	rlf	___lodiv@quotient+7,f
  8088  2A71  0827               	movf	___lodiv@divisor+7,w
  8089  2A72  022F               	subwf	___lodiv@dividend+7,w
  8090  2A73  1D03               	skipz
  8091  2A74  2A8F               	goto	u6305
  8092  2A75  0826               	movf	___lodiv@divisor+6,w
  8093  2A76  022E               	subwf	___lodiv@dividend+6,w
  8094  2A77  1D03               	skipz
  8095  2A78  2A8F               	goto	u6305
  8096  2A79  0825               	movf	___lodiv@divisor+5,w
  8097  2A7A  022D               	subwf	___lodiv@dividend+5,w
  8098  2A7B  1D03               	skipz
  8099  2A7C  2A8F               	goto	u6305
  8100  2A7D  0824               	movf	___lodiv@divisor+4,w
  8101  2A7E  022C               	subwf	___lodiv@dividend+4,w
  8102  2A7F  1D03               	skipz
  8103  2A80  2A8F               	goto	u6305
  8104  2A81  0823               	movf	___lodiv@divisor+3,w
  8105  2A82  022B               	subwf	___lodiv@dividend+3,w
  8106  2A83  1D03               	skipz
  8107  2A84  2A8F               	goto	u6305
  8108  2A85  0822               	movf	___lodiv@divisor+2,w
  8109  2A86  022A               	subwf	___lodiv@dividend+2,w
  8110  2A87  1D03               	skipz
  8111  2A88  2A8F               	goto	u6305
  8112  2A89  0821               	movf	___lodiv@divisor+1,w
  8113  2A8A  0229               	subwf	___lodiv@dividend+1,w
  8114  2A8B  1D03               	skipz
  8115  2A8C  2A8F               	goto	u6305
  8116  2A8D  0820               	movf	___lodiv@divisor,w
  8117  2A8E  0228               	subwf	___lodiv@dividend,w
  8118  2A8F                     u6305:	
  8119  2A8F  1C03               	skipc
  8120  2A90  2AA2               	goto	l4840
  8121  2A91  0820               	movf	___lodiv@divisor,w
  8122  2A92  02A8               	subwf	___lodiv@dividend,f
  8123  2A93  0821               	movf	___lodiv@divisor+1,w
  8124  2A94  3BA9               	subwfb	___lodiv@dividend+1,f
  8125  2A95  0822               	movf	___lodiv@divisor+2,w
  8126  2A96  3BAA               	subwfb	___lodiv@dividend+2,f
  8127  2A97  0823               	movf	___lodiv@divisor+3,w
  8128  2A98  3BAB               	subwfb	___lodiv@dividend+3,f
  8129  2A99  0824               	movf	___lodiv@divisor+4,w
  8130  2A9A  3BAC               	subwfb	___lodiv@dividend+4,f
  8131  2A9B  0825               	movf	___lodiv@divisor+5,w
  8132  2A9C  3BAD               	subwfb	___lodiv@dividend+5,f
  8133  2A9D  0826               	movf	___lodiv@divisor+6,w
  8134  2A9E  3BAE               	subwfb	___lodiv@dividend+6,f
  8135  2A9F  0827               	movf	___lodiv@divisor+7,w
  8136  2AA0  3BAF               	subwfb	___lodiv@dividend+7,f
  8137  2AA1  1472               	bsf	___lodiv@quotient,0
  8138  2AA2                     l4840:	
  8139  2AA2  36A7               	lsrf	___lodiv@divisor+7,f
  8140  2AA3  0CA6               	rrf	___lodiv@divisor+6,f
  8141  2AA4  0CA5               	rrf	___lodiv@divisor+5,f
  8142  2AA5  0CA4               	rrf	___lodiv@divisor+4,f
  8143  2AA6  0CA3               	rrf	___lodiv@divisor+3,f
  8144  2AA7  0CA2               	rrf	___lodiv@divisor+2,f
  8145  2AA8  0CA1               	rrf	___lodiv@divisor+1,f
  8146  2AA9  0CA0               	rrf	___lodiv@divisor,f
  8147  2AAA  3001               	movlw	1
  8148  2AAB  02FA               	subwf	___lodiv@counter,f
  8149  2AAC  1D03               	btfss	3,2
  8150  2AAD  2A69               	goto	l4832
  8151  2AAE                     l1087:	
  8152  2AAE  0872               	movf	___lodiv@quotient,w
  8153  2AAF  00A0               	movwf	?___lodiv
  8154  2AB0  0873               	movf	___lodiv@quotient+1,w
  8155  2AB1  00A1               	movwf	?___lodiv+1
  8156  2AB2  0874               	movf	___lodiv@quotient+2,w
  8157  2AB3  00A2               	movwf	?___lodiv+2
  8158  2AB4  0875               	movf	___lodiv@quotient+3,w
  8159  2AB5  00A3               	movwf	?___lodiv+3
  8160  2AB6  0876               	movf	___lodiv@quotient+4,w
  8161  2AB7  00A4               	movwf	?___lodiv+4
  8162  2AB8  0877               	movf	___lodiv@quotient+5,w
  8163  2AB9  00A5               	movwf	?___lodiv+5
  8164  2ABA  0878               	movf	___lodiv@quotient+6,w
  8165  2ABB  00A6               	movwf	?___lodiv+6
  8166  2ABC  0879               	movf	___lodiv@quotient+7,w
  8167  2ABD  00A7               	movwf	?___lodiv+7
  8168  2ABE  0008               	return
  8169  2ABF                     __end_of___lodiv:	
  8170                           
  8171                           	psect	text14
  8172  1000                     __ptext14:	
  8173 ;; *************** function _strncmp *****************
  8174 ;; Defined at:
  8175 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  8176 ;; Parameters:    Size  Location     Type
  8177 ;;  _l              2    1[COMMON] PTR const unsigned char 
  8178 ;;		 -> vfpfcnvrt@ct(3), STR_24(18), STR_23(18), STR_22(19), 
  8179 ;;		 -> STR_21(20), STR_20(20), STR_19(21), STR_18(21), 
  8180 ;;		 -> STR_17(21), STR_16(22), STR_15(22), STR_14(21), 
  8181 ;;		 -> STR_13(21), STR_8(57), STR_7(44), STR_6(42), 
  8182 ;;		 -> STR_3(43), 
  8183 ;;  _r              2    3[COMMON] PTR const unsigned char 
  8184 ;;		 -> STR_168(3), STR_164(3), STR_159(3), STR_155(3), 
  8185 ;;		 -> STR_150(3), STR_146(3), STR_141(4), STR_137(4), 
  8186 ;;		 -> STR_132(3), STR_127(3), STR_122(3), STR_117(4), 
  8187 ;;		 -> STR_112(3), STR_107(3), STR_102(3), STR_97(4), 
  8188 ;;		 -> STR_92(3), STR_87(3), STR_82(3), STR_77(4), 
  8189 ;;		 -> STR_72(3), STR_67(3), STR_63(3), STR_58(3), 
  8190 ;;		 -> STR_54(3), STR_49(3), STR_45(3), STR_40(4), 
  8191 ;;		 -> STR_36(4), 
  8192 ;;  n               2    5[COMMON] unsigned int 
  8193 ;; Auto vars:     Size  Location     Type
  8194 ;;  r               2   10[COMMON] PTR const unsigned char 
  8195 ;;		 -> STR_168(3), STR_164(3), STR_159(3), STR_155(3), 
  8196 ;;		 -> STR_150(3), STR_146(3), STR_141(4), STR_137(4), 
  8197 ;;		 -> STR_132(3), STR_127(3), STR_122(3), STR_117(4), 
  8198 ;;		 -> STR_112(3), STR_107(3), STR_102(3), STR_97(4), 
  8199 ;;		 -> STR_92(3), STR_87(3), STR_82(3), STR_77(4), 
  8200 ;;		 -> STR_72(3), STR_67(3), STR_63(3), STR_58(3), 
  8201 ;;		 -> STR_54(3), STR_49(3), STR_45(3), STR_40(4), 
  8202 ;;		 -> STR_36(4), 
  8203 ;;  l               2    8[COMMON] PTR const unsigned char 
  8204 ;;		 -> vfpfcnvrt@ct(3), STR_24(18), STR_23(18), STR_22(19), 
  8205 ;;		 -> STR_21(20), STR_20(20), STR_19(21), STR_18(21), 
  8206 ;;		 -> STR_17(21), STR_16(22), STR_15(22), STR_14(21), 
  8207 ;;		 -> STR_13(21), STR_8(57), STR_7(44), STR_6(42), 
  8208 ;;		 -> STR_3(43), 
  8209 ;; Return value:  Size  Location     Type
  8210 ;;                  2    1[COMMON] int 
  8211 ;; Registers used:
  8212 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  8213 ;; Tracked objects:
  8214 ;;		On entry : 0/0
  8215 ;;		On exit  : 0/0
  8216 ;;		Unchanged: 0/0
  8217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8218 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8219 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8220 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8221 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8222 ;;Total ram usage:       11 bytes
  8223 ;; Hardware stack levels used:    1
  8224 ;; Hardware stack levels required when called:    1
  8225 ;; This function calls:
  8226 ;;		Nothing
  8227 ;; This function is called by:
  8228 ;;		_vfpfcnvrt
  8229 ;; This function uses a non-reentrant model
  8230 ;;
  8231                           
  8232                           
  8233                           ;psect for function _strncmp
  8234  1000                     _strncmp:	
  8235                           
  8236                           ;incstack = 0
  8237                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  8238  1000  0872               	movf	strncmp@_l+1,w
  8239  1001  00F9               	movwf	strncmp@l+1
  8240  1002  0871               	movf	strncmp@_l,w
  8241  1003  00F8               	movwf	strncmp@l
  8242  1004  0874               	movf	strncmp@_r+1,w
  8243  1005  00FB               	movwf	strncmp@r+1
  8244  1006  0873               	movf	strncmp@_r,w
  8245  1007  00FA               	movwf	strncmp@r
  8246  1008  3001               	movlw	1
  8247  1009  02F5               	subwf	strncmp@n,f
  8248  100A  3000               	movlw	0
  8249  100B  3BF6               	subwfb	strncmp@n+1,f
  8250  100C  0A75               	incf	strncmp@n,w
  8251  100D  1D03               	skipz
  8252  100E  283A               	goto	l5770
  8253  100F  0A76               	incf	strncmp@n+1,w
  8254  1010  1D03               	btfss	3,2
  8255  1011  283A               	goto	l5770
  8256  1012  01F1               	clrf	?_strncmp
  8257  1013  01F2               	clrf	?_strncmp+1
  8258  1014  0008               	return
  8259  1015                     l5772:	
  8260  1015  087A               	movf	strncmp@r,w
  8261  1016  0084               	movwf	4
  8262  1017  087B               	movf	strncmp@r+1,w
  8263  1018  0085               	movwf	5
  8264  1019  0012               	moviw fsr0++
  8265  101A  1903               	btfsc	3,2
  8266  101B  2841               	goto	l5778
  8267  101C  0875               	movf	strncmp@n,w
  8268  101D  0476               	iorwf	strncmp@n+1,w
  8269  101E  1903               	btfsc	3,2
  8270  101F  2841               	goto	l5778
  8271  1020  087A               	movf	strncmp@r,w
  8272  1021  0084               	movwf	4
  8273  1022  087B               	movf	strncmp@r+1,w
  8274  1023  0085               	movwf	5
  8275  1024  0800               	movf	0,w	;code access
  8276  1025  00F7               	movwf	??_strncmp
  8277  1026  0878               	movf	strncmp@l,w
  8278  1027  0084               	movwf	4
  8279  1028  0879               	movf	strncmp@l+1,w
  8280  1029  0085               	movwf	5
  8281  102A  0800               	movf	0,w	;code access
  8282  102B  0677               	xorwf	??_strncmp,w
  8283  102C  1D03               	btfss	3,2
  8284  102D  2841               	goto	l5778
  8285  102E  3001               	movlw	1
  8286  102F  07F8               	addwf	strncmp@l,f
  8287  1030  3000               	movlw	0
  8288  1031  3DF9               	addwfc	strncmp@l+1,f
  8289  1032  3001               	movlw	1
  8290  1033  07FA               	addwf	strncmp@r,f
  8291  1034  3000               	movlw	0
  8292  1035  3DFB               	addwfc	strncmp@r+1,f
  8293  1036  3001               	movlw	1
  8294  1037  02F5               	subwf	strncmp@n,f
  8295  1038  3000               	movlw	0
  8296  1039  3BF6               	subwfb	strncmp@n+1,f
  8297  103A                     l5770:	
  8298  103A  0878               	movf	strncmp@l,w
  8299  103B  0084               	movwf	4
  8300  103C  0879               	movf	strncmp@l+1,w
  8301  103D  0085               	movwf	5
  8302  103E  0012               	moviw fsr0++
  8303  103F  1D03               	btfss	3,2
  8304  1040  2815               	goto	l5772
  8305  1041                     l5778:	
  8306  1041  0878               	movf	strncmp@l,w
  8307  1042  0084               	movwf	4
  8308  1043  0879               	movf	strncmp@l+1,w
  8309  1044  0085               	movwf	5
  8310  1045  0800               	movf	0,w	;code access
  8311  1046  00F7               	movwf	??_strncmp
  8312  1047  087A               	movf	strncmp@r,w
  8313  1048  0084               	movwf	4
  8314  1049  087B               	movf	strncmp@r+1,w
  8315  104A  0085               	movwf	5
  8316  104B  0800               	movf	0,w	;code access
  8317  104C  0277               	subwf	??_strncmp,w
  8318  104D  00F1               	movwf	?_strncmp
  8319  104E  01F2               	clrf	?_strncmp+1
  8320  104F  1C03               	skipc
  8321  1050  03F2               	decf	?_strncmp+1,f
  8322  1051  0008               	return
  8323  1052                     __end_of_strncmp:	
  8324                           
  8325                           	psect	text15
  8326  2035                     __ptext15:	
  8327 ;; *************** function _stoa *****************
  8328 ;; Defined at:
  8329 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8330 ;; Parameters:    Size  Location     Type
  8331 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  8332 ;;		 -> vsnprintf@f(6), 
  8333 ;;  s               1    2[BANK0 ] PTR unsigned char 
  8334 ;;		 -> ?_snprintf(2), 
  8335 ;; Auto vars:     Size  Location     Type
  8336 ;;  nuls            7    3[BANK0 ] unsigned char [7]
  8337 ;;  l               2   18[BANK0 ] int 
  8338 ;;  p               2   16[BANK0 ] int 
  8339 ;;  cp              2   14[BANK0 ] PTR unsigned char 
  8340 ;;		 -> ?_snprintf(2), stoa@nuls(7), 
  8341 ;;  w               2   12[BANK0 ] int 
  8342 ;;  i               2   10[BANK0 ] int 
  8343 ;; Return value:  Size  Location     Type
  8344 ;;                  2    0[BANK0 ] int 
  8345 ;; Registers used:
  8346 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8347 ;; Tracked objects:
  8348 ;;		On entry : 0/0
  8349 ;;		On exit  : 0/0
  8350 ;;		Unchanged: 0/0
  8351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8352 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8353 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8354 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8355 ;;      Totals:         2      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8356 ;;Total ram usage:       22 bytes
  8357 ;; Hardware stack levels used:    1
  8358 ;; Hardware stack levels required when called:    3
  8359 ;; This function calls:
  8360 ;;		_fputc
  8361 ;;		_strlen
  8362 ;; This function is called by:
  8363 ;;		_vfpfcnvrt
  8364 ;; This function uses a non-reentrant model
  8365 ;;
  8366                           
  8367                           
  8368                           ;psect for function _stoa
  8369  2035                     _stoa:	
  8370                           
  8371                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8372                           
  8373                           ;incstack = 0
  8374                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8375  2035  30D7               	movlw	low stoa@F1174
  8376  2036  0086               	movwf	6
  8377  2037  3001               	movlw	high stoa@F1174
  8378  2038  0087               	movwf	7
  8379  2039  3023               	movlw	low stoa@nuls
  8380  203A  0084               	movwf	4
  8381  203B  3000               	movlw	high stoa@nuls
  8382  203C  0085               	movwf	5
  8383  203D  3007               	movlw	7
  8384  203E  00FA               	movwf	??_stoa
  8385  203F                     u10800:	
  8386  203F  0016               	moviw fsr1++
  8387  2040  001A               	movwi fsr0++
  8388  2041  0BFA               	decfsz	??_stoa,f
  8389  2042  283F               	goto	u10800
  8390                           
  8391                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  8392  2043  0020               	movlb	0	; select bank0
  8393  2044  0822               	movf	stoa@s,w
  8394  2045  00AE               	movwf	stoa@cp
  8395  2046  3001               	movlw	1
  8396  2047  00AF               	movwf	stoa@cp+1
  8397                           
  8398                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  8399  2048  082E               	movf	stoa@cp,w
  8400  2049  042F               	iorwf	stoa@cp+1,w
  8401  204A  1D03               	btfss	3,2
  8402  204B  2850               	goto	l7542
  8403                           
  8404                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  8405  204C  3023               	movlw	low stoa@nuls
  8406  204D  00AE               	movwf	stoa@cp
  8407  204E  3000               	movlw	high stoa@nuls
  8408  204F  00AF               	movwf	stoa@cp+1
  8409  2050                     l7542:	
  8410                           
  8411                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  8412  2050  082F               	movf	stoa@cp+1,w
  8413  2051  00F2               	movwf	strlen@s+1
  8414  2052  082E               	movf	stoa@cp,w
  8415  2053  00F1               	movwf	strlen@s
  8416  2054  31B3  237B  31A0   	fcall	_strlen
  8417  2057  0872               	movf	?_strlen+1,w
  8418  2058  0020               	movlb	0	; select bank0
  8419  2059  00B3               	movwf	stoa@l+1
  8420  205A  0871               	movf	?_strlen,w
  8421  205B  00B2               	movwf	stoa@l
  8422                           
  8423                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  8424  205C  0023               	movlb	3	; select bank3
  8425  205D  0841               	movf	(_prec+1)^(0+384),w
  8426  205E  0020               	movlb	0	; select bank0
  8427  205F  00B1               	movwf	stoa@p+1
  8428  2060  0023               	movlb	3	; select bank3
  8429  2061  0840               	movf	_prec^(0+384),w
  8430  2062  0020               	movlb	0	; select bank0
  8431  2063  00B0               	movwf	stoa@p
  8432                           
  8433                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  8434  2064  1BB1               	btfsc	stoa@p+1,7
  8435  2065  2877               	goto	l690
  8436  2066  0831               	movf	stoa@p+1,w
  8437  2067  3A80               	xorlw	128
  8438  2068  00FA               	movwf	??_stoa
  8439  2069  0833               	movf	stoa@l+1,w
  8440  206A  3A80               	xorlw	128
  8441  206B  027A               	subwf	??_stoa,w
  8442  206C  1D03               	skipz
  8443  206D  2870               	goto	u10835
  8444  206E  0832               	movf	stoa@l,w
  8445  206F  0230               	subwf	stoa@p,w
  8446  2070                     u10835:	
  8447  2070  1803               	btfsc	3,0
  8448  2071  2877               	goto	l690
  8449  2072  0020               	movlb	0	; select bank0
  8450  2073  0831               	movf	stoa@p+1,w
  8451  2074  00B3               	movwf	stoa@l+1
  8452  2075  0830               	movf	stoa@p,w
  8453  2076  00B2               	movwf	stoa@l
  8454  2077                     l690:	
  8455                           
  8456                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  8457  2077  0020               	movlb	0	; select bank0
  8458  2078  0833               	movf	stoa@l+1,w
  8459  2079  00B1               	movwf	stoa@p+1
  8460  207A  0832               	movf	stoa@l,w
  8461  207B  00B0               	movwf	stoa@p
  8462                           
  8463                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  8464  207C  0023               	movlb	3	; select bank3
  8465  207D  083F               	movf	(_width+1)^(0+384),w
  8466  207E  0020               	movlb	0	; select bank0
  8467  207F  00AD               	movwf	stoa@w+1
  8468  2080  0023               	movlb	3	; select bank3
  8469  2081  083E               	movf	_width^(0+384),w
  8470  2082  0020               	movlb	0	; select bank0
  8471  2083  00AC               	movwf	stoa@w
  8472                           
  8473                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  8474  2084  0023               	movlb	3	; select bank3
  8475  2085  1C42               	btfss	_flags^(0+384),0
  8476  2086  2899               	goto	l7560
  8477  2087  28A6               	goto	l7562
  8478  2088                     l7556:	
  8479                           
  8480                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  8481  2088  3020               	movlw	32
  8482  2089  00F1               	movwf	fputc@c
  8483  208A  3000               	movlw	0
  8484  208B  00F2               	movwf	fputc@c+1
  8485  208C  0020               	movlb	0	; select bank0
  8486  208D  0821               	movf	stoa@fp+1,w
  8487  208E  00F4               	movwf	fputc@fp+1
  8488  208F  0820               	movf	stoa@fp,w
  8489  2090  00F3               	movwf	fputc@fp
  8490  2091  31A8  202C  31A0   	fcall	_fputc
  8491                           
  8492                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  8493  2094  3001               	movlw	1
  8494  2095  0020               	movlb	0	; select bank0
  8495  2096  07B2               	addwf	stoa@l,f
  8496  2097  3000               	movlw	0
  8497  2098  3DB3               	addwfc	stoa@l+1,f
  8498  2099                     l7560:	
  8499                           
  8500                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  8501  2099  0020               	movlb	0	; select bank0
  8502  209A  0833               	movf	stoa@l+1,w
  8503  209B  3A80               	xorlw	128
  8504  209C  00FA               	movwf	??_stoa
  8505  209D  082D               	movf	stoa@w+1,w
  8506  209E  3A80               	xorlw	128
  8507  209F  027A               	subwf	??_stoa,w
  8508  20A0  1D03               	skipz
  8509  20A1  28A4               	goto	u10855
  8510  20A2  082C               	movf	stoa@w,w
  8511  20A3  0232               	subwf	stoa@l,w
  8512  20A4                     u10855:	
  8513  20A4  1C03               	skipc
  8514  20A5  2888               	goto	l7556
  8515  20A6                     l7562:	
  8516                           
  8517                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  8518  20A6  0020               	movlb	0	; select bank0
  8519  20A7  01AA               	clrf	stoa@i
  8520  20A8  01AB               	clrf	stoa@i+1
  8521  20A9                     l7570:	
  8522                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8523                           
  8524                           
  8525                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8526  20A9  082B               	movf	stoa@i+1,w
  8527  20AA  3A80               	xorlw	128
  8528  20AB  00FA               	movwf	??_stoa
  8529  20AC  0831               	movf	stoa@p+1,w
  8530  20AD  3A80               	xorlw	128
  8531  20AE  027A               	subwf	??_stoa,w
  8532  20AF  1D03               	skipz
  8533  20B0  28B3               	goto	u10865
  8534  20B1  0830               	movf	stoa@p,w
  8535  20B2  022A               	subwf	stoa@i,w
  8536  20B3                     u10865:	
  8537  20B3  1803               	btfsc	3,0
  8538  20B4  28D2               	goto	l699
  8539                           
  8540                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  8541  20B5  0020               	movlb	0	; select bank0
  8542  20B6  082E               	movf	stoa@cp,w
  8543  20B7  0086               	movwf	6
  8544  20B8  082F               	movf	stoa@cp+1,w
  8545  20B9  0087               	movwf	7
  8546  20BA  0801               	movf	1,w
  8547  20BB  00FA               	movwf	??_stoa
  8548  20BC  01FB               	clrf	??_stoa+1
  8549  20BD  087A               	movf	??_stoa,w
  8550  20BE  00F1               	movwf	fputc@c
  8551  20BF  087B               	movf	??_stoa+1,w
  8552  20C0  00F2               	movwf	fputc@c+1
  8553  20C1  0821               	movf	stoa@fp+1,w
  8554  20C2  00F4               	movwf	fputc@fp+1
  8555  20C3  0820               	movf	stoa@fp,w
  8556  20C4  00F3               	movwf	fputc@fp
  8557  20C5  31A8  202C  31A0   	fcall	_fputc
  8558                           
  8559                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  8560  20C8  3001               	movlw	1
  8561  20C9  0020               	movlb	0	; select bank0
  8562  20CA  07AE               	addwf	stoa@cp,f
  8563  20CB  3000               	movlw	0
  8564  20CC  3DAF               	addwfc	stoa@cp+1,f
  8565                           
  8566                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  8567  20CD  3001               	movlw	1
  8568  20CE  07AA               	addwf	stoa@i,f
  8569  20CF  3000               	movlw	0
  8570  20D0  3DAB               	addwfc	stoa@i+1,f
  8571  20D1  28A9               	goto	l7570
  8572  20D2                     l699:	
  8573                           
  8574                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  8575  20D2  0023               	movlb	3	; select bank3
  8576  20D3  1842               	btfsc	_flags^(0+384),0
  8577  20D4  28E7               	goto	l7578
  8578  20D5  28F4               	goto	l7580
  8579  20D6                     l7574:	
  8580                           
  8581                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  8582  20D6  3020               	movlw	32
  8583  20D7  00F1               	movwf	fputc@c
  8584  20D8  3000               	movlw	0
  8585  20D9  00F2               	movwf	fputc@c+1
  8586  20DA  0020               	movlb	0	; select bank0
  8587  20DB  0821               	movf	stoa@fp+1,w
  8588  20DC  00F4               	movwf	fputc@fp+1
  8589  20DD  0820               	movf	stoa@fp,w
  8590  20DE  00F3               	movwf	fputc@fp
  8591  20DF  31A8  202C  31A0   	fcall	_fputc
  8592                           
  8593                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  8594  20E2  3001               	movlw	1
  8595  20E3  0020               	movlb	0	; select bank0
  8596  20E4  07B2               	addwf	stoa@l,f
  8597  20E5  3000               	movlw	0
  8598  20E6  3DB3               	addwfc	stoa@l+1,f
  8599  20E7                     l7578:	
  8600                           
  8601                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  8602  20E7  0020               	movlb	0	; select bank0
  8603  20E8  0833               	movf	stoa@l+1,w
  8604  20E9  3A80               	xorlw	128
  8605  20EA  00FA               	movwf	??_stoa
  8606  20EB  082D               	movf	stoa@w+1,w
  8607  20EC  3A80               	xorlw	128
  8608  20ED  027A               	subwf	??_stoa,w
  8609  20EE  1D03               	skipz
  8610  20EF  28F2               	goto	u10885
  8611  20F0  082C               	movf	stoa@w,w
  8612  20F1  0232               	subwf	stoa@l,w
  8613  20F2                     u10885:	
  8614  20F2  1C03               	skipc
  8615  20F3  28D6               	goto	l7574
  8616  20F4                     l7580:	
  8617                           
  8618                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  8619  20F4  0020               	movlb	0	; select bank0
  8620  20F5  0833               	movf	stoa@l+1,w
  8621  20F6  00A1               	movwf	?_stoa+1
  8622  20F7  0832               	movf	stoa@l,w
  8623  20F8  00A0               	movwf	?_stoa
  8624  20F9  0008               	return
  8625  20FA                     __end_of_stoa:	
  8626                           
  8627                           	psect	text16
  8628  261C                     __ptext16:	
  8629 ;; *************** function _otoa *****************
  8630 ;; Defined at:
  8631 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8632 ;; Parameters:    Size  Location     Type
  8633 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  8634 ;;		 -> vsnprintf@f(6), 
  8635 ;;  d               8   18[BANK0 ] unsigned long long 
  8636 ;; Auto vars:     Size  Location     Type
  8637 ;;  n               8   40[BANK0 ] unsigned long long 
  8638 ;;  i               2   48[BANK0 ] int 
  8639 ;;  w               2   38[BANK0 ] int 
  8640 ;;  t               2   36[BANK0 ] int 
  8641 ;;  p               2   34[BANK0 ] int 
  8642 ;; Return value:  Size  Location     Type
  8643 ;;                  2   16[BANK0 ] int 
  8644 ;; Registers used:
  8645 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8646 ;; Tracked objects:
  8647 ;;		On entry : 0/0
  8648 ;;		On exit  : 0/0
  8649 ;;		Unchanged: 0/0
  8650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8651 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8652 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8653 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8654 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8655 ;;Total ram usage:       34 bytes
  8656 ;; Hardware stack levels used:    1
  8657 ;; Hardware stack levels required when called:    5
  8658 ;; This function calls:
  8659 ;;		_pad
  8660 ;; This function is called by:
  8661 ;;		_vfpfcnvrt
  8662 ;; This function uses a non-reentrant model
  8663 ;;
  8664                           
  8665                           
  8666                           ;psect for function _otoa
  8667  261C                     _otoa:	
  8668                           
  8669                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  8670                           
  8671                           ;incstack = 0
  8672                           ; Regs used in _otoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8673  261C  0023               	movlb	3	; select bank3
  8674  261D  1BC1               	btfsc	(_prec+1)^(0+384),7
  8675  261E  2E23               	goto	l668
  8676                           
  8677                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  8678  261F  30FD               	movlw	253
  8679  2620  05C2               	andwf	_flags^(0+384),f
  8680  2621  30FF               	movlw	255
  8681  2622  05C3               	andwf	(_flags+1)^(0+384),f
  8682  2623                     l668:	
  8683                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 515:     }
  8684                           
  8685                           
  8686                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  8687  2623  0841               	movf	(_prec+1)^(0+384),w
  8688  2624  3A80               	xorlw	128
  8689  2625  0020               	movlb	0	; select bank0
  8690  2626  00BA               	movwf	??_otoa
  8691  2627  3080               	movlw	128
  8692  2628  023A               	subwf	??_otoa,w
  8693  2629  1D03               	skipz
  8694  262A  2E2E               	goto	u10715
  8695  262B  3001               	movlw	1
  8696  262C  0023               	movlb	3	; select bank3
  8697  262D  0240               	subwf	_prec^(0+384),w
  8698  262E                     u10715:	
  8699  262E  1803               	skipnc
  8700  262F  2E36               	goto	l7496
  8701  2630  3001               	movlw	1
  8702  2631  0020               	movlb	0	; select bank0
  8703  2632  00C2               	movwf	otoa@p
  8704  2633  3000               	movlw	0
  8705  2634  00C3               	movwf	otoa@p+1
  8706  2635  2E3E               	goto	l672
  8707  2636                     l7496:	
  8708  2636  0023               	movlb	3	; select bank3
  8709  2637  0841               	movf	(_prec+1)^(0+384),w
  8710  2638  0020               	movlb	0	; select bank0
  8711  2639  00C3               	movwf	otoa@p+1
  8712  263A  0023               	movlb	3	; select bank3
  8713  263B  0840               	movf	_prec^(0+384),w
  8714  263C  0020               	movlb	0	; select bank0
  8715  263D  00C2               	movwf	otoa@p
  8716  263E                     l672:	
  8717                           
  8718                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  8719  263E  0023               	movlb	3	; select bank3
  8720  263F  083F               	movf	(_width+1)^(0+384),w
  8721  2640  0020               	movlb	0	; select bank0
  8722  2641  00C7               	movwf	otoa@w+1
  8723  2642  0023               	movlb	3	; select bank3
  8724  2643  083E               	movf	_width^(0+384),w
  8725  2644  0020               	movlb	0	; select bank0
  8726  2645  00C6               	movwf	otoa@w
  8727                           
  8728                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  8729  2646  0832               	movf	otoa@d,w
  8730  2647  00C8               	movwf	otoa@n
  8731  2648  0833               	movf	otoa@d+1,w
  8732  2649  00C9               	movwf	otoa@n+1
  8733  264A  0834               	movf	otoa@d+2,w
  8734  264B  00CA               	movwf	otoa@n+2
  8735  264C  0835               	movf	otoa@d+3,w
  8736  264D  00CB               	movwf	otoa@n+3
  8737  264E  0836               	movf	otoa@d+4,w
  8738  264F  00CC               	movwf	otoa@n+4
  8739  2650  0837               	movf	otoa@d+5,w
  8740  2651  00CD               	movwf	otoa@n+5
  8741  2652  0838               	movf	otoa@d+6,w
  8742  2653  00CE               	movwf	otoa@n+6
  8743  2654  0839               	movf	otoa@d+7,w
  8744  2655  00CF               	movwf	otoa@n+7
  8745                           
  8746                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  8747  2656  304F               	movlw	79
  8748  2657  00D0               	movwf	otoa@i
  8749  2658  3000               	movlw	0
  8750  2659  00D1               	movwf	otoa@i+1
  8751                           
  8752                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  8753  265A  0024               	movlb	4	; select bank4
  8754  265B  01EF               	clrf	(_dbuf^(0+512)+79)
  8755                           
  8756                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  8757  265C  0020               	movlb	0	; select bank0
  8758  265D  01C4               	clrf	otoa@t
  8759  265E  01C5               	clrf	otoa@t+1
  8760                           
  8761                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8762  265F  2ED3               	goto	l673
  8763  2660                     l7514:	
  8764  2660  0020               	movlb	0	; select bank0
  8765  2661  0848               	movf	otoa@n,w
  8766  2662  0449               	iorwf	otoa@n+1,w
  8767  2663  044A               	iorwf	otoa@n+2,w
  8768  2664  044B               	iorwf	otoa@n+3,w
  8769  2665  044C               	iorwf	otoa@n+4,w
  8770  2666  044D               	iorwf	otoa@n+5,w
  8771  2667  044E               	iorwf	otoa@n+6,w
  8772  2668  044F               	iorwf	otoa@n+7,w
  8773  2669  1D03               	skipz
  8774  266A  2E85               	goto	l7504
  8775  266B  0843               	movf	otoa@p+1,w
  8776  266C  3A80               	xorlw	128
  8777  266D  00BA               	movwf	??_otoa
  8778  266E  3080               	movlw	128
  8779  266F  023A               	subwf	??_otoa,w
  8780  2670  1D03               	skipz
  8781  2671  2E74               	goto	u10755
  8782  2672  3001               	movlw	1
  8783  2673  0242               	subwf	otoa@p,w
  8784  2674                     u10755:	
  8785  2674  1803               	skipnc
  8786  2675  2E85               	goto	l7504
  8787  2676  0020               	movlb	0	; select bank0
  8788  2677  0847               	movf	otoa@w+1,w
  8789  2678  3A80               	xorlw	128
  8790  2679  00BA               	movwf	??_otoa
  8791  267A  3080               	movlw	128
  8792  267B  023A               	subwf	??_otoa,w
  8793  267C  1D03               	skipz
  8794  267D  2E80               	goto	u10765
  8795  267E  3001               	movlw	1
  8796  267F  0246               	subwf	otoa@w,w
  8797  2680                     u10765:	
  8798  2680  1C03               	skipc
  8799  2681  2EDE               	goto	l679
  8800  2682  0023               	movlb	3	; select bank3
  8801  2683  1CC2               	btfss	_flags^(0+384),1
  8802  2684  2EDE               	goto	l679
  8803  2685                     l7504:	
  8804                           
  8805                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  8806  2685  30FF               	movlw	255
  8807  2686  0020               	movlb	0	; select bank0
  8808  2687  07D0               	addwf	otoa@i,f
  8809  2688  30FF               	movlw	255
  8810  2689  3DD1               	addwfc	otoa@i+1,f
  8811                           
  8812                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  8813  268A  3007               	movlw	7
  8814  268B  0548               	andwf	otoa@n,w
  8815  268C  00C4               	movwf	otoa@t
  8816  268D  3000               	movlw	0
  8817  268E  0549               	andwf	otoa@n+1,w
  8818  268F  00C5               	movwf	otoa@t+1
  8819                           
  8820                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  8821  2690  0844               	movf	otoa@t,w
  8822  2691  3E30               	addlw	48
  8823  2692  00BA               	movwf	??_otoa
  8824  2693  0850               	movf	otoa@i,w
  8825  2694  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8826  2695  0086               	movwf	6
  8827  2696  3002               	movlw	2	; select bank4/5
  8828  2697  0087               	movwf	7
  8829  2698  083A               	movf	??_otoa,w
  8830  2699  0081               	movwf	1
  8831                           
  8832                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  8833  269A  30FF               	movlw	255
  8834  269B  07C2               	addwf	otoa@p,f
  8835  269C  30FF               	movlw	255
  8836  269D  3DC3               	addwfc	otoa@p+1,f
  8837                           
  8838                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  8839  269E  30FF               	movlw	255
  8840  269F  07C6               	addwf	otoa@w,f
  8841  26A0  30FF               	movlw	255
  8842  26A1  3DC7               	addwfc	otoa@w+1,f
  8843                           
  8844                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  8845  26A2  3048               	movlw	low otoa@n
  8846  26A3  0086               	movwf	6
  8847  26A4  3000               	movlw	high otoa@n
  8848  26A5  0087               	movwf	7
  8849  26A6  3F40               	moviw [0]fsr1
  8850  26A7  00BA               	movwf	??_otoa
  8851  26A8  3F41               	moviw [1]fsr1
  8852  26A9  00BB               	movwf	??_otoa+1
  8853  26AA  3F42               	moviw [2]fsr1
  8854  26AB  00BC               	movwf	??_otoa+2
  8855  26AC  3F43               	moviw [3]fsr1
  8856  26AD  00BD               	movwf	??_otoa+3
  8857  26AE  3F44               	moviw [4]fsr1
  8858  26AF  00BE               	movwf	??_otoa+4
  8859  26B0  3F45               	moviw [5]fsr1
  8860  26B1  00BF               	movwf	??_otoa+5
  8861  26B2  3F46               	moviw [6]fsr1
  8862  26B3  00C0               	movwf	??_otoa+6
  8863  26B4  3F47               	moviw [7]fsr1
  8864  26B5  00C1               	movwf	??_otoa+7
  8865  26B6  3003               	movlw	3
  8866  26B7                     u10725:	
  8867  26B7  0020               	movlb	0	; select bank0
  8868  26B8  36C1               	lsrf	??_otoa+7,f
  8869  26B9  0CC0               	rrf	??_otoa+6,f
  8870  26BA  0CBF               	rrf	??_otoa+5,f
  8871  26BB  0CBE               	rrf	??_otoa+4,f
  8872  26BC  0CBD               	rrf	??_otoa+3,f
  8873  26BD  0CBC               	rrf	??_otoa+2,f
  8874  26BE  0CBB               	rrf	??_otoa+1,f
  8875  26BF  0CBA               	rrf	??_otoa,f
  8876  26C0  0B89               	decfsz	9,f
  8877  26C1  2EB7               	goto	u10725
  8878  26C2  0020               	movlb	0	; select bank0
  8879  26C3  0841               	movf	??_otoa+7,w
  8880  26C4  00CF               	movwf	otoa@n+7
  8881  26C5  0840               	movf	??_otoa+6,w
  8882  26C6  00CE               	movwf	otoa@n+6
  8883  26C7  083F               	movf	??_otoa+5,w
  8884  26C8  00CD               	movwf	otoa@n+5
  8885  26C9  083E               	movf	??_otoa+4,w
  8886  26CA  00CC               	movwf	otoa@n+4
  8887  26CB  083D               	movf	??_otoa+3,w
  8888  26CC  00CB               	movwf	otoa@n+3
  8889  26CD  083C               	movf	??_otoa+2,w
  8890  26CE  00CA               	movwf	otoa@n+2
  8891  26CF  083B               	movf	??_otoa+1,w
  8892  26D0  00C9               	movwf	otoa@n+1
  8893  26D1  083A               	movf	??_otoa,w
  8894  26D2  00C8               	movwf	otoa@n
  8895  26D3                     l673:	
  8896                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 531:     }
  8897                           
  8898                           
  8899                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8900  26D3  0851               	movf	otoa@i+1,w
  8901  26D4  3A80               	xorlw	128
  8902  26D5  00BA               	movwf	??_otoa
  8903  26D6  3080               	movlw	128
  8904  26D7  023A               	subwf	??_otoa,w
  8905  26D8  1D03               	skipz
  8906  26D9  2EDC               	goto	u10735
  8907  26DA  3001               	movlw	1
  8908  26DB  0250               	subwf	otoa@i,w
  8909  26DC                     u10735:	
  8910  26DC  1803               	btfsc	3,0
  8911  26DD  2E60               	goto	l7514
  8912  26DE                     l679:	
  8913                           
  8914                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  8915  26DE  0023               	movlb	3	; select bank3
  8916  26DF  1E42               	btfss	_flags^(0+384),4
  8917  26E0  2EF7               	goto	l7530
  8918  26E1  0020               	movlb	0	; select bank0
  8919  26E2  0844               	movf	otoa@t,w
  8920  26E3  0445               	iorwf	otoa@t+1,w
  8921  26E4  1903               	btfsc	3,2
  8922  26E5  2EF7               	goto	l7530
  8923                           
  8924                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  8925  26E6  30FF               	movlw	255
  8926  26E7  07D0               	addwf	otoa@i,f
  8927  26E8  30FF               	movlw	255
  8928  26E9  3DD1               	addwfc	otoa@i+1,f
  8929                           
  8930                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  8931  26EA  3030               	movlw	48
  8932  26EB  00BA               	movwf	??_otoa
  8933  26EC  0850               	movf	otoa@i,w
  8934  26ED  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8935  26EE  0086               	movwf	6
  8936  26EF  3002               	movlw	2	; select bank4/5
  8937  26F0  0087               	movwf	7
  8938  26F1  083A               	movf	??_otoa,w
  8939  26F2  0081               	movwf	1
  8940                           
  8941                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  8942  26F3  30FF               	movlw	255
  8943  26F4  07C6               	addwf	otoa@w,f
  8944  26F5  30FF               	movlw	255
  8945  26F6  3DC7               	addwfc	otoa@w+1,f
  8946  26F7                     l7530:	
  8947                           
  8948                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  8949  26F7  0020               	movlb	0	; select bank0
  8950  26F8  0831               	movf	otoa@fp+1,w
  8951  26F9  00A7               	movwf	pad@fp+1
  8952  26FA  0830               	movf	otoa@fp,w
  8953  26FB  00A6               	movwf	pad@fp
  8954  26FC  0850               	movf	otoa@i,w
  8955  26FD  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8956  26FE  00BA               	movwf	??_otoa
  8957  26FF  083A               	movf	??_otoa,w
  8958  2700  00A8               	movwf	pad@buf
  8959  2701  0847               	movf	otoa@w+1,w
  8960  2702  00AA               	movwf	pad@p+1
  8961  2703  0846               	movf	otoa@w,w
  8962  2704  00A9               	movwf	pad@p
  8963  2705  31B7  275E         	fcall	_pad
  8964  2707  0020               	movlb	0	; select bank0
  8965  2708  0827               	movf	?_pad+1,w
  8966  2709  00B1               	movwf	?_otoa+1
  8967  270A  0826               	movf	?_pad,w
  8968  270B  00B0               	movwf	?_otoa
  8969  270C  0008               	return
  8970  270D                     __end_of_otoa:	
  8971                           
  8972                           	psect	text17
  8973  0058                     __ptext17:	
  8974 ;; *************** function _efgtoa *****************
  8975 ;; Defined at:
  8976 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8977 ;; Parameters:    Size  Location     Type
  8978 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  8979 ;;		 -> vsnprintf@f(6), 
  8980 ;;  f               4    2[BANK1 ] PTR struct _IO_FILE
  8981 ;;  c               1    6[BANK1 ] unsigned char 
  8982 ;; Auto vars:     Size  Location     Type
  8983 ;;  u               4   63[BANK1 ] unsigned char 
  8984 ;;  g               4   55[BANK1 ] unsigned char 
  8985 ;;  l               4   49[BANK1 ] unsigned char 
  8986 ;;  h               4   45[BANK1 ] unsigned char 
  8987 ;;  ou              4   11[BANK1 ] unsigned char 
  8988 ;;  n               2   61[BANK1 ] int 
  8989 ;;  e               2   59[BANK1 ] int 
  8990 ;;  i               2   53[BANK1 ] int 
  8991 ;;  w               2   42[BANK1 ] int 
  8992 ;;  p               2   39[BANK1 ] int 
  8993 ;;  sign            2   37[BANK1 ] int 
  8994 ;;  d               2   35[BANK1 ] int 
  8995 ;;  ne              2   33[BANK1 ] int 
  8996 ;;  m               2   31[BANK1 ] int 
  8997 ;;  pp              2   29[BANK1 ] int 
  8998 ;;  t               2   27[BANK1 ] int 
  8999 ;;  mode            1   44[BANK1 ] unsigned char 
  9000 ;;  nmode           1   41[BANK1 ] unsigned char 
  9001 ;; Return value:  Size  Location     Type
  9002 ;;                  2    0[BANK1 ] int 
  9003 ;; Registers used:
  9004 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9005 ;; Tracked objects:
  9006 ;;		On entry : 0/0
  9007 ;;		On exit  : 0/0
  9008 ;;		Unchanged: 0/0
  9009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9010 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9011 ;;      Locals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9012 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9013 ;;      Totals:         0       0      67       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9014 ;;Total ram usage:       67 bytes
  9015 ;; Hardware stack levels used:    1
  9016 ;; Hardware stack levels required when called:    5
  9017 ;; This function calls:
  9018 ;;		___awdiv
  9019 ;;		___awmod
  9020 ;;		___fladd
  9021 ;;		___fldiv
  9022 ;;		___fleq
  9023 ;;		___flge
  9024 ;;		___flmul
  9025 ;;		___flneg
  9026 ;;		___flsub
  9027 ;;		___fltol
  9028 ;;		___fpclassifyf
  9029 ;;		_floorf
  9030 ;;		_isupper
  9031 ;;		_pad
  9032 ;;		_strcpy
  9033 ;;		_tolower
  9034 ;; This function is called by:
  9035 ;;		_vfpfcnvrt
  9036 ;; This function uses a non-reentrant model
  9037 ;;
  9038                           
  9039                           
  9040                           ;psect for function _efgtoa
  9041  0058                     _efgtoa:	
  9042                           
  9043                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  9044                           
  9045                           ;incstack = 0
  9046                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9047  0058  0021               	movlb	1	; select bank1
  9048  0059  01C5               	clrf	efgtoa@sign^(0+128)
  9049  005A  01C6               	clrf	(efgtoa@sign+1)^(0+128)
  9050                           
  9051                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  9052  005B  0825               	movf	(efgtoa@f+3)^(0+128),w
  9053  005C  00DA               	movwf	(efgtoa@g+3)^(0+128)
  9054  005D  0824               	movf	(efgtoa@f+2)^(0+128),w
  9055  005E  00D9               	movwf	(efgtoa@g+2)^(0+128)
  9056  005F  0823               	movf	(efgtoa@f+1)^(0+128),w
  9057  0060  00D8               	movwf	(efgtoa@g+1)^(0+128)
  9058  0061  0822               	movf	efgtoa@f^(0+128),w
  9059  0062  00D7               	movwf	efgtoa@g^(0+128)
  9060                           
  9061                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  9062  0063  085A               	movf	(efgtoa@g+3)^(0+128),w
  9063  0064  0020               	movlb	0	; select bank0
  9064  0065  00DD               	movwf	___flge@ff1+3
  9065  0066  0021               	movlb	1	; select bank1
  9066  0067  0859               	movf	(efgtoa@g+2)^(0+128),w
  9067  0068  0020               	movlb	0	; select bank0
  9068  0069  00DC               	movwf	___flge@ff1+2
  9069  006A  0021               	movlb	1	; select bank1
  9070  006B  0858               	movf	(efgtoa@g+1)^(0+128),w
  9071  006C  0020               	movlb	0	; select bank0
  9072  006D  00DB               	movwf	___flge@ff1+1
  9073  006E  0021               	movlb	1	; select bank1
  9074  006F  0857               	movf	efgtoa@g^(0+128),w
  9075  0070  0020               	movlb	0	; select bank0
  9076  0071  00DA               	movwf	___flge@ff1
  9077  0072  3000               	movlw	0
  9078  0073  00E1               	movwf	___flge@ff2+3
  9079  0074  3000               	movlw	0
  9080  0075  00E0               	movwf	___flge@ff2+2
  9081  0076  3000               	movlw	0
  9082  0077  00DF               	movwf	___flge@ff2+1
  9083  0078  3000               	movlw	0
  9084  0079  00DE               	movwf	___flge@ff2
  9085  007A  31A9  21C7  3180   	fcall	___flge
  9086  007D  1803               	btfsc	3,0
  9087  007E  2898               	goto	l7208
  9088                           
  9089                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  9090  007F  3001               	movlw	1
  9091  0080  0021               	movlb	1	; select bank1
  9092  0081  00C5               	movwf	efgtoa@sign^(0+128)
  9093  0082  3000               	movlw	0
  9094  0083  00C6               	movwf	(efgtoa@sign^(0+128)+1)
  9095                           
  9096                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  9097  0084  085A               	movf	(efgtoa@g+3)^(0+128),w
  9098  0085  00F4               	movwf	___flneg@f1+3
  9099  0086  0859               	movf	(efgtoa@g+2)^(0+128),w
  9100  0087  00F3               	movwf	___flneg@f1+2
  9101  0088  0858               	movf	(efgtoa@g+1)^(0+128),w
  9102  0089  00F2               	movwf	___flneg@f1+1
  9103  008A  0857               	movf	efgtoa@g^(0+128),w
  9104  008B  00F1               	movwf	___flneg@f1
  9105  008C  31B3  2306  3180   	fcall	___flneg
  9106  008F  0874               	movf	?___flneg+3,w
  9107  0090  0021               	movlb	1	; select bank1
  9108  0091  00DA               	movwf	(efgtoa@g+3)^(0+128)
  9109  0092  0873               	movf	?___flneg+2,w
  9110  0093  00D9               	movwf	(efgtoa@g+2)^(0+128)
  9111  0094  0872               	movf	?___flneg+1,w
  9112  0095  00D8               	movwf	(efgtoa@g+1)^(0+128)
  9113  0096  0871               	movf	?___flneg,w
  9114  0097  00D7               	movwf	efgtoa@g^(0+128)
  9115  0098                     l7208:	
  9116                           
  9117                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  9118  0098  0021               	movlb	1	; select bank1
  9119  0099  01DD               	clrf	efgtoa@n^(0+128)
  9120  009A  01DE               	clrf	(efgtoa@n+1)^(0+128)
  9121                           
  9122                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  9123  009B  0023               	movlb	3	; select bank3
  9124  009C  083F               	movf	(_width+1)^(0+384),w
  9125  009D  0021               	movlb	1	; select bank1
  9126  009E  00CB               	movwf	(efgtoa@w+1)^(0+128)
  9127  009F  0023               	movlb	3	; select bank3
  9128  00A0  083E               	movf	_width^(0+384),w
  9129  00A1  0021               	movlb	1	; select bank1
  9130  00A2  00CA               	movwf	efgtoa@w^(0+128)
  9131                           
  9132                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  9133  00A3  0845               	movf	efgtoa@sign^(0+128),w
  9134  00A4  0446               	iorwf	(efgtoa@sign+1)^(0+128),w
  9135  00A5  1D03               	btfss	3,2
  9136  00A6  28AA               	goto	l7216
  9137  00A7  0023               	movlb	3	; select bank3
  9138  00A8  1D42               	btfss	_flags^(0+384),2
  9139  00A9  28C3               	goto	l7228
  9140  00AA                     l7216:	
  9141                           
  9142                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  9143  00AA  0021               	movlb	1	; select bank1
  9144  00AB  0845               	movf	efgtoa@sign^(0+128),w
  9145  00AC  0446               	iorwf	(efgtoa@sign+1)^(0+128),w
  9146  00AD  1D03               	btfss	3,2
  9147  00AE  28B1               	goto	l7220
  9148  00AF  302B               	movlw	43
  9149  00B0  28B2               	goto	L3
  9150  00B1                     l7220:	
  9151  00B1  302D               	movlw	45
  9152  00B2                     L3:	
  9153  00B2  00AF               	movwf	_efgtoa$1041^(0+128)
  9154  00B3  3000               	movlw	0
  9155  00B4  00B0               	movwf	(_efgtoa$1041^(0+128)+1)
  9156  00B5  082F               	movf	_efgtoa$1041^(0+128),w
  9157  00B6  00A7               	movwf	??_efgtoa^(0+128)
  9158  00B7  0827               	movf	??_efgtoa^(0+128),w
  9159  00B8  0024               	movlb	4	; select bank4
  9160  00B9  00A0               	movwf	_dbuf^(0+512)
  9161                           
  9162                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  9163  00BA  3001               	movlw	1
  9164  00BB  0021               	movlb	1	; select bank1
  9165  00BC  07DD               	addwf	efgtoa@n^(0+128),f
  9166  00BD  3000               	movlw	0
  9167  00BE  3DDE               	addwfc	(efgtoa@n+1)^(0+128),f
  9168                           
  9169                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  9170  00BF  30FF               	movlw	255
  9171  00C0  07CA               	addwf	efgtoa@w^(0+128),f
  9172  00C1  30FF               	movlw	255
  9173  00C2  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  9174  00C3                     l7228:	
  9175                           
  9176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9177  00C3  0021               	movlb	1	; select bank1
  9178  00C4  085A               	movf	(efgtoa@g+3)^(0+128),w
  9179  00C5  00F4               	movwf	___fpclassifyf@x+3
  9180  00C6  0859               	movf	(efgtoa@g+2)^(0+128),w
  9181  00C7  00F3               	movwf	___fpclassifyf@x+2
  9182  00C8  0858               	movf	(efgtoa@g+1)^(0+128),w
  9183  00C9  00F2               	movwf	___fpclassifyf@x+1
  9184  00CA  0857               	movf	efgtoa@g^(0+128),w
  9185  00CB  00F1               	movwf	___fpclassifyf@x
  9186  00CC  31A9  214F  3180   	fcall	___fpclassifyf
  9187  00CF  0371               	decf	?___fpclassifyf,w
  9188  00D0  0472               	iorwf	?___fpclassifyf+1,w
  9189  00D1  1D03               	btfss	3,2
  9190  00D2  2921               	goto	l7246
  9191  00D3  0021               	movlb	1	; select bank1
  9192  00D4  0826               	movf	efgtoa@c^(0+128),w
  9193  00D5  3EBF               	addlw	191
  9194  00D6  00A7               	movwf	??_efgtoa^(0+128)
  9195  00D7  30FF               	movlw	255
  9196  00D8  1803               	skipnc
  9197  00D9  3000               	movlw	0
  9198  00DA  00A8               	movwf	(??_efgtoa^(0+128)+1)
  9199  00DB  3000               	movlw	0
  9200  00DC  0228               	subwf	(??_efgtoa+1)^(0+128),w
  9201  00DD  301A               	movlw	26
  9202  00DE  1903               	skipnz
  9203  00DF  0227               	subwf	??_efgtoa^(0+128),w
  9204  00E0  1803               	btfsc	3,0
  9205  00E1  28E4               	goto	u10230
  9206  00E2  3001               	movlw	1
  9207  00E3  28E5               	goto	u10240
  9208  00E4                     u10230:	
  9209  00E4  3000               	movlw	0
  9210  00E5                     u10240:	
  9211  00E5  00A9               	movwf	(??_efgtoa+2)^(0+128)
  9212  00E6  01AA               	clrf	((??_efgtoa+2)^(0+128)+1)
  9213  00E7  0829               	movf	(??_efgtoa+2)^(0+128),w
  9214  00E8  00B1               	movwf	_efgtoa$1042^(0+128)
  9215  00E9  082A               	movf	(??_efgtoa+3)^(0+128),w
  9216  00EA  00B2               	movwf	(_efgtoa$1042+1)^(0+128)
  9217  00EB  0831               	movf	_efgtoa$1042^(0+128),w
  9218  00EC  0432               	iorwf	(_efgtoa$1042+1)^(0+128),w
  9219  00ED  1903               	btfsc	3,2
  9220  00EE  28F3               	goto	l7238
  9221                           
  9222                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  9223  00EF  3014               	movlw	low (STR_26| (0+32768))
  9224  00F0  00F1               	movwf	strcpy@src
  9225  00F1  30BB               	movlw	high (STR_26| (0+32768))
  9226  00F2  28F6               	goto	L4
  9227  00F3                     l7238:	
  9228                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  9229                           
  9230                           
  9231                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  9232  00F3  3024               	movlw	low (STR_27| (0+32768))
  9233  00F4  00F1               	movwf	strcpy@src
  9234  00F5  30BB               	movlw	high (STR_27| (0+32768))
  9235  00F6                     L4:	
  9236  00F6  00F2               	movwf	strcpy@src+1
  9237  00F7  085D               	movf	efgtoa@n^(0+128),w
  9238  00F8  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9239  00F9  31B4  24B9  3180   	fcall	_strcpy
  9240                           
  9241                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  9242  00FC  30FD               	movlw	253
  9243  00FD  0021               	movlb	1	; select bank1
  9244  00FE  07CA               	addwf	efgtoa@w^(0+128),f
  9245  00FF  30FF               	movlw	255
  9246  0100  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  9247                           
  9248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  9249  0101  0821               	movf	(efgtoa@fp+1)^(0+128),w
  9250  0102  0020               	movlb	0	; select bank0
  9251  0103  00A7               	movwf	pad@fp+1
  9252  0104  0021               	movlb	1	; select bank1
  9253  0105  0820               	movf	efgtoa@fp^(0+128),w
  9254  0106  0020               	movlb	0	; select bank0
  9255  0107  00A6               	movwf	pad@fp
  9256  0108  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  9257  0109  0021               	movlb	1	; select bank1
  9258  010A  00A7               	movwf	??_efgtoa^(0+128)
  9259  010B  0827               	movf	??_efgtoa^(0+128),w
  9260  010C  0020               	movlb	0	; select bank0
  9261  010D  00A8               	movwf	pad@buf
  9262  010E  0021               	movlb	1	; select bank1
  9263  010F  084B               	movf	(efgtoa@w+1)^(0+128),w
  9264  0110  0020               	movlb	0	; select bank0
  9265  0111  00AA               	movwf	pad@p+1
  9266  0112  0021               	movlb	1	; select bank1
  9267  0113  084A               	movf	efgtoa@w^(0+128),w
  9268  0114  0020               	movlb	0	; select bank0
  9269  0115  00A9               	movwf	pad@p
  9270  0116  31B7  275E         	fcall	_pad
  9271  0118  0020               	movlb	0	; select bank0
  9272  0119  0827               	movf	?_pad+1,w
  9273  011A  0021               	movlb	1	; select bank1
  9274  011B  00A1               	movwf	(?_efgtoa+1)^(0+128)
  9275  011C  0020               	movlb	0	; select bank0
  9276  011D  0826               	movf	?_pad,w
  9277  011E  0021               	movlb	1	; select bank1
  9278  011F  00A0               	movwf	?_efgtoa^(0+128)
  9279  0120  0008               	return
  9280  0121                     l7246:	
  9281                           
  9282                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9283  0121  0021               	movlb	1	; select bank1
  9284  0122  085A               	movf	(efgtoa@g+3)^(0+128),w
  9285  0123  00F4               	movwf	___fpclassifyf@x+3
  9286  0124  0859               	movf	(efgtoa@g+2)^(0+128),w
  9287  0125  00F3               	movwf	___fpclassifyf@x+2
  9288  0126  0858               	movf	(efgtoa@g+1)^(0+128),w
  9289  0127  00F2               	movwf	___fpclassifyf@x+1
  9290  0128  0857               	movf	efgtoa@g^(0+128),w
  9291  0129  00F1               	movwf	___fpclassifyf@x
  9292  012A  31A9  214F  3180   	fcall	___fpclassifyf
  9293  012D  0871               	movf	?___fpclassifyf,w
  9294  012E  0472               	iorwf	?___fpclassifyf+1,w
  9295  012F  1D03               	btfss	3,2
  9296  0130  297F               	goto	l7264
  9297  0131  0021               	movlb	1	; select bank1
  9298  0132  0826               	movf	efgtoa@c^(0+128),w
  9299  0133  3EBF               	addlw	191
  9300  0134  00A7               	movwf	??_efgtoa^(0+128)
  9301  0135  30FF               	movlw	255
  9302  0136  1803               	skipnc
  9303  0137  3000               	movlw	0
  9304  0138  00A8               	movwf	(??_efgtoa^(0+128)+1)
  9305  0139  3000               	movlw	0
  9306  013A  0228               	subwf	(??_efgtoa+1)^(0+128),w
  9307  013B  301A               	movlw	26
  9308  013C  1903               	skipnz
  9309  013D  0227               	subwf	??_efgtoa^(0+128),w
  9310  013E  1803               	btfsc	3,0
  9311  013F  2942               	goto	u10270
  9312  0140  3001               	movlw	1
  9313  0141  2943               	goto	u10280
  9314  0142                     u10270:	
  9315  0142  3000               	movlw	0
  9316  0143                     u10280:	
  9317  0143  00A9               	movwf	(??_efgtoa+2)^(0+128)
  9318  0144  01AA               	clrf	((??_efgtoa+2)^(0+128)+1)
  9319  0145  0829               	movf	(??_efgtoa+2)^(0+128),w
  9320  0146  00B3               	movwf	_efgtoa$1046^(0+128)
  9321  0147  082A               	movf	(??_efgtoa+3)^(0+128),w
  9322  0148  00B4               	movwf	(_efgtoa$1046+1)^(0+128)
  9323  0149  0833               	movf	_efgtoa$1046^(0+128),w
  9324  014A  0434               	iorwf	(_efgtoa$1046+1)^(0+128),w
  9325  014B  1903               	btfsc	3,2
  9326  014C  2951               	goto	l7256
  9327                           
  9328                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  9329  014D  3018               	movlw	low (STR_30| (0+32768))
  9330  014E  00F1               	movwf	strcpy@src
  9331  014F  30BB               	movlw	high (STR_30| (0+32768))
  9332  0150  2954               	goto	L5
  9333  0151                     l7256:	
  9334                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  9335                           
  9336                           
  9337                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  9338  0151  302C               	movlw	low (STR_31| (0+32768))
  9339  0152  00F1               	movwf	strcpy@src
  9340  0153  30BB               	movlw	high (STR_31| (0+32768))
  9341  0154                     L5:	
  9342  0154  00F2               	movwf	strcpy@src+1
  9343  0155  085D               	movf	efgtoa@n^(0+128),w
  9344  0156  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9345  0157  31B4  24B9  3180   	fcall	_strcpy
  9346                           
  9347                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 358:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  9348  015A  30FD               	movlw	253
  9349  015B  0021               	movlb	1	; select bank1
  9350  015C  07CA               	addwf	efgtoa@w^(0+128),f
  9351  015D  30FF               	movlw	255
  9352  015E  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  9353                           
  9354                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 359:       
      +                            return pad(fp, &dbuf[0], w);
  9355  015F  0821               	movf	(efgtoa@fp+1)^(0+128),w
  9356  0160  0020               	movlb	0	; select bank0
  9357  0161  00A7               	movwf	pad@fp+1
  9358  0162  0021               	movlb	1	; select bank1
  9359  0163  0820               	movf	efgtoa@fp^(0+128),w
  9360  0164  0020               	movlb	0	; select bank0
  9361  0165  00A6               	movwf	pad@fp
  9362  0166  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  9363  0167  0021               	movlb	1	; select bank1
  9364  0168  00A7               	movwf	??_efgtoa^(0+128)
  9365  0169  0827               	movf	??_efgtoa^(0+128),w
  9366  016A  0020               	movlb	0	; select bank0
  9367  016B  00A8               	movwf	pad@buf
  9368  016C  0021               	movlb	1	; select bank1
  9369  016D  084B               	movf	(efgtoa@w+1)^(0+128),w
  9370  016E  0020               	movlb	0	; select bank0
  9371  016F  00AA               	movwf	pad@p+1
  9372  0170  0021               	movlb	1	; select bank1
  9373  0171  084A               	movf	efgtoa@w^(0+128),w
  9374  0172  0020               	movlb	0	; select bank0
  9375  0173  00A9               	movwf	pad@p
  9376  0174  31B7  275E         	fcall	_pad
  9377  0176  0020               	movlb	0	; select bank0
  9378  0177  0827               	movf	?_pad+1,w
  9379  0178  0021               	movlb	1	; select bank1
  9380  0179  00A1               	movwf	(?_efgtoa+1)^(0+128)
  9381  017A  0020               	movlb	0	; select bank0
  9382  017B  0826               	movf	?_pad,w
  9383  017C  0021               	movlb	1	; select bank1
  9384  017D  00A0               	movwf	?_efgtoa^(0+128)
  9385  017E  0008               	return
  9386  017F                     l7264:	
  9387                           
  9388                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  9389  017F  303F               	movlw	63
  9390  0180  0021               	movlb	1	; select bank1
  9391  0181  00E2               	movwf	(efgtoa@u+3)^(0+128)
  9392  0182  3080               	movlw	128
  9393  0183  00E1               	movwf	(efgtoa@u+2)^(0+128)
  9394  0184  3000               	movlw	0
  9395  0185  00E0               	movwf	(efgtoa@u+1)^(0+128)
  9396  0186  3000               	movlw	0
  9397  0187  00DF               	movwf	efgtoa@u^(0+128)
  9398                           
  9399                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  9400  0188  01DB               	clrf	efgtoa@e^(0+128)
  9401  0189  01DC               	clrf	(efgtoa@e+1)^(0+128)
  9402                           
  9403                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  9404  018A  085A               	movf	(efgtoa@g+3)^(0+128),w
  9405  018B  00F4               	movwf	___fleq@ff1+3
  9406  018C  0859               	movf	(efgtoa@g+2)^(0+128),w
  9407  018D  00F3               	movwf	___fleq@ff1+2
  9408  018E  0858               	movf	(efgtoa@g+1)^(0+128),w
  9409  018F  00F2               	movwf	___fleq@ff1+1
  9410  0190  0857               	movf	efgtoa@g^(0+128),w
  9411  0191  00F1               	movwf	___fleq@ff1
  9412  0192  3000               	movlw	0
  9413  0193  00F8               	movwf	___fleq@ff2+3
  9414  0194  3000               	movlw	0
  9415  0195  00F7               	movwf	___fleq@ff2+2
  9416  0196  3000               	movlw	0
  9417  0197  00F6               	movwf	___fleq@ff2+1
  9418  0198  3000               	movlw	0
  9419  0199  00F5               	movwf	___fleq@ff2
  9420  019A  31B6  2675  3180   	fcall	___fleq
  9421  019D  1C03               	btfss	3,0
  9422  019E  29D0               	goto	l7276
  9423  019F  2A5F               	goto	l7284
  9424  01A0                     l7272:	
  9425                           
  9426                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  9427  01A0  3041               	movlw	65
  9428  01A1  0020               	movlb	0	; select bank0
  9429  01A2  00A9               	movwf	___flmul@b+3
  9430  01A3  3020               	movlw	32
  9431  01A4  00A8               	movwf	___flmul@b+2
  9432  01A5  3000               	movlw	0
  9433  01A6  00A7               	movwf	___flmul@b+1
  9434  01A7  3000               	movlw	0
  9435  01A8  00A6               	movwf	___flmul@b
  9436  01A9  0021               	movlb	1	; select bank1
  9437  01AA  0862               	movf	(efgtoa@u+3)^(0+128),w
  9438  01AB  0020               	movlb	0	; select bank0
  9439  01AC  00AD               	movwf	___flmul@a+3
  9440  01AD  0021               	movlb	1	; select bank1
  9441  01AE  0861               	movf	(efgtoa@u+2)^(0+128),w
  9442  01AF  0020               	movlb	0	; select bank0
  9443  01B0  00AC               	movwf	___flmul@a+2
  9444  01B1  0021               	movlb	1	; select bank1
  9445  01B2  0860               	movf	(efgtoa@u+1)^(0+128),w
  9446  01B3  0020               	movlb	0	; select bank0
  9447  01B4  00AB               	movwf	___flmul@a+1
  9448  01B5  0021               	movlb	1	; select bank1
  9449  01B6  085F               	movf	efgtoa@u^(0+128),w
  9450  01B7  0020               	movlb	0	; select bank0
  9451  01B8  00AA               	movwf	___flmul@a
  9452  01B9  3195  25D4  3180   	fcall	___flmul
  9453  01BC  0020               	movlb	0	; select bank0
  9454  01BD  0829               	movf	?___flmul+3,w
  9455  01BE  0021               	movlb	1	; select bank1
  9456  01BF  00E2               	movwf	(efgtoa@u+3)^(0+128)
  9457  01C0  0020               	movlb	0	; select bank0
  9458  01C1  0828               	movf	?___flmul+2,w
  9459  01C2  0021               	movlb	1	; select bank1
  9460  01C3  00E1               	movwf	(efgtoa@u+2)^(0+128)
  9461  01C4  0020               	movlb	0	; select bank0
  9462  01C5  0827               	movf	?___flmul+1,w
  9463  01C6  0021               	movlb	1	; select bank1
  9464  01C7  00E0               	movwf	(efgtoa@u+1)^(0+128)
  9465  01C8  0020               	movlb	0	; select bank0
  9466  01C9  0826               	movf	?___flmul,w
  9467  01CA  0021               	movlb	1	; select bank1
  9468  01CB  00DF               	movwf	efgtoa@u^(0+128)
  9469                           
  9470                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  9471  01CC  3001               	movlw	1
  9472  01CD  07DB               	addwf	efgtoa@e^(0+128),f
  9473  01CE  3000               	movlw	0
  9474  01CF  3DDC               	addwfc	(efgtoa@e+1)^(0+128),f
  9475  01D0                     l7276:	
  9476                           
  9477                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  9478  01D0  0021               	movlb	1	; select bank1
  9479  01D1  085A               	movf	(efgtoa@g+3)^(0+128),w
  9480  01D2  0020               	movlb	0	; select bank0
  9481  01D3  00DD               	movwf	___flge@ff1+3
  9482  01D4  0021               	movlb	1	; select bank1
  9483  01D5  0859               	movf	(efgtoa@g+2)^(0+128),w
  9484  01D6  0020               	movlb	0	; select bank0
  9485  01D7  00DC               	movwf	___flge@ff1+2
  9486  01D8  0021               	movlb	1	; select bank1
  9487  01D9  0858               	movf	(efgtoa@g+1)^(0+128),w
  9488  01DA  0020               	movlb	0	; select bank0
  9489  01DB  00DB               	movwf	___flge@ff1+1
  9490  01DC  0021               	movlb	1	; select bank1
  9491  01DD  0857               	movf	efgtoa@g^(0+128),w
  9492  01DE  0020               	movlb	0	; select bank0
  9493  01DF  00DA               	movwf	___flge@ff1
  9494  01E0  3041               	movlw	65
  9495  01E1  00A9               	movwf	___flmul@b+3
  9496  01E2  3020               	movlw	32
  9497  01E3  00A8               	movwf	___flmul@b+2
  9498  01E4  3000               	movlw	0
  9499  01E5  00A7               	movwf	___flmul@b+1
  9500  01E6  3000               	movlw	0
  9501  01E7  00A6               	movwf	___flmul@b
  9502  01E8  0021               	movlb	1	; select bank1
  9503  01E9  0862               	movf	(efgtoa@u+3)^(0+128),w
  9504  01EA  0020               	movlb	0	; select bank0
  9505  01EB  00AD               	movwf	___flmul@a+3
  9506  01EC  0021               	movlb	1	; select bank1
  9507  01ED  0861               	movf	(efgtoa@u+2)^(0+128),w
  9508  01EE  0020               	movlb	0	; select bank0
  9509  01EF  00AC               	movwf	___flmul@a+2
  9510  01F0  0021               	movlb	1	; select bank1
  9511  01F1  0860               	movf	(efgtoa@u+1)^(0+128),w
  9512  01F2  0020               	movlb	0	; select bank0
  9513  01F3  00AB               	movwf	___flmul@a+1
  9514  01F4  0021               	movlb	1	; select bank1
  9515  01F5  085F               	movf	efgtoa@u^(0+128),w
  9516  01F6  0020               	movlb	0	; select bank0
  9517  01F7  00AA               	movwf	___flmul@a
  9518  01F8  3195  25D4  3180   	fcall	___flmul
  9519  01FB  0020               	movlb	0	; select bank0
  9520  01FC  0829               	movf	?___flmul+3,w
  9521  01FD  00E1               	movwf	___flge@ff2+3
  9522  01FE  0828               	movf	?___flmul+2,w
  9523  01FF  00E0               	movwf	___flge@ff2+2
  9524  0200  0827               	movf	?___flmul+1,w
  9525  0201  00DF               	movwf	___flge@ff2+1
  9526  0202  0826               	movf	?___flmul,w
  9527  0203  00DE               	movwf	___flge@ff2
  9528  0204  31A9  21C7  3180   	fcall	___flge
  9529  0207  1C03               	btfss	3,0
  9530  0208  2A3A               	goto	l7282
  9531  0209  29A0               	goto	l7272
  9532  020A                     l7278:	
  9533                           
  9534                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  9535  020A  3041               	movlw	65
  9536  020B  0020               	movlb	0	; select bank0
  9537  020C  00C3               	movwf	___fldiv@a+3
  9538  020D  3020               	movlw	32
  9539  020E  00C2               	movwf	___fldiv@a+2
  9540  020F  3000               	movlw	0
  9541  0210  00C1               	movwf	___fldiv@a+1
  9542  0211  3000               	movlw	0
  9543  0212  00C0               	movwf	___fldiv@a
  9544  0213  0021               	movlb	1	; select bank1
  9545  0214  0862               	movf	(efgtoa@u+3)^(0+128),w
  9546  0215  0020               	movlb	0	; select bank0
  9547  0216  00C7               	movwf	___fldiv@b+3
  9548  0217  0021               	movlb	1	; select bank1
  9549  0218  0861               	movf	(efgtoa@u+2)^(0+128),w
  9550  0219  0020               	movlb	0	; select bank0
  9551  021A  00C6               	movwf	___fldiv@b+2
  9552  021B  0021               	movlb	1	; select bank1
  9553  021C  0860               	movf	(efgtoa@u+1)^(0+128),w
  9554  021D  0020               	movlb	0	; select bank0
  9555  021E  00C5               	movwf	___fldiv@b+1
  9556  021F  0021               	movlb	1	; select bank1
  9557  0220  085F               	movf	efgtoa@u^(0+128),w
  9558  0221  0020               	movlb	0	; select bank0
  9559  0222  00C4               	movwf	___fldiv@b
  9560  0223  3190  2052  3180   	fcall	___fldiv
  9561  0226  0020               	movlb	0	; select bank0
  9562  0227  0843               	movf	?___fldiv+3,w
  9563  0228  0021               	movlb	1	; select bank1
  9564  0229  00E2               	movwf	(efgtoa@u+3)^(0+128)
  9565  022A  0020               	movlb	0	; select bank0
  9566  022B  0842               	movf	?___fldiv+2,w
  9567  022C  0021               	movlb	1	; select bank1
  9568  022D  00E1               	movwf	(efgtoa@u+2)^(0+128)
  9569  022E  0020               	movlb	0	; select bank0
  9570  022F  0841               	movf	?___fldiv+1,w
  9571  0230  0021               	movlb	1	; select bank1
  9572  0231  00E0               	movwf	(efgtoa@u+1)^(0+128)
  9573  0232  0020               	movlb	0	; select bank0
  9574  0233  0840               	movf	?___fldiv,w
  9575  0234  0021               	movlb	1	; select bank1
  9576  0235  00DF               	movwf	efgtoa@u^(0+128)
  9577                           
  9578                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  9579  0236  30FF               	movlw	255
  9580  0237  07DB               	addwf	efgtoa@e^(0+128),f
  9581  0238  30FF               	movlw	255
  9582  0239  3DDC               	addwfc	(efgtoa@e+1)^(0+128),f
  9583  023A                     l7282:	
  9584                           
  9585                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  9586  023A  0021               	movlb	1	; select bank1
  9587  023B  085A               	movf	(efgtoa@g+3)^(0+128),w
  9588  023C  0020               	movlb	0	; select bank0
  9589  023D  00DD               	movwf	___flge@ff1+3
  9590  023E  0021               	movlb	1	; select bank1
  9591  023F  0859               	movf	(efgtoa@g+2)^(0+128),w
  9592  0240  0020               	movlb	0	; select bank0
  9593  0241  00DC               	movwf	___flge@ff1+2
  9594  0242  0021               	movlb	1	; select bank1
  9595  0243  0858               	movf	(efgtoa@g+1)^(0+128),w
  9596  0244  0020               	movlb	0	; select bank0
  9597  0245  00DB               	movwf	___flge@ff1+1
  9598  0246  0021               	movlb	1	; select bank1
  9599  0247  0857               	movf	efgtoa@g^(0+128),w
  9600  0248  0020               	movlb	0	; select bank0
  9601  0249  00DA               	movwf	___flge@ff1
  9602  024A  0021               	movlb	1	; select bank1
  9603  024B  0862               	movf	(efgtoa@u+3)^(0+128),w
  9604  024C  0020               	movlb	0	; select bank0
  9605  024D  00E1               	movwf	___flge@ff2+3
  9606  024E  0021               	movlb	1	; select bank1
  9607  024F  0861               	movf	(efgtoa@u+2)^(0+128),w
  9608  0250  0020               	movlb	0	; select bank0
  9609  0251  00E0               	movwf	___flge@ff2+2
  9610  0252  0021               	movlb	1	; select bank1
  9611  0253  0860               	movf	(efgtoa@u+1)^(0+128),w
  9612  0254  0020               	movlb	0	; select bank0
  9613  0255  00DF               	movwf	___flge@ff2+1
  9614  0256  0021               	movlb	1	; select bank1
  9615  0257  085F               	movf	efgtoa@u^(0+128),w
  9616  0258  0020               	movlb	0	; select bank0
  9617  0259  00DE               	movwf	___flge@ff2
  9618  025A  31A9  21C7  3180   	fcall	___flge
  9619  025D  1C03               	btfss	3,0
  9620  025E  2A0A               	goto	l7278
  9621  025F                     l7284:	
  9622                           
  9623                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  9624  025F  0021               	movlb	1	; select bank1
  9625  0260  0826               	movf	efgtoa@c^(0+128),w
  9626  0261  00A7               	movwf	??_efgtoa^(0+128)
  9627  0262  01A8               	clrf	(??_efgtoa^(0+128)+1)
  9628  0263  0827               	movf	??_efgtoa^(0+128),w
  9629  0264  00F7               	movwf	tolower@c
  9630  0265  0828               	movf	(??_efgtoa+1)^(0+128),w
  9631  0266  00F8               	movwf	tolower@c+1
  9632  0267  31B5  251B  3180   	fcall	_tolower
  9633  026A  0877               	movf	?_tolower,w
  9634  026B  0021               	movlb	1	; select bank1
  9635  026C  00A9               	movwf	(??_efgtoa+2)^(0+128)
  9636  026D  0829               	movf	(??_efgtoa+2)^(0+128),w
  9637  026E  00CC               	movwf	efgtoa@mode^(0+128)
  9638                           
  9639                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  9640  026F  084C               	movf	efgtoa@mode^(0+128),w
  9641  0270  00A7               	movwf	??_efgtoa^(0+128)
  9642  0271  0827               	movf	??_efgtoa^(0+128),w
  9643  0272  00C9               	movwf	efgtoa@nmode^(0+128)
  9644                           
  9645                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  9646  0273  3067               	movlw	103
  9647  0274  064C               	xorwf	efgtoa@mode^(0+128),w
  9648  0275  1D03               	btfss	3,2
  9649  0276  2A93               	goto	l607
  9650                           
  9651                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  9652  0277  0023               	movlb	3	; select bank3
  9653  0278  0840               	movf	_prec^(0+384),w
  9654  0279  0441               	iorwf	(_prec+1)^(0+384),w
  9655  027A  1D03               	btfss	3,2
  9656  027B  2A80               	goto	l608
  9657                           
  9658                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  9659  027C  3001               	movlw	1
  9660  027D  00C0               	movwf	_prec^(0+384)
  9661  027E  3000               	movlw	0
  9662  027F  00C1               	movwf	(_prec^(0+384)+1)
  9663  0280                     l608:	
  9664                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 382:   }
  9665                           
  9666                           
  9667                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  9668  0280  0841               	movf	(_prec+1)^(0+384),w
  9669  0281  3A80               	xorlw	128
  9670  0282  0021               	movlb	1	; select bank1
  9671  0283  00A7               	movwf	??_efgtoa^(0+128)
  9672  0284  3080               	movlw	128
  9673  0285  0227               	subwf	??_efgtoa^(0+128),w
  9674  0286  1D03               	skipz
  9675  0287  2A8B               	goto	u10355
  9676  0288  3001               	movlw	1
  9677  0289  0023               	movlb	3	; select bank3
  9678  028A  0240               	subwf	_prec^(0+384),w
  9679  028B                     u10355:	
  9680  028B  1803               	skipnc
  9681  028C  2A96               	goto	l7296
  9682  028D                     l7294:	
  9683  028D  3006               	movlw	6
  9684  028E  0021               	movlb	1	; select bank1
  9685  028F  00C7               	movwf	efgtoa@p^(0+128)
  9686  0290  3000               	movlw	0
  9687  0291  00C8               	movwf	(efgtoa@p^(0+128)+1)
  9688  0292  2A9E               	goto	l7302
  9689  0293                     l607:	
  9690                           
  9691                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  9692  0293  0023               	movlb	3	; select bank3
  9693  0294  1BC1               	btfsc	(_prec+1)^(0+384),7
  9694  0295  2A8D               	goto	l7294
  9695  0296                     l7296:	
  9696  0296  0023               	movlb	3	; select bank3
  9697  0297  0841               	movf	(_prec+1)^(0+384),w
  9698  0298  0021               	movlb	1	; select bank1
  9699  0299  00C8               	movwf	(efgtoa@p+1)^(0+128)
  9700  029A  0023               	movlb	3	; select bank3
  9701  029B  0840               	movf	_prec^(0+384),w
  9702  029C  0021               	movlb	1	; select bank1
  9703  029D  00C7               	movwf	efgtoa@p^(0+128)
  9704  029E                     l7302:	
  9705                           
  9706                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  9707  029E  3067               	movlw	103
  9708  029F  064C               	xorwf	efgtoa@mode^(0+128),w
  9709  02A0  1D03               	btfss	3,2
  9710  02A1  2AC7               	goto	l618
  9711                           
  9712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  9713  02A2  085C               	movf	(efgtoa@e+1)^(0+128),w
  9714  02A3  3A80               	xorlw	128
  9715  02A4  00A7               	movwf	??_efgtoa^(0+128)
  9716  02A5  307F               	movlw	127
  9717  02A6  0227               	subwf	??_efgtoa^(0+128),w
  9718  02A7  1D03               	skipz
  9719  02A8  2AAB               	goto	u10385
  9720  02A9  30FC               	movlw	252
  9721  02AA  025B               	subwf	efgtoa@e^(0+128),w
  9722  02AB                     u10385:	
  9723  02AB  1C03               	skipc
  9724  02AC  2AC2               	goto	l7310
  9725  02AD  0021               	movlb	1	; select bank1
  9726  02AE  0847               	movf	efgtoa@p^(0+128),w
  9727  02AF  3EFF               	addlw	255
  9728  02B0  00A7               	movwf	??_efgtoa^(0+128)
  9729  02B1  30FF               	movlw	255
  9730  02B2  3D48               	addwfc	(efgtoa@p+1)^(0+128),w
  9731  02B3  00A8               	movwf	(??_efgtoa+1)^(0+128)
  9732  02B4  0828               	movf	(??_efgtoa+1)^(0+128),w
  9733  02B5  3A80               	xorlw	128
  9734  02B6  00A9               	movwf	(??_efgtoa+2)^(0+128)
  9735  02B7  085C               	movf	(efgtoa@e+1)^(0+128),w
  9736  02B8  3A80               	xorlw	128
  9737  02B9  0229               	subwf	(??_efgtoa+2)^(0+128),w
  9738  02BA  1D03               	skipz
  9739  02BB  2ABE               	goto	u10395
  9740  02BC  085B               	movf	efgtoa@e^(0+128),w
  9741  02BD  0227               	subwf	??_efgtoa^(0+128),w
  9742  02BE                     u10395:	
  9743  02BE  1C03               	skipc
  9744  02BF  2AC2               	goto	l7310
  9745                           
  9746                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  9747  02C0  3066               	movlw	102
  9748  02C1  2AC3               	goto	L6
  9749  02C2                     l7310:	
  9750                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  9751                           
  9752                           
  9753                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  9754  02C2  3065               	movlw	101
  9755  02C3                     L6:	
  9756  02C3  0021               	movlb	1	; select bank1
  9757  02C4  00A7               	movwf	??_efgtoa^(0+128)
  9758  02C5  0827               	movf	??_efgtoa^(0+128),w
  9759  02C6  00C9               	movwf	efgtoa@nmode^(0+128)
  9760  02C7                     l618:	
  9761                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 395:     }
  9762                           
  9763                           
  9764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  9765  02C7  0848               	movf	(efgtoa@p+1)^(0+128),w
  9766  02C8  00C0               	movwf	(efgtoa@m+1)^(0+128)
  9767  02C9  0847               	movf	efgtoa@p^(0+128),w
  9768  02CA  00BF               	movwf	efgtoa@m^(0+128)
  9769                           
  9770                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  9771  02CB  3067               	movlw	103
  9772  02CC  064C               	xorwf	efgtoa@mode^(0+128),w
  9773  02CD  1D03               	btfss	3,2
  9774  02CE  2AD4               	goto	l7318
  9775  02CF  3066               	movlw	102
  9776  02D0  0649               	xorwf	efgtoa@nmode^(0+128),w
  9777  02D1  1903               	btfsc	3,2
  9778  02D2  1FDC               	btfss	(efgtoa@e+1)^(0+128),7
  9779  02D3  2AD8               	goto	l7320
  9780  02D4                     l7318:	
  9781                           
  9782                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  9783  02D4  3001               	movlw	1
  9784  02D5  07BF               	addwf	efgtoa@m^(0+128),f
  9785  02D6  3000               	movlw	0
  9786  02D7  3DC0               	addwfc	(efgtoa@m+1)^(0+128),f
  9787  02D8                     l7320:	
  9788                           
  9789                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  9790  02D8  3066               	movlw	102
  9791  02D9  0649               	xorwf	efgtoa@nmode^(0+128),w
  9792  02DA  1D03               	btfss	3,2
  9793  02DB  2AF0               	goto	l7332
  9794                           
  9795                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  9796  02DC  1FDC               	btfss	(efgtoa@e+1)^(0+128),7
  9797  02DD  2AE8               	goto	l7328
  9798                           
  9799                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  9800  02DE  303F               	movlw	63
  9801  02DF  00E2               	movwf	(efgtoa@u+3)^(0+128)
  9802  02E0  3080               	movlw	128
  9803  02E1  00E1               	movwf	(efgtoa@u+2)^(0+128)
  9804  02E2  3000               	movlw	0
  9805  02E3  00E0               	movwf	(efgtoa@u+1)^(0+128)
  9806  02E4  3000               	movlw	0
  9807  02E5  00DF               	movwf	efgtoa@u^(0+128)
  9808                           
  9809                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  9810  02E6  01DB               	clrf	efgtoa@e^(0+128)
  9811  02E7  01DC               	clrf	(efgtoa@e+1)^(0+128)
  9812  02E8                     l7328:	
  9813                           
  9814                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  9815  02E8  3067               	movlw	103
  9816  02E9  064C               	xorwf	efgtoa@mode^(0+128),w
  9817  02EA  1903               	btfsc	3,2
  9818  02EB  2AF0               	goto	l7332
  9819                           
  9820                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  9821  02EC  085B               	movf	efgtoa@e^(0+128),w
  9822  02ED  07BF               	addwf	efgtoa@m^(0+128),f
  9823  02EE  085C               	movf	(efgtoa@e+1)^(0+128),w
  9824  02EF  3DC0               	addwfc	(efgtoa@m+1)^(0+128),f
  9825  02F0                     l7332:	
  9826                           
  9827                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  9828  02F0  01D5               	clrf	efgtoa@i^(0+128)
  9829  02F1  01D6               	clrf	(efgtoa@i+1)^(0+128)
  9830                           
  9831                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  9832  02F2  085A               	movf	(efgtoa@g+3)^(0+128),w
  9833  02F3  00D0               	movwf	(efgtoa@h+3)^(0+128)
  9834  02F4  0859               	movf	(efgtoa@g+2)^(0+128),w
  9835  02F5  00CF               	movwf	(efgtoa@h+2)^(0+128)
  9836  02F6  0858               	movf	(efgtoa@g+1)^(0+128),w
  9837  02F7  00CE               	movwf	(efgtoa@h+1)^(0+128)
  9838  02F8  0857               	movf	efgtoa@g^(0+128),w
  9839  02F9  00CD               	movwf	efgtoa@h^(0+128)
  9840                           
  9841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  9842  02FA  0862               	movf	(efgtoa@u+3)^(0+128),w
  9843  02FB  00AE               	movwf	(efgtoa@ou+3)^(0+128)
  9844  02FC  0861               	movf	(efgtoa@u+2)^(0+128),w
  9845  02FD  00AD               	movwf	(efgtoa@ou+2)^(0+128)
  9846  02FE  0860               	movf	(efgtoa@u+1)^(0+128),w
  9847  02FF  00AC               	movwf	(efgtoa@ou+1)^(0+128)
  9848  0300  085F               	movf	efgtoa@u^(0+128),w
  9849  0301  00AB               	movwf	efgtoa@ou^(0+128)
  9850  0302                     l7342:	
  9851                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  9852                           
  9853                           
  9854                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  9855  0302  0856               	movf	(efgtoa@i+1)^(0+128),w
  9856  0303  3A80               	xorlw	128
  9857  0304  00A7               	movwf	??_efgtoa^(0+128)
  9858  0305  0840               	movf	(efgtoa@m+1)^(0+128),w
  9859  0306  3A80               	xorlw	128
  9860  0307  0227               	subwf	??_efgtoa^(0+128),w
  9861  0308  1D03               	skipz
  9862  0309  2B0C               	goto	u10465
  9863  030A  083F               	movf	efgtoa@m^(0+128),w
  9864  030B  0255               	subwf	efgtoa@i^(0+128),w
  9865  030C                     u10465:	
  9866  030C  1803               	btfsc	3,0
  9867  030D  2BE6               	goto	l7344
  9868                           
  9869                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  9870  030E  0021               	movlb	1	; select bank1
  9871  030F  0862               	movf	(efgtoa@u+3)^(0+128),w
  9872  0310  0020               	movlb	0	; select bank0
  9873  0311  00C3               	movwf	___fldiv@a+3
  9874  0312  0021               	movlb	1	; select bank1
  9875  0313  0861               	movf	(efgtoa@u+2)^(0+128),w
  9876  0314  0020               	movlb	0	; select bank0
  9877  0315  00C2               	movwf	___fldiv@a+2
  9878  0316  0021               	movlb	1	; select bank1
  9879  0317  0860               	movf	(efgtoa@u+1)^(0+128),w
  9880  0318  0020               	movlb	0	; select bank0
  9881  0319  00C1               	movwf	___fldiv@a+1
  9882  031A  0021               	movlb	1	; select bank1
  9883  031B  085F               	movf	efgtoa@u^(0+128),w
  9884  031C  0020               	movlb	0	; select bank0
  9885  031D  00C0               	movwf	___fldiv@a
  9886  031E  0021               	movlb	1	; select bank1
  9887  031F  0850               	movf	(efgtoa@h+3)^(0+128),w
  9888  0320  0020               	movlb	0	; select bank0
  9889  0321  00C7               	movwf	___fldiv@b+3
  9890  0322  0021               	movlb	1	; select bank1
  9891  0323  084F               	movf	(efgtoa@h+2)^(0+128),w
  9892  0324  0020               	movlb	0	; select bank0
  9893  0325  00C6               	movwf	___fldiv@b+2
  9894  0326  0021               	movlb	1	; select bank1
  9895  0327  084E               	movf	(efgtoa@h+1)^(0+128),w
  9896  0328  0020               	movlb	0	; select bank0
  9897  0329  00C5               	movwf	___fldiv@b+1
  9898  032A  0021               	movlb	1	; select bank1
  9899  032B  084D               	movf	efgtoa@h^(0+128),w
  9900  032C  0020               	movlb	0	; select bank0
  9901  032D  00C4               	movwf	___fldiv@b
  9902  032E  3190  2052  3180   	fcall	___fldiv
  9903  0331  0020               	movlb	0	; select bank0
  9904  0332  0843               	movf	?___fldiv+3,w
  9905  0333  00DD               	movwf	floorf@x+3
  9906  0334  0842               	movf	?___fldiv+2,w
  9907  0335  00DC               	movwf	floorf@x+2
  9908  0336  0841               	movf	?___fldiv+1,w
  9909  0337  00DB               	movwf	floorf@x+1
  9910  0338  0840               	movf	?___fldiv,w
  9911  0339  00DA               	movwf	floorf@x
  9912  033A  31A2  22A1  3180   	fcall	_floorf
  9913  033D  0020               	movlb	0	; select bank0
  9914  033E  085D               	movf	?_floorf+3,w
  9915  033F  0021               	movlb	1	; select bank1
  9916  0340  00D4               	movwf	(efgtoa@l+3)^(0+128)
  9917  0341  0020               	movlb	0	; select bank0
  9918  0342  085C               	movf	?_floorf+2,w
  9919  0343  0021               	movlb	1	; select bank1
  9920  0344  00D3               	movwf	(efgtoa@l+2)^(0+128)
  9921  0345  0020               	movlb	0	; select bank0
  9922  0346  085B               	movf	?_floorf+1,w
  9923  0347  0021               	movlb	1	; select bank1
  9924  0348  00D2               	movwf	(efgtoa@l+1)^(0+128)
  9925  0349  0020               	movlb	0	; select bank0
  9926  034A  085A               	movf	?_floorf,w
  9927  034B  0021               	movlb	1	; select bank1
  9928  034C  00D1               	movwf	efgtoa@l^(0+128)
  9929                           
  9930                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  9931  034D  0854               	movf	(efgtoa@l+3)^(0+128),w
  9932  034E  0020               	movlb	0	; select bank0
  9933  034F  00DD               	movwf	___fltol@f1+3
  9934  0350  0021               	movlb	1	; select bank1
  9935  0351  0853               	movf	(efgtoa@l+2)^(0+128),w
  9936  0352  0020               	movlb	0	; select bank0
  9937  0353  00DC               	movwf	___fltol@f1+2
  9938  0354  0021               	movlb	1	; select bank1
  9939  0355  0852               	movf	(efgtoa@l+1)^(0+128),w
  9940  0356  0020               	movlb	0	; select bank0
  9941  0357  00DB               	movwf	___fltol@f1+1
  9942  0358  0021               	movlb	1	; select bank1
  9943  0359  0851               	movf	efgtoa@l^(0+128),w
  9944  035A  0020               	movlb	0	; select bank0
  9945  035B  00DA               	movwf	___fltol@f1
  9946  035C  31A8  2080  3180   	fcall	___fltol
  9947  035F  0020               	movlb	0	; select bank0
  9948  0360  085B               	movf	?___fltol+1,w
  9949  0361  0021               	movlb	1	; select bank1
  9950  0362  00C4               	movwf	(efgtoa@d+1)^(0+128)
  9951  0363  0020               	movlb	0	; select bank0
  9952  0364  085A               	movf	?___fltol,w
  9953  0365  0021               	movlb	1	; select bank1
  9954  0366  00C3               	movwf	efgtoa@d^(0+128)
  9955                           
  9956                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  9957  0367  0854               	movf	(efgtoa@l+3)^(0+128),w
  9958  0368  0020               	movlb	0	; select bank0
  9959  0369  00AD               	movwf	___flmul@a+3
  9960  036A  0021               	movlb	1	; select bank1
  9961  036B  0853               	movf	(efgtoa@l+2)^(0+128),w
  9962  036C  0020               	movlb	0	; select bank0
  9963  036D  00AC               	movwf	___flmul@a+2
  9964  036E  0021               	movlb	1	; select bank1
  9965  036F  0852               	movf	(efgtoa@l+1)^(0+128),w
  9966  0370  0020               	movlb	0	; select bank0
  9967  0371  00AB               	movwf	___flmul@a+1
  9968  0372  0021               	movlb	1	; select bank1
  9969  0373  0851               	movf	efgtoa@l^(0+128),w
  9970  0374  0020               	movlb	0	; select bank0
  9971  0375  00AA               	movwf	___flmul@a
  9972  0376  0021               	movlb	1	; select bank1
  9973  0377  0862               	movf	(efgtoa@u+3)^(0+128),w
  9974  0378  0020               	movlb	0	; select bank0
  9975  0379  00A9               	movwf	___flmul@b+3
  9976  037A  0021               	movlb	1	; select bank1
  9977  037B  0861               	movf	(efgtoa@u+2)^(0+128),w
  9978  037C  0020               	movlb	0	; select bank0
  9979  037D  00A8               	movwf	___flmul@b+2
  9980  037E  0021               	movlb	1	; select bank1
  9981  037F  0860               	movf	(efgtoa@u+1)^(0+128),w
  9982  0380  0020               	movlb	0	; select bank0
  9983  0381  00A7               	movwf	___flmul@b+1
  9984  0382  0021               	movlb	1	; select bank1
  9985  0383  085F               	movf	efgtoa@u^(0+128),w
  9986  0384  0020               	movlb	0	; select bank0
  9987  0385  00A6               	movwf	___flmul@b
  9988  0386  3195  25D4  3180   	fcall	___flmul
  9989  0389  0020               	movlb	0	; select bank0
  9990  038A  0829               	movf	?___flmul+3,w
  9991  038B  00C3               	movwf	___flsub@a+3
  9992  038C  0828               	movf	?___flmul+2,w
  9993  038D  00C2               	movwf	___flsub@a+2
  9994  038E  0827               	movf	?___flmul+1,w
  9995  038F  00C1               	movwf	___flsub@a+1
  9996  0390  0826               	movf	?___flmul,w
  9997  0391  00C0               	movwf	___flsub@a
  9998  0392  0021               	movlb	1	; select bank1
  9999  0393  0850               	movf	(efgtoa@h+3)^(0+128),w
 10000  0394  0020               	movlb	0	; select bank0
 10001  0395  00C7               	movwf	___flsub@b+3
 10002  0396  0021               	movlb	1	; select bank1
 10003  0397  084F               	movf	(efgtoa@h+2)^(0+128),w
 10004  0398  0020               	movlb	0	; select bank0
 10005  0399  00C6               	movwf	___flsub@b+2
 10006  039A  0021               	movlb	1	; select bank1
 10007  039B  084E               	movf	(efgtoa@h+1)^(0+128),w
 10008  039C  0020               	movlb	0	; select bank0
 10009  039D  00C5               	movwf	___flsub@b+1
 10010  039E  0021               	movlb	1	; select bank1
 10011  039F  084D               	movf	efgtoa@h^(0+128),w
 10012  03A0  0020               	movlb	0	; select bank0
 10013  03A1  00C4               	movwf	___flsub@b
 10014  03A2  31B4  249A  3180   	fcall	___flsub
 10015  03A5  0020               	movlb	0	; select bank0
 10016  03A6  0843               	movf	?___flsub+3,w
 10017  03A7  0021               	movlb	1	; select bank1
 10018  03A8  00D0               	movwf	(efgtoa@h+3)^(0+128)
 10019  03A9  0020               	movlb	0	; select bank0
 10020  03AA  0842               	movf	?___flsub+2,w
 10021  03AB  0021               	movlb	1	; select bank1
 10022  03AC  00CF               	movwf	(efgtoa@h+2)^(0+128)
 10023  03AD  0020               	movlb	0	; select bank0
 10024  03AE  0841               	movf	?___flsub+1,w
 10025  03AF  0021               	movlb	1	; select bank1
 10026  03B0  00CE               	movwf	(efgtoa@h+1)^(0+128)
 10027  03B1  0020               	movlb	0	; select bank0
 10028  03B2  0840               	movf	?___flsub,w
 10029  03B3  0021               	movlb	1	; select bank1
 10030  03B4  00CD               	movwf	efgtoa@h^(0+128)
 10031                           
 10032                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
 10033  03B5  3041               	movlw	65
 10034  03B6  0020               	movlb	0	; select bank0
 10035  03B7  00C3               	movwf	___fldiv@a+3
 10036  03B8  3020               	movlw	32
 10037  03B9  00C2               	movwf	___fldiv@a+2
 10038  03BA  3000               	movlw	0
 10039  03BB  00C1               	movwf	___fldiv@a+1
 10040  03BC  3000               	movlw	0
 10041  03BD  00C0               	movwf	___fldiv@a
 10042  03BE  0021               	movlb	1	; select bank1
 10043  03BF  0862               	movf	(efgtoa@u+3)^(0+128),w
 10044  03C0  0020               	movlb	0	; select bank0
 10045  03C1  00C7               	movwf	___fldiv@b+3
 10046  03C2  0021               	movlb	1	; select bank1
 10047  03C3  0861               	movf	(efgtoa@u+2)^(0+128),w
 10048  03C4  0020               	movlb	0	; select bank0
 10049  03C5  00C6               	movwf	___fldiv@b+2
 10050  03C6  0021               	movlb	1	; select bank1
 10051  03C7  0860               	movf	(efgtoa@u+1)^(0+128),w
 10052  03C8  0020               	movlb	0	; select bank0
 10053  03C9  00C5               	movwf	___fldiv@b+1
 10054  03CA  0021               	movlb	1	; select bank1
 10055  03CB  085F               	movf	efgtoa@u^(0+128),w
 10056  03CC  0020               	movlb	0	; select bank0
 10057  03CD  00C4               	movwf	___fldiv@b
 10058  03CE  3190  2052  3180   	fcall	___fldiv
 10059  03D1  0020               	movlb	0	; select bank0
 10060  03D2  0843               	movf	?___fldiv+3,w
 10061  03D3  0021               	movlb	1	; select bank1
 10062  03D4  00E2               	movwf	(efgtoa@u+3)^(0+128)
 10063  03D5  0020               	movlb	0	; select bank0
 10064  03D6  0842               	movf	?___fldiv+2,w
 10065  03D7  0021               	movlb	1	; select bank1
 10066  03D8  00E1               	movwf	(efgtoa@u+2)^(0+128)
 10067  03D9  0020               	movlb	0	; select bank0
 10068  03DA  0841               	movf	?___fldiv+1,w
 10069  03DB  0021               	movlb	1	; select bank1
 10070  03DC  00E0               	movwf	(efgtoa@u+1)^(0+128)
 10071  03DD  0020               	movlb	0	; select bank0
 10072  03DE  0840               	movf	?___fldiv,w
 10073  03DF  0021               	movlb	1	; select bank1
 10074  03E0  00DF               	movwf	efgtoa@u^(0+128)
 10075                           
 10076                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
 10077  03E1  3001               	movlw	1
 10078  03E2  07D5               	addwf	efgtoa@i^(0+128),f
 10079  03E3  3000               	movlw	0
 10080  03E4  3DD6               	addwfc	(efgtoa@i+1)^(0+128),f
 10081  03E5  2B02               	goto	l7342
 10082  03E6                     l7344:	
 10083                           
 10084                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
 10085  03E6  3040               	movlw	64
 10086  03E7  0020               	movlb	0	; select bank0
 10087  03E8  00A9               	movwf	___flmul@b+3
 10088  03E9  30A0               	movlw	160
 10089  03EA  00A8               	movwf	___flmul@b+2
 10090  03EB  3000               	movlw	0
 10091  03EC  00A7               	movwf	___flmul@b+1
 10092  03ED  3000               	movlw	0
 10093  03EE  00A6               	movwf	___flmul@b
 10094  03EF  0021               	movlb	1	; select bank1
 10095  03F0  0862               	movf	(efgtoa@u+3)^(0+128),w
 10096  03F1  0020               	movlb	0	; select bank0
 10097  03F2  00AD               	movwf	___flmul@a+3
 10098  03F3  0021               	movlb	1	; select bank1
 10099  03F4  0861               	movf	(efgtoa@u+2)^(0+128),w
 10100  03F5  0020               	movlb	0	; select bank0
 10101  03F6  00AC               	movwf	___flmul@a+2
 10102  03F7  0021               	movlb	1	; select bank1
 10103  03F8  0860               	movf	(efgtoa@u+1)^(0+128),w
 10104  03F9  0020               	movlb	0	; select bank0
 10105  03FA  00AB               	movwf	___flmul@a+1
 10106  03FB  0021               	movlb	1	; select bank1
 10107  03FC  085F               	movf	efgtoa@u^(0+128),w
 10108  03FD  0020               	movlb	0	; select bank0
 10109  03FE  00AA               	movwf	___flmul@a
 10110  03FF  3195  25D4  3180   	fcall	___flmul
 10111  0402  0020               	movlb	0	; select bank0
 10112  0403  0829               	movf	?___flmul+3,w
 10113  0404  0021               	movlb	1	; select bank1
 10114  0405  00D4               	movwf	(efgtoa@l+3)^(0+128)
 10115  0406  0020               	movlb	0	; select bank0
 10116  0407  0828               	movf	?___flmul+2,w
 10117  0408  0021               	movlb	1	; select bank1
 10118  0409  00D3               	movwf	(efgtoa@l+2)^(0+128)
 10119  040A  0020               	movlb	0	; select bank0
 10120  040B  0827               	movf	?___flmul+1,w
 10121  040C  0021               	movlb	1	; select bank1
 10122  040D  00D2               	movwf	(efgtoa@l+1)^(0+128)
 10123  040E  0020               	movlb	0	; select bank0
 10124  040F  0826               	movf	?___flmul,w
 10125  0410  0021               	movlb	1	; select bank1
 10126  0411  00D1               	movwf	efgtoa@l^(0+128)
 10127                           
 10128                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
 10129  0412  0850               	movf	(efgtoa@h+3)^(0+128),w
 10130  0413  0020               	movlb	0	; select bank0
 10131  0414  00DD               	movwf	___flge@ff1+3
 10132  0415  0021               	movlb	1	; select bank1
 10133  0416  084F               	movf	(efgtoa@h+2)^(0+128),w
 10134  0417  0020               	movlb	0	; select bank0
 10135  0418  00DC               	movwf	___flge@ff1+2
 10136  0419  0021               	movlb	1	; select bank1
 10137  041A  084E               	movf	(efgtoa@h+1)^(0+128),w
 10138  041B  0020               	movlb	0	; select bank0
 10139  041C  00DB               	movwf	___flge@ff1+1
 10140  041D  0021               	movlb	1	; select bank1
 10141  041E  084D               	movf	efgtoa@h^(0+128),w
 10142  041F  0020               	movlb	0	; select bank0
 10143  0420  00DA               	movwf	___flge@ff1
 10144  0421  0021               	movlb	1	; select bank1
 10145  0422  0854               	movf	(efgtoa@l+3)^(0+128),w
 10146  0423  0020               	movlb	0	; select bank0
 10147  0424  00E1               	movwf	___flge@ff2+3
 10148  0425  0021               	movlb	1	; select bank1
 10149  0426  0853               	movf	(efgtoa@l+2)^(0+128),w
 10150  0427  0020               	movlb	0	; select bank0
 10151  0428  00E0               	movwf	___flge@ff2+2
 10152  0429  0021               	movlb	1	; select bank1
 10153  042A  0852               	movf	(efgtoa@l+1)^(0+128),w
 10154  042B  0020               	movlb	0	; select bank0
 10155  042C  00DF               	movwf	___flge@ff2+1
 10156  042D  0021               	movlb	1	; select bank1
 10157  042E  0851               	movf	efgtoa@l^(0+128),w
 10158  042F  0020               	movlb	0	; select bank0
 10159  0430  00DE               	movwf	___flge@ff2
 10160  0431  31A9  21C7  3180   	fcall	___flge
 10161  0434  1803               	btfsc	3,0
 10162  0435  2C39               	goto	l7348
 10163                           
 10164                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
 10165  0436  3000               	movlw	0
 10166  0437  0021               	movlb	1	; select bank1
 10167  0438  2C53               	goto	L7
 10168  0439                     l7348:	
 10169                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
 10170                           
 10171                           
 10172                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
 10173  0439  0021               	movlb	1	; select bank1
 10174  043A  0850               	movf	(efgtoa@h+3)^(0+128),w
 10175  043B  00F4               	movwf	___fleq@ff1+3
 10176  043C  084F               	movf	(efgtoa@h+2)^(0+128),w
 10177  043D  00F3               	movwf	___fleq@ff1+2
 10178  043E  084E               	movf	(efgtoa@h+1)^(0+128),w
 10179  043F  00F2               	movwf	___fleq@ff1+1
 10180  0440  084D               	movf	efgtoa@h^(0+128),w
 10181  0441  00F1               	movwf	___fleq@ff1
 10182  0442  0854               	movf	(efgtoa@l+3)^(0+128),w
 10183  0443  00F8               	movwf	___fleq@ff2+3
 10184  0444  0853               	movf	(efgtoa@l+2)^(0+128),w
 10185  0445  00F7               	movwf	___fleq@ff2+2
 10186  0446  0852               	movf	(efgtoa@l+1)^(0+128),w
 10187  0447  00F6               	movwf	___fleq@ff2+1
 10188  0448  0851               	movf	efgtoa@l^(0+128),w
 10189  0449  00F5               	movwf	___fleq@ff2
 10190  044A  31B6  2675  3180   	fcall	___fleq
 10191  044D  1C03               	btfss	3,0
 10192  044E  2C5A               	goto	l7354
 10193  044F  0021               	movlb	1	; select bank1
 10194  0450  1843               	btfsc	efgtoa@d^(0+128),0
 10195  0451  2C5A               	goto	l7354
 10196                           
 10197                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
 10198  0452  3000               	movlw	0
 10199  0453                     L7:	
 10200  0453  00D4               	movwf	(efgtoa@l+3)^(0+128)
 10201  0454  3000               	movlw	0
 10202  0455  00D3               	movwf	(efgtoa@l+2)^(0+128)
 10203  0456  3000               	movlw	0
 10204  0457  00D2               	movwf	(efgtoa@l+1)^(0+128)
 10205  0458  3000               	movlw	0
 10206  0459  00D1               	movwf	efgtoa@l^(0+128)
 10207  045A                     l7354:	
 10208                           
 10209                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
 10210  045A  0021               	movlb	1	; select bank1
 10211  045B  0854               	movf	(efgtoa@l+3)^(0+128),w
 10212  045C  00F4               	movwf	___fladd@b+3
 10213  045D  0853               	movf	(efgtoa@l+2)^(0+128),w
 10214  045E  00F3               	movwf	___fladd@b+2
 10215  045F  0852               	movf	(efgtoa@l+1)^(0+128),w
 10216  0460  00F2               	movwf	___fladd@b+1
 10217  0461  0851               	movf	efgtoa@l^(0+128),w
 10218  0462  00F1               	movwf	___fladd@b
 10219  0463  085A               	movf	(efgtoa@g+3)^(0+128),w
 10220  0464  00F8               	movwf	___fladd@a+3
 10221  0465  0859               	movf	(efgtoa@g+2)^(0+128),w
 10222  0466  00F7               	movwf	___fladd@a+2
 10223  0467  0858               	movf	(efgtoa@g+1)^(0+128),w
 10224  0468  00F6               	movwf	___fladd@a+1
 10225  0469  0857               	movf	efgtoa@g^(0+128),w
 10226  046A  00F5               	movwf	___fladd@a
 10227  046B  319E  261E  3180   	fcall	___fladd
 10228  046E  0874               	movf	?___fladd+3,w
 10229  046F  0021               	movlb	1	; select bank1
 10230  0470  00D0               	movwf	(efgtoa@h+3)^(0+128)
 10231  0471  0873               	movf	?___fladd+2,w
 10232  0472  00CF               	movwf	(efgtoa@h+2)^(0+128)
 10233  0473  0872               	movf	?___fladd+1,w
 10234  0474  00CE               	movwf	(efgtoa@h+1)^(0+128)
 10235  0475  0871               	movf	?___fladd,w
 10236  0476  00CD               	movwf	efgtoa@h^(0+128)
 10237                           
 10238                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
 10239  0477  082E               	movf	(efgtoa@ou+3)^(0+128),w
 10240  0478  00E2               	movwf	(efgtoa@u+3)^(0+128)
 10241  0479  082D               	movf	(efgtoa@ou+2)^(0+128),w
 10242  047A  00E1               	movwf	(efgtoa@u+2)^(0+128)
 10243  047B  082C               	movf	(efgtoa@ou+1)^(0+128),w
 10244  047C  00E0               	movwf	(efgtoa@u+1)^(0+128)
 10245  047D  082B               	movf	efgtoa@ou^(0+128),w
 10246  047E  00DF               	movwf	efgtoa@u^(0+128)
 10247                           
 10248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
 10249  047F  3065               	movlw	101
 10250  0480  0649               	xorwf	efgtoa@nmode^(0+128),w
 10251  0481  1903               	btfsc	3,2
 10252  0482  2C88               	goto	l7362
 10253  0483  085C               	movf	(efgtoa@e+1)^(0+128),w
 10254  0484  00C2               	movwf	(efgtoa@ne+1)^(0+128)
 10255  0485  085B               	movf	efgtoa@e^(0+128),w
 10256  0486  00C1               	movwf	efgtoa@ne^(0+128)
 10257  0487  2C8A               	goto	l636
 10258  0488                     l7362:	
 10259  0488  01C1               	clrf	efgtoa@ne^(0+128)
 10260  0489  01C2               	clrf	(efgtoa@ne+1)^(0+128)
 10261  048A                     l636:	
 10262                           
 10263                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
 10264  048A  01BD               	clrf	efgtoa@pp^(0+128)
 10265  048B  01BE               	clrf	(efgtoa@pp+1)^(0+128)
 10266                           
 10267                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
 10268  048C  01BB               	clrf	efgtoa@t^(0+128)
 10269  048D  01BC               	clrf	(efgtoa@t+1)^(0+128)
 10270                           
 10271                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
 10272  048E  01D5               	clrf	efgtoa@i^(0+128)
 10273  048F  01D6               	clrf	(efgtoa@i+1)^(0+128)
 10274                           
 10275                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
 10276  0490  2DC5               	goto	l7412
 10277  0491                     l7364:	
 10278                           
 10279                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
 10280  0491  0021               	movlb	1	; select bank1
 10281  0492  0862               	movf	(efgtoa@u+3)^(0+128),w
 10282  0493  0020               	movlb	0	; select bank0
 10283  0494  00C3               	movwf	___fldiv@a+3
 10284  0495  0021               	movlb	1	; select bank1
 10285  0496  0861               	movf	(efgtoa@u+2)^(0+128),w
 10286  0497  0020               	movlb	0	; select bank0
 10287  0498  00C2               	movwf	___fldiv@a+2
 10288  0499  0021               	movlb	1	; select bank1
 10289  049A  0860               	movf	(efgtoa@u+1)^(0+128),w
 10290  049B  0020               	movlb	0	; select bank0
 10291  049C  00C1               	movwf	___fldiv@a+1
 10292  049D  0021               	movlb	1	; select bank1
 10293  049E  085F               	movf	efgtoa@u^(0+128),w
 10294  049F  0020               	movlb	0	; select bank0
 10295  04A0  00C0               	movwf	___fldiv@a
 10296  04A1  0021               	movlb	1	; select bank1
 10297  04A2  0850               	movf	(efgtoa@h+3)^(0+128),w
 10298  04A3  0020               	movlb	0	; select bank0
 10299  04A4  00C7               	movwf	___fldiv@b+3
 10300  04A5  0021               	movlb	1	; select bank1
 10301  04A6  084F               	movf	(efgtoa@h+2)^(0+128),w
 10302  04A7  0020               	movlb	0	; select bank0
 10303  04A8  00C6               	movwf	___fldiv@b+2
 10304  04A9  0021               	movlb	1	; select bank1
 10305  04AA  084E               	movf	(efgtoa@h+1)^(0+128),w
 10306  04AB  0020               	movlb	0	; select bank0
 10307  04AC  00C5               	movwf	___fldiv@b+1
 10308  04AD  0021               	movlb	1	; select bank1
 10309  04AE  084D               	movf	efgtoa@h^(0+128),w
 10310  04AF  0020               	movlb	0	; select bank0
 10311  04B0  00C4               	movwf	___fldiv@b
 10312  04B1  3190  2052  3180   	fcall	___fldiv
 10313  04B4  0020               	movlb	0	; select bank0
 10314  04B5  0843               	movf	?___fldiv+3,w
 10315  04B6  00DD               	movwf	floorf@x+3
 10316  04B7  0842               	movf	?___fldiv+2,w
 10317  04B8  00DC               	movwf	floorf@x+2
 10318  04B9  0841               	movf	?___fldiv+1,w
 10319  04BA  00DB               	movwf	floorf@x+1
 10320  04BB  0840               	movf	?___fldiv,w
 10321  04BC  00DA               	movwf	floorf@x
 10322  04BD  31A2  22A1  3180   	fcall	_floorf
 10323  04C0  0020               	movlb	0	; select bank0
 10324  04C1  085D               	movf	?_floorf+3,w
 10325  04C2  0021               	movlb	1	; select bank1
 10326  04C3  00D4               	movwf	(efgtoa@l+3)^(0+128)
 10327  04C4  0020               	movlb	0	; select bank0
 10328  04C5  085C               	movf	?_floorf+2,w
 10329  04C6  0021               	movlb	1	; select bank1
 10330  04C7  00D3               	movwf	(efgtoa@l+2)^(0+128)
 10331  04C8  0020               	movlb	0	; select bank0
 10332  04C9  085B               	movf	?_floorf+1,w
 10333  04CA  0021               	movlb	1	; select bank1
 10334  04CB  00D2               	movwf	(efgtoa@l+1)^(0+128)
 10335  04CC  0020               	movlb	0	; select bank0
 10336  04CD  085A               	movf	?_floorf,w
 10337  04CE  0021               	movlb	1	; select bank1
 10338  04CF  00D1               	movwf	efgtoa@l^(0+128)
 10339                           
 10340                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
 10341  04D0  0854               	movf	(efgtoa@l+3)^(0+128),w
 10342  04D1  0020               	movlb	0	; select bank0
 10343  04D2  00DD               	movwf	___fltol@f1+3
 10344  04D3  0021               	movlb	1	; select bank1
 10345  04D4  0853               	movf	(efgtoa@l+2)^(0+128),w
 10346  04D5  0020               	movlb	0	; select bank0
 10347  04D6  00DC               	movwf	___fltol@f1+2
 10348  04D7  0021               	movlb	1	; select bank1
 10349  04D8  0852               	movf	(efgtoa@l+1)^(0+128),w
 10350  04D9  0020               	movlb	0	; select bank0
 10351  04DA  00DB               	movwf	___fltol@f1+1
 10352  04DB  0021               	movlb	1	; select bank1
 10353  04DC  0851               	movf	efgtoa@l^(0+128),w
 10354  04DD  0020               	movlb	0	; select bank0
 10355  04DE  00DA               	movwf	___fltol@f1
 10356  04DF  31A8  2080  3180   	fcall	___fltol
 10357  04E2  0020               	movlb	0	; select bank0
 10358  04E3  085B               	movf	?___fltol+1,w
 10359  04E4  0021               	movlb	1	; select bank1
 10360  04E5  00C4               	movwf	(efgtoa@d+1)^(0+128)
 10361  04E6  0020               	movlb	0	; select bank0
 10362  04E7  085A               	movf	?___fltol,w
 10363  04E8  0021               	movlb	1	; select bank1
 10364  04E9  00C3               	movwf	efgtoa@d^(0+128)
 10365                           
 10366                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
 10367  04EA  0023               	movlb	3	; select bank3
 10368  04EB  1A42               	btfsc	_flags^(0+384),4
 10369  04EC  2CFC               	goto	l7376
 10370  04ED  0021               	movlb	1	; select bank1
 10371  04EE  0843               	movf	efgtoa@d^(0+128),w
 10372  04EF  0444               	iorwf	(efgtoa@d+1)^(0+128),w
 10373  04F0  1D03               	btfss	3,2
 10374  04F1  2CFC               	goto	l7376
 10375  04F2  3067               	movlw	103
 10376  04F3  064C               	xorwf	efgtoa@mode^(0+128),w
 10377  04F4  1903               	btfsc	3,2
 10378  04F5  1FC2               	btfss	(efgtoa@ne+1)^(0+128),7
 10379  04F6  2CFC               	goto	l7376
 10380                           
 10381                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
 10382  04F7  3001               	movlw	1
 10383  04F8  07BB               	addwf	efgtoa@t^(0+128),f
 10384  04F9  3000               	movlw	0
 10385  04FA  3DBC               	addwfc	(efgtoa@t+1)^(0+128),f
 10386                           
 10387                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
 10388  04FB  2D43               	goto	l7404
 10389  04FC                     l7376:	
 10390                           
 10391                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
 10392  04FC  0021               	movlb	1	; select bank1
 10393  04FD  083D               	movf	efgtoa@pp^(0+128),w
 10394  04FE  043E               	iorwf	(efgtoa@pp+1)^(0+128),w
 10395  04FF  1903               	btfsc	3,2
 10396  0500  1FC2               	btfss	(efgtoa@ne+1)^(0+128),7
 10397  0501  2D17               	goto	l7396
 10398                           
 10399                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
 10400  0502  302E               	movlw	46
 10401  0503  00A7               	movwf	??_efgtoa^(0+128)
 10402  0504  085D               	movf	efgtoa@n^(0+128),w
 10403  0505  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10404  0506  0086               	movwf	6
 10405  0507  3002               	movlw	2	; select bank4/5
 10406  0508  0087               	movwf	7
 10407  0509  0827               	movf	??_efgtoa^(0+128),w
 10408  050A  0081               	movwf	1
 10409  050B  3001               	movlw	1
 10410  050C  07DD               	addwf	efgtoa@n^(0+128),f
 10411  050D  3000               	movlw	0
 10412  050E  3DDE               	addwfc	(efgtoa@n+1)^(0+128),f
 10413                           
 10414                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
 10415  050F  30FF               	movlw	255
 10416  0510  07CA               	addwf	efgtoa@w^(0+128),f
 10417  0511  30FF               	movlw	255
 10418  0512  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
 10419                           
 10420                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
 10421  0513  3001               	movlw	1
 10422  0514  00BD               	movwf	efgtoa@pp^(0+128)
 10423  0515  3000               	movlw	0
 10424  0516  00BE               	movwf	(efgtoa@pp^(0+128)+1)
 10425  0517                     l7396:	
 10426                           
 10427                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
 10428  0517  083B               	movf	efgtoa@t^(0+128),w
 10429  0518  043C               	iorwf	(efgtoa@t+1)^(0+128),w
 10430  0519  1903               	btfsc	3,2
 10431  051A  2D31               	goto	l7398
 10432                           
 10433                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
 10434  051B  3030               	movlw	48
 10435  051C  00A7               	movwf	??_efgtoa^(0+128)
 10436  051D  085D               	movf	efgtoa@n^(0+128),w
 10437  051E  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10438  051F  0086               	movwf	6
 10439  0520  3002               	movlw	2	; select bank4/5
 10440  0521  0087               	movwf	7
 10441  0522  0827               	movf	??_efgtoa^(0+128),w
 10442  0523  0081               	movwf	1
 10443  0524  3001               	movlw	1
 10444  0525  07DD               	addwf	efgtoa@n^(0+128),f
 10445  0526  3000               	movlw	0
 10446  0527  3DDE               	addwfc	(efgtoa@n+1)^(0+128),f
 10447                           
 10448                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
 10449  0528  30FF               	movlw	255
 10450  0529  07CA               	addwf	efgtoa@w^(0+128),f
 10451  052A  30FF               	movlw	255
 10452  052B  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
 10453                           
 10454                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
 10455  052C  30FF               	movlw	255
 10456  052D  07BB               	addwf	efgtoa@t^(0+128),f
 10457  052E  30FF               	movlw	255
 10458  052F  3DBC               	addwfc	(efgtoa@t+1)^(0+128),f
 10459  0530  2D17               	goto	l7396
 10460  0531                     l7398:	
 10461                           
 10462                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
 10463  0531  0843               	movf	efgtoa@d^(0+128),w
 10464  0532  3E30               	addlw	48
 10465  0533  00A7               	movwf	??_efgtoa^(0+128)
 10466  0534  085D               	movf	efgtoa@n^(0+128),w
 10467  0535  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10468  0536  0086               	movwf	6
 10469  0537  3002               	movlw	2	; select bank4/5
 10470  0538  0087               	movwf	7
 10471  0539  0827               	movf	??_efgtoa^(0+128),w
 10472  053A  0081               	movwf	1
 10473  053B  3001               	movlw	1
 10474  053C  07DD               	addwf	efgtoa@n^(0+128),f
 10475  053D  3000               	movlw	0
 10476  053E  3DDE               	addwfc	(efgtoa@n+1)^(0+128),f
 10477                           
 10478                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
 10479  053F  30FF               	movlw	255
 10480  0540  07CA               	addwf	efgtoa@w^(0+128),f
 10481  0541  30FF               	movlw	255
 10482  0542  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
 10483  0543                     l7404:	
 10484                           
 10485                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
 10486  0543  0854               	movf	(efgtoa@l+3)^(0+128),w
 10487  0544  0020               	movlb	0	; select bank0
 10488  0545  00AD               	movwf	___flmul@a+3
 10489  0546  0021               	movlb	1	; select bank1
 10490  0547  0853               	movf	(efgtoa@l+2)^(0+128),w
 10491  0548  0020               	movlb	0	; select bank0
 10492  0549  00AC               	movwf	___flmul@a+2
 10493  054A  0021               	movlb	1	; select bank1
 10494  054B  0852               	movf	(efgtoa@l+1)^(0+128),w
 10495  054C  0020               	movlb	0	; select bank0
 10496  054D  00AB               	movwf	___flmul@a+1
 10497  054E  0021               	movlb	1	; select bank1
 10498  054F  0851               	movf	efgtoa@l^(0+128),w
 10499  0550  0020               	movlb	0	; select bank0
 10500  0551  00AA               	movwf	___flmul@a
 10501  0552  0021               	movlb	1	; select bank1
 10502  0553  0862               	movf	(efgtoa@u+3)^(0+128),w
 10503  0554  0020               	movlb	0	; select bank0
 10504  0555  00A9               	movwf	___flmul@b+3
 10505  0556  0021               	movlb	1	; select bank1
 10506  0557  0861               	movf	(efgtoa@u+2)^(0+128),w
 10507  0558  0020               	movlb	0	; select bank0
 10508  0559  00A8               	movwf	___flmul@b+2
 10509  055A  0021               	movlb	1	; select bank1
 10510  055B  0860               	movf	(efgtoa@u+1)^(0+128),w
 10511  055C  0020               	movlb	0	; select bank0
 10512  055D  00A7               	movwf	___flmul@b+1
 10513  055E  0021               	movlb	1	; select bank1
 10514  055F  085F               	movf	efgtoa@u^(0+128),w
 10515  0560  0020               	movlb	0	; select bank0
 10516  0561  00A6               	movwf	___flmul@b
 10517  0562  3195  25D4  3180   	fcall	___flmul
 10518  0565  0020               	movlb	0	; select bank0
 10519  0566  0829               	movf	?___flmul+3,w
 10520  0567  00C3               	movwf	___flsub@a+3
 10521  0568  0828               	movf	?___flmul+2,w
 10522  0569  00C2               	movwf	___flsub@a+2
 10523  056A  0827               	movf	?___flmul+1,w
 10524  056B  00C1               	movwf	___flsub@a+1
 10525  056C  0826               	movf	?___flmul,w
 10526  056D  00C0               	movwf	___flsub@a
 10527  056E  0021               	movlb	1	; select bank1
 10528  056F  0850               	movf	(efgtoa@h+3)^(0+128),w
 10529  0570  0020               	movlb	0	; select bank0
 10530  0571  00C7               	movwf	___flsub@b+3
 10531  0572  0021               	movlb	1	; select bank1
 10532  0573  084F               	movf	(efgtoa@h+2)^(0+128),w
 10533  0574  0020               	movlb	0	; select bank0
 10534  0575  00C6               	movwf	___flsub@b+2
 10535  0576  0021               	movlb	1	; select bank1
 10536  0577  084E               	movf	(efgtoa@h+1)^(0+128),w
 10537  0578  0020               	movlb	0	; select bank0
 10538  0579  00C5               	movwf	___flsub@b+1
 10539  057A  0021               	movlb	1	; select bank1
 10540  057B  084D               	movf	efgtoa@h^(0+128),w
 10541  057C  0020               	movlb	0	; select bank0
 10542  057D  00C4               	movwf	___flsub@b
 10543  057E  31B4  249A  3180   	fcall	___flsub
 10544  0581  0020               	movlb	0	; select bank0
 10545  0582  0843               	movf	?___flsub+3,w
 10546  0583  0021               	movlb	1	; select bank1
 10547  0584  00D0               	movwf	(efgtoa@h+3)^(0+128)
 10548  0585  0020               	movlb	0	; select bank0
 10549  0586  0842               	movf	?___flsub+2,w
 10550  0587  0021               	movlb	1	; select bank1
 10551  0588  00CF               	movwf	(efgtoa@h+2)^(0+128)
 10552  0589  0020               	movlb	0	; select bank0
 10553  058A  0841               	movf	?___flsub+1,w
 10554  058B  0021               	movlb	1	; select bank1
 10555  058C  00CE               	movwf	(efgtoa@h+1)^(0+128)
 10556  058D  0020               	movlb	0	; select bank0
 10557  058E  0840               	movf	?___flsub,w
 10558  058F  0021               	movlb	1	; select bank1
 10559  0590  00CD               	movwf	efgtoa@h^(0+128)
 10560                           
 10561                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
 10562  0591  3041               	movlw	65
 10563  0592  0020               	movlb	0	; select bank0
 10564  0593  00C3               	movwf	___fldiv@a+3
 10565  0594  3020               	movlw	32
 10566  0595  00C2               	movwf	___fldiv@a+2
 10567  0596  3000               	movlw	0
 10568  0597  00C1               	movwf	___fldiv@a+1
 10569  0598  3000               	movlw	0
 10570  0599  00C0               	movwf	___fldiv@a
 10571  059A  0021               	movlb	1	; select bank1
 10572  059B  0862               	movf	(efgtoa@u+3)^(0+128),w
 10573  059C  0020               	movlb	0	; select bank0
 10574  059D  00C7               	movwf	___fldiv@b+3
 10575  059E  0021               	movlb	1	; select bank1
 10576  059F  0861               	movf	(efgtoa@u+2)^(0+128),w
 10577  05A0  0020               	movlb	0	; select bank0
 10578  05A1  00C6               	movwf	___fldiv@b+2
 10579  05A2  0021               	movlb	1	; select bank1
 10580  05A3  0860               	movf	(efgtoa@u+1)^(0+128),w
 10581  05A4  0020               	movlb	0	; select bank0
 10582  05A5  00C5               	movwf	___fldiv@b+1
 10583  05A6  0021               	movlb	1	; select bank1
 10584  05A7  085F               	movf	efgtoa@u^(0+128),w
 10585  05A8  0020               	movlb	0	; select bank0
 10586  05A9  00C4               	movwf	___fldiv@b
 10587  05AA  3190  2052  3180   	fcall	___fldiv
 10588  05AD  0020               	movlb	0	; select bank0
 10589  05AE  0843               	movf	?___fldiv+3,w
 10590  05AF  0021               	movlb	1	; select bank1
 10591  05B0  00E2               	movwf	(efgtoa@u+3)^(0+128)
 10592  05B1  0020               	movlb	0	; select bank0
 10593  05B2  0842               	movf	?___fldiv+2,w
 10594  05B3  0021               	movlb	1	; select bank1
 10595  05B4  00E1               	movwf	(efgtoa@u+2)^(0+128)
 10596  05B5  0020               	movlb	0	; select bank0
 10597  05B6  0841               	movf	?___fldiv+1,w
 10598  05B7  0021               	movlb	1	; select bank1
 10599  05B8  00E0               	movwf	(efgtoa@u+1)^(0+128)
 10600  05B9  0020               	movlb	0	; select bank0
 10601  05BA  0840               	movf	?___fldiv,w
 10602  05BB  0021               	movlb	1	; select bank1
 10603  05BC  00DF               	movwf	efgtoa@u^(0+128)
 10604                           
 10605                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
 10606  05BD  30FF               	movlw	255
 10607  05BE  07C1               	addwf	efgtoa@ne^(0+128),f
 10608  05BF  30FF               	movlw	255
 10609  05C0  3DC2               	addwfc	(efgtoa@ne+1)^(0+128),f
 10610                           
 10611                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
 10612  05C1  3001               	movlw	1
 10613  05C2  07D5               	addwf	efgtoa@i^(0+128),f
 10614  05C3  3000               	movlw	0
 10615  05C4  3DD6               	addwfc	(efgtoa@i+1)^(0+128),f
 10616  05C5                     l7412:	
 10617                           
 10618                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
 10619  05C5  0856               	movf	(efgtoa@i+1)^(0+128),w
 10620  05C6  3A80               	xorlw	128
 10621  05C7  00A7               	movwf	??_efgtoa^(0+128)
 10622  05C8  0840               	movf	(efgtoa@m+1)^(0+128),w
 10623  05C9  3A80               	xorlw	128
 10624  05CA  0227               	subwf	??_efgtoa^(0+128),w
 10625  05CB  1D03               	skipz
 10626  05CC  2DCF               	goto	u10585
 10627  05CD  083F               	movf	efgtoa@m^(0+128),w
 10628  05CE  0255               	subwf	efgtoa@i^(0+128),w
 10629  05CF                     u10585:	
 10630  05CF  1803               	skipnc
 10631  05D0  2DDD               	goto	l7416
 10632  05D1  0021               	movlb	1	; select bank1
 10633  05D2  085E               	movf	(efgtoa@n+1)^(0+128),w
 10634  05D3  3A80               	xorlw	128
 10635  05D4  00A7               	movwf	??_efgtoa^(0+128)
 10636  05D5  3080               	movlw	128
 10637  05D6  0227               	subwf	??_efgtoa^(0+128),w
 10638  05D7  1D03               	skipz
 10639  05D8  2DDB               	goto	u10595
 10640  05D9  304B               	movlw	75
 10641  05DA  025D               	subwf	efgtoa@n^(0+128),w
 10642  05DB                     u10595:	
 10643  05DB  1C03               	skipc
 10644  05DC  2C91               	goto	l7364
 10645  05DD                     l7416:	
 10646                           
 10647                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
 10648  05DD  0021               	movlb	1	; select bank1
 10649  05DE  083D               	movf	efgtoa@pp^(0+128),w
 10650  05DF  043E               	iorwf	(efgtoa@pp+1)^(0+128),w
 10651  05E0  1D03               	btfss	3,2
 10652  05E1  2DF3               	goto	l7424
 10653  05E2  0023               	movlb	3	; select bank3
 10654  05E3  1E42               	btfss	_flags^(0+384),4
 10655  05E4  2DF3               	goto	l7424
 10656                           
 10657                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
 10658  05E5  302E               	movlw	46
 10659  05E6  0021               	movlb	1	; select bank1
 10660  05E7  00A7               	movwf	??_efgtoa^(0+128)
 10661  05E8  085D               	movf	efgtoa@n^(0+128),w
 10662  05E9  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10663  05EA  0086               	movwf	6
 10664  05EB  3002               	movlw	2	; select bank4/5
 10665  05EC  0087               	movwf	7
 10666  05ED  0827               	movf	??_efgtoa^(0+128),w
 10667  05EE  0081               	movwf	1
 10668  05EF  3001               	movlw	1
 10669  05F0  07DD               	addwf	efgtoa@n^(0+128),f
 10670  05F1  3000               	movlw	0
 10671  05F2  3DDE               	addwfc	(efgtoa@n+1)^(0+128),f
 10672  05F3                     l7424:	
 10673                           
 10674                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
 10675  05F3  0021               	movlb	1	; select bank1
 10676  05F4  085D               	movf	efgtoa@n^(0+128),w
 10677  05F5  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10678  05F6  0086               	movwf	6
 10679  05F7  3002               	movlw	2	; select bank4/5
 10680  05F8  0087               	movwf	7
 10681  05F9  0181               	clrf	1
 10682                           
 10683                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
 10684  05FA  3065               	movlw	101
 10685  05FB  0649               	xorwf	efgtoa@nmode^(0+128),w
 10686  05FC  1D03               	btfss	3,2
 10687  05FD  2EB4               	goto	l7486
 10688                           
 10689                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
 10690  05FE  304F               	movlw	79
 10691  05FF  00D5               	movwf	efgtoa@i^(0+128)
 10692  0600  3000               	movlw	0
 10693  0601  00D6               	movwf	(efgtoa@i^(0+128)+1)
 10694                           
 10695                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
 10696  0602  0855               	movf	efgtoa@i^(0+128),w
 10697  0603  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10698  0604  0086               	movwf	6
 10699  0605  3002               	movlw	2	; select bank4/5
 10700  0606  0087               	movwf	7
 10701  0607  0181               	clrf	1
 10702                           
 10703                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
 10704  0608  01C5               	clrf	efgtoa@sign^(0+128)
 10705  0609  01C6               	clrf	(efgtoa@sign+1)^(0+128)
 10706                           
 10707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
 10708  060A  1FDC               	btfss	(efgtoa@e+1)^(0+128),7
 10709  060B  2E15               	goto	l7440
 10710                           
 10711                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
 10712  060C  3001               	movlw	1
 10713  060D  00C5               	movwf	efgtoa@sign^(0+128)
 10714  060E  3000               	movlw	0
 10715  060F  00C6               	movwf	(efgtoa@sign^(0+128)+1)
 10716                           
 10717                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
 10718  0610  09DB               	comf	efgtoa@e^(0+128),f
 10719  0611  09DC               	comf	(efgtoa@e+1)^(0+128),f
 10720  0612  0ADB               	incf	efgtoa@e^(0+128),f
 10721  0613  1903               	skipnz
 10722  0614  0ADC               	incf	(efgtoa@e+1)^(0+128),f
 10723  0615                     l7440:	
 10724                           
 10725                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
 10726  0615  3002               	movlw	2
 10727  0616  00C7               	movwf	efgtoa@p^(0+128)
 10728  0617  3000               	movlw	0
 10729  0618  00C8               	movwf	(efgtoa@p^(0+128)+1)
 10730  0619                     l7452:	
 10731                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 10732                           
 10733                           
 10734                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 10735  0619  085B               	movf	efgtoa@e^(0+128),w
 10736  061A  045C               	iorwf	(efgtoa@e+1)^(0+128),w
 10737  061B  1903               	btfsc	3,2
 10738  061C  2E51               	goto	l7454
 10739  061D                     l7442:	
 10740                           
 10741                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
 10742  061D  30FF               	movlw	255
 10743  061E  0021               	movlb	1	; select bank1
 10744  061F  07D5               	addwf	efgtoa@i^(0+128),f
 10745  0620  30FF               	movlw	255
 10746  0621  3DD6               	addwfc	(efgtoa@i+1)^(0+128),f
 10747                           
 10748                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
 10749  0622  300A               	movlw	10
 10750  0623  00F1               	movwf	___awmod@divisor
 10751  0624  3000               	movlw	0
 10752  0625  00F2               	movwf	___awmod@divisor+1
 10753  0626  085C               	movf	(efgtoa@e+1)^(0+128),w
 10754  0627  00F4               	movwf	___awmod@dividend+1
 10755  0628  085B               	movf	efgtoa@e^(0+128),w
 10756  0629  00F3               	movwf	___awmod@dividend
 10757  062A  31B6  2630  3180   	fcall	___awmod
 10758  062D  0871               	movf	?___awmod,w
 10759  062E  3E30               	addlw	48
 10760  062F  0021               	movlb	1	; select bank1
 10761  0630  00A7               	movwf	??_efgtoa^(0+128)
 10762  0631  0855               	movf	efgtoa@i^(0+128),w
 10763  0632  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10764  0633  0086               	movwf	6
 10765  0634  3002               	movlw	2	; select bank4/5
 10766  0635  0087               	movwf	7
 10767  0636  0827               	movf	??_efgtoa^(0+128),w
 10768  0637  0081               	movwf	1
 10769                           
 10770                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
 10771  0638  300A               	movlw	10
 10772  0639  00F1               	movwf	___awdiv@divisor
 10773  063A  3000               	movlw	0
 10774  063B  00F2               	movwf	___awdiv@divisor+1
 10775  063C  085C               	movf	(efgtoa@e+1)^(0+128),w
 10776  063D  00F4               	movwf	___awdiv@dividend+1
 10777  063E  085B               	movf	efgtoa@e^(0+128),w
 10778  063F  00F3               	movwf	___awdiv@dividend
 10779  0640  31B7  27AF  3180   	fcall	___awdiv
 10780  0643  0872               	movf	?___awdiv+1,w
 10781  0644  0021               	movlb	1	; select bank1
 10782  0645  00DC               	movwf	(efgtoa@e+1)^(0+128)
 10783  0646  0871               	movf	?___awdiv,w
 10784  0647  00DB               	movwf	efgtoa@e^(0+128)
 10785                           
 10786                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
 10787  0648  30FF               	movlw	255
 10788  0649  07C7               	addwf	efgtoa@p^(0+128),f
 10789  064A  30FF               	movlw	255
 10790  064B  3DC8               	addwfc	(efgtoa@p+1)^(0+128),f
 10791                           
 10792                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
 10793  064C  30FF               	movlw	255
 10794  064D  07CA               	addwf	efgtoa@w^(0+128),f
 10795  064E  30FF               	movlw	255
 10796  064F  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
 10797  0650  2E19               	goto	l7452
 10798  0651                     l7454:	
 10799  0651  0848               	movf	(efgtoa@p+1)^(0+128),w
 10800  0652  3A80               	xorlw	128
 10801  0653  00A7               	movwf	??_efgtoa^(0+128)
 10802  0654  3080               	movlw	128
 10803  0655  0227               	subwf	??_efgtoa^(0+128),w
 10804  0656  1D03               	skipz
 10805  0657  2E5A               	goto	u10655
 10806  0658  3001               	movlw	1
 10807  0659  0247               	subwf	efgtoa@p^(0+128),w
 10808  065A                     u10655:	
 10809  065A  1803               	skipnc
 10810  065B  2E1D               	goto	l7442
 10811                           
 10812                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
 10813  065C  30FF               	movlw	255
 10814  065D  0021               	movlb	1	; select bank1
 10815  065E  07D5               	addwf	efgtoa@i^(0+128),f
 10816  065F  30FF               	movlw	255
 10817  0660  3DD6               	addwfc	(efgtoa@i+1)^(0+128),f
 10818                           
 10819                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
 10820  0661  0845               	movf	efgtoa@sign^(0+128),w
 10821  0662  0446               	iorwf	(efgtoa@sign+1)^(0+128),w
 10822  0663  1D03               	btfss	3,2
 10823  0664  2E67               	goto	l7462
 10824  0665  302B               	movlw	43
 10825  0666  2E68               	goto	L8
 10826  0667                     l7462:	
 10827  0667  302D               	movlw	45
 10828  0668                     L8:	
 10829  0668  00B5               	movwf	_efgtoa$1050^(0+128)
 10830  0669  3000               	movlw	0
 10831  066A  00B6               	movwf	(_efgtoa$1050^(0+128)+1)
 10832  066B  0835               	movf	_efgtoa$1050^(0+128),w
 10833  066C  00A7               	movwf	??_efgtoa^(0+128)
 10834  066D  0855               	movf	efgtoa@i^(0+128),w
 10835  066E  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10836  066F  0086               	movwf	6
 10837  0670  3002               	movlw	2	; select bank4/5
 10838  0671  0087               	movwf	7
 10839  0672  0827               	movf	??_efgtoa^(0+128),w
 10840  0673  0081               	movwf	1
 10841                           
 10842                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
 10843  0674  30FF               	movlw	255
 10844  0675  07CA               	addwf	efgtoa@w^(0+128),f
 10845  0676  30FF               	movlw	255
 10846  0677  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
 10847                           
 10848                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 10849  0678  30FF               	movlw	255
 10850  0679  07D5               	addwf	efgtoa@i^(0+128),f
 10851  067A  30FF               	movlw	255
 10852  067B  3DD6               	addwfc	(efgtoa@i+1)^(0+128),f
 10853  067C  0826               	movf	efgtoa@c^(0+128),w
 10854  067D  3EBF               	addlw	191
 10855  067E  00A7               	movwf	??_efgtoa^(0+128)
 10856  067F  30FF               	movlw	255
 10857  0680  1803               	skipnc
 10858  0681  3000               	movlw	0
 10859  0682  00A8               	movwf	(??_efgtoa^(0+128)+1)
 10860  0683  3000               	movlw	0
 10861  0684  0228               	subwf	(??_efgtoa+1)^(0+128),w
 10862  0685  301A               	movlw	26
 10863  0686  1903               	skipnz
 10864  0687  0227               	subwf	??_efgtoa^(0+128),w
 10865  0688  1803               	btfsc	3,0
 10866  0689  2E8C               	goto	u10670
 10867  068A  3001               	movlw	1
 10868  068B  2E8D               	goto	u10680
 10869  068C                     u10670:	
 10870  068C  3000               	movlw	0
 10871  068D                     u10680:	
 10872  068D  00A9               	movwf	(??_efgtoa+2)^(0+128)
 10873  068E  01AA               	clrf	((??_efgtoa+2)^(0+128)+1)
 10874  068F  0829               	movf	(??_efgtoa+2)^(0+128),w
 10875  0690  00B9               	movwf	_efgtoa$1052^(0+128)
 10876  0691  082A               	movf	(??_efgtoa+3)^(0+128),w
 10877  0692  00BA               	movwf	(_efgtoa$1052+1)^(0+128)
 10878  0693  0839               	movf	_efgtoa$1052^(0+128),w
 10879  0694  043A               	iorwf	(_efgtoa$1052+1)^(0+128),w
 10880  0695  1D03               	btfss	3,2
 10881  0696  2E99               	goto	l7478
 10882  0697  3065               	movlw	101
 10883  0698  2E9A               	goto	L9
 10884  0699                     l7478:	
 10885  0699  3045               	movlw	69
 10886  069A                     L9:	
 10887  069A  00B7               	movwf	_efgtoa$1051^(0+128)
 10888  069B  3000               	movlw	0
 10889  069C  00B8               	movwf	(_efgtoa$1051^(0+128)+1)
 10890  069D  0837               	movf	_efgtoa$1051^(0+128),w
 10891  069E  00A7               	movwf	??_efgtoa^(0+128)
 10892  069F  0855               	movf	efgtoa@i^(0+128),w
 10893  06A0  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10894  06A1  0086               	movwf	6
 10895  06A2  3002               	movlw	2	; select bank4/5
 10896  06A3  0087               	movwf	7
 10897  06A4  0827               	movf	??_efgtoa^(0+128),w
 10898  06A5  0081               	movwf	1
 10899                           
 10900                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
 10901  06A6  30FF               	movlw	255
 10902  06A7  07CA               	addwf	efgtoa@w^(0+128),f
 10903  06A8  30FF               	movlw	255
 10904  06A9  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
 10905                           
 10906                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
 10907  06AA  0855               	movf	efgtoa@i^(0+128),w
 10908  06AB  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10909  06AC  00F1               	movwf	strcpy@src
 10910  06AD  3002               	movlw	2
 10911  06AE  00F2               	movwf	strcpy@src+1
 10912  06AF  085D               	movf	efgtoa@n^(0+128),w
 10913  06B0  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10914  06B1  31B4  24B9  3180   	fcall	_strcpy
 10915  06B4                     l7486:	
 10916                           
 10917                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 502:     re
      +                          turn pad(fp, &dbuf[0], w);
 10918  06B4  0021               	movlb	1	; select bank1
 10919  06B5  0821               	movf	(efgtoa@fp+1)^(0+128),w
 10920  06B6  0020               	movlb	0	; select bank0
 10921  06B7  00A7               	movwf	pad@fp+1
 10922  06B8  0021               	movlb	1	; select bank1
 10923  06B9  0820               	movf	efgtoa@fp^(0+128),w
 10924  06BA  0020               	movlb	0	; select bank0
 10925  06BB  00A6               	movwf	pad@fp
 10926  06BC  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
 10927  06BD  0021               	movlb	1	; select bank1
 10928  06BE  00A7               	movwf	??_efgtoa^(0+128)
 10929  06BF  0827               	movf	??_efgtoa^(0+128),w
 10930  06C0  0020               	movlb	0	; select bank0
 10931  06C1  00A8               	movwf	pad@buf
 10932  06C2  0021               	movlb	1	; select bank1
 10933  06C3  084B               	movf	(efgtoa@w+1)^(0+128),w
 10934  06C4  0020               	movlb	0	; select bank0
 10935  06C5  00AA               	movwf	pad@p+1
 10936  06C6  0021               	movlb	1	; select bank1
 10937  06C7  084A               	movf	efgtoa@w^(0+128),w
 10938  06C8  0020               	movlb	0	; select bank0
 10939  06C9  00A9               	movwf	pad@p
 10940  06CA  31B7  275E         	fcall	_pad
 10941  06CC  0020               	movlb	0	; select bank0
 10942  06CD  0827               	movf	?_pad+1,w
 10943  06CE  0021               	movlb	1	; select bank1
 10944  06CF  00A1               	movwf	(?_efgtoa+1)^(0+128)
 10945  06D0  0020               	movlb	0	; select bank0
 10946  06D1  0826               	movf	?_pad,w
 10947  06D2  0021               	movlb	1	; select bank1
 10948  06D3  00A0               	movwf	?_efgtoa^(0+128)
 10949  06D4  0008               	return
 10950  06D5                     __end_of_efgtoa:	
 10951                           
 10952                           	psect	text18
 10953  351B                     __ptext18:	
 10954 ;; *************** function _tolower *****************
 10955 ;; Defined at:
 10956 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
 10957 ;; Parameters:    Size  Location     Type
 10958 ;;  c               2    7[COMMON] int 
 10959 ;; Auto vars:     Size  Location     Type
 10960 ;;		None
 10961 ;; Return value:  Size  Location     Type
 10962 ;;                  2    7[COMMON] int 
 10963 ;; Registers used:
 10964 ;;		wreg, status,2, status,0
 10965 ;; Tracked objects:
 10966 ;;		On entry : 0/0
 10967 ;;		On exit  : 0/0
 10968 ;;		Unchanged: 0/0
 10969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10970 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10971 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10972 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10973 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10974 ;;Total ram usage:        8 bytes
 10975 ;; Hardware stack levels used:    1
 10976 ;; Hardware stack levels required when called:    2
 10977 ;; This function calls:
 10978 ;;		_isupper
 10979 ;; This function is called by:
 10980 ;;		_efgtoa
 10981 ;;		_vfpfcnvrt
 10982 ;; This function uses a non-reentrant model
 10983 ;;
 10984                           
 10985                           
 10986                           ;psect for function _tolower
 10987  351B                     _tolower:	
 10988                           
 10989                           ;incstack = 0
 10990                           ; Regs used in _tolower: [wreg+status,2+status,0]
 10991  351B  0877               	movf	tolower@c,w
 10992  351C  3EBF               	addlw	191
 10993  351D  0020               	movlb	0	; select bank0
 10994  351E  00A0               	movwf	??_tolower
 10995  351F  30FF               	movlw	255
 10996  3520  3D78               	addwfc	tolower@c+1,w
 10997  3521  00A1               	movwf	??_tolower+1
 10998  3522  3000               	movlw	0
 10999  3523  0221               	subwf	??_tolower+1,w
 11000  3524  301A               	movlw	26
 11001  3525  1903               	skipnz
 11002  3526  0220               	subwf	??_tolower,w
 11003  3527  1803               	btfsc	3,0
 11004  3528  2D2B               	goto	u9920
 11005  3529  3001               	movlw	1
 11006  352A  2D2C               	goto	u9930
 11007  352B                     u9920:	
 11008  352B  3000               	movlw	0
 11009  352C                     u9930:	
 11010  352C  00A2               	movwf	??_tolower+2
 11011  352D  01A3               	clrf	??_tolower+3
 11012  352E  0822               	movf	??_tolower+2,w
 11013  352F  00F9               	movwf	_tolower$1680
 11014  3530  0823               	movf	??_tolower+3,w
 11015  3531  00FA               	movwf	_tolower$1680+1
 11016  3532  0879               	movf	_tolower$1680,w
 11017  3533  047A               	iorwf	_tolower$1680+1,w
 11018  3534  1903               	btfsc	3,2
 11019  3535  0008               	return
 11020  3536  3020               	movlw	32
 11021  3537  0477               	iorwf	tolower@c,w
 11022  3538  00F7               	movwf	?_tolower
 11023  3539  3000               	movlw	0
 11024  353A  0478               	iorwf	tolower@c+1,w
 11025  353B  00F8               	movwf	?_tolower+1
 11026  353C  0008               	return
 11027  353D                     __end_of_tolower:	
 11028                           
 11029                           	psect	text19
 11030  33A9                     __ptext19:	
 11031 ;; *************** function _isupper *****************
 11032 ;; Defined at:
 11033 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
 11034 ;; Parameters:    Size  Location     Type
 11035 ;;  c               2    1[COMMON] int 
 11036 ;; Auto vars:     Size  Location     Type
 11037 ;;		None
 11038 ;; Return value:  Size  Location     Type
 11039 ;;                  2    1[COMMON] int 
 11040 ;; Registers used:
 11041 ;;		wreg, status,2, status,0
 11042 ;; Tracked objects:
 11043 ;;		On entry : 0/0
 11044 ;;		On exit  : 0/0
 11045 ;;		Unchanged: 0/0
 11046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11047 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11049 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11050 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11051 ;;Total ram usage:        6 bytes
 11052 ;; Hardware stack levels used:    1
 11053 ;; Hardware stack levels required when called:    1
 11054 ;; This function calls:
 11055 ;;		Nothing
 11056 ;; This function is called by:
 11057 ;;		_efgtoa
 11058 ;;		_xtoa
 11059 ;;		_vfpfcnvrt
 11060 ;;		_tolower
 11061 ;; This function uses a non-reentrant model
 11062 ;;
 11063                           
 11064                           
 11065                           ;psect for function _isupper
 11066  33A9                     _isupper:	
 11067                           
 11068                           ;incstack = 0
 11069                           ; Regs used in _isupper: [wreg+status,2+status,0]
 11070  33A9  0871               	movf	isupper@c,w
 11071  33AA  3EBF               	addlw	191
 11072  33AB  00F3               	movwf	??_isupper
 11073  33AC  30FF               	movlw	255
 11074  33AD  3D72               	addwfc	isupper@c+1,w
 11075  33AE  00F4               	movwf	??_isupper+1
 11076  33AF  3000               	movlw	0
 11077  33B0  0274               	subwf	??_isupper+1,w
 11078  33B1  301A               	movlw	26
 11079  33B2  1903               	skipnz
 11080  33B3  0273               	subwf	??_isupper,w
 11081  33B4  1803               	btfsc	3,0
 11082  33B5  2BB8               	goto	u9410
 11083  33B6  3001               	movlw	1
 11084  33B7  2BB9               	goto	u9420
 11085  33B8                     u9410:	
 11086  33B8  3000               	movlw	0
 11087  33B9                     u9420:	
 11088  33B9  00F5               	movwf	??_isupper+2
 11089  33BA  01F6               	clrf	??_isupper+3
 11090  33BB  0875               	movf	??_isupper+2,w
 11091  33BC  00F1               	movwf	?_isupper
 11092  33BD  0876               	movf	??_isupper+3,w
 11093  33BE  00F2               	movwf	?_isupper+1
 11094  33BF  0008               	return
 11095  33C0                     __end_of_isupper:	
 11096                           
 11097                           	psect	text20
 11098  34B9                     __ptext20:	
 11099 ;; *************** function _strcpy *****************
 11100 ;; Defined at:
 11101 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
 11102 ;; Parameters:    Size  Location     Type
 11103 ;;  dest            1    wreg     PTR unsigned char 
 11104 ;;		 -> dbuf(80), 
 11105 ;;  src             2    1[COMMON] PTR const unsigned char 
 11106 ;;		 -> STR_31(4), STR_30(4), STR_27(4), STR_26(4), 
 11107 ;;		 -> dbuf(80), 
 11108 ;; Auto vars:     Size  Location     Type
 11109 ;;  dest            1    8[COMMON] PTR unsigned char 
 11110 ;;		 -> dbuf(80), 
 11111 ;;  s               2    5[COMMON] PTR const unsigned char 
 11112 ;;		 -> STR_31(4), STR_30(4), STR_27(4), STR_26(4), 
 11113 ;;		 -> dbuf(80), 
 11114 ;;  d               1    7[COMMON] PTR unsigned char 
 11115 ;;		 -> dbuf(80), 
 11116 ;; Return value:  Size  Location     Type
 11117 ;;                  1    wreg      PTR unsigned char 
 11118 ;; Registers used:
 11119 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 11120 ;; Tracked objects:
 11121 ;;		On entry : 0/0
 11122 ;;		On exit  : 0/0
 11123 ;;		Unchanged: 0/0
 11124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11125 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11126 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11127 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11128 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11129 ;;Total ram usage:        8 bytes
 11130 ;; Hardware stack levels used:    1
 11131 ;; Hardware stack levels required when called:    1
 11132 ;; This function calls:
 11133 ;;		Nothing
 11134 ;; This function is called by:
 11135 ;;		_efgtoa
 11136 ;; This function uses a non-reentrant model
 11137 ;;
 11138                           
 11139                           
 11140                           ;psect for function _strcpy
 11141  34B9                     _strcpy:	
 11142                           
 11143                           ;incstack = 0
 11144                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
 11145                           ;strcpy@dest stored from wreg
 11146  34B9  00F8               	movwf	strcpy@dest
 11147  34BA  0872               	movf	strcpy@src+1,w
 11148  34BB  00F6               	movwf	strcpy@s+1
 11149  34BC  0871               	movf	strcpy@src,w
 11150  34BD  00F5               	movwf	strcpy@s
 11151  34BE  0878               	movf	strcpy@dest,w
 11152  34BF  00F3               	movwf	??_strcpy
 11153  34C0  0873               	movf	??_strcpy,w
 11154  34C1  00F7               	movwf	strcpy@d
 11155  34C2                     l4520:	
 11156  34C2  0877               	movf	strcpy@d,w
 11157  34C3  0086               	movwf	6
 11158  34C4  3002               	movlw	2	; select bank4/5
 11159  34C5  0087               	movwf	7
 11160  34C6  0AF7               	incf	strcpy@d,f
 11161  34C7  0876               	movf	strcpy@s+1,w
 11162  34C8  00F4               	movwf	??_strcpy+1
 11163  34C9  0875               	movf	strcpy@s,w
 11164  34CA  00F3               	movwf	??_strcpy
 11165  34CB  0AF5               	incf	strcpy@s,f
 11166  34CC  1903               	skipnz
 11167  34CD  0AF6               	incf	strcpy@s+1,f
 11168  34CE  0873               	movf	??_strcpy,w
 11169  34CF  0084               	movwf	4
 11170  34D0  0874               	movf	??_strcpy+1,w
 11171  34D1  0085               	movwf	5
 11172  34D2  0800               	movf	0,w	;code access
 11173  34D3  3FC0               	movwi [0]fsr1
 11174  34D4  0889               	movf	9,f
 11175  34D5  1903               	btfsc	3,2
 11176  34D6  0008               	return
 11177  34D7  2CC2               	goto	l4520
 11178  34D8                     __end_of_strcpy:	
 11179                           
 11180                           	psect	text21
 11181  22A1                     __ptext21:	
 11182 ;; *************** function _floorf *****************
 11183 ;; Defined at:
 11184 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
 11185 ;; Parameters:    Size  Location     Type
 11186 ;;  x               4   58[BANK0 ] float 
 11187 ;; Auto vars:     Size  Location     Type
 11188 ;;  u               4   74[BANK0 ] struct .
 11189 ;;  m               4   68[BANK0 ] unsigned long 
 11190 ;;  e               2   72[BANK0 ] int 
 11191 ;; Return value:  Size  Location     Type
 11192 ;;                  4   58[BANK0 ] float 
 11193 ;; Registers used:
 11194 ;;		wreg, status,2, status,0
 11195 ;; Tracked objects:
 11196 ;;		On entry : 0/0
 11197 ;;		On exit  : 0/0
 11198 ;;		Unchanged: 0/0
 11199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11200 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11201 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11202 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11203 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11204 ;;Total ram usage:       20 bytes
 11205 ;; Hardware stack levels used:    1
 11206 ;; Hardware stack levels required when called:    1
 11207 ;; This function calls:
 11208 ;;		Nothing
 11209 ;; This function is called by:
 11210 ;;		_efgtoa
 11211 ;; This function uses a non-reentrant model
 11212 ;;
 11213                           
 11214                           
 11215                           ;psect for function _floorf
 11216  22A1                     _floorf:	
 11217                           
 11218                           ;incstack = 0
 11219                           ; Regs used in _floorf: [wreg+status,2+status,0]
 11220  22A1  0023               	movlb	3	; select bank3
 11221  22A2  082D               	movf	(floorf@F524+3)^(0+384),w
 11222  22A3  0020               	movlb	0	; select bank0
 11223  22A4  00ED               	movwf	floorf@u+3
 11224  22A5  0023               	movlb	3	; select bank3
 11225  22A6  082C               	movf	(floorf@F524+2)^(0+384),w
 11226  22A7  0020               	movlb	0	; select bank0
 11227  22A8  00EC               	movwf	floorf@u+2
 11228  22A9  0023               	movlb	3	; select bank3
 11229  22AA  082B               	movf	(floorf@F524+1)^(0+384),w
 11230  22AB  0020               	movlb	0	; select bank0
 11231  22AC  00EB               	movwf	floorf@u+1
 11232  22AD  0023               	movlb	3	; select bank3
 11233  22AE  082A               	movf	floorf@F524^(0+384),w
 11234  22AF  0020               	movlb	0	; select bank0
 11235  22B0  00EA               	movwf	floorf@u
 11236  22B1  085D               	movf	floorf@x+3,w
 11237  22B2  00ED               	movwf	floorf@u+3
 11238  22B3  085C               	movf	floorf@x+2,w
 11239  22B4  00EC               	movwf	floorf@u+2
 11240  22B5  085B               	movf	floorf@x+1,w
 11241  22B6  00EB               	movwf	floorf@u+1
 11242  22B7  085A               	movf	floorf@x,w
 11243  22B8  00EA               	movwf	floorf@u
 11244  22B9  086A               	movf	floorf@u,w
 11245  22BA  00DE               	movwf	??_floorf
 11246  22BB  086B               	movf	floorf@u+1,w
 11247  22BC  00DF               	movwf	??_floorf+1
 11248  22BD  086C               	movf	floorf@u+2,w
 11249  22BE  00E0               	movwf	??_floorf+2
 11250  22BF  086D               	movf	floorf@u+3,w
 11251  22C0  00E1               	movwf	??_floorf+3
 11252  22C1  3017               	movlw	23
 11253  22C2                     u5465:	
 11254  22C2  36E1               	lsrf	??_floorf+3,f
 11255  22C3  0CE0               	rrf	??_floorf+2,f
 11256  22C4  0CDF               	rrf	??_floorf+1,f
 11257  22C5  0CDE               	rrf	??_floorf,f
 11258  22C6  0B89               	decfsz	9,f
 11259  22C7  2AC2               	goto	u5465
 11260  22C8  30FF               	movlw	255
 11261  22C9  055E               	andwf	??_floorf,w
 11262  22CA  00E2               	movwf	??_floorf+4
 11263  22CB  3000               	movlw	0
 11264  22CC  055F               	andwf	??_floorf+1,w
 11265  22CD  00E3               	movwf	??_floorf+5
 11266  22CE  0862               	movf	??_floorf+4,w
 11267  22CF  3E81               	addlw	129
 11268  22D0  00E8               	movwf	floorf@e
 11269  22D1  30FF               	movlw	255
 11270  22D2  3D63               	addwfc	??_floorf+5,w
 11271  22D3  00E9               	movwf	floorf@e+1
 11272  22D4  0869               	movf	floorf@e+1,w
 11273  22D5  3A80               	xorlw	128
 11274  22D6  00DE               	movwf	??_floorf
 11275  22D7  3080               	movlw	128
 11276  22D8  025E               	subwf	??_floorf,w
 11277  22D9  1D03               	skipz
 11278  22DA  2ADD               	goto	u5475
 11279  22DB  3017               	movlw	23
 11280  22DC  0268               	subwf	floorf@e,w
 11281  22DD                     u5475:	
 11282  22DD  1803               	btfsc	3,0
 11283  22DE  0008               	return
 11284  22DF  0020               	movlb	0	; select bank0
 11285  22E0  1BE9               	btfsc	floorf@e+1,7
 11286  22E1  2B3A               	goto	l4552
 11287  22E2  30FF               	movlw	255
 11288  22E3  00DE               	movwf	??_floorf
 11289  22E4  30FF               	movlw	255
 11290  22E5  00DF               	movwf	??_floorf+1
 11291  22E6  307F               	movlw	127
 11292  22E7  00E0               	movwf	??_floorf+2
 11293  22E8  3000               	movlw	0
 11294  22E9  00E1               	movwf	??_floorf+3
 11295  22EA  0A68               	incf	floorf@e,w
 11296  22EB  2AF0               	goto	u5490
 11297  22EC                     u5495:	
 11298  22EC  37E1               	asrf	??_floorf+3,f
 11299  22ED  0CE0               	rrf	??_floorf+2,f
 11300  22EE  0CDF               	rrf	??_floorf+1,f
 11301  22EF  0CDE               	rrf	??_floorf,f
 11302  22F0                     u5490:	
 11303  22F0  0B89               	decfsz	9,f
 11304  22F1  2AEC               	goto	u5495
 11305  22F2  0861               	movf	??_floorf+3,w
 11306  22F3  00E7               	movwf	floorf@m+3
 11307  22F4  0860               	movf	??_floorf+2,w
 11308  22F5  00E6               	movwf	floorf@m+2
 11309  22F6  085F               	movf	??_floorf+1,w
 11310  22F7  00E5               	movwf	floorf@m+1
 11311  22F8  085E               	movf	??_floorf,w
 11312  22F9  00E4               	movwf	floorf@m
 11313  22FA  086A               	movf	floorf@u,w
 11314  22FB  0564               	andwf	floorf@m,w
 11315  22FC  00DE               	movwf	??_floorf
 11316  22FD  086B               	movf	floorf@u+1,w
 11317  22FE  0565               	andwf	floorf@m+1,w
 11318  22FF  00DF               	movwf	??_floorf+1
 11319  2300  086C               	movf	floorf@u+2,w
 11320  2301  0566               	andwf	floorf@m+2,w
 11321  2302  00E0               	movwf	??_floorf+2
 11322  2303  086D               	movf	floorf@u+3,w
 11323  2304  0567               	andwf	floorf@m+3,w
 11324  2305  00E1               	movwf	??_floorf+3
 11325  2306  0861               	movf	??_floorf+3,w
 11326  2307  0460               	iorwf	??_floorf+2,w
 11327  2308  045F               	iorwf	??_floorf+1,w
 11328  2309  045E               	iorwf	??_floorf,w
 11329  230A  1903               	btfsc	3,2
 11330  230B  0008               	return
 11331  230C  086A               	movf	floorf@u,w
 11332  230D  00DE               	movwf	??_floorf
 11333  230E  086B               	movf	floorf@u+1,w
 11334  230F  00DF               	movwf	??_floorf+1
 11335  2310  086C               	movf	floorf@u+2,w
 11336  2311  00E0               	movwf	??_floorf+2
 11337  2312  086D               	movf	floorf@u+3,w
 11338  2313  00E1               	movwf	??_floorf+3
 11339  2314  301F               	movlw	31
 11340  2315                     u5515:	
 11341  2315  36E1               	lsrf	??_floorf+3,f
 11342  2316  0CE0               	rrf	??_floorf+2,f
 11343  2317  0CDF               	rrf	??_floorf+1,f
 11344  2318  0CDE               	rrf	??_floorf,f
 11345  2319  0B89               	decfsz	9,f
 11346  231A  2B15               	goto	u5515
 11347  231B  0861               	movf	??_floorf+3,w
 11348  231C  0460               	iorwf	??_floorf+2,w
 11349  231D  045F               	iorwf	??_floorf+1,w
 11350  231E  045E               	iorwf	??_floorf,w
 11351  231F  1903               	skipnz
 11352  2320  2B29               	goto	l4550
 11353  2321  0864               	movf	floorf@m,w
 11354  2322  07EA               	addwf	floorf@u,f
 11355  2323  0865               	movf	floorf@m+1,w
 11356  2324  3DEB               	addwfc	floorf@u+1,f
 11357  2325  0866               	movf	floorf@m+2,w
 11358  2326  3DEC               	addwfc	floorf@u+2,f
 11359  2327  0867               	movf	floorf@m+3,w
 11360  2328  3DED               	addwfc	floorf@u+3,f
 11361  2329                     l4550:	
 11362  2329  0964               	comf	floorf@m,w
 11363  232A  00DE               	movwf	??_floorf
 11364  232B  0965               	comf	floorf@m+1,w
 11365  232C  00DF               	movwf	??_floorf+1
 11366  232D  0966               	comf	floorf@m+2,w
 11367  232E  00E0               	movwf	??_floorf+2
 11368  232F  0967               	comf	floorf@m+3,w
 11369  2330  00E1               	movwf	??_floorf+3
 11370  2331  085E               	movf	??_floorf,w
 11371  2332  05EA               	andwf	floorf@u,f
 11372  2333  085F               	movf	??_floorf+1,w
 11373  2334  05EB               	andwf	floorf@u+1,f
 11374  2335  0860               	movf	??_floorf+2,w
 11375  2336  05EC               	andwf	floorf@u+2,f
 11376  2337  0861               	movf	??_floorf+3,w
 11377  2338  05ED               	andwf	floorf@u+3,f
 11378  2339  2B70               	goto	l1363
 11379  233A                     l4552:	
 11380  233A  086A               	movf	floorf@u,w
 11381  233B  00DE               	movwf	??_floorf
 11382  233C  086B               	movf	floorf@u+1,w
 11383  233D  00DF               	movwf	??_floorf+1
 11384  233E  086C               	movf	floorf@u+2,w
 11385  233F  00E0               	movwf	??_floorf+2
 11386  2340  086D               	movf	floorf@u+3,w
 11387  2341  00E1               	movwf	??_floorf+3
 11388  2342  301F               	movlw	31
 11389  2343                     u5535:	
 11390  2343  36E1               	lsrf	??_floorf+3,f
 11391  2344  0CE0               	rrf	??_floorf+2,f
 11392  2345  0CDF               	rrf	??_floorf+1,f
 11393  2346  0CDE               	rrf	??_floorf,f
 11394  2347  0B89               	decfsz	9,f
 11395  2348  2B43               	goto	u5535
 11396  2349  0861               	movf	??_floorf+3,w
 11397  234A  0460               	iorwf	??_floorf+2,w
 11398  234B  045F               	iorwf	??_floorf+1,w
 11399  234C  045E               	iorwf	??_floorf,w
 11400  234D  1D03               	skipz
 11401  234E  2B53               	goto	l4556
 11402  234F  3000               	movlw	0
 11403  2350  00ED               	movwf	floorf@u+3
 11404  2351  3000               	movlw	0
 11405  2352  2B6B               	goto	L10
 11406  2353                     l4556:	
 11407  2353  086A               	movf	floorf@u,w
 11408  2354  00DE               	movwf	??_floorf
 11409  2355  086B               	movf	floorf@u+1,w
 11410  2356  00DF               	movwf	??_floorf+1
 11411  2357  086C               	movf	floorf@u+2,w
 11412  2358  00E0               	movwf	??_floorf+2
 11413  2359  086D               	movf	floorf@u+3,w
 11414  235A  00E1               	movwf	??_floorf+3
 11415  235B  3001               	movlw	1
 11416  235C                     u5555:	
 11417  235C  35DE               	lslf	??_floorf,f
 11418  235D  0DDF               	rlf	??_floorf+1,f
 11419  235E  0DE0               	rlf	??_floorf+2,f
 11420  235F  0DE1               	rlf	??_floorf+3,f
 11421  2360  0B89               	decfsz	9,f
 11422  2361  2B5C               	goto	u5555
 11423  2362  0861               	movf	??_floorf+3,w
 11424  2363  0460               	iorwf	??_floorf+2,w
 11425  2364  045F               	iorwf	??_floorf+1,w
 11426  2365  045E               	iorwf	??_floorf,w
 11427  2366  1903               	skipnz
 11428  2367  2B70               	goto	l1363
 11429  2368  30BF               	movlw	191
 11430  2369  00ED               	movwf	floorf@u+3
 11431  236A  3080               	movlw	128
 11432  236B                     L10:	
 11433  236B  00EC               	movwf	floorf@u+2
 11434  236C  3000               	movlw	0
 11435  236D  00EB               	movwf	floorf@u+1
 11436  236E  3000               	movlw	0
 11437  236F  00EA               	movwf	floorf@u
 11438  2370                     l1363:	
 11439  2370  086D               	movf	floorf@u+3,w
 11440  2371  00DD               	movwf	?_floorf+3
 11441  2372  086C               	movf	floorf@u+2,w
 11442  2373  00DC               	movwf	?_floorf+2
 11443  2374  086B               	movf	floorf@u+1,w
 11444  2375  00DB               	movwf	?_floorf+1
 11445  2376  086A               	movf	floorf@u,w
 11446  2377  00DA               	movwf	?_floorf
 11447  2378  0008               	return
 11448  2379                     __end_of_floorf:	
 11449                           
 11450                           	psect	text22
 11451  294F                     __ptext22:	
 11452 ;; *************** function ___fpclassifyf *****************
 11453 ;; Defined at:
 11454 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
 11455 ;; Parameters:    Size  Location     Type
 11456 ;;  x               4    1[COMMON] float 
 11457 ;; Auto vars:     Size  Location     Type
 11458 ;;  u               4    2[BANK0 ] struct .
 11459 ;;  e               2    0[BANK0 ] int 
 11460 ;; Return value:  Size  Location     Type
 11461 ;;                  2    1[COMMON] int 
 11462 ;; Registers used:
 11463 ;;		wreg, status,2, status,0
 11464 ;; Tracked objects:
 11465 ;;		On entry : 0/0
 11466 ;;		On exit  : 0/0
 11467 ;;		Unchanged: 0/0
 11468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11469 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11470 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11471 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11472 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11473 ;;Total ram usage:       16 bytes
 11474 ;; Hardware stack levels used:    1
 11475 ;; Hardware stack levels required when called:    1
 11476 ;; This function calls:
 11477 ;;		Nothing
 11478 ;; This function is called by:
 11479 ;;		_efgtoa
 11480 ;; This function uses a non-reentrant model
 11481 ;;
 11482                           
 11483                           
 11484                           ;psect for function ___fpclassifyf
 11485  294F                     ___fpclassifyf:	
 11486                           
 11487                           ;incstack = 0
 11488                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
 11489  294F  0023               	movlb	3	; select bank3
 11490  2950  0831               	movf	(___fpclassifyf@F463+3)^(0+384),w
 11491  2951  0020               	movlb	0	; select bank0
 11492  2952  00A5               	movwf	___fpclassifyf@u+3
 11493  2953  0023               	movlb	3	; select bank3
 11494  2954  0830               	movf	(___fpclassifyf@F463+2)^(0+384),w
 11495  2955  0020               	movlb	0	; select bank0
 11496  2956  00A4               	movwf	___fpclassifyf@u+2
 11497  2957  0023               	movlb	3	; select bank3
 11498  2958  082F               	movf	(___fpclassifyf@F463+1)^(0+384),w
 11499  2959  0020               	movlb	0	; select bank0
 11500  295A  00A3               	movwf	___fpclassifyf@u+1
 11501  295B  0023               	movlb	3	; select bank3
 11502  295C  082E               	movf	___fpclassifyf@F463^(0+384),w
 11503  295D  0020               	movlb	0	; select bank0
 11504  295E  00A2               	movwf	___fpclassifyf@u
 11505  295F  0874               	movf	___fpclassifyf@x+3,w
 11506  2960  00A5               	movwf	___fpclassifyf@u+3
 11507  2961  0873               	movf	___fpclassifyf@x+2,w
 11508  2962  00A4               	movwf	___fpclassifyf@u+2
 11509  2963  0872               	movf	___fpclassifyf@x+1,w
 11510  2964  00A3               	movwf	___fpclassifyf@u+1
 11511  2965  0871               	movf	___fpclassifyf@x,w
 11512  2966  00A2               	movwf	___fpclassifyf@u
 11513  2967  0822               	movf	___fpclassifyf@u,w
 11514  2968  00F5               	movwf	??___fpclassifyf
 11515  2969  0823               	movf	___fpclassifyf@u+1,w
 11516  296A  00F6               	movwf	??___fpclassifyf+1
 11517  296B  0824               	movf	___fpclassifyf@u+2,w
 11518  296C  00F7               	movwf	??___fpclassifyf+2
 11519  296D  0825               	movf	___fpclassifyf@u+3,w
 11520  296E  00F8               	movwf	??___fpclassifyf+3
 11521  296F  3017               	movlw	23
 11522  2970                     u5345:	
 11523  2970  36F8               	lsrf	??___fpclassifyf+3,f
 11524  2971  0CF7               	rrf	??___fpclassifyf+2,f
 11525  2972  0CF6               	rrf	??___fpclassifyf+1,f
 11526  2973  0CF5               	rrf	??___fpclassifyf,f
 11527  2974  0B89               	decfsz	9,f
 11528  2975  2970               	goto	u5345
 11529  2976  30FF               	movlw	255
 11530  2977  0575               	andwf	??___fpclassifyf,w
 11531  2978  00A0               	movwf	___fpclassifyf@e
 11532  2979  3000               	movlw	0
 11533  297A  0576               	andwf	??___fpclassifyf+1,w
 11534  297B  00A1               	movwf	___fpclassifyf@e+1
 11535  297C  0820               	movf	___fpclassifyf@e,w
 11536  297D  0421               	iorwf	___fpclassifyf@e+1,w
 11537  297E  1D03               	btfss	3,2
 11538  297F  299F               	goto	l4508
 11539  2980  0822               	movf	___fpclassifyf@u,w
 11540  2981  00F5               	movwf	??___fpclassifyf
 11541  2982  0823               	movf	___fpclassifyf@u+1,w
 11542  2983  00F6               	movwf	??___fpclassifyf+1
 11543  2984  0824               	movf	___fpclassifyf@u+2,w
 11544  2985  00F7               	movwf	??___fpclassifyf+2
 11545  2986  0825               	movf	___fpclassifyf@u+3,w
 11546  2987  00F8               	movwf	??___fpclassifyf+3
 11547  2988  3001               	movlw	1
 11548  2989                     u5365:	
 11549  2989  35F5               	lslf	??___fpclassifyf,f
 11550  298A  0DF6               	rlf	??___fpclassifyf+1,f
 11551  298B  0DF7               	rlf	??___fpclassifyf+2,f
 11552  298C  0DF8               	rlf	??___fpclassifyf+3,f
 11553  298D  0B89               	decfsz	9,f
 11554  298E  2989               	goto	u5365
 11555  298F  0878               	movf	??___fpclassifyf+3,w
 11556  2990  0477               	iorwf	??___fpclassifyf+2,w
 11557  2991  0476               	iorwf	??___fpclassifyf+1,w
 11558  2992  0475               	iorwf	??___fpclassifyf,w
 11559  2993  1D03               	skipz
 11560  2994  299A               	goto	l4504
 11561  2995  3002               	movlw	2
 11562  2996  00F1               	movwf	?___fpclassifyf
 11563  2997  3000               	movlw	0
 11564  2998  00F2               	movwf	?___fpclassifyf+1
 11565  2999  0008               	return
 11566  299A                     l4504:	
 11567  299A  3003               	movlw	3
 11568  299B  00F1               	movwf	?___fpclassifyf
 11569  299C  3000               	movlw	0
 11570  299D  00F2               	movwf	?___fpclassifyf+1
 11571  299E  0008               	return
 11572  299F                     l4508:	
 11573  299F  0A20               	incf	___fpclassifyf@e,w
 11574  29A0  0421               	iorwf	___fpclassifyf@e+1,w
 11575  29A1  1D03               	btfss	3,2
 11576  29A2  29C2               	goto	l4514
 11577  29A3  0822               	movf	___fpclassifyf@u,w
 11578  29A4  00F5               	movwf	??___fpclassifyf
 11579  29A5  0823               	movf	___fpclassifyf@u+1,w
 11580  29A6  00F6               	movwf	??___fpclassifyf+1
 11581  29A7  0824               	movf	___fpclassifyf@u+2,w
 11582  29A8  00F7               	movwf	??___fpclassifyf+2
 11583  29A9  0825               	movf	___fpclassifyf@u+3,w
 11584  29AA  00F8               	movwf	??___fpclassifyf+3
 11585  29AB  3009               	movlw	9
 11586  29AC                     u5395:	
 11587  29AC  35F5               	lslf	??___fpclassifyf,f
 11588  29AD  0DF6               	rlf	??___fpclassifyf+1,f
 11589  29AE  0DF7               	rlf	??___fpclassifyf+2,f
 11590  29AF  0DF8               	rlf	??___fpclassifyf+3,f
 11591  29B0  0B89               	decfsz	9,f
 11592  29B1  29AC               	goto	u5395
 11593  29B2  0878               	movf	??___fpclassifyf+3,w
 11594  29B3  0477               	iorwf	??___fpclassifyf+2,w
 11595  29B4  0476               	iorwf	??___fpclassifyf+1,w
 11596  29B5  0475               	iorwf	??___fpclassifyf,w
 11597  29B6  1D03               	btfss	3,2
 11598  29B7  29BA               	goto	u5400
 11599  29B8  3001               	movlw	1
 11600  29B9  29BB               	goto	u5410
 11601  29BA                     u5400:	
 11602  29BA  3000               	movlw	0
 11603  29BB                     u5410:	
 11604  29BB  00F9               	movwf	??___fpclassifyf+4
 11605  29BC  01FA               	clrf	??___fpclassifyf+5
 11606  29BD  0879               	movf	??___fpclassifyf+4,w
 11607  29BE  00F1               	movwf	?___fpclassifyf
 11608  29BF  087A               	movf	??___fpclassifyf+5,w
 11609  29C0  00F2               	movwf	?___fpclassifyf+1
 11610  29C1  0008               	return
 11611  29C2                     l4514:	
 11612  29C2  3004               	movlw	4
 11613  29C3  00F1               	movwf	?___fpclassifyf
 11614  29C4  3000               	movlw	0
 11615  29C5  00F2               	movwf	?___fpclassifyf+1
 11616  29C6  0008               	return
 11617  29C7                     __end_of___fpclassifyf:	
 11618                           
 11619                           	psect	text23
 11620  349A                     __ptext23:	
 11621 ;; *************** function ___flsub *****************
 11622 ;; Defined at:
 11623 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 11624 ;; Parameters:    Size  Location     Type
 11625 ;;  a               4   32[BANK0 ] int 
 11626 ;;  b               4   36[BANK0 ] int 
 11627 ;; Auto vars:     Size  Location     Type
 11628 ;;		None
 11629 ;; Return value:  Size  Location     Type
 11630 ;;                  4   32[BANK0 ] int 
 11631 ;; Registers used:
 11632 ;;		wreg, status,2, status,0, pclath, cstack
 11633 ;; Tracked objects:
 11634 ;;		On entry : 0/0
 11635 ;;		On exit  : 0/0
 11636 ;;		Unchanged: 0/0
 11637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11638 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11641 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11642 ;;Total ram usage:        8 bytes
 11643 ;; Hardware stack levels used:    1
 11644 ;; Hardware stack levels required when called:    2
 11645 ;; This function calls:
 11646 ;;		___fladd
 11647 ;; This function is called by:
 11648 ;;		_efgtoa
 11649 ;; This function uses a non-reentrant model
 11650 ;;
 11651                           
 11652                           
 11653                           ;psect for function ___flsub
 11654  349A                     ___flsub:	
 11655                           
 11656                           ;incstack = 0
 11657                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 11658  349A  3080               	movlw	128
 11659  349B  0020               	movlb	0	; select bank0
 11660  349C  06C3               	xorwf	___flsub@a+3,f
 11661  349D  0847               	movf	___flsub@b+3,w
 11662  349E  00F4               	movwf	___fladd@b+3
 11663  349F  0846               	movf	___flsub@b+2,w
 11664  34A0  00F3               	movwf	___fladd@b+2
 11665  34A1  0845               	movf	___flsub@b+1,w
 11666  34A2  00F2               	movwf	___fladd@b+1
 11667  34A3  0844               	movf	___flsub@b,w
 11668  34A4  00F1               	movwf	___fladd@b
 11669  34A5  0843               	movf	___flsub@a+3,w
 11670  34A6  00F8               	movwf	___fladd@a+3
 11671  34A7  0842               	movf	___flsub@a+2,w
 11672  34A8  00F7               	movwf	___fladd@a+2
 11673  34A9  0841               	movf	___flsub@a+1,w
 11674  34AA  00F6               	movwf	___fladd@a+1
 11675  34AB  0840               	movf	___flsub@a,w
 11676  34AC  00F5               	movwf	___fladd@a
 11677  34AD  319E  261E         	fcall	___fladd
 11678  34AF  0874               	movf	?___fladd+3,w
 11679  34B0  0020               	movlb	0	; select bank0
 11680  34B1  00C3               	movwf	?___flsub+3
 11681  34B2  0873               	movf	?___fladd+2,w
 11682  34B3  00C2               	movwf	?___flsub+2
 11683  34B4  0872               	movf	?___fladd+1,w
 11684  34B5  00C1               	movwf	?___flsub+1
 11685  34B6  0871               	movf	?___fladd,w
 11686  34B7  00C0               	movwf	?___flsub
 11687  34B8  0008               	return
 11688  34B9                     __end_of___flsub:	
 11689                           
 11690                           	psect	text24
 11691  1E1E                     __ptext24:	
 11692 ;; *************** function ___fladd *****************
 11693 ;; Defined at:
 11694 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 11695 ;; Parameters:    Size  Location     Type
 11696 ;;  b               4    1[COMMON] int 
 11697 ;;  a               4    5[COMMON] int 
 11698 ;; Auto vars:     Size  Location     Type
 11699 ;;  grs             1   11[BANK0 ] unsigned char 
 11700 ;;  bexp            1   10[BANK0 ] unsigned char 
 11701 ;;  aexp            1    9[BANK0 ] unsigned char 
 11702 ;;  signs           1    8[BANK0 ] unsigned char 
 11703 ;; Return value:  Size  Location     Type
 11704 ;;                  4    1[COMMON] unsigned char 
 11705 ;; Registers used:
 11706 ;;		wreg, status,2, status,0
 11707 ;; Tracked objects:
 11708 ;;		On entry : 0/0
 11709 ;;		On exit  : 0/0
 11710 ;;		Unchanged: 0/0
 11711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11712 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11713 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11714 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11715 ;;      Totals:         8      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11716 ;;Total ram usage:       20 bytes
 11717 ;; Hardware stack levels used:    1
 11718 ;; Hardware stack levels required when called:    1
 11719 ;; This function calls:
 11720 ;;		Nothing
 11721 ;; This function is called by:
 11722 ;;		_efgtoa
 11723 ;;		___flsub
 11724 ;; This function uses a non-reentrant model
 11725 ;;
 11726                           
 11727                           
 11728                           ;psect for function ___fladd
 11729  1E1E                     ___fladd:	
 11730                           
 11731                           ;incstack = 0
 11732                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 11733  1E1E  0874               	movf	___fladd@b+3,w
 11734  1E1F  3980               	andlw	128
 11735  1E20  0020               	movlb	0	; select bank0
 11736  1E21  00A0               	movwf	??___fladd
 11737  1E22  0820               	movf	??___fladd,w
 11738  1E23  00A8               	movwf	___fladd@signs
 11739  1E24  3574               	lslf	___fladd@b+3,w
 11740  1E25  00A0               	movwf	??___fladd
 11741  1E26  0820               	movf	??___fladd,w
 11742  1E27  00AA               	movwf	___fladd@bexp
 11743  1E28  1BF3               	btfsc	___fladd@b+2,7
 11744  1E29  142A               	bsf	___fladd@bexp,0
 11745  1E2A  082A               	movf	___fladd@bexp,w
 11746  1E2B  1903               	btfsc	3,2
 11747  1E2C  2E3B               	goto	l6886
 11748  1E2D  0A2A               	incf	___fladd@bexp,w
 11749  1E2E  1D03               	btfss	3,2
 11750  1E2F  2E38               	goto	l6882
 11751  1E30  3000               	movlw	0
 11752  1E31  00F4               	movwf	___fladd@b+3
 11753  1E32  3000               	movlw	0
 11754  1E33  00F3               	movwf	___fladd@b+2
 11755  1E34  3000               	movlw	0
 11756  1E35  00F2               	movwf	___fladd@b+1
 11757  1E36  3000               	movlw	0
 11758  1E37  00F1               	movwf	___fladd@b
 11759  1E38                     l6882:	
 11760  1E38  17F3               	bsf	___fladd@b+2,7
 11761  1E39  01F4               	clrf	___fladd@b+3
 11762  1E3A  2E43               	goto	l6888
 11763  1E3B                     l6886:	
 11764  1E3B  3000               	movlw	0
 11765  1E3C  00F4               	movwf	___fladd@b+3
 11766  1E3D  3000               	movlw	0
 11767  1E3E  00F3               	movwf	___fladd@b+2
 11768  1E3F  3000               	movlw	0
 11769  1E40  00F2               	movwf	___fladd@b+1
 11770  1E41  3000               	movlw	0
 11771  1E42  00F1               	movwf	___fladd@b
 11772  1E43                     l6888:	
 11773  1E43  0878               	movf	___fladd@a+3,w
 11774  1E44  3980               	andlw	128
 11775  1E45  00A0               	movwf	??___fladd
 11776  1E46  0820               	movf	??___fladd,w
 11777  1E47  00A9               	movwf	___fladd@aexp
 11778  1E48  0829               	movf	___fladd@aexp,w
 11779  1E49  0628               	xorwf	___fladd@signs,w
 11780  1E4A  1D03               	btfss	3,2
 11781  1E4B  1728               	bsf	___fladd@signs,6
 11782  1E4C  3578               	lslf	___fladd@a+3,w
 11783  1E4D  00A0               	movwf	??___fladd
 11784  1E4E  0820               	movf	??___fladd,w
 11785  1E4F  00A9               	movwf	___fladd@aexp
 11786  1E50  1BF7               	btfsc	___fladd@a+2,7
 11787  1E51  1429               	bsf	___fladd@aexp,0
 11788  1E52  0829               	movf	___fladd@aexp,w
 11789  1E53  1903               	btfsc	3,2
 11790  1E54  2E63               	goto	l6910
 11791  1E55  0A29               	incf	___fladd@aexp,w
 11792  1E56  1D03               	btfss	3,2
 11793  1E57  2E60               	goto	l6906
 11794  1E58  3000               	movlw	0
 11795  1E59  00F8               	movwf	___fladd@a+3
 11796  1E5A  3000               	movlw	0
 11797  1E5B  00F7               	movwf	___fladd@a+2
 11798  1E5C  3000               	movlw	0
 11799  1E5D  00F6               	movwf	___fladd@a+1
 11800  1E5E  3000               	movlw	0
 11801  1E5F  00F5               	movwf	___fladd@a
 11802  1E60                     l6906:	
 11803  1E60  17F7               	bsf	___fladd@a+2,7
 11804  1E61  01F8               	clrf	___fladd@a+3
 11805  1E62  2E6B               	goto	l1155
 11806  1E63                     l6910:	
 11807  1E63  3000               	movlw	0
 11808  1E64  00F8               	movwf	___fladd@a+3
 11809  1E65  3000               	movlw	0
 11810  1E66  00F7               	movwf	___fladd@a+2
 11811  1E67  3000               	movlw	0
 11812  1E68  00F6               	movwf	___fladd@a+1
 11813  1E69  3000               	movlw	0
 11814  1E6A  00F5               	movwf	___fladd@a
 11815  1E6B                     l1155:	
 11816  1E6B  082A               	movf	___fladd@bexp,w
 11817  1E6C  0229               	subwf	___fladd@aexp,w
 11818  1E6D  1803               	skipnc
 11819  1E6E  2EB1               	goto	l6946
 11820  1E6F  1F28               	btfss	___fladd@signs,6
 11821  1E70  2E75               	goto	l6916
 11822  1E71  3080               	movlw	128
 11823  1E72  00A0               	movwf	??___fladd
 11824  1E73  0820               	movf	??___fladd,w
 11825  1E74  06A8               	xorwf	___fladd@signs,f
 11826  1E75                     l6916:	
 11827  1E75  082A               	movf	___fladd@bexp,w
 11828  1E76  00A0               	movwf	??___fladd
 11829  1E77  0820               	movf	??___fladd,w
 11830  1E78  00AB               	movwf	___fladd@grs
 11831  1E79  0829               	movf	___fladd@aexp,w
 11832  1E7A  00A0               	movwf	??___fladd
 11833  1E7B  0820               	movf	??___fladd,w
 11834  1E7C  00AA               	movwf	___fladd@bexp
 11835  1E7D  082B               	movf	___fladd@grs,w
 11836  1E7E  00A0               	movwf	??___fladd
 11837  1E7F  0820               	movf	??___fladd,w
 11838  1E80  00A9               	movwf	___fladd@aexp
 11839  1E81  0871               	movf	___fladd@b,w
 11840  1E82  00A0               	movwf	??___fladd
 11841  1E83  0820               	movf	??___fladd,w
 11842  1E84  00AB               	movwf	___fladd@grs
 11843  1E85  0875               	movf	___fladd@a,w
 11844  1E86  00A0               	movwf	??___fladd
 11845  1E87  0820               	movf	??___fladd,w
 11846  1E88  00F1               	movwf	___fladd@b
 11847  1E89  082B               	movf	___fladd@grs,w
 11848  1E8A  00A0               	movwf	??___fladd
 11849  1E8B  0820               	movf	??___fladd,w
 11850  1E8C  00F5               	movwf	___fladd@a
 11851  1E8D  0872               	movf	___fladd@b+1,w
 11852  1E8E  00A0               	movwf	??___fladd
 11853  1E8F  0820               	movf	??___fladd,w
 11854  1E90  00AB               	movwf	___fladd@grs
 11855  1E91  0876               	movf	___fladd@a+1,w
 11856  1E92  00A0               	movwf	??___fladd
 11857  1E93  0820               	movf	??___fladd,w
 11858  1E94  00F2               	movwf	___fladd@b+1
 11859  1E95  082B               	movf	___fladd@grs,w
 11860  1E96  00A0               	movwf	??___fladd
 11861  1E97  0820               	movf	??___fladd,w
 11862  1E98  00F6               	movwf	___fladd@a+1
 11863  1E99  0873               	movf	___fladd@b+2,w
 11864  1E9A  00A0               	movwf	??___fladd
 11865  1E9B  0820               	movf	??___fladd,w
 11866  1E9C  00AB               	movwf	___fladd@grs
 11867  1E9D  0877               	movf	___fladd@a+2,w
 11868  1E9E  00A0               	movwf	??___fladd
 11869  1E9F  0820               	movf	??___fladd,w
 11870  1EA0  00F3               	movwf	___fladd@b+2
 11871  1EA1  082B               	movf	___fladd@grs,w
 11872  1EA2  00A0               	movwf	??___fladd
 11873  1EA3  0820               	movf	??___fladd,w
 11874  1EA4  00F7               	movwf	___fladd@a+2
 11875  1EA5  0874               	movf	___fladd@b+3,w
 11876  1EA6  00A0               	movwf	??___fladd
 11877  1EA7  0820               	movf	??___fladd,w
 11878  1EA8  00AB               	movwf	___fladd@grs
 11879  1EA9  0878               	movf	___fladd@a+3,w
 11880  1EAA  00A0               	movwf	??___fladd
 11881  1EAB  0820               	movf	??___fladd,w
 11882  1EAC  00F4               	movwf	___fladd@b+3
 11883  1EAD  082B               	movf	___fladd@grs,w
 11884  1EAE  00A0               	movwf	??___fladd
 11885  1EAF  0820               	movf	??___fladd,w
 11886  1EB0  00F8               	movwf	___fladd@a+3
 11887  1EB1                     l6946:	
 11888  1EB1  01AB               	clrf	___fladd@grs
 11889  1EB2  0829               	movf	___fladd@aexp,w
 11890  1EB3  00A0               	movwf	??___fladd
 11891  1EB4  01A1               	clrf	??___fladd+1
 11892  1EB5  0821               	movf	??___fladd+1,w
 11893  1EB6  00A3               	movwf	??___fladd+3
 11894  1EB7  082A               	movf	___fladd@bexp,w
 11895  1EB8  0220               	subwf	??___fladd,w
 11896  1EB9  00A2               	movwf	??___fladd+2
 11897  1EBA  1C03               	skipc
 11898  1EBB  03A3               	decf	??___fladd+3,f
 11899  1EBC  0823               	movf	??___fladd+3,w
 11900  1EBD  3A80               	xorlw	128
 11901  1EBE  00A4               	movwf	??___fladd+4
 11902  1EBF  3080               	movlw	128
 11903  1EC0  0224               	subwf	??___fladd+4,w
 11904  1EC1  1D03               	skipz
 11905  1EC2  2EC5               	goto	u9525
 11906  1EC3  301A               	movlw	26
 11907  1EC4  0222               	subwf	??___fladd+2,w
 11908  1EC5                     u9525:	
 11909  1EC5  1C03               	skipc
 11910  1EC6  2EF9               	goto	l6964
 11911  1EC7  0874               	movf	___fladd@b+3,w
 11912  1EC8  0473               	iorwf	___fladd@b+2,w
 11913  1EC9  0472               	iorwf	___fladd@b+1,w
 11914  1ECA  0471               	iorwf	___fladd@b,w
 11915  1ECB  1903               	btfsc	3,2
 11916  1ECC  2ECF               	goto	u9530
 11917  1ECD  3001               	movlw	1
 11918  1ECE  2ED0               	goto	u9540
 11919  1ECF                     u9530:	
 11920  1ECF  3000               	movlw	0
 11921  1ED0                     u9540:	
 11922  1ED0  0020               	movlb	0	; select bank0
 11923  1ED1  00A0               	movwf	??___fladd
 11924  1ED2  0820               	movf	??___fladd,w
 11925  1ED3  00AB               	movwf	___fladd@grs
 11926  1ED4  3000               	movlw	0
 11927  1ED5  00F4               	movwf	___fladd@b+3
 11928  1ED6  3000               	movlw	0
 11929  1ED7  00F3               	movwf	___fladd@b+2
 11930  1ED8  3000               	movlw	0
 11931  1ED9  00F2               	movwf	___fladd@b+1
 11932  1EDA  3000               	movlw	0
 11933  1EDB  00F1               	movwf	___fladd@b
 11934  1EDC  0829               	movf	___fladd@aexp,w
 11935  1EDD  00A0               	movwf	??___fladd
 11936  1EDE  0820               	movf	??___fladd,w
 11937  1EDF  00AA               	movwf	___fladd@bexp
 11938  1EE0  2EFE               	goto	l1159
 11939  1EE1                     l1161:	
 11940  1EE1  1C2B               	btfss	___fladd@grs,0
 11941  1EE2  2EE9               	goto	l6954
 11942  1EE3  362B               	lsrf	___fladd@grs,w
 11943  1EE4  3801               	iorlw	1
 11944  1EE5  00A0               	movwf	??___fladd
 11945  1EE6  0820               	movf	??___fladd,w
 11946  1EE7  00AB               	movwf	___fladd@grs
 11947  1EE8  2EEB               	goto	l6956
 11948  1EE9                     l6954:	
 11949  1EE9  1003               	clrc
 11950  1EEA  0CAB               	rrf	___fladd@grs,f
 11951  1EEB                     l6956:	
 11952  1EEB  1871               	btfsc	___fladd@b,0
 11953  1EEC  17AB               	bsf	___fladd@grs,7
 11954  1EED  3001               	movlw	1
 11955  1EEE  00A0               	movwf	??___fladd
 11956  1EEF                     u9575:	
 11957  1EEF  37F4               	asrf	___fladd@b+3,f
 11958  1EF0  0CF3               	rrf	___fladd@b+2,f
 11959  1EF1  0CF2               	rrf	___fladd@b+1,f
 11960  1EF2  0CF1               	rrf	___fladd@b,f
 11961  1EF3  0BA0               	decfsz	??___fladd& (0+127),f
 11962  1EF4  2EEF               	goto	u9575
 11963  1EF5  3001               	movlw	1
 11964  1EF6  00A0               	movwf	??___fladd
 11965  1EF7  0820               	movf	??___fladd,w
 11966  1EF8  07AA               	addwf	___fladd@bexp,f
 11967  1EF9                     l6964:	
 11968  1EF9  0020               	movlb	0	; select bank0
 11969  1EFA  0829               	movf	___fladd@aexp,w
 11970  1EFB  022A               	subwf	___fladd@bexp,w
 11971  1EFC  1C03               	skipc
 11972  1EFD  2EE1               	goto	l1161
 11973  1EFE                     l1159:	
 11974  1EFE  1B28               	btfsc	___fladd@signs,6
 11975  1EFF  2F2F               	goto	l6990
 11976  1F00  082A               	movf	___fladd@bexp,w
 11977  1F01  1D03               	btfss	3,2
 11978  1F02  2F0C               	goto	l6972
 11979  1F03  3000               	movlw	0
 11980  1F04  00F4               	movwf	?___fladd+3
 11981  1F05  3000               	movlw	0
 11982  1F06  00F3               	movwf	?___fladd+2
 11983  1F07  3000               	movlw	0
 11984  1F08  00F2               	movwf	?___fladd+1
 11985  1F09  3000               	movlw	0
 11986  1F0A  00F1               	movwf	?___fladd
 11987  1F0B  0008               	return
 11988  1F0C                     l6972:	
 11989  1F0C  0875               	movf	___fladd@a,w
 11990  1F0D  07F1               	addwf	___fladd@b,f
 11991  1F0E  0876               	movf	___fladd@a+1,w
 11992  1F0F  3DF2               	addwfc	___fladd@b+1,f
 11993  1F10  0877               	movf	___fladd@a+2,w
 11994  1F11  3DF3               	addwfc	___fladd@b+2,f
 11995  1F12  0878               	movf	___fladd@a+3,w
 11996  1F13  3DF4               	addwfc	___fladd@b+3,f
 11997  1F14  1C74               	btfss	___fladd@b+3,0
 11998  1F15  2FA9               	goto	l7024
 11999  1F16  1C2B               	btfss	___fladd@grs,0
 12000  1F17  2F1E               	goto	l6980
 12001  1F18  362B               	lsrf	___fladd@grs,w
 12002  1F19  3801               	iorlw	1
 12003  1F1A  00A0               	movwf	??___fladd
 12004  1F1B  0820               	movf	??___fladd,w
 12005  1F1C  00AB               	movwf	___fladd@grs
 12006  1F1D  2F20               	goto	l6982
 12007  1F1E                     l6980:	
 12008  1F1E  1003               	clrc
 12009  1F1F  0CAB               	rrf	___fladd@grs,f
 12010  1F20                     l6982:	
 12011  1F20  1871               	btfsc	___fladd@b,0
 12012  1F21  17AB               	bsf	___fladd@grs,7
 12013  1F22  3001               	movlw	1
 12014  1F23  00A0               	movwf	??___fladd
 12015  1F24                     u9645:	
 12016  1F24  37F4               	asrf	___fladd@b+3,f
 12017  1F25  0CF3               	rrf	___fladd@b+2,f
 12018  1F26  0CF2               	rrf	___fladd@b+1,f
 12019  1F27  0CF1               	rrf	___fladd@b,f
 12020  1F28  0BA0               	decfsz	??___fladd& (0+127),f
 12021  1F29  2F24               	goto	u9645
 12022  1F2A  3001               	movlw	1
 12023  1F2B  00A0               	movwf	??___fladd
 12024  1F2C  0820               	movf	??___fladd,w
 12025  1F2D  07AA               	addwf	___fladd@bexp,f
 12026  1F2E  2FA9               	goto	l7024
 12027  1F2F                     l6990:	
 12028  1F2F  0874               	movf	___fladd@b+3,w
 12029  1F30  3A80               	xorlw	128
 12030  1F31  00A0               	movwf	??___fladd
 12031  1F32  0878               	movf	___fladd@a+3,w
 12032  1F33  3A80               	xorlw	128
 12033  1F34  0220               	subwf	??___fladd,w
 12034  1F35  1D03               	skipz
 12035  1F36  2F41               	goto	u9653
 12036  1F37  0877               	movf	___fladd@a+2,w
 12037  1F38  0273               	subwf	___fladd@b+2,w
 12038  1F39  1D03               	skipz
 12039  1F3A  2F41               	goto	u9653
 12040  1F3B  0876               	movf	___fladd@a+1,w
 12041  1F3C  0272               	subwf	___fladd@b+1,w
 12042  1F3D  1D03               	skipz
 12043  1F3E  2F41               	goto	u9653
 12044  1F3F  0875               	movf	___fladd@a,w
 12045  1F40  0271               	subwf	___fladd@b,w
 12046  1F41                     u9653:	
 12047  1F41  1803               	skipnc
 12048  1F42  2F79               	goto	l7000
 12049  1F43  30FF               	movlw	255
 12050  1F44  00A0               	movwf	??___fladd
 12051  1F45  30FF               	movlw	255
 12052  1F46  00A1               	movwf	??___fladd+1
 12053  1F47  30FF               	movlw	255
 12054  1F48  00A2               	movwf	??___fladd+2
 12055  1F49  30FF               	movlw	255
 12056  1F4A  00A3               	movwf	??___fladd+3
 12057  1F4B  0871               	movf	___fladd@b,w
 12058  1F4C  0275               	subwf	___fladd@a,w
 12059  1F4D  00A4               	movwf	??___fladd+4
 12060  1F4E  0872               	movf	___fladd@b+1,w
 12061  1F4F  3B76               	subwfb	___fladd@a+1,w
 12062  1F50  00A5               	movwf	??___fladd+5
 12063  1F51  0873               	movf	___fladd@b+2,w
 12064  1F52  3B77               	subwfb	___fladd@a+2,w
 12065  1F53  00A6               	movwf	??___fladd+6
 12066  1F54  0874               	movf	___fladd@b+3,w
 12067  1F55  3B78               	subwfb	___fladd@a+3,w
 12068  1F56  00A7               	movwf	??___fladd+7
 12069  1F57  0824               	movf	??___fladd+4,w
 12070  1F58  07A0               	addwf	??___fladd,f
 12071  1F59  0825               	movf	??___fladd+5,w
 12072  1F5A  3DA1               	addwfc	??___fladd+1,f
 12073  1F5B  0826               	movf	??___fladd+6,w
 12074  1F5C  3DA2               	addwfc	??___fladd+2,f
 12075  1F5D  0827               	movf	??___fladd+7,w
 12076  1F5E  3DA3               	addwfc	??___fladd+3,f
 12077  1F5F  0823               	movf	??___fladd+3,w
 12078  1F60  00F4               	movwf	___fladd@b+3
 12079  1F61  0822               	movf	??___fladd+2,w
 12080  1F62  00F3               	movwf	___fladd@b+2
 12081  1F63  0821               	movf	??___fladd+1,w
 12082  1F64  00F2               	movwf	___fladd@b+1
 12083  1F65  0820               	movf	??___fladd,w
 12084  1F66  00F1               	movwf	___fladd@b
 12085  1F67  3080               	movlw	128
 12086  1F68  00A0               	movwf	??___fladd
 12087  1F69  0820               	movf	??___fladd,w
 12088  1F6A  06A8               	xorwf	___fladd@signs,f
 12089  1F6B  09AB               	comf	___fladd@grs,f
 12090  1F6C  0AAB               	incf	___fladd@grs,f
 12091  1F6D  082B               	movf	___fladd@grs,w
 12092  1F6E  1D03               	btfss	3,2
 12093  1F6F  2F81               	goto	l1176
 12094  1F70  3001               	movlw	1
 12095  1F71  07F1               	addwf	___fladd@b,f
 12096  1F72  3000               	movlw	0
 12097  1F73  3DF2               	addwfc	___fladd@b+1,f
 12098  1F74  3000               	movlw	0
 12099  1F75  3DF3               	addwfc	___fladd@b+2,f
 12100  1F76  3000               	movlw	0
 12101  1F77  3DF4               	addwfc	___fladd@b+3,f
 12102  1F78  2F81               	goto	l1176
 12103  1F79                     l7000:	
 12104  1F79  0875               	movf	___fladd@a,w
 12105  1F7A  02F1               	subwf	___fladd@b,f
 12106  1F7B  0876               	movf	___fladd@a+1,w
 12107  1F7C  3BF2               	subwfb	___fladd@b+1,f
 12108  1F7D  0877               	movf	___fladd@a+2,w
 12109  1F7E  3BF3               	subwfb	___fladd@b+2,f
 12110  1F7F  0878               	movf	___fladd@a+3,w
 12111  1F80  3BF4               	subwfb	___fladd@b+3,f
 12112  1F81                     l1176:	
 12113  1F81  0874               	movf	___fladd@b+3,w
 12114  1F82  0473               	iorwf	___fladd@b+2,w
 12115  1F83  0472               	iorwf	___fladd@b+1,w
 12116  1F84  0471               	iorwf	___fladd@b,w
 12117  1F85  1D03               	skipz
 12118  1F86  2FA7               	goto	l7022
 12119  1F87  082B               	movf	___fladd@grs,w
 12120  1F88  1D03               	btfss	3,2
 12121  1F89  2FA7               	goto	l7022
 12122  1F8A  3000               	movlw	0
 12123  1F8B  00F4               	movwf	?___fladd+3
 12124  1F8C  3000               	movlw	0
 12125  1F8D  00F3               	movwf	?___fladd+2
 12126  1F8E  3000               	movlw	0
 12127  1F8F  00F2               	movwf	?___fladd+1
 12128  1F90  3000               	movlw	0
 12129  1F91  00F1               	movwf	?___fladd
 12130  1F92  0008               	return
 12131  1F93                     l7008:	
 12132  1F93  3001               	movlw	1
 12133  1F94                     u9695:	
 12134  1F94  35F1               	lslf	___fladd@b,f
 12135  1F95  0DF2               	rlf	___fladd@b+1,f
 12136  1F96  0DF3               	rlf	___fladd@b+2,f
 12137  1F97  0DF4               	rlf	___fladd@b+3,f
 12138  1F98  0B89               	decfsz	9,f
 12139  1F99  2F94               	goto	u9695
 12140  1F9A  1BAB               	btfsc	___fladd@grs,7
 12141  1F9B  1471               	bsf	___fladd@b,0
 12142  1F9C  1C2B               	btfss	___fladd@grs,0
 12143  1F9D  2FA0               	goto	l7016
 12144  1F9E  1403               	setc
 12145  1F9F  2FA1               	goto	L11
 12146  1FA0                     l7016:	
 12147  1FA0  1003               	clrc
 12148  1FA1                     L11:	
 12149  1FA1  0DAB               	rlf	___fladd@grs,f
 12150  1FA2  082A               	movf	___fladd@bexp,w
 12151  1FA3  1903               	btfsc	3,2
 12152  1FA4  2FA7               	goto	l7022
 12153  1FA5  3001               	movlw	1
 12154  1FA6  02AA               	subwf	___fladd@bexp,f
 12155  1FA7                     l7022:	
 12156  1FA7  1FF3               	btfss	___fladd@b+2,7
 12157  1FA8  2F93               	goto	l7008
 12158  1FA9                     l7024:	
 12159  1FA9  01A9               	clrf	___fladd@aexp
 12160  1FAA  1FAB               	btfss	___fladd@grs,7
 12161  1FAB  2FB4               	goto	l7034
 12162  1FAC  082B               	movf	___fladd@grs,w
 12163  1FAD  397F               	andlw	127
 12164  1FAE  1903               	btfsc	3,2
 12165  1FAF  1871               	btfsc	___fladd@b,0
 12166  1FB0  2FB2               	goto	l7030
 12167  1FB1  2FB4               	goto	l7034
 12168  1FB2                     l7030:	
 12169  1FB2  01A9               	clrf	___fladd@aexp
 12170  1FB3  0AA9               	incf	___fladd@aexp,f
 12171  1FB4                     l7034:	
 12172  1FB4  0829               	movf	___fladd@aexp,w
 12173  1FB5  1903               	btfsc	3,2
 12174  1FB6  2FE0               	goto	l1189
 12175  1FB7  3001               	movlw	1
 12176  1FB8  07F1               	addwf	___fladd@b,f
 12177  1FB9  3000               	movlw	0
 12178  1FBA  3DF2               	addwfc	___fladd@b+1,f
 12179  1FBB  3000               	movlw	0
 12180  1FBC  3DF3               	addwfc	___fladd@b+2,f
 12181  1FBD  3000               	movlw	0
 12182  1FBE  3DF4               	addwfc	___fladd@b+3,f
 12183  1FBF  1C74               	btfss	___fladd@b+3,0
 12184  1FC0  2FE0               	goto	l1189
 12185  1FC1  0871               	movf	___fladd@b,w
 12186  1FC2  00A0               	movwf	??___fladd
 12187  1FC3  0872               	movf	___fladd@b+1,w
 12188  1FC4  00A1               	movwf	??___fladd+1
 12189  1FC5  0873               	movf	___fladd@b+2,w
 12190  1FC6  00A2               	movwf	??___fladd+2
 12191  1FC7  0874               	movf	___fladd@b+3,w
 12192  1FC8  00A3               	movwf	??___fladd+3
 12193  1FC9  3001               	movlw	1
 12194  1FCA  00A4               	movwf	??___fladd+4
 12195  1FCB                     u9795:	
 12196  1FCB  37A3               	asrf	??___fladd+3,f
 12197  1FCC  0CA2               	rrf	??___fladd+2,f
 12198  1FCD  0CA1               	rrf	??___fladd+1,f
 12199  1FCE  0CA0               	rrf	??___fladd,f
 12200  1FCF  0BA4               	decfsz	??___fladd+4,f
 12201  1FD0  2FCB               	goto	u9795
 12202  1FD1  0823               	movf	??___fladd+3,w
 12203  1FD2  00F4               	movwf	___fladd@b+3
 12204  1FD3  0822               	movf	??___fladd+2,w
 12205  1FD4  00F3               	movwf	___fladd@b+2
 12206  1FD5  0821               	movf	??___fladd+1,w
 12207  1FD6  00F2               	movwf	___fladd@b+1
 12208  1FD7  0820               	movf	??___fladd,w
 12209  1FD8  00F1               	movwf	___fladd@b
 12210  1FD9  0A2A               	incf	___fladd@bexp,w
 12211  1FDA  1903               	btfsc	3,2
 12212  1FDB  2FE0               	goto	l1189
 12213  1FDC  3001               	movlw	1
 12214  1FDD  00A0               	movwf	??___fladd
 12215  1FDE  0820               	movf	??___fladd,w
 12216  1FDF  07AA               	addwf	___fladd@bexp,f
 12217  1FE0                     l1189:	
 12218  1FE0  0A2A               	incf	___fladd@bexp,w
 12219  1FE1  1D03               	btfss	3,2
 12220  1FE2  082A               	movf	___fladd@bexp,w
 12221  1FE3  1D03               	btfss	3,2
 12222  1FE4  2FF0               	goto	l7052
 12223  1FE5  3000               	movlw	0
 12224  1FE6  00F4               	movwf	___fladd@b+3
 12225  1FE7  3000               	movlw	0
 12226  1FE8  00F3               	movwf	___fladd@b+2
 12227  1FE9  3000               	movlw	0
 12228  1FEA  00F2               	movwf	___fladd@b+1
 12229  1FEB  3000               	movlw	0
 12230  1FEC  00F1               	movwf	___fladd@b
 12231  1FED  082A               	movf	___fladd@bexp,w
 12232  1FEE  1903               	btfsc	3,2
 12233  1FEF  01A8               	clrf	___fladd@signs
 12234  1FF0                     l7052:	
 12235  1FF0  1C2A               	btfss	___fladd@bexp,0
 12236  1FF1  2FF4               	goto	l7056
 12237  1FF2  17F3               	bsf	___fladd@b+2,7
 12238  1FF3  2FF8               	goto	l1197
 12239  1FF4                     l7056:	
 12240  1FF4  307F               	movlw	127
 12241  1FF5  00A0               	movwf	??___fladd
 12242  1FF6  0820               	movf	??___fladd,w
 12243  1FF7  05F3               	andwf	___fladd@b+2,f
 12244  1FF8                     l1197:	
 12245  1FF8  362A               	lsrf	___fladd@bexp,w
 12246  1FF9  00A0               	movwf	??___fladd
 12247  1FFA  0820               	movf	??___fladd,w
 12248  1FFB  00F4               	movwf	___fladd@b+3
 12249  1FFC  1FA8               	btfss	___fladd@signs,7
 12250  1FFD  0008               	return
 12251  1FFE  17F4               	bsf	___fladd@b+3,7
 12252  1FFF  0008               	return
 12253  2000                     __end_of___fladd:	
 12254                           
 12255                           	psect	text25
 12256  3306                     __ptext25:	
 12257 ;; *************** function ___flneg *****************
 12258 ;; Defined at:
 12259 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
 12260 ;; Parameters:    Size  Location     Type
 12261 ;;  f1              4    1[COMMON] unsigned char 
 12262 ;; Auto vars:     Size  Location     Type
 12263 ;;		None
 12264 ;; Return value:  Size  Location     Type
 12265 ;;                  4    1[COMMON] unsigned char 
 12266 ;; Registers used:
 12267 ;;		wreg
 12268 ;; Tracked objects:
 12269 ;;		On entry : 0/0
 12270 ;;		On exit  : 0/0
 12271 ;;		Unchanged: 0/0
 12272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12273 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12276 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12277 ;;Total ram usage:        4 bytes
 12278 ;; Hardware stack levels used:    1
 12279 ;; Hardware stack levels required when called:    1
 12280 ;; This function calls:
 12281 ;;		Nothing
 12282 ;; This function is called by:
 12283 ;;		_efgtoa
 12284 ;; This function uses a non-reentrant model
 12285 ;;
 12286                           
 12287                           
 12288                           ;psect for function ___flneg
 12289  3306                     ___flneg:	
 12290                           
 12291                           ;incstack = 0
 12292                           ; Regs used in ___flneg: [wreg]
 12293  3306  0874               	movf	___flneg@f1+3,w
 12294  3307  0473               	iorwf	___flneg@f1+2,w
 12295  3308  0472               	iorwf	___flneg@f1+1,w
 12296  3309  0471               	iorwf	___flneg@f1,w
 12297  330A  1903               	skipnz
 12298  330B  0008               	return
 12299  330C  3080               	movlw	128
 12300  330D  06F4               	xorwf	___flneg@f1+3,f
 12301  330E  0008               	return
 12302  330F                     __end_of___flneg:	
 12303                           
 12304                           	psect	text26
 12305  3675                     __ptext26:	
 12306 ;; *************** function ___fleq *****************
 12307 ;; Defined at:
 12308 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
 12309 ;; Parameters:    Size  Location     Type
 12310 ;;  ff1             4    1[COMMON] unsigned char 
 12311 ;;  ff2             4    5[COMMON] unsigned char 
 12312 ;; Auto vars:     Size  Location     Type
 12313 ;;		None
 12314 ;; Return value:  Size  Location     Type
 12315 ;;		None               void
 12316 ;; Registers used:
 12317 ;;		wreg, status,2, status,0
 12318 ;; Tracked objects:
 12319 ;;		On entry : 0/0
 12320 ;;		On exit  : 0/0
 12321 ;;		Unchanged: 0/0
 12322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12323 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12325 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12326 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12327 ;;Total ram usage:       12 bytes
 12328 ;; Hardware stack levels used:    1
 12329 ;; Hardware stack levels required when called:    1
 12330 ;; This function calls:
 12331 ;;		Nothing
 12332 ;; This function is called by:
 12333 ;;		_efgtoa
 12334 ;; This function uses a non-reentrant model
 12335 ;;
 12336                           
 12337                           
 12338                           ;psect for function ___fleq
 12339  3675                     ___fleq:	
 12340                           
 12341                           ;incstack = 0
 12342                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 12343  3675  3000               	movlw	0
 12344  3676  0571               	andwf	___fleq@ff1,w
 12345  3677  0020               	movlb	0	; select bank0
 12346  3678  00A0               	movwf	??___fleq
 12347  3679  3000               	movlw	0
 12348  367A  0572               	andwf	___fleq@ff1+1,w
 12349  367B  00A1               	movwf	??___fleq+1
 12350  367C  3080               	movlw	128
 12351  367D  0573               	andwf	___fleq@ff1+2,w
 12352  367E  00A2               	movwf	??___fleq+2
 12353  367F  307F               	movlw	127
 12354  3680  0574               	andwf	___fleq@ff1+3,w
 12355  3681  00A3               	movwf	??___fleq+3
 12356  3682  0823               	movf	??___fleq+3,w
 12357  3683  0422               	iorwf	??___fleq+2,w
 12358  3684  0421               	iorwf	??___fleq+1,w
 12359  3685  0420               	iorwf	??___fleq,w
 12360  3686  1D03               	skipz
 12361  3687  2E90               	goto	l1023
 12362  3688  3000               	movlw	0
 12363  3689  00F4               	movwf	___fleq@ff1+3
 12364  368A  3000               	movlw	0
 12365  368B  00F3               	movwf	___fleq@ff1+2
 12366  368C  3000               	movlw	0
 12367  368D  00F2               	movwf	___fleq@ff1+1
 12368  368E  3000               	movlw	0
 12369  368F  00F1               	movwf	___fleq@ff1
 12370  3690                     l1023:	
 12371  3690  3000               	movlw	0
 12372  3691  0575               	andwf	___fleq@ff2,w
 12373  3692  00A0               	movwf	??___fleq
 12374  3693  3000               	movlw	0
 12375  3694  0576               	andwf	___fleq@ff2+1,w
 12376  3695  00A1               	movwf	??___fleq+1
 12377  3696  3080               	movlw	128
 12378  3697  0577               	andwf	___fleq@ff2+2,w
 12379  3698  00A2               	movwf	??___fleq+2
 12380  3699  307F               	movlw	127
 12381  369A  0578               	andwf	___fleq@ff2+3,w
 12382  369B  00A3               	movwf	??___fleq+3
 12383  369C  0823               	movf	??___fleq+3,w
 12384  369D  0422               	iorwf	??___fleq+2,w
 12385  369E  0421               	iorwf	??___fleq+1,w
 12386  369F  0420               	iorwf	??___fleq,w
 12387  36A0  1D03               	skipz
 12388  36A1  2EAA               	goto	l1024
 12389  36A2  3000               	movlw	0
 12390  36A3  00F8               	movwf	___fleq@ff2+3
 12391  36A4  3000               	movlw	0
 12392  36A5  00F7               	movwf	___fleq@ff2+2
 12393  36A6  3000               	movlw	0
 12394  36A7  00F6               	movwf	___fleq@ff2+1
 12395  36A8  3000               	movlw	0
 12396  36A9  00F5               	movwf	___fleq@ff2
 12397  36AA                     l1024:	
 12398  36AA  0878               	movf	___fleq@ff2+3,w
 12399  36AB  0674               	xorwf	___fleq@ff1+3,w
 12400  36AC  1D03               	skipz
 12401  36AD  2EB8               	goto	u10005
 12402  36AE  0877               	movf	___fleq@ff2+2,w
 12403  36AF  0673               	xorwf	___fleq@ff1+2,w
 12404  36B0  1D03               	skipz
 12405  36B1  2EB8               	goto	u10005
 12406  36B2  0876               	movf	___fleq@ff2+1,w
 12407  36B3  0672               	xorwf	___fleq@ff1+1,w
 12408  36B4  1D03               	skipz
 12409  36B5  2EB8               	goto	u10005
 12410  36B6  0875               	movf	___fleq@ff2,w
 12411  36B7  0671               	xorwf	___fleq@ff1,w
 12412  36B8                     u10005:	
 12413  36B8  1903               	skipnz
 12414  36B9  2EBC               	goto	l7116
 12415  36BA  1003               	clrc
 12416  36BB  0008               	return
 12417  36BC                     l7116:	
 12418  36BC  1403               	setc
 12419  36BD  0008               	return
 12420  36BE                     __end_of___fleq:	
 12421                           
 12422                           	psect	text27
 12423  3630                     __ptext27:	
 12424 ;; *************** function ___awmod *****************
 12425 ;; Defined at:
 12426 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
 12427 ;; Parameters:    Size  Location     Type
 12428 ;;  divisor         2    1[COMMON] int 
 12429 ;;  dividend        2    3[COMMON] int 
 12430 ;; Auto vars:     Size  Location     Type
 12431 ;;  sign            1    7[COMMON] unsigned char 
 12432 ;;  counter         1    6[COMMON] unsigned char 
 12433 ;; Return value:  Size  Location     Type
 12434 ;;                  2    1[COMMON] int 
 12435 ;; Registers used:
 12436 ;;		wreg, status,2, status,0
 12437 ;; Tracked objects:
 12438 ;;		On entry : 0/0
 12439 ;;		On exit  : 0/0
 12440 ;;		Unchanged: 0/0
 12441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12442 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12443 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12444 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12445 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12446 ;;Total ram usage:        7 bytes
 12447 ;; Hardware stack levels used:    1
 12448 ;; Hardware stack levels required when called:    1
 12449 ;; This function calls:
 12450 ;;		Nothing
 12451 ;; This function is called by:
 12452 ;;		_efgtoa
 12453 ;; This function uses a non-reentrant model
 12454 ;;
 12455                           
 12456                           
 12457                           ;psect for function ___awmod
 12458  3630                     ___awmod:	
 12459                           
 12460                           ;incstack = 0
 12461                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 12462  3630  01F7               	clrf	___awmod@sign
 12463  3631  1FF4               	btfss	___awmod@dividend+1,7
 12464  3632  2E3A               	goto	l4714
 12465  3633  09F3               	comf	___awmod@dividend,f
 12466  3634  09F4               	comf	___awmod@dividend+1,f
 12467  3635  0AF3               	incf	___awmod@dividend,f
 12468  3636  1903               	skipnz
 12469  3637  0AF4               	incf	___awmod@dividend+1,f
 12470  3638  01F7               	clrf	___awmod@sign
 12471  3639  0AF7               	incf	___awmod@sign,f
 12472  363A                     l4714:	
 12473  363A  1FF2               	btfss	___awmod@divisor+1,7
 12474  363B  2E41               	goto	l4718
 12475  363C  09F1               	comf	___awmod@divisor,f
 12476  363D  09F2               	comf	___awmod@divisor+1,f
 12477  363E  0AF1               	incf	___awmod@divisor,f
 12478  363F  1903               	skipnz
 12479  3640  0AF2               	incf	___awmod@divisor+1,f
 12480  3641                     l4718:	
 12481  3641  0871               	movf	___awmod@divisor,w
 12482  3642  0472               	iorwf	___awmod@divisor+1,w
 12483  3643  1903               	btfsc	3,2
 12484  3644  2E68               	goto	l4736
 12485  3645  01F6               	clrf	___awmod@counter
 12486  3646  0AF6               	incf	___awmod@counter,f
 12487  3647                     l4726:	
 12488  3647  1BF2               	btfsc	___awmod@divisor+1,7
 12489  3648  2E53               	goto	l4728
 12490  3649  3001               	movlw	1
 12491  364A                     u6025:	
 12492  364A  35F1               	lslf	___awmod@divisor,f
 12493  364B  0DF2               	rlf	___awmod@divisor+1,f
 12494  364C  0B89               	decfsz	9,f
 12495  364D  2E4A               	goto	u6025
 12496  364E  3001               	movlw	1
 12497  364F  00F5               	movwf	??___awmod
 12498  3650  0875               	movf	??___awmod,w
 12499  3651  07F6               	addwf	___awmod@counter,f
 12500  3652  2E47               	goto	l4726
 12501  3653                     l4728:	
 12502  3653  0872               	movf	___awmod@divisor+1,w
 12503  3654  0274               	subwf	___awmod@dividend+1,w
 12504  3655  1D03               	skipz
 12505  3656  2E59               	goto	u6045
 12506  3657  0871               	movf	___awmod@divisor,w
 12507  3658  0273               	subwf	___awmod@dividend,w
 12508  3659                     u6045:	
 12509  3659  1C03               	skipc
 12510  365A  2E5F               	goto	l4732
 12511  365B  0871               	movf	___awmod@divisor,w
 12512  365C  02F3               	subwf	___awmod@dividend,f
 12513  365D  0872               	movf	___awmod@divisor+1,w
 12514  365E  3BF4               	subwfb	___awmod@dividend+1,f
 12515  365F                     l4732:	
 12516  365F  3001               	movlw	1
 12517  3660                     u6055:	
 12518  3660  36F2               	lsrf	___awmod@divisor+1,f
 12519  3661  0CF1               	rrf	___awmod@divisor,f
 12520  3662  0B89               	decfsz	9,f
 12521  3663  2E60               	goto	u6055
 12522  3664  3001               	movlw	1
 12523  3665  02F6               	subwf	___awmod@counter,f
 12524  3666  1D03               	btfss	3,2
 12525  3667  2E53               	goto	l4728
 12526  3668                     l4736:	
 12527  3668  0877               	movf	___awmod@sign,w
 12528  3669  1903               	btfsc	3,2
 12529  366A  2E70               	goto	l4740
 12530  366B  09F3               	comf	___awmod@dividend,f
 12531  366C  09F4               	comf	___awmod@dividend+1,f
 12532  366D  0AF3               	incf	___awmod@dividend,f
 12533  366E  1903               	skipnz
 12534  366F  0AF4               	incf	___awmod@dividend+1,f
 12535  3670                     l4740:	
 12536  3670  0874               	movf	___awmod@dividend+1,w
 12537  3671  00F2               	movwf	?___awmod+1
 12538  3672  0873               	movf	___awmod@dividend,w
 12539  3673  00F1               	movwf	?___awmod
 12540  3674  0008               	return
 12541  3675                     __end_of___awmod:	
 12542                           
 12543                           	psect	text28
 12544  37AF                     __ptext28:	
 12545 ;; *************** function ___awdiv *****************
 12546 ;; Defined at:
 12547 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 12548 ;; Parameters:    Size  Location     Type
 12549 ;;  divisor         2    1[COMMON] int 
 12550 ;;  dividend        2    3[COMMON] int 
 12551 ;; Auto vars:     Size  Location     Type
 12552 ;;  quotient        2    8[COMMON] int 
 12553 ;;  sign            1    7[COMMON] unsigned char 
 12554 ;;  counter         1    6[COMMON] unsigned char 
 12555 ;; Return value:  Size  Location     Type
 12556 ;;                  2    1[COMMON] int 
 12557 ;; Registers used:
 12558 ;;		wreg, status,2, status,0
 12559 ;; Tracked objects:
 12560 ;;		On entry : 0/0
 12561 ;;		On exit  : 0/0
 12562 ;;		Unchanged: 0/0
 12563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12564 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12565 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12566 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12567 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12568 ;;Total ram usage:        9 bytes
 12569 ;; Hardware stack levels used:    1
 12570 ;; Hardware stack levels required when called:    1
 12571 ;; This function calls:
 12572 ;;		Nothing
 12573 ;; This function is called by:
 12574 ;;		_efgtoa
 12575 ;; This function uses a non-reentrant model
 12576 ;;
 12577                           
 12578                           
 12579                           ;psect for function ___awdiv
 12580  37AF                     ___awdiv:	
 12581                           
 12582                           ;incstack = 0
 12583                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 12584  37AF  01F7               	clrf	___awdiv@sign
 12585  37B0  1FF2               	btfss	___awdiv@divisor+1,7
 12586  37B1  2FB9               	goto	l4670
 12587  37B2  09F1               	comf	___awdiv@divisor,f
 12588  37B3  09F2               	comf	___awdiv@divisor+1,f
 12589  37B4  0AF1               	incf	___awdiv@divisor,f
 12590  37B5  1903               	skipnz
 12591  37B6  0AF2               	incf	___awdiv@divisor+1,f
 12592  37B7  01F7               	clrf	___awdiv@sign
 12593  37B8  0AF7               	incf	___awdiv@sign,f
 12594  37B9                     l4670:	
 12595  37B9  1FF4               	btfss	___awdiv@dividend+1,7
 12596  37BA  2FC4               	goto	l4676
 12597  37BB  09F3               	comf	___awdiv@dividend,f
 12598  37BC  09F4               	comf	___awdiv@dividend+1,f
 12599  37BD  0AF3               	incf	___awdiv@dividend,f
 12600  37BE  1903               	skipnz
 12601  37BF  0AF4               	incf	___awdiv@dividend+1,f
 12602  37C0  3001               	movlw	1
 12603  37C1  00F5               	movwf	??___awdiv
 12604  37C2  0875               	movf	??___awdiv,w
 12605  37C3  06F7               	xorwf	___awdiv@sign,f
 12606  37C4                     l4676:	
 12607  37C4  01F8               	clrf	___awdiv@quotient
 12608  37C5  01F9               	clrf	___awdiv@quotient+1
 12609  37C6  0871               	movf	___awdiv@divisor,w
 12610  37C7  0472               	iorwf	___awdiv@divisor+1,w
 12611  37C8  1903               	btfsc	3,2
 12612  37C9  2FF3               	goto	l4698
 12613  37CA  01F6               	clrf	___awdiv@counter
 12614  37CB  0AF6               	incf	___awdiv@counter,f
 12615  37CC                     l4686:	
 12616  37CC  1BF2               	btfsc	___awdiv@divisor+1,7
 12617  37CD  2FD8               	goto	l4688
 12618  37CE  3001               	movlw	1
 12619  37CF                     u5925:	
 12620  37CF  35F1               	lslf	___awdiv@divisor,f
 12621  37D0  0DF2               	rlf	___awdiv@divisor+1,f
 12622  37D1  0B89               	decfsz	9,f
 12623  37D2  2FCF               	goto	u5925
 12624  37D3  3001               	movlw	1
 12625  37D4  00F5               	movwf	??___awdiv
 12626  37D5  0875               	movf	??___awdiv,w
 12627  37D6  07F6               	addwf	___awdiv@counter,f
 12628  37D7  2FCC               	goto	l4686
 12629  37D8                     l4688:	
 12630  37D8  3001               	movlw	1
 12631  37D9                     u5945:	
 12632  37D9  35F8               	lslf	___awdiv@quotient,f
 12633  37DA  0DF9               	rlf	___awdiv@quotient+1,f
 12634  37DB  0B89               	decfsz	9,f
 12635  37DC  2FD9               	goto	u5945
 12636  37DD  0872               	movf	___awdiv@divisor+1,w
 12637  37DE  0274               	subwf	___awdiv@dividend+1,w
 12638  37DF  1D03               	skipz
 12639  37E0  2FE3               	goto	u5955
 12640  37E1  0871               	movf	___awdiv@divisor,w
 12641  37E2  0273               	subwf	___awdiv@dividend,w
 12642  37E3                     u5955:	
 12643  37E3  1C03               	skipc
 12644  37E4  2FEA               	goto	l4694
 12645  37E5  0871               	movf	___awdiv@divisor,w
 12646  37E6  02F3               	subwf	___awdiv@dividend,f
 12647  37E7  0872               	movf	___awdiv@divisor+1,w
 12648  37E8  3BF4               	subwfb	___awdiv@dividend+1,f
 12649  37E9  1478               	bsf	___awdiv@quotient,0
 12650  37EA                     l4694:	
 12651  37EA  3001               	movlw	1
 12652  37EB                     u5965:	
 12653  37EB  36F2               	lsrf	___awdiv@divisor+1,f
 12654  37EC  0CF1               	rrf	___awdiv@divisor,f
 12655  37ED  0B89               	decfsz	9,f
 12656  37EE  2FEB               	goto	u5965
 12657  37EF  3001               	movlw	1
 12658  37F0  02F6               	subwf	___awdiv@counter,f
 12659  37F1  1D03               	btfss	3,2
 12660  37F2  2FD8               	goto	l4688
 12661  37F3                     l4698:	
 12662  37F3  0877               	movf	___awdiv@sign,w
 12663  37F4  1903               	btfsc	3,2
 12664  37F5  2FFB               	goto	l4702
 12665  37F6  09F8               	comf	___awdiv@quotient,f
 12666  37F7  09F9               	comf	___awdiv@quotient+1,f
 12667  37F8  0AF8               	incf	___awdiv@quotient,f
 12668  37F9  1903               	skipnz
 12669  37FA  0AF9               	incf	___awdiv@quotient+1,f
 12670  37FB                     l4702:	
 12671  37FB  0879               	movf	___awdiv@quotient+1,w
 12672  37FC  00F2               	movwf	?___awdiv+1
 12673  37FD  0878               	movf	___awdiv@quotient,w
 12674  37FE  00F1               	movwf	?___awdiv
 12675  37FF  0008               	return
 12676  3800                     __end_of___awdiv:	
 12677                           
 12678                           	psect	text29
 12679  1B72                     __ptext29:	
 12680 ;; *************** function _dtoa *****************
 12681 ;; Defined at:
 12682 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 12683 ;; Parameters:    Size  Location     Type
 12684 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
 12685 ;;		 -> vsnprintf@f(6), 
 12686 ;;  d               8   18[BANK0 ] long long 
 12687 ;; Auto vars:     Size  Location     Type
 12688 ;;  n               8   37[BANK0 ] long long 
 12689 ;;  i               2   45[BANK0 ] int 
 12690 ;;  s               2   35[BANK0 ] int 
 12691 ;;  w               2   33[BANK0 ] int 
 12692 ;;  p               2   31[BANK0 ] int 
 12693 ;; Return value:  Size  Location     Type
 12694 ;;                  2   16[BANK0 ] int 
 12695 ;; Registers used:
 12696 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12697 ;; Tracked objects:
 12698 ;;		On entry : 0/0
 12699 ;;		On exit  : 0/0
 12700 ;;		Unchanged: 0/0
 12701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12702 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12703 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12704 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12705 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12706 ;;Total ram usage:       31 bytes
 12707 ;; Hardware stack levels used:    1
 12708 ;; Hardware stack levels required when called:    5
 12709 ;; This function calls:
 12710 ;;		___aodiv
 12711 ;;		___aomod
 12712 ;;		_abs
 12713 ;;		_pad
 12714 ;; This function is called by:
 12715 ;;		_vfpfcnvrt
 12716 ;; This function uses a non-reentrant model
 12717 ;;
 12718                           
 12719                           
 12720                           ;psect for function _dtoa
 12721  1B72                     _dtoa:	
 12722                           
 12723                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
 12724                           
 12725                           ;incstack = 0
 12726                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12727  1B72  0020               	movlb	0	; select bank0
 12728  1B73  0832               	movf	dtoa@d,w
 12729  1B74  00C5               	movwf	dtoa@n
 12730  1B75  0833               	movf	dtoa@d+1,w
 12731  1B76  00C6               	movwf	dtoa@n+1
 12732  1B77  0834               	movf	dtoa@d+2,w
 12733  1B78  00C7               	movwf	dtoa@n+2
 12734  1B79  0835               	movf	dtoa@d+3,w
 12735  1B7A  00C8               	movwf	dtoa@n+3
 12736  1B7B  0836               	movf	dtoa@d+4,w
 12737  1B7C  00C9               	movwf	dtoa@n+4
 12738  1B7D  0837               	movf	dtoa@d+5,w
 12739  1B7E  00CA               	movwf	dtoa@n+5
 12740  1B7F  0838               	movf	dtoa@d+6,w
 12741  1B80  00CB               	movwf	dtoa@n+6
 12742  1B81  0839               	movf	dtoa@d+7,w
 12743  1B82  00CC               	movwf	dtoa@n+7
 12744                           
 12745                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 12746  1B83  3045               	movlw	low dtoa@n
 12747  1B84  0086               	movwf	6
 12748  1B85  3000               	movlw	high dtoa@n
 12749  1B86  0087               	movwf	7
 12750  1B87  3F47               	moviw [7]fsr1
 12751  1B88  00BA               	movwf	??_dtoa
 12752  1B89  1FBA               	btfss	??_dtoa,7
 12753  1B8A  2B8D               	goto	u10020
 12754  1B8B  3001               	movlw	1
 12755  1B8C  2B8E               	goto	u10030
 12756  1B8D                     u10020:	
 12757  1B8D  3000               	movlw	0
 12758  1B8E                     u10030:	
 12759  1B8E  0020               	movlb	0	; select bank0
 12760  1B8F  00BB               	movwf	??_dtoa+1
 12761  1B90  01BC               	clrf	??_dtoa+2
 12762  1B91  083B               	movf	??_dtoa+1,w
 12763  1B92  00C3               	movwf	dtoa@s
 12764  1B93  083C               	movf	??_dtoa+2,w
 12765  1B94  00C4               	movwf	dtoa@s+1
 12766                           
 12767                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 12768  1B95  0843               	movf	dtoa@s,w
 12769  1B96  0444               	iorwf	dtoa@s+1,w
 12770  1B97  1903               	btfsc	3,2
 12771  1B98  2BB7               	goto	l551
 12772                           
 12773                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 12774  1B99  09C5               	comf	dtoa@n,f
 12775  1B9A  09C6               	comf	dtoa@n+1,f
 12776  1B9B  09C7               	comf	dtoa@n+2,f
 12777  1B9C  09C8               	comf	dtoa@n+3,f
 12778  1B9D  09C9               	comf	dtoa@n+4,f
 12779  1B9E  09CA               	comf	dtoa@n+5,f
 12780  1B9F  09CB               	comf	dtoa@n+6,f
 12781  1BA0  09CC               	comf	dtoa@n+7,f
 12782  1BA1  0AC5               	incf	dtoa@n,f
 12783  1BA2  1D03               	skipz
 12784  1BA3  2BB7               	goto	l551
 12785  1BA4  0AC6               	incf	dtoa@n+1,f
 12786  1BA5  1D03               	skipz
 12787  1BA6  2BB7               	goto	l551
 12788  1BA7  0AC7               	incf	dtoa@n+2,f
 12789  1BA8  1D03               	skipz
 12790  1BA9  2BB7               	goto	l551
 12791  1BAA  0AC8               	incf	dtoa@n+3,f
 12792  1BAB  1D03               	skipz
 12793  1BAC  2BB7               	goto	l551
 12794  1BAD  0AC9               	incf	dtoa@n+4,f
 12795  1BAE  1D03               	skipz
 12796  1BAF  2BB7               	goto	l551
 12797  1BB0  0ACA               	incf	dtoa@n+5,f
 12798  1BB1  1D03               	skipz
 12799  1BB2  2BB7               	goto	l551
 12800  1BB3  0ACB               	incf	dtoa@n+6,f
 12801  1BB4  1D03               	skipz
 12802  1BB5  2BB7               	goto	l551
 12803  1BB6  0ACC               	incf	dtoa@n+7,f
 12804  1BB7                     l551:	
 12805                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
 12806                           
 12807                           
 12808                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 12809  1BB7  0023               	movlb	3	; select bank3
 12810  1BB8  1BC1               	btfsc	(_prec+1)^(0+384),7
 12811  1BB9  2BBE               	goto	l552
 12812                           
 12813                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 12814  1BBA  30FD               	movlw	253
 12815  1BBB  05C2               	andwf	_flags^(0+384),f
 12816  1BBC  30FF               	movlw	255
 12817  1BBD  05C3               	andwf	(_flags+1)^(0+384),f
 12818  1BBE                     l552:	
 12819                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
 12820                           
 12821                           
 12822                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 12823  1BBE  0841               	movf	(_prec+1)^(0+384),w
 12824  1BBF  3A80               	xorlw	128
 12825  1BC0  0020               	movlb	0	; select bank0
 12826  1BC1  00BA               	movwf	??_dtoa
 12827  1BC2  3080               	movlw	128
 12828  1BC3  023A               	subwf	??_dtoa,w
 12829  1BC4  1D03               	skipz
 12830  1BC5  2BC9               	goto	u10075
 12831  1BC6  3001               	movlw	1
 12832  1BC7  0023               	movlb	3	; select bank3
 12833  1BC8  0240               	subwf	_prec^(0+384),w
 12834  1BC9                     u10075:	
 12835  1BC9  1803               	skipnc
 12836  1BCA  2BD1               	goto	l7152
 12837  1BCB  3001               	movlw	1
 12838  1BCC  0020               	movlb	0	; select bank0
 12839  1BCD  00BF               	movwf	dtoa@p
 12840  1BCE  3000               	movlw	0
 12841  1BCF  00C0               	movwf	dtoa@p+1
 12842  1BD0  2BD9               	goto	l556
 12843  1BD1                     l7152:	
 12844  1BD1  0023               	movlb	3	; select bank3
 12845  1BD2  0841               	movf	(_prec+1)^(0+384),w
 12846  1BD3  0020               	movlb	0	; select bank0
 12847  1BD4  00C0               	movwf	dtoa@p+1
 12848  1BD5  0023               	movlb	3	; select bank3
 12849  1BD6  0840               	movf	_prec^(0+384),w
 12850  1BD7  0020               	movlb	0	; select bank0
 12851  1BD8  00BF               	movwf	dtoa@p
 12852  1BD9                     l556:	
 12853                           
 12854                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 12855  1BD9  0023               	movlb	3	; select bank3
 12856  1BDA  083F               	movf	(_width+1)^(0+384),w
 12857  1BDB  0020               	movlb	0	; select bank0
 12858  1BDC  00C2               	movwf	dtoa@w+1
 12859  1BDD  0023               	movlb	3	; select bank3
 12860  1BDE  083E               	movf	_width^(0+384),w
 12861  1BDF  0020               	movlb	0	; select bank0
 12862  1BE0  00C1               	movwf	dtoa@w
 12863                           
 12864                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 12865  1BE1  0843               	movf	dtoa@s,w
 12866  1BE2  0444               	iorwf	dtoa@s+1,w
 12867  1BE3  1D03               	btfss	3,2
 12868  1BE4  2BE8               	goto	l7158
 12869  1BE5  0023               	movlb	3	; select bank3
 12870  1BE6  1D42               	btfss	_flags^(0+384),2
 12871  1BE7  2BED               	goto	l557
 12872  1BE8                     l7158:	
 12873                           
 12874                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 12875  1BE8  30FF               	movlw	255
 12876  1BE9  0020               	movlb	0	; select bank0
 12877  1BEA  07C1               	addwf	dtoa@w,f
 12878  1BEB  30FF               	movlw	255
 12879  1BEC  3DC2               	addwfc	dtoa@w+1,f
 12880  1BED                     l557:	
 12881                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
 12882                           
 12883                           
 12884                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 12885  1BED  304F               	movlw	79
 12886  1BEE  0020               	movlb	0	; select bank0
 12887  1BEF  00CD               	movwf	dtoa@i
 12888  1BF0  3000               	movlw	0
 12889  1BF1  00CE               	movwf	dtoa@i+1
 12890                           
 12891                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 12892  1BF2  0024               	movlb	4	; select bank4
 12893  1BF3  01EF               	clrf	(_dbuf^(0+512)+79)
 12894                           
 12895                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12896  1BF4  2C83               	goto	l560
 12897  1BF5                     l7172:	
 12898  1BF5  0020               	movlb	0	; select bank0
 12899  1BF6  0845               	movf	dtoa@n,w
 12900  1BF7  0446               	iorwf	dtoa@n+1,w
 12901  1BF8  0447               	iorwf	dtoa@n+2,w
 12902  1BF9  0448               	iorwf	dtoa@n+3,w
 12903  1BFA  0449               	iorwf	dtoa@n+4,w
 12904  1BFB  044A               	iorwf	dtoa@n+5,w
 12905  1BFC  044B               	iorwf	dtoa@n+6,w
 12906  1BFD  044C               	iorwf	dtoa@n+7,w
 12907  1BFE  1D03               	skipz
 12908  1BFF  2C1A               	goto	l7162
 12909  1C00  0840               	movf	dtoa@p+1,w
 12910  1C01  3A80               	xorlw	128
 12911  1C02  00BA               	movwf	??_dtoa
 12912  1C03  3080               	movlw	128
 12913  1C04  023A               	subwf	??_dtoa,w
 12914  1C05  1D03               	skipz
 12915  1C06  2C09               	goto	u10125
 12916  1C07  3001               	movlw	1
 12917  1C08  023F               	subwf	dtoa@p,w
 12918  1C09                     u10125:	
 12919  1C09  1803               	skipnc
 12920  1C0A  2C1A               	goto	l7162
 12921  1C0B  0020               	movlb	0	; select bank0
 12922  1C0C  0842               	movf	dtoa@w+1,w
 12923  1C0D  3A80               	xorlw	128
 12924  1C0E  00BA               	movwf	??_dtoa
 12925  1C0F  3080               	movlw	128
 12926  1C10  023A               	subwf	??_dtoa,w
 12927  1C11  1D03               	skipz
 12928  1C12  2C15               	goto	u10135
 12929  1C13  3001               	movlw	1
 12930  1C14  0241               	subwf	dtoa@w,w
 12931  1C15                     u10135:	
 12932  1C15  1C03               	skipc
 12933  1C16  2C8F               	goto	l7180
 12934  1C17  0023               	movlb	3	; select bank3
 12935  1C18  1CC2               	btfss	_flags^(0+384),1
 12936  1C19  2C8F               	goto	l7180
 12937  1C1A                     l7162:	
 12938                           
 12939                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 12940  1C1A  30FF               	movlw	255
 12941  1C1B  0020               	movlb	0	; select bank0
 12942  1C1C  07CD               	addwf	dtoa@i,f
 12943  1C1D  30FF               	movlw	255
 12944  1C1E  3DCE               	addwfc	dtoa@i+1,f
 12945                           
 12946                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 12947  1C1F  300A               	movlw	10
 12948  1C20  00A0               	movwf	___aomod@divisor
 12949  1C21  01A1               	clrf	___aomod@divisor+1
 12950  1C22  01A2               	clrf	___aomod@divisor+2
 12951  1C23  01A3               	clrf	___aomod@divisor+3
 12952  1C24  01A4               	clrf	___aomod@divisor+4
 12953  1C25  01A5               	clrf	___aomod@divisor+5
 12954  1C26  01A6               	clrf	___aomod@divisor+6
 12955  1C27  01A7               	clrf	___aomod@divisor+7
 12956  1C28  0845               	movf	dtoa@n,w
 12957  1C29  00A8               	movwf	___aomod@dividend
 12958  1C2A  0846               	movf	dtoa@n+1,w
 12959  1C2B  00A9               	movwf	___aomod@dividend+1
 12960  1C2C  0847               	movf	dtoa@n+2,w
 12961  1C2D  00AA               	movwf	___aomod@dividend+2
 12962  1C2E  0848               	movf	dtoa@n+3,w
 12963  1C2F  00AB               	movwf	___aomod@dividend+3
 12964  1C30  0849               	movf	dtoa@n+4,w
 12965  1C31  00AC               	movwf	___aomod@dividend+4
 12966  1C32  084A               	movf	dtoa@n+5,w
 12967  1C33  00AD               	movwf	___aomod@dividend+5
 12968  1C34  084B               	movf	dtoa@n+6,w
 12969  1C35  00AE               	movwf	___aomod@dividend+6
 12970  1C36  084C               	movf	dtoa@n+7,w
 12971  1C37  00AF               	movwf	___aomod@dividend+7
 12972  1C38  31A3  2379  319B   	fcall	___aomod
 12973  1C3B  0020               	movlb	0	; select bank0
 12974  1C3C  0821               	movf	?___aomod+1,w
 12975  1C3D  00F5               	movwf	abs@a+1
 12976  1C3E  0820               	movf	?___aomod,w
 12977  1C3F  00F4               	movwf	abs@a
 12978  1C40  31B3  2392  319B   	fcall	_abs
 12979  1C43  0874               	movf	?_abs,w
 12980  1C44  3E30               	addlw	48
 12981  1C45  0020               	movlb	0	; select bank0
 12982  1C46  00BA               	movwf	??_dtoa
 12983  1C47  084D               	movf	dtoa@i,w
 12984  1C48  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 12985  1C49  0086               	movwf	6
 12986  1C4A  3002               	movlw	2	; select bank4/5
 12987  1C4B  0087               	movwf	7
 12988  1C4C  083A               	movf	??_dtoa,w
 12989  1C4D  0081               	movwf	1
 12990                           
 12991                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 12992  1C4E  30FF               	movlw	255
 12993  1C4F  07BF               	addwf	dtoa@p,f
 12994  1C50  30FF               	movlw	255
 12995  1C51  3DC0               	addwfc	dtoa@p+1,f
 12996                           
 12997                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 12998  1C52  30FF               	movlw	255
 12999  1C53  07C1               	addwf	dtoa@w,f
 13000  1C54  30FF               	movlw	255
 13001  1C55  3DC2               	addwfc	dtoa@w+1,f
 13002                           
 13003                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 13004  1C56  300A               	movlw	10
 13005  1C57  00A0               	movwf	___aodiv@divisor
 13006  1C58  01A1               	clrf	___aodiv@divisor+1
 13007  1C59  01A2               	clrf	___aodiv@divisor+2
 13008  1C5A  01A3               	clrf	___aodiv@divisor+3
 13009  1C5B  01A4               	clrf	___aodiv@divisor+4
 13010  1C5C  01A5               	clrf	___aodiv@divisor+5
 13011  1C5D  01A6               	clrf	___aodiv@divisor+6
 13012  1C5E  01A7               	clrf	___aodiv@divisor+7
 13013  1C5F  0845               	movf	dtoa@n,w
 13014  1C60  00A8               	movwf	___aodiv@dividend
 13015  1C61  0846               	movf	dtoa@n+1,w
 13016  1C62  00A9               	movwf	___aodiv@dividend+1
 13017  1C63  0847               	movf	dtoa@n+2,w
 13018  1C64  00AA               	movwf	___aodiv@dividend+2
 13019  1C65  0848               	movf	dtoa@n+3,w
 13020  1C66  00AB               	movwf	___aodiv@dividend+3
 13021  1C67  0849               	movf	dtoa@n+4,w
 13022  1C68  00AC               	movwf	___aodiv@dividend+4
 13023  1C69  084A               	movf	dtoa@n+5,w
 13024  1C6A  00AD               	movwf	___aodiv@dividend+5
 13025  1C6B  084B               	movf	dtoa@n+6,w
 13026  1C6C  00AE               	movwf	___aodiv@dividend+6
 13027  1C6D  084C               	movf	dtoa@n+7,w
 13028  1C6E  00AF               	movwf	___aodiv@dividend+7
 13029  1C6F  31A7  270D  319B   	fcall	___aodiv
 13030  1C72  0020               	movlb	0	; select bank0
 13031  1C73  0820               	movf	?___aodiv,w
 13032  1C74  00C5               	movwf	dtoa@n
 13033  1C75  0821               	movf	?___aodiv+1,w
 13034  1C76  00C6               	movwf	dtoa@n+1
 13035  1C77  0822               	movf	?___aodiv+2,w
 13036  1C78  00C7               	movwf	dtoa@n+2
 13037  1C79  0823               	movf	?___aodiv+3,w
 13038  1C7A  00C8               	movwf	dtoa@n+3
 13039  1C7B  0824               	movf	?___aodiv+4,w
 13040  1C7C  00C9               	movwf	dtoa@n+4
 13041  1C7D  0825               	movf	?___aodiv+5,w
 13042  1C7E  00CA               	movwf	dtoa@n+5
 13043  1C7F  0826               	movf	?___aodiv+6,w
 13044  1C80  00CB               	movwf	dtoa@n+6
 13045  1C81  0827               	movf	?___aodiv+7,w
 13046  1C82  00CC               	movwf	dtoa@n+7
 13047  1C83                     l560:	
 13048                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
 13049                           
 13050                           
 13051                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13052  1C83  0020               	movlb	0	; select bank0
 13053  1C84  084E               	movf	dtoa@i+1,w
 13054  1C85  3A80               	xorlw	128
 13055  1C86  00BA               	movwf	??_dtoa
 13056  1C87  3080               	movlw	128
 13057  1C88  023A               	subwf	??_dtoa,w
 13058  1C89  1D03               	skipz
 13059  1C8A  2C8D               	goto	u10105
 13060  1C8B  3001               	movlw	1
 13061  1C8C  024D               	subwf	dtoa@i,w
 13062  1C8D                     u10105:	
 13063  1C8D  1803               	btfsc	3,0
 13064  1C8E  2BF5               	goto	l7172
 13065  1C8F                     l7180:	
 13066                           
 13067                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 13068  1C8F  0020               	movlb	0	; select bank0
 13069  1C90  0843               	movf	dtoa@s,w
 13070  1C91  0444               	iorwf	dtoa@s+1,w
 13071  1C92  1D03               	btfss	3,2
 13072  1C93  2C97               	goto	l7184
 13073  1C94  0023               	movlb	3	; select bank3
 13074  1C95  1D42               	btfss	_flags^(0+384),2
 13075  1C96  2CAF               	goto	l7194
 13076  1C97                     l7184:	
 13077                           
 13078                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 13079  1C97  30FF               	movlw	255
 13080  1C98  0020               	movlb	0	; select bank0
 13081  1C99  07CD               	addwf	dtoa@i,f
 13082  1C9A  30FF               	movlw	255
 13083  1C9B  3DCE               	addwfc	dtoa@i+1,f
 13084                           
 13085                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 13086  1C9C  0843               	movf	dtoa@s,w
 13087  1C9D  0444               	iorwf	dtoa@s+1,w
 13088  1C9E  1D03               	btfss	3,2
 13089  1C9F  2CA2               	goto	l7190
 13090  1CA0  302B               	movlw	43
 13091  1CA1  2CA3               	goto	L12
 13092  1CA2                     l7190:	
 13093  1CA2  302D               	movlw	45
 13094  1CA3                     L12:	
 13095  1CA3  00BD               	movwf	_dtoa$1018
 13096  1CA4  3000               	movlw	0
 13097  1CA5  00BE               	movwf	_dtoa$1018+1
 13098  1CA6  083D               	movf	_dtoa$1018,w
 13099  1CA7  00BA               	movwf	??_dtoa
 13100  1CA8  084D               	movf	dtoa@i,w
 13101  1CA9  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 13102  1CAA  0086               	movwf	6
 13103  1CAB  3002               	movlw	2	; select bank4/5
 13104  1CAC  0087               	movwf	7
 13105  1CAD  083A               	movf	??_dtoa,w
 13106  1CAE  0081               	movwf	1
 13107  1CAF                     l7194:	
 13108                           
 13109                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 13110  1CAF  0020               	movlb	0	; select bank0
 13111  1CB0  0831               	movf	dtoa@fp+1,w
 13112  1CB1  00A7               	movwf	pad@fp+1
 13113  1CB2  0830               	movf	dtoa@fp,w
 13114  1CB3  00A6               	movwf	pad@fp
 13115  1CB4  084D               	movf	dtoa@i,w
 13116  1CB5  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 13117  1CB6  00BA               	movwf	??_dtoa
 13118  1CB7  083A               	movf	??_dtoa,w
 13119  1CB8  00A8               	movwf	pad@buf
 13120  1CB9  0842               	movf	dtoa@w+1,w
 13121  1CBA  00AA               	movwf	pad@p+1
 13122  1CBB  0841               	movf	dtoa@w,w
 13123  1CBC  00A9               	movwf	pad@p
 13124  1CBD  31B7  275E         	fcall	_pad
 13125  1CBF  0020               	movlb	0	; select bank0
 13126  1CC0  0827               	movf	?_pad+1,w
 13127  1CC1  00B1               	movwf	?_dtoa+1
 13128  1CC2  0826               	movf	?_pad,w
 13129  1CC3  00B0               	movwf	?_dtoa
 13130  1CC4  0008               	return
 13131  1CC5                     __end_of_dtoa:	
 13132                           
 13133                           	psect	text30
 13134  3392                     __ptext30:	
 13135 ;; *************** function _abs *****************
 13136 ;; Defined at:
 13137 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 13138 ;; Parameters:    Size  Location     Type
 13139 ;;  a               2    4[COMMON] int 
 13140 ;; Auto vars:     Size  Location     Type
 13141 ;;		None
 13142 ;; Return value:  Size  Location     Type
 13143 ;;                  2    4[COMMON] int 
 13144 ;; Registers used:
 13145 ;;		wreg, status,2, status,0
 13146 ;; Tracked objects:
 13147 ;;		On entry : 0/0
 13148 ;;		On exit  : 0/0
 13149 ;;		Unchanged: 0/0
 13150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13151 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13153 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13154 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13155 ;;Total ram usage:        4 bytes
 13156 ;; Hardware stack levels used:    1
 13157 ;; Hardware stack levels required when called:    1
 13158 ;; This function calls:
 13159 ;;		Nothing
 13160 ;; This function is called by:
 13161 ;;		_dtoa
 13162 ;; This function uses a non-reentrant model
 13163 ;;
 13164                           
 13165                           
 13166                           ;psect for function _abs
 13167  3392                     _abs:	
 13168                           
 13169                           ;incstack = 0
 13170                           ; Regs used in _abs: [wreg+status,2+status,0]
 13171  3392  0875               	movf	abs@a+1,w
 13172  3393  3A80               	xorlw	128
 13173  3394  00F6               	movwf	??_abs
 13174  3395  3080               	movlw	128
 13175  3396  0276               	subwf	??_abs,w
 13176  3397  1D03               	skipz
 13177  3398  2B9B               	goto	u5335
 13178  3399  3001               	movlw	1
 13179  339A  0274               	subwf	abs@a,w
 13180  339B                     u5335:	
 13181  339B  1803               	skipnc
 13182  339C  0008               	return
 13183  339D  0974               	comf	abs@a,w
 13184  339E  00F6               	movwf	??_abs
 13185  339F  0975               	comf	abs@a+1,w
 13186  33A0  00F7               	movwf	??_abs+1
 13187  33A1  0AF6               	incf	??_abs,f
 13188  33A2  1903               	skipnz
 13189  33A3  0AF7               	incf	??_abs+1,f
 13190  33A4  0876               	movf	??_abs,w
 13191  33A5  00F4               	movwf	?_abs
 13192  33A6  0877               	movf	??_abs+1,w
 13193  33A7  00F5               	movwf	?_abs+1
 13194  33A8  0008               	return
 13195  33A9                     __end_of_abs:	
 13196                           
 13197                           	psect	text31
 13198  2379                     __ptext31:	
 13199 ;; *************** function ___aomod *****************
 13200 ;; Defined at:
 13201 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 13202 ;; Parameters:    Size  Location     Type
 13203 ;;  divisor         8    0[BANK0 ] long long 
 13204 ;;  dividend        8    8[BANK0 ] long long 
 13205 ;; Auto vars:     Size  Location     Type
 13206 ;;  sign            1    3[COMMON] unsigned char 
 13207 ;;  counter         1    2[COMMON] unsigned char 
 13208 ;; Return value:  Size  Location     Type
 13209 ;;                  8    0[BANK0 ] long long 
 13210 ;; Registers used:
 13211 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13212 ;; Tracked objects:
 13213 ;;		On entry : 0/0
 13214 ;;		On exit  : 0/0
 13215 ;;		Unchanged: 0/0
 13216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13217 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13218 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13219 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13220 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13221 ;;Total ram usage:       19 bytes
 13222 ;; Hardware stack levels used:    1
 13223 ;; Hardware stack levels required when called:    1
 13224 ;; This function calls:
 13225 ;;		Nothing
 13226 ;; This function is called by:
 13227 ;;		_dtoa
 13228 ;; This function uses a non-reentrant model
 13229 ;;
 13230                           
 13231                           
 13232                           ;psect for function ___aomod
 13233  2379                     ___aomod:	
 13234                           
 13235                           ;incstack = 0
 13236                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
 13237  2379  01F3               	clrf	___aomod@sign
 13238  237A  3028               	movlw	low ___aomod@dividend
 13239  237B  0086               	movwf	6
 13240  237C  3000               	movlw	high ___aomod@dividend
 13241  237D  0087               	movwf	7
 13242  237E  3F47               	moviw [7]fsr1
 13243  237F  00F1               	movwf	??___aomod
 13244  2380  1FF1               	btfss	??___aomod,7
 13245  2381  2BA3               	goto	l4638
 13246  2382  0020               	movlb	0	; select bank0
 13247  2383  09A8               	comf	___aomod@dividend,f
 13248  2384  09A9               	comf	___aomod@dividend+1,f
 13249  2385  09AA               	comf	___aomod@dividend+2,f
 13250  2386  09AB               	comf	___aomod@dividend+3,f
 13251  2387  09AC               	comf	___aomod@dividend+4,f
 13252  2388  09AD               	comf	___aomod@dividend+5,f
 13253  2389  09AE               	comf	___aomod@dividend+6,f
 13254  238A  09AF               	comf	___aomod@dividend+7,f
 13255  238B  0AA8               	incf	___aomod@dividend,f
 13256  238C  1D03               	skipz
 13257  238D  2BA1               	goto	u580lld
 13258  238E  0AA9               	incf	___aomod@dividend+1,f
 13259  238F  1D03               	skipz
 13260  2390  2BA1               	goto	u580lld
 13261  2391  0AAA               	incf	___aomod@dividend+2,f
 13262  2392  1D03               	skipz
 13263  2393  2BA1               	goto	u580lld
 13264  2394  0AAB               	incf	___aomod@dividend+3,f
 13265  2395  1D03               	skipz
 13266  2396  2BA1               	goto	u580lld
 13267  2397  0AAC               	incf	___aomod@dividend+4,f
 13268  2398  1D03               	skipz
 13269  2399  2BA1               	goto	u580lld
 13270  239A  0AAD               	incf	___aomod@dividend+5,f
 13271  239B  1D03               	skipz
 13272  239C  2BA1               	goto	u580lld
 13273  239D  0AAE               	incf	___aomod@dividend+6,f
 13274  239E  1D03               	skipz
 13275  239F  2BA1               	goto	u580lld
 13276  23A0  0AAF               	incf	___aomod@dividend+7,f
 13277  23A1                     u580lld:	
 13278  23A1  01F3               	clrf	___aomod@sign
 13279  23A2  0AF3               	incf	___aomod@sign,f
 13280  23A3                     l4638:	
 13281  23A3  3020               	movlw	low ___aomod@divisor
 13282  23A4  0086               	movwf	6
 13283  23A5  3000               	movlw	high ___aomod@divisor
 13284  23A6  0087               	movwf	7
 13285  23A7  3F47               	moviw [7]fsr1
 13286  23A8  00F1               	movwf	??___aomod
 13287  23A9  1FF1               	btfss	??___aomod,7
 13288  23AA  2BCA               	goto	l4642
 13289  23AB  0020               	movlb	0	; select bank0
 13290  23AC  09A0               	comf	___aomod@divisor,f
 13291  23AD  09A1               	comf	___aomod@divisor+1,f
 13292  23AE  09A2               	comf	___aomod@divisor+2,f
 13293  23AF  09A3               	comf	___aomod@divisor+3,f
 13294  23B0  09A4               	comf	___aomod@divisor+4,f
 13295  23B1  09A5               	comf	___aomod@divisor+5,f
 13296  23B2  09A6               	comf	___aomod@divisor+6,f
 13297  23B3  09A7               	comf	___aomod@divisor+7,f
 13298  23B4  0AA0               	incf	___aomod@divisor,f
 13299  23B5  1D03               	skipz
 13300  23B6  2BCA               	goto	l4642
 13301  23B7  0AA1               	incf	___aomod@divisor+1,f
 13302  23B8  1D03               	skipz
 13303  23B9  2BCA               	goto	l4642
 13304  23BA  0AA2               	incf	___aomod@divisor+2,f
 13305  23BB  1D03               	skipz
 13306  23BC  2BCA               	goto	l4642
 13307  23BD  0AA3               	incf	___aomod@divisor+3,f
 13308  23BE  1D03               	skipz
 13309  23BF  2BCA               	goto	l4642
 13310  23C0  0AA4               	incf	___aomod@divisor+4,f
 13311  23C1  1D03               	skipz
 13312  23C2  2BCA               	goto	l4642
 13313  23C3  0AA5               	incf	___aomod@divisor+5,f
 13314  23C4  1D03               	skipz
 13315  23C5  2BCA               	goto	l4642
 13316  23C6  0AA6               	incf	___aomod@divisor+6,f
 13317  23C7  1D03               	skipz
 13318  23C8  2BCA               	goto	l4642
 13319  23C9  0AA7               	incf	___aomod@divisor+7,f
 13320  23CA                     l4642:	
 13321  23CA  0020               	movlb	0	; select bank0
 13322  23CB  0820               	movf	___aomod@divisor,w
 13323  23CC  0421               	iorwf	___aomod@divisor+1,w
 13324  23CD  0422               	iorwf	___aomod@divisor+2,w
 13325  23CE  0423               	iorwf	___aomod@divisor+3,w
 13326  23CF  0424               	iorwf	___aomod@divisor+4,w
 13327  23D0  0425               	iorwf	___aomod@divisor+5,w
 13328  23D1  0426               	iorwf	___aomod@divisor+6,w
 13329  23D2  0427               	iorwf	___aomod@divisor+7,w
 13330  23D3  1903               	skipnz
 13331  23D4  2C22               	goto	l4658
 13332  23D5  01F2               	clrf	___aomod@counter
 13333  23D6  0AF2               	incf	___aomod@counter,f
 13334  23D7                     l4650:	
 13335  23D7  1BA7               	btfsc	___aomod@divisor+7,7
 13336  23D8  2BE6               	goto	l4652
 13337  23D9  35A0               	lslf	___aomod@divisor,f
 13338  23DA  0DA1               	rlf	___aomod@divisor+1,f
 13339  23DB  0DA2               	rlf	___aomod@divisor+2,f
 13340  23DC  0DA3               	rlf	___aomod@divisor+3,f
 13341  23DD  0DA4               	rlf	___aomod@divisor+4,f
 13342  23DE  0DA5               	rlf	___aomod@divisor+5,f
 13343  23DF  0DA6               	rlf	___aomod@divisor+6,f
 13344  23E0  0DA7               	rlf	___aomod@divisor+7,f
 13345  23E1  3001               	movlw	1
 13346  23E2  00F1               	movwf	??___aomod
 13347  23E3  0871               	movf	??___aomod,w
 13348  23E4  07F2               	addwf	___aomod@counter,f
 13349  23E5  2BD7               	goto	l4650
 13350  23E6                     l4652:	
 13351  23E6  0827               	movf	___aomod@divisor+7,w
 13352  23E7  022F               	subwf	___aomod@dividend+7,w
 13353  23E8  1D03               	skipz
 13354  23E9  2C04               	goto	u5855
 13355  23EA  0826               	movf	___aomod@divisor+6,w
 13356  23EB  022E               	subwf	___aomod@dividend+6,w
 13357  23EC  1D03               	skipz
 13358  23ED  2C04               	goto	u5855
 13359  23EE  0825               	movf	___aomod@divisor+5,w
 13360  23EF  022D               	subwf	___aomod@dividend+5,w
 13361  23F0  1D03               	skipz
 13362  23F1  2C04               	goto	u5855
 13363  23F2  0824               	movf	___aomod@divisor+4,w
 13364  23F3  022C               	subwf	___aomod@dividend+4,w
 13365  23F4  1D03               	skipz
 13366  23F5  2C04               	goto	u5855
 13367  23F6  0823               	movf	___aomod@divisor+3,w
 13368  23F7  022B               	subwf	___aomod@dividend+3,w
 13369  23F8  1D03               	skipz
 13370  23F9  2C04               	goto	u5855
 13371  23FA  0822               	movf	___aomod@divisor+2,w
 13372  23FB  022A               	subwf	___aomod@dividend+2,w
 13373  23FC  1D03               	skipz
 13374  23FD  2C04               	goto	u5855
 13375  23FE  0821               	movf	___aomod@divisor+1,w
 13376  23FF  0229               	subwf	___aomod@dividend+1,w
 13377  2400  1D03               	skipz
 13378  2401  2C04               	goto	u5855
 13379  2402  0820               	movf	___aomod@divisor,w
 13380  2403  0228               	subwf	___aomod@dividend,w
 13381  2404                     u5855:	
 13382  2404  1C03               	skipc
 13383  2405  2C16               	goto	l4656
 13384  2406  0820               	movf	___aomod@divisor,w
 13385  2407  02A8               	subwf	___aomod@dividend,f
 13386  2408  0821               	movf	___aomod@divisor+1,w
 13387  2409  3BA9               	subwfb	___aomod@dividend+1,f
 13388  240A  0822               	movf	___aomod@divisor+2,w
 13389  240B  3BAA               	subwfb	___aomod@dividend+2,f
 13390  240C  0823               	movf	___aomod@divisor+3,w
 13391  240D  3BAB               	subwfb	___aomod@dividend+3,f
 13392  240E  0824               	movf	___aomod@divisor+4,w
 13393  240F  3BAC               	subwfb	___aomod@dividend+4,f
 13394  2410  0825               	movf	___aomod@divisor+5,w
 13395  2411  3BAD               	subwfb	___aomod@dividend+5,f
 13396  2412  0826               	movf	___aomod@divisor+6,w
 13397  2413  3BAE               	subwfb	___aomod@dividend+6,f
 13398  2414  0827               	movf	___aomod@divisor+7,w
 13399  2415  3BAF               	subwfb	___aomod@dividend+7,f
 13400  2416                     l4656:	
 13401  2416  36A7               	lsrf	___aomod@divisor+7,f
 13402  2417  0CA6               	rrf	___aomod@divisor+6,f
 13403  2418  0CA5               	rrf	___aomod@divisor+5,f
 13404  2419  0CA4               	rrf	___aomod@divisor+4,f
 13405  241A  0CA3               	rrf	___aomod@divisor+3,f
 13406  241B  0CA2               	rrf	___aomod@divisor+2,f
 13407  241C  0CA1               	rrf	___aomod@divisor+1,f
 13408  241D  0CA0               	rrf	___aomod@divisor,f
 13409  241E  3001               	movlw	1
 13410  241F  02F2               	subwf	___aomod@counter,f
 13411  2420  1D03               	btfss	3,2
 13412  2421  2BE6               	goto	l4652
 13413  2422                     l4658:	
 13414  2422  0873               	movf	___aomod@sign,w
 13415  2423  1903               	btfsc	3,2
 13416  2424  2C43               	goto	l967
 13417  2425  09A8               	comf	___aomod@dividend,f
 13418  2426  09A9               	comf	___aomod@dividend+1,f
 13419  2427  09AA               	comf	___aomod@dividend+2,f
 13420  2428  09AB               	comf	___aomod@dividend+3,f
 13421  2429  09AC               	comf	___aomod@dividend+4,f
 13422  242A  09AD               	comf	___aomod@dividend+5,f
 13423  242B  09AE               	comf	___aomod@dividend+6,f
 13424  242C  09AF               	comf	___aomod@dividend+7,f
 13425  242D  0AA8               	incf	___aomod@dividend,f
 13426  242E  1D03               	skipz
 13427  242F  2C43               	goto	l967
 13428  2430  0AA9               	incf	___aomod@dividend+1,f
 13429  2431  1D03               	skipz
 13430  2432  2C43               	goto	l967
 13431  2433  0AAA               	incf	___aomod@dividend+2,f
 13432  2434  1D03               	skipz
 13433  2435  2C43               	goto	l967
 13434  2436  0AAB               	incf	___aomod@dividend+3,f
 13435  2437  1D03               	skipz
 13436  2438  2C43               	goto	l967
 13437  2439  0AAC               	incf	___aomod@dividend+4,f
 13438  243A  1D03               	skipz
 13439  243B  2C43               	goto	l967
 13440  243C  0AAD               	incf	___aomod@dividend+5,f
 13441  243D  1D03               	skipz
 13442  243E  2C43               	goto	l967
 13443  243F  0AAE               	incf	___aomod@dividend+6,f
 13444  2440  1D03               	skipz
 13445  2441  2C43               	goto	l967
 13446  2442  0AAF               	incf	___aomod@dividend+7,f
 13447  2443                     l967:	
 13448  2443  0020               	movlb	0	; select bank0
 13449  2444  0828               	movf	___aomod@dividend,w
 13450  2445  00A0               	movwf	?___aomod
 13451  2446  0829               	movf	___aomod@dividend+1,w
 13452  2447  00A1               	movwf	?___aomod+1
 13453  2448  082A               	movf	___aomod@dividend+2,w
 13454  2449  00A2               	movwf	?___aomod+2
 13455  244A  082B               	movf	___aomod@dividend+3,w
 13456  244B  00A3               	movwf	?___aomod+3
 13457  244C  082C               	movf	___aomod@dividend+4,w
 13458  244D  00A4               	movwf	?___aomod+4
 13459  244E  082D               	movf	___aomod@dividend+5,w
 13460  244F  00A5               	movwf	?___aomod+5
 13461  2450  082E               	movf	___aomod@dividend+6,w
 13462  2451  00A6               	movwf	?___aomod+6
 13463  2452  082F               	movf	___aomod@dividend+7,w
 13464  2453  00A7               	movwf	?___aomod+7
 13465  2454  0008               	return
 13466  2455                     __end_of___aomod:	
 13467                           
 13468                           	psect	text32
 13469  270D                     __ptext32:	
 13470 ;; *************** function ___aodiv *****************
 13471 ;; Defined at:
 13472 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 13473 ;; Parameters:    Size  Location     Type
 13474 ;;  divisor         8    0[BANK0 ] long long 
 13475 ;;  dividend        8    8[BANK0 ] long long 
 13476 ;; Auto vars:     Size  Location     Type
 13477 ;;  quotient        8    4[COMMON] long long 
 13478 ;;  sign            1    3[COMMON] unsigned char 
 13479 ;;  counter         1    2[COMMON] unsigned char 
 13480 ;; Return value:  Size  Location     Type
 13481 ;;                  8    0[BANK0 ] long long 
 13482 ;; Registers used:
 13483 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13484 ;; Tracked objects:
 13485 ;;		On entry : 0/0
 13486 ;;		On exit  : 0/0
 13487 ;;		Unchanged: 0/0
 13488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13489 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13490 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13491 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13492 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13493 ;;Total ram usage:       27 bytes
 13494 ;; Hardware stack levels used:    1
 13495 ;; Hardware stack levels required when called:    1
 13496 ;; This function calls:
 13497 ;;		Nothing
 13498 ;; This function is called by:
 13499 ;;		_dtoa
 13500 ;; This function uses a non-reentrant model
 13501 ;;
 13502                           
 13503                           
 13504                           ;psect for function ___aodiv
 13505  270D                     ___aodiv:	
 13506                           
 13507                           ;incstack = 0
 13508                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 13509  270D  01F3               	clrf	___aodiv@sign
 13510  270E  3020               	movlw	low ___aodiv@divisor
 13511  270F  0086               	movwf	6
 13512  2710  3000               	movlw	high ___aodiv@divisor
 13513  2711  0087               	movwf	7
 13514  2712  3F47               	moviw [7]fsr1
 13515  2713  00F1               	movwf	??___aodiv
 13516  2714  1FF1               	btfss	??___aodiv,7
 13517  2715  2F37               	goto	l4600
 13518  2716  0020               	movlb	0	; select bank0
 13519  2717  09A0               	comf	___aodiv@divisor,f
 13520  2718  09A1               	comf	___aodiv@divisor+1,f
 13521  2719  09A2               	comf	___aodiv@divisor+2,f
 13522  271A  09A3               	comf	___aodiv@divisor+3,f
 13523  271B  09A4               	comf	___aodiv@divisor+4,f
 13524  271C  09A5               	comf	___aodiv@divisor+5,f
 13525  271D  09A6               	comf	___aodiv@divisor+6,f
 13526  271E  09A7               	comf	___aodiv@divisor+7,f
 13527  271F  0AA0               	incf	___aodiv@divisor,f
 13528  2720  1D03               	skipz
 13529  2721  2F35               	goto	u569lld
 13530  2722  0AA1               	incf	___aodiv@divisor+1,f
 13531  2723  1D03               	skipz
 13532  2724  2F35               	goto	u569lld
 13533  2725  0AA2               	incf	___aodiv@divisor+2,f
 13534  2726  1D03               	skipz
 13535  2727  2F35               	goto	u569lld
 13536  2728  0AA3               	incf	___aodiv@divisor+3,f
 13537  2729  1D03               	skipz
 13538  272A  2F35               	goto	u569lld
 13539  272B  0AA4               	incf	___aodiv@divisor+4,f
 13540  272C  1D03               	skipz
 13541  272D  2F35               	goto	u569lld
 13542  272E  0AA5               	incf	___aodiv@divisor+5,f
 13543  272F  1D03               	skipz
 13544  2730  2F35               	goto	u569lld
 13545  2731  0AA6               	incf	___aodiv@divisor+6,f
 13546  2732  1D03               	skipz
 13547  2733  2F35               	goto	u569lld
 13548  2734  0AA7               	incf	___aodiv@divisor+7,f
 13549  2735                     u569lld:	
 13550  2735  01F3               	clrf	___aodiv@sign
 13551  2736  0AF3               	incf	___aodiv@sign,f
 13552  2737                     l4600:	
 13553  2737  3028               	movlw	low ___aodiv@dividend
 13554  2738  0086               	movwf	6
 13555  2739  3000               	movlw	high ___aodiv@dividend
 13556  273A  0087               	movwf	7
 13557  273B  3F47               	moviw [7]fsr1
 13558  273C  00F1               	movwf	??___aodiv
 13559  273D  1FF1               	btfss	??___aodiv,7
 13560  273E  2F62               	goto	l4606
 13561  273F  0020               	movlb	0	; select bank0
 13562  2740  09A8               	comf	___aodiv@dividend,f
 13563  2741  09A9               	comf	___aodiv@dividend+1,f
 13564  2742  09AA               	comf	___aodiv@dividend+2,f
 13565  2743  09AB               	comf	___aodiv@dividend+3,f
 13566  2744  09AC               	comf	___aodiv@dividend+4,f
 13567  2745  09AD               	comf	___aodiv@dividend+5,f
 13568  2746  09AE               	comf	___aodiv@dividend+6,f
 13569  2747  09AF               	comf	___aodiv@dividend+7,f
 13570  2748  0AA8               	incf	___aodiv@dividend,f
 13571  2749  1D03               	skipz
 13572  274A  2F5E               	goto	l4604
 13573  274B  0AA9               	incf	___aodiv@dividend+1,f
 13574  274C  1D03               	skipz
 13575  274D  2F5E               	goto	l4604
 13576  274E  0AAA               	incf	___aodiv@dividend+2,f
 13577  274F  1D03               	skipz
 13578  2750  2F5E               	goto	l4604
 13579  2751  0AAB               	incf	___aodiv@dividend+3,f
 13580  2752  1D03               	skipz
 13581  2753  2F5E               	goto	l4604
 13582  2754  0AAC               	incf	___aodiv@dividend+4,f
 13583  2755  1D03               	skipz
 13584  2756  2F5E               	goto	l4604
 13585  2757  0AAD               	incf	___aodiv@dividend+5,f
 13586  2758  1D03               	skipz
 13587  2759  2F5E               	goto	l4604
 13588  275A  0AAE               	incf	___aodiv@dividend+6,f
 13589  275B  1D03               	skipz
 13590  275C  2F5E               	goto	l4604
 13591  275D  0AAF               	incf	___aodiv@dividend+7,f
 13592  275E                     l4604:	
 13593  275E  3001               	movlw	1
 13594  275F  00F1               	movwf	??___aodiv
 13595  2760  0871               	movf	??___aodiv,w
 13596  2761  06F3               	xorwf	___aodiv@sign,f
 13597  2762                     l4606:	
 13598  2762  3074               	movlw	low ___aodiv@quotient
 13599  2763  0086               	movwf	6
 13600  2764  3000               	movlw	high ___aodiv@quotient
 13601  2765  0087               	movwf	7
 13602  2766  3008               	movlw	8
 13603  2767  00F1               	movwf	??___aodiv
 13604  2768  3000               	movlw	0
 13605  2769                     u5720:	
 13606  2769  001E               	movwi fsr1++
 13607  276A  0BF1               	decfsz	??___aodiv,f
 13608  276B  2F69               	goto	u5720
 13609  276C  0020               	movlb	0	; select bank0
 13610  276D  0820               	movf	___aodiv@divisor,w
 13611  276E  0421               	iorwf	___aodiv@divisor+1,w
 13612  276F  0422               	iorwf	___aodiv@divisor+2,w
 13613  2770  0423               	iorwf	___aodiv@divisor+3,w
 13614  2771  0424               	iorwf	___aodiv@divisor+4,w
 13615  2772  0425               	iorwf	___aodiv@divisor+5,w
 13616  2773  0426               	iorwf	___aodiv@divisor+6,w
 13617  2774  0427               	iorwf	___aodiv@divisor+7,w
 13618  2775  1903               	skipnz
 13619  2776  2FCD               	goto	l4628
 13620  2777  01F2               	clrf	___aodiv@counter
 13621  2778  0AF2               	incf	___aodiv@counter,f
 13622  2779                     l4616:	
 13623  2779  1BA7               	btfsc	___aodiv@divisor+7,7
 13624  277A  2F88               	goto	l4618
 13625  277B  35A0               	lslf	___aodiv@divisor,f
 13626  277C  0DA1               	rlf	___aodiv@divisor+1,f
 13627  277D  0DA2               	rlf	___aodiv@divisor+2,f
 13628  277E  0DA3               	rlf	___aodiv@divisor+3,f
 13629  277F  0DA4               	rlf	___aodiv@divisor+4,f
 13630  2780  0DA5               	rlf	___aodiv@divisor+5,f
 13631  2781  0DA6               	rlf	___aodiv@divisor+6,f
 13632  2782  0DA7               	rlf	___aodiv@divisor+7,f
 13633  2783  3001               	movlw	1
 13634  2784  00F1               	movwf	??___aodiv
 13635  2785  0871               	movf	??___aodiv,w
 13636  2786  07F2               	addwf	___aodiv@counter,f
 13637  2787  2F79               	goto	l4616
 13638  2788                     l4618:	
 13639  2788  35F4               	lslf	___aodiv@quotient,f
 13640  2789  0DF5               	rlf	___aodiv@quotient+1,f
 13641  278A  0DF6               	rlf	___aodiv@quotient+2,f
 13642  278B  0DF7               	rlf	___aodiv@quotient+3,f
 13643  278C  0DF8               	rlf	___aodiv@quotient+4,f
 13644  278D  0DF9               	rlf	___aodiv@quotient+5,f
 13645  278E  0DFA               	rlf	___aodiv@quotient+6,f
 13646  278F  0DFB               	rlf	___aodiv@quotient+7,f
 13647  2790  0827               	movf	___aodiv@divisor+7,w
 13648  2791  022F               	subwf	___aodiv@dividend+7,w
 13649  2792  1D03               	skipz
 13650  2793  2FAE               	goto	u5755
 13651  2794  0826               	movf	___aodiv@divisor+6,w
 13652  2795  022E               	subwf	___aodiv@dividend+6,w
 13653  2796  1D03               	skipz
 13654  2797  2FAE               	goto	u5755
 13655  2798  0825               	movf	___aodiv@divisor+5,w
 13656  2799  022D               	subwf	___aodiv@dividend+5,w
 13657  279A  1D03               	skipz
 13658  279B  2FAE               	goto	u5755
 13659  279C  0824               	movf	___aodiv@divisor+4,w
 13660  279D  022C               	subwf	___aodiv@dividend+4,w
 13661  279E  1D03               	skipz
 13662  279F  2FAE               	goto	u5755
 13663  27A0  0823               	movf	___aodiv@divisor+3,w
 13664  27A1  022B               	subwf	___aodiv@dividend+3,w
 13665  27A2  1D03               	skipz
 13666  27A3  2FAE               	goto	u5755
 13667  27A4  0822               	movf	___aodiv@divisor+2,w
 13668  27A5  022A               	subwf	___aodiv@dividend+2,w
 13669  27A6  1D03               	skipz
 13670  27A7  2FAE               	goto	u5755
 13671  27A8  0821               	movf	___aodiv@divisor+1,w
 13672  27A9  0229               	subwf	___aodiv@dividend+1,w
 13673  27AA  1D03               	skipz
 13674  27AB  2FAE               	goto	u5755
 13675  27AC  0820               	movf	___aodiv@divisor,w
 13676  27AD  0228               	subwf	___aodiv@dividend,w
 13677  27AE                     u5755:	
 13678  27AE  1C03               	skipc
 13679  27AF  2FC1               	goto	l4626
 13680  27B0  0820               	movf	___aodiv@divisor,w
 13681  27B1  02A8               	subwf	___aodiv@dividend,f
 13682  27B2  0821               	movf	___aodiv@divisor+1,w
 13683  27B3  3BA9               	subwfb	___aodiv@dividend+1,f
 13684  27B4  0822               	movf	___aodiv@divisor+2,w
 13685  27B5  3BAA               	subwfb	___aodiv@dividend+2,f
 13686  27B6  0823               	movf	___aodiv@divisor+3,w
 13687  27B7  3BAB               	subwfb	___aodiv@dividend+3,f
 13688  27B8  0824               	movf	___aodiv@divisor+4,w
 13689  27B9  3BAC               	subwfb	___aodiv@dividend+4,f
 13690  27BA  0825               	movf	___aodiv@divisor+5,w
 13691  27BB  3BAD               	subwfb	___aodiv@dividend+5,f
 13692  27BC  0826               	movf	___aodiv@divisor+6,w
 13693  27BD  3BAE               	subwfb	___aodiv@dividend+6,f
 13694  27BE  0827               	movf	___aodiv@divisor+7,w
 13695  27BF  3BAF               	subwfb	___aodiv@dividend+7,f
 13696  27C0  1474               	bsf	___aodiv@quotient,0
 13697  27C1                     l4626:	
 13698  27C1  36A7               	lsrf	___aodiv@divisor+7,f
 13699  27C2  0CA6               	rrf	___aodiv@divisor+6,f
 13700  27C3  0CA5               	rrf	___aodiv@divisor+5,f
 13701  27C4  0CA4               	rrf	___aodiv@divisor+4,f
 13702  27C5  0CA3               	rrf	___aodiv@divisor+3,f
 13703  27C6  0CA2               	rrf	___aodiv@divisor+2,f
 13704  27C7  0CA1               	rrf	___aodiv@divisor+1,f
 13705  27C8  0CA0               	rrf	___aodiv@divisor,f
 13706  27C9  3001               	movlw	1
 13707  27CA  02F2               	subwf	___aodiv@counter,f
 13708  27CB  1D03               	btfss	3,2
 13709  27CC  2F88               	goto	l4618
 13710  27CD                     l4628:	
 13711  27CD  0873               	movf	___aodiv@sign,w
 13712  27CE  1903               	btfsc	3,2
 13713  27CF  2FEE               	goto	l954
 13714  27D0  09F4               	comf	___aodiv@quotient,f
 13715  27D1  09F5               	comf	___aodiv@quotient+1,f
 13716  27D2  09F6               	comf	___aodiv@quotient+2,f
 13717  27D3  09F7               	comf	___aodiv@quotient+3,f
 13718  27D4  09F8               	comf	___aodiv@quotient+4,f
 13719  27D5  09F9               	comf	___aodiv@quotient+5,f
 13720  27D6  09FA               	comf	___aodiv@quotient+6,f
 13721  27D7  09FB               	comf	___aodiv@quotient+7,f
 13722  27D8  0AF4               	incf	___aodiv@quotient,f
 13723  27D9  1D03               	skipz
 13724  27DA  2FEE               	goto	l954
 13725  27DB  0AF5               	incf	___aodiv@quotient+1,f
 13726  27DC  1D03               	skipz
 13727  27DD  2FEE               	goto	l954
 13728  27DE  0AF6               	incf	___aodiv@quotient+2,f
 13729  27DF  1D03               	skipz
 13730  27E0  2FEE               	goto	l954
 13731  27E1  0AF7               	incf	___aodiv@quotient+3,f
 13732  27E2  1D03               	skipz
 13733  27E3  2FEE               	goto	l954
 13734  27E4  0AF8               	incf	___aodiv@quotient+4,f
 13735  27E5  1D03               	skipz
 13736  27E6  2FEE               	goto	l954
 13737  27E7  0AF9               	incf	___aodiv@quotient+5,f
 13738  27E8  1D03               	skipz
 13739  27E9  2FEE               	goto	l954
 13740  27EA  0AFA               	incf	___aodiv@quotient+6,f
 13741  27EB  1D03               	skipz
 13742  27EC  2FEE               	goto	l954
 13743  27ED  0AFB               	incf	___aodiv@quotient+7,f
 13744  27EE                     l954:	
 13745  27EE  0874               	movf	___aodiv@quotient,w
 13746  27EF  0020               	movlb	0	; select bank0
 13747  27F0  00A0               	movwf	?___aodiv
 13748  27F1  0875               	movf	___aodiv@quotient+1,w
 13749  27F2  00A1               	movwf	?___aodiv+1
 13750  27F3  0876               	movf	___aodiv@quotient+2,w
 13751  27F4  00A2               	movwf	?___aodiv+2
 13752  27F5  0877               	movf	___aodiv@quotient+3,w
 13753  27F6  00A3               	movwf	?___aodiv+3
 13754  27F7  0878               	movf	___aodiv@quotient+4,w
 13755  27F8  00A4               	movwf	?___aodiv+4
 13756  27F9  0879               	movf	___aodiv@quotient+5,w
 13757  27FA  00A5               	movwf	?___aodiv+5
 13758  27FB  087A               	movf	___aodiv@quotient+6,w
 13759  27FC  00A6               	movwf	?___aodiv+6
 13760  27FD  087B               	movf	___aodiv@quotient+7,w
 13761  27FE  00A7               	movwf	?___aodiv+7
 13762  27FF  0008               	return
 13763  2800                     __end_of___aodiv:	
 13764                           
 13765                           	psect	text33
 13766  3585                     __ptext33:	
 13767 ;; *************** function _ctoa *****************
 13768 ;; Defined at:
 13769 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 13770 ;; Parameters:    Size  Location     Type
 13771 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
 13772 ;;		 -> vsnprintf@f(6), 
 13773 ;;  c               1   18[BANK0 ] unsigned char 
 13774 ;; Auto vars:     Size  Location     Type
 13775 ;;  w               2   20[BANK0 ] int 
 13776 ;;  l               2    0        int 
 13777 ;; Return value:  Size  Location     Type
 13778 ;;                  2   16[BANK0 ] int 
 13779 ;; Registers used:
 13780 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13781 ;; Tracked objects:
 13782 ;;		On entry : 0/0
 13783 ;;		On exit  : 0/0
 13784 ;;		Unchanged: 0/0
 13785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13786 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13787 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13788 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13789 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13790 ;;Total ram usage:        6 bytes
 13791 ;; Hardware stack levels used:    1
 13792 ;; Hardware stack levels required when called:    5
 13793 ;; This function calls:
 13794 ;;		_pad
 13795 ;; This function is called by:
 13796 ;;		_vfpfcnvrt
 13797 ;; This function uses a non-reentrant model
 13798 ;;
 13799                           
 13800                           
 13801                           ;psect for function _ctoa
 13802  3585                     _ctoa:	
 13803                           
 13804                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 13805                           
 13806                           ;incstack = 0
 13807                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13808  3585  0023               	movlb	3	; select bank3
 13809  3586  083E               	movf	_width^(0+384),w
 13810  3587  043F               	iorwf	(_width+1)^(0+384),w
 13811  3588  1D03               	btfss	3,2
 13812  3589  2D92               	goto	l7130
 13813  358A  083F               	movf	(_width+1)^(0+384),w
 13814  358B  0020               	movlb	0	; select bank0
 13815  358C  00B5               	movwf	ctoa@w+1
 13816  358D  0023               	movlb	3	; select bank3
 13817  358E  083E               	movf	_width^(0+384),w
 13818  358F  0020               	movlb	0	; select bank0
 13819  3590  00B4               	movwf	ctoa@w
 13820  3591  2D9B               	goto	l7132
 13821  3592                     l7130:	
 13822  3592  083E               	movf	_width^(0+384),w
 13823  3593  3EFF               	addlw	255
 13824  3594  0020               	movlb	0	; select bank0
 13825  3595  00B4               	movwf	ctoa@w
 13826  3596  30FF               	movlw	255
 13827  3597  0023               	movlb	3	; select bank3
 13828  3598  3D3F               	addwfc	(_width+1)^(0+384),w
 13829  3599  0020               	movlb	0	; select bank0
 13830  359A  00B5               	movwf	ctoa@w+1
 13831  359B                     l7132:	
 13832                           
 13833                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 13834  359B  0832               	movf	ctoa@c,w
 13835  359C  00B3               	movwf	??_ctoa
 13836  359D  0833               	movf	??_ctoa,w
 13837  359E  0024               	movlb	4	; select bank4
 13838  359F  00A0               	movwf	_dbuf^(0+512)
 13839                           
 13840                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 13841  35A0  01A1               	clrf	(_dbuf^(0+512)+1)
 13842                           
 13843                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 13844  35A1  0020               	movlb	0	; select bank0
 13845  35A2  0831               	movf	ctoa@fp+1,w
 13846  35A3  00A7               	movwf	pad@fp+1
 13847  35A4  0830               	movf	ctoa@fp,w
 13848  35A5  00A6               	movwf	pad@fp
 13849  35A6  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
 13850  35A7  00B3               	movwf	??_ctoa
 13851  35A8  0833               	movf	??_ctoa,w
 13852  35A9  00A8               	movwf	pad@buf
 13853  35AA  0835               	movf	ctoa@w+1,w
 13854  35AB  00AA               	movwf	pad@p+1
 13855  35AC  0834               	movf	ctoa@w,w
 13856  35AD  00A9               	movwf	pad@p
 13857  35AE  31B7  275E         	fcall	_pad
 13858  35B0  0020               	movlb	0	; select bank0
 13859  35B1  0827               	movf	?_pad+1,w
 13860  35B2  00B1               	movwf	?_ctoa+1
 13861  35B3  0826               	movf	?_pad,w
 13862  35B4  00B0               	movwf	?_ctoa
 13863  35B5  0008               	return
 13864  35B6                     __end_of_ctoa:	
 13865                           
 13866                           	psect	text34
 13867  375E                     __ptext34:	
 13868 ;; *************** function _pad *****************
 13869 ;; Defined at:
 13870 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 13871 ;; Parameters:    Size  Location     Type
 13872 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
 13873 ;;		 -> vsnprintf@f(6), 
 13874 ;;  buf             1    8[BANK0 ] PTR unsigned char 
 13875 ;;		 -> dbuf(80), 
 13876 ;;  p               2    9[BANK0 ] int 
 13877 ;; Auto vars:     Size  Location     Type
 13878 ;;  w               2   14[BANK0 ] int 
 13879 ;;  i               2   12[BANK0 ] int 
 13880 ;; Return value:  Size  Location     Type
 13881 ;;                  2    6[BANK0 ] int 
 13882 ;; Registers used:
 13883 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13884 ;; Tracked objects:
 13885 ;;		On entry : 0/0
 13886 ;;		On exit  : 0/0
 13887 ;;		Unchanged: 0/0
 13888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13889 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13890 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13891 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13892 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13893 ;;Total ram usage:       10 bytes
 13894 ;; Hardware stack levels used:    1
 13895 ;; Hardware stack levels required when called:    4
 13896 ;; This function calls:
 13897 ;;		_fputc
 13898 ;;		_fputs
 13899 ;;		_strlen
 13900 ;; This function is called by:
 13901 ;;		_ctoa
 13902 ;;		_dtoa
 13903 ;;		_efgtoa
 13904 ;;		_otoa
 13905 ;;		_utoa
 13906 ;;		_xtoa
 13907 ;; This function uses a non-reentrant model
 13908 ;;
 13909                           
 13910                           
 13911                           ;psect for function _pad
 13912  375E                     _pad:	
 13913                           
 13914                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 13915                           
 13916                           ;incstack = 0
 13917                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13918  375E  0023               	movlb	3	; select bank3
 13919  375F  1C42               	btfss	_flags^(0+384),0
 13920  3760  2F6A               	goto	l7070
 13921                           
 13922                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 13923  3761  0020               	movlb	0	; select bank0
 13924  3762  0827               	movf	pad@fp+1,w
 13925  3763  00FB               	movwf	fputs@fp+1
 13926  3764  0826               	movf	pad@fp,w
 13927  3765  00FA               	movwf	fputs@fp
 13928  3766  0828               	movf	pad@buf,w
 13929  3767  31B5  255F  31B7   	fcall	_fputs
 13930  376A                     l7070:	
 13931                           
 13932                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 13933  376A  0020               	movlb	0	; select bank0
 13934  376B  1BAA               	btfsc	pad@p+1,7
 13935  376C  2F72               	goto	l7074
 13936  376D  082A               	movf	pad@p+1,w
 13937  376E  00AF               	movwf	pad@w+1
 13938  376F  0829               	movf	pad@p,w
 13939  3770  00AE               	movwf	pad@w
 13940  3771  2F74               	goto	l536
 13941  3772                     l7074:	
 13942  3772  01AE               	clrf	pad@w
 13943  3773  01AF               	clrf	pad@w+1
 13944  3774                     l536:	
 13945                           
 13946                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 13947  3774  01AC               	clrf	pad@i
 13948  3775  01AD               	clrf	pad@i+1
 13949  3776                     l7080:	
 13950                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 13951                           
 13952                           
 13953                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 13954  3776  082D               	movf	pad@i+1,w
 13955  3777  3A80               	xorlw	128
 13956  3778  00AB               	movwf	??_pad
 13957  3779  082F               	movf	pad@w+1,w
 13958  377A  3A80               	xorlw	128
 13959  377B  022B               	subwf	??_pad,w
 13960  377C  1D03               	skipz
 13961  377D  2F80               	goto	u9905
 13962  377E  082E               	movf	pad@w,w
 13963  377F  022C               	subwf	pad@i,w
 13964  3780                     u9905:	
 13965  3780  1803               	btfsc	3,0
 13966  3781  2F94               	goto	l539
 13967                           
 13968                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 13969  3782  3020               	movlw	32
 13970  3783  00F1               	movwf	fputc@c
 13971  3784  3000               	movlw	0
 13972  3785  00F2               	movwf	fputc@c+1
 13973  3786  0020               	movlb	0	; select bank0
 13974  3787  0827               	movf	pad@fp+1,w
 13975  3788  00F4               	movwf	fputc@fp+1
 13976  3789  0826               	movf	pad@fp,w
 13977  378A  00F3               	movwf	fputc@fp
 13978  378B  31A8  202C  31B7   	fcall	_fputc
 13979                           
 13980                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 13981  378E  3001               	movlw	1
 13982  378F  0020               	movlb	0	; select bank0
 13983  3790  07AC               	addwf	pad@i,f
 13984  3791  3000               	movlw	0
 13985  3792  3DAD               	addwfc	pad@i+1,f
 13986  3793  2F76               	goto	l7080
 13987  3794                     l539:	
 13988                           
 13989                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 13990  3794  0023               	movlb	3	; select bank3
 13991  3795  1842               	btfsc	_flags^(0+384),0
 13992  3796  2FA0               	goto	l7084
 13993                           
 13994                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 13995  3797  0020               	movlb	0	; select bank0
 13996  3798  0827               	movf	pad@fp+1,w
 13997  3799  00FB               	movwf	fputs@fp+1
 13998  379A  0826               	movf	pad@fp,w
 13999  379B  00FA               	movwf	fputs@fp
 14000  379C  0828               	movf	pad@buf,w
 14001  379D  31B5  255F  31B7   	fcall	_fputs
 14002  37A0                     l7084:	
 14003                           
 14004                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 14005  37A0  0020               	movlb	0	; select bank0
 14006  37A1  0828               	movf	pad@buf,w
 14007  37A2  00F1               	movwf	strlen@s
 14008  37A3  3002               	movlw	2
 14009  37A4  00F2               	movwf	strlen@s+1
 14010  37A5  31B3  237B         	fcall	_strlen
 14011  37A7  0020               	movlb	0	; select bank0
 14012  37A8  082E               	movf	pad@w,w
 14013  37A9  0771               	addwf	?_strlen,w
 14014  37AA  00A6               	movwf	?_pad
 14015  37AB  082F               	movf	pad@w+1,w
 14016  37AC  3D72               	addwfc	?_strlen+1,w
 14017  37AD  00A7               	movwf	?_pad+1
 14018  37AE  0008               	return
 14019  37AF                     __end_of_pad:	
 14020                           
 14021                           	psect	text35
 14022  337B                     __ptext35:	
 14023 ;; *************** function _strlen *****************
 14024 ;; Defined at:
 14025 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 14026 ;; Parameters:    Size  Location     Type
 14027 ;;  s               2    1[COMMON] PTR const unsigned char 
 14028 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), 
 14029 ;; Auto vars:     Size  Location     Type
 14030 ;;  a               2    3[COMMON] PTR const unsigned char 
 14031 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), 
 14032 ;; Return value:  Size  Location     Type
 14033 ;;                  2    1[COMMON] unsigned int 
 14034 ;; Registers used:
 14035 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14036 ;; Tracked objects:
 14037 ;;		On entry : 0/0
 14038 ;;		On exit  : 0/0
 14039 ;;		Unchanged: 0/0
 14040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14041 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14042 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14044 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14045 ;;Total ram usage:        4 bytes
 14046 ;; Hardware stack levels used:    1
 14047 ;; Hardware stack levels required when called:    1
 14048 ;; This function calls:
 14049 ;;		Nothing
 14050 ;; This function is called by:
 14051 ;;		_pad
 14052 ;;		_stoa
 14053 ;; This function uses a non-reentrant model
 14054 ;;
 14055                           
 14056                           
 14057                           ;psect for function _strlen
 14058  337B                     _strlen:	
 14059                           
 14060                           ;incstack = 0
 14061                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 14062  337B  0872               	movf	strlen@s+1,w
 14063  337C  00F4               	movwf	strlen@a+1
 14064  337D  0871               	movf	strlen@s,w
 14065  337E  00F3               	movwf	strlen@a
 14066  337F                     l4246:	
 14067  337F  0871               	movf	strlen@s,w
 14068  3380  0086               	movwf	6
 14069  3381  0872               	movf	strlen@s+1,w
 14070  3382  0087               	movwf	7
 14071  3383  0801               	movf	1,w
 14072  3384  1903               	btfsc	3,2
 14073  3385  2B8B               	goto	l4248
 14074  3386  3001               	movlw	1
 14075  3387  07F1               	addwf	strlen@s,f
 14076  3388  3000               	movlw	0
 14077  3389  3DF2               	addwfc	strlen@s+1,f
 14078  338A  2B7F               	goto	l4246
 14079  338B                     l4248:	
 14080  338B  0873               	movf	strlen@a,w
 14081  338C  0271               	subwf	strlen@s,w
 14082  338D  00F1               	movwf	?_strlen
 14083  338E  0874               	movf	strlen@a+1,w
 14084  338F  3B72               	subwfb	strlen@s+1,w
 14085  3390  00F2               	movwf	?_strlen+1
 14086  3391  0008               	return
 14087  3392                     __end_of_strlen:	
 14088                           
 14089                           	psect	text36
 14090  355F                     __ptext36:	
 14091 ;; *************** function _fputs *****************
 14092 ;; Defined at:
 14093 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 14094 ;; Parameters:    Size  Location     Type
 14095 ;;  s               1    wreg     PTR const unsigned char 
 14096 ;;		 -> dbuf(80), 
 14097 ;;  fp              2   10[COMMON] PTR struct _IO_FILE
 14098 ;;		 -> vsnprintf@f(6), 
 14099 ;; Auto vars:     Size  Location     Type
 14100 ;;  s               1    5[BANK0 ] PTR const unsigned char 
 14101 ;;		 -> dbuf(80), 
 14102 ;;  i               2    3[BANK0 ] int 
 14103 ;;  c               1    2[BANK0 ] unsigned char 
 14104 ;; Return value:  Size  Location     Type
 14105 ;;                  2   10[COMMON] int 
 14106 ;; Registers used:
 14107 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14108 ;; Tracked objects:
 14109 ;;		On entry : 0/0
 14110 ;;		On exit  : 0/0
 14111 ;;		Unchanged: 0/0
 14112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14113 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14114 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14115 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14116 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14117 ;;Total ram usage:        8 bytes
 14118 ;; Hardware stack levels used:    1
 14119 ;; Hardware stack levels required when called:    3
 14120 ;; This function calls:
 14121 ;;		_fputc
 14122 ;; This function is called by:
 14123 ;;		_pad
 14124 ;; This function uses a non-reentrant model
 14125 ;;
 14126                           
 14127                           
 14128                           ;psect for function _fputs
 14129  355F                     _fputs:	
 14130                           
 14131                           ;incstack = 0
 14132                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14133                           ;fputs@s stored from wreg
 14134  355F  0020               	movlb	0	; select bank0
 14135  3560  00A5               	movwf	fputs@s
 14136  3561  01A3               	clrf	fputs@i
 14137  3562  01A4               	clrf	fputs@i+1
 14138  3563                     l4240:	
 14139  3563  0823               	movf	fputs@i,w
 14140  3564  0725               	addwf	fputs@s,w
 14141  3565  00A0               	movwf	??_fputs
 14142  3566  0820               	movf	??_fputs,w
 14143  3567  0086               	movwf	6
 14144  3568  3002               	movlw	2	; select bank4/5
 14145  3569  0087               	movwf	7
 14146  356A  0801               	movf	1,w
 14147  356B  00A1               	movwf	??_fputs+1
 14148  356C  0821               	movf	??_fputs+1,w
 14149  356D  00A2               	movwf	fputs@c
 14150  356E  0822               	movf	fputs@c,w
 14151  356F  1903               	btfsc	3,2
 14152  3570  0008               	return
 14153  3571  0822               	movf	fputs@c,w
 14154  3572  00A0               	movwf	??_fputs
 14155  3573  01A1               	clrf	??_fputs+1
 14156  3574  0820               	movf	??_fputs,w
 14157  3575  00F1               	movwf	fputc@c
 14158  3576  0821               	movf	??_fputs+1,w
 14159  3577  00F2               	movwf	fputc@c+1
 14160  3578  087B               	movf	fputs@fp+1,w
 14161  3579  00F4               	movwf	fputc@fp+1
 14162  357A  087A               	movf	fputs@fp,w
 14163  357B  00F3               	movwf	fputc@fp
 14164  357C  31A8  202C  31B5   	fcall	_fputc
 14165  357F  3001               	movlw	1
 14166  3580  0020               	movlb	0	; select bank0
 14167  3581  07A3               	addwf	fputs@i,f
 14168  3582  3000               	movlw	0
 14169  3583  3DA4               	addwfc	fputs@i+1,f
 14170  3584  2D63               	goto	l4240
 14171  3585                     __end_of_fputs:	
 14172                           
 14173                           	psect	text37
 14174  282C                     __ptext37:	
 14175 ;; *************** function _fputc *****************
 14176 ;; Defined at:
 14177 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 14178 ;; Parameters:    Size  Location     Type
 14179 ;;  c               2    1[COMMON] int 
 14180 ;;  fp              2    3[COMMON] PTR struct _IO_FILE
 14181 ;;		 -> vsnprintf@f(6), 
 14182 ;; Auto vars:     Size  Location     Type
 14183 ;;		None
 14184 ;; Return value:  Size  Location     Type
 14185 ;;                  2    1[COMMON] int 
 14186 ;; Registers used:
 14187 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14188 ;; Tracked objects:
 14189 ;;		On entry : 0/0
 14190 ;;		On exit  : 0/0
 14191 ;;		Unchanged: 0/0
 14192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14193 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14195 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14196 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14197 ;;Total ram usage:        9 bytes
 14198 ;; Hardware stack levels used:    1
 14199 ;; Hardware stack levels required when called:    2
 14200 ;; This function calls:
 14201 ;;		_putch
 14202 ;; This function is called by:
 14203 ;;		_pad
 14204 ;;		_stoa
 14205 ;;		_vfpfcnvrt
 14206 ;;		_fputs
 14207 ;; This function uses a non-reentrant model
 14208 ;;
 14209                           
 14210                           
 14211                           ;psect for function _fputc
 14212  282C                     _fputc:	
 14213                           
 14214                           ;incstack = 0
 14215                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14216  282C  0873               	movf	fputc@fp,w
 14217  282D  0474               	iorwf	fputc@fp+1,w
 14218  282E  1903               	btfsc	3,2
 14219  282F  2834               	goto	l4222
 14220  2830  0873               	movf	fputc@fp,w
 14221  2831  0474               	iorwf	fputc@fp+1,w
 14222  2832  1D03               	btfss	3,2
 14223  2833  2838               	goto	l4224
 14224  2834                     l4222:	
 14225  2834  0871               	movf	fputc@c,w
 14226  2835  3187  27FE         	fcall	_putch
 14227  2837  0008               	return
 14228  2838                     l4224:	
 14229  2838  0873               	movf	fputc@fp,w
 14230  2839  0086               	movwf	6
 14231  283A  0874               	movf	fputc@fp+1,w
 14232  283B  0087               	movwf	7
 14233  283C  3144               	addfsr 1,4
 14234  283D  0016               	moviw fsr1++
 14235  283E  0401               	iorwf	1,w
 14236  283F  1903               	btfsc	3,2
 14237  2840  285F               	goto	l4228
 14238  2841  0873               	movf	fputc@fp,w
 14239  2842  0086               	movwf	6
 14240  2843  0874               	movf	fputc@fp+1,w
 14241  2844  0087               	movwf	7
 14242  2845  3144               	addfsr 1,4
 14243  2846  3F40               	moviw [0]fsr1
 14244  2847  00F5               	movwf	??_fputc
 14245  2848  3F41               	moviw [1]fsr1
 14246  2849  00F6               	movwf	??_fputc+1
 14247  284A  0873               	movf	fputc@fp,w
 14248  284B  0086               	movwf	6
 14249  284C  0874               	movf	fputc@fp+1,w
 14250  284D  0087               	movwf	7
 14251  284E  3142               	addfsr 1,2
 14252  284F  3F40               	moviw [0]fsr1
 14253  2850  00F7               	movwf	??_fputc+2
 14254  2851  3F41               	moviw [1]fsr1
 14255  2852  00F8               	movwf	??_fputc+3
 14256  2853  0878               	movf	??_fputc+3,w
 14257  2854  3A80               	xorlw	128
 14258  2855  00F9               	movwf	??_fputc+4
 14259  2856  0876               	movf	??_fputc+1,w
 14260  2857  3A80               	xorlw	128
 14261  2858  0279               	subwf	??_fputc+4,w
 14262  2859  1D03               	skipz
 14263  285A  285D               	goto	u4765
 14264  285B  0875               	movf	??_fputc,w
 14265  285C  0277               	subwf	??_fputc+2,w
 14266  285D                     u4765:	
 14267  285D  1803               	skipnc
 14268  285E  0008               	return
 14269  285F                     l4228:	
 14270  285F  0873               	movf	fputc@fp,w
 14271  2860  0086               	movwf	6
 14272  2861  0874               	movf	fputc@fp+1,w
 14273  2862  0087               	movwf	7
 14274  2863  3142               	addfsr 1,2
 14275  2864  0873               	movf	fputc@fp,w
 14276  2865  0084               	movwf	4
 14277  2866  0874               	movf	fputc@fp+1,w
 14278  2867  0085               	movwf	5
 14279  2868  3F40               	moviw [0]fsr1
 14280  2869  0700               	addwf	0,w
 14281  286A  00F5               	movwf	??_fputc
 14282  286B  3101               	addfsr 0,1
 14283  286C  3F41               	moviw [1]fsr1
 14284  286D  3D00               	addwfc	0,w
 14285  286E  00F6               	movwf	??_fputc+1
 14286  286F  0875               	movf	??_fputc,w
 14287  2870  0086               	movwf	6
 14288  2871  0876               	movf	??_fputc+1,w
 14289  2872  0087               	movwf	7
 14290  2873  0871               	movf	fputc@c,w
 14291  2874  0081               	movwf	1
 14292  2875  0873               	movf	fputc@fp,w
 14293  2876  0086               	movwf	6
 14294  2877  0874               	movf	fputc@fp+1,w
 14295  2878  0087               	movwf	7
 14296  2879  3142               	addfsr 1,2
 14297  287A  3001               	movlw	1
 14298  287B  0781               	addwf	1,f
 14299  287C  3141               	addfsr 1,1
 14300  287D  1803               	skipnc
 14301  287E  0A81               	incf	1,f
 14302  287F  0008               	return
 14303  2880                     __end_of_fputc:	
 14304                           
 14305                           	psect	text38
 14306  07FE                     __ptext38:	
 14307 ;; *************** function _putch *****************
 14308 ;; Defined at:
 14309 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
 14310 ;; Parameters:    Size  Location     Type
 14311 ;;  c               1    wreg     unsigned char 
 14312 ;; Auto vars:     Size  Location     Type
 14313 ;;  c               1    0[COMMON] unsigned char 
 14314 ;; Return value:  Size  Location     Type
 14315 ;;                  1    wreg      void 
 14316 ;; Registers used:
 14317 ;;		wreg
 14318 ;; Tracked objects:
 14319 ;;		On entry : 0/0
 14320 ;;		On exit  : 0/0
 14321 ;;		Unchanged: 0/0
 14322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14327 ;;Total ram usage:        0 bytes
 14328 ;; Hardware stack levels used:    1
 14329 ;; Hardware stack levels required when called:    1
 14330 ;; This function calls:
 14331 ;;		Nothing
 14332 ;; This function is called by:
 14333 ;;		_fputc
 14334 ;; This function uses a non-reentrant model
 14335 ;;
 14336                           
 14337                           
 14338                           ;psect for function _putch
 14339  07FE                     _putch:	
 14340                           
 14341                           ;incstack = 0
 14342                           ; Regs used in _putch: [wreg]
 14343  07FE  0008               	return
 14344  07FF                     __end_of_putch:	
 14345                           
 14346                           	psect	text39
 14347  2D5F                     __ptext39:	
 14348 ;; *************** function _atoi *****************
 14349 ;; Defined at:
 14350 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 14351 ;; Parameters:    Size  Location     Type
 14352 ;;  s               2    7[COMMON] PTR const unsigned char 
 14353 ;;		 -> STR_24(18), STR_23(18), STR_22(19), STR_21(20), 
 14354 ;;		 -> STR_20(20), STR_19(21), STR_18(21), STR_17(21), 
 14355 ;;		 -> STR_16(22), STR_15(22), STR_14(21), STR_13(21), 
 14356 ;;		 -> STR_8(57), STR_7(44), STR_6(42), STR_3(43), 
 14357 ;; Auto vars:     Size  Location     Type
 14358 ;;  n               2   11[BANK0 ] int 
 14359 ;;  neg             2    4[BANK0 ] int 
 14360 ;; Return value:  Size  Location     Type
 14361 ;;                  2    7[COMMON] int 
 14362 ;; Registers used:
 14363 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14364 ;; Tracked objects:
 14365 ;;		On entry : 0/0
 14366 ;;		On exit  : 0/0
 14367 ;;		Unchanged: 0/0
 14368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14369 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14370 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14371 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14372 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14373 ;;Total ram usage:       15 bytes
 14374 ;; Hardware stack levels used:    1
 14375 ;; Hardware stack levels required when called:    2
 14376 ;; This function calls:
 14377 ;;		___wmul
 14378 ;;		_isdigit
 14379 ;;		_isspace
 14380 ;; This function is called by:
 14381 ;;		_vfpfcnvrt
 14382 ;; This function uses a non-reentrant model
 14383 ;;
 14384                           
 14385                           
 14386                           ;psect for function _atoi
 14387  2D5F                     _atoi:	
 14388                           
 14389                           ;incstack = 0
 14390                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14391  2D5F  0020               	movlb	0	; select bank0
 14392  2D60  01AB               	clrf	atoi@n
 14393  2D61  01AC               	clrf	atoi@n+1
 14394  2D62  01A4               	clrf	atoi@neg
 14395  2D63  01A5               	clrf	atoi@neg+1
 14396  2D64                     l7688:	
 14397  2D64  01AA               	clrf	_atoi$1558
 14398  2D65  0AAA               	incf	_atoi$1558,f
 14399  2D66  0877               	movf	atoi@s,w
 14400  2D67  0084               	movwf	4
 14401  2D68  0878               	movf	atoi@s+1,w
 14402  2D69  0085               	movwf	5
 14403  2D6A  0012               	moviw fsr0++
 14404  2D6B  3A20               	xorlw	32
 14405  2D6C  1903               	btfsc	3,2
 14406  2D6D  2D80               	goto	l7696
 14407  2D6E  0877               	movf	atoi@s,w
 14408  2D6F  0084               	movwf	4
 14409  2D70  0878               	movf	atoi@s+1,w
 14410  2D71  0085               	movwf	5
 14411  2D72  0800               	movf	0,w	;code access
 14412  2D73  3EF7               	addlw	247
 14413  2D74  00A0               	movwf	??_atoi
 14414  2D75  30FF               	movlw	255
 14415  2D76  1803               	skipnc
 14416  2D77  3000               	movlw	0
 14417  2D78  00A1               	movwf	??_atoi+1
 14418  2D79  3000               	movlw	0
 14419  2D7A  0221               	subwf	??_atoi+1,w
 14420  2D7B  3005               	movlw	5
 14421  2D7C  1903               	skipnz
 14422  2D7D  0220               	subwf	??_atoi,w
 14423  2D7E  1803               	btfsc	3,0
 14424  2D7F  01AA               	clrf	_atoi$1558
 14425  2D80                     l7696:	
 14426  2D80  082A               	movf	_atoi$1558,w
 14427  2D81  00A0               	movwf	??_atoi
 14428  2D82  01A1               	clrf	??_atoi+1
 14429  2D83  0820               	movf	??_atoi,w
 14430  2D84  00A6               	movwf	_atoi$1557
 14431  2D85  0821               	movf	??_atoi+1,w
 14432  2D86  00A7               	movwf	_atoi$1557+1
 14433  2D87  0826               	movf	_atoi$1557,w
 14434  2D88  0427               	iorwf	_atoi$1557+1,w
 14435  2D89  1903               	btfsc	3,2
 14436  2D8A  2D95               	goto	l7704
 14437  2D8B  3001               	movlw	1
 14438  2D8C  07F7               	addwf	atoi@s,f
 14439  2D8D  3000               	movlw	0
 14440  2D8E  3DF8               	addwfc	atoi@s+1,f
 14441  2D8F  2D64               	goto	l7688
 14442  2D90                     l7702:	
 14443  2D90  3001               	movlw	1
 14444  2D91  00A4               	movwf	atoi@neg
 14445  2D92  3000               	movlw	0
 14446  2D93  00A5               	movwf	atoi@neg+1
 14447  2D94  2DC8               	goto	l1340
 14448  2D95                     l7704:	
 14449  2D95  0877               	movf	atoi@s,w
 14450  2D96  0084               	movwf	4
 14451  2D97  0878               	movf	atoi@s+1,w
 14452  2D98  0085               	movwf	5
 14453  2D99  0800               	movf	0,w	;code access
 14454  2D9A  00A0               	movwf	??_atoi
 14455  2D9B  01A1               	clrf	??_atoi+1
 14456                           
 14457                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14458                           ; Switch size 1, requested type "simple"
 14459                           ; Number of cases is 1, Range of values is 0 to 0
 14460                           ; switch strategies available:
 14461                           ; Name         Instructions Cycles
 14462                           ; simple_byte            4     3 (average)
 14463                           ; direct_byte            8     6 (fixed)
 14464                           ; jumptable            260     6 (fixed)
 14465                           ;	Chosen strategy is simple_byte
 14466  2D9C  0821               	movf	??_atoi+1,w
 14467  2D9D  3A00               	xorlw	0	; case 0
 14468  2D9E  1903               	skipnz
 14469  2D9F  2DA1               	goto	l8510
 14470  2DA0  2DCC               	goto	l7710
 14471  2DA1                     l8510:	
 14472                           
 14473                           ; Switch size 1, requested type "simple"
 14474                           ; Number of cases is 2, Range of values is 43 to 45
 14475                           ; switch strategies available:
 14476                           ; Name         Instructions Cycles
 14477                           ; simple_byte            7     4 (average)
 14478                           ; direct_byte           15     9 (fixed)
 14479                           ; jumptable            263     9 (fixed)
 14480                           ;	Chosen strategy is simple_byte
 14481  2DA1  0820               	movf	??_atoi,w
 14482  2DA2  3A2B               	xorlw	43	; case 43
 14483  2DA3  1903               	skipnz
 14484  2DA4  2DC8               	goto	l1340
 14485  2DA5  3A06               	xorlw	6	; case 45
 14486  2DA6  1903               	skipnz
 14487  2DA7  2D90               	goto	l7702
 14488  2DA8  2DCC               	goto	l7710
 14489  2DA9                     l7706:	
 14490  2DA9  0877               	movf	atoi@s,w
 14491  2DAA  0084               	movwf	4
 14492  2DAB  0878               	movf	atoi@s+1,w
 14493  2DAC  0085               	movwf	5
 14494  2DAD  0800               	movf	0,w	;code access
 14495  2DAE  00A0               	movwf	??_atoi
 14496  2DAF  082C               	movf	atoi@n+1,w
 14497  2DB0  00F2               	movwf	___wmul@multiplier+1
 14498  2DB1  082B               	movf	atoi@n,w
 14499  2DB2  00F1               	movwf	___wmul@multiplier
 14500  2DB3  300A               	movlw	10
 14501  2DB4  00F3               	movwf	___wmul@multiplicand
 14502  2DB5  3000               	movlw	0
 14503  2DB6  00F4               	movwf	___wmul@multiplicand+1
 14504  2DB7  31B4  2409  31AD   	fcall	___wmul
 14505  2DBA  0872               	movf	?___wmul+1,w
 14506  2DBB  0020               	movlb	0	; select bank0
 14507  2DBC  00A2               	movwf	??_atoi+2
 14508  2DBD  0820               	movf	??_atoi,w
 14509  2DBE  0271               	subwf	?___wmul,w
 14510  2DBF  00A1               	movwf	??_atoi+1
 14511  2DC0  1C03               	skipc
 14512  2DC1  03A2               	decf	??_atoi+2,f
 14513  2DC2  0821               	movf	??_atoi+1,w
 14514  2DC3  3E30               	addlw	48
 14515  2DC4  00AB               	movwf	atoi@n
 14516  2DC5  3000               	movlw	0
 14517  2DC6  3D22               	addwfc	??_atoi+2,w
 14518  2DC7  00AC               	movwf	atoi@n+1
 14519  2DC8                     l1340:	
 14520  2DC8  3001               	movlw	1
 14521  2DC9  07F7               	addwf	atoi@s,f
 14522  2DCA  3000               	movlw	0
 14523  2DCB  3DF8               	addwfc	atoi@s+1,f
 14524  2DCC                     l7710:	
 14525  2DCC  0877               	movf	atoi@s,w
 14526  2DCD  0084               	movwf	4
 14527  2DCE  0878               	movf	atoi@s+1,w
 14528  2DCF  0085               	movwf	5
 14529  2DD0  0800               	movf	0,w	;code access
 14530  2DD1  3ED0               	addlw	208
 14531  2DD2  00A0               	movwf	??_atoi
 14532  2DD3  30FF               	movlw	255
 14533  2DD4  1803               	skipnc
 14534  2DD5  3000               	movlw	0
 14535  2DD6  00A1               	movwf	??_atoi+1
 14536  2DD7  3000               	movlw	0
 14537  2DD8  0221               	subwf	??_atoi+1,w
 14538  2DD9  300A               	movlw	10
 14539  2DDA  1903               	skipnz
 14540  2DDB  0220               	subwf	??_atoi,w
 14541  2DDC  1803               	btfsc	3,0
 14542  2DDD  2DE0               	goto	u11160
 14543  2DDE  3001               	movlw	1
 14544  2DDF  2DE1               	goto	u11170
 14545  2DE0                     u11160:	
 14546  2DE0  3000               	movlw	0
 14547  2DE1                     u11170:	
 14548  2DE1  00A2               	movwf	??_atoi+2
 14549  2DE2  01A3               	clrf	??_atoi+3
 14550  2DE3  0822               	movf	??_atoi+2,w
 14551  2DE4  00A8               	movwf	_atoi$1559
 14552  2DE5  0823               	movf	??_atoi+3,w
 14553  2DE6  00A9               	movwf	_atoi$1559+1
 14554  2DE7  0828               	movf	_atoi$1559,w
 14555  2DE8  0429               	iorwf	_atoi$1559+1,w
 14556  2DE9  1D03               	btfss	3,2
 14557  2DEA  2DA9               	goto	l7706
 14558  2DEB  0824               	movf	atoi@neg,w
 14559  2DEC  0425               	iorwf	atoi@neg+1,w
 14560  2DED  1D03               	btfss	3,2
 14561  2DEE  2DFB               	goto	l7720
 14562  2DEF  092B               	comf	atoi@n,w
 14563  2DF0  00A0               	movwf	??_atoi
 14564  2DF1  092C               	comf	atoi@n+1,w
 14565  2DF2  00A1               	movwf	??_atoi+1
 14566  2DF3  0AA0               	incf	??_atoi,f
 14567  2DF4  1903               	skipnz
 14568  2DF5  0AA1               	incf	??_atoi+1,f
 14569  2DF6  0820               	movf	??_atoi,w
 14570  2DF7  00F7               	movwf	?_atoi
 14571  2DF8  0821               	movf	??_atoi+1,w
 14572  2DF9  00F8               	movwf	?_atoi+1
 14573  2DFA  0008               	return
 14574  2DFB                     l7720:	
 14575  2DFB  082C               	movf	atoi@n+1,w
 14576  2DFC  00F8               	movwf	?_atoi+1
 14577  2DFD  082B               	movf	atoi@n,w
 14578  2DFE  00F7               	movwf	?_atoi
 14579  2DFF  0008               	return
 14580  2E00                     __end_of_atoi:	
 14581                           
 14582                           	psect	text40
 14583  3424                     __ptext40:	
 14584 ;; *************** function _isspace *****************
 14585 ;; Defined at:
 14586 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 14587 ;; Parameters:    Size  Location     Type
 14588 ;;  c               2    1[COMMON] int 
 14589 ;; Auto vars:     Size  Location     Type
 14590 ;;		None
 14591 ;; Return value:  Size  Location     Type
 14592 ;;                  2    1[COMMON] int 
 14593 ;; Registers used:
 14594 ;;		wreg, status,2, status,0
 14595 ;; Tracked objects:
 14596 ;;		On entry : 0/0
 14597 ;;		On exit  : 0/0
 14598 ;;		Unchanged: 0/0
 14599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14600 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14601 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14602 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14603 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14604 ;;Total ram usage:        5 bytes
 14605 ;; Hardware stack levels used:    1
 14606 ;; Hardware stack levels required when called:    1
 14607 ;; This function calls:
 14608 ;;		Nothing
 14609 ;; This function is called by:
 14610 ;;		_atoi
 14611 ;; This function uses a non-reentrant model
 14612 ;;
 14613                           
 14614                           
 14615                           ;psect for function _isspace
 14616  3424                     _isspace:	
 14617                           
 14618                           ;incstack = 0
 14619                           ; Regs used in _isspace: [wreg+status,2+status,0]
 14620  3424  01F5               	clrf	_isspace$1597
 14621  3425  0AF5               	incf	_isspace$1597,f
 14622  3426  3020               	movlw	32
 14623  3427  0671               	xorwf	isspace@c,w
 14624  3428  0472               	iorwf	isspace@c+1,w
 14625  3429  1903               	btfsc	3,2
 14626  342A  2C38               	goto	l5152
 14627  342B  0871               	movf	isspace@c,w
 14628  342C  3EF7               	addlw	247
 14629  342D  00F3               	movwf	??_isspace
 14630  342E  30FF               	movlw	255
 14631  342F  3D72               	addwfc	isspace@c+1,w
 14632  3430  00F4               	movwf	??_isspace+1
 14633  3431  3000               	movlw	0
 14634  3432  0274               	subwf	??_isspace+1,w
 14635  3433  3005               	movlw	5
 14636  3434  1903               	skipnz
 14637  3435  0273               	subwf	??_isspace,w
 14638  3436  1803               	btfsc	3,0
 14639  3437  01F5               	clrf	_isspace$1597
 14640  3438                     l5152:	
 14641  3438  0875               	movf	_isspace$1597,w
 14642  3439  00F3               	movwf	??_isspace
 14643  343A  01F4               	clrf	??_isspace+1
 14644  343B  0873               	movf	??_isspace,w
 14645  343C  00F1               	movwf	?_isspace
 14646  343D  0874               	movf	??_isspace+1,w
 14647  343E  00F2               	movwf	?_isspace+1
 14648  343F  0008               	return
 14649  3440                     __end_of_isspace:	
 14650                           
 14651                           	psect	text41
 14652  3364                     __ptext41:	
 14653 ;; *************** function _isdigit *****************
 14654 ;; Defined at:
 14655 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 14656 ;; Parameters:    Size  Location     Type
 14657 ;;  c               2    1[COMMON] int 
 14658 ;; Auto vars:     Size  Location     Type
 14659 ;;		None
 14660 ;; Return value:  Size  Location     Type
 14661 ;;                  2    1[COMMON] int 
 14662 ;; Registers used:
 14663 ;;		wreg, status,2, status,0
 14664 ;; Tracked objects:
 14665 ;;		On entry : 0/0
 14666 ;;		On exit  : 0/0
 14667 ;;		Unchanged: 0/0
 14668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14669 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14671 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14672 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14673 ;;Total ram usage:        6 bytes
 14674 ;; Hardware stack levels used:    1
 14675 ;; Hardware stack levels required when called:    1
 14676 ;; This function calls:
 14677 ;;		Nothing
 14678 ;; This function is called by:
 14679 ;;		_vfpfcnvrt
 14680 ;;		_atoi
 14681 ;; This function uses a non-reentrant model
 14682 ;;
 14683                           
 14684                           
 14685                           ;psect for function _isdigit
 14686  3364                     _isdigit:	
 14687                           
 14688                           ;incstack = 0
 14689                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 14690  3364  0871               	movf	isdigit@c,w
 14691  3365  3ED0               	addlw	208
 14692  3366  00F3               	movwf	??_isdigit
 14693  3367  30FF               	movlw	255
 14694  3368  3D72               	addwfc	isdigit@c+1,w
 14695  3369  00F4               	movwf	??_isdigit+1
 14696  336A  3000               	movlw	0
 14697  336B  0274               	subwf	??_isdigit+1,w
 14698  336C  300A               	movlw	10
 14699  336D  1903               	skipnz
 14700  336E  0273               	subwf	??_isdigit,w
 14701  336F  1803               	btfsc	3,0
 14702  3370  2B73               	goto	u5620
 14703  3371  3001               	movlw	1
 14704  3372  2B74               	goto	u5630
 14705  3373                     u5620:	
 14706  3373  3000               	movlw	0
 14707  3374                     u5630:	
 14708  3374  00F5               	movwf	??_isdigit+2
 14709  3375  01F6               	clrf	??_isdigit+3
 14710  3376  0875               	movf	??_isdigit+2,w
 14711  3377  00F1               	movwf	?_isdigit
 14712  3378  0876               	movf	??_isdigit+3,w
 14713  3379  00F2               	movwf	?_isdigit+1
 14714  337A  0008               	return
 14715  337B                     __end_of_isdigit:	
 14716                           
 14717                           	psect	text42
 14718  33EF                     __ptext42:	
 14719 ;; *************** function _EUSART_Write_Text *****************
 14720 ;; Defined at:
 14721 ;;		line 75 in file "EUSART.c"
 14722 ;; Parameters:    Size  Location     Type
 14723 ;;  text            2    2[COMMON] PTR unsigned char 
 14724 ;;		 -> STR_25(3), STR_12(3), STR_11(42), STR_10(45), 
 14725 ;;		 -> STR_9(42), STR_5(3), STR_4(53), messageBuffer(127), 
 14726 ;;		 -> STR_2(46), STR_1(40), 
 14727 ;; Auto vars:     Size  Location     Type
 14728 ;;  i               2    5[COMMON] int 
 14729 ;; Return value:  Size  Location     Type
 14730 ;;                  1    wreg      void 
 14731 ;; Registers used:
 14732 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14733 ;; Tracked objects:
 14734 ;;		On entry : 0/0
 14735 ;;		On exit  : 0/0
 14736 ;;		Unchanged: 0/0
 14737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14738 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14739 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14740 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14741 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14742 ;;Total ram usage:        5 bytes
 14743 ;; Hardware stack levels used:    1
 14744 ;; Hardware stack levels required when called:    2
 14745 ;; This function calls:
 14746 ;;		_EUSART_Write
 14747 ;; This function is called by:
 14748 ;;		_statemachine
 14749 ;;		_printotAFERegisters
 14750 ;; This function uses a non-reentrant model
 14751 ;;
 14752                           
 14753                           
 14754                           ;psect for function _EUSART_Write_Text
 14755  33EF                     _EUSART_Write_Text:	
 14756                           
 14757                           ;EUSART.c: 75: void EUSART_Write_Text(char *text);EUSART.c: 76: {;EUSART.c: 77:   int i;
      +                          ;EUSART.c: 78:   for(i=0;text[i]!='\0';i++)
 14758                           
 14759                           ;incstack = 0
 14760                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14761  33EF  01F5               	clrf	EUSART_Write_Text@i
 14762  33F0  01F6               	clrf	EUSART_Write_Text@i+1
 14763  33F1                     l6372:	
 14764  33F1  0872               	movf	EUSART_Write_Text@text,w
 14765  33F2  0775               	addwf	EUSART_Write_Text@i,w
 14766  33F3  0084               	movwf	4
 14767  33F4  0873               	movf	EUSART_Write_Text@text+1,w
 14768  33F5  3D76               	addwfc	EUSART_Write_Text@i+1,w
 14769  33F6  0085               	movwf	5
 14770  33F7  0012               	moviw fsr0++
 14771  33F8  1903               	btfsc	3,2
 14772  33F9  0008               	return
 14773                           
 14774                           ;EUSART.c: 79:    EUSART_Write(text[i]);
 14775  33FA  0872               	movf	EUSART_Write_Text@text,w
 14776  33FB  0775               	addwf	EUSART_Write_Text@i,w
 14777  33FC  0084               	movwf	4
 14778  33FD  0873               	movf	EUSART_Write_Text@text+1,w
 14779  33FE  3D76               	addwfc	EUSART_Write_Text@i+1,w
 14780  33FF  0085               	movwf	5
 14781  3400  0800               	movf	0,w	;code access
 14782  3401  31B2  22E3  31B3   	fcall	_EUSART_Write
 14783  3404  3001               	movlw	1
 14784  3405  07F5               	addwf	EUSART_Write_Text@i,f
 14785  3406  3000               	movlw	0
 14786  3407  3DF6               	addwfc	EUSART_Write_Text@i+1,f
 14787  3408  2BF1               	goto	l6372
 14788  3409                     __end_of_EUSART_Write_Text:	
 14789                           
 14790                           	psect	text43
 14791  32E3                     __ptext43:	
 14792 ;; *************** function _EUSART_Write *****************
 14793 ;; Defined at:
 14794 ;;		line 56 in file "EUSART.c"
 14795 ;; Parameters:    Size  Location     Type
 14796 ;;  txData          1    wreg     unsigned char 
 14797 ;; Auto vars:     Size  Location     Type
 14798 ;;  txData          1    1[COMMON] unsigned char 
 14799 ;; Return value:  Size  Location     Type
 14800 ;;                  1    wreg      void 
 14801 ;; Registers used:
 14802 ;;		wreg
 14803 ;; Tracked objects:
 14804 ;;		On entry : 0/0
 14805 ;;		On exit  : 0/0
 14806 ;;		Unchanged: 0/0
 14807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14809 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14811 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14812 ;;Total ram usage:        1 bytes
 14813 ;; Hardware stack levels used:    1
 14814 ;; Hardware stack levels required when called:    1
 14815 ;; This function calls:
 14816 ;;		Nothing
 14817 ;; This function is called by:
 14818 ;;		_EUSART_Write_Text
 14819 ;; This function uses a non-reentrant model
 14820 ;;
 14821                           
 14822                           
 14823                           ;psect for function _EUSART_Write
 14824  32E3                     _EUSART_Write:	
 14825                           
 14826                           ;incstack = 0
 14827                           ; Regs used in _EUSART_Write: [wreg]
 14828                           ;EUSART_Write@txData stored from wreg
 14829  32E3  00F1               	movwf	EUSART_Write@txData
 14830  32E4                     l221:	
 14831                           ;EUSART.c: 59:     {;EUSART.c: 60:     }
 14832                           
 14833                           
 14834                           ;EUSART.c: 58:     while(0 == PIR1bits.TXIF)
 14835  32E4  0020               	movlb	0	; select bank0
 14836  32E5  1E11               	btfss	17,4	;volatile
 14837  32E6  2AE4               	goto	l221
 14838                           
 14839                           ;EUSART.c: 62:     TX1REG = txData;
 14840  32E7  0871               	movf	EUSART_Write@txData,w
 14841  32E8  0023               	movlb	3	; select bank3
 14842  32E9  009A               	movwf	26	;volatile
 14843  32EA  0008               	return
 14844  32EB                     __end_of_EUSART_Write:	
 14845                           
 14846                           	psect	text44
 14847  0801                     __ptext44:	
 14848 ;; *************** function _init_AFE *****************
 14849 ;; Defined at:
 14850 ;;		line 3 in file "BQ76920.c"
 14851 ;; Parameters:    Size  Location     Type
 14852 ;;		None
 14853 ;; Auto vars:     Size  Location     Type
 14854 ;;		None
 14855 ;; Return value:  Size  Location     Type
 14856 ;;                  1    wreg      void 
 14857 ;; Registers used:
 14858 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14859 ;; Tracked objects:
 14860 ;;		On entry : 0/0
 14861 ;;		On exit  : 0/0
 14862 ;;		Unchanged: 0/0
 14863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14868 ;;Total ram usage:        0 bytes
 14869 ;; Hardware stack levels used:    1
 14870 ;; Hardware stack levels required when called:    4
 14871 ;; This function calls:
 14872 ;;		_setOverCurrentDischargeProtection
 14873 ;;		_setShortCircuitProtection
 14874 ;;		_setShuntResistorValue
 14875 ;;		_setTemperatureLimitsint
 14876 ;; This function is called by:
 14877 ;;		_statemachine
 14878 ;; This function uses a non-reentrant model
 14879 ;;
 14880                           
 14881                           
 14882                           ;psect for function _init_AFE
 14883  0801                     _init_AFE:	
 14884                           
 14885                           ;BQ76920.c: 5:     setTemperatureLimitsint(-20, 45, 0, 45);
 14886                           
 14887                           ;incstack = 0
 14888                           ; Regs used in _init_AFE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14889  0801  30EC               	movlw	236
 14890  0802  0020               	movlb	0	; select bank0
 14891  0803  00A0               	movwf	setTemperatureLimitsint@minDischarge_degC
 14892  0804  30FF               	movlw	255
 14893  0805  00A1               	movwf	setTemperatureLimitsint@minDischarge_degC+1
 14894  0806  302D               	movlw	45
 14895  0807  00A2               	movwf	setTemperatureLimitsint@maxDischarge_degC
 14896  0808  3000               	movlw	0
 14897  0809  00A3               	movwf	setTemperatureLimitsint@maxDischarge_degC+1
 14898  080A  3000               	movlw	0
 14899  080B  00A4               	movwf	setTemperatureLimitsint@minCharge_degC
 14900  080C  00A5               	movwf	setTemperatureLimitsint@minCharge_degC+1
 14901  080D  302D               	movlw	45
 14902  080E  00A6               	movwf	setTemperatureLimitsint@maxCharge_degC
 14903  080F  3000               	movlw	0
 14904  0810  00A7               	movwf	setTemperatureLimitsint@maxCharge_degC+1
 14905  0811  31B5  25EC  3188   	fcall	_setTemperatureLimitsint
 14906                           
 14907                           ;BQ76920.c: 6:     setShuntResistorValue(0.02);
 14908  0814  303C               	movlw	60
 14909  0815  00F4               	movwf	setShuntResistorValue@res_mOhm+3
 14910  0816  30A3               	movlw	163
 14911  0817  00F3               	movwf	setShuntResistorValue@res_mOhm+2
 14912  0818  30D7               	movlw	215
 14913  0819  00F2               	movwf	setShuntResistorValue@res_mOhm+1
 14914  081A  300A               	movlw	10
 14915  081B  00F1               	movwf	setShuntResistorValue@res_mOhm
 14916  081C  31B3  2323  3188   	fcall	_setShuntResistorValue
 14917                           
 14918                           ;BQ76920.c: 7:     setShortCircuitProtection(2500, 200);
 14919  081F  3000               	movlw	0
 14920  0820  0020               	movlb	0	; select bank0
 14921  0821  00E9               	movwf	setShortCircuitProtection@current_mA+3
 14922  0822  3000               	movlw	0
 14923  0823  00E8               	movwf	setShortCircuitProtection@current_mA+2
 14924  0824  3009               	movlw	9
 14925  0825  00E7               	movwf	setShortCircuitProtection@current_mA+1
 14926  0826  30C4               	movlw	196
 14927  0827  00E6               	movwf	setShortCircuitProtection@current_mA
 14928  0828  30C8               	movlw	200
 14929  0829  00EA               	movwf	setShortCircuitProtection@delay_us
 14930  082A  3000               	movlw	0
 14931  082B  00EB               	movwf	setShortCircuitProtection@delay_us+1
 14932  082C  319A  225B  3188   	fcall	_setShortCircuitProtection
 14933                           
 14934                           ;BQ76920.c: 9:     setOverCurrentDischargeProtection(20000, 320);
 14935  082F  3000               	movlw	0
 14936  0830  0020               	movlb	0	; select bank0
 14937  0831  00E9               	movwf	setOverCurrentDischargeProtection@current_mA+3
 14938  0832  3000               	movlw	0
 14939  0833  00E8               	movwf	setOverCurrentDischargeProtection@current_mA+2
 14940  0834  304E               	movlw	78
 14941  0835  00E7               	movwf	setOverCurrentDischargeProtection@current_mA+1
 14942  0836  3020               	movlw	32
 14943  0837  00E6               	movwf	setOverCurrentDischargeProtection@current_mA
 14944  0838  3040               	movlw	64
 14945  0839  00EA               	movwf	setOverCurrentDischargeProtection@delay_ms
 14946  083A  3001               	movlw	1
 14947  083B  00EB               	movwf	setOverCurrentDischargeProtection@delay_ms+1
 14948  083C  3199  2146         	fcall	_setOverCurrentDischargeProtection
 14949  083E  0008               	return
 14950  083F                     __end_of_init_AFE:	
 14951                           
 14952                           	psect	text45
 14953  35EC                     __ptext45:	
 14954 ;; *************** function _setTemperatureLimitsint *****************
 14955 ;; Defined at:
 14956 ;;		line 58 in file "BQ76920.c"
 14957 ;; Parameters:    Size  Location     Type
 14958 ;;  minDischarge    2    0[BANK0 ] int 
 14959 ;;  maxDischarge    2    2[BANK0 ] int 
 14960 ;;  minCharge_de    2    4[BANK0 ] int 
 14961 ;;  maxCharge_de    2    6[BANK0 ] int 
 14962 ;; Auto vars:     Size  Location     Type
 14963 ;;		None
 14964 ;; Return value:  Size  Location     Type
 14965 ;;                  1    wreg      void 
 14966 ;; Registers used:
 14967 ;;		wreg, status,2, status,0, pclath, cstack
 14968 ;; Tracked objects:
 14969 ;;		On entry : 0/0
 14970 ;;		On exit  : 0/0
 14971 ;;		Unchanged: 0/0
 14972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14973 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14976 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14977 ;;Total ram usage:        8 bytes
 14978 ;; Hardware stack levels used:    1
 14979 ;; Hardware stack levels required when called:    2
 14980 ;; This function calls:
 14981 ;;		___wmul
 14982 ;; This function is called by:
 14983 ;;		_init_AFE
 14984 ;; This function uses a non-reentrant model
 14985 ;;
 14986                           
 14987                           
 14988                           ;psect for function _setTemperatureLimitsint
 14989  35EC                     _setTemperatureLimitsint:	
 14990                           
 14991                           ;BQ76920.c: 60:     minCellTempDischarge = minDischarge_degC * 10;
 14992                           
 14993                           ;incstack = 0
 14994                           ; Regs used in _setTemperatureLimitsint: [wreg+status,2+status,0+pclath+cstack]
 14995  35EC  0020               	movlb	0	; select bank0
 14996  35ED  0821               	movf	setTemperatureLimitsint@minDischarge_degC+1,w
 14997  35EE  00F2               	movwf	___wmul@multiplier+1
 14998  35EF  0820               	movf	setTemperatureLimitsint@minDischarge_degC,w
 14999  35F0  00F1               	movwf	___wmul@multiplier
 15000  35F1  300A               	movlw	10
 15001  35F2  00F3               	movwf	___wmul@multiplicand
 15002  35F3  3000               	movlw	0
 15003  35F4  00F4               	movwf	___wmul@multiplicand+1
 15004  35F5  31B4  2409  31B5   	fcall	___wmul
 15005  35F8  0872               	movf	?___wmul+1,w
 15006  35F9  0023               	movlb	3	; select bank3
 15007  35FA  00C9               	movwf	(_minCellTempDischarge+1)^(0+384)
 15008  35FB  0871               	movf	?___wmul,w
 15009  35FC  00C8               	movwf	_minCellTempDischarge^(0+384)
 15010                           
 15011                           ;BQ76920.c: 61:     maxCellTempDischarge = maxDischarge_degC * 10;
 15012  35FD  0020               	movlb	0	; select bank0
 15013  35FE  0823               	movf	setTemperatureLimitsint@maxDischarge_degC+1,w
 15014  35FF  00F2               	movwf	___wmul@multiplier+1
 15015  3600  0822               	movf	setTemperatureLimitsint@maxDischarge_degC,w
 15016  3601  00F1               	movwf	___wmul@multiplier
 15017  3602  300A               	movlw	10
 15018  3603  00F3               	movwf	___wmul@multiplicand
 15019  3604  3000               	movlw	0
 15020  3605  00F4               	movwf	___wmul@multiplicand+1
 15021  3606  31B4  2409  31B5   	fcall	___wmul
 15022  3609  0872               	movf	?___wmul+1,w
 15023  360A  0023               	movlb	3	; select bank3
 15024  360B  00C5               	movwf	(_maxCellTempDischarge+1)^(0+384)
 15025  360C  0871               	movf	?___wmul,w
 15026  360D  00C4               	movwf	_maxCellTempDischarge^(0+384)
 15027                           
 15028                           ;BQ76920.c: 62:     minCellTempCharge = minCharge_degC * 10;
 15029  360E  0020               	movlb	0	; select bank0
 15030  360F  0825               	movf	setTemperatureLimitsint@minCharge_degC+1,w
 15031  3610  00F2               	movwf	___wmul@multiplier+1
 15032  3611  0824               	movf	setTemperatureLimitsint@minCharge_degC,w
 15033  3612  00F1               	movwf	___wmul@multiplier
 15034  3613  300A               	movlw	10
 15035  3614  00F3               	movwf	___wmul@multiplicand
 15036  3615  3000               	movlw	0
 15037  3616  00F4               	movwf	___wmul@multiplicand+1
 15038  3617  31B4  2409  31B5   	fcall	___wmul
 15039  361A  0872               	movf	?___wmul+1,w
 15040  361B  0023               	movlb	3	; select bank3
 15041  361C  00CB               	movwf	(_minCellTempCharge+1)^(0+384)
 15042  361D  0871               	movf	?___wmul,w
 15043  361E  00CA               	movwf	_minCellTempCharge^(0+384)
 15044                           
 15045                           ;BQ76920.c: 63:     maxCellTempCharge = maxCharge_degC * 10;
 15046  361F  0020               	movlb	0	; select bank0
 15047  3620  0827               	movf	setTemperatureLimitsint@maxCharge_degC+1,w
 15048  3621  00F2               	movwf	___wmul@multiplier+1
 15049  3622  0826               	movf	setTemperatureLimitsint@maxCharge_degC,w
 15050  3623  00F1               	movwf	___wmul@multiplier
 15051  3624  300A               	movlw	10
 15052  3625  00F3               	movwf	___wmul@multiplicand
 15053  3626  3000               	movlw	0
 15054  3627  00F4               	movwf	___wmul@multiplicand+1
 15055  3628  31B4  2409         	fcall	___wmul
 15056  362A  0872               	movf	?___wmul+1,w
 15057  362B  0023               	movlb	3	; select bank3
 15058  362C  00C7               	movwf	(_maxCellTempCharge+1)^(0+384)
 15059  362D  0871               	movf	?___wmul,w
 15060  362E  00C6               	movwf	_maxCellTempCharge^(0+384)
 15061  362F  0008               	return
 15062  3630                     __end_of_setTemperatureLimitsint:	
 15063                           
 15064                           	psect	text46
 15065  3409                     __ptext46:	
 15066 ;; *************** function ___wmul *****************
 15067 ;; Defined at:
 15068 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 15069 ;; Parameters:    Size  Location     Type
 15070 ;;  multiplier      2    1[COMMON] unsigned int 
 15071 ;;  multiplicand    2    3[COMMON] unsigned int 
 15072 ;; Auto vars:     Size  Location     Type
 15073 ;;  product         2    5[COMMON] unsigned int 
 15074 ;; Return value:  Size  Location     Type
 15075 ;;                  2    1[COMMON] unsigned int 
 15076 ;; Registers used:
 15077 ;;		wreg, status,2, status,0
 15078 ;; Tracked objects:
 15079 ;;		On entry : 0/0
 15080 ;;		On exit  : 0/0
 15081 ;;		Unchanged: 0/0
 15082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15083 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15084 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15086 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15087 ;;Total ram usage:        6 bytes
 15088 ;; Hardware stack levels used:    1
 15089 ;; Hardware stack levels required when called:    1
 15090 ;; This function calls:
 15091 ;;		Nothing
 15092 ;; This function is called by:
 15093 ;;		_setTemperatureLimitsint
 15094 ;;		_atoi
 15095 ;; This function uses a non-reentrant model
 15096 ;;
 15097                           
 15098                           
 15099                           ;psect for function ___wmul
 15100  3409                     ___wmul:	
 15101                           
 15102                           ;incstack = 0
 15103                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 15104  3409  01F5               	clrf	___wmul@product
 15105  340A  01F6               	clrf	___wmul@product+1
 15106  340B                     l4582:	
 15107  340B  1C71               	btfss	___wmul@multiplier,0
 15108  340C  2C11               	goto	l854
 15109  340D  0873               	movf	___wmul@multiplicand,w
 15110  340E  07F5               	addwf	___wmul@product,f
 15111  340F  0874               	movf	___wmul@multiplicand+1,w
 15112  3410  3DF6               	addwfc	___wmul@product+1,f
 15113  3411                     l854:	
 15114  3411  3001               	movlw	1
 15115  3412                     u5655:	
 15116  3412  35F3               	lslf	___wmul@multiplicand,f
 15117  3413  0DF4               	rlf	___wmul@multiplicand+1,f
 15118  3414  0B89               	decfsz	9,f
 15119  3415  2C12               	goto	u5655
 15120  3416  3001               	movlw	1
 15121  3417                     u5665:	
 15122  3417  36F2               	lsrf	___wmul@multiplier+1,f
 15123  3418  0CF1               	rrf	___wmul@multiplier,f
 15124  3419  0B89               	decfsz	9,f
 15125  341A  2C17               	goto	u5665
 15126  341B  0871               	movf	___wmul@multiplier,w
 15127  341C  0472               	iorwf	___wmul@multiplier+1,w
 15128  341D  1D03               	btfss	3,2
 15129  341E  2C0B               	goto	l4582
 15130  341F  0876               	movf	___wmul@product+1,w
 15131  3420  00F2               	movwf	?___wmul+1
 15132  3421  0875               	movf	___wmul@product,w
 15133  3422  00F1               	movwf	?___wmul
 15134  3423  0008               	return
 15135  3424                     __end_of___wmul:	
 15136                           
 15137                           	psect	text47
 15138  3323                     __ptext47:	
 15139 ;; *************** function _setShuntResistorValue *****************
 15140 ;; Defined at:
 15141 ;;		line 70 in file "BQ76920.c"
 15142 ;; Parameters:    Size  Location     Type
 15143 ;;  res_mOhm        4    1[COMMON] float 
 15144 ;; Auto vars:     Size  Location     Type
 15145 ;;		None
 15146 ;; Return value:  Size  Location     Type
 15147 ;;                  1    wreg      void 
 15148 ;; Registers used:
 15149 ;;		wreg
 15150 ;; Tracked objects:
 15151 ;;		On entry : 0/0
 15152 ;;		On exit  : 0/0
 15153 ;;		Unchanged: 0/0
 15154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15155 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15158 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15159 ;;Total ram usage:        4 bytes
 15160 ;; Hardware stack levels used:    1
 15161 ;; Hardware stack levels required when called:    1
 15162 ;; This function calls:
 15163 ;;		Nothing
 15164 ;; This function is called by:
 15165 ;;		_init_AFE
 15166 ;; This function uses a non-reentrant model
 15167 ;;
 15168                           
 15169                           
 15170                           ;psect for function _setShuntResistorValue
 15171  3323                     _setShuntResistorValue:	
 15172                           
 15173                           ;BQ76920.c: 71:     shuntResistorValue_mOhm = res_mOhm;
 15174                           
 15175                           ;incstack = 0
 15176                           ; Regs used in _setShuntResistorValue: [wreg]
 15177  3323  0874               	movf	setShuntResistorValue@res_mOhm+3,w
 15178  3324  0023               	movlb	3	; select bank3
 15179  3325  00B5               	movwf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384)
 15180  3326  0873               	movf	setShuntResistorValue@res_mOhm+2,w
 15181  3327  00B4               	movwf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384)
 15182  3328  0872               	movf	setShuntResistorValue@res_mOhm+1,w
 15183  3329  00B3               	movwf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384)
 15184  332A  0871               	movf	setShuntResistorValue@res_mOhm,w
 15185  332B  00B2               	movwf	BQ76920@shuntResistorValue_mOhm^(0+384)
 15186  332C  0008               	return
 15187  332D                     __end_of_setShuntResistorValue:	
 15188                           
 15189                           	psect	text48
 15190  1A5B                     __ptext48:	
 15191 ;; *************** function _setShortCircuitProtection *****************
 15192 ;; Defined at:
 15193 ;;		line 78 in file "BQ76920.c"
 15194 ;; Parameters:    Size  Location     Type
 15195 ;;  current_mA      4   70[BANK0 ] long 
 15196 ;;  delay_us        2   74[BANK0 ] int 
 15197 ;; Auto vars:     Size  Location     Type
 15198 ;;  i               2   10[BANK1 ] int 
 15199 ;;  i               2    8[BANK1 ] int 
 15200 ;;  scaler          4    0[BANK1 ] float 
 15201 ;; Return value:  Size  Location     Type
 15202 ;;                  1    wreg      void 
 15203 ;; Registers used:
 15204 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15205 ;; Tracked objects:
 15206 ;;		On entry : 0/0
 15207 ;;		On exit  : 0/0
 15208 ;;		Unchanged: 0/0
 15209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15210 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15211 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15212 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15213 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15214 ;;Total ram usage:       21 bytes
 15215 ;; Hardware stack levels used:    1
 15216 ;; Hardware stack levels required when called:    3
 15217 ;; This function calls:
 15218 ;;		_I2C_writeRegister
 15219 ;;		___fldiv
 15220 ;;		___flge
 15221 ;;		___flmul
 15222 ;;		___xxtofl
 15223 ;; This function is called by:
 15224 ;;		_init_AFE
 15225 ;; This function uses a non-reentrant model
 15226 ;;
 15227                           
 15228                           
 15229                           ;psect for function _setShortCircuitProtection
 15230  1A5B                     _setShortCircuitProtection:	
 15231                           
 15232                           ;BQ76920.c: 83:     float scaler = 1000.0;
 15233                           
 15234                           ;incstack = 0
 15235                           ; Regs used in _setShortCircuitProtection: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15236  1A5B  3044               	movlw	68
 15237  1A5C  0021               	movlb	1	; select bank1
 15238  1A5D  00A3               	movwf	(setShortCircuitProtection@scaler+3)^(0+128)
 15239  1A5E  307A               	movlw	122
 15240  1A5F  00A2               	movwf	(setShortCircuitProtection@scaler+2)^(0+128)
 15241  1A60  3000               	movlw	0
 15242  1A61  00A1               	movwf	(setShortCircuitProtection@scaler+1)^(0+128)
 15243  1A62  3000               	movlw	0
 15244  1A63  00A0               	movwf	setShortCircuitProtection@scaler^(0+128)
 15245                           
 15246                           ;BQ76920.c: 84:     protect1.bits.SCD_THRESH = 0;
 15247  1A64  30F8               	movlw	-8
 15248  1A65  0023               	movlb	3	; select bank3
 15249  1A66  05D1               	andwf	BQ76920@protect1^(0+384),f
 15250                           
 15251                           ;BQ76920.c: 85:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 15252  1A67  0021               	movlb	1	; select bank1
 15253  1A68  01A8               	clrf	setShortCircuitProtection@i^(0+128)
 15254  1A69  01A9               	clrf	(setShortCircuitProtection@i+1)^(0+128)
 15255  1A6A                     l6422:	
 15256                           
 15257                           ;BQ76920.c: 86:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 15258  1A6A  0023               	movlb	3	; select bank3
 15259  1A6B  0835               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 15260  1A6C  0020               	movlb	0	; select bank0
 15261  1A6D  00A9               	movwf	___flmul@b+3
 15262  1A6E  0023               	movlb	3	; select bank3
 15263  1A6F  0834               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 15264  1A70  0020               	movlb	0	; select bank0
 15265  1A71  00A8               	movwf	___flmul@b+2
 15266  1A72  0023               	movlb	3	; select bank3
 15267  1A73  0833               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 15268  1A74  0020               	movlb	0	; select bank0
 15269  1A75  00A7               	movwf	___flmul@b+1
 15270  1A76  0023               	movlb	3	; select bank3
 15271  1A77  0832               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 15272  1A78  0020               	movlb	0	; select bank0
 15273  1A79  00A6               	movwf	___flmul@b
 15274  1A7A  0869               	movf	setShortCircuitProtection@current_mA+3,w
 15275  1A7B  00F4               	movwf	___xxtofl@val+3
 15276  1A7C  0868               	movf	setShortCircuitProtection@current_mA+2,w
 15277  1A7D  00F3               	movwf	___xxtofl@val+2
 15278  1A7E  0867               	movf	setShortCircuitProtection@current_mA+1,w
 15279  1A7F  00F2               	movwf	___xxtofl@val+1
 15280  1A80  0866               	movf	setShortCircuitProtection@current_mA,w
 15281  1A81  00F1               	movwf	___xxtofl@val
 15282  1A82  3001               	movlw	1
 15283  1A83  31AC  24C9  319A   	fcall	___xxtofl
 15284  1A86  0874               	movf	?___xxtofl+3,w
 15285  1A87  0020               	movlb	0	; select bank0
 15286  1A88  00AD               	movwf	___flmul@a+3
 15287  1A89  0873               	movf	?___xxtofl+2,w
 15288  1A8A  00AC               	movwf	___flmul@a+2
 15289  1A8B  0872               	movf	?___xxtofl+1,w
 15290  1A8C  00AB               	movwf	___flmul@a+1
 15291  1A8D  0871               	movf	?___xxtofl,w
 15292  1A8E  00AA               	movwf	___flmul@a
 15293  1A8F  3195  25D4  319A   	fcall	___flmul
 15294  1A92  0020               	movlb	0	; select bank0
 15295  1A93  0829               	movf	?___flmul+3,w
 15296  1A94  0021               	movlb	1	; select bank1
 15297  1A95  00A7               	movwf	(_setShortCircuitProtection$1929+3)^(0+128)
 15298  1A96  0020               	movlb	0	; select bank0
 15299  1A97  0828               	movf	?___flmul+2,w
 15300  1A98  0021               	movlb	1	; select bank1
 15301  1A99  00A6               	movwf	(_setShortCircuitProtection$1929+2)^(0+128)
 15302  1A9A  0020               	movlb	0	; select bank0
 15303  1A9B  0827               	movf	?___flmul+1,w
 15304  1A9C  0021               	movlb	1	; select bank1
 15305  1A9D  00A5               	movwf	(_setShortCircuitProtection$1929+1)^(0+128)
 15306  1A9E  0020               	movlb	0	; select bank0
 15307  1A9F  0826               	movf	?___flmul,w
 15308  1AA0  0021               	movlb	1	; select bank1
 15309  1AA1  00A4               	movwf	_setShortCircuitProtection$1929^(0+128)
 15310                           
 15311                           ;BQ76920.c: 86:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 15312  1AA2  3044               	movlw	68
 15313  1AA3  0020               	movlb	0	; select bank0
 15314  1AA4  00C3               	movwf	___fldiv@a+3
 15315  1AA5  307A               	movlw	122
 15316  1AA6  00C2               	movwf	___fldiv@a+2
 15317  1AA7  3000               	movlw	0
 15318  1AA8  00C1               	movwf	___fldiv@a+1
 15319  1AA9  3000               	movlw	0
 15320  1AAA  00C0               	movwf	___fldiv@a
 15321  1AAB  0021               	movlb	1	; select bank1
 15322  1AAC  0823               	movf	(setShortCircuitProtection@scaler+3)^(0+128),w
 15323  1AAD  0020               	movlb	0	; select bank0
 15324  1AAE  00A9               	movwf	___flmul@b+3
 15325  1AAF  0021               	movlb	1	; select bank1
 15326  1AB0  0822               	movf	(setShortCircuitProtection@scaler+2)^(0+128),w
 15327  1AB1  0020               	movlb	0	; select bank0
 15328  1AB2  00A8               	movwf	___flmul@b+2
 15329  1AB3  0021               	movlb	1	; select bank1
 15330  1AB4  0821               	movf	(setShortCircuitProtection@scaler+1)^(0+128),w
 15331  1AB5  0020               	movlb	0	; select bank0
 15332  1AB6  00A7               	movwf	___flmul@b+1
 15333  1AB7  0021               	movlb	1	; select bank1
 15334  1AB8  0820               	movf	setShortCircuitProtection@scaler^(0+128),w
 15335  1AB9  0020               	movlb	0	; select bank0
 15336  1ABA  00A6               	movwf	___flmul@b
 15337  1ABB  0021               	movlb	1	; select bank1
 15338  1ABC  0827               	movf	(_setShortCircuitProtection$1929+3)^(0+128),w
 15339  1ABD  0020               	movlb	0	; select bank0
 15340  1ABE  00AD               	movwf	___flmul@a+3
 15341  1ABF  0021               	movlb	1	; select bank1
 15342  1AC0  0826               	movf	(_setShortCircuitProtection$1929+2)^(0+128),w
 15343  1AC1  0020               	movlb	0	; select bank0
 15344  1AC2  00AC               	movwf	___flmul@a+2
 15345  1AC3  0021               	movlb	1	; select bank1
 15346  1AC4  0825               	movf	(_setShortCircuitProtection$1929+1)^(0+128),w
 15347  1AC5  0020               	movlb	0	; select bank0
 15348  1AC6  00AB               	movwf	___flmul@a+1
 15349  1AC7  0021               	movlb	1	; select bank1
 15350  1AC8  0824               	movf	_setShortCircuitProtection$1929^(0+128),w
 15351  1AC9  0020               	movlb	0	; select bank0
 15352  1ACA  00AA               	movwf	___flmul@a
 15353  1ACB  3195  25D4  319A   	fcall	___flmul
 15354  1ACE  0020               	movlb	0	; select bank0
 15355  1ACF  0829               	movf	?___flmul+3,w
 15356  1AD0  00C7               	movwf	___fldiv@b+3
 15357  1AD1  0828               	movf	?___flmul+2,w
 15358  1AD2  00C6               	movwf	___fldiv@b+2
 15359  1AD3  0827               	movf	?___flmul+1,w
 15360  1AD4  00C5               	movwf	___fldiv@b+1
 15361  1AD5  0826               	movf	?___flmul,w
 15362  1AD6  00C4               	movwf	___fldiv@b
 15363  1AD7  3190  2052  319A   	fcall	___fldiv
 15364  1ADA  0020               	movlb	0	; select bank0
 15365  1ADB  0843               	movf	?___fldiv+3,w
 15366  1ADC  00DD               	movwf	___flge@ff1+3
 15367  1ADD  0842               	movf	?___fldiv+2,w
 15368  1ADE  00DC               	movwf	___flge@ff1+2
 15369  1ADF  0841               	movf	?___fldiv+1,w
 15370  1AE0  00DB               	movwf	___flge@ff1+1
 15371  1AE1  0840               	movf	?___fldiv,w
 15372  1AE2  00DA               	movwf	___flge@ff1
 15373  1AE3  0021               	movlb	1	; select bank1
 15374  1AE4  0829               	movf	(setShortCircuitProtection@i+1)^(0+128),w
 15375  1AE5  0085               	movwf	5
 15376  1AE6  0828               	movf	setShortCircuitProtection@i^(0+128),w
 15377  1AE7  0084               	movwf	4
 15378  1AE8  3584               	lslf	4,f
 15379  1AE9  0D85               	rlf	5,f
 15380  1AEA  30EC               	movlw	low (_SCD_threshold_setting| (0+32768))
 15381  1AEB  0784               	addwf	4,f
 15382  1AEC  30BA               	movlw	high (_SCD_threshold_setting| (0+32768))
 15383  1AED  3D85               	addwfc	5,f
 15384  1AEE  3F00               	moviw [0]fsr0
 15385  1AEF  0020               	movlb	0	; select bank0
 15386  1AF0  00EC               	movwf	??_setShortCircuitProtection
 15387  1AF1  3F01               	moviw [1]fsr0
 15388  1AF2  00ED               	movwf	??_setShortCircuitProtection+1
 15389  1AF3  086C               	movf	??_setShortCircuitProtection,w
 15390  1AF4  00F1               	movwf	___xxtofl@val
 15391  1AF5  086D               	movf	??_setShortCircuitProtection+1,w
 15392  1AF6  00F2               	movwf	___xxtofl@val+1
 15393  1AF7  0D89               	rlf	9,f
 15394  1AF8  3B89               	subwfb	9,f
 15395  1AF9  0989               	comf	9,f
 15396  1AFA  00F3               	movwf	___xxtofl@val+2
 15397  1AFB  00F4               	movwf	___xxtofl@val+3
 15398  1AFC  3001               	movlw	1
 15399  1AFD  31AC  24C9  319A   	fcall	___xxtofl
 15400  1B00  0874               	movf	?___xxtofl+3,w
 15401  1B01  0020               	movlb	0	; select bank0
 15402  1B02  00E1               	movwf	___flge@ff2+3
 15403  1B03  0873               	movf	?___xxtofl+2,w
 15404  1B04  00E0               	movwf	___flge@ff2+2
 15405  1B05  0872               	movf	?___xxtofl+1,w
 15406  1B06  00DF               	movwf	___flge@ff2+1
 15407  1B07  0871               	movf	?___xxtofl,w
 15408  1B08  00DE               	movwf	___flge@ff2
 15409  1B09  31A9  21C7  319A   	fcall	___flge
 15410  1B0C  1C03               	btfss	3,0
 15411  1B0D  2B16               	goto	l6428
 15412                           
 15413                           ;BQ76920.c: 87:             protect1.bits.SCD_THRESH = i;
 15414  1B0E  0023               	movlb	3	; select bank3
 15415  1B0F  0851               	movf	BQ76920@protect1^(0+384),w
 15416  1B10  0021               	movlb	1	; select bank1
 15417  1B11  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 15418  1B12  39F8               	andlw	-8
 15419  1B13  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 15420  1B14  0023               	movlb	3	; select bank3
 15421  1B15  00D1               	movwf	BQ76920@protect1^(0+384)
 15422  1B16                     l6428:	
 15423                           
 15424                           ;BQ76920.c: 89:     }
 15425  1B16  3001               	movlw	1
 15426  1B17  0021               	movlb	1	; select bank1
 15427  1B18  07A8               	addwf	setShortCircuitProtection@i^(0+128),f
 15428  1B19  3000               	movlw	0
 15429  1B1A  3DA9               	addwfc	(setShortCircuitProtection@i+1)^(0+128),f
 15430  1B1B  3000               	movlw	0
 15431  1B1C  0229               	subwf	(setShortCircuitProtection@i+1)^(0+128),w
 15432  1B1D  3007               	movlw	7
 15433  1B1E  1903               	skipnz
 15434  1B1F  0228               	subwf	setShortCircuitProtection@i^(0+128),w
 15435  1B20  1C03               	skipc
 15436  1B21  2A6A               	goto	l6422
 15437                           
 15438                           ;BQ76920.c: 91:     protect1.bits.SCD_DELAY = 0;
 15439  1B22  30E7               	movlw	-25
 15440  1B23  0023               	movlb	3	; select bank3
 15441  1B24  05D1               	andwf	BQ76920@protect1^(0+384),f
 15442                           
 15443                           ;BQ76920.c: 92:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 15444  1B25  0021               	movlb	1	; select bank1
 15445  1B26  01AA               	clrf	setShortCircuitProtection@i_851^(0+128)
 15446  1B27  01AB               	clrf	(setShortCircuitProtection@i_851+1)^(0+128)
 15447  1B28                     l6440:	
 15448                           
 15449                           ;BQ76920.c: 93:         if (delay_us >= SCD_delay_setting[i]) {
 15450  1B28  082B               	movf	(setShortCircuitProtection@i_851+1)^(0+128),w
 15451  1B29  0085               	movwf	5
 15452  1B2A  082A               	movf	setShortCircuitProtection@i_851^(0+128),w
 15453  1B2B  0084               	movwf	4
 15454  1B2C  3584               	lslf	4,f
 15455  1B2D  0D85               	rlf	5,f
 15456  1B2E  300C               	movlw	low (_SCD_delay_setting| (0+32768))
 15457  1B2F  0784               	addwf	4,f
 15458  1B30  30BB               	movlw	high (_SCD_delay_setting| (0+32768))
 15459  1B31  3D85               	addwfc	5,f
 15460  1B32  3F00               	moviw [0]fsr0
 15461  1B33  0020               	movlb	0	; select bank0
 15462  1B34  00EC               	movwf	??_setShortCircuitProtection
 15463  1B35  3F01               	moviw [1]fsr0
 15464  1B36  00ED               	movwf	??_setShortCircuitProtection+1
 15465  1B37  086B               	movf	setShortCircuitProtection@delay_us+1,w
 15466  1B38  3A80               	xorlw	128
 15467  1B39  00EE               	movwf	??_setShortCircuitProtection+2
 15468  1B3A  086D               	movf	??_setShortCircuitProtection+1,w
 15469  1B3B  3A80               	xorlw	128
 15470  1B3C  026E               	subwf	??_setShortCircuitProtection+2,w
 15471  1B3D  1D03               	skipz
 15472  1B3E  2B41               	goto	u9065
 15473  1B3F  086C               	movf	??_setShortCircuitProtection,w
 15474  1B40  026A               	subwf	setShortCircuitProtection@delay_us,w
 15475  1B41                     u9065:	
 15476  1B41  1C03               	skipc
 15477  1B42  2B52               	goto	l6444
 15478                           
 15479                           ;BQ76920.c: 94:             protect1.bits.SCD_DELAY = i;
 15480  1B43  0021               	movlb	1	; select bank1
 15481  1B44  082A               	movf	setShortCircuitProtection@i_851^(0+128),w
 15482  1B45  0020               	movlb	0	; select bank0
 15483  1B46  00EC               	movwf	??_setShortCircuitProtection
 15484  1B47  0DEC               	rlf	??_setShortCircuitProtection,f
 15485  1B48  0DEC               	rlf	??_setShortCircuitProtection,f
 15486  1B49  0DEC               	rlf	??_setShortCircuitProtection,f
 15487  1B4A  0023               	movlb	3	; select bank3
 15488  1B4B  0851               	movf	BQ76920@protect1^(0+384),w
 15489  1B4C  0020               	movlb	0	; select bank0
 15490  1B4D  066C               	xorwf	??_setShortCircuitProtection,w
 15491  1B4E  39E7               	andlw	-25
 15492  1B4F  066C               	xorwf	??_setShortCircuitProtection,w
 15493  1B50  0023               	movlb	3	; select bank3
 15494  1B51  00D1               	movwf	BQ76920@protect1^(0+384)
 15495  1B52                     l6444:	
 15496                           
 15497                           ;BQ76920.c: 96:     }
 15498  1B52  3001               	movlw	1
 15499  1B53  0021               	movlb	1	; select bank1
 15500  1B54  07AA               	addwf	setShortCircuitProtection@i_851^(0+128),f
 15501  1B55  3000               	movlw	0
 15502  1B56  3DAB               	addwfc	(setShortCircuitProtection@i_851+1)^(0+128),f
 15503  1B57  3000               	movlw	0
 15504  1B58  022B               	subwf	(setShortCircuitProtection@i_851+1)^(0+128),w
 15505  1B59  3007               	movlw	7
 15506  1B5A  1903               	skipnz
 15507  1B5B  022A               	subwf	setShortCircuitProtection@i_851^(0+128),w
 15508  1B5C  1C03               	skipc
 15509  1B5D  2B28               	goto	l6440
 15510                           
 15511                           ;BQ76920.c: 98:     I2C_writeRegister(0x18, 0x06, protect1.regByte);
 15512  1B5E  3018               	movlw	24
 15513  1B5F  00F5               	movwf	I2C_writeRegister@slaveAddress
 15514  1B60  3000               	movlw	0
 15515  1B61  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 15516  1B62  3006               	movlw	6
 15517  1B63  00F7               	movwf	I2C_writeRegister@regAddress
 15518  1B64  3000               	movlw	0
 15519  1B65  00F8               	movwf	I2C_writeRegister@regAddress+1
 15520  1B66  0023               	movlb	3	; select bank3
 15521  1B67  0851               	movf	BQ76920@protect1^(0+384),w
 15522  1B68  0020               	movlb	0	; select bank0
 15523  1B69  00EC               	movwf	??_setShortCircuitProtection
 15524  1B6A  01ED               	clrf	??_setShortCircuitProtection+1
 15525  1B6B  086C               	movf	??_setShortCircuitProtection,w
 15526  1B6C  00F9               	movwf	I2C_writeRegister@data
 15527  1B6D  086D               	movf	??_setShortCircuitProtection+1,w
 15528  1B6E  00FA               	movwf	I2C_writeRegister@data+1
 15529  1B6F  31B4  245D         	fcall	_I2C_writeRegister
 15530  1B71  0008               	return
 15531  1B72                     __end_of_setShortCircuitProtection:	
 15532                           
 15533                           	psect	text49
 15534  1946                     __ptext49:	
 15535 ;; *************** function _setOverCurrentDischargeProtection *****************
 15536 ;; Defined at:
 15537 ;;		line 105 in file "BQ76920.c"
 15538 ;; Parameters:    Size  Location     Type
 15539 ;;  current_mA      4   70[BANK0 ] long 
 15540 ;;  delay_ms        2   74[BANK0 ] int 
 15541 ;; Auto vars:     Size  Location     Type
 15542 ;;  i               2   10[BANK1 ] int 
 15543 ;;  i               2    8[BANK1 ] int 
 15544 ;;  scaler          4    0[BANK1 ] float 
 15545 ;; Return value:  Size  Location     Type
 15546 ;;                  1    wreg      void 
 15547 ;; Registers used:
 15548 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15549 ;; Tracked objects:
 15550 ;;		On entry : 0/0
 15551 ;;		On exit  : 0/0
 15552 ;;		Unchanged: 0/0
 15553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15554 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15555 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15556 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15557 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15558 ;;Total ram usage:       21 bytes
 15559 ;; Hardware stack levels used:    1
 15560 ;; Hardware stack levels required when called:    3
 15561 ;; This function calls:
 15562 ;;		_I2C_writeRegister
 15563 ;;		___fldiv
 15564 ;;		___flge
 15565 ;;		___flmul
 15566 ;;		___xxtofl
 15567 ;; This function is called by:
 15568 ;;		_init_AFE
 15569 ;; This function uses a non-reentrant model
 15570 ;;
 15571                           
 15572                           
 15573                           ;psect for function _setOverCurrentDischargeProtection
 15574  1946                     _setOverCurrentDischargeProtection:	
 15575                           
 15576                           ;BQ76920.c: 108:     float scaler = 1000.0;
 15577                           
 15578                           ;incstack = 0
 15579                           ; Regs used in _setOverCurrentDischargeProtection: [wreg-fsr0h+status,2+status,0+pclath+
      +                          cstack]
 15580  1946  3044               	movlw	68
 15581  1947  0021               	movlb	1	; select bank1
 15582  1948  00A3               	movwf	(setOverCurrentDischargeProtection@scaler+3)^(0+128)
 15583  1949  307A               	movlw	122
 15584  194A  00A2               	movwf	(setOverCurrentDischargeProtection@scaler+2)^(0+128)
 15585  194B  3000               	movlw	0
 15586  194C  00A1               	movwf	(setOverCurrentDischargeProtection@scaler+1)^(0+128)
 15587  194D  3000               	movlw	0
 15588  194E  00A0               	movwf	setOverCurrentDischargeProtection@scaler^(0+128)
 15589                           
 15590                           ;BQ76920.c: 109:     protect2.bits.OCD_THRESH = 0;
 15591  194F  30F0               	movlw	-16
 15592  1950  0023               	movlb	3	; select bank3
 15593  1951  05D0               	andwf	BQ76920@protect2^(0+384),f
 15594                           
 15595                           ;BQ76920.c: 110:     for (int i = 0; i < (sizeof(OCD_threshold_setting) / sizeof((OCD_th
      +                          reshold_setting)[0])) - 1; i++) {
 15596  1952  0021               	movlb	1	; select bank1
 15597  1953  01A8               	clrf	setOverCurrentDischargeProtection@i^(0+128)
 15598  1954  01A9               	clrf	(setOverCurrentDischargeProtection@i+1)^(0+128)
 15599  1955                     l6460:	
 15600                           
 15601                           ;BQ76920.c: 111:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= SCD_threshold_setting[i]) {
 15602  1955  0023               	movlb	3	; select bank3
 15603  1956  0835               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 15604  1957  0020               	movlb	0	; select bank0
 15605  1958  00A9               	movwf	___flmul@b+3
 15606  1959  0023               	movlb	3	; select bank3
 15607  195A  0834               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 15608  195B  0020               	movlb	0	; select bank0
 15609  195C  00A8               	movwf	___flmul@b+2
 15610  195D  0023               	movlb	3	; select bank3
 15611  195E  0833               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 15612  195F  0020               	movlb	0	; select bank0
 15613  1960  00A7               	movwf	___flmul@b+1
 15614  1961  0023               	movlb	3	; select bank3
 15615  1962  0832               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 15616  1963  0020               	movlb	0	; select bank0
 15617  1964  00A6               	movwf	___flmul@b
 15618  1965  0869               	movf	setOverCurrentDischargeProtection@current_mA+3,w
 15619  1966  00F4               	movwf	___xxtofl@val+3
 15620  1967  0868               	movf	setOverCurrentDischargeProtection@current_mA+2,w
 15621  1968  00F3               	movwf	___xxtofl@val+2
 15622  1969  0867               	movf	setOverCurrentDischargeProtection@current_mA+1,w
 15623  196A  00F2               	movwf	___xxtofl@val+1
 15624  196B  0866               	movf	setOverCurrentDischargeProtection@current_mA,w
 15625  196C  00F1               	movwf	___xxtofl@val
 15626  196D  3001               	movlw	1
 15627  196E  31AC  24C9  3199   	fcall	___xxtofl
 15628  1971  0874               	movf	?___xxtofl+3,w
 15629  1972  0020               	movlb	0	; select bank0
 15630  1973  00AD               	movwf	___flmul@a+3
 15631  1974  0873               	movf	?___xxtofl+2,w
 15632  1975  00AC               	movwf	___flmul@a+2
 15633  1976  0872               	movf	?___xxtofl+1,w
 15634  1977  00AB               	movwf	___flmul@a+1
 15635  1978  0871               	movf	?___xxtofl,w
 15636  1979  00AA               	movwf	___flmul@a
 15637  197A  3195  25D4  3199   	fcall	___flmul
 15638  197D  0020               	movlb	0	; select bank0
 15639  197E  0829               	movf	?___flmul+3,w
 15640  197F  0021               	movlb	1	; select bank1
 15641  1980  00A7               	movwf	(_setOverCurrentDischargeProtection$1930+3)^(0+128)
 15642  1981  0020               	movlb	0	; select bank0
 15643  1982  0828               	movf	?___flmul+2,w
 15644  1983  0021               	movlb	1	; select bank1
 15645  1984  00A6               	movwf	(_setOverCurrentDischargeProtection$1930+2)^(0+128)
 15646  1985  0020               	movlb	0	; select bank0
 15647  1986  0827               	movf	?___flmul+1,w
 15648  1987  0021               	movlb	1	; select bank1
 15649  1988  00A5               	movwf	(_setOverCurrentDischargeProtection$1930+1)^(0+128)
 15650  1989  0020               	movlb	0	; select bank0
 15651  198A  0826               	movf	?___flmul,w
 15652  198B  0021               	movlb	1	; select bank1
 15653  198C  00A4               	movwf	_setOverCurrentDischargeProtection$1930^(0+128)
 15654                           
 15655                           ;BQ76920.c: 111:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= SCD_threshold_setting[i]) {
 15656  198D  3044               	movlw	68
 15657  198E  0020               	movlb	0	; select bank0
 15658  198F  00C3               	movwf	___fldiv@a+3
 15659  1990  307A               	movlw	122
 15660  1991  00C2               	movwf	___fldiv@a+2
 15661  1992  3000               	movlw	0
 15662  1993  00C1               	movwf	___fldiv@a+1
 15663  1994  3000               	movlw	0
 15664  1995  00C0               	movwf	___fldiv@a
 15665  1996  0021               	movlb	1	; select bank1
 15666  1997  0823               	movf	(setOverCurrentDischargeProtection@scaler+3)^(0+128),w
 15667  1998  0020               	movlb	0	; select bank0
 15668  1999  00A9               	movwf	___flmul@b+3
 15669  199A  0021               	movlb	1	; select bank1
 15670  199B  0822               	movf	(setOverCurrentDischargeProtection@scaler+2)^(0+128),w
 15671  199C  0020               	movlb	0	; select bank0
 15672  199D  00A8               	movwf	___flmul@b+2
 15673  199E  0021               	movlb	1	; select bank1
 15674  199F  0821               	movf	(setOverCurrentDischargeProtection@scaler+1)^(0+128),w
 15675  19A0  0020               	movlb	0	; select bank0
 15676  19A1  00A7               	movwf	___flmul@b+1
 15677  19A2  0021               	movlb	1	; select bank1
 15678  19A3  0820               	movf	setOverCurrentDischargeProtection@scaler^(0+128),w
 15679  19A4  0020               	movlb	0	; select bank0
 15680  19A5  00A6               	movwf	___flmul@b
 15681  19A6  0021               	movlb	1	; select bank1
 15682  19A7  0827               	movf	(_setOverCurrentDischargeProtection$1930+3)^(0+128),w
 15683  19A8  0020               	movlb	0	; select bank0
 15684  19A9  00AD               	movwf	___flmul@a+3
 15685  19AA  0021               	movlb	1	; select bank1
 15686  19AB  0826               	movf	(_setOverCurrentDischargeProtection$1930+2)^(0+128),w
 15687  19AC  0020               	movlb	0	; select bank0
 15688  19AD  00AC               	movwf	___flmul@a+2
 15689  19AE  0021               	movlb	1	; select bank1
 15690  19AF  0825               	movf	(_setOverCurrentDischargeProtection$1930+1)^(0+128),w
 15691  19B0  0020               	movlb	0	; select bank0
 15692  19B1  00AB               	movwf	___flmul@a+1
 15693  19B2  0021               	movlb	1	; select bank1
 15694  19B3  0824               	movf	_setOverCurrentDischargeProtection$1930^(0+128),w
 15695  19B4  0020               	movlb	0	; select bank0
 15696  19B5  00AA               	movwf	___flmul@a
 15697  19B6  3195  25D4  3199   	fcall	___flmul
 15698  19B9  0020               	movlb	0	; select bank0
 15699  19BA  0829               	movf	?___flmul+3,w
 15700  19BB  00C7               	movwf	___fldiv@b+3
 15701  19BC  0828               	movf	?___flmul+2,w
 15702  19BD  00C6               	movwf	___fldiv@b+2
 15703  19BE  0827               	movf	?___flmul+1,w
 15704  19BF  00C5               	movwf	___fldiv@b+1
 15705  19C0  0826               	movf	?___flmul,w
 15706  19C1  00C4               	movwf	___fldiv@b
 15707  19C2  3190  2052  3199   	fcall	___fldiv
 15708  19C5  0020               	movlb	0	; select bank0
 15709  19C6  0843               	movf	?___fldiv+3,w
 15710  19C7  00DD               	movwf	___flge@ff1+3
 15711  19C8  0842               	movf	?___fldiv+2,w
 15712  19C9  00DC               	movwf	___flge@ff1+2
 15713  19CA  0841               	movf	?___fldiv+1,w
 15714  19CB  00DB               	movwf	___flge@ff1+1
 15715  19CC  0840               	movf	?___fldiv,w
 15716  19CD  00DA               	movwf	___flge@ff1
 15717  19CE  0021               	movlb	1	; select bank1
 15718  19CF  0829               	movf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 15719  19D0  0085               	movwf	5
 15720  19D1  0828               	movf	setOverCurrentDischargeProtection@i^(0+128),w
 15721  19D2  0084               	movwf	4
 15722  19D3  3584               	lslf	4,f
 15723  19D4  0D85               	rlf	5,f
 15724  19D5  30EC               	movlw	low (_SCD_threshold_setting| (0+32768))
 15725  19D6  0784               	addwf	4,f
 15726  19D7  30BA               	movlw	high (_SCD_threshold_setting| (0+32768))
 15727  19D8  3D85               	addwfc	5,f
 15728  19D9  3F00               	moviw [0]fsr0
 15729  19DA  0020               	movlb	0	; select bank0
 15730  19DB  00EC               	movwf	??_setOverCurrentDischargeProtection
 15731  19DC  3F01               	moviw [1]fsr0
 15732  19DD  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 15733  19DE  086C               	movf	??_setOverCurrentDischargeProtection,w
 15734  19DF  00F1               	movwf	___xxtofl@val
 15735  19E0  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 15736  19E1  00F2               	movwf	___xxtofl@val+1
 15737  19E2  0D89               	rlf	9,f
 15738  19E3  3B89               	subwfb	9,f
 15739  19E4  0989               	comf	9,f
 15740  19E5  00F3               	movwf	___xxtofl@val+2
 15741  19E6  00F4               	movwf	___xxtofl@val+3
 15742  19E7  3001               	movlw	1
 15743  19E8  31AC  24C9  3199   	fcall	___xxtofl
 15744  19EB  0874               	movf	?___xxtofl+3,w
 15745  19EC  0020               	movlb	0	; select bank0
 15746  19ED  00E1               	movwf	___flge@ff2+3
 15747  19EE  0873               	movf	?___xxtofl+2,w
 15748  19EF  00E0               	movwf	___flge@ff2+2
 15749  19F0  0872               	movf	?___xxtofl+1,w
 15750  19F1  00DF               	movwf	___flge@ff2+1
 15751  19F2  0871               	movf	?___xxtofl,w
 15752  19F3  00DE               	movwf	___flge@ff2
 15753  19F4  31A9  21C7  3199   	fcall	___flge
 15754  19F7  1C03               	btfss	3,0
 15755  19F8  2A01               	goto	l6466
 15756                           
 15757                           ;BQ76920.c: 112:             protect2.bits.OCD_THRESH = i;
 15758  19F9  0023               	movlb	3	; select bank3
 15759  19FA  0850               	movf	BQ76920@protect2^(0+384),w
 15760  19FB  0021               	movlb	1	; select bank1
 15761  19FC  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 15762  19FD  39F0               	andlw	-16
 15763  19FE  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 15764  19FF  0023               	movlb	3	; select bank3
 15765  1A00  00D0               	movwf	BQ76920@protect2^(0+384)
 15766  1A01                     l6466:	
 15767                           
 15768                           ;BQ76920.c: 114:     }
 15769  1A01  3001               	movlw	1
 15770  1A02  0021               	movlb	1	; select bank1
 15771  1A03  07A8               	addwf	setOverCurrentDischargeProtection@i^(0+128),f
 15772  1A04  3000               	movlw	0
 15773  1A05  3DA9               	addwfc	(setOverCurrentDischargeProtection@i+1)^(0+128),f
 15774  1A06  3000               	movlw	0
 15775  1A07  0229               	subwf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 15776  1A08  300F               	movlw	15
 15777  1A09  1903               	skipnz
 15778  1A0A  0228               	subwf	setOverCurrentDischargeProtection@i^(0+128),w
 15779  1A0B  1C03               	skipc
 15780  1A0C  2955               	goto	l6460
 15781                           
 15782                           ;BQ76920.c: 116:     protect2.bits.OCD_DELAY = 0;
 15783  1A0D  308F               	movlw	-113
 15784  1A0E  0023               	movlb	3	; select bank3
 15785  1A0F  05D0               	andwf	BQ76920@protect2^(0+384),f
 15786                           
 15787                           ;BQ76920.c: 117:     for (int i = 0; i < (sizeof(OCD_delay_setting) / sizeof((OCD_delay_
      +                          setting)[0])) - 1; i++) {
 15788  1A10  0021               	movlb	1	; select bank1
 15789  1A11  01AA               	clrf	setOverCurrentDischargeProtection@i_860^(0+128)
 15790  1A12  01AB               	clrf	(setOverCurrentDischargeProtection@i_860+1)^(0+128)
 15791  1A13                     l6478:	
 15792                           
 15793                           ;BQ76920.c: 118:         if (delay_ms >= SCD_delay_setting[i]) {
 15794  1A13  082B               	movf	(setOverCurrentDischargeProtection@i_860+1)^(0+128),w
 15795  1A14  0085               	movwf	5
 15796  1A15  082A               	movf	setOverCurrentDischargeProtection@i_860^(0+128),w
 15797  1A16  0084               	movwf	4
 15798  1A17  3584               	lslf	4,f
 15799  1A18  0D85               	rlf	5,f
 15800  1A19  300C               	movlw	low (_SCD_delay_setting| (0+32768))
 15801  1A1A  0784               	addwf	4,f
 15802  1A1B  30BB               	movlw	high (_SCD_delay_setting| (0+32768))
 15803  1A1C  3D85               	addwfc	5,f
 15804  1A1D  3F00               	moviw [0]fsr0
 15805  1A1E  0020               	movlb	0	; select bank0
 15806  1A1F  00EC               	movwf	??_setOverCurrentDischargeProtection
 15807  1A20  3F01               	moviw [1]fsr0
 15808  1A21  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 15809  1A22  086B               	movf	setOverCurrentDischargeProtection@delay_ms+1,w
 15810  1A23  3A80               	xorlw	128
 15811  1A24  00EE               	movwf	??_setOverCurrentDischargeProtection+2
 15812  1A25  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 15813  1A26  3A80               	xorlw	128
 15814  1A27  026E               	subwf	??_setOverCurrentDischargeProtection+2,w
 15815  1A28  1D03               	skipz
 15816  1A29  2A2C               	goto	u9105
 15817  1A2A  086C               	movf	??_setOverCurrentDischargeProtection,w
 15818  1A2B  026A               	subwf	setOverCurrentDischargeProtection@delay_ms,w
 15819  1A2C                     u9105:	
 15820  1A2C  1C03               	skipc
 15821  1A2D  2A3B               	goto	l6482
 15822                           
 15823                           ;BQ76920.c: 119:             protect2.bits.OCD_DELAY = i;
 15824  1A2E  0021               	movlb	1	; select bank1
 15825  1A2F  082A               	movf	setOverCurrentDischargeProtection@i_860^(0+128),w
 15826  1A30  0020               	movlb	0	; select bank0
 15827  1A31  00EC               	movwf	??_setOverCurrentDischargeProtection
 15828  1A32  0EEC               	swapf	??_setOverCurrentDischargeProtection,f
 15829  1A33  0023               	movlb	3	; select bank3
 15830  1A34  0850               	movf	BQ76920@protect2^(0+384),w
 15831  1A35  0020               	movlb	0	; select bank0
 15832  1A36  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 15833  1A37  398F               	andlw	-113
 15834  1A38  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 15835  1A39  0023               	movlb	3	; select bank3
 15836  1A3A  00D0               	movwf	BQ76920@protect2^(0+384)
 15837  1A3B                     l6482:	
 15838                           
 15839                           ;BQ76920.c: 121:     }
 15840  1A3B  3001               	movlw	1
 15841  1A3C  0021               	movlb	1	; select bank1
 15842  1A3D  07AA               	addwf	setOverCurrentDischargeProtection@i_860^(0+128),f
 15843  1A3E  3000               	movlw	0
 15844  1A3F  3DAB               	addwfc	(setOverCurrentDischargeProtection@i_860+1)^(0+128),f
 15845  1A40  3000               	movlw	0
 15846  1A41  022B               	subwf	(setOverCurrentDischargeProtection@i_860+1)^(0+128),w
 15847  1A42  3007               	movlw	7
 15848  1A43  1903               	skipnz
 15849  1A44  022A               	subwf	setOverCurrentDischargeProtection@i_860^(0+128),w
 15850  1A45  1C03               	skipc
 15851  1A46  2A13               	goto	l6478
 15852                           
 15853                           ;BQ76920.c: 123:     I2C_writeRegister(0x18, 0x07, protect2.regByte);
 15854  1A47  3018               	movlw	24
 15855  1A48  00F5               	movwf	I2C_writeRegister@slaveAddress
 15856  1A49  3000               	movlw	0
 15857  1A4A  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 15858  1A4B  3007               	movlw	7
 15859  1A4C  00F7               	movwf	I2C_writeRegister@regAddress
 15860  1A4D  3000               	movlw	0
 15861  1A4E  00F8               	movwf	I2C_writeRegister@regAddress+1
 15862  1A4F  0023               	movlb	3	; select bank3
 15863  1A50  0850               	movf	BQ76920@protect2^(0+384),w
 15864  1A51  0020               	movlb	0	; select bank0
 15865  1A52  00EC               	movwf	??_setOverCurrentDischargeProtection
 15866  1A53  01ED               	clrf	??_setOverCurrentDischargeProtection+1
 15867  1A54  086C               	movf	??_setOverCurrentDischargeProtection,w
 15868  1A55  00F9               	movwf	I2C_writeRegister@data
 15869  1A56  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 15870  1A57  00FA               	movwf	I2C_writeRegister@data+1
 15871  1A58  31B4  245D         	fcall	_I2C_writeRegister
 15872  1A5A  0008               	return
 15873  1A5B                     __end_of_setOverCurrentDischargeProtection:	
 15874                           
 15875                           	psect	text50
 15876  15D4                     __ptext50:	
 15877 ;; *************** function ___flmul *****************
 15878 ;; Defined at:
 15879 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 15880 ;; Parameters:    Size  Location     Type
 15881 ;;  b               4    6[BANK0 ] void 
 15882 ;;  a               4   10[BANK0 ] void 
 15883 ;; Auto vars:     Size  Location     Type
 15884 ;;  prod            4   26[BANK0 ] struct .
 15885 ;;  grs             4   20[BANK0 ] unsigned long 
 15886 ;;  temp            2   30[BANK0 ] struct .
 15887 ;;  bexp            1   25[BANK0 ] unsigned char 
 15888 ;;  aexp            1   24[BANK0 ] unsigned char 
 15889 ;;  sign            1   19[BANK0 ] unsigned char 
 15890 ;; Return value:  Size  Location     Type
 15891 ;;                  4    6[BANK0 ] unsigned char 
 15892 ;; Registers used:
 15893 ;;		wreg, status,2, status,0, pclath, cstack
 15894 ;; Tracked objects:
 15895 ;;		On entry : 0/0
 15896 ;;		On exit  : 0/0
 15897 ;;		Unchanged: 0/0
 15898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15899 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15900 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15901 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15902 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15903 ;;Total ram usage:       26 bytes
 15904 ;; Hardware stack levels used:    1
 15905 ;; Hardware stack levels required when called:    2
 15906 ;; This function calls:
 15907 ;;		__Umul8_16
 15908 ;; This function is called by:
 15909 ;;		_setShortCircuitProtection
 15910 ;;		_setOverCurrentDischargeProtection
 15911 ;;		_efgtoa
 15912 ;; This function uses a non-reentrant model
 15913 ;;
 15914                           
 15915                           
 15916                           ;psect for function ___flmul
 15917  15D4                     ___flmul:	
 15918                           
 15919                           ;incstack = 0
 15920                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 15921  15D4  0020               	movlb	0	; select bank0
 15922  15D5  0829               	movf	___flmul@b+3,w
 15923  15D6  3980               	andlw	128
 15924  15D7  00AE               	movwf	??___flmul
 15925  15D8  082E               	movf	??___flmul,w
 15926  15D9  00B3               	movwf	___flmul@sign
 15927  15DA  3529               	lslf	___flmul@b+3,w
 15928  15DB  00AE               	movwf	??___flmul
 15929  15DC  082E               	movf	??___flmul,w
 15930  15DD  00B9               	movwf	___flmul@bexp
 15931  15DE  1BA8               	btfsc	___flmul@b+2,7
 15932  15DF  1439               	bsf	___flmul@bexp,0
 15933  15E0  0839               	movf	___flmul@bexp,w
 15934  15E1  1903               	btfsc	3,2
 15935  15E2  2DF0               	goto	l5020
 15936  15E3  0A39               	incf	___flmul@bexp,w
 15937  15E4  1D03               	btfss	3,2
 15938  15E5  2DEE               	goto	l5018
 15939  15E6  3000               	movlw	0
 15940  15E7  00A9               	movwf	___flmul@b+3
 15941  15E8  3000               	movlw	0
 15942  15E9  00A8               	movwf	___flmul@b+2
 15943  15EA  3000               	movlw	0
 15944  15EB  00A7               	movwf	___flmul@b+1
 15945  15EC  3000               	movlw	0
 15946  15ED  00A6               	movwf	___flmul@b
 15947  15EE                     l5018:	
 15948  15EE  17A8               	bsf	___flmul@b+2,7
 15949  15EF  2DF8               	goto	l5022
 15950  15F0                     l5020:	
 15951  15F0  3000               	movlw	0
 15952  15F1  00A9               	movwf	___flmul@b+3
 15953  15F2  3000               	movlw	0
 15954  15F3  00A8               	movwf	___flmul@b+2
 15955  15F4  3000               	movlw	0
 15956  15F5  00A7               	movwf	___flmul@b+1
 15957  15F6  3000               	movlw	0
 15958  15F7  00A6               	movwf	___flmul@b
 15959  15F8                     l5022:	
 15960  15F8  082D               	movf	___flmul@a+3,w
 15961  15F9  3980               	andlw	128
 15962  15FA  00AE               	movwf	??___flmul
 15963  15FB  082E               	movf	??___flmul,w
 15964  15FC  06B3               	xorwf	___flmul@sign,f
 15965  15FD  352D               	lslf	___flmul@a+3,w
 15966  15FE  00AE               	movwf	??___flmul
 15967  15FF  082E               	movf	??___flmul,w
 15968  1600  00B8               	movwf	___flmul@aexp
 15969  1601  1BAC               	btfsc	___flmul@a+2,7
 15970  1602  1438               	bsf	___flmul@aexp,0
 15971  1603  0838               	movf	___flmul@aexp,w
 15972  1604  1903               	btfsc	3,2
 15973  1605  2E13               	goto	l5038
 15974  1606  0A38               	incf	___flmul@aexp,w
 15975  1607  1D03               	btfss	3,2
 15976  1608  2E11               	goto	l5036
 15977  1609  3000               	movlw	0
 15978  160A  00AD               	movwf	___flmul@a+3
 15979  160B  3000               	movlw	0
 15980  160C  00AC               	movwf	___flmul@a+2
 15981  160D  3000               	movlw	0
 15982  160E  00AB               	movwf	___flmul@a+1
 15983  160F  3000               	movlw	0
 15984  1610  00AA               	movwf	___flmul@a
 15985  1611                     l5036:	
 15986  1611  17AC               	bsf	___flmul@a+2,7
 15987  1612  2E1B               	goto	l5040
 15988  1613                     l5038:	
 15989  1613  3000               	movlw	0
 15990  1614  00AD               	movwf	___flmul@a+3
 15991  1615  3000               	movlw	0
 15992  1616  00AC               	movwf	___flmul@a+2
 15993  1617  3000               	movlw	0
 15994  1618  00AB               	movwf	___flmul@a+1
 15995  1619  3000               	movlw	0
 15996  161A  00AA               	movwf	___flmul@a
 15997  161B                     l5040:	
 15998  161B  0838               	movf	___flmul@aexp,w
 15999  161C  1D03               	btfss	3,2
 16000  161D  0839               	movf	___flmul@bexp,w
 16001  161E  1D03               	btfss	3,2
 16002  161F  2E29               	goto	l5048
 16003  1620  3000               	movlw	0
 16004  1621  00A9               	movwf	?___flmul+3
 16005  1622  3000               	movlw	0
 16006  1623  00A8               	movwf	?___flmul+2
 16007  1624  3000               	movlw	0
 16008  1625  00A7               	movwf	?___flmul+1
 16009  1626  3000               	movlw	0
 16010  1627  00A6               	movwf	?___flmul
 16011  1628  0008               	return
 16012  1629                     l5048:	
 16013  1629  0826               	movf	___flmul@b,w
 16014  162A  00AE               	movwf	??___flmul
 16015  162B  082E               	movf	??___flmul,w
 16016  162C  00F1               	movwf	__Umul8_16@multiplicand
 16017  162D  082C               	movf	___flmul@a+2,w
 16018  162E  31B4  247B  3195   	fcall	__Umul8_16
 16019  1631  0872               	movf	?__Umul8_16+1,w
 16020  1632  0020               	movlb	0	; select bank0
 16021  1633  00BF               	movwf	___flmul@temp+1
 16022  1634  0871               	movf	?__Umul8_16,w
 16023  1635  00BE               	movwf	___flmul@temp
 16024  1636  083E               	movf	___flmul@temp,w
 16025  1637  00AE               	movwf	??___flmul
 16026  1638  01AF               	clrf	??___flmul+1
 16027  1639  01B0               	clrf	??___flmul+2
 16028  163A  01B1               	clrf	??___flmul+3
 16029  163B  0831               	movf	??___flmul+3,w
 16030  163C  00B7               	movwf	___flmul@grs+3
 16031  163D  0830               	movf	??___flmul+2,w
 16032  163E  00B6               	movwf	___flmul@grs+2
 16033  163F  082F               	movf	??___flmul+1,w
 16034  1640  00B5               	movwf	___flmul@grs+1
 16035  1641  082E               	movf	??___flmul,w
 16036  1642  00B4               	movwf	___flmul@grs
 16037  1643  083F               	movf	___flmul@temp+1,w
 16038  1644  00AE               	movwf	??___flmul
 16039  1645  01AF               	clrf	??___flmul+1
 16040  1646  01B0               	clrf	??___flmul+2
 16041  1647  01B1               	clrf	??___flmul+3
 16042  1648  0831               	movf	??___flmul+3,w
 16043  1649  00BD               	movwf	___flmul@prod+3
 16044  164A  0830               	movf	??___flmul+2,w
 16045  164B  00BC               	movwf	___flmul@prod+2
 16046  164C  082F               	movf	??___flmul+1,w
 16047  164D  00BB               	movwf	___flmul@prod+1
 16048  164E  082E               	movf	??___flmul,w
 16049  164F  00BA               	movwf	___flmul@prod
 16050  1650  0827               	movf	___flmul@b+1,w
 16051  1651  00AE               	movwf	??___flmul
 16052  1652  082E               	movf	??___flmul,w
 16053  1653  00F1               	movwf	__Umul8_16@multiplicand
 16054  1654  082B               	movf	___flmul@a+1,w
 16055  1655  31B4  247B  3195   	fcall	__Umul8_16
 16056  1658  0872               	movf	?__Umul8_16+1,w
 16057  1659  0020               	movlb	0	; select bank0
 16058  165A  00BF               	movwf	___flmul@temp+1
 16059  165B  0871               	movf	?__Umul8_16,w
 16060  165C  00BE               	movwf	___flmul@temp
 16061  165D  083E               	movf	___flmul@temp,w
 16062  165E  00AE               	movwf	??___flmul
 16063  165F  01AF               	clrf	??___flmul+1
 16064  1660  01B0               	clrf	??___flmul+2
 16065  1661  01B1               	clrf	??___flmul+3
 16066  1662  082E               	movf	??___flmul,w
 16067  1663  07B4               	addwf	___flmul@grs,f
 16068  1664  082F               	movf	??___flmul+1,w
 16069  1665  3DB5               	addwfc	___flmul@grs+1,f
 16070  1666  0830               	movf	??___flmul+2,w
 16071  1667  3DB6               	addwfc	___flmul@grs+2,f
 16072  1668  0831               	movf	??___flmul+3,w
 16073  1669  3DB7               	addwfc	___flmul@grs+3,f
 16074  166A  083F               	movf	___flmul@temp+1,w
 16075  166B  00AE               	movwf	??___flmul
 16076  166C  01AF               	clrf	??___flmul+1
 16077  166D  01B0               	clrf	??___flmul+2
 16078  166E  01B1               	clrf	??___flmul+3
 16079  166F  082E               	movf	??___flmul,w
 16080  1670  07BA               	addwf	___flmul@prod,f
 16081  1671  082F               	movf	??___flmul+1,w
 16082  1672  3DBB               	addwfc	___flmul@prod+1,f
 16083  1673  0830               	movf	??___flmul+2,w
 16084  1674  3DBC               	addwfc	___flmul@prod+2,f
 16085  1675  0831               	movf	??___flmul+3,w
 16086  1676  3DBD               	addwfc	___flmul@prod+3,f
 16087  1677  0828               	movf	___flmul@b+2,w
 16088  1678  00AE               	movwf	??___flmul
 16089  1679  082E               	movf	??___flmul,w
 16090  167A  00F1               	movwf	__Umul8_16@multiplicand
 16091  167B  082A               	movf	___flmul@a,w
 16092  167C  31B4  247B  3195   	fcall	__Umul8_16
 16093  167F  0872               	movf	?__Umul8_16+1,w
 16094  1680  0020               	movlb	0	; select bank0
 16095  1681  00BF               	movwf	___flmul@temp+1
 16096  1682  0871               	movf	?__Umul8_16,w
 16097  1683  00BE               	movwf	___flmul@temp
 16098  1684  083E               	movf	___flmul@temp,w
 16099  1685  00AE               	movwf	??___flmul
 16100  1686  01AF               	clrf	??___flmul+1
 16101  1687  01B0               	clrf	??___flmul+2
 16102  1688  01B1               	clrf	??___flmul+3
 16103  1689  082E               	movf	??___flmul,w
 16104  168A  07B4               	addwf	___flmul@grs,f
 16105  168B  082F               	movf	??___flmul+1,w
 16106  168C  3DB5               	addwfc	___flmul@grs+1,f
 16107  168D  0830               	movf	??___flmul+2,w
 16108  168E  3DB6               	addwfc	___flmul@grs+2,f
 16109  168F  0831               	movf	??___flmul+3,w
 16110  1690  3DB7               	addwfc	___flmul@grs+3,f
 16111  1691  083F               	movf	___flmul@temp+1,w
 16112  1692  00AE               	movwf	??___flmul
 16113  1693  01AF               	clrf	??___flmul+1
 16114  1694  01B0               	clrf	??___flmul+2
 16115  1695  01B1               	clrf	??___flmul+3
 16116  1696  082E               	movf	??___flmul,w
 16117  1697  07BA               	addwf	___flmul@prod,f
 16118  1698  082F               	movf	??___flmul+1,w
 16119  1699  3DBB               	addwfc	___flmul@prod+1,f
 16120  169A  0830               	movf	??___flmul+2,w
 16121  169B  3DBC               	addwfc	___flmul@prod+2,f
 16122  169C  0831               	movf	??___flmul+3,w
 16123  169D  3DBD               	addwfc	___flmul@prod+3,f
 16124  169E  3008               	movlw	8
 16125  169F                     u6735:	
 16126  169F  35B4               	lslf	___flmul@grs,f
 16127  16A0  0DB5               	rlf	___flmul@grs+1,f
 16128  16A1  0DB6               	rlf	___flmul@grs+2,f
 16129  16A2  0DB7               	rlf	___flmul@grs+3,f
 16130  16A3  0B89               	decfsz	9,f
 16131  16A4  2E9F               	goto	u6735
 16132  16A5  0827               	movf	___flmul@b+1,w
 16133  16A6  00AE               	movwf	??___flmul
 16134  16A7  082E               	movf	??___flmul,w
 16135  16A8  00F1               	movwf	__Umul8_16@multiplicand
 16136  16A9  082A               	movf	___flmul@a,w
 16137  16AA  31B4  247B  3195   	fcall	__Umul8_16
 16138  16AD  0872               	movf	?__Umul8_16+1,w
 16139  16AE  0020               	movlb	0	; select bank0
 16140  16AF  00BF               	movwf	___flmul@temp+1
 16141  16B0  0871               	movf	?__Umul8_16,w
 16142  16B1  00BE               	movwf	___flmul@temp
 16143  16B2  083E               	movf	___flmul@temp,w
 16144  16B3  07B4               	addwf	___flmul@grs,f
 16145  16B4  083F               	movf	___flmul@temp+1,w
 16146  16B5  3DB5               	addwfc	___flmul@grs+1,f
 16147  16B6  3000               	movlw	0
 16148  16B7  3DB6               	addwfc	___flmul@grs+2,f
 16149  16B8  3DB7               	addwfc	___flmul@grs+3,f
 16150  16B9  0826               	movf	___flmul@b,w
 16151  16BA  00AE               	movwf	??___flmul
 16152  16BB  082E               	movf	??___flmul,w
 16153  16BC  00F1               	movwf	__Umul8_16@multiplicand
 16154  16BD  082B               	movf	___flmul@a+1,w
 16155  16BE  31B4  247B  3195   	fcall	__Umul8_16
 16156  16C1  0872               	movf	?__Umul8_16+1,w
 16157  16C2  0020               	movlb	0	; select bank0
 16158  16C3  00BF               	movwf	___flmul@temp+1
 16159  16C4  0871               	movf	?__Umul8_16,w
 16160  16C5  00BE               	movwf	___flmul@temp
 16161  16C6  083E               	movf	___flmul@temp,w
 16162  16C7  07B4               	addwf	___flmul@grs,f
 16163  16C8  083F               	movf	___flmul@temp+1,w
 16164  16C9  3DB5               	addwfc	___flmul@grs+1,f
 16165  16CA  3000               	movlw	0
 16166  16CB  3DB6               	addwfc	___flmul@grs+2,f
 16167  16CC  3DB7               	addwfc	___flmul@grs+3,f
 16168  16CD  3008               	movlw	8
 16169  16CE                     u6745:	
 16170  16CE  35B4               	lslf	___flmul@grs,f
 16171  16CF  0DB5               	rlf	___flmul@grs+1,f
 16172  16D0  0DB6               	rlf	___flmul@grs+2,f
 16173  16D1  0DB7               	rlf	___flmul@grs+3,f
 16174  16D2  0B89               	decfsz	9,f
 16175  16D3  2ECE               	goto	u6745
 16176  16D4  0826               	movf	___flmul@b,w
 16177  16D5  00AE               	movwf	??___flmul
 16178  16D6  082E               	movf	??___flmul,w
 16179  16D7  00F1               	movwf	__Umul8_16@multiplicand
 16180  16D8  082A               	movf	___flmul@a,w
 16181  16D9  31B4  247B  3195   	fcall	__Umul8_16
 16182  16DC  0872               	movf	?__Umul8_16+1,w
 16183  16DD  0020               	movlb	0	; select bank0
 16184  16DE  00BF               	movwf	___flmul@temp+1
 16185  16DF  0871               	movf	?__Umul8_16,w
 16186  16E0  00BE               	movwf	___flmul@temp
 16187  16E1  083E               	movf	___flmul@temp,w
 16188  16E2  07B4               	addwf	___flmul@grs,f
 16189  16E3  083F               	movf	___flmul@temp+1,w
 16190  16E4  3DB5               	addwfc	___flmul@grs+1,f
 16191  16E5  3000               	movlw	0
 16192  16E6  3DB6               	addwfc	___flmul@grs+2,f
 16193  16E7  3DB7               	addwfc	___flmul@grs+3,f
 16194  16E8  0827               	movf	___flmul@b+1,w
 16195  16E9  00AE               	movwf	??___flmul
 16196  16EA  082E               	movf	??___flmul,w
 16197  16EB  00F1               	movwf	__Umul8_16@multiplicand
 16198  16EC  082C               	movf	___flmul@a+2,w
 16199  16ED  31B4  247B  3195   	fcall	__Umul8_16
 16200  16F0  0872               	movf	?__Umul8_16+1,w
 16201  16F1  0020               	movlb	0	; select bank0
 16202  16F2  00BF               	movwf	___flmul@temp+1
 16203  16F3  0871               	movf	?__Umul8_16,w
 16204  16F4  00BE               	movwf	___flmul@temp
 16205  16F5  083E               	movf	___flmul@temp,w
 16206  16F6  07BA               	addwf	___flmul@prod,f
 16207  16F7  083F               	movf	___flmul@temp+1,w
 16208  16F8  3DBB               	addwfc	___flmul@prod+1,f
 16209  16F9  3000               	movlw	0
 16210  16FA  3DBC               	addwfc	___flmul@prod+2,f
 16211  16FB  3DBD               	addwfc	___flmul@prod+3,f
 16212  16FC  0828               	movf	___flmul@b+2,w
 16213  16FD  00AE               	movwf	??___flmul
 16214  16FE  082E               	movf	??___flmul,w
 16215  16FF  00F1               	movwf	__Umul8_16@multiplicand
 16216  1700  082B               	movf	___flmul@a+1,w
 16217  1701  31B4  247B  3195   	fcall	__Umul8_16
 16218  1704  0872               	movf	?__Umul8_16+1,w
 16219  1705  0020               	movlb	0	; select bank0
 16220  1706  00BF               	movwf	___flmul@temp+1
 16221  1707  0871               	movf	?__Umul8_16,w
 16222  1708  00BE               	movwf	___flmul@temp
 16223  1709  083E               	movf	___flmul@temp,w
 16224  170A  07BA               	addwf	___flmul@prod,f
 16225  170B  083F               	movf	___flmul@temp+1,w
 16226  170C  3DBB               	addwfc	___flmul@prod+1,f
 16227  170D  3000               	movlw	0
 16228  170E  3DBC               	addwfc	___flmul@prod+2,f
 16229  170F  3DBD               	addwfc	___flmul@prod+3,f
 16230  1710  0828               	movf	___flmul@b+2,w
 16231  1711  00AE               	movwf	??___flmul
 16232  1712  082E               	movf	??___flmul,w
 16233  1713  00F1               	movwf	__Umul8_16@multiplicand
 16234  1714  082C               	movf	___flmul@a+2,w
 16235  1715  31B4  247B  3195   	fcall	__Umul8_16
 16236  1718  0872               	movf	?__Umul8_16+1,w
 16237  1719  0020               	movlb	0	; select bank0
 16238  171A  00BF               	movwf	___flmul@temp+1
 16239  171B  0871               	movf	?__Umul8_16,w
 16240  171C  00BE               	movwf	___flmul@temp
 16241  171D  083E               	movf	___flmul@temp,w
 16242  171E  00AE               	movwf	??___flmul
 16243  171F  083F               	movf	___flmul@temp+1,w
 16244  1720  00AF               	movwf	??___flmul+1
 16245  1721  01B0               	clrf	??___flmul+2
 16246  1722  01B1               	clrf	??___flmul+3
 16247  1723  3008               	movlw	8
 16248  1724                     u6755:	
 16249  1724  35AE               	lslf	??___flmul,f
 16250  1725  0DAF               	rlf	??___flmul+1,f
 16251  1726  0DB0               	rlf	??___flmul+2,f
 16252  1727  0DB1               	rlf	??___flmul+3,f
 16253  1728  0B89               	decfsz	9,f
 16254  1729  2F24               	goto	u6755
 16255  172A  082E               	movf	??___flmul,w
 16256  172B  07BA               	addwf	___flmul@prod,f
 16257  172C  082F               	movf	??___flmul+1,w
 16258  172D  3DBB               	addwfc	___flmul@prod+1,f
 16259  172E  0830               	movf	??___flmul+2,w
 16260  172F  3DBC               	addwfc	___flmul@prod+2,f
 16261  1730  0831               	movf	??___flmul+3,w
 16262  1731  3DBD               	addwfc	___flmul@prod+3,f
 16263  1732  0834               	movf	___flmul@grs,w
 16264  1733  00AE               	movwf	??___flmul
 16265  1734  0835               	movf	___flmul@grs+1,w
 16266  1735  00AF               	movwf	??___flmul+1
 16267  1736  0836               	movf	___flmul@grs+2,w
 16268  1737  00B0               	movwf	??___flmul+2
 16269  1738  0837               	movf	___flmul@grs+3,w
 16270  1739  00B1               	movwf	??___flmul+3
 16271  173A  3018               	movlw	24
 16272  173B                     u6765:	
 16273  173B  36B1               	lsrf	??___flmul+3,f
 16274  173C  0CB0               	rrf	??___flmul+2,f
 16275  173D  0CAF               	rrf	??___flmul+1,f
 16276  173E  0CAE               	rrf	??___flmul,f
 16277  173F  0B89               	decfsz	9,f
 16278  1740  2F3B               	goto	u6765
 16279  1741  082E               	movf	??___flmul,w
 16280  1742  07BA               	addwf	___flmul@prod,f
 16281  1743  082F               	movf	??___flmul+1,w
 16282  1744  3DBB               	addwfc	___flmul@prod+1,f
 16283  1745  0830               	movf	??___flmul+2,w
 16284  1746  3DBC               	addwfc	___flmul@prod+2,f
 16285  1747  0831               	movf	??___flmul+3,w
 16286  1748  3DBD               	addwfc	___flmul@prod+3,f
 16287  1749  3008               	movlw	8
 16288  174A                     u6775:	
 16289  174A  35B4               	lslf	___flmul@grs,f
 16290  174B  0DB5               	rlf	___flmul@grs+1,f
 16291  174C  0DB6               	rlf	___flmul@grs+2,f
 16292  174D  0DB7               	rlf	___flmul@grs+3,f
 16293  174E  0B89               	decfsz	9,f
 16294  174F  2F4A               	goto	u6775
 16295  1750  0839               	movf	___flmul@bexp,w
 16296  1751  0738               	addwf	___flmul@aexp,w
 16297  1752  00AE               	movwf	??___flmul
 16298  1753  01AF               	clrf	??___flmul+1
 16299  1754  0DAF               	rlf	??___flmul+1,f
 16300  1755  082E               	movf	??___flmul,w
 16301  1756  3E82               	addlw	130
 16302  1757  00BE               	movwf	___flmul@temp
 16303  1758  30FF               	movlw	255
 16304  1759  3D2F               	addwfc	??___flmul+1,w
 16305  175A  00BF               	movwf	___flmul@temp+1
 16306  175B                     l5100:	
 16307  175B  1BBC               	btfsc	___flmul@prod+2,7
 16308  175C  2F72               	goto	l5102
 16309  175D  3001               	movlw	1
 16310  175E                     u6785:	
 16311  175E  35BA               	lslf	___flmul@prod,f
 16312  175F  0DBB               	rlf	___flmul@prod+1,f
 16313  1760  0DBC               	rlf	___flmul@prod+2,f
 16314  1761  0DBD               	rlf	___flmul@prod+3,f
 16315  1762  0B89               	decfsz	9,f
 16316  1763  2F5E               	goto	u6785
 16317  1764  1BB7               	btfsc	___flmul@grs+3,7
 16318  1765  143A               	bsf	___flmul@prod,0
 16319  1766  3001               	movlw	1
 16320  1767                     u6805:	
 16321  1767  35B4               	lslf	___flmul@grs,f
 16322  1768  0DB5               	rlf	___flmul@grs+1,f
 16323  1769  0DB6               	rlf	___flmul@grs+2,f
 16324  176A  0DB7               	rlf	___flmul@grs+3,f
 16325  176B  0B89               	decfsz	9,f
 16326  176C  2F67               	goto	u6805
 16327  176D  30FF               	movlw	255
 16328  176E  07BE               	addwf	___flmul@temp,f
 16329  176F  30FF               	movlw	255
 16330  1770  3DBF               	addwfc	___flmul@temp+1,f
 16331  1771  2F5B               	goto	l5100
 16332  1772                     l5102:	
 16333  1772  01B8               	clrf	___flmul@aexp
 16334  1773  1FB7               	btfss	___flmul@grs+3,7
 16335  1774  2F8B               	goto	l5112
 16336  1775  30FF               	movlw	255
 16337  1776  0534               	andwf	___flmul@grs,w
 16338  1777  00AE               	movwf	??___flmul
 16339  1778  30FF               	movlw	255
 16340  1779  0535               	andwf	___flmul@grs+1,w
 16341  177A  00AF               	movwf	??___flmul+1
 16342  177B  30FF               	movlw	255
 16343  177C  0536               	andwf	___flmul@grs+2,w
 16344  177D  00B0               	movwf	??___flmul+2
 16345  177E  307F               	movlw	127
 16346  177F  0537               	andwf	___flmul@grs+3,w
 16347  1780  00B1               	movwf	??___flmul+3
 16348  1781  0831               	movf	??___flmul+3,w
 16349  1782  0430               	iorwf	??___flmul+2,w
 16350  1783  042F               	iorwf	??___flmul+1,w
 16351  1784  042E               	iorwf	??___flmul,w
 16352  1785  1903               	skipnz
 16353  1786  183A               	btfsc	___flmul@prod,0
 16354  1787  2F89               	goto	l5108
 16355  1788  2F8B               	goto	l5112
 16356  1789                     l5108:	
 16357  1789  01B8               	clrf	___flmul@aexp
 16358  178A  0AB8               	incf	___flmul@aexp,f
 16359  178B                     l5112:	
 16360  178B  0838               	movf	___flmul@aexp,w
 16361  178C  1903               	btfsc	3,2
 16362  178D  2FB4               	goto	l5122
 16363  178E  3001               	movlw	1
 16364  178F  07BA               	addwf	___flmul@prod,f
 16365  1790  3000               	movlw	0
 16366  1791  3DBB               	addwfc	___flmul@prod+1,f
 16367  1792  3000               	movlw	0
 16368  1793  3DBC               	addwfc	___flmul@prod+2,f
 16369  1794  3000               	movlw	0
 16370  1795  3DBD               	addwfc	___flmul@prod+3,f
 16371  1796  1C3D               	btfss	___flmul@prod+3,0
 16372  1797  2FB4               	goto	l5122
 16373  1798  083A               	movf	___flmul@prod,w
 16374  1799  00AE               	movwf	??___flmul
 16375  179A  083B               	movf	___flmul@prod+1,w
 16376  179B  00AF               	movwf	??___flmul+1
 16377  179C  083C               	movf	___flmul@prod+2,w
 16378  179D  00B0               	movwf	??___flmul+2
 16379  179E  083D               	movf	___flmul@prod+3,w
 16380  179F  00B1               	movwf	??___flmul+3
 16381  17A0  3001               	movlw	1
 16382  17A1  00B2               	movwf	??___flmul+4
 16383  17A2                     u6875:	
 16384  17A2  37B1               	asrf	??___flmul+3,f
 16385  17A3  0CB0               	rrf	??___flmul+2,f
 16386  17A4  0CAF               	rrf	??___flmul+1,f
 16387  17A5  0CAE               	rrf	??___flmul,f
 16388  17A6  0BB2               	decfsz	??___flmul+4,f
 16389  17A7  2FA2               	goto	u6875
 16390  17A8  0831               	movf	??___flmul+3,w
 16391  17A9  00BD               	movwf	___flmul@prod+3
 16392  17AA  0830               	movf	??___flmul+2,w
 16393  17AB  00BC               	movwf	___flmul@prod+2
 16394  17AC  082F               	movf	??___flmul+1,w
 16395  17AD  00BB               	movwf	___flmul@prod+1
 16396  17AE  082E               	movf	??___flmul,w
 16397  17AF  00BA               	movwf	___flmul@prod
 16398  17B0  3001               	movlw	1
 16399  17B1  07BE               	addwf	___flmul@temp,f
 16400  17B2  3000               	movlw	0
 16401  17B3  3DBF               	addwfc	___flmul@temp+1,f
 16402  17B4                     l5122:	
 16403  17B4  083F               	movf	___flmul@temp+1,w
 16404  17B5  3A80               	xorlw	128
 16405  17B6  00AE               	movwf	??___flmul
 16406  17B7  3080               	movlw	128
 16407  17B8  022E               	subwf	??___flmul,w
 16408  17B9  1D03               	skipz
 16409  17BA  2FBD               	goto	u6885
 16410  17BB  30FF               	movlw	255
 16411  17BC  023E               	subwf	___flmul@temp,w
 16412  17BD                     u6885:	
 16413  17BD  1C03               	skipc
 16414  17BE  2FC9               	goto	l5126
 16415  17BF  307F               	movlw	127
 16416  17C0  0020               	movlb	0	; select bank0
 16417  17C1  00BD               	movwf	___flmul@prod+3
 16418  17C2  3080               	movlw	128
 16419  17C3  00BC               	movwf	___flmul@prod+2
 16420  17C4  3000               	movlw	0
 16421  17C5  00BB               	movwf	___flmul@prod+1
 16422  17C6  3000               	movlw	0
 16423  17C7  00BA               	movwf	___flmul@prod
 16424  17C8  2FF3               	goto	l1263
 16425  17C9                     l5126:	
 16426  17C9  0020               	movlb	0	; select bank0
 16427  17CA  083F               	movf	___flmul@temp+1,w
 16428  17CB  3A80               	xorlw	128
 16429  17CC  00AE               	movwf	??___flmul
 16430  17CD  3080               	movlw	128
 16431  17CE  022E               	subwf	??___flmul,w
 16432  17CF  1D03               	skipz
 16433  17D0  2FD3               	goto	u6895
 16434  17D1  3001               	movlw	1
 16435  17D2  023E               	subwf	___flmul@temp,w
 16436  17D3                     u6895:	
 16437  17D3  1803               	skipnc
 16438  17D4  2FE0               	goto	l5132
 16439  17D5  3000               	movlw	0
 16440  17D6  0020               	movlb	0	; select bank0
 16441  17D7  00BD               	movwf	___flmul@prod+3
 16442  17D8  3000               	movlw	0
 16443  17D9  00BC               	movwf	___flmul@prod+2
 16444  17DA  3000               	movlw	0
 16445  17DB  00BB               	movwf	___flmul@prod+1
 16446  17DC  3000               	movlw	0
 16447  17DD  00BA               	movwf	___flmul@prod
 16448  17DE  01B3               	clrf	___flmul@sign
 16449  17DF  2FF3               	goto	l1263
 16450  17E0                     l5132:	
 16451  17E0  0020               	movlb	0	; select bank0
 16452  17E1  083E               	movf	___flmul@temp,w
 16453  17E2  00AE               	movwf	??___flmul
 16454  17E3  082E               	movf	??___flmul,w
 16455  17E4  00B9               	movwf	___flmul@bexp
 16456  17E5  30FF               	movlw	255
 16457  17E6  05BA               	andwf	___flmul@prod,f
 16458  17E7  30FF               	movlw	255
 16459  17E8  05BB               	andwf	___flmul@prod+1,f
 16460  17E9  307F               	movlw	127
 16461  17EA  05BC               	andwf	___flmul@prod+2,f
 16462  17EB  3000               	movlw	0
 16463  17EC  05BD               	andwf	___flmul@prod+3,f
 16464  17ED  1839               	btfsc	___flmul@bexp,0
 16465  17EE  17BC               	bsf	___flmul@prod+2,7
 16466  17EF  3639               	lsrf	___flmul@bexp,w
 16467  17F0  00AE               	movwf	??___flmul
 16468  17F1  082E               	movf	??___flmul,w
 16469  17F2  00BD               	movwf	___flmul@prod+3
 16470  17F3                     l1263:	
 16471  17F3  0833               	movf	___flmul@sign,w
 16472  17F4  00AE               	movwf	??___flmul
 16473  17F5  082E               	movf	??___flmul,w
 16474  17F6  04BD               	iorwf	___flmul@prod+3,f
 16475  17F7  083D               	movf	___flmul@prod+3,w
 16476  17F8  00A9               	movwf	?___flmul+3
 16477  17F9  083C               	movf	___flmul@prod+2,w
 16478  17FA  00A8               	movwf	?___flmul+2
 16479  17FB  083B               	movf	___flmul@prod+1,w
 16480  17FC  00A7               	movwf	?___flmul+1
 16481  17FD  083A               	movf	___flmul@prod,w
 16482  17FE  00A6               	movwf	?___flmul
 16483  17FF  0008               	return
 16484  1800                     __end_of___flmul:	
 16485                           
 16486                           	psect	text51
 16487  347B                     __ptext51:	
 16488 ;; *************** function __Umul8_16 *****************
 16489 ;; Defined at:
 16490 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 16491 ;; Parameters:    Size  Location     Type
 16492 ;;  multiplier      1    wreg     unsigned char 
 16493 ;;  multiplicand    1    1[COMMON] unsigned char 
 16494 ;; Auto vars:     Size  Location     Type
 16495 ;;  multiplier      1    9[COMMON] unsigned char 
 16496 ;;  word_mpld       2    7[COMMON] unsigned int 
 16497 ;;  product         2    5[COMMON] unsigned int 
 16498 ;; Return value:  Size  Location     Type
 16499 ;;                  2    1[COMMON] unsigned int 
 16500 ;; Registers used:
 16501 ;;		wreg, status,2, status,0
 16502 ;; Tracked objects:
 16503 ;;		On entry : 0/0
 16504 ;;		On exit  : 0/0
 16505 ;;		Unchanged: 0/0
 16506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16507 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16508 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16509 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16510 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16511 ;;Total ram usage:        9 bytes
 16512 ;; Hardware stack levels used:    1
 16513 ;; Hardware stack levels required when called:    1
 16514 ;; This function calls:
 16515 ;;		Nothing
 16516 ;; This function is called by:
 16517 ;;		___flmul
 16518 ;; This function uses a non-reentrant model
 16519 ;;
 16520                           
 16521                           
 16522                           ;psect for function __Umul8_16
 16523  347B                     __Umul8_16:	
 16524                           
 16525                           ;incstack = 0
 16526                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 16527                           ;__Umul8_16@multiplier stored from wreg
 16528  347B  00F9               	movwf	__Umul8_16@multiplier
 16529  347C  01F5               	clrf	__Umul8_16@product
 16530  347D  01F6               	clrf	__Umul8_16@product+1
 16531  347E  0871               	movf	__Umul8_16@multiplicand,w
 16532  347F  00F3               	movwf	??__Umul8_16
 16533  3480  01F4               	clrf	??__Umul8_16+1
 16534  3481  0873               	movf	??__Umul8_16,w
 16535  3482  00F7               	movwf	__Umul8_16@word_mpld
 16536  3483  0874               	movf	??__Umul8_16+1,w
 16537  3484  00F8               	movwf	__Umul8_16@word_mpld+1
 16538  3485                     l4454:	
 16539  3485  1C79               	btfss	__Umul8_16@multiplier,0
 16540  3486  2C8B               	goto	l1473
 16541  3487  0877               	movf	__Umul8_16@word_mpld,w
 16542  3488  07F5               	addwf	__Umul8_16@product,f
 16543  3489  0878               	movf	__Umul8_16@word_mpld+1,w
 16544  348A  3DF6               	addwfc	__Umul8_16@product+1,f
 16545  348B                     l1473:	
 16546  348B  3001               	movlw	1
 16547  348C                     u5255:	
 16548  348C  35F7               	lslf	__Umul8_16@word_mpld,f
 16549  348D  0DF8               	rlf	__Umul8_16@word_mpld+1,f
 16550  348E  0B89               	decfsz	9,f
 16551  348F  2C8C               	goto	u5255
 16552  3490  1003               	clrc
 16553  3491  0CF9               	rrf	__Umul8_16@multiplier,f
 16554  3492  0879               	movf	__Umul8_16@multiplier,w
 16555  3493  1D03               	btfss	3,2
 16556  3494  2C85               	goto	l4454
 16557  3495  0876               	movf	__Umul8_16@product+1,w
 16558  3496  00F2               	movwf	?__Umul8_16+1
 16559  3497  0875               	movf	__Umul8_16@product,w
 16560  3498  00F1               	movwf	?__Umul8_16
 16561  3499  0008               	return
 16562  349A                     __end_of__Umul8_16:	
 16563                           
 16564                           	psect	text52
 16565  29C7                     __ptext52:	
 16566 ;; *************** function ___flge *****************
 16567 ;; Defined at:
 16568 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 16569 ;; Parameters:    Size  Location     Type
 16570 ;;  ff1             4   58[BANK0 ] unsigned int 
 16571 ;;  ff2             4   62[BANK0 ] unsigned int 
 16572 ;; Auto vars:     Size  Location     Type
 16573 ;;		None
 16574 ;; Return value:  Size  Location     Type
 16575 ;;		None               void
 16576 ;; Registers used:
 16577 ;;		wreg, status,2, status,0
 16578 ;; Tracked objects:
 16579 ;;		On entry : 0/0
 16580 ;;		On exit  : 0/0
 16581 ;;		Unchanged: 0/0
 16582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16583 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16585 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16586 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16587 ;;Total ram usage:       12 bytes
 16588 ;; Hardware stack levels used:    1
 16589 ;; Hardware stack levels required when called:    1
 16590 ;; This function calls:
 16591 ;;		Nothing
 16592 ;; This function is called by:
 16593 ;;		_setShortCircuitProtection
 16594 ;;		_setOverCurrentDischargeProtection
 16595 ;;		_efgtoa
 16596 ;; This function uses a non-reentrant model
 16597 ;;
 16598                           
 16599                           
 16600                           ;psect for function ___flge
 16601  29C7                     ___flge:	
 16602                           
 16603                           ;incstack = 0
 16604                           ; Regs used in ___flge: [wreg+status,2+status,0]
 16605  29C7  3000               	movlw	0
 16606  29C8  0020               	movlb	0	; select bank0
 16607  29C9  055A               	andwf	___flge@ff1,w
 16608  29CA  00E2               	movwf	??___flge
 16609  29CB  3000               	movlw	0
 16610  29CC  055B               	andwf	___flge@ff1+1,w
 16611  29CD  00E3               	movwf	??___flge+1
 16612  29CE  3080               	movlw	128
 16613  29CF  055C               	andwf	___flge@ff1+2,w
 16614  29D0  00E4               	movwf	??___flge+2
 16615  29D1  307F               	movlw	127
 16616  29D2  055D               	andwf	___flge@ff1+3,w
 16617  29D3  00E5               	movwf	??___flge+3
 16618  29D4  0865               	movf	??___flge+3,w
 16619  29D5  0464               	iorwf	??___flge+2,w
 16620  29D6  0463               	iorwf	??___flge+1,w
 16621  29D7  0462               	iorwf	??___flge,w
 16622  29D8  1D03               	skipz
 16623  29D9  29E2               	goto	l1032
 16624  29DA  3000               	movlw	0
 16625  29DB  00DD               	movwf	___flge@ff1+3
 16626  29DC  3000               	movlw	0
 16627  29DD  00DC               	movwf	___flge@ff1+2
 16628  29DE  3000               	movlw	0
 16629  29DF  00DB               	movwf	___flge@ff1+1
 16630  29E0  3000               	movlw	0
 16631  29E1  00DA               	movwf	___flge@ff1
 16632  29E2                     l1032:	
 16633  29E2  3000               	movlw	0
 16634  29E3  055E               	andwf	___flge@ff2,w
 16635  29E4  00E2               	movwf	??___flge
 16636  29E5  3000               	movlw	0
 16637  29E6  055F               	andwf	___flge@ff2+1,w
 16638  29E7  00E3               	movwf	??___flge+1
 16639  29E8  3080               	movlw	128
 16640  29E9  0560               	andwf	___flge@ff2+2,w
 16641  29EA  00E4               	movwf	??___flge+2
 16642  29EB  307F               	movlw	127
 16643  29EC  0561               	andwf	___flge@ff2+3,w
 16644  29ED  00E5               	movwf	??___flge+3
 16645  29EE  0865               	movf	??___flge+3,w
 16646  29EF  0464               	iorwf	??___flge+2,w
 16647  29F0  0463               	iorwf	??___flge+1,w
 16648  29F1  0462               	iorwf	??___flge,w
 16649  29F2  1D03               	skipz
 16650  29F3  29FC               	goto	l4762
 16651  29F4  3000               	movlw	0
 16652  29F5  00E1               	movwf	___flge@ff2+3
 16653  29F6  3000               	movlw	0
 16654  29F7  00E0               	movwf	___flge@ff2+2
 16655  29F8  3000               	movlw	0
 16656  29F9  00DF               	movwf	___flge@ff2+1
 16657  29FA  3000               	movlw	0
 16658  29FB  00DE               	movwf	___flge@ff2
 16659  29FC                     l4762:	
 16660  29FC  1FDD               	btfss	___flge@ff1+3,7
 16661  29FD  2A16               	goto	l4766
 16662  29FE  3000               	movlw	0
 16663  29FF  00E2               	movwf	??___flge
 16664  2A00  3000               	movlw	0
 16665  2A01  00E3               	movwf	??___flge+1
 16666  2A02  3000               	movlw	0
 16667  2A03  00E4               	movwf	??___flge+2
 16668  2A04  3080               	movlw	128
 16669  2A05  00E5               	movwf	??___flge+3
 16670  2A06  085A               	movf	___flge@ff1,w
 16671  2A07  02E2               	subwf	??___flge,f
 16672  2A08  085B               	movf	___flge@ff1+1,w
 16673  2A09  3BE3               	subwfb	??___flge+1,f
 16674  2A0A  085C               	movf	___flge@ff1+2,w
 16675  2A0B  3BE4               	subwfb	??___flge+2,f
 16676  2A0C  085D               	movf	___flge@ff1+3,w
 16677  2A0D  3BE5               	subwfb	??___flge+3,f
 16678  2A0E  0865               	movf	??___flge+3,w
 16679  2A0F  00DD               	movwf	___flge@ff1+3
 16680  2A10  0864               	movf	??___flge+2,w
 16681  2A11  00DC               	movwf	___flge@ff1+2
 16682  2A12  0863               	movf	??___flge+1,w
 16683  2A13  00DB               	movwf	___flge@ff1+1
 16684  2A14  0862               	movf	??___flge,w
 16685  2A15  00DA               	movwf	___flge@ff1
 16686  2A16                     l4766:	
 16687  2A16  1FE1               	btfss	___flge@ff2+3,7
 16688  2A17  2A30               	goto	l1035
 16689  2A18  3000               	movlw	0
 16690  2A19  00E2               	movwf	??___flge
 16691  2A1A  3000               	movlw	0
 16692  2A1B  00E3               	movwf	??___flge+1
 16693  2A1C  3000               	movlw	0
 16694  2A1D  00E4               	movwf	??___flge+2
 16695  2A1E  3080               	movlw	128
 16696  2A1F  00E5               	movwf	??___flge+3
 16697  2A20  085E               	movf	___flge@ff2,w
 16698  2A21  02E2               	subwf	??___flge,f
 16699  2A22  085F               	movf	___flge@ff2+1,w
 16700  2A23  3BE3               	subwfb	??___flge+1,f
 16701  2A24  0860               	movf	___flge@ff2+2,w
 16702  2A25  3BE4               	subwfb	??___flge+2,f
 16703  2A26  0861               	movf	___flge@ff2+3,w
 16704  2A27  3BE5               	subwfb	??___flge+3,f
 16705  2A28  0865               	movf	??___flge+3,w
 16706  2A29  00E1               	movwf	___flge@ff2+3
 16707  2A2A  0864               	movf	??___flge+2,w
 16708  2A2B  00E0               	movwf	___flge@ff2+2
 16709  2A2C  0863               	movf	??___flge+1,w
 16710  2A2D  00DF               	movwf	___flge@ff2+1
 16711  2A2E  0862               	movf	??___flge,w
 16712  2A2F  00DE               	movwf	___flge@ff2
 16713  2A30                     l1035:	
 16714  2A30  3080               	movlw	128
 16715  2A31  06DD               	xorwf	___flge@ff1+3,f
 16716  2A32  3080               	movlw	128
 16717  2A33  06E1               	xorwf	___flge@ff2+3,f
 16718  2A34  0861               	movf	___flge@ff2+3,w
 16719  2A35  025D               	subwf	___flge@ff1+3,w
 16720  2A36  1D03               	skipz
 16721  2A37  0008               	return
 16722  2A38  0860               	movf	___flge@ff2+2,w
 16723  2A39  025C               	subwf	___flge@ff1+2,w
 16724  2A3A  1D03               	skipz
 16725  2A3B  0008               	return
 16726  2A3C  085F               	movf	___flge@ff2+1,w
 16727  2A3D  025B               	subwf	___flge@ff1+1,w
 16728  2A3E  1D03               	skipz
 16729  2A3F  0008               	return
 16730  2A40  085E               	movf	___flge@ff2,w
 16731  2A41  025A               	subwf	___flge@ff1,w
 16732  2A42  0008               	return
 16733  2A43                     __end_of___flge:	
 16734                           
 16735                           	psect	text53
 16736  2F4C                     __ptext53:	
 16737 ;; *************** function _beginAFEcommunication *****************
 16738 ;; Defined at:
 16739 ;;		line 22 in file "BQ76920.c"
 16740 ;; Parameters:    Size  Location     Type
 16741 ;;		None
 16742 ;; Auto vars:     Size  Location     Type
 16743 ;;  i               2   13[BANK0 ] int 
 16744 ;;  commSuccess     2   11[BANK0 ] int 
 16745 ;; Return value:  Size  Location     Type
 16746 ;;                  2    0[BANK0 ] int 
 16747 ;; Registers used:
 16748 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16749 ;; Tracked objects:
 16750 ;;		On entry : 0/0
 16751 ;;		On exit  : 0/0
 16752 ;;		Unchanged: 0/0
 16753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16754 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16755 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16756 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16757 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16758 ;;Total ram usage:       15 bytes
 16759 ;; Hardware stack levels used:    1
 16760 ;; Hardware stack levels required when called:    3
 16761 ;; This function calls:
 16762 ;;		_I2C_writeRegister
 16763 ;;		_readRegister
 16764 ;; This function is called by:
 16765 ;;		_statemachine
 16766 ;; This function uses a non-reentrant model
 16767 ;;
 16768                           
 16769                           
 16770                           ;psect for function _beginAFEcommunication
 16771  2F4C                     _beginAFEcommunication:	
 16772                           
 16773                           ;BQ76920.c: 24:     int commSuccess = 0;
 16774                           
 16775                           ;incstack = 0
 16776                           ; Regs used in _beginAFEcommunication: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16777  2F4C  0020               	movlb	0	; select bank0
 16778  2F4D  01AB               	clrf	beginAFEcommunication@commSuccess
 16779  2F4E  01AC               	clrf	beginAFEcommunication@commSuccess+1
 16780                           
 16781                           ;BQ76920.c: 27:     for (int i = 0; i < 4; i++) {
 16782  2F4F  01AD               	clrf	beginAFEcommunication@i
 16783  2F50  01AE               	clrf	beginAFEcommunication@i+1
 16784  2F51                     l8248:	
 16785                           
 16786                           ;BQ76920.c: 28:         cellVoltages[i] = 0;
 16787  2F51  0020               	movlb	0	; select bank0
 16788  2F52  352D               	lslf	beginAFEcommunication@i,w
 16789  2F53  3EA0               	addlw	(low (_cellVoltages| (0+256)))& (0+255)
 16790  2F54  0086               	movwf	6
 16791  2F55  3001               	movlw	1	; select bank3/4
 16792  2F56  0087               	movwf	7
 16793  2F57  3000               	movlw	0
 16794  2F58  3FC0               	movwi [0]fsr1
 16795  2F59  3FC1               	movwi [1]fsr1
 16796                           
 16797                           ;BQ76920.c: 29:     }
 16798  2F5A  3001               	movlw	1
 16799  2F5B  07AD               	addwf	beginAFEcommunication@i,f
 16800  2F5C  3000               	movlw	0
 16801  2F5D  3DAE               	addwfc	beginAFEcommunication@i+1,f
 16802  2F5E  082E               	movf	beginAFEcommunication@i+1,w
 16803  2F5F  3A80               	xorlw	128
 16804  2F60  00A2               	movwf	??_beginAFEcommunication
 16805  2F61  3080               	movlw	128
 16806  2F62  0222               	subwf	??_beginAFEcommunication,w
 16807  2F63  1D03               	skipz
 16808  2F64  2F67               	goto	u11855
 16809  2F65  3004               	movlw	4
 16810  2F66  022D               	subwf	beginAFEcommunication@i,w
 16811  2F67                     u11855:	
 16812  2F67  1C03               	skipc
 16813  2F68  2F51               	goto	l8248
 16814                           
 16815                           ;BQ76920.c: 32:     I2C_writeRegister(0x18, 0x0B, 0x19);
 16816  2F69  3018               	movlw	24
 16817  2F6A  00F5               	movwf	I2C_writeRegister@slaveAddress
 16818  2F6B  3000               	movlw	0
 16819  2F6C  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16820  2F6D  300B               	movlw	11
 16821  2F6E  00F7               	movwf	I2C_writeRegister@regAddress
 16822  2F6F  3000               	movlw	0
 16823  2F70  00F8               	movwf	I2C_writeRegister@regAddress+1
 16824  2F71  3019               	movlw	25
 16825  2F72  00F9               	movwf	I2C_writeRegister@data
 16826  2F73  3000               	movlw	0
 16827  2F74  00FA               	movwf	I2C_writeRegister@data+1
 16828  2F75  31B4  245D  31AF   	fcall	_I2C_writeRegister
 16829                           
 16830                           ;BQ76920.c: 34:     if (readRegister(0x18, 0x0B) == 0x19) {
 16831  2F78  3018               	movlw	24
 16832  2F79  00F5               	movwf	readRegister@slaveAddress
 16833  2F7A  3000               	movlw	0
 16834  2F7B  00F6               	movwf	readRegister@slaveAddress+1
 16835  2F7C  300B               	movlw	11
 16836  2F7D  00F7               	movwf	readRegister@regAddress
 16837  2F7E  3000               	movlw	0
 16838  2F7F  00F8               	movwf	readRegister@regAddress+1
 16839  2F80  31B5  25B6  31AF   	fcall	_readRegister
 16840  2F83  3019               	movlw	25
 16841  2F84  0675               	xorwf	?_readRegister,w
 16842  2F85  0476               	iorwf	?_readRegister+1,w
 16843  2F86  1D03               	btfss	3,2
 16844  2F87  2FFA               	goto	l388
 16845                           
 16846                           ;BQ76920.c: 35:         commSuccess = 1;
 16847  2F88  3001               	movlw	1
 16848  2F89  0020               	movlb	0	; select bank0
 16849  2F8A  00AB               	movwf	beginAFEcommunication@commSuccess
 16850  2F8B  3000               	movlw	0
 16851  2F8C  00AC               	movwf	beginAFEcommunication@commSuccess+1
 16852                           
 16853                           ;BQ76920.c: 39:         I2C_writeRegister(0x18, 0x04, 0x18);
 16854  2F8D  3018               	movlw	24
 16855  2F8E  00F5               	movwf	I2C_writeRegister@slaveAddress
 16856  2F8F  3000               	movlw	0
 16857  2F90  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16858  2F91  3004               	movlw	4
 16859  2F92  00F7               	movwf	I2C_writeRegister@regAddress
 16860  2F93  3000               	movlw	0
 16861  2F94  00F8               	movwf	I2C_writeRegister@regAddress+1
 16862  2F95  3018               	movlw	24
 16863  2F96  00F9               	movwf	I2C_writeRegister@data
 16864  2F97  3000               	movlw	0
 16865  2F98  00FA               	movwf	I2C_writeRegister@data+1
 16866  2F99  31B4  245D  31AF   	fcall	_I2C_writeRegister
 16867                           
 16868                           ;BQ76920.c: 40:         I2C_writeRegister(0x18, 0x05, 0x40);
 16869  2F9C  3018               	movlw	24
 16870  2F9D  00F5               	movwf	I2C_writeRegister@slaveAddress
 16871  2F9E  3000               	movlw	0
 16872  2F9F  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16873  2FA0  3005               	movlw	5
 16874  2FA1  00F7               	movwf	I2C_writeRegister@regAddress
 16875  2FA2  3000               	movlw	0
 16876  2FA3  00F8               	movwf	I2C_writeRegister@regAddress+1
 16877  2FA4  3040               	movlw	64
 16878  2FA5  00F9               	movwf	I2C_writeRegister@data
 16879  2FA6  3000               	movlw	0
 16880  2FA7  00FA               	movwf	I2C_writeRegister@data+1
 16881  2FA8  31B4  245D  31AF   	fcall	_I2C_writeRegister
 16882                           
 16883                           ;BQ76920.c: 43:         adcOffset = (signed int) readRegister(0x18, 0x51);
 16884  2FAB  3018               	movlw	24
 16885  2FAC  00F5               	movwf	readRegister@slaveAddress
 16886  2FAD  3000               	movlw	0
 16887  2FAE  00F6               	movwf	readRegister@slaveAddress+1
 16888  2FAF  3051               	movlw	81
 16889  2FB0  00F7               	movwf	readRegister@regAddress
 16890  2FB1  3000               	movlw	0
 16891  2FB2  00F8               	movwf	readRegister@regAddress+1
 16892  2FB3  31B5  25B6  31AF   	fcall	_readRegister
 16893  2FB6  0876               	movf	?_readRegister+1,w
 16894  2FB7  0023               	movlb	3	; select bank3
 16895  2FB8  00CD               	movwf	(_adcOffset+1)^(0+384)
 16896  2FB9  0875               	movf	?_readRegister,w
 16897  2FBA  00CC               	movwf	_adcOffset^(0+384)
 16898                           
 16899                           ;BQ76920.c: 44:         adcGain = 365 + (((readRegister(0x18, 0x50) & 0x0C) << 1) |
 16900  2FBB  3018               	movlw	24
 16901  2FBC  00F5               	movwf	readRegister@slaveAddress
 16902  2FBD  3000               	movlw	0
 16903  2FBE  00F6               	movwf	readRegister@slaveAddress+1
 16904  2FBF  3059               	movlw	89
 16905  2FC0  00F7               	movwf	readRegister@regAddress
 16906  2FC1  3000               	movlw	0
 16907  2FC2  00F8               	movwf	readRegister@regAddress+1
 16908  2FC3  31B5  25B6  31AF   	fcall	_readRegister
 16909  2FC6  0875               	movf	?_readRegister,w
 16910  2FC7  0020               	movlb	0	; select bank0
 16911  2FC8  00A2               	movwf	??_beginAFEcommunication
 16912  2FC9  0876               	movf	?_readRegister+1,w
 16913  2FCA  00A3               	movwf	??_beginAFEcommunication+1
 16914  2FCB  3005               	movlw	5
 16915  2FCC  00A4               	movwf	??_beginAFEcommunication+2
 16916  2FCD                     u11875:	
 16917  2FCD  0D23               	rlf	??_beginAFEcommunication+1,w
 16918  2FCE  0CA3               	rrf	??_beginAFEcommunication+1,f
 16919  2FCF  0CA2               	rrf	??_beginAFEcommunication,f
 16920  2FD0  0BA4               	decfsz	??_beginAFEcommunication+2,f
 16921  2FD1  2FCD               	goto	u11875
 16922  2FD2  3007               	movlw	7
 16923  2FD3  0522               	andwf	??_beginAFEcommunication,w
 16924  2FD4  00A5               	movwf	??_beginAFEcommunication+3
 16925  2FD5  3000               	movlw	0
 16926  2FD6  0523               	andwf	??_beginAFEcommunication+1,w
 16927  2FD7  00A6               	movwf	??_beginAFEcommunication+4
 16928  2FD8  3018               	movlw	24
 16929  2FD9  00F5               	movwf	readRegister@slaveAddress
 16930  2FDA  3000               	movlw	0
 16931  2FDB  00F6               	movwf	readRegister@slaveAddress+1
 16932  2FDC  3050               	movlw	80
 16933  2FDD  00F7               	movwf	readRegister@regAddress
 16934  2FDE  3000               	movlw	0
 16935  2FDF  00F8               	movwf	readRegister@regAddress+1
 16936  2FE0  31B5  25B6         	fcall	_readRegister
 16937  2FE2  300C               	movlw	12
 16938  2FE3  0575               	andwf	?_readRegister,w
 16939  2FE4  0020               	movlb	0	; select bank0
 16940  2FE5  00A7               	movwf	??_beginAFEcommunication+5
 16941  2FE6  3000               	movlw	0
 16942  2FE7  0576               	andwf	?_readRegister+1,w
 16943  2FE8  00A8               	movwf	??_beginAFEcommunication+6
 16944  2FE9  35A7               	lslf	??_beginAFEcommunication+5,f
 16945  2FEA  0DA8               	rlf	??_beginAFEcommunication+6,f
 16946  2FEB  0825               	movf	??_beginAFEcommunication+3,w
 16947  2FEC  0427               	iorwf	??_beginAFEcommunication+5,w
 16948  2FED  00A9               	movwf	??_beginAFEcommunication+7
 16949  2FEE  0826               	movf	??_beginAFEcommunication+4,w
 16950  2FEF  0428               	iorwf	??_beginAFEcommunication+6,w
 16951  2FF0  00AA               	movwf	??_beginAFEcommunication+8
 16952  2FF1  0829               	movf	??_beginAFEcommunication+7,w
 16953  2FF2  3E6D               	addlw	109
 16954  2FF3  0023               	movlb	3	; select bank3
 16955  2FF4  00CE               	movwf	_adcGain^(0+384)
 16956  2FF5  3001               	movlw	1
 16957  2FF6  0020               	movlb	0	; select bank0
 16958  2FF7  3D2A               	addwfc	??_beginAFEcommunication+8,w
 16959  2FF8  0023               	movlb	3	; select bank3
 16960  2FF9  00CF               	movwf	(_adcGain+1)^(0+384)
 16961  2FFA                     l388:	
 16962                           ;BQ76920.c: 47:     }
 16963                           
 16964                           
 16965                           ;BQ76920.c: 51:     return commSuccess;
 16966  2FFA  0020               	movlb	0	; select bank0
 16967  2FFB  082C               	movf	beginAFEcommunication@commSuccess+1,w
 16968  2FFC  00A1               	movwf	?_beginAFEcommunication+1
 16969  2FFD  082B               	movf	beginAFEcommunication@commSuccess,w
 16970  2FFE  00A0               	movwf	?_beginAFEcommunication
 16971  2FFF  0008               	return
 16972  3000                     __end_of_beginAFEcommunication:	
 16973                           
 16974                           	psect	text54
 16975  35B6                     __ptext54:	
 16976 ;; *************** function _readRegister *****************
 16977 ;; Defined at:
 16978 ;;		line 129 in file "I2C.c"
 16979 ;; Parameters:    Size  Location     Type
 16980 ;;  slaveAddress    2    5[COMMON] int 
 16981 ;;  regAddress      2    7[COMMON] int 
 16982 ;; Auto vars:     Size  Location     Type
 16983 ;;  recievedData    2    9[COMMON] int 
 16984 ;; Return value:  Size  Location     Type
 16985 ;;                  2    5[COMMON] int 
 16986 ;; Registers used:
 16987 ;;		wreg, status,2, status,0, pclath, cstack
 16988 ;; Tracked objects:
 16989 ;;		On entry : 0/0
 16990 ;;		On exit  : 0/0
 16991 ;;		Unchanged: 0/0
 16992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16993 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16994 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16996 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16997 ;;Total ram usage:        6 bytes
 16998 ;; Hardware stack levels used:    1
 16999 ;; Hardware stack levels required when called:    2
 17000 ;; This function calls:
 17001 ;;		_read_I2C_data
 17002 ;;		_send_I2C_NACK
 17003 ;;		_send_I2C_controlByte
 17004 ;;		_send_I2C_data
 17005 ;;		_send_I2C_startBit
 17006 ;;		_send_I2C_stopBit
 17007 ;; This function is called by:
 17008 ;;		_beginAFEcommunication
 17009 ;;		_printotAFERegisters
 17010 ;; This function uses a non-reentrant model
 17011 ;;
 17012                           
 17013                           
 17014                           ;psect for function _readRegister
 17015  35B6                     _readRegister:	
 17016                           
 17017                           ;I2C.c: 130:     int recievedData;;I2C.c: 131:     send_I2C_startBit();
 17018                           
 17019                           ;incstack = 0
 17020                           ; Regs used in _readRegister: [wreg+status,2+status,0+pclath+cstack]
 17021  35B6  31B2  22D3  31B5   	fcall	_send_I2C_startBit
 17022                           
 17023                           ;I2C.c: 132:     send_I2C_controlByte(slaveAddress, 0);
 17024  35B9  0876               	movf	readRegister@slaveAddress+1,w
 17025  35BA  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 17026  35BB  0875               	movf	readRegister@slaveAddress,w
 17027  35BC  00F1               	movwf	send_I2C_controlByte@BlockAddress
 17028  35BD  3000               	movlw	0
 17029  35BE  00F3               	movwf	send_I2C_controlByte@RW_bit
 17030  35BF  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 17031  35C0  31B3  2319  31B5   	fcall	_send_I2C_controlByte
 17032                           
 17033                           ;I2C.c: 133:     send_I2C_data(regAddress);
 17034  35C3  0878               	movf	readRegister@regAddress+1,w
 17035  35C4  00F2               	movwf	send_I2C_data@databyte+1
 17036  35C5  0877               	movf	readRegister@regAddress,w
 17037  35C6  00F1               	movwf	send_I2C_data@databyte
 17038  35C7  31B2  22F4  31B5   	fcall	_send_I2C_data
 17039                           
 17040                           ;I2C.c: 134:     send_I2C_stopBit();
 17041  35CA  31B2  22DB  31B5   	fcall	_send_I2C_stopBit
 17042                           
 17043                           ;I2C.c: 135:     send_I2C_startBit();
 17044  35CD  31B2  22D3  31B5   	fcall	_send_I2C_startBit
 17045                           
 17046                           ;I2C.c: 136:     send_I2C_controlByte(slaveAddress, 1);
 17047  35D0  0876               	movf	readRegister@slaveAddress+1,w
 17048  35D1  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 17049  35D2  0875               	movf	readRegister@slaveAddress,w
 17050  35D3  00F1               	movwf	send_I2C_controlByte@BlockAddress
 17051  35D4  3001               	movlw	1
 17052  35D5  00F3               	movwf	send_I2C_controlByte@RW_bit
 17053  35D6  3000               	movlw	0
 17054  35D7  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 17055  35D8  31B3  2319  31B5   	fcall	_send_I2C_controlByte
 17056                           
 17057                           ;I2C.c: 137:     recievedData = read_I2C_data();
 17058  35DB  31B3  2354  31B5   	fcall	_read_I2C_data
 17059  35DE  0872               	movf	?_read_I2C_data+1,w
 17060  35DF  00FA               	movwf	readRegister@recievedData+1
 17061  35E0  0871               	movf	?_read_I2C_data,w
 17062  35E1  00F9               	movwf	readRegister@recievedData
 17063                           
 17064                           ;I2C.c: 138:     send_I2C_NACK();
 17065  35E2  31B2  22FD  31B5   	fcall	_send_I2C_NACK
 17066                           
 17067                           ;I2C.c: 139:     send_I2C_stopBit();
 17068  35E5  31B2  22DB         	fcall	_send_I2C_stopBit
 17069                           
 17070                           ;I2C.c: 140:     return recievedData;
 17071  35E7  087A               	movf	readRegister@recievedData+1,w
 17072  35E8  00F6               	movwf	?_readRegister+1
 17073  35E9  0879               	movf	readRegister@recievedData,w
 17074  35EA  00F5               	movwf	?_readRegister
 17075  35EB  0008               	return
 17076  35EC                     __end_of_readRegister:	
 17077                           
 17078                           	psect	text55
 17079  32FD                     __ptext55:	
 17080 ;; *************** function _send_I2C_NACK *****************
 17081 ;; Defined at:
 17082 ;;		line 83 in file "I2C.c"
 17083 ;; Parameters:    Size  Location     Type
 17084 ;;		None
 17085 ;; Auto vars:     Size  Location     Type
 17086 ;;		None
 17087 ;; Return value:  Size  Location     Type
 17088 ;;                  1    wreg      void 
 17089 ;; Registers used:
 17090 ;;		None
 17091 ;; Tracked objects:
 17092 ;;		On entry : 0/0
 17093 ;;		On exit  : 0/0
 17094 ;;		Unchanged: 0/0
 17095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17100 ;;Total ram usage:        0 bytes
 17101 ;; Hardware stack levels used:    1
 17102 ;; Hardware stack levels required when called:    1
 17103 ;; This function calls:
 17104 ;;		Nothing
 17105 ;; This function is called by:
 17106 ;;		_readRegister
 17107 ;; This function uses a non-reentrant model
 17108 ;;
 17109                           
 17110                           
 17111                           ;psect for function _send_I2C_NACK
 17112  32FD                     _send_I2C_NACK:	
 17113                           
 17114                           ;I2C.c: 84:     PIR1bits.SSP1IF = 0;
 17115                           
 17116                           ;incstack = 0
 17117                           ; Regs used in _send_I2C_NACK: []
 17118  32FD  0020               	movlb	0	; select bank0
 17119  32FE  1191               	bcf	17,3	;volatile
 17120                           
 17121                           ;I2C.c: 85:     SSPCON2bits.ACKDT = 1;
 17122  32FF  0024               	movlb	4	; select bank4
 17123  3300  1696               	bsf	22,5	;volatile
 17124                           
 17125                           ;I2C.c: 86:     SSPCON2bits.ACKEN = 1;
 17126  3301  1616               	bsf	22,4	;volatile
 17127  3302                     l292:	
 17128                           ;I2C.c: 87:     while (!PIR1bits.SSP1IF);
 17129                           
 17130  3302  0020               	movlb	0	; select bank0
 17131  3303  1991               	btfsc	17,3	;volatile
 17132  3304  0008               	return
 17133  3305  2B02               	goto	l292
 17134  3306                     __end_of_send_I2C_NACK:	
 17135                           
 17136                           	psect	text56
 17137  3354                     __ptext56:	
 17138 ;; *************** function _read_I2C_data *****************
 17139 ;; Defined at:
 17140 ;;		line 42 in file "I2C.c"
 17141 ;; Parameters:    Size  Location     Type
 17142 ;;		None
 17143 ;; Auto vars:     Size  Location     Type
 17144 ;;		None
 17145 ;; Return value:  Size  Location     Type
 17146 ;;                  2    1[COMMON] unsigned int 
 17147 ;; Registers used:
 17148 ;;		wreg
 17149 ;; Tracked objects:
 17150 ;;		On entry : 0/0
 17151 ;;		On exit  : 0/0
 17152 ;;		Unchanged: 0/0
 17153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17154 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17156 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17157 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17158 ;;Total ram usage:        4 bytes
 17159 ;; Hardware stack levels used:    1
 17160 ;; Hardware stack levels required when called:    1
 17161 ;; This function calls:
 17162 ;;		Nothing
 17163 ;; This function is called by:
 17164 ;;		_readRegister
 17165 ;; This function uses a non-reentrant model
 17166 ;;
 17167                           
 17168                           
 17169                           ;psect for function _read_I2C_data
 17170  3354                     _read_I2C_data:	
 17171                           
 17172                           ;I2C.c: 43:     PIR1bits.SSP1IF = 0;
 17173                           
 17174                           ;incstack = 0
 17175                           ; Regs used in _read_I2C_data: [wreg]
 17176  3354  0020               	movlb	0	; select bank0
 17177  3355  1191               	bcf	17,3	;volatile
 17178                           
 17179                           ;I2C.c: 44:     SSPCON2bits.RCEN = 1;
 17180  3356  0024               	movlb	4	; select bank4
 17181  3357  1596               	bsf	22,3	;volatile
 17182  3358                     l262:	
 17183                           ;I2C.c: 45:     while (!PIR1bits.SSP1IF);
 17184                           
 17185  3358  0020               	movlb	0	; select bank0
 17186  3359  1D91               	btfss	17,3	;volatile
 17187  335A  2B58               	goto	l262
 17188                           
 17189                           ;I2C.c: 46:     return (SSPBUF);
 17190  335B  0024               	movlb	4	; select bank4
 17191  335C  0811               	movf	17,w	;volatile
 17192  335D  00F3               	movwf	??_read_I2C_data
 17193  335E  01F4               	clrf	??_read_I2C_data+1
 17194  335F  0873               	movf	??_read_I2C_data,w
 17195  3360  00F1               	movwf	?_read_I2C_data
 17196  3361  0874               	movf	??_read_I2C_data+1,w
 17197  3362  00F2               	movwf	?_read_I2C_data+1
 17198  3363  0008               	return
 17199  3364                     __end_of_read_I2C_data:	
 17200                           
 17201                           	psect	text57
 17202  345D                     __ptext57:	
 17203 ;; *************** function _I2C_writeRegister *****************
 17204 ;; Defined at:
 17205 ;;		line 118 in file "I2C.c"
 17206 ;; Parameters:    Size  Location     Type
 17207 ;;  slaveAddress    2    5[COMMON] int 
 17208 ;;  regAddress      2    7[COMMON] int 
 17209 ;;  data            2    9[COMMON] int 
 17210 ;; Auto vars:     Size  Location     Type
 17211 ;;		None
 17212 ;; Return value:  Size  Location     Type
 17213 ;;                  1    wreg      void 
 17214 ;; Registers used:
 17215 ;;		wreg, status,2, status,0, pclath, cstack
 17216 ;; Tracked objects:
 17217 ;;		On entry : 0/0
 17218 ;;		On exit  : 0/0
 17219 ;;		Unchanged: 0/0
 17220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17221 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17224 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17225 ;;Total ram usage:        6 bytes
 17226 ;; Hardware stack levels used:    1
 17227 ;; Hardware stack levels required when called:    2
 17228 ;; This function calls:
 17229 ;;		_send_I2C_controlByte
 17230 ;;		_send_I2C_data
 17231 ;;		_send_I2C_startBit
 17232 ;;		_send_I2C_stopBit
 17233 ;; This function is called by:
 17234 ;;		_beginAFEcommunication
 17235 ;;		_setShortCircuitProtection
 17236 ;;		_setOverCurrentDischargeProtection
 17237 ;; This function uses a non-reentrant model
 17238 ;;
 17239                           
 17240                           
 17241                           ;psect for function _I2C_writeRegister
 17242  345D                     _I2C_writeRegister:	
 17243                           
 17244                           ;I2C.c: 119:     send_I2C_startBit();
 17245                           
 17246                           ;incstack = 0
 17247                           ; Regs used in _I2C_writeRegister: [wreg+status,2+status,0+pclath+cstack]
 17248  345D  31B2  22D3  31B4   	fcall	_send_I2C_startBit
 17249                           
 17250                           ;I2C.c: 120:     send_I2C_controlByte(slaveAddress, 0);
 17251  3460  0876               	movf	I2C_writeRegister@slaveAddress+1,w
 17252  3461  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 17253  3462  0875               	movf	I2C_writeRegister@slaveAddress,w
 17254  3463  00F1               	movwf	send_I2C_controlByte@BlockAddress
 17255  3464  3000               	movlw	0
 17256  3465  00F3               	movwf	send_I2C_controlByte@RW_bit
 17257  3466  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 17258  3467  31B3  2319  31B4   	fcall	_send_I2C_controlByte
 17259                           
 17260                           ;I2C.c: 121:     send_I2C_data(regAddress);
 17261  346A  0878               	movf	I2C_writeRegister@regAddress+1,w
 17262  346B  00F2               	movwf	send_I2C_data@databyte+1
 17263  346C  0877               	movf	I2C_writeRegister@regAddress,w
 17264  346D  00F1               	movwf	send_I2C_data@databyte
 17265  346E  31B2  22F4  31B4   	fcall	_send_I2C_data
 17266                           
 17267                           ;I2C.c: 122:     send_I2C_data(data);
 17268  3471  087A               	movf	I2C_writeRegister@data+1,w
 17269  3472  00F2               	movwf	send_I2C_data@databyte+1
 17270  3473  0879               	movf	I2C_writeRegister@data,w
 17271  3474  00F1               	movwf	send_I2C_data@databyte
 17272  3475  31B2  22F4  31B4   	fcall	_send_I2C_data
 17273                           
 17274                           ;I2C.c: 123:     send_I2C_stopBit();
 17275  3478  31B2  22DB         	fcall	_send_I2C_stopBit
 17276  347A  0008               	return
 17277  347B                     __end_of_I2C_writeRegister:	
 17278                           
 17279                           	psect	text58
 17280  32DB                     __ptext58:	
 17281 ;; *************** function _send_I2C_stopBit *****************
 17282 ;; Defined at:
 17283 ;;		line 70 in file "I2C.c"
 17284 ;; Parameters:    Size  Location     Type
 17285 ;;		None
 17286 ;; Auto vars:     Size  Location     Type
 17287 ;;		None
 17288 ;; Return value:  Size  Location     Type
 17289 ;;                  1    wreg      void 
 17290 ;; Registers used:
 17291 ;;		None
 17292 ;; Tracked objects:
 17293 ;;		On entry : 0/0
 17294 ;;		On exit  : 0/0
 17295 ;;		Unchanged: 0/0
 17296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17301 ;;Total ram usage:        0 bytes
 17302 ;; Hardware stack levels used:    1
 17303 ;; Hardware stack levels required when called:    1
 17304 ;; This function calls:
 17305 ;;		Nothing
 17306 ;; This function is called by:
 17307 ;;		_I2C_writeRegister
 17308 ;;		_readRegister
 17309 ;;		_retrieve_data_ATmega328
 17310 ;; This function uses a non-reentrant model
 17311 ;;
 17312                           
 17313                           
 17314                           ;psect for function _send_I2C_stopBit
 17315  32DB                     _send_I2C_stopBit:	
 17316                           
 17317                           ;I2C.c: 71:     PIR1bits.SSP1IF = 0;
 17318                           
 17319                           ;incstack = 0
 17320                           ; Regs used in _send_I2C_stopBit: []
 17321  32DB  0020               	movlb	0	; select bank0
 17322  32DC  1191               	bcf	17,3	;volatile
 17323                           
 17324                           ;I2C.c: 72:     SSPCON2bits.PEN = 1;
 17325  32DD  0024               	movlb	4	; select bank4
 17326  32DE  1516               	bsf	22,2	;volatile
 17327  32DF                     l280:	
 17328                           ;I2C.c: 73:     while (!PIR1bits.SSP1IF);
 17329                           
 17330  32DF  0020               	movlb	0	; select bank0
 17331  32E0  1991               	btfsc	17,3	;volatile
 17332  32E1  0008               	return
 17333  32E2  2ADF               	goto	l280
 17334  32E3                     __end_of_send_I2C_stopBit:	
 17335                           
 17336                           	psect	text59
 17337  32D3                     __ptext59:	
 17338 ;; *************** function _send_I2C_startBit *****************
 17339 ;; Defined at:
 17340 ;;		line 64 in file "I2C.c"
 17341 ;; Parameters:    Size  Location     Type
 17342 ;;		None
 17343 ;; Auto vars:     Size  Location     Type
 17344 ;;		None
 17345 ;; Return value:  Size  Location     Type
 17346 ;;                  1    wreg      void 
 17347 ;; Registers used:
 17348 ;;		None
 17349 ;; Tracked objects:
 17350 ;;		On entry : 0/0
 17351 ;;		On exit  : 0/0
 17352 ;;		Unchanged: 0/0
 17353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17358 ;;Total ram usage:        0 bytes
 17359 ;; Hardware stack levels used:    1
 17360 ;; Hardware stack levels required when called:    1
 17361 ;; This function calls:
 17362 ;;		Nothing
 17363 ;; This function is called by:
 17364 ;;		_I2C_writeRegister
 17365 ;;		_readRegister
 17366 ;;		_retrieve_data_ATmega328
 17367 ;; This function uses a non-reentrant model
 17368 ;;
 17369                           
 17370                           
 17371                           ;psect for function _send_I2C_startBit
 17372  32D3                     _send_I2C_startBit:	
 17373                           
 17374                           ;I2C.c: 65:     PIR1bits.SSP1IF = 0;
 17375                           
 17376                           ;incstack = 0
 17377                           ; Regs used in _send_I2C_startBit: []
 17378  32D3  0020               	movlb	0	; select bank0
 17379  32D4  1191               	bcf	17,3	;volatile
 17380                           
 17381                           ;I2C.c: 66:     SSPCON2bits.SEN = 1;
 17382  32D5  0024               	movlb	4	; select bank4
 17383  32D6  1416               	bsf	22,0	;volatile
 17384  32D7                     l274:	
 17385                           ;I2C.c: 67:     while (!PIR1bits.SSP1IF);
 17386                           
 17387  32D7  0020               	movlb	0	; select bank0
 17388  32D8  1991               	btfsc	17,3	;volatile
 17389  32D9  0008               	return
 17390  32DA  2AD7               	goto	l274
 17391  32DB                     __end_of_send_I2C_startBit:	
 17392                           
 17393                           	psect	text60
 17394  32F4                     __ptext60:	
 17395 ;; *************** function _send_I2C_data *****************
 17396 ;; Defined at:
 17397 ;;		line 33 in file "I2C.c"
 17398 ;; Parameters:    Size  Location     Type
 17399 ;;  databyte        2    1[COMMON] unsigned int 
 17400 ;; Auto vars:     Size  Location     Type
 17401 ;;		None
 17402 ;; Return value:  Size  Location     Type
 17403 ;;                  1    wreg      void 
 17404 ;; Registers used:
 17405 ;;		wreg
 17406 ;; Tracked objects:
 17407 ;;		On entry : 0/0
 17408 ;;		On exit  : 0/0
 17409 ;;		Unchanged: 0/0
 17410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17411 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17414 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17415 ;;Total ram usage:        2 bytes
 17416 ;; Hardware stack levels used:    1
 17417 ;; Hardware stack levels required when called:    1
 17418 ;; This function calls:
 17419 ;;		Nothing
 17420 ;; This function is called by:
 17421 ;;		_I2C_writeRegister
 17422 ;;		_readRegister
 17423 ;; This function uses a non-reentrant model
 17424 ;;
 17425                           
 17426                           
 17427                           ;psect for function _send_I2C_data
 17428  32F4                     _send_I2C_data:	
 17429                           
 17430                           ;I2C.c: 34:     PIR1bits.SSP1IF = 0;
 17431                           
 17432                           ;incstack = 0
 17433                           ; Regs used in _send_I2C_data: [wreg]
 17434  32F4  0020               	movlb	0	; select bank0
 17435  32F5  1191               	bcf	17,3	;volatile
 17436                           
 17437                           ;I2C.c: 35:     SSPBUF = databyte;
 17438  32F6  0871               	movf	send_I2C_data@databyte,w
 17439  32F7  0024               	movlb	4	; select bank4
 17440  32F8  0091               	movwf	17	;volatile
 17441  32F9                     l256:	
 17442                           ;I2C.c: 36:     while (!PIR1bits.SSP1IF);
 17443                           
 17444  32F9  0020               	movlb	0	; select bank0
 17445  32FA  1991               	btfsc	17,3	;volatile
 17446  32FB  0008               	return
 17447  32FC  2AF9               	goto	l256
 17448  32FD                     __end_of_send_I2C_data:	
 17449                           
 17450                           	psect	text61
 17451  3319                     __ptext61:	
 17452 ;; *************** function _send_I2C_controlByte *****************
 17453 ;; Defined at:
 17454 ;;		line 52 in file "I2C.c"
 17455 ;; Parameters:    Size  Location     Type
 17456 ;;  BlockAddress    2    1[COMMON] unsigned int 
 17457 ;;  RW_bit          2    3[COMMON] unsigned int 
 17458 ;; Auto vars:     Size  Location     Type
 17459 ;;		None
 17460 ;; Return value:  Size  Location     Type
 17461 ;;                  1    wreg      void 
 17462 ;; Registers used:
 17463 ;;		wreg, status,2, status,0
 17464 ;; Tracked objects:
 17465 ;;		On entry : 0/0
 17466 ;;		On exit  : 0/0
 17467 ;;		Unchanged: 0/0
 17468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17469 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17472 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17473 ;;Total ram usage:        4 bytes
 17474 ;; Hardware stack levels used:    1
 17475 ;; Hardware stack levels required when called:    1
 17476 ;; This function calls:
 17477 ;;		Nothing
 17478 ;; This function is called by:
 17479 ;;		_I2C_writeRegister
 17480 ;;		_readRegister
 17481 ;;		_retrieve_data_ATmega328
 17482 ;; This function uses a non-reentrant model
 17483 ;;
 17484                           
 17485                           
 17486                           ;psect for function _send_I2C_controlByte
 17487  3319                     _send_I2C_controlByte:	
 17488                           
 17489                           ;I2C.c: 53:     PIR1bits.SSP1IF = 0;
 17490                           
 17491                           ;incstack = 0
 17492                           ; Regs used in _send_I2C_controlByte: [wreg+status,2+status,0]
 17493  3319  0020               	movlb	0	; select bank0
 17494  331A  1191               	bcf	17,3	;volatile
 17495                           
 17496                           ;I2C.c: 59:     SSPBUF = (((0b0000 << 4) | (BlockAddress << 1)) + RW_bit);
 17497  331B  3571               	lslf	send_I2C_controlByte@BlockAddress,w
 17498  331C  0773               	addwf	send_I2C_controlByte@RW_bit,w
 17499  331D  0024               	movlb	4	; select bank4
 17500  331E  0091               	movwf	17	;volatile
 17501  331F                     l268:	
 17502                           ;I2C.c: 61:     while (!PIR1bits.SSP1IF);
 17503                           
 17504  331F  0020               	movlb	0	; select bank0
 17505  3320  1991               	btfsc	17,3	;volatile
 17506  3321  0008               	return
 17507  3322  2B1F               	goto	l268
 17508  3323                     __end_of_send_I2C_controlByte:	
 17509                           
 17510                           	psect	text62
 17511  34F9                     __ptext62:	
 17512 ;; *************** function _RGB_AWAIT_AFE_CONN *****************
 17513 ;; Defined at:
 17514 ;;		line 43 in file "RGB.c"
 17515 ;; Parameters:    Size  Location     Type
 17516 ;;		None
 17517 ;; Auto vars:     Size  Location     Type
 17518 ;;		None
 17519 ;; Return value:  Size  Location     Type
 17520 ;;                  1    wreg      void 
 17521 ;; Registers used:
 17522 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17523 ;; Tracked objects:
 17524 ;;		On entry : 0/0
 17525 ;;		On exit  : 0/0
 17526 ;;		Unchanged: 0/0
 17527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17530 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17531 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17532 ;;Total ram usage:        1 bytes
 17533 ;; Hardware stack levels used:    1
 17534 ;; Hardware stack levels required when called:    2
 17535 ;; This function calls:
 17536 ;;		_RGB_color
 17537 ;; This function is called by:
 17538 ;;		_statemachine
 17539 ;; This function uses a non-reentrant model
 17540 ;;
 17541                           
 17542                           
 17543                           ;psect for function _RGB_AWAIT_AFE_CONN
 17544  34F9                     _RGB_AWAIT_AFE_CONN:	
 17545                           
 17546                           ;RGB.c: 45:     if (toggleColor) {
 17547                           
 17548                           ;incstack = 0
 17549                           ; Regs used in _RGB_AWAIT_AFE_CONN: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17550  34F9  087C               	movf	_toggleColor,w
 17551  34FA  1903               	btfsc	3,2
 17552  34FB  2D0B               	goto	l6494
 17553                           
 17554                           ;RGB.c: 46:         toggleColor = !toggleColor;
 17555  34FC  087C               	movf	_toggleColor,w
 17556  34FD  1D03               	btfss	3,2
 17557  34FE  2D01               	goto	u9130
 17558  34FF  3001               	movlw	1
 17559  3500  2D02               	goto	u9140
 17560  3501                     u9130:	
 17561  3501  3000               	movlw	0
 17562  3502                     u9140:	
 17563  3502  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 17564  3503  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 17565  3504  00FC               	movwf	_toggleColor
 17566                           
 17567                           ;RGB.c: 47:         RGB_color(0);
 17568  3505  3000               	movlw	0
 17569  3506  00F1               	movwf	RGB_color@color
 17570  3507  00F2               	movwf	RGB_color@color+1
 17571  3508  31B4  24D8         	fcall	_RGB_color
 17572                           
 17573                           ;RGB.c: 48:     } else {
 17574  350A  0008               	return
 17575  350B                     l6494:	
 17576                           
 17577                           ;RGB.c: 49:         toggleColor = !toggleColor;
 17578  350B  087C               	movf	_toggleColor,w
 17579  350C  1D03               	btfss	3,2
 17580  350D  2D10               	goto	u9150
 17581  350E  3001               	movlw	1
 17582  350F  2D11               	goto	u9160
 17583  3510                     u9150:	
 17584  3510  3000               	movlw	0
 17585  3511                     u9160:	
 17586  3511  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 17587  3512  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 17588  3513  00FC               	movwf	_toggleColor
 17589                           
 17590                           ;RGB.c: 50:         RGB_color(1);
 17591  3514  3001               	movlw	1
 17592  3515  00F1               	movwf	RGB_color@color
 17593  3516  3000               	movlw	0
 17594  3517  00F2               	movwf	RGB_color@color+1
 17595  3518  31B4  24D8         	fcall	_RGB_color
 17596  351A  0008               	return
 17597  351B                     __end_of_RGB_AWAIT_AFE_CONN:	
 17598                           
 17599                           	psect	text63
 17600  34D8                     __ptext63:	
 17601 ;; *************** function _RGB_color *****************
 17602 ;; Defined at:
 17603 ;;		line 17 in file "RGB.c"
 17604 ;; Parameters:    Size  Location     Type
 17605 ;;  color           2    1[COMMON] int 
 17606 ;; Auto vars:     Size  Location     Type
 17607 ;;		None
 17608 ;; Return value:  Size  Location     Type
 17609 ;;                  1    wreg      void 
 17610 ;; Registers used:
 17611 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 17612 ;; Tracked objects:
 17613 ;;		On entry : 0/0
 17614 ;;		On exit  : 0/0
 17615 ;;		Unchanged: 0/0
 17616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17617 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17620 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17621 ;;Total ram usage:        2 bytes
 17622 ;; Hardware stack levels used:    1
 17623 ;; Hardware stack levels required when called:    1
 17624 ;; This function calls:
 17625 ;;		Nothing
 17626 ;; This function is called by:
 17627 ;;		_statemachine
 17628 ;;		_RGB_AWAIT_AFE_CONN
 17629 ;; This function uses a non-reentrant model
 17630 ;;
 17631                           
 17632                           
 17633                           ;psect for function _RGB_color
 17634  34D8                     _RGB_color:	
 17635                           
 17636                           ;RGB.c: 19:     switch (color) {
 17637                           
 17638                           ;incstack = 0
 17639                           ; Regs used in _RGB_color: [wreg-fsr0h+status,2+status,0]
 17640  34D8  2CE8               	goto	l6378
 17641  34D9                     l317:	
 17642                           ;RGB.c: 20:         case 0:
 17643                           
 17644                           
 17645                           ;RGB.c: 21:             LATAbits.LATA4 = 0;
 17646  34D9  0022               	movlb	2	; select bank2
 17647  34DA  120C               	bcf	12,4	;volatile
 17648                           
 17649                           ;RGB.c: 22:             LATAbits.LATA5 = 1;
 17650  34DB  168C               	bsf	12,5	;volatile
 17651                           
 17652                           ;RGB.c: 23:             LATEbits.LATE0 = 1;
 17653  34DC  1410               	bsf	16,0	;volatile
 17654                           
 17655                           ;RGB.c: 24:             break;
 17656  34DD  0008               	return
 17657  34DE                     l319:	
 17658                           ;RGB.c: 25:         case 1:
 17659                           
 17660                           
 17661                           ;RGB.c: 26:             LATAbits.LATA4 = 1;
 17662  34DE  0022               	movlb	2	; select bank2
 17663  34DF  160C               	bsf	12,4	;volatile
 17664                           
 17665                           ;RGB.c: 27:             LATAbits.LATA5 = 0;
 17666  34E0  128C               	bcf	12,5	;volatile
 17667                           
 17668                           ;RGB.c: 28:             LATEbits.LATE0 = 1;
 17669  34E1  1410               	bsf	16,0	;volatile
 17670                           
 17671                           ;RGB.c: 29:             break;
 17672  34E2  0008               	return
 17673  34E3                     l320:	
 17674                           ;RGB.c: 30:         case 2:
 17675                           
 17676                           
 17677                           ;RGB.c: 31:             LATAbits.LATA4 = 1;
 17678  34E3  0022               	movlb	2	; select bank2
 17679  34E4  160C               	bsf	12,4	;volatile
 17680                           
 17681                           ;RGB.c: 32:             LATAbits.LATA5 = 1;
 17682  34E5  168C               	bsf	12,5	;volatile
 17683                           
 17684                           ;RGB.c: 33:             LATEbits.LATE0 = 0;
 17685  34E6  1010               	bcf	16,0	;volatile
 17686                           
 17687                           ;RGB.c: 34:             break;
 17688  34E7  0008               	return
 17689  34E8                     l6378:	
 17690                           
 17691                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17692                           ; Switch size 1, requested type "simple"
 17693                           ; Number of cases is 1, Range of values is 0 to 0
 17694                           ; switch strategies available:
 17695                           ; Name         Instructions Cycles
 17696                           ; simple_byte            4     3 (average)
 17697                           ; direct_byte            8     6 (fixed)
 17698                           ; jumptable            260     6 (fixed)
 17699                           ;	Chosen strategy is simple_byte
 17700  34E8  0872               	movf	RGB_color@color+1,w
 17701  34E9  3A00               	xorlw	0	; case 0
 17702  34EA  1903               	skipnz
 17703  34EB  2CED               	goto	l8512
 17704  34EC  2CF8               	goto	l321
 17705  34ED                     l8512:	
 17706                           
 17707                           ; Switch size 1, requested type "simple"
 17708                           ; Number of cases is 3, Range of values is 0 to 2
 17709                           ; switch strategies available:
 17710                           ; Name         Instructions Cycles
 17711                           ; simple_byte           10     6 (average)
 17712                           ; direct_byte           12     6 (fixed)
 17713                           ; jumptable            260     6 (fixed)
 17714                           ;	Chosen strategy is simple_byte
 17715  34ED  0871               	movf	RGB_color@color,w
 17716  34EE  3A00               	xorlw	0	; case 0
 17717  34EF  1903               	skipnz
 17718  34F0  2CD9               	goto	l317
 17719  34F1  3A01               	xorlw	1	; case 1
 17720  34F2  1903               	skipnz
 17721  34F3  2CDE               	goto	l319
 17722  34F4  3A03               	xorlw	3	; case 2
 17723  34F5  1903               	skipnz
 17724  34F6  2CE3               	goto	l320
 17725  34F7  2CF8               	goto	l321
 17726  34F8                     l321:	
 17727  34F8  0008               	return
 17728  34F9                     __end_of_RGB_color:	
 17729                           
 17730                           	psect	text64
 17731  370E                     __ptext64:	
 17732 ;; *************** function _AFE_getSetShortCircuitCurrent *****************
 17733 ;; Defined at:
 17734 ;;		line 136 in file "BQ76920.c"
 17735 ;; Parameters:    Size  Location     Type
 17736 ;;		None
 17737 ;; Auto vars:     Size  Location     Type
 17738 ;;		None
 17739 ;; Return value:  Size  Location     Type
 17740 ;;                  4   67[BANK0 ] long 
 17741 ;; Registers used:
 17742 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17743 ;; Tracked objects:
 17744 ;;		On entry : 0/0
 17745 ;;		On exit  : 0/0
 17746 ;;		Unchanged: 0/0
 17747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17748 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17750 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17751 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17752 ;;Total ram usage:        8 bytes
 17753 ;; Hardware stack levels used:    1
 17754 ;; Hardware stack levels required when called:    2
 17755 ;; This function calls:
 17756 ;;		___fldiv
 17757 ;;		___fltol
 17758 ;;		___xxtofl
 17759 ;; This function is called by:
 17760 ;;		_statemachine
 17761 ;; This function uses a non-reentrant model
 17762 ;;
 17763                           
 17764                           
 17765                           ;psect for function _AFE_getSetShortCircuitCurrent
 17766  370E                     _AFE_getSetShortCircuitCurrent:	
 17767                           
 17768                           ;BQ76920.c: 137:     return (long) (SCD_threshold_setting[protect1.bits.SCD_THRESH]) / s
      +                          huntResistorValue_mOhm;
 17769                           
 17770                           ;incstack = 0
 17771                           ; Regs used in _AFE_getSetShortCircuitCurrent: [wreg-fsr0h+status,2+status,0+pclath+csta
      +                          ck]
 17772  370E  0023               	movlb	3	; select bank3
 17773  370F  0851               	movf	BQ76920@protect1^(0+384),w
 17774  3710  3907               	andlw	7
 17775  3711  0020               	movlb	0	; select bank0
 17776  3712  00E7               	movwf	??_AFE_getSetShortCircuitCurrent
 17777  3713  01E8               	clrf	??_AFE_getSetShortCircuitCurrent+1
 17778  3714  35E7               	lslf	??_AFE_getSetShortCircuitCurrent,f
 17779  3715  0DE8               	rlf	??_AFE_getSetShortCircuitCurrent+1,f
 17780  3716  30EC               	movlw	low (_SCD_threshold_setting| (0+32768))
 17781  3717  0767               	addwf	??_AFE_getSetShortCircuitCurrent,w
 17782  3718  0084               	movwf	4
 17783  3719  30BA               	movlw	high (_SCD_threshold_setting| (0+32768))
 17784  371A  3D68               	addwfc	??_AFE_getSetShortCircuitCurrent+1,w
 17785  371B  0085               	movwf	5
 17786  371C  3F00               	moviw [0]fsr0
 17787  371D  00E9               	movwf	??_AFE_getSetShortCircuitCurrent+2
 17788  371E  3F01               	moviw [1]fsr0
 17789  371F  00EA               	movwf	??_AFE_getSetShortCircuitCurrent+3
 17790  3720  0869               	movf	??_AFE_getSetShortCircuitCurrent+2,w
 17791  3721  00F1               	movwf	___xxtofl@val
 17792  3722  086A               	movf	??_AFE_getSetShortCircuitCurrent+3,w
 17793  3723  00F2               	movwf	___xxtofl@val+1
 17794  3724  0D89               	rlf	9,f
 17795  3725  3B89               	subwfb	9,f
 17796  3726  0989               	comf	9,f
 17797  3727  00F3               	movwf	___xxtofl@val+2
 17798  3728  00F4               	movwf	___xxtofl@val+3
 17799  3729  3001               	movlw	1
 17800  372A  31AC  24C9  31B7   	fcall	___xxtofl
 17801  372D  0874               	movf	?___xxtofl+3,w
 17802  372E  0020               	movlb	0	; select bank0
 17803  372F  00C7               	movwf	___fldiv@b+3
 17804  3730  0873               	movf	?___xxtofl+2,w
 17805  3731  00C6               	movwf	___fldiv@b+2
 17806  3732  0872               	movf	?___xxtofl+1,w
 17807  3733  00C5               	movwf	___fldiv@b+1
 17808  3734  0871               	movf	?___xxtofl,w
 17809  3735  00C4               	movwf	___fldiv@b
 17810  3736  0023               	movlb	3	; select bank3
 17811  3737  0835               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 17812  3738  0020               	movlb	0	; select bank0
 17813  3739  00C3               	movwf	___fldiv@a+3
 17814  373A  0023               	movlb	3	; select bank3
 17815  373B  0834               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 17816  373C  0020               	movlb	0	; select bank0
 17817  373D  00C2               	movwf	___fldiv@a+2
 17818  373E  0023               	movlb	3	; select bank3
 17819  373F  0833               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 17820  3740  0020               	movlb	0	; select bank0
 17821  3741  00C1               	movwf	___fldiv@a+1
 17822  3742  0023               	movlb	3	; select bank3
 17823  3743  0832               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 17824  3744  0020               	movlb	0	; select bank0
 17825  3745  00C0               	movwf	___fldiv@a
 17826  3746  3190  2052  31B7   	fcall	___fldiv
 17827  3749  0020               	movlb	0	; select bank0
 17828  374A  0843               	movf	?___fldiv+3,w
 17829  374B  00DD               	movwf	___fltol@f1+3
 17830  374C  0842               	movf	?___fldiv+2,w
 17831  374D  00DC               	movwf	___fltol@f1+2
 17832  374E  0841               	movf	?___fldiv+1,w
 17833  374F  00DB               	movwf	___fltol@f1+1
 17834  3750  0840               	movf	?___fldiv,w
 17835  3751  00DA               	movwf	___fltol@f1
 17836  3752  31A8  2080         	fcall	___fltol
 17837  3754  0020               	movlb	0	; select bank0
 17838  3755  085D               	movf	?___fltol+3,w
 17839  3756  00E6               	movwf	?_AFE_getSetShortCircuitCurrent+3
 17840  3757  085C               	movf	?___fltol+2,w
 17841  3758  00E5               	movwf	?_AFE_getSetShortCircuitCurrent+2
 17842  3759  085B               	movf	?___fltol+1,w
 17843  375A  00E4               	movwf	?_AFE_getSetShortCircuitCurrent+1
 17844  375B  085A               	movf	?___fltol,w
 17845  375C  00E3               	movwf	?_AFE_getSetShortCircuitCurrent
 17846  375D  0008               	return
 17847  375E                     __end_of_AFE_getSetShortCircuitCurrent:	
 17848                           
 17849                           	psect	text65
 17850  330F                     __ptext65:	
 17851 ;; *************** function _AFE_getSetCurrentSenseRes *****************
 17852 ;; Defined at:
 17853 ;;		line 132 in file "BQ76920.c"
 17854 ;; Parameters:    Size  Location     Type
 17855 ;;		None
 17856 ;; Auto vars:     Size  Location     Type
 17857 ;;		None
 17858 ;; Return value:  Size  Location     Type
 17859 ;;                  4    1[COMMON] float 
 17860 ;; Registers used:
 17861 ;;		wreg
 17862 ;; Tracked objects:
 17863 ;;		On entry : 0/0
 17864 ;;		On exit  : 0/0
 17865 ;;		Unchanged: 0/0
 17866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17867 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17870 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17871 ;;Total ram usage:        4 bytes
 17872 ;; Hardware stack levels used:    1
 17873 ;; Hardware stack levels required when called:    1
 17874 ;; This function calls:
 17875 ;;		Nothing
 17876 ;; This function is called by:
 17877 ;;		_statemachine
 17878 ;; This function uses a non-reentrant model
 17879 ;;
 17880                           
 17881                           
 17882                           ;psect for function _AFE_getSetCurrentSenseRes
 17883  330F                     _AFE_getSetCurrentSenseRes:	
 17884                           
 17885                           ;BQ76920.c: 133:     return (float) shuntResistorValue_mOhm;
 17886                           
 17887                           ;incstack = 0
 17888                           ; Regs used in _AFE_getSetCurrentSenseRes: [wreg]
 17889  330F  0023               	movlb	3	; select bank3
 17890  3310  0835               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 17891  3311  00F4               	movwf	?_AFE_getSetCurrentSenseRes+3
 17892  3312  0834               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 17893  3313  00F3               	movwf	?_AFE_getSetCurrentSenseRes+2
 17894  3314  0833               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 17895  3315  00F2               	movwf	?_AFE_getSetCurrentSenseRes+1
 17896  3316  0832               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 17897  3317  00F1               	movwf	?_AFE_getSetCurrentSenseRes
 17898  3318  0008               	return
 17899  3319                     __end_of_AFE_getSetCurrentSenseRes:	
 17900                           
 17901                           	psect	text66
 17902  36BE                     __ptext66:	
 17903 ;; *************** function _AFE_getOverCurrentDischargeCurrent *****************
 17904 ;; Defined at:
 17905 ;;		line 140 in file "BQ76920.c"
 17906 ;; Parameters:    Size  Location     Type
 17907 ;;		None
 17908 ;; Auto vars:     Size  Location     Type
 17909 ;;		None
 17910 ;; Return value:  Size  Location     Type
 17911 ;;                  4   67[BANK0 ] long 
 17912 ;; Registers used:
 17913 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17914 ;; Tracked objects:
 17915 ;;		On entry : 0/0
 17916 ;;		On exit  : 0/0
 17917 ;;		Unchanged: 0/0
 17918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17919 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17921 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17922 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17923 ;;Total ram usage:        8 bytes
 17924 ;; Hardware stack levels used:    1
 17925 ;; Hardware stack levels required when called:    2
 17926 ;; This function calls:
 17927 ;;		___fldiv
 17928 ;;		___fltol
 17929 ;;		___xxtofl
 17930 ;; This function is called by:
 17931 ;;		_statemachine
 17932 ;; This function uses a non-reentrant model
 17933 ;;
 17934                           
 17935                           
 17936                           ;psect for function _AFE_getOverCurrentDischargeCurrent
 17937  36BE                     _AFE_getOverCurrentDischargeCurrent:	
 17938                           
 17939                           ;BQ76920.c: 141:     return (long) (OCD_threshold_setting[protect2.bits.OCD_THRESH]) / s
      +                          huntResistorValue_mOhm;
 17940                           
 17941                           ;incstack = 0
 17942                           ; Regs used in _AFE_getOverCurrentDischargeCurrent: [wreg-fsr0h+status,2+status,0+pclath
      +                          +cstack]
 17943  36BE  0023               	movlb	3	; select bank3
 17944  36BF  0850               	movf	BQ76920@protect2^(0+384),w
 17945  36C0  390F               	andlw	15
 17946  36C1  0020               	movlb	0	; select bank0
 17947  36C2  00E7               	movwf	??_AFE_getOverCurrentDischargeCurrent
 17948  36C3  01E8               	clrf	??_AFE_getOverCurrentDischargeCurrent+1
 17949  36C4  35E7               	lslf	??_AFE_getOverCurrentDischargeCurrent,f
 17950  36C5  0DE8               	rlf	??_AFE_getOverCurrentDischargeCurrent+1,f
 17951  36C6  30C8               	movlw	low (_OCD_threshold_setting| (0+32768))
 17952  36C7  0767               	addwf	??_AFE_getOverCurrentDischargeCurrent,w
 17953  36C8  0084               	movwf	4
 17954  36C9  30B9               	movlw	high (_OCD_threshold_setting| (0+32768))
 17955  36CA  3D68               	addwfc	??_AFE_getOverCurrentDischargeCurrent+1,w
 17956  36CB  0085               	movwf	5
 17957  36CC  3F00               	moviw [0]fsr0
 17958  36CD  00E9               	movwf	??_AFE_getOverCurrentDischargeCurrent+2
 17959  36CE  3F01               	moviw [1]fsr0
 17960  36CF  00EA               	movwf	??_AFE_getOverCurrentDischargeCurrent+3
 17961  36D0  0869               	movf	??_AFE_getOverCurrentDischargeCurrent+2,w
 17962  36D1  00F1               	movwf	___xxtofl@val
 17963  36D2  086A               	movf	??_AFE_getOverCurrentDischargeCurrent+3,w
 17964  36D3  00F2               	movwf	___xxtofl@val+1
 17965  36D4  0D89               	rlf	9,f
 17966  36D5  3B89               	subwfb	9,f
 17967  36D6  0989               	comf	9,f
 17968  36D7  00F3               	movwf	___xxtofl@val+2
 17969  36D8  00F4               	movwf	___xxtofl@val+3
 17970  36D9  3001               	movlw	1
 17971  36DA  31AC  24C9  31B6   	fcall	___xxtofl
 17972  36DD  0874               	movf	?___xxtofl+3,w
 17973  36DE  0020               	movlb	0	; select bank0
 17974  36DF  00C7               	movwf	___fldiv@b+3
 17975  36E0  0873               	movf	?___xxtofl+2,w
 17976  36E1  00C6               	movwf	___fldiv@b+2
 17977  36E2  0872               	movf	?___xxtofl+1,w
 17978  36E3  00C5               	movwf	___fldiv@b+1
 17979  36E4  0871               	movf	?___xxtofl,w
 17980  36E5  00C4               	movwf	___fldiv@b
 17981  36E6  0023               	movlb	3	; select bank3
 17982  36E7  0835               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 17983  36E8  0020               	movlb	0	; select bank0
 17984  36E9  00C3               	movwf	___fldiv@a+3
 17985  36EA  0023               	movlb	3	; select bank3
 17986  36EB  0834               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 17987  36EC  0020               	movlb	0	; select bank0
 17988  36ED  00C2               	movwf	___fldiv@a+2
 17989  36EE  0023               	movlb	3	; select bank3
 17990  36EF  0833               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 17991  36F0  0020               	movlb	0	; select bank0
 17992  36F1  00C1               	movwf	___fldiv@a+1
 17993  36F2  0023               	movlb	3	; select bank3
 17994  36F3  0832               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 17995  36F4  0020               	movlb	0	; select bank0
 17996  36F5  00C0               	movwf	___fldiv@a
 17997  36F6  3190  2052  31B6   	fcall	___fldiv
 17998  36F9  0020               	movlb	0	; select bank0
 17999  36FA  0843               	movf	?___fldiv+3,w
 18000  36FB  00DD               	movwf	___fltol@f1+3
 18001  36FC  0842               	movf	?___fldiv+2,w
 18002  36FD  00DC               	movwf	___fltol@f1+2
 18003  36FE  0841               	movf	?___fldiv+1,w
 18004  36FF  00DB               	movwf	___fltol@f1+1
 18005  3700  0840               	movf	?___fldiv,w
 18006  3701  00DA               	movwf	___fltol@f1
 18007  3702  31A8  2080         	fcall	___fltol
 18008  3704  0020               	movlb	0	; select bank0
 18009  3705  085D               	movf	?___fltol+3,w
 18010  3706  00E6               	movwf	?_AFE_getOverCurrentDischargeCurrent+3
 18011  3707  085C               	movf	?___fltol+2,w
 18012  3708  00E5               	movwf	?_AFE_getOverCurrentDischargeCurrent+2
 18013  3709  085B               	movf	?___fltol+1,w
 18014  370A  00E4               	movwf	?_AFE_getOverCurrentDischargeCurrent+1
 18015  370B  085A               	movf	?___fltol,w
 18016  370C  00E3               	movwf	?_AFE_getOverCurrentDischargeCurrent
 18017  370D  0008               	return
 18018  370E                     __end_of_AFE_getOverCurrentDischargeCurrent:	
 18019                           
 18020                           	psect	text67
 18021  2CC9                     __ptext67:	
 18022 ;; *************** function ___xxtofl *****************
 18023 ;; Defined at:
 18024 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 18025 ;; Parameters:    Size  Location     Type
 18026 ;;  sign            1    wreg     unsigned char 
 18027 ;;  val             4    1[COMMON] long 
 18028 ;; Auto vars:     Size  Location     Type
 18029 ;;  sign            1    0[BANK0 ] unsigned char 
 18030 ;;  arg             4    2[BANK0 ] unsigned long 
 18031 ;;  exp             1    1[BANK0 ] unsigned char 
 18032 ;; Return value:  Size  Location     Type
 18033 ;;                  4    1[COMMON] unsigned char 
 18034 ;; Registers used:
 18035 ;;		wreg, status,2, status,0
 18036 ;; Tracked objects:
 18037 ;;		On entry : 0/0
 18038 ;;		On exit  : 0/0
 18039 ;;		Unchanged: 0/0
 18040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18041 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18042 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18043 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18044 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18045 ;;Total ram usage:       14 bytes
 18046 ;; Hardware stack levels used:    1
 18047 ;; Hardware stack levels required when called:    1
 18048 ;; This function calls:
 18049 ;;		Nothing
 18050 ;; This function is called by:
 18051 ;;		_setShortCircuitProtection
 18052 ;;		_setOverCurrentDischargeProtection
 18053 ;;		_AFE_getSetShortCircuitCurrent
 18054 ;;		_AFE_getOverCurrentDischargeCurrent
 18055 ;; This function uses a non-reentrant model
 18056 ;;
 18057                           
 18058                           
 18059                           ;psect for function ___xxtofl
 18060  2CC9                     ___xxtofl:	
 18061                           
 18062                           ;incstack = 0
 18063                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 18064                           ;___xxtofl@sign stored from wreg
 18065  2CC9  0020               	movlb	0	; select bank0
 18066  2CCA  00A0               	movwf	___xxtofl@sign
 18067  2CCB  0820               	movf	___xxtofl@sign,w
 18068  2CCC  1D03               	btfss	3,2
 18069  2CCD  1FF4               	btfss	___xxtofl@val+3,7
 18070  2CCE  2CDF               	goto	l6296
 18071  2CCF  0971               	comf	___xxtofl@val,w
 18072  2CD0  00A2               	movwf	___xxtofl@arg
 18073  2CD1  0972               	comf	___xxtofl@val+1,w
 18074  2CD2  00A3               	movwf	___xxtofl@arg+1
 18075  2CD3  0973               	comf	___xxtofl@val+2,w
 18076  2CD4  00A4               	movwf	___xxtofl@arg+2
 18077  2CD5  0974               	comf	___xxtofl@val+3,w
 18078  2CD6  00A5               	movwf	___xxtofl@arg+3
 18079  2CD7  0AA2               	incf	___xxtofl@arg,f
 18080  2CD8  1903               	skipnz
 18081  2CD9  0AA3               	incf	___xxtofl@arg+1,f
 18082  2CDA  1903               	skipnz
 18083  2CDB  0AA4               	incf	___xxtofl@arg+2,f
 18084  2CDC  1903               	skipnz
 18085  2CDD  0AA5               	incf	___xxtofl@arg+3,f
 18086  2CDE  2CE7               	goto	l1289
 18087  2CDF                     l6296:	
 18088  2CDF  0874               	movf	___xxtofl@val+3,w
 18089  2CE0  00A5               	movwf	___xxtofl@arg+3
 18090  2CE1  0873               	movf	___xxtofl@val+2,w
 18091  2CE2  00A4               	movwf	___xxtofl@arg+2
 18092  2CE3  0872               	movf	___xxtofl@val+1,w
 18093  2CE4  00A3               	movwf	___xxtofl@arg+1
 18094  2CE5  0871               	movf	___xxtofl@val,w
 18095  2CE6  00A2               	movwf	___xxtofl@arg
 18096  2CE7                     l1289:	
 18097  2CE7  0874               	movf	___xxtofl@val+3,w
 18098  2CE8  0473               	iorwf	___xxtofl@val+2,w
 18099  2CE9  0472               	iorwf	___xxtofl@val+1,w
 18100  2CEA  0471               	iorwf	___xxtofl@val,w
 18101  2CEB  1D03               	skipz
 18102  2CEC  2CF6               	goto	l6302
 18103  2CED  3000               	movlw	0
 18104  2CEE  00F4               	movwf	?___xxtofl+3
 18105  2CEF  3000               	movlw	0
 18106  2CF0  00F3               	movwf	?___xxtofl+2
 18107  2CF1  3000               	movlw	0
 18108  2CF2  00F2               	movwf	?___xxtofl+1
 18109  2CF3  3000               	movlw	0
 18110  2CF4  00F1               	movwf	?___xxtofl
 18111  2CF5  0008               	return
 18112  2CF6                     l6302:	
 18113  2CF6  3096               	movlw	150
 18114  2CF7  00F5               	movwf	??___xxtofl
 18115  2CF8  0875               	movf	??___xxtofl,w
 18116  2CF9  00A1               	movwf	___xxtofl@exp
 18117  2CFA                     l6306:	
 18118  2CFA  30FE               	movlw	254
 18119  2CFB  0525               	andwf	___xxtofl@arg+3,w
 18120  2CFC  1903               	btfsc	3,2
 18121  2CFD  2D1D               	goto	l1295
 18122  2CFE  3001               	movlw	1
 18123  2CFF  00F5               	movwf	??___xxtofl
 18124  2D00  0875               	movf	??___xxtofl,w
 18125  2D01  07A1               	addwf	___xxtofl@exp,f
 18126  2D02  3001               	movlw	1
 18127  2D03                     u8875:	
 18128  2D03  36A5               	lsrf	___xxtofl@arg+3,f
 18129  2D04  0CA4               	rrf	___xxtofl@arg+2,f
 18130  2D05  0CA3               	rrf	___xxtofl@arg+1,f
 18131  2D06  0CA2               	rrf	___xxtofl@arg,f
 18132  2D07  0B89               	decfsz	9,f
 18133  2D08  2D03               	goto	u8875
 18134  2D09  2CFA               	goto	l6306
 18135  2D0A                     l6308:	
 18136  2D0A  3001               	movlw	1
 18137  2D0B  00F5               	movwf	??___xxtofl
 18138  2D0C  0875               	movf	??___xxtofl,w
 18139  2D0D  07A1               	addwf	___xxtofl@exp,f
 18140  2D0E  3001               	movlw	1
 18141  2D0F  07A2               	addwf	___xxtofl@arg,f
 18142  2D10  3000               	movlw	0
 18143  2D11  3DA3               	addwfc	___xxtofl@arg+1,f
 18144  2D12  3000               	movlw	0
 18145  2D13  3DA4               	addwfc	___xxtofl@arg+2,f
 18146  2D14  3000               	movlw	0
 18147  2D15  3DA5               	addwfc	___xxtofl@arg+3,f
 18148  2D16  3001               	movlw	1
 18149  2D17                     u8895:	
 18150  2D17  36A5               	lsrf	___xxtofl@arg+3,f
 18151  2D18  0CA4               	rrf	___xxtofl@arg+2,f
 18152  2D19  0CA3               	rrf	___xxtofl@arg+1,f
 18153  2D1A  0CA2               	rrf	___xxtofl@arg,f
 18154  2D1B  0B89               	decfsz	9,f
 18155  2D1C  2D17               	goto	u8895
 18156  2D1D                     l1295:	
 18157  2D1D  30FF               	movlw	255
 18158  2D1E  0525               	andwf	___xxtofl@arg+3,w
 18159  2D1F  1903               	btfsc	3,2
 18160  2D20  2D2F               	goto	l6316
 18161  2D21  2D0A               	goto	l6308
 18162  2D22                     l6318:	
 18163  2D22  3002               	movlw	2
 18164  2D23  0221               	subwf	___xxtofl@exp,w
 18165  2D24  1C03               	btfss	3,0
 18166  2D25  2D31               	goto	l1302
 18167  2D26  3001               	movlw	1
 18168  2D27  02A1               	subwf	___xxtofl@exp,f
 18169  2D28  3001               	movlw	1
 18170  2D29                     u8915:	
 18171  2D29  35A2               	lslf	___xxtofl@arg,f
 18172  2D2A  0DA3               	rlf	___xxtofl@arg+1,f
 18173  2D2B  0DA4               	rlf	___xxtofl@arg+2,f
 18174  2D2C  0DA5               	rlf	___xxtofl@arg+3,f
 18175  2D2D  0B89               	decfsz	9,f
 18176  2D2E  2D29               	goto	u8915
 18177  2D2F                     l6316:	
 18178  2D2F  1FA4               	btfss	___xxtofl@arg+2,7
 18179  2D30  2D22               	goto	l6318
 18180  2D31                     l1302:	
 18181  2D31  1821               	btfsc	___xxtofl@exp,0
 18182  2D32  2D3B               	goto	l1303
 18183  2D33  30FF               	movlw	255
 18184  2D34  05A2               	andwf	___xxtofl@arg,f
 18185  2D35  30FF               	movlw	255
 18186  2D36  05A3               	andwf	___xxtofl@arg+1,f
 18187  2D37  307F               	movlw	127
 18188  2D38  05A4               	andwf	___xxtofl@arg+2,f
 18189  2D39  30FF               	movlw	255
 18190  2D3A  05A5               	andwf	___xxtofl@arg+3,f
 18191  2D3B                     l1303:	
 18192  2D3B  1003               	clrc
 18193  2D3C  0CA1               	rrf	___xxtofl@exp,f
 18194  2D3D  0821               	movf	___xxtofl@exp,w
 18195  2D3E  00F5               	movwf	??___xxtofl
 18196  2D3F  01F6               	clrf	??___xxtofl+1
 18197  2D40  01F7               	clrf	??___xxtofl+2
 18198  2D41  01F8               	clrf	??___xxtofl+3
 18199  2D42  3018               	movlw	24
 18200  2D43                     u8955:	
 18201  2D43  35F5               	lslf	??___xxtofl,f
 18202  2D44  0DF6               	rlf	??___xxtofl+1,f
 18203  2D45  0DF7               	rlf	??___xxtofl+2,f
 18204  2D46  0DF8               	rlf	??___xxtofl+3,f
 18205  2D47  0B89               	decfsz	9,f
 18206  2D48  2D43               	goto	u8955
 18207  2D49  0875               	movf	??___xxtofl,w
 18208  2D4A  04A2               	iorwf	___xxtofl@arg,f
 18209  2D4B  0876               	movf	??___xxtofl+1,w
 18210  2D4C  04A3               	iorwf	___xxtofl@arg+1,f
 18211  2D4D  0877               	movf	??___xxtofl+2,w
 18212  2D4E  04A4               	iorwf	___xxtofl@arg+2,f
 18213  2D4F  0878               	movf	??___xxtofl+3,w
 18214  2D50  04A5               	iorwf	___xxtofl@arg+3,f
 18215  2D51  0820               	movf	___xxtofl@sign,w
 18216  2D52  1D03               	btfss	3,2
 18217  2D53  1FF4               	btfss	___xxtofl@val+3,7
 18218  2D54  2D56               	goto	l6330
 18219  2D55  17A5               	bsf	___xxtofl@arg+3,7
 18220  2D56                     l6330:	
 18221  2D56  0825               	movf	___xxtofl@arg+3,w
 18222  2D57  00F4               	movwf	?___xxtofl+3
 18223  2D58  0824               	movf	___xxtofl@arg+2,w
 18224  2D59  00F3               	movwf	?___xxtofl+2
 18225  2D5A  0823               	movf	___xxtofl@arg+1,w
 18226  2D5B  00F2               	movwf	?___xxtofl+1
 18227  2D5C  0822               	movf	___xxtofl@arg,w
 18228  2D5D  00F1               	movwf	?___xxtofl
 18229  2D5E  0008               	return
 18230  2D5F                     __end_of___xxtofl:	
 18231                           
 18232                           	psect	text68
 18233  2880                     __ptext68:	
 18234 ;; *************** function ___fltol *****************
 18235 ;; Defined at:
 18236 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 18237 ;; Parameters:    Size  Location     Type
 18238 ;;  f1              4   58[BANK0 ] unsigned char 
 18239 ;; Auto vars:     Size  Location     Type
 18240 ;;  exp1            1   11[COMMON] unsigned char 
 18241 ;;  sign1           1   10[COMMON] unsigned char 
 18242 ;; Return value:  Size  Location     Type
 18243 ;;                  4   58[BANK0 ] long 
 18244 ;; Registers used:
 18245 ;;		wreg, status,2, status,0
 18246 ;; Tracked objects:
 18247 ;;		On entry : 0/0
 18248 ;;		On exit  : 0/0
 18249 ;;		Unchanged: 0/0
 18250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18251 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18252 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18253 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18254 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18255 ;;Total ram usage:       11 bytes
 18256 ;; Hardware stack levels used:    1
 18257 ;; Hardware stack levels required when called:    1
 18258 ;; This function calls:
 18259 ;;		Nothing
 18260 ;; This function is called by:
 18261 ;;		_AFE_getSetShortCircuitCurrent
 18262 ;;		_AFE_getOverCurrentDischargeCurrent
 18263 ;;		_efgtoa
 18264 ;; This function uses a non-reentrant model
 18265 ;;
 18266                           
 18267                           
 18268                           ;psect for function ___fltol
 18269  2880                     ___fltol:	
 18270                           
 18271                           ;incstack = 0
 18272                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 18273  2880  1003               	clrc
 18274  2881  0020               	movlb	0	; select bank0
 18275  2882  0D5C               	rlf	___fltol@f1+2,w
 18276  2883  0D5D               	rlf	___fltol@f1+3,w
 18277  2884  00DE               	movwf	??___fltol
 18278  2885  085E               	movf	??___fltol,w
 18279  2886  00FB               	movwf	___fltol@exp1
 18280  2887  087B               	movf	___fltol@exp1,w
 18281  2888  1D03               	btfss	3,2
 18282  2889  2893               	goto	l4790
 18283  288A                     l4786:	
 18284  288A  3000               	movlw	0
 18285  288B  00DD               	movwf	?___fltol+3
 18286  288C  3000               	movlw	0
 18287  288D  00DC               	movwf	?___fltol+2
 18288  288E  3000               	movlw	0
 18289  288F  00DB               	movwf	?___fltol+1
 18290  2890  3000               	movlw	0
 18291  2891  00DA               	movwf	?___fltol
 18292  2892  0008               	return
 18293  2893                     l4790:	
 18294  2893  085A               	movf	___fltol@f1,w
 18295  2894  00DE               	movwf	??___fltol
 18296  2895  085B               	movf	___fltol@f1+1,w
 18297  2896  00DF               	movwf	??___fltol+1
 18298  2897  085C               	movf	___fltol@f1+2,w
 18299  2898  00E0               	movwf	??___fltol+2
 18300  2899  085D               	movf	___fltol@f1+3,w
 18301  289A  00E1               	movwf	??___fltol+3
 18302  289B  301F               	movlw	31
 18303  289C                     u6185:	
 18304  289C  36E1               	lsrf	??___fltol+3,f
 18305  289D  0CE0               	rrf	??___fltol+2,f
 18306  289E  0CDF               	rrf	??___fltol+1,f
 18307  289F  0CDE               	rrf	??___fltol,f
 18308  28A0  0B89               	decfsz	9,f
 18309  28A1  289C               	goto	u6185
 18310  28A2  085E               	movf	??___fltol,w
 18311  28A3  00E2               	movwf	??___fltol+4
 18312  28A4  0862               	movf	??___fltol+4,w
 18313  28A5  00FA               	movwf	___fltol@sign1
 18314  28A6  17DC               	bsf	___fltol@f1+2,7
 18315  28A7  30FF               	movlw	255
 18316  28A8  05DA               	andwf	___fltol@f1,f
 18317  28A9  30FF               	movlw	255
 18318  28AA  05DB               	andwf	___fltol@f1+1,f
 18319  28AB  30FF               	movlw	255
 18320  28AC  05DC               	andwf	___fltol@f1+2,f
 18321  28AD  3000               	movlw	0
 18322  28AE  05DD               	andwf	___fltol@f1+3,f
 18323  28AF  3096               	movlw	150
 18324  28B0  02FB               	subwf	___fltol@exp1,f
 18325  28B1  1FFB               	btfss	___fltol@exp1,7
 18326  28B2  28C6               	goto	l4808
 18327  28B3  087B               	movf	___fltol@exp1,w
 18328  28B4  3A80               	xorlw	128
 18329  28B5  3E97               	addlw	151
 18330  28B6  1C03               	btfss	3,0
 18331  28B7  288A               	goto	l4786
 18332  28B8                     l4806:	
 18333  28B8  3001               	movlw	1
 18334  28B9                     u6215:	
 18335  28B9  36DD               	lsrf	___fltol@f1+3,f
 18336  28BA  0CDC               	rrf	___fltol@f1+2,f
 18337  28BB  0CDB               	rrf	___fltol@f1+1,f
 18338  28BC  0CDA               	rrf	___fltol@f1,f
 18339  28BD  0B89               	decfsz	9,f
 18340  28BE  28B9               	goto	u6215
 18341  28BF  3001               	movlw	1
 18342  28C0  00DE               	movwf	??___fltol
 18343  28C1  085E               	movf	??___fltol,w
 18344  28C2  07FB               	addwf	___fltol@exp1,f
 18345  28C3  1903               	btfsc	3,2
 18346  28C4  28D7               	goto	l4816
 18347  28C5  28B8               	goto	l4806
 18348  28C6                     l4808:	
 18349  28C6  3020               	movlw	32
 18350  28C7  027B               	subwf	___fltol@exp1,w
 18351  28C8  1803               	btfsc	3,0
 18352  28C9  288A               	goto	l4786
 18353  28CA                     l1055:	
 18354  28CA  087B               	movf	___fltol@exp1,w
 18355  28CB  1903               	btfsc	3,2
 18356  28CC  28D7               	goto	l4816
 18357  28CD  3001               	movlw	1
 18358  28CE                     u6245:	
 18359  28CE  35DA               	lslf	___fltol@f1,f
 18360  28CF  0DDB               	rlf	___fltol@f1+1,f
 18361  28D0  0DDC               	rlf	___fltol@f1+2,f
 18362  28D1  0DDD               	rlf	___fltol@f1+3,f
 18363  28D2  0B89               	decfsz	9,f
 18364  28D3  28CE               	goto	u6245
 18365  28D4  3001               	movlw	1
 18366  28D5  02FB               	subwf	___fltol@exp1,f
 18367  28D6  28CA               	goto	l1055
 18368  28D7                     l4816:	
 18369  28D7  087A               	movf	___fltol@sign1,w
 18370  28D8  1903               	btfsc	3,2
 18371  28D9  0008               	return
 18372  28DA  09DA               	comf	___fltol@f1,f
 18373  28DB  09DB               	comf	___fltol@f1+1,f
 18374  28DC  09DC               	comf	___fltol@f1+2,f
 18375  28DD  09DD               	comf	___fltol@f1+3,f
 18376  28DE  0ADA               	incf	___fltol@f1,f
 18377  28DF  1903               	skipnz
 18378  28E0  0ADB               	incf	___fltol@f1+1,f
 18379  28E1  1903               	skipnz
 18380  28E2  0ADC               	incf	___fltol@f1+2,f
 18381  28E3  1903               	skipnz
 18382  28E4  0ADD               	incf	___fltol@f1+3,f
 18383  28E5  0008               	return
 18384  28E6                     __end_of___fltol:	
 18385                           
 18386                           	psect	text69
 18387  1052                     __ptext69:	
 18388 ;; *************** function ___fldiv *****************
 18389 ;; Defined at:
 18390 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 18391 ;; Parameters:    Size  Location     Type
 18392 ;;  a               4   32[BANK0 ] long 
 18393 ;;  b               4   36[BANK0 ] long 
 18394 ;; Auto vars:     Size  Location     Type
 18395 ;;  grs             4   52[BANK0 ] unsigned long 
 18396 ;;  rem             4   45[BANK0 ] unsigned long 
 18397 ;;  new_exp         2   50[BANK0 ] int 
 18398 ;;  aexp            1   57[BANK0 ] unsigned char 
 18399 ;;  bexp            1   56[BANK0 ] unsigned char 
 18400 ;;  sign            1   49[BANK0 ] unsigned char 
 18401 ;; Return value:  Size  Location     Type
 18402 ;;                  4   32[BANK0 ] unsigned char 
 18403 ;; Registers used:
 18404 ;;		wreg, status,2, status,0
 18405 ;; Tracked objects:
 18406 ;;		On entry : 0/0
 18407 ;;		On exit  : 0/0
 18408 ;;		Unchanged: 0/0
 18409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18410 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18411 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18412 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18413 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18414 ;;Total ram usage:       26 bytes
 18415 ;; Hardware stack levels used:    1
 18416 ;; Hardware stack levels required when called:    1
 18417 ;; This function calls:
 18418 ;;		Nothing
 18419 ;; This function is called by:
 18420 ;;		_setShortCircuitProtection
 18421 ;;		_setOverCurrentDischargeProtection
 18422 ;;		_AFE_getSetShortCircuitCurrent
 18423 ;;		_AFE_getOverCurrentDischargeCurrent
 18424 ;;		_efgtoa
 18425 ;; This function uses a non-reentrant model
 18426 ;;
 18427                           
 18428                           
 18429                           ;psect for function ___fldiv
 18430  1052                     ___fldiv:	
 18431                           
 18432                           ;incstack = 0
 18433                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 18434  1052  0020               	movlb	0	; select bank0
 18435  1053  0847               	movf	___fldiv@b+3,w
 18436  1054  3980               	andlw	128
 18437  1055  00C8               	movwf	??___fldiv
 18438  1056  0848               	movf	??___fldiv,w
 18439  1057  00D1               	movwf	___fldiv@sign
 18440  1058  3547               	lslf	___fldiv@b+3,w
 18441  1059  00C8               	movwf	??___fldiv
 18442  105A  0848               	movf	??___fldiv,w
 18443  105B  00D8               	movwf	___fldiv@bexp
 18444  105C  1BC6               	btfsc	___fldiv@b+2,7
 18445  105D  1458               	bsf	___fldiv@bexp,0
 18446  105E  0858               	movf	___fldiv@bexp,w
 18447  105F  1903               	btfsc	3,2
 18448  1060  286F               	goto	l4882
 18449  1061  0A58               	incf	___fldiv@bexp,w
 18450  1062  1D03               	btfss	3,2
 18451  1063  286C               	goto	l4878
 18452  1064  3000               	movlw	0
 18453  1065  00C7               	movwf	___fldiv@b+3
 18454  1066  3000               	movlw	0
 18455  1067  00C6               	movwf	___fldiv@b+2
 18456  1068  3000               	movlw	0
 18457  1069  00C5               	movwf	___fldiv@b+1
 18458  106A  3000               	movlw	0
 18459  106B  00C4               	movwf	___fldiv@b
 18460  106C                     l4878:	
 18461  106C  17C6               	bsf	___fldiv@b+2,7
 18462  106D  01C7               	clrf	___fldiv@b+3
 18463  106E  2877               	goto	l4884
 18464  106F                     l4882:	
 18465  106F  3000               	movlw	0
 18466  1070  00C7               	movwf	___fldiv@b+3
 18467  1071  3000               	movlw	0
 18468  1072  00C6               	movwf	___fldiv@b+2
 18469  1073  3000               	movlw	0
 18470  1074  00C5               	movwf	___fldiv@b+1
 18471  1075  3000               	movlw	0
 18472  1076  00C4               	movwf	___fldiv@b
 18473  1077                     l4884:	
 18474  1077  0843               	movf	___fldiv@a+3,w
 18475  1078  3980               	andlw	128
 18476  1079  00C8               	movwf	??___fldiv
 18477  107A  0848               	movf	??___fldiv,w
 18478  107B  06D1               	xorwf	___fldiv@sign,f
 18479  107C  3543               	lslf	___fldiv@a+3,w
 18480  107D  00C8               	movwf	??___fldiv
 18481  107E  0848               	movf	??___fldiv,w
 18482  107F  00D9               	movwf	___fldiv@aexp
 18483  1080  1BC2               	btfsc	___fldiv@a+2,7
 18484  1081  1459               	bsf	___fldiv@aexp,0
 18485  1082  0859               	movf	___fldiv@aexp,w
 18486  1083  1903               	btfsc	3,2
 18487  1084  2893               	goto	l4902
 18488  1085  0A59               	incf	___fldiv@aexp,w
 18489  1086  1D03               	btfss	3,2
 18490  1087  2890               	goto	l4898
 18491  1088  3000               	movlw	0
 18492  1089  00C3               	movwf	___fldiv@a+3
 18493  108A  3000               	movlw	0
 18494  108B  00C2               	movwf	___fldiv@a+2
 18495  108C  3000               	movlw	0
 18496  108D  00C1               	movwf	___fldiv@a+1
 18497  108E  3000               	movlw	0
 18498  108F  00C0               	movwf	___fldiv@a
 18499  1090                     l4898:	
 18500  1090  17C2               	bsf	___fldiv@a+2,7
 18501  1091  01C3               	clrf	___fldiv@a+3
 18502  1092  289B               	goto	l1211
 18503  1093                     l4902:	
 18504  1093  3000               	movlw	0
 18505  1094  00C3               	movwf	___fldiv@a+3
 18506  1095  3000               	movlw	0
 18507  1096  00C2               	movwf	___fldiv@a+2
 18508  1097  3000               	movlw	0
 18509  1098  00C1               	movwf	___fldiv@a+1
 18510  1099  3000               	movlw	0
 18511  109A  00C0               	movwf	___fldiv@a
 18512  109B                     l1211:	
 18513  109B  0843               	movf	___fldiv@a+3,w
 18514  109C  0442               	iorwf	___fldiv@a+2,w
 18515  109D  0441               	iorwf	___fldiv@a+1,w
 18516  109E  0440               	iorwf	___fldiv@a,w
 18517  109F  1D03               	skipz
 18518  10A0  28BA               	goto	l4912
 18519  10A1  3000               	movlw	0
 18520  10A2  00C7               	movwf	___fldiv@b+3
 18521  10A3  3000               	movlw	0
 18522  10A4  00C6               	movwf	___fldiv@b+2
 18523  10A5  3000               	movlw	0
 18524  10A6  00C5               	movwf	___fldiv@b+1
 18525  10A7  3000               	movlw	0
 18526  10A8  00C4               	movwf	___fldiv@b
 18527  10A9  3080               	movlw	128
 18528  10AA  04C6               	iorwf	___fldiv@b+2,f
 18529  10AB  307F               	movlw	127
 18530  10AC  04C7               	iorwf	___fldiv@b+3,f
 18531  10AD                     L14:	
 18532  10AD  0851               	movf	___fldiv@sign,w
 18533  10AE  00C8               	movwf	??___fldiv
 18534  10AF  0848               	movf	??___fldiv,w
 18535  10B0  04C7               	iorwf	___fldiv@b+3,f
 18536  10B1  0847               	movf	___fldiv@b+3,w
 18537  10B2  00C3               	movwf	?___fldiv+3
 18538  10B3  0846               	movf	___fldiv@b+2,w
 18539  10B4  00C2               	movwf	?___fldiv+2
 18540  10B5  0845               	movf	___fldiv@b+1,w
 18541  10B6  00C1               	movwf	?___fldiv+1
 18542  10B7  0844               	movf	___fldiv@b,w
 18543  10B8  00C0               	movwf	?___fldiv
 18544  10B9  0008               	return
 18545  10BA                     l4912:	
 18546  10BA  0858               	movf	___fldiv@bexp,w
 18547  10BB  1D03               	btfss	3,2
 18548  10BC  28C6               	goto	l4918
 18549  10BD  3000               	movlw	0
 18550  10BE  00C3               	movwf	?___fldiv+3
 18551  10BF  3000               	movlw	0
 18552  10C0  00C2               	movwf	?___fldiv+2
 18553  10C1  3000               	movlw	0
 18554  10C2  00C1               	movwf	?___fldiv+1
 18555  10C3  3000               	movlw	0
 18556  10C4  00C0               	movwf	?___fldiv
 18557  10C5  0008               	return
 18558  10C6                     l4918:	
 18559  10C6  0858               	movf	___fldiv@bexp,w
 18560  10C7  00C8               	movwf	??___fldiv
 18561  10C8  01C9               	clrf	??___fldiv+1
 18562  10C9  0849               	movf	??___fldiv+1,w
 18563  10CA  00CB               	movwf	??___fldiv+3
 18564  10CB  0859               	movf	___fldiv@aexp,w
 18565  10CC  0248               	subwf	??___fldiv,w
 18566  10CD  00CA               	movwf	??___fldiv+2
 18567  10CE  1C03               	skipc
 18568  10CF  03CB               	decf	??___fldiv+3,f
 18569  10D0  084A               	movf	??___fldiv+2,w
 18570  10D1  3E7F               	addlw	127
 18571  10D2  00D2               	movwf	___fldiv@new_exp
 18572  10D3  3000               	movlw	0
 18573  10D4  3D4B               	addwfc	??___fldiv+3,w
 18574  10D5  00D3               	movwf	___fldiv@new_exp+1
 18575  10D6  0847               	movf	___fldiv@b+3,w
 18576  10D7  00D0               	movwf	___fldiv@rem+3
 18577  10D8  0846               	movf	___fldiv@b+2,w
 18578  10D9  00CF               	movwf	___fldiv@rem+2
 18579  10DA  0845               	movf	___fldiv@b+1,w
 18580  10DB  00CE               	movwf	___fldiv@rem+1
 18581  10DC  0844               	movf	___fldiv@b,w
 18582  10DD  00CD               	movwf	___fldiv@rem
 18583  10DE  3000               	movlw	0
 18584  10DF  00C7               	movwf	___fldiv@b+3
 18585  10E0  3000               	movlw	0
 18586  10E1  00C6               	movwf	___fldiv@b+2
 18587  10E2  3000               	movlw	0
 18588  10E3  00C5               	movwf	___fldiv@b+1
 18589  10E4  3000               	movlw	0
 18590  10E5  00C4               	movwf	___fldiv@b
 18591  10E6  3000               	movlw	0
 18592  10E7  00D7               	movwf	___fldiv@grs+3
 18593  10E8  3000               	movlw	0
 18594  10E9  00D6               	movwf	___fldiv@grs+2
 18595  10EA  3000               	movlw	0
 18596  10EB  00D5               	movwf	___fldiv@grs+1
 18597  10EC  3000               	movlw	0
 18598  10ED  00D4               	movwf	___fldiv@grs
 18599  10EE  01D9               	clrf	___fldiv@aexp
 18600  10EF                     l4946:	
 18601  10EF  301A               	movlw	26
 18602  10F0  0259               	subwf	___fldiv@aexp,w
 18603  10F1  1803               	btfsc	3,0
 18604  10F2  292B               	goto	l4948
 18605  10F3  0859               	movf	___fldiv@aexp,w
 18606  10F4  1903               	btfsc	3,2
 18607  10F5  290D               	goto	l4938
 18608  10F6  3001               	movlw	1
 18609  10F7                     u6455:	
 18610  10F7  35CD               	lslf	___fldiv@rem,f
 18611  10F8  0DCE               	rlf	___fldiv@rem+1,f
 18612  10F9  0DCF               	rlf	___fldiv@rem+2,f
 18613  10FA  0DD0               	rlf	___fldiv@rem+3,f
 18614  10FB  0B89               	decfsz	9,f
 18615  10FC  28F7               	goto	u6455
 18616  10FD  3001               	movlw	1
 18617  10FE                     u6465:	
 18618  10FE  35C4               	lslf	___fldiv@b,f
 18619  10FF  0DC5               	rlf	___fldiv@b+1,f
 18620  1100  0DC6               	rlf	___fldiv@b+2,f
 18621  1101  0DC7               	rlf	___fldiv@b+3,f
 18622  1102  0B89               	decfsz	9,f
 18623  1103  28FE               	goto	u6465
 18624  1104  1BD7               	btfsc	___fldiv@grs+3,7
 18625  1105  1444               	bsf	___fldiv@b,0
 18626  1106  3001               	movlw	1
 18627  1107                     u6485:	
 18628  1107  35D4               	lslf	___fldiv@grs,f
 18629  1108  0DD5               	rlf	___fldiv@grs+1,f
 18630  1109  0DD6               	rlf	___fldiv@grs+2,f
 18631  110A  0DD7               	rlf	___fldiv@grs+3,f
 18632  110B  0B89               	decfsz	9,f
 18633  110C  2907               	goto	u6485
 18634  110D                     l4938:	
 18635  110D  0843               	movf	___fldiv@a+3,w
 18636  110E  0250               	subwf	___fldiv@rem+3,w
 18637  110F  1D03               	skipz
 18638  1110  291B               	goto	u6495
 18639  1111  0842               	movf	___fldiv@a+2,w
 18640  1112  024F               	subwf	___fldiv@rem+2,w
 18641  1113  1D03               	skipz
 18642  1114  291B               	goto	u6495
 18643  1115  0841               	movf	___fldiv@a+1,w
 18644  1116  024E               	subwf	___fldiv@rem+1,w
 18645  1117  1D03               	skipz
 18646  1118  291B               	goto	u6495
 18647  1119  0840               	movf	___fldiv@a,w
 18648  111A  024D               	subwf	___fldiv@rem,w
 18649  111B                     u6495:	
 18650  111B  1C03               	skipc
 18651  111C  2926               	goto	l4944
 18652  111D  1757               	bsf	___fldiv@grs+3,6
 18653  111E  0840               	movf	___fldiv@a,w
 18654  111F  02CD               	subwf	___fldiv@rem,f
 18655  1120  0841               	movf	___fldiv@a+1,w
 18656  1121  3BCE               	subwfb	___fldiv@rem+1,f
 18657  1122  0842               	movf	___fldiv@a+2,w
 18658  1123  3BCF               	subwfb	___fldiv@rem+2,f
 18659  1124  0843               	movf	___fldiv@a+3,w
 18660  1125  3BD0               	subwfb	___fldiv@rem+3,f
 18661  1126                     l4944:	
 18662  1126  3001               	movlw	1
 18663  1127  00C8               	movwf	??___fldiv
 18664  1128  0848               	movf	??___fldiv,w
 18665  1129  07D9               	addwf	___fldiv@aexp,f
 18666  112A  28EF               	goto	l4946
 18667  112B                     l4948:	
 18668  112B  0850               	movf	___fldiv@rem+3,w
 18669  112C  044F               	iorwf	___fldiv@rem+2,w
 18670  112D  044E               	iorwf	___fldiv@rem+1,w
 18671  112E  044D               	iorwf	___fldiv@rem,w
 18672  112F  1D03               	btfss	3,2
 18673  1130  1454               	bsf	___fldiv@grs,0
 18674  1131                     l4962:	
 18675  1131  1BC6               	btfsc	___fldiv@b+2,7
 18676  1132  2948               	goto	l4964
 18677  1133  3001               	movlw	1
 18678  1134                     u6525:	
 18679  1134  35C4               	lslf	___fldiv@b,f
 18680  1135  0DC5               	rlf	___fldiv@b+1,f
 18681  1136  0DC6               	rlf	___fldiv@b+2,f
 18682  1137  0DC7               	rlf	___fldiv@b+3,f
 18683  1138  0B89               	decfsz	9,f
 18684  1139  2934               	goto	u6525
 18685  113A  1BD7               	btfsc	___fldiv@grs+3,7
 18686  113B  1444               	bsf	___fldiv@b,0
 18687  113C  3001               	movlw	1
 18688  113D                     u6545:	
 18689  113D  35D4               	lslf	___fldiv@grs,f
 18690  113E  0DD5               	rlf	___fldiv@grs+1,f
 18691  113F  0DD6               	rlf	___fldiv@grs+2,f
 18692  1140  0DD7               	rlf	___fldiv@grs+3,f
 18693  1141  0B89               	decfsz	9,f
 18694  1142  293D               	goto	u6545
 18695  1143  30FF               	movlw	255
 18696  1144  07D2               	addwf	___fldiv@new_exp,f
 18697  1145  30FF               	movlw	255
 18698  1146  3DD3               	addwfc	___fldiv@new_exp+1,f
 18699  1147  2931               	goto	l4962
 18700  1148                     l4964:	
 18701  1148  01D9               	clrf	___fldiv@aexp
 18702  1149  1FD7               	btfss	___fldiv@grs+3,7
 18703  114A  2961               	goto	l4974
 18704  114B  30FF               	movlw	255
 18705  114C  0554               	andwf	___fldiv@grs,w
 18706  114D  00C8               	movwf	??___fldiv
 18707  114E  30FF               	movlw	255
 18708  114F  0555               	andwf	___fldiv@grs+1,w
 18709  1150  00C9               	movwf	??___fldiv+1
 18710  1151  30FF               	movlw	255
 18711  1152  0556               	andwf	___fldiv@grs+2,w
 18712  1153  00CA               	movwf	??___fldiv+2
 18713  1154  307F               	movlw	127
 18714  1155  0557               	andwf	___fldiv@grs+3,w
 18715  1156  00CB               	movwf	??___fldiv+3
 18716  1157  084B               	movf	??___fldiv+3,w
 18717  1158  044A               	iorwf	??___fldiv+2,w
 18718  1159  0449               	iorwf	??___fldiv+1,w
 18719  115A  0448               	iorwf	??___fldiv,w
 18720  115B  1903               	skipnz
 18721  115C  1844               	btfsc	___fldiv@b,0
 18722  115D  295F               	goto	l4970
 18723  115E  2961               	goto	l4974
 18724  115F                     l4970:	
 18725  115F  01D9               	clrf	___fldiv@aexp
 18726  1160  0AD9               	incf	___fldiv@aexp,f
 18727  1161                     l4974:	
 18728  1161  0859               	movf	___fldiv@aexp,w
 18729  1162  1903               	btfsc	3,2
 18730  1163  298A               	goto	l4984
 18731  1164  3001               	movlw	1
 18732  1165  07C4               	addwf	___fldiv@b,f
 18733  1166  3000               	movlw	0
 18734  1167  3DC5               	addwfc	___fldiv@b+1,f
 18735  1168  3000               	movlw	0
 18736  1169  3DC6               	addwfc	___fldiv@b+2,f
 18737  116A  3000               	movlw	0
 18738  116B  3DC7               	addwfc	___fldiv@b+3,f
 18739  116C  1C47               	btfss	___fldiv@b+3,0
 18740  116D  298A               	goto	l4984
 18741  116E  0844               	movf	___fldiv@b,w
 18742  116F  00C8               	movwf	??___fldiv
 18743  1170  0845               	movf	___fldiv@b+1,w
 18744  1171  00C9               	movwf	??___fldiv+1
 18745  1172  0846               	movf	___fldiv@b+2,w
 18746  1173  00CA               	movwf	??___fldiv+2
 18747  1174  0847               	movf	___fldiv@b+3,w
 18748  1175  00CB               	movwf	??___fldiv+3
 18749  1176  3001               	movlw	1
 18750  1177  00CC               	movwf	??___fldiv+4
 18751  1178                     u6615:	
 18752  1178  37CB               	asrf	??___fldiv+3,f
 18753  1179  0CCA               	rrf	??___fldiv+2,f
 18754  117A  0CC9               	rrf	??___fldiv+1,f
 18755  117B  0CC8               	rrf	??___fldiv,f
 18756  117C  0BCC               	decfsz	??___fldiv+4,f
 18757  117D  2978               	goto	u6615
 18758  117E  084B               	movf	??___fldiv+3,w
 18759  117F  00C7               	movwf	___fldiv@b+3
 18760  1180  084A               	movf	??___fldiv+2,w
 18761  1181  00C6               	movwf	___fldiv@b+2
 18762  1182  0849               	movf	??___fldiv+1,w
 18763  1183  00C5               	movwf	___fldiv@b+1
 18764  1184  0848               	movf	??___fldiv,w
 18765  1185  00C4               	movwf	___fldiv@b
 18766  1186  3001               	movlw	1
 18767  1187  07D2               	addwf	___fldiv@new_exp,f
 18768  1188  3000               	movlw	0
 18769  1189  3DD3               	addwfc	___fldiv@new_exp+1,f
 18770  118A                     l4984:	
 18771  118A  0853               	movf	___fldiv@new_exp+1,w
 18772  118B  3A80               	xorlw	128
 18773  118C  00C8               	movwf	??___fldiv
 18774  118D  3080               	movlw	128
 18775  118E  0248               	subwf	??___fldiv,w
 18776  118F  1D03               	skipz
 18777  1190  2993               	goto	u6625
 18778  1191  30FF               	movlw	255
 18779  1192  0252               	subwf	___fldiv@new_exp,w
 18780  1193                     u6625:	
 18781  1193  1C03               	skipc
 18782  1194  29A2               	goto	l1232
 18783  1195  30FF               	movlw	255
 18784  1196  0020               	movlb	0	; select bank0
 18785  1197  00D2               	movwf	___fldiv@new_exp
 18786  1198  3000               	movlw	0
 18787  1199  00D3               	movwf	___fldiv@new_exp+1
 18788  119A  3000               	movlw	0
 18789  119B  00C7               	movwf	___fldiv@b+3
 18790  119C  3000               	movlw	0
 18791  119D  00C6               	movwf	___fldiv@b+2
 18792  119E  3000               	movlw	0
 18793  119F  00C5               	movwf	___fldiv@b+1
 18794  11A0  3000               	movlw	0
 18795  11A1  00C4               	movwf	___fldiv@b
 18796  11A2                     l1232:	
 18797  11A2  0020               	movlb	0	; select bank0
 18798  11A3  0853               	movf	___fldiv@new_exp+1,w
 18799  11A4  3A80               	xorlw	128
 18800  11A5  00C8               	movwf	??___fldiv
 18801  11A6  3080               	movlw	128
 18802  11A7  0248               	subwf	??___fldiv,w
 18803  11A8  1D03               	skipz
 18804  11A9  29AC               	goto	u6635
 18805  11AA  3001               	movlw	1
 18806  11AB  0252               	subwf	___fldiv@new_exp,w
 18807  11AC                     u6635:	
 18808  11AC  1803               	skipnc
 18809  11AD  29BA               	goto	l1233
 18810  11AE  0020               	movlb	0	; select bank0
 18811  11AF  01D2               	clrf	___fldiv@new_exp
 18812  11B0  01D3               	clrf	___fldiv@new_exp+1
 18813  11B1  3000               	movlw	0
 18814  11B2  00C7               	movwf	___fldiv@b+3
 18815  11B3  3000               	movlw	0
 18816  11B4  00C6               	movwf	___fldiv@b+2
 18817  11B5  3000               	movlw	0
 18818  11B6  00C5               	movwf	___fldiv@b+1
 18819  11B7  3000               	movlw	0
 18820  11B8  00C4               	movwf	___fldiv@b
 18821  11B9  01D1               	clrf	___fldiv@sign
 18822  11BA                     l1233:	
 18823  11BA  0020               	movlb	0	; select bank0
 18824  11BB  0852               	movf	___fldiv@new_exp,w
 18825  11BC  00C8               	movwf	??___fldiv
 18826  11BD  0848               	movf	??___fldiv,w
 18827  11BE  00D8               	movwf	___fldiv@bexp
 18828  11BF  1C58               	btfss	___fldiv@bexp,0
 18829  11C0  29C3               	goto	l4998
 18830  11C1  17C6               	bsf	___fldiv@b+2,7
 18831  11C2  29C7               	goto	l1235
 18832  11C3                     l4998:	
 18833  11C3  307F               	movlw	127
 18834  11C4  00C8               	movwf	??___fldiv
 18835  11C5  0848               	movf	??___fldiv,w
 18836  11C6  05C6               	andwf	___fldiv@b+2,f
 18837  11C7                     l1235:	
 18838  11C7  3658               	lsrf	___fldiv@bexp,w
 18839  11C8  00C8               	movwf	??___fldiv
 18840  11C9  0848               	movf	??___fldiv,w
 18841  11CA  00C7               	movwf	___fldiv@b+3
 18842  11CB  28AD               	goto	L14
 18843  11CC                     __end_of___fldiv:	
 18844                           
 18845                           	psect	text70
 18846  332D                     __ptext70:	
 18847 ;; *************** function _init_TMR1 *****************
 18848 ;; Defined at:
 18849 ;;		line 172 in file "main.c"
 18850 ;; Parameters:    Size  Location     Type
 18851 ;;		None
 18852 ;; Auto vars:     Size  Location     Type
 18853 ;;		None
 18854 ;; Return value:  Size  Location     Type
 18855 ;;                  1    wreg      void 
 18856 ;; Registers used:
 18857 ;;		wreg, status,2, status,0
 18858 ;; Tracked objects:
 18859 ;;		On entry : 0/0
 18860 ;;		On exit  : 0/0
 18861 ;;		Unchanged: 0/0
 18862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18867 ;;Total ram usage:        0 bytes
 18868 ;; Hardware stack levels used:    1
 18869 ;; Hardware stack levels required when called:    1
 18870 ;; This function calls:
 18871 ;;		Nothing
 18872 ;; This function is called by:
 18873 ;;		_main
 18874 ;; This function uses a non-reentrant model
 18875 ;;
 18876                           
 18877                           
 18878                           ;psect for function _init_TMR1
 18879  332D                     _init_TMR1:	
 18880                           
 18881                           ;main.c: 175:     T1CONbits.T1CKPS = 0b00;
 18882                           
 18883                           ;incstack = 0
 18884                           ; Regs used in _init_TMR1: [wreg+status,2+status,0]
 18885  332D  30CF               	movlw	-49
 18886  332E  0020               	movlb	0	; select bank0
 18887  332F  0598               	andwf	24,f	;volatile
 18888                           
 18889                           ;main.c: 177:     TMR1 = 0;
 18890  3330  0196               	clrf	22	;volatile
 18891  3331  0197               	clrf	23	;volatile
 18892                           
 18893                           ;main.c: 179:     T1CONbits.TMR1ON = 1;
 18894  3332  1418               	bsf	24,0	;volatile
 18895                           
 18896                           ;main.c: 181:     PIE1bits.TMR1IE = 1;
 18897  3333  0021               	movlb	1	; select bank1
 18898  3334  1411               	bsf	17,0	;volatile
 18899                           
 18900                           ;main.c: 183:     INTCONbits.PEIE = 1;
 18901  3335  170B               	bsf	11,6	;volatile
 18902                           
 18903                           ;main.c: 185:     (INTCONbits.GIE = 1);
 18904  3336  178B               	bsf	11,7	;volatile
 18905  3337  0008               	return
 18906  3338                     __end_of_init_TMR1:	
 18907                           
 18908                           	psect	text71
 18909  1801                     __ptext71:	
 18910 ;; *************** function _init_RGB *****************
 18911 ;; Defined at:
 18912 ;;		line 6 in file "RGB.c"
 18913 ;; Parameters:    Size  Location     Type
 18914 ;;		None
 18915 ;; Auto vars:     Size  Location     Type
 18916 ;;		None
 18917 ;; Return value:  Size  Location     Type
 18918 ;;                  1    wreg      void 
 18919 ;; Registers used:
 18920 ;;		None
 18921 ;; Tracked objects:
 18922 ;;		On entry : 0/0
 18923 ;;		On exit  : 0/0
 18924 ;;		Unchanged: 0/0
 18925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18930 ;;Total ram usage:        0 bytes
 18931 ;; Hardware stack levels used:    1
 18932 ;; Hardware stack levels required when called:    1
 18933 ;; This function calls:
 18934 ;;		Nothing
 18935 ;; This function is called by:
 18936 ;;		_main
 18937 ;; This function uses a non-reentrant model
 18938 ;;
 18939                           
 18940                           
 18941                           ;psect for function _init_RGB
 18942  1801                     _init_RGB:	
 18943                           
 18944                           ;RGB.c: 8:     LATAbits.LATA4 = 1;
 18945                           
 18946                           ;incstack = 0
 18947                           ; Regs used in _init_RGB: []
 18948  1801  0022               	movlb	2	; select bank2
 18949  1802  160C               	bsf	12,4	;volatile
 18950                           
 18951                           ;RGB.c: 9:     LATAbits.LATA5 = 1;
 18952  1803  168C               	bsf	12,5	;volatile
 18953                           
 18954                           ;RGB.c: 10:     LATEbits.LATE0 = 1;
 18955  1804  1410               	bsf	16,0	;volatile
 18956  1805  0008               	return
 18957  1806                     __end_of_init_RGB:	
 18958                           
 18959                           	psect	text72
 18960  3344                     __ptext72:	
 18961 ;; *************** function _init_I2C *****************
 18962 ;; Defined at:
 18963 ;;		line 10 in file "I2C.c"
 18964 ;; Parameters:    Size  Location     Type
 18965 ;;		None
 18966 ;; Auto vars:     Size  Location     Type
 18967 ;;		None
 18968 ;; Return value:  Size  Location     Type
 18969 ;;                  1    wreg      void 
 18970 ;; Registers used:
 18971 ;;		wreg, status,2, status,0
 18972 ;; Tracked objects:
 18973 ;;		On entry : 0/0
 18974 ;;		On exit  : 0/0
 18975 ;;		Unchanged: 0/0
 18976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18979 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18980 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18981 ;;Total ram usage:        1 bytes
 18982 ;; Hardware stack levels used:    1
 18983 ;; Hardware stack levels required when called:    1
 18984 ;; This function calls:
 18985 ;;		Nothing
 18986 ;; This function is called by:
 18987 ;;		_main
 18988 ;; This function uses a non-reentrant model
 18989 ;;
 18990                           
 18991                           
 18992                           ;psect for function _init_I2C
 18993  3344                     _init_I2C:	
 18994                           
 18995                           ;I2C.c: 14:     SSPCONbits.SSPM = 0x08;
 18996                           
 18997                           ;incstack = 0
 18998                           ; Regs used in _init_I2C: [wreg+status,2+status,0]
 18999  3344  0024               	movlb	4	; select bank4
 19000  3345  0815               	movf	21,w	;volatile
 19001  3346  39F0               	andlw	-16
 19002  3347  3808               	iorlw	8
 19003  3348  0095               	movwf	21	;volatile
 19004                           
 19005                           ;I2C.c: 15:     SSPCONbits.SSPEN = 1;
 19006  3349  1695               	bsf	21,5	;volatile
 19007                           
 19008                           ;I2C.c: 24:     SSPADD = 39;
 19009  334A  3027               	movlw	39
 19010  334B  0092               	movwf	18	;volatile
 19011                           
 19012                           ;I2C.c: 27:     _delay((unsigned long)((10)*(16000000/4000.0)));
 19013  334C  3034               	movlw	52
 19014  334D  00F1               	movwf	??_init_I2C
 19015  334E  30F2               	movlw	242
 19016  334F                     u11947:	
 19017  334F  0B89               	decfsz	9,f
 19018  3350  2B4F               	goto	u11947
 19019  3351  0BF1               	decfsz	??_init_I2C,f
 19020  3352  2B4F               	goto	u11947
 19021  3353  0008               	return
 19022  3354                     __end_of_init_I2C:	
 19023                           
 19024                           	psect	text73
 19025  1806                     __ptext73:	
 19026 ;; *************** function _init_GPIO *****************
 19027 ;; Defined at:
 19028 ;;		line 189 in file "main.c"
 19029 ;; Parameters:    Size  Location     Type
 19030 ;;		None
 19031 ;; Auto vars:     Size  Location     Type
 19032 ;;		None
 19033 ;; Return value:  Size  Location     Type
 19034 ;;                  1    wreg      void 
 19035 ;; Registers used:
 19036 ;;		wreg, status,2, status,0
 19037 ;; Tracked objects:
 19038 ;;		On entry : 0/0
 19039 ;;		On exit  : 0/0
 19040 ;;		Unchanged: 0/0
 19041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19046 ;;Total ram usage:        0 bytes
 19047 ;; Hardware stack levels used:    1
 19048 ;; Hardware stack levels required when called:    1
 19049 ;; This function calls:
 19050 ;;		Nothing
 19051 ;; This function is called by:
 19052 ;;		_main
 19053 ;; This function uses a non-reentrant model
 19054 ;;
 19055                           
 19056                           
 19057                           ;psect for function _init_GPIO
 19058  1806                     _init_GPIO:	
 19059                           
 19060                           ;main.c: 195:     TRISBbits.TRISB2 = 0;
 19061                           
 19062                           ;incstack = 0
 19063                           ; Regs used in _init_GPIO: [wreg+status,2+status,0]
 19064  1806  0021               	movlb	1	; select bank1
 19065  1807  110D               	bcf	13,2	;volatile
 19066                           
 19067                           ;main.c: 196:     ANSELBbits.ANSB2 = 0;
 19068  1808  0023               	movlb	3	; select bank3
 19069  1809  110D               	bcf	13,2	;volatile
 19070                           
 19071                           ;main.c: 197:     TRISBbits.TRISB3 = 1;
 19072  180A  0021               	movlb	1	; select bank1
 19073  180B  158D               	bsf	13,3	;volatile
 19074                           
 19075                           ;main.c: 198:     ANSELBbits.ANSB3 = 0;
 19076  180C  0023               	movlb	3	; select bank3
 19077  180D  118D               	bcf	13,3	;volatile
 19078                           
 19079                           ;main.c: 203:     ANSELCbits.ANSC4 = 0;
 19080  180E  120E               	bcf	14,4	;volatile
 19081                           
 19082                           ;main.c: 204:     ANSELCbits.ANSC5 = 0;
 19083  180F  128E               	bcf	14,5	;volatile
 19084                           
 19085                           ;main.c: 205:     TRISCbits.TRISC4 = 1;
 19086  1810  0021               	movlb	1	; select bank1
 19087  1811  160E               	bsf	14,4	;volatile
 19088                           
 19089                           ;main.c: 206:     TRISCbits.TRISC5 = 1;
 19090  1812  168E               	bsf	14,5	;volatile
 19091                           
 19092                           ;main.c: 215:     TRISAbits.TRISA4 = 0;
 19093  1813  120C               	bcf	12,4	;volatile
 19094                           
 19095                           ;main.c: 216:     TRISAbits.TRISA5 = 0;
 19096  1814  128C               	bcf	12,5	;volatile
 19097                           
 19098                           ;main.c: 217:     TRISEbits.TRISE0 = 0;
 19099  1815  1010               	bcf	16,0	;volatile
 19100                           
 19101                           ;main.c: 223:     PPSLOCK = 0x55;
 19102  1816  3055               	movlw	85
 19103  1817  003C               	movlb	28	; select bank28
 19104  1818  008F               	movwf	15	;volsfr
 19105                           
 19106                           ;main.c: 224:     PPSLOCK = 0xAA;
 19107  1819  30AA               	movlw	170
 19108  181A  008F               	movwf	15	;volsfr
 19109                           
 19110                           ;main.c: 225:     PPSLOCKbits.PPSLOCKED = 0x00;
 19111  181B  100F               	bcf	15,0	;volsfr
 19112                           
 19113                           ;main.c: 229:     RC4PPSbits.RC4PPS = 0x0011;
 19114  181C  003D               	movlb	29	; select bank29
 19115  181D  0824               	movf	36,w	;volatile
 19116  181E  39E0               	andlw	-32
 19117  181F  3811               	iorlw	17
 19118  1820  00A4               	movwf	36	;volatile
 19119                           
 19120                           ;main.c: 230:     SSPDATPPSbits.SSPDATPPS = 0x0014;
 19121  1821  003C               	movlb	28	; select bank28
 19122  1822  0821               	movf	33,w	;volatile
 19123  1823  39E0               	andlw	-32
 19124  1824  3814               	iorlw	20
 19125  1825  00A1               	movwf	33	;volatile
 19126                           
 19127                           ;main.c: 231:     SSPCLKPPSbits.SSPCLKPPS = 0x0015;
 19128  1826  0820               	movf	32,w	;volatile
 19129  1827  39E0               	andlw	-32
 19130  1828  3815               	iorlw	21
 19131  1829  00A0               	movwf	32	;volatile
 19132                           
 19133                           ;main.c: 232:     RC5PPSbits.RC5PPS = 0x0010;
 19134  182A  003D               	movlb	29	; select bank29
 19135  182B  0825               	movf	37,w	;volatile
 19136  182C  39E0               	andlw	-32
 19137  182D  3810               	iorlw	16
 19138  182E  00A5               	movwf	37	;volatile
 19139                           
 19140                           ;main.c: 235:     RB2PPSbits.RB2PPS = 0x14;
 19141  182F  081A               	movf	26,w	;volatile
 19142  1830  39E0               	andlw	-32
 19143  1831  3814               	iorlw	20
 19144  1832  009A               	movwf	26	;volatile
 19145                           
 19146                           ;main.c: 236:     RXPPSbits.RXPPS = 0x0B;
 19147  1833  003C               	movlb	28	; select bank28
 19148  1834  0824               	movf	36,w	;volatile
 19149  1835  39E0               	andlw	-32
 19150  1836  380B               	iorlw	11
 19151  1837  00A4               	movwf	36	;volatile
 19152                           
 19153                           ;main.c: 238:     PPSLOCK = 0x55;
 19154  1838  3055               	movlw	85
 19155  1839  008F               	movwf	15	;volsfr
 19156                           
 19157                           ;main.c: 239:     PPSLOCK = 0xAA;
 19158  183A  30AA               	movlw	170
 19159  183B  008F               	movwf	15	;volsfr
 19160                           
 19161                           ;main.c: 240:     PPSLOCKbits.PPSLOCKED = 0x01;
 19162  183C  140F               	bsf	15,0	;volsfr
 19163  183D  0008               	return
 19164  183E                     __end_of_init_GPIO:	
 19165                           
 19166                           	psect	text74
 19167  2801                     __ptext74:	
 19168 ;; *************** function _initClock *****************
 19169 ;; Defined at:
 19170 ;;		line 163 in file "main.c"
 19171 ;; Parameters:    Size  Location     Type
 19172 ;;		None
 19173 ;; Auto vars:     Size  Location     Type
 19174 ;;		None
 19175 ;; Return value:  Size  Location     Type
 19176 ;;                  1    wreg      void 
 19177 ;; Registers used:
 19178 ;;		status,2, status,0, pclath, cstack
 19179 ;; Tracked objects:
 19180 ;;		On entry : 0/0
 19181 ;;		On exit  : 0/0
 19182 ;;		Unchanged: 0/0
 19183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19188 ;;Total ram usage:        0 bytes
 19189 ;; Hardware stack levels used:    1
 19190 ;; Hardware stack levels required when called:    2
 19191 ;; This function calls:
 19192 ;;		_internal_16
 19193 ;; This function is called by:
 19194 ;;		_main
 19195 ;; This function uses a non-reentrant model
 19196 ;;
 19197                           
 19198                           
 19199                           ;psect for function _initClock
 19200  2801                     _initClock:	
 19201                           
 19202                           ;main.c: 165:     internal_16();
 19203                           
 19204                           ;incstack = 0
 19205                           ; Regs used in _initClock: [status,2+status,0+pclath+cstack]
 19206  2801  31B2  22EB         	fcall	_internal_16
 19207  2803  0008               	return
 19208  2804                     __end_of_initClock:	
 19209                           
 19210                           	psect	text75
 19211  32EB                     __ptext75:	
 19212 ;; *************** function _internal_16 *****************
 19213 ;; Defined at:
 19214 ;;		line 26 in file "pic16f1719_internals.c"
 19215 ;; Parameters:    Size  Location     Type
 19216 ;;		None
 19217 ;; Auto vars:     Size  Location     Type
 19218 ;;		None
 19219 ;; Return value:  Size  Location     Type
 19220 ;;                  1    wreg      void 
 19221 ;; Registers used:
 19222 ;;		None
 19223 ;; Tracked objects:
 19224 ;;		On entry : 0/0
 19225 ;;		On exit  : 0/0
 19226 ;;		Unchanged: 0/0
 19227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19232 ;;Total ram usage:        0 bytes
 19233 ;; Hardware stack levels used:    1
 19234 ;; Hardware stack levels required when called:    1
 19235 ;; This function calls:
 19236 ;;		Nothing
 19237 ;; This function is called by:
 19238 ;;		_initClock
 19239 ;; This function uses a non-reentrant model
 19240 ;;
 19241                           
 19242                           
 19243                           ;psect for function _internal_16
 19244  32EB                     _internal_16:	
 19245                           
 19246                           ;pic16f1719_internals.c: 28: SCS0 = 0;
 19247                           
 19248                           ;incstack = 0
 19249                           ; Regs used in _internal_16: []
 19250  32EB  0021               	movlb	1	; select bank1
 19251  32EC  1019               	bcf	25,0	;volatile
 19252                           
 19253                           ;pic16f1719_internals.c: 29: SCS1 = 0;
 19254  32ED  1099               	bcf	25,1	;volatile
 19255                           
 19256                           ;pic16f1719_internals.c: 31: IRCF0 = 1;
 19257  32EE  1599               	bsf	25,3	;volatile
 19258                           
 19259                           ;pic16f1719_internals.c: 32: IRCF1 = 1;
 19260  32EF  1619               	bsf	25,4	;volatile
 19261                           
 19262                           ;pic16f1719_internals.c: 33: IRCF2 = 1;
 19263  32F0  1699               	bsf	25,5	;volatile
 19264                           
 19265                           ;pic16f1719_internals.c: 34: IRCF3 = 1;
 19266  32F1  1719               	bsf	25,6	;volatile
 19267                           
 19268                           ;pic16f1719_internals.c: 36: SPLLEN = 0;
 19269  32F2  1399               	bcf	25,7	;volatile
 19270  32F3  0008               	return
 19271  32F4                     __end_of_internal_16:	
 19272                           
 19273                           	psect	text76
 19274  2EA4                     __ptext76:	
 19275 ;; *************** function _EUSART_Initialize *****************
 19276 ;; Defined at:
 19277 ;;		line 6 in file "EUSART.c"
 19278 ;; Parameters:    Size  Location     Type
 19279 ;;  baudrate        4    6[BANK0 ] const long 
 19280 ;; Auto vars:     Size  Location     Type
 19281 ;;  x               2   10[COMMON] unsigned int 
 19282 ;; Return value:  Size  Location     Type
 19283 ;;                  1    wreg      unsigned char 
 19284 ;; Registers used:
 19285 ;;		wreg, status,2, status,0, pclath, cstack
 19286 ;; Tracked objects:
 19287 ;;		On entry : 0/0
 19288 ;;		On exit  : 0/0
 19289 ;;		Unchanged: 0/0
 19290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19291 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19292 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19293 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19294 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19295 ;;Total ram usage:       18 bytes
 19296 ;; Hardware stack levels used:    1
 19297 ;; Hardware stack levels required when called:    2
 19298 ;; This function calls:
 19299 ;;		___aldiv
 19300 ;; This function is called by:
 19301 ;;		_main
 19302 ;; This function uses a non-reentrant model
 19303 ;;
 19304                           
 19305                           
 19306                           ;psect for function _EUSART_Initialize
 19307  2EA4                     _EUSART_Initialize:	
 19308                           
 19309                           ;EUSART.c: 6: char EUSART_Initialize(const long int baudrate);EUSART.c: 7: {;EUSART.c: 8
      +                          :  unsigned int x;;EUSART.c: 9:  x = (16000000 - baudrate*64)/(baudrate*64);
 19310                           
 19311                           ;incstack = 0
 19312                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 19313  2EA4  0020               	movlb	0	; select bank0
 19314  2EA5  0826               	movf	EUSART_Initialize@baudrate,w
 19315  2EA6  00AA               	movwf	??_EUSART_Initialize
 19316  2EA7  0827               	movf	EUSART_Initialize@baudrate+1,w
 19317  2EA8  00AB               	movwf	??_EUSART_Initialize+1
 19318  2EA9  0828               	movf	EUSART_Initialize@baudrate+2,w
 19319  2EAA  00AC               	movwf	??_EUSART_Initialize+2
 19320  2EAB  0829               	movf	EUSART_Initialize@baudrate+3,w
 19321  2EAC  00AD               	movwf	??_EUSART_Initialize+3
 19322  2EAD  3006               	movlw	6
 19323  2EAE                     u9305:	
 19324  2EAE  35AA               	lslf	??_EUSART_Initialize,f
 19325  2EAF  0DAB               	rlf	??_EUSART_Initialize+1,f
 19326  2EB0  0DAC               	rlf	??_EUSART_Initialize+2,f
 19327  2EB1  0DAD               	rlf	??_EUSART_Initialize+3,f
 19328  2EB2  0B89               	decfsz	9,f
 19329  2EB3  2EAE               	goto	u9305
 19330  2EB4  082D               	movf	??_EUSART_Initialize+3,w
 19331  2EB5  00F4               	movwf	___aldiv@divisor+3
 19332  2EB6  082C               	movf	??_EUSART_Initialize+2,w
 19333  2EB7  00F3               	movwf	___aldiv@divisor+2
 19334  2EB8  082B               	movf	??_EUSART_Initialize+1,w
 19335  2EB9  00F2               	movwf	___aldiv@divisor+1
 19336  2EBA  082A               	movf	??_EUSART_Initialize,w
 19337  2EBB  00F1               	movwf	___aldiv@divisor
 19338  2EBC  0826               	movf	EUSART_Initialize@baudrate,w
 19339  2EBD  00AE               	movwf	??_EUSART_Initialize+4
 19340  2EBE  0827               	movf	EUSART_Initialize@baudrate+1,w
 19341  2EBF  00AF               	movwf	??_EUSART_Initialize+5
 19342  2EC0  0828               	movf	EUSART_Initialize@baudrate+2,w
 19343  2EC1  00B0               	movwf	??_EUSART_Initialize+6
 19344  2EC2  0829               	movf	EUSART_Initialize@baudrate+3,w
 19345  2EC3  00B1               	movwf	??_EUSART_Initialize+7
 19346  2EC4  3006               	movlw	6
 19347  2EC5                     u9315:	
 19348  2EC5  35AE               	lslf	??_EUSART_Initialize+4,f
 19349  2EC6  0DAF               	rlf	??_EUSART_Initialize+5,f
 19350  2EC7  0DB0               	rlf	??_EUSART_Initialize+6,f
 19351  2EC8  0DB1               	rlf	??_EUSART_Initialize+7,f
 19352  2EC9  0B89               	decfsz	9,f
 19353  2ECA  2EC5               	goto	u9315
 19354  2ECB  3000               	movlw	0
 19355  2ECC  00B2               	movwf	??_EUSART_Initialize+8
 19356  2ECD  3024               	movlw	36
 19357  2ECE  00B3               	movwf	??_EUSART_Initialize+9
 19358  2ECF  30F4               	movlw	244
 19359  2ED0  00B4               	movwf	??_EUSART_Initialize+10
 19360  2ED1  3000               	movlw	0
 19361  2ED2  00B5               	movwf	??_EUSART_Initialize+11
 19362  2ED3  082E               	movf	??_EUSART_Initialize+4,w
 19363  2ED4  02B2               	subwf	??_EUSART_Initialize+8,f
 19364  2ED5  082F               	movf	??_EUSART_Initialize+5,w
 19365  2ED6  3BB3               	subwfb	??_EUSART_Initialize+9,f
 19366  2ED7  0830               	movf	??_EUSART_Initialize+6,w
 19367  2ED8  3BB4               	subwfb	??_EUSART_Initialize+10,f
 19368  2ED9  0831               	movf	??_EUSART_Initialize+7,w
 19369  2EDA  3BB5               	subwfb	??_EUSART_Initialize+11,f
 19370  2EDB  0835               	movf	??_EUSART_Initialize+11,w
 19371  2EDC  00F8               	movwf	___aldiv@dividend+3
 19372  2EDD  0834               	movf	??_EUSART_Initialize+10,w
 19373  2EDE  00F7               	movwf	___aldiv@dividend+2
 19374  2EDF  0833               	movf	??_EUSART_Initialize+9,w
 19375  2EE0  00F6               	movwf	___aldiv@dividend+1
 19376  2EE1  0832               	movf	??_EUSART_Initialize+8,w
 19377  2EE2  00F5               	movwf	___aldiv@dividend
 19378  2EE3  31AB  233C  31AE   	fcall	___aldiv
 19379  2EE6  0872               	movf	?___aldiv+1,w
 19380  2EE7  00FB               	movwf	EUSART_Initialize@x+1
 19381  2EE8  0871               	movf	?___aldiv,w
 19382  2EE9  00FA               	movwf	EUSART_Initialize@x
 19383                           
 19384                           ;EUSART.c: 10:  if(x>255)
 19385  2EEA  3001               	movlw	1
 19386  2EEB  027B               	subwf	EUSART_Initialize@x+1,w
 19387  2EEC  3000               	movlw	0
 19388  2EED  1903               	skipnz
 19389  2EEE  027A               	subwf	EUSART_Initialize@x,w
 19390  2EEF  1C03               	skipc
 19391  2EF0  2F39               	goto	l6646
 19392                           
 19393                           ;EUSART.c: 11:  {;EUSART.c: 12:   x = (16000000 - baudrate*16)/(baudrate*16);
 19394  2EF1  0020               	movlb	0	; select bank0
 19395  2EF2  0826               	movf	EUSART_Initialize@baudrate,w
 19396  2EF3  00AA               	movwf	??_EUSART_Initialize
 19397  2EF4  0827               	movf	EUSART_Initialize@baudrate+1,w
 19398  2EF5  00AB               	movwf	??_EUSART_Initialize+1
 19399  2EF6  0828               	movf	EUSART_Initialize@baudrate+2,w
 19400  2EF7  00AC               	movwf	??_EUSART_Initialize+2
 19401  2EF8  0829               	movf	EUSART_Initialize@baudrate+3,w
 19402  2EF9  00AD               	movwf	??_EUSART_Initialize+3
 19403  2EFA  3004               	movlw	4
 19404  2EFB                     u9335:	
 19405  2EFB  35AA               	lslf	??_EUSART_Initialize,f
 19406  2EFC  0DAB               	rlf	??_EUSART_Initialize+1,f
 19407  2EFD  0DAC               	rlf	??_EUSART_Initialize+2,f
 19408  2EFE  0DAD               	rlf	??_EUSART_Initialize+3,f
 19409  2EFF  0B89               	decfsz	9,f
 19410  2F00  2EFB               	goto	u9335
 19411  2F01  082D               	movf	??_EUSART_Initialize+3,w
 19412  2F02  00F4               	movwf	___aldiv@divisor+3
 19413  2F03  082C               	movf	??_EUSART_Initialize+2,w
 19414  2F04  00F3               	movwf	___aldiv@divisor+2
 19415  2F05  082B               	movf	??_EUSART_Initialize+1,w
 19416  2F06  00F2               	movwf	___aldiv@divisor+1
 19417  2F07  082A               	movf	??_EUSART_Initialize,w
 19418  2F08  00F1               	movwf	___aldiv@divisor
 19419  2F09  0826               	movf	EUSART_Initialize@baudrate,w
 19420  2F0A  00AE               	movwf	??_EUSART_Initialize+4
 19421  2F0B  0827               	movf	EUSART_Initialize@baudrate+1,w
 19422  2F0C  00AF               	movwf	??_EUSART_Initialize+5
 19423  2F0D  0828               	movf	EUSART_Initialize@baudrate+2,w
 19424  2F0E  00B0               	movwf	??_EUSART_Initialize+6
 19425  2F0F  0829               	movf	EUSART_Initialize@baudrate+3,w
 19426  2F10  00B1               	movwf	??_EUSART_Initialize+7
 19427  2F11  3004               	movlw	4
 19428  2F12                     u9345:	
 19429  2F12  35AE               	lslf	??_EUSART_Initialize+4,f
 19430  2F13  0DAF               	rlf	??_EUSART_Initialize+5,f
 19431  2F14  0DB0               	rlf	??_EUSART_Initialize+6,f
 19432  2F15  0DB1               	rlf	??_EUSART_Initialize+7,f
 19433  2F16  0B89               	decfsz	9,f
 19434  2F17  2F12               	goto	u9345
 19435  2F18  3000               	movlw	0
 19436  2F19  00B2               	movwf	??_EUSART_Initialize+8
 19437  2F1A  3024               	movlw	36
 19438  2F1B  00B3               	movwf	??_EUSART_Initialize+9
 19439  2F1C  30F4               	movlw	244
 19440  2F1D  00B4               	movwf	??_EUSART_Initialize+10
 19441  2F1E  3000               	movlw	0
 19442  2F1F  00B5               	movwf	??_EUSART_Initialize+11
 19443  2F20  082E               	movf	??_EUSART_Initialize+4,w
 19444  2F21  02B2               	subwf	??_EUSART_Initialize+8,f
 19445  2F22  082F               	movf	??_EUSART_Initialize+5,w
 19446  2F23  3BB3               	subwfb	??_EUSART_Initialize+9,f
 19447  2F24  0830               	movf	??_EUSART_Initialize+6,w
 19448  2F25  3BB4               	subwfb	??_EUSART_Initialize+10,f
 19449  2F26  0831               	movf	??_EUSART_Initialize+7,w
 19450  2F27  3BB5               	subwfb	??_EUSART_Initialize+11,f
 19451  2F28  0835               	movf	??_EUSART_Initialize+11,w
 19452  2F29  00F8               	movwf	___aldiv@dividend+3
 19453  2F2A  0834               	movf	??_EUSART_Initialize+10,w
 19454  2F2B  00F7               	movwf	___aldiv@dividend+2
 19455  2F2C  0833               	movf	??_EUSART_Initialize+9,w
 19456  2F2D  00F6               	movwf	___aldiv@dividend+1
 19457  2F2E  0832               	movf	??_EUSART_Initialize+8,w
 19458  2F2F  00F5               	movwf	___aldiv@dividend
 19459  2F30  31AB  233C  31AE   	fcall	___aldiv
 19460  2F33  0872               	movf	?___aldiv+1,w
 19461  2F34  00FB               	movwf	EUSART_Initialize@x+1
 19462  2F35  0871               	movf	?___aldiv,w
 19463  2F36  00FA               	movwf	EUSART_Initialize@x
 19464                           
 19465                           ;EUSART.c: 13:   BRGH = 1;
 19466  2F37  0023               	movlb	3	; select bank3
 19467  2F38  151E               	bsf	30,2	;volatile
 19468  2F39                     l6646:	
 19469                           
 19470                           ;EUSART.c: 15:  if(x<256)
 19471  2F39  3001               	movlw	1
 19472  2F3A  027B               	subwf	EUSART_Initialize@x+1,w
 19473  2F3B  3000               	movlw	0
 19474  2F3C  1903               	skipnz
 19475  2F3D  027A               	subwf	EUSART_Initialize@x,w
 19476  2F3E  1803               	skipnc
 19477  2F3F  0008               	return
 19478                           
 19479                           ;EUSART.c: 16:  {;EUSART.c: 17:    SPBRG = x;
 19480  2F40  087A               	movf	EUSART_Initialize@x,w
 19481  2F41  0023               	movlb	3	; select bank3
 19482  2F42  009B               	movwf	27	;volatile
 19483                           
 19484                           ;EUSART.c: 18:    SYNC = 0;
 19485  2F43  121E               	bcf	30,4	;volatile
 19486                           
 19487                           ;EUSART.c: 19:    SPEN = 1;
 19488  2F44  179D               	bsf	29,7	;volatile
 19489                           
 19490                           ;EUSART.c: 20:           TRISC7 = 1;
 19491  2F45  0021               	movlb	1	; select bank1
 19492  2F46  178E               	bsf	14,7	;volatile
 19493                           
 19494                           ;EUSART.c: 21:           TRISC6 = 1;
 19495  2F47  170E               	bsf	14,6	;volatile
 19496                           
 19497                           ;EUSART.c: 22:           CREN = 1;
 19498  2F48  0023               	movlb	3	; select bank3
 19499  2F49  161D               	bsf	29,4	;volatile
 19500                           
 19501                           ;EUSART.c: 23:           TXEN = 1;
 19502  2F4A  169E               	bsf	30,5	;volatile
 19503  2F4B  0008               	return
 19504  2F4C                     __end_of_EUSART_Initialize:	
 19505                           
 19506                           	psect	text77
 19507  2B3C                     __ptext77:	
 19508 ;; *************** function ___aldiv *****************
 19509 ;; Defined at:
 19510 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
 19511 ;; Parameters:    Size  Location     Type
 19512 ;;  divisor         4    1[COMMON] long 
 19513 ;;  dividend        4    5[COMMON] long 
 19514 ;; Auto vars:     Size  Location     Type
 19515 ;;  quotient        4    2[BANK0 ] long 
 19516 ;;  sign            1    1[BANK0 ] unsigned char 
 19517 ;;  counter         1    0[BANK0 ] unsigned char 
 19518 ;; Return value:  Size  Location     Type
 19519 ;;                  4    1[COMMON] long 
 19520 ;; Registers used:
 19521 ;;		wreg, status,2, status,0
 19522 ;; Tracked objects:
 19523 ;;		On entry : 0/0
 19524 ;;		On exit  : 0/0
 19525 ;;		Unchanged: 0/0
 19526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19527 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19528 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19529 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19530 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19531 ;;Total ram usage:       15 bytes
 19532 ;; Hardware stack levels used:    1
 19533 ;; Hardware stack levels required when called:    1
 19534 ;; This function calls:
 19535 ;;		Nothing
 19536 ;; This function is called by:
 19537 ;;		_EUSART_Initialize
 19538 ;; This function uses a non-reentrant model
 19539 ;;
 19540                           
 19541                           
 19542                           ;psect for function ___aldiv
 19543  2B3C                     ___aldiv:	
 19544                           
 19545                           ;incstack = 0
 19546                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 19547  2B3C  0020               	movlb	0	; select bank0
 19548  2B3D  01A1               	clrf	___aldiv@sign
 19549  2B3E  1FF4               	btfss	___aldiv@divisor+3,7
 19550  2B3F  2B4D               	goto	l919
 19551  2B40  09F1               	comf	___aldiv@divisor,f
 19552  2B41  09F2               	comf	___aldiv@divisor+1,f
 19553  2B42  09F3               	comf	___aldiv@divisor+2,f
 19554  2B43  09F4               	comf	___aldiv@divisor+3,f
 19555  2B44  0AF1               	incf	___aldiv@divisor,f
 19556  2B45  1903               	skipnz
 19557  2B46  0AF2               	incf	___aldiv@divisor+1,f
 19558  2B47  1903               	skipnz
 19559  2B48  0AF3               	incf	___aldiv@divisor+2,f
 19560  2B49  1903               	skipnz
 19561  2B4A  0AF4               	incf	___aldiv@divisor+3,f
 19562  2B4B  01A1               	clrf	___aldiv@sign
 19563  2B4C  0AA1               	incf	___aldiv@sign,f
 19564  2B4D                     l919:	
 19565  2B4D  1FF8               	btfss	___aldiv@dividend+3,7
 19566  2B4E  2B5E               	goto	l6608
 19567  2B4F  09F5               	comf	___aldiv@dividend,f
 19568  2B50  09F6               	comf	___aldiv@dividend+1,f
 19569  2B51  09F7               	comf	___aldiv@dividend+2,f
 19570  2B52  09F8               	comf	___aldiv@dividend+3,f
 19571  2B53  0AF5               	incf	___aldiv@dividend,f
 19572  2B54  1903               	skipnz
 19573  2B55  0AF6               	incf	___aldiv@dividend+1,f
 19574  2B56  1903               	skipnz
 19575  2B57  0AF7               	incf	___aldiv@dividend+2,f
 19576  2B58  1903               	skipnz
 19577  2B59  0AF8               	incf	___aldiv@dividend+3,f
 19578  2B5A  3001               	movlw	1
 19579  2B5B  00F9               	movwf	??___aldiv
 19580  2B5C  0879               	movf	??___aldiv,w
 19581  2B5D  06A1               	xorwf	___aldiv@sign,f
 19582  2B5E                     l6608:	
 19583  2B5E  3000               	movlw	0
 19584  2B5F  00A5               	movwf	___aldiv@quotient+3
 19585  2B60  3000               	movlw	0
 19586  2B61  00A4               	movwf	___aldiv@quotient+2
 19587  2B62  3000               	movlw	0
 19588  2B63  00A3               	movwf	___aldiv@quotient+1
 19589  2B64  3000               	movlw	0
 19590  2B65  00A2               	movwf	___aldiv@quotient
 19591  2B66  0874               	movf	___aldiv@divisor+3,w
 19592  2B67  0473               	iorwf	___aldiv@divisor+2,w
 19593  2B68  0472               	iorwf	___aldiv@divisor+1,w
 19594  2B69  0471               	iorwf	___aldiv@divisor,w
 19595  2B6A  1903               	skipnz
 19596  2B6B  2BA7               	goto	l6630
 19597  2B6C  01A0               	clrf	___aldiv@counter
 19598  2B6D  0AA0               	incf	___aldiv@counter,f
 19599  2B6E                     l6616:	
 19600  2B6E  1BF4               	btfsc	___aldiv@divisor+3,7
 19601  2B6F  2B7C               	goto	l6618
 19602  2B70  3001               	movlw	1
 19603  2B71                     u9235:	
 19604  2B71  35F1               	lslf	___aldiv@divisor,f
 19605  2B72  0DF2               	rlf	___aldiv@divisor+1,f
 19606  2B73  0DF3               	rlf	___aldiv@divisor+2,f
 19607  2B74  0DF4               	rlf	___aldiv@divisor+3,f
 19608  2B75  0B89               	decfsz	9,f
 19609  2B76  2B71               	goto	u9235
 19610  2B77  3001               	movlw	1
 19611  2B78  00F9               	movwf	??___aldiv
 19612  2B79  0879               	movf	??___aldiv,w
 19613  2B7A  07A0               	addwf	___aldiv@counter,f
 19614  2B7B  2B6E               	goto	l6616
 19615  2B7C                     l6618:	
 19616  2B7C  3001               	movlw	1
 19617  2B7D                     u9255:	
 19618  2B7D  35A2               	lslf	___aldiv@quotient,f
 19619  2B7E  0DA3               	rlf	___aldiv@quotient+1,f
 19620  2B7F  0DA4               	rlf	___aldiv@quotient+2,f
 19621  2B80  0DA5               	rlf	___aldiv@quotient+3,f
 19622  2B81  0B89               	decfsz	9,f
 19623  2B82  2B7D               	goto	u9255
 19624  2B83  0874               	movf	___aldiv@divisor+3,w
 19625  2B84  0278               	subwf	___aldiv@dividend+3,w
 19626  2B85  1D03               	skipz
 19627  2B86  2B91               	goto	u9265
 19628  2B87  0873               	movf	___aldiv@divisor+2,w
 19629  2B88  0277               	subwf	___aldiv@dividend+2,w
 19630  2B89  1D03               	skipz
 19631  2B8A  2B91               	goto	u9265
 19632  2B8B  0872               	movf	___aldiv@divisor+1,w
 19633  2B8C  0276               	subwf	___aldiv@dividend+1,w
 19634  2B8D  1D03               	skipz
 19635  2B8E  2B91               	goto	u9265
 19636  2B8F  0871               	movf	___aldiv@divisor,w
 19637  2B90  0275               	subwf	___aldiv@dividend,w
 19638  2B91                     u9265:	
 19639  2B91  1C03               	skipc
 19640  2B92  2B9C               	goto	l6626
 19641  2B93  0871               	movf	___aldiv@divisor,w
 19642  2B94  02F5               	subwf	___aldiv@dividend,f
 19643  2B95  0872               	movf	___aldiv@divisor+1,w
 19644  2B96  3BF6               	subwfb	___aldiv@dividend+1,f
 19645  2B97  0873               	movf	___aldiv@divisor+2,w
 19646  2B98  3BF7               	subwfb	___aldiv@dividend+2,f
 19647  2B99  0874               	movf	___aldiv@divisor+3,w
 19648  2B9A  3BF8               	subwfb	___aldiv@dividend+3,f
 19649  2B9B  1422               	bsf	___aldiv@quotient,0
 19650  2B9C                     l6626:	
 19651  2B9C  3001               	movlw	1
 19652  2B9D                     u9275:	
 19653  2B9D  36F4               	lsrf	___aldiv@divisor+3,f
 19654  2B9E  0CF3               	rrf	___aldiv@divisor+2,f
 19655  2B9F  0CF2               	rrf	___aldiv@divisor+1,f
 19656  2BA0  0CF1               	rrf	___aldiv@divisor,f
 19657  2BA1  0B89               	decfsz	9,f
 19658  2BA2  2B9D               	goto	u9275
 19659  2BA3  3001               	movlw	1
 19660  2BA4  02A0               	subwf	___aldiv@counter,f
 19661  2BA5  1D03               	btfss	3,2
 19662  2BA6  2B7C               	goto	l6618
 19663  2BA7                     l6630:	
 19664  2BA7  0821               	movf	___aldiv@sign,w
 19665  2BA8  1903               	btfsc	3,2
 19666  2BA9  2BB5               	goto	l6634
 19667  2BAA  09A2               	comf	___aldiv@quotient,f
 19668  2BAB  09A3               	comf	___aldiv@quotient+1,f
 19669  2BAC  09A4               	comf	___aldiv@quotient+2,f
 19670  2BAD  09A5               	comf	___aldiv@quotient+3,f
 19671  2BAE  0AA2               	incf	___aldiv@quotient,f
 19672  2BAF  1903               	skipnz
 19673  2BB0  0AA3               	incf	___aldiv@quotient+1,f
 19674  2BB1  1903               	skipnz
 19675  2BB2  0AA4               	incf	___aldiv@quotient+2,f
 19676  2BB3  1903               	skipnz
 19677  2BB4  0AA5               	incf	___aldiv@quotient+3,f
 19678  2BB5                     l6634:	
 19679  2BB5  0825               	movf	___aldiv@quotient+3,w
 19680  2BB6  00F4               	movwf	?___aldiv+3
 19681  2BB7  0824               	movf	___aldiv@quotient+2,w
 19682  2BB8  00F3               	movwf	?___aldiv+2
 19683  2BB9  0823               	movf	___aldiv@quotient+1,w
 19684  2BBA  00F2               	movwf	?___aldiv+1
 19685  2BBB  0822               	movf	___aldiv@quotient,w
 19686  2BBC  00F1               	movwf	?___aldiv
 19687  2BBD  0008               	return
 19688  2BBE                     __end_of___aldiv:	
 19689                           
 19690                           	psect	intentry
 19691  0004                     __pintentry:	
 19692 ;; *************** function _myIsr *****************
 19693 ;; Defined at:
 19694 ;;		line 57 in file "main.c"
 19695 ;; Parameters:    Size  Location     Type
 19696 ;;		None
 19697 ;; Auto vars:     Size  Location     Type
 19698 ;;		None
 19699 ;; Return value:  Size  Location     Type
 19700 ;;                  1    wreg      void 
 19701 ;; Registers used:
 19702 ;;		wreg, status,2, status,0
 19703 ;; Tracked objects:
 19704 ;;		On entry : 0/0
 19705 ;;		On exit  : 0/0
 19706 ;;		Unchanged: 0/0
 19707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19710 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19711 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19712 ;;Total ram usage:        1 bytes
 19713 ;; Hardware stack levels used:    1
 19714 ;; This function calls:
 19715 ;;		Nothing
 19716 ;; This function is called by:
 19717 ;;		Interrupt level 1
 19718 ;; This function uses a non-reentrant model
 19719 ;;
 19720                           
 19721  0004                     _myIsr:	
 19722                           
 19723                           ;incstack = 0
 19724  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 19725                           
 19726                           ; Regs used in _myIsr: [wreg+status,2+status,0]
 19727  0005  3180               	pagesel	$
 19728                           
 19729                           ;main.c: 59:     static uint8_t count = 0;;main.c: 61:     if (PIR1bits.TMR1IF && PIE1bi
      +                          ts.TMR1IE) {
 19730  0006  0020               	movlb	0	; select bank0
 19731  0007  1C11               	btfss	17,0	;volatile
 19732  0008  281C               	goto	i1l127
 19733  0009  0021               	movlb	1	; select bank1
 19734  000A  1C11               	btfss	17,0	;volatile
 19735  000B  281C               	goto	i1l127
 19736                           
 19737                           ;main.c: 62:         PIR1bits.TMR1IF = 0;
 19738  000C  0020               	movlb	0	; select bank0
 19739  000D  1011               	bcf	17,0	;volatile
 19740                           
 19741                           ;main.c: 63:         count++;
 19742  000E  3001               	movlw	1
 19743  000F  00F0               	movwf	??_myIsr
 19744  0010  0870               	movf	??_myIsr,w
 19745  0011  0023               	movlb	3	; select bank3
 19746  0012  07D2               	addwf	myIsr@count^(0+384),f
 19747                           
 19748                           ;main.c: 66:         if (count == 61) {
 19749  0013  303D               	movlw	61
 19750  0014  0652               	xorwf	myIsr@count^(0+384),w
 19751  0015  1D03               	btfss	3,2
 19752  0016  281C               	goto	i1l127
 19753                           
 19754                           ;main.c: 67:             tmr1_flag = 1;
 19755  0017  3001               	movlw	1
 19756  0018  00F0               	movwf	??_myIsr
 19757  0019  0870               	movf	??_myIsr,w
 19758  001A  00D3               	movwf	_tmr1_flag^(0+384)	;volatile
 19759                           
 19760                           ;main.c: 68:             count = 0;
 19761  001B  01D2               	clrf	myIsr@count^(0+384)
 19762  001C                     i1l127:	
 19763  001C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 19764  001D  0009               	retfie
 19765  001E                     __end_of_myIsr:	
 19766  007E                     btemp	set	126	;btemp
 19767  007E                     int$flags	set	126
 19768  007E                     wtemp0	set	126
 19769  2771                     
 19770                           	psect	text6_split_1
 19771  2BBE                     l7824:	
 19772                           
 19773                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
 19774  2BBE  0021               	movlb	1	; select bank1
 19775  2BBF  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19776  2BC0  0086               	movwf	6
 19777  2BC1  0187               	clrf	7
 19778  2BC2  3F40               	moviw [0]fsr1
 19779  2BC3  00F1               	movwf	strncmp@_l
 19780  2BC4  3F41               	moviw [1]fsr1
 19781  2BC5  00F2               	movwf	strncmp@_l+1
 19782  2BC6  3020               	movlw	low (STR_34| (0+32768))
 19783  2BC7  00F3               	movwf	strncmp@_r
 19784  2BC8  30BB               	movlw	high (STR_34| (0+32768))
 19785  2BC9  00F4               	movwf	strncmp@_r+1
 19786  2BCA  3003               	movlw	3
 19787  2BCB  00F5               	movwf	strncmp@n
 19788  2BCC  3000               	movlw	0
 19789  2BCD  00F6               	movwf	strncmp@n+1
 19790  2BCE  3190  2000  31AB   	fcall	_strncmp
 19791  2BD1  0871               	movf	?_strncmp,w
 19792  2BD2  0472               	iorwf	?_strncmp+1,w
 19793  2BD3  1903               	btfsc	3,2
 19794  2BD4  2BEC               	goto	l7828
 19795  2BD5  0021               	movlb	1	; select bank1
 19796  2BD6  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19797  2BD7  0086               	movwf	6
 19798  2BD8  0187               	clrf	7
 19799  2BD9  3F40               	moviw [0]fsr1
 19800  2BDA  00F1               	movwf	strncmp@_l
 19801  2BDB  3F41               	moviw [1]fsr1
 19802  2BDC  00F2               	movwf	strncmp@_l+1
 19803  2BDD  3028               	movlw	low (STR_38| (0+32768))
 19804  2BDE  00F3               	movwf	strncmp@_r
 19805  2BDF  30BB               	movlw	high (STR_38| (0+32768))
 19806  2BE0  00F4               	movwf	strncmp@_r+1
 19807  2BE1  3003               	movlw	3
 19808  2BE2  00F5               	movwf	strncmp@n
 19809  2BE3  3000               	movlw	0
 19810  2BE4  00F6               	movwf	strncmp@n+1
 19811  2BE5  3190  2000  31AB   	fcall	_strncmp
 19812  2BE8  0871               	movf	?_strncmp,w
 19813  2BE9  0472               	iorwf	?_strncmp+1,w
 19814  2BEA  1D03               	btfss	3,2
 19815  2BEB  2C3F               	goto	L18
 19816  2BEC                     l7828:	
 19817                           
 19818                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
 19819  2BEC  0021               	movlb	1	; select bank1
 19820  2BED  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19821  2BEE  0086               	movwf	6
 19822  2BEF  0187               	clrf	7
 19823  2BF0  3003               	movlw	3
 19824  2BF1  0781               	addwf	1,f
 19825  2BF2  3141               	addfsr 1,1
 19826  2BF3  1803               	skipnc
 19827  2BF4  0A81               	incf	1,f
 19828                           
 19829                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 19830  2BF5  0866               	movf	vfpfcnvrt@ap^(0+128),w
 19831  2BF6  0086               	movwf	6
 19832  2BF7  3001               	movlw	1	; select bank2/3
 19833  2BF8  0087               	movwf	7
 19834  2BF9  0801               	movf	1,w
 19835  2BFA  0084               	movwf	4
 19836  2BFB  3001               	movlw	1	; select bank2/3
 19837  2BFC  0085               	movwf	5
 19838  2BFD  3002               	movlw	2
 19839  2BFE  0781               	addwf	1,f
 19840  2BFF  0800               	movf	0,w
 19841  2C00  0022               	movlb	2	; select bank2
 19842  2C01  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 19843  2C02  3980               	andlw	128
 19844  2C03  1D03               	skipz
 19845  2C04  30FF               	movlw	255
 19846  2C05  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 19847  2C06  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 19848  2C07  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 19849  2C08  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 19850  2C09  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 19851  2C0A  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 19852  2C0B  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 19853                           
 19854                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
 19855  2C0C  0021               	movlb	1	; select bank1
 19856  2C0D  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 19857  2C0E  0020               	movlb	0	; select bank0
 19858  2C0F  00B1               	movwf	dtoa@fp+1
 19859  2C10  0021               	movlb	1	; select bank1
 19860  2C11  0863               	movf	vfpfcnvrt@fp^(0+128),w
 19861  2C12  0020               	movlb	0	; select bank0
 19862  2C13  00B0               	movwf	dtoa@fp
 19863  2C14  0022               	movlb	2	; select bank2
 19864  2C15  083C               	movf	vfpfcnvrt@ll^(0+256),w
 19865  2C16  0020               	movlb	0	; select bank0
 19866  2C17  00B2               	movwf	dtoa@d
 19867  2C18  0022               	movlb	2	; select bank2
 19868  2C19  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 19869  2C1A  0020               	movlb	0	; select bank0
 19870  2C1B  00B3               	movwf	dtoa@d+1
 19871  2C1C  0022               	movlb	2	; select bank2
 19872  2C1D  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 19873  2C1E  0020               	movlb	0	; select bank0
 19874  2C1F  00B4               	movwf	dtoa@d+2
 19875  2C20  0022               	movlb	2	; select bank2
 19876  2C21  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 19877  2C22  0020               	movlb	0	; select bank0
 19878  2C23  00B5               	movwf	dtoa@d+3
 19879  2C24  0022               	movlb	2	; select bank2
 19880  2C25  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 19881  2C26  0020               	movlb	0	; select bank0
 19882  2C27  00B6               	movwf	dtoa@d+4
 19883  2C28  0022               	movlb	2	; select bank2
 19884  2C29  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 19885  2C2A  0020               	movlb	0	; select bank0
 19886  2C2B  00B7               	movwf	dtoa@d+5
 19887  2C2C  0022               	movlb	2	; select bank2
 19888  2C2D  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 19889  2C2E  0020               	movlb	0	; select bank0
 19890  2C2F  00B8               	movwf	dtoa@d+6
 19891  2C30  0022               	movlb	2	; select bank2
 19892  2C31  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 19893  2C32  0020               	movlb	0	; select bank0
 19894  2C33  00B9               	movwf	dtoa@d+7
 19895  2C34  319B  2372         	fcall	_dtoa
 19896  2C36  0020               	movlb	0	; select bank0
 19897  2C37  0831               	movf	?_dtoa+1,w
 19898  2C38  0021               	movlb	1	; select bank1
 19899  2C39  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 19900  2C3A  0020               	movlb	0	; select bank0
 19901  2C3B  0830               	movf	?_dtoa,w
 19902  2C3C  0021               	movlb	1	; select bank1
 19903  2C3D  00E3               	movwf	?_vfpfcnvrt^(0+128)
 19904  2C3E  0008               	return
 19905  2C3F                     L18:	
 19906  2C3F                     L17:	
 19907  2C3F  31AC  2C41         	ljmp	l7836
 19908                           
 19909                           	psect	text6_split_2
 19910  2C41                     l7836:	
 19911                           
 19912                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
 19913  2C41  0021               	movlb	1	; select bank1
 19914  2C42  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19915  2C43  0086               	movwf	6
 19916  2C44  0187               	clrf	7
 19917  2C45  3F40               	moviw [0]fsr1
 19918  2C46  00F1               	movwf	strncmp@_l
 19919  2C47  3F41               	moviw [1]fsr1
 19920  2C48  00F2               	movwf	strncmp@_l+1
 19921  2C49  3021               	movlw	low ((STR_34+1)| (0+32768))
 19922  2C4A  00F3               	movwf	strncmp@_r
 19923  2C4B  30BB               	movlw	high ((STR_34+1)| (0+32768))
 19924  2C4C  00F4               	movwf	strncmp@_r+1
 19925  2C4D  3002               	movlw	2
 19926  2C4E  00F5               	movwf	strncmp@n
 19927  2C4F  3000               	movlw	0
 19928  2C50  00F6               	movwf	strncmp@n+1
 19929  2C51  3190  2000  31AC   	fcall	_strncmp
 19930  2C54  0871               	movf	?_strncmp,w
 19931  2C55  0472               	iorwf	?_strncmp+1,w
 19932  2C56  1903               	btfsc	3,2
 19933  2C57  2C6F               	goto	l7840
 19934  2C58  0021               	movlb	1	; select bank1
 19935  2C59  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19936  2C5A  0086               	movwf	6
 19937  2C5B  0187               	clrf	7
 19938  2C5C  3F40               	moviw [0]fsr1
 19939  2C5D  00F1               	movwf	strncmp@_l
 19940  2C5E  3F41               	moviw [1]fsr1
 19941  2C5F  00F2               	movwf	strncmp@_l+1
 19942  2C60  3029               	movlw	low ((STR_38+1)| (0+32768))
 19943  2C61  00F3               	movwf	strncmp@_r
 19944  2C62  30BB               	movlw	high ((STR_38+1)| (0+32768))
 19945  2C63  00F4               	movwf	strncmp@_r+1
 19946  2C64  3002               	movlw	2
 19947  2C65  00F5               	movwf	strncmp@n
 19948  2C66  3000               	movlw	0
 19949  2C67  00F6               	movwf	strncmp@n+1
 19950  2C68  3190  2000  31AC   	fcall	_strncmp
 19951  2C6B  0871               	movf	?_strncmp,w
 19952  2C6C  0472               	iorwf	?_strncmp+1,w
 19953  2C6D  1D03               	btfss	3,2
 19954  2C6E  2CC7               	goto	L20
 19955  2C6F                     l7840:	
 19956                           
 19957                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
 19958  2C6F  0021               	movlb	1	; select bank1
 19959  2C70  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19960  2C71  0086               	movwf	6
 19961  2C72  0187               	clrf	7
 19962  2C73  3002               	movlw	2
 19963  2C74  0781               	addwf	1,f
 19964  2C75  3141               	addfsr 1,1
 19965  2C76  1803               	skipnc
 19966  2C77  0A81               	incf	1,f
 19967                           
 19968                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
 19969  2C78  0866               	movf	vfpfcnvrt@ap^(0+128),w
 19970  2C79  0086               	movwf	6
 19971  2C7A  3001               	movlw	1	; select bank2/3
 19972  2C7B  0087               	movwf	7
 19973  2C7C  0801               	movf	1,w
 19974  2C7D  0084               	movwf	4
 19975  2C7E  3001               	movlw	1	; select bank2/3
 19976  2C7F  0085               	movwf	5
 19977  2C80  3002               	movlw	2
 19978  2C81  0781               	addwf	1,f
 19979  2C82  3F00               	moviw [0]fsr0
 19980  2C83  0022               	movlb	2	; select bank2
 19981  2C84  00A0               	movwf	??_vfpfcnvrt^(0+256)
 19982  2C85  3F01               	moviw [1]fsr0
 19983  2C86  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 19984  2C87  0820               	movf	??_vfpfcnvrt^(0+256),w
 19985  2C88  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 19986  2C89  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 19987  2C8A  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 19988  2C8B  0D89               	rlf	9,f
 19989  2C8C  3B89               	subwfb	9,f
 19990  2C8D  0989               	comf	9,f
 19991  2C8E  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 19992  2C8F  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 19993  2C90  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 19994  2C91  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 19995  2C92  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 19996  2C93  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 19997                           
 19998                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 820:       
      +                                return dtoa(fp, ll);
 19999  2C94  0021               	movlb	1	; select bank1
 20000  2C95  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20001  2C96  0020               	movlb	0	; select bank0
 20002  2C97  00B1               	movwf	dtoa@fp+1
 20003  2C98  0021               	movlb	1	; select bank1
 20004  2C99  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20005  2C9A  0020               	movlb	0	; select bank0
 20006  2C9B  00B0               	movwf	dtoa@fp
 20007  2C9C  0022               	movlb	2	; select bank2
 20008  2C9D  083C               	movf	vfpfcnvrt@ll^(0+256),w
 20009  2C9E  0020               	movlb	0	; select bank0
 20010  2C9F  00B2               	movwf	dtoa@d
 20011  2CA0  0022               	movlb	2	; select bank2
 20012  2CA1  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 20013  2CA2  0020               	movlb	0	; select bank0
 20014  2CA3  00B3               	movwf	dtoa@d+1
 20015  2CA4  0022               	movlb	2	; select bank2
 20016  2CA5  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 20017  2CA6  0020               	movlb	0	; select bank0
 20018  2CA7  00B4               	movwf	dtoa@d+2
 20019  2CA8  0022               	movlb	2	; select bank2
 20020  2CA9  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 20021  2CAA  0020               	movlb	0	; select bank0
 20022  2CAB  00B5               	movwf	dtoa@d+3
 20023  2CAC  0022               	movlb	2	; select bank2
 20024  2CAD  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 20025  2CAE  0020               	movlb	0	; select bank0
 20026  2CAF  00B6               	movwf	dtoa@d+4
 20027  2CB0  0022               	movlb	2	; select bank2
 20028  2CB1  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 20029  2CB2  0020               	movlb	0	; select bank0
 20030  2CB3  00B7               	movwf	dtoa@d+5
 20031  2CB4  0022               	movlb	2	; select bank2
 20032  2CB5  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 20033  2CB6  0020               	movlb	0	; select bank0
 20034  2CB7  00B8               	movwf	dtoa@d+6
 20035  2CB8  0022               	movlb	2	; select bank2
 20036  2CB9  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 20037  2CBA  0020               	movlb	0	; select bank0
 20038  2CBB  00B9               	movwf	dtoa@d+7
 20039  2CBC  319B  2372         	fcall	_dtoa
 20040  2CBE  0020               	movlb	0	; select bank0
 20041  2CBF  0831               	movf	?_dtoa+1,w
 20042  2CC0  0021               	movlb	1	; select bank1
 20043  2CC1  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20044  2CC2  0020               	movlb	0	; select bank0
 20045  2CC3  0830               	movf	?_dtoa,w
 20046  2CC4  0021               	movlb	1	; select bank1
 20047  2CC5  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20048  2CC6  0008               	return
 20049  2CC7                     L20:	
 20050  2CC7                     L19:	
 20051  2CC7  3198  283E         	ljmp	l7848
 20052                           
 20053                           	psect	text6_split_3
 20054  183E                     l7848:	
 20055                           
 20056                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 20057  183E  0021               	movlb	1	; select bank1
 20058  183F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20059  1840  0086               	movwf	6
 20060  1841  0187               	clrf	7
 20061  1842  3F40               	moviw [0]fsr1
 20062  1843  0022               	movlb	2	; select bank2
 20063  1844  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20064  1845  3F41               	moviw [1]fsr1
 20065  1846  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20066  1847  0820               	movf	??_vfpfcnvrt^(0+256),w
 20067  1848  0084               	movwf	4
 20068  1849  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 20069  184A  0085               	movwf	5
 20070  184B  0012               	moviw fsr0++
 20071  184C  3A64               	xorlw	100
 20072  184D  1903               	btfsc	3,2
 20073  184E  2860               	goto	l7852
 20074  184F  0021               	movlb	1	; select bank1
 20075  1850  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20076  1851  0086               	movwf	6
 20077  1852  0187               	clrf	7
 20078  1853  3F40               	moviw [0]fsr1
 20079  1854  0022               	movlb	2	; select bank2
 20080  1855  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20081  1856  3F41               	moviw [1]fsr1
 20082  1857  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20083  1858  0820               	movf	??_vfpfcnvrt^(0+256),w
 20084  1859  0084               	movwf	4
 20085  185A  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 20086  185B  0085               	movwf	5
 20087  185C  0012               	moviw fsr0++
 20088  185D  3A69               	xorlw	105
 20089  185E  1D03               	btfss	3,2
 20090  185F  28B8               	goto	l7860
 20091  1860                     l7852:	
 20092                           
 20093                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 20094  1860  0021               	movlb	1	; select bank1
 20095  1861  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20096  1862  0086               	movwf	6
 20097  1863  0187               	clrf	7
 20098  1864  3001               	movlw	1
 20099  1865  0781               	addwf	1,f
 20100  1866  3141               	addfsr 1,1
 20101  1867  1803               	skipnc
 20102  1868  0A81               	incf	1,f
 20103                           
 20104                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 20105  1869  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20106  186A  0086               	movwf	6
 20107  186B  3001               	movlw	1	; select bank2/3
 20108  186C  0087               	movwf	7
 20109  186D  0801               	movf	1,w
 20110  186E  0084               	movwf	4
 20111  186F  3001               	movlw	1	; select bank2/3
 20112  1870  0085               	movwf	5
 20113  1871  3002               	movlw	2
 20114  1872  0781               	addwf	1,f
 20115  1873  3F00               	moviw [0]fsr0
 20116  1874  0022               	movlb	2	; select bank2
 20117  1875  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20118  1876  3F01               	moviw [1]fsr0
 20119  1877  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20120  1878  0820               	movf	??_vfpfcnvrt^(0+256),w
 20121  1879  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 20122  187A  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 20123  187B  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 20124  187C  0D89               	rlf	9,f
 20125  187D  3B89               	subwfb	9,f
 20126  187E  0989               	comf	9,f
 20127  187F  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 20128  1880  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 20129  1881  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 20130  1882  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 20131  1883  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 20132  1884  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 20133                           
 20134                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 20135  1885  0021               	movlb	1	; select bank1
 20136  1886  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20137  1887  0020               	movlb	0	; select bank0
 20138  1888  00B1               	movwf	dtoa@fp+1
 20139  1889  0021               	movlb	1	; select bank1
 20140  188A  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20141  188B  0020               	movlb	0	; select bank0
 20142  188C  00B0               	movwf	dtoa@fp
 20143  188D  0022               	movlb	2	; select bank2
 20144  188E  083C               	movf	vfpfcnvrt@ll^(0+256),w
 20145  188F  0020               	movlb	0	; select bank0
 20146  1890  00B2               	movwf	dtoa@d
 20147  1891  0022               	movlb	2	; select bank2
 20148  1892  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 20149  1893  0020               	movlb	0	; select bank0
 20150  1894  00B3               	movwf	dtoa@d+1
 20151  1895  0022               	movlb	2	; select bank2
 20152  1896  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 20153  1897  0020               	movlb	0	; select bank0
 20154  1898  00B4               	movwf	dtoa@d+2
 20155  1899  0022               	movlb	2	; select bank2
 20156  189A  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 20157  189B  0020               	movlb	0	; select bank0
 20158  189C  00B5               	movwf	dtoa@d+3
 20159  189D  0022               	movlb	2	; select bank2
 20160  189E  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 20161  189F  0020               	movlb	0	; select bank0
 20162  18A0  00B6               	movwf	dtoa@d+4
 20163  18A1  0022               	movlb	2	; select bank2
 20164  18A2  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 20165  18A3  0020               	movlb	0	; select bank0
 20166  18A4  00B7               	movwf	dtoa@d+5
 20167  18A5  0022               	movlb	2	; select bank2
 20168  18A6  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 20169  18A7  0020               	movlb	0	; select bank0
 20170  18A8  00B8               	movwf	dtoa@d+6
 20171  18A9  0022               	movlb	2	; select bank2
 20172  18AA  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 20173  18AB  0020               	movlb	0	; select bank0
 20174  18AC  00B9               	movwf	dtoa@d+7
 20175  18AD  319B  2372         	fcall	_dtoa
 20176  18AF  0020               	movlb	0	; select bank0
 20177  18B0  0831               	movf	?_dtoa+1,w
 20178  18B1  0021               	movlb	1	; select bank1
 20179  18B2  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20180  18B3  0020               	movlb	0	; select bank0
 20181  18B4  0830               	movf	?_dtoa,w
 20182  18B5  0021               	movlb	1	; select bank1
 20183  18B6  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20184  18B7  0008               	return
 20185  18B8                     l7860:	
 20186                           
 20187                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 835:       
      +                            if (!strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", (
      +                          (sizeof("li")/sizeof("li"[0]))-1))) {
 20188  18B8  0021               	movlb	1	; select bank1
 20189  18B9  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20190  18BA  0086               	movwf	6
 20191  18BB  0187               	clrf	7
 20192  18BC  3F40               	moviw [0]fsr1
 20193  18BD  00F1               	movwf	strncmp@_l
 20194  18BE  3F41               	moviw [1]fsr1
 20195  18BF  00F2               	movwf	strncmp@_l+1
 20196  18C0  3046               	movlw	low (STR_52| (0+32768))
 20197  18C1  00F3               	movwf	strncmp@_r
 20198  18C2  30BB               	movlw	high (STR_52| (0+32768))
 20199  18C3  00F4               	movwf	strncmp@_r+1
 20200  18C4  3002               	movlw	2
 20201  18C5  00F5               	movwf	strncmp@n
 20202  18C6  3000               	movlw	0
 20203  18C7  00F6               	movwf	strncmp@n+1
 20204  18C8  3190  2000  3198   	fcall	_strncmp
 20205  18CB  0871               	movf	?_strncmp,w
 20206  18CC  0472               	iorwf	?_strncmp+1,w
 20207  18CD  1903               	btfsc	3,2
 20208  18CE  28E6               	goto	l7864
 20209  18CF  0021               	movlb	1	; select bank1
 20210  18D0  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20211  18D1  0086               	movwf	6
 20212  18D2  0187               	clrf	7
 20213  18D3  3F40               	moviw [0]fsr1
 20214  18D4  00F1               	movwf	strncmp@_l
 20215  18D5  3F41               	moviw [1]fsr1
 20216  18D6  00F2               	movwf	strncmp@_l+1
 20217  18D7  304F               	movlw	low (STR_56| (0+32768))
 20218  18D8  00F3               	movwf	strncmp@_r
 20219  18D9  30BB               	movlw	high (STR_56| (0+32768))
 20220  18DA  00F4               	movwf	strncmp@_r+1
 20221  18DB  3002               	movlw	2
 20222  18DC  00F5               	movwf	strncmp@n
 20223  18DD  3000               	movlw	0
 20224  18DE  00F6               	movwf	strncmp@n+1
 20225  18DF  3190  2000  3198   	fcall	_strncmp
 20226  18E2  0871               	movf	?_strncmp,w
 20227  18E3  0472               	iorwf	?_strncmp+1,w
 20228  18E4  1D03               	btfss	3,2
 20229  18E5  2944               	goto	L22
 20230  18E6                     l7864:	
 20231                           
 20232                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 836: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 838:             
      +                          *fmt += ((sizeof("ld")/sizeof("ld"[0]))-1);
 20233  18E6  0021               	movlb	1	; select bank1
 20234  18E7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20235  18E8  0086               	movwf	6
 20236  18E9  0187               	clrf	7
 20237  18EA  3002               	movlw	2
 20238  18EB  0781               	addwf	1,f
 20239  18EC  3141               	addfsr 1,1
 20240  18ED  1803               	skipnc
 20241  18EE  0A81               	incf	1,f
 20242                           
 20243                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 839:       
      +                                ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
 20244  18EF  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20245  18F0  0086               	movwf	6
 20246  18F1  3001               	movlw	1	; select bank2/3
 20247  18F2  0087               	movwf	7
 20248  18F3  0801               	movf	1,w
 20249  18F4  0084               	movwf	4
 20250  18F5  3001               	movlw	1	; select bank2/3
 20251  18F6  0085               	movwf	5
 20252  18F7  3004               	movlw	4
 20253  18F8  0781               	addwf	1,f
 20254  18F9  3F00               	moviw [0]fsr0
 20255  18FA  0022               	movlb	2	; select bank2
 20256  18FB  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20257  18FC  3F01               	moviw [1]fsr0
 20258  18FD  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20259  18FE  3F02               	moviw [2]fsr0
 20260  18FF  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 20261  1900  3F03               	moviw [3]fsr0
 20262  1901  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 20263  1902  0820               	movf	??_vfpfcnvrt^(0+256),w
 20264  1903  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 20265  1904  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 20266  1905  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 20267  1906  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 20268  1907  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 20269  1908  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 20270  1909  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 20271  190A  3000               	movlw	0
 20272  190B  1BBF               	btfsc	(vfpfcnvrt@ll+3)^(0+256),7
 20273  190C  30FF               	movlw	255
 20274  190D  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 20275  190E  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 20276  190F  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 20277  1910  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 20278                           
 20279                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 841:       
      +                                return dtoa(fp, ll);
 20280  1911  0021               	movlb	1	; select bank1
 20281  1912  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20282  1913  0020               	movlb	0	; select bank0
 20283  1914  00B1               	movwf	dtoa@fp+1
 20284  1915  0021               	movlb	1	; select bank1
 20285  1916  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20286  1917  0020               	movlb	0	; select bank0
 20287  1918  00B0               	movwf	dtoa@fp
 20288  1919  0022               	movlb	2	; select bank2
 20289  191A  083C               	movf	vfpfcnvrt@ll^(0+256),w
 20290  191B  0020               	movlb	0	; select bank0
 20291  191C  00B2               	movwf	dtoa@d
 20292  191D  0022               	movlb	2	; select bank2
 20293  191E  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 20294  191F  0020               	movlb	0	; select bank0
 20295  1920  00B3               	movwf	dtoa@d+1
 20296  1921  0022               	movlb	2	; select bank2
 20297  1922  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 20298  1923  0020               	movlb	0	; select bank0
 20299  1924  00B4               	movwf	dtoa@d+2
 20300  1925  0022               	movlb	2	; select bank2
 20301  1926  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 20302  1927  0020               	movlb	0	; select bank0
 20303  1928  00B5               	movwf	dtoa@d+3
 20304  1929  0022               	movlb	2	; select bank2
 20305  192A  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 20306  192B  0020               	movlb	0	; select bank0
 20307  192C  00B6               	movwf	dtoa@d+4
 20308  192D  0022               	movlb	2	; select bank2
 20309  192E  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 20310  192F  0020               	movlb	0	; select bank0
 20311  1930  00B7               	movwf	dtoa@d+5
 20312  1931  0022               	movlb	2	; select bank2
 20313  1932  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 20314  1933  0020               	movlb	0	; select bank0
 20315  1934  00B8               	movwf	dtoa@d+6
 20316  1935  0022               	movlb	2	; select bank2
 20317  1936  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 20318  1937  0020               	movlb	0	; select bank0
 20319  1938  00B9               	movwf	dtoa@d+7
 20320  1939  319B  2372         	fcall	_dtoa
 20321  193B  0020               	movlb	0	; select bank0
 20322  193C  0831               	movf	?_dtoa+1,w
 20323  193D  0021               	movlb	1	; select bank1
 20324  193E  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20325  193F  0020               	movlb	0	; select bank0
 20326  1940  0830               	movf	?_dtoa,w
 20327  1941  0021               	movlb	1	; select bank1
 20328  1942  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20329  1943  0008               	return
 20330  1944                     L22:	
 20331  1944                     L21:	
 20332  1944  31A1  29CB         	ljmp	l7872
 20333                           
 20334                           	psect	text6_split_4
 20335  21CB                     l7872:	
 20336                           
 20337                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
 20338  21CB  0021               	movlb	1	; select bank1
 20339  21CC  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20340  21CD  0086               	movwf	6
 20341  21CE  0187               	clrf	7
 20342  21CF  3F40               	moviw [0]fsr1
 20343  21D0  00F1               	movwf	strncmp@_l
 20344  21D1  3F41               	moviw [1]fsr1
 20345  21D2  00F2               	movwf	strncmp@_l+1
 20346  21D3  3049               	movlw	low (STR_61| (0+32768))
 20347  21D4  00F3               	movwf	strncmp@_r
 20348  21D5  30BB               	movlw	high (STR_61| (0+32768))
 20349  21D6  00F4               	movwf	strncmp@_r+1
 20350  21D7  3002               	movlw	2
 20351  21D8  00F5               	movwf	strncmp@n
 20352  21D9  3000               	movlw	0
 20353  21DA  00F6               	movwf	strncmp@n+1
 20354  21DB  3190  2000  31A1   	fcall	_strncmp
 20355  21DE  0871               	movf	?_strncmp,w
 20356  21DF  0472               	iorwf	?_strncmp+1,w
 20357  21E0  1903               	btfsc	3,2
 20358  21E1  29F9               	goto	l7876
 20359  21E2  0021               	movlb	1	; select bank1
 20360  21E3  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20361  21E4  0086               	movwf	6
 20362  21E5  0187               	clrf	7
 20363  21E6  3F40               	moviw [0]fsr1
 20364  21E7  00F1               	movwf	strncmp@_l
 20365  21E8  3F41               	moviw [1]fsr1
 20366  21E9  00F2               	movwf	strncmp@_l+1
 20367  21EA  3052               	movlw	low (STR_65| (0+32768))
 20368  21EB  00F3               	movwf	strncmp@_r
 20369  21EC  30BB               	movlw	high (STR_65| (0+32768))
 20370  21ED  00F4               	movwf	strncmp@_r+1
 20371  21EE  3002               	movlw	2
 20372  21EF  00F5               	movwf	strncmp@n
 20373  21F0  3000               	movlw	0
 20374  21F1  00F6               	movwf	strncmp@n+1
 20375  21F2  3190  2000  31A1   	fcall	_strncmp
 20376  21F5  0871               	movf	?_strncmp,w
 20377  21F6  0472               	iorwf	?_strncmp+1,w
 20378  21F7  1D03               	btfss	3,2
 20379  21F8  2A4A               	goto	l7884
 20380  21F9                     l7876:	
 20381                           
 20382                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
 20383  21F9  0021               	movlb	1	; select bank1
 20384  21FA  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20385  21FB  0086               	movwf	6
 20386  21FC  0187               	clrf	7
 20387  21FD  3002               	movlw	2
 20388  21FE  0781               	addwf	1,f
 20389  21FF  3141               	addfsr 1,1
 20390  2200  1803               	skipnc
 20391  2201  0A81               	incf	1,f
 20392                           
 20393                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 20394  2202  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20395  2203  0086               	movwf	6
 20396  2204  3001               	movlw	1	; select bank2/3
 20397  2205  0087               	movwf	7
 20398  2206  0801               	movf	1,w
 20399  2207  0084               	movwf	4
 20400  2208  3001               	movlw	1	; select bank2/3
 20401  2209  0085               	movwf	5
 20402  220A  3002               	movlw	2
 20403  220B  0781               	addwf	1,f
 20404  220C  3F00               	moviw [0]fsr0
 20405  220D  0022               	movlb	2	; select bank2
 20406  220E  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 20407  220F  3F01               	moviw [1]fsr0
 20408  2210  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 20409  2211  01BE               	clrf	(vfpfcnvrt@ll+2)^(0+256)
 20410  2212  01BF               	clrf	(vfpfcnvrt@ll+3)^(0+256)
 20411  2213  01C0               	clrf	(vfpfcnvrt@ll+4)^(0+256)
 20412  2214  01C1               	clrf	(vfpfcnvrt@ll+5)^(0+256)
 20413  2215  01C2               	clrf	(vfpfcnvrt@ll+6)^(0+256)
 20414  2216  01C3               	clrf	(vfpfcnvrt@ll+7)^(0+256)
 20415                           
 20416                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 889:       
      +                                return dtoa(fp, ll);
 20417  2217  0021               	movlb	1	; select bank1
 20418  2218  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20419  2219  0020               	movlb	0	; select bank0
 20420  221A  00B1               	movwf	dtoa@fp+1
 20421  221B  0021               	movlb	1	; select bank1
 20422  221C  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20423  221D  0020               	movlb	0	; select bank0
 20424  221E  00B0               	movwf	dtoa@fp
 20425  221F  0022               	movlb	2	; select bank2
 20426  2220  083C               	movf	vfpfcnvrt@ll^(0+256),w
 20427  2221  0020               	movlb	0	; select bank0
 20428  2222  00B2               	movwf	dtoa@d
 20429  2223  0022               	movlb	2	; select bank2
 20430  2224  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 20431  2225  0020               	movlb	0	; select bank0
 20432  2226  00B3               	movwf	dtoa@d+1
 20433  2227  0022               	movlb	2	; select bank2
 20434  2228  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 20435  2229  0020               	movlb	0	; select bank0
 20436  222A  00B4               	movwf	dtoa@d+2
 20437  222B  0022               	movlb	2	; select bank2
 20438  222C  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 20439  222D  0020               	movlb	0	; select bank0
 20440  222E  00B5               	movwf	dtoa@d+3
 20441  222F  0022               	movlb	2	; select bank2
 20442  2230  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 20443  2231  0020               	movlb	0	; select bank0
 20444  2232  00B6               	movwf	dtoa@d+4
 20445  2233  0022               	movlb	2	; select bank2
 20446  2234  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 20447  2235  0020               	movlb	0	; select bank0
 20448  2236  00B7               	movwf	dtoa@d+5
 20449  2237  0022               	movlb	2	; select bank2
 20450  2238  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 20451  2239  0020               	movlb	0	; select bank0
 20452  223A  00B8               	movwf	dtoa@d+6
 20453  223B  0022               	movlb	2	; select bank2
 20454  223C  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 20455  223D  0020               	movlb	0	; select bank0
 20456  223E  00B9               	movwf	dtoa@d+7
 20457  223F  319B  2372         	fcall	_dtoa
 20458  2241  0020               	movlb	0	; select bank0
 20459  2242  0831               	movf	?_dtoa+1,w
 20460  2243  0021               	movlb	1	; select bank1
 20461  2244  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20462  2245  0020               	movlb	0	; select bank0
 20463  2246  0830               	movf	?_dtoa,w
 20464  2247  0021               	movlb	1	; select bank1
 20465  2248  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20466  2249  0008               	return
 20467  224A                     l7884:	
 20468                           
 20469                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
 20470  224A  3066               	movlw	102
 20471  224B  0022               	movlb	2	; select bank2
 20472  224C  0635               	xorwf	vfpfcnvrt@ct^(0+256),w
 20473  224D  1D03               	btfss	3,2
 20474  224E  2A9F               	goto	L24
 20475                           
 20476                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
 20477  224F  0021               	movlb	1	; select bank1
 20478  2250  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20479  2251  0086               	movwf	6
 20480  2252  0187               	clrf	7
 20481  2253  3F40               	moviw [0]fsr1
 20482  2254  0022               	movlb	2	; select bank2
 20483  2255  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20484  2256  3F41               	moviw [1]fsr1
 20485  2257  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20486  2258  0820               	movf	??_vfpfcnvrt^(0+256),w
 20487  2259  0084               	movwf	4
 20488  225A  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 20489  225B  0085               	movwf	5
 20490  225C  0800               	movf	0,w	;code access
 20491  225D  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 20492  225E  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 20493  225F  00C5               	movwf	vfpfcnvrt@c^(0+256)
 20494                           
 20495                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
 20496  2260  0021               	movlb	1	; select bank1
 20497  2261  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20498  2262  0086               	movwf	6
 20499  2263  0187               	clrf	7
 20500  2264  3001               	movlw	1
 20501  2265  0781               	addwf	1,f
 20502  2266  3141               	addfsr 1,1
 20503  2267  1803               	skipnc
 20504  2268  0A81               	incf	1,f
 20505                           
 20506                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 20507  2269  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20508  226A  0086               	movwf	6
 20509  226B  3001               	movlw	1	; select bank2/3
 20510  226C  0087               	movwf	7
 20511  226D  0801               	movf	1,w
 20512  226E  0084               	movwf	4
 20513  226F  3001               	movlw	1	; select bank2/3
 20514  2270  0085               	movwf	5
 20515  2271  3004               	movlw	4
 20516  2272  0781               	addwf	1,f
 20517  2273  3F00               	moviw [0]fsr0
 20518  2274  0022               	movlb	2	; select bank2
 20519  2275  00B8               	movwf	vfpfcnvrt@f^(0+256)
 20520  2276  3F01               	moviw [1]fsr0
 20521  2277  00B9               	movwf	(vfpfcnvrt@f+1)^(0+256)
 20522  2278  3F02               	moviw [2]fsr0
 20523  2279  00BA               	movwf	(vfpfcnvrt@f+2)^(0+256)
 20524  227A  3F03               	moviw [3]fsr0
 20525  227B  00BB               	movwf	(vfpfcnvrt@f+3)^(0+256)
 20526                           
 20527                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
 20528  227C  0021               	movlb	1	; select bank1
 20529  227D  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20530  227E  00A1               	movwf	(efgtoa@fp+1)^(0+128)
 20531  227F  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20532  2280  00A0               	movwf	efgtoa@fp^(0+128)
 20533  2281  0022               	movlb	2	; select bank2
 20534  2282  083B               	movf	(vfpfcnvrt@f+3)^(0+256),w
 20535  2283  0021               	movlb	1	; select bank1
 20536  2284  00A5               	movwf	(efgtoa@f+3)^(0+128)
 20537  2285  0022               	movlb	2	; select bank2
 20538  2286  083A               	movf	(vfpfcnvrt@f+2)^(0+256),w
 20539  2287  0021               	movlb	1	; select bank1
 20540  2288  00A4               	movwf	(efgtoa@f+2)^(0+128)
 20541  2289  0022               	movlb	2	; select bank2
 20542  228A  0839               	movf	(vfpfcnvrt@f+1)^(0+256),w
 20543  228B  0021               	movlb	1	; select bank1
 20544  228C  00A3               	movwf	(efgtoa@f+1)^(0+128)
 20545  228D  0022               	movlb	2	; select bank2
 20546  228E  0838               	movf	vfpfcnvrt@f^(0+256),w
 20547  228F  0021               	movlb	1	; select bank1
 20548  2290  00A2               	movwf	efgtoa@f^(0+128)
 20549  2291  0022               	movlb	2	; select bank2
 20550  2292  0845               	movf	vfpfcnvrt@c^(0+256),w
 20551  2293  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20552  2294  0820               	movf	??_vfpfcnvrt^(0+256),w
 20553  2295  0021               	movlb	1	; select bank1
 20554  2296  00A6               	movwf	efgtoa@c^(0+128)
 20555  2297  3180  2058         	fcall	_efgtoa
 20556  2299  0021               	movlb	1	; select bank1
 20557  229A  0821               	movf	(?_efgtoa+1)^(0+128),w
 20558  229B  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20559  229C  0820               	movf	?_efgtoa^(0+128),w
 20560  229D  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20561  229E  0008               	return
 20562  229F                     L24:	
 20563  229F                     L23:	
 20564  229F  31AE  2E00         	ljmp	l7896
 20565                           
 20566                           	psect	text6_split_5
 20567  2E00                     l7896:	
 20568                           
 20569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 20570  2E00  3035               	movlw	low vfpfcnvrt@ct
 20571  2E01  00F1               	movwf	strncmp@_l
 20572  2E02  3001               	movlw	high vfpfcnvrt@ct
 20573  2E03  00F2               	movwf	strncmp@_l+1
 20574  2E04  304C               	movlw	low (STR_70| (0+32768))
 20575  2E05  00F3               	movwf	strncmp@_r
 20576  2E06  30BB               	movlw	high (STR_70| (0+32768))
 20577  2E07  00F4               	movwf	strncmp@_r+1
 20578  2E08  3002               	movlw	2
 20579  2E09  00F5               	movwf	strncmp@n
 20580  2E0A  3000               	movlw	0
 20581  2E0B  00F6               	movwf	strncmp@n+1
 20582  2E0C  3190  2000  31AE   	fcall	_strncmp
 20583  2E0F  0871               	movf	?_strncmp,w
 20584  2E10  0472               	iorwf	?_strncmp+1,w
 20585  2E11  1D03               	btfss	3,2
 20586  2E12  2EA2               	goto	L26
 20587                           
 20588                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 20589  2E13  0021               	movlb	1	; select bank1
 20590  2E14  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20591  2E15  0086               	movwf	6
 20592  2E16  0187               	clrf	7
 20593  2E17  3F40               	moviw [0]fsr1
 20594  2E18  0022               	movlb	2	; select bank2
 20595  2E19  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20596  2E1A  3F41               	moviw [1]fsr1
 20597  2E1B  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20598  2E1C  3001               	movlw	1
 20599  2E1D  0720               	addwf	??_vfpfcnvrt^(0+256),w
 20600  2E1E  0084               	movwf	4
 20601  2E1F  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 20602  2E20  1803               	skipnc
 20603  2E21  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 20604  2E22  0085               	movwf	5
 20605  2E23  0800               	movf	0,w	;code access
 20606  2E24  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 20607  2E25  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 20608  2E26  00C5               	movwf	vfpfcnvrt@c^(0+256)
 20609  2E27  0021               	movlb	1	; select bank1
 20610  2E28  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20611  2E29  0086               	movwf	6
 20612  2E2A  0187               	clrf	7
 20613  2E2B  3F40               	moviw [0]fsr1
 20614  2E2C  0022               	movlb	2	; select bank2
 20615  2E2D  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20616  2E2E  3F41               	moviw [1]fsr1
 20617  2E2F  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20618  2E30  0820               	movf	??_vfpfcnvrt^(0+256),w
 20619  2E31  0084               	movwf	4
 20620  2E32  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 20621  2E33  0085               	movwf	5
 20622  2E34  0800               	movf	0,w	;code access
 20623  2E35  3EBF               	addlw	191
 20624  2E36  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 20625  2E37  30FF               	movlw	255
 20626  2E38  1803               	skipnc
 20627  2E39  3000               	movlw	0
 20628  2E3A  00A3               	movwf	((??_vfpfcnvrt+2)^(0+256)+1)
 20629  2E3B  3000               	movlw	0
 20630  2E3C  0223               	subwf	(??_vfpfcnvrt+3)^(0+256),w
 20631  2E3D  301A               	movlw	26
 20632  2E3E  1903               	skipnz
 20633  2E3F  0222               	subwf	(??_vfpfcnvrt+2)^(0+256),w
 20634  2E40  1803               	btfsc	3,0
 20635  2E41  2E44               	goto	u11480
 20636  2E42  3001               	movlw	1
 20637  2E43  2E45               	goto	u11490
 20638  2E44                     u11480:	
 20639  2E44  3000               	movlw	0
 20640  2E45                     u11490:	
 20641  2E45  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 20642  2E46  01A5               	clrf	((??_vfpfcnvrt+4)^(0+256)+1)
 20643  2E47  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 20644  2E48  00B3               	movwf	_vfpfcnvrt$1130^(0+256)
 20645  2E49  0825               	movf	(??_vfpfcnvrt+5)^(0+256),w
 20646  2E4A  00B4               	movwf	(_vfpfcnvrt$1130+1)^(0+256)
 20647  2E4B  0833               	movf	_vfpfcnvrt$1130^(0+256),w
 20648  2E4C  0434               	iorwf	(_vfpfcnvrt$1130+1)^(0+256),w
 20649  2E4D  1903               	btfsc	3,2
 20650  2E4E  2E63               	goto	l7906
 20651                           
 20652                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
 20653  2E4F  0021               	movlb	1	; select bank1
 20654  2E50  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20655  2E51  0086               	movwf	6
 20656  2E52  3001               	movlw	1	; select bank2/3
 20657  2E53  0087               	movwf	7
 20658  2E54  0801               	movf	1,w
 20659  2E55  0084               	movwf	4
 20660  2E56  3001               	movlw	1	; select bank2/3
 20661  2E57  0085               	movwf	5
 20662  2E58  3004               	movlw	4
 20663  2E59  0781               	addwf	1,f
 20664  2E5A  3F00               	moviw [0]fsr0
 20665  2E5B  0022               	movlb	2	; select bank2
 20666  2E5C  00B8               	movwf	vfpfcnvrt@f^(0+256)
 20667  2E5D  3F01               	moviw [1]fsr0
 20668  2E5E  00B9               	movwf	(vfpfcnvrt@f+1)^(0+256)
 20669  2E5F  3F02               	moviw [2]fsr0
 20670  2E60  00BA               	movwf	(vfpfcnvrt@f+2)^(0+256)
 20671  2E61  3F03               	moviw [3]fsr0
 20672  2E62  2E76               	goto	L1
 20673  2E63                     l7906:	
 20674                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
 20675                           
 20676                           
 20677                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 20678  2E63  0021               	movlb	1	; select bank1
 20679  2E64  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20680  2E65  0086               	movwf	6
 20681  2E66  3001               	movlw	1	; select bank2/3
 20682  2E67  0087               	movwf	7
 20683  2E68  0801               	movf	1,w
 20684  2E69  0084               	movwf	4
 20685  2E6A  3001               	movlw	1	; select bank2/3
 20686  2E6B  0085               	movwf	5
 20687  2E6C  3004               	movlw	4
 20688  2E6D  0781               	addwf	1,f
 20689  2E6E  3F00               	moviw [0]fsr0
 20690  2E6F  0022               	movlb	2	; select bank2
 20691  2E70  00B8               	movwf	vfpfcnvrt@f^(0+256)
 20692  2E71  3F01               	moviw [1]fsr0
 20693  2E72  00B9               	movwf	(vfpfcnvrt@f+1)^(0+256)
 20694  2E73  3F02               	moviw [2]fsr0
 20695  2E74  00BA               	movwf	(vfpfcnvrt@f+2)^(0+256)
 20696  2E75  3F03               	moviw [3]fsr0
 20697  2E76                     L1:	
 20698  2E76  00BB               	movwf	(vfpfcnvrt@f+3)^(0+256)
 20699                           
 20700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
 20701  2E77  0021               	movlb	1	; select bank1
 20702  2E78  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20703  2E79  0086               	movwf	6
 20704  2E7A  0187               	clrf	7
 20705  2E7B  3002               	movlw	2
 20706  2E7C  0781               	addwf	1,f
 20707  2E7D  3141               	addfsr 1,1
 20708  2E7E  1803               	skipnc
 20709  2E7F  0A81               	incf	1,f
 20710                           
 20711                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 938:       
      +                                return efgtoa(fp, f, c);
 20712  2E80  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20713  2E81  00A1               	movwf	(efgtoa@fp+1)^(0+128)
 20714  2E82  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20715  2E83  00A0               	movwf	efgtoa@fp^(0+128)
 20716  2E84  0022               	movlb	2	; select bank2
 20717  2E85  083B               	movf	(vfpfcnvrt@f+3)^(0+256),w
 20718  2E86  0021               	movlb	1	; select bank1
 20719  2E87  00A5               	movwf	(efgtoa@f+3)^(0+128)
 20720  2E88  0022               	movlb	2	; select bank2
 20721  2E89  083A               	movf	(vfpfcnvrt@f+2)^(0+256),w
 20722  2E8A  0021               	movlb	1	; select bank1
 20723  2E8B  00A4               	movwf	(efgtoa@f+2)^(0+128)
 20724  2E8C  0022               	movlb	2	; select bank2
 20725  2E8D  0839               	movf	(vfpfcnvrt@f+1)^(0+256),w
 20726  2E8E  0021               	movlb	1	; select bank1
 20727  2E8F  00A3               	movwf	(efgtoa@f+1)^(0+128)
 20728  2E90  0022               	movlb	2	; select bank2
 20729  2E91  0838               	movf	vfpfcnvrt@f^(0+256),w
 20730  2E92  0021               	movlb	1	; select bank1
 20731  2E93  00A2               	movwf	efgtoa@f^(0+128)
 20732  2E94  0022               	movlb	2	; select bank2
 20733  2E95  0845               	movf	vfpfcnvrt@c^(0+256),w
 20734  2E96  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20735  2E97  0820               	movf	??_vfpfcnvrt^(0+256),w
 20736  2E98  0021               	movlb	1	; select bank1
 20737  2E99  00A6               	movwf	efgtoa@c^(0+128)
 20738  2E9A  3180  2058         	fcall	_efgtoa
 20739  2E9C  0021               	movlb	1	; select bank1
 20740  2E9D  0821               	movf	(?_efgtoa+1)^(0+128),w
 20741  2E9E  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20742  2E9F  0820               	movf	?_efgtoa^(0+128),w
 20743  2EA0  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20744  2EA1  0008               	return
 20745  2EA2                     L26:	
 20746  2EA2                     L25:	
 20747  2EA2  31A0  28FA         	ljmp	l7914
 20748                           
 20749                           	psect	text6_split_6
 20750  20FA                     l7914:	
 20751                           
 20752                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
 20753  20FA  0021               	movlb	1	; select bank1
 20754  20FB  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20755  20FC  0086               	movwf	6
 20756  20FD  0187               	clrf	7
 20757  20FE  3F40               	moviw [0]fsr1
 20758  20FF  00F1               	movwf	strncmp@_l
 20759  2100  3F41               	moviw [1]fsr1
 20760  2101  00F2               	movwf	strncmp@_l+1
 20761  2102  3034               	movlw	low (STR_75| (0+32768))
 20762  2103  00F3               	movwf	strncmp@_r
 20763  2104  30BB               	movlw	high (STR_75| (0+32768))
 20764  2105  00F4               	movwf	strncmp@_r+1
 20765  2106  3003               	movlw	3
 20766  2107  00F5               	movwf	strncmp@n
 20767  2108  3000               	movlw	0
 20768  2109  00F6               	movwf	strncmp@n+1
 20769  210A  3190  2000  31A0   	fcall	_strncmp
 20770  210D  0871               	movf	?_strncmp,w
 20771  210E  0472               	iorwf	?_strncmp+1,w
 20772  210F  1D03               	btfss	3,2
 20773  2110  2961               	goto	l7924
 20774                           
 20775                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
 20776  2111  0021               	movlb	1	; select bank1
 20777  2112  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20778  2113  0086               	movwf	6
 20779  2114  0187               	clrf	7
 20780  2115  3003               	movlw	3
 20781  2116  0781               	addwf	1,f
 20782  2117  3141               	addfsr 1,1
 20783  2118  1803               	skipnc
 20784  2119  0A81               	incf	1,f
 20785                           
 20786                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 20787  211A  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20788  211B  0086               	movwf	6
 20789  211C  3001               	movlw	1	; select bank2/3
 20790  211D  0087               	movwf	7
 20791  211E  0801               	movf	1,w
 20792  211F  0084               	movwf	4
 20793  2120  3001               	movlw	1	; select bank2/3
 20794  2121  0085               	movwf	5
 20795  2122  3002               	movlw	2
 20796  2123  0781               	addwf	1,f
 20797  2124  0800               	movf	0,w
 20798  2125  0022               	movlb	2	; select bank2
 20799  2126  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 20800  2127  01C7               	clrf	(vfpfcnvrt@llu+1)^(0+256)
 20801  2128  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 20802  2129  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 20803  212A  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 20804  212B  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 20805  212C  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 20806  212D  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 20807                           
 20808                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
 20809  212E  0021               	movlb	1	; select bank1
 20810  212F  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20811  2130  0020               	movlb	0	; select bank0
 20812  2131  00B1               	movwf	otoa@fp+1
 20813  2132  0021               	movlb	1	; select bank1
 20814  2133  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20815  2134  0020               	movlb	0	; select bank0
 20816  2135  00B0               	movwf	otoa@fp
 20817  2136  0022               	movlb	2	; select bank2
 20818  2137  0846               	movf	vfpfcnvrt@llu^(0+256),w
 20819  2138  0020               	movlb	0	; select bank0
 20820  2139  00B2               	movwf	otoa@d
 20821  213A  0022               	movlb	2	; select bank2
 20822  213B  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 20823  213C  0020               	movlb	0	; select bank0
 20824  213D  00B3               	movwf	otoa@d+1
 20825  213E  0022               	movlb	2	; select bank2
 20826  213F  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 20827  2140  0020               	movlb	0	; select bank0
 20828  2141  00B4               	movwf	otoa@d+2
 20829  2142  0022               	movlb	2	; select bank2
 20830  2143  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 20831  2144  0020               	movlb	0	; select bank0
 20832  2145  00B5               	movwf	otoa@d+3
 20833  2146  0022               	movlb	2	; select bank2
 20834  2147  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 20835  2148  0020               	movlb	0	; select bank0
 20836  2149  00B6               	movwf	otoa@d+4
 20837  214A  0022               	movlb	2	; select bank2
 20838  214B  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 20839  214C  0020               	movlb	0	; select bank0
 20840  214D  00B7               	movwf	otoa@d+5
 20841  214E  0022               	movlb	2	; select bank2
 20842  214F  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 20843  2150  0020               	movlb	0	; select bank0
 20844  2151  00B8               	movwf	otoa@d+6
 20845  2152  0022               	movlb	2	; select bank2
 20846  2153  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 20847  2154  0020               	movlb	0	; select bank0
 20848  2155  00B9               	movwf	otoa@d+7
 20849  2156  31A6  261C         	fcall	_otoa
 20850  2158  0020               	movlb	0	; select bank0
 20851  2159  0831               	movf	?_otoa+1,w
 20852  215A  0021               	movlb	1	; select bank1
 20853  215B  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20854  215C  0020               	movlb	0	; select bank0
 20855  215D  0830               	movf	?_otoa,w
 20856  215E  0021               	movlb	1	; select bank1
 20857  215F  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20858  2160  0008               	return
 20859  2161                     l7924:	
 20860                           
 20861                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
 20862  2161  0021               	movlb	1	; select bank1
 20863  2162  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20864  2163  0086               	movwf	6
 20865  2164  0187               	clrf	7
 20866  2165  3F40               	moviw [0]fsr1
 20867  2166  00F1               	movwf	strncmp@_l
 20868  2167  3F41               	moviw [1]fsr1
 20869  2168  00F2               	movwf	strncmp@_l+1
 20870  2169  3035               	movlw	low ((STR_75+1)| (0+32768))
 20871  216A  00F3               	movwf	strncmp@_r
 20872  216B  30BB               	movlw	high ((STR_75+1)| (0+32768))
 20873  216C  00F4               	movwf	strncmp@_r+1
 20874  216D  3002               	movlw	2
 20875  216E  00F5               	movwf	strncmp@n
 20876  216F  3000               	movlw	0
 20877  2170  00F6               	movwf	strncmp@n+1
 20878  2171  3190  2000  31A0   	fcall	_strncmp
 20879  2174  0871               	movf	?_strncmp,w
 20880  2175  0472               	iorwf	?_strncmp+1,w
 20881  2176  1D03               	btfss	3,2
 20882  2177  29C9               	goto	L28
 20883                           
 20884                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
 20885  2178  0021               	movlb	1	; select bank1
 20886  2179  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20887  217A  0086               	movwf	6
 20888  217B  0187               	clrf	7
 20889  217C  3002               	movlw	2
 20890  217D  0781               	addwf	1,f
 20891  217E  3141               	addfsr 1,1
 20892  217F  1803               	skipnc
 20893  2180  0A81               	incf	1,f
 20894                           
 20895                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
 20896  2181  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20897  2182  0086               	movwf	6
 20898  2183  3001               	movlw	1	; select bank2/3
 20899  2184  0087               	movwf	7
 20900  2185  0801               	movf	1,w
 20901  2186  0084               	movwf	4
 20902  2187  3001               	movlw	1	; select bank2/3
 20903  2188  0085               	movwf	5
 20904  2189  3002               	movlw	2
 20905  218A  0781               	addwf	1,f
 20906  218B  3F00               	moviw [0]fsr0
 20907  218C  0022               	movlb	2	; select bank2
 20908  218D  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 20909  218E  3F01               	moviw [1]fsr0
 20910  218F  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 20911  2190  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 20912  2191  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 20913  2192  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 20914  2193  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 20915  2194  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 20916  2195  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 20917                           
 20918                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 985:       
      +                                return otoa(fp, llu);
 20919  2196  0021               	movlb	1	; select bank1
 20920  2197  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20921  2198  0020               	movlb	0	; select bank0
 20922  2199  00B1               	movwf	otoa@fp+1
 20923  219A  0021               	movlb	1	; select bank1
 20924  219B  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20925  219C  0020               	movlb	0	; select bank0
 20926  219D  00B0               	movwf	otoa@fp
 20927  219E  0022               	movlb	2	; select bank2
 20928  219F  0846               	movf	vfpfcnvrt@llu^(0+256),w
 20929  21A0  0020               	movlb	0	; select bank0
 20930  21A1  00B2               	movwf	otoa@d
 20931  21A2  0022               	movlb	2	; select bank2
 20932  21A3  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 20933  21A4  0020               	movlb	0	; select bank0
 20934  21A5  00B3               	movwf	otoa@d+1
 20935  21A6  0022               	movlb	2	; select bank2
 20936  21A7  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 20937  21A8  0020               	movlb	0	; select bank0
 20938  21A9  00B4               	movwf	otoa@d+2
 20939  21AA  0022               	movlb	2	; select bank2
 20940  21AB  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 20941  21AC  0020               	movlb	0	; select bank0
 20942  21AD  00B5               	movwf	otoa@d+3
 20943  21AE  0022               	movlb	2	; select bank2
 20944  21AF  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 20945  21B0  0020               	movlb	0	; select bank0
 20946  21B1  00B6               	movwf	otoa@d+4
 20947  21B2  0022               	movlb	2	; select bank2
 20948  21B3  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 20949  21B4  0020               	movlb	0	; select bank0
 20950  21B5  00B7               	movwf	otoa@d+5
 20951  21B6  0022               	movlb	2	; select bank2
 20952  21B7  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 20953  21B8  0020               	movlb	0	; select bank0
 20954  21B9  00B8               	movwf	otoa@d+6
 20955  21BA  0022               	movlb	2	; select bank2
 20956  21BB  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 20957  21BC  0020               	movlb	0	; select bank0
 20958  21BD  00B9               	movwf	otoa@d+7
 20959  21BE  31A6  261C         	fcall	_otoa
 20960  21C0  0020               	movlb	0	; select bank0
 20961  21C1  0831               	movf	?_otoa+1,w
 20962  21C2  0021               	movlb	1	; select bank1
 20963  21C3  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20964  21C4  0020               	movlb	0	; select bank0
 20965  21C5  0830               	movf	?_otoa,w
 20966  21C6  0021               	movlb	1	; select bank1
 20967  21C7  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20968  21C8  0008               	return
 20969  21C9                     L28:	
 20970  21C9                     L27:	
 20971  21C9  31A5  2D36         	ljmp	l7934
 20972                           
 20973                           	psect	text6_split_7
 20974  2536                     l7934:	
 20975                           
 20976                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
 20977  2536  0021               	movlb	1	; select bank1
 20978  2537  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20979  2538  0086               	movwf	6
 20980  2539  0187               	clrf	7
 20981  253A  3F40               	moviw [0]fsr1
 20982  253B  0022               	movlb	2	; select bank2
 20983  253C  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20984  253D  3F41               	moviw [1]fsr1
 20985  253E  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20986  253F  0820               	movf	??_vfpfcnvrt^(0+256),w
 20987  2540  0084               	movwf	4
 20988  2541  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 20989  2542  0085               	movwf	5
 20990  2543  0012               	moviw fsr0++
 20991  2544  3A6F               	xorlw	111
 20992  2545  1D03               	btfss	3,2
 20993  2546  2D98               	goto	l7944
 20994                           
 20995                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
 20996  2547  0021               	movlb	1	; select bank1
 20997  2548  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20998  2549  0086               	movwf	6
 20999  254A  0187               	clrf	7
 21000  254B  3001               	movlw	1
 21001  254C  0781               	addwf	1,f
 21002  254D  3141               	addfsr 1,1
 21003  254E  1803               	skipnc
 21004  254F  0A81               	incf	1,f
 21005                           
 21006                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
 21007  2550  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21008  2551  0086               	movwf	6
 21009  2552  3001               	movlw	1	; select bank2/3
 21010  2553  0087               	movwf	7
 21011  2554  0801               	movf	1,w
 21012  2555  0084               	movwf	4
 21013  2556  3001               	movlw	1	; select bank2/3
 21014  2557  0085               	movwf	5
 21015  2558  3002               	movlw	2
 21016  2559  0781               	addwf	1,f
 21017  255A  3F00               	moviw [0]fsr0
 21018  255B  0022               	movlb	2	; select bank2
 21019  255C  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 21020  255D  3F01               	moviw [1]fsr0
 21021  255E  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 21022  255F  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 21023  2560  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 21024  2561  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 21025  2562  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 21026  2563  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 21027  2564  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 21028                           
 21029                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 995:       
      +                                return otoa(fp, llu);
 21030  2565  0021               	movlb	1	; select bank1
 21031  2566  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21032  2567  0020               	movlb	0	; select bank0
 21033  2568  00B1               	movwf	otoa@fp+1
 21034  2569  0021               	movlb	1	; select bank1
 21035  256A  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21036  256B  0020               	movlb	0	; select bank0
 21037  256C  00B0               	movwf	otoa@fp
 21038  256D  0022               	movlb	2	; select bank2
 21039  256E  0846               	movf	vfpfcnvrt@llu^(0+256),w
 21040  256F  0020               	movlb	0	; select bank0
 21041  2570  00B2               	movwf	otoa@d
 21042  2571  0022               	movlb	2	; select bank2
 21043  2572  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 21044  2573  0020               	movlb	0	; select bank0
 21045  2574  00B3               	movwf	otoa@d+1
 21046  2575  0022               	movlb	2	; select bank2
 21047  2576  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 21048  2577  0020               	movlb	0	; select bank0
 21049  2578  00B4               	movwf	otoa@d+2
 21050  2579  0022               	movlb	2	; select bank2
 21051  257A  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 21052  257B  0020               	movlb	0	; select bank0
 21053  257C  00B5               	movwf	otoa@d+3
 21054  257D  0022               	movlb	2	; select bank2
 21055  257E  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 21056  257F  0020               	movlb	0	; select bank0
 21057  2580  00B6               	movwf	otoa@d+4
 21058  2581  0022               	movlb	2	; select bank2
 21059  2582  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 21060  2583  0020               	movlb	0	; select bank0
 21061  2584  00B7               	movwf	otoa@d+5
 21062  2585  0022               	movlb	2	; select bank2
 21063  2586  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 21064  2587  0020               	movlb	0	; select bank0
 21065  2588  00B8               	movwf	otoa@d+6
 21066  2589  0022               	movlb	2	; select bank2
 21067  258A  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 21068  258B  0020               	movlb	0	; select bank0
 21069  258C  00B9               	movwf	otoa@d+7
 21070  258D  31A6  261C         	fcall	_otoa
 21071  258F  0020               	movlb	0	; select bank0
 21072  2590  0831               	movf	?_otoa+1,w
 21073  2591  0021               	movlb	1	; select bank1
 21074  2592  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21075  2593  0020               	movlb	0	; select bank0
 21076  2594  0830               	movf	?_otoa,w
 21077  2595  0021               	movlb	1	; select bank1
 21078  2596  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21079  2597  0008               	return
 21080  2598                     l7944:	
 21081                           
 21082                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1000:      
      +                             if (!strncmp(*fmt, "lo", ((sizeof("lo")/sizeof("lo"[0]))-1))) {
 21083  2598  0021               	movlb	1	; select bank1
 21084  2599  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21085  259A  0086               	movwf	6
 21086  259B  0187               	clrf	7
 21087  259C  3F40               	moviw [0]fsr1
 21088  259D  00F1               	movwf	strncmp@_l
 21089  259E  3F41               	moviw [1]fsr1
 21090  259F  00F2               	movwf	strncmp@_l+1
 21091  25A0  305B               	movlw	low (STR_85| (0+32768))
 21092  25A1  00F3               	movwf	strncmp@_r
 21093  25A2  30BB               	movlw	high (STR_85| (0+32768))
 21094  25A3  00F4               	movwf	strncmp@_r+1
 21095  25A4  3002               	movlw	2
 21096  25A5  00F5               	movwf	strncmp@n
 21097  25A6  3000               	movlw	0
 21098  25A7  00F6               	movwf	strncmp@n+1
 21099  25A8  3190  2000  31A5   	fcall	_strncmp
 21100  25AB  0871               	movf	?_strncmp,w
 21101  25AC  0472               	iorwf	?_strncmp+1,w
 21102  25AD  1D03               	btfss	3,2
 21103  25AE  2E1A               	goto	L30
 21104                           
 21105                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1002:      
      +                                 *fmt += ((sizeof("lo")/sizeof("lo"[0]))-1);
 21106  25AF  0021               	movlb	1	; select bank1
 21107  25B0  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21108  25B1  0086               	movwf	6
 21109  25B2  0187               	clrf	7
 21110  25B3  3002               	movlw	2
 21111  25B4  0781               	addwf	1,f
 21112  25B5  3141               	addfsr 1,1
 21113  25B6  1803               	skipnc
 21114  25B7  0A81               	incf	1,f
 21115                           
 21116                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1003:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 21117  25B8  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21118  25B9  0086               	movwf	6
 21119  25BA  3001               	movlw	1	; select bank2/3
 21120  25BB  0087               	movwf	7
 21121  25BC  0801               	movf	1,w
 21122  25BD  0084               	movwf	4
 21123  25BE  3001               	movlw	1	; select bank2/3
 21124  25BF  0085               	movwf	5
 21125  25C0  3004               	movlw	4
 21126  25C1  0781               	addwf	1,f
 21127  25C2  3F00               	moviw [0]fsr0
 21128  25C3  0022               	movlb	2	; select bank2
 21129  25C4  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21130  25C5  3F01               	moviw [1]fsr0
 21131  25C6  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21132  25C7  3F02               	moviw [2]fsr0
 21133  25C8  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 21134  25C9  3F03               	moviw [3]fsr0
 21135  25CA  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 21136  25CB  0820               	movf	??_vfpfcnvrt^(0+256),w
 21137  25CC  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 21138  25CD  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21139  25CE  00A5               	movwf	((??_vfpfcnvrt+4)^(0+256)+1)
 21140  25CF  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 21141  25D0  00A6               	movwf	((??_vfpfcnvrt+4)^(0+256)+2)
 21142  25D1  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 21143  25D2  00A7               	movwf	((??_vfpfcnvrt+4)^(0+256)+3)
 21144  25D3  01A8               	clrf	((??_vfpfcnvrt+4)^(0+256)+4)
 21145  25D4  01A9               	clrf	((??_vfpfcnvrt+4)^(0+256)+5)
 21146  25D5  01AA               	clrf	((??_vfpfcnvrt+4)^(0+256)+6)
 21147  25D6  01AB               	clrf	((??_vfpfcnvrt+4)^(0+256)+7)
 21148  25D7  082B               	movf	((??_vfpfcnvrt+4)^(0+256)+7),w
 21149  25D8  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 21150  25D9  082A               	movf	((??_vfpfcnvrt+4)^(0+256)+6),w
 21151  25DA  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 21152  25DB  0829               	movf	((??_vfpfcnvrt+4)^(0+256)+5),w
 21153  25DC  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 21154  25DD  0828               	movf	((??_vfpfcnvrt+4)^(0+256)+4),w
 21155  25DE  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 21156  25DF  0827               	movf	((??_vfpfcnvrt+4)^(0+256)+3),w
 21157  25E0  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 21158  25E1  0826               	movf	((??_vfpfcnvrt+4)^(0+256)+2),w
 21159  25E2  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 21160  25E3  0825               	movf	((??_vfpfcnvrt+4)^(0+256)+1),w
 21161  25E4  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 21162  25E5  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 21163  25E6  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 21164                           
 21165                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1005:      
      +                                 return otoa(fp, llu);
 21166  25E7  0021               	movlb	1	; select bank1
 21167  25E8  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21168  25E9  0020               	movlb	0	; select bank0
 21169  25EA  00B1               	movwf	otoa@fp+1
 21170  25EB  0021               	movlb	1	; select bank1
 21171  25EC  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21172  25ED  0020               	movlb	0	; select bank0
 21173  25EE  00B0               	movwf	otoa@fp
 21174  25EF  0022               	movlb	2	; select bank2
 21175  25F0  0846               	movf	vfpfcnvrt@llu^(0+256),w
 21176  25F1  0020               	movlb	0	; select bank0
 21177  25F2  00B2               	movwf	otoa@d
 21178  25F3  0022               	movlb	2	; select bank2
 21179  25F4  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 21180  25F5  0020               	movlb	0	; select bank0
 21181  25F6  00B3               	movwf	otoa@d+1
 21182  25F7  0022               	movlb	2	; select bank2
 21183  25F8  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 21184  25F9  0020               	movlb	0	; select bank0
 21185  25FA  00B4               	movwf	otoa@d+2
 21186  25FB  0022               	movlb	2	; select bank2
 21187  25FC  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 21188  25FD  0020               	movlb	0	; select bank0
 21189  25FE  00B5               	movwf	otoa@d+3
 21190  25FF  0022               	movlb	2	; select bank2
 21191  2600  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 21192  2601  0020               	movlb	0	; select bank0
 21193  2602  00B6               	movwf	otoa@d+4
 21194  2603  0022               	movlb	2	; select bank2
 21195  2604  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 21196  2605  0020               	movlb	0	; select bank0
 21197  2606  00B7               	movwf	otoa@d+5
 21198  2607  0022               	movlb	2	; select bank2
 21199  2608  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 21200  2609  0020               	movlb	0	; select bank0
 21201  260A  00B8               	movwf	otoa@d+6
 21202  260B  0022               	movlb	2	; select bank2
 21203  260C  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 21204  260D  0020               	movlb	0	; select bank0
 21205  260E  00B9               	movwf	otoa@d+7
 21206  260F  31A6  261C         	fcall	_otoa
 21207  2611  0020               	movlb	0	; select bank0
 21208  2612  0831               	movf	?_otoa+1,w
 21209  2613  0021               	movlb	1	; select bank1
 21210  2614  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21211  2615  0020               	movlb	0	; select bank0
 21212  2616  0830               	movf	?_otoa,w
 21213  2617  0021               	movlb	1	; select bank1
 21214  2618  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21215  2619  0008               	return
 21216  261A                     L30:	
 21217  261A                     L29:	
 21218  261A  3188  283F         	ljmp	l7954
 21219                           
 21220                           	psect	text6_split_8
 21221  083F                     l7954:	
 21222                           
 21223                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
 21224  083F  0021               	movlb	1	; select bank1
 21225  0840  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21226  0841  0086               	movwf	6
 21227  0842  0187               	clrf	7
 21228  0843  3F40               	moviw [0]fsr1
 21229  0844  00F1               	movwf	strncmp@_l
 21230  0845  3F41               	moviw [1]fsr1
 21231  0846  00F2               	movwf	strncmp@_l+1
 21232  0847  305E               	movlw	low (STR_90| (0+32768))
 21233  0848  00F3               	movwf	strncmp@_r
 21234  0849  30BB               	movlw	high (STR_90| (0+32768))
 21235  084A  00F4               	movwf	strncmp@_r+1
 21236  084B  3002               	movlw	2
 21237  084C  00F5               	movwf	strncmp@n
 21238  084D  3000               	movlw	0
 21239  084E  00F6               	movwf	strncmp@n+1
 21240  084F  3190  2000  3188   	fcall	_strncmp
 21241  0852  0871               	movf	?_strncmp,w
 21242  0853  0472               	iorwf	?_strncmp+1,w
 21243  0854  1D03               	btfss	3,2
 21244  0855  28A7               	goto	l7964
 21245                           
 21246                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
 21247  0856  0021               	movlb	1	; select bank1
 21248  0857  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21249  0858  0086               	movwf	6
 21250  0859  0187               	clrf	7
 21251  085A  3002               	movlw	2
 21252  085B  0781               	addwf	1,f
 21253  085C  3141               	addfsr 1,1
 21254  085D  1803               	skipnc
 21255  085E  0A81               	incf	1,f
 21256                           
 21257                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 21258  085F  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21259  0860  0086               	movwf	6
 21260  0861  3001               	movlw	1	; select bank2/3
 21261  0862  0087               	movwf	7
 21262  0863  0801               	movf	1,w
 21263  0864  0084               	movwf	4
 21264  0865  3001               	movlw	1	; select bank2/3
 21265  0866  0085               	movwf	5
 21266  0867  3002               	movlw	2
 21267  0868  0781               	addwf	1,f
 21268  0869  3F00               	moviw [0]fsr0
 21269  086A  0022               	movlb	2	; select bank2
 21270  086B  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 21271  086C  3F01               	moviw [1]fsr0
 21272  086D  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 21273  086E  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 21274  086F  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 21275  0870  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 21276  0871  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 21277  0872  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 21278  0873  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 21279                           
 21280                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1049:      
      +                                 return otoa(fp, llu);
 21281  0874  0021               	movlb	1	; select bank1
 21282  0875  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21283  0876  0020               	movlb	0	; select bank0
 21284  0877  00B1               	movwf	otoa@fp+1
 21285  0878  0021               	movlb	1	; select bank1
 21286  0879  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21287  087A  0020               	movlb	0	; select bank0
 21288  087B  00B0               	movwf	otoa@fp
 21289  087C  0022               	movlb	2	; select bank2
 21290  087D  0846               	movf	vfpfcnvrt@llu^(0+256),w
 21291  087E  0020               	movlb	0	; select bank0
 21292  087F  00B2               	movwf	otoa@d
 21293  0880  0022               	movlb	2	; select bank2
 21294  0881  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 21295  0882  0020               	movlb	0	; select bank0
 21296  0883  00B3               	movwf	otoa@d+1
 21297  0884  0022               	movlb	2	; select bank2
 21298  0885  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 21299  0886  0020               	movlb	0	; select bank0
 21300  0887  00B4               	movwf	otoa@d+2
 21301  0888  0022               	movlb	2	; select bank2
 21302  0889  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 21303  088A  0020               	movlb	0	; select bank0
 21304  088B  00B5               	movwf	otoa@d+3
 21305  088C  0022               	movlb	2	; select bank2
 21306  088D  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 21307  088E  0020               	movlb	0	; select bank0
 21308  088F  00B6               	movwf	otoa@d+4
 21309  0890  0022               	movlb	2	; select bank2
 21310  0891  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 21311  0892  0020               	movlb	0	; select bank0
 21312  0893  00B7               	movwf	otoa@d+5
 21313  0894  0022               	movlb	2	; select bank2
 21314  0895  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 21315  0896  0020               	movlb	0	; select bank0
 21316  0897  00B8               	movwf	otoa@d+6
 21317  0898  0022               	movlb	2	; select bank2
 21318  0899  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 21319  089A  0020               	movlb	0	; select bank0
 21320  089B  00B9               	movwf	otoa@d+7
 21321  089C  31A6  261C         	fcall	_otoa
 21322  089E  0020               	movlb	0	; select bank0
 21323  089F  0831               	movf	?_otoa+1,w
 21324  08A0  0021               	movlb	1	; select bank1
 21325  08A1  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21326  08A2  0020               	movlb	0	; select bank0
 21327  08A3  0830               	movf	?_otoa,w
 21328  08A4  0021               	movlb	1	; select bank1
 21329  08A5  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21330  08A6  0008               	return
 21331  08A7                     l7964:	
 21332                           
 21333                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
 21334  08A7  0021               	movlb	1	; select bank1
 21335  08A8  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21336  08A9  0086               	movwf	6
 21337  08AA  0187               	clrf	7
 21338  08AB  3F40               	moviw [0]fsr1
 21339  08AC  00F1               	movwf	strncmp@_l
 21340  08AD  3F41               	moviw [1]fsr1
 21341  08AE  00F2               	movwf	strncmp@_l+1
 21342  08AF  3030               	movlw	low (STR_95| (0+32768))
 21343  08B0  00F3               	movwf	strncmp@_r
 21344  08B1  30BB               	movlw	high (STR_95| (0+32768))
 21345  08B2  00F4               	movwf	strncmp@_r+1
 21346  08B3  3003               	movlw	3
 21347  08B4  00F5               	movwf	strncmp@n
 21348  08B5  3000               	movlw	0
 21349  08B6  00F6               	movwf	strncmp@n+1
 21350  08B7  3190  2000  3188   	fcall	_strncmp
 21351  08BA  0871               	movf	?_strncmp,w
 21352  08BB  0472               	iorwf	?_strncmp+1,w
 21353  08BC  1D03               	btfss	3,2
 21354  08BD  2977               	goto	l7976
 21355                           
 21356                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
 21357  08BE  0021               	movlb	1	; select bank1
 21358  08BF  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21359  08C0  0086               	movwf	6
 21360  08C1  0187               	clrf	7
 21361  08C2  3003               	movlw	3
 21362  08C3  0781               	addwf	1,f
 21363  08C4  3141               	addfsr 1,1
 21364  08C5  1803               	skipnc
 21365  08C6  0A81               	incf	1,f
 21366                           
 21367                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
 21368  08C7  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21369  08C8  0086               	movwf	6
 21370  08C9  3001               	movlw	1	; select bank2/3
 21371  08CA  0087               	movwf	7
 21372  08CB  3F40               	moviw [0]fsr1
 21373  08CC  0084               	movwf	4
 21374  08CD  3001               	movlw	1	; select bank2/3
 21375  08CE  0085               	movwf	5
 21376  08CF  0A81               	incf	1,f
 21377  08D0  0800               	movf	0,w
 21378  08D1  0022               	movlb	2	; select bank2
 21379  08D2  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21380  08D3  0820               	movf	??_vfpfcnvrt^(0+256),w
 21381  08D4  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 21382                           
 21383                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
 21384  08D5  0023               	movlb	3	; select bank3
 21385  08D6  083C               	movf	_nout^(0+384),w
 21386  08D7  0022               	movlb	2	; select bank2
 21387  08D8  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21388  08D9  0844               	movf	vfpfcnvrt@vp^(0+256),w
 21389  08DA  0086               	movwf	6
 21390  08DB  3001               	movlw	1	; select bank2/3
 21391  08DC  0087               	movwf	7
 21392  08DD  0820               	movf	??_vfpfcnvrt^(0+256),w
 21393  08DE  0081               	movwf	1
 21394  08DF  2973               	goto	l7972
 21395  08E0                     l7978:	
 21396                           
 21397                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
 21398  08E0  0021               	movlb	1	; select bank1
 21399  08E1  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21400  08E2  0086               	movwf	6
 21401  08E3  0187               	clrf	7
 21402  08E4  3002               	movlw	2
 21403  08E5  0781               	addwf	1,f
 21404  08E6  3141               	addfsr 1,1
 21405  08E7  1803               	skipnc
 21406  08E8  0A81               	incf	1,f
 21407                           
 21408                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
 21409  08E9  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21410  08EA  0086               	movwf	6
 21411  08EB  3001               	movlw	1	; select bank2/3
 21412  08EC  0087               	movwf	7
 21413  08ED  3F40               	moviw [0]fsr1
 21414  08EE  0084               	movwf	4
 21415  08EF  3001               	movlw	1	; select bank2/3
 21416  08F0  0085               	movwf	5
 21417  08F1  0A81               	incf	1,f
 21418  08F2  0800               	movf	0,w
 21419  08F3  0022               	movlb	2	; select bank2
 21420  08F4  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21421  08F5  0820               	movf	??_vfpfcnvrt^(0+256),w
 21422  08F6  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 21423                           
 21424                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
 21425  08F7  0844               	movf	vfpfcnvrt@vp^(0+256),w
 21426  08F8  0086               	movwf	6
 21427  08F9  3001               	movlw	1	; select bank2/3
 21428  08FA  0087               	movwf	7
 21429  08FB  0023               	movlb	3	; select bank3
 21430  08FC  083C               	movf	_nout^(0+384),w
 21431  08FD  3FC0               	movwi [0]fsr1
 21432  08FE  083D               	movf	(_nout+1)^(0+384),w
 21433  08FF  3FC1               	movwi [1]fsr1
 21434  0900  2973               	goto	l7972
 21435  0901                     l7990:	
 21436                           
 21437                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
 21438  0901  0021               	movlb	1	; select bank1
 21439  0902  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21440  0903  0086               	movwf	6
 21441  0904  0187               	clrf	7
 21442  0905  3001               	movlw	1
 21443  0906  0781               	addwf	1,f
 21444  0907  3141               	addfsr 1,1
 21445  0908  1803               	skipnc
 21446  0909  0A81               	incf	1,f
 21447                           
 21448                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
 21449  090A  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21450  090B  0086               	movwf	6
 21451  090C  3001               	movlw	1	; select bank2/3
 21452  090D  0087               	movwf	7
 21453  090E  3F40               	moviw [0]fsr1
 21454  090F  0084               	movwf	4
 21455  0910  3001               	movlw	1	; select bank2/3
 21456  0911  0085               	movwf	5
 21457  0912  0A81               	incf	1,f
 21458  0913  0800               	movf	0,w
 21459  0914  0022               	movlb	2	; select bank2
 21460  0915  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21461  0916  0820               	movf	??_vfpfcnvrt^(0+256),w
 21462  0917  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 21463                           
 21464                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
 21465  0918  0844               	movf	vfpfcnvrt@vp^(0+256),w
 21466  0919  0086               	movwf	6
 21467  091A  3001               	movlw	1	; select bank2/3
 21468  091B  0087               	movwf	7
 21469  091C  0023               	movlb	3	; select bank3
 21470  091D  083C               	movf	_nout^(0+384),w
 21471  091E  3FC0               	movwi [0]fsr1
 21472  091F  083D               	movf	(_nout+1)^(0+384),w
 21473  0920  3FC1               	movwi [1]fsr1
 21474  0921  2973               	goto	l7972
 21475  0922                     l8002:	
 21476                           
 21477                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1087:      
      +                                 *fmt += ((sizeof("ln")/sizeof("ln"[0]))-1);
 21478  0922  0021               	movlb	1	; select bank1
 21479  0923  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21480  0924  0086               	movwf	6
 21481  0925  0187               	clrf	7
 21482  0926  3002               	movlw	2
 21483  0927  0781               	addwf	1,f
 21484  0928  3141               	addfsr 1,1
 21485  0929  1803               	skipnc
 21486  092A  0A81               	incf	1,f
 21487                           
 21488                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1088:      
      +                                 vp = (void *)(*(long * *)__va_arg(*(long * **)ap, (long *)0));
 21489  092B  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21490  092C  0086               	movwf	6
 21491  092D  3001               	movlw	1	; select bank2/3
 21492  092E  0087               	movwf	7
 21493  092F  3F40               	moviw [0]fsr1
 21494  0930  0084               	movwf	4
 21495  0931  3001               	movlw	1	; select bank2/3
 21496  0932  0085               	movwf	5
 21497  0933  0A81               	incf	1,f
 21498  0934  0800               	movf	0,w
 21499  0935  0022               	movlb	2	; select bank2
 21500  0936  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21501  0937  0820               	movf	??_vfpfcnvrt^(0+256),w
 21502  0938  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 21503                           
 21504                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1089:      
      +                                 *(long *)vp = (long)nout;
 21505  0939  0023               	movlb	3	; select bank3
 21506  093A  083C               	movf	_nout^(0+384),w
 21507  093B  0022               	movlb	2	; select bank2
 21508  093C  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21509  093D  0023               	movlb	3	; select bank3
 21510  093E  083D               	movf	(_nout+1)^(0+384),w
 21511  093F  0022               	movlb	2	; select bank2
 21512  0940  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21513  0941  3000               	movlw	0
 21514  0942  1BA1               	btfsc	(??_vfpfcnvrt^(0+256)+1),7
 21515  0943  30FF               	movlw	255
 21516  0944  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 21517  0945  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 21518  0946  0844               	movf	vfpfcnvrt@vp^(0+256),w
 21519  0947  0086               	movwf	6
 21520  0948  3001               	movlw	1	; select bank2/3
 21521  0949  0087               	movwf	7
 21522  094A  0820               	movf	??_vfpfcnvrt^(0+256),w
 21523  094B  3FC0               	movwi [0]fsr1
 21524  094C  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21525  094D  3FC1               	movwi [1]fsr1
 21526  094E  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 21527  094F  3FC2               	movwi [2]fsr1
 21528  0950  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 21529  0951  3FC3               	movwi [3]fsr1
 21530  0952  2973               	goto	l7972
 21531  0953                     l8014:	
 21532                           
 21533                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
 21534  0953  0021               	movlb	1	; select bank1
 21535  0954  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21536  0955  0086               	movwf	6
 21537  0956  0187               	clrf	7
 21538  0957  3002               	movlw	2
 21539  0958  0781               	addwf	1,f
 21540  0959  3141               	addfsr 1,1
 21541  095A  1803               	skipnc
 21542  095B  0A81               	incf	1,f
 21543                           
 21544                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
 21545  095C  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21546  095D  0086               	movwf	6
 21547  095E  3001               	movlw	1	; select bank2/3
 21548  095F  0087               	movwf	7
 21549  0960  3F40               	moviw [0]fsr1
 21550  0961  0084               	movwf	4
 21551  0962  3001               	movlw	1	; select bank2/3
 21552  0963  0085               	movwf	5
 21553  0964  0A81               	incf	1,f
 21554  0965  0800               	movf	0,w
 21555  0966  0022               	movlb	2	; select bank2
 21556  0967  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21557  0968  0820               	movf	??_vfpfcnvrt^(0+256),w
 21558  0969  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 21559                           
 21560                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
 21561  096A  0844               	movf	vfpfcnvrt@vp^(0+256),w
 21562  096B  0086               	movwf	6
 21563  096C  3001               	movlw	1	; select bank2/3
 21564  096D  0087               	movwf	7
 21565  096E  0023               	movlb	3	; select bank3
 21566  096F  083C               	movf	_nout^(0+384),w
 21567  0970  3FC0               	movwi [0]fsr1
 21568  0971  083D               	movf	(_nout+1)^(0+384),w
 21569  0972  3FC1               	movwi [1]fsr1
 21570  0973                     l7972:	
 21571                           
 21572                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
 21573  0973  0021               	movlb	1	; select bank1
 21574  0974  01E3               	clrf	?_vfpfcnvrt^(0+128)
 21575  0975  01E4               	clrf	(?_vfpfcnvrt+1)^(0+128)
 21576  0976  0008               	return
 21577  0977                     l7976:	
 21578                           
 21579                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
 21580  0977  0021               	movlb	1	; select bank1
 21581  0978  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21582  0979  0086               	movwf	6
 21583  097A  0187               	clrf	7
 21584  097B  3F40               	moviw [0]fsr1
 21585  097C  00F1               	movwf	strncmp@_l
 21586  097D  3F41               	moviw [1]fsr1
 21587  097E  00F2               	movwf	strncmp@_l+1
 21588  097F  3031               	movlw	low ((STR_95+1)| (0+32768))
 21589  0980  00F3               	movwf	strncmp@_r
 21590  0981  30BB               	movlw	high ((STR_95+1)| (0+32768))
 21591  0982  00F4               	movwf	strncmp@_r+1
 21592  0983  3002               	movlw	2
 21593  0984  00F5               	movwf	strncmp@n
 21594  0985  3000               	movlw	0
 21595  0986  00F6               	movwf	strncmp@n+1
 21596  0987  3190  2000  3188   	fcall	_strncmp
 21597  098A  0871               	movf	?_strncmp,w
 21598  098B  0472               	iorwf	?_strncmp+1,w
 21599  098C  1903               	btfsc	3,2
 21600  098D  28E0               	goto	l7978
 21601                           
 21602                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
 21603  098E  0021               	movlb	1	; select bank1
 21604  098F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21605  0990  0086               	movwf	6
 21606  0991  0187               	clrf	7
 21607  0992  3F40               	moviw [0]fsr1
 21608  0993  0022               	movlb	2	; select bank2
 21609  0994  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21610  0995  3F41               	moviw [1]fsr1
 21611  0996  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21612  0997  0820               	movf	??_vfpfcnvrt^(0+256),w
 21613  0998  0084               	movwf	4
 21614  0999  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21615  099A  0085               	movwf	5
 21616  099B  0012               	moviw fsr0++
 21617  099C  3A6E               	xorlw	110
 21618  099D  1903               	btfsc	3,2
 21619  099E  2901               	goto	l7990
 21620                           
 21621                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1085:      
      +                             if (!strncmp(*fmt, "ln", ((sizeof("ln")/sizeof("ln"[0]))-1))) {
 21622  099F  0021               	movlb	1	; select bank1
 21623  09A0  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21624  09A1  0086               	movwf	6
 21625  09A2  0187               	clrf	7
 21626  09A3  3F40               	moviw [0]fsr1
 21627  09A4  00F1               	movwf	strncmp@_l
 21628  09A5  3F41               	moviw [1]fsr1
 21629  09A6  00F2               	movwf	strncmp@_l+1
 21630  09A7  3055               	movlw	low (STR_105| (0+32768))
 21631  09A8  00F3               	movwf	strncmp@_r
 21632  09A9  30BB               	movlw	high (STR_105| (0+32768))
 21633  09AA  00F4               	movwf	strncmp@_r+1
 21634  09AB  3002               	movlw	2
 21635  09AC  00F5               	movwf	strncmp@n
 21636  09AD  3000               	movlw	0
 21637  09AE  00F6               	movwf	strncmp@n+1
 21638  09AF  3190  2000  3188   	fcall	_strncmp
 21639  09B2  0871               	movf	?_strncmp,w
 21640  09B3  0472               	iorwf	?_strncmp+1,w
 21641  09B4  1903               	btfsc	3,2
 21642  09B5  2922               	goto	l8002
 21643                           
 21644                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
 21645  09B6  0021               	movlb	1	; select bank1
 21646  09B7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21647  09B8  0086               	movwf	6
 21648  09B9  0187               	clrf	7
 21649  09BA  3F40               	moviw [0]fsr1
 21650  09BB  00F1               	movwf	strncmp@_l
 21651  09BC  3F41               	moviw [1]fsr1
 21652  09BD  00F2               	movwf	strncmp@_l+1
 21653  09BE  3058               	movlw	low (STR_110| (0+32768))
 21654  09BF  00F3               	movwf	strncmp@_r
 21655  09C0  30BB               	movlw	high (STR_110| (0+32768))
 21656  09C1  00F4               	movwf	strncmp@_r+1
 21657  09C2  3002               	movlw	2
 21658  09C3  00F5               	movwf	strncmp@n
 21659  09C4  3000               	movlw	0
 21660  09C5  00F6               	movwf	strncmp@n+1
 21661  09C6  3190  2000  3188   	fcall	_strncmp
 21662  09C9  0871               	movf	?_strncmp,w
 21663  09CA  0472               	iorwf	?_strncmp+1,w
 21664  09CB  1903               	btfsc	3,2
 21665  09CC  2953               	goto	l8014
 21666                           
 21667                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
 21668  09CD  0021               	movlb	1	; select bank1
 21669  09CE  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21670  09CF  0086               	movwf	6
 21671  09D0  0187               	clrf	7
 21672  09D1  3F40               	moviw [0]fsr1
 21673  09D2  0022               	movlb	2	; select bank2
 21674  09D3  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21675  09D4  3F41               	moviw [1]fsr1
 21676  09D5  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21677  09D6  0820               	movf	??_vfpfcnvrt^(0+256),w
 21678  09D7  0084               	movwf	4
 21679  09D8  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21680  09D9  0085               	movwf	5
 21681  09DA  0012               	moviw fsr0++
 21682  09DB  3A70               	xorlw	112
 21683  09DC  1D03               	btfss	3,2
 21684  09DD  2A43               	goto	l8034
 21685                           
 21686                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
 21687  09DE  0021               	movlb	1	; select bank1
 21688  09DF  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21689  09E0  0086               	movwf	6
 21690  09E1  0187               	clrf	7
 21691  09E2  3001               	movlw	1
 21692  09E3  0781               	addwf	1,f
 21693  09E4  3141               	addfsr 1,1
 21694  09E5  1803               	skipnc
 21695  09E6  0A81               	incf	1,f
 21696                           
 21697                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
 21698  09E7  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21699  09E8  0086               	movwf	6
 21700  09E9  3001               	movlw	1	; select bank2/3
 21701  09EA  0087               	movwf	7
 21702  09EB  3F40               	moviw [0]fsr1
 21703  09EC  0084               	movwf	4
 21704  09ED  3001               	movlw	1	; select bank2/3
 21705  09EE  0085               	movwf	5
 21706  09EF  0A81               	incf	1,f
 21707  09F0  0800               	movf	0,w
 21708  09F1  0022               	movlb	2	; select bank2
 21709  09F2  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21710  09F3  01A1               	clrf	(??_vfpfcnvrt^(0+256)+1)
 21711  09F4  01A2               	clrf	(??_vfpfcnvrt^(0+256)+2)
 21712  09F5  01A3               	clrf	(??_vfpfcnvrt^(0+256)+3)
 21713  09F6  01A4               	clrf	(??_vfpfcnvrt^(0+256)+4)
 21714  09F7  01A5               	clrf	(??_vfpfcnvrt^(0+256)+5)
 21715  09F8  01A6               	clrf	(??_vfpfcnvrt^(0+256)+6)
 21716  09F9  01A7               	clrf	(??_vfpfcnvrt^(0+256)+7)
 21717  09FA  0827               	movf	(??_vfpfcnvrt^(0+256)+7),w
 21718  09FB  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 21719  09FC  0826               	movf	(??_vfpfcnvrt^(0+256)+6),w
 21720  09FD  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 21721  09FE  0825               	movf	(??_vfpfcnvrt^(0+256)+5),w
 21722  09FF  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 21723  0A00  0824               	movf	(??_vfpfcnvrt^(0+256)+4),w
 21724  0A01  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 21725  0A02  0823               	movf	(??_vfpfcnvrt^(0+256)+3),w
 21726  0A03  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 21727  0A04  0822               	movf	(??_vfpfcnvrt^(0+256)+2),w
 21728  0A05  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 21729  0A06  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 21730  0A07  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 21731  0A08  0820               	movf	??_vfpfcnvrt^(0+256),w
 21732  0A09  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 21733                           
 21734                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
 21735  0A0A  0021               	movlb	1	; select bank1
 21736  0A0B  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21737  0A0C  0020               	movlb	0	; select bank0
 21738  0A0D  00B1               	movwf	xtoa@fp+1
 21739  0A0E  0021               	movlb	1	; select bank1
 21740  0A0F  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21741  0A10  0020               	movlb	0	; select bank0
 21742  0A11  00B0               	movwf	xtoa@fp
 21743  0A12  0022               	movlb	2	; select bank2
 21744  0A13  0846               	movf	vfpfcnvrt@llu^(0+256),w
 21745  0A14  0020               	movlb	0	; select bank0
 21746  0A15  00B2               	movwf	xtoa@d
 21747  0A16  0022               	movlb	2	; select bank2
 21748  0A17  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 21749  0A18  0020               	movlb	0	; select bank0
 21750  0A19  00B3               	movwf	xtoa@d+1
 21751  0A1A  0022               	movlb	2	; select bank2
 21752  0A1B  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 21753  0A1C  0020               	movlb	0	; select bank0
 21754  0A1D  00B4               	movwf	xtoa@d+2
 21755  0A1E  0022               	movlb	2	; select bank2
 21756  0A1F  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 21757  0A20  0020               	movlb	0	; select bank0
 21758  0A21  00B5               	movwf	xtoa@d+3
 21759  0A22  0022               	movlb	2	; select bank2
 21760  0A23  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 21761  0A24  0020               	movlb	0	; select bank0
 21762  0A25  00B6               	movwf	xtoa@d+4
 21763  0A26  0022               	movlb	2	; select bank2
 21764  0A27  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 21765  0A28  0020               	movlb	0	; select bank0
 21766  0A29  00B7               	movwf	xtoa@d+5
 21767  0A2A  0022               	movlb	2	; select bank2
 21768  0A2B  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 21769  0A2C  0020               	movlb	0	; select bank0
 21770  0A2D  00B8               	movwf	xtoa@d+6
 21771  0A2E  0022               	movlb	2	; select bank2
 21772  0A2F  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 21773  0A30  0020               	movlb	0	; select bank0
 21774  0A31  00B9               	movwf	xtoa@d+7
 21775  0A32  3078               	movlw	120
 21776  0A33  0022               	movlb	2	; select bank2
 21777  0A34  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21778  0A35  0820               	movf	??_vfpfcnvrt^(0+256),w
 21779  0A36  0020               	movlb	0	; select bank0
 21780  0A37  00BA               	movwf	xtoa@x
 21781  0A38  319C  24C5         	fcall	_xtoa
 21782  0A3A  0020               	movlb	0	; select bank0
 21783  0A3B  0831               	movf	?_xtoa+1,w
 21784  0A3C  0021               	movlb	1	; select bank1
 21785  0A3D  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21786  0A3E  0020               	movlb	0	; select bank0
 21787  0A3F  0830               	movf	?_xtoa,w
 21788  0A40  0021               	movlb	1	; select bank1
 21789  0A41  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21790  0A42  0008               	return
 21791  0A43                     l8034:	
 21792                           
 21793                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 21794  0A43  0021               	movlb	1	; select bank1
 21795  0A44  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21796  0A45  0086               	movwf	6
 21797  0A46  0187               	clrf	7
 21798  0A47  3F40               	moviw [0]fsr1
 21799  0A48  0022               	movlb	2	; select bank2
 21800  0A49  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21801  0A4A  3F41               	moviw [1]fsr1
 21802  0A4B  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21803  0A4C  0820               	movf	??_vfpfcnvrt^(0+256),w
 21804  0A4D  0084               	movwf	4
 21805  0A4E  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21806  0A4F  0085               	movwf	5
 21807  0A50  0012               	moviw fsr0++
 21808  0A51  3A73               	xorlw	115
 21809  0A52  1D03               	btfss	3,2
 21810  0A53  2A84               	goto	l8044
 21811                           
 21812                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 21813  0A54  0021               	movlb	1	; select bank1
 21814  0A55  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21815  0A56  0086               	movwf	6
 21816  0A57  0187               	clrf	7
 21817  0A58  3001               	movlw	1
 21818  0A59  0781               	addwf	1,f
 21819  0A5A  3141               	addfsr 1,1
 21820  0A5B  1803               	skipnc
 21821  0A5C  0A81               	incf	1,f
 21822                           
 21823                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 21824  0A5D  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21825  0A5E  0086               	movwf	6
 21826  0A5F  3001               	movlw	1	; select bank2/3
 21827  0A60  0087               	movwf	7
 21828  0A61  3F40               	moviw [0]fsr1
 21829  0A62  0084               	movwf	4
 21830  0A63  3001               	movlw	1	; select bank2/3
 21831  0A64  0085               	movwf	5
 21832  0A65  0A81               	incf	1,f
 21833  0A66  0800               	movf	0,w
 21834  0A67  0022               	movlb	2	; select bank2
 21835  0A68  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21836  0A69  0820               	movf	??_vfpfcnvrt^(0+256),w
 21837  0A6A  00AC               	movwf	vfpfcnvrt@cp^(0+256)
 21838                           
 21839                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 21840  0A6B  0021               	movlb	1	; select bank1
 21841  0A6C  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21842  0A6D  0020               	movlb	0	; select bank0
 21843  0A6E  00A1               	movwf	stoa@fp+1
 21844  0A6F  0021               	movlb	1	; select bank1
 21845  0A70  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21846  0A71  0020               	movlb	0	; select bank0
 21847  0A72  00A0               	movwf	stoa@fp
 21848  0A73  0022               	movlb	2	; select bank2
 21849  0A74  082C               	movf	vfpfcnvrt@cp^(0+256),w
 21850  0A75  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21851  0A76  0820               	movf	??_vfpfcnvrt^(0+256),w
 21852  0A77  0020               	movlb	0	; select bank0
 21853  0A78  00A2               	movwf	stoa@s
 21854  0A79  31A0  2035         	fcall	_stoa
 21855  0A7B  0020               	movlb	0	; select bank0
 21856  0A7C  0821               	movf	?_stoa+1,w
 21857  0A7D  0021               	movlb	1	; select bank1
 21858  0A7E  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21859  0A7F  0020               	movlb	0	; select bank0
 21860  0A80  0820               	movf	?_stoa,w
 21861  0A81  0021               	movlb	1	; select bank1
 21862  0A82  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21863  0A83  0008               	return
 21864  0A84                     l8044:	
 21865                           
 21866                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
 21867  0A84  0021               	movlb	1	; select bank1
 21868  0A85  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21869  0A86  0086               	movwf	6
 21870  0A87  0187               	clrf	7
 21871  0A88  3F40               	moviw [0]fsr1
 21872  0A89  00F1               	movwf	strncmp@_l
 21873  0A8A  3F41               	moviw [1]fsr1
 21874  0A8B  00F2               	movwf	strncmp@_l+1
 21875  0A8C  3038               	movlw	low (STR_115| (0+32768))
 21876  0A8D  00F3               	movwf	strncmp@_r
 21877  0A8E  30BB               	movlw	high (STR_115| (0+32768))
 21878  0A8F  00F4               	movwf	strncmp@_r+1
 21879  0A90  3003               	movlw	3
 21880  0A91  00F5               	movwf	strncmp@n
 21881  0A92  3000               	movlw	0
 21882  0A93  00F6               	movwf	strncmp@n+1
 21883  0A94  3190  2000  3188   	fcall	_strncmp
 21884  0A97  0871               	movf	?_strncmp,w
 21885  0A98  0472               	iorwf	?_strncmp+1,w
 21886  0A99  1D03               	btfss	3,2
 21887  0A9A  2AEB               	goto	l8054
 21888                           
 21889                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
 21890  0A9B  0021               	movlb	1	; select bank1
 21891  0A9C  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21892  0A9D  0086               	movwf	6
 21893  0A9E  0187               	clrf	7
 21894  0A9F  3003               	movlw	3
 21895  0AA0  0781               	addwf	1,f
 21896  0AA1  3141               	addfsr 1,1
 21897  0AA2  1803               	skipnc
 21898  0AA3  0A81               	incf	1,f
 21899                           
 21900                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 21901  0AA4  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21902  0AA5  0086               	movwf	6
 21903  0AA6  3001               	movlw	1	; select bank2/3
 21904  0AA7  0087               	movwf	7
 21905  0AA8  0801               	movf	1,w
 21906  0AA9  0084               	movwf	4
 21907  0AAA  3001               	movlw	1	; select bank2/3
 21908  0AAB  0085               	movwf	5
 21909  0AAC  3002               	movlw	2
 21910  0AAD  0781               	addwf	1,f
 21911  0AAE  0800               	movf	0,w
 21912  0AAF  0022               	movlb	2	; select bank2
 21913  0AB0  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 21914  0AB1  01C7               	clrf	(vfpfcnvrt@llu+1)^(0+256)
 21915  0AB2  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 21916  0AB3  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 21917  0AB4  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 21918  0AB5  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 21919  0AB6  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 21920  0AB7  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 21921                           
 21922                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
 21923  0AB8  0021               	movlb	1	; select bank1
 21924  0AB9  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21925  0ABA  0020               	movlb	0	; select bank0
 21926  0ABB  00B1               	movwf	utoa@fp+1
 21927  0ABC  0021               	movlb	1	; select bank1
 21928  0ABD  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21929  0ABE  0020               	movlb	0	; select bank0
 21930  0ABF  00B0               	movwf	utoa@fp
 21931  0AC0  0022               	movlb	2	; select bank2
 21932  0AC1  0846               	movf	vfpfcnvrt@llu^(0+256),w
 21933  0AC2  0020               	movlb	0	; select bank0
 21934  0AC3  00B2               	movwf	utoa@d
 21935  0AC4  0022               	movlb	2	; select bank2
 21936  0AC5  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 21937  0AC6  0020               	movlb	0	; select bank0
 21938  0AC7  00B3               	movwf	utoa@d+1
 21939  0AC8  0022               	movlb	2	; select bank2
 21940  0AC9  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 21941  0ACA  0020               	movlb	0	; select bank0
 21942  0ACB  00B4               	movwf	utoa@d+2
 21943  0ACC  0022               	movlb	2	; select bank2
 21944  0ACD  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 21945  0ACE  0020               	movlb	0	; select bank0
 21946  0ACF  00B5               	movwf	utoa@d+3
 21947  0AD0  0022               	movlb	2	; select bank2
 21948  0AD1  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 21949  0AD2  0020               	movlb	0	; select bank0
 21950  0AD3  00B6               	movwf	utoa@d+4
 21951  0AD4  0022               	movlb	2	; select bank2
 21952  0AD5  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 21953  0AD6  0020               	movlb	0	; select bank0
 21954  0AD7  00B7               	movwf	utoa@d+5
 21955  0AD8  0022               	movlb	2	; select bank2
 21956  0AD9  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 21957  0ADA  0020               	movlb	0	; select bank0
 21958  0ADB  00B8               	movwf	utoa@d+6
 21959  0ADC  0022               	movlb	2	; select bank2
 21960  0ADD  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 21961  0ADE  0020               	movlb	0	; select bank0
 21962  0ADF  00B9               	movwf	utoa@d+7
 21963  0AE0  31A4  2455         	fcall	_utoa
 21964  0AE2  0020               	movlb	0	; select bank0
 21965  0AE3  0831               	movf	?_utoa+1,w
 21966  0AE4  0021               	movlb	1	; select bank1
 21967  0AE5  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21968  0AE6  0020               	movlb	0	; select bank0
 21969  0AE7  0830               	movf	?_utoa,w
 21970  0AE8  0021               	movlb	1	; select bank1
 21971  0AE9  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21972  0AEA  0008               	return
 21973  0AEB                     l8054:	
 21974                           
 21975                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
 21976  0AEB  0021               	movlb	1	; select bank1
 21977  0AEC  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21978  0AED  0086               	movwf	6
 21979  0AEE  0187               	clrf	7
 21980  0AEF  3F40               	moviw [0]fsr1
 21981  0AF0  00F1               	movwf	strncmp@_l
 21982  0AF1  3F41               	moviw [1]fsr1
 21983  0AF2  00F2               	movwf	strncmp@_l+1
 21984  0AF3  3039               	movlw	low ((STR_115+1)| (0+32768))
 21985  0AF4  00F3               	movwf	strncmp@_r
 21986  0AF5  30BB               	movlw	high ((STR_115+1)| (0+32768))
 21987  0AF6  00F4               	movwf	strncmp@_r+1
 21988  0AF7  3002               	movlw	2
 21989  0AF8  00F5               	movwf	strncmp@n
 21990  0AF9  3000               	movlw	0
 21991  0AFA  00F6               	movwf	strncmp@n+1
 21992  0AFB  3190  2000  3188   	fcall	_strncmp
 21993  0AFE  0871               	movf	?_strncmp,w
 21994  0AFF  0472               	iorwf	?_strncmp+1,w
 21995  0B00  1D03               	btfss	3,2
 21996  0B01  2B53               	goto	l8064
 21997                           
 21998                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
 21999  0B02  0021               	movlb	1	; select bank1
 22000  0B03  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22001  0B04  0086               	movwf	6
 22002  0B05  0187               	clrf	7
 22003  0B06  3002               	movlw	2
 22004  0B07  0781               	addwf	1,f
 22005  0B08  3141               	addfsr 1,1
 22006  0B09  1803               	skipnc
 22007  0B0A  0A81               	incf	1,f
 22008                           
 22009                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 22010  0B0B  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22011  0B0C  0086               	movwf	6
 22012  0B0D  3001               	movlw	1	; select bank2/3
 22013  0B0E  0087               	movwf	7
 22014  0B0F  0801               	movf	1,w
 22015  0B10  0084               	movwf	4
 22016  0B11  3001               	movlw	1	; select bank2/3
 22017  0B12  0085               	movwf	5
 22018  0B13  3002               	movlw	2
 22019  0B14  0781               	addwf	1,f
 22020  0B15  3F00               	moviw [0]fsr0
 22021  0B16  0022               	movlb	2	; select bank2
 22022  0B17  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 22023  0B18  3F01               	moviw [1]fsr0
 22024  0B19  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 22025  0B1A  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 22026  0B1B  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 22027  0B1C  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 22028  0B1D  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 22029  0B1E  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 22030  0B1F  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 22031                           
 22032                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1177:      
      +                                 return utoa(fp, llu);
 22033  0B20  0021               	movlb	1	; select bank1
 22034  0B21  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22035  0B22  0020               	movlb	0	; select bank0
 22036  0B23  00B1               	movwf	utoa@fp+1
 22037  0B24  0021               	movlb	1	; select bank1
 22038  0B25  0863               	movf	vfpfcnvrt@fp^(0+128),w
 22039  0B26  0020               	movlb	0	; select bank0
 22040  0B27  00B0               	movwf	utoa@fp
 22041  0B28  0022               	movlb	2	; select bank2
 22042  0B29  0846               	movf	vfpfcnvrt@llu^(0+256),w
 22043  0B2A  0020               	movlb	0	; select bank0
 22044  0B2B  00B2               	movwf	utoa@d
 22045  0B2C  0022               	movlb	2	; select bank2
 22046  0B2D  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 22047  0B2E  0020               	movlb	0	; select bank0
 22048  0B2F  00B3               	movwf	utoa@d+1
 22049  0B30  0022               	movlb	2	; select bank2
 22050  0B31  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 22051  0B32  0020               	movlb	0	; select bank0
 22052  0B33  00B4               	movwf	utoa@d+2
 22053  0B34  0022               	movlb	2	; select bank2
 22054  0B35  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 22055  0B36  0020               	movlb	0	; select bank0
 22056  0B37  00B5               	movwf	utoa@d+3
 22057  0B38  0022               	movlb	2	; select bank2
 22058  0B39  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 22059  0B3A  0020               	movlb	0	; select bank0
 22060  0B3B  00B6               	movwf	utoa@d+4
 22061  0B3C  0022               	movlb	2	; select bank2
 22062  0B3D  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 22063  0B3E  0020               	movlb	0	; select bank0
 22064  0B3F  00B7               	movwf	utoa@d+5
 22065  0B40  0022               	movlb	2	; select bank2
 22066  0B41  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 22067  0B42  0020               	movlb	0	; select bank0
 22068  0B43  00B8               	movwf	utoa@d+6
 22069  0B44  0022               	movlb	2	; select bank2
 22070  0B45  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 22071  0B46  0020               	movlb	0	; select bank0
 22072  0B47  00B9               	movwf	utoa@d+7
 22073  0B48  31A4  2455         	fcall	_utoa
 22074  0B4A  0020               	movlb	0	; select bank0
 22075  0B4B  0831               	movf	?_utoa+1,w
 22076  0B4C  0021               	movlb	1	; select bank1
 22077  0B4D  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22078  0B4E  0020               	movlb	0	; select bank0
 22079  0B4F  0830               	movf	?_utoa,w
 22080  0B50  0021               	movlb	1	; select bank1
 22081  0B51  00E3               	movwf	?_vfpfcnvrt^(0+128)
 22082  0B52  0008               	return
 22083  0B53                     l8064:	
 22084                           
 22085                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 22086  0B53  0021               	movlb	1	; select bank1
 22087  0B54  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22088  0B55  0086               	movwf	6
 22089  0B56  0187               	clrf	7
 22090  0B57  3F40               	moviw [0]fsr1
 22091  0B58  0022               	movlb	2	; select bank2
 22092  0B59  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22093  0B5A  3F41               	moviw [1]fsr1
 22094  0B5B  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22095  0B5C  0820               	movf	??_vfpfcnvrt^(0+256),w
 22096  0B5D  0084               	movwf	4
 22097  0B5E  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22098  0B5F  0085               	movwf	5
 22099  0B60  0012               	moviw fsr0++
 22100  0B61  3A75               	xorlw	117
 22101  0B62  1D03               	btfss	3,2
 22102  0B63  2BB5               	goto	l8074
 22103                           
 22104                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 22105  0B64  0021               	movlb	1	; select bank1
 22106  0B65  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22107  0B66  0086               	movwf	6
 22108  0B67  0187               	clrf	7
 22109  0B68  3001               	movlw	1
 22110  0B69  0781               	addwf	1,f
 22111  0B6A  3141               	addfsr 1,1
 22112  0B6B  1803               	skipnc
 22113  0B6C  0A81               	incf	1,f
 22114                           
 22115                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 22116  0B6D  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22117  0B6E  0086               	movwf	6
 22118  0B6F  3001               	movlw	1	; select bank2/3
 22119  0B70  0087               	movwf	7
 22120  0B71  0801               	movf	1,w
 22121  0B72  0084               	movwf	4
 22122  0B73  3001               	movlw	1	; select bank2/3
 22123  0B74  0085               	movwf	5
 22124  0B75  3002               	movlw	2
 22125  0B76  0781               	addwf	1,f
 22126  0B77  3F00               	moviw [0]fsr0
 22127  0B78  0022               	movlb	2	; select bank2
 22128  0B79  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 22129  0B7A  3F01               	moviw [1]fsr0
 22130  0B7B  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 22131  0B7C  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 22132  0B7D  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 22133  0B7E  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 22134  0B7F  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 22135  0B80  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 22136  0B81  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 22137                           
 22138                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 22139  0B82  0021               	movlb	1	; select bank1
 22140  0B83  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22141  0B84  0020               	movlb	0	; select bank0
 22142  0B85  00B1               	movwf	utoa@fp+1
 22143  0B86  0021               	movlb	1	; select bank1
 22144  0B87  0863               	movf	vfpfcnvrt@fp^(0+128),w
 22145  0B88  0020               	movlb	0	; select bank0
 22146  0B89  00B0               	movwf	utoa@fp
 22147  0B8A  0022               	movlb	2	; select bank2
 22148  0B8B  0846               	movf	vfpfcnvrt@llu^(0+256),w
 22149  0B8C  0020               	movlb	0	; select bank0
 22150  0B8D  00B2               	movwf	utoa@d
 22151  0B8E  0022               	movlb	2	; select bank2
 22152  0B8F  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 22153  0B90  0020               	movlb	0	; select bank0
 22154  0B91  00B3               	movwf	utoa@d+1
 22155  0B92  0022               	movlb	2	; select bank2
 22156  0B93  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 22157  0B94  0020               	movlb	0	; select bank0
 22158  0B95  00B4               	movwf	utoa@d+2
 22159  0B96  0022               	movlb	2	; select bank2
 22160  0B97  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 22161  0B98  0020               	movlb	0	; select bank0
 22162  0B99  00B5               	movwf	utoa@d+3
 22163  0B9A  0022               	movlb	2	; select bank2
 22164  0B9B  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 22165  0B9C  0020               	movlb	0	; select bank0
 22166  0B9D  00B6               	movwf	utoa@d+4
 22167  0B9E  0022               	movlb	2	; select bank2
 22168  0B9F  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 22169  0BA0  0020               	movlb	0	; select bank0
 22170  0BA1  00B7               	movwf	utoa@d+5
 22171  0BA2  0022               	movlb	2	; select bank2
 22172  0BA3  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 22173  0BA4  0020               	movlb	0	; select bank0
 22174  0BA5  00B8               	movwf	utoa@d+6
 22175  0BA6  0022               	movlb	2	; select bank2
 22176  0BA7  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 22177  0BA8  0020               	movlb	0	; select bank0
 22178  0BA9  00B9               	movwf	utoa@d+7
 22179  0BAA  31A4  2455         	fcall	_utoa
 22180  0BAC  0020               	movlb	0	; select bank0
 22181  0BAD  0831               	movf	?_utoa+1,w
 22182  0BAE  0021               	movlb	1	; select bank1
 22183  0BAF  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22184  0BB0  0020               	movlb	0	; select bank0
 22185  0BB1  0830               	movf	?_utoa,w
 22186  0BB2  0021               	movlb	1	; select bank1
 22187  0BB3  00E3               	movwf	?_vfpfcnvrt^(0+128)
 22188  0BB4  0008               	return
 22189  0BB5                     l8074:	
 22190                           
 22191                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1192:      
      +                             if (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 22192  0BB5  0021               	movlb	1	; select bank1
 22193  0BB6  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22194  0BB7  0086               	movwf	6
 22195  0BB8  0187               	clrf	7
 22196  0BB9  3F40               	moviw [0]fsr1
 22197  0BBA  00F1               	movwf	strncmp@_l
 22198  0BBB  3F41               	moviw [1]fsr1
 22199  0BBC  00F2               	movwf	strncmp@_l+1
 22200  0BBD  3061               	movlw	low (STR_125| (0+32768))
 22201  0BBE  00F3               	movwf	strncmp@_r
 22202  0BBF  30BB               	movlw	high (STR_125| (0+32768))
 22203  0BC0  00F4               	movwf	strncmp@_r+1
 22204  0BC1  3002               	movlw	2
 22205  0BC2  00F5               	movwf	strncmp@n
 22206  0BC3  3000               	movlw	0
 22207  0BC4  00F6               	movwf	strncmp@n+1
 22208  0BC5  3190  2000  3188   	fcall	_strncmp
 22209  0BC8  0871               	movf	?_strncmp,w
 22210  0BC9  0472               	iorwf	?_strncmp+1,w
 22211  0BCA  1D03               	btfss	3,2
 22212  0BCB  2C37               	goto	l8084
 22213                           
 22214                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1194:      
      +                                 *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
 22215  0BCC  0021               	movlb	1	; select bank1
 22216  0BCD  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22217  0BCE  0086               	movwf	6
 22218  0BCF  0187               	clrf	7
 22219  0BD0  3002               	movlw	2
 22220  0BD1  0781               	addwf	1,f
 22221  0BD2  3141               	addfsr 1,1
 22222  0BD3  1803               	skipnc
 22223  0BD4  0A81               	incf	1,f
 22224                           
 22225                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1195:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 22226  0BD5  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22227  0BD6  0086               	movwf	6
 22228  0BD7  3001               	movlw	1	; select bank2/3
 22229  0BD8  0087               	movwf	7
 22230  0BD9  0801               	movf	1,w
 22231  0BDA  0084               	movwf	4
 22232  0BDB  3001               	movlw	1	; select bank2/3
 22233  0BDC  0085               	movwf	5
 22234  0BDD  3004               	movlw	4
 22235  0BDE  0781               	addwf	1,f
 22236  0BDF  3F00               	moviw [0]fsr0
 22237  0BE0  0022               	movlb	2	; select bank2
 22238  0BE1  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22239  0BE2  3F01               	moviw [1]fsr0
 22240  0BE3  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22241  0BE4  3F02               	moviw [2]fsr0
 22242  0BE5  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 22243  0BE6  3F03               	moviw [3]fsr0
 22244  0BE7  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 22245  0BE8  0820               	movf	??_vfpfcnvrt^(0+256),w
 22246  0BE9  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 22247  0BEA  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22248  0BEB  00A5               	movwf	((??_vfpfcnvrt+4)^(0+256)+1)
 22249  0BEC  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 22250  0BED  00A6               	movwf	((??_vfpfcnvrt+4)^(0+256)+2)
 22251  0BEE  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 22252  0BEF  00A7               	movwf	((??_vfpfcnvrt+4)^(0+256)+3)
 22253  0BF0  01A8               	clrf	((??_vfpfcnvrt+4)^(0+256)+4)
 22254  0BF1  01A9               	clrf	((??_vfpfcnvrt+4)^(0+256)+5)
 22255  0BF2  01AA               	clrf	((??_vfpfcnvrt+4)^(0+256)+6)
 22256  0BF3  01AB               	clrf	((??_vfpfcnvrt+4)^(0+256)+7)
 22257  0BF4  082B               	movf	((??_vfpfcnvrt+4)^(0+256)+7),w
 22258  0BF5  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 22259  0BF6  082A               	movf	((??_vfpfcnvrt+4)^(0+256)+6),w
 22260  0BF7  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 22261  0BF8  0829               	movf	((??_vfpfcnvrt+4)^(0+256)+5),w
 22262  0BF9  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 22263  0BFA  0828               	movf	((??_vfpfcnvrt+4)^(0+256)+4),w
 22264  0BFB  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 22265  0BFC  0827               	movf	((??_vfpfcnvrt+4)^(0+256)+3),w
 22266  0BFD  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 22267  0BFE  0826               	movf	((??_vfpfcnvrt+4)^(0+256)+2),w
 22268  0BFF  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 22269  0C00  0825               	movf	((??_vfpfcnvrt+4)^(0+256)+1),w
 22270  0C01  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 22271  0C02  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 22272  0C03  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 22273                           
 22274                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1197:      
      +                                 return utoa(fp, llu);
 22275  0C04  0021               	movlb	1	; select bank1
 22276  0C05  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22277  0C06  0020               	movlb	0	; select bank0
 22278  0C07  00B1               	movwf	utoa@fp+1
 22279  0C08  0021               	movlb	1	; select bank1
 22280  0C09  0863               	movf	vfpfcnvrt@fp^(0+128),w
 22281  0C0A  0020               	movlb	0	; select bank0
 22282  0C0B  00B0               	movwf	utoa@fp
 22283  0C0C  0022               	movlb	2	; select bank2
 22284  0C0D  0846               	movf	vfpfcnvrt@llu^(0+256),w
 22285  0C0E  0020               	movlb	0	; select bank0
 22286  0C0F  00B2               	movwf	utoa@d
 22287  0C10  0022               	movlb	2	; select bank2
 22288  0C11  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 22289  0C12  0020               	movlb	0	; select bank0
 22290  0C13  00B3               	movwf	utoa@d+1
 22291  0C14  0022               	movlb	2	; select bank2
 22292  0C15  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 22293  0C16  0020               	movlb	0	; select bank0
 22294  0C17  00B4               	movwf	utoa@d+2
 22295  0C18  0022               	movlb	2	; select bank2
 22296  0C19  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 22297  0C1A  0020               	movlb	0	; select bank0
 22298  0C1B  00B5               	movwf	utoa@d+3
 22299  0C1C  0022               	movlb	2	; select bank2
 22300  0C1D  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 22301  0C1E  0020               	movlb	0	; select bank0
 22302  0C1F  00B6               	movwf	utoa@d+4
 22303  0C20  0022               	movlb	2	; select bank2
 22304  0C21  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 22305  0C22  0020               	movlb	0	; select bank0
 22306  0C23  00B7               	movwf	utoa@d+5
 22307  0C24  0022               	movlb	2	; select bank2
 22308  0C25  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 22309  0C26  0020               	movlb	0	; select bank0
 22310  0C27  00B8               	movwf	utoa@d+6
 22311  0C28  0022               	movlb	2	; select bank2
 22312  0C29  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 22313  0C2A  0020               	movlb	0	; select bank0
 22314  0C2B  00B9               	movwf	utoa@d+7
 22315  0C2C  31A4  2455         	fcall	_utoa
 22316  0C2E  0020               	movlb	0	; select bank0
 22317  0C2F  0831               	movf	?_utoa+1,w
 22318  0C30  0021               	movlb	1	; select bank1
 22319  0C31  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22320  0C32  0020               	movlb	0	; select bank0
 22321  0C33  0830               	movf	?_utoa,w
 22322  0C34  0021               	movlb	1	; select bank1
 22323  0C35  00E3               	movwf	?_vfpfcnvrt^(0+128)
 22324  0C36  0008               	return
 22325  0C37                     l8084:	
 22326                           
 22327                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
 22328  0C37  0021               	movlb	1	; select bank1
 22329  0C38  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22330  0C39  0086               	movwf	6
 22331  0C3A  0187               	clrf	7
 22332  0C3B  3F40               	moviw [0]fsr1
 22333  0C3C  00F1               	movwf	strncmp@_l
 22334  0C3D  3F41               	moviw [1]fsr1
 22335  0C3E  00F2               	movwf	strncmp@_l+1
 22336  0C3F  3064               	movlw	low (STR_130| (0+32768))
 22337  0C40  00F3               	movwf	strncmp@_r
 22338  0C41  30BB               	movlw	high (STR_130| (0+32768))
 22339  0C42  00F4               	movwf	strncmp@_r+1
 22340  0C43  3002               	movlw	2
 22341  0C44  00F5               	movwf	strncmp@n
 22342  0C45  3000               	movlw	0
 22343  0C46  00F6               	movwf	strncmp@n+1
 22344  0C47  3190  2000  3188   	fcall	_strncmp
 22345  0C4A  0871               	movf	?_strncmp,w
 22346  0C4B  0472               	iorwf	?_strncmp+1,w
 22347  0C4C  1D03               	btfss	3,2
 22348  0C4D  2C9F               	goto	l8094
 22349                           
 22350                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
 22351  0C4E  0021               	movlb	1	; select bank1
 22352  0C4F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22353  0C50  0086               	movwf	6
 22354  0C51  0187               	clrf	7
 22355  0C52  3002               	movlw	2
 22356  0C53  0781               	addwf	1,f
 22357  0C54  3141               	addfsr 1,1
 22358  0C55  1803               	skipnc
 22359  0C56  0A81               	incf	1,f
 22360                           
 22361                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 22362  0C57  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22363  0C58  0086               	movwf	6
 22364  0C59  3001               	movlw	1	; select bank2/3
 22365  0C5A  0087               	movwf	7
 22366  0C5B  0801               	movf	1,w
 22367  0C5C  0084               	movwf	4
 22368  0C5D  3001               	movlw	1	; select bank2/3
 22369  0C5E  0085               	movwf	5
 22370  0C5F  3002               	movlw	2
 22371  0C60  0781               	addwf	1,f
 22372  0C61  3F00               	moviw [0]fsr0
 22373  0C62  0022               	movlb	2	; select bank2
 22374  0C63  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 22375  0C64  3F01               	moviw [1]fsr0
 22376  0C65  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 22377  0C66  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 22378  0C67  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 22379  0C68  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 22380  0C69  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 22381  0C6A  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 22382  0C6B  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 22383                           
 22384                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1241:      
      +                                 return utoa(fp, llu);
 22385  0C6C  0021               	movlb	1	; select bank1
 22386  0C6D  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22387  0C6E  0020               	movlb	0	; select bank0
 22388  0C6F  00B1               	movwf	utoa@fp+1
 22389  0C70  0021               	movlb	1	; select bank1
 22390  0C71  0863               	movf	vfpfcnvrt@fp^(0+128),w
 22391  0C72  0020               	movlb	0	; select bank0
 22392  0C73  00B0               	movwf	utoa@fp
 22393  0C74  0022               	movlb	2	; select bank2
 22394  0C75  0846               	movf	vfpfcnvrt@llu^(0+256),w
 22395  0C76  0020               	movlb	0	; select bank0
 22396  0C77  00B2               	movwf	utoa@d
 22397  0C78  0022               	movlb	2	; select bank2
 22398  0C79  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 22399  0C7A  0020               	movlb	0	; select bank0
 22400  0C7B  00B3               	movwf	utoa@d+1
 22401  0C7C  0022               	movlb	2	; select bank2
 22402  0C7D  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 22403  0C7E  0020               	movlb	0	; select bank0
 22404  0C7F  00B4               	movwf	utoa@d+2
 22405  0C80  0022               	movlb	2	; select bank2
 22406  0C81  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 22407  0C82  0020               	movlb	0	; select bank0
 22408  0C83  00B5               	movwf	utoa@d+3
 22409  0C84  0022               	movlb	2	; select bank2
 22410  0C85  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 22411  0C86  0020               	movlb	0	; select bank0
 22412  0C87  00B6               	movwf	utoa@d+4
 22413  0C88  0022               	movlb	2	; select bank2
 22414  0C89  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 22415  0C8A  0020               	movlb	0	; select bank0
 22416  0C8B  00B7               	movwf	utoa@d+5
 22417  0C8C  0022               	movlb	2	; select bank2
 22418  0C8D  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 22419  0C8E  0020               	movlb	0	; select bank0
 22420  0C8F  00B8               	movwf	utoa@d+6
 22421  0C90  0022               	movlb	2	; select bank2
 22422  0C91  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 22423  0C92  0020               	movlb	0	; select bank0
 22424  0C93  00B9               	movwf	utoa@d+7
 22425  0C94  31A4  2455         	fcall	_utoa
 22426  0C96  0020               	movlb	0	; select bank0
 22427  0C97  0831               	movf	?_utoa+1,w
 22428  0C98  0021               	movlb	1	; select bank1
 22429  0C99  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22430  0C9A  0020               	movlb	0	; select bank0
 22431  0C9B  0830               	movf	?_utoa,w
 22432  0C9C  0021               	movlb	1	; select bank1
 22433  0C9D  00E3               	movwf	?_vfpfcnvrt^(0+128)
 22434  0C9E  0008               	return
 22435  0C9F                     l8094:	
 22436                           
 22437                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
 22438  0C9F  0021               	movlb	1	; select bank1
 22439  0CA0  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22440  0CA1  0086               	movwf	6
 22441  0CA2  0187               	clrf	7
 22442  0CA3  3F40               	moviw [0]fsr1
 22443  0CA4  00F1               	movwf	strncmp@_l
 22444  0CA5  3F41               	moviw [1]fsr1
 22445  0CA6  00F2               	movwf	strncmp@_l+1
 22446  0CA7  303C               	movlw	low (STR_135| (0+32768))
 22447  0CA8  00F3               	movwf	strncmp@_r
 22448  0CA9  30BB               	movlw	high (STR_135| (0+32768))
 22449  0CAA  00F4               	movwf	strncmp@_r+1
 22450  0CAB  3003               	movlw	3
 22451  0CAC  00F5               	movwf	strncmp@n
 22452  0CAD  3000               	movlw	0
 22453  0CAE  00F6               	movwf	strncmp@n+1
 22454  0CAF  3190  2000  3188   	fcall	_strncmp
 22455  0CB2  0871               	movf	?_strncmp,w
 22456  0CB3  0472               	iorwf	?_strncmp+1,w
 22457  0CB4  1903               	btfsc	3,2
 22458  0CB5  2CCD               	goto	l8098
 22459  0CB6  0021               	movlb	1	; select bank1
 22460  0CB7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22461  0CB8  0086               	movwf	6
 22462  0CB9  0187               	clrf	7
 22463  0CBA  3F40               	moviw [0]fsr1
 22464  0CBB  00F1               	movwf	strncmp@_l
 22465  0CBC  3F41               	moviw [1]fsr1
 22466  0CBD  00F2               	movwf	strncmp@_l+1
 22467  0CBE  301C               	movlw	low (STR_139| (0+32768))
 22468  0CBF  00F3               	movwf	strncmp@_r
 22469  0CC0  30BB               	movlw	high (STR_139| (0+32768))
 22470  0CC1  00F4               	movwf	strncmp@_r+1
 22471  0CC2  3003               	movlw	3
 22472  0CC3  00F5               	movwf	strncmp@n
 22473  0CC4  3000               	movlw	0
 22474  0CC5  00F6               	movwf	strncmp@n+1
 22475  0CC6  3190  2000  3188   	fcall	_strncmp
 22476  0CC9  0871               	movf	?_strncmp,w
 22477  0CCA  0472               	iorwf	?_strncmp+1,w
 22478  0CCB  1D03               	btfss	3,2
 22479  0CCC  2D37               	goto	l8108
 22480  0CCD                     l8098:	
 22481                           
 22482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
 22483  0CCD  0021               	movlb	1	; select bank1
 22484  0CCE  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22485  0CCF  0086               	movwf	6
 22486  0CD0  0187               	clrf	7
 22487  0CD1  3F40               	moviw [0]fsr1
 22488  0CD2  0022               	movlb	2	; select bank2
 22489  0CD3  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22490  0CD4  3F41               	moviw [1]fsr1
 22491  0CD5  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22492  0CD6  3002               	movlw	2
 22493  0CD7  0720               	addwf	??_vfpfcnvrt^(0+256),w
 22494  0CD8  0084               	movwf	4
 22495  0CD9  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 22496  0CDA  1803               	skipnc
 22497  0CDB  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 22498  0CDC  0085               	movwf	5
 22499  0CDD  0800               	movf	0,w	;code access
 22500  0CDE  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 22501  0CDF  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 22502  0CE0  00C5               	movwf	vfpfcnvrt@c^(0+256)
 22503                           
 22504                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
 22505  0CE1  0021               	movlb	1	; select bank1
 22506  0CE2  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22507  0CE3  0086               	movwf	6
 22508  0CE4  0187               	clrf	7
 22509  0CE5  3003               	movlw	3
 22510  0CE6  0781               	addwf	1,f
 22511  0CE7  3141               	addfsr 1,1
 22512  0CE8  1803               	skipnc
 22513  0CE9  0A81               	incf	1,f
 22514                           
 22515                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 22516  0CEA  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22517  0CEB  0086               	movwf	6
 22518  0CEC  3001               	movlw	1	; select bank2/3
 22519  0CED  0087               	movwf	7
 22520  0CEE  0801               	movf	1,w
 22521  0CEF  0084               	movwf	4
 22522  0CF0  3001               	movlw	1	; select bank2/3
 22523  0CF1  0085               	movwf	5
 22524  0CF2  3002               	movlw	2
 22525  0CF3  0781               	addwf	1,f
 22526  0CF4  0800               	movf	0,w
 22527  0CF5  0022               	movlb	2	; select bank2
 22528  0CF6  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 22529  0CF7  01C7               	clrf	(vfpfcnvrt@llu+1)^(0+256)
 22530  0CF8  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 22531  0CF9  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 22532  0CFA  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 22533  0CFB  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 22534  0CFC  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 22535  0CFD  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 22536                           
 22537                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
 22538  0CFE  0021               	movlb	1	; select bank1
 22539  0CFF  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22540  0D00  0020               	movlb	0	; select bank0
 22541  0D01  00B1               	movwf	xtoa@fp+1
 22542  0D02  0021               	movlb	1	; select bank1
 22543  0D03  0863               	movf	vfpfcnvrt@fp^(0+128),w
 22544  0D04  0020               	movlb	0	; select bank0
 22545  0D05  00B0               	movwf	xtoa@fp
 22546  0D06  0022               	movlb	2	; select bank2
 22547  0D07  0846               	movf	vfpfcnvrt@llu^(0+256),w
 22548  0D08  0020               	movlb	0	; select bank0
 22549  0D09  00B2               	movwf	xtoa@d
 22550  0D0A  0022               	movlb	2	; select bank2
 22551  0D0B  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 22552  0D0C  0020               	movlb	0	; select bank0
 22553  0D0D  00B3               	movwf	xtoa@d+1
 22554  0D0E  0022               	movlb	2	; select bank2
 22555  0D0F  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 22556  0D10  0020               	movlb	0	; select bank0
 22557  0D11  00B4               	movwf	xtoa@d+2
 22558  0D12  0022               	movlb	2	; select bank2
 22559  0D13  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 22560  0D14  0020               	movlb	0	; select bank0
 22561  0D15  00B5               	movwf	xtoa@d+3
 22562  0D16  0022               	movlb	2	; select bank2
 22563  0D17  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 22564  0D18  0020               	movlb	0	; select bank0
 22565  0D19  00B6               	movwf	xtoa@d+4
 22566  0D1A  0022               	movlb	2	; select bank2
 22567  0D1B  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 22568  0D1C  0020               	movlb	0	; select bank0
 22569  0D1D  00B7               	movwf	xtoa@d+5
 22570  0D1E  0022               	movlb	2	; select bank2
 22571  0D1F  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 22572  0D20  0020               	movlb	0	; select bank0
 22573  0D21  00B8               	movwf	xtoa@d+6
 22574  0D22  0022               	movlb	2	; select bank2
 22575  0D23  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 22576  0D24  0020               	movlb	0	; select bank0
 22577  0D25  00B9               	movwf	xtoa@d+7
 22578  0D26  0022               	movlb	2	; select bank2
 22579  0D27  0845               	movf	vfpfcnvrt@c^(0+256),w
 22580  0D28  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22581  0D29  0820               	movf	??_vfpfcnvrt^(0+256),w
 22582  0D2A  0020               	movlb	0	; select bank0
 22583  0D2B  00BA               	movwf	xtoa@x
 22584  0D2C  319C  24C5         	fcall	_xtoa
 22585  0D2E  0020               	movlb	0	; select bank0
 22586  0D2F  0831               	movf	?_xtoa+1,w
 22587  0D30  0021               	movlb	1	; select bank1
 22588  0D31  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22589  0D32  0020               	movlb	0	; select bank0
 22590  0D33  0830               	movf	?_xtoa,w
 22591  0D34  0021               	movlb	1	; select bank1
 22592  0D35  00E3               	movwf	?_vfpfcnvrt^(0+128)
 22593  0D36  0008               	return
 22594  0D37                     l8108:	
 22595                           
 22596                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
 22597  0D37  0021               	movlb	1	; select bank1
 22598  0D38  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22599  0D39  0086               	movwf	6
 22600  0D3A  0187               	clrf	7
 22601  0D3B  3F40               	moviw [0]fsr1
 22602  0D3C  00F1               	movwf	strncmp@_l
 22603  0D3D  3F41               	moviw [1]fsr1
 22604  0D3E  00F2               	movwf	strncmp@_l+1
 22605  0D3F  303D               	movlw	low ((STR_135+1)| (0+32768))
 22606  0D40  00F3               	movwf	strncmp@_r
 22607  0D41  30BB               	movlw	high ((STR_135+1)| (0+32768))
 22608  0D42  00F4               	movwf	strncmp@_r+1
 22609  0D43  3002               	movlw	2
 22610  0D44  00F5               	movwf	strncmp@n
 22611  0D45  3000               	movlw	0
 22612  0D46  00F6               	movwf	strncmp@n+1
 22613  0D47  3190  2000  3188   	fcall	_strncmp
 22614  0D4A  0871               	movf	?_strncmp,w
 22615  0D4B  0472               	iorwf	?_strncmp+1,w
 22616  0D4C  1903               	btfsc	3,2
 22617  0D4D  2D65               	goto	l8112
 22618  0D4E  0021               	movlb	1	; select bank1
 22619  0D4F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22620  0D50  0086               	movwf	6
 22621  0D51  0187               	clrf	7
 22622  0D52  3F40               	moviw [0]fsr1
 22623  0D53  00F1               	movwf	strncmp@_l
 22624  0D54  3F41               	moviw [1]fsr1
 22625  0D55  00F2               	movwf	strncmp@_l+1
 22626  0D56  301D               	movlw	low ((STR_139+1)| (0+32768))
 22627  0D57  00F3               	movwf	strncmp@_r
 22628  0D58  30BB               	movlw	high ((STR_139+1)| (0+32768))
 22629  0D59  00F4               	movwf	strncmp@_r+1
 22630  0D5A  3002               	movlw	2
 22631  0D5B  00F5               	movwf	strncmp@n
 22632  0D5C  3000               	movlw	0
 22633  0D5D  00F6               	movwf	strncmp@n+1
 22634  0D5E  3190  2000  3188   	fcall	_strncmp
 22635  0D61  0871               	movf	?_strncmp,w
 22636  0D62  0472               	iorwf	?_strncmp+1,w
 22637  0D63  1D03               	btfss	3,2
 22638  0D64  2DD0               	goto	l8122
 22639  0D65                     l8112:	
 22640                           
 22641                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
 22642  0D65  0021               	movlb	1	; select bank1
 22643  0D66  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22644  0D67  0086               	movwf	6
 22645  0D68  0187               	clrf	7
 22646  0D69  3F40               	moviw [0]fsr1
 22647  0D6A  0022               	movlb	2	; select bank2
 22648  0D6B  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22649  0D6C  3F41               	moviw [1]fsr1
 22650  0D6D  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22651  0D6E  3001               	movlw	1
 22652  0D6F  0720               	addwf	??_vfpfcnvrt^(0+256),w
 22653  0D70  0084               	movwf	4
 22654  0D71  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 22655  0D72  1803               	skipnc
 22656  0D73  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 22657  0D74  0085               	movwf	5
 22658  0D75  0800               	movf	0,w	;code access
 22659  0D76  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 22660  0D77  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 22661  0D78  00C5               	movwf	vfpfcnvrt@c^(0+256)
 22662                           
 22663                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
 22664  0D79  0021               	movlb	1	; select bank1
 22665  0D7A  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22666  0D7B  0086               	movwf	6
 22667  0D7C  0187               	clrf	7
 22668  0D7D  3002               	movlw	2
 22669  0D7E  0781               	addwf	1,f
 22670  0D7F  3141               	addfsr 1,1
 22671  0D80  1803               	skipnc
 22672  0D81  0A81               	incf	1,f
 22673                           
 22674                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 22675  0D82  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22676  0D83  0086               	movwf	6
 22677  0D84  3001               	movlw	1	; select bank2/3
 22678  0D85  0087               	movwf	7
 22679  0D86  0801               	movf	1,w
 22680  0D87  0084               	movwf	4
 22681  0D88  3001               	movlw	1	; select bank2/3
 22682  0D89  0085               	movwf	5
 22683  0D8A  3002               	movlw	2
 22684  0D8B  0781               	addwf	1,f
 22685  0D8C  3F00               	moviw [0]fsr0
 22686  0D8D  0022               	movlb	2	; select bank2
 22687  0D8E  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 22688  0D8F  3F01               	moviw [1]fsr0
 22689  0D90  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 22690  0D91  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 22691  0D92  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 22692  0D93  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 22693  0D94  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 22694  0D95  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 22695  0D96  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 22696                           
 22697                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1269:      
      +                                 return xtoa(fp, llu, c);
 22698  0D97  0021               	movlb	1	; select bank1
 22699  0D98  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22700  0D99  0020               	movlb	0	; select bank0
 22701  0D9A  00B1               	movwf	xtoa@fp+1
 22702  0D9B  0021               	movlb	1	; select bank1
 22703  0D9C  0863               	movf	vfpfcnvrt@fp^(0+128),w
 22704  0D9D  0020               	movlb	0	; select bank0
 22705  0D9E  00B0               	movwf	xtoa@fp
 22706  0D9F  0022               	movlb	2	; select bank2
 22707  0DA0  0846               	movf	vfpfcnvrt@llu^(0+256),w
 22708  0DA1  0020               	movlb	0	; select bank0
 22709  0DA2  00B2               	movwf	xtoa@d
 22710  0DA3  0022               	movlb	2	; select bank2
 22711  0DA4  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 22712  0DA5  0020               	movlb	0	; select bank0
 22713  0DA6  00B3               	movwf	xtoa@d+1
 22714  0DA7  0022               	movlb	2	; select bank2
 22715  0DA8  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 22716  0DA9  0020               	movlb	0	; select bank0
 22717  0DAA  00B4               	movwf	xtoa@d+2
 22718  0DAB  0022               	movlb	2	; select bank2
 22719  0DAC  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 22720  0DAD  0020               	movlb	0	; select bank0
 22721  0DAE  00B5               	movwf	xtoa@d+3
 22722  0DAF  0022               	movlb	2	; select bank2
 22723  0DB0  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 22724  0DB1  0020               	movlb	0	; select bank0
 22725  0DB2  00B6               	movwf	xtoa@d+4
 22726  0DB3  0022               	movlb	2	; select bank2
 22727  0DB4  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 22728  0DB5  0020               	movlb	0	; select bank0
 22729  0DB6  00B7               	movwf	xtoa@d+5
 22730  0DB7  0022               	movlb	2	; select bank2
 22731  0DB8  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 22732  0DB9  0020               	movlb	0	; select bank0
 22733  0DBA  00B8               	movwf	xtoa@d+6
 22734  0DBB  0022               	movlb	2	; select bank2
 22735  0DBC  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 22736  0DBD  0020               	movlb	0	; select bank0
 22737  0DBE  00B9               	movwf	xtoa@d+7
 22738  0DBF  0022               	movlb	2	; select bank2
 22739  0DC0  0845               	movf	vfpfcnvrt@c^(0+256),w
 22740  0DC1  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22741  0DC2  0820               	movf	??_vfpfcnvrt^(0+256),w
 22742  0DC3  0020               	movlb	0	; select bank0
 22743  0DC4  00BA               	movwf	xtoa@x
 22744  0DC5  319C  24C5         	fcall	_xtoa
 22745  0DC7  0020               	movlb	0	; select bank0
 22746  0DC8  0831               	movf	?_xtoa+1,w
 22747  0DC9  0021               	movlb	1	; select bank1
 22748  0DCA  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22749  0DCB  0020               	movlb	0	; select bank0
 22750  0DCC  0830               	movf	?_xtoa,w
 22751  0DCD  0021               	movlb	1	; select bank1
 22752  0DCE  00E3               	movwf	?_vfpfcnvrt^(0+128)
 22753  0DCF  0008               	return
 22754  0DD0                     l8122:	
 22755                           
 22756                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 22757  0DD0  0021               	movlb	1	; select bank1
 22758  0DD1  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22759  0DD2  0086               	movwf	6
 22760  0DD3  0187               	clrf	7
 22761  0DD4  3F40               	moviw [0]fsr1
 22762  0DD5  0022               	movlb	2	; select bank2
 22763  0DD6  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22764  0DD7  3F41               	moviw [1]fsr1
 22765  0DD8  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22766  0DD9  0820               	movf	??_vfpfcnvrt^(0+256),w
 22767  0DDA  0084               	movwf	4
 22768  0DDB  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22769  0DDC  0085               	movwf	5
 22770  0DDD  0012               	moviw fsr0++
 22771  0DDE  3A78               	xorlw	120
 22772  0DDF  1903               	btfsc	3,2
 22773  0DE0  2DF2               	goto	l8126
 22774  0DE1  0021               	movlb	1	; select bank1
 22775  0DE2  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22776  0DE3  0086               	movwf	6
 22777  0DE4  0187               	clrf	7
 22778  0DE5  3F40               	moviw [0]fsr1
 22779  0DE6  0022               	movlb	2	; select bank2
 22780  0DE7  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22781  0DE8  3F41               	moviw [1]fsr1
 22782  0DE9  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22783  0DEA  0820               	movf	??_vfpfcnvrt^(0+256),w
 22784  0DEB  0084               	movwf	4
 22785  0DEC  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22786  0DED  0085               	movwf	5
 22787  0DEE  0012               	moviw fsr0++
 22788  0DEF  3A58               	xorlw	88
 22789  0DF0  1D03               	btfss	3,2
 22790  0DF1  2E5A               	goto	l8136
 22791  0DF2                     l8126:	
 22792                           
 22793                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 22794  0DF2  0021               	movlb	1	; select bank1
 22795  0DF3  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22796  0DF4  0086               	movwf	6
 22797  0DF5  0187               	clrf	7
 22798  0DF6  3F40               	moviw [0]fsr1
 22799  0DF7  0022               	movlb	2	; select bank2
 22800  0DF8  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22801  0DF9  3F41               	moviw [1]fsr1
 22802  0DFA  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22803  0DFB  0820               	movf	??_vfpfcnvrt^(0+256),w
 22804  0DFC  0084               	movwf	4
 22805  0DFD  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22806  0DFE  0085               	movwf	5
 22807  0DFF  0800               	movf	0,w	;code access
 22808  0E00  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 22809  0E01  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 22810  0E02  00C5               	movwf	vfpfcnvrt@c^(0+256)
 22811                           
 22812                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 22813  0E03  0021               	movlb	1	; select bank1
 22814  0E04  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22815  0E05  0086               	movwf	6
 22816  0E06  0187               	clrf	7
 22817  0E07  3001               	movlw	1
 22818  0E08  0781               	addwf	1,f
 22819  0E09  3141               	addfsr 1,1
 22820  0E0A  1803               	skipnc
 22821  0E0B  0A81               	incf	1,f
 22822                           
 22823                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 22824  0E0C  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22825  0E0D  0086               	movwf	6
 22826  0E0E  3001               	movlw	1	; select bank2/3
 22827  0E0F  0087               	movwf	7
 22828  0E10  0801               	movf	1,w
 22829  0E11  0084               	movwf	4
 22830  0E12  3001               	movlw	1	; select bank2/3
 22831  0E13  0085               	movwf	5
 22832  0E14  3002               	movlw	2
 22833  0E15  0781               	addwf	1,f
 22834  0E16  3F00               	moviw [0]fsr0
 22835  0E17  0022               	movlb	2	; select bank2
 22836  0E18  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 22837  0E19  3F01               	moviw [1]fsr0
 22838  0E1A  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 22839  0E1B  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 22840  0E1C  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 22841  0E1D  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 22842  0E1E  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 22843  0E1F  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 22844  0E20  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 22845                           
 22846                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 22847  0E21  0021               	movlb	1	; select bank1
 22848  0E22  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22849  0E23  0020               	movlb	0	; select bank0
 22850  0E24  00B1               	movwf	xtoa@fp+1
 22851  0E25  0021               	movlb	1	; select bank1
 22852  0E26  0863               	movf	vfpfcnvrt@fp^(0+128),w
 22853  0E27  0020               	movlb	0	; select bank0
 22854  0E28  00B0               	movwf	xtoa@fp
 22855  0E29  0022               	movlb	2	; select bank2
 22856  0E2A  0846               	movf	vfpfcnvrt@llu^(0+256),w
 22857  0E2B  0020               	movlb	0	; select bank0
 22858  0E2C  00B2               	movwf	xtoa@d
 22859  0E2D  0022               	movlb	2	; select bank2
 22860  0E2E  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 22861  0E2F  0020               	movlb	0	; select bank0
 22862  0E30  00B3               	movwf	xtoa@d+1
 22863  0E31  0022               	movlb	2	; select bank2
 22864  0E32  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 22865  0E33  0020               	movlb	0	; select bank0
 22866  0E34  00B4               	movwf	xtoa@d+2
 22867  0E35  0022               	movlb	2	; select bank2
 22868  0E36  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 22869  0E37  0020               	movlb	0	; select bank0
 22870  0E38  00B5               	movwf	xtoa@d+3
 22871  0E39  0022               	movlb	2	; select bank2
 22872  0E3A  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 22873  0E3B  0020               	movlb	0	; select bank0
 22874  0E3C  00B6               	movwf	xtoa@d+4
 22875  0E3D  0022               	movlb	2	; select bank2
 22876  0E3E  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 22877  0E3F  0020               	movlb	0	; select bank0
 22878  0E40  00B7               	movwf	xtoa@d+5
 22879  0E41  0022               	movlb	2	; select bank2
 22880  0E42  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 22881  0E43  0020               	movlb	0	; select bank0
 22882  0E44  00B8               	movwf	xtoa@d+6
 22883  0E45  0022               	movlb	2	; select bank2
 22884  0E46  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 22885  0E47  0020               	movlb	0	; select bank0
 22886  0E48  00B9               	movwf	xtoa@d+7
 22887  0E49  0022               	movlb	2	; select bank2
 22888  0E4A  0845               	movf	vfpfcnvrt@c^(0+256),w
 22889  0E4B  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22890  0E4C  0820               	movf	??_vfpfcnvrt^(0+256),w
 22891  0E4D  0020               	movlb	0	; select bank0
 22892  0E4E  00BA               	movwf	xtoa@x
 22893  0E4F  319C  24C5         	fcall	_xtoa
 22894  0E51  0020               	movlb	0	; select bank0
 22895  0E52  0831               	movf	?_xtoa+1,w
 22896  0E53  0021               	movlb	1	; select bank1
 22897  0E54  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22898  0E55  0020               	movlb	0	; select bank0
 22899  0E56  0830               	movf	?_xtoa,w
 22900  0E57  0021               	movlb	1	; select bank1
 22901  0E58  00E3               	movwf	?_vfpfcnvrt^(0+128)
 22902  0E59  0008               	return
 22903  0E5A                     l8136:	
 22904                           
 22905                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1285:      
      +                             if (!strncmp(*fmt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", 
      +                          ((sizeof("lX")/sizeof("lX"[0]))-1))) {
 22906  0E5A  0021               	movlb	1	; select bank1
 22907  0E5B  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22908  0E5C  0086               	movwf	6
 22909  0E5D  0187               	clrf	7
 22910  0E5E  3F40               	moviw [0]fsr1
 22911  0E5F  00F1               	movwf	strncmp@_l
 22912  0E60  3F41               	moviw [1]fsr1
 22913  0E61  00F2               	movwf	strncmp@_l+1
 22914  0E62  3067               	movlw	low (STR_153| (0+32768))
 22915  0E63  00F3               	movwf	strncmp@_r
 22916  0E64  30BB               	movlw	high (STR_153| (0+32768))
 22917  0E65  00F4               	movwf	strncmp@_r+1
 22918  0E66  3002               	movlw	2
 22919  0E67  00F5               	movwf	strncmp@n
 22920  0E68  3000               	movlw	0
 22921  0E69  00F6               	movwf	strncmp@n+1
 22922  0E6A  3190  2000  3188   	fcall	_strncmp
 22923  0E6D  0871               	movf	?_strncmp,w
 22924  0E6E  0472               	iorwf	?_strncmp+1,w
 22925  0E6F  1903               	btfsc	3,2
 22926  0E70  2E88               	goto	l8140
 22927  0E71  0021               	movlb	1	; select bank1
 22928  0E72  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22929  0E73  0086               	movwf	6
 22930  0E74  0187               	clrf	7
 22931  0E75  3F40               	moviw [0]fsr1
 22932  0E76  00F1               	movwf	strncmp@_l
 22933  0E77  3F41               	moviw [1]fsr1
 22934  0E78  00F2               	movwf	strncmp@_l+1
 22935  0E79  3040               	movlw	low (STR_157| (0+32768))
 22936  0E7A  00F3               	movwf	strncmp@_r
 22937  0E7B  30BB               	movlw	high (STR_157| (0+32768))
 22938  0E7C  00F4               	movwf	strncmp@_r+1
 22939  0E7D  3002               	movlw	2
 22940  0E7E  00F5               	movwf	strncmp@n
 22941  0E7F  3000               	movlw	0
 22942  0E80  00F6               	movwf	strncmp@n+1
 22943  0E81  3190  2000  3188   	fcall	_strncmp
 22944  0E84  0871               	movf	?_strncmp,w
 22945  0E85  0472               	iorwf	?_strncmp+1,w
 22946  0E86  1D03               	btfss	3,2
 22947  0E87  2F0D               	goto	l8150
 22948  0E88                     l8140:	
 22949                           
 22950                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1286: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1288:           
      +                            c = (*fmt)[1];
 22951  0E88  0021               	movlb	1	; select bank1
 22952  0E89  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22953  0E8A  0086               	movwf	6
 22954  0E8B  0187               	clrf	7
 22955  0E8C  3F40               	moviw [0]fsr1
 22956  0E8D  0022               	movlb	2	; select bank2
 22957  0E8E  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22958  0E8F  3F41               	moviw [1]fsr1
 22959  0E90  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22960  0E91  3001               	movlw	1
 22961  0E92  0720               	addwf	??_vfpfcnvrt^(0+256),w
 22962  0E93  0084               	movwf	4
 22963  0E94  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 22964  0E95  1803               	skipnc
 22965  0E96  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 22966  0E97  0085               	movwf	5
 22967  0E98  0800               	movf	0,w	;code access
 22968  0E99  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 22969  0E9A  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 22970  0E9B  00C5               	movwf	vfpfcnvrt@c^(0+256)
 22971                           
 22972                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1289:      
      +                                 *fmt += ((sizeof("lx")/sizeof("lx"[0]))-1);
 22973  0E9C  0021               	movlb	1	; select bank1
 22974  0E9D  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22975  0E9E  0086               	movwf	6
 22976  0E9F  0187               	clrf	7
 22977  0EA0  3002               	movlw	2
 22978  0EA1  0781               	addwf	1,f
 22979  0EA2  3141               	addfsr 1,1
 22980  0EA3  1803               	skipnc
 22981  0EA4  0A81               	incf	1,f
 22982                           
 22983                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1290:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 22984  0EA5  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22985  0EA6  0086               	movwf	6
 22986  0EA7  3001               	movlw	1	; select bank2/3
 22987  0EA8  0087               	movwf	7
 22988  0EA9  0801               	movf	1,w
 22989  0EAA  0084               	movwf	4
 22990  0EAB  3001               	movlw	1	; select bank2/3
 22991  0EAC  0085               	movwf	5
 22992  0EAD  3004               	movlw	4
 22993  0EAE  0781               	addwf	1,f
 22994  0EAF  3F00               	moviw [0]fsr0
 22995  0EB0  0022               	movlb	2	; select bank2
 22996  0EB1  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22997  0EB2  3F01               	moviw [1]fsr0
 22998  0EB3  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22999  0EB4  3F02               	moviw [2]fsr0
 23000  0EB5  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 23001  0EB6  3F03               	moviw [3]fsr0
 23002  0EB7  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 23003  0EB8  0820               	movf	??_vfpfcnvrt^(0+256),w
 23004  0EB9  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 23005  0EBA  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 23006  0EBB  00A5               	movwf	((??_vfpfcnvrt+4)^(0+256)+1)
 23007  0EBC  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 23008  0EBD  00A6               	movwf	((??_vfpfcnvrt+4)^(0+256)+2)
 23009  0EBE  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 23010  0EBF  00A7               	movwf	((??_vfpfcnvrt+4)^(0+256)+3)
 23011  0EC0  01A8               	clrf	((??_vfpfcnvrt+4)^(0+256)+4)
 23012  0EC1  01A9               	clrf	((??_vfpfcnvrt+4)^(0+256)+5)
 23013  0EC2  01AA               	clrf	((??_vfpfcnvrt+4)^(0+256)+6)
 23014  0EC3  01AB               	clrf	((??_vfpfcnvrt+4)^(0+256)+7)
 23015  0EC4  082B               	movf	((??_vfpfcnvrt+4)^(0+256)+7),w
 23016  0EC5  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 23017  0EC6  082A               	movf	((??_vfpfcnvrt+4)^(0+256)+6),w
 23018  0EC7  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 23019  0EC8  0829               	movf	((??_vfpfcnvrt+4)^(0+256)+5),w
 23020  0EC9  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 23021  0ECA  0828               	movf	((??_vfpfcnvrt+4)^(0+256)+4),w
 23022  0ECB  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 23023  0ECC  0827               	movf	((??_vfpfcnvrt+4)^(0+256)+3),w
 23024  0ECD  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 23025  0ECE  0826               	movf	((??_vfpfcnvrt+4)^(0+256)+2),w
 23026  0ECF  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 23027  0ED0  0825               	movf	((??_vfpfcnvrt+4)^(0+256)+1),w
 23028  0ED1  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 23029  0ED2  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 23030  0ED3  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 23031                           
 23032                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1292:      
      +                                 return xtoa(fp, llu, c);
 23033  0ED4  0021               	movlb	1	; select bank1
 23034  0ED5  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23035  0ED6  0020               	movlb	0	; select bank0
 23036  0ED7  00B1               	movwf	xtoa@fp+1
 23037  0ED8  0021               	movlb	1	; select bank1
 23038  0ED9  0863               	movf	vfpfcnvrt@fp^(0+128),w
 23039  0EDA  0020               	movlb	0	; select bank0
 23040  0EDB  00B0               	movwf	xtoa@fp
 23041  0EDC  0022               	movlb	2	; select bank2
 23042  0EDD  0846               	movf	vfpfcnvrt@llu^(0+256),w
 23043  0EDE  0020               	movlb	0	; select bank0
 23044  0EDF  00B2               	movwf	xtoa@d
 23045  0EE0  0022               	movlb	2	; select bank2
 23046  0EE1  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 23047  0EE2  0020               	movlb	0	; select bank0
 23048  0EE3  00B3               	movwf	xtoa@d+1
 23049  0EE4  0022               	movlb	2	; select bank2
 23050  0EE5  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 23051  0EE6  0020               	movlb	0	; select bank0
 23052  0EE7  00B4               	movwf	xtoa@d+2
 23053  0EE8  0022               	movlb	2	; select bank2
 23054  0EE9  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 23055  0EEA  0020               	movlb	0	; select bank0
 23056  0EEB  00B5               	movwf	xtoa@d+3
 23057  0EEC  0022               	movlb	2	; select bank2
 23058  0EED  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 23059  0EEE  0020               	movlb	0	; select bank0
 23060  0EEF  00B6               	movwf	xtoa@d+4
 23061  0EF0  0022               	movlb	2	; select bank2
 23062  0EF1  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 23063  0EF2  0020               	movlb	0	; select bank0
 23064  0EF3  00B7               	movwf	xtoa@d+5
 23065  0EF4  0022               	movlb	2	; select bank2
 23066  0EF5  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 23067  0EF6  0020               	movlb	0	; select bank0
 23068  0EF7  00B8               	movwf	xtoa@d+6
 23069  0EF8  0022               	movlb	2	; select bank2
 23070  0EF9  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 23071  0EFA  0020               	movlb	0	; select bank0
 23072  0EFB  00B9               	movwf	xtoa@d+7
 23073  0EFC  0022               	movlb	2	; select bank2
 23074  0EFD  0845               	movf	vfpfcnvrt@c^(0+256),w
 23075  0EFE  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23076  0EFF  0820               	movf	??_vfpfcnvrt^(0+256),w
 23077  0F00  0020               	movlb	0	; select bank0
 23078  0F01  00BA               	movwf	xtoa@x
 23079  0F02  319C  24C5         	fcall	_xtoa
 23080  0F04  0020               	movlb	0	; select bank0
 23081  0F05  0831               	movf	?_xtoa+1,w
 23082  0F06  0021               	movlb	1	; select bank1
 23083  0F07  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 23084  0F08  0020               	movlb	0	; select bank0
 23085  0F09  0830               	movf	?_xtoa,w
 23086  0F0A  0021               	movlb	1	; select bank1
 23087  0F0B  00E3               	movwf	?_vfpfcnvrt^(0+128)
 23088  0F0C  0008               	return
 23089  0F0D                     l8150:	
 23090                           
 23091                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
 23092  0F0D  0021               	movlb	1	; select bank1
 23093  0F0E  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23094  0F0F  0086               	movwf	6
 23095  0F10  0187               	clrf	7
 23096  0F11  3F40               	moviw [0]fsr1
 23097  0F12  00F1               	movwf	strncmp@_l
 23098  0F13  3F41               	moviw [1]fsr1
 23099  0F14  00F2               	movwf	strncmp@_l+1
 23100  0F15  306A               	movlw	low (STR_162| (0+32768))
 23101  0F16  00F3               	movwf	strncmp@_r
 23102  0F17  30BB               	movlw	high (STR_162| (0+32768))
 23103  0F18  00F4               	movwf	strncmp@_r+1
 23104  0F19  3002               	movlw	2
 23105  0F1A  00F5               	movwf	strncmp@n
 23106  0F1B  3000               	movlw	0
 23107  0F1C  00F6               	movwf	strncmp@n+1
 23108  0F1D  3190  2000  3188   	fcall	_strncmp
 23109  0F20  0871               	movf	?_strncmp,w
 23110  0F21  0472               	iorwf	?_strncmp+1,w
 23111  0F22  1903               	btfsc	3,2
 23112  0F23  2F3B               	goto	l8154
 23113  0F24  0021               	movlb	1	; select bank1
 23114  0F25  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23115  0F26  0086               	movwf	6
 23116  0F27  0187               	clrf	7
 23117  0F28  3F40               	moviw [0]fsr1
 23118  0F29  00F1               	movwf	strncmp@_l
 23119  0F2A  3F41               	moviw [1]fsr1
 23120  0F2B  00F2               	movwf	strncmp@_l+1
 23121  0F2C  3043               	movlw	low (STR_166| (0+32768))
 23122  0F2D  00F3               	movwf	strncmp@_r
 23123  0F2E  30BB               	movlw	high (STR_166| (0+32768))
 23124  0F2F  00F4               	movwf	strncmp@_r+1
 23125  0F30  3002               	movlw	2
 23126  0F31  00F5               	movwf	strncmp@n
 23127  0F32  3000               	movlw	0
 23128  0F33  00F6               	movwf	strncmp@n+1
 23129  0F34  3190  2000  3188   	fcall	_strncmp
 23130  0F37  0871               	movf	?_strncmp,w
 23131  0F38  0472               	iorwf	?_strncmp+1,w
 23132  0F39  1D03               	btfss	3,2
 23133  0F3A  2FA6               	goto	l8164
 23134  0F3B                     l8154:	
 23135                           
 23136                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
 23137  0F3B  0021               	movlb	1	; select bank1
 23138  0F3C  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23139  0F3D  0086               	movwf	6
 23140  0F3E  0187               	clrf	7
 23141  0F3F  3F40               	moviw [0]fsr1
 23142  0F40  0022               	movlb	2	; select bank2
 23143  0F41  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23144  0F42  3F41               	moviw [1]fsr1
 23145  0F43  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 23146  0F44  3001               	movlw	1
 23147  0F45  0720               	addwf	??_vfpfcnvrt^(0+256),w
 23148  0F46  0084               	movwf	4
 23149  0F47  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 23150  0F48  1803               	skipnc
 23151  0F49  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 23152  0F4A  0085               	movwf	5
 23153  0F4B  0800               	movf	0,w	;code access
 23154  0F4C  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 23155  0F4D  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 23156  0F4E  00C5               	movwf	vfpfcnvrt@c^(0+256)
 23157                           
 23158                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
 23159  0F4F  0021               	movlb	1	; select bank1
 23160  0F50  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23161  0F51  0086               	movwf	6
 23162  0F52  0187               	clrf	7
 23163  0F53  3002               	movlw	2
 23164  0F54  0781               	addwf	1,f
 23165  0F55  3141               	addfsr 1,1
 23166  0F56  1803               	skipnc
 23167  0F57  0A81               	incf	1,f
 23168                           
 23169                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 23170  0F58  0866               	movf	vfpfcnvrt@ap^(0+128),w
 23171  0F59  0086               	movwf	6
 23172  0F5A  3001               	movlw	1	; select bank2/3
 23173  0F5B  0087               	movwf	7
 23174  0F5C  0801               	movf	1,w
 23175  0F5D  0084               	movwf	4
 23176  0F5E  3001               	movlw	1	; select bank2/3
 23177  0F5F  0085               	movwf	5
 23178  0F60  3002               	movlw	2
 23179  0F61  0781               	addwf	1,f
 23180  0F62  3F00               	moviw [0]fsr0
 23181  0F63  0022               	movlb	2	; select bank2
 23182  0F64  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 23183  0F65  3F01               	moviw [1]fsr0
 23184  0F66  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 23185  0F67  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 23186  0F68  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 23187  0F69  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 23188  0F6A  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 23189  0F6B  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 23190  0F6C  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 23191                           
 23192                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1344:      
      +                                 return xtoa(fp, llu, c);
 23193  0F6D  0021               	movlb	1	; select bank1
 23194  0F6E  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23195  0F6F  0020               	movlb	0	; select bank0
 23196  0F70  00B1               	movwf	xtoa@fp+1
 23197  0F71  0021               	movlb	1	; select bank1
 23198  0F72  0863               	movf	vfpfcnvrt@fp^(0+128),w
 23199  0F73  0020               	movlb	0	; select bank0
 23200  0F74  00B0               	movwf	xtoa@fp
 23201  0F75  0022               	movlb	2	; select bank2
 23202  0F76  0846               	movf	vfpfcnvrt@llu^(0+256),w
 23203  0F77  0020               	movlb	0	; select bank0
 23204  0F78  00B2               	movwf	xtoa@d
 23205  0F79  0022               	movlb	2	; select bank2
 23206  0F7A  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 23207  0F7B  0020               	movlb	0	; select bank0
 23208  0F7C  00B3               	movwf	xtoa@d+1
 23209  0F7D  0022               	movlb	2	; select bank2
 23210  0F7E  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 23211  0F7F  0020               	movlb	0	; select bank0
 23212  0F80  00B4               	movwf	xtoa@d+2
 23213  0F81  0022               	movlb	2	; select bank2
 23214  0F82  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 23215  0F83  0020               	movlb	0	; select bank0
 23216  0F84  00B5               	movwf	xtoa@d+3
 23217  0F85  0022               	movlb	2	; select bank2
 23218  0F86  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 23219  0F87  0020               	movlb	0	; select bank0
 23220  0F88  00B6               	movwf	xtoa@d+4
 23221  0F89  0022               	movlb	2	; select bank2
 23222  0F8A  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 23223  0F8B  0020               	movlb	0	; select bank0
 23224  0F8C  00B7               	movwf	xtoa@d+5
 23225  0F8D  0022               	movlb	2	; select bank2
 23226  0F8E  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 23227  0F8F  0020               	movlb	0	; select bank0
 23228  0F90  00B8               	movwf	xtoa@d+6
 23229  0F91  0022               	movlb	2	; select bank2
 23230  0F92  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 23231  0F93  0020               	movlb	0	; select bank0
 23232  0F94  00B9               	movwf	xtoa@d+7
 23233  0F95  0022               	movlb	2	; select bank2
 23234  0F96  0845               	movf	vfpfcnvrt@c^(0+256),w
 23235  0F97  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23236  0F98  0820               	movf	??_vfpfcnvrt^(0+256),w
 23237  0F99  0020               	movlb	0	; select bank0
 23238  0F9A  00BA               	movwf	xtoa@x
 23239  0F9B  319C  24C5         	fcall	_xtoa
 23240  0F9D  0020               	movlb	0	; select bank0
 23241  0F9E  0831               	movf	?_xtoa+1,w
 23242  0F9F  0021               	movlb	1	; select bank1
 23243  0FA0  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 23244  0FA1  0020               	movlb	0	; select bank0
 23245  0FA2  0830               	movf	?_xtoa,w
 23246  0FA3  0021               	movlb	1	; select bank1
 23247  0FA4  00E3               	movwf	?_vfpfcnvrt^(0+128)
 23248  0FA5  0008               	return
 23249  0FA6                     l8164:	
 23250                           
 23251                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 23252  0FA6  0021               	movlb	1	; select bank1
 23253  0FA7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23254  0FA8  0086               	movwf	6
 23255  0FA9  0187               	clrf	7
 23256  0FAA  3F40               	moviw [0]fsr1
 23257  0FAB  0022               	movlb	2	; select bank2
 23258  0FAC  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23259  0FAD  3F41               	moviw [1]fsr1
 23260  0FAE  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 23261  0FAF  0820               	movf	??_vfpfcnvrt^(0+256),w
 23262  0FB0  0084               	movwf	4
 23263  0FB1  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 23264  0FB2  0085               	movwf	5
 23265  0FB3  0012               	moviw fsr0++
 23266  0FB4  3A25               	xorlw	37
 23267  0FB5  1D03               	btfss	3,2
 23268  0FB6  2FD0               	goto	l8174
 23269                           
 23270                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 23271  0FB7  0021               	movlb	1	; select bank1
 23272  0FB8  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23273  0FB9  0086               	movwf	6
 23274  0FBA  0187               	clrf	7
 23275  0FBB  3001               	movlw	1
 23276  0FBC  0781               	addwf	1,f
 23277  0FBD  3141               	addfsr 1,1
 23278  0FBE  1803               	skipnc
 23279  0FBF  0A81               	incf	1,f
 23280                           
 23281                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 23282  0FC0  3025               	movlw	37
 23283  0FC1  00F1               	movwf	fputc@c
 23284  0FC2  3000               	movlw	0
 23285  0FC3  00F2               	movwf	fputc@c+1
 23286  0FC4  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23287  0FC5  00F4               	movwf	fputc@fp+1
 23288  0FC6  0863               	movf	vfpfcnvrt@fp^(0+128),w
 23289  0FC7  00F3               	movwf	fputc@fp
 23290  0FC8  31A8  202C         	fcall	_fputc
 23291  0FCA                     l8170:	
 23292                           
 23293                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 23294  0FCA  3001               	movlw	1
 23295  0FCB  0021               	movlb	1	; select bank1
 23296  0FCC  00E3               	movwf	?_vfpfcnvrt^(0+128)
 23297  0FCD  3000               	movlw	0
 23298  0FCE  00E4               	movwf	(?_vfpfcnvrt^(0+128)+1)
 23299  0FCF  0008               	return
 23300  0FD0                     l8174:	
 23301                           
 23302                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 23303  0FD0  0021               	movlb	1	; select bank1
 23304  0FD1  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23305  0FD2  0086               	movwf	6
 23306  0FD3  0187               	clrf	7
 23307  0FD4  3001               	movlw	1
 23308  0FD5  0781               	addwf	1,f
 23309  0FD6  3141               	addfsr 1,1
 23310  0FD7  1803               	skipnc
 23311  0FD8  0A81               	incf	1,f
 23312  0FD9  2973               	goto	l7972
 23313  0FDA                     l8180:	
 23314                           
 23315                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 23316  0FDA  0021               	movlb	1	; select bank1
 23317  0FDB  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23318  0FDC  0086               	movwf	6
 23319  0FDD  0187               	clrf	7
 23320  0FDE  3F40               	moviw [0]fsr1
 23321  0FDF  0022               	movlb	2	; select bank2
 23322  0FE0  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23323  0FE1  3F41               	moviw [1]fsr1
 23324  0FE2  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 23325  0FE3  0820               	movf	??_vfpfcnvrt^(0+256),w
 23326  0FE4  0084               	movwf	4
 23327  0FE5  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 23328  0FE6  0085               	movwf	5
 23329  0FE7  0800               	movf	0,w	;code access
 23330  0FE8  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 23331  0FE9  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
 23332  0FEA  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 23333  0FEB  00F1               	movwf	fputc@c
 23334  0FEC  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 23335  0FED  00F2               	movwf	fputc@c+1
 23336  0FEE  0021               	movlb	1	; select bank1
 23337  0FEF  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23338  0FF0  00F4               	movwf	fputc@fp+1
 23339  0FF1  0863               	movf	vfpfcnvrt@fp^(0+128),w
 23340  0FF2  00F3               	movwf	fputc@fp
 23341  0FF3  31A8  202C  3188   	fcall	_fputc
 23342                           
 23343                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 23344  0FF6  0021               	movlb	1	; select bank1
 23345  0FF7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23346  0FF8  0086               	movwf	6
 23347  0FF9  0187               	clrf	7
 23348  0FFA  3001               	movlw	1
 23349  0FFB  0781               	addwf	1,f
 23350  0FFC  3141               	addfsr 1,1
 23351  0FFD  1803               	skipnc
 23352  0FFE  0A81               	incf	1,f
 23353  0FFF  2FCA               	goto	l8170
 23354  1000                     __end_of_vfpfcnvrt:	


Data Sizes:
    Strings     787
    Constant    90
    Data        7
    BSS         136
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     80      80
    BANK3            80      2      64
    BANK4            80      0      80
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           65      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    vsnprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK2[1]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[19]), STR_21(CODE[20]), 
		 -> STR_20(CODE[20]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_168(CODE[3]), STR_164(CODE[3]), STR_159(CODE[3]), STR_155(CODE[3]), 
		 -> STR_150(CODE[3]), STR_146(CODE[3]), STR_141(CODE[4]), STR_137(CODE[4]), 
		 -> STR_132(CODE[3]), STR_127(CODE[3]), STR_122(CODE[3]), STR_117(CODE[4]), 
		 -> STR_112(CODE[3]), STR_107(CODE[3]), STR_102(CODE[3]), STR_97(CODE[4]), 
		 -> STR_92(CODE[3]), STR_87(CODE[3]), STR_82(CODE[3]), STR_77(CODE[4]), 
		 -> STR_72(CODE[3]), STR_67(CODE[3]), STR_63(CODE[3]), STR_58(CODE[3]), 
		 -> STR_54(CODE[3]), STR_49(CODE[3]), STR_45(CODE[3]), STR_40(CODE[4]), 
		 -> STR_36(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_168(CODE[3]), STR_164(CODE[3]), STR_159(CODE[3]), STR_155(CODE[3]), 
		 -> STR_150(CODE[3]), STR_146(CODE[3]), STR_141(CODE[4]), STR_137(CODE[4]), 
		 -> STR_132(CODE[3]), STR_127(CODE[3]), STR_122(CODE[3]), STR_117(CODE[4]), 
		 -> STR_112(CODE[3]), STR_107(CODE[3]), STR_102(CODE[3]), STR_97(CODE[4]), 
		 -> STR_92(CODE[3]), STR_87(CODE[3]), STR_82(CODE[3]), STR_77(CODE[4]), 
		 -> STR_72(CODE[3]), STR_67(CODE[3]), STR_63(CODE[3]), STR_58(CODE[3]), 
		 -> STR_54(CODE[3]), STR_49(CODE[3]), STR_45(CODE[3]), STR_40(CODE[4]), 
		 -> STR_36(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 57
		 -> vfpfcnvrt@ct(BANK2[3]), STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[19]), 
		 -> STR_21(CODE[20]), STR_20(CODE[20]), STR_19(CODE[21]), STR_18(CODE[21]), 
		 -> STR_17(CODE[21]), STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), 
		 -> STR_3(CODE[43]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 57
		 -> vfpfcnvrt@ct(BANK2[3]), STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[19]), 
		 -> STR_21(CODE[20]), STR_20(CODE[20]), STR_19(CODE[21]), STR_18(CODE[21]), 
		 -> STR_17(CODE[21]), STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), 
		 -> STR_3(CODE[43]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK2[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK2[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_31(CODE[4]), STR_30(CODE[4]), STR_27(CODE[4]), STR_26(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_31(CODE[4]), STR_30(CODE[4]), STR_27(CODE[4]), STR_26(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[19]), STR_21(CODE[20]), 
		 -> STR_20(CODE[20]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    snprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_snprintf(BANK2[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    S1610_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[19]), STR_21(CODE[20]), 
		 -> STR_20(CODE[20]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[19]), STR_21(CODE[20]), 
		 -> STR_20(CODE[20]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 57
		 -> STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[19]), STR_21(CODE[20]), 
		 -> STR_20(CODE[20]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 2
		 -> ?_snprintf(BANK2[2]), 

    vfpfcnvrt@vp	PTR void  size(1) Largest target is 2
		 -> ?_snprintf(BANK2[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    stoa@s	PTR unsigned char  size(1) Largest target is 2
		 -> ?_snprintf(BANK2[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK2[2]), stoa@nuls(BANK0[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 127
		 -> STR_25(CODE[3]), STR_12(CODE[3]), STR_11(CODE[42]), STR_10(CODE[45]), 
		 -> STR_9(CODE[42]), STR_5(CODE[3]), STR_4(CODE[53]), messageBuffer(BIGRAM[127]), 
		 -> STR_2(CODE[46]), STR_1(CODE[40]), 


Critical Paths under _main in COMMON

    _main->_EUSART_Initialize
    _vfpfcnvrt->_stoa
    _vfpfcnvrt->_strncmp
    _toupper->_islower
    _stoa->_fputc
    _efgtoa->___fltol
    _tolower->_isupper
    _dtoa->___aodiv
    _abs->___aomod
    _pad->_fputs
    _fputs->_fputc
    _atoi->___wmul
    _atoi->_isdigit
    _EUSART_Write_Text->_EUSART_Write
    _setTemperatureLimitsint->___wmul
    _setShortCircuitProtection->_I2C_writeRegister
    _setOverCurrentDischargeProtection->_I2C_writeRegister
    ___flmul->__Umul8_16
    _beginAFEcommunication->_I2C_writeRegister
    _beginAFEcommunication->_readRegister
    _readRegister->_read_I2C_data
    _readRegister->_send_I2C_controlByte
    _I2C_writeRegister->_send_I2C_controlByte
    _RGB_AWAIT_AFE_CONN->_RGB_color
    _AFE_getSetShortCircuitCurrent->___fltol
    _AFE_getOverCurrentDischargeCurrent->___fltol
    _EUSART_Initialize->___aldiv

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _vsnprintf->_vfprintf
    _xtoa->_pad
    _utoa->___lodiv
    _utoa->___lomod
    _utoa->_pad
    _otoa->_pad
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    _dtoa->___aodiv
    _dtoa->___aomod
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _setShortCircuitProtection->___flge
    _setOverCurrentDischargeProtection->___flge
    ___flmul->___xxtofl
    ___flge->___fldiv
    _AFE_getSetShortCircuitCurrent->___fltol
    _AFE_getOverCurrentDischargeCurrent->___fltol
    ___fltol->___fldiv
    ___fldiv->___flmul
    _EUSART_Initialize->___aldiv

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_statemachine
    _statemachine->_printotAFERegisters
    _printotAFERegisters->_snprintf
    _snprintf->_vsnprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_statemachine

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _myIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _myIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _myIsr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _myIsr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _myIsr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _myIsr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _myIsr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _myIsr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _myIsr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _myIsr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _myIsr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _myIsr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _myIsr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  232876
                                              1 BANK3      1     1      0
                  _EUSART_Initialize
                          _initClock
                          _init_GPIO
                           _init_I2C
                           _init_RGB
                          _init_TMR1
                       _statemachine
 ---------------------------------------------------------------------------------
 (1) _statemachine                                         3     3      0  232040
                                             78 BANK2      2     2      0
                                              0 BANK3      1     1      0
 _AFE_getOverCurrentDischargeCurrent
          _AFE_getSetCurrentSenseRes
      _AFE_getSetShortCircuitCurrent
                  _EUSART_Write_Text
                 _RGB_AWAIT_AFE_CONN
                          _RGB_color
              _beginAFEcommunication
                           _init_AFE
                _printotAFERegisters
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _printotAFERegisters                                  1     1      0   99560
                                             77 BANK2      1     1      0
                  _EUSART_Write_Text
                       _readRegister
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _snprintf                                            14     4     10   94125
                                             63 BANK2     14     4     10
 _AFE_getOverCurrentDischargeCurrent (ARG)
          _AFE_getSetCurrentSenseRes (ARG)
      _AFE_getSetShortCircuitCurrent (ARG)
                       _readRegister (ARG)
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (3) _vsnprintf                                           19    12      7   89470
                                             78 BANK1      2     2      0
                                             46 BANK2     17    10      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             9     4      5   88433
                                             78 BANK0      2     2      0
                                             71 BANK1      7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           52    48      4   87571
                                             67 BANK1      4     0      4
                                              0 BANK2     46    46      0
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _otoa
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    9106
                                             16 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     512
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              8     6      2     161
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _utoa                                                25    15     10    7249
                                             16 BANK0     25    15     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             18     2     16     311
                                              1 COMMON     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             26    10     16     314
                                              1 COMMON    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6    6837
                                              1 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    19      3    2280
                                             10 COMMON     2     2      0
                                              0 BANK0     20    17      3
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _otoa                                                34    24     10    6729
                                             16 BANK0     34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              67    60      7   29207
                                              0 BANK1     67    60      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2    1232
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     641
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                               8     6      2     641
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     490
                                             58 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       16    12      4     287
                                              1 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    3727
                                             32 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             20    12      8    3302
                                              1 COMMON     8     0      8
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     121
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     490
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              7     3      4     448
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              9     5      4     452
                                              1 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                31    21     10    7932
                                             16 BANK0     31    21     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                              4 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             19     3     16     448
                                              1 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             27    11     16     452
                                              1 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 8     5      3    5680
                                             16 BANK0      6     3      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 10     5      5    5420
                                              6 BANK0     10     5      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     164
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     6      2    1605
                                             10 COMMON     2     0      2
                                              0 BANK0      6     6      0
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1290
                                              1 COMMON     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    2025
                                              7 COMMON     2     0      2
                                              0 BANK0     13    13      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              5     3      2     207
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write_Text                                    5     3      2    2012
                                              2 COMMON     5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_AFE                                             0     0      0   22390
  _setOverCurrentDischargeProtection
          _setShortCircuitProtection
              _setShuntResistorValue
            _setTemperatureLimitsint
 ---------------------------------------------------------------------------------
 (3) _setTemperatureLimitsint                              8     0      8    1244
                                              0 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     852
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _setShuntResistorValue                                4     0      4      98
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) _setShortCircuitProtection                           21    15      6   10524
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _setOverCurrentDischargeProtection                   21    15      6   10524
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             26    18      8    3633
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) __Umul8_16                                            9     7      2     799
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1094
                                             58 BANK0     12     4      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _beginAFEcommunication                               15    13      2    5667
                                              0 BANK0     15    13      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _readRegister                                         6     2      4    3423
                                              5 COMMON     6     2      4
                      _read_I2C_data
                      _send_I2C_NACK
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _read_I2C_data                                        4     2      2       0
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) _I2C_writeRegister                                    6     0      6    2108
                                              5 COMMON     6     0      6
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_stopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_startBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_data                                        2     0      2     250
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _send_I2C_controlByte                                 4     0      4     652
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _RGB_AWAIT_AFE_CONN                                   1     1      0     326
                                              3 COMMON     1     1      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (2) _RGB_color                                            2     0      2     326
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _AFE_getSetShortCircuitCurrent                        8     4      4    3800
                                             67 BANK0      8     4      4
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _AFE_getSetCurrentSenseRes                            4     0      4       0
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _AFE_getOverCurrentDischargeCurrent                   8     4      4    3800
                                             67 BANK0      8     4      4
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     778
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             11     7      4     533
                                             10 COMMON     2     2      0
                                             58 BANK0      9     5      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             26    18      8    2489
                                             32 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_RGB                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_GPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initClock                                            0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   18    14      4     836
                                             10 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                              1 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _myIsr                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     ___aldiv
   _initClock
     _internal_16
   _init_GPIO
   _init_I2C
   _init_RGB
   _init_TMR1
   _statemachine
     _AFE_getOverCurrentDischargeCurrent
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _AFE_getSetCurrentSenseRes
     _AFE_getSetShortCircuitCurrent
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _EUSART_Write_Text
       _EUSART_Write
     _RGB_AWAIT_AFE_CONN
       _RGB_color
     _RGB_color
     _beginAFEcommunication
       _I2C_writeRegister
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
     _init_AFE
       _setOverCurrentDischargeProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShortCircuitProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShuntResistorValue
       _setTemperatureLimitsint
         ___wmul
     _printotAFERegisters
       _EUSART_Write_Text
         _EUSART_Write
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _snprintf
         _AFE_getOverCurrentDischargeCurrent (ARG)
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
         _AFE_getSetCurrentSenseRes (ARG)
         _AFE_getSetShortCircuitCurrent (ARG)
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
         _readRegister (ARG)
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _vsnprintf (ARG)
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fleq
                 ___flge
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___fltol
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
     _snprintf
       _AFE_getOverCurrentDischargeCurrent (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _AFE_getSetCurrentSenseRes (ARG)
       _AFE_getSetShortCircuitCurrent (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _readRegister (ARG)
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _vsnprintf (ARG)
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fleq
               ___flge
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul
                 __Umul8_16
                 ___xxtofl (ARG)
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___fltol
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     50      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      2      40      11       80.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     18D      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     18D      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              41      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Dec 28 02:40:52 2019

          __end_of_setShortCircuitProtection 1B72                        __end_of_send_I2C_data 32FD  
                               ___fldiv@aexp 0059                                 ___fldiv@bexp 0058  
                               ___fldiv@sign 0051                                  __CFG_CP$OFF 0000  
                               ___awdiv@sign 0077                          ___wmul@multiplicand 0073  
                      _setShuntResistorValue 3323                          __Umul8_16@word_mpld 0077  
                                        l221 32E4                                          l320 34E3  
                                        l321 34F8                                          l145 07FD  
                                        l317 34D9                                          l262 3358  
                                        l319 34DE                                          l256 32F9  
                                        l280 32DF                                          l274 32D7  
                                        l268 331F                                          l292 3302  
                                        l551 1BB7                                          l607 0293  
                                        l711 2477                                          l536 3774  
                                        l560 1C83                                          l552 1BBE  
                                        l608 0280                                          l618 02C7  
                                        l722 1CCC                                          l539 3794  
                                        l707 245C                                          l388 2FFA  
                                        l556 1BD9                                          l636 048A  
                                        l557 1BED                                          l726 1CE7  
                                        l672 263E                                          l760 13F6  
                                        l673 26D3                                          l761 13F9  
                                        l690 2077                                          l747 1DEA  
                                        l763 142C                                          l668 2623  
                                        l756 13E4                                          l854 3411  
                                        l758 13F0                                          l919 2B4D  
                                        l679 26DE                                          l759 13F3  
                                        l954 27EE                                          l699 20D2  
                                        l967 2443                                          _abs 3392  
                             RGB_color@color 0071                                          _pad 375E  
                               ___awmod@sign 0077                                 __CFG_BORV$LO 0000  
                                        wreg 0009                                 __CFG_IESO$ON 0000  
                               ___flmul@aexp 0038                                 ___flmul@bexp 0039  
                               ___flmul@sign 0033                                 ___flmul@temp 003E  
                               ___flmul@prod 003A                                 _statemachine 06D5  
                               __CFG_LVP$OFF 0000                                 ___fltol@exp1 007B  
                                       l1023 3690                                         l1032 29E2  
                                       l1024 36AA                                         l1211 109B  
                                       l1035 2A30                                         ?_abs 0074  
                                       l1302 2D31                                         l1055 28CA  
                                       l1303 2D3B                                         l1232 11A2  
                                       l1233 11BA                                         l1161 1EE1  
                                       l1235 11C7                                         l1155 1E6B  
                                       l1340 2DC8                                         l1263 17F3  
                                       l1159 1EFE                                         l1087 2AAE  
                                       l1176 1F81                                         l1097 293E  
                                       l1363 2370                                         l1197 1FF8  
                                       l1189 1FE0                                         l1295 2D1D  
                                       l1289 2CE7                                         l1473 348B  
                                       l5100 175B                                         l5020 15F0  
                                       l5102 1772                                         l5022 15F8  
                                       l4222 2834                                         l5112 178B  
                                       l5040 161B                                         l4224 2838  
                                       l4240 3563                                         l5122 17B4  
                                       l5018 15EE                                         l5132 17E0  
                                       l5108 1789                                         l5036 1611  
                                       l4228 285F                                         l5126 17C9  
                                       l5038 1613                                         l4246 337F  
                                       l5048 1629                                         l5152 3438  
                                       l4248 338B                                         l4600 2737  
                                       l7000 1F79                                         l4504 299A  
                                       l4520 34C2                                         l4514 29C2  
                                       l4604 275E                                         l4508 299F  
                                       l6302 2CF6                                         l4454 3485  
                                       l4606 2762                                         l4702 37FB  
                                       l7030 1FB2                                         l7022 1FA7  
                                       l4550 2329                                         ?_pad 0026  
                                       l4616 2779                                         l7016 1FA0  
                                       l7008 1F93                                         l7024 1FA9  
                                       l4552 233A                                         l6330 2D56  
                                       l6306 2CFA                                         l7130 3592  
                                       l4626 27C1                                         l4618 2788  
                                       l4650 23D7                                         l4642 23CA  
                                       l4714 363A                                         l7034 1FB4  
                                       l8002 0922                                         l6316 2D2F  
                                       l6308 2D0A                                         l7132 359B  
                                       l4628 27CD                                         l4652 23E6  
                                       l4740 3670                                         l4732 365F  
                                       l7116 36BC                                         l7052 1FF0  
                                       l4556 2353                                         l7220 00B1  
                                       l4902 1093                                         l4806 28B8  
                                       l6318 2D22                                         l6422 1A6A  
                                       l4582 340B                                         l7070 376A  
                                       l4638 23A3                                         l4670 37B9  
                                       l4726 3647                                         l4718 3641  
                                       l7310 02C2                                         l7302 029E  
                                       l4830 2A5A                                         l8014 0953  
                                       l4912 10BA                                         l4816 28D7  
                                       l4808 28C6                                         l6440 1B28  
                                       l7080 3776                                         l4656 2416  
                                       l7152 1BD1                                         l4728 3653  
                                       l4736 3668                                         l7056 1FF4  
                                       l7320 02D8                                         l7216 00AA  
                                       l7208 0098                                         l4840 2AA2  
                                       l4832 2A69                                         l8112 0D65  
                                       l8200 202C                                         l4762 29FC  
                                       l7074 3772                                         l4658 2422  
                                       l7162 1C1A                                         l4850 28F3  
                                       l8122 0DD0                                         l8034 0A43  
                                       l8210 2AD2                                         l6460 1955  
                                       l6444 1B52                                         l6428 1B16  
                                       l6372 33F1                                         l7084 37A0  
                                       l7172 1BF5                                         l7180 1C8F  
                                       l4676 37C4                                         l7404 0543  
                                       l7412 05C5                                         l7332 02F0  
                                       l7228 00C3                                         l4852 2902  
                                       l8140 0E88                                         l8108 0D37  
                                       l8044 0A84                                         l6630 2BA7  
                                       l4918 10C6                                         l4790 2893  
                                       l4766 2A16                                         l7190 1CA2  
                                       l7158 1BE8                                         l4694 37EA  
                                       l4686 37CC                                         l7342 0302  
                                       l7318 02D4                                         l7238 00F3  
                                       l7246 0121                                         l8150 0F0D  
                                       l8126 0DF2                                         l8054 0AEB  
                                       l8230 2B30                                         l6616 2B6E  
                                       l6608 2B5E                                         l4944 1126  
                                       l6296 2CDF                                         l7184 1C97  
                                       l4688 37D8                                         l7440 0615  
                                       l7424 05F3                                         l7416 05DD  
                                       l7344 03E6                                         l7328 02E8  
                                       l7272 01A0                                         l7256 0151  
                                       l7264 017F                                         l7504 2685  
                                       l4856 2932                                         l8136 0E5A  
                                       l8064 0B53                                         l8232 2B37  
                                       l8216 2AE6                                         l6634 2BB5  
                                       l6626 2B9C                                         l6618 2B7C  
                                       l4970 115F                                         l4962 1131  
                                       l4938 110D                                         l4946 10EF  
                                       l4882 106F                                         l4786 288A  
                                       l6378 34E8                                         l6482 1A3B  
                                       l6466 1A01                                         l7194 1CAF  
                                       l4698 37F3                                         l7442 061D  
                                       l7362 0488                                         l7354 045A  
                                       l7282 023A                                         l7530 26F7  
                                       l7514 2660                                         l5770 103A  
                                       l8170 0FCA                                         l8154 0F3B  
                                       l8074 0BB5                                         l8218 2AEE  
                                       l8402 281F                                         l4964 1148  
                                       l4948 112B                                         l4884 1077  
                                       l7452 0619                                         l7364 0491  
                                       l7348 0439                                         l7276 01D0  
                                       l7284 025F                                         l5772 1015  
                                       l8164 0FA6                                         l8084 0C37  
                                       l8180 0FDA                                         l8228 2B2C  
                                       l6646 2F39                                         l4974 1161  
                                       l4878 106C                                         l6494 350B  
                                       l6478 1A13                                         l8510 2DA1  
                                       l7710 2DCC                                         l7702 2D90  
                                       l6910 1E63                                         l7462 0667  
                                       l7454 0651                                         l7294 028D  
                                       l7278 020A                                         l7542 2050  
                                       l7606 251B                                         l8174 0FD0  
                                       l8094 0C9F                                         l8326 06D6  
                                       l4984 118A                                         l8512 34ED  
                                       l8248 2F51                                         l7720 2DFB  
                                       l7704 2D95                                         l7376 04FC  
                                       l7296 0296                                         l7560 2099  
                                       l7608 2496                                         l7616 2520  
                                       l7640 1D29                                         l7632 1CF7  
                                       l4898 1090                                         l7706 2DA9  
                                       l6906 1E60                                         l7570 20A9  
                                       l7562 20A6                                         l5778 1041  
                                       l7626 1CDF                                         l8098 0CCD  
                                       l8506 07F2                                         l6916 1E75  
                                       l7396 0517                                         l7580 20F4  
                                       l7556 2088                                         l7636 1D0F  
                                       l7804 152F                                         l8508 141A  
                                       l7740 13E6                                         l8356 0740  
                                       l4998 11C3                                         l7478 0699  
                                       l7486 06B4                                         l7398 0531  
                                       l7574 20D6                                         l7590 246F  
                                       l7814 158F                                         l7750 13FC  
                                       l8198 2008                                         l7496 2636  
                                       l7680 1E08                                         l7656 1D77  
                                       l7664 1DB9                                         l7840 2C6F  
                                       l7824 2BBE                                         l7760 1433  
                                       l8384 07E8                                         l6954 1EE9  
                                       l6946 1EB1                                         l6882 1E38  
                                       l7578 20E7                                         l7906 2E63  
                                       l7914 20FA                                         l6980 1F1E  
                                       l6972 1F0C                                         l6956 1EEB  
                                       l6964 1EF9                                         l7596 24BA  
                                       l7924 2161                                         l7860 18B8  
                                       l7852 1860                                         l7836 2C41  
                                       l7828 2BEC                                         l7772 1465  
                                       l7756 1400                                         l6982 1F20  
                                       l6990 1F2F                                         l6886 1E3B  
                                       l7934 2536                                         l7774 1476  
                                       l7782 14A7                                         l7696 2D80  
                                       l7688 2D64                                         l6888 1E43  
                                       l7944 2598                                         l7872 21CB  
                                       l7864 18E6                                         l7848 183E  
                                       l7776 147F                                         l7954 083F  
                                       l7794 14ED                                         l7972 0973  
                                       l7964 08A7                                         l7884 224A  
                                       l7876 21F9                                         l7796 14FE  
                                       l7990 0901                                         l7798 1507  
                                       l7976 0977                                         l7896 2E00  
                                       l7978 08E0                                         STR_1 39A0  
                                       STR_2 3870                                         STR_3 38F7  
                                       STR_4 383B                                         STR_5 3A26  
                                       STR_6 3976                                         STR_7 38CB  
                                       STR_8 3802                                         STR_9 394C  
                                       _BRGH 0CF2                                         _CREN 0CEC  
                                       u5400 29BA                                         u6025 364A  
                                       u5410 29BB                                         u6045 3659  
                                       u6215 28B9                                         u5255 348C  
                                       u5335 339B                                         u6055 3660  
                                       u5345 2970                                         u6305 2A8F  
                                       u5515 2315                                         u5620 3373  
                                       u6245 28CE                                         u5365 2989  
                                       u5630 3374                                         u6270 2A4A  
                                       u5535 2343                                         u5720 2769  
                                       u6185 289C                                         u5465 22C2  
                                       u6345 2920                                         u5490 22F0  
                                       u5570 3455                                         _SCS0 04C8  
                                       u5395 29AC                                         u5555 235C  
                                       u5475 22DD                                         _SCS1 04C9  
                                       u5580 3456                                         u6525 1134  
                                       u4765 285D                                         u6615 1178  
                                       u6455 10F7                                         u5655 3412  
                                       u5495 22EC                                         u6625 1193  
                                       u6545 113D                                         u6465 10FE  
                                       u9105 1A2C                                         u5665 3417  
                                       u9130 3501                                         u6635 11AC  
                                       u5755 27AE                                         u9140 3502  
                                       u6485 1107                                         u6805 1767  
                                       u5925 37CF                                         u9150 3510  
                                       u6495 111B                                         u6735 169F  
                                       u5855 2404                                         u9160 3511  
                                       u9305 2EAE                                         u6745 16CE  
                                       u9065 1B41                                         u5945 37D9  
                                       u9410 33B8                                         u9235 2B71  
                                       u9315 2EC5                                         u6755 1724  
                                       u5955 37E3                                         u9420 33B9  
                                       u6765 173B                                         u5965 37EB  
                                       u9255 2B7D                                         u9335 2EFB  
                                       u6775 174A                                         u9265 2B91  
                                       u9345 2F12                                         u6785 175E  
                                       u9530 1ECF                                         u9275 2B9D  
                                       u6875 17A2                                         u9540 1ED0  
                                       u6885 17BD                                         u9525 1EC5  
                                       u6895 17D3                                         u8915 2D29  
                                       u9653 1F41                                         u9645 1F24  
                                       u9575 1EEF                                         u9920 352B  
                                       u9905 3780                                         u9930 352C  
                                       u8955 2D43                                         u8875 2D03  
                                       u9860 33CF                                         u9870 33D0  
                                       u9950 354D                                         u8895 2D17  
                                       u9695 1F94                                         u9960 354E  
                                       _TMR1 0016                                         u9795 1FCB  
                                       _SPEN 0CEF                                         _TXEN 0CF5  
                                       _SYNC 0CF4                                 __CFG_WRT$OFF 0000  
                                       abs@a 0074                                         _dbuf 0220  
                                       _atoi 2D5F                                         _ctoa 3585  
                                       _main 2804                                         _dtoa 1B72  
                                       _prec 01C0                                         _otoa 261C  
                                       _nout 01BC                                         pad@i 002C  
                                       pad@p 0029                                         fsr0h 0005  
                                       fsr1h 0007                                         indf0 0000  
                                       fsr0l 0004                                         indf1 0001  
                                       fsr1l 0006                                         pad@w 002E  
                                       _stoa 2035                                         btemp 007E  
                                       _utoa 2455                                         _xtoa 1CC5  
                              ___fpclassifyf 294F                                         start 001E  
                            ___fldiv@new_exp 0052                                 _tolower$1680 0079  
                   __end_of_send_I2C_stopBit 32E3                                        ??_abs 0076  
                                      ??_pad 002B                         _send_I2C_controlByte 3319  
                              ?_EUSART_Write 0070                                ___fltol@sign1 007A  
                            __end_of___aldiv 2BBE                              __end_of___aodiv 2800  
                                      ?_atoi 0077                                        ?_ctoa 0030  
                            __end_of___fladd 2000                                        ?_main 0070  
                                      ?_dtoa 0030                              __end_of___aomod 2455  
              I2C_writeRegister@slaveAddress 0075                              __end_of___fldiv 11CC  
                            __end_of___awdiv 3800                              __end_of___flneg 330F  
                                      STR_10 389E                                        STR_11 3922  
                                      STR_12 3A26                                        STR_20 3A7D  
                                      STR_21 3A91                                        STR_13 3A68  
                                      STR_30 3B18                                        STR_22 3AA5  
                                      STR_14 3A14                                        STR_31 3B2C  
                                      STR_23 3AB8                                        STR_15 39E8  
                                      STR_40 3B28                                        STR_24 3ACA  
                                      STR_16 39FE                                        STR_25 3A26  
                                      STR_17 3A29                                __CFG_WDTE$OFF 0000  
                                      STR_34 3B20                                        STR_26 3B14  
                                      STR_18 3A3E                                        STR_27 3B24  
                                      STR_19 3A53                                        STR_36 3B20  
                                      STR_52 3B46                              __end_of___awmod 3675  
                                      STR_45 3B21                                        STR_61 3B49  
                                      STR_54 3B46                                        STR_70 3B4C  
                                      STR_38 3B28                                        STR_63 3B49  
                                      STR_72 3B4C                                        STR_56 3B4F  
                                      STR_49 3B29                                        STR_65 3B52  
                                      STR_58 3B4F                                        STR_82 3B35  
                                      STR_90 3B5E                                        STR_67 3B52  
                                      STR_75 3B34                                        STR_92 3B5E  
                                      STR_77 3B34                                        STR_85 3B5B  
                                      STR_87 3B5B                                        STR_95 3B30  
                            __end_of___flmul 1800                                        STR_97 3B30  
                                      ?_otoa 0030                              __end_of___flsub 34B9  
                            __end_of___fltol 28E6                                        ?_stoa 0020  
                                      u10020 1B8D                                        u10005 36B8  
                                      u10030 1B8E                                        ?_utoa 0030  
                                      u11000 1D40                                        u10105 1C8D  
                                      u11010 1D41                                        u10125 1C09  
                                      u10230 00E4                                        u11030 1D60  
                                      u10135 1C15                                        u10240 00E5  
                                      u11040 1D61                                        u11105 1DE5  
                                      u10075 1BC9                                        u11300 1524  
                                      u10270 0142                                        u11310 1525  
                                      u11160 2DE0                                        u10280 0143  
                                      u11065 1D9D                                        u11170 2DE1  
                                      u11250 149C                                        u10355 028B  
                            __end_of___lodiv 2ABF                                        u11075 1DC3  
                                      u11260 149D                              ___awdiv@divisor 0071  
                                      u11095 1DD9                                        ?_xtoa 0030  
                                      u10800 203F                                        u10465 030C  
                                      u10385 02AB                                        u10395 02BE  
                                      u10715 262E                                        u10725 26B7  
                                      u10670 068C                                        u10655 065A  
                                      u10735 26DC                                        u10680 068D  
                                      u11480 2E44                                        u10585 05CF  
                                      u10905 2467                                        u11490 2E45  
                                      u10595 05DB                                        u10755 2674  
                                      u10835 2070                                        u10765 2680  
                                      u10855 20A4                                        u10935 24A9  
                                      u10865 20B3                                        u10945 24B5  
                                      u11907 2826                                        u10885 20F2  
                                      u11845 2B23                                        u11917 0703  
                                      u11855 2F67                                        u10975 1CD7  
                                      u11927 0747                              __end_of___lomod 294F  
                                      u11937 11D0                                        u11947 334F  
                                      u11875 2FCD                                        u10995 1D23  
                                      _IRCF0 04CB                                        _IRCF1 04CC  
                                      _IRCF2 04CD                                        _IRCF3 04CE  
                     __size_of_read_I2C_data 0010                                        i1l127 001C  
                            ___awdiv@counter 0076                                 vfpfcnvrt@fmt 00E5  
                               vfpfcnvrt@llu 0146                                        _SPBRG 019B  
                         __size_of_RGB_color 0021                               __CFG_FCMEN$OFF 0000  
                                      _flags 01C2                                        _errno 01BA  
                                      _fputc 282C                              __end_of_isalpha 345D  
                                      _fputs 355F                                        _myIsr 0004  
                            __end_of_isdigit 337B                          _printotAFERegisters 11CC  
                                      atoi@n 002B                                        pad@fp 0026  
                                      atoi@s 0077                                        _width 01BE  
                                      ctoa@c 0032                                        _putch 07FE  
                                      ctoa@w 0034                                        dtoa@d 0032  
                                      dtoa@i 004D                                        dtoa@n 0045  
                                      dtoa@p 003F                                        dtoa@s 0043  
                                      dtoa@w 0041                              __end_of_islower 33D7  
                            __end_of_isspace 3440                               __CFG_BOREN$OFF 0000  
                            __end_of_isupper 33C0                                        otoa@d 0032  
                                      otoa@i 0050                                        otoa@n 0048  
                                      otoa@p 0042                                        otoa@t 0044  
                                      otoa@w 0046                                        stoa@i 002A  
                                      stoa@l 0032                                        stoa@p 0030  
                                      stoa@s 0022                                        stoa@w 002C  
                                      utoa@d 0032                                        utoa@i 0047  
                                      utoa@n 003F                                        utoa@p 003B  
                                      utoa@w 003D                                        status 0003  
                                      wtemp0 007E                               ?___fpclassifyf 0071  
                            __end_of_tolower 353D                                        xtoa@c 0055  
                                      xtoa@d 0032                                        xtoa@i 0053  
                                      xtoa@n 004B                                        xtoa@p 0047  
                                      xtoa@w 0049                                        xtoa@x 003A  
                          _SCD_delay_setting 3B0C                              __end_of_strncmp 1052  
                            __end_of_toupper 355F                             ___lodiv@dividend 0028  
                               ?_internal_16 0070                                 _toupper$1695 0079  
                             __CFG_MCLRE$OFF 0000                              __initialization 0020  
      setTemperatureLimitsint@maxCharge_degC 0026                                 __end_of_atoi 2E00  
                               __end_of_ctoa 35B6                                 __end_of_main 282C  
                               __end_of_dtoa 1CC5                                 __end_of_otoa 270D  
                               __end_of_stoa 20FA                                 __end_of_utoa 2536  
                               __end_of_xtoa 1E1E                         ?_printotAFERegisters 0070  
                   __end_of_UV_delay_setting 3B0C                       ?_setShuntResistorValue 0071  
                     beginAFEcommunication@i 002D                        ?_send_I2C_controlByte 0071  
                             ??_EUSART_Write 0071                               __CFG_LPBOR$OFF 0000  
                          _ATmega328_address 3800                                       ??_atoi 0020  
                                     ??_ctoa 0033                                       ??_main 01DF  
                                     ??_dtoa 003A                                       ??_otoa 003A  
                                     ??_stoa 007A                                       ??_utoa 003A  
                                     ??_xtoa 003B                               __CFG_PLLEN$OFF 0000  
                           ___lodiv@quotient 0072                                ?_readRegister 0075  
                                     ?_fputc 0071                                       STR_102 3B31  
                                     STR_110 3B58                                       ?_fputs 007A  
                                     STR_112 3B58                                       STR_105 3B55  
                                     STR_122 3B39                                       STR_130 3B64  
                                     STR_107 3B55                                       STR_115 3B38  
                                     ?_myIsr 0070                                       STR_132 3B64  
                                     STR_141 3B1C                                       STR_117 3B38  
                                     STR_125 3B61                                       STR_150 3B1D  
                                     STR_127 3B61                                       STR_135 3B3C  
                                     STR_137 3B3C                                       STR_153 3B67  
                                     STR_146 3B3D                                       STR_162 3B6A  
                                     STR_155 3B67                                       STR_139 3B1C  
                                     STR_164 3B6A                                       STR_157 3B40  
                                     STR_166 3B43                                       STR_159 3B40  
                                     STR_168 3B43                             ___awdiv@dividend 0073  
                             __CFG_ZCDDIS$ON 0000                                       ?_putch 0070  
              __end_of_OCD_threshold_setting 39E8                                       _RC1REG 0199  
                  __end_of_SCD_delay_setting 3B14                                vfpfcnvrt@done 012D  
                                     _TX1REG 019A       setOverCurrentDischargeProtection@i_860 00AA  
                                     _SPLLEN 04CF                                       _SSPADD 0212  
                                     _TRISC6 0476                                       _TRISC7 0477  
                                     _SSPBUF 0211                                       u580lld 23A1  
                                     u569lld 2735                                _read_I2C_data 3354  
                           __end_of___xxtofl 2D5F                               __CFG_PWRTE$OFF 0000  
                          __end_of_RGB_color 34F9                                 vfprintf@cfmt 00EC  
                                     ___flge 29C7                                       ___fleq 3675  
                      ??_printotAFERegisters 016D                                    ??___aldiv 0079  
                                  ??___aodiv 0071                                    ??___fladd 0020  
                                  ??___aomod 0071                                       ___wmul 3409  
                                  ??___fldiv 0048                                    ??___awdiv 0075  
                                  ??___flneg 0075                               __CFG_STVREN$ON 0000  
                                  ??___awmod 0075                                    ??___flmul 002E  
                                  ??___flsub 007A                                    ??___fltol 005E  
                                  ??___lodiv 0071                             __end_of_init_I2C 3354  
                                  ??___lomod 0071                             __end_of_init_AFE 083F  
                                     _efgtoa 0058                             __end_of_init_RGB 1806  
                  __end_of_ATmega328_address 3802                                       _floorf 22A1  
                           ___awdiv@quotient 0078                        _beginAFEcommunication 2F4C  
                            ___awmod@divisor 0071                              ___awmod@counter 0076  
                                     pad@buf 0028                                       ctoa@fp 0030  
                                     dtoa@fp 0030                                       _strcpy 34B9  
                                     _strlen 337B                                       fputc@c 0071  
                                     fputs@c 0022                                       fputs@i 0023  
                                     fputs@s 0025                                    ??_isalpha 0073  
                                  ??_isdigit 0073                           __size_of__Umul8_16 001F  
                            ___fpclassifyf@e 0020                              ___fpclassifyf@u 0022  
                            ___fpclassifyf@x 0071                                    ??_islower 0073  
                                  ??_isspace 0073                                       otoa@fp 0030  
                             ??_readRegister 0079                                    ??_isupper 0073  
                                     stoa@cp 002E                                       stoa@fp 0020  
                                     putch@c 0070                             __end_of_vfprintf 2035  
                                     utoa@fp 0030                             __end_of_snprintf 33EF  
                                  ??_tolower 0020                                       xtoa@fp 0030  
                                  ??_strncmp 0077                                    ??_toupper 0020  
                                 ___flge@ff1 005A                                   ___flge@ff2 005E  
                            ??___fpclassifyf 0075                                 ___xxtofl@arg 0022  
                               ___xxtofl@exp 0021                                 ___xxtofl@val 0071  
                                 ___fleq@ff1 0071                                   ___fleq@ff2 0075  
                    __end_of__initialization 0054                               ?_read_I2C_data 0071  
                                 ___flneg@f1 0071                                   ___fltol@f1 005A  
                   ?_setTemperatureLimitsint 0020     setTemperatureLimitsint@minDischarge_degC 0020  
                             __pcstackCOMMON 0070                       ??_send_I2C_controlByte 0075  
                               __pidataBANK3 32CC                                __end_of_fputc 2880  
                              __end_of_fputs 3585                                __end_of_myIsr 001E  
                               _cellVoltages 01A0                                __end_of_putch 07FF  
                         _RGB_AWAIT_AFE_CONN 34F9                          ?_RGB_AWAIT_AFE_CONN 0070  
                                    ??_fputc 0075                                      ??_fputs 0020  
                                    ??_myIsr 0070                                      ??_putch 0071  
          setShortCircuitProtection@delay_us 006A                                   __pbssBANK3 01A0  
                                 __pbssBANK4 0220                         __end_of_EUSART_Write 32EB  
                         __size_of_init_GPIO 0038                           __size_of_initClock 0003  
                         __size_of_init_TMR1 000B                          statemachine@success 01DE  
                          __end_of__Umul8_16 349A                                   __pmaintext 2804  
                       ??_RGB_AWAIT_AFE_CONN 0073                         __size_of_internal_16 0009  
            setShortCircuitProtection@scaler 00A0                                      ?___flge 005A  
                                    ?___fleq 0071                            ?_send_I2C_stopBit 0070  
                                    ?___wmul 0071        setTemperatureLimitsint@minCharge_degC 0024  
                            __CFG_PPS1WAY$ON 0000                   ?_setShortCircuitProtection 0066  
                                 __pintentry 0004                                      ?_efgtoa 00A0  
                     ?_beginAFEcommunication 0020                                      ?_floorf 005A  
                         ??_send_I2C_stopBit 0071                                      ?_strcpy 0071  
                                    ?_strlen 0071                      _shuntResistorValue_mOhm 01B6  
                                  ?___xxtofl 0071               setShortCircuitProtection@i_851 00AA  
                         __size_of_vfpfcnvrt FC43                                      _PPSLOCK 0E0F  
                     __size_of_send_I2C_NACK 0009                             ___lomod@dividend 0028  
                            ??_read_I2C_data 0073                       __size_of_send_I2C_data 0009  
                                  ?_init_I2C 0070                                    ?_init_AFE 0070  
                                  ?_init_RGB 0070                     readRegister@recievedData 0079  
                    ??_setShuntResistorValue 0075                           __size_of_vsnprintf 007D  
                       __end_of_readRegister 35EC                                      ___aldiv 2B3C  
                                    _adcGain 01CE                              __size_of___flge 007C  
                            __size_of___fleq 0049                                      ___aodiv 270D  
                                    ___fladd 1E1E                                      ___aomod 2379  
                                    ___fldiv 1052                                      ___awdiv 37AF  
                                    ___flneg 3306                                      ___awmod 3630  
                                    ___flmul 15D4                                      ___flsub 349A  
                                    ___fltol 2880                              __size_of___wmul 001B  
                                    ___lodiv 2A43                                      ___lomod 28E6  
                                  ?_vfprintf 00E7                              __size_of_efgtoa 067D  
                                  ?_snprintf 015F                                _messageBuffer 2771  
            ??_AFE_getSetShortCircuitCurrent 0067                              __size_of_floorf 00D8  
                                    __ptext1 06D5                                      __ptext2 11CC  
                                    __ptext3 33D7                                      __ptext4 2ABF  
                                    __ptext5 2000                                      __ptext6 13BD  
                                    __ptext7 1CC5                                      __ptext8 353D  
                                    __ptext9 33C0                            __end_of_init_GPIO 183E  
                          __end_of_initClock 2804                            __end_of_init_TMR1 3338  
                            __size_of_strcpy 001F                              __size_of_strlen 0017  
                                  _T1CONbits 0018                                 __size_of_abs 0017  
         __size_of_AFE_getSetCurrentSenseRes 000A                                 __size_of_pad 0051  
                                    _isalpha 3440                                      _isdigit 3364  
                                 ??___xxtofl 0075                             ___awmod@dividend 0073  
                 ?_AFE_getSetCurrentSenseRes 0071                             ___aldiv@dividend 0075  
                                    _islower 33C0                                      _isspace 3424  
  __end_of_setOverCurrentDischargeProtection 1A5B   __size_of_setOverCurrentDischargeProtection 0115  
        ??_setOverCurrentDischargeProtection 006C           ?_setOverCurrentDischargeProtection 0066  
          _setOverCurrentDischargeProtection 1946                                      _isupper 33A9  
                                    efgtoa@c 00A6                                      efgtoa@d 00C3  
                                    efgtoa@e 00DB                                      efgtoa@f 00A2  
                                    efgtoa@g 00D7                                      efgtoa@h 00CD  
                                    efgtoa@i 00D5                                      efgtoa@l 00D1  
                                    efgtoa@m 00BF                                      efgtoa@n 00DD  
                                    efgtoa@p 00C7                                      efgtoa@t 00BB  
                                    efgtoa@u 00DF                                      efgtoa@w 00CA  
                                    atoi@neg 0024                                      _tolower 351B  
                                    clrloop0 3339                                      _strncmp 1000  
                                    _toupper 353D                         end_of_initialization 0054  
                                    floorf@e 0068                                      floorf@m 0064  
                                    floorf@u 006A                                      floorf@x 005A  
                                 ??_init_I2C 0071                                   ??_init_AFE 007B  
                                 ??_init_RGB 0071                                      fputc@fp 0073  
                                    fputs@fp 007A                            _EUSART_Initialize 2EA4  
                         ?_EUSART_Initialize 0026                            __end_of_vfpfcnvrt 1000  
                                 efgtoa@mode 00CC                                   efgtoa@sign 00C5  
                              _send_I2C_NACK 32FD                             ___aldiv@quotient 0022  
                 send_I2C_controlByte@RW_bit 0073                                      psplit$0 4B0094  
                                    psplit$1 940095                                      psplit$2 950096  
                                    psplit$3 960097                                      psplit$4 970098  
                                    psplit$5 980099                                      psplit$6 99009A  
                                    psplit$7 9A009B                                _send_I2C_data 32F4  
                                  _RGB_color 34D8                                   ??_vfprintf 006E  
                         EUSART_Initialize@x 007A                                   ??_snprintf 0169  
                                    strcpy@d 0077                                      strlen@a 0073  
                                    strcpy@s 0075                                      strlen@s 0071  
                        ??_EUSART_Initialize 002A                                  ___fladd@grs 002B  
                           __CFG_FOSC$INTOSC 0000                                ___xxtofl@sign 0020  
                                  _TRISAbits 008C                                    _TRISBbits 008D  
                                  _TRISCbits 008E                                    _TRISEbits 0090  
                      __size_of_EUSART_Write 0008            __end_of_AFE_getSetCurrentSenseRes 3319  
                          __end_of_vsnprintf 2B3C                                  ___fldiv@grs 0054  
                                ___fldiv@rem 004D                __end_of_SCD_threshold_setting 3AFC  
                                  _RXPPSbits 0E24                            _I2C_writeRegister 345D  
                                ___flmul@grs 0034                    __end_of_EUSART_Initialize 2F4C  
                      _OCD_threshold_setting 39C8                  __end_of_printotAFERegisters 13BD  
                         ?_I2C_writeRegister 0075             beginAFEcommunication@commSuccess 002B  
                             ?_send_I2C_NACK 0070                     readRegister@slaveAddress 0075  
                             ?_send_I2C_data 0071                          ??_I2C_writeRegister 007B  
 __end_of_AFE_getOverCurrentDischargeCurrent 370E  __size_of_AFE_getOverCurrentDischargeCurrent 0050  
       ??_AFE_getOverCurrentDischargeCurrent 0067          ?_AFE_getOverCurrentDischargeCurrent 0063  
         _AFE_getOverCurrentDischargeCurrent 36BE                                   ?_RGB_color 0071  
                             __end_of___flge 2A43                               __end_of___fleq 36BE  
                                vfpfcnvrt@ap 00E6                                  vfpfcnvrt@cp 012C  
                                vfpfcnvrt@ct 0135                                  vfpfcnvrt@fp 00E3  
                                vfpfcnvrt@ll 013C                               __end_of___wmul 3424  
                                vfpfcnvrt@vp 0144                               __end_of_efgtoa 06D5  
                               _EUSART_Write 32E3                               __end_of_floorf 2379  
                I2C_writeRegister@regAddress 0077                                   floorf@F524 01AA  
              setShuntResistorValue@res_mOhm 0071             __size_of_setTemperatureLimitsint 0044  
                             __end_of_strcpy 34D8                               __end_of_strlen 3392  
      __end_of_AFE_getSetShortCircuitCurrent 375E       __size_of_AFE_getSetShortCircuitCurrent 0050  
              _AFE_getSetShortCircuitCurrent 370E                          start_initialization 0020  
                            ___lodiv@divisor 0020                              ___lodiv@counter 007A  
                              ?_statemachine 0070                                  __end_of_abs 33A9  
                                __end_of_pad 37AF                            _minCellTempCharge 01CA  
                          pnum$text6_split_1 0094                            pnum$text6_split_2 0095  
                          pnum$text6_split_3 0096                            pnum$text6_split_4 0097  
                          pnum$text6_split_5 0098                            pnum$text6_split_6 0099  
                          pnum$text6_split_7 009A                            pnum$text6_split_8 009B  
                       _maxCellTempDischarge 01C4                         _minCellTempDischarge 01C8  
                  __end_of_I2C_writeRegister 347B       _setOverCurrentDischargeProtection$1930 00A4  
                      __end_of___fpclassifyf 29C7                            _EUSART_Write_Text 33EF  
                      __size_of_readRegister 0036                           ?_EUSART_Write_Text 0072  
                    ??_beginAFEcommunication 0022                                  vfprintf@fmt 00E9  
                                   ??___flge 0062                                     ??___fleq 0020  
                                   ??___wmul 0075                                     ??_efgtoa 00A7  
                                  __Umul8_16 347B                  ??_setShortCircuitProtection 006C  
                                __pdataBANK3 01D7                                     ??_floorf 005E  
                        ??_EUSART_Write_Text 0074                __size_of_send_I2C_controlByte 000A  
                                   ??_strcpy 0073                                     ??_strlen 0073  
                                  ___fladd@a 0075                                    ___fladd@b 0071  
                               vsnprintf@cnt 0157                                 vsnprintf@fmt 0152  
                                  ___fldiv@a 0040                                    ___fldiv@b 0044  
                                __pbssBIGRAM 2771                                    _adcOffset 01CC  
                                  ___flmul@a 002A                                    ___flmul@b 0026  
                                __pbssCOMMON 007C                                    ___flsub@a 0040  
                                  ___flsub@b 0044                               ??_statemachine 016E  
                                  ___latbits 0003             send_I2C_controlByte@BlockAddress 0071  
                                 myIsr@count 01D2                                __pcstackBANK0 0020  
                              __pcstackBANK1 00A0                                __pcstackBANK2 0120  
                              __pcstackBANK3 01DE                             ___aodiv@dividend 0028  
                  __size_of_send_I2C_stopBit 0008                                  snprintf@fmt 0163  
                          __size_of___xxtofl 0096                                 _readRegister 35B6  
   setTemperatureLimitsint@maxDischarge_degC 0022                    __end_of_EUSART_Write_Text 3409  
                 __size_of_EUSART_Initialize 00A8                                ??_internal_16 0071  
                                  _atoi$1557 0026                                    _atoi$1558 002A  
                                  _atoi$1559 0028                             _OV_delay_setting 3AFC  
                          __size_of_init_I2C 0010                        I2C_writeRegister@data 0079  
                            ??_send_I2C_NACK 0071                            __size_of_init_AFE 003E  
                          __size_of_init_RGB 0005                                  _efgtoa$1041 00AF  
                                _efgtoa$1050 00B5                                  _efgtoa$1042 00B1  
                                _efgtoa$1051 00B7                                  _efgtoa$1052 00B9  
                                _efgtoa$1046 00B3                            _send_I2C_startBit 32D3  
                                  _dtoa$1018 003D                              ??_send_I2C_data 0073  
                __size_of_RGB_AWAIT_AFE_CONN 0022               __size_of_setShuntResistorValue 000A  
                                   ?___aldiv 0071                                     ?___aodiv 0020  
                         ?_send_I2C_startBit 0070                                     ?___fladd 0071  
              __end_of_setShuntResistorValue 332D                                     ?___aomod 0020  
                                   ?___fldiv 0040                                     ?___awdiv 0071  
                           ___aodiv@quotient 0074                                     ?___flneg 0071  
                                   ?___awmod 0071                                     ?___flmul 0026  
                                   ?___flsub 0040                                     ?___fltol 005A  
                                   ?___lodiv 0020                                     ?___lomod 0020  
                                ??_RGB_color 0073                                   ?__Umul8_16 0071  
                  EUSART_Initialize@baudrate 0026                            __size_of_vfprintf 0035  
                        ??_send_I2C_startBit 0071                            __size_of_snprintf 0018  
             BQ76920@shuntResistorValue_mOhm 01B2                              ___lomod@divisor 0020  
                            ___lomod@counter 0072                                     ?_isalpha 0071  
                                   ?_isdigit 0071                                     ?_islower 0071  
                                   ?_isspace 0071                  ??_AFE_getSetCurrentSenseRes 0075  
                                  _init_GPIO 1806                                     ?_isupper 0071  
                                  _initClock 2801                                    _init_TMR1 332D  
                                  _currState 01D4                                     ?_tolower 0077  
                  _setShortCircuitProtection 1A5B                   __size_of_I2C_writeRegister 001E  
                             __size_of_fputc 0054                               __size_of_fputs 0026  
                             __size_of_myIsr 001A                                     ?_strncmp 0071  
             ?_AFE_getSetShortCircuitCurrent 0063                                     ?_toupper 0077  
                             __size_of_putch 0001                              ___aldiv@divisor 0071  
                      __end_of_read_I2C_data 3364                              ___aldiv@counter 0020  
                             ___wmul@product 0075                              BQ76920@protect1 01D1  
                            BQ76920@protect2 01D0                                     _LATAbits 010C  
                                   _LATEbits 0110                    __end_of_send_I2C_startBit 32DB  
                                  clear_ram0 3338                                    _tmr1_flag 01D3  
                                   _PIE1bits 0091           setOverCurrentDischargeProtection@i 00A8  
                                   _PIR1bits 0011                   setShortCircuitProtection@i 00A8  
                        __end_of_internal_16 32F4                                    _vfpfcnvrt 13BD  
                                  _xtoa$1088 0043                                    _xtoa$1089 0045  
                          ___wmul@multiplier 0071                      _setTemperatureLimitsint 35EC  
                                 ?_init_GPIO 0070                                   ?_initClock 0070  
                                 ?_init_TMR1 0070                        send_I2C_data@databyte 0071  
                               _isspace$1597 0075                                   vfpfcnvrt@c 0145  
                                 vfpfcnvrt@f 0138                   __size_of_EUSART_Write_Text 001A  
                                  _vsnprintf 2ABF                            _OCD_delay_setting 3ADC  
                  _AFE_getSetCurrentSenseRes 330F                         __end_of_statemachine 07FE  
                                 vfprintf@ap 00EB                                   vfprintf@fp 00E7  
                                ??__Umul8_16 0073                             __size_of___aldiv 0082  
                           __size_of___aodiv 00F3                             __size_of___fladd 01E2  
                           __size_of___aomod 00DC                             __size_of___fldiv 017A  
                           __size_of___awdiv 0051                             __size_of___flneg 0009  
                           __size_of___awmod 0045               _setShortCircuitProtection$1929 00A4  
                                vsnprintf@ap 0154                             __size_of___flmul 022C  
                           __size_of___flsub 001F                             __size_of___fltol 0066  
                     readRegister@regAddress 0077                             __size_of___lodiv 007C  
                           __size_of___lomod 0069                                   ?_vfpfcnvrt 00E3  
                                 snprintf@ap 016C                              ___aodiv@divisor 0020  
                            ___aodiv@counter 0072                                   _ANSELBbits 018D  
                                 _ANSELCbits 018E                           ___fpclassifyf@F463 01AE  
                                   ___xxtofl 2CC9  setOverCurrentDischargeProtection@current_mA 0066  
                           __size_of_isalpha 001D                             __size_of_isdigit 0017  
                           _send_I2C_stopBit 32DB                             __size_of_islower 0017  
                           __size_of_isspace 001C                                     __ptext10 3440  
                                   __ptext11 2455                                     __ptext20 34B9  
                                   __ptext12 28E6                                     __ptext21 22A1  
                                   __ptext13 2A43                                     __ptext30 3392  
                                   __ptext22 294F                                     __ptext14 1000  
                                   __ptext31 2379                                     __ptext23 349A  
                                   __ptext15 2035                                     __ptext40 3424  
                                   __ptext32 270D                                     __ptext24 1E1E  
                                   __ptext16 261C                                     __ptext41 3364  
                                   __ptext33 3585                                     __ptext25 3306  
                                   __ptext17 0058                                     __ptext50 15D4  
                                   __ptext42 33EF                                     __ptext34 375E  
                                   __ptext26 3675                                     __ptext18 351B  
                                   __ptext51 347B                                     __ptext43 32E3  
                                   __ptext35 337B                                     __ptext27 3630  
                                   __ptext19 33A9                                     __ptext60 32F4  
                                   __ptext52 29C7                                     __ptext44 0801  
                                   __ptext36 355F                                     __ptext28 37AF  
                                   __ptext61 3319                                     __ptext53 2F4C  
                                   __ptext45 35EC                                     __ptext37 282C  
                                   __ptext29 1B72                                     __ptext70 332D  
                                   __ptext62 34F9                                     __ptext54 35B6  
                                   __ptext46 3409                                     __ptext38 07FE  
                                   __ptext71 1801                                     __ptext63 34D8  
                                   __ptext55 32FD                                     __ptext47 3323  
                                   __ptext39 2D5F                                     __ptext72 3344  
                                   __ptext64 370E                                     __ptext56 3354  
                                   __ptext48 1A5B                                     __ptext73 1806  
                                   __ptext65 330F                                     __ptext57 345D  
                                   __ptext49 1946                                     __ptext74 2801  
                                   __ptext66 36BE                                     __ptext58 32DB  
                                   __ptext75 32EB                                     __ptext67 2CC9  
                                   __ptext59 32D3                                     __ptext76 2EA4  
                                   __ptext68 2880                                     __ptext77 2B3C  
                                   __ptext69 1052                             __size_of_isupper 0017  
                           __size_of_tolower 0022                    __end_of_OCD_delay_setting 3AEC  
                                 strcpy@dest 0078                             __size_of_strncmp 0052  
                           __size_of_toupper 0022                                   ?_vsnprintf 014E  
                                   _init_I2C 3344                                     _init_AFE 0801  
                                   _init_RGB 1801                                __size_of_atoi 00A1  
                              __size_of_ctoa 0031                                __size_of_main 0028  
                              __size_of_dtoa 0153                                _SSPDATPPSbits 0E21  
                                  pnum$text6 004B                                __size_of_otoa 00F1  
                      _SCD_threshold_setting 3AEC                                __size_of_stoa 00C5  
                              __size_of_utoa 00E1                   __size_of_send_I2C_startBit 0008  
                              __size_of_xtoa 0159                                  _internal_16 32EB  
                                 _RB2PPSbits 0E9A                                   _RC1STAbits 019D  
                                   efgtoa@fp 00A0                                     efgtoa@ne 00C1  
                                   efgtoa@pp 00BD                                     efgtoa@ou 00AB  
                                  stoa@F1174 01D7                                   _RC4PPSbits 0EA4  
             __size_of_beginAFEcommunication 00B4                                _SSPCLKPPSbits 0E20  
              __end_of_beginAFEcommunication 3000                                     int$flags 007E  
                                 _RC5PPSbits 0EA5                                     _protect1 01D6  
                                   _protect2 01D5                 __size_of_printotAFERegisters 01F1  
                  ??_setTemperatureLimitsint 0077                                     _vfprintf 2000  
                                   _snprintf 33D7                             ___aomod@dividend 0028  
  setOverCurrentDischargeProtection@delay_ms 006A                     __end_of_OV_delay_setting 3B04  
                             _vfpfcnvrt$1103 012F                               _vfpfcnvrt$1104 0131  
                             _vfpfcnvrt$1130 0133                                   _INTCONbits 000B  
                                ??_init_GPIO 0071                                  ??_initClock 0071  
                                ??_init_TMR1 0071                               __pstringtext10 389E  
                             __pstringtext11 38CB                               __pstringtext20 3A29  
                             __pstringtext12 38F7                               __pstringtext21 3A3E  
                             __pstringtext13 3922                               __pstringtext30 3B18  
                             __pstringtext22 3A53                               __pstringtext14 394C  
                             __pstringtext31 3B1C                               __pstringtext23 3A68  
                             __pstringtext15 3976                               __pstringtext40 3B40  
                             __pstringtext32 3B20                               __pstringtext24 3A7D  
                             __pstringtext16 39A0                               __pstringtext41 3B43  
                             __pstringtext33 3B24                               __pstringtext25 3A91  
                             __pstringtext17 39E8                               __pstringtext50 3B5E  
                             __pstringtext42 3B46                               __pstringtext34 3B28  
                             __pstringtext26 3AA5                               __pstringtext18 39FE  
                             __pstringtext51 3B61                               __pstringtext43 3B49  
                             __pstringtext35 3B2C                               __pstringtext27 3AB8  
                             __pstringtext19 3A14                               __pstringtext52 3B64  
                             __pstringtext44 3B4C                               __pstringtext36 3B30  
                             __pstringtext28 3ACA                               __pstringtext53 3B67  
                             __pstringtext45 3B4F                               __pstringtext37 3B34  
                             __pstringtext29 3B14                               __pstringtext54 3B6A  
                             __pstringtext46 3B52                               __pstringtext38 3B38  
                             __pstringtext55 0000                               __pstringtext47 3B55  
                             __pstringtext39 3B3C                               __pstringtext48 3B58  
                             __pstringtext49 3B5B                                     isalpha@c 0071  
                                   isdigit@c 0071                                   vsnprintf@f 0159  
                                 vsnprintf@n 0150                                   vsnprintf@s 014E  
                           _UV_delay_setting 3B04                                    snprintf@n 0161  
                                  snprintf@s 015F                 __end_of_send_I2C_controlByte 3323  
                                   intlevel1 0000          setShortCircuitProtection@current_mA 0066  
                                   islower@c 0071                                     isspace@c 0071  
                          __CFG_CLKOUTEN$OFF 0000                                    strcpy@src 0071  
                                _PPSLOCKbits 0E0F                                     isupper@c 0071  
         __size_of_setShortCircuitProtection 0117                                    strncmp@_l 0071  
                                  strncmp@_r 0073                                  efgtoa@nmode 00C9  
                          _maxCellTempCharge 01C6                              ___aomod@divisor 0020  
                                ??_vfpfcnvrt 0120                                     stoa@nuls 0023  
                            ___aomod@counter 0072                                __pstringtext1 39C8  
                              __pstringtext2 3ADC                                __pstringtext3 3AEC  
                              __pstringtext4 3AFC                                __pstringtext5 3B04  
                              __pstringtext6 3B0C                                __pstringtext7 3800  
                              __pstringtext8 383B                                __pstringtext9 3870  
                     __Umul8_16@multiplicand 0071                                     tolower@c 0077  
                             _vsnprintf$1732 0155                       __size_of___fpclassifyf 0078  
                                   strncmp@l 0078                                     strncmp@n 0075  
                                   strncmp@r 007A                                     toupper@c 0077  
                      EUSART_Write_Text@text 0072                                 ___aldiv@sign 0021  
                                _SSPCON2bits 0216                                ___fladd@signs 0028  
            __end_of_setTemperatureLimitsint 3630                           EUSART_Write@txData 0071  
                               ___aodiv@sign 0073      setOverCurrentDischargeProtection@scaler 00A0  
                                ??_vsnprintf 00EE                                 ___fladd@aexp 0029  
                               ___fladd@bexp 002A                        __size_of_statemachine 0129  
                                _toggleColor 007C                         __Umul8_16@multiplier 0079  
                                 _SSPCONbits 0215                   __end_of_RGB_AWAIT_AFE_CONN 351B  
                               ___aomod@sign 0073                           EUSART_Write_Text@i 0075  
                      __end_of_send_I2C_NACK 3306                            __Umul8_16@product 0075  
