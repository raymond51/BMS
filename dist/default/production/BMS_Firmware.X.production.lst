

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Feb 23 22:20:49 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1719
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK4,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	stringtext14,global,class=STRCODE,delta=2
    19                           	psect	stringtext15,global,class=STRCODE,delta=2
    20                           	psect	stringtext16,global,class=STRCODE,delta=2
    21                           	psect	stringtext17,global,class=STRCODE,delta=2
    22                           	psect	stringtext18,global,class=STRCODE,delta=2
    23                           	psect	stringtext19,global,class=STRCODE,delta=2
    24                           	psect	stringtext20,global,class=STRCODE,delta=2
    25                           	psect	stringtext21,global,class=STRCODE,delta=2
    26                           	psect	stringtext22,global,class=STRCODE,delta=2
    27                           	psect	stringtext23,global,class=STRCODE,delta=2
    28                           	psect	stringtext24,global,class=STRCODE,delta=2
    29                           	psect	stringtext25,global,class=STRCODE,delta=2
    30                           	psect	stringtext26,global,class=STRCODE,delta=2
    31                           	psect	stringtext27,global,class=STRCODE,delta=2
    32                           	psect	stringtext28,global,class=STRCODE,delta=2
    33                           	psect	stringtext29,global,class=STRCODE,delta=2
    34                           	psect	stringtext30,global,class=STRCODE,delta=2
    35                           	psect	stringtext31,global,class=STRCODE,delta=2
    36                           	psect	stringtext32,global,class=STRCODE,delta=2
    37                           	psect	stringtext33,global,class=STRCODE,delta=2
    38                           	psect	stringtext34,global,class=STRCODE,delta=2
    39                           	psect	stringtext35,global,class=STRCODE,delta=2
    40                           	psect	stringtext36,global,class=STRCODE,delta=2
    41                           	psect	stringtext37,global,class=STRCODE,delta=2
    42                           	psect	stringtext38,global,class=STRCODE,delta=2
    43                           	psect	stringtext39,global,class=STRCODE,delta=2
    44                           	psect	stringtext40,global,class=STRCODE,delta=2
    45                           	psect	stringtext41,global,class=STRCODE,delta=2
    46                           	psect	stringtext42,global,class=STRCODE,delta=2
    47                           	psect	stringtext43,global,class=STRCODE,delta=2
    48                           	psect	stringtext44,global,class=STRCODE,delta=2
    49                           	psect	stringtext45,global,class=STRCODE,delta=2
    50                           	psect	stringtext46,global,class=STRCODE,delta=2
    51                           	psect	stringtext47,global,class=STRCODE,delta=2
    52                           	psect	stringtext48,global,class=STRCODE,delta=2
    53                           	psect	stringtext49,global,class=STRCODE,delta=2
    54                           	psect	stringtext50,global,class=STRCODE,delta=2
    55                           	psect	stringtext51,global,class=STRCODE,delta=2
    56                           	psect	stringtext52,global,class=STRCODE,delta=2
    57                           	psect	stringtext53,global,class=STRCODE,delta=2
    58                           	psect	stringtext54,global,class=STRCODE,delta=2
    59                           	psect	stringtext55,global,class=STRCODE,delta=2
    60                           	psect	stringtext56,global,class=STRCODE,delta=2
    61                           	psect	cinit,global,class=CODE,merge=1,delta=2
    62                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    63                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    64                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    65                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    66                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    67                           	psect	clrtext,global,class=CODE,delta=2
    68                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    69                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    70                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    71                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    72                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    73                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    74                           	psect	text1,local,class=CODE,merge=1,delta=2
    75                           	psect	text2,local,class=CODE,merge=1,delta=2
    76                           	psect	text3,local,class=CODE,merge=1,delta=2
    77                           	psect	text4,local,class=CODE,merge=1,delta=2
    78                           	psect	text5,local,class=CODE,merge=1,delta=2
    79                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    80                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    81                           	psect	text8,local,class=CODE,merge=1,delta=2
    82                           	psect	text9,local,class=CODE,merge=1,delta=2
    83                           	psect	text10,local,class=CODE,merge=1,delta=2
    84                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    85                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    86                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    87                           	psect	text14,local,class=CODE,merge=1,delta=2
    88                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    89                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    90                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    91                           	psect	text18,local,class=CODE,merge=1,delta=2
    92                           	psect	text19,local,class=CODE,merge=1,delta=2
    93                           	psect	text20,local,class=CODE,merge=1,delta=2
    94                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    95                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    96                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    97                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    98                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    99                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
   100                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
   101                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
   102                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
   103                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
   104                           	psect	text31,local,class=CODE,merge=1,delta=2
   105                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
   106                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
   107                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
   108                           	psect	text35,local,class=CODE,merge=1,delta=2
   109                           	psect	text36,local,class=CODE,merge=1,delta=2
   110                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
   111                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
   112                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
   113                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
   114                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
   115                           	psect	text42,local,class=CODE,merge=1,delta=2,group=2
   116                           	psect	text43,local,class=CODE,merge=1,delta=2,group=2
   117                           	psect	text44,local,class=CODE,merge=1,delta=2
   118                           	psect	text45,local,class=CODE,merge=1,delta=2
   119                           	psect	text46,local,class=CODE,merge=1,delta=2
   120                           	psect	text47,local,class=CODE,merge=1,delta=2
   121                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
   122                           	psect	text49,local,class=CODE,merge=1,delta=2
   123                           	psect	text50,local,class=CODE,merge=1,delta=2
   124                           	psect	text51,local,class=CODE,merge=1,delta=2
   125                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
   126                           	psect	text53,local,class=CODE,merge=1,delta=2
   127                           	psect	text54,local,class=CODE,merge=1,delta=2
   128                           	psect	text55,local,class=CODE,merge=1,delta=2
   129                           	psect	text56,local,class=CODE,merge=1,delta=2
   130                           	psect	text57,local,class=CODE,merge=1,delta=2
   131                           	psect	text58,local,class=CODE,merge=1,delta=2
   132                           	psect	text59,local,class=CODE,merge=1,delta=2
   133                           	psect	text60,local,class=CODE,merge=1,delta=2
   134                           	psect	text61,local,class=CODE,merge=1,delta=2
   135                           	psect	text62,local,class=CODE,merge=1,delta=2
   136                           	psect	text63,local,class=CODE,merge=1,delta=2
   137                           	psect	text64,local,class=CODE,merge=1,delta=2
   138                           	psect	text65,local,class=CODE,merge=1,delta=2
   139                           	psect	text66,local,class=CODE,merge=1,delta=2
   140                           	psect	text67,local,class=CODE,merge=1,delta=2
   141                           	psect	text68,local,class=CODE,merge=1,delta=2
   142                           	psect	text69,local,class=CODE,merge=1,delta=2
   143                           	psect	text70,local,class=CODE,merge=1,delta=2
   144                           	psect	text71,local,class=CODE,merge=1,delta=2
   145                           	psect	text72,local,class=CODE,merge=1,delta=2,group=1
   146                           	psect	text73,local,class=CODE,merge=1,delta=2,group=1
   147                           	psect	text74,local,class=CODE,merge=1,delta=2,group=1
   148                           	psect	text75,local,class=CODE,merge=1,delta=2,group=1
   149                           	psect	text76,local,class=CODE,merge=1,delta=2,group=1
   150                           	psect	text77,local,class=CODE,merge=1,delta=2,group=1
   151                           	psect	text78,local,class=CODE,merge=1,delta=2,group=1
   152                           	psect	text79,local,class=CODE,merge=1,delta=2
   153                           	psect	text80,local,class=CODE,merge=1,delta=2
   154                           	psect	text81,local,class=CODE,merge=1,delta=2
   155                           	psect	text82,local,class=CODE,merge=1,delta=2
   156                           	psect	text83,local,class=CODE,merge=1,delta=2
   157                           	psect	text84,local,class=CODE,merge=1,delta=2
   158                           	psect	text85,local,class=CODE,merge=1,delta=2
   159                           	psect	text86,local,class=CODE,merge=1,delta=2
   160                           	psect	text87,local,class=CODE,merge=1,delta=2,group=1
   161                           	psect	intentry,global,class=CODE,delta=2
   162                           	psect	text9_split_1,local,class=CODE,merge=1,delta=2
   163                           	psect	text9_split_2,local,class=CODE,merge=1,delta=2
   164                           	psect	text9_split_3,local,class=CODE,merge=1,delta=2
   165                           	psect	text9_split_4,local,class=CODE,merge=1,delta=2
   166                           	psect	text9_split_5,local,class=CODE,merge=1,delta=2
   167                           	psect	text9_split_6,local,class=CODE,merge=1,delta=2
   168                           	psect	text9_split_7,local,class=CODE,merge=1,delta=2
   169                           	psect	text9_split_8,local,class=CODE,merge=1,delta=2
   170                           	dabs	1,0xCA0,32
   171                           	dabs	1,0xC20,80
   172                           	dabs	1,0xBE1,15
   173                           	dabs	1,0x2771,0,_messageBuffer
   174                           	dabs	1,0x7E,2
   175  0000                     
   176                           ; Version 2.05
   177                           ; Generated 20/12/2018 GMT
   178                           ; 
   179                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   180                           ; All rights reserved.
   181                           ; 
   182                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   183                           ; 
   184                           ; Redistribution and use in source and binary forms, with or without modification, are
   185                           ; permitted provided that the following conditions are met:
   186                           ; 
   187                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   188                           ;        conditions and the following disclaimer.
   189                           ; 
   190                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   191                           ;        of conditions and the following disclaimer in the documentation and/or other
   192                           ;        materials provided with the distribution.
   193                           ; 
   194                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   195                           ;        software without specific prior written permission.
   196                           ; 
   197                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   198                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   199                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   200                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   201                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   202                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   203                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   204                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   205                           ; 
   206                           ; 
   207                           ; Code-generator required, PIC16F1719 Definitions
   208                           ; 
   209                           ; SFR Addresses
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  008C                     	;# 
   240  008D                     	;# 
   241  008E                     	;# 
   242  008F                     	;# 
   243  0090                     	;# 
   244  0091                     	;# 
   245  0092                     	;# 
   246  0093                     	;# 
   247  0095                     	;# 
   248  0096                     	;# 
   249  0097                     	;# 
   250  0098                     	;# 
   251  0099                     	;# 
   252  009A                     	;# 
   253  009B                     	;# 
   254  009B                     	;# 
   255  009C                     	;# 
   256  009D                     	;# 
   257  009E                     	;# 
   258  009F                     	;# 
   259  010C                     	;# 
   260  010D                     	;# 
   261  010E                     	;# 
   262  010F                     	;# 
   263  0110                     	;# 
   264  0111                     	;# 
   265  0112                     	;# 
   266  0113                     	;# 
   267  0114                     	;# 
   268  0115                     	;# 
   269  0116                     	;# 
   270  0117                     	;# 
   271  0118                     	;# 
   272  0119                     	;# 
   273  011A                     	;# 
   274  011B                     	;# 
   275  011B                     	;# 
   276  011C                     	;# 
   277  018C                     	;# 
   278  018D                     	;# 
   279  018E                     	;# 
   280  018F                     	;# 
   281  0190                     	;# 
   282  0191                     	;# 
   283  0191                     	;# 
   284  0192                     	;# 
   285  0193                     	;# 
   286  0193                     	;# 
   287  0194                     	;# 
   288  0195                     	;# 
   289  0196                     	;# 
   290  0197                     	;# 
   291  0199                     	;# 
   292  0199                     	;# 
   293  0199                     	;# 
   294  019A                     	;# 
   295  019A                     	;# 
   296  019A                     	;# 
   297  019B                     	;# 
   298  019B                     	;# 
   299  019B                     	;# 
   300  019B                     	;# 
   301  019B                     	;# 
   302  019C                     	;# 
   303  019C                     	;# 
   304  019C                     	;# 
   305  019D                     	;# 
   306  019D                     	;# 
   307  019D                     	;# 
   308  019E                     	;# 
   309  019E                     	;# 
   310  019E                     	;# 
   311  019F                     	;# 
   312  019F                     	;# 
   313  019F                     	;# 
   314  019F                     	;# 
   315  019F                     	;# 
   316  020C                     	;# 
   317  020D                     	;# 
   318  020E                     	;# 
   319  020F                     	;# 
   320  0210                     	;# 
   321  0211                     	;# 
   322  0211                     	;# 
   323  0212                     	;# 
   324  0212                     	;# 
   325  0213                     	;# 
   326  0213                     	;# 
   327  0214                     	;# 
   328  0214                     	;# 
   329  0215                     	;# 
   330  0215                     	;# 
   331  0215                     	;# 
   332  0215                     	;# 
   333  0216                     	;# 
   334  0216                     	;# 
   335  0217                     	;# 
   336  0217                     	;# 
   337  028C                     	;# 
   338  028D                     	;# 
   339  028E                     	;# 
   340  028F                     	;# 
   341  0290                     	;# 
   342  0291                     	;# 
   343  0291                     	;# 
   344  0292                     	;# 
   345  0293                     	;# 
   346  0293                     	;# 
   347  0298                     	;# 
   348  0298                     	;# 
   349  0299                     	;# 
   350  029A                     	;# 
   351  029A                     	;# 
   352  029E                     	;# 
   353  030C                     	;# 
   354  030D                     	;# 
   355  030E                     	;# 
   356  030F                     	;# 
   357  0310                     	;# 
   358  038C                     	;# 
   359  038D                     	;# 
   360  038E                     	;# 
   361  038F                     	;# 
   362  0390                     	;# 
   363  0391                     	;# 
   364  0392                     	;# 
   365  0393                     	;# 
   366  0394                     	;# 
   367  0395                     	;# 
   368  0396                     	;# 
   369  0397                     	;# 
   370  0398                     	;# 
   371  0399                     	;# 
   372  039D                     	;# 
   373  039E                     	;# 
   374  039F                     	;# 
   375  0415                     	;# 
   376  0416                     	;# 
   377  0417                     	;# 
   378  041C                     	;# 
   379  041D                     	;# 
   380  041E                     	;# 
   381  0498                     	;# 
   382  0498                     	;# 
   383  0499                     	;# 
   384  049A                     	;# 
   385  049B                     	;# 
   386  049B                     	;# 
   387  049C                     	;# 
   388  049D                     	;# 
   389  049E                     	;# 
   390  049F                     	;# 
   391  0511                     	;# 
   392  0515                     	;# 
   393  0617                     	;# 
   394  0618                     	;# 
   395  0619                     	;# 
   396  0619                     	;# 
   397  061A                     	;# 
   398  061B                     	;# 
   399  061C                     	;# 
   400  061C                     	;# 
   401  0691                     	;# 
   402  0692                     	;# 
   403  0693                     	;# 
   404  0694                     	;# 
   405  0695                     	;# 
   406  0696                     	;# 
   407  0697                     	;# 
   408  0698                     	;# 
   409  0699                     	;# 
   410  069A                     	;# 
   411  069B                     	;# 
   412  069C                     	;# 
   413  069D                     	;# 
   414  069E                     	;# 
   415  069F                     	;# 
   416  0E0F                     	;# 
   417  0E10                     	;# 
   418  0E11                     	;# 
   419  0E12                     	;# 
   420  0E13                     	;# 
   421  0E14                     	;# 
   422  0E15                     	;# 
   423  0E17                     	;# 
   424  0E20                     	;# 
   425  0E21                     	;# 
   426  0E22                     	;# 
   427  0E24                     	;# 
   428  0E25                     	;# 
   429  0E28                     	;# 
   430  0E29                     	;# 
   431  0E2A                     	;# 
   432  0E2B                     	;# 
   433  0E90                     	;# 
   434  0E91                     	;# 
   435  0E92                     	;# 
   436  0E93                     	;# 
   437  0E94                     	;# 
   438  0E95                     	;# 
   439  0E96                     	;# 
   440  0E97                     	;# 
   441  0E98                     	;# 
   442  0E99                     	;# 
   443  0E9A                     	;# 
   444  0E9B                     	;# 
   445  0E9C                     	;# 
   446  0E9D                     	;# 
   447  0E9E                     	;# 
   448  0E9F                     	;# 
   449  0EA0                     	;# 
   450  0EA1                     	;# 
   451  0EA2                     	;# 
   452  0EA3                     	;# 
   453  0EA4                     	;# 
   454  0EA5                     	;# 
   455  0EA6                     	;# 
   456  0EA7                     	;# 
   457  0EA8                     	;# 
   458  0EA9                     	;# 
   459  0EAA                     	;# 
   460  0EAB                     	;# 
   461  0EAC                     	;# 
   462  0EAD                     	;# 
   463  0EAE                     	;# 
   464  0EAF                     	;# 
   465  0EB0                     	;# 
   466  0EB1                     	;# 
   467  0EB2                     	;# 
   468  0F0F                     	;# 
   469  0F10                     	;# 
   470  0F11                     	;# 
   471  0F12                     	;# 
   472  0F13                     	;# 
   473  0F14                     	;# 
   474  0F15                     	;# 
   475  0F16                     	;# 
   476  0F17                     	;# 
   477  0F18                     	;# 
   478  0F19                     	;# 
   479  0F1A                     	;# 
   480  0F1B                     	;# 
   481  0F1C                     	;# 
   482  0F1D                     	;# 
   483  0F1E                     	;# 
   484  0F1F                     	;# 
   485  0F20                     	;# 
   486  0F21                     	;# 
   487  0F22                     	;# 
   488  0F23                     	;# 
   489  0F24                     	;# 
   490  0F25                     	;# 
   491  0F26                     	;# 
   492  0F27                     	;# 
   493  0F28                     	;# 
   494  0F29                     	;# 
   495  0F2A                     	;# 
   496  0F2B                     	;# 
   497  0F2C                     	;# 
   498  0F2D                     	;# 
   499  0F2E                     	;# 
   500  0F2F                     	;# 
   501  0F30                     	;# 
   502  0F31                     	;# 
   503  0F32                     	;# 
   504  0F33                     	;# 
   505  0F34                     	;# 
   506  0F35                     	;# 
   507  0F36                     	;# 
   508  0F37                     	;# 
   509  0FE4                     	;# 
   510  0FE5                     	;# 
   511  0FE6                     	;# 
   512  0FE7                     	;# 
   513  0FE8                     	;# 
   514  0FE9                     	;# 
   515  0FEA                     	;# 
   516  0FEB                     	;# 
   517  0FED                     	;# 
   518  0FEE                     	;# 
   519  0FEF                     	;# 
   520  0000                     	;# 
   521  0001                     	;# 
   522  0002                     	;# 
   523  0003                     	;# 
   524  0004                     	;# 
   525  0005                     	;# 
   526  0006                     	;# 
   527  0007                     	;# 
   528  0008                     	;# 
   529  0009                     	;# 
   530  000A                     	;# 
   531  000B                     	;# 
   532  000C                     	;# 
   533  000D                     	;# 
   534  000E                     	;# 
   535  000F                     	;# 
   536  0010                     	;# 
   537  0011                     	;# 
   538  0012                     	;# 
   539  0013                     	;# 
   540  0015                     	;# 
   541  0016                     	;# 
   542  0016                     	;# 
   543  0017                     	;# 
   544  0018                     	;# 
   545  0019                     	;# 
   546  001A                     	;# 
   547  001B                     	;# 
   548  001C                     	;# 
   549  008C                     	;# 
   550  008D                     	;# 
   551  008E                     	;# 
   552  008F                     	;# 
   553  0090                     	;# 
   554  0091                     	;# 
   555  0092                     	;# 
   556  0093                     	;# 
   557  0095                     	;# 
   558  0096                     	;# 
   559  0097                     	;# 
   560  0098                     	;# 
   561  0099                     	;# 
   562  009A                     	;# 
   563  009B                     	;# 
   564  009B                     	;# 
   565  009C                     	;# 
   566  009D                     	;# 
   567  009E                     	;# 
   568  009F                     	;# 
   569  010C                     	;# 
   570  010D                     	;# 
   571  010E                     	;# 
   572  010F                     	;# 
   573  0110                     	;# 
   574  0111                     	;# 
   575  0112                     	;# 
   576  0113                     	;# 
   577  0114                     	;# 
   578  0115                     	;# 
   579  0116                     	;# 
   580  0117                     	;# 
   581  0118                     	;# 
   582  0119                     	;# 
   583  011A                     	;# 
   584  011B                     	;# 
   585  011B                     	;# 
   586  011C                     	;# 
   587  018C                     	;# 
   588  018D                     	;# 
   589  018E                     	;# 
   590  018F                     	;# 
   591  0190                     	;# 
   592  0191                     	;# 
   593  0191                     	;# 
   594  0192                     	;# 
   595  0193                     	;# 
   596  0193                     	;# 
   597  0194                     	;# 
   598  0195                     	;# 
   599  0196                     	;# 
   600  0197                     	;# 
   601  0199                     	;# 
   602  0199                     	;# 
   603  0199                     	;# 
   604  019A                     	;# 
   605  019A                     	;# 
   606  019A                     	;# 
   607  019B                     	;# 
   608  019B                     	;# 
   609  019B                     	;# 
   610  019B                     	;# 
   611  019B                     	;# 
   612  019C                     	;# 
   613  019C                     	;# 
   614  019C                     	;# 
   615  019D                     	;# 
   616  019D                     	;# 
   617  019D                     	;# 
   618  019E                     	;# 
   619  019E                     	;# 
   620  019E                     	;# 
   621  019F                     	;# 
   622  019F                     	;# 
   623  019F                     	;# 
   624  019F                     	;# 
   625  019F                     	;# 
   626  020C                     	;# 
   627  020D                     	;# 
   628  020E                     	;# 
   629  020F                     	;# 
   630  0210                     	;# 
   631  0211                     	;# 
   632  0211                     	;# 
   633  0212                     	;# 
   634  0212                     	;# 
   635  0213                     	;# 
   636  0213                     	;# 
   637  0214                     	;# 
   638  0214                     	;# 
   639  0215                     	;# 
   640  0215                     	;# 
   641  0215                     	;# 
   642  0215                     	;# 
   643  0216                     	;# 
   644  0216                     	;# 
   645  0217                     	;# 
   646  0217                     	;# 
   647  028C                     	;# 
   648  028D                     	;# 
   649  028E                     	;# 
   650  028F                     	;# 
   651  0290                     	;# 
   652  0291                     	;# 
   653  0291                     	;# 
   654  0292                     	;# 
   655  0293                     	;# 
   656  0293                     	;# 
   657  0298                     	;# 
   658  0298                     	;# 
   659  0299                     	;# 
   660  029A                     	;# 
   661  029A                     	;# 
   662  029E                     	;# 
   663  030C                     	;# 
   664  030D                     	;# 
   665  030E                     	;# 
   666  030F                     	;# 
   667  0310                     	;# 
   668  038C                     	;# 
   669  038D                     	;# 
   670  038E                     	;# 
   671  038F                     	;# 
   672  0390                     	;# 
   673  0391                     	;# 
   674  0392                     	;# 
   675  0393                     	;# 
   676  0394                     	;# 
   677  0395                     	;# 
   678  0396                     	;# 
   679  0397                     	;# 
   680  0398                     	;# 
   681  0399                     	;# 
   682  039D                     	;# 
   683  039E                     	;# 
   684  039F                     	;# 
   685  0415                     	;# 
   686  0416                     	;# 
   687  0417                     	;# 
   688  041C                     	;# 
   689  041D                     	;# 
   690  041E                     	;# 
   691  0498                     	;# 
   692  0498                     	;# 
   693  0499                     	;# 
   694  049A                     	;# 
   695  049B                     	;# 
   696  049B                     	;# 
   697  049C                     	;# 
   698  049D                     	;# 
   699  049E                     	;# 
   700  049F                     	;# 
   701  0511                     	;# 
   702  0515                     	;# 
   703  0617                     	;# 
   704  0618                     	;# 
   705  0619                     	;# 
   706  0619                     	;# 
   707  061A                     	;# 
   708  061B                     	;# 
   709  061C                     	;# 
   710  061C                     	;# 
   711  0691                     	;# 
   712  0692                     	;# 
   713  0693                     	;# 
   714  0694                     	;# 
   715  0695                     	;# 
   716  0696                     	;# 
   717  0697                     	;# 
   718  0698                     	;# 
   719  0699                     	;# 
   720  069A                     	;# 
   721  069B                     	;# 
   722  069C                     	;# 
   723  069D                     	;# 
   724  069E                     	;# 
   725  069F                     	;# 
   726  0E0F                     	;# 
   727  0E10                     	;# 
   728  0E11                     	;# 
   729  0E12                     	;# 
   730  0E13                     	;# 
   731  0E14                     	;# 
   732  0E15                     	;# 
   733  0E17                     	;# 
   734  0E20                     	;# 
   735  0E21                     	;# 
   736  0E22                     	;# 
   737  0E24                     	;# 
   738  0E25                     	;# 
   739  0E28                     	;# 
   740  0E29                     	;# 
   741  0E2A                     	;# 
   742  0E2B                     	;# 
   743  0E90                     	;# 
   744  0E91                     	;# 
   745  0E92                     	;# 
   746  0E93                     	;# 
   747  0E94                     	;# 
   748  0E95                     	;# 
   749  0E96                     	;# 
   750  0E97                     	;# 
   751  0E98                     	;# 
   752  0E99                     	;# 
   753  0E9A                     	;# 
   754  0E9B                     	;# 
   755  0E9C                     	;# 
   756  0E9D                     	;# 
   757  0E9E                     	;# 
   758  0E9F                     	;# 
   759  0EA0                     	;# 
   760  0EA1                     	;# 
   761  0EA2                     	;# 
   762  0EA3                     	;# 
   763  0EA4                     	;# 
   764  0EA5                     	;# 
   765  0EA6                     	;# 
   766  0EA7                     	;# 
   767  0EA8                     	;# 
   768  0EA9                     	;# 
   769  0EAA                     	;# 
   770  0EAB                     	;# 
   771  0EAC                     	;# 
   772  0EAD                     	;# 
   773  0EAE                     	;# 
   774  0EAF                     	;# 
   775  0EB0                     	;# 
   776  0EB1                     	;# 
   777  0EB2                     	;# 
   778  0F0F                     	;# 
   779  0F10                     	;# 
   780  0F11                     	;# 
   781  0F12                     	;# 
   782  0F13                     	;# 
   783  0F14                     	;# 
   784  0F15                     	;# 
   785  0F16                     	;# 
   786  0F17                     	;# 
   787  0F18                     	;# 
   788  0F19                     	;# 
   789  0F1A                     	;# 
   790  0F1B                     	;# 
   791  0F1C                     	;# 
   792  0F1D                     	;# 
   793  0F1E                     	;# 
   794  0F1F                     	;# 
   795  0F20                     	;# 
   796  0F21                     	;# 
   797  0F22                     	;# 
   798  0F23                     	;# 
   799  0F24                     	;# 
   800  0F25                     	;# 
   801  0F26                     	;# 
   802  0F27                     	;# 
   803  0F28                     	;# 
   804  0F29                     	;# 
   805  0F2A                     	;# 
   806  0F2B                     	;# 
   807  0F2C                     	;# 
   808  0F2D                     	;# 
   809  0F2E                     	;# 
   810  0F2F                     	;# 
   811  0F30                     	;# 
   812  0F31                     	;# 
   813  0F32                     	;# 
   814  0F33                     	;# 
   815  0F34                     	;# 
   816  0F35                     	;# 
   817  0F36                     	;# 
   818  0F37                     	;# 
   819  0FE4                     	;# 
   820  0FE5                     	;# 
   821  0FE6                     	;# 
   822  0FE7                     	;# 
   823  0FE8                     	;# 
   824  0FE9                     	;# 
   825  0FEA                     	;# 
   826  0FEB                     	;# 
   827  0FED                     	;# 
   828  0FEE                     	;# 
   829  0FEF                     	;# 
   830  0000                     	;# 
   831  0001                     	;# 
   832  0002                     	;# 
   833  0003                     	;# 
   834  0004                     	;# 
   835  0005                     	;# 
   836  0006                     	;# 
   837  0007                     	;# 
   838  0008                     	;# 
   839  0009                     	;# 
   840  000A                     	;# 
   841  000B                     	;# 
   842  000C                     	;# 
   843  000D                     	;# 
   844  000E                     	;# 
   845  000F                     	;# 
   846  0010                     	;# 
   847  0011                     	;# 
   848  0012                     	;# 
   849  0013                     	;# 
   850  0015                     	;# 
   851  0016                     	;# 
   852  0016                     	;# 
   853  0017                     	;# 
   854  0018                     	;# 
   855  0019                     	;# 
   856  001A                     	;# 
   857  001B                     	;# 
   858  001C                     	;# 
   859  008C                     	;# 
   860  008D                     	;# 
   861  008E                     	;# 
   862  008F                     	;# 
   863  0090                     	;# 
   864  0091                     	;# 
   865  0092                     	;# 
   866  0093                     	;# 
   867  0095                     	;# 
   868  0096                     	;# 
   869  0097                     	;# 
   870  0098                     	;# 
   871  0099                     	;# 
   872  009A                     	;# 
   873  009B                     	;# 
   874  009B                     	;# 
   875  009C                     	;# 
   876  009D                     	;# 
   877  009E                     	;# 
   878  009F                     	;# 
   879  010C                     	;# 
   880  010D                     	;# 
   881  010E                     	;# 
   882  010F                     	;# 
   883  0110                     	;# 
   884  0111                     	;# 
   885  0112                     	;# 
   886  0113                     	;# 
   887  0114                     	;# 
   888  0115                     	;# 
   889  0116                     	;# 
   890  0117                     	;# 
   891  0118                     	;# 
   892  0119                     	;# 
   893  011A                     	;# 
   894  011B                     	;# 
   895  011B                     	;# 
   896  011C                     	;# 
   897  018C                     	;# 
   898  018D                     	;# 
   899  018E                     	;# 
   900  018F                     	;# 
   901  0190                     	;# 
   902  0191                     	;# 
   903  0191                     	;# 
   904  0192                     	;# 
   905  0193                     	;# 
   906  0193                     	;# 
   907  0194                     	;# 
   908  0195                     	;# 
   909  0196                     	;# 
   910  0197                     	;# 
   911  0199                     	;# 
   912  0199                     	;# 
   913  0199                     	;# 
   914  019A                     	;# 
   915  019A                     	;# 
   916  019A                     	;# 
   917  019B                     	;# 
   918  019B                     	;# 
   919  019B                     	;# 
   920  019B                     	;# 
   921  019B                     	;# 
   922  019C                     	;# 
   923  019C                     	;# 
   924  019C                     	;# 
   925  019D                     	;# 
   926  019D                     	;# 
   927  019D                     	;# 
   928  019E                     	;# 
   929  019E                     	;# 
   930  019E                     	;# 
   931  019F                     	;# 
   932  019F                     	;# 
   933  019F                     	;# 
   934  019F                     	;# 
   935  019F                     	;# 
   936  020C                     	;# 
   937  020D                     	;# 
   938  020E                     	;# 
   939  020F                     	;# 
   940  0210                     	;# 
   941  0211                     	;# 
   942  0211                     	;# 
   943  0212                     	;# 
   944  0212                     	;# 
   945  0213                     	;# 
   946  0213                     	;# 
   947  0214                     	;# 
   948  0214                     	;# 
   949  0215                     	;# 
   950  0215                     	;# 
   951  0215                     	;# 
   952  0215                     	;# 
   953  0216                     	;# 
   954  0216                     	;# 
   955  0217                     	;# 
   956  0217                     	;# 
   957  028C                     	;# 
   958  028D                     	;# 
   959  028E                     	;# 
   960  028F                     	;# 
   961  0290                     	;# 
   962  0291                     	;# 
   963  0291                     	;# 
   964  0292                     	;# 
   965  0293                     	;# 
   966  0293                     	;# 
   967  0298                     	;# 
   968  0298                     	;# 
   969  0299                     	;# 
   970  029A                     	;# 
   971  029A                     	;# 
   972  029E                     	;# 
   973  030C                     	;# 
   974  030D                     	;# 
   975  030E                     	;# 
   976  030F                     	;# 
   977  0310                     	;# 
   978  038C                     	;# 
   979  038D                     	;# 
   980  038E                     	;# 
   981  038F                     	;# 
   982  0390                     	;# 
   983  0391                     	;# 
   984  0392                     	;# 
   985  0393                     	;# 
   986  0394                     	;# 
   987  0395                     	;# 
   988  0396                     	;# 
   989  0397                     	;# 
   990  0398                     	;# 
   991  0399                     	;# 
   992  039D                     	;# 
   993  039E                     	;# 
   994  039F                     	;# 
   995  0415                     	;# 
   996  0416                     	;# 
   997  0417                     	;# 
   998  041C                     	;# 
   999  041D                     	;# 
  1000  041E                     	;# 
  1001  0498                     	;# 
  1002  0498                     	;# 
  1003  0499                     	;# 
  1004  049A                     	;# 
  1005  049B                     	;# 
  1006  049B                     	;# 
  1007  049C                     	;# 
  1008  049D                     	;# 
  1009  049E                     	;# 
  1010  049F                     	;# 
  1011  0511                     	;# 
  1012  0515                     	;# 
  1013  0617                     	;# 
  1014  0618                     	;# 
  1015  0619                     	;# 
  1016  0619                     	;# 
  1017  061A                     	;# 
  1018  061B                     	;# 
  1019  061C                     	;# 
  1020  061C                     	;# 
  1021  0691                     	;# 
  1022  0692                     	;# 
  1023  0693                     	;# 
  1024  0694                     	;# 
  1025  0695                     	;# 
  1026  0696                     	;# 
  1027  0697                     	;# 
  1028  0698                     	;# 
  1029  0699                     	;# 
  1030  069A                     	;# 
  1031  069B                     	;# 
  1032  069C                     	;# 
  1033  069D                     	;# 
  1034  069E                     	;# 
  1035  069F                     	;# 
  1036  0E0F                     	;# 
  1037  0E10                     	;# 
  1038  0E11                     	;# 
  1039  0E12                     	;# 
  1040  0E13                     	;# 
  1041  0E14                     	;# 
  1042  0E15                     	;# 
  1043  0E17                     	;# 
  1044  0E20                     	;# 
  1045  0E21                     	;# 
  1046  0E22                     	;# 
  1047  0E24                     	;# 
  1048  0E25                     	;# 
  1049  0E28                     	;# 
  1050  0E29                     	;# 
  1051  0E2A                     	;# 
  1052  0E2B                     	;# 
  1053  0E90                     	;# 
  1054  0E91                     	;# 
  1055  0E92                     	;# 
  1056  0E93                     	;# 
  1057  0E94                     	;# 
  1058  0E95                     	;# 
  1059  0E96                     	;# 
  1060  0E97                     	;# 
  1061  0E98                     	;# 
  1062  0E99                     	;# 
  1063  0E9A                     	;# 
  1064  0E9B                     	;# 
  1065  0E9C                     	;# 
  1066  0E9D                     	;# 
  1067  0E9E                     	;# 
  1068  0E9F                     	;# 
  1069  0EA0                     	;# 
  1070  0EA1                     	;# 
  1071  0EA2                     	;# 
  1072  0EA3                     	;# 
  1073  0EA4                     	;# 
  1074  0EA5                     	;# 
  1075  0EA6                     	;# 
  1076  0EA7                     	;# 
  1077  0EA8                     	;# 
  1078  0EA9                     	;# 
  1079  0EAA                     	;# 
  1080  0EAB                     	;# 
  1081  0EAC                     	;# 
  1082  0EAD                     	;# 
  1083  0EAE                     	;# 
  1084  0EAF                     	;# 
  1085  0EB0                     	;# 
  1086  0EB1                     	;# 
  1087  0EB2                     	;# 
  1088  0F0F                     	;# 
  1089  0F10                     	;# 
  1090  0F11                     	;# 
  1091  0F12                     	;# 
  1092  0F13                     	;# 
  1093  0F14                     	;# 
  1094  0F15                     	;# 
  1095  0F16                     	;# 
  1096  0F17                     	;# 
  1097  0F18                     	;# 
  1098  0F19                     	;# 
  1099  0F1A                     	;# 
  1100  0F1B                     	;# 
  1101  0F1C                     	;# 
  1102  0F1D                     	;# 
  1103  0F1E                     	;# 
  1104  0F1F                     	;# 
  1105  0F20                     	;# 
  1106  0F21                     	;# 
  1107  0F22                     	;# 
  1108  0F23                     	;# 
  1109  0F24                     	;# 
  1110  0F25                     	;# 
  1111  0F26                     	;# 
  1112  0F27                     	;# 
  1113  0F28                     	;# 
  1114  0F29                     	;# 
  1115  0F2A                     	;# 
  1116  0F2B                     	;# 
  1117  0F2C                     	;# 
  1118  0F2D                     	;# 
  1119  0F2E                     	;# 
  1120  0F2F                     	;# 
  1121  0F30                     	;# 
  1122  0F31                     	;# 
  1123  0F32                     	;# 
  1124  0F33                     	;# 
  1125  0F34                     	;# 
  1126  0F35                     	;# 
  1127  0F36                     	;# 
  1128  0F37                     	;# 
  1129  0FE4                     	;# 
  1130  0FE5                     	;# 
  1131  0FE6                     	;# 
  1132  0FE7                     	;# 
  1133  0FE8                     	;# 
  1134  0FE9                     	;# 
  1135  0FEA                     	;# 
  1136  0FEB                     	;# 
  1137  0FED                     	;# 
  1138  0FEE                     	;# 
  1139  0FEF                     	;# 
  1140  0000                     	;# 
  1141  0001                     	;# 
  1142  0002                     	;# 
  1143  0003                     	;# 
  1144  0004                     	;# 
  1145  0005                     	;# 
  1146  0006                     	;# 
  1147  0007                     	;# 
  1148  0008                     	;# 
  1149  0009                     	;# 
  1150  000A                     	;# 
  1151  000B                     	;# 
  1152  000C                     	;# 
  1153  000D                     	;# 
  1154  000E                     	;# 
  1155  000F                     	;# 
  1156  0010                     	;# 
  1157  0011                     	;# 
  1158  0012                     	;# 
  1159  0013                     	;# 
  1160  0015                     	;# 
  1161  0016                     	;# 
  1162  0016                     	;# 
  1163  0017                     	;# 
  1164  0018                     	;# 
  1165  0019                     	;# 
  1166  001A                     	;# 
  1167  001B                     	;# 
  1168  001C                     	;# 
  1169  008C                     	;# 
  1170  008D                     	;# 
  1171  008E                     	;# 
  1172  008F                     	;# 
  1173  0090                     	;# 
  1174  0091                     	;# 
  1175  0092                     	;# 
  1176  0093                     	;# 
  1177  0095                     	;# 
  1178  0096                     	;# 
  1179  0097                     	;# 
  1180  0098                     	;# 
  1181  0099                     	;# 
  1182  009A                     	;# 
  1183  009B                     	;# 
  1184  009B                     	;# 
  1185  009C                     	;# 
  1186  009D                     	;# 
  1187  009E                     	;# 
  1188  009F                     	;# 
  1189  010C                     	;# 
  1190  010D                     	;# 
  1191  010E                     	;# 
  1192  010F                     	;# 
  1193  0110                     	;# 
  1194  0111                     	;# 
  1195  0112                     	;# 
  1196  0113                     	;# 
  1197  0114                     	;# 
  1198  0115                     	;# 
  1199  0116                     	;# 
  1200  0117                     	;# 
  1201  0118                     	;# 
  1202  0119                     	;# 
  1203  011A                     	;# 
  1204  011B                     	;# 
  1205  011B                     	;# 
  1206  011C                     	;# 
  1207  018C                     	;# 
  1208  018D                     	;# 
  1209  018E                     	;# 
  1210  018F                     	;# 
  1211  0190                     	;# 
  1212  0191                     	;# 
  1213  0191                     	;# 
  1214  0192                     	;# 
  1215  0193                     	;# 
  1216  0193                     	;# 
  1217  0194                     	;# 
  1218  0195                     	;# 
  1219  0196                     	;# 
  1220  0197                     	;# 
  1221  0199                     	;# 
  1222  0199                     	;# 
  1223  0199                     	;# 
  1224  019A                     	;# 
  1225  019A                     	;# 
  1226  019A                     	;# 
  1227  019B                     	;# 
  1228  019B                     	;# 
  1229  019B                     	;# 
  1230  019B                     	;# 
  1231  019B                     	;# 
  1232  019C                     	;# 
  1233  019C                     	;# 
  1234  019C                     	;# 
  1235  019D                     	;# 
  1236  019D                     	;# 
  1237  019D                     	;# 
  1238  019E                     	;# 
  1239  019E                     	;# 
  1240  019E                     	;# 
  1241  019F                     	;# 
  1242  019F                     	;# 
  1243  019F                     	;# 
  1244  019F                     	;# 
  1245  019F                     	;# 
  1246  020C                     	;# 
  1247  020D                     	;# 
  1248  020E                     	;# 
  1249  020F                     	;# 
  1250  0210                     	;# 
  1251  0211                     	;# 
  1252  0211                     	;# 
  1253  0212                     	;# 
  1254  0212                     	;# 
  1255  0213                     	;# 
  1256  0213                     	;# 
  1257  0214                     	;# 
  1258  0214                     	;# 
  1259  0215                     	;# 
  1260  0215                     	;# 
  1261  0215                     	;# 
  1262  0215                     	;# 
  1263  0216                     	;# 
  1264  0216                     	;# 
  1265  0217                     	;# 
  1266  0217                     	;# 
  1267  028C                     	;# 
  1268  028D                     	;# 
  1269  028E                     	;# 
  1270  028F                     	;# 
  1271  0290                     	;# 
  1272  0291                     	;# 
  1273  0291                     	;# 
  1274  0292                     	;# 
  1275  0293                     	;# 
  1276  0293                     	;# 
  1277  0298                     	;# 
  1278  0298                     	;# 
  1279  0299                     	;# 
  1280  029A                     	;# 
  1281  029A                     	;# 
  1282  029E                     	;# 
  1283  030C                     	;# 
  1284  030D                     	;# 
  1285  030E                     	;# 
  1286  030F                     	;# 
  1287  0310                     	;# 
  1288  038C                     	;# 
  1289  038D                     	;# 
  1290  038E                     	;# 
  1291  038F                     	;# 
  1292  0390                     	;# 
  1293  0391                     	;# 
  1294  0392                     	;# 
  1295  0393                     	;# 
  1296  0394                     	;# 
  1297  0395                     	;# 
  1298  0396                     	;# 
  1299  0397                     	;# 
  1300  0398                     	;# 
  1301  0399                     	;# 
  1302  039D                     	;# 
  1303  039E                     	;# 
  1304  039F                     	;# 
  1305  0415                     	;# 
  1306  0416                     	;# 
  1307  0417                     	;# 
  1308  041C                     	;# 
  1309  041D                     	;# 
  1310  041E                     	;# 
  1311  0498                     	;# 
  1312  0498                     	;# 
  1313  0499                     	;# 
  1314  049A                     	;# 
  1315  049B                     	;# 
  1316  049B                     	;# 
  1317  049C                     	;# 
  1318  049D                     	;# 
  1319  049E                     	;# 
  1320  049F                     	;# 
  1321  0511                     	;# 
  1322  0515                     	;# 
  1323  0617                     	;# 
  1324  0618                     	;# 
  1325  0619                     	;# 
  1326  0619                     	;# 
  1327  061A                     	;# 
  1328  061B                     	;# 
  1329  061C                     	;# 
  1330  061C                     	;# 
  1331  0691                     	;# 
  1332  0692                     	;# 
  1333  0693                     	;# 
  1334  0694                     	;# 
  1335  0695                     	;# 
  1336  0696                     	;# 
  1337  0697                     	;# 
  1338  0698                     	;# 
  1339  0699                     	;# 
  1340  069A                     	;# 
  1341  069B                     	;# 
  1342  069C                     	;# 
  1343  069D                     	;# 
  1344  069E                     	;# 
  1345  069F                     	;# 
  1346  0E0F                     	;# 
  1347  0E10                     	;# 
  1348  0E11                     	;# 
  1349  0E12                     	;# 
  1350  0E13                     	;# 
  1351  0E14                     	;# 
  1352  0E15                     	;# 
  1353  0E17                     	;# 
  1354  0E20                     	;# 
  1355  0E21                     	;# 
  1356  0E22                     	;# 
  1357  0E24                     	;# 
  1358  0E25                     	;# 
  1359  0E28                     	;# 
  1360  0E29                     	;# 
  1361  0E2A                     	;# 
  1362  0E2B                     	;# 
  1363  0E90                     	;# 
  1364  0E91                     	;# 
  1365  0E92                     	;# 
  1366  0E93                     	;# 
  1367  0E94                     	;# 
  1368  0E95                     	;# 
  1369  0E96                     	;# 
  1370  0E97                     	;# 
  1371  0E98                     	;# 
  1372  0E99                     	;# 
  1373  0E9A                     	;# 
  1374  0E9B                     	;# 
  1375  0E9C                     	;# 
  1376  0E9D                     	;# 
  1377  0E9E                     	;# 
  1378  0E9F                     	;# 
  1379  0EA0                     	;# 
  1380  0EA1                     	;# 
  1381  0EA2                     	;# 
  1382  0EA3                     	;# 
  1383  0EA4                     	;# 
  1384  0EA5                     	;# 
  1385  0EA6                     	;# 
  1386  0EA7                     	;# 
  1387  0EA8                     	;# 
  1388  0EA9                     	;# 
  1389  0EAA                     	;# 
  1390  0EAB                     	;# 
  1391  0EAC                     	;# 
  1392  0EAD                     	;# 
  1393  0EAE                     	;# 
  1394  0EAF                     	;# 
  1395  0EB0                     	;# 
  1396  0EB1                     	;# 
  1397  0EB2                     	;# 
  1398  0F0F                     	;# 
  1399  0F10                     	;# 
  1400  0F11                     	;# 
  1401  0F12                     	;# 
  1402  0F13                     	;# 
  1403  0F14                     	;# 
  1404  0F15                     	;# 
  1405  0F16                     	;# 
  1406  0F17                     	;# 
  1407  0F18                     	;# 
  1408  0F19                     	;# 
  1409  0F1A                     	;# 
  1410  0F1B                     	;# 
  1411  0F1C                     	;# 
  1412  0F1D                     	;# 
  1413  0F1E                     	;# 
  1414  0F1F                     	;# 
  1415  0F20                     	;# 
  1416  0F21                     	;# 
  1417  0F22                     	;# 
  1418  0F23                     	;# 
  1419  0F24                     	;# 
  1420  0F25                     	;# 
  1421  0F26                     	;# 
  1422  0F27                     	;# 
  1423  0F28                     	;# 
  1424  0F29                     	;# 
  1425  0F2A                     	;# 
  1426  0F2B                     	;# 
  1427  0F2C                     	;# 
  1428  0F2D                     	;# 
  1429  0F2E                     	;# 
  1430  0F2F                     	;# 
  1431  0F30                     	;# 
  1432  0F31                     	;# 
  1433  0F32                     	;# 
  1434  0F33                     	;# 
  1435  0F34                     	;# 
  1436  0F35                     	;# 
  1437  0F36                     	;# 
  1438  0F37                     	;# 
  1439  0FE4                     	;# 
  1440  0FE5                     	;# 
  1441  0FE6                     	;# 
  1442  0FE7                     	;# 
  1443  0FE8                     	;# 
  1444  0FE9                     	;# 
  1445  0FEA                     	;# 
  1446  0FEB                     	;# 
  1447  0FED                     	;# 
  1448  0FEE                     	;# 
  1449  0FEF                     	;# 
  1450  0000                     	;# 
  1451  0001                     	;# 
  1452  0002                     	;# 
  1453  0003                     	;# 
  1454  0004                     	;# 
  1455  0005                     	;# 
  1456  0006                     	;# 
  1457  0007                     	;# 
  1458  0008                     	;# 
  1459  0009                     	;# 
  1460  000A                     	;# 
  1461  000B                     	;# 
  1462  000C                     	;# 
  1463  000D                     	;# 
  1464  000E                     	;# 
  1465  000F                     	;# 
  1466  0010                     	;# 
  1467  0011                     	;# 
  1468  0012                     	;# 
  1469  0013                     	;# 
  1470  0015                     	;# 
  1471  0016                     	;# 
  1472  0016                     	;# 
  1473  0017                     	;# 
  1474  0018                     	;# 
  1475  0019                     	;# 
  1476  001A                     	;# 
  1477  001B                     	;# 
  1478  001C                     	;# 
  1479  008C                     	;# 
  1480  008D                     	;# 
  1481  008E                     	;# 
  1482  008F                     	;# 
  1483  0090                     	;# 
  1484  0091                     	;# 
  1485  0092                     	;# 
  1486  0093                     	;# 
  1487  0095                     	;# 
  1488  0096                     	;# 
  1489  0097                     	;# 
  1490  0098                     	;# 
  1491  0099                     	;# 
  1492  009A                     	;# 
  1493  009B                     	;# 
  1494  009B                     	;# 
  1495  009C                     	;# 
  1496  009D                     	;# 
  1497  009E                     	;# 
  1498  009F                     	;# 
  1499  010C                     	;# 
  1500  010D                     	;# 
  1501  010E                     	;# 
  1502  010F                     	;# 
  1503  0110                     	;# 
  1504  0111                     	;# 
  1505  0112                     	;# 
  1506  0113                     	;# 
  1507  0114                     	;# 
  1508  0115                     	;# 
  1509  0116                     	;# 
  1510  0117                     	;# 
  1511  0118                     	;# 
  1512  0119                     	;# 
  1513  011A                     	;# 
  1514  011B                     	;# 
  1515  011B                     	;# 
  1516  011C                     	;# 
  1517  018C                     	;# 
  1518  018D                     	;# 
  1519  018E                     	;# 
  1520  018F                     	;# 
  1521  0190                     	;# 
  1522  0191                     	;# 
  1523  0191                     	;# 
  1524  0192                     	;# 
  1525  0193                     	;# 
  1526  0193                     	;# 
  1527  0194                     	;# 
  1528  0195                     	;# 
  1529  0196                     	;# 
  1530  0197                     	;# 
  1531  0199                     	;# 
  1532  0199                     	;# 
  1533  0199                     	;# 
  1534  019A                     	;# 
  1535  019A                     	;# 
  1536  019A                     	;# 
  1537  019B                     	;# 
  1538  019B                     	;# 
  1539  019B                     	;# 
  1540  019B                     	;# 
  1541  019B                     	;# 
  1542  019C                     	;# 
  1543  019C                     	;# 
  1544  019C                     	;# 
  1545  019D                     	;# 
  1546  019D                     	;# 
  1547  019D                     	;# 
  1548  019E                     	;# 
  1549  019E                     	;# 
  1550  019E                     	;# 
  1551  019F                     	;# 
  1552  019F                     	;# 
  1553  019F                     	;# 
  1554  019F                     	;# 
  1555  019F                     	;# 
  1556  020C                     	;# 
  1557  020D                     	;# 
  1558  020E                     	;# 
  1559  020F                     	;# 
  1560  0210                     	;# 
  1561  0211                     	;# 
  1562  0211                     	;# 
  1563  0212                     	;# 
  1564  0212                     	;# 
  1565  0213                     	;# 
  1566  0213                     	;# 
  1567  0214                     	;# 
  1568  0214                     	;# 
  1569  0215                     	;# 
  1570  0215                     	;# 
  1571  0215                     	;# 
  1572  0215                     	;# 
  1573  0216                     	;# 
  1574  0216                     	;# 
  1575  0217                     	;# 
  1576  0217                     	;# 
  1577  028C                     	;# 
  1578  028D                     	;# 
  1579  028E                     	;# 
  1580  028F                     	;# 
  1581  0290                     	;# 
  1582  0291                     	;# 
  1583  0291                     	;# 
  1584  0292                     	;# 
  1585  0293                     	;# 
  1586  0293                     	;# 
  1587  0298                     	;# 
  1588  0298                     	;# 
  1589  0299                     	;# 
  1590  029A                     	;# 
  1591  029A                     	;# 
  1592  029E                     	;# 
  1593  030C                     	;# 
  1594  030D                     	;# 
  1595  030E                     	;# 
  1596  030F                     	;# 
  1597  0310                     	;# 
  1598  038C                     	;# 
  1599  038D                     	;# 
  1600  038E                     	;# 
  1601  038F                     	;# 
  1602  0390                     	;# 
  1603  0391                     	;# 
  1604  0392                     	;# 
  1605  0393                     	;# 
  1606  0394                     	;# 
  1607  0395                     	;# 
  1608  0396                     	;# 
  1609  0397                     	;# 
  1610  0398                     	;# 
  1611  0399                     	;# 
  1612  039D                     	;# 
  1613  039E                     	;# 
  1614  039F                     	;# 
  1615  0415                     	;# 
  1616  0416                     	;# 
  1617  0417                     	;# 
  1618  041C                     	;# 
  1619  041D                     	;# 
  1620  041E                     	;# 
  1621  0498                     	;# 
  1622  0498                     	;# 
  1623  0499                     	;# 
  1624  049A                     	;# 
  1625  049B                     	;# 
  1626  049B                     	;# 
  1627  049C                     	;# 
  1628  049D                     	;# 
  1629  049E                     	;# 
  1630  049F                     	;# 
  1631  0511                     	;# 
  1632  0515                     	;# 
  1633  0617                     	;# 
  1634  0618                     	;# 
  1635  0619                     	;# 
  1636  0619                     	;# 
  1637  061A                     	;# 
  1638  061B                     	;# 
  1639  061C                     	;# 
  1640  061C                     	;# 
  1641  0691                     	;# 
  1642  0692                     	;# 
  1643  0693                     	;# 
  1644  0694                     	;# 
  1645  0695                     	;# 
  1646  0696                     	;# 
  1647  0697                     	;# 
  1648  0698                     	;# 
  1649  0699                     	;# 
  1650  069A                     	;# 
  1651  069B                     	;# 
  1652  069C                     	;# 
  1653  069D                     	;# 
  1654  069E                     	;# 
  1655  069F                     	;# 
  1656  0E0F                     	;# 
  1657  0E10                     	;# 
  1658  0E11                     	;# 
  1659  0E12                     	;# 
  1660  0E13                     	;# 
  1661  0E14                     	;# 
  1662  0E15                     	;# 
  1663  0E17                     	;# 
  1664  0E20                     	;# 
  1665  0E21                     	;# 
  1666  0E22                     	;# 
  1667  0E24                     	;# 
  1668  0E25                     	;# 
  1669  0E28                     	;# 
  1670  0E29                     	;# 
  1671  0E2A                     	;# 
  1672  0E2B                     	;# 
  1673  0E90                     	;# 
  1674  0E91                     	;# 
  1675  0E92                     	;# 
  1676  0E93                     	;# 
  1677  0E94                     	;# 
  1678  0E95                     	;# 
  1679  0E96                     	;# 
  1680  0E97                     	;# 
  1681  0E98                     	;# 
  1682  0E99                     	;# 
  1683  0E9A                     	;# 
  1684  0E9B                     	;# 
  1685  0E9C                     	;# 
  1686  0E9D                     	;# 
  1687  0E9E                     	;# 
  1688  0E9F                     	;# 
  1689  0EA0                     	;# 
  1690  0EA1                     	;# 
  1691  0EA2                     	;# 
  1692  0EA3                     	;# 
  1693  0EA4                     	;# 
  1694  0EA5                     	;# 
  1695  0EA6                     	;# 
  1696  0EA7                     	;# 
  1697  0EA8                     	;# 
  1698  0EA9                     	;# 
  1699  0EAA                     	;# 
  1700  0EAB                     	;# 
  1701  0EAC                     	;# 
  1702  0EAD                     	;# 
  1703  0EAE                     	;# 
  1704  0EAF                     	;# 
  1705  0EB0                     	;# 
  1706  0EB1                     	;# 
  1707  0EB2                     	;# 
  1708  0F0F                     	;# 
  1709  0F10                     	;# 
  1710  0F11                     	;# 
  1711  0F12                     	;# 
  1712  0F13                     	;# 
  1713  0F14                     	;# 
  1714  0F15                     	;# 
  1715  0F16                     	;# 
  1716  0F17                     	;# 
  1717  0F18                     	;# 
  1718  0F19                     	;# 
  1719  0F1A                     	;# 
  1720  0F1B                     	;# 
  1721  0F1C                     	;# 
  1722  0F1D                     	;# 
  1723  0F1E                     	;# 
  1724  0F1F                     	;# 
  1725  0F20                     	;# 
  1726  0F21                     	;# 
  1727  0F22                     	;# 
  1728  0F23                     	;# 
  1729  0F24                     	;# 
  1730  0F25                     	;# 
  1731  0F26                     	;# 
  1732  0F27                     	;# 
  1733  0F28                     	;# 
  1734  0F29                     	;# 
  1735  0F2A                     	;# 
  1736  0F2B                     	;# 
  1737  0F2C                     	;# 
  1738  0F2D                     	;# 
  1739  0F2E                     	;# 
  1740  0F2F                     	;# 
  1741  0F30                     	;# 
  1742  0F31                     	;# 
  1743  0F32                     	;# 
  1744  0F33                     	;# 
  1745  0F34                     	;# 
  1746  0F35                     	;# 
  1747  0F36                     	;# 
  1748  0F37                     	;# 
  1749  0FE4                     	;# 
  1750  0FE5                     	;# 
  1751  0FE6                     	;# 
  1752  0FE7                     	;# 
  1753  0FE8                     	;# 
  1754  0FE9                     	;# 
  1755  0FEA                     	;# 
  1756  0FEB                     	;# 
  1757  0FED                     	;# 
  1758  0FEE                     	;# 
  1759  0FEF                     	;# 
  1760  0000                     	;# 
  1761  0001                     	;# 
  1762  0002                     	;# 
  1763  0003                     	;# 
  1764  0004                     	;# 
  1765  0005                     	;# 
  1766  0006                     	;# 
  1767  0007                     	;# 
  1768  0008                     	;# 
  1769  0009                     	;# 
  1770  000A                     	;# 
  1771  000B                     	;# 
  1772  000C                     	;# 
  1773  000D                     	;# 
  1774  000E                     	;# 
  1775  000F                     	;# 
  1776  0010                     	;# 
  1777  0011                     	;# 
  1778  0012                     	;# 
  1779  0013                     	;# 
  1780  0015                     	;# 
  1781  0016                     	;# 
  1782  0016                     	;# 
  1783  0017                     	;# 
  1784  0018                     	;# 
  1785  0019                     	;# 
  1786  001A                     	;# 
  1787  001B                     	;# 
  1788  001C                     	;# 
  1789  008C                     	;# 
  1790  008D                     	;# 
  1791  008E                     	;# 
  1792  008F                     	;# 
  1793  0090                     	;# 
  1794  0091                     	;# 
  1795  0092                     	;# 
  1796  0093                     	;# 
  1797  0095                     	;# 
  1798  0096                     	;# 
  1799  0097                     	;# 
  1800  0098                     	;# 
  1801  0099                     	;# 
  1802  009A                     	;# 
  1803  009B                     	;# 
  1804  009B                     	;# 
  1805  009C                     	;# 
  1806  009D                     	;# 
  1807  009E                     	;# 
  1808  009F                     	;# 
  1809  010C                     	;# 
  1810  010D                     	;# 
  1811  010E                     	;# 
  1812  010F                     	;# 
  1813  0110                     	;# 
  1814  0111                     	;# 
  1815  0112                     	;# 
  1816  0113                     	;# 
  1817  0114                     	;# 
  1818  0115                     	;# 
  1819  0116                     	;# 
  1820  0117                     	;# 
  1821  0118                     	;# 
  1822  0119                     	;# 
  1823  011A                     	;# 
  1824  011B                     	;# 
  1825  011B                     	;# 
  1826  011C                     	;# 
  1827  018C                     	;# 
  1828  018D                     	;# 
  1829  018E                     	;# 
  1830  018F                     	;# 
  1831  0190                     	;# 
  1832  0191                     	;# 
  1833  0191                     	;# 
  1834  0192                     	;# 
  1835  0193                     	;# 
  1836  0193                     	;# 
  1837  0194                     	;# 
  1838  0195                     	;# 
  1839  0196                     	;# 
  1840  0197                     	;# 
  1841  0199                     	;# 
  1842  0199                     	;# 
  1843  0199                     	;# 
  1844  019A                     	;# 
  1845  019A                     	;# 
  1846  019A                     	;# 
  1847  019B                     	;# 
  1848  019B                     	;# 
  1849  019B                     	;# 
  1850  019B                     	;# 
  1851  019B                     	;# 
  1852  019C                     	;# 
  1853  019C                     	;# 
  1854  019C                     	;# 
  1855  019D                     	;# 
  1856  019D                     	;# 
  1857  019D                     	;# 
  1858  019E                     	;# 
  1859  019E                     	;# 
  1860  019E                     	;# 
  1861  019F                     	;# 
  1862  019F                     	;# 
  1863  019F                     	;# 
  1864  019F                     	;# 
  1865  019F                     	;# 
  1866  020C                     	;# 
  1867  020D                     	;# 
  1868  020E                     	;# 
  1869  020F                     	;# 
  1870  0210                     	;# 
  1871  0211                     	;# 
  1872  0211                     	;# 
  1873  0212                     	;# 
  1874  0212                     	;# 
  1875  0213                     	;# 
  1876  0213                     	;# 
  1877  0214                     	;# 
  1878  0214                     	;# 
  1879  0215                     	;# 
  1880  0215                     	;# 
  1881  0215                     	;# 
  1882  0215                     	;# 
  1883  0216                     	;# 
  1884  0216                     	;# 
  1885  0217                     	;# 
  1886  0217                     	;# 
  1887  028C                     	;# 
  1888  028D                     	;# 
  1889  028E                     	;# 
  1890  028F                     	;# 
  1891  0290                     	;# 
  1892  0291                     	;# 
  1893  0291                     	;# 
  1894  0292                     	;# 
  1895  0293                     	;# 
  1896  0293                     	;# 
  1897  0298                     	;# 
  1898  0298                     	;# 
  1899  0299                     	;# 
  1900  029A                     	;# 
  1901  029A                     	;# 
  1902  029E                     	;# 
  1903  030C                     	;# 
  1904  030D                     	;# 
  1905  030E                     	;# 
  1906  030F                     	;# 
  1907  0310                     	;# 
  1908  038C                     	;# 
  1909  038D                     	;# 
  1910  038E                     	;# 
  1911  038F                     	;# 
  1912  0390                     	;# 
  1913  0391                     	;# 
  1914  0392                     	;# 
  1915  0393                     	;# 
  1916  0394                     	;# 
  1917  0395                     	;# 
  1918  0396                     	;# 
  1919  0397                     	;# 
  1920  0398                     	;# 
  1921  0399                     	;# 
  1922  039D                     	;# 
  1923  039E                     	;# 
  1924  039F                     	;# 
  1925  0415                     	;# 
  1926  0416                     	;# 
  1927  0417                     	;# 
  1928  041C                     	;# 
  1929  041D                     	;# 
  1930  041E                     	;# 
  1931  0498                     	;# 
  1932  0498                     	;# 
  1933  0499                     	;# 
  1934  049A                     	;# 
  1935  049B                     	;# 
  1936  049B                     	;# 
  1937  049C                     	;# 
  1938  049D                     	;# 
  1939  049E                     	;# 
  1940  049F                     	;# 
  1941  0511                     	;# 
  1942  0515                     	;# 
  1943  0617                     	;# 
  1944  0618                     	;# 
  1945  0619                     	;# 
  1946  0619                     	;# 
  1947  061A                     	;# 
  1948  061B                     	;# 
  1949  061C                     	;# 
  1950  061C                     	;# 
  1951  0691                     	;# 
  1952  0692                     	;# 
  1953  0693                     	;# 
  1954  0694                     	;# 
  1955  0695                     	;# 
  1956  0696                     	;# 
  1957  0697                     	;# 
  1958  0698                     	;# 
  1959  0699                     	;# 
  1960  069A                     	;# 
  1961  069B                     	;# 
  1962  069C                     	;# 
  1963  069D                     	;# 
  1964  069E                     	;# 
  1965  069F                     	;# 
  1966  0E0F                     	;# 
  1967  0E10                     	;# 
  1968  0E11                     	;# 
  1969  0E12                     	;# 
  1970  0E13                     	;# 
  1971  0E14                     	;# 
  1972  0E15                     	;# 
  1973  0E17                     	;# 
  1974  0E20                     	;# 
  1975  0E21                     	;# 
  1976  0E22                     	;# 
  1977  0E24                     	;# 
  1978  0E25                     	;# 
  1979  0E28                     	;# 
  1980  0E29                     	;# 
  1981  0E2A                     	;# 
  1982  0E2B                     	;# 
  1983  0E90                     	;# 
  1984  0E91                     	;# 
  1985  0E92                     	;# 
  1986  0E93                     	;# 
  1987  0E94                     	;# 
  1988  0E95                     	;# 
  1989  0E96                     	;# 
  1990  0E97                     	;# 
  1991  0E98                     	;# 
  1992  0E99                     	;# 
  1993  0E9A                     	;# 
  1994  0E9B                     	;# 
  1995  0E9C                     	;# 
  1996  0E9D                     	;# 
  1997  0E9E                     	;# 
  1998  0E9F                     	;# 
  1999  0EA0                     	;# 
  2000  0EA1                     	;# 
  2001  0EA2                     	;# 
  2002  0EA3                     	;# 
  2003  0EA4                     	;# 
  2004  0EA5                     	;# 
  2005  0EA6                     	;# 
  2006  0EA7                     	;# 
  2007  0EA8                     	;# 
  2008  0EA9                     	;# 
  2009  0EAA                     	;# 
  2010  0EAB                     	;# 
  2011  0EAC                     	;# 
  2012  0EAD                     	;# 
  2013  0EAE                     	;# 
  2014  0EAF                     	;# 
  2015  0EB0                     	;# 
  2016  0EB1                     	;# 
  2017  0EB2                     	;# 
  2018  0F0F                     	;# 
  2019  0F10                     	;# 
  2020  0F11                     	;# 
  2021  0F12                     	;# 
  2022  0F13                     	;# 
  2023  0F14                     	;# 
  2024  0F15                     	;# 
  2025  0F16                     	;# 
  2026  0F17                     	;# 
  2027  0F18                     	;# 
  2028  0F19                     	;# 
  2029  0F1A                     	;# 
  2030  0F1B                     	;# 
  2031  0F1C                     	;# 
  2032  0F1D                     	;# 
  2033  0F1E                     	;# 
  2034  0F1F                     	;# 
  2035  0F20                     	;# 
  2036  0F21                     	;# 
  2037  0F22                     	;# 
  2038  0F23                     	;# 
  2039  0F24                     	;# 
  2040  0F25                     	;# 
  2041  0F26                     	;# 
  2042  0F27                     	;# 
  2043  0F28                     	;# 
  2044  0F29                     	;# 
  2045  0F2A                     	;# 
  2046  0F2B                     	;# 
  2047  0F2C                     	;# 
  2048  0F2D                     	;# 
  2049  0F2E                     	;# 
  2050  0F2F                     	;# 
  2051  0F30                     	;# 
  2052  0F31                     	;# 
  2053  0F32                     	;# 
  2054  0F33                     	;# 
  2055  0F34                     	;# 
  2056  0F35                     	;# 
  2057  0F36                     	;# 
  2058  0F37                     	;# 
  2059  0FE4                     	;# 
  2060  0FE5                     	;# 
  2061  0FE6                     	;# 
  2062  0FE7                     	;# 
  2063  0FE8                     	;# 
  2064  0FE9                     	;# 
  2065  0FEA                     	;# 
  2066  0FEB                     	;# 
  2067  0FED                     	;# 
  2068  0FEE                     	;# 
  2069  0FEF                     	;# 
  2070  0000                     	;# 
  2071  0001                     	;# 
  2072  0002                     	;# 
  2073  0003                     	;# 
  2074  0004                     	;# 
  2075  0005                     	;# 
  2076  0006                     	;# 
  2077  0007                     	;# 
  2078  0008                     	;# 
  2079  0009                     	;# 
  2080  000A                     	;# 
  2081  000B                     	;# 
  2082  000C                     	;# 
  2083  000D                     	;# 
  2084  000E                     	;# 
  2085  000F                     	;# 
  2086  0010                     	;# 
  2087  0011                     	;# 
  2088  0012                     	;# 
  2089  0013                     	;# 
  2090  0015                     	;# 
  2091  0016                     	;# 
  2092  0016                     	;# 
  2093  0017                     	;# 
  2094  0018                     	;# 
  2095  0019                     	;# 
  2096  001A                     	;# 
  2097  001B                     	;# 
  2098  001C                     	;# 
  2099  008C                     	;# 
  2100  008D                     	;# 
  2101  008E                     	;# 
  2102  008F                     	;# 
  2103  0090                     	;# 
  2104  0091                     	;# 
  2105  0092                     	;# 
  2106  0093                     	;# 
  2107  0095                     	;# 
  2108  0096                     	;# 
  2109  0097                     	;# 
  2110  0098                     	;# 
  2111  0099                     	;# 
  2112  009A                     	;# 
  2113  009B                     	;# 
  2114  009B                     	;# 
  2115  009C                     	;# 
  2116  009D                     	;# 
  2117  009E                     	;# 
  2118  009F                     	;# 
  2119  010C                     	;# 
  2120  010D                     	;# 
  2121  010E                     	;# 
  2122  010F                     	;# 
  2123  0110                     	;# 
  2124  0111                     	;# 
  2125  0112                     	;# 
  2126  0113                     	;# 
  2127  0114                     	;# 
  2128  0115                     	;# 
  2129  0116                     	;# 
  2130  0117                     	;# 
  2131  0118                     	;# 
  2132  0119                     	;# 
  2133  011A                     	;# 
  2134  011B                     	;# 
  2135  011B                     	;# 
  2136  011C                     	;# 
  2137  018C                     	;# 
  2138  018D                     	;# 
  2139  018E                     	;# 
  2140  018F                     	;# 
  2141  0190                     	;# 
  2142  0191                     	;# 
  2143  0191                     	;# 
  2144  0192                     	;# 
  2145  0193                     	;# 
  2146  0193                     	;# 
  2147  0194                     	;# 
  2148  0195                     	;# 
  2149  0196                     	;# 
  2150  0197                     	;# 
  2151  0199                     	;# 
  2152  0199                     	;# 
  2153  0199                     	;# 
  2154  019A                     	;# 
  2155  019A                     	;# 
  2156  019A                     	;# 
  2157  019B                     	;# 
  2158  019B                     	;# 
  2159  019B                     	;# 
  2160  019B                     	;# 
  2161  019B                     	;# 
  2162  019C                     	;# 
  2163  019C                     	;# 
  2164  019C                     	;# 
  2165  019D                     	;# 
  2166  019D                     	;# 
  2167  019D                     	;# 
  2168  019E                     	;# 
  2169  019E                     	;# 
  2170  019E                     	;# 
  2171  019F                     	;# 
  2172  019F                     	;# 
  2173  019F                     	;# 
  2174  019F                     	;# 
  2175  019F                     	;# 
  2176  020C                     	;# 
  2177  020D                     	;# 
  2178  020E                     	;# 
  2179  020F                     	;# 
  2180  0210                     	;# 
  2181  0211                     	;# 
  2182  0211                     	;# 
  2183  0212                     	;# 
  2184  0212                     	;# 
  2185  0213                     	;# 
  2186  0213                     	;# 
  2187  0214                     	;# 
  2188  0214                     	;# 
  2189  0215                     	;# 
  2190  0215                     	;# 
  2191  0215                     	;# 
  2192  0215                     	;# 
  2193  0216                     	;# 
  2194  0216                     	;# 
  2195  0217                     	;# 
  2196  0217                     	;# 
  2197  028C                     	;# 
  2198  028D                     	;# 
  2199  028E                     	;# 
  2200  028F                     	;# 
  2201  0290                     	;# 
  2202  0291                     	;# 
  2203  0291                     	;# 
  2204  0292                     	;# 
  2205  0293                     	;# 
  2206  0293                     	;# 
  2207  0298                     	;# 
  2208  0298                     	;# 
  2209  0299                     	;# 
  2210  029A                     	;# 
  2211  029A                     	;# 
  2212  029E                     	;# 
  2213  030C                     	;# 
  2214  030D                     	;# 
  2215  030E                     	;# 
  2216  030F                     	;# 
  2217  0310                     	;# 
  2218  038C                     	;# 
  2219  038D                     	;# 
  2220  038E                     	;# 
  2221  038F                     	;# 
  2222  0390                     	;# 
  2223  0391                     	;# 
  2224  0392                     	;# 
  2225  0393                     	;# 
  2226  0394                     	;# 
  2227  0395                     	;# 
  2228  0396                     	;# 
  2229  0397                     	;# 
  2230  0398                     	;# 
  2231  0399                     	;# 
  2232  039D                     	;# 
  2233  039E                     	;# 
  2234  039F                     	;# 
  2235  0415                     	;# 
  2236  0416                     	;# 
  2237  0417                     	;# 
  2238  041C                     	;# 
  2239  041D                     	;# 
  2240  041E                     	;# 
  2241  0498                     	;# 
  2242  0498                     	;# 
  2243  0499                     	;# 
  2244  049A                     	;# 
  2245  049B                     	;# 
  2246  049B                     	;# 
  2247  049C                     	;# 
  2248  049D                     	;# 
  2249  049E                     	;# 
  2250  049F                     	;# 
  2251  0511                     	;# 
  2252  0515                     	;# 
  2253  0617                     	;# 
  2254  0618                     	;# 
  2255  0619                     	;# 
  2256  0619                     	;# 
  2257  061A                     	;# 
  2258  061B                     	;# 
  2259  061C                     	;# 
  2260  061C                     	;# 
  2261  0691                     	;# 
  2262  0692                     	;# 
  2263  0693                     	;# 
  2264  0694                     	;# 
  2265  0695                     	;# 
  2266  0696                     	;# 
  2267  0697                     	;# 
  2268  0698                     	;# 
  2269  0699                     	;# 
  2270  069A                     	;# 
  2271  069B                     	;# 
  2272  069C                     	;# 
  2273  069D                     	;# 
  2274  069E                     	;# 
  2275  069F                     	;# 
  2276  0E0F                     	;# 
  2277  0E10                     	;# 
  2278  0E11                     	;# 
  2279  0E12                     	;# 
  2280  0E13                     	;# 
  2281  0E14                     	;# 
  2282  0E15                     	;# 
  2283  0E17                     	;# 
  2284  0E20                     	;# 
  2285  0E21                     	;# 
  2286  0E22                     	;# 
  2287  0E24                     	;# 
  2288  0E25                     	;# 
  2289  0E28                     	;# 
  2290  0E29                     	;# 
  2291  0E2A                     	;# 
  2292  0E2B                     	;# 
  2293  0E90                     	;# 
  2294  0E91                     	;# 
  2295  0E92                     	;# 
  2296  0E93                     	;# 
  2297  0E94                     	;# 
  2298  0E95                     	;# 
  2299  0E96                     	;# 
  2300  0E97                     	;# 
  2301  0E98                     	;# 
  2302  0E99                     	;# 
  2303  0E9A                     	;# 
  2304  0E9B                     	;# 
  2305  0E9C                     	;# 
  2306  0E9D                     	;# 
  2307  0E9E                     	;# 
  2308  0E9F                     	;# 
  2309  0EA0                     	;# 
  2310  0EA1                     	;# 
  2311  0EA2                     	;# 
  2312  0EA3                     	;# 
  2313  0EA4                     	;# 
  2314  0EA5                     	;# 
  2315  0EA6                     	;# 
  2316  0EA7                     	;# 
  2317  0EA8                     	;# 
  2318  0EA9                     	;# 
  2319  0EAA                     	;# 
  2320  0EAB                     	;# 
  2321  0EAC                     	;# 
  2322  0EAD                     	;# 
  2323  0EAE                     	;# 
  2324  0EAF                     	;# 
  2325  0EB0                     	;# 
  2326  0EB1                     	;# 
  2327  0EB2                     	;# 
  2328  0F0F                     	;# 
  2329  0F10                     	;# 
  2330  0F11                     	;# 
  2331  0F12                     	;# 
  2332  0F13                     	;# 
  2333  0F14                     	;# 
  2334  0F15                     	;# 
  2335  0F16                     	;# 
  2336  0F17                     	;# 
  2337  0F18                     	;# 
  2338  0F19                     	;# 
  2339  0F1A                     	;# 
  2340  0F1B                     	;# 
  2341  0F1C                     	;# 
  2342  0F1D                     	;# 
  2343  0F1E                     	;# 
  2344  0F1F                     	;# 
  2345  0F20                     	;# 
  2346  0F21                     	;# 
  2347  0F22                     	;# 
  2348  0F23                     	;# 
  2349  0F24                     	;# 
  2350  0F25                     	;# 
  2351  0F26                     	;# 
  2352  0F27                     	;# 
  2353  0F28                     	;# 
  2354  0F29                     	;# 
  2355  0F2A                     	;# 
  2356  0F2B                     	;# 
  2357  0F2C                     	;# 
  2358  0F2D                     	;# 
  2359  0F2E                     	;# 
  2360  0F2F                     	;# 
  2361  0F30                     	;# 
  2362  0F31                     	;# 
  2363  0F32                     	;# 
  2364  0F33                     	;# 
  2365  0F34                     	;# 
  2366  0F35                     	;# 
  2367  0F36                     	;# 
  2368  0F37                     	;# 
  2369  0FE4                     	;# 
  2370  0FE5                     	;# 
  2371  0FE6                     	;# 
  2372  0FE7                     	;# 
  2373  0FE8                     	;# 
  2374  0FE9                     	;# 
  2375  0FEA                     	;# 
  2376  0FEB                     	;# 
  2377  0FED                     	;# 
  2378  0FEE                     	;# 
  2379  0FEF                     	;_messageBuffer
  2380                           
  2381                           	psect	idataBANK4
  2382  3E35                     __pidataBANK4:	
  2383                           
  2384                           ;initializer for stoa@F1174
  2385  3E35  3428               	retlw	40
  2386  3E36  346E               	retlw	110
  2387  3E37  3475               	retlw	117
  2388  3E38  346C               	retlw	108
  2389  3E39  346C               	retlw	108
  2390  3E3A  3429               	retlw	41
  2391  3E3B  3400               	retlw	0
  2392                           
  2393                           	psect	stringtext1
  2394  39EA                     __pstringtext1:	
  2395  39EA                     _OCD_threshold_setting:	
  2396  39EA  3411               	retlw	17
  2397  39EB  3400               	retlw	0
  2398  39EC  3416               	retlw	22
  2399  39ED  3400               	retlw	0
  2400  39EE  341C               	retlw	28
  2401  39EF  3400               	retlw	0
  2402  39F0  3421               	retlw	33
  2403  39F1  3400               	retlw	0
  2404  39F2  3427               	retlw	39
  2405  39F3  3400               	retlw	0
  2406  39F4  342C               	retlw	44
  2407  39F5  3400               	retlw	0
  2408  39F6  3432               	retlw	50
  2409  39F7  3400               	retlw	0
  2410  39F8  3438               	retlw	56
  2411  39F9  3400               	retlw	0
  2412  39FA  343D               	retlw	61
  2413  39FB  3400               	retlw	0
  2414  39FC  3443               	retlw	67
  2415  39FD  3400               	retlw	0
  2416  39FE  3448               	retlw	72
  2417  39FF  3400               	retlw	0
  2418  3A00  344E               	retlw	78
  2419  3A01  3400               	retlw	0
  2420  3A02  3453               	retlw	83
  2421  3A03  3400               	retlw	0
  2422  3A04  3459               	retlw	89
  2423  3A05  3400               	retlw	0
  2424  3A06  345E               	retlw	94
  2425  3A07  3400               	retlw	0
  2426  3A08  3464               	retlw	100
  2427  3A09  3400               	retlw	0
  2428  3A0A                     __end_of_OCD_threshold_setting:	
  2429                           
  2430                           	psect	stringtext2
  2431  3AFE                     __pstringtext2:	
  2432  3AFE                     _OCD_delay_setting:	
  2433  3AFE  3408               	retlw	8
  2434  3AFF  3400               	retlw	0
  2435  3B00  3414               	retlw	20
  2436  3B01  3400               	retlw	0
  2437  3B02  3428               	retlw	40
  2438  3B03  3400               	retlw	0
  2439  3B04  3450               	retlw	80
  2440  3B05  3400               	retlw	0
  2441  3B06  34A0               	retlw	160
  2442  3B07  3400               	retlw	0
  2443  3B08  3440               	retlw	64
  2444  3B09  3401               	retlw	1
  2445  3B0A  3480               	retlw	128
  2446  3B0B  3402               	retlw	2
  2447  3B0C  3400               	retlw	0
  2448  3B0D  3405               	retlw	5
  2449  3B0E                     __end_of_OCD_delay_setting:	
  2450                           
  2451                           	psect	stringtext3
  2452  3B0E                     __pstringtext3:	
  2453  3B0E                     _SCD_threshold_setting:	
  2454  3B0E  342C               	retlw	44
  2455  3B0F  3400               	retlw	0
  2456  3B10  3443               	retlw	67
  2457  3B11  3400               	retlw	0
  2458  3B12  3459               	retlw	89
  2459  3B13  3400               	retlw	0
  2460  3B14  346F               	retlw	111
  2461  3B15  3400               	retlw	0
  2462  3B16  3485               	retlw	133
  2463  3B17  3400               	retlw	0
  2464  3B18  349B               	retlw	155
  2465  3B19  3400               	retlw	0
  2466  3B1A  34B2               	retlw	178
  2467  3B1B  3400               	retlw	0
  2468  3B1C  34C8               	retlw	200
  2469  3B1D  3400               	retlw	0
  2470  3B1E                     __end_of_SCD_threshold_setting:	
  2471                           
  2472                           	psect	stringtext4
  2473  3B1E                     __pstringtext4:	
  2474  3B1E                     _OV_delay_setting:	
  2475  3B1E  3401               	retlw	1
  2476  3B1F  3400               	retlw	0
  2477  3B20  3402               	retlw	2
  2478  3B21  3400               	retlw	0
  2479  3B22  3404               	retlw	4
  2480  3B23  3400               	retlw	0
  2481  3B24  3408               	retlw	8
  2482  3B25  3400               	retlw	0
  2483  3B26                     __end_of_OV_delay_setting:	
  2484                           
  2485                           	psect	stringtext5
  2486  3B26                     __pstringtext5:	
  2487  3B26                     _UV_delay_setting:	
  2488  3B26  3401               	retlw	1
  2489  3B27  3400               	retlw	0
  2490  3B28  3404               	retlw	4
  2491  3B29  3400               	retlw	0
  2492  3B2A  3408               	retlw	8
  2493  3B2B  3400               	retlw	0
  2494  3B2C  3410               	retlw	16
  2495  3B2D  3400               	retlw	0
  2496  3B2E                     __end_of_UV_delay_setting:	
  2497                           
  2498                           	psect	stringtext6
  2499  3B2E                     __pstringtext6:	
  2500  3B2E                     _SCD_delay_setting:	
  2501  3B2E  3446               	retlw	70
  2502  3B2F  3400               	retlw	0
  2503  3B30  3464               	retlw	100
  2504  3B31  3400               	retlw	0
  2505  3B32  34C8               	retlw	200
  2506  3B33  3400               	retlw	0
  2507  3B34  3490               	retlw	144
  2508  3B35  3401               	retlw	1
  2509  3B36                     __end_of_SCD_delay_setting:	
  2510                           
  2511                           	psect	stringtext7
  2512  3800                     __pstringtext7:	
  2513  3800                     _ATmega328_address:	
  2514  3800  3402               	retlw	2
  2515  3801  3400               	retlw	0
  2516  3802                     __end_of_ATmega328_address:	
  2517  0016                     _TMR1	set	22
  2518  0003                     _STATUSbits	set	3
  2519  000B                     _INTCONbits	set	11
  2520  0018                     _T1CONbits	set	24
  2521  0011                     _PIR1bits	set	17
  2522  0097                     _WDTCONbits	set	151
  2523  0090                     _TRISEbits	set	144
  2524  008C                     _TRISAbits	set	140
  2525  008E                     _TRISCbits	set	142
  2526  008D                     _TRISBbits	set	141
  2527  0091                     _PIE1bits	set	145
  2528  0476                     _TRISC6	set	1142
  2529  0477                     _TRISC7	set	1143
  2530  04CF                     _SPLLEN	set	1231
  2531  04CE                     _IRCF3	set	1230
  2532  04CD                     _IRCF2	set	1229
  2533  04CC                     _IRCF1	set	1228
  2534  04CB                     _IRCF0	set	1227
  2535  04C9                     _SCS1	set	1225
  2536  04C8                     _SCS0	set	1224
  2537  0110                     _LATEbits	set	272
  2538  010C                     _LATAbits	set	268
  2539  019A                     _TX1REG	set	410
  2540  0199                     _RC1REG	set	409
  2541  019D                     _RC1STAbits	set	413
  2542  019B                     _SPBRG	set	411
  2543  018E                     _ANSELCbits	set	398
  2544  018D                     _ANSELBbits	set	397
  2545  0CF5                     _TXEN	set	3317
  2546  0CEC                     _CREN	set	3308
  2547  0CEF                     _SPEN	set	3311
  2548  0CF4                     _SYNC	set	3316
  2549  0CF2                     _BRGH	set	3314
  2550  0216                     _SSPCON2bits	set	534
  2551  0211                     _SSPBUF	set	529
  2552  0212                     _SSPADD	set	530
  2553  0215                     _SSPCONbits	set	533
  2554  0E24                     _RXPPSbits	set	3620
  2555  0E20                     _SSPCLKPPSbits	set	3616
  2556  0E21                     _SSPDATPPSbits	set	3617
  2557  0E0F                     _PPSLOCKbits	set	3599
  2558  0E0F                     _PPSLOCK	set	3599
  2559  0E9A                     _RB2PPSbits	set	3738
  2560  0EA5                     _RC5PPSbits	set	3749
  2561  0EA4                     _RC4PPSbits	set	3748
  2562  3802                     STR_8:	
  2563  3802  3453               	retlw	83	;'S'
  2564  3803  3465               	retlw	101	;'e'
  2565  3804  3474               	retlw	116	;'t'
  2566  3805  3420               	retlw	32	;' '
  2567  3806  344F               	retlw	79	;'O'
  2568  3807  3476               	retlw	118	;'v'
  2569  3808  3465               	retlw	101	;'e'
  2570  3809  3472               	retlw	114	;'r'
  2571  380A  342D               	retlw	45	;'-'
  2572  380B  3463               	retlw	99	;'c'
  2573  380C  3475               	retlw	117	;'u'
  2574  380D  3472               	retlw	114	;'r'
  2575  380E  3472               	retlw	114	;'r'
  2576  380F  3465               	retlw	101	;'e'
  2577  3810  346E               	retlw	110	;'n'
  2578  3811  3474               	retlw	116	;'t'
  2579  3812  3420               	retlw	32	;' '
  2580  3813  3464               	retlw	100	;'d'
  2581  3814  3469               	retlw	105	;'i'
  2582  3815  3473               	retlw	115	;'s'
  2583  3816  3463               	retlw	99	;'c'
  2584  3817  3468               	retlw	104	;'h'
  2585  3818  3461               	retlw	97	;'a'
  2586  3819  3472               	retlw	114	;'r'
  2587  381A  3467               	retlw	103	;'g'
  2588  381B  3465               	retlw	101	;'e'
  2589  381C  3420               	retlw	32	;' '
  2590  381D  3470               	retlw	112	;'p'
  2591  381E  3472               	retlw	114	;'r'
  2592  381F  346F               	retlw	111	;'o'
  2593  3820  3474               	retlw	116	;'t'
  2594  3821  3465               	retlw	101	;'e'
  2595  3822  3463               	retlw	99	;'c'
  2596  3823  3474               	retlw	116	;'t'
  2597  3824  3469               	retlw	105	;'i'
  2598  3825  346F               	retlw	111	;'o'
  2599  3826  346E               	retlw	110	;'n'
  2600  3827  3420               	retlw	32	;' '
  2601  3828  3420               	retlw	32	;' '
  2602  3829  3466               	retlw	102	;'f'
  2603  382A  346F               	retlw	111	;'o'
  2604  382B  3472               	retlw	114	;'r'
  2605  382C  3420               	retlw	32	;' '
  2606  382D  3441               	retlw	65	;'A'
  2607  382E  3446               	retlw	70	;'F'
  2608  382F  3445               	retlw	69	;'E'
  2609  3830  343A               	retlw	58	;':'
  2610  3831  3420               	retlw	32	;' '
  2611  3832  3425               	retlw	37	;'%'
  2612  3833  346C               	retlw	108	;'l'
  2613  3834  3475               	retlw	117	;'u'
  2614  3835  3420               	retlw	32	;' '
  2615  3836  346D               	retlw	109	;'m'
  2616  3837  3441               	retlw	65	;'A'
  2617  3838  340A               	retlw	10
  2618  3839  340D               	retlw	13
  2619  383A  3400               	retlw	0
  2620                           
  2621                           	psect	stringtext8
  2622  383B                     __pstringtext8:	
  2623  383B                     STR_4:	
  2624  383B  3441               	retlw	65	;'A'
  2625  383C  3474               	retlw	116	;'t'
  2626  383D  3474               	retlw	116	;'t'
  2627  383E  3465               	retlw	101	;'e'
  2628  383F  346D               	retlw	109	;'m'
  2629  3840  3470               	retlw	112	;'p'
  2630  3841  3474               	retlw	116	;'t'
  2631  3842  3420               	retlw	32	;' '
  2632  3843  3474               	retlw	116	;'t'
  2633  3844  346F               	retlw	111	;'o'
  2634  3845  3420               	retlw	32	;' '
  2635  3846  3473               	retlw	115	;'s'
  2636  3847  3465               	retlw	101	;'e'
  2637  3848  3474               	retlw	116	;'t'
  2638  3849  3420               	retlw	32	;' '
  2639  384A  3469               	retlw	105	;'i'
  2640  384B  346E               	retlw	110	;'n'
  2641  384C  3469               	retlw	105	;'i'
  2642  384D  3474               	retlw	116	;'t'
  2643  384E  3469               	retlw	105	;'i'
  2644  384F  3461               	retlw	97	;'a'
  2645  3850  346C               	retlw	108	;'l'
  2646  3851  3420               	retlw	32	;' '
  2647  3852  3473               	retlw	115	;'s'
  2648  3853  3479               	retlw	121	;'y'
  2649  3854  3473               	retlw	115	;'s'
  2650  3855  3474               	retlw	116	;'t'
  2651  3856  3465               	retlw	101	;'e'
  2652  3857  346D               	retlw	109	;'m'
  2653  3858  3420               	retlw	32	;' '
  2654  3859  3470               	retlw	112	;'p'
  2655  385A  3461               	retlw	97	;'a'
  2656  385B  3472               	retlw	114	;'r'
  2657  385C  3461               	retlw	97	;'a'
  2658  385D  346D               	retlw	109	;'m'
  2659  385E  3465               	retlw	101	;'e'
  2660  385F  3474               	retlw	116	;'t'
  2661  3860  3465               	retlw	101	;'e'
  2662  3861  3472               	retlw	114	;'r'
  2663  3862  3473               	retlw	115	;'s'
  2664  3863  3420               	retlw	32	;' '
  2665  3864  3474               	retlw	116	;'t'
  2666  3865  346F               	retlw	111	;'o'
  2667  3866  3420               	retlw	32	;' '
  2668  3867  3441               	retlw	65	;'A'
  2669  3868  3446               	retlw	70	;'F'
  2670  3869  3445               	retlw	69	;'E'
  2671  386A  342E               	retlw	46	;'.'
  2672  386B  342E               	retlw	46	;'.'
  2673  386C  342E               	retlw	46	;'.'
  2674  386D  340A               	retlw	10
  2675  386E  340D               	retlw	13
  2676  386F  3400               	retlw	0
  2677                           
  2678                           	psect	stringtext9
  2679  3870                     __pstringtext9:	
  2680  3870                     STR_2:	
  2681  3870  3443               	retlw	67	;'C'
  2682  3871  346F               	retlw	111	;'o'
  2683  3872  346D               	retlw	109	;'m'
  2684  3873  346D               	retlw	109	;'m'
  2685  3874  3475               	retlw	117	;'u'
  2686  3875  346E               	retlw	110	;'n'
  2687  3876  3469               	retlw	105	;'i'
  2688  3877  3463               	retlw	99	;'c'
  2689  3878  3461               	retlw	97	;'a'
  2690  3879  3474               	retlw	116	;'t'
  2691  387A  3469               	retlw	105	;'i'
  2692  387B  346F               	retlw	111	;'o'
  2693  387C  346E               	retlw	110	;'n'
  2694  387D  3420               	retlw	32	;' '
  2695  387E  3477               	retlw	119	;'w'
  2696  387F  3469               	retlw	105	;'i'
  2697  3880  3474               	retlw	116	;'t'
  2698  3881  3468               	retlw	104	;'h'
  2699  3882  3420               	retlw	32	;' '
  2700  3883  3442               	retlw	66	;'B'
  2701  3884  3451               	retlw	81	;'Q'
  2702  3885  3437               	retlw	55	;'7'
  2703  3886  3436               	retlw	54	;'6'
  2704  3887  3439               	retlw	57	;'9'
  2705  3888  3432               	retlw	50	;'2'
  2706  3889  3430               	retlw	48	;'0'
  2707  388A  3420               	retlw	32	;' '
  2708  388B  3441               	retlw	65	;'A'
  2709  388C  3446               	retlw	70	;'F'
  2710  388D  3445               	retlw	69	;'E'
  2711  388E  3420               	retlw	32	;' '
  2712  388F  3465               	retlw	101	;'e'
  2713  3890  3473               	retlw	115	;'s'
  2714  3891  3474               	retlw	116	;'t'
  2715  3892  3461               	retlw	97	;'a'
  2716  3893  3462               	retlw	98	;'b'
  2717  3894  346C               	retlw	108	;'l'
  2718  3895  3469               	retlw	105	;'i'
  2719  3896  3473               	retlw	115	;'s'
  2720  3897  3468               	retlw	104	;'h'
  2721  3898  3465               	retlw	101	;'e'
  2722  3899  3464               	retlw	100	;'d'
  2723  389A  3421               	retlw	33	;'!'
  2724  389B  340A               	retlw	10
  2725  389C  340D               	retlw	13
  2726  389D  3400               	retlw	0
  2727                           
  2728                           	psect	stringtext10
  2729  389E                     __pstringtext10:	
  2730  389E                     STR_10:	
  2731  389E  344E               	retlw	78	;'N'
  2732  389F  346F               	retlw	111	;'o'
  2733  38A0  3477               	retlw	119	;'w'
  2734  38A1  3420               	retlw	32	;' '
  2735  38A2  3472               	retlw	114	;'r'
  2736  38A3  3465               	retlw	101	;'e'
  2737  38A4  3461               	retlw	97	;'a'
  2738  38A5  3464               	retlw	100	;'d'
  2739  38A6  3469               	retlw	105	;'i'
  2740  38A7  346E               	retlw	110	;'n'
  2741  38A8  3467               	retlw	103	;'g'
  2742  38A9  3420               	retlw	32	;' '
  2743  38AA  3441               	retlw	65	;'A'
  2744  38AB  3446               	retlw	70	;'F'
  2745  38AC  3445               	retlw	69	;'E'
  2746  38AD  3420               	retlw	32	;' '
  2747  38AE  3464               	retlw	100	;'d'
  2748  38AF  3461               	retlw	97	;'a'
  2749  38B0  3474               	retlw	116	;'t'
  2750  38B1  3461               	retlw	97	;'a'
  2751  38B2  3420               	retlw	32	;' '
  2752  38B3  3461               	retlw	97	;'a'
  2753  38B4  3474               	retlw	116	;'t'
  2754  38B5  3420               	retlw	32	;' '
  2755  38B6  3472               	retlw	114	;'r'
  2756  38B7  3465               	retlw	101	;'e'
  2757  38B8  3467               	retlw	103	;'g'
  2758  38B9  3475               	retlw	117	;'u'
  2759  38BA  346C               	retlw	108	;'l'
  2760  38BB  3461               	retlw	97	;'a'
  2761  38BC  3472               	retlw	114	;'r'
  2762  38BD  3420               	retlw	32	;' '
  2763  38BE  3469               	retlw	105	;'i'
  2764  38BF  346E               	retlw	110	;'n'
  2765  38C0  3474               	retlw	116	;'t'
  2766  38C1  3465               	retlw	101	;'e'
  2767  38C2  3472               	retlw	114	;'r'
  2768  38C3  3476               	retlw	118	;'v'
  2769  38C4  3461               	retlw	97	;'a'
  2770  38C5  346C               	retlw	108	;'l'
  2771  38C6  3473               	retlw	115	;'s'
  2772  38C7  342E               	retlw	46	;'.'
  2773  38C8  340A               	retlw	10
  2774  38C9  340D               	retlw	13
  2775  38CA  3400               	retlw	0
  2776                           
  2777                           	psect	stringtext11
  2778  38CB                     __pstringtext11:	
  2779  38CB                     STR_7:	
  2780  38CB  3453               	retlw	83	;'S'
  2781  38CC  3465               	retlw	101	;'e'
  2782  38CD  3474               	retlw	116	;'t'
  2783  38CE  3420               	retlw	32	;' '
  2784  38CF  3473               	retlw	115	;'s'
  2785  38D0  3468               	retlw	104	;'h'
  2786  38D1  346F               	retlw	111	;'o'
  2787  38D2  3472               	retlw	114	;'r'
  2788  38D3  3474               	retlw	116	;'t'
  2789  38D4  3420               	retlw	32	;' '
  2790  38D5  3463               	retlw	99	;'c'
  2791  38D6  3469               	retlw	105	;'i'
  2792  38D7  3472               	retlw	114	;'r'
  2793  38D8  3463               	retlw	99	;'c'
  2794  38D9  3475               	retlw	117	;'u'
  2795  38DA  3469               	retlw	105	;'i'
  2796  38DB  3474               	retlw	116	;'t'
  2797  38DC  3420               	retlw	32	;' '
  2798  38DD  3463               	retlw	99	;'c'
  2799  38DE  3475               	retlw	117	;'u'
  2800  38DF  3472               	retlw	114	;'r'
  2801  38E0  3472               	retlw	114	;'r'
  2802  38E1  3465               	retlw	101	;'e'
  2803  38E2  346E               	retlw	110	;'n'
  2804  38E3  3474               	retlw	116	;'t'
  2805  38E4  3420               	retlw	32	;' '
  2806  38E5  3466               	retlw	102	;'f'
  2807  38E6  346F               	retlw	111	;'o'
  2808  38E7  3472               	retlw	114	;'r'
  2809  38E8  3420               	retlw	32	;' '
  2810  38E9  3441               	retlw	65	;'A'
  2811  38EA  3446               	retlw	70	;'F'
  2812  38EB  3445               	retlw	69	;'E'
  2813  38EC  343A               	retlw	58	;':'
  2814  38ED  3420               	retlw	32	;' '
  2815  38EE  3425               	retlw	37	;'%'
  2816  38EF  346C               	retlw	108	;'l'
  2817  38F0  3475               	retlw	117	;'u'
  2818  38F1  3420               	retlw	32	;' '
  2819  38F2  346D               	retlw	109	;'m'
  2820  38F3  3441               	retlw	65	;'A'
  2821  38F4  340A               	retlw	10
  2822  38F5  340D               	retlw	13
  2823  38F6  3400               	retlw	0
  2824                           
  2825                           	psect	stringtext12
  2826  38F7                     __pstringtext12:	
  2827  38F7                     STR_3:	
  2828  38F7  344F               	retlw	79	;'O'
  2829  38F8  3462               	retlw	98	;'b'
  2830  38F9  3474               	retlw	116	;'t'
  2831  38FA  3461               	retlw	97	;'a'
  2832  38FB  3469               	retlw	105	;'i'
  2833  38FC  346E               	retlw	110	;'n'
  2834  38FD  3465               	retlw	101	;'e'
  2835  38FE  3464               	retlw	100	;'d'
  2836  38FF  3420               	retlw	32	;' '
  2837  3900  3461               	retlw	97	;'a'
  2838  3901  3464               	retlw	100	;'d'
  2839  3902  3463               	retlw	99	;'c'
  2840  3903  344F               	retlw	79	;'O'
  2841  3904  3466               	retlw	102	;'f'
  2842  3905  3466               	retlw	102	;'f'
  2843  3906  3473               	retlw	115	;'s'
  2844  3907  3465               	retlw	101	;'e'
  2845  3908  3474               	retlw	116	;'t'
  2846  3909  3420               	retlw	32	;' '
  2847  390A  343D               	retlw	61	;'='
  2848  390B  3420               	retlw	32	;' '
  2849  390C  3425               	retlw	37	;'%'
  2850  390D  3469               	retlw	105	;'i'
  2851  390E  3420               	retlw	32	;' '
  2852  390F  3461               	retlw	97	;'a'
  2853  3910  346E               	retlw	110	;'n'
  2854  3911  3464               	retlw	100	;'d'
  2855  3912  3420               	retlw	32	;' '
  2856  3913  3461               	retlw	97	;'a'
  2857  3914  3464               	retlw	100	;'d'
  2858  3915  3463               	retlw	99	;'c'
  2859  3916  3447               	retlw	71	;'G'
  2860  3917  3461               	retlw	97	;'a'
  2861  3918  3469               	retlw	105	;'i'
  2862  3919  346E               	retlw	110	;'n'
  2863  391A  3420               	retlw	32	;' '
  2864  391B  343D               	retlw	61	;'='
  2865  391C  3420               	retlw	32	;' '
  2866  391D  3425               	retlw	37	;'%'
  2867  391E  3469               	retlw	105	;'i'
  2868  391F  340A               	retlw	10
  2869  3920  340D               	retlw	13
  2870  3921  3400               	retlw	0
  2871                           
  2872                           	psect	stringtext13
  2873  3922                     __pstringtext13:	
  2874  3922                     STR_9:	
  2875  3922  3449               	retlw	73	;'I'
  2876  3923  346E               	retlw	110	;'n'
  2877  3924  3469               	retlw	105	;'i'
  2878  3925  3474               	retlw	116	;'t'
  2879  3926  3469               	retlw	105	;'i'
  2880  3927  3461               	retlw	97	;'a'
  2881  3928  346C               	retlw	108	;'l'
  2882  3929  3420               	retlw	32	;' '
  2883  392A  3470               	retlw	112	;'p'
  2884  392B  3461               	retlw	97	;'a'
  2885  392C  3472               	retlw	114	;'r'
  2886  392D  3461               	retlw	97	;'a'
  2887  392E  346D               	retlw	109	;'m'
  2888  392F  3465               	retlw	101	;'e'
  2889  3930  3474               	retlw	116	;'t'
  2890  3931  3465               	retlw	101	;'e'
  2891  3932  3472               	retlw	114	;'r'
  2892  3933  3473               	retlw	115	;'s'
  2893  3934  3420               	retlw	32	;' '
  2894  3935  3466               	retlw	102	;'f'
  2895  3936  346F               	retlw	111	;'o'
  2896  3937  3472               	retlw	114	;'r'
  2897  3938  3420               	retlw	32	;' '
  2898  3939  3442               	retlw	66	;'B'
  2899  393A  3451               	retlw	81	;'Q'
  2900  393B  3437               	retlw	55	;'7'
  2901  393C  3436               	retlw	54	;'6'
  2902  393D  3439               	retlw	57	;'9'
  2903  393E  3432               	retlw	50	;'2'
  2904  393F  3430               	retlw	48	;'0'
  2905  3940  3420               	retlw	32	;' '
  2906  3941  3441               	retlw	65	;'A'
  2907  3942  3446               	retlw	70	;'F'
  2908  3943  3445               	retlw	69	;'E'
  2909  3944  3420               	retlw	32	;' '
  2910  3945  3473               	retlw	115	;'s'
  2911  3946  3465               	retlw	101	;'e'
  2912  3947  3474               	retlw	116	;'t'
  2913  3948  3421               	retlw	33	;'!'
  2914  3949  340A               	retlw	10
  2915  394A  340D               	retlw	13
  2916  394B  3400               	retlw	0
  2917                           
  2918                           	psect	stringtext14
  2919  394C                     __pstringtext14:	
  2920  394C                     STR_6:	
  2921  394C  3443               	retlw	67	;'C'
  2922  394D  3475               	retlw	117	;'u'
  2923  394E  3472               	retlw	114	;'r'
  2924  394F  3472               	retlw	114	;'r'
  2925  3950  3465               	retlw	101	;'e'
  2926  3951  346E               	retlw	110	;'n'
  2927  3952  3474               	retlw	116	;'t'
  2928  3953  3420               	retlw	32	;' '
  2929  3954  3473               	retlw	115	;'s'
  2930  3955  3465               	retlw	101	;'e'
  2931  3956  346E               	retlw	110	;'n'
  2932  3957  3473               	retlw	115	;'s'
  2933  3958  3465               	retlw	101	;'e'
  2934  3959  3420               	retlw	32	;' '
  2935  395A  3472               	retlw	114	;'r'
  2936  395B  3465               	retlw	101	;'e'
  2937  395C  3473               	retlw	115	;'s'
  2938  395D  3469               	retlw	105	;'i'
  2939  395E  3473               	retlw	115	;'s'
  2940  395F  3474               	retlw	116	;'t'
  2941  3960  346F               	retlw	111	;'o'
  2942  3961  3472               	retlw	114	;'r'
  2943  3962  3420               	retlw	32	;' '
  2944  3963  3476               	retlw	118	;'v'
  2945  3964  3461               	retlw	97	;'a'
  2946  3965  346C               	retlw	108	;'l'
  2947  3966  3475               	retlw	117	;'u'
  2948  3967  3465               	retlw	101	;'e'
  2949  3968  343A               	retlw	58	;':'
  2950  3969  3420               	retlw	32	;' '
  2951  396A  3425               	retlw	37	;'%'
  2952  396B  342E               	retlw	46	;'.'
  2953  396C  3434               	retlw	52	;'4'
  2954  396D  3466               	retlw	102	;'f'
  2955  396E  3420               	retlw	32	;' '
  2956  396F  346F               	retlw	111	;'o'
  2957  3970  3468               	retlw	104	;'h'
  2958  3971  346D               	retlw	109	;'m'
  2959  3972  3473               	retlw	115	;'s'
  2960  3973  340A               	retlw	10
  2961  3974  340D               	retlw	13
  2962  3975  3400               	retlw	0
  2963                           
  2964                           	psect	stringtext15
  2965  3976                     __pstringtext15:	
  2966  3976                     STR_1:	
  2967  3976  3441               	retlw	65	;'A'
  2968  3977  3474               	retlw	116	;'t'
  2969  3978  3474               	retlw	116	;'t'
  2970  3979  3465               	retlw	101	;'e'
  2971  397A  346D               	retlw	109	;'m'
  2972  397B  3470               	retlw	112	;'p'
  2973  397C  3474               	retlw	116	;'t'
  2974  397D  3469               	retlw	105	;'i'
  2975  397E  346E               	retlw	110	;'n'
  2976  397F  3467               	retlw	103	;'g'
  2977  3980  3420               	retlw	32	;' '
  2978  3981  3474               	retlw	116	;'t'
  2979  3982  346F               	retlw	111	;'o'
  2980  3983  3420               	retlw	32	;' '
  2981  3984  3463               	retlw	99	;'c'
  2982  3985  346F               	retlw	111	;'o'
  2983  3986  346D               	retlw	109	;'m'
  2984  3987  346D               	retlw	109	;'m'
  2985  3988  3475               	retlw	117	;'u'
  2986  3989  346E               	retlw	110	;'n'
  2987  398A  3469               	retlw	105	;'i'
  2988  398B  3463               	retlw	99	;'c'
  2989  398C  3461               	retlw	97	;'a'
  2990  398D  3474               	retlw	116	;'t'
  2991  398E  3465               	retlw	101	;'e'
  2992  398F  3420               	retlw	32	;' '
  2993  3990  3477               	retlw	119	;'w'
  2994  3991  3469               	retlw	105	;'i'
  2995  3992  3474               	retlw	116	;'t'
  2996  3993  3468               	retlw	104	;'h'
  2997  3994  3420               	retlw	32	;' '
  2998  3995  3441               	retlw	65	;'A'
  2999  3996  3446               	retlw	70	;'F'
  3000  3997  3445               	retlw	69	;'E'
  3001  3998  342E               	retlw	46	;'.'
  3002  3999  342E               	retlw	46	;'.'
  3003  399A  342E               	retlw	46	;'.'
  3004  399B  340A               	retlw	10
  3005  399C  340D               	retlw	13
  3006  399D  3400               	retlw	0
  3007                           
  3008                           	psect	stringtext16
  3009  399E                     __pstringtext16:	
  3010  399E                     STR_11:	
  3011  399E  3443               	retlw	67	;'C'
  3012  399F  3465               	retlw	101	;'e'
  3013  39A0  346C               	retlw	108	;'l'
  3014  39A1  346C               	retlw	108	;'l'
  3015  39A2  3420               	retlw	32	;' '
  3016  39A3  3462               	retlw	98	;'b'
  3017  39A4  3461               	retlw	97	;'a'
  3018  39A5  3474               	retlw	116	;'t'
  3019  39A6  3474               	retlw	116	;'t'
  3020  39A7  343A               	retlw	58	;':'
  3021  39A8  3420               	retlw	32	;' '
  3022  39A9  3425               	retlw	37	;'%'
  3023  39AA  3469               	retlw	105	;'i'
  3024  39AB  3420               	retlw	32	;' '
  3025  39AC  342C               	retlw	44	;','
  3026  39AD  3425               	retlw	37	;'%'
  3027  39AE  3469               	retlw	105	;'i'
  3028  39AF  342C               	retlw	44	;','
  3029  39B0  3420               	retlw	32	;' '
  3030  39B1  3425               	retlw	37	;'%'
  3031  39B2  3469               	retlw	105	;'i'
  3032  39B3  3420               	retlw	32	;' '
  3033  39B4  342C               	retlw	44	;','
  3034  39B5  3420               	retlw	32	;' '
  3035  39B6  3425               	retlw	37	;'%'
  3036  39B7  3469               	retlw	105	;'i'
  3037  39B8  342C               	retlw	44	;','
  3038  39B9  3420               	retlw	32	;' '
  3039  39BA  3425               	retlw	37	;'%'
  3040  39BB  3469               	retlw	105	;'i'
  3041  39BC  342C               	retlw	44	;','
  3042  39BD  3420               	retlw	32	;' '
  3043  39BE  3425               	retlw	37	;'%'
  3044  39BF  3469               	retlw	105	;'i'
  3045  39C0  3420               	retlw	32	;' '
  3046  39C1  340A               	retlw	10
  3047  39C2  340D               	retlw	13
  3048  39C3  3400               	retlw	0
  3049                           
  3050                           	psect	stringtext17
  3051  39C4                     __pstringtext17:	
  3052  39C4                     STR_12:	
  3053  39C4  3450               	retlw	80	;'P'
  3054  39C5  3472               	retlw	114	;'r'
  3055  39C6  3469               	retlw	105	;'i'
  3056  39C7  346E               	retlw	110	;'n'
  3057  39C8  3474               	retlw	116	;'t'
  3058  39C9  3469               	retlw	105	;'i'
  3059  39CA  346E               	retlw	110	;'n'
  3060  39CB  3467               	retlw	103	;'g'
  3061  39CC  3420               	retlw	32	;' '
  3062  39CD  346F               	retlw	111	;'o'
  3063  39CE  3475               	retlw	117	;'u'
  3064  39CF  3474               	retlw	116	;'t'
  3065  39D0  3420               	retlw	32	;' '
  3066  39D1  3441               	retlw	65	;'A'
  3067  39D2  3446               	retlw	70	;'F'
  3068  39D3  3445               	retlw	69	;'E'
  3069  39D4  3420               	retlw	32	;' '
  3070  39D5  3472               	retlw	114	;'r'
  3071  39D6  3465               	retlw	101	;'e'
  3072  39D7  3467               	retlw	103	;'g'
  3073  39D8  3469               	retlw	105	;'i'
  3074  39D9  3473               	retlw	115	;'s'
  3075  39DA  3474               	retlw	116	;'t'
  3076  39DB  3465               	retlw	101	;'e'
  3077  39DC  3472               	retlw	114	;'r'
  3078  39DD  3420               	retlw	32	;' '
  3079  39DE  3476               	retlw	118	;'v'
  3080  39DF  3461               	retlw	97	;'a'
  3081  39E0  346C               	retlw	108	;'l'
  3082  39E1  3475               	retlw	117	;'u'
  3083  39E2  3465               	retlw	101	;'e'
  3084  39E3  3473               	retlw	115	;'s'
  3085  39E4  342E               	retlw	46	;'.'
  3086  39E5  342E               	retlw	46	;'.'
  3087  39E6  342E               	retlw	46	;'.'
  3088  39E7  340A               	retlw	10
  3089  39E8  340D               	retlw	13
  3090  39E9  3400               	retlw	0
  3091                           
  3092                           	psect	stringtext18
  3093  3A0A                     __pstringtext18:	
  3094  3A0A                     STR_16:	
  3095  3A0A  3430               	retlw	48	;'0'
  3096  3A0B  3478               	retlw	120	;'x'
  3097  3A0C  3430               	retlw	48	;'0'
  3098  3A0D  3434               	retlw	52	;'4'
  3099  3A0E  3420               	retlw	32	;' '
  3100  3A0F  3453               	retlw	83	;'S'
  3101  3A10  3459               	retlw	89	;'Y'
  3102  3A11  3453               	retlw	83	;'S'
  3103  3A12  345F               	retlw	95	;'_'
  3104  3A13  3443               	retlw	67	;'C'
  3105  3A14  3454               	retlw	84	;'T'
  3106  3A15  3452               	retlw	82	;'R'
  3107  3A16  344C               	retlw	76	;'L'
  3108  3A17  3431               	retlw	49	;'1'
  3109  3A18  343A               	retlw	58	;':'
  3110  3A19  3420               	retlw	32	;' '
  3111  3A1A  3425               	retlw	37	;'%'
  3112  3A1B  3469               	retlw	105	;'i'
  3113  3A1C  3420               	retlw	32	;' '
  3114  3A1D  340A               	retlw	10
  3115  3A1E  340D               	retlw	13
  3116  3A1F  3400               	retlw	0
  3117                           
  3118                           	psect	stringtext19
  3119  3A20                     __pstringtext19:	
  3120  3A20                     STR_17:	
  3121  3A20  3430               	retlw	48	;'0'
  3122  3A21  3478               	retlw	120	;'x'
  3123  3A22  3430               	retlw	48	;'0'
  3124  3A23  3435               	retlw	53	;'5'
  3125  3A24  3420               	retlw	32	;' '
  3126  3A25  3453               	retlw	83	;'S'
  3127  3A26  3459               	retlw	89	;'Y'
  3128  3A27  3453               	retlw	83	;'S'
  3129  3A28  345F               	retlw	95	;'_'
  3130  3A29  3443               	retlw	67	;'C'
  3131  3A2A  3454               	retlw	84	;'T'
  3132  3A2B  3452               	retlw	82	;'R'
  3133  3A2C  344C               	retlw	76	;'L'
  3134  3A2D  3432               	retlw	50	;'2'
  3135  3A2E  343A               	retlw	58	;':'
  3136  3A2F  3420               	retlw	32	;' '
  3137  3A30  3425               	retlw	37	;'%'
  3138  3A31  3469               	retlw	105	;'i'
  3139  3A32  3420               	retlw	32	;' '
  3140  3A33  340A               	retlw	10
  3141  3A34  340D               	retlw	13
  3142  3A35  3400               	retlw	0
  3143                           
  3144                           	psect	stringtext20
  3145  3A36                     __pstringtext20:	
  3146  3A36                     STR_15:	
  3147  3A36  3430               	retlw	48	;'0'
  3148  3A37  3478               	retlw	120	;'x'
  3149  3A38  3430               	retlw	48	;'0'
  3150  3A39  3431               	retlw	49	;'1'
  3151  3A3A  3420               	retlw	32	;' '
  3152  3A3B  3443               	retlw	67	;'C'
  3153  3A3C  3445               	retlw	69	;'E'
  3154  3A3D  344C               	retlw	76	;'L'
  3155  3A3E  344C               	retlw	76	;'L'
  3156  3A3F  3442               	retlw	66	;'B'
  3157  3A40  3441               	retlw	65	;'A'
  3158  3A41  344C               	retlw	76	;'L'
  3159  3A42  3431               	retlw	49	;'1'
  3160  3A43  343A               	retlw	58	;':'
  3161  3A44  3420               	retlw	32	;' '
  3162  3A45  3425               	retlw	37	;'%'
  3163  3A46  3469               	retlw	105	;'i'
  3164  3A47  3420               	retlw	32	;' '
  3165  3A48  340A               	retlw	10
  3166  3A49  340D               	retlw	13
  3167  3A4A  3400               	retlw	0
  3168                           
  3169                           	psect	stringtext21
  3170  3A4B                     __pstringtext21:	
  3171  3A4B                     STR_18:	
  3172  3A4B  3430               	retlw	48	;'0'
  3173  3A4C  3478               	retlw	120	;'x'
  3174  3A4D  3430               	retlw	48	;'0'
  3175  3A4E  3436               	retlw	54	;'6'
  3176  3A4F  3420               	retlw	32	;' '
  3177  3A50  3450               	retlw	80	;'P'
  3178  3A51  3452               	retlw	82	;'R'
  3179  3A52  344F               	retlw	79	;'O'
  3180  3A53  3454               	retlw	84	;'T'
  3181  3A54  3445               	retlw	69	;'E'
  3182  3A55  3443               	retlw	67	;'C'
  3183  3A56  3454               	retlw	84	;'T'
  3184  3A57  3431               	retlw	49	;'1'
  3185  3A58  343A               	retlw	58	;':'
  3186  3A59  3420               	retlw	32	;' '
  3187  3A5A  3425               	retlw	37	;'%'
  3188  3A5B  3469               	retlw	105	;'i'
  3189  3A5C  3420               	retlw	32	;' '
  3190  3A5D  340A               	retlw	10
  3191  3A5E  340D               	retlw	13
  3192  3A5F  3400               	retlw	0
  3193                           
  3194                           	psect	stringtext22
  3195  3A60                     __pstringtext22:	
  3196  3A60                     STR_19:	
  3197  3A60  3430               	retlw	48	;'0'
  3198  3A61  3478               	retlw	120	;'x'
  3199  3A62  3430               	retlw	48	;'0'
  3200  3A63  3437               	retlw	55	;'7'
  3201  3A64  3420               	retlw	32	;' '
  3202  3A65  3450               	retlw	80	;'P'
  3203  3A66  3452               	retlw	82	;'R'
  3204  3A67  344F               	retlw	79	;'O'
  3205  3A68  3454               	retlw	84	;'T'
  3206  3A69  3445               	retlw	69	;'E'
  3207  3A6A  3443               	retlw	67	;'C'
  3208  3A6B  3454               	retlw	84	;'T'
  3209  3A6C  3432               	retlw	50	;'2'
  3210  3A6D  343A               	retlw	58	;':'
  3211  3A6E  3420               	retlw	32	;' '
  3212  3A6F  3425               	retlw	37	;'%'
  3213  3A70  3469               	retlw	105	;'i'
  3214  3A71  3420               	retlw	32	;' '
  3215  3A72  340A               	retlw	10
  3216  3A73  340D               	retlw	13
  3217  3A74  3400               	retlw	0
  3218                           
  3219                           	psect	stringtext23
  3220  3A75                     __pstringtext23:	
  3221  3A75                     STR_20:	
  3222  3A75  3430               	retlw	48	;'0'
  3223  3A76  3478               	retlw	120	;'x'
  3224  3A77  3430               	retlw	48	;'0'
  3225  3A78  3438               	retlw	56	;'8'
  3226  3A79  3420               	retlw	32	;' '
  3227  3A7A  3450               	retlw	80	;'P'
  3228  3A7B  3452               	retlw	82	;'R'
  3229  3A7C  344F               	retlw	79	;'O'
  3230  3A7D  3454               	retlw	84	;'T'
  3231  3A7E  3445               	retlw	69	;'E'
  3232  3A7F  3443               	retlw	67	;'C'
  3233  3A80  3454               	retlw	84	;'T'
  3234  3A81  3433               	retlw	51	;'3'
  3235  3A82  343A               	retlw	58	;':'
  3236  3A83  3420               	retlw	32	;' '
  3237  3A84  3425               	retlw	37	;'%'
  3238  3A85  3469               	retlw	105	;'i'
  3239  3A86  3420               	retlw	32	;' '
  3240  3A87  340A               	retlw	10
  3241  3A88  340D               	retlw	13
  3242  3A89  3400               	retlw	0
  3243                           
  3244                           	psect	stringtext24
  3245  3A8A                     __pstringtext24:	
  3246  3A8A                     STR_14:	
  3247  3A8A  3430               	retlw	48	;'0'
  3248  3A8B  3478               	retlw	120	;'x'
  3249  3A8C  3430               	retlw	48	;'0'
  3250  3A8D  3430               	retlw	48	;'0'
  3251  3A8E  3420               	retlw	32	;' '
  3252  3A8F  3453               	retlw	83	;'S'
  3253  3A90  3459               	retlw	89	;'Y'
  3254  3A91  3453               	retlw	83	;'S'
  3255  3A92  345F               	retlw	95	;'_'
  3256  3A93  3453               	retlw	83	;'S'
  3257  3A94  3454               	retlw	84	;'T'
  3258  3A95  3441               	retlw	65	;'A'
  3259  3A96  3454               	retlw	84	;'T'
  3260  3A97  343A               	retlw	58	;':'
  3261  3A98  3420               	retlw	32	;' '
  3262  3A99  3425               	retlw	37	;'%'
  3263  3A9A  3469               	retlw	105	;'i'
  3264  3A9B  3420               	retlw	32	;' '
  3265  3A9C  340A               	retlw	10
  3266  3A9D  340D               	retlw	13
  3267  3A9E  3400               	retlw	0
  3268                           
  3269                           	psect	stringtext25
  3270  3A9F                     __pstringtext25:	
  3271  3A9F                     STR_21:	
  3272  3A9F  3430               	retlw	48	;'0'
  3273  3AA0  3478               	retlw	120	;'x'
  3274  3AA1  3430               	retlw	48	;'0'
  3275  3AA2  3439               	retlw	57	;'9'
  3276  3AA3  3420               	retlw	32	;' '
  3277  3AA4  344F               	retlw	79	;'O'
  3278  3AA5  3456               	retlw	86	;'V'
  3279  3AA6  345F               	retlw	95	;'_'
  3280  3AA7  3454               	retlw	84	;'T'
  3281  3AA8  3452               	retlw	82	;'R'
  3282  3AA9  3449               	retlw	73	;'I'
  3283  3AAA  3450               	retlw	80	;'P'
  3284  3AAB  343A               	retlw	58	;':'
  3285  3AAC  3420               	retlw	32	;' '
  3286  3AAD  3425               	retlw	37	;'%'
  3287  3AAE  3469               	retlw	105	;'i'
  3288  3AAF  3420               	retlw	32	;' '
  3289  3AB0  340A               	retlw	10
  3290  3AB1  340D               	retlw	13
  3291  3AB2  3400               	retlw	0
  3292                           
  3293                           	psect	stringtext26
  3294  3AB3                     __pstringtext26:	
  3295  3AB3                     STR_22:	
  3296  3AB3  3430               	retlw	48	;'0'
  3297  3AB4  3478               	retlw	120	;'x'
  3298  3AB5  3430               	retlw	48	;'0'
  3299  3AB6  3441               	retlw	65	;'A'
  3300  3AB7  3420               	retlw	32	;' '
  3301  3AB8  3455               	retlw	85	;'U'
  3302  3AB9  3456               	retlw	86	;'V'
  3303  3ABA  345F               	retlw	95	;'_'
  3304  3ABB  3454               	retlw	84	;'T'
  3305  3ABC  3452               	retlw	82	;'R'
  3306  3ABD  3449               	retlw	73	;'I'
  3307  3ABE  3450               	retlw	80	;'P'
  3308  3ABF  343A               	retlw	58	;':'
  3309  3AC0  3420               	retlw	32	;' '
  3310  3AC1  3425               	retlw	37	;'%'
  3311  3AC2  3469               	retlw	105	;'i'
  3312  3AC3  3420               	retlw	32	;' '
  3313  3AC4  340A               	retlw	10
  3314  3AC5  340D               	retlw	13
  3315  3AC6  3400               	retlw	0
  3316                           
  3317                           	psect	stringtext27
  3318  3AC7                     __pstringtext27:	
  3319  3AC7                     STR_23:	
  3320  3AC7  3430               	retlw	48	;'0'
  3321  3AC8  3478               	retlw	120	;'x'
  3322  3AC9  3430               	retlw	48	;'0'
  3323  3ACA  3442               	retlw	66	;'B'
  3324  3ACB  3420               	retlw	32	;' '
  3325  3ACC  3443               	retlw	67	;'C'
  3326  3ACD  3443               	retlw	67	;'C'
  3327  3ACE  345F               	retlw	95	;'_'
  3328  3ACF  3443               	retlw	67	;'C'
  3329  3AD0  3446               	retlw	70	;'F'
  3330  3AD1  3447               	retlw	71	;'G'
  3331  3AD2  343A               	retlw	58	;':'
  3332  3AD3  3420               	retlw	32	;' '
  3333  3AD4  3425               	retlw	37	;'%'
  3334  3AD5  3469               	retlw	105	;'i'
  3335  3AD6  3420               	retlw	32	;' '
  3336  3AD7  340A               	retlw	10
  3337  3AD8  340D               	retlw	13
  3338  3AD9  3400               	retlw	0
  3339                           
  3340                           	psect	stringtext28
  3341  3ADA                     __pstringtext28:	
  3342  3ADA                     STR_24:	
  3343  3ADA  3430               	retlw	48	;'0'
  3344  3ADB  3478               	retlw	120	;'x'
  3345  3ADC  3433               	retlw	51	;'3'
  3346  3ADD  3432               	retlw	50	;'2'
  3347  3ADE  3420               	retlw	32	;' '
  3348  3ADF  3443               	retlw	67	;'C'
  3349  3AE0  3443               	retlw	67	;'C'
  3350  3AE1  345F               	retlw	95	;'_'
  3351  3AE2  3448               	retlw	72	;'H'
  3352  3AE3  3449               	retlw	73	;'I'
  3353  3AE4  343A               	retlw	58	;':'
  3354  3AE5  3420               	retlw	32	;' '
  3355  3AE6  3425               	retlw	37	;'%'
  3356  3AE7  3469               	retlw	105	;'i'
  3357  3AE8  3420               	retlw	32	;' '
  3358  3AE9  340A               	retlw	10
  3359  3AEA  340D               	retlw	13
  3360  3AEB  3400               	retlw	0
  3361                           
  3362                           	psect	stringtext29
  3363  3AEC                     __pstringtext29:	
  3364  3AEC                     STR_25:	
  3365  3AEC  3430               	retlw	48	;'0'
  3366  3AED  3478               	retlw	120	;'x'
  3367  3AEE  3433               	retlw	51	;'3'
  3368  3AEF  3433               	retlw	51	;'3'
  3369  3AF0  3420               	retlw	32	;' '
  3370  3AF1  3443               	retlw	67	;'C'
  3371  3AF2  3443               	retlw	67	;'C'
  3372  3AF3  345F               	retlw	95	;'_'
  3373  3AF4  344C               	retlw	76	;'L'
  3374  3AF5  344F               	retlw	79	;'O'
  3375  3AF6  343A               	retlw	58	;':'
  3376  3AF7  3420               	retlw	32	;' '
  3377  3AF8  3425               	retlw	37	;'%'
  3378  3AF9  3469               	retlw	105	;'i'
  3379  3AFA  3420               	retlw	32	;' '
  3380  3AFB  340A               	retlw	10
  3381  3AFC  340D               	retlw	13
  3382  3AFD  3400               	retlw	0
  3383                           
  3384                           	psect	stringtext30
  3385  3B36                     __pstringtext30:	
  3386  3B36                     STR_27:	
  3387  3B36  3449               	retlw	73	;'I'
  3388  3B37  344E               	retlw	78	;'N'
  3389  3B38  3446               	retlw	70	;'F'
  3390  3B39  3400               	retlw	0
  3391                           
  3392                           	psect	stringtext31
  3393  3B3A                     __pstringtext31:	
  3394  3B3A                     STR_31:	
  3395  3B3A  344E               	retlw	78	;'N'
  3396  3B3B  3441               	retlw	65	;'A'
  3397  3B3C  344E               	retlw	78	;'N'
  3398  3B3D  3400               	retlw	0
  3399                           
  3400                           	psect	stringtext32
  3401  3B3E                     __pstringtext32:	
  3402  3B3E                     STR_140:	
  3403  3B3E  3468               	retlw	104	;'h'
  3404  3B3F  3468               	retlw	104	;'h'
  3405  3B40  3458               	retlw	88	;'X'
  3406  3B41  3400               	retlw	0
  3407                           
  3408                           	psect	stringtext33
  3409  3B42                     __pstringtext33:	
  3410  3B42                     STR_35:	
  3411  3B42  3468               	retlw	104	;'h'
  3412  3B43  3468               	retlw	104	;'h'
  3413  3B44  3464               	retlw	100	;'d'
  3414  3B45  3400               	retlw	0
  3415                           
  3416                           	psect	stringtext34
  3417  3B46                     __pstringtext34:	
  3418  3B46                     STR_28:	
  3419  3B46  3469               	retlw	105	;'i'
  3420  3B47  346E               	retlw	110	;'n'
  3421  3B48  3466               	retlw	102	;'f'
  3422  3B49  3400               	retlw	0
  3423                           
  3424                           	psect	stringtext35
  3425  3B4A                     __pstringtext35:	
  3426  3B4A                     STR_39:	
  3427  3B4A  3468               	retlw	104	;'h'
  3428  3B4B  3468               	retlw	104	;'h'
  3429  3B4C  3469               	retlw	105	;'i'
  3430  3B4D  3400               	retlw	0
  3431                           
  3432                           	psect	stringtext36
  3433  3B4E                     __pstringtext36:	
  3434  3B4E                     STR_32:	
  3435  3B4E  346E               	retlw	110	;'n'
  3436  3B4F  3461               	retlw	97	;'a'
  3437  3B50  346E               	retlw	110	;'n'
  3438  3B51  3400               	retlw	0
  3439                           
  3440                           	psect	stringtext37
  3441  3B52                     __pstringtext37:	
  3442  3B52                     STR_96:	
  3443  3B52  3468               	retlw	104	;'h'
  3444  3B53  3468               	retlw	104	;'h'
  3445  3B54  346E               	retlw	110	;'n'
  3446  3B55  3400               	retlw	0
  3447                           
  3448                           	psect	stringtext38
  3449  3B56                     __pstringtext38:	
  3450  3B56                     STR_76:	
  3451  3B56  3468               	retlw	104	;'h'
  3452  3B57  3468               	retlw	104	;'h'
  3453  3B58  346F               	retlw	111	;'o'
  3454  3B59  3400               	retlw	0
  3455                           
  3456                           	psect	stringtext39
  3457  3B5A                     __pstringtext39:	
  3458  3B5A                     STR_116:	
  3459  3B5A  3468               	retlw	104	;'h'
  3460  3B5B  3468               	retlw	104	;'h'
  3461  3B5C  3475               	retlw	117	;'u'
  3462  3B5D  3400               	retlw	0
  3463                           
  3464                           	psect	stringtext40
  3465  3B5E                     __pstringtext40:	
  3466  3B5E                     STR_136:	
  3467  3B5E  3468               	retlw	104	;'h'
  3468  3B5F  3468               	retlw	104	;'h'
  3469  3B60  3478               	retlw	120	;'x'
  3470  3B61  3400               	retlw	0
  3471                           
  3472                           	psect	stringtext41
  3473  3B62                     __pstringtext41:	
  3474  3B62                     STR_158:	
  3475  3B62  346C               	retlw	108	;'l'
  3476  3B63  3458               	retlw	88	;'X'
  3477  3B64  3400               	retlw	0
  3478                           
  3479                           	psect	stringtext42
  3480  3B65                     __pstringtext42:	
  3481  3B65                     STR_167:	
  3482  3B65  347A               	retlw	122	;'z'
  3483  3B66  3458               	retlw	88	;'X'
  3484  3B67  3400               	retlw	0
  3485                           
  3486                           	psect	stringtext43
  3487  3B68                     __pstringtext43:	
  3488  3B68                     STR_53:	
  3489  3B68  346C               	retlw	108	;'l'
  3490  3B69  3464               	retlw	100	;'d'
  3491  3B6A  3400               	retlw	0
  3492                           
  3493                           	psect	stringtext44
  3494  3B6B                     __pstringtext44:	
  3495  3B6B                     STR_62:	
  3496  3B6B  347A               	retlw	122	;'z'
  3497  3B6C  3464               	retlw	100	;'d'
  3498  3B6D  3400               	retlw	0
  3499                           
  3500                           	psect	stringtext45
  3501  3B6E                     __pstringtext45:	
  3502  3B6E                     STR_71:	
  3503  3B6E  346C               	retlw	108	;'l'
  3504  3B6F  3466               	retlw	102	;'f'
  3505  3B70  3400               	retlw	0
  3506                           
  3507                           	psect	stringtext46
  3508  3B71                     __pstringtext46:	
  3509  3B71                     STR_57:	
  3510  3B71  346C               	retlw	108	;'l'
  3511  3B72  3469               	retlw	105	;'i'
  3512  3B73  3400               	retlw	0
  3513                           
  3514                           	psect	stringtext47
  3515  3B74                     __pstringtext47:	
  3516  3B74                     STR_66:	
  3517  3B74  347A               	retlw	122	;'z'
  3518  3B75  3469               	retlw	105	;'i'
  3519  3B76  3400               	retlw	0
  3520                           
  3521                           	psect	stringtext48
  3522  3B77                     __pstringtext48:	
  3523  3B77                     STR_106:	
  3524  3B77  346C               	retlw	108	;'l'
  3525  3B78  346E               	retlw	110	;'n'
  3526  3B79  3400               	retlw	0
  3527                           
  3528                           	psect	stringtext49
  3529  3B7A                     __pstringtext49:	
  3530  3B7A                     STR_111:	
  3531  3B7A  347A               	retlw	122	;'z'
  3532  3B7B  346E               	retlw	110	;'n'
  3533  3B7C  3400               	retlw	0
  3534                           
  3535                           	psect	stringtext50
  3536  3B7D                     __pstringtext50:	
  3537  3B7D                     STR_86:	
  3538  3B7D  346C               	retlw	108	;'l'
  3539  3B7E  346F               	retlw	111	;'o'
  3540  3B7F  3400               	retlw	0
  3541                           
  3542                           	psect	stringtext51
  3543  3B80                     __pstringtext51:	
  3544  3B80                     STR_91:	
  3545  3B80  347A               	retlw	122	;'z'
  3546  3B81  346F               	retlw	111	;'o'
  3547  3B82  3400               	retlw	0
  3548                           
  3549                           	psect	stringtext52
  3550  3B83                     __pstringtext52:	
  3551  3B83                     STR_126:	
  3552  3B83  346C               	retlw	108	;'l'
  3553  3B84  3475               	retlw	117	;'u'
  3554  3B85  3400               	retlw	0
  3555                           
  3556                           	psect	stringtext53
  3557  3B86                     __pstringtext53:	
  3558  3B86                     STR_131:	
  3559  3B86  347A               	retlw	122	;'z'
  3560  3B87  3475               	retlw	117	;'u'
  3561  3B88  3400               	retlw	0
  3562                           
  3563                           	psect	stringtext54
  3564  3B89                     __pstringtext54:	
  3565  3B89                     STR_154:	
  3566  3B89  346C               	retlw	108	;'l'
  3567  3B8A  3478               	retlw	120	;'x'
  3568  3B8B  3400               	retlw	0
  3569                           
  3570                           	psect	stringtext55
  3571  3B8C                     __pstringtext55:	
  3572  3B8C                     STR_163:	
  3573  3B8C  347A               	retlw	122	;'z'
  3574  3B8D  3478               	retlw	120	;'x'
  3575  3B8E  3400               	retlw	0
  3576                           
  3577                           	psect	stringtext56
  3578  0000                     __pstringtext56:	
  3579  39C1                     
  3580                           ; #config settings
  3581  0000                     
  3582                           	psect	cinit
  3583  0020                     start_initialization:	
  3584  0020                     __initialization:		;BIGRAM
  3585                           
  3586                           ; Initialize objects allocated to BANK4
  3587  0020  3035               	movlw	low __pidataBANK4
  3588  0021  0084               	movwf	4
  3589  0022  30BE               	movlw	(high __pidataBANK4)| (0+128)
  3590  0023  0085               	movwf	5
  3591  0024  0024               	movlb	4	; select bank4
  3592  0025  0012               	moviw fsr0++
  3593  0026  00B2               	movwf	__pdataBANK4& (0+127)
  3594  0027  0012               	moviw fsr0++
  3595  0028  00B3               	movwf	(__pdataBANK4+1)& (0+127)
  3596  0029  0012               	moviw fsr0++
  3597  002A  00B4               	movwf	(__pdataBANK4+2)& (0+127)
  3598  002B  0012               	moviw fsr0++
  3599  002C  00B5               	movwf	(__pdataBANK4+3)& (0+127)
  3600  002D  0012               	moviw fsr0++
  3601  002E  00B6               	movwf	(__pdataBANK4+4)& (0+127)
  3602  002F  0012               	moviw fsr0++
  3603  0030  00B7               	movwf	(__pdataBANK4+5)& (0+127)
  3604  0031  0012               	moviw fsr0++
  3605  0032  00B8               	movwf	(__pdataBANK4+6)& (0+127)
  3606                           
  3607                           ; Clear objects allocated to BIGRAM
  3608  0033  3071               	movlw	low (0+10097)
  3609  0034  0084               	movwf	4
  3610  0035  3027               	movlw	high (0+10097)
  3611  0036  0085               	movwf	5
  3612  0037  307F               	movlw	127
  3613  0038  00FE               	movwf	btemp
  3614  0039  3000               	movlw	0
  3615  003A  00FF               	movwf	btemp+1
  3616  003B  3188  2000  3180   	fcall	clear_ram0
  3617                           
  3618                           ; Clear objects allocated to COMMON
  3619  003E  01FC               	clrf	__pbssCOMMON& (0+127)
  3620                           
  3621                           ; Clear objects allocated to BANK3
  3622  003F  30A0               	movlw	low __pbssBANK3
  3623  0040  0084               	movwf	4
  3624  0041  3001               	movlw	high __pbssBANK3
  3625  0042  0085               	movwf	5
  3626  0043  3037               	movlw	55
  3627  0044  00FE               	movwf	btemp
  3628  0045  3000               	movlw	0
  3629  0046  00FF               	movwf	btemp+1
  3630  0047  3188  2000  3180   	fcall	clear_ram0
  3631                           
  3632                           ; Clear objects allocated to BANK4
  3633  004A  3020               	movlw	low __pbssBANK4
  3634  004B  0084               	movwf	4
  3635  004C  3002               	movlw	high __pbssBANK4
  3636  004D  0085               	movwf	5
  3637  004E  3012               	movlw	18
  3638  004F  00FE               	movwf	btemp
  3639  0050  3000               	movlw	0
  3640  0051  00FF               	movwf	btemp+1
  3641  0052  3188  2000  3180   	fcall	clear_ram0
  3642                           
  3643                           ; Clear objects allocated to BANK5
  3644  0055  30A0               	movlw	low __pbssBANK5
  3645  0056  0084               	movwf	4
  3646  0057  3002               	movlw	high __pbssBANK5
  3647  0058  0085               	movwf	5
  3648  0059  3050               	movlw	80
  3649  005A  00FE               	movwf	btemp
  3650  005B  3000               	movlw	0
  3651  005C  00FF               	movwf	btemp+1
  3652  005D  3188  2000         	fcall	clear_ram0
  3653  005F                     end_of_initialization:	
  3654                           ;End of C runtime variable initialization code
  3655                           
  3656  005F                     __end_of__initialization:	
  3657  005F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3658  0060  0020               	movlb	0
  3659  0061  31B1  2919         	ljmp	_main	;jump to C main() function
  3660                           
  3661                           	psect	bssCOMMON
  3662  007C                     __pbssCOMMON:	
  3663  007C                     _toggleColor:	
  3664  007C                     	ds	1
  3665                           
  3666                           	psect	bssBANK3
  3667  01A0                     __pbssBANK3:	
  3668  01A0                     floorf@F524:	
  3669  01A0                     	ds	4
  3670  01A4                     ___fpclassifyf@F463:	
  3671  01A4                     	ds	4
  3672  01A8                     BQ76920@shuntResistorValue_mOhm:	
  3673  01A8                     	ds	4
  3674  01AC                     _batVoltage:	
  3675  01AC                     	ds	4
  3676  01B0                     _errno:	
  3677  01B0                     	ds	2
  3678  01B2                     _nout:	
  3679  01B2                     	ds	2
  3680  01B4                     _width:	
  3681  01B4                     	ds	2
  3682  01B6                     _prec:	
  3683  01B6                     	ds	2
  3684  01B8                     _flags:	
  3685  01B8                     	ds	2
  3686  01BA                     _temperatures:	
  3687  01BA                     	ds	2
  3688  01BC                     _minCellVoltage:	
  3689  01BC                     	ds	2
  3690  01BE                     _maxCellVoltage:	
  3691  01BE                     	ds	2
  3692  01C0                     _numberOfCells:	
  3693  01C0                     	ds	2
  3694  01C2                     _maxCellTempDischarge:	
  3695  01C2                     	ds	2
  3696  01C4                     _maxCellTempCharge:	
  3697  01C4                     	ds	2
  3698  01C6                     _minCellTempDischarge:	
  3699  01C6                     	ds	2
  3700  01C8                     _minCellTempCharge:	
  3701  01C8                     	ds	2
  3702  01CA                     _adcOffset:	
  3703  01CA                     	ds	2
  3704  01CC                     BQ76920@protect3:	
  3705  01CC                     	ds	1
  3706  01CD                     BQ76920@protect2:	
  3707  01CD                     	ds	1
  3708  01CE                     BQ76920@protect1:	
  3709  01CE                     	ds	1
  3710  01CF                     myIsr@count:	
  3711  01CF                     	ds	1
  3712  01D0                     _tmr1_flag:	
  3713  01D0                     	ds	1
  3714  01D1                     _currState:	
  3715  01D1                     	ds	1
  3716  01D2                     _protect3:	
  3717  01D2                     	ds	1
  3718  01D3                     _protect2:	
  3719  01D3                     	ds	1
  3720  01D4                     _protect1:	
  3721  01D4                     	ds	1
  3722  01D5                     _adcGain:	
  3723  01D5                     	ds	2
  3724                           
  3725                           	psect	bssBANK4
  3726  0220                     __pbssBANK4:	
  3727  0220                     _cellVoltages:	
  3728  0220                     	ds	10
  3729  022A                     _shuntResistorValue_mOhm:	
  3730  022A                     	ds	4
  3731  022E                     _batCurrent:	
  3732  022E                     	ds	4
  3733                           
  3734                           	psect	dataBANK4
  3735  0232                     __pdataBANK4:	
  3736  0232                     stoa@F1174:	
  3737  0232                     	ds	7
  3738                           
  3739                           	psect	bssBANK5
  3740  02A0                     __pbssBANK5:	
  3741  02A0                     _dbuf:	
  3742  02A0                     	ds	80
  3743                           
  3744                           	psect	clrtext
  3745  0800                     clear_ram0:	
  3746                           ;	Called with FSR0 containing the base address, and
  3747                           ;	btemp/btemp+1 has the size to clear
  3748                           
  3749  0800  0064               	clrwdt	;clear the watchdog before getting into this loop
  3750  0801                     clrloop0:	
  3751  0801  0180               	clrf	0	;clear RAM location pointed to by FSR
  3752  0802  3101               	addfsr 0,1
  3753  0803  3001               	movlw	1
  3754  0804  02FE               	subwf	126,f
  3755  0805  3000               	movlw	0
  3756  0806  3BFF               	subwfb	127,f
  3757  0807  087F               	movf	127,w
  3758  0808  047E               	iorwf	126,w
  3759  0809  1903               	btfsc	3,2
  3760  080A  3400               	retlw	0	;all done for this memory range, return
  3761  080B  2801               	goto	clrloop0	;have we reached the end yet?
  3762                           
  3763                           	psect	cstackBANK3
  3764  01D7                     __pcstackBANK3:	
  3765  01D7                     ?_snprintf:	
  3766  01D7                     snprintf@s:	
  3767                           ; 2 bytes @ 0x0
  3768                           
  3769                           
  3770                           ; 2 bytes @ 0x0
  3771  01D7                     	ds	2
  3772  01D9                     snprintf@n:	
  3773                           
  3774                           ; 2 bytes @ 0x2
  3775  01D9                     	ds	2
  3776  01DB                     snprintf@fmt:	
  3777                           
  3778                           ; 2 bytes @ 0x4
  3779  01DB                     	ds	16
  3780  01EB                     ??_main:	
  3781                           
  3782                           ; 1 bytes @ 0x14
  3783  01EB                     	ds	2
  3784                           
  3785                           	psect	cstackBANK2
  3786  0120                     __pcstackBANK2:	
  3787  0120                     ??_vfpfcnvrt:	
  3788                           
  3789                           ; 1 bytes @ 0x0
  3790  0120                     	ds	12
  3791  012C                     vfpfcnvrt@cp:	
  3792                           
  3793                           ; 1 bytes @ 0xC
  3794  012C                     	ds	1
  3795  012D                     vfpfcnvrt@done:	
  3796                           
  3797                           ; 2 bytes @ 0xD
  3798  012D                     	ds	2
  3799  012F                     _vfpfcnvrt$1289:	
  3800                           
  3801                           ; 2 bytes @ 0xF
  3802  012F                     	ds	2
  3803  0131                     _vfpfcnvrt$1290:	
  3804                           
  3805                           ; 2 bytes @ 0x11
  3806  0131                     	ds	2
  3807  0133                     _vfpfcnvrt$1316:	
  3808                           
  3809                           ; 2 bytes @ 0x13
  3810  0133                     	ds	2
  3811  0135                     vfpfcnvrt@ct:	
  3812                           
  3813                           ; 3 bytes @ 0x15
  3814  0135                     	ds	3
  3815  0138                     vfpfcnvrt@f:	
  3816                           
  3817                           ; 4 bytes @ 0x18
  3818  0138                     	ds	4
  3819  013C                     vfpfcnvrt@ll:	
  3820                           
  3821                           ; 8 bytes @ 0x1C
  3822  013C                     	ds	8
  3823  0144                     vfpfcnvrt@vp:	
  3824                           
  3825                           ; 1 bytes @ 0x24
  3826  0144                     	ds	1
  3827  0145                     vfpfcnvrt@c:	
  3828                           
  3829                           ; 1 bytes @ 0x25
  3830  0145                     	ds	1
  3831  0146                     vfpfcnvrt@llu:	
  3832                           
  3833                           ; 8 bytes @ 0x26
  3834  0146                     	ds	8
  3835  014E                     ?_vfprintf:	
  3836  014E                     vfprintf@fp:	
  3837                           ; 2 bytes @ 0x2E
  3838                           
  3839                           
  3840                           ; 2 bytes @ 0x2E
  3841  014E                     	ds	2
  3842  0150                     vfprintf@fmt:	
  3843                           
  3844                           ; 2 bytes @ 0x30
  3845  0150                     	ds	2
  3846  0152                     vfprintf@ap:	
  3847                           
  3848                           ; 1 bytes @ 0x32
  3849  0152                     	ds	1
  3850  0153                     vfprintf@cfmt:	
  3851                           
  3852                           ; 2 bytes @ 0x33
  3853  0153                     	ds	2
  3854  0155                     ?_vsnprintf:	
  3855  0155                     vsnprintf@s:	
  3856                           ; 2 bytes @ 0x35
  3857                           
  3858                           
  3859                           ; 2 bytes @ 0x35
  3860  0155                     	ds	2
  3861  0157                     vsnprintf@n:	
  3862                           
  3863                           ; 2 bytes @ 0x37
  3864  0157                     	ds	2
  3865  0159                     vsnprintf@fmt:	
  3866                           
  3867                           ; 2 bytes @ 0x39
  3868  0159                     	ds	2
  3869  015B                     vsnprintf@ap:	
  3870                           
  3871                           ; 1 bytes @ 0x3B
  3872  015B                     	ds	1
  3873  015C                     ??_vsnprintf:	
  3874                           
  3875                           ; 1 bytes @ 0x3C
  3876  015C                     	ds	2
  3877  015E                     _vsnprintf$1918:	
  3878                           
  3879                           ; 2 bytes @ 0x3E
  3880  015E                     	ds	2
  3881  0160                     vsnprintf@cnt:	
  3882                           
  3883                           ; 2 bytes @ 0x40
  3884  0160                     	ds	2
  3885  0162                     vsnprintf@f:	
  3886                           
  3887                           ; 6 bytes @ 0x42
  3888  0162                     	ds	6
  3889  0168                     ??_snprintf:	
  3890                           
  3891                           ; 1 bytes @ 0x48
  3892  0168                     	ds	3
  3893  016B                     snprintf@ap:	
  3894                           
  3895                           ; 1 bytes @ 0x4B
  3896  016B                     	ds	1
  3897  016C                     ??_printotAFERegisters:	
  3898                           
  3899                           ; 1 bytes @ 0x4C
  3900  016C                     	ds	1
  3901  016D                     ??_statemachine:	
  3902                           
  3903                           ; 1 bytes @ 0x4D
  3904  016D                     	ds	2
  3905  016F                     statemachine@success:	
  3906                           
  3907                           ; 1 bytes @ 0x4F
  3908  016F                     	ds	1
  3909                           
  3910                           	psect	cstackBANK1
  3911  00A0                     __pcstackBANK1:	
  3912  00A0                     ?___fltol:	
  3913  00A0                     ?___flsub:	
  3914                           ; 4 bytes @ 0x0
  3915                           
  3916  00A0                     setShortCircuitProtection@scaler:	
  3917                           ; 4 bytes @ 0x0
  3918                           
  3919  00A0                     setOverCurrentDischargeProtection@scaler:	
  3920                           ; 4 bytes @ 0x0
  3921                           
  3922  00A0                     ___fltol@f1:	
  3923                           ; 4 bytes @ 0x0
  3924                           
  3925  00A0                     ___flsub@a:	
  3926                           ; 4 bytes @ 0x0
  3927                           
  3928                           
  3929                           ; 4 bytes @ 0x0
  3930  00A0                     	ds	4
  3931  00A4                     ??___fltol:	
  3932  00A4                     ___flsub@b:	
  3933                           ; 1 bytes @ 0x4
  3934                           
  3935  00A4                     _setShortCircuitProtection$2111:	
  3936                           ; 4 bytes @ 0x4
  3937                           
  3938  00A4                     _setOverCurrentDischargeProtection$2112:	
  3939                           ; 4 bytes @ 0x4
  3940                           
  3941                           
  3942                           ; 4 bytes @ 0x4
  3943  00A4                     	ds	4
  3944  00A8                     setShortCircuitProtection@i:	
  3945  00A8                     setOverCurrentDischargeProtection@i:	
  3946                           ; 2 bytes @ 0x8
  3947                           
  3948                           
  3949                           ; 2 bytes @ 0x8
  3950  00A8                     	ds	1
  3951  00A9                     ??_updateVoltages:	
  3952  00A9                     ?_efgtoa:	
  3953                           ; 1 bytes @ 0x9
  3954                           
  3955  00A9                     ?_AFE_getSetShortCircuitCurrent:	
  3956                           ; 2 bytes @ 0x9
  3957                           
  3958  00A9                     ?_AFE_getOverCurrentDischargeCurrent:	
  3959                           ; 4 bytes @ 0x9
  3960                           
  3961  00A9                     efgtoa@fp:	
  3962                           ; 4 bytes @ 0x9
  3963                           
  3964                           
  3965                           ; 2 bytes @ 0x9
  3966  00A9                     	ds	1
  3967  00AA                     setShortCircuitProtection@i_966:	
  3968  00AA                     setOverCurrentDischargeProtection@i_975:	
  3969                           ; 2 bytes @ 0xA
  3970                           
  3971                           
  3972                           ; 2 bytes @ 0xA
  3973  00AA                     	ds	1
  3974  00AB                     efgtoa@f:	
  3975                           
  3976                           ; 4 bytes @ 0xB
  3977  00AB                     	ds	1
  3978  00AC                     _updateVoltages$2113:	
  3979                           
  3980                           ; 4 bytes @ 0xC
  3981  00AC                     	ds	1
  3982  00AD                     ??_AFE_getSetShortCircuitCurrent:	
  3983  00AD                     ??_AFE_getOverCurrentDischargeCurrent:	
  3984                           ; 1 bytes @ 0xD
  3985                           
  3986                           
  3987                           ; 1 bytes @ 0xD
  3988  00AD                     	ds	2
  3989  00AF                     efgtoa@c:	
  3990                           
  3991                           ; 1 bytes @ 0xF
  3992  00AF                     	ds	1
  3993  00B0                     ??_efgtoa:	
  3994  00B0                     updateVoltages@adcVal:	
  3995                           ; 1 bytes @ 0x10
  3996                           
  3997                           
  3998                           ; 4 bytes @ 0x10
  3999  00B0                     	ds	4
  4000  00B4                     updateVoltages@i:	
  4001  00B4                     efgtoa@ou:	
  4002                           ; 2 bytes @ 0x14
  4003                           
  4004                           
  4005                           ; 4 bytes @ 0x14
  4006  00B4                     	ds	4
  4007  00B8                     _efgtoa$1227:	
  4008                           
  4009                           ; 2 bytes @ 0x18
  4010  00B8                     	ds	2
  4011  00BA                     _efgtoa$1228:	
  4012                           
  4013                           ; 2 bytes @ 0x1A
  4014  00BA                     	ds	2
  4015  00BC                     _efgtoa$1232:	
  4016                           
  4017                           ; 2 bytes @ 0x1C
  4018  00BC                     	ds	2
  4019  00BE                     _efgtoa$1236:	
  4020                           
  4021                           ; 2 bytes @ 0x1E
  4022  00BE                     	ds	2
  4023  00C0                     _efgtoa$1237:	
  4024                           
  4025                           ; 2 bytes @ 0x20
  4026  00C0                     	ds	2
  4027  00C2                     _efgtoa$1238:	
  4028                           
  4029                           ; 2 bytes @ 0x22
  4030  00C2                     	ds	2
  4031  00C4                     efgtoa@t:	
  4032                           
  4033                           ; 2 bytes @ 0x24
  4034  00C4                     	ds	2
  4035  00C6                     efgtoa@pp:	
  4036                           
  4037                           ; 2 bytes @ 0x26
  4038  00C6                     	ds	2
  4039  00C8                     efgtoa@m:	
  4040                           
  4041                           ; 2 bytes @ 0x28
  4042  00C8                     	ds	2
  4043  00CA                     efgtoa@ne:	
  4044                           
  4045                           ; 2 bytes @ 0x2A
  4046  00CA                     	ds	2
  4047  00CC                     efgtoa@d:	
  4048                           
  4049                           ; 2 bytes @ 0x2C
  4050  00CC                     	ds	2
  4051  00CE                     efgtoa@sign:	
  4052                           
  4053                           ; 2 bytes @ 0x2E
  4054  00CE                     	ds	2
  4055  00D0                     efgtoa@p:	
  4056                           
  4057                           ; 2 bytes @ 0x30
  4058  00D0                     	ds	2
  4059  00D2                     efgtoa@nmode:	
  4060                           
  4061                           ; 1 bytes @ 0x32
  4062  00D2                     	ds	1
  4063  00D3                     efgtoa@w:	
  4064                           
  4065                           ; 2 bytes @ 0x33
  4066  00D3                     	ds	2
  4067  00D5                     efgtoa@mode:	
  4068                           
  4069                           ; 1 bytes @ 0x35
  4070  00D5                     	ds	1
  4071  00D6                     efgtoa@h:	
  4072                           
  4073                           ; 4 bytes @ 0x36
  4074  00D6                     	ds	4
  4075  00DA                     efgtoa@l:	
  4076                           
  4077                           ; 4 bytes @ 0x3A
  4078  00DA                     	ds	4
  4079  00DE                     efgtoa@i:	
  4080                           
  4081                           ; 2 bytes @ 0x3E
  4082  00DE                     	ds	2
  4083  00E0                     efgtoa@g:	
  4084                           
  4085                           ; 4 bytes @ 0x40
  4086  00E0                     	ds	4
  4087  00E4                     efgtoa@e:	
  4088                           
  4089                           ; 2 bytes @ 0x44
  4090  00E4                     	ds	2
  4091  00E6                     efgtoa@n:	
  4092                           
  4093                           ; 2 bytes @ 0x46
  4094  00E6                     	ds	2
  4095  00E8                     efgtoa@u:	
  4096                           
  4097                           ; 4 bytes @ 0x48
  4098  00E8                     	ds	4
  4099  00EC                     ?_vfpfcnvrt:	
  4100  00EC                     vfpfcnvrt@fp:	
  4101                           ; 2 bytes @ 0x4C
  4102                           
  4103                           
  4104                           ; 2 bytes @ 0x4C
  4105  00EC                     	ds	2
  4106  00EE                     vfpfcnvrt@fmt:	
  4107                           
  4108                           ; 1 bytes @ 0x4E
  4109  00EE                     	ds	1
  4110  00EF                     vfpfcnvrt@ap:	
  4111                           
  4112                           ; 1 bytes @ 0x4F
  4113  00EF                     	ds	1
  4114                           
  4115                           	psect	cstackCOMMON
  4116  0070                     __pcstackCOMMON:	
  4117  0070                     ?_initClock:	
  4118  0070                     ?_init_GPIO:	
  4119                           ; 1 bytes @ 0x0
  4120                           
  4121  0070                     ?_initWDT:	
  4122                           ; 1 bytes @ 0x0
  4123                           
  4124  0070                     ?_init_I2C:	
  4125                           ; 1 bytes @ 0x0
  4126                           
  4127  0070                     ?_init_TMR1:	
  4128                           ; 1 bytes @ 0x0
  4129                           
  4130  0070                     ?_init_RGB:	
  4131                           ; 1 bytes @ 0x0
  4132                           
  4133  0070                     ?_watchdog_timeout_shutdown:	
  4134                           ; 1 bytes @ 0x0
  4135                           
  4136  0070                     ?_statemachine:	
  4137                           ; 1 bytes @ 0x0
  4138                           
  4139  0070                     ?_RGB_AWAIT_AFE_CONN:	
  4140                           ; 1 bytes @ 0x0
  4141                           
  4142  0070                     ?_init_AFE:	
  4143                           ; 1 bytes @ 0x0
  4144                           
  4145  0070                     ?_printotAFERegisters:	
  4146                           ; 1 bytes @ 0x0
  4147                           
  4148  0070                     ?_AFE_UPDATE:	
  4149                           ; 1 bytes @ 0x0
  4150                           
  4151  0070                     ?_printcellVoltages:	
  4152                           ; 1 bytes @ 0x0
  4153                           
  4154  0070                     ?_internal_16:	
  4155                           ; 1 bytes @ 0x0
  4156                           
  4157  0070                     ?_updateVoltages:	
  4158                           ; 1 bytes @ 0x0
  4159                           
  4160  0070                     ?_shutdown_BMS:	
  4161                           ; 1 bytes @ 0x0
  4162                           
  4163  0070                     ?_putch:	
  4164                           ; 1 bytes @ 0x0
  4165                           
  4166  0070                     ?_myIsr:	
  4167                           ; 1 bytes @ 0x0
  4168                           
  4169  0070                     ??_myIsr:	
  4170                           ; 1 bytes @ 0x0
  4171                           
  4172  0070                     ?_main:	
  4173                           ; 1 bytes @ 0x0
  4174                           
  4175  0070                     ?_EUSART_Write:	
  4176                           ; 1 bytes @ 0x0
  4177                           
  4178  0070                     ?_send_I2C_startBit:	
  4179                           ; 1 bytes @ 0x0
  4180                           
  4181  0070                     ?_send_I2C_stopBit:	
  4182                           ; 1 bytes @ 0x0
  4183                           
  4184  0070                     ?_send_I2C_ACK:	
  4185                           ; 1 bytes @ 0x0
  4186                           
  4187  0070                     ?_send_I2C_NACK:	
  4188                           ; 1 bytes @ 0x0
  4189                           
  4190  0070                     putch@c:	
  4191                           ; 1 bytes @ 0x0
  4192                           
  4193                           
  4194                           ; 1 bytes @ 0x0
  4195  0070                     	ds	1
  4196  0071                     ?___fleq:	
  4197  0071                     ??_initClock:	
  4198                           ; 1 bit 
  4199                           
  4200  0071                     ??_init_GPIO:	
  4201                           ; 1 bytes @ 0x1
  4202                           
  4203  0071                     ??_initWDT:	
  4204                           ; 1 bytes @ 0x1
  4205                           
  4206  0071                     ??_init_I2C:	
  4207                           ; 1 bytes @ 0x1
  4208                           
  4209  0071                     ??_init_TMR1:	
  4210                           ; 1 bytes @ 0x1
  4211                           
  4212  0071                     ??_init_RGB:	
  4213                           ; 1 bytes @ 0x1
  4214                           
  4215  0071                     ?_RGB_color:	
  4216                           ; 1 bytes @ 0x1
  4217                           
  4218  0071                     ??_internal_16:	
  4219                           ; 1 bytes @ 0x1
  4220                           
  4221  0071                     ?_setShuntResistorValue:	
  4222                           ; 1 bytes @ 0x1
  4223                           
  4224  0071                     ??_shutdown_BMS:	
  4225                           ; 1 bytes @ 0x1
  4226                           
  4227  0071                     ?_strcpy:	
  4228                           ; 1 bytes @ 0x1
  4229                           
  4230  0071                     ??_putch:	
  4231                           ; 1 bytes @ 0x1
  4232                           
  4233  0071                     ??_EUSART_Write:	
  4234                           ; 1 bytes @ 0x1
  4235                           
  4236  0071                     ?_send_I2C_data:	
  4237                           ; 1 bytes @ 0x1
  4238                           
  4239  0071                     ?_send_I2C_controlByte:	
  4240                           ; 1 bytes @ 0x1
  4241                           
  4242  0071                     ??_send_I2C_startBit:	
  4243                           ; 1 bytes @ 0x1
  4244                           
  4245  0071                     ??_send_I2C_stopBit:	
  4246                           ; 1 bytes @ 0x1
  4247                           
  4248  0071                     ??_send_I2C_ACK:	
  4249                           ; 1 bytes @ 0x1
  4250                           
  4251  0071                     ??_send_I2C_NACK:	
  4252                           ; 1 bytes @ 0x1
  4253                           
  4254  0071                     ??___aodiv:	
  4255                           ; 1 bytes @ 0x1
  4256                           
  4257  0071                     ??___aomod:	
  4258                           ; 1 bytes @ 0x1
  4259                           
  4260  0071                     ??___lodiv:	
  4261                           ; 1 bytes @ 0x1
  4262                           
  4263  0071                     ??___lomod:	
  4264                           ; 1 bytes @ 0x1
  4265                           
  4266  0071                     ?_fputc:	
  4267                           ; 1 bytes @ 0x1
  4268                           
  4269  0071                     ?_strlen:	
  4270                           ; 2 bytes @ 0x1
  4271                           
  4272  0071                     ?___fpclassifyf:	
  4273                           ; 2 bytes @ 0x1
  4274                           
  4275  0071                     ?_isupper:	
  4276                           ; 2 bytes @ 0x1
  4277                           
  4278  0071                     ?_isalpha:	
  4279                           ; 2 bytes @ 0x1
  4280                           
  4281  0071                     ?_isdigit:	
  4282                           ; 2 bytes @ 0x1
  4283                           
  4284  0071                     ?_strncmp:	
  4285                           ; 2 bytes @ 0x1
  4286                           
  4287  0071                     ?__Umul8_16:	
  4288                           ; 2 bytes @ 0x1
  4289                           
  4290  0071                     ?_isspace:	
  4291                           ; 2 bytes @ 0x1
  4292                           
  4293  0071                     ?_islower:	
  4294                           ; 2 bytes @ 0x1
  4295                           
  4296  0071                     ?_read_I2C_data:	
  4297                           ; 2 bytes @ 0x1
  4298                           
  4299  0071                     ?___wmul:	
  4300                           ; 2 bytes @ 0x1
  4301                           
  4302  0071                     ?___awdiv:	
  4303                           ; 2 bytes @ 0x1
  4304                           
  4305  0071                     ?___awmod:	
  4306                           ; 2 bytes @ 0x1
  4307                           
  4308  0071                     ?_AFE_getSetCurrentSenseRes:	
  4309                           ; 2 bytes @ 0x1
  4310                           
  4311  0071                     ?___lmul:	
  4312                           ; 4 bytes @ 0x1
  4313                           
  4314  0071                     ?___flneg:	
  4315                           ; 4 bytes @ 0x1
  4316                           
  4317  0071                     ?___xxtofl:	
  4318                           ; 4 bytes @ 0x1
  4319                           
  4320  0071                     EUSART_Write@txData:	
  4321                           ; 4 bytes @ 0x1
  4322                           
  4323  0071                     __Umul8_16@multiplicand:	
  4324                           ; 1 bytes @ 0x1
  4325                           
  4326  0071                     send_I2C_data@databyte:	
  4327                           ; 1 bytes @ 0x1
  4328                           
  4329  0071                     send_I2C_controlByte@BlockAddress:	
  4330                           ; 2 bytes @ 0x1
  4331                           
  4332  0071                     RGB_color@color:	
  4333                           ; 2 bytes @ 0x1
  4334                           
  4335  0071                     ___wmul@multiplier:	
  4336                           ; 2 bytes @ 0x1
  4337                           
  4338  0071                     ___awdiv@divisor:	
  4339                           ; 2 bytes @ 0x1
  4340                           
  4341  0071                     ___awmod@divisor:	
  4342                           ; 2 bytes @ 0x1
  4343                           
  4344  0071                     isalpha@c:	
  4345                           ; 2 bytes @ 0x1
  4346                           
  4347  0071                     isdigit@c:	
  4348                           ; 2 bytes @ 0x1
  4349                           
  4350  0071                     isspace@c:	
  4351                           ; 2 bytes @ 0x1
  4352                           
  4353  0071                     isupper@c:	
  4354                           ; 2 bytes @ 0x1
  4355                           
  4356  0071                     fputc@c:	
  4357                           ; 2 bytes @ 0x1
  4358                           
  4359  0071                     strcpy@src:	
  4360                           ; 2 bytes @ 0x1
  4361                           
  4362  0071                     strlen@s:	
  4363                           ; 2 bytes @ 0x1
  4364                           
  4365  0071                     strncmp@_l:	
  4366                           ; 2 bytes @ 0x1
  4367                           
  4368  0071                     islower@c:	
  4369                           ; 2 bytes @ 0x1
  4370                           
  4371  0071                     setShuntResistorValue@res_mOhm:	
  4372                           ; 2 bytes @ 0x1
  4373                           
  4374  0071                     ___lmul@multiplier:	
  4375                           ; 4 bytes @ 0x1
  4376                           
  4377  0071                     ___fleq@ff1:	
  4378                           ; 4 bytes @ 0x1
  4379                           
  4380  0071                     ___flneg@f1:	
  4381                           ; 4 bytes @ 0x1
  4382                           
  4383  0071                     ___xxtofl@val:	
  4384                           ; 4 bytes @ 0x1
  4385                           
  4386  0071                     ___fpclassifyf@x:	
  4387                           ; 4 bytes @ 0x1
  4388                           
  4389                           
  4390                           ; 4 bytes @ 0x1
  4391  0071                     	ds	1
  4392  0072                     ?_EUSART_Write_Text:	
  4393  0072                     ___aodiv@counter:	
  4394                           ; 1 bytes @ 0x2
  4395                           
  4396  0072                     ___aomod@counter:	
  4397                           ; 1 bytes @ 0x2
  4398                           
  4399  0072                     ___lomod@counter:	
  4400                           ; 1 bytes @ 0x2
  4401                           
  4402  0072                     EUSART_Write_Text@text:	
  4403                           ; 1 bytes @ 0x2
  4404                           
  4405  0072                     ___lodiv@quotient:	
  4406                           ; 2 bytes @ 0x2
  4407                           
  4408                           
  4409                           ; 8 bytes @ 0x2
  4410  0072                     	ds	1
  4411  0073                     ??_watchdog_timeout_shutdown:	
  4412  0073                     ??_RGB_AWAIT_AFE_CONN:	
  4413                           ; 1 bytes @ 0x3
  4414                           
  4415  0073                     ??_RGB_color:	
  4416                           ; 1 bytes @ 0x3
  4417                           
  4418  0073                     ??_strlen:	
  4419                           ; 1 bytes @ 0x3
  4420                           
  4421  0073                     ??_isupper:	
  4422                           ; 1 bytes @ 0x3
  4423                           
  4424  0073                     ??_strcpy:	
  4425                           ; 1 bytes @ 0x3
  4426                           
  4427  0073                     ??_isalpha:	
  4428                           ; 1 bytes @ 0x3
  4429                           
  4430  0073                     ??_isdigit:	
  4431                           ; 1 bytes @ 0x3
  4432                           
  4433  0073                     ??__Umul8_16:	
  4434                           ; 1 bytes @ 0x3
  4435                           
  4436  0073                     ??_isspace:	
  4437                           ; 1 bytes @ 0x3
  4438                           
  4439  0073                     ??_islower:	
  4440                           ; 1 bytes @ 0x3
  4441                           
  4442  0073                     ??_send_I2C_data:	
  4443                           ; 1 bytes @ 0x3
  4444                           
  4445  0073                     ??_read_I2C_data:	
  4446                           ; 1 bytes @ 0x3
  4447                           
  4448  0073                     ___aodiv@sign:	
  4449                           ; 1 bytes @ 0x3
  4450                           
  4451  0073                     ___aomod@sign:	
  4452                           ; 1 bytes @ 0x3
  4453                           
  4454  0073                     send_I2C_controlByte@RW_bit:	
  4455                           ; 1 bytes @ 0x3
  4456                           
  4457  0073                     ___wmul@multiplicand:	
  4458                           ; 2 bytes @ 0x3
  4459                           
  4460  0073                     ___awdiv@dividend:	
  4461                           ; 2 bytes @ 0x3
  4462                           
  4463  0073                     ___awmod@dividend:	
  4464                           ; 2 bytes @ 0x3
  4465                           
  4466  0073                     fputc@fp:	
  4467                           ; 2 bytes @ 0x3
  4468                           
  4469  0073                     strlen@a:	
  4470                           ; 2 bytes @ 0x3
  4471                           
  4472  0073                     strncmp@_r:	
  4473                           ; 2 bytes @ 0x3
  4474                           
  4475                           
  4476                           ; 2 bytes @ 0x3
  4477  0073                     	ds	1
  4478  0074                     ??_EUSART_Write_Text:	
  4479  0074                     ?_abs:	
  4480                           ; 1 bytes @ 0x4
  4481                           
  4482  0074                     abs@a:	
  4483                           ; 2 bytes @ 0x4
  4484                           
  4485  0074                     ___aodiv@quotient:	
  4486                           ; 2 bytes @ 0x4
  4487                           
  4488                           
  4489                           ; 8 bytes @ 0x4
  4490  0074                     	ds	1
  4491  0075                     ??_AFE_getSetCurrentSenseRes:	
  4492  0075                     ??_setShuntResistorValue:	
  4493                           ; 1 bytes @ 0x5
  4494                           
  4495  0075                     ??_fputc:	
  4496                           ; 1 bytes @ 0x5
  4497                           
  4498  0075                     ??___fpclassifyf:	
  4499                           ; 1 bytes @ 0x5
  4500                           
  4501  0075                     ??_send_I2C_controlByte:	
  4502                           ; 1 bytes @ 0x5
  4503                           
  4504  0075                     ?_I2C_writeRegister:	
  4505                           ; 1 bytes @ 0x5
  4506                           
  4507  0075                     ??___wmul:	
  4508                           ; 1 bytes @ 0x5
  4509                           
  4510  0075                     ??___awdiv:	
  4511                           ; 1 bytes @ 0x5
  4512                           
  4513  0075                     ??___awmod:	
  4514                           ; 1 bytes @ 0x5
  4515                           
  4516  0075                     ??___flneg:	
  4517                           ; 1 bytes @ 0x5
  4518                           
  4519  0075                     ??___xxtofl:	
  4520                           ; 1 bytes @ 0x5
  4521                           
  4522  0075                     ?_readRegister:	
  4523                           ; 1 bytes @ 0x5
  4524                           
  4525  0075                     _isspace$1783:	
  4526                           ; 2 bytes @ 0x5
  4527                           
  4528  0075                     EUSART_Write_Text@i:	
  4529                           ; 1 bytes @ 0x5
  4530                           
  4531  0075                     I2C_writeRegister@slaveAddress:	
  4532                           ; 2 bytes @ 0x5
  4533                           
  4534  0075                     readRegister@slaveAddress:	
  4535                           ; 2 bytes @ 0x5
  4536                           
  4537  0075                     ___wmul@product:	
  4538                           ; 2 bytes @ 0x5
  4539                           
  4540  0075                     strcpy@s:	
  4541                           ; 2 bytes @ 0x5
  4542                           
  4543  0075                     strncmp@n:	
  4544                           ; 2 bytes @ 0x5
  4545                           
  4546  0075                     __Umul8_16@product:	
  4547                           ; 2 bytes @ 0x5
  4548                           
  4549  0075                     ___lmul@multiplicand:	
  4550                           ; 2 bytes @ 0x5
  4551                           
  4552  0075                     ___fleq@ff2:	
  4553                           ; 4 bytes @ 0x5
  4554                           
  4555                           
  4556                           ; 4 bytes @ 0x5
  4557  0075                     	ds	1
  4558  0076                     ??_abs:	
  4559  0076                     ___awdiv@counter:	
  4560                           ; 1 bytes @ 0x6
  4561                           
  4562  0076                     ___awmod@counter:	
  4563                           ; 1 bytes @ 0x6
  4564                           
  4565                           
  4566                           ; 1 bytes @ 0x6
  4567  0076                     	ds	1
  4568  0077                     ??_setTemperatureLimitsint:	
  4569  0077                     ??_strncmp:	
  4570                           ; 1 bytes @ 0x7
  4571                           
  4572  0077                     ?_tolower:	
  4573                           ; 1 bytes @ 0x7
  4574                           
  4575  0077                     ?_toupper:	
  4576                           ; 2 bytes @ 0x7
  4577                           
  4578  0077                     ?_atoi:	
  4579                           ; 2 bytes @ 0x7
  4580                           
  4581  0077                     ___awdiv@sign:	
  4582                           ; 2 bytes @ 0x7
  4583                           
  4584  0077                     ___awmod@sign:	
  4585                           ; 1 bytes @ 0x7
  4586                           
  4587  0077                     strcpy@d:	
  4588                           ; 1 bytes @ 0x7
  4589                           
  4590  0077                     I2C_writeRegister@regAddress:	
  4591                           ; 1 bytes @ 0x7
  4592                           
  4593  0077                     readRegister@regAddress:	
  4594                           ; 2 bytes @ 0x7
  4595                           
  4596  0077                     atoi@s:	
  4597                           ; 2 bytes @ 0x7
  4598                           
  4599  0077                     tolower@c:	
  4600                           ; 2 bytes @ 0x7
  4601                           
  4602  0077                     toupper@c:	
  4603                           ; 2 bytes @ 0x7
  4604                           
  4605  0077                     __Umul8_16@word_mpld:	
  4606                           ; 2 bytes @ 0x7
  4607                           
  4608                           
  4609                           ; 2 bytes @ 0x7
  4610  0077                     	ds	1
  4611  0078                     strcpy@dest:	
  4612  0078                     ___awdiv@quotient:	
  4613                           ; 1 bytes @ 0x8
  4614                           
  4615  0078                     strncmp@l:	
  4616                           ; 2 bytes @ 0x8
  4617                           
  4618                           
  4619                           ; 2 bytes @ 0x8
  4620  0078                     	ds	1
  4621  0079                     ??_readRegister:	
  4622  0079                     ??___lmul:	
  4623                           ; 1 bytes @ 0x9
  4624                           
  4625  0079                     ??___aldiv:	
  4626                           ; 1 bytes @ 0x9
  4627                           
  4628  0079                     __Umul8_16@multiplier:	
  4629                           ; 1 bytes @ 0x9
  4630                           
  4631  0079                     I2C_writeRegister@data:	
  4632                           ; 1 bytes @ 0x9
  4633                           
  4634  0079                     readRegister@recievedData:	
  4635                           ; 2 bytes @ 0x9
  4636                           
  4637  0079                     _tolower$1866:	
  4638                           ; 2 bytes @ 0x9
  4639                           
  4640  0079                     _toupper$1881:	
  4641                           ; 2 bytes @ 0x9
  4642                           
  4643                           
  4644                           ; 2 bytes @ 0x9
  4645  0079                     	ds	1
  4646  007A                     ??_stoa:	
  4647  007A                     ??___flsub:	
  4648                           ; 1 bytes @ 0xA
  4649                           
  4650  007A                     ?_fputs:	
  4651                           ; 1 bytes @ 0xA
  4652                           
  4653  007A                     ___fltol@sign1:	
  4654                           ; 2 bytes @ 0xA
  4655                           
  4656  007A                     ___lodiv@counter:	
  4657                           ; 1 bytes @ 0xA
  4658                           
  4659  007A                     EUSART_Initialize@x:	
  4660                           ; 1 bytes @ 0xA
  4661                           
  4662  007A                     fputs@fp:	
  4663                           ; 2 bytes @ 0xA
  4664                           
  4665  007A                     strncmp@r:	
  4666                           ; 2 bytes @ 0xA
  4667                           
  4668                           
  4669                           ; 2 bytes @ 0xA
  4670  007A                     	ds	1
  4671  007B                     ??_init_AFE:	
  4672  007B                     ??_I2C_writeRegister:	
  4673                           ; 1 bytes @ 0xB
  4674                           
  4675  007B                     ___fltol@exp1:	
  4676                           ; 1 bytes @ 0xB
  4677                           
  4678                           
  4679                           ; 1 bytes @ 0xB
  4680  007B                     	ds	1
  4681  007C                     ??_AFE_UPDATE:	
  4682  007C                     ??_printcellVoltages:	
  4683                           ; 1 bytes @ 0xC
  4684                           
  4685                           
  4686                           	psect	cstackBANK0
  4687  0020                     __pcstackBANK0:	
  4688                           ; 1 bytes @ 0xC
  4689                           
  4690  0020                     ?_setTemperatureLimitsint:	
  4691  0020                     ??_fputs:	
  4692                           ; 1 bytes @ 0x0
  4693                           
  4694  0020                     ??_tolower:	
  4695                           ; 1 bytes @ 0x0
  4696                           
  4697  0020                     ??_toupper:	
  4698                           ; 1 bytes @ 0x0
  4699                           
  4700  0020                     ??_atoi:	
  4701                           ; 1 bytes @ 0x0
  4702                           
  4703  0020                     ??___fleq:	
  4704                           ; 1 bytes @ 0x0
  4705                           
  4706  0020                     ?_beginAFEcommunication:	
  4707                           ; 1 bytes @ 0x0
  4708                           
  4709  0020                     ?_stoa:	
  4710                           ; 2 bytes @ 0x0
  4711                           
  4712  0020                     ?___aodiv:	
  4713                           ; 2 bytes @ 0x0
  4714                           
  4715  0020                     ?___aomod:	
  4716                           ; 8 bytes @ 0x0
  4717                           
  4718  0020                     ?___lodiv:	
  4719                           ; 8 bytes @ 0x0
  4720                           
  4721  0020                     ?___lomod:	
  4722                           ; 8 bytes @ 0x0
  4723                           
  4724  0020                     ___xxtofl@sign:	
  4725                           ; 8 bytes @ 0x0
  4726                           
  4727  0020                     setTemperatureLimitsint@minDischarge_degC:	
  4728                           ; 1 bytes @ 0x0
  4729                           
  4730  0020                     stoa@fp:	
  4731                           ; 2 bytes @ 0x0
  4732                           
  4733  0020                     ___fpclassifyf@e:	
  4734                           ; 2 bytes @ 0x0
  4735                           
  4736  0020                     ___lmul@product:	
  4737                           ; 2 bytes @ 0x0
  4738                           
  4739  0020                     ___aodiv@divisor:	
  4740                           ; 4 bytes @ 0x0
  4741                           
  4742  0020                     ___aomod@divisor:	
  4743                           ; 8 bytes @ 0x0
  4744                           
  4745  0020                     ___lodiv@divisor:	
  4746                           ; 8 bytes @ 0x0
  4747                           
  4748  0020                     ___lomod@divisor:	
  4749                           ; 8 bytes @ 0x0
  4750                           
  4751                           
  4752                           ; 8 bytes @ 0x0
  4753  0020                     	ds	1
  4754  0021                     ___xxtofl@exp:	
  4755                           
  4756                           ; 1 bytes @ 0x1
  4757  0021                     	ds	1
  4758  0022                     ??_beginAFEcommunication:	
  4759  0022                     stoa@s:	
  4760                           ; 1 bytes @ 0x2
  4761                           
  4762  0022                     fputs@c:	
  4763                           ; 1 bytes @ 0x2
  4764                           
  4765  0022                     setTemperatureLimitsint@maxDischarge_degC:	
  4766                           ; 1 bytes @ 0x2
  4767                           
  4768  0022                     ___xxtofl@arg:	
  4769                           ; 2 bytes @ 0x2
  4770                           
  4771  0022                     ___fpclassifyf@u:	
  4772                           ; 4 bytes @ 0x2
  4773                           
  4774                           
  4775                           ; 4 bytes @ 0x2
  4776  0022                     	ds	1
  4777  0023                     fputs@i:	
  4778  0023                     stoa@nuls:	
  4779                           ; 2 bytes @ 0x3
  4780                           
  4781                           
  4782                           ; 7 bytes @ 0x3
  4783  0023                     	ds	1
  4784  0024                     ?___aldiv:	
  4785  0024                     setTemperatureLimitsint@minCharge_degC:	
  4786                           ; 4 bytes @ 0x4
  4787                           
  4788  0024                     atoi@neg:	
  4789                           ; 2 bytes @ 0x4
  4790                           
  4791  0024                     ___aldiv@divisor:	
  4792                           ; 2 bytes @ 0x4
  4793                           
  4794                           
  4795                           ; 4 bytes @ 0x4
  4796  0024                     	ds	1
  4797  0025                     fputs@s:	
  4798                           
  4799                           ; 1 bytes @ 0x5
  4800  0025                     	ds	1
  4801  0026                     ?_pad:	
  4802  0026                     ?___flmul:	
  4803                           ; 2 bytes @ 0x6
  4804                           
  4805  0026                     setTemperatureLimitsint@maxCharge_degC:	
  4806                           ; 4 bytes @ 0x6
  4807                           
  4808  0026                     pad@fp:	
  4809                           ; 2 bytes @ 0x6
  4810                           
  4811  0026                     _atoi$1743:	
  4812                           ; 2 bytes @ 0x6
  4813                           
  4814  0026                     ___flmul@b:	
  4815                           ; 2 bytes @ 0x6
  4816                           
  4817                           
  4818                           ; 4 bytes @ 0x6
  4819  0026                     	ds	2
  4820  0028                     pad@buf:	
  4821  0028                     _atoi$1745:	
  4822                           ; 1 bytes @ 0x8
  4823                           
  4824  0028                     ___aldiv@dividend:	
  4825                           ; 2 bytes @ 0x8
  4826                           
  4827  0028                     ___aodiv@dividend:	
  4828                           ; 4 bytes @ 0x8
  4829                           
  4830  0028                     ___aomod@dividend:	
  4831                           ; 8 bytes @ 0x8
  4832                           
  4833  0028                     ___lodiv@dividend:	
  4834                           ; 8 bytes @ 0x8
  4835                           
  4836  0028                     ___lomod@dividend:	
  4837                           ; 8 bytes @ 0x8
  4838                           
  4839                           
  4840                           ; 8 bytes @ 0x8
  4841  0028                     	ds	1
  4842  0029                     pad@p:	
  4843                           
  4844                           ; 2 bytes @ 0x9
  4845  0029                     	ds	1
  4846  002A                     _atoi$1744:	
  4847  002A                     stoa@i:	
  4848                           ; 1 bytes @ 0xA
  4849                           
  4850  002A                     ___flmul@a:	
  4851                           ; 2 bytes @ 0xA
  4852                           
  4853                           
  4854                           ; 4 bytes @ 0xA
  4855  002A                     	ds	1
  4856  002B                     ??_pad:	
  4857  002B                     beginAFEcommunication@commSuccess:	
  4858                           ; 1 bytes @ 0xB
  4859                           
  4860  002B                     atoi@n:	
  4861                           ; 2 bytes @ 0xB
  4862                           
  4863                           
  4864                           ; 2 bytes @ 0xB
  4865  002B                     	ds	1
  4866  002C                     ___aldiv@counter:	
  4867  002C                     pad@i:	
  4868                           ; 1 bytes @ 0xC
  4869                           
  4870  002C                     stoa@w:	
  4871                           ; 2 bytes @ 0xC
  4872                           
  4873                           
  4874                           ; 2 bytes @ 0xC
  4875  002C                     	ds	1
  4876  002D                     ___aldiv@sign:	
  4877  002D                     beginAFEcommunication@i:	
  4878                           ; 1 bytes @ 0xD
  4879                           
  4880                           
  4881                           ; 2 bytes @ 0xD
  4882  002D                     	ds	1
  4883  002E                     ??___flmul:	
  4884  002E                     pad@w:	
  4885                           ; 1 bytes @ 0xE
  4886                           
  4887  002E                     stoa@cp:	
  4888                           ; 2 bytes @ 0xE
  4889                           
  4890  002E                     ___aldiv@quotient:	
  4891                           ; 2 bytes @ 0xE
  4892                           
  4893                           
  4894                           ; 4 bytes @ 0xE
  4895  002E                     	ds	2
  4896  0030                     ?_ctoa:	
  4897  0030                     ?_dtoa:	
  4898                           ; 2 bytes @ 0x10
  4899                           
  4900  0030                     ?_otoa:	
  4901                           ; 2 bytes @ 0x10
  4902                           
  4903  0030                     ?_utoa:	
  4904                           ; 2 bytes @ 0x10
  4905                           
  4906  0030                     ?_xtoa:	
  4907                           ; 2 bytes @ 0x10
  4908                           
  4909  0030                     ctoa@fp:	
  4910                           ; 2 bytes @ 0x10
  4911                           
  4912  0030                     dtoa@fp:	
  4913                           ; 2 bytes @ 0x10
  4914                           
  4915  0030                     otoa@fp:	
  4916                           ; 2 bytes @ 0x10
  4917                           
  4918  0030                     stoa@p:	
  4919                           ; 2 bytes @ 0x10
  4920                           
  4921  0030                     utoa@fp:	
  4922                           ; 2 bytes @ 0x10
  4923                           
  4924  0030                     xtoa@fp:	
  4925                           ; 2 bytes @ 0x10
  4926                           
  4927                           
  4928                           ; 2 bytes @ 0x10
  4929  0030                     	ds	2
  4930  0032                     ?_EUSART_Initialize:	
  4931  0032                     ?_setCellUndervoltageProtection:	
  4932                           ; 1 bytes @ 0x12
  4933                           
  4934  0032                     ?_setCellOvervoltageProtection:	
  4935                           ; 1 bytes @ 0x12
  4936                           
  4937  0032                     ctoa@c:	
  4938                           ; 1 bytes @ 0x12
  4939                           
  4940  0032                     setCellUndervoltageProtection@voltage_mV:	
  4941                           ; 1 bytes @ 0x12
  4942                           
  4943  0032                     setCellOvervoltageProtection@voltage_mV:	
  4944                           ; 2 bytes @ 0x12
  4945                           
  4946  0032                     stoa@l:	
  4947                           ; 2 bytes @ 0x12
  4948                           
  4949  0032                     EUSART_Initialize@baudrate:	
  4950                           ; 2 bytes @ 0x12
  4951                           
  4952  0032                     dtoa@d:	
  4953                           ; 4 bytes @ 0x12
  4954                           
  4955  0032                     otoa@d:	
  4956                           ; 8 bytes @ 0x12
  4957                           
  4958  0032                     utoa@d:	
  4959                           ; 8 bytes @ 0x12
  4960                           
  4961  0032                     xtoa@d:	
  4962                           ; 8 bytes @ 0x12
  4963                           
  4964                           
  4965                           ; 8 bytes @ 0x12
  4966  0032                     	ds	1
  4967  0033                     ??_ctoa:	
  4968  0033                     ___flmul@sign:	
  4969                           ; 1 bytes @ 0x13
  4970                           
  4971                           
  4972                           ; 1 bytes @ 0x13
  4973  0033                     	ds	1
  4974  0034                     setCellUndervoltageProtection@delay_s:	
  4975  0034                     setCellOvervoltageProtection@delay_s:	
  4976                           ; 2 bytes @ 0x14
  4977                           
  4978  0034                     ctoa@w:	
  4979                           ; 2 bytes @ 0x14
  4980                           
  4981  0034                     ___flmul@grs:	
  4982                           ; 2 bytes @ 0x14
  4983                           
  4984                           
  4985                           ; 4 bytes @ 0x14
  4986  0034                     	ds	2
  4987  0036                     ??_EUSART_Initialize:	
  4988  0036                     ??_setCellUndervoltageProtection:	
  4989                           ; 1 bytes @ 0x16
  4990                           
  4991  0036                     ??_setCellOvervoltageProtection:	
  4992                           ; 1 bytes @ 0x16
  4993                           
  4994                           
  4995                           ; 1 bytes @ 0x16
  4996  0036                     	ds	2
  4997  0038                     ___flmul@aexp:	
  4998                           
  4999                           ; 1 bytes @ 0x18
  5000  0038                     	ds	1
  5001  0039                     ___flmul@bexp:	
  5002                           
  5003                           ; 1 bytes @ 0x19
  5004  0039                     	ds	1
  5005  003A                     ??_dtoa:	
  5006  003A                     ??_otoa:	
  5007                           ; 1 bytes @ 0x1A
  5008                           
  5009  003A                     ??_utoa:	
  5010                           ; 1 bytes @ 0x1A
  5011                           
  5012  003A                     xtoa@x:	
  5013                           ; 1 bytes @ 0x1A
  5014                           
  5015  003A                     ___flmul@prod:	
  5016                           ; 1 bytes @ 0x1A
  5017                           
  5018                           
  5019                           ; 4 bytes @ 0x1A
  5020  003A                     	ds	1
  5021  003B                     ??_xtoa:	
  5022  003B                     utoa@p:	
  5023                           ; 1 bytes @ 0x1B
  5024                           
  5025                           
  5026                           ; 2 bytes @ 0x1B
  5027  003B                     	ds	2
  5028  003D                     _dtoa$1204:	
  5029  003D                     utoa@w:	
  5030                           ; 2 bytes @ 0x1D
  5031                           
  5032                           
  5033                           ; 2 bytes @ 0x1D
  5034  003D                     	ds	1
  5035  003E                     ___flmul@temp:	
  5036                           
  5037                           ; 2 bytes @ 0x1E
  5038  003E                     	ds	1
  5039  003F                     dtoa@p:	
  5040  003F                     utoa@n:	
  5041                           ; 2 bytes @ 0x1F
  5042                           
  5043                           
  5044                           ; 8 bytes @ 0x1F
  5045  003F                     	ds	1
  5046  0040                     ?___fldiv:	
  5047  0040                     ___fldiv@a:	
  5048                           ; 4 bytes @ 0x20
  5049                           
  5050                           
  5051                           ; 4 bytes @ 0x20
  5052  0040                     	ds	1
  5053  0041                     dtoa@w:	
  5054                           
  5055                           ; 2 bytes @ 0x21
  5056  0041                     	ds	1
  5057  0042                     otoa@p:	
  5058                           
  5059                           ; 2 bytes @ 0x22
  5060  0042                     	ds	1
  5061  0043                     dtoa@s:	
  5062  0043                     _xtoa$1274:	
  5063                           ; 2 bytes @ 0x23
  5064                           
  5065                           
  5066                           ; 2 bytes @ 0x23
  5067  0043                     	ds	1
  5068  0044                     setCellUndervoltageProtection@uv_trip:	
  5069  0044                     setCellOvervoltageProtection@ov_trip:	
  5070                           ; 1 bytes @ 0x24
  5071                           
  5072  0044                     otoa@t:	
  5073                           ; 1 bytes @ 0x24
  5074                           
  5075  0044                     ___fldiv@b:	
  5076                           ; 2 bytes @ 0x24
  5077                           
  5078                           
  5079                           ; 4 bytes @ 0x24
  5080  0044                     	ds	1
  5081  0045                     setCellUndervoltageProtection@i:	
  5082  0045                     setCellOvervoltageProtection@i:	
  5083                           ; 2 bytes @ 0x25
  5084                           
  5085  0045                     _xtoa$1275:	
  5086                           ; 2 bytes @ 0x25
  5087                           
  5088  0045                     dtoa@n:	
  5089                           ; 2 bytes @ 0x25
  5090                           
  5091                           
  5092                           ; 8 bytes @ 0x25
  5093  0045                     	ds	1
  5094  0046                     otoa@w:	
  5095                           
  5096                           ; 2 bytes @ 0x26
  5097  0046                     	ds	1
  5098  0047                     utoa@i:	
  5099  0047                     xtoa@p:	
  5100                           ; 2 bytes @ 0x27
  5101                           
  5102                           
  5103                           ; 2 bytes @ 0x27
  5104  0047                     	ds	1
  5105  0048                     ??___fldiv:	
  5106  0048                     otoa@n:	
  5107                           ; 1 bytes @ 0x28
  5108                           
  5109                           
  5110                           ; 8 bytes @ 0x28
  5111  0048                     	ds	1
  5112  0049                     xtoa@w:	
  5113                           
  5114                           ; 2 bytes @ 0x29
  5115  0049                     	ds	2
  5116  004B                     xtoa@n:	
  5117                           
  5118                           ; 8 bytes @ 0x2B
  5119  004B                     	ds	2
  5120  004D                     dtoa@i:	
  5121  004D                     ___fldiv@rem:	
  5122                           ; 2 bytes @ 0x2D
  5123                           
  5124                           
  5125                           ; 4 bytes @ 0x2D
  5126  004D                     	ds	3
  5127  0050                     otoa@i:	
  5128                           
  5129                           ; 2 bytes @ 0x30
  5130  0050                     	ds	1
  5131  0051                     ___fldiv@sign:	
  5132                           
  5133                           ; 1 bytes @ 0x31
  5134  0051                     	ds	1
  5135  0052                     ___fldiv@new_exp:	
  5136                           
  5137                           ; 2 bytes @ 0x32
  5138  0052                     	ds	1
  5139  0053                     xtoa@i:	
  5140                           
  5141                           ; 2 bytes @ 0x33
  5142  0053                     	ds	1
  5143  0054                     ___fldiv@grs:	
  5144                           
  5145                           ; 4 bytes @ 0x34
  5146  0054                     	ds	1
  5147  0055                     xtoa@c:	
  5148                           
  5149                           ; 2 bytes @ 0x35
  5150  0055                     	ds	3
  5151  0058                     ___fldiv@bexp:	
  5152                           
  5153                           ; 1 bytes @ 0x38
  5154  0058                     	ds	1
  5155  0059                     ___fldiv@aexp:	
  5156                           
  5157                           ; 1 bytes @ 0x39
  5158  0059                     	ds	1
  5159  005A                     ?___flge:	
  5160  005A                     ?_floorf:	
  5161                           ; 1 bit 
  5162                           
  5163  005A                     ?___fladd:	
  5164                           ; 4 bytes @ 0x3A
  5165                           
  5166  005A                     ___flge@ff1:	
  5167                           ; 4 bytes @ 0x3A
  5168                           
  5169  005A                     ___fladd@b:	
  5170                           ; 4 bytes @ 0x3A
  5171                           
  5172  005A                     floorf@x:	
  5173                           ; 4 bytes @ 0x3A
  5174                           
  5175                           
  5176                           ; 4 bytes @ 0x3A
  5177  005A                     	ds	4
  5178  005E                     ??_floorf:	
  5179  005E                     ___flge@ff2:	
  5180                           ; 1 bytes @ 0x3E
  5181                           
  5182  005E                     ___fladd@a:	
  5183                           ; 4 bytes @ 0x3E
  5184                           
  5185                           
  5186                           ; 4 bytes @ 0x3E
  5187  005E                     	ds	4
  5188  0062                     ??___flge:	
  5189  0062                     ??___fladd:	
  5190                           ; 1 bytes @ 0x42
  5191                           
  5192                           
  5193                           ; 1 bytes @ 0x42
  5194  0062                     	ds	2
  5195  0064                     floorf@m:	
  5196                           
  5197                           ; 4 bytes @ 0x44
  5198  0064                     	ds	2
  5199  0066                     ?_setShortCircuitProtection:	
  5200  0066                     ?_setOverCurrentDischargeProtection:	
  5201                           ; 1 bytes @ 0x46
  5202                           
  5203  0066                     setShortCircuitProtection@current_mA:	
  5204                           ; 1 bytes @ 0x46
  5205                           
  5206  0066                     setOverCurrentDischargeProtection@current_mA:	
  5207                           ; 4 bytes @ 0x46
  5208                           
  5209                           
  5210                           ; 4 bytes @ 0x46
  5211  0066                     	ds	2
  5212  0068                     floorf@e:	
  5213                           
  5214                           ; 2 bytes @ 0x48
  5215  0068                     	ds	2
  5216  006A                     ___fladd@signs:	
  5217  006A                     setShortCircuitProtection@delay_us:	
  5218                           ; 1 bytes @ 0x4A
  5219                           
  5220  006A                     setOverCurrentDischargeProtection@delay_ms:	
  5221                           ; 2 bytes @ 0x4A
  5222                           
  5223  006A                     floorf@u:	
  5224                           ; 2 bytes @ 0x4A
  5225                           
  5226                           
  5227                           ; 4 bytes @ 0x4A
  5228  006A                     	ds	1
  5229  006B                     ___fladd@aexp:	
  5230                           
  5231                           ; 1 bytes @ 0x4B
  5232  006B                     	ds	1
  5233  006C                     ??_setShortCircuitProtection:	
  5234  006C                     ??_setOverCurrentDischargeProtection:	
  5235                           ; 1 bytes @ 0x4C
  5236                           
  5237  006C                     ___fladd@bexp:	
  5238                           ; 1 bytes @ 0x4C
  5239                           
  5240                           
  5241                           ; 1 bytes @ 0x4C
  5242  006C                     	ds	1
  5243  006D                     ___fladd@grs:	
  5244                           
  5245                           ; 1 bytes @ 0x4D
  5246  006D                     	ds	1
  5247  006E                     ??_vfprintf:	
  5248                           
  5249                           ; 1 bytes @ 0x4E
  5250  006E                     	ds	2
  5251                           
  5252                           	psect	maintext
  5253  3119                     __pmaintext:	
  5254 ;;
  5255 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5256 ;;
  5257 ;; *************** function _main *****************
  5258 ;; Defined at:
  5259 ;;		line 77 in file "main.c"
  5260 ;; Parameters:    Size  Location     Type
  5261 ;;		None
  5262 ;; Auto vars:     Size  Location     Type
  5263 ;;		None
  5264 ;; Return value:  Size  Location     Type
  5265 ;;                  1    wreg      void 
  5266 ;; Registers used:
  5267 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5268 ;; Tracked objects:
  5269 ;;		On entry : B1F/0
  5270 ;;		On exit  : 0/0
  5271 ;;		Unchanged: 0/0
  5272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5275 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5276 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5277 ;;Total ram usage:        2 bytes
  5278 ;; Hardware stack levels required when called:   12
  5279 ;; This function calls:
  5280 ;;		_EUSART_Initialize
  5281 ;;		_initClock
  5282 ;;		_initWDT
  5283 ;;		_init_GPIO
  5284 ;;		_init_I2C
  5285 ;;		_init_RGB
  5286 ;;		_init_TMR1
  5287 ;;		_statemachine
  5288 ;;		_watchdog_timeout_shutdown
  5289 ;; This function is called by:
  5290 ;;		Startup code after reset
  5291 ;; This function uses a non-reentrant model
  5292 ;;
  5293                           
  5294                           
  5295                           ;psect for function _main
  5296  3119                     _main:	
  5297                           
  5298                           ;main.c: 80:     initClock();
  5299                           
  5300                           ;incstack = 0
  5301                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5302  3119  31BE  2627  31B1   	fcall	_initClock
  5303                           
  5304                           ;main.c: 81:     init_GPIO();
  5305  311C  31B1  21EF  31B1   	fcall	_init_GPIO
  5306                           
  5307                           ;main.c: 82:     initWDT();
  5308  311F  31B0  2000  31B1   	fcall	_initWDT
  5309                           
  5310                           ;main.c: 83:     init_I2C();
  5311  3122  31BE  269F  31B1   	fcall	_init_I2C
  5312                           
  5313                           ;main.c: 84:     EUSART_Initialize(9600);
  5314  3125  3000               	movlw	0
  5315  3126  0020               	movlb	0	; select bank0
  5316  3127  00B5               	movwf	EUSART_Initialize@baudrate+3
  5317  3128  3000               	movlw	0
  5318  3129  00B4               	movwf	EUSART_Initialize@baudrate+2
  5319  312A  3025               	movlw	37
  5320  312B  00B3               	movwf	EUSART_Initialize@baudrate+1
  5321  312C  3080               	movlw	128
  5322  312D  00B2               	movwf	EUSART_Initialize@baudrate
  5323  312E  31AB  2336  31B1   	fcall	_EUSART_Initialize
  5324                           
  5325                           ;main.c: 85:     init_TMR1();
  5326  3131  3198  2000  31B1   	fcall	_init_TMR1
  5327                           
  5328                           ;main.c: 86:     init_RGB();
  5329  3134  31BE  2630  31B1   	fcall	_init_RGB
  5330                           
  5331                           ;main.c: 89:     watchdog_timeout_shutdown();
  5332  3137  31BF  271B  31B1   	fcall	_watchdog_timeout_shutdown
  5333  313A                     l8755:	
  5334                           
  5335                           ;main.c: 93:         statemachine();
  5336  313A  3198  20BF  31B1   	fcall	_statemachine
  5337                           
  5338                           ;main.c: 95:         _delay((unsigned long)((1000)*(16000000/4000.0)));
  5339  313D  3015               	movlw	21
  5340  313E  0023               	movlb	3	; select bank3
  5341  313F  00EC               	movwf	(??_main^(0+384)+1)
  5342  3140  304B               	movlw	75
  5343  3141  00EB               	movwf	??_main^(0+384)
  5344  3142  30BE               	movlw	190
  5345  3143                     u12027:	
  5346  3143  0B89               	decfsz	9,f
  5347  3144  2943               	goto	u12027
  5348  3145  0BEB               	decfsz	??_main^(0+384),f
  5349  3146  2943               	goto	u12027
  5350  3147  0BEC               	decfsz	(??_main^(0+384)+1),f
  5351  3148  2943               	goto	u12027
  5352  3149  0000               	nop
  5353  314A  293A               	goto	l8755
  5354  314B                     __end_of_main:	
  5355                           
  5356                           	psect	text1
  5357  3F1B                     __ptext1:	
  5358 ;; *************** function _watchdog_timeout_shutdown *****************
  5359 ;; Defined at:
  5360 ;;		line 3 in file "algorithms.c"
  5361 ;; Parameters:    Size  Location     Type
  5362 ;;		None
  5363 ;; Auto vars:     Size  Location     Type
  5364 ;;		None
  5365 ;; Return value:  Size  Location     Type
  5366 ;;                  1    wreg      void 
  5367 ;; Registers used:
  5368 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5369 ;; Tracked objects:
  5370 ;;		On entry : 0/0
  5371 ;;		On exit  : 0/0
  5372 ;;		Unchanged: 0/0
  5373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5376 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5377 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5378 ;;Total ram usage:        2 bytes
  5379 ;; Hardware stack levels used:    1
  5380 ;; Hardware stack levels required when called:    2
  5381 ;; This function calls:
  5382 ;;		_RGB_color
  5383 ;;		_shutdown_BMS
  5384 ;; This function is called by:
  5385 ;;		_main
  5386 ;; This function uses a non-reentrant model
  5387 ;;
  5388                           
  5389                           
  5390                           ;psect for function _watchdog_timeout_shutdown
  5391  3F1B                     _watchdog_timeout_shutdown:	
  5392                           
  5393                           ;algorithms.c: 5:     if (!STATUSbits.nTO) {
  5394                           
  5395                           ;incstack = 0
  5396                           ; Regs used in _watchdog_timeout_shutdown: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5397  3F1B  0020               	movlb	0	; select bank0
  5398  3F1C  1A03               	btfsc	3,4	;volatile
  5399  3F1D  0008               	return
  5400                           
  5401                           ;algorithms.c: 6:         RGB_color(0);
  5402  3F1E  3000               	movlw	0
  5403  3F1F  00F1               	movwf	RGB_color@color
  5404  3F20  00F2               	movwf	RGB_color@color+1
  5405  3F21  31BF  27DF  31BF   	fcall	_RGB_color
  5406                           
  5407                           ;algorithms.c: 7:          _delay((unsigned long)((2000)*(16000000/4000.0)));
  5408  3F24  3029               	movlw	41
  5409  3F25  00F4               	movwf	??_watchdog_timeout_shutdown+1
  5410  3F26  3096               	movlw	150
  5411  3F27  00F3               	movwf	??_watchdog_timeout_shutdown
  5412  3F28  307F               	movlw	127
  5413  3F29                     u12037:	
  5414  3F29  0B89               	decfsz	9,f
  5415  3F2A  2F29               	goto	u12037
  5416  3F2B  0BF3               	decfsz	??_watchdog_timeout_shutdown,f
  5417  3F2C  2F29               	goto	u12037
  5418  3F2D  0BF4               	decfsz	??_watchdog_timeout_shutdown+1,f
  5419  3F2E  2F29               	goto	u12037
  5420  3F2F  0000               	nop
  5421                           
  5422                           ;algorithms.c: 8:         shutdown_BMS();
  5423  3F30  31BE  262D         	fcall	_shutdown_BMS
  5424  3F32  0008               	return
  5425  3F33                     __end_of_watchdog_timeout_shutdown:	
  5426                           
  5427                           	psect	text2
  5428  3E2D                     __ptext2:	
  5429 ;; *************** function _shutdown_BMS *****************
  5430 ;; Defined at:
  5431 ;;		line 12 in file "algorithms.c"
  5432 ;; Parameters:    Size  Location     Type
  5433 ;;		None
  5434 ;; Auto vars:     Size  Location     Type
  5435 ;;		None
  5436 ;; Return value:  Size  Location     Type
  5437 ;;                  1    wreg      void 
  5438 ;; Registers used:
  5439 ;;		None
  5440 ;; Tracked objects:
  5441 ;;		On entry : 0/0
  5442 ;;		On exit  : 0/0
  5443 ;;		Unchanged: 0/0
  5444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5449 ;;Total ram usage:        0 bytes
  5450 ;; Hardware stack levels used:    1
  5451 ;; Hardware stack levels required when called:    1
  5452 ;; This function calls:
  5453 ;;		Nothing
  5454 ;; This function is called by:
  5455 ;;		_watchdog_timeout_shutdown
  5456 ;; This function uses a non-reentrant model
  5457 ;;
  5458                           
  5459                           
  5460                           ;psect for function _shutdown_BMS
  5461  3E2D                     _shutdown_BMS:	
  5462                           
  5463                           ;algorithms.c: 13:  LATAbits.LATA3 = 1;
  5464                           
  5465                           ;incstack = 0
  5466                           ; Regs used in _shutdown_BMS: []
  5467  3E2D  0022               	movlb	2	; select bank2
  5468  3E2E  158C               	bsf	12,3	;volatile
  5469  3E2F  0008               	return
  5470  3E30                     __end_of_shutdown_BMS:	
  5471                           
  5472                           	psect	text3
  5473  18BF                     __ptext3:	
  5474 ;; *************** function _statemachine *****************
  5475 ;; Defined at:
  5476 ;;		line 101 in file "main.c"
  5477 ;; Parameters:    Size  Location     Type
  5478 ;;		None
  5479 ;; Auto vars:     Size  Location     Type
  5480 ;;  success         1   79[BANK2 ] unsigned char 
  5481 ;; Return value:  Size  Location     Type
  5482 ;;                  1    wreg      void 
  5483 ;; Registers used:
  5484 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5485 ;; Tracked objects:
  5486 ;;		On entry : 0/0
  5487 ;;		On exit  : 0/0
  5488 ;;		Unchanged: 0/0
  5489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5491 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5492 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5493 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5494 ;;Total ram usage:        3 bytes
  5495 ;; Hardware stack levels used:    1
  5496 ;; Hardware stack levels required when called:   11
  5497 ;; This function calls:
  5498 ;;		_AFE_UPDATE
  5499 ;;		_AFE_getOverCurrentDischargeCurrent
  5500 ;;		_AFE_getSetCurrentSenseRes
  5501 ;;		_AFE_getSetShortCircuitCurrent
  5502 ;;		_EUSART_Write_Text
  5503 ;;		_RGB_AWAIT_AFE_CONN
  5504 ;;		_RGB_color
  5505 ;;		_beginAFEcommunication
  5506 ;;		_init_AFE
  5507 ;;		_printcellVoltages
  5508 ;;		_printotAFERegisters
  5509 ;;		_snprintf
  5510 ;; This function is called by:
  5511 ;;		_main
  5512 ;; This function uses a non-reentrant model
  5513 ;;
  5514                           
  5515                           
  5516                           ;psect for function _statemachine
  5517  18BF                     _statemachine:	
  5518                           
  5519                           ;main.c: 103:     switch (currState) {
  5520                           
  5521                           ;incstack = 0
  5522                           ; Regs used in _statemachine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5523  18BF  29E2               	goto	l8731
  5524  18C0                     l8669:	
  5525                           
  5526                           ;main.c: 106:             if (tmr1_flag) {
  5527  18C0  0023               	movlb	3	; select bank3
  5528  18C1  0850               	movf	_tmr1_flag^(0+384),w	;volatile
  5529  18C2  1903               	btfsc	3,2
  5530  18C3  0008               	return
  5531                           
  5532                           ;main.c: 107:                 tmr1_flag = 0;
  5533  18C4  01D0               	clrf	_tmr1_flag^(0+384)	;volatile
  5534                           
  5535                           ;main.c: 108:                 RGB_AWAIT_AFE_CONN();
  5536  18C5  31B0  2006  3198   	fcall	_RGB_AWAIT_AFE_CONN
  5537                           
  5538                           ;main.c: 109:                 uint8_t success = beginAFEcommunication();
  5539  18C8  3198  200B  3198   	fcall	_beginAFEcommunication
  5540  18CB  0020               	movlb	0	; select bank0
  5541  18CC  0820               	movf	?_beginAFEcommunication,w
  5542  18CD  0022               	movlb	2	; select bank2
  5543  18CE  00ED               	movwf	??_statemachine^(0+256)
  5544  18CF  086D               	movf	??_statemachine^(0+256),w
  5545  18D0  00EF               	movwf	statemachine@success^(0+256)
  5546                           
  5547                           ;main.c: 112:                 EUSART_Write_Text("Attempting to communicate with AFE...\n
      +                          \r");
  5548  18D1  3076               	movlw	low (STR_1| (0+32768))
  5549  18D2  00F2               	movwf	EUSART_Write_Text@text
  5550  18D3  30B9               	movlw	high (STR_1| (0+32768))
  5551  18D4  00F3               	movwf	EUSART_Write_Text@text+1
  5552  18D5  31BF  2733  3198   	fcall	_EUSART_Write_Text
  5553                           
  5554                           ;main.c: 114:                 if (success) {
  5555  18D8  0022               	movlb	2	; select bank2
  5556  18D9  086F               	movf	statemachine@success^(0+256),w
  5557  18DA  1903               	btfsc	3,2
  5558  18DB  0008               	return
  5559                           
  5560                           ;main.c: 115:                     T1CONbits.TMR1ON = 0;
  5561  18DC  0020               	movlb	0	; select bank0
  5562  18DD  1018               	bcf	24,0	;volatile
  5563                           
  5564                           ;main.c: 116:                     PIE1bits.TMR1IE = 0;
  5565  18DE  0021               	movlb	1	; select bank1
  5566  18DF  1011               	bcf	17,0	;volatile
  5567                           
  5568                           ;main.c: 117:                     RGB_color(0);
  5569  18E0  3000               	movlw	0
  5570  18E1  00F1               	movwf	RGB_color@color
  5571  18E2  00F2               	movwf	RGB_color@color+1
  5572  18E3  31BF  27DF  3198   	fcall	_RGB_color
  5573                           
  5574                           ;main.c: 118:                     tmr1_flag = 0;
  5575  18E6  0023               	movlb	3	; select bank3
  5576  18E7  01D0               	clrf	_tmr1_flag^(0+384)	;volatile
  5577                           
  5578                           ;main.c: 122:                     _delay((unsigned long)((5)*(16000000/4000.0)));
  5579  18E8  301A               	movlw	26
  5580  18E9  0022               	movlb	2	; select bank2
  5581  18EA  00ED               	movwf	??_statemachine^(0+256)
  5582  18EB  30F8               	movlw	248
  5583  18EC                     u12047:	
  5584  18EC  0B89               	decfsz	9,f
  5585  18ED  28EC               	goto	u12047
  5586  18EE  0BED               	decfsz	??_statemachine^(0+256),f
  5587  18EF  28EC               	goto	u12047
  5588  18F0  0000               	nop
  5589                           
  5590                           ;main.c: 123:                     EUSART_Write_Text("Communication with BQ76920 AFE esta
      +                          blished!\n\r");
  5591  18F1  3070               	movlw	low (STR_2| (0+32768))
  5592  18F2  00F2               	movwf	EUSART_Write_Text@text
  5593  18F3  30B8               	movlw	high (STR_2| (0+32768))
  5594  18F4  00F3               	movwf	EUSART_Write_Text@text+1
  5595  18F5  31BF  2733  3198   	fcall	_EUSART_Write_Text
  5596                           
  5597                           ;main.c: 125:                     snprintf(messageBuffer, 127, "Obtained adcOffset = %i 
      +                          and adcGain = %i\n\r", adcOffset, adcGain);
  5598  18F8  3071               	movlw	113
  5599  18F9  0023               	movlb	3	; select bank3
  5600  18FA  00D7               	movwf	snprintf@s^(0+384)
  5601  18FB  3027               	movlw	39
  5602  18FC  00D8               	movwf	(snprintf@s^(0+384)+1)
  5603  18FD  307F               	movlw	127
  5604  18FE  00D9               	movwf	snprintf@n^(0+384)
  5605  18FF  3000               	movlw	0
  5606  1900  00DA               	movwf	(snprintf@n^(0+384)+1)
  5607  1901  30F7               	movlw	low (STR_3| (0+32768))
  5608  1902  00DB               	movwf	snprintf@fmt^(0+384)
  5609  1903  30B8               	movlw	high (STR_3| (0+32768))
  5610  1904  00DC               	movwf	(snprintf@fmt^(0+384)+1)
  5611  1905  084B               	movf	(_adcOffset+1)^(0+384),w
  5612  1906  00DE               	movwf	((?_snprintf+1)^(0+384)+6)
  5613  1907  084A               	movf	_adcOffset^(0+384),w
  5614  1908  00DD               	movwf	(?_snprintf^(0+384)+6)
  5615  1909  0856               	movf	(_adcGain+1)^(0+384),w
  5616  190A  00E0               	movwf	((?_snprintf+1)^(0+384)+8)
  5617  190B  0855               	movf	_adcGain^(0+384),w
  5618  190C  00DF               	movwf	(?_snprintf^(0+384)+8)
  5619  190D  31B0  206C  3198   	fcall	_snprintf
  5620                           
  5621                           ;main.c: 126:                     EUSART_Write_Text(messageBuffer);
  5622  1910  3071               	movlw	113
  5623  1911  00F2               	movwf	EUSART_Write_Text@text
  5624  1912  3027               	movlw	39
  5625  1913  00F3               	movwf	EUSART_Write_Text@text+1
  5626  1914  31BF  2733  3198   	fcall	_EUSART_Write_Text
  5627                           
  5628                           ;main.c: 127:                     EUSART_Write_Text("Attempt to set initial system param
      +                          eters to AFE...\n\r");
  5629  1917  303B               	movlw	low (STR_4| (0+32768))
  5630  1918  00F2               	movwf	EUSART_Write_Text@text
  5631  1919  30B8               	movlw	high (STR_4| (0+32768))
  5632  191A  00F3               	movwf	EUSART_Write_Text@text+1
  5633  191B  31BF  2733         	fcall	_EUSART_Write_Text
  5634                           
  5635                           ;main.c: 131:                     currState = 1;
  5636  191D  0023               	movlb	3	; select bank3
  5637  191E  01D1               	clrf	_currState^(0+384)
  5638  191F  0AD1               	incf	_currState^(0+384),f
  5639  1920  0008               	return
  5640  1921                     l8699:	
  5641                           
  5642                           ;main.c: 140:             init_AFE();
  5643  1921  31B4  2437  3198   	fcall	_init_AFE
  5644                           
  5645                           ;main.c: 141:             numberOfCells = 5;
  5646  1924  3005               	movlw	5
  5647  1925  0023               	movlb	3	; select bank3
  5648  1926  00C0               	movwf	_numberOfCells^(0+384)
  5649  1927  3000               	movlw	0
  5650  1928  00C1               	movwf	(_numberOfCells^(0+384)+1)
  5651                           
  5652                           ;main.c: 144:             _delay((unsigned long)((5)*(16000000/4000.0)));
  5653  1929  301A               	movlw	26
  5654  192A  0022               	movlb	2	; select bank2
  5655  192B  00ED               	movwf	??_statemachine^(0+256)
  5656  192C  30F8               	movlw	248
  5657  192D                     u12057:	
  5658  192D  0B89               	decfsz	9,f
  5659  192E  292D               	goto	u12057
  5660  192F  0BED               	decfsz	??_statemachine^(0+256),f
  5661  1930  292D               	goto	u12057
  5662  1931  0000               	nop
  5663                           
  5664                           ;main.c: 147:             EUSART_Write_Text("\n\r");
  5665  1932  30C1               	movlw	low ((STR_11+35)| (0+32768))
  5666  1933  00F2               	movwf	EUSART_Write_Text@text
  5667  1934  30B9               	movlw	high ((STR_11+35)| (0+32768))
  5668  1935  00F3               	movwf	EUSART_Write_Text@text+1
  5669  1936  31BF  2733  3198   	fcall	_EUSART_Write_Text
  5670                           
  5671                           ;main.c: 148:             snprintf(messageBuffer, 127, "Current sense resistor value: %.
      +                          4f ohms\n\r", AFE_getSetCurrentSenseRes());
  5672  1939  3071               	movlw	113
  5673  193A  0023               	movlb	3	; select bank3
  5674  193B  00D7               	movwf	snprintf@s^(0+384)
  5675  193C  3027               	movlw	39
  5676  193D  00D8               	movwf	(snprintf@s^(0+384)+1)
  5677  193E  307F               	movlw	127
  5678  193F  00D9               	movwf	snprintf@n^(0+384)
  5679  1940  3000               	movlw	0
  5680  1941  00DA               	movwf	(snprintf@n^(0+384)+1)
  5681  1942  304C               	movlw	low (STR_6| (0+32768))
  5682  1943  00DB               	movwf	snprintf@fmt^(0+384)
  5683  1944  30B9               	movlw	high (STR_6| (0+32768))
  5684  1945  00DC               	movwf	(snprintf@fmt^(0+384)+1)
  5685  1946  31BE  268B  3198   	fcall	_AFE_getSetCurrentSenseRes
  5686  1949  0874               	movf	?_AFE_getSetCurrentSenseRes+3,w
  5687  194A  0023               	movlb	3	; select bank3
  5688  194B  00E0               	movwf	((?_snprintf+3)^(0+384)+6)
  5689  194C  0873               	movf	?_AFE_getSetCurrentSenseRes+2,w
  5690  194D  00DF               	movwf	((?_snprintf+2)^(0+384)+6)
  5691  194E  0872               	movf	?_AFE_getSetCurrentSenseRes+1,w
  5692  194F  00DE               	movwf	((?_snprintf+1)^(0+384)+6)
  5693  1950  0871               	movf	?_AFE_getSetCurrentSenseRes,w
  5694  1951  00DD               	movwf	(?_snprintf^(0+384)+6)
  5695  1952  31B0  206C  3198   	fcall	_snprintf
  5696                           
  5697                           ;main.c: 149:             EUSART_Write_Text(messageBuffer);
  5698  1955  3071               	movlw	113
  5699  1956  00F2               	movwf	EUSART_Write_Text@text
  5700  1957  3027               	movlw	39
  5701  1958  00F3               	movwf	EUSART_Write_Text@text+1
  5702  1959  31BF  2733  3198   	fcall	_EUSART_Write_Text
  5703                           
  5704                           ;main.c: 150:             snprintf(messageBuffer, 127, "Set short circuit current for AF
      +                          E: %lu mA\n\r", AFE_getSetShortCircuitCurrent());
  5705  195C  3071               	movlw	113
  5706  195D  0023               	movlb	3	; select bank3
  5707  195E  00D7               	movwf	snprintf@s^(0+384)
  5708  195F  3027               	movlw	39
  5709  1960  00D8               	movwf	(snprintf@s^(0+384)+1)
  5710  1961  307F               	movlw	127
  5711  1962  00D9               	movwf	snprintf@n^(0+384)
  5712  1963  3000               	movlw	0
  5713  1964  00DA               	movwf	(snprintf@n^(0+384)+1)
  5714  1965  30CB               	movlw	low (STR_7| (0+32768))
  5715  1966  00DB               	movwf	snprintf@fmt^(0+384)
  5716  1967  30B8               	movlw	high (STR_7| (0+32768))
  5717  1968  00DC               	movwf	(snprintf@fmt^(0+384)+1)
  5718  1969  31B4  24E4  3198   	fcall	_AFE_getSetShortCircuitCurrent
  5719  196C  0021               	movlb	1	; select bank1
  5720  196D  082C               	movf	(?_AFE_getSetShortCircuitCurrent+3)^(0+128),w
  5721  196E  0023               	movlb	3	; select bank3
  5722  196F  00E0               	movwf	((?_snprintf+3)^(0+384)+6)
  5723  1970  0021               	movlb	1	; select bank1
  5724  1971  082B               	movf	(?_AFE_getSetShortCircuitCurrent+2)^(0+128),w
  5725  1972  0023               	movlb	3	; select bank3
  5726  1973  00DF               	movwf	((?_snprintf+2)^(0+384)+6)
  5727  1974  0021               	movlb	1	; select bank1
  5728  1975  082A               	movf	(?_AFE_getSetShortCircuitCurrent+1)^(0+128),w
  5729  1976  0023               	movlb	3	; select bank3
  5730  1977  00DE               	movwf	((?_snprintf+1)^(0+384)+6)
  5731  1978  0021               	movlb	1	; select bank1
  5732  1979  0829               	movf	?_AFE_getSetShortCircuitCurrent^(0+128),w
  5733  197A  0023               	movlb	3	; select bank3
  5734  197B  00DD               	movwf	(?_snprintf^(0+384)+6)
  5735  197C  31B0  206C  3198   	fcall	_snprintf
  5736                           
  5737                           ;main.c: 151:             EUSART_Write_Text(messageBuffer);
  5738  197F  3071               	movlw	113
  5739  1980  00F2               	movwf	EUSART_Write_Text@text
  5740  1981  3027               	movlw	39
  5741  1982  00F3               	movwf	EUSART_Write_Text@text+1
  5742  1983  31BF  2733  3198   	fcall	_EUSART_Write_Text
  5743                           
  5744                           ;main.c: 152:             snprintf(messageBuffer, 127, "Set Over-current discharge prote
      +                          ction  for AFE: %lu mA\n\r", AFE_getOverCurrentDischargeCurrent());
  5745  1986  3071               	movlw	113
  5746  1987  0023               	movlb	3	; select bank3
  5747  1988  00D7               	movwf	snprintf@s^(0+384)
  5748  1989  3027               	movlw	39
  5749  198A  00D8               	movwf	(snprintf@s^(0+384)+1)
  5750  198B  307F               	movlw	127
  5751  198C  00D9               	movwf	snprintf@n^(0+384)
  5752  198D  3000               	movlw	0
  5753  198E  00DA               	movwf	(snprintf@n^(0+384)+1)
  5754  198F  3002               	movlw	low (STR_8| (0+32768))
  5755  1990  00DB               	movwf	snprintf@fmt^(0+384)
  5756  1991  30B8               	movlw	high (STR_8| (0+32768))
  5757  1992  00DC               	movwf	(snprintf@fmt^(0+384)+1)
  5758  1993  31B4  248D  3198   	fcall	_AFE_getOverCurrentDischargeCurrent
  5759  1996  0021               	movlb	1	; select bank1
  5760  1997  082C               	movf	(?_AFE_getOverCurrentDischargeCurrent+3)^(0+128),w
  5761  1998  0023               	movlb	3	; select bank3
  5762  1999  00E0               	movwf	((?_snprintf+3)^(0+384)+6)
  5763  199A  0021               	movlb	1	; select bank1
  5764  199B  082B               	movf	(?_AFE_getOverCurrentDischargeCurrent+2)^(0+128),w
  5765  199C  0023               	movlb	3	; select bank3
  5766  199D  00DF               	movwf	((?_snprintf+2)^(0+384)+6)
  5767  199E  0021               	movlb	1	; select bank1
  5768  199F  082A               	movf	(?_AFE_getOverCurrentDischargeCurrent+1)^(0+128),w
  5769  19A0  0023               	movlb	3	; select bank3
  5770  19A1  00DE               	movwf	((?_snprintf+1)^(0+384)+6)
  5771  19A2  0021               	movlb	1	; select bank1
  5772  19A3  0829               	movf	?_AFE_getOverCurrentDischargeCurrent^(0+128),w
  5773  19A4  0023               	movlb	3	; select bank3
  5774  19A5  00DD               	movwf	(?_snprintf^(0+384)+6)
  5775  19A6  31B0  206C  3198   	fcall	_snprintf
  5776                           
  5777                           ;main.c: 153:             EUSART_Write_Text(messageBuffer);
  5778  19A9  3071               	movlw	113
  5779  19AA  00F2               	movwf	EUSART_Write_Text@text
  5780  19AB  3027               	movlw	39
  5781  19AC  00F3               	movwf	EUSART_Write_Text@text+1
  5782  19AD  31BF  2733  3198   	fcall	_EUSART_Write_Text
  5783                           
  5784                           ;main.c: 154:             printotAFERegisters();
  5785  19B0  3191  21B7  3198   	fcall	_printotAFERegisters
  5786                           
  5787                           ;main.c: 155:             EUSART_Write_Text("Initial parameters for BQ76920 AFE set!\n\r
      +                          ");
  5788  19B3  3022               	movlw	low (STR_9| (0+32768))
  5789  19B4  00F2               	movwf	EUSART_Write_Text@text
  5790  19B5  30B9               	movlw	high (STR_9| (0+32768))
  5791  19B6  00F3               	movwf	EUSART_Write_Text@text+1
  5792  19B7  31BF  2733  3198   	fcall	_EUSART_Write_Text
  5793                           
  5794                           ;main.c: 156:             EUSART_Write_Text("Now reading AFE data at regular intervals.\
      +                          n\r");
  5795  19BA  309E               	movlw	low (STR_10| (0+32768))
  5796  19BB  00F2               	movwf	EUSART_Write_Text@text
  5797  19BC  30B8               	movlw	high (STR_10| (0+32768))
  5798  19BD  00F3               	movwf	EUSART_Write_Text@text+1
  5799  19BE  31BF  2733  3198   	fcall	_EUSART_Write_Text
  5800                           
  5801                           ;main.c: 159:             RGB_color(1);
  5802  19C1  3001               	movlw	1
  5803  19C2  00F1               	movwf	RGB_color@color
  5804  19C3  3000               	movlw	0
  5805  19C4  00F2               	movwf	RGB_color@color+1
  5806  19C5  31BF  27DF         	fcall	_RGB_color
  5807                           
  5808                           ;main.c: 160:             currState = 2;
  5809  19C7  3002               	movlw	2
  5810  19C8  0022               	movlb	2	; select bank2
  5811  19C9  00ED               	movwf	??_statemachine^(0+256)
  5812  19CA  086D               	movf	??_statemachine^(0+256),w
  5813  19CB  0023               	movlb	3	; select bank3
  5814  19CC  00D1               	movwf	_currState^(0+384)
  5815                           
  5816                           ;main.c: 161:             break;
  5817  19CD  0008               	return
  5818  19CE                     l8723:	
  5819                           
  5820                           ;main.c: 165:             AFE_UPDATE();
  5821  19CE  31BE  262A  3198   	fcall	_AFE_UPDATE
  5822  19D1  0064               	clrwdt	;# 
  5823                           
  5824                           ;main.c: 169:             printcellVoltages();
  5825  19D2  31B2  22B3  3198   	fcall	_printcellVoltages
  5826                           
  5827                           ;main.c: 171:             _delay((unsigned long)((5000)*(16000000/4000.0)));
  5828  19D5  3066               	movlw	102
  5829  19D6  0022               	movlb	2	; select bank2
  5830  19D7  00EE               	movwf	(??_statemachine^(0+256)+1)
  5831  19D8  3076               	movlw	118
  5832  19D9  00ED               	movwf	??_statemachine^(0+256)
  5833  19DA  30C1               	movlw	193
  5834  19DB                     u12067:	
  5835  19DB  0B89               	decfsz	9,f
  5836  19DC  29DB               	goto	u12067
  5837  19DD  0BED               	decfsz	??_statemachine^(0+256),f
  5838  19DE  29DB               	goto	u12067
  5839  19DF  0BEE               	decfsz	(??_statemachine^(0+256)+1),f
  5840  19E0  29DB               	goto	u12067
  5841                           
  5842                           ;main.c: 173:             break;
  5843  19E1  0008               	return
  5844  19E2                     l8731:	
  5845  19E2  0023               	movlb	3	; select bank3
  5846  19E3  0851               	movf	_currState^(0+384),w
  5847  19E4  0022               	movlb	2	; select bank2
  5848  19E5  00ED               	movwf	??_statemachine^(0+256)
  5849  19E6  01EE               	clrf	(??_statemachine^(0+256)+1)
  5850                           
  5851                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5852                           ; Switch size 1, requested type "simple"
  5853                           ; Number of cases is 1, Range of values is 0 to 0
  5854                           ; switch strategies available:
  5855                           ; Name         Instructions Cycles
  5856                           ; simple_byte            4     3 (average)
  5857                           ; direct_byte            8     6 (fixed)
  5858                           ; jumptable            260     6 (fixed)
  5859                           ;	Chosen strategy is simple_byte
  5860  19E7  086E               	movf	(??_statemachine+1)^(0+256),w
  5861  19E8  3A00               	xorlw	0	; case 0
  5862  19E9  1903               	skipnz
  5863  19EA  29EC               	goto	l8859
  5864  19EB  29F7               	goto	l171
  5865  19EC                     l8859:	
  5866                           
  5867                           ; Switch size 1, requested type "simple"
  5868                           ; Number of cases is 3, Range of values is 0 to 2
  5869                           ; switch strategies available:
  5870                           ; Name         Instructions Cycles
  5871                           ; simple_byte           10     6 (average)
  5872                           ; direct_byte           12     6 (fixed)
  5873                           ; jumptable            260     6 (fixed)
  5874                           ;	Chosen strategy is simple_byte
  5875  19EC  086D               	movf	??_statemachine^(0+256),w
  5876  19ED  3A00               	xorlw	0	; case 0
  5877  19EE  1903               	skipnz
  5878  19EF  28C0               	goto	l8669
  5879  19F0  3A01               	xorlw	1	; case 1
  5880  19F1  1903               	skipnz
  5881  19F2  2921               	goto	l8699
  5882  19F3  3A03               	xorlw	3	; case 2
  5883  19F4  1903               	skipnz
  5884  19F5  29CE               	goto	l8723
  5885  19F6  29F7               	goto	l171
  5886  19F7                     l171:	
  5887  19F7  0008               	return
  5888  19F8                     __end_of_statemachine:	
  5889                           
  5890                           	psect	text4
  5891  11B7                     __ptext4:	
  5892 ;; *************** function _printotAFERegisters *****************
  5893 ;; Defined at:
  5894 ;;		line 233 in file "BQ76920.c"
  5895 ;; Parameters:    Size  Location     Type
  5896 ;;		None
  5897 ;; Auto vars:     Size  Location     Type
  5898 ;;		None
  5899 ;; Return value:  Size  Location     Type
  5900 ;;                  1    wreg      void 
  5901 ;; Registers used:
  5902 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5903 ;; Tracked objects:
  5904 ;;		On entry : 0/0
  5905 ;;		On exit  : 0/0
  5906 ;;		Unchanged: 0/0
  5907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5910 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5911 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5912 ;;Total ram usage:        1 bytes
  5913 ;; Hardware stack levels used:    1
  5914 ;; Hardware stack levels required when called:   10
  5915 ;; This function calls:
  5916 ;;		_EUSART_Write_Text
  5917 ;;		_readRegister
  5918 ;;		_snprintf
  5919 ;; This function is called by:
  5920 ;;		_statemachine
  5921 ;; This function uses a non-reentrant model
  5922 ;;
  5923                           
  5924                           
  5925                           ;psect for function _printotAFERegisters
  5926  11B7                     _printotAFERegisters:	
  5927                           
  5928                           ;BQ76920.c: 235:     _delay((unsigned long)((5)*(16000000/4000.0)));
  5929                           
  5930                           ;incstack = 0
  5931                           ; Regs used in _printotAFERegisters: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5932  11B7  301A               	movlw	26
  5933  11B8  0022               	movlb	2	; select bank2
  5934  11B9  00EC               	movwf	??_printotAFERegisters^(0+256)
  5935  11BA  30F8               	movlw	248
  5936  11BB                     u12077:	
  5937  11BB  0B89               	decfsz	9,f
  5938  11BC  29BB               	goto	u12077
  5939  11BD  0BEC               	decfsz	??_printotAFERegisters^(0+256),f
  5940  11BE  29BB               	goto	u12077
  5941  11BF  0000               	nop
  5942                           
  5943                           ;BQ76920.c: 237:     EUSART_Write_Text("Printing out AFE register values...\n\r");
  5944  11C0  30C4               	movlw	low (STR_12| (0+32768))
  5945  11C1  00F2               	movwf	EUSART_Write_Text@text
  5946  11C2  30B9               	movlw	high (STR_12| (0+32768))
  5947  11C3  00F3               	movwf	EUSART_Write_Text@text+1
  5948  11C4  31BF  2733  3191   	fcall	_EUSART_Write_Text
  5949                           
  5950                           ;BQ76920.c: 238:     EUSART_Write_Text("\n\r");
  5951  11C7  30C1               	movlw	low ((STR_11+35)| (0+32768))
  5952  11C8  00F2               	movwf	EUSART_Write_Text@text
  5953  11C9  30B9               	movlw	high ((STR_11+35)| (0+32768))
  5954  11CA  00F3               	movwf	EUSART_Write_Text@text+1
  5955  11CB  31BF  2733  3191   	fcall	_EUSART_Write_Text
  5956                           
  5957                           ;BQ76920.c: 239:     snprintf(messageBuffer, 127, "0x00 SYS_STAT: %i \n\r", readRegister
      +                          (0x18, 0x00));
  5958  11CE  3071               	movlw	113
  5959  11CF  0023               	movlb	3	; select bank3
  5960  11D0  00D7               	movwf	snprintf@s^(0+384)
  5961  11D1  3027               	movlw	39
  5962  11D2  00D8               	movwf	(snprintf@s^(0+384)+1)
  5963  11D3  307F               	movlw	127
  5964  11D4  00D9               	movwf	snprintf@n^(0+384)
  5965  11D5  3000               	movlw	0
  5966  11D6  00DA               	movwf	(snprintf@n^(0+384)+1)
  5967  11D7  308A               	movlw	low (STR_14| (0+32768))
  5968  11D8  00DB               	movwf	snprintf@fmt^(0+384)
  5969  11D9  30BA               	movlw	high (STR_14| (0+32768))
  5970  11DA  00DC               	movwf	(snprintf@fmt^(0+384)+1)
  5971  11DB  3018               	movlw	24
  5972  11DC  00F5               	movwf	readRegister@slaveAddress
  5973  11DD  3000               	movlw	0
  5974  11DE  00F6               	movwf	readRegister@slaveAddress+1
  5975  11DF  3000               	movlw	0
  5976  11E0  00F7               	movwf	readRegister@regAddress
  5977  11E1  00F8               	movwf	readRegister@regAddress+1
  5978  11E2  31B1  2180  3191   	fcall	_readRegister
  5979  11E5  0876               	movf	?_readRegister+1,w
  5980  11E6  0023               	movlb	3	; select bank3
  5981  11E7  00DE               	movwf	((?_snprintf+1)^(0+384)+6)
  5982  11E8  0875               	movf	?_readRegister,w
  5983  11E9  00DD               	movwf	(?_snprintf^(0+384)+6)
  5984  11EA  31B0  206C  3191   	fcall	_snprintf
  5985                           
  5986                           ;BQ76920.c: 240:     EUSART_Write_Text(messageBuffer);
  5987  11ED  3071               	movlw	113
  5988  11EE  00F2               	movwf	EUSART_Write_Text@text
  5989  11EF  3027               	movlw	39
  5990  11F0  00F3               	movwf	EUSART_Write_Text@text+1
  5991  11F1  31BF  2733  3191   	fcall	_EUSART_Write_Text
  5992                           
  5993                           ;BQ76920.c: 241:     snprintf(messageBuffer, 127, "0x01 CELLBAL1: %i \n\r", readRegister
      +                          (0x18, 0x01));
  5994  11F4  3071               	movlw	113
  5995  11F5  0023               	movlb	3	; select bank3
  5996  11F6  00D7               	movwf	snprintf@s^(0+384)
  5997  11F7  3027               	movlw	39
  5998  11F8  00D8               	movwf	(snprintf@s^(0+384)+1)
  5999  11F9  307F               	movlw	127
  6000  11FA  00D9               	movwf	snprintf@n^(0+384)
  6001  11FB  3000               	movlw	0
  6002  11FC  00DA               	movwf	(snprintf@n^(0+384)+1)
  6003  11FD  3036               	movlw	low (STR_15| (0+32768))
  6004  11FE  00DB               	movwf	snprintf@fmt^(0+384)
  6005  11FF  30BA               	movlw	high (STR_15| (0+32768))
  6006  1200  00DC               	movwf	(snprintf@fmt^(0+384)+1)
  6007  1201  3018               	movlw	24
  6008  1202  00F5               	movwf	readRegister@slaveAddress
  6009  1203  3000               	movlw	0
  6010  1204  00F6               	movwf	readRegister@slaveAddress+1
  6011  1205  3001               	movlw	1
  6012  1206  00F7               	movwf	readRegister@regAddress
  6013  1207  3000               	movlw	0
  6014  1208  00F8               	movwf	readRegister@regAddress+1
  6015  1209  31B1  2180  3191   	fcall	_readRegister
  6016  120C  0876               	movf	?_readRegister+1,w
  6017  120D  0023               	movlb	3	; select bank3
  6018  120E  00DE               	movwf	((?_snprintf+1)^(0+384)+6)
  6019  120F  0875               	movf	?_readRegister,w
  6020  1210  00DD               	movwf	(?_snprintf^(0+384)+6)
  6021  1211  31B0  206C  3191   	fcall	_snprintf
  6022                           
  6023                           ;BQ76920.c: 242:     EUSART_Write_Text(messageBuffer);
  6024  1214  3071               	movlw	113
  6025  1215  00F2               	movwf	EUSART_Write_Text@text
  6026  1216  3027               	movlw	39
  6027  1217  00F3               	movwf	EUSART_Write_Text@text+1
  6028  1218  31BF  2733  3191   	fcall	_EUSART_Write_Text
  6029                           
  6030                           ;BQ76920.c: 243:     snprintf(messageBuffer, 127, "0x04 SYS_CTRL1: %i \n\r", readRegiste
      +                          r(0x18, 0x04));
  6031  121B  3071               	movlw	113
  6032  121C  0023               	movlb	3	; select bank3
  6033  121D  00D7               	movwf	snprintf@s^(0+384)
  6034  121E  3027               	movlw	39
  6035  121F  00D8               	movwf	(snprintf@s^(0+384)+1)
  6036  1220  307F               	movlw	127
  6037  1221  00D9               	movwf	snprintf@n^(0+384)
  6038  1222  3000               	movlw	0
  6039  1223  00DA               	movwf	(snprintf@n^(0+384)+1)
  6040  1224  300A               	movlw	low (STR_16| (0+32768))
  6041  1225  00DB               	movwf	snprintf@fmt^(0+384)
  6042  1226  30BA               	movlw	high (STR_16| (0+32768))
  6043  1227  00DC               	movwf	(snprintf@fmt^(0+384)+1)
  6044  1228  3018               	movlw	24
  6045  1229  00F5               	movwf	readRegister@slaveAddress
  6046  122A  3000               	movlw	0
  6047  122B  00F6               	movwf	readRegister@slaveAddress+1
  6048  122C  3004               	movlw	4
  6049  122D  00F7               	movwf	readRegister@regAddress
  6050  122E  3000               	movlw	0
  6051  122F  00F8               	movwf	readRegister@regAddress+1
  6052  1230  31B1  2180  3191   	fcall	_readRegister
  6053  1233  0876               	movf	?_readRegister+1,w
  6054  1234  0023               	movlb	3	; select bank3
  6055  1235  00DE               	movwf	((?_snprintf+1)^(0+384)+6)
  6056  1236  0875               	movf	?_readRegister,w
  6057  1237  00DD               	movwf	(?_snprintf^(0+384)+6)
  6058  1238  31B0  206C  3191   	fcall	_snprintf
  6059                           
  6060                           ;BQ76920.c: 244:     EUSART_Write_Text(messageBuffer);
  6061  123B  3071               	movlw	113
  6062  123C  00F2               	movwf	EUSART_Write_Text@text
  6063  123D  3027               	movlw	39
  6064  123E  00F3               	movwf	EUSART_Write_Text@text+1
  6065  123F  31BF  2733  3191   	fcall	_EUSART_Write_Text
  6066                           
  6067                           ;BQ76920.c: 245:     snprintf(messageBuffer, 127, "0x05 SYS_CTRL2: %i \n\r", readRegiste
      +                          r(0x18, 0x05));
  6068  1242  3071               	movlw	113
  6069  1243  0023               	movlb	3	; select bank3
  6070  1244  00D7               	movwf	snprintf@s^(0+384)
  6071  1245  3027               	movlw	39
  6072  1246  00D8               	movwf	(snprintf@s^(0+384)+1)
  6073  1247  307F               	movlw	127
  6074  1248  00D9               	movwf	snprintf@n^(0+384)
  6075  1249  3000               	movlw	0
  6076  124A  00DA               	movwf	(snprintf@n^(0+384)+1)
  6077  124B  3020               	movlw	low (STR_17| (0+32768))
  6078  124C  00DB               	movwf	snprintf@fmt^(0+384)
  6079  124D  30BA               	movlw	high (STR_17| (0+32768))
  6080  124E  00DC               	movwf	(snprintf@fmt^(0+384)+1)
  6081  124F  3018               	movlw	24
  6082  1250  00F5               	movwf	readRegister@slaveAddress
  6083  1251  3000               	movlw	0
  6084  1252  00F6               	movwf	readRegister@slaveAddress+1
  6085  1253  3005               	movlw	5
  6086  1254  00F7               	movwf	readRegister@regAddress
  6087  1255  3000               	movlw	0
  6088  1256  00F8               	movwf	readRegister@regAddress+1
  6089  1257  31B1  2180  3191   	fcall	_readRegister
  6090  125A  0876               	movf	?_readRegister+1,w
  6091  125B  0023               	movlb	3	; select bank3
  6092  125C  00DE               	movwf	((?_snprintf+1)^(0+384)+6)
  6093  125D  0875               	movf	?_readRegister,w
  6094  125E  00DD               	movwf	(?_snprintf^(0+384)+6)
  6095  125F  31B0  206C  3191   	fcall	_snprintf
  6096                           
  6097                           ;BQ76920.c: 246:     EUSART_Write_Text(messageBuffer);
  6098  1262  3071               	movlw	113
  6099  1263  00F2               	movwf	EUSART_Write_Text@text
  6100  1264  3027               	movlw	39
  6101  1265  00F3               	movwf	EUSART_Write_Text@text+1
  6102  1266  31BF  2733  3191   	fcall	_EUSART_Write_Text
  6103                           
  6104                           ;BQ76920.c: 247:     snprintf(messageBuffer, 127, "0x06 PROTECT1: %i \n\r", readRegister
      +                          (0x18, 0x06));
  6105  1269  3071               	movlw	113
  6106  126A  0023               	movlb	3	; select bank3
  6107  126B  00D7               	movwf	snprintf@s^(0+384)
  6108  126C  3027               	movlw	39
  6109  126D  00D8               	movwf	(snprintf@s^(0+384)+1)
  6110  126E  307F               	movlw	127
  6111  126F  00D9               	movwf	snprintf@n^(0+384)
  6112  1270  3000               	movlw	0
  6113  1271  00DA               	movwf	(snprintf@n^(0+384)+1)
  6114  1272  304B               	movlw	low (STR_18| (0+32768))
  6115  1273  00DB               	movwf	snprintf@fmt^(0+384)
  6116  1274  30BA               	movlw	high (STR_18| (0+32768))
  6117  1275  00DC               	movwf	(snprintf@fmt^(0+384)+1)
  6118  1276  3018               	movlw	24
  6119  1277  00F5               	movwf	readRegister@slaveAddress
  6120  1278  3000               	movlw	0
  6121  1279  00F6               	movwf	readRegister@slaveAddress+1
  6122  127A  3006               	movlw	6
  6123  127B  00F7               	movwf	readRegister@regAddress
  6124  127C  3000               	movlw	0
  6125  127D  00F8               	movwf	readRegister@regAddress+1
  6126  127E  31B1  2180  3191   	fcall	_readRegister
  6127  1281  0876               	movf	?_readRegister+1,w
  6128  1282  0023               	movlb	3	; select bank3
  6129  1283  00DE               	movwf	((?_snprintf+1)^(0+384)+6)
  6130  1284  0875               	movf	?_readRegister,w
  6131  1285  00DD               	movwf	(?_snprintf^(0+384)+6)
  6132  1286  31B0  206C  3191   	fcall	_snprintf
  6133                           
  6134                           ;BQ76920.c: 248:     EUSART_Write_Text(messageBuffer);
  6135  1289  3071               	movlw	113
  6136  128A  00F2               	movwf	EUSART_Write_Text@text
  6137  128B  3027               	movlw	39
  6138  128C  00F3               	movwf	EUSART_Write_Text@text+1
  6139  128D  31BF  2733  3191   	fcall	_EUSART_Write_Text
  6140                           
  6141                           ;BQ76920.c: 249:     snprintf(messageBuffer, 127, "0x07 PROTECT2: %i \n\r", readRegister
      +                          (0x18, 0x07));
  6142  1290  3071               	movlw	113
  6143  1291  0023               	movlb	3	; select bank3
  6144  1292  00D7               	movwf	snprintf@s^(0+384)
  6145  1293  3027               	movlw	39
  6146  1294  00D8               	movwf	(snprintf@s^(0+384)+1)
  6147  1295  307F               	movlw	127
  6148  1296  00D9               	movwf	snprintf@n^(0+384)
  6149  1297  3000               	movlw	0
  6150  1298  00DA               	movwf	(snprintf@n^(0+384)+1)
  6151  1299  3060               	movlw	low (STR_19| (0+32768))
  6152  129A  00DB               	movwf	snprintf@fmt^(0+384)
  6153  129B  30BA               	movlw	high (STR_19| (0+32768))
  6154  129C  00DC               	movwf	(snprintf@fmt^(0+384)+1)
  6155  129D  3018               	movlw	24
  6156  129E  00F5               	movwf	readRegister@slaveAddress
  6157  129F  3000               	movlw	0
  6158  12A0  00F6               	movwf	readRegister@slaveAddress+1
  6159  12A1  3007               	movlw	7
  6160  12A2  00F7               	movwf	readRegister@regAddress
  6161  12A3  3000               	movlw	0
  6162  12A4  00F8               	movwf	readRegister@regAddress+1
  6163  12A5  31B1  2180  3191   	fcall	_readRegister
  6164  12A8  0876               	movf	?_readRegister+1,w
  6165  12A9  0023               	movlb	3	; select bank3
  6166  12AA  00DE               	movwf	((?_snprintf+1)^(0+384)+6)
  6167  12AB  0875               	movf	?_readRegister,w
  6168  12AC  00DD               	movwf	(?_snprintf^(0+384)+6)
  6169  12AD  31B0  206C  3191   	fcall	_snprintf
  6170                           
  6171                           ;BQ76920.c: 250:     EUSART_Write_Text(messageBuffer);
  6172  12B0  3071               	movlw	113
  6173  12B1  00F2               	movwf	EUSART_Write_Text@text
  6174  12B2  3027               	movlw	39
  6175  12B3  00F3               	movwf	EUSART_Write_Text@text+1
  6176  12B4  31BF  2733  3191   	fcall	_EUSART_Write_Text
  6177                           
  6178                           ;BQ76920.c: 251:     snprintf(messageBuffer, 127, "0x08 PROTECT3: %i \n\r", readRegister
      +                          (0x18, 0x08));
  6179  12B7  3071               	movlw	113
  6180  12B8  0023               	movlb	3	; select bank3
  6181  12B9  00D7               	movwf	snprintf@s^(0+384)
  6182  12BA  3027               	movlw	39
  6183  12BB  00D8               	movwf	(snprintf@s^(0+384)+1)
  6184  12BC  307F               	movlw	127
  6185  12BD  00D9               	movwf	snprintf@n^(0+384)
  6186  12BE  3000               	movlw	0
  6187  12BF  00DA               	movwf	(snprintf@n^(0+384)+1)
  6188  12C0  3075               	movlw	low (STR_20| (0+32768))
  6189  12C1  00DB               	movwf	snprintf@fmt^(0+384)
  6190  12C2  30BA               	movlw	high (STR_20| (0+32768))
  6191  12C3  00DC               	movwf	(snprintf@fmt^(0+384)+1)
  6192  12C4  3018               	movlw	24
  6193  12C5  00F5               	movwf	readRegister@slaveAddress
  6194  12C6  3000               	movlw	0
  6195  12C7  00F6               	movwf	readRegister@slaveAddress+1
  6196  12C8  3008               	movlw	8
  6197  12C9  00F7               	movwf	readRegister@regAddress
  6198  12CA  3000               	movlw	0
  6199  12CB  00F8               	movwf	readRegister@regAddress+1
  6200  12CC  31B1  2180  3191   	fcall	_readRegister
  6201  12CF  0876               	movf	?_readRegister+1,w
  6202  12D0  0023               	movlb	3	; select bank3
  6203  12D1  00DE               	movwf	((?_snprintf+1)^(0+384)+6)
  6204  12D2  0875               	movf	?_readRegister,w
  6205  12D3  00DD               	movwf	(?_snprintf^(0+384)+6)
  6206  12D4  31B0  206C  3191   	fcall	_snprintf
  6207                           
  6208                           ;BQ76920.c: 252:     EUSART_Write_Text(messageBuffer);
  6209  12D7  3071               	movlw	113
  6210  12D8  00F2               	movwf	EUSART_Write_Text@text
  6211  12D9  3027               	movlw	39
  6212  12DA  00F3               	movwf	EUSART_Write_Text@text+1
  6213  12DB  31BF  2733  3191   	fcall	_EUSART_Write_Text
  6214                           
  6215                           ;BQ76920.c: 253:     snprintf(messageBuffer, 127, "0x09 OV_TRIP: %i \n\r", readRegister(
      +                          0x18, 0x09));
  6216  12DE  3071               	movlw	113
  6217  12DF  0023               	movlb	3	; select bank3
  6218  12E0  00D7               	movwf	snprintf@s^(0+384)
  6219  12E1  3027               	movlw	39
  6220  12E2  00D8               	movwf	(snprintf@s^(0+384)+1)
  6221  12E3  307F               	movlw	127
  6222  12E4  00D9               	movwf	snprintf@n^(0+384)
  6223  12E5  3000               	movlw	0
  6224  12E6  00DA               	movwf	(snprintf@n^(0+384)+1)
  6225  12E7  309F               	movlw	low (STR_21| (0+32768))
  6226  12E8  00DB               	movwf	snprintf@fmt^(0+384)
  6227  12E9  30BA               	movlw	high (STR_21| (0+32768))
  6228  12EA  00DC               	movwf	(snprintf@fmt^(0+384)+1)
  6229  12EB  3018               	movlw	24
  6230  12EC  00F5               	movwf	readRegister@slaveAddress
  6231  12ED  3000               	movlw	0
  6232  12EE  00F6               	movwf	readRegister@slaveAddress+1
  6233  12EF  3009               	movlw	9
  6234  12F0  00F7               	movwf	readRegister@regAddress
  6235  12F1  3000               	movlw	0
  6236  12F2  00F8               	movwf	readRegister@regAddress+1
  6237  12F3  31B1  2180  3191   	fcall	_readRegister
  6238  12F6  0876               	movf	?_readRegister+1,w
  6239  12F7  0023               	movlb	3	; select bank3
  6240  12F8  00DE               	movwf	((?_snprintf+1)^(0+384)+6)
  6241  12F9  0875               	movf	?_readRegister,w
  6242  12FA  00DD               	movwf	(?_snprintf^(0+384)+6)
  6243  12FB  31B0  206C  3191   	fcall	_snprintf
  6244                           
  6245                           ;BQ76920.c: 254:     EUSART_Write_Text(messageBuffer);
  6246  12FE  3071               	movlw	113
  6247  12FF  00F2               	movwf	EUSART_Write_Text@text
  6248  1300  3027               	movlw	39
  6249  1301  00F3               	movwf	EUSART_Write_Text@text+1
  6250  1302  31BF  2733  3191   	fcall	_EUSART_Write_Text
  6251                           
  6252                           ;BQ76920.c: 255:     snprintf(messageBuffer, 127, "0x0A UV_TRIP: %i \n\r", readRegister(
      +                          0x18, 0x0A));
  6253  1305  3071               	movlw	113
  6254  1306  0023               	movlb	3	; select bank3
  6255  1307  00D7               	movwf	snprintf@s^(0+384)
  6256  1308  3027               	movlw	39
  6257  1309  00D8               	movwf	(snprintf@s^(0+384)+1)
  6258  130A  307F               	movlw	127
  6259  130B  00D9               	movwf	snprintf@n^(0+384)
  6260  130C  3000               	movlw	0
  6261  130D  00DA               	movwf	(snprintf@n^(0+384)+1)
  6262  130E  30B3               	movlw	low (STR_22| (0+32768))
  6263  130F  00DB               	movwf	snprintf@fmt^(0+384)
  6264  1310  30BA               	movlw	high (STR_22| (0+32768))
  6265  1311  00DC               	movwf	(snprintf@fmt^(0+384)+1)
  6266  1312  3018               	movlw	24
  6267  1313  00F5               	movwf	readRegister@slaveAddress
  6268  1314  3000               	movlw	0
  6269  1315  00F6               	movwf	readRegister@slaveAddress+1
  6270  1316  300A               	movlw	10
  6271  1317  00F7               	movwf	readRegister@regAddress
  6272  1318  3000               	movlw	0
  6273  1319  00F8               	movwf	readRegister@regAddress+1
  6274  131A  31B1  2180  3191   	fcall	_readRegister
  6275  131D  0876               	movf	?_readRegister+1,w
  6276  131E  0023               	movlb	3	; select bank3
  6277  131F  00DE               	movwf	((?_snprintf+1)^(0+384)+6)
  6278  1320  0875               	movf	?_readRegister,w
  6279  1321  00DD               	movwf	(?_snprintf^(0+384)+6)
  6280  1322  31B0  206C  3191   	fcall	_snprintf
  6281                           
  6282                           ;BQ76920.c: 256:     EUSART_Write_Text(messageBuffer);
  6283  1325  3071               	movlw	113
  6284  1326  00F2               	movwf	EUSART_Write_Text@text
  6285  1327  3027               	movlw	39
  6286  1328  00F3               	movwf	EUSART_Write_Text@text+1
  6287  1329  31BF  2733  3191   	fcall	_EUSART_Write_Text
  6288                           
  6289                           ;BQ76920.c: 257:     snprintf(messageBuffer, 127, "0x0B CC_CFG: %i \n\r", readRegister(0
      +                          x18, 0x0B));
  6290  132C  3071               	movlw	113
  6291  132D  0023               	movlb	3	; select bank3
  6292  132E  00D7               	movwf	snprintf@s^(0+384)
  6293  132F  3027               	movlw	39
  6294  1330  00D8               	movwf	(snprintf@s^(0+384)+1)
  6295  1331  307F               	movlw	127
  6296  1332  00D9               	movwf	snprintf@n^(0+384)
  6297  1333  3000               	movlw	0
  6298  1334  00DA               	movwf	(snprintf@n^(0+384)+1)
  6299  1335  30C7               	movlw	low (STR_23| (0+32768))
  6300  1336  00DB               	movwf	snprintf@fmt^(0+384)
  6301  1337  30BA               	movlw	high (STR_23| (0+32768))
  6302  1338  00DC               	movwf	(snprintf@fmt^(0+384)+1)
  6303  1339  3018               	movlw	24
  6304  133A  00F5               	movwf	readRegister@slaveAddress
  6305  133B  3000               	movlw	0
  6306  133C  00F6               	movwf	readRegister@slaveAddress+1
  6307  133D  300B               	movlw	11
  6308  133E  00F7               	movwf	readRegister@regAddress
  6309  133F  3000               	movlw	0
  6310  1340  00F8               	movwf	readRegister@regAddress+1
  6311  1341  31B1  2180  3191   	fcall	_readRegister
  6312  1344  0876               	movf	?_readRegister+1,w
  6313  1345  0023               	movlb	3	; select bank3
  6314  1346  00DE               	movwf	((?_snprintf+1)^(0+384)+6)
  6315  1347  0875               	movf	?_readRegister,w
  6316  1348  00DD               	movwf	(?_snprintf^(0+384)+6)
  6317  1349  31B0  206C  3191   	fcall	_snprintf
  6318                           
  6319                           ;BQ76920.c: 258:     EUSART_Write_Text(messageBuffer);
  6320  134C  3071               	movlw	113
  6321  134D  00F2               	movwf	EUSART_Write_Text@text
  6322  134E  3027               	movlw	39
  6323  134F  00F3               	movwf	EUSART_Write_Text@text+1
  6324  1350  31BF  2733  3191   	fcall	_EUSART_Write_Text
  6325                           
  6326                           ;BQ76920.c: 259:     snprintf(messageBuffer, 127, "0x32 CC_HI: %i \n\r", readRegister(0x
      +                          18, 0x32));
  6327  1353  3071               	movlw	113
  6328  1354  0023               	movlb	3	; select bank3
  6329  1355  00D7               	movwf	snprintf@s^(0+384)
  6330  1356  3027               	movlw	39
  6331  1357  00D8               	movwf	(snprintf@s^(0+384)+1)
  6332  1358  307F               	movlw	127
  6333  1359  00D9               	movwf	snprintf@n^(0+384)
  6334  135A  3000               	movlw	0
  6335  135B  00DA               	movwf	(snprintf@n^(0+384)+1)
  6336  135C  30DA               	movlw	low (STR_24| (0+32768))
  6337  135D  00DB               	movwf	snprintf@fmt^(0+384)
  6338  135E  30BA               	movlw	high (STR_24| (0+32768))
  6339  135F  00DC               	movwf	(snprintf@fmt^(0+384)+1)
  6340  1360  3018               	movlw	24
  6341  1361  00F5               	movwf	readRegister@slaveAddress
  6342  1362  3000               	movlw	0
  6343  1363  00F6               	movwf	readRegister@slaveAddress+1
  6344  1364  3032               	movlw	50
  6345  1365  00F7               	movwf	readRegister@regAddress
  6346  1366  3000               	movlw	0
  6347  1367  00F8               	movwf	readRegister@regAddress+1
  6348  1368  31B1  2180  3191   	fcall	_readRegister
  6349  136B  0876               	movf	?_readRegister+1,w
  6350  136C  0023               	movlb	3	; select bank3
  6351  136D  00DE               	movwf	((?_snprintf+1)^(0+384)+6)
  6352  136E  0875               	movf	?_readRegister,w
  6353  136F  00DD               	movwf	(?_snprintf^(0+384)+6)
  6354  1370  31B0  206C  3191   	fcall	_snprintf
  6355                           
  6356                           ;BQ76920.c: 260:     EUSART_Write_Text(messageBuffer);
  6357  1373  3071               	movlw	113
  6358  1374  00F2               	movwf	EUSART_Write_Text@text
  6359  1375  3027               	movlw	39
  6360  1376  00F3               	movwf	EUSART_Write_Text@text+1
  6361  1377  31BF  2733  3191   	fcall	_EUSART_Write_Text
  6362                           
  6363                           ;BQ76920.c: 261:     snprintf(messageBuffer, 127, "0x33 CC_LO: %i \n\r", readRegister(0x
      +                          18, 0x33));
  6364  137A  3071               	movlw	113
  6365  137B  0023               	movlb	3	; select bank3
  6366  137C  00D7               	movwf	snprintf@s^(0+384)
  6367  137D  3027               	movlw	39
  6368  137E  00D8               	movwf	(snprintf@s^(0+384)+1)
  6369  137F  307F               	movlw	127
  6370  1380  00D9               	movwf	snprintf@n^(0+384)
  6371  1381  3000               	movlw	0
  6372  1382  00DA               	movwf	(snprintf@n^(0+384)+1)
  6373  1383  30EC               	movlw	low (STR_25| (0+32768))
  6374  1384  00DB               	movwf	snprintf@fmt^(0+384)
  6375  1385  30BA               	movlw	high (STR_25| (0+32768))
  6376  1386  00DC               	movwf	(snprintf@fmt^(0+384)+1)
  6377  1387  3018               	movlw	24
  6378  1388  00F5               	movwf	readRegister@slaveAddress
  6379  1389  3000               	movlw	0
  6380  138A  00F6               	movwf	readRegister@slaveAddress+1
  6381  138B  3033               	movlw	51
  6382  138C  00F7               	movwf	readRegister@regAddress
  6383  138D  3000               	movlw	0
  6384  138E  00F8               	movwf	readRegister@regAddress+1
  6385  138F  31B1  2180  3191   	fcall	_readRegister
  6386  1392  0876               	movf	?_readRegister+1,w
  6387  1393  0023               	movlb	3	; select bank3
  6388  1394  00DE               	movwf	((?_snprintf+1)^(0+384)+6)
  6389  1395  0875               	movf	?_readRegister,w
  6390  1396  00DD               	movwf	(?_snprintf^(0+384)+6)
  6391  1397  31B0  206C  3191   	fcall	_snprintf
  6392                           
  6393                           ;BQ76920.c: 262:     EUSART_Write_Text(messageBuffer);
  6394  139A  3071               	movlw	113
  6395  139B  00F2               	movwf	EUSART_Write_Text@text
  6396  139C  3027               	movlw	39
  6397  139D  00F3               	movwf	EUSART_Write_Text@text+1
  6398  139E  31BF  2733  3191   	fcall	_EUSART_Write_Text
  6399                           
  6400                           ;BQ76920.c: 263:     EUSART_Write_Text("\n\r");
  6401  13A1  30C1               	movlw	low ((STR_11+35)| (0+32768))
  6402  13A2  00F2               	movwf	EUSART_Write_Text@text
  6403  13A3  30B9               	movlw	high ((STR_11+35)| (0+32768))
  6404  13A4  00F3               	movwf	EUSART_Write_Text@text+1
  6405  13A5  31BF  2733         	fcall	_EUSART_Write_Text
  6406  13A7  0008               	return
  6407  13A8                     __end_of_printotAFERegisters:	
  6408                           
  6409                           	psect	text5
  6410  32B3                     __ptext5:	
  6411 ;; *************** function _printcellVoltages *****************
  6412 ;; Defined at:
  6413 ;;		line 229 in file "BQ76920.c"
  6414 ;; Parameters:    Size  Location     Type
  6415 ;;		None
  6416 ;; Auto vars:     Size  Location     Type
  6417 ;;		None
  6418 ;; Return value:  Size  Location     Type
  6419 ;;                  1    wreg      void 
  6420 ;; Registers used:
  6421 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6422 ;; Tracked objects:
  6423 ;;		On entry : 0/0
  6424 ;;		On exit  : 0/0
  6425 ;;		Unchanged: 0/0
  6426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6431 ;;Total ram usage:        0 bytes
  6432 ;; Hardware stack levels used:    1
  6433 ;; Hardware stack levels required when called:   10
  6434 ;; This function calls:
  6435 ;;		_EUSART_Write_Text
  6436 ;;		_snprintf
  6437 ;; This function is called by:
  6438 ;;		_statemachine
  6439 ;; This function uses a non-reentrant model
  6440 ;;
  6441                           
  6442                           
  6443                           ;psect for function _printcellVoltages
  6444  32B3                     _printcellVoltages:	
  6445                           
  6446                           ;BQ76920.c: 230:     snprintf(messageBuffer, 127, "Cell batt: %i ,%i, %i , %i, %i, %i \n
      +                          \r", batVoltage,cellVoltages[0],cellVoltages[1],cellVoltages[2],cellVoltages[3],cellVolt
      +                          ages[4]);
  6447                           
  6448                           ;incstack = 0
  6449                           ; Regs used in _printcellVoltages: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6450  32B3  3071               	movlw	113
  6451  32B4  0023               	movlb	3	; select bank3
  6452  32B5  00D7               	movwf	snprintf@s^(0+384)
  6453  32B6  3027               	movlw	39
  6454  32B7  00D8               	movwf	(snprintf@s^(0+384)+1)
  6455  32B8  307F               	movlw	127
  6456  32B9  00D9               	movwf	snprintf@n^(0+384)
  6457  32BA  3000               	movlw	0
  6458  32BB  00DA               	movwf	(snprintf@n^(0+384)+1)
  6459  32BC  309E               	movlw	low (STR_11| (0+32768))
  6460  32BD  00DB               	movwf	snprintf@fmt^(0+384)
  6461  32BE  30B9               	movlw	high (STR_11| (0+32768))
  6462  32BF  00DC               	movwf	(snprintf@fmt^(0+384)+1)
  6463  32C0  082F               	movf	(_batVoltage+3)^(0+384),w
  6464  32C1  00E0               	movwf	((?_snprintf+3)^(0+384)+6)
  6465  32C2  082E               	movf	(_batVoltage+2)^(0+384),w
  6466  32C3  00DF               	movwf	((?_snprintf+2)^(0+384)+6)
  6467  32C4  082D               	movf	(_batVoltage+1)^(0+384),w
  6468  32C5  00DE               	movwf	((?_snprintf+1)^(0+384)+6)
  6469  32C6  082C               	movf	_batVoltage^(0+384),w
  6470  32C7  00DD               	movwf	(?_snprintf^(0+384)+6)
  6471  32C8  0024               	movlb	4	; select bank4
  6472  32C9  0821               	movf	(_cellVoltages+1)^(0+512),w
  6473  32CA  0023               	movlb	3	; select bank3
  6474  32CB  00E2               	movwf	((?_snprintf+1)^(0+384)+10)
  6475  32CC  0024               	movlb	4	; select bank4
  6476  32CD  0820               	movf	_cellVoltages^(0+512),w
  6477  32CE  0023               	movlb	3	; select bank3
  6478  32CF  00E1               	movwf	(?_snprintf^(0+384)+10)
  6479  32D0  0024               	movlb	4	; select bank4
  6480  32D1  0823               	movf	((_cellVoltages+1)^(0+512)+2),w
  6481  32D2  0023               	movlb	3	; select bank3
  6482  32D3  00E4               	movwf	((?_snprintf+1)^(0+384)+12)
  6483  32D4  0024               	movlb	4	; select bank4
  6484  32D5  0822               	movf	(_cellVoltages^(0+512)+2),w
  6485  32D6  0023               	movlb	3	; select bank3
  6486  32D7  00E3               	movwf	(?_snprintf^(0+384)+12)
  6487  32D8  0024               	movlb	4	; select bank4
  6488  32D9  0825               	movf	((_cellVoltages+1)^(0+512)+4),w
  6489  32DA  0023               	movlb	3	; select bank3
  6490  32DB  00E6               	movwf	((?_snprintf+1)^(0+384)+14)
  6491  32DC  0024               	movlb	4	; select bank4
  6492  32DD  0824               	movf	(_cellVoltages^(0+512)+4),w
  6493  32DE  0023               	movlb	3	; select bank3
  6494  32DF  00E5               	movwf	(?_snprintf^(0+384)+14)
  6495  32E0  0024               	movlb	4	; select bank4
  6496  32E1  0827               	movf	((_cellVoltages+1)^(0+512)+6),w
  6497  32E2  0023               	movlb	3	; select bank3
  6498  32E3  00E8               	movwf	((?_snprintf+1)^(0+384)+16)
  6499  32E4  0024               	movlb	4	; select bank4
  6500  32E5  0826               	movf	(_cellVoltages^(0+512)+6),w
  6501  32E6  0023               	movlb	3	; select bank3
  6502  32E7  00E7               	movwf	(?_snprintf^(0+384)+16)
  6503  32E8  0024               	movlb	4	; select bank4
  6504  32E9  0829               	movf	((_cellVoltages+1)^(0+512)+8),w
  6505  32EA  0023               	movlb	3	; select bank3
  6506  32EB  00EA               	movwf	((?_snprintf+1)^(0+384)+18)
  6507  32EC  0024               	movlb	4	; select bank4
  6508  32ED  0828               	movf	(_cellVoltages^(0+512)+8),w
  6509  32EE  0023               	movlb	3	; select bank3
  6510  32EF  00E9               	movwf	(?_snprintf^(0+384)+18)
  6511  32F0  31B0  206C  31B2   	fcall	_snprintf
  6512                           
  6513                           ;BQ76920.c: 231:     EUSART_Write_Text(messageBuffer);
  6514  32F3  3071               	movlw	113
  6515  32F4  00F2               	movwf	EUSART_Write_Text@text
  6516  32F5  3027               	movlw	39
  6517  32F6  00F3               	movwf	EUSART_Write_Text@text+1
  6518  32F7  31BF  2733         	fcall	_EUSART_Write_Text
  6519  32F9  0008               	return
  6520  32FA                     __end_of_printcellVoltages:	
  6521                           
  6522                           	psect	text6
  6523  306C                     __ptext6:	
  6524 ;; *************** function _snprintf *****************
  6525 ;; Defined at:
  6526 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\snprintf.c"
  6527 ;; Parameters:    Size  Location     Type
  6528 ;;  s               2    0[BANK3 ] PTR unsigned char 
  6529 ;;		 -> messageBuffer(127), 
  6530 ;;  n               2    2[BANK3 ] unsigned int 
  6531 ;;  fmt             2    4[BANK3 ] PTR const unsigned char 
  6532 ;;		 -> STR_25(18), STR_24(18), STR_23(19), STR_22(20), 
  6533 ;;		 -> STR_21(20), STR_20(21), STR_19(21), STR_18(21), 
  6534 ;;		 -> STR_17(22), STR_16(22), STR_15(21), STR_14(21), 
  6535 ;;		 -> STR_11(38), STR_8(57), STR_7(44), STR_6(42), 
  6536 ;;		 -> STR_3(43), 
  6537 ;; Auto vars:     Size  Location     Type
  6538 ;;  ret             2    0        int 
  6539 ;;  ap              1   75[BANK2 ] PTR void [1]
  6540 ;;		 -> ?_snprintf(2), 
  6541 ;; Return value:  Size  Location     Type
  6542 ;;                  2    0[BANK3 ] int 
  6543 ;; Registers used:
  6544 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6545 ;; Tracked objects:
  6546 ;;		On entry : 0/0
  6547 ;;		On exit  : 0/0
  6548 ;;		Unchanged: 0/0
  6549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6550 ;;      Params:         0       0       0       0      20       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6551 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6552 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6553 ;;      Totals:         0       0       0       4      20       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6554 ;;Total ram usage:       24 bytes
  6555 ;; Hardware stack levels used:    1
  6556 ;; Hardware stack levels required when called:    9
  6557 ;; This function calls:
  6558 ;;		_vsnprintf
  6559 ;; This function is called by:
  6560 ;;		_statemachine
  6561 ;;		_printcellVoltages
  6562 ;;		_printotAFERegisters
  6563 ;; This function uses a non-reentrant model
  6564 ;;
  6565                           
  6566                           
  6567                           ;psect for function _snprintf
  6568  306C                     _snprintf:	
  6569                           
  6570                           ;incstack = 0
  6571                           ; Regs used in _snprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6572  306C  30DD               	movlw	(low ((?_snprintf| (0+256)+6)))& (0+255)
  6573  306D  0022               	movlb	2	; select bank2
  6574  306E  00E8               	movwf	??_snprintf^(0+256)
  6575  306F  0868               	movf	??_snprintf^(0+256),w
  6576  3070  00EB               	movwf	snprintf@ap^(0+256)
  6577  3071  0023               	movlb	3	; select bank3
  6578  3072  0858               	movf	(snprintf@s+1)^(0+384),w
  6579  3073  0022               	movlb	2	; select bank2
  6580  3074  00D6               	movwf	(vsnprintf@s+1)^(0+256)
  6581  3075  0023               	movlb	3	; select bank3
  6582  3076  0857               	movf	snprintf@s^(0+384),w
  6583  3077  0022               	movlb	2	; select bank2
  6584  3078  00D5               	movwf	vsnprintf@s^(0+256)
  6585  3079  0023               	movlb	3	; select bank3
  6586  307A  085A               	movf	(snprintf@n+1)^(0+384),w
  6587  307B  0022               	movlb	2	; select bank2
  6588  307C  00D8               	movwf	(vsnprintf@n+1)^(0+256)
  6589  307D  0023               	movlb	3	; select bank3
  6590  307E  0859               	movf	snprintf@n^(0+384),w
  6591  307F  0022               	movlb	2	; select bank2
  6592  3080  00D7               	movwf	vsnprintf@n^(0+256)
  6593  3081  0023               	movlb	3	; select bank3
  6594  3082  085C               	movf	(snprintf@fmt+1)^(0+384),w
  6595  3083  0022               	movlb	2	; select bank2
  6596  3084  00DA               	movwf	(vsnprintf@fmt+1)^(0+256)
  6597  3085  0023               	movlb	3	; select bank3
  6598  3086  085B               	movf	snprintf@fmt^(0+384),w
  6599  3087  0022               	movlb	2	; select bank2
  6600  3088  00D9               	movwf	vsnprintf@fmt^(0+256)
  6601  3089  306B               	movlw	(low (snprintf@ap| (0+256)))& (0+255)
  6602  308A  00E8               	movwf	??_snprintf^(0+256)
  6603  308B  0868               	movf	??_snprintf^(0+256),w
  6604  308C  00DB               	movwf	vsnprintf@ap^(0+256)
  6605  308D  31B5  25A1         	fcall	_vsnprintf
  6606  308F  0008               	return
  6607  3090                     __end_of_snprintf:	
  6608                           
  6609                           	psect	text7
  6610  35A1                     __ptext7:	
  6611 ;; *************** function _vsnprintf *****************
  6612 ;; Defined at:
  6613 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_vsnprintf.c"
  6614 ;; Parameters:    Size  Location     Type
  6615 ;;  s               2   53[BANK2 ] PTR unsigned char 
  6616 ;;		 -> messageBuffer(127), 
  6617 ;;  n               2   55[BANK2 ] unsigned int 
  6618 ;;  fmt             2   57[BANK2 ] PTR const unsigned char 
  6619 ;;		 -> STR_25(18), STR_24(18), STR_23(19), STR_22(20), 
  6620 ;;		 -> STR_21(20), STR_20(21), STR_19(21), STR_18(21), 
  6621 ;;		 -> STR_17(22), STR_16(22), STR_15(21), STR_14(21), 
  6622 ;;		 -> STR_11(38), STR_8(57), STR_7(44), STR_6(42), 
  6623 ;;		 -> STR_3(43), 
  6624 ;;  ap              1   59[BANK2 ] PTR PTR void 
  6625 ;;		 -> snprintf@ap(1), 
  6626 ;; Auto vars:     Size  Location     Type
  6627 ;;  f               6   66[BANK2 ] struct _IO_FILE
  6628 ;;  cnt             2   64[BANK2 ] int 
  6629 ;; Return value:  Size  Location     Type
  6630 ;;                  2   53[BANK2 ] int 
  6631 ;; Registers used:
  6632 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6633 ;; Tracked objects:
  6634 ;;		On entry : 0/0
  6635 ;;		On exit  : 0/0
  6636 ;;		Unchanged: 0/0
  6637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6638 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6639 ;;      Locals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6640 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6641 ;;      Totals:         0       0       0      19       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6642 ;;Total ram usage:       19 bytes
  6643 ;; Hardware stack levels used:    1
  6644 ;; Hardware stack levels required when called:    8
  6645 ;; This function calls:
  6646 ;;		_vfprintf
  6647 ;; This function is called by:
  6648 ;;		_snprintf
  6649 ;; This function uses a non-reentrant model
  6650 ;;
  6651                           
  6652                           
  6653                           ;psect for function _vsnprintf
  6654  35A1                     _vsnprintf:	
  6655                           
  6656                           ;incstack = 0
  6657                           ; Regs used in _vsnprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6658  35A1  3080               	movlw	128
  6659  35A2  0022               	movlb	2	; select bank2
  6660  35A3  0258               	subwf	(vsnprintf@n+1)^(0+256),w
  6661  35A4  3000               	movlw	0
  6662  35A5  1903               	skipnz
  6663  35A6  0257               	subwf	vsnprintf@n^(0+256),w
  6664  35A7  1C03               	skipc
  6665  35A8  2DB4               	goto	l8423
  6666  35A9  304B               	movlw	75
  6667  35AA  0023               	movlb	3	; select bank3
  6668  35AB  00B0               	movwf	_errno^(0+384)
  6669  35AC  3000               	movlw	0
  6670  35AD  00B1               	movwf	(_errno^(0+384)+1)
  6671  35AE  30FF               	movlw	255
  6672  35AF  0022               	movlb	2	; select bank2
  6673  35B0  00D5               	movwf	?_vsnprintf^(0+256)
  6674  35B1  30FF               	movlw	255
  6675  35B2  00D6               	movwf	(?_vsnprintf^(0+256)+1)
  6676  35B3  0008               	return
  6677  35B4                     l8423:	
  6678  35B4  0856               	movf	(vsnprintf@s+1)^(0+256),w
  6679  35B5  00E3               	movwf	(vsnprintf@f+1)^(0+256)
  6680  35B6  0855               	movf	vsnprintf@s^(0+256),w
  6681  35B7  00E2               	movwf	vsnprintf@f^(0+256)
  6682  35B8  3000               	movlw	0
  6683  35B9  0258               	subwf	(vsnprintf@n+1)^(0+256),w
  6684  35BA  3002               	movlw	2
  6685  35BB  1903               	skipnz
  6686  35BC  0257               	subwf	vsnprintf@n^(0+256),w
  6687  35BD  1C03               	skipc
  6688  35BE  2DC8               	goto	l8429
  6689  35BF  0857               	movf	vsnprintf@n^(0+256),w
  6690  35C0  3EFF               	addlw	255
  6691  35C1  00E6               	movwf	(vsnprintf@f^(0+256)+4)
  6692  35C2  30FF               	movlw	255
  6693  35C3  3D58               	addwfc	(vsnprintf@n+1)^(0+256),w
  6694  35C4  00E7               	movwf	((vsnprintf@f+1)^(0+256)+4)
  6695  35C5  01E4               	clrf	(vsnprintf@f^(0+256)+2)
  6696  35C6  01E5               	clrf	((vsnprintf@f+1)^(0+256)+2)
  6697  35C7  2DD0               	goto	l8431
  6698  35C8                     l8429:	
  6699  35C8  3001               	movlw	1
  6700  35C9  00E6               	movwf	(vsnprintf@f^(0+256)+4)
  6701  35CA  3000               	movlw	0
  6702  35CB  00E7               	movwf	(vsnprintf@f^(0+256)+5)
  6703  35CC  3001               	movlw	1
  6704  35CD  00E4               	movwf	(vsnprintf@f^(0+256)+2)
  6705  35CE  3000               	movlw	0
  6706  35CF  00E5               	movwf	(vsnprintf@f^(0+256)+3)
  6707  35D0                     l8431:	
  6708  35D0  3062               	movlw	low vsnprintf@f
  6709  35D1  00CE               	movwf	vfprintf@fp^(0+256)
  6710  35D2  3001               	movlw	high vsnprintf@f
  6711  35D3  00CF               	movwf	(vfprintf@fp^(0+256)+1)
  6712  35D4  085A               	movf	(vsnprintf@fmt+1)^(0+256),w
  6713  35D5  00D1               	movwf	(vfprintf@fmt+1)^(0+256)
  6714  35D6  0859               	movf	vsnprintf@fmt^(0+256),w
  6715  35D7  00D0               	movwf	vfprintf@fmt^(0+256)
  6716  35D8  085B               	movf	vsnprintf@ap^(0+256),w
  6717  35D9  00DC               	movwf	??_vsnprintf^(0+256)
  6718  35DA  085C               	movf	??_vsnprintf^(0+256),w
  6719  35DB  00D2               	movwf	vfprintf@ap^(0+256)
  6720  35DC  31B1  21B6  31B5   	fcall	_vfprintf
  6721  35DF  0022               	movlb	2	; select bank2
  6722  35E0  084F               	movf	(?_vfprintf+1)^(0+256),w
  6723  35E1  00E1               	movwf	(vsnprintf@cnt+1)^(0+256)
  6724  35E2  084E               	movf	?_vfprintf^(0+256),w
  6725  35E3  00E0               	movwf	vsnprintf@cnt^(0+256)
  6726  35E4  0857               	movf	vsnprintf@n^(0+256),w
  6727  35E5  0458               	iorwf	(vsnprintf@n+1)^(0+256),w
  6728  35E6  1D03               	btfss	3,2
  6729  35E7  1BE1               	btfsc	(vsnprintf@cnt+1)^(0+256),7
  6730  35E8  2E09               	goto	l8445
  6731  35E9  0857               	movf	vsnprintf@n^(0+256),w
  6732  35EA  3EFF               	addlw	255
  6733  35EB  00DC               	movwf	??_vsnprintf^(0+256)
  6734  35EC  30FF               	movlw	255
  6735  35ED  3D58               	addwfc	(vsnprintf@n+1)^(0+256),w
  6736  35EE  00DD               	movwf	(??_vsnprintf+1)^(0+256)
  6737  35EF  085D               	movf	(??_vsnprintf+1)^(0+256),w
  6738  35F0  0261               	subwf	(vsnprintf@cnt+1)^(0+256),w
  6739  35F1  1D03               	skipz
  6740  35F2  2DF5               	goto	u11825
  6741  35F3  085C               	movf	??_vsnprintf^(0+256),w
  6742  35F4  0260               	subwf	vsnprintf@cnt^(0+256),w
  6743  35F5                     u11825:	
  6744  35F5  1C03               	skipc
  6745  35F6  2DFE               	goto	l8441
  6746  35F7  0857               	movf	vsnprintf@n^(0+256),w
  6747  35F8  3EFF               	addlw	255
  6748  35F9  00DE               	movwf	_vsnprintf$1918^(0+256)
  6749  35FA  30FF               	movlw	255
  6750  35FB  3D58               	addwfc	(vsnprintf@n+1)^(0+256),w
  6751  35FC  00DF               	movwf	(_vsnprintf$1918+1)^(0+256)
  6752  35FD  2E02               	goto	l8443
  6753  35FE                     l8441:	
  6754  35FE  0861               	movf	(vsnprintf@cnt+1)^(0+256),w
  6755  35FF  00DF               	movwf	(_vsnprintf$1918+1)^(0+256)
  6756  3600  0860               	movf	vsnprintf@cnt^(0+256),w
  6757  3601  00DE               	movwf	_vsnprintf$1918^(0+256)
  6758  3602                     l8443:	
  6759  3602  085E               	movf	_vsnprintf$1918^(0+256),w
  6760  3603  0755               	addwf	vsnprintf@s^(0+256),w
  6761  3604  0086               	movwf	6
  6762  3605  085F               	movf	(_vsnprintf$1918+1)^(0+256),w
  6763  3606  3D56               	addwfc	(vsnprintf@s+1)^(0+256),w
  6764  3607  0087               	movwf	7
  6765  3608  0181               	clrf	1
  6766  3609                     l8445:	
  6767  3609  0861               	movf	(vsnprintf@cnt+1)^(0+256),w
  6768  360A  00D6               	movwf	(?_vsnprintf+1)^(0+256)
  6769  360B  0860               	movf	vsnprintf@cnt^(0+256),w
  6770  360C  00D5               	movwf	?_vsnprintf^(0+256)
  6771  360D  0008               	return
  6772  360E                     __end_of_vsnprintf:	
  6773                           
  6774                           	psect	text8
  6775  31B6                     __ptext8:	
  6776 ;; *************** function _vfprintf *****************
  6777 ;; Defined at:
  6778 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6779 ;; Parameters:    Size  Location     Type
  6780 ;;  fp              2   46[BANK2 ] PTR struct _IO_FILE
  6781 ;;		 -> vsnprintf@f(6), 
  6782 ;;  fmt             2   48[BANK2 ] PTR const unsigned char 
  6783 ;;		 -> STR_25(18), STR_24(18), STR_23(19), STR_22(20), 
  6784 ;;		 -> STR_21(20), STR_20(21), STR_19(21), STR_18(21), 
  6785 ;;		 -> STR_17(22), STR_16(22), STR_15(21), STR_14(21), 
  6786 ;;		 -> STR_11(38), STR_8(57), STR_7(44), STR_6(42), 
  6787 ;;		 -> STR_3(43), 
  6788 ;;  ap              1   50[BANK2 ] PTR PTR void 
  6789 ;;		 -> snprintf@ap(1), 
  6790 ;; Auto vars:     Size  Location     Type
  6791 ;;  cfmt            2   51[BANK2 ] PTR unsigned char 
  6792 ;;		 -> STR_25(18), STR_24(18), STR_23(19), STR_22(20), 
  6793 ;;		 -> STR_21(20), STR_20(21), STR_19(21), STR_18(21), 
  6794 ;;		 -> STR_17(22), STR_16(22), STR_15(21), STR_14(21), 
  6795 ;;		 -> STR_11(38), STR_8(57), STR_7(44), STR_6(42), 
  6796 ;;		 -> STR_3(43), 
  6797 ;; Return value:  Size  Location     Type
  6798 ;;                  2   46[BANK2 ] int 
  6799 ;; Registers used:
  6800 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6801 ;; Tracked objects:
  6802 ;;		On entry : 0/0
  6803 ;;		On exit  : 0/0
  6804 ;;		Unchanged: 0/0
  6805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6806 ;;      Params:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6807 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6808 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6809 ;;      Totals:         0       2       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6810 ;;Total ram usage:        9 bytes
  6811 ;; Hardware stack levels used:    1
  6812 ;; Hardware stack levels required when called:    7
  6813 ;; This function calls:
  6814 ;;		_vfpfcnvrt
  6815 ;; This function is called by:
  6816 ;;		_vsnprintf
  6817 ;; This function uses a non-reentrant model
  6818 ;;
  6819                           
  6820                           
  6821                           ;psect for function _vfprintf
  6822  31B6                     _vfprintf:	
  6823                           
  6824                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6825                           
  6826                           ;incstack = 0
  6827                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6828  31B6  0022               	movlb	2	; select bank2
  6829  31B7  0851               	movf	(vfprintf@fmt+1)^(0+256),w
  6830  31B8  00D4               	movwf	(vfprintf@cfmt+1)^(0+256)
  6831  31B9  0850               	movf	vfprintf@fmt^(0+256),w
  6832  31BA  00D3               	movwf	vfprintf@cfmt^(0+256)
  6833                           
  6834                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  6835  31BB  0023               	movlb	3	; select bank3
  6836  31BC  01B2               	clrf	_nout^(0+384)
  6837  31BD  01B3               	clrf	(_nout+1)^(0+384)
  6838  31BE                     l8357:	
  6839                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6840                           
  6841                           
  6842                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6843  31BE  0022               	movlb	2	; select bank2
  6844  31BF  0853               	movf	vfprintf@cfmt^(0+256),w
  6845  31C0  0084               	movwf	4
  6846  31C1  0854               	movf	(vfprintf@cfmt+1)^(0+256),w
  6847  31C2  0085               	movwf	5
  6848  31C3  0012               	moviw fsr0++
  6849  31C4  1903               	btfsc	3,2
  6850  31C5  29E6               	goto	l8359
  6851                           
  6852                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  6853  31C6  084F               	movf	(vfprintf@fp+1)^(0+256),w
  6854  31C7  0021               	movlb	1	; select bank1
  6855  31C8  00ED               	movwf	(vfpfcnvrt@fp+1)^(0+128)
  6856  31C9  0022               	movlb	2	; select bank2
  6857  31CA  084E               	movf	vfprintf@fp^(0+256),w
  6858  31CB  0021               	movlb	1	; select bank1
  6859  31CC  00EC               	movwf	vfpfcnvrt@fp^(0+128)
  6860  31CD  3053               	movlw	(low (vfprintf@cfmt| (0+256)))& (0+255)
  6861  31CE  0020               	movlb	0	; select bank0
  6862  31CF  00EE               	movwf	??_vfprintf
  6863  31D0  086E               	movf	??_vfprintf,w
  6864  31D1  0021               	movlb	1	; select bank1
  6865  31D2  00EE               	movwf	vfpfcnvrt@fmt^(0+128)
  6866  31D3  0022               	movlb	2	; select bank2
  6867  31D4  0852               	movf	vfprintf@ap^(0+256),w
  6868  31D5  0020               	movlb	0	; select bank0
  6869  31D6  00EF               	movwf	??_vfprintf+1
  6870  31D7  086F               	movf	??_vfprintf+1,w
  6871  31D8  0021               	movlb	1	; select bank1
  6872  31D9  00EF               	movwf	vfpfcnvrt@ap^(0+128)
  6873  31DA  3195  25D4  31B1   	fcall	_vfpfcnvrt
  6874  31DD  0021               	movlb	1	; select bank1
  6875  31DE  086C               	movf	?_vfpfcnvrt^(0+128),w
  6876  31DF  0023               	movlb	3	; select bank3
  6877  31E0  07B2               	addwf	_nout^(0+384),f
  6878  31E1  0021               	movlb	1	; select bank1
  6879  31E2  086D               	movf	(?_vfpfcnvrt+1)^(0+128),w
  6880  31E3  0023               	movlb	3	; select bank3
  6881  31E4  3DB3               	addwfc	(_nout+1)^(0+384),f
  6882  31E5  29BE               	goto	l8357
  6883  31E6                     l8359:	
  6884                           
  6885                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  6886  31E6  0023               	movlb	3	; select bank3
  6887  31E7  0833               	movf	(_nout+1)^(0+384),w
  6888  31E8  0022               	movlb	2	; select bank2
  6889  31E9  00CF               	movwf	(?_vfprintf+1)^(0+256)
  6890  31EA  0023               	movlb	3	; select bank3
  6891  31EB  0832               	movf	_nout^(0+384),w
  6892  31EC  0022               	movlb	2	; select bank2
  6893  31ED  00CE               	movwf	?_vfprintf^(0+256)
  6894  31EE  0008               	return
  6895  31EF                     __end_of_vfprintf:	
  6896                           
  6897                           	psect	text9
  6898  15D4                     __ptext9:	
  6899 ;; *************** function _vfpfcnvrt *****************
  6900 ;; Defined at:
  6901 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6902 ;; Parameters:    Size  Location     Type
  6903 ;;  fp              2   76[BANK1 ] PTR struct _IO_FILE
  6904 ;;		 -> vsnprintf@f(6), 
  6905 ;;  fmt             1   78[BANK1 ] PTR PTR unsigned char 
  6906 ;;		 -> vfprintf@cfmt(2), 
  6907 ;;  ap              1   79[BANK1 ] PTR PTR void 
  6908 ;;		 -> snprintf@ap(1), 
  6909 ;; Auto vars:     Size  Location     Type
  6910 ;;  llu             8   38[BANK2 ] unsigned long long 
  6911 ;;  ll              8   28[BANK2 ] long long 
  6912 ;;  f               4   24[BANK2 ] long long 
  6913 ;;  ct              3   21[BANK2 ] unsigned char [3]
  6914 ;;  done            2   13[BANK2 ] int 
  6915 ;;  i               2    0        int 
  6916 ;;  c               1   37[BANK2 ] unsigned char 
  6917 ;;  vp              1   36[BANK2 ] PTR void 
  6918 ;;		 -> ?_snprintf(2), adcGain(2), 
  6919 ;;  cp              1   12[BANK2 ] PTR unsigned char 
  6920 ;;		 -> ?_snprintf(2), adcGain(2), 
  6921 ;; Return value:  Size  Location     Type
  6922 ;;                  2   76[BANK1 ] int 
  6923 ;; Registers used:
  6924 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6925 ;; Tracked objects:
  6926 ;;		On entry : 0/0
  6927 ;;		On exit  : 0/0
  6928 ;;		Unchanged: 0/0
  6929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6930 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6931 ;;      Locals:         0       0       0      34       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6932 ;;      Temps:          0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6933 ;;      Totals:         0       0       4      46       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6934 ;;Total ram usage:       50 bytes
  6935 ;; Hardware stack levels used:    1
  6936 ;; Hardware stack levels required when called:    6
  6937 ;; This function calls:
  6938 ;;		_atoi
  6939 ;;		_ctoa
  6940 ;;		_dtoa
  6941 ;;		_efgtoa
  6942 ;;		_fputc
  6943 ;;		_isdigit
  6944 ;;		_isupper
  6945 ;;		_otoa
  6946 ;;		_stoa
  6947 ;;		_strncmp
  6948 ;;		_tolower
  6949 ;;		_utoa
  6950 ;;		_xtoa
  6951 ;; This function is called by:
  6952 ;;		_vfprintf
  6953 ;; This function uses a non-reentrant model
  6954 ;;
  6955                           
  6956                           
  6957                           ;psect for function _vfpfcnvrt
  6958  15D4                     _vfpfcnvrt:	
  6959                           
  6960                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  6961                           
  6962                           ;incstack = 0
  6963                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6964  15D4  0021               	movlb	1	; select bank1
  6965  15D5  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  6966  15D6  0086               	movwf	6
  6967  15D7  3001               	movlw	1	; select bank2/3
  6968  15D8  0087               	movwf	7
  6969  15D9  3F40               	moviw [0]fsr1
  6970  15DA  0022               	movlb	2	; select bank2
  6971  15DB  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6972  15DC  3F41               	moviw [1]fsr1
  6973  15DD  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6974  15DE  0820               	movf	??_vfpfcnvrt^(0+256),w
  6975  15DF  0084               	movwf	4
  6976  15E0  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  6977  15E1  0085               	movwf	5
  6978  15E2  0012               	moviw fsr0++
  6979  15E3  3A25               	xorlw	37
  6980  15E4  1D03               	btfss	3,2
  6981  15E5  2FFE               	goto	L16
  6982                           
  6983                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  6984  15E6  0021               	movlb	1	; select bank1
  6985  15E7  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  6986  15E8  0086               	movwf	6
  6987  15E9  3001               	movlw	1	; select bank2/3
  6988  15EA  0087               	movwf	7
  6989  15EB  3001               	movlw	1
  6990  15EC  0781               	addwf	1,f
  6991  15ED  3141               	addfsr 1,1
  6992  15EE  1803               	skipnc
  6993  15EF  0A81               	incf	1,f
  6994                           
  6995                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  6996  15F0  0023               	movlb	3	; select bank3
  6997  15F1  01B4               	clrf	_width^(0+384)
  6998  15F2  01B5               	clrf	(_width+1)^(0+384)
  6999  15F3  01B8               	clrf	_flags^(0+384)
  7000  15F4  01B9               	clrf	(_flags+1)^(0+384)
  7001                           
  7002                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  7003  15F5  30FF               	movlw	255
  7004  15F6  00B6               	movwf	_prec^(0+384)
  7005  15F7  30FF               	movlw	255
  7006  15F8  00B7               	movwf	(_prec^(0+384)+1)
  7007                           
  7008                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  7009  15F9  0022               	movlb	2	; select bank2
  7010  15FA  01AD               	clrf	vfpfcnvrt@done^(0+256)
  7011  15FB  01AE               	clrf	(vfpfcnvrt@done+1)^(0+256)
  7012                           
  7013                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  7014  15FC  2E1A               	goto	l7915
  7015  15FD                     l861:	
  7016                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 691:       
      +                                    case '-' :
  7017                           
  7018                           
  7019                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  7020  15FD  0023               	movlb	3	; select bank3
  7021  15FE  1438               	bsf	_flags^(0+384),0
  7022  15FF                     l7899:	
  7023                           
  7024                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  7025  15FF  0021               	movlb	1	; select bank1
  7026  1600  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7027  1601  0086               	movwf	6
  7028  1602  3001               	movlw	1	; select bank2/3
  7029  1603  0087               	movwf	7
  7030  1604  3001               	movlw	1
  7031  1605  0781               	addwf	1,f
  7032  1606  3141               	addfsr 1,1
  7033  1607  1803               	skipnc
  7034  1608  0A81               	incf	1,f
  7035                           
  7036                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  7037  1609  2E1A               	goto	l7915
  7038  160A                     l863:	
  7039                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 695:       
      +                                    case '0' :
  7040                           
  7041                           
  7042                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  7043  160A  0023               	movlb	3	; select bank3
  7044  160B  14B8               	bsf	_flags^(0+384),1
  7045  160C  2DFF               	goto	l7899
  7046  160D                     l864:	
  7047                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 699:       
      +                                    case '+' :
  7048                           
  7049                           
  7050                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  7051  160D  0023               	movlb	3	; select bank3
  7052  160E  1538               	bsf	_flags^(0+384),2
  7053  160F  2DFF               	goto	l7899
  7054  1610                     l865:	
  7055                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 703:       
      +                                    case ' ' :
  7056                           
  7057                           
  7058                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  7059  1610  0023               	movlb	3	; select bank3
  7060  1611  15B8               	bsf	_flags^(0+384),3
  7061  1612  2DFF               	goto	l7899
  7062  1613                     l866:	
  7063                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 707:       
      +                                    case '#' :
  7064                           
  7065                           
  7066                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  7067  1613  0023               	movlb	3	; select bank3
  7068  1614  1638               	bsf	_flags^(0+384),4
  7069  1615  2DFF               	goto	l7899
  7070  1616                     l7909:	
  7071                           
  7072                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  7073  1616  3001               	movlw	1
  7074  1617  00AD               	movwf	vfpfcnvrt@done^(0+256)
  7075  1618  3000               	movlw	0
  7076  1619  00AE               	movwf	(vfpfcnvrt@done^(0+256)+1)
  7077  161A                     l7915:	
  7078                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  7079                           
  7080                           
  7081                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  7082  161A  0022               	movlb	2	; select bank2
  7083  161B  082D               	movf	vfpfcnvrt@done^(0+256),w
  7084  161C  042E               	iorwf	(vfpfcnvrt@done+1)^(0+256),w
  7085  161D  1D03               	btfss	3,2
  7086  161E  2E47               	goto	l868
  7087  161F  0021               	movlb	1	; select bank1
  7088  1620  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7089  1621  0086               	movwf	6
  7090  1622  3001               	movlw	1	; select bank2/3
  7091  1623  0087               	movwf	7
  7092  1624  3F40               	moviw [0]fsr1
  7093  1625  0022               	movlb	2	; select bank2
  7094  1626  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7095  1627  3F41               	moviw [1]fsr1
  7096  1628  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7097  1629  0820               	movf	??_vfpfcnvrt^(0+256),w
  7098  162A  0084               	movwf	4
  7099  162B  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  7100  162C  0085               	movwf	5
  7101  162D  0800               	movf	0,w	;code access
  7102  162E  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  7103  162F  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  7104                           
  7105                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7106                           ; Switch size 1, requested type "simple"
  7107                           ; Number of cases is 1, Range of values is 0 to 0
  7108                           ; switch strategies available:
  7109                           ; Name         Instructions Cycles
  7110                           ; simple_byte            4     3 (average)
  7111                           ; direct_byte            8     6 (fixed)
  7112                           ; jumptable            260     6 (fixed)
  7113                           ;	Chosen strategy is simple_byte
  7114  1630  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  7115  1631  3A00               	xorlw	0	; case 0
  7116  1632  1903               	skipnz
  7117  1633  2E35               	goto	l8861
  7118  1634  2E16               	goto	l7909
  7119  1635                     l8861:	
  7120                           
  7121                           ; Switch size 1, requested type "simple"
  7122                           ; Number of cases is 5, Range of values is 32 to 48
  7123                           ; switch strategies available:
  7124                           ; Name         Instructions Cycles
  7125                           ; simple_byte           16     9 (average)
  7126                           ; direct_byte           43     9 (fixed)
  7127                           ; jumptable            263     9 (fixed)
  7128                           ;	Chosen strategy is simple_byte
  7129  1635  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  7130  1636  3A20               	xorlw	32	; case 32
  7131  1637  1903               	skipnz
  7132  1638  2E10               	goto	l865
  7133  1639  3A03               	xorlw	3	; case 35
  7134  163A  1903               	skipnz
  7135  163B  2E13               	goto	l866
  7136  163C  3A08               	xorlw	8	; case 43
  7137  163D  1903               	skipnz
  7138  163E  2E0D               	goto	l864
  7139  163F  3A06               	xorlw	6	; case 45
  7140  1640  1903               	skipnz
  7141  1641  2DFD               	goto	l861
  7142  1642  3A1D               	xorlw	29	; case 48
  7143  1643  1903               	skipnz
  7144  1644  2E0A               	goto	l863
  7145  1645  2E16               	goto	l7909
  7146  1646  2E1A               	goto	l7915
  7147  1647                     l868:	
  7148                           
  7149                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  7150  1647  0023               	movlb	3	; select bank3
  7151  1648  1C38               	btfss	_flags^(0+384),0
  7152  1649  2E4E               	goto	l7919
  7153                           
  7154                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  7155  164A  30FD               	movlw	253
  7156  164B  05B8               	andwf	_flags^(0+384),f
  7157  164C  30FF               	movlw	255
  7158  164D  05B9               	andwf	(_flags+1)^(0+384),f
  7159  164E                     l7919:	
  7160                           
  7161                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  7162  164E  0021               	movlb	1	; select bank1
  7163  164F  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7164  1650  0086               	movwf	6
  7165  1651  3001               	movlw	1	; select bank2/3
  7166  1652  0087               	movwf	7
  7167  1653  3F40               	moviw [0]fsr1
  7168  1654  0022               	movlb	2	; select bank2
  7169  1655  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7170  1656  3F41               	moviw [1]fsr1
  7171  1657  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7172  1658  0820               	movf	??_vfpfcnvrt^(0+256),w
  7173  1659  0084               	movwf	4
  7174  165A  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  7175  165B  0085               	movwf	5
  7176  165C  0012               	moviw fsr0++
  7177  165D  3A2A               	xorlw	42
  7178  165E  1D03               	btfss	3,2
  7179  165F  2E82               	goto	l7931
  7180                           
  7181                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  7182  1660  0021               	movlb	1	; select bank1
  7183  1661  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7184  1662  0086               	movwf	6
  7185  1663  3001               	movlw	1	; select bank2/3
  7186  1664  0087               	movwf	7
  7187  1665  3001               	movlw	1
  7188  1666  0781               	addwf	1,f
  7189  1667  3141               	addfsr 1,1
  7190  1668  1803               	skipnc
  7191  1669  0A81               	incf	1,f
  7192                           
  7193                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  7194  166A  086F               	movf	vfpfcnvrt@ap^(0+128),w
  7195  166B  0086               	movwf	6
  7196  166C  3001               	movlw	1	; select bank2/3
  7197  166D  0087               	movwf	7
  7198  166E  0801               	movf	1,w
  7199  166F  0084               	movwf	4
  7200  1670  3001               	movlw	1	; select bank2/3
  7201  1671  0085               	movwf	5
  7202  1672  3002               	movlw	2
  7203  1673  0781               	addwf	1,f
  7204  1674  3F00               	moviw [0]fsr0
  7205  1675  0023               	movlb	3	; select bank3
  7206  1676  00B4               	movwf	_width^(0+384)
  7207  1677  3F01               	moviw [1]fsr0
  7208  1678  00B5               	movwf	(_width+1)^(0+384)
  7209                           
  7210                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  7211  1679  1FB5               	btfss	(_width+1)^(0+384),7
  7212  167A  2EC7               	goto	l7941
  7213                           
  7214                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  7215  167B  1438               	bsf	_flags^(0+384),0
  7216                           
  7217                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  7218  167C  09B4               	comf	_width^(0+384),f
  7219  167D  09B5               	comf	(_width+1)^(0+384),f
  7220  167E  0AB4               	incf	_width^(0+384),f
  7221  167F  1903               	skipnz
  7222  1680  0AB5               	incf	(_width+1)^(0+384),f
  7223  1681  2EC7               	goto	l7941
  7224  1682                     l7931:	
  7225                           
  7226                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  7227  1682  0021               	movlb	1	; select bank1
  7228  1683  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7229  1684  0086               	movwf	6
  7230  1685  3001               	movlw	1	; select bank2/3
  7231  1686  0087               	movwf	7
  7232  1687  3F40               	moviw [0]fsr1
  7233  1688  00F7               	movwf	atoi@s
  7234  1689  3F41               	moviw [1]fsr1
  7235  168A  00F8               	movwf	atoi@s+1
  7236  168B  31AA  2295  3195   	fcall	_atoi
  7237  168E  0878               	movf	?_atoi+1,w
  7238  168F  0023               	movlb	3	; select bank3
  7239  1690  00B5               	movwf	(_width+1)^(0+384)
  7240  1691  0877               	movf	?_atoi,w
  7241  1692  00B4               	movwf	_width^(0+384)
  7242                           
  7243                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7244  1693  2E9E               	goto	l7935
  7245  1694                     l7933:	
  7246                           
  7247                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  7248  1694  0021               	movlb	1	; select bank1
  7249  1695  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7250  1696  0086               	movwf	6
  7251  1697  3001               	movlw	1	; select bank2/3
  7252  1698  0087               	movwf	7
  7253  1699  3001               	movlw	1
  7254  169A  0781               	addwf	1,f
  7255  169B  3141               	addfsr 1,1
  7256  169C  1803               	skipnc
  7257  169D  0A81               	incf	1,f
  7258  169E                     l7935:	
  7259  169E  0021               	movlb	1	; select bank1
  7260  169F  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7261  16A0  0086               	movwf	6
  7262  16A1  3001               	movlw	1	; select bank2/3
  7263  16A2  0087               	movwf	7
  7264  16A3  3F40               	moviw [0]fsr1
  7265  16A4  0022               	movlb	2	; select bank2
  7266  16A5  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7267  16A6  3F41               	moviw [1]fsr1
  7268  16A7  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7269  16A8  0820               	movf	??_vfpfcnvrt^(0+256),w
  7270  16A9  0084               	movwf	4
  7271  16AA  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  7272  16AB  0085               	movwf	5
  7273  16AC  0800               	movf	0,w	;code access
  7274  16AD  3ED0               	addlw	208
  7275  16AE  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  7276  16AF  30FF               	movlw	255
  7277  16B0  1803               	skipnc
  7278  16B1  3000               	movlw	0
  7279  16B2  00A3               	movwf	((??_vfpfcnvrt+2)^(0+256)+1)
  7280  16B3  3000               	movlw	0
  7281  16B4  0223               	subwf	(??_vfpfcnvrt+3)^(0+256),w
  7282  16B5  300A               	movlw	10
  7283  16B6  1903               	skipnz
  7284  16B7  0222               	subwf	(??_vfpfcnvrt+2)^(0+256),w
  7285  16B8  1803               	btfsc	3,0
  7286  16B9  2EBC               	goto	u11090
  7287  16BA  3001               	movlw	1
  7288  16BB  2EBD               	goto	u11100
  7289  16BC                     u11090:	
  7290  16BC  3000               	movlw	0
  7291  16BD                     u11100:	
  7292  16BD  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  7293  16BE  01A5               	clrf	((??_vfpfcnvrt+4)^(0+256)+1)
  7294  16BF  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  7295  16C0  00AF               	movwf	_vfpfcnvrt$1289^(0+256)
  7296  16C1  0825               	movf	(??_vfpfcnvrt+5)^(0+256),w
  7297  16C2  00B0               	movwf	(_vfpfcnvrt$1289+1)^(0+256)
  7298  16C3  082F               	movf	_vfpfcnvrt$1289^(0+256),w
  7299  16C4  0430               	iorwf	(_vfpfcnvrt$1289+1)^(0+256),w
  7300  16C5  1D03               	btfss	3,2
  7301  16C6  2E94               	goto	l7933
  7302  16C7                     l7941:	
  7303                           
  7304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  7305  16C7  0021               	movlb	1	; select bank1
  7306  16C8  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7307  16C9  0086               	movwf	6
  7308  16CA  3001               	movlw	1	; select bank2/3
  7309  16CB  0087               	movwf	7
  7310  16CC  3F40               	moviw [0]fsr1
  7311  16CD  0022               	movlb	2	; select bank2
  7312  16CE  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7313  16CF  3F41               	moviw [1]fsr1
  7314  16D0  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7315  16D1  0820               	movf	??_vfpfcnvrt^(0+256),w
  7316  16D2  0084               	movwf	4
  7317  16D3  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  7318  16D4  0085               	movwf	5
  7319  16D5  0012               	moviw fsr0++
  7320  16D6  3A2E               	xorlw	46
  7321  16D7  1D03               	btfss	3,2
  7322  16D8  2F56               	goto	l7963
  7323                           
  7324                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  7325  16D9  0023               	movlb	3	; select bank3
  7326  16DA  01B6               	clrf	_prec^(0+384)
  7327  16DB  01B7               	clrf	(_prec+1)^(0+384)
  7328                           
  7329                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  7330  16DC  0021               	movlb	1	; select bank1
  7331  16DD  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7332  16DE  0086               	movwf	6
  7333  16DF  3001               	movlw	1	; select bank2/3
  7334  16E0  0087               	movwf	7
  7335  16E1  3001               	movlw	1
  7336  16E2  0781               	addwf	1,f
  7337  16E3  3141               	addfsr 1,1
  7338  16E4  1803               	skipnc
  7339  16E5  0A81               	incf	1,f
  7340                           
  7341                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  7342  16E6  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7343  16E7  0086               	movwf	6
  7344  16E8  3001               	movlw	1	; select bank2/3
  7345  16E9  0087               	movwf	7
  7346  16EA  3F40               	moviw [0]fsr1
  7347  16EB  0022               	movlb	2	; select bank2
  7348  16EC  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7349  16ED  3F41               	moviw [1]fsr1
  7350  16EE  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7351  16EF  0820               	movf	??_vfpfcnvrt^(0+256),w
  7352  16F0  0084               	movwf	4
  7353  16F1  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  7354  16F2  0085               	movwf	5
  7355  16F3  0012               	moviw fsr0++
  7356  16F4  3A2A               	xorlw	42
  7357  16F5  1D03               	btfss	3,2
  7358  16F6  2F11               	goto	l7953
  7359                           
  7360                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  7361  16F7  0021               	movlb	1	; select bank1
  7362  16F8  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7363  16F9  0086               	movwf	6
  7364  16FA  3001               	movlw	1	; select bank2/3
  7365  16FB  0087               	movwf	7
  7366  16FC  3001               	movlw	1
  7367  16FD  0781               	addwf	1,f
  7368  16FE  3141               	addfsr 1,1
  7369  16FF  1803               	skipnc
  7370  1700  0A81               	incf	1,f
  7371                           
  7372                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  7373  1701  086F               	movf	vfpfcnvrt@ap^(0+128),w
  7374  1702  0086               	movwf	6
  7375  1703  3001               	movlw	1	; select bank2/3
  7376  1704  0087               	movwf	7
  7377  1705  0801               	movf	1,w
  7378  1706  0084               	movwf	4
  7379  1707  3001               	movlw	1	; select bank2/3
  7380  1708  0085               	movwf	5
  7381  1709  3002               	movlw	2
  7382  170A  0781               	addwf	1,f
  7383  170B  3F00               	moviw [0]fsr0
  7384  170C  0023               	movlb	3	; select bank3
  7385  170D  00B6               	movwf	_prec^(0+384)
  7386  170E  3F01               	moviw [1]fsr0
  7387  170F  00B7               	movwf	(_prec+1)^(0+384)
  7388                           
  7389                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  7390  1710  2F56               	goto	l7963
  7391  1711                     l7953:	
  7392                           
  7393                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  7394  1711  0021               	movlb	1	; select bank1
  7395  1712  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7396  1713  0086               	movwf	6
  7397  1714  3001               	movlw	1	; select bank2/3
  7398  1715  0087               	movwf	7
  7399  1716  3F40               	moviw [0]fsr1
  7400  1717  00F7               	movwf	atoi@s
  7401  1718  3F41               	moviw [1]fsr1
  7402  1719  00F8               	movwf	atoi@s+1
  7403  171A  31AA  2295  3195   	fcall	_atoi
  7404  171D  0878               	movf	?_atoi+1,w
  7405  171E  0023               	movlb	3	; select bank3
  7406  171F  00B7               	movwf	(_prec+1)^(0+384)
  7407  1720  0877               	movf	?_atoi,w
  7408  1721  00B6               	movwf	_prec^(0+384)
  7409                           
  7410                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7411  1722  2F2D               	goto	l7957
  7412  1723                     l7955:	
  7413                           
  7414                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  7415  1723  0021               	movlb	1	; select bank1
  7416  1724  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7417  1725  0086               	movwf	6
  7418  1726  3001               	movlw	1	; select bank2/3
  7419  1727  0087               	movwf	7
  7420  1728  3001               	movlw	1
  7421  1729  0781               	addwf	1,f
  7422  172A  3141               	addfsr 1,1
  7423  172B  1803               	skipnc
  7424  172C  0A81               	incf	1,f
  7425  172D                     l7957:	
  7426  172D  0021               	movlb	1	; select bank1
  7427  172E  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7428  172F  0086               	movwf	6
  7429  1730  3001               	movlw	1	; select bank2/3
  7430  1731  0087               	movwf	7
  7431  1732  3F40               	moviw [0]fsr1
  7432  1733  0022               	movlb	2	; select bank2
  7433  1734  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7434  1735  3F41               	moviw [1]fsr1
  7435  1736  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7436  1737  0820               	movf	??_vfpfcnvrt^(0+256),w
  7437  1738  0084               	movwf	4
  7438  1739  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  7439  173A  0085               	movwf	5
  7440  173B  0800               	movf	0,w	;code access
  7441  173C  3ED0               	addlw	208
  7442  173D  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  7443  173E  30FF               	movlw	255
  7444  173F  1803               	skipnc
  7445  1740  3000               	movlw	0
  7446  1741  00A3               	movwf	((??_vfpfcnvrt+2)^(0+256)+1)
  7447  1742  3000               	movlw	0
  7448  1743  0223               	subwf	(??_vfpfcnvrt+3)^(0+256),w
  7449  1744  300A               	movlw	10
  7450  1745  1903               	skipnz
  7451  1746  0222               	subwf	(??_vfpfcnvrt+2)^(0+256),w
  7452  1747  1803               	btfsc	3,0
  7453  1748  2F4B               	goto	u11140
  7454  1749  3001               	movlw	1
  7455  174A  2F4C               	goto	u11150
  7456  174B                     u11140:	
  7457  174B  3000               	movlw	0
  7458  174C                     u11150:	
  7459  174C  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  7460  174D  01A5               	clrf	((??_vfpfcnvrt+4)^(0+256)+1)
  7461  174E  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  7462  174F  00B1               	movwf	_vfpfcnvrt$1290^(0+256)
  7463  1750  0825               	movf	(??_vfpfcnvrt+5)^(0+256),w
  7464  1751  00B2               	movwf	(_vfpfcnvrt$1290+1)^(0+256)
  7465  1752  0831               	movf	_vfpfcnvrt$1290^(0+256),w
  7466  1753  0432               	iorwf	(_vfpfcnvrt$1290+1)^(0+256),w
  7467  1754  1D03               	btfss	3,2
  7468  1755  2F23               	goto	l7955
  7469  1756                     l7963:	
  7470                           
  7471                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  7472  1756  0021               	movlb	1	; select bank1
  7473  1757  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7474  1758  0086               	movwf	6
  7475  1759  3001               	movlw	1	; select bank2/3
  7476  175A  0087               	movwf	7
  7477  175B  3F40               	moviw [0]fsr1
  7478  175C  0022               	movlb	2	; select bank2
  7479  175D  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7480  175E  3F41               	moviw [1]fsr1
  7481  175F  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7482  1760  0820               	movf	??_vfpfcnvrt^(0+256),w
  7483  1761  0084               	movwf	4
  7484  1762  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  7485  1763  0085               	movwf	5
  7486  1764  0800               	movf	0,w	;code access
  7487  1765  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  7488  1766  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  7489  1767  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  7490  1768  00F7               	movwf	tolower@c
  7491  1769  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  7492  176A  00F8               	movwf	tolower@c+1
  7493  176B  31B0  2028  3195   	fcall	_tolower
  7494  176E  0877               	movf	?_tolower,w
  7495  176F  0022               	movlb	2	; select bank2
  7496  1770  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  7497  1771  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  7498  1772  00B5               	movwf	vfpfcnvrt@ct^(0+256)
  7499                           
  7500                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  7501  1773  0835               	movf	vfpfcnvrt@ct^(0+256),w
  7502  1774  1903               	btfsc	3,2
  7503  1775  2FB9               	goto	l7973
  7504                           
  7505                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  7506  1776  0021               	movlb	1	; select bank1
  7507  1777  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7508  1778  0086               	movwf	6
  7509  1779  3001               	movlw	1	; select bank2/3
  7510  177A  0087               	movwf	7
  7511  177B  3F40               	moviw [0]fsr1
  7512  177C  0022               	movlb	2	; select bank2
  7513  177D  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7514  177E  3F41               	moviw [1]fsr1
  7515  177F  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7516  1780  3001               	movlw	1
  7517  1781  0720               	addwf	??_vfpfcnvrt^(0+256),w
  7518  1782  0084               	movwf	4
  7519  1783  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
  7520  1784  1803               	skipnc
  7521  1785  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
  7522  1786  0085               	movwf	5
  7523  1787  0800               	movf	0,w	;code access
  7524  1788  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  7525  1789  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  7526  178A  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  7527  178B  00F7               	movwf	tolower@c
  7528  178C  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  7529  178D  00F8               	movwf	tolower@c+1
  7530  178E  31B0  2028  3195   	fcall	_tolower
  7531  1791  0877               	movf	?_tolower,w
  7532  1792  0022               	movlb	2	; select bank2
  7533  1793  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  7534  1794  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  7535  1795  00B6               	movwf	(vfpfcnvrt@ct^(0+256)+1)
  7536                           
  7537                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  7538  1796  0836               	movf	(vfpfcnvrt@ct^(0+256)+1),w
  7539  1797  1903               	btfsc	3,2
  7540  1798  2FB9               	goto	l7973
  7541                           
  7542                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  7543  1799  0021               	movlb	1	; select bank1
  7544  179A  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7545  179B  0086               	movwf	6
  7546  179C  3001               	movlw	1	; select bank2/3
  7547  179D  0087               	movwf	7
  7548  179E  3F40               	moviw [0]fsr1
  7549  179F  0022               	movlb	2	; select bank2
  7550  17A0  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7551  17A1  3F41               	moviw [1]fsr1
  7552  17A2  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7553  17A3  3002               	movlw	2
  7554  17A4  0720               	addwf	??_vfpfcnvrt^(0+256),w
  7555  17A5  0084               	movwf	4
  7556  17A6  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
  7557  17A7  1803               	skipnc
  7558  17A8  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
  7559  17A9  0085               	movwf	5
  7560  17AA  0800               	movf	0,w	;code access
  7561  17AB  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  7562  17AC  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  7563  17AD  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  7564  17AE  00F7               	movwf	tolower@c
  7565  17AF  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  7566  17B0  00F8               	movwf	tolower@c+1
  7567  17B1  31B0  2028  3195   	fcall	_tolower
  7568  17B4  0877               	movf	?_tolower,w
  7569  17B5  0022               	movlb	2	; select bank2
  7570  17B6  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  7571  17B7  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  7572  17B8  00B7               	movwf	(vfpfcnvrt@ct^(0+256)+2)
  7573  17B9                     l7973:	
  7574                           
  7575                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  7576  17B9  0021               	movlb	1	; select bank1
  7577  17BA  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7578  17BB  0086               	movwf	6
  7579  17BC  3001               	movlw	1	; select bank2/3
  7580  17BD  0087               	movwf	7
  7581  17BE  3F40               	moviw [0]fsr1
  7582  17BF  0022               	movlb	2	; select bank2
  7583  17C0  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7584  17C1  3F41               	moviw [1]fsr1
  7585  17C2  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7586  17C3  0820               	movf	??_vfpfcnvrt^(0+256),w
  7587  17C4  0084               	movwf	4
  7588  17C5  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  7589  17C6  0085               	movwf	5
  7590  17C7  0012               	moviw fsr0++
  7591  17C8  3A63               	xorlw	99
  7592  17C9  31A8  1D03         	btfss	3,2
  7593  17CB  28EE               	goto	l7983
  7594                           
  7595                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  7596  17CC  0021               	movlb	1	; select bank1
  7597  17CD  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7598  17CE  0086               	movwf	6
  7599  17CF  3001               	movlw	1	; select bank2/3
  7600  17D0  0087               	movwf	7
  7601  17D1  3001               	movlw	1
  7602  17D2  0781               	addwf	1,f
  7603  17D3  3141               	addfsr 1,1
  7604  17D4  1803               	skipnc
  7605  17D5  0A81               	incf	1,f
  7606                           
  7607                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7608  17D6  086F               	movf	vfpfcnvrt@ap^(0+128),w
  7609  17D7  0086               	movwf	6
  7610  17D8  3001               	movlw	1	; select bank2/3
  7611  17D9  0087               	movwf	7
  7612  17DA  0801               	movf	1,w
  7613  17DB  0084               	movwf	4
  7614  17DC  3001               	movlw	1	; select bank2/3
  7615  17DD  0085               	movwf	5
  7616  17DE  3002               	movlw	2
  7617  17DF  0781               	addwf	1,f
  7618  17E0  0800               	movf	0,w
  7619  17E1  0022               	movlb	2	; select bank2
  7620  17E2  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7621  17E3  0820               	movf	??_vfpfcnvrt^(0+256),w
  7622  17E4  00C5               	movwf	vfpfcnvrt@c^(0+256)
  7623                           
  7624                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  7625  17E5  0021               	movlb	1	; select bank1
  7626  17E6  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
  7627  17E7  0020               	movlb	0	; select bank0
  7628  17E8  00B1               	movwf	ctoa@fp+1
  7629  17E9  0021               	movlb	1	; select bank1
  7630  17EA  086C               	movf	vfpfcnvrt@fp^(0+128),w
  7631  17EB  0020               	movlb	0	; select bank0
  7632  17EC  00B0               	movwf	ctoa@fp
  7633  17ED  0022               	movlb	2	; select bank2
  7634  17EE  0845               	movf	vfpfcnvrt@c^(0+256),w
  7635  17EF  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7636  17F0  0820               	movf	??_vfpfcnvrt^(0+256),w
  7637  17F1  0020               	movlb	0	; select bank0
  7638  17F2  00B2               	movwf	ctoa@c
  7639  17F3  31B0  20B6         	fcall	_ctoa
  7640  17F5  0020               	movlb	0	; select bank0
  7641  17F6  0831               	movf	?_ctoa+1,w
  7642  17F7  0021               	movlb	1	; select bank1
  7643  17F8  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
  7644  17F9  0020               	movlb	0	; select bank0
  7645  17FA  0830               	movf	?_ctoa,w
  7646  17FB  0021               	movlb	1	; select bank1
  7647  17FC  00EC               	movwf	?_vfpfcnvrt^(0+128)
  7648  17FD  0008               	return
  7649  17FE                     L16:	
  7650  17FE                     L15:	
  7651  17FE  318F  2FD8         	ljmp	l8339
  7652                           
  7653                           	psect	text10
  7654  1B4B                     __ptext10:	
  7655 ;; *************** function _xtoa *****************
  7656 ;; Defined at:
  7657 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7658 ;; Parameters:    Size  Location     Type
  7659 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  7660 ;;		 -> vsnprintf@f(6), 
  7661 ;;  d               8   18[BANK0 ] unsigned long long 
  7662 ;;  x               1   26[BANK0 ] unsigned char 
  7663 ;; Auto vars:     Size  Location     Type
  7664 ;;  n               8   43[BANK0 ] unsigned long long 
  7665 ;;  c               2   53[BANK0 ] int 
  7666 ;;  i               2   51[BANK0 ] int 
  7667 ;;  w               2   41[BANK0 ] int 
  7668 ;;  p               2   39[BANK0 ] int 
  7669 ;; Return value:  Size  Location     Type
  7670 ;;                  2   16[BANK0 ] int 
  7671 ;; Registers used:
  7672 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7673 ;; Tracked objects:
  7674 ;;		On entry : 0/0
  7675 ;;		On exit  : 0/0
  7676 ;;		Unchanged: 0/0
  7677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7678 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7679 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7680 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7681 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7682 ;;Total ram usage:       39 bytes
  7683 ;; Hardware stack levels used:    1
  7684 ;; Hardware stack levels required when called:    5
  7685 ;; This function calls:
  7686 ;;		_isalpha
  7687 ;;		_isupper
  7688 ;;		_pad
  7689 ;;		_toupper
  7690 ;; This function is called by:
  7691 ;;		_vfpfcnvrt
  7692 ;; This function uses a non-reentrant model
  7693 ;;
  7694                           
  7695                           
  7696                           ;psect for function _xtoa
  7697  1B4B                     _xtoa:	
  7698                           
  7699                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  7700                           
  7701                           ;incstack = 0
  7702                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7703  1B4B  0023               	movlb	3	; select bank3
  7704  1B4C  1BB7               	btfsc	(_prec+1)^(0+384),7
  7705  1B4D  2B52               	goto	l827
  7706                           
  7707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  7708  1B4E  30FD               	movlw	253
  7709  1B4F  05B8               	andwf	_flags^(0+384),f
  7710  1B50  30FF               	movlw	255
  7711  1B51  05B9               	andwf	(_flags+1)^(0+384),f
  7712  1B52                     l827:	
  7713                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 631:     }
  7714                           
  7715                           
  7716                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  7717  1B52  0837               	movf	(_prec+1)^(0+384),w
  7718  1B53  3A80               	xorlw	128
  7719  1B54  0020               	movlb	0	; select bank0
  7720  1B55  00BB               	movwf	??_xtoa
  7721  1B56  3080               	movlw	128
  7722  1B57  023B               	subwf	??_xtoa,w
  7723  1B58  1D03               	skipz
  7724  1B59  2B5D               	goto	u10815
  7725  1B5A  3001               	movlw	1
  7726  1B5B  0023               	movlb	3	; select bank3
  7727  1B5C  0236               	subwf	_prec^(0+384),w
  7728  1B5D                     u10815:	
  7729  1B5D  1803               	skipnc
  7730  1B5E  2B65               	goto	l7785
  7731  1B5F  3001               	movlw	1
  7732  1B60  0020               	movlb	0	; select bank0
  7733  1B61  00C7               	movwf	xtoa@p
  7734  1B62  3000               	movlw	0
  7735  1B63  00C8               	movwf	xtoa@p+1
  7736  1B64  2B6D               	goto	l831
  7737  1B65                     l7785:	
  7738  1B65  0023               	movlb	3	; select bank3
  7739  1B66  0837               	movf	(_prec+1)^(0+384),w
  7740  1B67  0020               	movlb	0	; select bank0
  7741  1B68  00C8               	movwf	xtoa@p+1
  7742  1B69  0023               	movlb	3	; select bank3
  7743  1B6A  0836               	movf	_prec^(0+384),w
  7744  1B6B  0020               	movlb	0	; select bank0
  7745  1B6C  00C7               	movwf	xtoa@p
  7746  1B6D                     l831:	
  7747                           
  7748                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  7749  1B6D  0023               	movlb	3	; select bank3
  7750  1B6E  0835               	movf	(_width+1)^(0+384),w
  7751  1B6F  0020               	movlb	0	; select bank0
  7752  1B70  00CA               	movwf	xtoa@w+1
  7753  1B71  0023               	movlb	3	; select bank3
  7754  1B72  0834               	movf	_width^(0+384),w
  7755  1B73  0020               	movlb	0	; select bank0
  7756  1B74  00C9               	movwf	xtoa@w
  7757                           
  7758                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  7759  1B75  0023               	movlb	3	; select bank3
  7760  1B76  1E38               	btfss	_flags^(0+384),4
  7761  1B77  2B7D               	goto	l7791
  7762                           
  7763                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  7764  1B78  30FE               	movlw	254
  7765  1B79  0020               	movlb	0	; select bank0
  7766  1B7A  07C9               	addwf	xtoa@w,f
  7767  1B7B  30FF               	movlw	255
  7768  1B7C  3DCA               	addwfc	xtoa@w+1,f
  7769  1B7D                     l7791:	
  7770                           
  7771                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  7772  1B7D  0020               	movlb	0	; select bank0
  7773  1B7E  0832               	movf	xtoa@d,w
  7774  1B7F  00CB               	movwf	xtoa@n
  7775  1B80  0833               	movf	xtoa@d+1,w
  7776  1B81  00CC               	movwf	xtoa@n+1
  7777  1B82  0834               	movf	xtoa@d+2,w
  7778  1B83  00CD               	movwf	xtoa@n+2
  7779  1B84  0835               	movf	xtoa@d+3,w
  7780  1B85  00CE               	movwf	xtoa@n+3
  7781  1B86  0836               	movf	xtoa@d+4,w
  7782  1B87  00CF               	movwf	xtoa@n+4
  7783  1B88  0837               	movf	xtoa@d+5,w
  7784  1B89  00D0               	movwf	xtoa@n+5
  7785  1B8A  0838               	movf	xtoa@d+6,w
  7786  1B8B  00D1               	movwf	xtoa@n+6
  7787  1B8C  0839               	movf	xtoa@d+7,w
  7788  1B8D  00D2               	movwf	xtoa@n+7
  7789                           
  7790                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  7791  1B8E  304F               	movlw	79
  7792  1B8F  00D3               	movwf	xtoa@i
  7793  1B90  3000               	movlw	0
  7794  1B91  00D4               	movwf	xtoa@i+1
  7795                           
  7796                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  7797  1B92  0025               	movlb	5	; select bank5
  7798  1B93  01EF               	clrf	(_dbuf^(0+640)+79)
  7799                           
  7800                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7801  1B94  2C3F               	goto	l7823
  7802  1B95                     l7795:	
  7803                           
  7804                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  7805  1B95  30FF               	movlw	255
  7806  1B96  0020               	movlb	0	; select bank0
  7807  1B97  07D3               	addwf	xtoa@i,f
  7808  1B98  30FF               	movlw	255
  7809  1B99  3DD4               	addwfc	xtoa@i+1,f
  7810                           
  7811                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  7812  1B9A  300F               	movlw	15
  7813  1B9B  054B               	andwf	xtoa@n,w
  7814  1B9C  00D5               	movwf	xtoa@c
  7815  1B9D  3000               	movlw	0
  7816  1B9E  054C               	andwf	xtoa@n+1,w
  7817  1B9F  00D6               	movwf	xtoa@c+1
  7818                           
  7819                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  7820  1BA0  0856               	movf	xtoa@c+1,w
  7821  1BA1  3A80               	xorlw	128
  7822  1BA2  00BB               	movwf	??_xtoa
  7823  1BA3  3080               	movlw	128
  7824  1BA4  023B               	subwf	??_xtoa,w
  7825  1BA5  1D03               	skipz
  7826  1BA6  2BA9               	goto	u10835
  7827  1BA7  300A               	movlw	10
  7828  1BA8  0255               	subwf	xtoa@c,w
  7829  1BA9                     u10835:	
  7830  1BA9  1C03               	skipc
  7831  1BAA  2BAF               	goto	l7799
  7832  1BAB  0020               	movlb	0	; select bank0
  7833  1BAC  0855               	movf	xtoa@c,w
  7834  1BAD  3E57               	addlw	87
  7835  1BAE  2BB2               	goto	L2
  7836  1BAF                     l7799:	
  7837  1BAF  0020               	movlb	0	; select bank0
  7838  1BB0  0855               	movf	xtoa@c,w
  7839  1BB1  3E30               	addlw	48
  7840  1BB2                     L2:	
  7841  1BB2  00D5               	movwf	xtoa@c
  7842  1BB3  3000               	movlw	0
  7843  1BB4  3D56               	addwfc	xtoa@c+1,w
  7844  1BB5  00D6               	movwf	xtoa@c+1
  7845  1BB6  083A               	movf	xtoa@x,w
  7846  1BB7  3EBF               	addlw	191
  7847  1BB8  00BB               	movwf	??_xtoa
  7848  1BB9  30FF               	movlw	255
  7849  1BBA  1803               	skipnc
  7850  1BBB  3000               	movlw	0
  7851  1BBC  00BC               	movwf	??_xtoa+1
  7852  1BBD  3000               	movlw	0
  7853  1BBE  023C               	subwf	??_xtoa+1,w
  7854  1BBF  301A               	movlw	26
  7855  1BC0  1903               	skipnz
  7856  1BC1  023B               	subwf	??_xtoa,w
  7857  1BC2  1803               	btfsc	3,0
  7858  1BC3  2BC6               	goto	u10840
  7859  1BC4  3001               	movlw	1
  7860  1BC5  2BC7               	goto	u10850
  7861  1BC6                     u10840:	
  7862  1BC6  3000               	movlw	0
  7863  1BC7                     u10850:	
  7864  1BC7  00BD               	movwf	??_xtoa+2
  7865  1BC8  01BE               	clrf	??_xtoa+3
  7866  1BC9  083D               	movf	??_xtoa+2,w
  7867  1BCA  00C3               	movwf	_xtoa$1274
  7868  1BCB  083E               	movf	??_xtoa+3,w
  7869  1BCC  00C4               	movwf	_xtoa$1274+1
  7870  1BCD  0843               	movf	_xtoa$1274,w
  7871  1BCE  0444               	iorwf	_xtoa$1274+1,w
  7872  1BCF  1903               	btfsc	3,2
  7873  1BD0  2BFD               	goto	l7815
  7874  1BD1  3020               	movlw	32
  7875  1BD2  0455               	iorwf	xtoa@c,w
  7876  1BD3  00BB               	movwf	??_xtoa
  7877  1BD4  3000               	movlw	0
  7878  1BD5  0456               	iorwf	xtoa@c+1,w
  7879  1BD6  00BC               	movwf	??_xtoa+1
  7880  1BD7  083B               	movf	??_xtoa,w
  7881  1BD8  3E9F               	addlw	159
  7882  1BD9  00BD               	movwf	??_xtoa+2
  7883  1BDA  30FF               	movlw	255
  7884  1BDB  3D3C               	addwfc	??_xtoa+1,w
  7885  1BDC  00BE               	movwf	??_xtoa+3
  7886  1BDD  3000               	movlw	0
  7887  1BDE  023E               	subwf	??_xtoa+3,w
  7888  1BDF  301A               	movlw	26
  7889  1BE0  1903               	skipnz
  7890  1BE1  023D               	subwf	??_xtoa+2,w
  7891  1BE2  1803               	btfsc	3,0
  7892  1BE3  2BE6               	goto	u10870
  7893  1BE4  3001               	movlw	1
  7894  1BE5  2BE7               	goto	u10880
  7895  1BE6                     u10870:	
  7896  1BE6  3000               	movlw	0
  7897  1BE7                     u10880:	
  7898  1BE7  00BF               	movwf	??_xtoa+4
  7899  1BE8  01C0               	clrf	??_xtoa+5
  7900  1BE9  083F               	movf	??_xtoa+4,w
  7901  1BEA  00C5               	movwf	_xtoa$1275
  7902  1BEB  0840               	movf	??_xtoa+5,w
  7903  1BEC  00C6               	movwf	_xtoa$1275+1
  7904  1BED  0845               	movf	_xtoa$1275,w
  7905  1BEE  0446               	iorwf	_xtoa$1275+1,w
  7906  1BEF  1903               	btfsc	3,2
  7907  1BF0  2BFD               	goto	l7815
  7908                           
  7909                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  7910  1BF1  0856               	movf	xtoa@c+1,w
  7911  1BF2  00F8               	movwf	toupper@c+1
  7912  1BF3  0855               	movf	xtoa@c,w
  7913  1BF4  00F7               	movwf	toupper@c
  7914  1BF5  31B0  204A  319B   	fcall	_toupper
  7915  1BF8  0878               	movf	?_toupper+1,w
  7916  1BF9  0020               	movlb	0	; select bank0
  7917  1BFA  00D6               	movwf	xtoa@c+1
  7918  1BFB  0877               	movf	?_toupper,w
  7919  1BFC  00D5               	movwf	xtoa@c
  7920  1BFD                     l7815:	
  7921                           
  7922                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  7923  1BFD  0855               	movf	xtoa@c,w
  7924  1BFE  00BB               	movwf	??_xtoa
  7925  1BFF  0853               	movf	xtoa@i,w
  7926  1C00  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7927  1C01  0086               	movwf	6
  7928  1C02  3002               	movlw	2	; select bank5/6
  7929  1C03  0087               	movwf	7
  7930  1C04  083B               	movf	??_xtoa,w
  7931  1C05  0081               	movwf	1
  7932                           
  7933                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  7934  1C06  30FF               	movlw	255
  7935  1C07  07C7               	addwf	xtoa@p,f
  7936  1C08  30FF               	movlw	255
  7937  1C09  3DC8               	addwfc	xtoa@p+1,f
  7938                           
  7939                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  7940  1C0A  30FF               	movlw	255
  7941  1C0B  07C9               	addwf	xtoa@w,f
  7942  1C0C  30FF               	movlw	255
  7943  1C0D  3DCA               	addwfc	xtoa@w+1,f
  7944                           
  7945                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  7946  1C0E  304B               	movlw	low xtoa@n
  7947  1C0F  0086               	movwf	6
  7948  1C10  3000               	movlw	high xtoa@n
  7949  1C11  0087               	movwf	7
  7950  1C12  3F40               	moviw [0]fsr1
  7951  1C13  00BB               	movwf	??_xtoa
  7952  1C14  3F41               	moviw [1]fsr1
  7953  1C15  00BC               	movwf	??_xtoa+1
  7954  1C16  3F42               	moviw [2]fsr1
  7955  1C17  00BD               	movwf	??_xtoa+2
  7956  1C18  3F43               	moviw [3]fsr1
  7957  1C19  00BE               	movwf	??_xtoa+3
  7958  1C1A  3F44               	moviw [4]fsr1
  7959  1C1B  00BF               	movwf	??_xtoa+4
  7960  1C1C  3F45               	moviw [5]fsr1
  7961  1C1D  00C0               	movwf	??_xtoa+5
  7962  1C1E  3F46               	moviw [6]fsr1
  7963  1C1F  00C1               	movwf	??_xtoa+6
  7964  1C20  3F47               	moviw [7]fsr1
  7965  1C21  00C2               	movwf	??_xtoa+7
  7966  1C22  3004               	movlw	4
  7967  1C23                     u10905:	
  7968  1C23  0020               	movlb	0	; select bank0
  7969  1C24  36C2               	lsrf	??_xtoa+7,f
  7970  1C25  0CC1               	rrf	??_xtoa+6,f
  7971  1C26  0CC0               	rrf	??_xtoa+5,f
  7972  1C27  0CBF               	rrf	??_xtoa+4,f
  7973  1C28  0CBE               	rrf	??_xtoa+3,f
  7974  1C29  0CBD               	rrf	??_xtoa+2,f
  7975  1C2A  0CBC               	rrf	??_xtoa+1,f
  7976  1C2B  0CBB               	rrf	??_xtoa,f
  7977  1C2C  0B89               	decfsz	9,f
  7978  1C2D  2C23               	goto	u10905
  7979  1C2E  0020               	movlb	0	; select bank0
  7980  1C2F  0842               	movf	??_xtoa+7,w
  7981  1C30  00D2               	movwf	xtoa@n+7
  7982  1C31  0841               	movf	??_xtoa+6,w
  7983  1C32  00D1               	movwf	xtoa@n+6
  7984  1C33  0840               	movf	??_xtoa+5,w
  7985  1C34  00D0               	movwf	xtoa@n+5
  7986  1C35  083F               	movf	??_xtoa+4,w
  7987  1C36  00CF               	movwf	xtoa@n+4
  7988  1C37  083E               	movf	??_xtoa+3,w
  7989  1C38  00CE               	movwf	xtoa@n+3
  7990  1C39  083D               	movf	??_xtoa+2,w
  7991  1C3A  00CD               	movwf	xtoa@n+2
  7992  1C3B  083C               	movf	??_xtoa+1,w
  7993  1C3C  00CC               	movwf	xtoa@n+1
  7994  1C3D  083B               	movf	??_xtoa,w
  7995  1C3E  00CB               	movwf	xtoa@n
  7996  1C3F                     l7823:	
  7997                           
  7998                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7999  1C3F  0020               	movlb	0	; select bank0
  8000  1C40  0854               	movf	xtoa@i+1,w
  8001  1C41  3A80               	xorlw	128
  8002  1C42  00BB               	movwf	??_xtoa
  8003  1C43  3080               	movlw	128
  8004  1C44  023B               	subwf	??_xtoa,w
  8005  1C45  1D03               	skipz
  8006  1C46  2C49               	goto	u10915
  8007  1C47  3002               	movlw	2
  8008  1C48  0253               	subwf	xtoa@i,w
  8009  1C49                     u10915:	
  8010  1C49  1C03               	skipc
  8011  1C4A  2C70               	goto	l852
  8012  1C4B  0020               	movlb	0	; select bank0
  8013  1C4C  084B               	movf	xtoa@n,w
  8014  1C4D  044C               	iorwf	xtoa@n+1,w
  8015  1C4E  044D               	iorwf	xtoa@n+2,w
  8016  1C4F  044E               	iorwf	xtoa@n+3,w
  8017  1C50  044F               	iorwf	xtoa@n+4,w
  8018  1C51  0450               	iorwf	xtoa@n+5,w
  8019  1C52  0451               	iorwf	xtoa@n+6,w
  8020  1C53  0452               	iorwf	xtoa@n+7,w
  8021  1C54  1D03               	skipz
  8022  1C55  2B95               	goto	l7795
  8023  1C56  0848               	movf	xtoa@p+1,w
  8024  1C57  3A80               	xorlw	128
  8025  1C58  00BB               	movwf	??_xtoa
  8026  1C59  3080               	movlw	128
  8027  1C5A  023B               	subwf	??_xtoa,w
  8028  1C5B  1D03               	skipz
  8029  1C5C  2C5F               	goto	u10935
  8030  1C5D  3001               	movlw	1
  8031  1C5E  0247               	subwf	xtoa@p,w
  8032  1C5F                     u10935:	
  8033  1C5F  1803               	skipnc
  8034  1C60  2B95               	goto	l7795
  8035  1C61  0020               	movlb	0	; select bank0
  8036  1C62  084A               	movf	xtoa@w+1,w
  8037  1C63  3A80               	xorlw	128
  8038  1C64  00BB               	movwf	??_xtoa
  8039  1C65  3080               	movlw	128
  8040  1C66  023B               	subwf	??_xtoa,w
  8041  1C67  1D03               	skipz
  8042  1C68  2C6B               	goto	u10945
  8043  1C69  3001               	movlw	1
  8044  1C6A  0249               	subwf	xtoa@w,w
  8045  1C6B                     u10945:	
  8046  1C6B  1C03               	skipc
  8047  1C6C  2C70               	goto	l852
  8048  1C6D  0023               	movlb	3	; select bank3
  8049  1C6E  18B8               	btfsc	_flags^(0+384),1
  8050  1C6F  2B95               	goto	l7795
  8051  1C70                     l852:	
  8052                           
  8053                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  8054  1C70  0023               	movlb	3	; select bank3
  8055  1C71  1E38               	btfss	_flags^(0+384),4
  8056  1C72  2C8E               	goto	l7839
  8057                           
  8058                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  8059  1C73  30FF               	movlw	255
  8060  1C74  0020               	movlb	0	; select bank0
  8061  1C75  07D3               	addwf	xtoa@i,f
  8062  1C76  30FF               	movlw	255
  8063  1C77  3DD4               	addwfc	xtoa@i+1,f
  8064                           
  8065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  8066  1C78  083A               	movf	xtoa@x,w
  8067  1C79  00BB               	movwf	??_xtoa
  8068  1C7A  0853               	movf	xtoa@i,w
  8069  1C7B  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8070  1C7C  0086               	movwf	6
  8071  1C7D  3002               	movlw	2	; select bank5/6
  8072  1C7E  0087               	movwf	7
  8073  1C7F  083B               	movf	??_xtoa,w
  8074  1C80  0081               	movwf	1
  8075                           
  8076                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  8077  1C81  30FF               	movlw	255
  8078  1C82  07D3               	addwf	xtoa@i,f
  8079  1C83  30FF               	movlw	255
  8080  1C84  3DD4               	addwfc	xtoa@i+1,f
  8081                           
  8082                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  8083  1C85  3030               	movlw	48
  8084  1C86  00BB               	movwf	??_xtoa
  8085  1C87  0853               	movf	xtoa@i,w
  8086  1C88  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8087  1C89  0086               	movwf	6
  8088  1C8A  3002               	movlw	2	; select bank5/6
  8089  1C8B  0087               	movwf	7
  8090  1C8C  083B               	movf	??_xtoa,w
  8091  1C8D  0081               	movwf	1
  8092  1C8E                     l7839:	
  8093                           
  8094                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  8095  1C8E  0020               	movlb	0	; select bank0
  8096  1C8F  0831               	movf	xtoa@fp+1,w
  8097  1C90  00A7               	movwf	pad@fp+1
  8098  1C91  0830               	movf	xtoa@fp,w
  8099  1C92  00A6               	movwf	pad@fp
  8100  1C93  0853               	movf	xtoa@i,w
  8101  1C94  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8102  1C95  00BB               	movwf	??_xtoa
  8103  1C96  083B               	movf	??_xtoa,w
  8104  1C97  00A8               	movwf	pad@buf
  8105  1C98  084A               	movf	xtoa@w+1,w
  8106  1C99  00AA               	movwf	pad@p+1
  8107  1C9A  0849               	movf	xtoa@w,w
  8108  1C9B  00A9               	movwf	pad@p
  8109  1C9C  31B3  2343         	fcall	_pad
  8110  1C9E  0020               	movlb	0	; select bank0
  8111  1C9F  0827               	movf	?_pad+1,w
  8112  1CA0  00B1               	movwf	?_xtoa+1
  8113  1CA1  0826               	movf	?_pad,w
  8114  1CA2  00B0               	movwf	?_xtoa
  8115  1CA3  0008               	return
  8116  1CA4                     __end_of_xtoa:	
  8117                           
  8118                           	psect	text11
  8119  304A                     __ptext11:	
  8120 ;; *************** function _toupper *****************
  8121 ;; Defined at:
  8122 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  8123 ;; Parameters:    Size  Location     Type
  8124 ;;  c               2    7[COMMON] int 
  8125 ;; Auto vars:     Size  Location     Type
  8126 ;;		None
  8127 ;; Return value:  Size  Location     Type
  8128 ;;                  2    7[COMMON] int 
  8129 ;; Registers used:
  8130 ;;		wreg, status,2, status,0
  8131 ;; Tracked objects:
  8132 ;;		On entry : 0/0
  8133 ;;		On exit  : 0/0
  8134 ;;		Unchanged: 0/0
  8135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8136 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8137 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8138 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8139 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8140 ;;Total ram usage:        8 bytes
  8141 ;; Hardware stack levels used:    1
  8142 ;; Hardware stack levels required when called:    2
  8143 ;; This function calls:
  8144 ;;		_islower
  8145 ;; This function is called by:
  8146 ;;		_xtoa
  8147 ;; This function uses a non-reentrant model
  8148 ;;
  8149                           
  8150                           
  8151                           ;psect for function _toupper
  8152  304A                     _toupper:	
  8153                           
  8154                           ;incstack = 0
  8155                           ; Regs used in _toupper: [wreg+status,2+status,0]
  8156  304A  0877               	movf	toupper@c,w
  8157  304B  3E9F               	addlw	159
  8158  304C  0020               	movlb	0	; select bank0
  8159  304D  00A0               	movwf	??_toupper
  8160  304E  30FF               	movlw	255
  8161  304F  3D78               	addwfc	toupper@c+1,w
  8162  3050  00A1               	movwf	??_toupper+1
  8163  3051  3000               	movlw	0
  8164  3052  0221               	subwf	??_toupper+1,w
  8165  3053  301A               	movlw	26
  8166  3054  1903               	skipnz
  8167  3055  0220               	subwf	??_toupper,w
  8168  3056  1803               	btfsc	3,0
  8169  3057  285A               	goto	u9790
  8170  3058  3001               	movlw	1
  8171  3059  285B               	goto	u9800
  8172  305A                     u9790:	
  8173  305A  3000               	movlw	0
  8174  305B                     u9800:	
  8175  305B  00A2               	movwf	??_toupper+2
  8176  305C  01A3               	clrf	??_toupper+3
  8177  305D  0822               	movf	??_toupper+2,w
  8178  305E  00F9               	movwf	_toupper$1881
  8179  305F  0823               	movf	??_toupper+3,w
  8180  3060  00FA               	movwf	_toupper$1881+1
  8181  3061  0879               	movf	_toupper$1881,w
  8182  3062  047A               	iorwf	_toupper$1881+1,w
  8183  3063  1903               	btfsc	3,2
  8184  3064  0008               	return
  8185  3065  305F               	movlw	95
  8186  3066  0577               	andwf	toupper@c,w
  8187  3067  00F7               	movwf	?_toupper
  8188  3068  3000               	movlw	0
  8189  3069  0578               	andwf	toupper@c+1,w
  8190  306A  00F8               	movwf	?_toupper+1
  8191  306B  0008               	return
  8192  306C                     __end_of_toupper:	
  8193                           
  8194                           	psect	text12
  8195  07E9                     __ptext12:	
  8196 ;; *************** function _islower *****************
  8197 ;; Defined at:
  8198 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  8199 ;; Parameters:    Size  Location     Type
  8200 ;;  c               2    1[COMMON] int 
  8201 ;; Auto vars:     Size  Location     Type
  8202 ;;		None
  8203 ;; Return value:  Size  Location     Type
  8204 ;;                  2    1[COMMON] int 
  8205 ;; Registers used:
  8206 ;;		wreg, status,2, status,0
  8207 ;; Tracked objects:
  8208 ;;		On entry : 0/0
  8209 ;;		On exit  : 0/0
  8210 ;;		Unchanged: 0/0
  8211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8212 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8214 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8215 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8216 ;;Total ram usage:        6 bytes
  8217 ;; Hardware stack levels used:    1
  8218 ;; Hardware stack levels required when called:    1
  8219 ;; This function calls:
  8220 ;;		Nothing
  8221 ;; This function is called by:
  8222 ;;		_toupper
  8223 ;; This function uses a non-reentrant model
  8224 ;;
  8225                           
  8226                           
  8227                           ;psect for function _islower
  8228  07E9                     _islower:	
  8229                           
  8230                           ;incstack = 0
  8231                           ; Regs used in _islower: [wreg+status,2+status,0]
  8232  07E9  0871               	movf	islower@c,w
  8233  07EA  3E9F               	addlw	159
  8234  07EB  00F3               	movwf	??_islower
  8235  07EC  30FF               	movlw	255
  8236  07ED  3D72               	addwfc	islower@c+1,w
  8237  07EE  00F4               	movwf	??_islower+1
  8238  07EF  3000               	movlw	0
  8239  07F0  0274               	subwf	??_islower+1,w
  8240  07F1  301A               	movlw	26
  8241  07F2  1903               	skipnz
  8242  07F3  0273               	subwf	??_islower,w
  8243  07F4  1803               	btfsc	3,0
  8244  07F5  2FF8               	goto	u9700
  8245  07F6  3001               	movlw	1
  8246  07F7  2FF9               	goto	u9710
  8247  07F8                     u9700:	
  8248  07F8  3000               	movlw	0
  8249  07F9                     u9710:	
  8250  07F9  00F5               	movwf	??_islower+2
  8251  07FA  01F6               	clrf	??_islower+3
  8252  07FB  0875               	movf	??_islower+2,w
  8253  07FC  00F1               	movwf	?_islower
  8254  07FD  0876               	movf	??_islower+3,w
  8255  07FE  00F2               	movwf	?_islower+1
  8256  07FF  0008               	return
  8257  0800                     __end_of_islower:	
  8258                           
  8259                           	psect	text13
  8260  3F84                     __ptext13:	
  8261 ;; *************** function _isalpha *****************
  8262 ;; Defined at:
  8263 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  8264 ;; Parameters:    Size  Location     Type
  8265 ;;  c               2    1[COMMON] int 
  8266 ;; Auto vars:     Size  Location     Type
  8267 ;;		None
  8268 ;; Return value:  Size  Location     Type
  8269 ;;                  2    1[COMMON] int 
  8270 ;; Registers used:
  8271 ;;		wreg, status,2, status,0
  8272 ;; Tracked objects:
  8273 ;;		On entry : 0/0
  8274 ;;		On exit  : 0/0
  8275 ;;		Unchanged: 0/0
  8276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8277 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8279 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8280 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8281 ;;Total ram usage:        8 bytes
  8282 ;; Hardware stack levels used:    1
  8283 ;; Hardware stack levels required when called:    1
  8284 ;; This function calls:
  8285 ;;		Nothing
  8286 ;; This function is called by:
  8287 ;;		_xtoa
  8288 ;; This function uses a non-reentrant model
  8289 ;;
  8290                           
  8291                           
  8292                           ;psect for function _isalpha
  8293  3F84                     _isalpha:	
  8294                           
  8295                           ;incstack = 0
  8296                           ; Regs used in _isalpha: [wreg+status,2+status,0]
  8297  3F84  3020               	movlw	32
  8298  3F85  0471               	iorwf	isalpha@c,w
  8299  3F86  00F3               	movwf	??_isalpha
  8300  3F87  3000               	movlw	0
  8301  3F88  0472               	iorwf	isalpha@c+1,w
  8302  3F89  00F4               	movwf	??_isalpha+1
  8303  3F8A  0873               	movf	??_isalpha,w
  8304  3F8B  3E9F               	addlw	159
  8305  3F8C  00F5               	movwf	??_isalpha+2
  8306  3F8D  30FF               	movlw	255
  8307  3F8E  3D74               	addwfc	??_isalpha+1,w
  8308  3F8F  00F6               	movwf	??_isalpha+3
  8309  3F90  3000               	movlw	0
  8310  3F91  0276               	subwf	??_isalpha+3,w
  8311  3F92  301A               	movlw	26
  8312  3F93  1903               	skipnz
  8313  3F94  0275               	subwf	??_isalpha+2,w
  8314  3F95  1803               	btfsc	3,0
  8315  3F96  2F99               	goto	u5700
  8316  3F97  3001               	movlw	1
  8317  3F98  2F9A               	goto	u5710
  8318  3F99                     u5700:	
  8319  3F99  3000               	movlw	0
  8320  3F9A                     u5710:	
  8321  3F9A  00F7               	movwf	??_isalpha+4
  8322  3F9B  01F8               	clrf	??_isalpha+5
  8323  3F9C  0877               	movf	??_isalpha+4,w
  8324  3F9D  00F1               	movwf	?_isalpha
  8325  3F9E  0878               	movf	??_isalpha+5,w
  8326  3F9F  00F2               	movwf	?_isalpha+1
  8327  3FA0  0008               	return
  8328  3FA1                     __end_of_isalpha:	
  8329                           
  8330                           	psect	text14
  8331  2130                     __ptext14:	
  8332 ;; *************** function _utoa *****************
  8333 ;; Defined at:
  8334 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8335 ;; Parameters:    Size  Location     Type
  8336 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  8337 ;;		 -> vsnprintf@f(6), 
  8338 ;;  d               8   18[BANK0 ] unsigned long long 
  8339 ;; Auto vars:     Size  Location     Type
  8340 ;;  n               8   31[BANK0 ] unsigned long long 
  8341 ;;  i               2   39[BANK0 ] int 
  8342 ;;  w               2   29[BANK0 ] int 
  8343 ;;  p               2   27[BANK0 ] int 
  8344 ;; Return value:  Size  Location     Type
  8345 ;;                  2   16[BANK0 ] int 
  8346 ;; Registers used:
  8347 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8348 ;; Tracked objects:
  8349 ;;		On entry : 0/0
  8350 ;;		On exit  : 0/0
  8351 ;;		Unchanged: 0/0
  8352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8353 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8354 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8355 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8356 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8357 ;;Total ram usage:       25 bytes
  8358 ;; Hardware stack levels used:    1
  8359 ;; Hardware stack levels required when called:    5
  8360 ;; This function calls:
  8361 ;;		___lodiv
  8362 ;;		___lomod
  8363 ;;		_pad
  8364 ;; This function is called by:
  8365 ;;		_vfpfcnvrt
  8366 ;; This function uses a non-reentrant model
  8367 ;;
  8368                           
  8369                           
  8370                           ;psect for function _utoa
  8371  2130                     _utoa:	
  8372                           
  8373                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  8374                           
  8375                           ;incstack = 0
  8376                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8377  2130  0023               	movlb	3	; select bank3
  8378  2131  1BB7               	btfsc	(_prec+1)^(0+384),7
  8379  2132  2937               	goto	l812
  8380                           
  8381                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  8382  2133  30FD               	movlw	253
  8383  2134  05B8               	andwf	_flags^(0+384),f
  8384  2135  30FF               	movlw	255
  8385  2136  05B9               	andwf	(_flags+1)^(0+384),f
  8386  2137                     l812:	
  8387                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 601:     }
  8388                           
  8389                           
  8390                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  8391  2137  0837               	movf	(_prec+1)^(0+384),w
  8392  2138  3A80               	xorlw	128
  8393  2139  0020               	movlb	0	; select bank0
  8394  213A  00BA               	movwf	??_utoa
  8395  213B  3080               	movlw	128
  8396  213C  023A               	subwf	??_utoa,w
  8397  213D  1D03               	skipz
  8398  213E  2942               	goto	u10745
  8399  213F  3001               	movlw	1
  8400  2140  0023               	movlb	3	; select bank3
  8401  2141  0236               	subwf	_prec^(0+384),w
  8402  2142                     u10745:	
  8403  2142  1803               	skipnc
  8404  2143  294A               	goto	l7749
  8405  2144  3001               	movlw	1
  8406  2145  0020               	movlb	0	; select bank0
  8407  2146  00BB               	movwf	utoa@p
  8408  2147  3000               	movlw	0
  8409  2148  00BC               	movwf	utoa@p+1
  8410  2149  2952               	goto	l816
  8411  214A                     l7749:	
  8412  214A  0023               	movlb	3	; select bank3
  8413  214B  0837               	movf	(_prec+1)^(0+384),w
  8414  214C  0020               	movlb	0	; select bank0
  8415  214D  00BC               	movwf	utoa@p+1
  8416  214E  0023               	movlb	3	; select bank3
  8417  214F  0836               	movf	_prec^(0+384),w
  8418  2150  0020               	movlb	0	; select bank0
  8419  2151  00BB               	movwf	utoa@p
  8420  2152                     l816:	
  8421                           
  8422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  8423  2152  0023               	movlb	3	; select bank3
  8424  2153  0835               	movf	(_width+1)^(0+384),w
  8425  2154  0020               	movlb	0	; select bank0
  8426  2155  00BE               	movwf	utoa@w+1
  8427  2156  0023               	movlb	3	; select bank3
  8428  2157  0834               	movf	_width^(0+384),w
  8429  2158  0020               	movlb	0	; select bank0
  8430  2159  00BD               	movwf	utoa@w
  8431                           
  8432                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  8433  215A  0832               	movf	utoa@d,w
  8434  215B  00BF               	movwf	utoa@n
  8435  215C  0833               	movf	utoa@d+1,w
  8436  215D  00C0               	movwf	utoa@n+1
  8437  215E  0834               	movf	utoa@d+2,w
  8438  215F  00C1               	movwf	utoa@n+2
  8439  2160  0835               	movf	utoa@d+3,w
  8440  2161  00C2               	movwf	utoa@n+3
  8441  2162  0836               	movf	utoa@d+4,w
  8442  2163  00C3               	movwf	utoa@n+4
  8443  2164  0837               	movf	utoa@d+5,w
  8444  2165  00C4               	movwf	utoa@n+5
  8445  2166  0838               	movf	utoa@d+6,w
  8446  2167  00C5               	movwf	utoa@n+6
  8447  2168  0839               	movf	utoa@d+7,w
  8448  2169  00C6               	movwf	utoa@n+7
  8449                           
  8450                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  8451  216A  304F               	movlw	79
  8452  216B  00C7               	movwf	utoa@i
  8453  216C  3000               	movlw	0
  8454  216D  00C8               	movwf	utoa@i+1
  8455                           
  8456                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  8457  216E  0025               	movlb	5	; select bank5
  8458  216F  01EF               	clrf	(_dbuf^(0+640)+79)
  8459                           
  8460                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8461  2170  29F6               	goto	l7765
  8462  2171                     l7767:	
  8463  2171  083F               	movf	utoa@n,w
  8464  2172  0440               	iorwf	utoa@n+1,w
  8465  2173  0441               	iorwf	utoa@n+2,w
  8466  2174  0442               	iorwf	utoa@n+3,w
  8467  2175  0443               	iorwf	utoa@n+4,w
  8468  2176  0444               	iorwf	utoa@n+5,w
  8469  2177  0445               	iorwf	utoa@n+6,w
  8470  2178  0446               	iorwf	utoa@n+7,w
  8471  2179  1D03               	skipz
  8472  217A  2995               	goto	l7755
  8473  217B  083C               	movf	utoa@p+1,w
  8474  217C  3A80               	xorlw	128
  8475  217D  00BA               	movwf	??_utoa
  8476  217E  3080               	movlw	128
  8477  217F  023A               	subwf	??_utoa,w
  8478  2180  1D03               	skipz
  8479  2181  2984               	goto	u10775
  8480  2182  3001               	movlw	1
  8481  2183  023B               	subwf	utoa@p,w
  8482  2184                     u10775:	
  8483  2184  1803               	skipnc
  8484  2185  2995               	goto	l7755
  8485  2186  0020               	movlb	0	; select bank0
  8486  2187  083E               	movf	utoa@w+1,w
  8487  2188  3A80               	xorlw	128
  8488  2189  00BA               	movwf	??_utoa
  8489  218A  3080               	movlw	128
  8490  218B  023A               	subwf	??_utoa,w
  8491  218C  1D03               	skipz
  8492  218D  2990               	goto	u10785
  8493  218E  3001               	movlw	1
  8494  218F  023D               	subwf	utoa@w,w
  8495  2190                     u10785:	
  8496  2190  1C03               	skipc
  8497  2191  29FB               	goto	l7775
  8498  2192  0023               	movlb	3	; select bank3
  8499  2193  1CB8               	btfss	_flags^(0+384),1
  8500  2194  29FB               	goto	l7775
  8501  2195                     l7755:	
  8502                           
  8503                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  8504  2195  30FF               	movlw	255
  8505  2196  0020               	movlb	0	; select bank0
  8506  2197  07C7               	addwf	utoa@i,f
  8507  2198  30FF               	movlw	255
  8508  2199  3DC8               	addwfc	utoa@i+1,f
  8509                           
  8510                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  8511  219A  300A               	movlw	10
  8512  219B  00A0               	movwf	___lomod@divisor
  8513  219C  01A1               	clrf	___lomod@divisor+1
  8514  219D  01A2               	clrf	___lomod@divisor+2
  8515  219E  01A3               	clrf	___lomod@divisor+3
  8516  219F  01A4               	clrf	___lomod@divisor+4
  8517  21A0  01A5               	clrf	___lomod@divisor+5
  8518  21A1  01A6               	clrf	___lomod@divisor+6
  8519  21A2  01A7               	clrf	___lomod@divisor+7
  8520  21A3  083F               	movf	utoa@n,w
  8521  21A4  00A8               	movwf	___lomod@dividend
  8522  21A5  0840               	movf	utoa@n+1,w
  8523  21A6  00A9               	movwf	___lomod@dividend+1
  8524  21A7  0841               	movf	utoa@n+2,w
  8525  21A8  00AA               	movwf	___lomod@dividend+2
  8526  21A9  0842               	movf	utoa@n+3,w
  8527  21AA  00AB               	movwf	___lomod@dividend+3
  8528  21AB  0843               	movf	utoa@n+4,w
  8529  21AC  00AC               	movwf	___lomod@dividend+4
  8530  21AD  0844               	movf	utoa@n+5,w
  8531  21AE  00AD               	movwf	___lomod@dividend+5
  8532  21AF  0845               	movf	utoa@n+6,w
  8533  21B0  00AE               	movwf	___lomod@dividend+6
  8534  21B1  0846               	movf	utoa@n+7,w
  8535  21B2  00AF               	movwf	___lomod@dividend+7
  8536  21B3  31A8  2001  31A1   	fcall	___lomod
  8537  21B6  0020               	movlb	0	; select bank0
  8538  21B7  0820               	movf	?___lomod,w
  8539  21B8  3E30               	addlw	48
  8540  21B9  00BA               	movwf	??_utoa
  8541  21BA  0847               	movf	utoa@i,w
  8542  21BB  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8543  21BC  0086               	movwf	6
  8544  21BD  3002               	movlw	2	; select bank5/6
  8545  21BE  0087               	movwf	7
  8546  21BF  083A               	movf	??_utoa,w
  8547  21C0  0081               	movwf	1
  8548                           
  8549                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  8550  21C1  30FF               	movlw	255
  8551  21C2  07BB               	addwf	utoa@p,f
  8552  21C3  30FF               	movlw	255
  8553  21C4  3DBC               	addwfc	utoa@p+1,f
  8554                           
  8555                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  8556  21C5  30FF               	movlw	255
  8557  21C6  07BD               	addwf	utoa@w,f
  8558  21C7  30FF               	movlw	255
  8559  21C8  3DBE               	addwfc	utoa@w+1,f
  8560                           
  8561                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  8562  21C9  300A               	movlw	10
  8563  21CA  00A0               	movwf	___lodiv@divisor
  8564  21CB  01A1               	clrf	___lodiv@divisor+1
  8565  21CC  01A2               	clrf	___lodiv@divisor+2
  8566  21CD  01A3               	clrf	___lodiv@divisor+3
  8567  21CE  01A4               	clrf	___lodiv@divisor+4
  8568  21CF  01A5               	clrf	___lodiv@divisor+5
  8569  21D0  01A6               	clrf	___lodiv@divisor+6
  8570  21D1  01A7               	clrf	___lodiv@divisor+7
  8571  21D2  083F               	movf	utoa@n,w
  8572  21D3  00A8               	movwf	___lodiv@dividend
  8573  21D4  0840               	movf	utoa@n+1,w
  8574  21D5  00A9               	movwf	___lodiv@dividend+1
  8575  21D6  0841               	movf	utoa@n+2,w
  8576  21D7  00AA               	movwf	___lodiv@dividend+2
  8577  21D8  0842               	movf	utoa@n+3,w
  8578  21D9  00AB               	movwf	___lodiv@dividend+3
  8579  21DA  0843               	movf	utoa@n+4,w
  8580  21DB  00AC               	movwf	___lodiv@dividend+4
  8581  21DC  0844               	movf	utoa@n+5,w
  8582  21DD  00AD               	movwf	___lodiv@dividend+5
  8583  21DE  0845               	movf	utoa@n+6,w
  8584  21DF  00AE               	movwf	___lodiv@dividend+6
  8585  21E0  0846               	movf	utoa@n+7,w
  8586  21E1  00AF               	movwf	___lodiv@dividend+7
  8587  21E2  31B7  2702  31A1   	fcall	___lodiv
  8588  21E5  0020               	movlb	0	; select bank0
  8589  21E6  0820               	movf	?___lodiv,w
  8590  21E7  00BF               	movwf	utoa@n
  8591  21E8  0821               	movf	?___lodiv+1,w
  8592  21E9  00C0               	movwf	utoa@n+1
  8593  21EA  0822               	movf	?___lodiv+2,w
  8594  21EB  00C1               	movwf	utoa@n+2
  8595  21EC  0823               	movf	?___lodiv+3,w
  8596  21ED  00C2               	movwf	utoa@n+3
  8597  21EE  0824               	movf	?___lodiv+4,w
  8598  21EF  00C3               	movwf	utoa@n+4
  8599  21F0  0825               	movf	?___lodiv+5,w
  8600  21F1  00C4               	movwf	utoa@n+5
  8601  21F2  0826               	movf	?___lodiv+6,w
  8602  21F3  00C5               	movwf	utoa@n+6
  8603  21F4  0827               	movf	?___lodiv+7,w
  8604  21F5  00C6               	movwf	utoa@n+7
  8605  21F6                     l7765:	
  8606                           
  8607                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8608  21F6  0020               	movlb	0	; select bank0
  8609  21F7  0847               	movf	utoa@i,w
  8610  21F8  0448               	iorwf	utoa@i+1,w
  8611  21F9  1D03               	btfss	3,2
  8612  21FA  2971               	goto	l7767
  8613  21FB                     l7775:	
  8614                           
  8615                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  8616  21FB  0020               	movlb	0	; select bank0
  8617  21FC  0831               	movf	utoa@fp+1,w
  8618  21FD  00A7               	movwf	pad@fp+1
  8619  21FE  0830               	movf	utoa@fp,w
  8620  21FF  00A6               	movwf	pad@fp
  8621  2200  0847               	movf	utoa@i,w
  8622  2201  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8623  2202  00BA               	movwf	??_utoa
  8624  2203  083A               	movf	??_utoa,w
  8625  2204  00A8               	movwf	pad@buf
  8626  2205  083E               	movf	utoa@w+1,w
  8627  2206  00AA               	movwf	pad@p+1
  8628  2207  083D               	movf	utoa@w,w
  8629  2208  00A9               	movwf	pad@p
  8630  2209  31B3  2343         	fcall	_pad
  8631  220B  0020               	movlb	0	; select bank0
  8632  220C  0827               	movf	?_pad+1,w
  8633  220D  00B1               	movwf	?_utoa+1
  8634  220E  0826               	movf	?_pad,w
  8635  220F  00B0               	movwf	?_utoa
  8636  2210  0008               	return
  8637  2211                     __end_of_utoa:	
  8638                           
  8639                           	psect	text15
  8640  2801                     __ptext15:	
  8641 ;; *************** function ___lomod *****************
  8642 ;; Defined at:
  8643 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  8644 ;; Parameters:    Size  Location     Type
  8645 ;;  divisor         8    0[BANK0 ] unsigned long long 
  8646 ;;  dividend        8    8[BANK0 ] unsigned long long 
  8647 ;; Auto vars:     Size  Location     Type
  8648 ;;  counter         1    2[COMMON] unsigned char 
  8649 ;; Return value:  Size  Location     Type
  8650 ;;                  8    0[BANK0 ] unsigned long long 
  8651 ;; Registers used:
  8652 ;;		wreg, status,2, status,0
  8653 ;; Tracked objects:
  8654 ;;		On entry : 0/0
  8655 ;;		On exit  : 0/0
  8656 ;;		Unchanged: 0/0
  8657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8658 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8659 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8660 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8661 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8662 ;;Total ram usage:       18 bytes
  8663 ;; Hardware stack levels used:    1
  8664 ;; Hardware stack levels required when called:    1
  8665 ;; This function calls:
  8666 ;;		Nothing
  8667 ;; This function is called by:
  8668 ;;		_utoa
  8669 ;; This function uses a non-reentrant model
  8670 ;;
  8671                           
  8672                           
  8673                           ;psect for function ___lomod
  8674  2801                     ___lomod:	
  8675                           
  8676                           ;incstack = 0
  8677                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  8678  2801  0020               	movlb	0	; select bank0
  8679  2802  0820               	movf	___lomod@divisor,w
  8680  2803  0421               	iorwf	___lomod@divisor+1,w
  8681  2804  0422               	iorwf	___lomod@divisor+2,w
  8682  2805  0423               	iorwf	___lomod@divisor+3,w
  8683  2806  0424               	iorwf	___lomod@divisor+4,w
  8684  2807  0425               	iorwf	___lomod@divisor+5,w
  8685  2808  0426               	iorwf	___lomod@divisor+6,w
  8686  2809  0427               	iorwf	___lomod@divisor+7,w
  8687  280A  1903               	skipnz
  8688  280B  2859               	goto	l1202
  8689  280C  01F2               	clrf	___lomod@counter
  8690  280D  0AF2               	incf	___lomod@counter,f
  8691  280E                     l5083:	
  8692  280E  1BA7               	btfsc	___lomod@divisor+7,7
  8693  280F  281D               	goto	l5085
  8694  2810  35A0               	lslf	___lomod@divisor,f
  8695  2811  0DA1               	rlf	___lomod@divisor+1,f
  8696  2812  0DA2               	rlf	___lomod@divisor+2,f
  8697  2813  0DA3               	rlf	___lomod@divisor+3,f
  8698  2814  0DA4               	rlf	___lomod@divisor+4,f
  8699  2815  0DA5               	rlf	___lomod@divisor+5,f
  8700  2816  0DA6               	rlf	___lomod@divisor+6,f
  8701  2817  0DA7               	rlf	___lomod@divisor+7,f
  8702  2818  3001               	movlw	1
  8703  2819  00F1               	movwf	??___lomod
  8704  281A  0871               	movf	??___lomod,w
  8705  281B  07F2               	addwf	___lomod@counter,f
  8706  281C  280E               	goto	l5083
  8707  281D                     l5085:	
  8708  281D  0827               	movf	___lomod@divisor+7,w
  8709  281E  022F               	subwf	___lomod@dividend+7,w
  8710  281F  1D03               	skipz
  8711  2820  283B               	goto	u6475
  8712  2821  0826               	movf	___lomod@divisor+6,w
  8713  2822  022E               	subwf	___lomod@dividend+6,w
  8714  2823  1D03               	skipz
  8715  2824  283B               	goto	u6475
  8716  2825  0825               	movf	___lomod@divisor+5,w
  8717  2826  022D               	subwf	___lomod@dividend+5,w
  8718  2827  1D03               	skipz
  8719  2828  283B               	goto	u6475
  8720  2829  0824               	movf	___lomod@divisor+4,w
  8721  282A  022C               	subwf	___lomod@dividend+4,w
  8722  282B  1D03               	skipz
  8723  282C  283B               	goto	u6475
  8724  282D  0823               	movf	___lomod@divisor+3,w
  8725  282E  022B               	subwf	___lomod@dividend+3,w
  8726  282F  1D03               	skipz
  8727  2830  283B               	goto	u6475
  8728  2831  0822               	movf	___lomod@divisor+2,w
  8729  2832  022A               	subwf	___lomod@dividend+2,w
  8730  2833  1D03               	skipz
  8731  2834  283B               	goto	u6475
  8732  2835  0821               	movf	___lomod@divisor+1,w
  8733  2836  0229               	subwf	___lomod@dividend+1,w
  8734  2837  1D03               	skipz
  8735  2838  283B               	goto	u6475
  8736  2839  0820               	movf	___lomod@divisor,w
  8737  283A  0228               	subwf	___lomod@dividend,w
  8738  283B                     u6475:	
  8739  283B  1C03               	skipc
  8740  283C  284D               	goto	l5089
  8741  283D  0820               	movf	___lomod@divisor,w
  8742  283E  02A8               	subwf	___lomod@dividend,f
  8743  283F  0821               	movf	___lomod@divisor+1,w
  8744  2840  3BA9               	subwfb	___lomod@dividend+1,f
  8745  2841  0822               	movf	___lomod@divisor+2,w
  8746  2842  3BAA               	subwfb	___lomod@dividend+2,f
  8747  2843  0823               	movf	___lomod@divisor+3,w
  8748  2844  3BAB               	subwfb	___lomod@dividend+3,f
  8749  2845  0824               	movf	___lomod@divisor+4,w
  8750  2846  3BAC               	subwfb	___lomod@dividend+4,f
  8751  2847  0825               	movf	___lomod@divisor+5,w
  8752  2848  3BAD               	subwfb	___lomod@dividend+5,f
  8753  2849  0826               	movf	___lomod@divisor+6,w
  8754  284A  3BAE               	subwfb	___lomod@dividend+6,f
  8755  284B  0827               	movf	___lomod@divisor+7,w
  8756  284C  3BAF               	subwfb	___lomod@dividend+7,f
  8757  284D                     l5089:	
  8758  284D  36A7               	lsrf	___lomod@divisor+7,f
  8759  284E  0CA6               	rrf	___lomod@divisor+6,f
  8760  284F  0CA5               	rrf	___lomod@divisor+5,f
  8761  2850  0CA4               	rrf	___lomod@divisor+4,f
  8762  2851  0CA3               	rrf	___lomod@divisor+3,f
  8763  2852  0CA2               	rrf	___lomod@divisor+2,f
  8764  2853  0CA1               	rrf	___lomod@divisor+1,f
  8765  2854  0CA0               	rrf	___lomod@divisor,f
  8766  2855  3001               	movlw	1
  8767  2856  02F2               	subwf	___lomod@counter,f
  8768  2857  1D03               	btfss	3,2
  8769  2858  281D               	goto	l5085
  8770  2859                     l1202:	
  8771  2859  0828               	movf	___lomod@dividend,w
  8772  285A  00A0               	movwf	?___lomod
  8773  285B  0829               	movf	___lomod@dividend+1,w
  8774  285C  00A1               	movwf	?___lomod+1
  8775  285D  082A               	movf	___lomod@dividend+2,w
  8776  285E  00A2               	movwf	?___lomod+2
  8777  285F  082B               	movf	___lomod@dividend+3,w
  8778  2860  00A3               	movwf	?___lomod+3
  8779  2861  082C               	movf	___lomod@dividend+4,w
  8780  2862  00A4               	movwf	?___lomod+4
  8781  2863  082D               	movf	___lomod@dividend+5,w
  8782  2864  00A5               	movwf	?___lomod+5
  8783  2865  082E               	movf	___lomod@dividend+6,w
  8784  2866  00A6               	movwf	?___lomod+6
  8785  2867  082F               	movf	___lomod@dividend+7,w
  8786  2868  00A7               	movwf	?___lomod+7
  8787  2869  0008               	return
  8788  286A                     __end_of___lomod:	
  8789                           
  8790                           	psect	text16
  8791  3702                     __ptext16:	
  8792 ;; *************** function ___lodiv *****************
  8793 ;; Defined at:
  8794 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  8795 ;; Parameters:    Size  Location     Type
  8796 ;;  divisor         8    0[BANK0 ] unsigned long long 
  8797 ;;  dividend        8    8[BANK0 ] unsigned long long 
  8798 ;; Auto vars:     Size  Location     Type
  8799 ;;  quotient        8    2[COMMON] unsigned long long 
  8800 ;;  counter         1   10[COMMON] unsigned char 
  8801 ;; Return value:  Size  Location     Type
  8802 ;;                  8    0[BANK0 ] unsigned long long 
  8803 ;; Registers used:
  8804 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8805 ;; Tracked objects:
  8806 ;;		On entry : 0/0
  8807 ;;		On exit  : 0/0
  8808 ;;		Unchanged: 0/0
  8809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8810 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8811 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8812 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8813 ;;      Totals:        10      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8814 ;;Total ram usage:       26 bytes
  8815 ;; Hardware stack levels used:    1
  8816 ;; Hardware stack levels required when called:    1
  8817 ;; This function calls:
  8818 ;;		Nothing
  8819 ;; This function is called by:
  8820 ;;		_utoa
  8821 ;; This function uses a non-reentrant model
  8822 ;;
  8823                           
  8824                           
  8825                           ;psect for function ___lodiv
  8826  3702                     ___lodiv:	
  8827                           
  8828                           ;incstack = 0
  8829                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  8830  3702  3072               	movlw	low ___lodiv@quotient
  8831  3703  0086               	movwf	6
  8832  3704  3000               	movlw	high ___lodiv@quotient
  8833  3705  0087               	movwf	7
  8834  3706  3008               	movlw	8
  8835  3707  00F1               	movwf	??___lodiv
  8836  3708  3000               	movlw	0
  8837  3709                     u6400:	
  8838  3709  001E               	movwi fsr1++
  8839  370A  0BF1               	decfsz	??___lodiv,f
  8840  370B  2F09               	goto	u6400
  8841  370C  0020               	movlb	0	; select bank0
  8842  370D  0820               	movf	___lodiv@divisor,w
  8843  370E  0421               	iorwf	___lodiv@divisor+1,w
  8844  370F  0422               	iorwf	___lodiv@divisor+2,w
  8845  3710  0423               	iorwf	___lodiv@divisor+3,w
  8846  3711  0424               	iorwf	___lodiv@divisor+4,w
  8847  3712  0425               	iorwf	___lodiv@divisor+5,w
  8848  3713  0426               	iorwf	___lodiv@divisor+6,w
  8849  3714  0427               	iorwf	___lodiv@divisor+7,w
  8850  3715  1903               	skipnz
  8851  3716  2F6D               	goto	l1192
  8852  3717  01FA               	clrf	___lodiv@counter
  8853  3718  0AFA               	incf	___lodiv@counter,f
  8854  3719                     l5063:	
  8855  3719  1BA7               	btfsc	___lodiv@divisor+7,7
  8856  371A  2F28               	goto	l5065
  8857  371B  35A0               	lslf	___lodiv@divisor,f
  8858  371C  0DA1               	rlf	___lodiv@divisor+1,f
  8859  371D  0DA2               	rlf	___lodiv@divisor+2,f
  8860  371E  0DA3               	rlf	___lodiv@divisor+3,f
  8861  371F  0DA4               	rlf	___lodiv@divisor+4,f
  8862  3720  0DA5               	rlf	___lodiv@divisor+5,f
  8863  3721  0DA6               	rlf	___lodiv@divisor+6,f
  8864  3722  0DA7               	rlf	___lodiv@divisor+7,f
  8865  3723  3001               	movlw	1
  8866  3724  00F1               	movwf	??___lodiv
  8867  3725  0871               	movf	??___lodiv,w
  8868  3726  07FA               	addwf	___lodiv@counter,f
  8869  3727  2F19               	goto	l5063
  8870  3728                     l5065:	
  8871  3728  35F2               	lslf	___lodiv@quotient,f
  8872  3729  0DF3               	rlf	___lodiv@quotient+1,f
  8873  372A  0DF4               	rlf	___lodiv@quotient+2,f
  8874  372B  0DF5               	rlf	___lodiv@quotient+3,f
  8875  372C  0DF6               	rlf	___lodiv@quotient+4,f
  8876  372D  0DF7               	rlf	___lodiv@quotient+5,f
  8877  372E  0DF8               	rlf	___lodiv@quotient+6,f
  8878  372F  0DF9               	rlf	___lodiv@quotient+7,f
  8879  3730  0827               	movf	___lodiv@divisor+7,w
  8880  3731  022F               	subwf	___lodiv@dividend+7,w
  8881  3732  1D03               	skipz
  8882  3733  2F4E               	goto	u6435
  8883  3734  0826               	movf	___lodiv@divisor+6,w
  8884  3735  022E               	subwf	___lodiv@dividend+6,w
  8885  3736  1D03               	skipz
  8886  3737  2F4E               	goto	u6435
  8887  3738  0825               	movf	___lodiv@divisor+5,w
  8888  3739  022D               	subwf	___lodiv@dividend+5,w
  8889  373A  1D03               	skipz
  8890  373B  2F4E               	goto	u6435
  8891  373C  0824               	movf	___lodiv@divisor+4,w
  8892  373D  022C               	subwf	___lodiv@dividend+4,w
  8893  373E  1D03               	skipz
  8894  373F  2F4E               	goto	u6435
  8895  3740  0823               	movf	___lodiv@divisor+3,w
  8896  3741  022B               	subwf	___lodiv@dividend+3,w
  8897  3742  1D03               	skipz
  8898  3743  2F4E               	goto	u6435
  8899  3744  0822               	movf	___lodiv@divisor+2,w
  8900  3745  022A               	subwf	___lodiv@dividend+2,w
  8901  3746  1D03               	skipz
  8902  3747  2F4E               	goto	u6435
  8903  3748  0821               	movf	___lodiv@divisor+1,w
  8904  3749  0229               	subwf	___lodiv@dividend+1,w
  8905  374A  1D03               	skipz
  8906  374B  2F4E               	goto	u6435
  8907  374C  0820               	movf	___lodiv@divisor,w
  8908  374D  0228               	subwf	___lodiv@dividend,w
  8909  374E                     u6435:	
  8910  374E  1C03               	skipc
  8911  374F  2F61               	goto	l5073
  8912  3750  0820               	movf	___lodiv@divisor,w
  8913  3751  02A8               	subwf	___lodiv@dividend,f
  8914  3752  0821               	movf	___lodiv@divisor+1,w
  8915  3753  3BA9               	subwfb	___lodiv@dividend+1,f
  8916  3754  0822               	movf	___lodiv@divisor+2,w
  8917  3755  3BAA               	subwfb	___lodiv@dividend+2,f
  8918  3756  0823               	movf	___lodiv@divisor+3,w
  8919  3757  3BAB               	subwfb	___lodiv@dividend+3,f
  8920  3758  0824               	movf	___lodiv@divisor+4,w
  8921  3759  3BAC               	subwfb	___lodiv@dividend+4,f
  8922  375A  0825               	movf	___lodiv@divisor+5,w
  8923  375B  3BAD               	subwfb	___lodiv@dividend+5,f
  8924  375C  0826               	movf	___lodiv@divisor+6,w
  8925  375D  3BAE               	subwfb	___lodiv@dividend+6,f
  8926  375E  0827               	movf	___lodiv@divisor+7,w
  8927  375F  3BAF               	subwfb	___lodiv@dividend+7,f
  8928  3760  1472               	bsf	___lodiv@quotient,0
  8929  3761                     l5073:	
  8930  3761  36A7               	lsrf	___lodiv@divisor+7,f
  8931  3762  0CA6               	rrf	___lodiv@divisor+6,f
  8932  3763  0CA5               	rrf	___lodiv@divisor+5,f
  8933  3764  0CA4               	rrf	___lodiv@divisor+4,f
  8934  3765  0CA3               	rrf	___lodiv@divisor+3,f
  8935  3766  0CA2               	rrf	___lodiv@divisor+2,f
  8936  3767  0CA1               	rrf	___lodiv@divisor+1,f
  8937  3768  0CA0               	rrf	___lodiv@divisor,f
  8938  3769  3001               	movlw	1
  8939  376A  02FA               	subwf	___lodiv@counter,f
  8940  376B  1D03               	btfss	3,2
  8941  376C  2F28               	goto	l5065
  8942  376D                     l1192:	
  8943  376D  0872               	movf	___lodiv@quotient,w
  8944  376E  00A0               	movwf	?___lodiv
  8945  376F  0873               	movf	___lodiv@quotient+1,w
  8946  3770  00A1               	movwf	?___lodiv+1
  8947  3771  0874               	movf	___lodiv@quotient+2,w
  8948  3772  00A2               	movwf	?___lodiv+2
  8949  3773  0875               	movf	___lodiv@quotient+3,w
  8950  3774  00A3               	movwf	?___lodiv+3
  8951  3775  0876               	movf	___lodiv@quotient+4,w
  8952  3776  00A4               	movwf	?___lodiv+4
  8953  3777  0877               	movf	___lodiv@quotient+5,w
  8954  3778  00A5               	movwf	?___lodiv+5
  8955  3779  0878               	movf	___lodiv@quotient+6,w
  8956  377A  00A6               	movwf	?___lodiv+6
  8957  377B  0879               	movf	___lodiv@quotient+7,w
  8958  377C  00A7               	movwf	?___lodiv+7
  8959  377D  0008               	return
  8960  377E                     __end_of___lodiv:	
  8961                           
  8962                           	psect	text17
  8963  33E5                     __ptext17:	
  8964 ;; *************** function _strncmp *****************
  8965 ;; Defined at:
  8966 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  8967 ;; Parameters:    Size  Location     Type
  8968 ;;  _l              2    1[COMMON] PTR const unsigned char 
  8969 ;;		 -> vfpfcnvrt@ct(3), STR_25(18), STR_24(18), STR_23(19), 
  8970 ;;		 -> STR_22(20), STR_21(20), STR_20(21), STR_19(21), 
  8971 ;;		 -> STR_18(21), STR_17(22), STR_16(22), STR_15(21), 
  8972 ;;		 -> STR_14(21), STR_11(38), STR_8(57), STR_7(44), 
  8973 ;;		 -> STR_6(42), STR_3(43), 
  8974 ;;  _r              2    3[COMMON] PTR const unsigned char 
  8975 ;;		 -> STR_169(3), STR_165(3), STR_160(3), STR_156(3), 
  8976 ;;		 -> STR_151(3), STR_147(3), STR_142(4), STR_138(4), 
  8977 ;;		 -> STR_133(3), STR_128(3), STR_123(3), STR_118(4), 
  8978 ;;		 -> STR_113(3), STR_108(3), STR_103(3), STR_98(4), 
  8979 ;;		 -> STR_93(3), STR_88(3), STR_83(3), STR_78(4), 
  8980 ;;		 -> STR_73(3), STR_68(3), STR_64(3), STR_59(3), 
  8981 ;;		 -> STR_55(3), STR_50(3), STR_46(3), STR_41(4), 
  8982 ;;		 -> STR_37(4), 
  8983 ;;  n               2    5[COMMON] unsigned int 
  8984 ;; Auto vars:     Size  Location     Type
  8985 ;;  r               2   10[COMMON] PTR const unsigned char 
  8986 ;;		 -> STR_169(3), STR_165(3), STR_160(3), STR_156(3), 
  8987 ;;		 -> STR_151(3), STR_147(3), STR_142(4), STR_138(4), 
  8988 ;;		 -> STR_133(3), STR_128(3), STR_123(3), STR_118(4), 
  8989 ;;		 -> STR_113(3), STR_108(3), STR_103(3), STR_98(4), 
  8990 ;;		 -> STR_93(3), STR_88(3), STR_83(3), STR_78(4), 
  8991 ;;		 -> STR_73(3), STR_68(3), STR_64(3), STR_59(3), 
  8992 ;;		 -> STR_55(3), STR_50(3), STR_46(3), STR_41(4), 
  8993 ;;		 -> STR_37(4), 
  8994 ;;  l               2    8[COMMON] PTR const unsigned char 
  8995 ;;		 -> vfpfcnvrt@ct(3), STR_25(18), STR_24(18), STR_23(19), 
  8996 ;;		 -> STR_22(20), STR_21(20), STR_20(21), STR_19(21), 
  8997 ;;		 -> STR_18(21), STR_17(22), STR_16(22), STR_15(21), 
  8998 ;;		 -> STR_14(21), STR_11(38), STR_8(57), STR_7(44), 
  8999 ;;		 -> STR_6(42), STR_3(43), 
  9000 ;; Return value:  Size  Location     Type
  9001 ;;                  2    1[COMMON] int 
  9002 ;; Registers used:
  9003 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  9004 ;; Tracked objects:
  9005 ;;		On entry : 0/0
  9006 ;;		On exit  : 0/0
  9007 ;;		Unchanged: 0/0
  9008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9009 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9010 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9011 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9012 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9013 ;;Total ram usage:       11 bytes
  9014 ;; Hardware stack levels used:    1
  9015 ;; Hardware stack levels required when called:    1
  9016 ;; This function calls:
  9017 ;;		Nothing
  9018 ;; This function is called by:
  9019 ;;		_vfpfcnvrt
  9020 ;; This function uses a non-reentrant model
  9021 ;;
  9022                           
  9023                           
  9024                           ;psect for function _strncmp
  9025  33E5                     _strncmp:	
  9026                           
  9027                           ;incstack = 0
  9028                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  9029  33E5  0872               	movf	strncmp@_l+1,w
  9030  33E6  00F9               	movwf	strncmp@l+1
  9031  33E7  0871               	movf	strncmp@_l,w
  9032  33E8  00F8               	movwf	strncmp@l
  9033  33E9  0874               	movf	strncmp@_r+1,w
  9034  33EA  00FB               	movwf	strncmp@r+1
  9035  33EB  0873               	movf	strncmp@_r,w
  9036  33EC  00FA               	movwf	strncmp@r
  9037  33ED  3001               	movlw	1
  9038  33EE  02F5               	subwf	strncmp@n,f
  9039  33EF  3000               	movlw	0
  9040  33F0  3BF6               	subwfb	strncmp@n+1,f
  9041  33F1  0A75               	incf	strncmp@n,w
  9042  33F2  1D03               	skipz
  9043  33F3  2C1F               	goto	l6003
  9044  33F4  0A76               	incf	strncmp@n+1,w
  9045  33F5  1D03               	btfss	3,2
  9046  33F6  2C1F               	goto	l6003
  9047  33F7  01F1               	clrf	?_strncmp
  9048  33F8  01F2               	clrf	?_strncmp+1
  9049  33F9  0008               	return
  9050  33FA                     l6005:	
  9051  33FA  087A               	movf	strncmp@r,w
  9052  33FB  0084               	movwf	4
  9053  33FC  087B               	movf	strncmp@r+1,w
  9054  33FD  0085               	movwf	5
  9055  33FE  0012               	moviw fsr0++
  9056  33FF  1903               	btfsc	3,2
  9057  3400  2C26               	goto	l6011
  9058  3401  0875               	movf	strncmp@n,w
  9059  3402  0476               	iorwf	strncmp@n+1,w
  9060  3403  1903               	btfsc	3,2
  9061  3404  2C26               	goto	l6011
  9062  3405  087A               	movf	strncmp@r,w
  9063  3406  0084               	movwf	4
  9064  3407  087B               	movf	strncmp@r+1,w
  9065  3408  0085               	movwf	5
  9066  3409  0800               	movf	0,w	;code access
  9067  340A  00F7               	movwf	??_strncmp
  9068  340B  0878               	movf	strncmp@l,w
  9069  340C  0084               	movwf	4
  9070  340D  0879               	movf	strncmp@l+1,w
  9071  340E  0085               	movwf	5
  9072  340F  0800               	movf	0,w	;code access
  9073  3410  0677               	xorwf	??_strncmp,w
  9074  3411  1D03               	btfss	3,2
  9075  3412  2C26               	goto	l6011
  9076  3413  3001               	movlw	1
  9077  3414  07F8               	addwf	strncmp@l,f
  9078  3415  3000               	movlw	0
  9079  3416  3DF9               	addwfc	strncmp@l+1,f
  9080  3417  3001               	movlw	1
  9081  3418  07FA               	addwf	strncmp@r,f
  9082  3419  3000               	movlw	0
  9083  341A  3DFB               	addwfc	strncmp@r+1,f
  9084  341B  3001               	movlw	1
  9085  341C  02F5               	subwf	strncmp@n,f
  9086  341D  3000               	movlw	0
  9087  341E  3BF6               	subwfb	strncmp@n+1,f
  9088  341F                     l6003:	
  9089  341F  0878               	movf	strncmp@l,w
  9090  3420  0084               	movwf	4
  9091  3421  0879               	movf	strncmp@l+1,w
  9092  3422  0085               	movwf	5
  9093  3423  0012               	moviw fsr0++
  9094  3424  1D03               	btfss	3,2
  9095  3425  2BFA               	goto	l6005
  9096  3426                     l6011:	
  9097  3426  0878               	movf	strncmp@l,w
  9098  3427  0084               	movwf	4
  9099  3428  0879               	movf	strncmp@l+1,w
  9100  3429  0085               	movwf	5
  9101  342A  0800               	movf	0,w	;code access
  9102  342B  00F7               	movwf	??_strncmp
  9103  342C  087A               	movf	strncmp@r,w
  9104  342D  0084               	movwf	4
  9105  342E  087B               	movf	strncmp@r+1,w
  9106  342F  0085               	movwf	5
  9107  3430  0800               	movf	0,w	;code access
  9108  3431  0277               	subwf	??_strncmp,w
  9109  3432  00F1               	movwf	?_strncmp
  9110  3433  01F2               	clrf	?_strncmp+1
  9111  3434  1C03               	skipc
  9112  3435  03F2               	decf	?_strncmp+1,f
  9113  3436  0008               	return
  9114  3437                     __end_of_strncmp:	
  9115                           
  9116                           	psect	text18
  9117  2BDF                     __ptext18:	
  9118 ;; *************** function _stoa *****************
  9119 ;; Defined at:
  9120 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9121 ;; Parameters:    Size  Location     Type
  9122 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  9123 ;;		 -> vsnprintf@f(6), 
  9124 ;;  s               1    2[BANK0 ] PTR unsigned char 
  9125 ;;		 -> ?_snprintf(2), adcGain(2), 
  9126 ;; Auto vars:     Size  Location     Type
  9127 ;;  nuls            7    3[BANK0 ] unsigned char [7]
  9128 ;;  l               2   18[BANK0 ] int 
  9129 ;;  p               2   16[BANK0 ] int 
  9130 ;;  cp              2   14[BANK0 ] PTR unsigned char 
  9131 ;;		 -> ?_snprintf(2), stoa@nuls(7), adcGain(2), 
  9132 ;;  w               2   12[BANK0 ] int 
  9133 ;;  i               2   10[BANK0 ] int 
  9134 ;; Return value:  Size  Location     Type
  9135 ;;                  2    0[BANK0 ] int 
  9136 ;; Registers used:
  9137 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9138 ;; Tracked objects:
  9139 ;;		On entry : 0/0
  9140 ;;		On exit  : 0/0
  9141 ;;		Unchanged: 0/0
  9142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9143 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9144 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9145 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9146 ;;      Totals:         2      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9147 ;;Total ram usage:       22 bytes
  9148 ;; Hardware stack levels used:    1
  9149 ;; Hardware stack levels required when called:    3
  9150 ;; This function calls:
  9151 ;;		_fputc
  9152 ;;		_strlen
  9153 ;; This function is called by:
  9154 ;;		_vfpfcnvrt
  9155 ;; This function uses a non-reentrant model
  9156 ;;
  9157                           
  9158                           
  9159                           ;psect for function _stoa
  9160  2BDF                     _stoa:	
  9161                           
  9162                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  9163                           
  9164                           ;incstack = 0
  9165                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9166  2BDF  3032               	movlw	low stoa@F1174
  9167  2BE0  0086               	movwf	6
  9168  2BE1  3002               	movlw	high stoa@F1174
  9169  2BE2  0087               	movwf	7
  9170  2BE3  3023               	movlw	low stoa@nuls
  9171  2BE4  0084               	movwf	4
  9172  2BE5  3000               	movlw	high stoa@nuls
  9173  2BE6  0085               	movwf	5
  9174  2BE7  3007               	movlw	7
  9175  2BE8  00FA               	movwf	??_stoa
  9176  2BE9                     u10640:	
  9177  2BE9  0016               	moviw fsr1++
  9178  2BEA  001A               	movwi fsr0++
  9179  2BEB  0BFA               	decfsz	??_stoa,f
  9180  2BEC  2BE9               	goto	u10640
  9181                           
  9182                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  9183  2BED  0020               	movlb	0	; select bank0
  9184  2BEE  0822               	movf	stoa@s,w
  9185  2BEF  00AE               	movwf	stoa@cp
  9186  2BF0  3001               	movlw	1
  9187  2BF1  00AF               	movwf	stoa@cp+1
  9188                           
  9189                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  9190  2BF2  082E               	movf	stoa@cp,w
  9191  2BF3  042F               	iorwf	stoa@cp+1,w
  9192  2BF4  1D03               	btfss	3,2
  9193  2BF5  2BFA               	goto	l7701
  9194                           
  9195                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  9196  2BF6  3023               	movlw	low stoa@nuls
  9197  2BF7  00AE               	movwf	stoa@cp
  9198  2BF8  3000               	movlw	high stoa@nuls
  9199  2BF9  00AF               	movwf	stoa@cp+1
  9200  2BFA                     l7701:	
  9201                           
  9202                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  9203  2BFA  082F               	movf	stoa@cp+1,w
  9204  2BFB  00F2               	movwf	strlen@s+1
  9205  2BFC  082E               	movf	stoa@cp,w
  9206  2BFD  00F1               	movwf	strlen@s
  9207  2BFE  31BE  26D6  31AB   	fcall	_strlen
  9208  2C01  0872               	movf	?_strlen+1,w
  9209  2C02  0020               	movlb	0	; select bank0
  9210  2C03  00B3               	movwf	stoa@l+1
  9211  2C04  0871               	movf	?_strlen,w
  9212  2C05  00B2               	movwf	stoa@l
  9213                           
  9214                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  9215  2C06  0023               	movlb	3	; select bank3
  9216  2C07  0837               	movf	(_prec+1)^(0+384),w
  9217  2C08  0020               	movlb	0	; select bank0
  9218  2C09  00B1               	movwf	stoa@p+1
  9219  2C0A  0023               	movlb	3	; select bank3
  9220  2C0B  0836               	movf	_prec^(0+384),w
  9221  2C0C  0020               	movlb	0	; select bank0
  9222  2C0D  00B0               	movwf	stoa@p
  9223                           
  9224                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  9225  2C0E  1BB1               	btfsc	stoa@p+1,7
  9226  2C0F  2C21               	goto	l795
  9227  2C10  0831               	movf	stoa@p+1,w
  9228  2C11  3A80               	xorlw	128
  9229  2C12  00FA               	movwf	??_stoa
  9230  2C13  0833               	movf	stoa@l+1,w
  9231  2C14  3A80               	xorlw	128
  9232  2C15  027A               	subwf	??_stoa,w
  9233  2C16  1D03               	skipz
  9234  2C17  2C1A               	goto	u10675
  9235  2C18  0832               	movf	stoa@l,w
  9236  2C19  0230               	subwf	stoa@p,w
  9237  2C1A                     u10675:	
  9238  2C1A  1803               	btfsc	3,0
  9239  2C1B  2C21               	goto	l795
  9240  2C1C  0020               	movlb	0	; select bank0
  9241  2C1D  0831               	movf	stoa@p+1,w
  9242  2C1E  00B3               	movwf	stoa@l+1
  9243  2C1F  0830               	movf	stoa@p,w
  9244  2C20  00B2               	movwf	stoa@l
  9245  2C21                     l795:	
  9246                           
  9247                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  9248  2C21  0020               	movlb	0	; select bank0
  9249  2C22  0833               	movf	stoa@l+1,w
  9250  2C23  00B1               	movwf	stoa@p+1
  9251  2C24  0832               	movf	stoa@l,w
  9252  2C25  00B0               	movwf	stoa@p
  9253                           
  9254                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  9255  2C26  0023               	movlb	3	; select bank3
  9256  2C27  0835               	movf	(_width+1)^(0+384),w
  9257  2C28  0020               	movlb	0	; select bank0
  9258  2C29  00AD               	movwf	stoa@w+1
  9259  2C2A  0023               	movlb	3	; select bank3
  9260  2C2B  0834               	movf	_width^(0+384),w
  9261  2C2C  0020               	movlb	0	; select bank0
  9262  2C2D  00AC               	movwf	stoa@w
  9263                           
  9264                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  9265  2C2E  0023               	movlb	3	; select bank3
  9266  2C2F  1C38               	btfss	_flags^(0+384),0
  9267  2C30  2C43               	goto	l7719
  9268  2C31  2C50               	goto	l7721
  9269  2C32                     l7715:	
  9270                           
  9271                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  9272  2C32  3020               	movlw	32
  9273  2C33  00F1               	movwf	fputc@c
  9274  2C34  3000               	movlw	0
  9275  2C35  00F2               	movwf	fputc@c+1
  9276  2C36  0020               	movlb	0	; select bank0
  9277  2C37  0821               	movf	stoa@fp+1,w
  9278  2C38  00F4               	movwf	fputc@fp+1
  9279  2C39  0820               	movf	stoa@fp,w
  9280  2C3A  00F3               	movwf	fputc@fp
  9281  2C3B  31A0  2000  31AB   	fcall	_fputc
  9282                           
  9283                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  9284  2C3E  3001               	movlw	1
  9285  2C3F  0020               	movlb	0	; select bank0
  9286  2C40  07B2               	addwf	stoa@l,f
  9287  2C41  3000               	movlw	0
  9288  2C42  3DB3               	addwfc	stoa@l+1,f
  9289  2C43                     l7719:	
  9290                           
  9291                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  9292  2C43  0020               	movlb	0	; select bank0
  9293  2C44  0833               	movf	stoa@l+1,w
  9294  2C45  3A80               	xorlw	128
  9295  2C46  00FA               	movwf	??_stoa
  9296  2C47  082D               	movf	stoa@w+1,w
  9297  2C48  3A80               	xorlw	128
  9298  2C49  027A               	subwf	??_stoa,w
  9299  2C4A  1D03               	skipz
  9300  2C4B  2C4E               	goto	u10695
  9301  2C4C  082C               	movf	stoa@w,w
  9302  2C4D  0232               	subwf	stoa@l,w
  9303  2C4E                     u10695:	
  9304  2C4E  1C03               	skipc
  9305  2C4F  2C32               	goto	l7715
  9306  2C50                     l7721:	
  9307                           
  9308                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  9309  2C50  0020               	movlb	0	; select bank0
  9310  2C51  01AA               	clrf	stoa@i
  9311  2C52  01AB               	clrf	stoa@i+1
  9312  2C53                     l7729:	
  9313                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  9314                           
  9315                           
  9316                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  9317  2C53  082B               	movf	stoa@i+1,w
  9318  2C54  3A80               	xorlw	128
  9319  2C55  00FA               	movwf	??_stoa
  9320  2C56  0831               	movf	stoa@p+1,w
  9321  2C57  3A80               	xorlw	128
  9322  2C58  027A               	subwf	??_stoa,w
  9323  2C59  1D03               	skipz
  9324  2C5A  2C5D               	goto	u10705
  9325  2C5B  0830               	movf	stoa@p,w
  9326  2C5C  022A               	subwf	stoa@i,w
  9327  2C5D                     u10705:	
  9328  2C5D  1803               	btfsc	3,0
  9329  2C5E  2C7C               	goto	l804
  9330                           
  9331                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  9332  2C5F  0020               	movlb	0	; select bank0
  9333  2C60  082E               	movf	stoa@cp,w
  9334  2C61  0086               	movwf	6
  9335  2C62  082F               	movf	stoa@cp+1,w
  9336  2C63  0087               	movwf	7
  9337  2C64  0801               	movf	1,w
  9338  2C65  00FA               	movwf	??_stoa
  9339  2C66  01FB               	clrf	??_stoa+1
  9340  2C67  087A               	movf	??_stoa,w
  9341  2C68  00F1               	movwf	fputc@c
  9342  2C69  087B               	movf	??_stoa+1,w
  9343  2C6A  00F2               	movwf	fputc@c+1
  9344  2C6B  0821               	movf	stoa@fp+1,w
  9345  2C6C  00F4               	movwf	fputc@fp+1
  9346  2C6D  0820               	movf	stoa@fp,w
  9347  2C6E  00F3               	movwf	fputc@fp
  9348  2C6F  31A0  2000  31AB   	fcall	_fputc
  9349                           
  9350                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  9351  2C72  3001               	movlw	1
  9352  2C73  0020               	movlb	0	; select bank0
  9353  2C74  07AE               	addwf	stoa@cp,f
  9354  2C75  3000               	movlw	0
  9355  2C76  3DAF               	addwfc	stoa@cp+1,f
  9356                           
  9357                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  9358  2C77  3001               	movlw	1
  9359  2C78  07AA               	addwf	stoa@i,f
  9360  2C79  3000               	movlw	0
  9361  2C7A  3DAB               	addwfc	stoa@i+1,f
  9362  2C7B  2C53               	goto	l7729
  9363  2C7C                     l804:	
  9364                           
  9365                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  9366  2C7C  0023               	movlb	3	; select bank3
  9367  2C7D  1838               	btfsc	_flags^(0+384),0
  9368  2C7E  2C91               	goto	l7737
  9369  2C7F  2C9E               	goto	l7739
  9370  2C80                     l7733:	
  9371                           
  9372                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  9373  2C80  3020               	movlw	32
  9374  2C81  00F1               	movwf	fputc@c
  9375  2C82  3000               	movlw	0
  9376  2C83  00F2               	movwf	fputc@c+1
  9377  2C84  0020               	movlb	0	; select bank0
  9378  2C85  0821               	movf	stoa@fp+1,w
  9379  2C86  00F4               	movwf	fputc@fp+1
  9380  2C87  0820               	movf	stoa@fp,w
  9381  2C88  00F3               	movwf	fputc@fp
  9382  2C89  31A0  2000  31AB   	fcall	_fputc
  9383                           
  9384                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  9385  2C8C  3001               	movlw	1
  9386  2C8D  0020               	movlb	0	; select bank0
  9387  2C8E  07B2               	addwf	stoa@l,f
  9388  2C8F  3000               	movlw	0
  9389  2C90  3DB3               	addwfc	stoa@l+1,f
  9390  2C91                     l7737:	
  9391                           
  9392                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  9393  2C91  0020               	movlb	0	; select bank0
  9394  2C92  0833               	movf	stoa@l+1,w
  9395  2C93  3A80               	xorlw	128
  9396  2C94  00FA               	movwf	??_stoa
  9397  2C95  082D               	movf	stoa@w+1,w
  9398  2C96  3A80               	xorlw	128
  9399  2C97  027A               	subwf	??_stoa,w
  9400  2C98  1D03               	skipz
  9401  2C99  2C9C               	goto	u10725
  9402  2C9A  082C               	movf	stoa@w,w
  9403  2C9B  0232               	subwf	stoa@l,w
  9404  2C9C                     u10725:	
  9405  2C9C  1C03               	skipc
  9406  2C9D  2C80               	goto	l7733
  9407  2C9E                     l7739:	
  9408                           
  9409                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  9410  2C9E  0020               	movlb	0	; select bank0
  9411  2C9F  0833               	movf	stoa@l+1,w
  9412  2CA0  00A1               	movwf	?_stoa+1
  9413  2CA1  0832               	movf	stoa@l,w
  9414  2CA2  00A0               	movwf	?_stoa
  9415  2CA3  0008               	return
  9416  2CA4                     __end_of_stoa:	
  9417                           
  9418                           	psect	text19
  9419  22FB                     __ptext19:	
  9420 ;; *************** function _otoa *****************
  9421 ;; Defined at:
  9422 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9423 ;; Parameters:    Size  Location     Type
  9424 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  9425 ;;		 -> vsnprintf@f(6), 
  9426 ;;  d               8   18[BANK0 ] unsigned long long 
  9427 ;; Auto vars:     Size  Location     Type
  9428 ;;  n               8   40[BANK0 ] unsigned long long 
  9429 ;;  i               2   48[BANK0 ] int 
  9430 ;;  w               2   38[BANK0 ] int 
  9431 ;;  t               2   36[BANK0 ] int 
  9432 ;;  p               2   34[BANK0 ] int 
  9433 ;; Return value:  Size  Location     Type
  9434 ;;                  2   16[BANK0 ] int 
  9435 ;; Registers used:
  9436 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9437 ;; Tracked objects:
  9438 ;;		On entry : 0/0
  9439 ;;		On exit  : 0/0
  9440 ;;		Unchanged: 0/0
  9441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9442 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9443 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9444 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9445 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9446 ;;Total ram usage:       34 bytes
  9447 ;; Hardware stack levels used:    1
  9448 ;; Hardware stack levels required when called:    5
  9449 ;; This function calls:
  9450 ;;		_pad
  9451 ;; This function is called by:
  9452 ;;		_vfpfcnvrt
  9453 ;; This function uses a non-reentrant model
  9454 ;;
  9455                           
  9456                           
  9457                           ;psect for function _otoa
  9458  22FB                     _otoa:	
  9459                           
  9460                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  9461                           
  9462                           ;incstack = 0
  9463                           ; Regs used in _otoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9464  22FB  0023               	movlb	3	; select bank3
  9465  22FC  1BB7               	btfsc	(_prec+1)^(0+384),7
  9466  22FD  2B02               	goto	l773
  9467                           
  9468                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  9469  22FE  30FD               	movlw	253
  9470  22FF  05B8               	andwf	_flags^(0+384),f
  9471  2300  30FF               	movlw	255
  9472  2301  05B9               	andwf	(_flags+1)^(0+384),f
  9473  2302                     l773:	
  9474                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 515:     }
  9475                           
  9476                           
  9477                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  9478  2302  0837               	movf	(_prec+1)^(0+384),w
  9479  2303  3A80               	xorlw	128
  9480  2304  0020               	movlb	0	; select bank0
  9481  2305  00BA               	movwf	??_otoa
  9482  2306  3080               	movlw	128
  9483  2307  023A               	subwf	??_otoa,w
  9484  2308  1D03               	skipz
  9485  2309  2B0D               	goto	u10555
  9486  230A  3001               	movlw	1
  9487  230B  0023               	movlb	3	; select bank3
  9488  230C  0236               	subwf	_prec^(0+384),w
  9489  230D                     u10555:	
  9490  230D  1803               	skipnc
  9491  230E  2B15               	goto	l7655
  9492  230F  3001               	movlw	1
  9493  2310  0020               	movlb	0	; select bank0
  9494  2311  00C2               	movwf	otoa@p
  9495  2312  3000               	movlw	0
  9496  2313  00C3               	movwf	otoa@p+1
  9497  2314  2B1D               	goto	l777
  9498  2315                     l7655:	
  9499  2315  0023               	movlb	3	; select bank3
  9500  2316  0837               	movf	(_prec+1)^(0+384),w
  9501  2317  0020               	movlb	0	; select bank0
  9502  2318  00C3               	movwf	otoa@p+1
  9503  2319  0023               	movlb	3	; select bank3
  9504  231A  0836               	movf	_prec^(0+384),w
  9505  231B  0020               	movlb	0	; select bank0
  9506  231C  00C2               	movwf	otoa@p
  9507  231D                     l777:	
  9508                           
  9509                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  9510  231D  0023               	movlb	3	; select bank3
  9511  231E  0835               	movf	(_width+1)^(0+384),w
  9512  231F  0020               	movlb	0	; select bank0
  9513  2320  00C7               	movwf	otoa@w+1
  9514  2321  0023               	movlb	3	; select bank3
  9515  2322  0834               	movf	_width^(0+384),w
  9516  2323  0020               	movlb	0	; select bank0
  9517  2324  00C6               	movwf	otoa@w
  9518                           
  9519                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  9520  2325  0832               	movf	otoa@d,w
  9521  2326  00C8               	movwf	otoa@n
  9522  2327  0833               	movf	otoa@d+1,w
  9523  2328  00C9               	movwf	otoa@n+1
  9524  2329  0834               	movf	otoa@d+2,w
  9525  232A  00CA               	movwf	otoa@n+2
  9526  232B  0835               	movf	otoa@d+3,w
  9527  232C  00CB               	movwf	otoa@n+3
  9528  232D  0836               	movf	otoa@d+4,w
  9529  232E  00CC               	movwf	otoa@n+4
  9530  232F  0837               	movf	otoa@d+5,w
  9531  2330  00CD               	movwf	otoa@n+5
  9532  2331  0838               	movf	otoa@d+6,w
  9533  2332  00CE               	movwf	otoa@n+6
  9534  2333  0839               	movf	otoa@d+7,w
  9535  2334  00CF               	movwf	otoa@n+7
  9536                           
  9537                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  9538  2335  304F               	movlw	79
  9539  2336  00D0               	movwf	otoa@i
  9540  2337  3000               	movlw	0
  9541  2338  00D1               	movwf	otoa@i+1
  9542                           
  9543                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  9544  2339  0025               	movlb	5	; select bank5
  9545  233A  01EF               	clrf	(_dbuf^(0+640)+79)
  9546                           
  9547                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  9548  233B  0020               	movlb	0	; select bank0
  9549  233C  01C4               	clrf	otoa@t
  9550  233D  01C5               	clrf	otoa@t+1
  9551                           
  9552                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9553  233E  2BB2               	goto	l778
  9554  233F                     l7673:	
  9555  233F  0020               	movlb	0	; select bank0
  9556  2340  0848               	movf	otoa@n,w
  9557  2341  0449               	iorwf	otoa@n+1,w
  9558  2342  044A               	iorwf	otoa@n+2,w
  9559  2343  044B               	iorwf	otoa@n+3,w
  9560  2344  044C               	iorwf	otoa@n+4,w
  9561  2345  044D               	iorwf	otoa@n+5,w
  9562  2346  044E               	iorwf	otoa@n+6,w
  9563  2347  044F               	iorwf	otoa@n+7,w
  9564  2348  1D03               	skipz
  9565  2349  2B64               	goto	l7663
  9566  234A  0843               	movf	otoa@p+1,w
  9567  234B  3A80               	xorlw	128
  9568  234C  00BA               	movwf	??_otoa
  9569  234D  3080               	movlw	128
  9570  234E  023A               	subwf	??_otoa,w
  9571  234F  1D03               	skipz
  9572  2350  2B53               	goto	u10595
  9573  2351  3001               	movlw	1
  9574  2352  0242               	subwf	otoa@p,w
  9575  2353                     u10595:	
  9576  2353  1803               	skipnc
  9577  2354  2B64               	goto	l7663
  9578  2355  0020               	movlb	0	; select bank0
  9579  2356  0847               	movf	otoa@w+1,w
  9580  2357  3A80               	xorlw	128
  9581  2358  00BA               	movwf	??_otoa
  9582  2359  3080               	movlw	128
  9583  235A  023A               	subwf	??_otoa,w
  9584  235B  1D03               	skipz
  9585  235C  2B5F               	goto	u10605
  9586  235D  3001               	movlw	1
  9587  235E  0246               	subwf	otoa@w,w
  9588  235F                     u10605:	
  9589  235F  1C03               	skipc
  9590  2360  2BBD               	goto	l784
  9591  2361  0023               	movlb	3	; select bank3
  9592  2362  1CB8               	btfss	_flags^(0+384),1
  9593  2363  2BBD               	goto	l784
  9594  2364                     l7663:	
  9595                           
  9596                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  9597  2364  30FF               	movlw	255
  9598  2365  0020               	movlb	0	; select bank0
  9599  2366  07D0               	addwf	otoa@i,f
  9600  2367  30FF               	movlw	255
  9601  2368  3DD1               	addwfc	otoa@i+1,f
  9602                           
  9603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  9604  2369  3007               	movlw	7
  9605  236A  0548               	andwf	otoa@n,w
  9606  236B  00C4               	movwf	otoa@t
  9607  236C  3000               	movlw	0
  9608  236D  0549               	andwf	otoa@n+1,w
  9609  236E  00C5               	movwf	otoa@t+1
  9610                           
  9611                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  9612  236F  0844               	movf	otoa@t,w
  9613  2370  3E30               	addlw	48
  9614  2371  00BA               	movwf	??_otoa
  9615  2372  0850               	movf	otoa@i,w
  9616  2373  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9617  2374  0086               	movwf	6
  9618  2375  3002               	movlw	2	; select bank5/6
  9619  2376  0087               	movwf	7
  9620  2377  083A               	movf	??_otoa,w
  9621  2378  0081               	movwf	1
  9622                           
  9623                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  9624  2379  30FF               	movlw	255
  9625  237A  07C2               	addwf	otoa@p,f
  9626  237B  30FF               	movlw	255
  9627  237C  3DC3               	addwfc	otoa@p+1,f
  9628                           
  9629                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  9630  237D  30FF               	movlw	255
  9631  237E  07C6               	addwf	otoa@w,f
  9632  237F  30FF               	movlw	255
  9633  2380  3DC7               	addwfc	otoa@w+1,f
  9634                           
  9635                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  9636  2381  3048               	movlw	low otoa@n
  9637  2382  0086               	movwf	6
  9638  2383  3000               	movlw	high otoa@n
  9639  2384  0087               	movwf	7
  9640  2385  3F40               	moviw [0]fsr1
  9641  2386  00BA               	movwf	??_otoa
  9642  2387  3F41               	moviw [1]fsr1
  9643  2388  00BB               	movwf	??_otoa+1
  9644  2389  3F42               	moviw [2]fsr1
  9645  238A  00BC               	movwf	??_otoa+2
  9646  238B  3F43               	moviw [3]fsr1
  9647  238C  00BD               	movwf	??_otoa+3
  9648  238D  3F44               	moviw [4]fsr1
  9649  238E  00BE               	movwf	??_otoa+4
  9650  238F  3F45               	moviw [5]fsr1
  9651  2390  00BF               	movwf	??_otoa+5
  9652  2391  3F46               	moviw [6]fsr1
  9653  2392  00C0               	movwf	??_otoa+6
  9654  2393  3F47               	moviw [7]fsr1
  9655  2394  00C1               	movwf	??_otoa+7
  9656  2395  3003               	movlw	3
  9657  2396                     u10565:	
  9658  2396  0020               	movlb	0	; select bank0
  9659  2397  36C1               	lsrf	??_otoa+7,f
  9660  2398  0CC0               	rrf	??_otoa+6,f
  9661  2399  0CBF               	rrf	??_otoa+5,f
  9662  239A  0CBE               	rrf	??_otoa+4,f
  9663  239B  0CBD               	rrf	??_otoa+3,f
  9664  239C  0CBC               	rrf	??_otoa+2,f
  9665  239D  0CBB               	rrf	??_otoa+1,f
  9666  239E  0CBA               	rrf	??_otoa,f
  9667  239F  0B89               	decfsz	9,f
  9668  23A0  2B96               	goto	u10565
  9669  23A1  0020               	movlb	0	; select bank0
  9670  23A2  0841               	movf	??_otoa+7,w
  9671  23A3  00CF               	movwf	otoa@n+7
  9672  23A4  0840               	movf	??_otoa+6,w
  9673  23A5  00CE               	movwf	otoa@n+6
  9674  23A6  083F               	movf	??_otoa+5,w
  9675  23A7  00CD               	movwf	otoa@n+5
  9676  23A8  083E               	movf	??_otoa+4,w
  9677  23A9  00CC               	movwf	otoa@n+4
  9678  23AA  083D               	movf	??_otoa+3,w
  9679  23AB  00CB               	movwf	otoa@n+3
  9680  23AC  083C               	movf	??_otoa+2,w
  9681  23AD  00CA               	movwf	otoa@n+2
  9682  23AE  083B               	movf	??_otoa+1,w
  9683  23AF  00C9               	movwf	otoa@n+1
  9684  23B0  083A               	movf	??_otoa,w
  9685  23B1  00C8               	movwf	otoa@n
  9686  23B2                     l778:	
  9687                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 531:     }
  9688                           
  9689                           
  9690                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9691  23B2  0851               	movf	otoa@i+1,w
  9692  23B3  3A80               	xorlw	128
  9693  23B4  00BA               	movwf	??_otoa
  9694  23B5  3080               	movlw	128
  9695  23B6  023A               	subwf	??_otoa,w
  9696  23B7  1D03               	skipz
  9697  23B8  2BBB               	goto	u10575
  9698  23B9  3001               	movlw	1
  9699  23BA  0250               	subwf	otoa@i,w
  9700  23BB                     u10575:	
  9701  23BB  1803               	btfsc	3,0
  9702  23BC  2B3F               	goto	l7673
  9703  23BD                     l784:	
  9704                           
  9705                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  9706  23BD  0023               	movlb	3	; select bank3
  9707  23BE  1E38               	btfss	_flags^(0+384),4
  9708  23BF  2BD6               	goto	l7689
  9709  23C0  0020               	movlb	0	; select bank0
  9710  23C1  0844               	movf	otoa@t,w
  9711  23C2  0445               	iorwf	otoa@t+1,w
  9712  23C3  1903               	btfsc	3,2
  9713  23C4  2BD6               	goto	l7689
  9714                           
  9715                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  9716  23C5  30FF               	movlw	255
  9717  23C6  07D0               	addwf	otoa@i,f
  9718  23C7  30FF               	movlw	255
  9719  23C8  3DD1               	addwfc	otoa@i+1,f
  9720                           
  9721                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  9722  23C9  3030               	movlw	48
  9723  23CA  00BA               	movwf	??_otoa
  9724  23CB  0850               	movf	otoa@i,w
  9725  23CC  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9726  23CD  0086               	movwf	6
  9727  23CE  3002               	movlw	2	; select bank5/6
  9728  23CF  0087               	movwf	7
  9729  23D0  083A               	movf	??_otoa,w
  9730  23D1  0081               	movwf	1
  9731                           
  9732                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  9733  23D2  30FF               	movlw	255
  9734  23D3  07C6               	addwf	otoa@w,f
  9735  23D4  30FF               	movlw	255
  9736  23D5  3DC7               	addwfc	otoa@w+1,f
  9737  23D6                     l7689:	
  9738                           
  9739                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  9740  23D6  0020               	movlb	0	; select bank0
  9741  23D7  0831               	movf	otoa@fp+1,w
  9742  23D8  00A7               	movwf	pad@fp+1
  9743  23D9  0830               	movf	otoa@fp,w
  9744  23DA  00A6               	movwf	pad@fp
  9745  23DB  0850               	movf	otoa@i,w
  9746  23DC  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9747  23DD  00BA               	movwf	??_otoa
  9748  23DE  083A               	movf	??_otoa,w
  9749  23DF  00A8               	movwf	pad@buf
  9750  23E0  0847               	movf	otoa@w+1,w
  9751  23E1  00AA               	movwf	pad@p+1
  9752  23E2  0846               	movf	otoa@w,w
  9753  23E3  00A9               	movwf	pad@p
  9754  23E4  31B3  2343         	fcall	_pad
  9755  23E6  0020               	movlb	0	; select bank0
  9756  23E7  0827               	movf	?_pad+1,w
  9757  23E8  00B1               	movwf	?_otoa+1
  9758  23E9  0826               	movf	?_pad,w
  9759  23EA  00B0               	movwf	?_otoa
  9760  23EB  0008               	return
  9761  23EC                     __end_of_otoa:	
  9762                           
  9763                           	psect	text20
  9764  0063                     __ptext20:	
  9765 ;; *************** function _efgtoa *****************
  9766 ;; Defined at:
  9767 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9768 ;; Parameters:    Size  Location     Type
  9769 ;;  fp              2    9[BANK1 ] PTR struct _IO_FILE
  9770 ;;		 -> vsnprintf@f(6), 
  9771 ;;  f               4   11[BANK1 ] PTR struct _IO_FILE
  9772 ;;  c               1   15[BANK1 ] unsigned char 
  9773 ;; Auto vars:     Size  Location     Type
  9774 ;;  u               4   72[BANK1 ] unsigned char 
  9775 ;;  g               4   64[BANK1 ] unsigned char 
  9776 ;;  l               4   58[BANK1 ] unsigned char 
  9777 ;;  h               4   54[BANK1 ] unsigned char 
  9778 ;;  ou              4   20[BANK1 ] unsigned char 
  9779 ;;  n               2   70[BANK1 ] int 
  9780 ;;  e               2   68[BANK1 ] int 
  9781 ;;  i               2   62[BANK1 ] int 
  9782 ;;  w               2   51[BANK1 ] int 
  9783 ;;  p               2   48[BANK1 ] int 
  9784 ;;  sign            2   46[BANK1 ] int 
  9785 ;;  d               2   44[BANK1 ] int 
  9786 ;;  ne              2   42[BANK1 ] int 
  9787 ;;  m               2   40[BANK1 ] int 
  9788 ;;  pp              2   38[BANK1 ] int 
  9789 ;;  t               2   36[BANK1 ] int 
  9790 ;;  mode            1   53[BANK1 ] unsigned char 
  9791 ;;  nmode           1   50[BANK1 ] unsigned char 
  9792 ;; Return value:  Size  Location     Type
  9793 ;;                  2    9[BANK1 ] int 
  9794 ;; Registers used:
  9795 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9796 ;; Tracked objects:
  9797 ;;		On entry : 0/0
  9798 ;;		On exit  : 0/0
  9799 ;;		Unchanged: 0/0
  9800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9801 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9802 ;;      Locals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9803 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9804 ;;      Totals:         0       0      67       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9805 ;;Total ram usage:       67 bytes
  9806 ;; Hardware stack levels used:    1
  9807 ;; Hardware stack levels required when called:    5
  9808 ;; This function calls:
  9809 ;;		___awdiv
  9810 ;;		___awmod
  9811 ;;		___fladd
  9812 ;;		___fldiv
  9813 ;;		___fleq
  9814 ;;		___flge
  9815 ;;		___flmul
  9816 ;;		___flneg
  9817 ;;		___flsub
  9818 ;;		___fltol
  9819 ;;		___fpclassifyf
  9820 ;;		_floorf
  9821 ;;		_isupper
  9822 ;;		_pad
  9823 ;;		_strcpy
  9824 ;;		_tolower
  9825 ;; This function is called by:
  9826 ;;		_vfpfcnvrt
  9827 ;; This function uses a non-reentrant model
  9828 ;;
  9829                           
  9830                           
  9831                           ;psect for function _efgtoa
  9832  0063                     _efgtoa:	
  9833                           
  9834                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  9835                           
  9836                           ;incstack = 0
  9837                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9838  0063  0021               	movlb	1	; select bank1
  9839  0064  01CE               	clrf	efgtoa@sign^(0+128)
  9840  0065  01CF               	clrf	(efgtoa@sign+1)^(0+128)
  9841                           
  9842                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  9843  0066  082E               	movf	(efgtoa@f+3)^(0+128),w
  9844  0067  00E3               	movwf	(efgtoa@g+3)^(0+128)
  9845  0068  082D               	movf	(efgtoa@f+2)^(0+128),w
  9846  0069  00E2               	movwf	(efgtoa@g+2)^(0+128)
  9847  006A  082C               	movf	(efgtoa@f+1)^(0+128),w
  9848  006B  00E1               	movwf	(efgtoa@g+1)^(0+128)
  9849  006C  082B               	movf	efgtoa@f^(0+128),w
  9850  006D  00E0               	movwf	efgtoa@g^(0+128)
  9851                           
  9852                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  9853  006E  0863               	movf	(efgtoa@g+3)^(0+128),w
  9854  006F  0020               	movlb	0	; select bank0
  9855  0070  00DD               	movwf	___flge@ff1+3
  9856  0071  0021               	movlb	1	; select bank1
  9857  0072  0862               	movf	(efgtoa@g+2)^(0+128),w
  9858  0073  0020               	movlb	0	; select bank0
  9859  0074  00DC               	movwf	___flge@ff1+2
  9860  0075  0021               	movlb	1	; select bank1
  9861  0076  0861               	movf	(efgtoa@g+1)^(0+128),w
  9862  0077  0020               	movlb	0	; select bank0
  9863  0078  00DB               	movwf	___flge@ff1+1
  9864  0079  0021               	movlb	1	; select bank1
  9865  007A  0860               	movf	efgtoa@g^(0+128),w
  9866  007B  0020               	movlb	0	; select bank0
  9867  007C  00DA               	movwf	___flge@ff1
  9868  007D  3000               	movlw	0
  9869  007E  00E1               	movwf	___flge@ff2+3
  9870  007F  3000               	movlw	0
  9871  0080  00E0               	movwf	___flge@ff2+2
  9872  0081  3000               	movlw	0
  9873  0082  00DF               	movwf	___flge@ff2+1
  9874  0083  3000               	movlw	0
  9875  0084  00DE               	movwf	___flge@ff2
  9876  0085  31B6  2686  3180   	fcall	___flge
  9877  0088  1803               	btfsc	3,0
  9878  0089  28A3               	goto	l7367
  9879                           
  9880                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  9881  008A  3001               	movlw	1
  9882  008B  0021               	movlb	1	; select bank1
  9883  008C  00CE               	movwf	efgtoa@sign^(0+128)
  9884  008D  3000               	movlw	0
  9885  008E  00CF               	movwf	(efgtoa@sign^(0+128)+1)
  9886                           
  9887                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  9888  008F  0863               	movf	(efgtoa@g+3)^(0+128),w
  9889  0090  00F4               	movwf	___flneg@f1+3
  9890  0091  0862               	movf	(efgtoa@g+2)^(0+128),w
  9891  0092  00F3               	movwf	___flneg@f1+2
  9892  0093  0861               	movf	(efgtoa@g+1)^(0+128),w
  9893  0094  00F2               	movwf	___flneg@f1+1
  9894  0095  0860               	movf	efgtoa@g^(0+128),w
  9895  0096  00F1               	movwf	___flneg@f1
  9896  0097  31BE  2678  3180   	fcall	___flneg
  9897  009A  0874               	movf	?___flneg+3,w
  9898  009B  0021               	movlb	1	; select bank1
  9899  009C  00E3               	movwf	(efgtoa@g+3)^(0+128)
  9900  009D  0873               	movf	?___flneg+2,w
  9901  009E  00E2               	movwf	(efgtoa@g+2)^(0+128)
  9902  009F  0872               	movf	?___flneg+1,w
  9903  00A0  00E1               	movwf	(efgtoa@g+1)^(0+128)
  9904  00A1  0871               	movf	?___flneg,w
  9905  00A2  00E0               	movwf	efgtoa@g^(0+128)
  9906  00A3                     l7367:	
  9907                           
  9908                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  9909  00A3  0021               	movlb	1	; select bank1
  9910  00A4  01E6               	clrf	efgtoa@n^(0+128)
  9911  00A5  01E7               	clrf	(efgtoa@n+1)^(0+128)
  9912                           
  9913                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  9914  00A6  0023               	movlb	3	; select bank3
  9915  00A7  0835               	movf	(_width+1)^(0+384),w
  9916  00A8  0021               	movlb	1	; select bank1
  9917  00A9  00D4               	movwf	(efgtoa@w+1)^(0+128)
  9918  00AA  0023               	movlb	3	; select bank3
  9919  00AB  0834               	movf	_width^(0+384),w
  9920  00AC  0021               	movlb	1	; select bank1
  9921  00AD  00D3               	movwf	efgtoa@w^(0+128)
  9922                           
  9923                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  9924  00AE  084E               	movf	efgtoa@sign^(0+128),w
  9925  00AF  044F               	iorwf	(efgtoa@sign+1)^(0+128),w
  9926  00B0  1D03               	btfss	3,2
  9927  00B1  28B5               	goto	l7375
  9928  00B2  0023               	movlb	3	; select bank3
  9929  00B3  1D38               	btfss	_flags^(0+384),2
  9930  00B4  28CE               	goto	l7387
  9931  00B5                     l7375:	
  9932                           
  9933                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  9934  00B5  0021               	movlb	1	; select bank1
  9935  00B6  084E               	movf	efgtoa@sign^(0+128),w
  9936  00B7  044F               	iorwf	(efgtoa@sign+1)^(0+128),w
  9937  00B8  1D03               	btfss	3,2
  9938  00B9  28BC               	goto	l7379
  9939  00BA  302B               	movlw	43
  9940  00BB  28BD               	goto	L3
  9941  00BC                     l7379:	
  9942  00BC  302D               	movlw	45
  9943  00BD                     L3:	
  9944  00BD  00B8               	movwf	_efgtoa$1227^(0+128)
  9945  00BE  3000               	movlw	0
  9946  00BF  00B9               	movwf	(_efgtoa$1227^(0+128)+1)
  9947  00C0  0838               	movf	_efgtoa$1227^(0+128),w
  9948  00C1  00B0               	movwf	??_efgtoa^(0+128)
  9949  00C2  0830               	movf	??_efgtoa^(0+128),w
  9950  00C3  0025               	movlb	5	; select bank5
  9951  00C4  00A0               	movwf	_dbuf^(0+640)
  9952                           
  9953                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  9954  00C5  3001               	movlw	1
  9955  00C6  0021               	movlb	1	; select bank1
  9956  00C7  07E6               	addwf	efgtoa@n^(0+128),f
  9957  00C8  3000               	movlw	0
  9958  00C9  3DE7               	addwfc	(efgtoa@n+1)^(0+128),f
  9959                           
  9960                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  9961  00CA  30FF               	movlw	255
  9962  00CB  07D3               	addwf	efgtoa@w^(0+128),f
  9963  00CC  30FF               	movlw	255
  9964  00CD  3DD4               	addwfc	(efgtoa@w+1)^(0+128),f
  9965  00CE                     l7387:	
  9966                           
  9967                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9968  00CE  0021               	movlb	1	; select bank1
  9969  00CF  0863               	movf	(efgtoa@g+3)^(0+128),w
  9970  00D0  00F4               	movwf	___fpclassifyf@x+3
  9971  00D1  0862               	movf	(efgtoa@g+2)^(0+128),w
  9972  00D2  00F3               	movwf	___fpclassifyf@x+2
  9973  00D3  0861               	movf	(efgtoa@g+1)^(0+128),w
  9974  00D4  00F2               	movwf	___fpclassifyf@x+1
  9975  00D5  0860               	movf	efgtoa@g^(0+128),w
  9976  00D6  00F1               	movwf	___fpclassifyf@x
  9977  00D7  31B6  260E  3180   	fcall	___fpclassifyf
  9978  00DA  0371               	decf	?___fpclassifyf,w
  9979  00DB  0472               	iorwf	?___fpclassifyf+1,w
  9980  00DC  1D03               	btfss	3,2
  9981  00DD  292C               	goto	l7405
  9982  00DE  0021               	movlb	1	; select bank1
  9983  00DF  082F               	movf	efgtoa@c^(0+128),w
  9984  00E0  3EBF               	addlw	191
  9985  00E1  00B0               	movwf	??_efgtoa^(0+128)
  9986  00E2  30FF               	movlw	255
  9987  00E3  1803               	skipnc
  9988  00E4  3000               	movlw	0
  9989  00E5  00B1               	movwf	(??_efgtoa^(0+128)+1)
  9990  00E6  3000               	movlw	0
  9991  00E7  0231               	subwf	(??_efgtoa+1)^(0+128),w
  9992  00E8  301A               	movlw	26
  9993  00E9  1903               	skipnz
  9994  00EA  0230               	subwf	??_efgtoa^(0+128),w
  9995  00EB  1803               	btfsc	3,0
  9996  00EC  28EF               	goto	u10070
  9997  00ED  3001               	movlw	1
  9998  00EE  28F0               	goto	u10080
  9999  00EF                     u10070:	
 10000  00EF  3000               	movlw	0
 10001  00F0                     u10080:	
 10002  00F0  00B2               	movwf	(??_efgtoa+2)^(0+128)
 10003  00F1  01B3               	clrf	((??_efgtoa+2)^(0+128)+1)
 10004  00F2  0832               	movf	(??_efgtoa+2)^(0+128),w
 10005  00F3  00BA               	movwf	_efgtoa$1228^(0+128)
 10006  00F4  0833               	movf	(??_efgtoa+3)^(0+128),w
 10007  00F5  00BB               	movwf	(_efgtoa$1228+1)^(0+128)
 10008  00F6  083A               	movf	_efgtoa$1228^(0+128),w
 10009  00F7  043B               	iorwf	(_efgtoa$1228+1)^(0+128),w
 10010  00F8  1903               	btfsc	3,2
 10011  00F9  28FE               	goto	l7397
 10012                           
 10013                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
 10014  00FA  3036               	movlw	low (STR_27| (0+32768))
 10015  00FB  00F1               	movwf	strcpy@src
 10016  00FC  30BB               	movlw	high (STR_27| (0+32768))
 10017  00FD  2901               	goto	L4
 10018  00FE                     l7397:	
 10019                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
 10020                           
 10021                           
 10022                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
 10023  00FE  3046               	movlw	low (STR_28| (0+32768))
 10024  00FF  00F1               	movwf	strcpy@src
 10025  0100  30BB               	movlw	high (STR_28| (0+32768))
 10026  0101                     L4:	
 10027  0101  00F2               	movwf	strcpy@src+1
 10028  0102  0866               	movf	efgtoa@n^(0+128),w
 10029  0103  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10030  0104  31BF  27C0  3180   	fcall	_strcpy
 10031                           
 10032                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
 10033  0107  30FD               	movlw	253
 10034  0108  0021               	movlb	1	; select bank1
 10035  0109  07D3               	addwf	efgtoa@w^(0+128),f
 10036  010A  30FF               	movlw	255
 10037  010B  3DD4               	addwfc	(efgtoa@w+1)^(0+128),f
 10038                           
 10039                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
 10040  010C  082A               	movf	(efgtoa@fp+1)^(0+128),w
 10041  010D  0020               	movlb	0	; select bank0
 10042  010E  00A7               	movwf	pad@fp+1
 10043  010F  0021               	movlb	1	; select bank1
 10044  0110  0829               	movf	efgtoa@fp^(0+128),w
 10045  0111  0020               	movlb	0	; select bank0
 10046  0112  00A6               	movwf	pad@fp
 10047  0113  30A0               	movlw	(low (_dbuf| (0+512)))& (0+255)
 10048  0114  0021               	movlb	1	; select bank1
 10049  0115  00B0               	movwf	??_efgtoa^(0+128)
 10050  0116  0830               	movf	??_efgtoa^(0+128),w
 10051  0117  0020               	movlb	0	; select bank0
 10052  0118  00A8               	movwf	pad@buf
 10053  0119  0021               	movlb	1	; select bank1
 10054  011A  0854               	movf	(efgtoa@w+1)^(0+128),w
 10055  011B  0020               	movlb	0	; select bank0
 10056  011C  00AA               	movwf	pad@p+1
 10057  011D  0021               	movlb	1	; select bank1
 10058  011E  0853               	movf	efgtoa@w^(0+128),w
 10059  011F  0020               	movlb	0	; select bank0
 10060  0120  00A9               	movwf	pad@p
 10061  0121  31B3  2343         	fcall	_pad
 10062  0123  0020               	movlb	0	; select bank0
 10063  0124  0827               	movf	?_pad+1,w
 10064  0125  0021               	movlb	1	; select bank1
 10065  0126  00AA               	movwf	(?_efgtoa+1)^(0+128)
 10066  0127  0020               	movlb	0	; select bank0
 10067  0128  0826               	movf	?_pad,w
 10068  0129  0021               	movlb	1	; select bank1
 10069  012A  00A9               	movwf	?_efgtoa^(0+128)
 10070  012B  0008               	return
 10071  012C                     l7405:	
 10072                           
 10073                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 10074  012C  0021               	movlb	1	; select bank1
 10075  012D  0863               	movf	(efgtoa@g+3)^(0+128),w
 10076  012E  00F4               	movwf	___fpclassifyf@x+3
 10077  012F  0862               	movf	(efgtoa@g+2)^(0+128),w
 10078  0130  00F3               	movwf	___fpclassifyf@x+2
 10079  0131  0861               	movf	(efgtoa@g+1)^(0+128),w
 10080  0132  00F2               	movwf	___fpclassifyf@x+1
 10081  0133  0860               	movf	efgtoa@g^(0+128),w
 10082  0134  00F1               	movwf	___fpclassifyf@x
 10083  0135  31B6  260E  3180   	fcall	___fpclassifyf
 10084  0138  0871               	movf	?___fpclassifyf,w
 10085  0139  0472               	iorwf	?___fpclassifyf+1,w
 10086  013A  1D03               	btfss	3,2
 10087  013B  298A               	goto	l7423
 10088  013C  0021               	movlb	1	; select bank1
 10089  013D  082F               	movf	efgtoa@c^(0+128),w
 10090  013E  3EBF               	addlw	191
 10091  013F  00B0               	movwf	??_efgtoa^(0+128)
 10092  0140  30FF               	movlw	255
 10093  0141  1803               	skipnc
 10094  0142  3000               	movlw	0
 10095  0143  00B1               	movwf	(??_efgtoa^(0+128)+1)
 10096  0144  3000               	movlw	0
 10097  0145  0231               	subwf	(??_efgtoa+1)^(0+128),w
 10098  0146  301A               	movlw	26
 10099  0147  1903               	skipnz
 10100  0148  0230               	subwf	??_efgtoa^(0+128),w
 10101  0149  1803               	btfsc	3,0
 10102  014A  294D               	goto	u10110
 10103  014B  3001               	movlw	1
 10104  014C  294E               	goto	u10120
 10105  014D                     u10110:	
 10106  014D  3000               	movlw	0
 10107  014E                     u10120:	
 10108  014E  00B2               	movwf	(??_efgtoa+2)^(0+128)
 10109  014F  01B3               	clrf	((??_efgtoa+2)^(0+128)+1)
 10110  0150  0832               	movf	(??_efgtoa+2)^(0+128),w
 10111  0151  00BC               	movwf	_efgtoa$1232^(0+128)
 10112  0152  0833               	movf	(??_efgtoa+3)^(0+128),w
 10113  0153  00BD               	movwf	(_efgtoa$1232+1)^(0+128)
 10114  0154  083C               	movf	_efgtoa$1232^(0+128),w
 10115  0155  043D               	iorwf	(_efgtoa$1232+1)^(0+128),w
 10116  0156  1903               	btfsc	3,2
 10117  0157  295C               	goto	l7415
 10118                           
 10119                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
 10120  0158  303A               	movlw	low (STR_31| (0+32768))
 10121  0159  00F1               	movwf	strcpy@src
 10122  015A  30BB               	movlw	high (STR_31| (0+32768))
 10123  015B  295F               	goto	L5
 10124  015C                     l7415:	
 10125                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
 10126                           
 10127                           
 10128                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
 10129  015C  304E               	movlw	low (STR_32| (0+32768))
 10130  015D  00F1               	movwf	strcpy@src
 10131  015E  30BB               	movlw	high (STR_32| (0+32768))
 10132  015F                     L5:	
 10133  015F  00F2               	movwf	strcpy@src+1
 10134  0160  0866               	movf	efgtoa@n^(0+128),w
 10135  0161  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10136  0162  31BF  27C0  3180   	fcall	_strcpy
 10137                           
 10138                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 358:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
 10139  0165  30FD               	movlw	253
 10140  0166  0021               	movlb	1	; select bank1
 10141  0167  07D3               	addwf	efgtoa@w^(0+128),f
 10142  0168  30FF               	movlw	255
 10143  0169  3DD4               	addwfc	(efgtoa@w+1)^(0+128),f
 10144                           
 10145                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 359:       
      +                            return pad(fp, &dbuf[0], w);
 10146  016A  082A               	movf	(efgtoa@fp+1)^(0+128),w
 10147  016B  0020               	movlb	0	; select bank0
 10148  016C  00A7               	movwf	pad@fp+1
 10149  016D  0021               	movlb	1	; select bank1
 10150  016E  0829               	movf	efgtoa@fp^(0+128),w
 10151  016F  0020               	movlb	0	; select bank0
 10152  0170  00A6               	movwf	pad@fp
 10153  0171  30A0               	movlw	(low (_dbuf| (0+512)))& (0+255)
 10154  0172  0021               	movlb	1	; select bank1
 10155  0173  00B0               	movwf	??_efgtoa^(0+128)
 10156  0174  0830               	movf	??_efgtoa^(0+128),w
 10157  0175  0020               	movlb	0	; select bank0
 10158  0176  00A8               	movwf	pad@buf
 10159  0177  0021               	movlb	1	; select bank1
 10160  0178  0854               	movf	(efgtoa@w+1)^(0+128),w
 10161  0179  0020               	movlb	0	; select bank0
 10162  017A  00AA               	movwf	pad@p+1
 10163  017B  0021               	movlb	1	; select bank1
 10164  017C  0853               	movf	efgtoa@w^(0+128),w
 10165  017D  0020               	movlb	0	; select bank0
 10166  017E  00A9               	movwf	pad@p
 10167  017F  31B3  2343         	fcall	_pad
 10168  0181  0020               	movlb	0	; select bank0
 10169  0182  0827               	movf	?_pad+1,w
 10170  0183  0021               	movlb	1	; select bank1
 10171  0184  00AA               	movwf	(?_efgtoa+1)^(0+128)
 10172  0185  0020               	movlb	0	; select bank0
 10173  0186  0826               	movf	?_pad,w
 10174  0187  0021               	movlb	1	; select bank1
 10175  0188  00A9               	movwf	?_efgtoa^(0+128)
 10176  0189  0008               	return
 10177  018A                     l7423:	
 10178                           
 10179                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
 10180  018A  303F               	movlw	63
 10181  018B  0021               	movlb	1	; select bank1
 10182  018C  00EB               	movwf	(efgtoa@u+3)^(0+128)
 10183  018D  3080               	movlw	128
 10184  018E  00EA               	movwf	(efgtoa@u+2)^(0+128)
 10185  018F  3000               	movlw	0
 10186  0190  00E9               	movwf	(efgtoa@u+1)^(0+128)
 10187  0191  3000               	movlw	0
 10188  0192  00E8               	movwf	efgtoa@u^(0+128)
 10189                           
 10190                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
 10191  0193  01E4               	clrf	efgtoa@e^(0+128)
 10192  0194  01E5               	clrf	(efgtoa@e+1)^(0+128)
 10193                           
 10194                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
 10195  0195  0863               	movf	(efgtoa@g+3)^(0+128),w
 10196  0196  00F4               	movwf	___fleq@ff1+3
 10197  0197  0862               	movf	(efgtoa@g+2)^(0+128),w
 10198  0198  00F3               	movwf	___fleq@ff1+2
 10199  0199  0861               	movf	(efgtoa@g+1)^(0+128),w
 10200  019A  00F2               	movwf	___fleq@ff1+1
 10201  019B  0860               	movf	efgtoa@g^(0+128),w
 10202  019C  00F1               	movwf	___fleq@ff1
 10203  019D  3000               	movlw	0
 10204  019E  00F8               	movwf	___fleq@ff2+3
 10205  019F  3000               	movlw	0
 10206  01A0  00F7               	movwf	___fleq@ff2+2
 10207  01A1  3000               	movlw	0
 10208  01A2  00F6               	movwf	___fleq@ff2+1
 10209  01A3  3000               	movlw	0
 10210  01A4  00F5               	movwf	___fleq@ff2
 10211  01A5  31B2  22FA  3180   	fcall	___fleq
 10212  01A8  1C03               	btfss	3,0
 10213  01A9  29DB               	goto	l7435
 10214  01AA  2A6A               	goto	l7443
 10215  01AB                     l7431:	
 10216                           
 10217                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
 10218  01AB  3041               	movlw	65
 10219  01AC  0020               	movlb	0	; select bank0
 10220  01AD  00A9               	movwf	___flmul@b+3
 10221  01AE  3020               	movlw	32
 10222  01AF  00A8               	movwf	___flmul@b+2
 10223  01B0  3000               	movlw	0
 10224  01B1  00A7               	movwf	___flmul@b+1
 10225  01B2  3000               	movlw	0
 10226  01B3  00A6               	movwf	___flmul@b
 10227  01B4  0021               	movlb	1	; select bank1
 10228  01B5  086B               	movf	(efgtoa@u+3)^(0+128),w
 10229  01B6  0020               	movlb	0	; select bank0
 10230  01B7  00AD               	movwf	___flmul@a+3
 10231  01B8  0021               	movlb	1	; select bank1
 10232  01B9  086A               	movf	(efgtoa@u+2)^(0+128),w
 10233  01BA  0020               	movlb	0	; select bank0
 10234  01BB  00AC               	movwf	___flmul@a+2
 10235  01BC  0021               	movlb	1	; select bank1
 10236  01BD  0869               	movf	(efgtoa@u+1)^(0+128),w
 10237  01BE  0020               	movlb	0	; select bank0
 10238  01BF  00AB               	movwf	___flmul@a+1
 10239  01C0  0021               	movlb	1	; select bank1
 10240  01C1  0868               	movf	efgtoa@u^(0+128),w
 10241  01C2  0020               	movlb	0	; select bank0
 10242  01C3  00AA               	movwf	___flmul@a
 10243  01C4  3193  23A8  3180   	fcall	___flmul
 10244  01C7  0020               	movlb	0	; select bank0
 10245  01C8  0829               	movf	?___flmul+3,w
 10246  01C9  0021               	movlb	1	; select bank1
 10247  01CA  00EB               	movwf	(efgtoa@u+3)^(0+128)
 10248  01CB  0020               	movlb	0	; select bank0
 10249  01CC  0828               	movf	?___flmul+2,w
 10250  01CD  0021               	movlb	1	; select bank1
 10251  01CE  00EA               	movwf	(efgtoa@u+2)^(0+128)
 10252  01CF  0020               	movlb	0	; select bank0
 10253  01D0  0827               	movf	?___flmul+1,w
 10254  01D1  0021               	movlb	1	; select bank1
 10255  01D2  00E9               	movwf	(efgtoa@u+1)^(0+128)
 10256  01D3  0020               	movlb	0	; select bank0
 10257  01D4  0826               	movf	?___flmul,w
 10258  01D5  0021               	movlb	1	; select bank1
 10259  01D6  00E8               	movwf	efgtoa@u^(0+128)
 10260                           
 10261                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
 10262  01D7  3001               	movlw	1
 10263  01D8  07E4               	addwf	efgtoa@e^(0+128),f
 10264  01D9  3000               	movlw	0
 10265  01DA  3DE5               	addwfc	(efgtoa@e+1)^(0+128),f
 10266  01DB                     l7435:	
 10267                           
 10268                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
 10269  01DB  0021               	movlb	1	; select bank1
 10270  01DC  0863               	movf	(efgtoa@g+3)^(0+128),w
 10271  01DD  0020               	movlb	0	; select bank0
 10272  01DE  00DD               	movwf	___flge@ff1+3
 10273  01DF  0021               	movlb	1	; select bank1
 10274  01E0  0862               	movf	(efgtoa@g+2)^(0+128),w
 10275  01E1  0020               	movlb	0	; select bank0
 10276  01E2  00DC               	movwf	___flge@ff1+2
 10277  01E3  0021               	movlb	1	; select bank1
 10278  01E4  0861               	movf	(efgtoa@g+1)^(0+128),w
 10279  01E5  0020               	movlb	0	; select bank0
 10280  01E6  00DB               	movwf	___flge@ff1+1
 10281  01E7  0021               	movlb	1	; select bank1
 10282  01E8  0860               	movf	efgtoa@g^(0+128),w
 10283  01E9  0020               	movlb	0	; select bank0
 10284  01EA  00DA               	movwf	___flge@ff1
 10285  01EB  3041               	movlw	65
 10286  01EC  00A9               	movwf	___flmul@b+3
 10287  01ED  3020               	movlw	32
 10288  01EE  00A8               	movwf	___flmul@b+2
 10289  01EF  3000               	movlw	0
 10290  01F0  00A7               	movwf	___flmul@b+1
 10291  01F1  3000               	movlw	0
 10292  01F2  00A6               	movwf	___flmul@b
 10293  01F3  0021               	movlb	1	; select bank1
 10294  01F4  086B               	movf	(efgtoa@u+3)^(0+128),w
 10295  01F5  0020               	movlb	0	; select bank0
 10296  01F6  00AD               	movwf	___flmul@a+3
 10297  01F7  0021               	movlb	1	; select bank1
 10298  01F8  086A               	movf	(efgtoa@u+2)^(0+128),w
 10299  01F9  0020               	movlb	0	; select bank0
 10300  01FA  00AC               	movwf	___flmul@a+2
 10301  01FB  0021               	movlb	1	; select bank1
 10302  01FC  0869               	movf	(efgtoa@u+1)^(0+128),w
 10303  01FD  0020               	movlb	0	; select bank0
 10304  01FE  00AB               	movwf	___flmul@a+1
 10305  01FF  0021               	movlb	1	; select bank1
 10306  0200  0868               	movf	efgtoa@u^(0+128),w
 10307  0201  0020               	movlb	0	; select bank0
 10308  0202  00AA               	movwf	___flmul@a
 10309  0203  3193  23A8  3180   	fcall	___flmul
 10310  0206  0020               	movlb	0	; select bank0
 10311  0207  0829               	movf	?___flmul+3,w
 10312  0208  00E1               	movwf	___flge@ff2+3
 10313  0209  0828               	movf	?___flmul+2,w
 10314  020A  00E0               	movwf	___flge@ff2+2
 10315  020B  0827               	movf	?___flmul+1,w
 10316  020C  00DF               	movwf	___flge@ff2+1
 10317  020D  0826               	movf	?___flmul,w
 10318  020E  00DE               	movwf	___flge@ff2
 10319  020F  31B6  2686  3180   	fcall	___flge
 10320  0212  1C03               	btfss	3,0
 10321  0213  2A45               	goto	l7441
 10322  0214  29AB               	goto	l7431
 10323  0215                     l7437:	
 10324                           
 10325                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
 10326  0215  3041               	movlw	65
 10327  0216  0020               	movlb	0	; select bank0
 10328  0217  00C3               	movwf	___fldiv@a+3
 10329  0218  3020               	movlw	32
 10330  0219  00C2               	movwf	___fldiv@a+2
 10331  021A  3000               	movlw	0
 10332  021B  00C1               	movwf	___fldiv@a+1
 10333  021C  3000               	movlw	0
 10334  021D  00C0               	movwf	___fldiv@a
 10335  021E  0021               	movlb	1	; select bank1
 10336  021F  086B               	movf	(efgtoa@u+3)^(0+128),w
 10337  0220  0020               	movlb	0	; select bank0
 10338  0221  00C7               	movwf	___fldiv@b+3
 10339  0222  0021               	movlb	1	; select bank1
 10340  0223  086A               	movf	(efgtoa@u+2)^(0+128),w
 10341  0224  0020               	movlb	0	; select bank0
 10342  0225  00C6               	movwf	___fldiv@b+2
 10343  0226  0021               	movlb	1	; select bank1
 10344  0227  0869               	movf	(efgtoa@u+1)^(0+128),w
 10345  0228  0020               	movlb	0	; select bank0
 10346  0229  00C5               	movwf	___fldiv@b+1
 10347  022A  0021               	movlb	1	; select bank1
 10348  022B  0868               	movf	efgtoa@u^(0+128),w
 10349  022C  0020               	movlb	0	; select bank0
 10350  022D  00C4               	movwf	___fldiv@b
 10351  022E  319C  24A4  3180   	fcall	___fldiv
 10352  0231  0020               	movlb	0	; select bank0
 10353  0232  0843               	movf	?___fldiv+3,w
 10354  0233  0021               	movlb	1	; select bank1
 10355  0234  00EB               	movwf	(efgtoa@u+3)^(0+128)
 10356  0235  0020               	movlb	0	; select bank0
 10357  0236  0842               	movf	?___fldiv+2,w
 10358  0237  0021               	movlb	1	; select bank1
 10359  0238  00EA               	movwf	(efgtoa@u+2)^(0+128)
 10360  0239  0020               	movlb	0	; select bank0
 10361  023A  0841               	movf	?___fldiv+1,w
 10362  023B  0021               	movlb	1	; select bank1
 10363  023C  00E9               	movwf	(efgtoa@u+1)^(0+128)
 10364  023D  0020               	movlb	0	; select bank0
 10365  023E  0840               	movf	?___fldiv,w
 10366  023F  0021               	movlb	1	; select bank1
 10367  0240  00E8               	movwf	efgtoa@u^(0+128)
 10368                           
 10369                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
 10370  0241  30FF               	movlw	255
 10371  0242  07E4               	addwf	efgtoa@e^(0+128),f
 10372  0243  30FF               	movlw	255
 10373  0244  3DE5               	addwfc	(efgtoa@e+1)^(0+128),f
 10374  0245                     l7441:	
 10375                           
 10376                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
 10377  0245  0021               	movlb	1	; select bank1
 10378  0246  0863               	movf	(efgtoa@g+3)^(0+128),w
 10379  0247  0020               	movlb	0	; select bank0
 10380  0248  00DD               	movwf	___flge@ff1+3
 10381  0249  0021               	movlb	1	; select bank1
 10382  024A  0862               	movf	(efgtoa@g+2)^(0+128),w
 10383  024B  0020               	movlb	0	; select bank0
 10384  024C  00DC               	movwf	___flge@ff1+2
 10385  024D  0021               	movlb	1	; select bank1
 10386  024E  0861               	movf	(efgtoa@g+1)^(0+128),w
 10387  024F  0020               	movlb	0	; select bank0
 10388  0250  00DB               	movwf	___flge@ff1+1
 10389  0251  0021               	movlb	1	; select bank1
 10390  0252  0860               	movf	efgtoa@g^(0+128),w
 10391  0253  0020               	movlb	0	; select bank0
 10392  0254  00DA               	movwf	___flge@ff1
 10393  0255  0021               	movlb	1	; select bank1
 10394  0256  086B               	movf	(efgtoa@u+3)^(0+128),w
 10395  0257  0020               	movlb	0	; select bank0
 10396  0258  00E1               	movwf	___flge@ff2+3
 10397  0259  0021               	movlb	1	; select bank1
 10398  025A  086A               	movf	(efgtoa@u+2)^(0+128),w
 10399  025B  0020               	movlb	0	; select bank0
 10400  025C  00E0               	movwf	___flge@ff2+2
 10401  025D  0021               	movlb	1	; select bank1
 10402  025E  0869               	movf	(efgtoa@u+1)^(0+128),w
 10403  025F  0020               	movlb	0	; select bank0
 10404  0260  00DF               	movwf	___flge@ff2+1
 10405  0261  0021               	movlb	1	; select bank1
 10406  0262  0868               	movf	efgtoa@u^(0+128),w
 10407  0263  0020               	movlb	0	; select bank0
 10408  0264  00DE               	movwf	___flge@ff2
 10409  0265  31B6  2686  3180   	fcall	___flge
 10410  0268  1C03               	btfss	3,0
 10411  0269  2A15               	goto	l7437
 10412  026A                     l7443:	
 10413                           
 10414                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
 10415  026A  0021               	movlb	1	; select bank1
 10416  026B  082F               	movf	efgtoa@c^(0+128),w
 10417  026C  00B0               	movwf	??_efgtoa^(0+128)
 10418  026D  01B1               	clrf	(??_efgtoa^(0+128)+1)
 10419  026E  0830               	movf	??_efgtoa^(0+128),w
 10420  026F  00F7               	movwf	tolower@c
 10421  0270  0831               	movf	(??_efgtoa+1)^(0+128),w
 10422  0271  00F8               	movwf	tolower@c+1
 10423  0272  31B0  2028  3180   	fcall	_tolower
 10424  0275  0877               	movf	?_tolower,w
 10425  0276  0021               	movlb	1	; select bank1
 10426  0277  00B2               	movwf	(??_efgtoa+2)^(0+128)
 10427  0278  0832               	movf	(??_efgtoa+2)^(0+128),w
 10428  0279  00D5               	movwf	efgtoa@mode^(0+128)
 10429                           
 10430                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
 10431  027A  0855               	movf	efgtoa@mode^(0+128),w
 10432  027B  00B0               	movwf	??_efgtoa^(0+128)
 10433  027C  0830               	movf	??_efgtoa^(0+128),w
 10434  027D  00D2               	movwf	efgtoa@nmode^(0+128)
 10435                           
 10436                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
 10437  027E  3067               	movlw	103
 10438  027F  0655               	xorwf	efgtoa@mode^(0+128),w
 10439  0280  1D03               	btfss	3,2
 10440  0281  2A9E               	goto	l712
 10441                           
 10442                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
 10443  0282  0023               	movlb	3	; select bank3
 10444  0283  0836               	movf	_prec^(0+384),w
 10445  0284  0437               	iorwf	(_prec+1)^(0+384),w
 10446  0285  1D03               	btfss	3,2
 10447  0286  2A8B               	goto	l713
 10448                           
 10449                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
 10450  0287  3001               	movlw	1
 10451  0288  00B6               	movwf	_prec^(0+384)
 10452  0289  3000               	movlw	0
 10453  028A  00B7               	movwf	(_prec^(0+384)+1)
 10454  028B                     l713:	
 10455                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 382:   }
 10456                           
 10457                           
 10458                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
 10459  028B  0837               	movf	(_prec+1)^(0+384),w
 10460  028C  3A80               	xorlw	128
 10461  028D  0021               	movlb	1	; select bank1
 10462  028E  00B0               	movwf	??_efgtoa^(0+128)
 10463  028F  3080               	movlw	128
 10464  0290  0230               	subwf	??_efgtoa^(0+128),w
 10465  0291  1D03               	skipz
 10466  0292  2A96               	goto	u10195
 10467  0293  3001               	movlw	1
 10468  0294  0023               	movlb	3	; select bank3
 10469  0295  0236               	subwf	_prec^(0+384),w
 10470  0296                     u10195:	
 10471  0296  1803               	skipnc
 10472  0297  2AA1               	goto	l7455
 10473  0298                     l7453:	
 10474  0298  3006               	movlw	6
 10475  0299  0021               	movlb	1	; select bank1
 10476  029A  00D0               	movwf	efgtoa@p^(0+128)
 10477  029B  3000               	movlw	0
 10478  029C  00D1               	movwf	(efgtoa@p^(0+128)+1)
 10479  029D  2AA9               	goto	l7461
 10480  029E                     l712:	
 10481                           
 10482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
 10483  029E  0023               	movlb	3	; select bank3
 10484  029F  1BB7               	btfsc	(_prec+1)^(0+384),7
 10485  02A0  2A98               	goto	l7453
 10486  02A1                     l7455:	
 10487  02A1  0023               	movlb	3	; select bank3
 10488  02A2  0837               	movf	(_prec+1)^(0+384),w
 10489  02A3  0021               	movlb	1	; select bank1
 10490  02A4  00D1               	movwf	(efgtoa@p+1)^(0+128)
 10491  02A5  0023               	movlb	3	; select bank3
 10492  02A6  0836               	movf	_prec^(0+384),w
 10493  02A7  0021               	movlb	1	; select bank1
 10494  02A8  00D0               	movwf	efgtoa@p^(0+128)
 10495  02A9                     l7461:	
 10496                           
 10497                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
 10498  02A9  3067               	movlw	103
 10499  02AA  0655               	xorwf	efgtoa@mode^(0+128),w
 10500  02AB  1D03               	btfss	3,2
 10501  02AC  2AD2               	goto	l723
 10502                           
 10503                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
 10504  02AD  0865               	movf	(efgtoa@e+1)^(0+128),w
 10505  02AE  3A80               	xorlw	128
 10506  02AF  00B0               	movwf	??_efgtoa^(0+128)
 10507  02B0  307F               	movlw	127
 10508  02B1  0230               	subwf	??_efgtoa^(0+128),w
 10509  02B2  1D03               	skipz
 10510  02B3  2AB6               	goto	u10225
 10511  02B4  30FC               	movlw	252
 10512  02B5  0264               	subwf	efgtoa@e^(0+128),w
 10513  02B6                     u10225:	
 10514  02B6  1C03               	skipc
 10515  02B7  2ACD               	goto	l7469
 10516  02B8  0021               	movlb	1	; select bank1
 10517  02B9  0850               	movf	efgtoa@p^(0+128),w
 10518  02BA  3EFF               	addlw	255
 10519  02BB  00B0               	movwf	??_efgtoa^(0+128)
 10520  02BC  30FF               	movlw	255
 10521  02BD  3D51               	addwfc	(efgtoa@p+1)^(0+128),w
 10522  02BE  00B1               	movwf	(??_efgtoa+1)^(0+128)
 10523  02BF  0831               	movf	(??_efgtoa+1)^(0+128),w
 10524  02C0  3A80               	xorlw	128
 10525  02C1  00B2               	movwf	(??_efgtoa+2)^(0+128)
 10526  02C2  0865               	movf	(efgtoa@e+1)^(0+128),w
 10527  02C3  3A80               	xorlw	128
 10528  02C4  0232               	subwf	(??_efgtoa+2)^(0+128),w
 10529  02C5  1D03               	skipz
 10530  02C6  2AC9               	goto	u10235
 10531  02C7  0864               	movf	efgtoa@e^(0+128),w
 10532  02C8  0230               	subwf	??_efgtoa^(0+128),w
 10533  02C9                     u10235:	
 10534  02C9  1C03               	skipc
 10535  02CA  2ACD               	goto	l7469
 10536                           
 10537                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
 10538  02CB  3066               	movlw	102
 10539  02CC  2ACE               	goto	L6
 10540  02CD                     l7469:	
 10541                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
 10542                           
 10543                           
 10544                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
 10545  02CD  3065               	movlw	101
 10546  02CE                     L6:	
 10547  02CE  0021               	movlb	1	; select bank1
 10548  02CF  00B0               	movwf	??_efgtoa^(0+128)
 10549  02D0  0830               	movf	??_efgtoa^(0+128),w
 10550  02D1  00D2               	movwf	efgtoa@nmode^(0+128)
 10551  02D2                     l723:	
 10552                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 395:     }
 10553                           
 10554                           
 10555                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
 10556  02D2  0851               	movf	(efgtoa@p+1)^(0+128),w
 10557  02D3  00C9               	movwf	(efgtoa@m+1)^(0+128)
 10558  02D4  0850               	movf	efgtoa@p^(0+128),w
 10559  02D5  00C8               	movwf	efgtoa@m^(0+128)
 10560                           
 10561                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
 10562  02D6  3067               	movlw	103
 10563  02D7  0655               	xorwf	efgtoa@mode^(0+128),w
 10564  02D8  1D03               	btfss	3,2
 10565  02D9  2ADF               	goto	l7477
 10566  02DA  3066               	movlw	102
 10567  02DB  0652               	xorwf	efgtoa@nmode^(0+128),w
 10568  02DC  1903               	btfsc	3,2
 10569  02DD  1FE5               	btfss	(efgtoa@e+1)^(0+128),7
 10570  02DE  2AE3               	goto	l7479
 10571  02DF                     l7477:	
 10572                           
 10573                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
 10574  02DF  3001               	movlw	1
 10575  02E0  07C8               	addwf	efgtoa@m^(0+128),f
 10576  02E1  3000               	movlw	0
 10577  02E2  3DC9               	addwfc	(efgtoa@m+1)^(0+128),f
 10578  02E3                     l7479:	
 10579                           
 10580                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
 10581  02E3  3066               	movlw	102
 10582  02E4  0652               	xorwf	efgtoa@nmode^(0+128),w
 10583  02E5  1D03               	btfss	3,2
 10584  02E6  2AFB               	goto	l7491
 10585                           
 10586                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
 10587  02E7  1FE5               	btfss	(efgtoa@e+1)^(0+128),7
 10588  02E8  2AF3               	goto	l7487
 10589                           
 10590                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
 10591  02E9  303F               	movlw	63
 10592  02EA  00EB               	movwf	(efgtoa@u+3)^(0+128)
 10593  02EB  3080               	movlw	128
 10594  02EC  00EA               	movwf	(efgtoa@u+2)^(0+128)
 10595  02ED  3000               	movlw	0
 10596  02EE  00E9               	movwf	(efgtoa@u+1)^(0+128)
 10597  02EF  3000               	movlw	0
 10598  02F0  00E8               	movwf	efgtoa@u^(0+128)
 10599                           
 10600                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
 10601  02F1  01E4               	clrf	efgtoa@e^(0+128)
 10602  02F2  01E5               	clrf	(efgtoa@e+1)^(0+128)
 10603  02F3                     l7487:	
 10604                           
 10605                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
 10606  02F3  3067               	movlw	103
 10607  02F4  0655               	xorwf	efgtoa@mode^(0+128),w
 10608  02F5  1903               	btfsc	3,2
 10609  02F6  2AFB               	goto	l7491
 10610                           
 10611                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
 10612  02F7  0864               	movf	efgtoa@e^(0+128),w
 10613  02F8  07C8               	addwf	efgtoa@m^(0+128),f
 10614  02F9  0865               	movf	(efgtoa@e+1)^(0+128),w
 10615  02FA  3DC9               	addwfc	(efgtoa@m+1)^(0+128),f
 10616  02FB                     l7491:	
 10617                           
 10618                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
 10619  02FB  01DE               	clrf	efgtoa@i^(0+128)
 10620  02FC  01DF               	clrf	(efgtoa@i+1)^(0+128)
 10621                           
 10622                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
 10623  02FD  0863               	movf	(efgtoa@g+3)^(0+128),w
 10624  02FE  00D9               	movwf	(efgtoa@h+3)^(0+128)
 10625  02FF  0862               	movf	(efgtoa@g+2)^(0+128),w
 10626  0300  00D8               	movwf	(efgtoa@h+2)^(0+128)
 10627  0301  0861               	movf	(efgtoa@g+1)^(0+128),w
 10628  0302  00D7               	movwf	(efgtoa@h+1)^(0+128)
 10629  0303  0860               	movf	efgtoa@g^(0+128),w
 10630  0304  00D6               	movwf	efgtoa@h^(0+128)
 10631                           
 10632                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
 10633  0305  086B               	movf	(efgtoa@u+3)^(0+128),w
 10634  0306  00B7               	movwf	(efgtoa@ou+3)^(0+128)
 10635  0307  086A               	movf	(efgtoa@u+2)^(0+128),w
 10636  0308  00B6               	movwf	(efgtoa@ou+2)^(0+128)
 10637  0309  0869               	movf	(efgtoa@u+1)^(0+128),w
 10638  030A  00B5               	movwf	(efgtoa@ou+1)^(0+128)
 10639  030B  0868               	movf	efgtoa@u^(0+128),w
 10640  030C  00B4               	movwf	efgtoa@ou^(0+128)
 10641  030D                     l7501:	
 10642                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
 10643                           
 10644                           
 10645                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
 10646  030D  085F               	movf	(efgtoa@i+1)^(0+128),w
 10647  030E  3A80               	xorlw	128
 10648  030F  00B0               	movwf	??_efgtoa^(0+128)
 10649  0310  0849               	movf	(efgtoa@m+1)^(0+128),w
 10650  0311  3A80               	xorlw	128
 10651  0312  0230               	subwf	??_efgtoa^(0+128),w
 10652  0313  1D03               	skipz
 10653  0314  2B17               	goto	u10305
 10654  0315  0848               	movf	efgtoa@m^(0+128),w
 10655  0316  025E               	subwf	efgtoa@i^(0+128),w
 10656  0317                     u10305:	
 10657  0317  1803               	btfsc	3,0
 10658  0318  2BDF               	goto	l7503
 10659                           
 10660                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
 10661  0319  0021               	movlb	1	; select bank1
 10662  031A  086B               	movf	(efgtoa@u+3)^(0+128),w
 10663  031B  0020               	movlb	0	; select bank0
 10664  031C  00C3               	movwf	___fldiv@a+3
 10665  031D  0021               	movlb	1	; select bank1
 10666  031E  086A               	movf	(efgtoa@u+2)^(0+128),w
 10667  031F  0020               	movlb	0	; select bank0
 10668  0320  00C2               	movwf	___fldiv@a+2
 10669  0321  0021               	movlb	1	; select bank1
 10670  0322  0869               	movf	(efgtoa@u+1)^(0+128),w
 10671  0323  0020               	movlb	0	; select bank0
 10672  0324  00C1               	movwf	___fldiv@a+1
 10673  0325  0021               	movlb	1	; select bank1
 10674  0326  0868               	movf	efgtoa@u^(0+128),w
 10675  0327  0020               	movlb	0	; select bank0
 10676  0328  00C0               	movwf	___fldiv@a
 10677  0329  0021               	movlb	1	; select bank1
 10678  032A  0859               	movf	(efgtoa@h+3)^(0+128),w
 10679  032B  0020               	movlb	0	; select bank0
 10680  032C  00C7               	movwf	___fldiv@b+3
 10681  032D  0021               	movlb	1	; select bank1
 10682  032E  0858               	movf	(efgtoa@h+2)^(0+128),w
 10683  032F  0020               	movlb	0	; select bank0
 10684  0330  00C6               	movwf	___fldiv@b+2
 10685  0331  0021               	movlb	1	; select bank1
 10686  0332  0857               	movf	(efgtoa@h+1)^(0+128),w
 10687  0333  0020               	movlb	0	; select bank0
 10688  0334  00C5               	movwf	___fldiv@b+1
 10689  0335  0021               	movlb	1	; select bank1
 10690  0336  0856               	movf	efgtoa@h^(0+128),w
 10691  0337  0020               	movlb	0	; select bank0
 10692  0338  00C4               	movwf	___fldiv@b
 10693  0339  319C  24A4  3180   	fcall	___fldiv
 10694  033C  0020               	movlb	0	; select bank0
 10695  033D  0843               	movf	?___fldiv+3,w
 10696  033E  00DD               	movwf	floorf@x+3
 10697  033F  0842               	movf	?___fldiv+2,w
 10698  0340  00DC               	movwf	floorf@x+2
 10699  0341  0841               	movf	?___fldiv+1,w
 10700  0342  00DB               	movwf	floorf@x+1
 10701  0343  0840               	movf	?___fldiv,w
 10702  0344  00DA               	movwf	floorf@x
 10703  0345  31AE  264D  3180   	fcall	_floorf
 10704  0348  0020               	movlb	0	; select bank0
 10705  0349  085D               	movf	?_floorf+3,w
 10706  034A  0021               	movlb	1	; select bank1
 10707  034B  00DD               	movwf	(efgtoa@l+3)^(0+128)
 10708  034C  0020               	movlb	0	; select bank0
 10709  034D  085C               	movf	?_floorf+2,w
 10710  034E  0021               	movlb	1	; select bank1
 10711  034F  00DC               	movwf	(efgtoa@l+2)^(0+128)
 10712  0350  0020               	movlb	0	; select bank0
 10713  0351  085B               	movf	?_floorf+1,w
 10714  0352  0021               	movlb	1	; select bank1
 10715  0353  00DB               	movwf	(efgtoa@l+1)^(0+128)
 10716  0354  0020               	movlb	0	; select bank0
 10717  0355  085A               	movf	?_floorf,w
 10718  0356  0021               	movlb	1	; select bank1
 10719  0357  00DA               	movwf	efgtoa@l^(0+128)
 10720                           
 10721                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
 10722  0358  085D               	movf	(efgtoa@l+3)^(0+128),w
 10723  0359  00A3               	movwf	(___fltol@f1+3)^(0+128)
 10724  035A  085C               	movf	(efgtoa@l+2)^(0+128),w
 10725  035B  00A2               	movwf	(___fltol@f1+2)^(0+128)
 10726  035C  085B               	movf	(efgtoa@l+1)^(0+128),w
 10727  035D  00A1               	movwf	(___fltol@f1+1)^(0+128)
 10728  035E  085A               	movf	efgtoa@l^(0+128),w
 10729  035F  00A0               	movwf	___fltol@f1^(0+128)
 10730  0360  31B5  253B  3180   	fcall	___fltol
 10731  0363  0021               	movlb	1	; select bank1
 10732  0364  0821               	movf	(?___fltol+1)^(0+128),w
 10733  0365  00CD               	movwf	(efgtoa@d+1)^(0+128)
 10734  0366  0820               	movf	?___fltol^(0+128),w
 10735  0367  00CC               	movwf	efgtoa@d^(0+128)
 10736                           
 10737                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
 10738  0368  085D               	movf	(efgtoa@l+3)^(0+128),w
 10739  0369  0020               	movlb	0	; select bank0
 10740  036A  00AD               	movwf	___flmul@a+3
 10741  036B  0021               	movlb	1	; select bank1
 10742  036C  085C               	movf	(efgtoa@l+2)^(0+128),w
 10743  036D  0020               	movlb	0	; select bank0
 10744  036E  00AC               	movwf	___flmul@a+2
 10745  036F  0021               	movlb	1	; select bank1
 10746  0370  085B               	movf	(efgtoa@l+1)^(0+128),w
 10747  0371  0020               	movlb	0	; select bank0
 10748  0372  00AB               	movwf	___flmul@a+1
 10749  0373  0021               	movlb	1	; select bank1
 10750  0374  085A               	movf	efgtoa@l^(0+128),w
 10751  0375  0020               	movlb	0	; select bank0
 10752  0376  00AA               	movwf	___flmul@a
 10753  0377  0021               	movlb	1	; select bank1
 10754  0378  086B               	movf	(efgtoa@u+3)^(0+128),w
 10755  0379  0020               	movlb	0	; select bank0
 10756  037A  00A9               	movwf	___flmul@b+3
 10757  037B  0021               	movlb	1	; select bank1
 10758  037C  086A               	movf	(efgtoa@u+2)^(0+128),w
 10759  037D  0020               	movlb	0	; select bank0
 10760  037E  00A8               	movwf	___flmul@b+2
 10761  037F  0021               	movlb	1	; select bank1
 10762  0380  0869               	movf	(efgtoa@u+1)^(0+128),w
 10763  0381  0020               	movlb	0	; select bank0
 10764  0382  00A7               	movwf	___flmul@b+1
 10765  0383  0021               	movlb	1	; select bank1
 10766  0384  0868               	movf	efgtoa@u^(0+128),w
 10767  0385  0020               	movlb	0	; select bank0
 10768  0386  00A6               	movwf	___flmul@b
 10769  0387  3193  23A8  3180   	fcall	___flmul
 10770  038A  0020               	movlb	0	; select bank0
 10771  038B  0829               	movf	?___flmul+3,w
 10772  038C  0021               	movlb	1	; select bank1
 10773  038D  00A3               	movwf	(___flsub@a+3)^(0+128)
 10774  038E  0020               	movlb	0	; select bank0
 10775  038F  0828               	movf	?___flmul+2,w
 10776  0390  0021               	movlb	1	; select bank1
 10777  0391  00A2               	movwf	(___flsub@a+2)^(0+128)
 10778  0392  0020               	movlb	0	; select bank0
 10779  0393  0827               	movf	?___flmul+1,w
 10780  0394  0021               	movlb	1	; select bank1
 10781  0395  00A1               	movwf	(___flsub@a+1)^(0+128)
 10782  0396  0020               	movlb	0	; select bank0
 10783  0397  0826               	movf	?___flmul,w
 10784  0398  0021               	movlb	1	; select bank1
 10785  0399  00A0               	movwf	___flsub@a^(0+128)
 10786  039A  0859               	movf	(efgtoa@h+3)^(0+128),w
 10787  039B  00A7               	movwf	(___flsub@b+3)^(0+128)
 10788  039C  0858               	movf	(efgtoa@h+2)^(0+128),w
 10789  039D  00A6               	movwf	(___flsub@b+2)^(0+128)
 10790  039E  0857               	movf	(efgtoa@h+1)^(0+128),w
 10791  039F  00A5               	movwf	(___flsub@b+1)^(0+128)
 10792  03A0  0856               	movf	efgtoa@h^(0+128),w
 10793  03A1  00A4               	movwf	___flsub@b^(0+128)
 10794  03A2  31B1  214B  3180   	fcall	___flsub
 10795  03A5  0021               	movlb	1	; select bank1
 10796  03A6  0823               	movf	(?___flsub+3)^(0+128),w
 10797  03A7  00D9               	movwf	(efgtoa@h+3)^(0+128)
 10798  03A8  0822               	movf	(?___flsub+2)^(0+128),w
 10799  03A9  00D8               	movwf	(efgtoa@h+2)^(0+128)
 10800  03AA  0821               	movf	(?___flsub+1)^(0+128),w
 10801  03AB  00D7               	movwf	(efgtoa@h+1)^(0+128)
 10802  03AC  0820               	movf	?___flsub^(0+128),w
 10803  03AD  00D6               	movwf	efgtoa@h^(0+128)
 10804                           
 10805                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
 10806  03AE  3041               	movlw	65
 10807  03AF  0020               	movlb	0	; select bank0
 10808  03B0  00C3               	movwf	___fldiv@a+3
 10809  03B1  3020               	movlw	32
 10810  03B2  00C2               	movwf	___fldiv@a+2
 10811  03B3  3000               	movlw	0
 10812  03B4  00C1               	movwf	___fldiv@a+1
 10813  03B5  3000               	movlw	0
 10814  03B6  00C0               	movwf	___fldiv@a
 10815  03B7  0021               	movlb	1	; select bank1
 10816  03B8  086B               	movf	(efgtoa@u+3)^(0+128),w
 10817  03B9  0020               	movlb	0	; select bank0
 10818  03BA  00C7               	movwf	___fldiv@b+3
 10819  03BB  0021               	movlb	1	; select bank1
 10820  03BC  086A               	movf	(efgtoa@u+2)^(0+128),w
 10821  03BD  0020               	movlb	0	; select bank0
 10822  03BE  00C6               	movwf	___fldiv@b+2
 10823  03BF  0021               	movlb	1	; select bank1
 10824  03C0  0869               	movf	(efgtoa@u+1)^(0+128),w
 10825  03C1  0020               	movlb	0	; select bank0
 10826  03C2  00C5               	movwf	___fldiv@b+1
 10827  03C3  0021               	movlb	1	; select bank1
 10828  03C4  0868               	movf	efgtoa@u^(0+128),w
 10829  03C5  0020               	movlb	0	; select bank0
 10830  03C6  00C4               	movwf	___fldiv@b
 10831  03C7  319C  24A4  3180   	fcall	___fldiv
 10832  03CA  0020               	movlb	0	; select bank0
 10833  03CB  0843               	movf	?___fldiv+3,w
 10834  03CC  0021               	movlb	1	; select bank1
 10835  03CD  00EB               	movwf	(efgtoa@u+3)^(0+128)
 10836  03CE  0020               	movlb	0	; select bank0
 10837  03CF  0842               	movf	?___fldiv+2,w
 10838  03D0  0021               	movlb	1	; select bank1
 10839  03D1  00EA               	movwf	(efgtoa@u+2)^(0+128)
 10840  03D2  0020               	movlb	0	; select bank0
 10841  03D3  0841               	movf	?___fldiv+1,w
 10842  03D4  0021               	movlb	1	; select bank1
 10843  03D5  00E9               	movwf	(efgtoa@u+1)^(0+128)
 10844  03D6  0020               	movlb	0	; select bank0
 10845  03D7  0840               	movf	?___fldiv,w
 10846  03D8  0021               	movlb	1	; select bank1
 10847  03D9  00E8               	movwf	efgtoa@u^(0+128)
 10848                           
 10849                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
 10850  03DA  3001               	movlw	1
 10851  03DB  07DE               	addwf	efgtoa@i^(0+128),f
 10852  03DC  3000               	movlw	0
 10853  03DD  3DDF               	addwfc	(efgtoa@i+1)^(0+128),f
 10854  03DE  2B0D               	goto	l7501
 10855  03DF                     l7503:	
 10856                           
 10857                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
 10858  03DF  3040               	movlw	64
 10859  03E0  0020               	movlb	0	; select bank0
 10860  03E1  00A9               	movwf	___flmul@b+3
 10861  03E2  30A0               	movlw	160
 10862  03E3  00A8               	movwf	___flmul@b+2
 10863  03E4  3000               	movlw	0
 10864  03E5  00A7               	movwf	___flmul@b+1
 10865  03E6  3000               	movlw	0
 10866  03E7  00A6               	movwf	___flmul@b
 10867  03E8  0021               	movlb	1	; select bank1
 10868  03E9  086B               	movf	(efgtoa@u+3)^(0+128),w
 10869  03EA  0020               	movlb	0	; select bank0
 10870  03EB  00AD               	movwf	___flmul@a+3
 10871  03EC  0021               	movlb	1	; select bank1
 10872  03ED  086A               	movf	(efgtoa@u+2)^(0+128),w
 10873  03EE  0020               	movlb	0	; select bank0
 10874  03EF  00AC               	movwf	___flmul@a+2
 10875  03F0  0021               	movlb	1	; select bank1
 10876  03F1  0869               	movf	(efgtoa@u+1)^(0+128),w
 10877  03F2  0020               	movlb	0	; select bank0
 10878  03F3  00AB               	movwf	___flmul@a+1
 10879  03F4  0021               	movlb	1	; select bank1
 10880  03F5  0868               	movf	efgtoa@u^(0+128),w
 10881  03F6  0020               	movlb	0	; select bank0
 10882  03F7  00AA               	movwf	___flmul@a
 10883  03F8  3193  23A8  3180   	fcall	___flmul
 10884  03FB  0020               	movlb	0	; select bank0
 10885  03FC  0829               	movf	?___flmul+3,w
 10886  03FD  0021               	movlb	1	; select bank1
 10887  03FE  00DD               	movwf	(efgtoa@l+3)^(0+128)
 10888  03FF  0020               	movlb	0	; select bank0
 10889  0400  0828               	movf	?___flmul+2,w
 10890  0401  0021               	movlb	1	; select bank1
 10891  0402  00DC               	movwf	(efgtoa@l+2)^(0+128)
 10892  0403  0020               	movlb	0	; select bank0
 10893  0404  0827               	movf	?___flmul+1,w
 10894  0405  0021               	movlb	1	; select bank1
 10895  0406  00DB               	movwf	(efgtoa@l+1)^(0+128)
 10896  0407  0020               	movlb	0	; select bank0
 10897  0408  0826               	movf	?___flmul,w
 10898  0409  0021               	movlb	1	; select bank1
 10899  040A  00DA               	movwf	efgtoa@l^(0+128)
 10900                           
 10901                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
 10902  040B  0859               	movf	(efgtoa@h+3)^(0+128),w
 10903  040C  0020               	movlb	0	; select bank0
 10904  040D  00DD               	movwf	___flge@ff1+3
 10905  040E  0021               	movlb	1	; select bank1
 10906  040F  0858               	movf	(efgtoa@h+2)^(0+128),w
 10907  0410  0020               	movlb	0	; select bank0
 10908  0411  00DC               	movwf	___flge@ff1+2
 10909  0412  0021               	movlb	1	; select bank1
 10910  0413  0857               	movf	(efgtoa@h+1)^(0+128),w
 10911  0414  0020               	movlb	0	; select bank0
 10912  0415  00DB               	movwf	___flge@ff1+1
 10913  0416  0021               	movlb	1	; select bank1
 10914  0417  0856               	movf	efgtoa@h^(0+128),w
 10915  0418  0020               	movlb	0	; select bank0
 10916  0419  00DA               	movwf	___flge@ff1
 10917  041A  0021               	movlb	1	; select bank1
 10918  041B  085D               	movf	(efgtoa@l+3)^(0+128),w
 10919  041C  0020               	movlb	0	; select bank0
 10920  041D  00E1               	movwf	___flge@ff2+3
 10921  041E  0021               	movlb	1	; select bank1
 10922  041F  085C               	movf	(efgtoa@l+2)^(0+128),w
 10923  0420  0020               	movlb	0	; select bank0
 10924  0421  00E0               	movwf	___flge@ff2+2
 10925  0422  0021               	movlb	1	; select bank1
 10926  0423  085B               	movf	(efgtoa@l+1)^(0+128),w
 10927  0424  0020               	movlb	0	; select bank0
 10928  0425  00DF               	movwf	___flge@ff2+1
 10929  0426  0021               	movlb	1	; select bank1
 10930  0427  085A               	movf	efgtoa@l^(0+128),w
 10931  0428  0020               	movlb	0	; select bank0
 10932  0429  00DE               	movwf	___flge@ff2
 10933  042A  31B6  2686  3180   	fcall	___flge
 10934  042D  1803               	btfsc	3,0
 10935  042E  2C32               	goto	l7507
 10936                           
 10937                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
 10938  042F  3000               	movlw	0
 10939  0430  0021               	movlb	1	; select bank1
 10940  0431  2C4C               	goto	L7
 10941  0432                     l7507:	
 10942                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
 10943                           
 10944                           
 10945                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
 10946  0432  0021               	movlb	1	; select bank1
 10947  0433  0859               	movf	(efgtoa@h+3)^(0+128),w
 10948  0434  00F4               	movwf	___fleq@ff1+3
 10949  0435  0858               	movf	(efgtoa@h+2)^(0+128),w
 10950  0436  00F3               	movwf	___fleq@ff1+2
 10951  0437  0857               	movf	(efgtoa@h+1)^(0+128),w
 10952  0438  00F2               	movwf	___fleq@ff1+1
 10953  0439  0856               	movf	efgtoa@h^(0+128),w
 10954  043A  00F1               	movwf	___fleq@ff1
 10955  043B  085D               	movf	(efgtoa@l+3)^(0+128),w
 10956  043C  00F8               	movwf	___fleq@ff2+3
 10957  043D  085C               	movf	(efgtoa@l+2)^(0+128),w
 10958  043E  00F7               	movwf	___fleq@ff2+2
 10959  043F  085B               	movf	(efgtoa@l+1)^(0+128),w
 10960  0440  00F6               	movwf	___fleq@ff2+1
 10961  0441  085A               	movf	efgtoa@l^(0+128),w
 10962  0442  00F5               	movwf	___fleq@ff2
 10963  0443  31B2  22FA  3180   	fcall	___fleq
 10964  0446  1C03               	btfss	3,0
 10965  0447  2C53               	goto	l7513
 10966  0448  0021               	movlb	1	; select bank1
 10967  0449  184C               	btfsc	efgtoa@d^(0+128),0
 10968  044A  2C53               	goto	l7513
 10969                           
 10970                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
 10971  044B  3000               	movlw	0
 10972  044C                     L7:	
 10973  044C  00DD               	movwf	(efgtoa@l+3)^(0+128)
 10974  044D  3000               	movlw	0
 10975  044E  00DC               	movwf	(efgtoa@l+2)^(0+128)
 10976  044F  3000               	movlw	0
 10977  0450  00DB               	movwf	(efgtoa@l+1)^(0+128)
 10978  0451  3000               	movlw	0
 10979  0452  00DA               	movwf	efgtoa@l^(0+128)
 10980  0453                     l7513:	
 10981                           
 10982                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
 10983  0453  0021               	movlb	1	; select bank1
 10984  0454  085D               	movf	(efgtoa@l+3)^(0+128),w
 10985  0455  0020               	movlb	0	; select bank0
 10986  0456  00DD               	movwf	___fladd@b+3
 10987  0457  0021               	movlb	1	; select bank1
 10988  0458  085C               	movf	(efgtoa@l+2)^(0+128),w
 10989  0459  0020               	movlb	0	; select bank0
 10990  045A  00DC               	movwf	___fladd@b+2
 10991  045B  0021               	movlb	1	; select bank1
 10992  045C  085B               	movf	(efgtoa@l+1)^(0+128),w
 10993  045D  0020               	movlb	0	; select bank0
 10994  045E  00DB               	movwf	___fladd@b+1
 10995  045F  0021               	movlb	1	; select bank1
 10996  0460  085A               	movf	efgtoa@l^(0+128),w
 10997  0461  0020               	movlb	0	; select bank0
 10998  0462  00DA               	movwf	___fladd@b
 10999  0463  0021               	movlb	1	; select bank1
 11000  0464  0863               	movf	(efgtoa@g+3)^(0+128),w
 11001  0465  0020               	movlb	0	; select bank0
 11002  0466  00E1               	movwf	___fladd@a+3
 11003  0467  0021               	movlb	1	; select bank1
 11004  0468  0862               	movf	(efgtoa@g+2)^(0+128),w
 11005  0469  0020               	movlb	0	; select bank0
 11006  046A  00E0               	movwf	___fladd@a+2
 11007  046B  0021               	movlb	1	; select bank1
 11008  046C  0861               	movf	(efgtoa@g+1)^(0+128),w
 11009  046D  0020               	movlb	0	; select bank0
 11010  046E  00DF               	movwf	___fladd@a+1
 11011  046F  0021               	movlb	1	; select bank1
 11012  0470  0860               	movf	efgtoa@g^(0+128),w
 11013  0471  0020               	movlb	0	; select bank0
 11014  0472  00DE               	movwf	___fladd@a
 11015  0473  319E  261E  3180   	fcall	___fladd
 11016  0476  0020               	movlb	0	; select bank0
 11017  0477  085D               	movf	?___fladd+3,w
 11018  0478  0021               	movlb	1	; select bank1
 11019  0479  00D9               	movwf	(efgtoa@h+3)^(0+128)
 11020  047A  0020               	movlb	0	; select bank0
 11021  047B  085C               	movf	?___fladd+2,w
 11022  047C  0021               	movlb	1	; select bank1
 11023  047D  00D8               	movwf	(efgtoa@h+2)^(0+128)
 11024  047E  0020               	movlb	0	; select bank0
 11025  047F  085B               	movf	?___fladd+1,w
 11026  0480  0021               	movlb	1	; select bank1
 11027  0481  00D7               	movwf	(efgtoa@h+1)^(0+128)
 11028  0482  0020               	movlb	0	; select bank0
 11029  0483  085A               	movf	?___fladd,w
 11030  0484  0021               	movlb	1	; select bank1
 11031  0485  00D6               	movwf	efgtoa@h^(0+128)
 11032                           
 11033                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
 11034  0486  0837               	movf	(efgtoa@ou+3)^(0+128),w
 11035  0487  00EB               	movwf	(efgtoa@u+3)^(0+128)
 11036  0488  0836               	movf	(efgtoa@ou+2)^(0+128),w
 11037  0489  00EA               	movwf	(efgtoa@u+2)^(0+128)
 11038  048A  0835               	movf	(efgtoa@ou+1)^(0+128),w
 11039  048B  00E9               	movwf	(efgtoa@u+1)^(0+128)
 11040  048C  0834               	movf	efgtoa@ou^(0+128),w
 11041  048D  00E8               	movwf	efgtoa@u^(0+128)
 11042                           
 11043                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
 11044  048E  3065               	movlw	101
 11045  048F  0652               	xorwf	efgtoa@nmode^(0+128),w
 11046  0490  1903               	btfsc	3,2
 11047  0491  2C97               	goto	l7521
 11048  0492  0865               	movf	(efgtoa@e+1)^(0+128),w
 11049  0493  00CB               	movwf	(efgtoa@ne+1)^(0+128)
 11050  0494  0864               	movf	efgtoa@e^(0+128),w
 11051  0495  00CA               	movwf	efgtoa@ne^(0+128)
 11052  0496  2C99               	goto	l741
 11053  0497                     l7521:	
 11054  0497  01CA               	clrf	efgtoa@ne^(0+128)
 11055  0498  01CB               	clrf	(efgtoa@ne+1)^(0+128)
 11056  0499                     l741:	
 11057                           
 11058                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
 11059  0499  01C6               	clrf	efgtoa@pp^(0+128)
 11060  049A  01C7               	clrf	(efgtoa@pp+1)^(0+128)
 11061                           
 11062                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
 11063  049B  01C4               	clrf	efgtoa@t^(0+128)
 11064  049C  01C5               	clrf	(efgtoa@t+1)^(0+128)
 11065                           
 11066                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
 11067  049D  01DE               	clrf	efgtoa@i^(0+128)
 11068  049E  01DF               	clrf	(efgtoa@i+1)^(0+128)
 11069                           
 11070                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
 11071  049F  2DC2               	goto	l7571
 11072  04A0                     l7523:	
 11073                           
 11074                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
 11075  04A0  0021               	movlb	1	; select bank1
 11076  04A1  086B               	movf	(efgtoa@u+3)^(0+128),w
 11077  04A2  0020               	movlb	0	; select bank0
 11078  04A3  00C3               	movwf	___fldiv@a+3
 11079  04A4  0021               	movlb	1	; select bank1
 11080  04A5  086A               	movf	(efgtoa@u+2)^(0+128),w
 11081  04A6  0020               	movlb	0	; select bank0
 11082  04A7  00C2               	movwf	___fldiv@a+2
 11083  04A8  0021               	movlb	1	; select bank1
 11084  04A9  0869               	movf	(efgtoa@u+1)^(0+128),w
 11085  04AA  0020               	movlb	0	; select bank0
 11086  04AB  00C1               	movwf	___fldiv@a+1
 11087  04AC  0021               	movlb	1	; select bank1
 11088  04AD  0868               	movf	efgtoa@u^(0+128),w
 11089  04AE  0020               	movlb	0	; select bank0
 11090  04AF  00C0               	movwf	___fldiv@a
 11091  04B0  0021               	movlb	1	; select bank1
 11092  04B1  0859               	movf	(efgtoa@h+3)^(0+128),w
 11093  04B2  0020               	movlb	0	; select bank0
 11094  04B3  00C7               	movwf	___fldiv@b+3
 11095  04B4  0021               	movlb	1	; select bank1
 11096  04B5  0858               	movf	(efgtoa@h+2)^(0+128),w
 11097  04B6  0020               	movlb	0	; select bank0
 11098  04B7  00C6               	movwf	___fldiv@b+2
 11099  04B8  0021               	movlb	1	; select bank1
 11100  04B9  0857               	movf	(efgtoa@h+1)^(0+128),w
 11101  04BA  0020               	movlb	0	; select bank0
 11102  04BB  00C5               	movwf	___fldiv@b+1
 11103  04BC  0021               	movlb	1	; select bank1
 11104  04BD  0856               	movf	efgtoa@h^(0+128),w
 11105  04BE  0020               	movlb	0	; select bank0
 11106  04BF  00C4               	movwf	___fldiv@b
 11107  04C0  319C  24A4  3180   	fcall	___fldiv
 11108  04C3  0020               	movlb	0	; select bank0
 11109  04C4  0843               	movf	?___fldiv+3,w
 11110  04C5  00DD               	movwf	floorf@x+3
 11111  04C6  0842               	movf	?___fldiv+2,w
 11112  04C7  00DC               	movwf	floorf@x+2
 11113  04C8  0841               	movf	?___fldiv+1,w
 11114  04C9  00DB               	movwf	floorf@x+1
 11115  04CA  0840               	movf	?___fldiv,w
 11116  04CB  00DA               	movwf	floorf@x
 11117  04CC  31AE  264D  3180   	fcall	_floorf
 11118  04CF  0020               	movlb	0	; select bank0
 11119  04D0  085D               	movf	?_floorf+3,w
 11120  04D1  0021               	movlb	1	; select bank1
 11121  04D2  00DD               	movwf	(efgtoa@l+3)^(0+128)
 11122  04D3  0020               	movlb	0	; select bank0
 11123  04D4  085C               	movf	?_floorf+2,w
 11124  04D5  0021               	movlb	1	; select bank1
 11125  04D6  00DC               	movwf	(efgtoa@l+2)^(0+128)
 11126  04D7  0020               	movlb	0	; select bank0
 11127  04D8  085B               	movf	?_floorf+1,w
 11128  04D9  0021               	movlb	1	; select bank1
 11129  04DA  00DB               	movwf	(efgtoa@l+1)^(0+128)
 11130  04DB  0020               	movlb	0	; select bank0
 11131  04DC  085A               	movf	?_floorf,w
 11132  04DD  0021               	movlb	1	; select bank1
 11133  04DE  00DA               	movwf	efgtoa@l^(0+128)
 11134                           
 11135                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
 11136  04DF  085D               	movf	(efgtoa@l+3)^(0+128),w
 11137  04E0  00A3               	movwf	(___fltol@f1+3)^(0+128)
 11138  04E1  085C               	movf	(efgtoa@l+2)^(0+128),w
 11139  04E2  00A2               	movwf	(___fltol@f1+2)^(0+128)
 11140  04E3  085B               	movf	(efgtoa@l+1)^(0+128),w
 11141  04E4  00A1               	movwf	(___fltol@f1+1)^(0+128)
 11142  04E5  085A               	movf	efgtoa@l^(0+128),w
 11143  04E6  00A0               	movwf	___fltol@f1^(0+128)
 11144  04E7  31B5  253B  3180   	fcall	___fltol
 11145  04EA  0021               	movlb	1	; select bank1
 11146  04EB  0821               	movf	(?___fltol+1)^(0+128),w
 11147  04EC  00CD               	movwf	(efgtoa@d+1)^(0+128)
 11148  04ED  0820               	movf	?___fltol^(0+128),w
 11149  04EE  00CC               	movwf	efgtoa@d^(0+128)
 11150                           
 11151                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
 11152  04EF  0023               	movlb	3	; select bank3
 11153  04F0  1A38               	btfsc	_flags^(0+384),4
 11154  04F1  2D01               	goto	l7535
 11155  04F2  0021               	movlb	1	; select bank1
 11156  04F3  084C               	movf	efgtoa@d^(0+128),w
 11157  04F4  044D               	iorwf	(efgtoa@d+1)^(0+128),w
 11158  04F5  1D03               	btfss	3,2
 11159  04F6  2D01               	goto	l7535
 11160  04F7  3067               	movlw	103
 11161  04F8  0655               	xorwf	efgtoa@mode^(0+128),w
 11162  04F9  1903               	btfsc	3,2
 11163  04FA  1FCB               	btfss	(efgtoa@ne+1)^(0+128),7
 11164  04FB  2D01               	goto	l7535
 11165                           
 11166                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
 11167  04FC  3001               	movlw	1
 11168  04FD  07C4               	addwf	efgtoa@t^(0+128),f
 11169  04FE  3000               	movlw	0
 11170  04FF  3DC5               	addwfc	(efgtoa@t+1)^(0+128),f
 11171                           
 11172                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
 11173  0500  2D48               	goto	l7563
 11174  0501                     l7535:	
 11175                           
 11176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
 11177  0501  0021               	movlb	1	; select bank1
 11178  0502  0846               	movf	efgtoa@pp^(0+128),w
 11179  0503  0447               	iorwf	(efgtoa@pp+1)^(0+128),w
 11180  0504  1903               	btfsc	3,2
 11181  0505  1FCB               	btfss	(efgtoa@ne+1)^(0+128),7
 11182  0506  2D1C               	goto	l7555
 11183                           
 11184                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
 11185  0507  302E               	movlw	46
 11186  0508  00B0               	movwf	??_efgtoa^(0+128)
 11187  0509  0866               	movf	efgtoa@n^(0+128),w
 11188  050A  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11189  050B  0086               	movwf	6
 11190  050C  3002               	movlw	2	; select bank5/6
 11191  050D  0087               	movwf	7
 11192  050E  0830               	movf	??_efgtoa^(0+128),w
 11193  050F  0081               	movwf	1
 11194  0510  3001               	movlw	1
 11195  0511  07E6               	addwf	efgtoa@n^(0+128),f
 11196  0512  3000               	movlw	0
 11197  0513  3DE7               	addwfc	(efgtoa@n+1)^(0+128),f
 11198                           
 11199                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
 11200  0514  30FF               	movlw	255
 11201  0515  07D3               	addwf	efgtoa@w^(0+128),f
 11202  0516  30FF               	movlw	255
 11203  0517  3DD4               	addwfc	(efgtoa@w+1)^(0+128),f
 11204                           
 11205                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
 11206  0518  3001               	movlw	1
 11207  0519  00C6               	movwf	efgtoa@pp^(0+128)
 11208  051A  3000               	movlw	0
 11209  051B  00C7               	movwf	(efgtoa@pp^(0+128)+1)
 11210  051C                     l7555:	
 11211                           
 11212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
 11213  051C  0844               	movf	efgtoa@t^(0+128),w
 11214  051D  0445               	iorwf	(efgtoa@t+1)^(0+128),w
 11215  051E  1903               	btfsc	3,2
 11216  051F  2D36               	goto	l7557
 11217                           
 11218                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
 11219  0520  3030               	movlw	48
 11220  0521  00B0               	movwf	??_efgtoa^(0+128)
 11221  0522  0866               	movf	efgtoa@n^(0+128),w
 11222  0523  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11223  0524  0086               	movwf	6
 11224  0525  3002               	movlw	2	; select bank5/6
 11225  0526  0087               	movwf	7
 11226  0527  0830               	movf	??_efgtoa^(0+128),w
 11227  0528  0081               	movwf	1
 11228  0529  3001               	movlw	1
 11229  052A  07E6               	addwf	efgtoa@n^(0+128),f
 11230  052B  3000               	movlw	0
 11231  052C  3DE7               	addwfc	(efgtoa@n+1)^(0+128),f
 11232                           
 11233                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
 11234  052D  30FF               	movlw	255
 11235  052E  07D3               	addwf	efgtoa@w^(0+128),f
 11236  052F  30FF               	movlw	255
 11237  0530  3DD4               	addwfc	(efgtoa@w+1)^(0+128),f
 11238                           
 11239                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
 11240  0531  30FF               	movlw	255
 11241  0532  07C4               	addwf	efgtoa@t^(0+128),f
 11242  0533  30FF               	movlw	255
 11243  0534  3DC5               	addwfc	(efgtoa@t+1)^(0+128),f
 11244  0535  2D1C               	goto	l7555
 11245  0536                     l7557:	
 11246                           
 11247                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
 11248  0536  084C               	movf	efgtoa@d^(0+128),w
 11249  0537  3E30               	addlw	48
 11250  0538  00B0               	movwf	??_efgtoa^(0+128)
 11251  0539  0866               	movf	efgtoa@n^(0+128),w
 11252  053A  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11253  053B  0086               	movwf	6
 11254  053C  3002               	movlw	2	; select bank5/6
 11255  053D  0087               	movwf	7
 11256  053E  0830               	movf	??_efgtoa^(0+128),w
 11257  053F  0081               	movwf	1
 11258  0540  3001               	movlw	1
 11259  0541  07E6               	addwf	efgtoa@n^(0+128),f
 11260  0542  3000               	movlw	0
 11261  0543  3DE7               	addwfc	(efgtoa@n+1)^(0+128),f
 11262                           
 11263                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
 11264  0544  30FF               	movlw	255
 11265  0545  07D3               	addwf	efgtoa@w^(0+128),f
 11266  0546  30FF               	movlw	255
 11267  0547  3DD4               	addwfc	(efgtoa@w+1)^(0+128),f
 11268  0548                     l7563:	
 11269                           
 11270                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
 11271  0548  085D               	movf	(efgtoa@l+3)^(0+128),w
 11272  0549  0020               	movlb	0	; select bank0
 11273  054A  00AD               	movwf	___flmul@a+3
 11274  054B  0021               	movlb	1	; select bank1
 11275  054C  085C               	movf	(efgtoa@l+2)^(0+128),w
 11276  054D  0020               	movlb	0	; select bank0
 11277  054E  00AC               	movwf	___flmul@a+2
 11278  054F  0021               	movlb	1	; select bank1
 11279  0550  085B               	movf	(efgtoa@l+1)^(0+128),w
 11280  0551  0020               	movlb	0	; select bank0
 11281  0552  00AB               	movwf	___flmul@a+1
 11282  0553  0021               	movlb	1	; select bank1
 11283  0554  085A               	movf	efgtoa@l^(0+128),w
 11284  0555  0020               	movlb	0	; select bank0
 11285  0556  00AA               	movwf	___flmul@a
 11286  0557  0021               	movlb	1	; select bank1
 11287  0558  086B               	movf	(efgtoa@u+3)^(0+128),w
 11288  0559  0020               	movlb	0	; select bank0
 11289  055A  00A9               	movwf	___flmul@b+3
 11290  055B  0021               	movlb	1	; select bank1
 11291  055C  086A               	movf	(efgtoa@u+2)^(0+128),w
 11292  055D  0020               	movlb	0	; select bank0
 11293  055E  00A8               	movwf	___flmul@b+2
 11294  055F  0021               	movlb	1	; select bank1
 11295  0560  0869               	movf	(efgtoa@u+1)^(0+128),w
 11296  0561  0020               	movlb	0	; select bank0
 11297  0562  00A7               	movwf	___flmul@b+1
 11298  0563  0021               	movlb	1	; select bank1
 11299  0564  0868               	movf	efgtoa@u^(0+128),w
 11300  0565  0020               	movlb	0	; select bank0
 11301  0566  00A6               	movwf	___flmul@b
 11302  0567  3193  23A8  3180   	fcall	___flmul
 11303  056A  0020               	movlb	0	; select bank0
 11304  056B  0829               	movf	?___flmul+3,w
 11305  056C  0021               	movlb	1	; select bank1
 11306  056D  00A3               	movwf	(___flsub@a+3)^(0+128)
 11307  056E  0020               	movlb	0	; select bank0
 11308  056F  0828               	movf	?___flmul+2,w
 11309  0570  0021               	movlb	1	; select bank1
 11310  0571  00A2               	movwf	(___flsub@a+2)^(0+128)
 11311  0572  0020               	movlb	0	; select bank0
 11312  0573  0827               	movf	?___flmul+1,w
 11313  0574  0021               	movlb	1	; select bank1
 11314  0575  00A1               	movwf	(___flsub@a+1)^(0+128)
 11315  0576  0020               	movlb	0	; select bank0
 11316  0577  0826               	movf	?___flmul,w
 11317  0578  0021               	movlb	1	; select bank1
 11318  0579  00A0               	movwf	___flsub@a^(0+128)
 11319  057A  0859               	movf	(efgtoa@h+3)^(0+128),w
 11320  057B  00A7               	movwf	(___flsub@b+3)^(0+128)
 11321  057C  0858               	movf	(efgtoa@h+2)^(0+128),w
 11322  057D  00A6               	movwf	(___flsub@b+2)^(0+128)
 11323  057E  0857               	movf	(efgtoa@h+1)^(0+128),w
 11324  057F  00A5               	movwf	(___flsub@b+1)^(0+128)
 11325  0580  0856               	movf	efgtoa@h^(0+128),w
 11326  0581  00A4               	movwf	___flsub@b^(0+128)
 11327  0582  31B1  214B  3180   	fcall	___flsub
 11328  0585  0021               	movlb	1	; select bank1
 11329  0586  0823               	movf	(?___flsub+3)^(0+128),w
 11330  0587  00D9               	movwf	(efgtoa@h+3)^(0+128)
 11331  0588  0822               	movf	(?___flsub+2)^(0+128),w
 11332  0589  00D8               	movwf	(efgtoa@h+2)^(0+128)
 11333  058A  0821               	movf	(?___flsub+1)^(0+128),w
 11334  058B  00D7               	movwf	(efgtoa@h+1)^(0+128)
 11335  058C  0820               	movf	?___flsub^(0+128),w
 11336  058D  00D6               	movwf	efgtoa@h^(0+128)
 11337                           
 11338                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
 11339  058E  3041               	movlw	65
 11340  058F  0020               	movlb	0	; select bank0
 11341  0590  00C3               	movwf	___fldiv@a+3
 11342  0591  3020               	movlw	32
 11343  0592  00C2               	movwf	___fldiv@a+2
 11344  0593  3000               	movlw	0
 11345  0594  00C1               	movwf	___fldiv@a+1
 11346  0595  3000               	movlw	0
 11347  0596  00C0               	movwf	___fldiv@a
 11348  0597  0021               	movlb	1	; select bank1
 11349  0598  086B               	movf	(efgtoa@u+3)^(0+128),w
 11350  0599  0020               	movlb	0	; select bank0
 11351  059A  00C7               	movwf	___fldiv@b+3
 11352  059B  0021               	movlb	1	; select bank1
 11353  059C  086A               	movf	(efgtoa@u+2)^(0+128),w
 11354  059D  0020               	movlb	0	; select bank0
 11355  059E  00C6               	movwf	___fldiv@b+2
 11356  059F  0021               	movlb	1	; select bank1
 11357  05A0  0869               	movf	(efgtoa@u+1)^(0+128),w
 11358  05A1  0020               	movlb	0	; select bank0
 11359  05A2  00C5               	movwf	___fldiv@b+1
 11360  05A3  0021               	movlb	1	; select bank1
 11361  05A4  0868               	movf	efgtoa@u^(0+128),w
 11362  05A5  0020               	movlb	0	; select bank0
 11363  05A6  00C4               	movwf	___fldiv@b
 11364  05A7  319C  24A4  3180   	fcall	___fldiv
 11365  05AA  0020               	movlb	0	; select bank0
 11366  05AB  0843               	movf	?___fldiv+3,w
 11367  05AC  0021               	movlb	1	; select bank1
 11368  05AD  00EB               	movwf	(efgtoa@u+3)^(0+128)
 11369  05AE  0020               	movlb	0	; select bank0
 11370  05AF  0842               	movf	?___fldiv+2,w
 11371  05B0  0021               	movlb	1	; select bank1
 11372  05B1  00EA               	movwf	(efgtoa@u+2)^(0+128)
 11373  05B2  0020               	movlb	0	; select bank0
 11374  05B3  0841               	movf	?___fldiv+1,w
 11375  05B4  0021               	movlb	1	; select bank1
 11376  05B5  00E9               	movwf	(efgtoa@u+1)^(0+128)
 11377  05B6  0020               	movlb	0	; select bank0
 11378  05B7  0840               	movf	?___fldiv,w
 11379  05B8  0021               	movlb	1	; select bank1
 11380  05B9  00E8               	movwf	efgtoa@u^(0+128)
 11381                           
 11382                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
 11383  05BA  30FF               	movlw	255
 11384  05BB  07CA               	addwf	efgtoa@ne^(0+128),f
 11385  05BC  30FF               	movlw	255
 11386  05BD  3DCB               	addwfc	(efgtoa@ne+1)^(0+128),f
 11387                           
 11388                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
 11389  05BE  3001               	movlw	1
 11390  05BF  07DE               	addwf	efgtoa@i^(0+128),f
 11391  05C0  3000               	movlw	0
 11392  05C1  3DDF               	addwfc	(efgtoa@i+1)^(0+128),f
 11393  05C2                     l7571:	
 11394                           
 11395                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
 11396  05C2  085F               	movf	(efgtoa@i+1)^(0+128),w
 11397  05C3  3A80               	xorlw	128
 11398  05C4  00B0               	movwf	??_efgtoa^(0+128)
 11399  05C5  0849               	movf	(efgtoa@m+1)^(0+128),w
 11400  05C6  3A80               	xorlw	128
 11401  05C7  0230               	subwf	??_efgtoa^(0+128),w
 11402  05C8  1D03               	skipz
 11403  05C9  2DCC               	goto	u10425
 11404  05CA  0848               	movf	efgtoa@m^(0+128),w
 11405  05CB  025E               	subwf	efgtoa@i^(0+128),w
 11406  05CC                     u10425:	
 11407  05CC  1803               	skipnc
 11408  05CD  2DDA               	goto	l7575
 11409  05CE  0021               	movlb	1	; select bank1
 11410  05CF  0867               	movf	(efgtoa@n+1)^(0+128),w
 11411  05D0  3A80               	xorlw	128
 11412  05D1  00B0               	movwf	??_efgtoa^(0+128)
 11413  05D2  3080               	movlw	128
 11414  05D3  0230               	subwf	??_efgtoa^(0+128),w
 11415  05D4  1D03               	skipz
 11416  05D5  2DD8               	goto	u10435
 11417  05D6  304B               	movlw	75
 11418  05D7  0266               	subwf	efgtoa@n^(0+128),w
 11419  05D8                     u10435:	
 11420  05D8  1C03               	skipc
 11421  05D9  2CA0               	goto	l7523
 11422  05DA                     l7575:	
 11423                           
 11424                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
 11425  05DA  0021               	movlb	1	; select bank1
 11426  05DB  0846               	movf	efgtoa@pp^(0+128),w
 11427  05DC  0447               	iorwf	(efgtoa@pp+1)^(0+128),w
 11428  05DD  1D03               	btfss	3,2
 11429  05DE  2DF0               	goto	l7583
 11430  05DF  0023               	movlb	3	; select bank3
 11431  05E0  1E38               	btfss	_flags^(0+384),4
 11432  05E1  2DF0               	goto	l7583
 11433                           
 11434                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
 11435  05E2  302E               	movlw	46
 11436  05E3  0021               	movlb	1	; select bank1
 11437  05E4  00B0               	movwf	??_efgtoa^(0+128)
 11438  05E5  0866               	movf	efgtoa@n^(0+128),w
 11439  05E6  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11440  05E7  0086               	movwf	6
 11441  05E8  3002               	movlw	2	; select bank5/6
 11442  05E9  0087               	movwf	7
 11443  05EA  0830               	movf	??_efgtoa^(0+128),w
 11444  05EB  0081               	movwf	1
 11445  05EC  3001               	movlw	1
 11446  05ED  07E6               	addwf	efgtoa@n^(0+128),f
 11447  05EE  3000               	movlw	0
 11448  05EF  3DE7               	addwfc	(efgtoa@n+1)^(0+128),f
 11449  05F0                     l7583:	
 11450                           
 11451                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
 11452  05F0  0021               	movlb	1	; select bank1
 11453  05F1  0866               	movf	efgtoa@n^(0+128),w
 11454  05F2  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11455  05F3  0086               	movwf	6
 11456  05F4  3002               	movlw	2	; select bank5/6
 11457  05F5  0087               	movwf	7
 11458  05F6  0181               	clrf	1
 11459                           
 11460                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
 11461  05F7  3065               	movlw	101
 11462  05F8  0652               	xorwf	efgtoa@nmode^(0+128),w
 11463  05F9  1D03               	btfss	3,2
 11464  05FA  2EB1               	goto	l7645
 11465                           
 11466                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
 11467  05FB  304F               	movlw	79
 11468  05FC  00DE               	movwf	efgtoa@i^(0+128)
 11469  05FD  3000               	movlw	0
 11470  05FE  00DF               	movwf	(efgtoa@i^(0+128)+1)
 11471                           
 11472                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
 11473  05FF  085E               	movf	efgtoa@i^(0+128),w
 11474  0600  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11475  0601  0086               	movwf	6
 11476  0602  3002               	movlw	2	; select bank5/6
 11477  0603  0087               	movwf	7
 11478  0604  0181               	clrf	1
 11479                           
 11480                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
 11481  0605  01CE               	clrf	efgtoa@sign^(0+128)
 11482  0606  01CF               	clrf	(efgtoa@sign+1)^(0+128)
 11483                           
 11484                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
 11485  0607  1FE5               	btfss	(efgtoa@e+1)^(0+128),7
 11486  0608  2E12               	goto	l7599
 11487                           
 11488                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
 11489  0609  3001               	movlw	1
 11490  060A  00CE               	movwf	efgtoa@sign^(0+128)
 11491  060B  3000               	movlw	0
 11492  060C  00CF               	movwf	(efgtoa@sign^(0+128)+1)
 11493                           
 11494                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
 11495  060D  09E4               	comf	efgtoa@e^(0+128),f
 11496  060E  09E5               	comf	(efgtoa@e+1)^(0+128),f
 11497  060F  0AE4               	incf	efgtoa@e^(0+128),f
 11498  0610  1903               	skipnz
 11499  0611  0AE5               	incf	(efgtoa@e+1)^(0+128),f
 11500  0612                     l7599:	
 11501                           
 11502                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
 11503  0612  3002               	movlw	2
 11504  0613  00D0               	movwf	efgtoa@p^(0+128)
 11505  0614  3000               	movlw	0
 11506  0615  00D1               	movwf	(efgtoa@p^(0+128)+1)
 11507  0616                     l7611:	
 11508                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 11509                           
 11510                           
 11511                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 11512  0616  0864               	movf	efgtoa@e^(0+128),w
 11513  0617  0465               	iorwf	(efgtoa@e+1)^(0+128),w
 11514  0618  1903               	btfsc	3,2
 11515  0619  2E4E               	goto	l7613
 11516  061A                     l7601:	
 11517                           
 11518                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
 11519  061A  30FF               	movlw	255
 11520  061B  0021               	movlb	1	; select bank1
 11521  061C  07DE               	addwf	efgtoa@i^(0+128),f
 11522  061D  30FF               	movlw	255
 11523  061E  3DDF               	addwfc	(efgtoa@i+1)^(0+128),f
 11524                           
 11525                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
 11526  061F  300A               	movlw	10
 11527  0620  00F1               	movwf	___awmod@divisor
 11528  0621  3000               	movlw	0
 11529  0622  00F2               	movwf	___awmod@divisor+1
 11530  0623  0865               	movf	(efgtoa@e+1)^(0+128),w
 11531  0624  00F4               	movwf	___awmod@dividend+1
 11532  0625  0864               	movf	efgtoa@e^(0+128),w
 11533  0626  00F3               	movwf	___awmod@dividend
 11534  0627  31B2  226E  3180   	fcall	___awmod
 11535  062A  0871               	movf	?___awmod,w
 11536  062B  3E30               	addlw	48
 11537  062C  0021               	movlb	1	; select bank1
 11538  062D  00B0               	movwf	??_efgtoa^(0+128)
 11539  062E  085E               	movf	efgtoa@i^(0+128),w
 11540  062F  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11541  0630  0086               	movwf	6
 11542  0631  3002               	movlw	2	; select bank5/6
 11543  0632  0087               	movwf	7
 11544  0633  0830               	movf	??_efgtoa^(0+128),w
 11545  0634  0081               	movwf	1
 11546                           
 11547                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
 11548  0635  300A               	movlw	10
 11549  0636  00F1               	movwf	___awdiv@divisor
 11550  0637  3000               	movlw	0
 11551  0638  00F2               	movwf	___awdiv@divisor+1
 11552  0639  0865               	movf	(efgtoa@e+1)^(0+128),w
 11553  063A  00F4               	movwf	___awdiv@dividend+1
 11554  063B  0864               	movf	efgtoa@e^(0+128),w
 11555  063C  00F3               	movwf	___awdiv@dividend
 11556  063D  31B3  2394  3180   	fcall	___awdiv
 11557  0640  0872               	movf	?___awdiv+1,w
 11558  0641  0021               	movlb	1	; select bank1
 11559  0642  00E5               	movwf	(efgtoa@e+1)^(0+128)
 11560  0643  0871               	movf	?___awdiv,w
 11561  0644  00E4               	movwf	efgtoa@e^(0+128)
 11562                           
 11563                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
 11564  0645  30FF               	movlw	255
 11565  0646  07D0               	addwf	efgtoa@p^(0+128),f
 11566  0647  30FF               	movlw	255
 11567  0648  3DD1               	addwfc	(efgtoa@p+1)^(0+128),f
 11568                           
 11569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
 11570  0649  30FF               	movlw	255
 11571  064A  07D3               	addwf	efgtoa@w^(0+128),f
 11572  064B  30FF               	movlw	255
 11573  064C  3DD4               	addwfc	(efgtoa@w+1)^(0+128),f
 11574  064D  2E16               	goto	l7611
 11575  064E                     l7613:	
 11576  064E  0851               	movf	(efgtoa@p+1)^(0+128),w
 11577  064F  3A80               	xorlw	128
 11578  0650  00B0               	movwf	??_efgtoa^(0+128)
 11579  0651  3080               	movlw	128
 11580  0652  0230               	subwf	??_efgtoa^(0+128),w
 11581  0653  1D03               	skipz
 11582  0654  2E57               	goto	u10495
 11583  0655  3001               	movlw	1
 11584  0656  0250               	subwf	efgtoa@p^(0+128),w
 11585  0657                     u10495:	
 11586  0657  1803               	skipnc
 11587  0658  2E1A               	goto	l7601
 11588                           
 11589                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
 11590  0659  30FF               	movlw	255
 11591  065A  0021               	movlb	1	; select bank1
 11592  065B  07DE               	addwf	efgtoa@i^(0+128),f
 11593  065C  30FF               	movlw	255
 11594  065D  3DDF               	addwfc	(efgtoa@i+1)^(0+128),f
 11595                           
 11596                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
 11597  065E  084E               	movf	efgtoa@sign^(0+128),w
 11598  065F  044F               	iorwf	(efgtoa@sign+1)^(0+128),w
 11599  0660  1D03               	btfss	3,2
 11600  0661  2E64               	goto	l7621
 11601  0662  302B               	movlw	43
 11602  0663  2E65               	goto	L8
 11603  0664                     l7621:	
 11604  0664  302D               	movlw	45
 11605  0665                     L8:	
 11606  0665  00BE               	movwf	_efgtoa$1236^(0+128)
 11607  0666  3000               	movlw	0
 11608  0667  00BF               	movwf	(_efgtoa$1236^(0+128)+1)
 11609  0668  083E               	movf	_efgtoa$1236^(0+128),w
 11610  0669  00B0               	movwf	??_efgtoa^(0+128)
 11611  066A  085E               	movf	efgtoa@i^(0+128),w
 11612  066B  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11613  066C  0086               	movwf	6
 11614  066D  3002               	movlw	2	; select bank5/6
 11615  066E  0087               	movwf	7
 11616  066F  0830               	movf	??_efgtoa^(0+128),w
 11617  0670  0081               	movwf	1
 11618                           
 11619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
 11620  0671  30FF               	movlw	255
 11621  0672  07D3               	addwf	efgtoa@w^(0+128),f
 11622  0673  30FF               	movlw	255
 11623  0674  3DD4               	addwfc	(efgtoa@w+1)^(0+128),f
 11624                           
 11625                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 11626  0675  30FF               	movlw	255
 11627  0676  07DE               	addwf	efgtoa@i^(0+128),f
 11628  0677  30FF               	movlw	255
 11629  0678  3DDF               	addwfc	(efgtoa@i+1)^(0+128),f
 11630  0679  082F               	movf	efgtoa@c^(0+128),w
 11631  067A  3EBF               	addlw	191
 11632  067B  00B0               	movwf	??_efgtoa^(0+128)
 11633  067C  30FF               	movlw	255
 11634  067D  1803               	skipnc
 11635  067E  3000               	movlw	0
 11636  067F  00B1               	movwf	(??_efgtoa^(0+128)+1)
 11637  0680  3000               	movlw	0
 11638  0681  0231               	subwf	(??_efgtoa+1)^(0+128),w
 11639  0682  301A               	movlw	26
 11640  0683  1903               	skipnz
 11641  0684  0230               	subwf	??_efgtoa^(0+128),w
 11642  0685  1803               	btfsc	3,0
 11643  0686  2E89               	goto	u10510
 11644  0687  3001               	movlw	1
 11645  0688  2E8A               	goto	u10520
 11646  0689                     u10510:	
 11647  0689  3000               	movlw	0
 11648  068A                     u10520:	
 11649  068A  00B2               	movwf	(??_efgtoa+2)^(0+128)
 11650  068B  01B3               	clrf	((??_efgtoa+2)^(0+128)+1)
 11651  068C  0832               	movf	(??_efgtoa+2)^(0+128),w
 11652  068D  00C2               	movwf	_efgtoa$1238^(0+128)
 11653  068E  0833               	movf	(??_efgtoa+3)^(0+128),w
 11654  068F  00C3               	movwf	(_efgtoa$1238+1)^(0+128)
 11655  0690  0842               	movf	_efgtoa$1238^(0+128),w
 11656  0691  0443               	iorwf	(_efgtoa$1238+1)^(0+128),w
 11657  0692  1D03               	btfss	3,2
 11658  0693  2E96               	goto	l7637
 11659  0694  3065               	movlw	101
 11660  0695  2E97               	goto	L9
 11661  0696                     l7637:	
 11662  0696  3045               	movlw	69
 11663  0697                     L9:	
 11664  0697  00C0               	movwf	_efgtoa$1237^(0+128)
 11665  0698  3000               	movlw	0
 11666  0699  00C1               	movwf	(_efgtoa$1237^(0+128)+1)
 11667  069A  0840               	movf	_efgtoa$1237^(0+128),w
 11668  069B  00B0               	movwf	??_efgtoa^(0+128)
 11669  069C  085E               	movf	efgtoa@i^(0+128),w
 11670  069D  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11671  069E  0086               	movwf	6
 11672  069F  3002               	movlw	2	; select bank5/6
 11673  06A0  0087               	movwf	7
 11674  06A1  0830               	movf	??_efgtoa^(0+128),w
 11675  06A2  0081               	movwf	1
 11676                           
 11677                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
 11678  06A3  30FF               	movlw	255
 11679  06A4  07D3               	addwf	efgtoa@w^(0+128),f
 11680  06A5  30FF               	movlw	255
 11681  06A6  3DD4               	addwfc	(efgtoa@w+1)^(0+128),f
 11682                           
 11683                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
 11684  06A7  085E               	movf	efgtoa@i^(0+128),w
 11685  06A8  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11686  06A9  00F1               	movwf	strcpy@src
 11687  06AA  3002               	movlw	2
 11688  06AB  00F2               	movwf	strcpy@src+1
 11689  06AC  0866               	movf	efgtoa@n^(0+128),w
 11690  06AD  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11691  06AE  31BF  27C0  3180   	fcall	_strcpy
 11692  06B1                     l7645:	
 11693                           
 11694                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 502:     re
      +                          turn pad(fp, &dbuf[0], w);
 11695  06B1  0021               	movlb	1	; select bank1
 11696  06B2  082A               	movf	(efgtoa@fp+1)^(0+128),w
 11697  06B3  0020               	movlb	0	; select bank0
 11698  06B4  00A7               	movwf	pad@fp+1
 11699  06B5  0021               	movlb	1	; select bank1
 11700  06B6  0829               	movf	efgtoa@fp^(0+128),w
 11701  06B7  0020               	movlb	0	; select bank0
 11702  06B8  00A6               	movwf	pad@fp
 11703  06B9  30A0               	movlw	(low (_dbuf| (0+512)))& (0+255)
 11704  06BA  0021               	movlb	1	; select bank1
 11705  06BB  00B0               	movwf	??_efgtoa^(0+128)
 11706  06BC  0830               	movf	??_efgtoa^(0+128),w
 11707  06BD  0020               	movlb	0	; select bank0
 11708  06BE  00A8               	movwf	pad@buf
 11709  06BF  0021               	movlb	1	; select bank1
 11710  06C0  0854               	movf	(efgtoa@w+1)^(0+128),w
 11711  06C1  0020               	movlb	0	; select bank0
 11712  06C2  00AA               	movwf	pad@p+1
 11713  06C3  0021               	movlb	1	; select bank1
 11714  06C4  0853               	movf	efgtoa@w^(0+128),w
 11715  06C5  0020               	movlb	0	; select bank0
 11716  06C6  00A9               	movwf	pad@p
 11717  06C7  31B3  2343         	fcall	_pad
 11718  06C9  0020               	movlb	0	; select bank0
 11719  06CA  0827               	movf	?_pad+1,w
 11720  06CB  0021               	movlb	1	; select bank1
 11721  06CC  00AA               	movwf	(?_efgtoa+1)^(0+128)
 11722  06CD  0020               	movlb	0	; select bank0
 11723  06CE  0826               	movf	?_pad,w
 11724  06CF  0021               	movlb	1	; select bank1
 11725  06D0  00A9               	movwf	?_efgtoa^(0+128)
 11726  06D1  0008               	return
 11727  06D2                     __end_of_efgtoa:	
 11728                           
 11729                           	psect	text21
 11730  3028                     __ptext21:	
 11731 ;; *************** function _tolower *****************
 11732 ;; Defined at:
 11733 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
 11734 ;; Parameters:    Size  Location     Type
 11735 ;;  c               2    7[COMMON] int 
 11736 ;; Auto vars:     Size  Location     Type
 11737 ;;		None
 11738 ;; Return value:  Size  Location     Type
 11739 ;;                  2    7[COMMON] int 
 11740 ;; Registers used:
 11741 ;;		wreg, status,2, status,0
 11742 ;; Tracked objects:
 11743 ;;		On entry : 0/0
 11744 ;;		On exit  : 0/0
 11745 ;;		Unchanged: 0/0
 11746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11747 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11748 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11749 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11750 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11751 ;;Total ram usage:        8 bytes
 11752 ;; Hardware stack levels used:    1
 11753 ;; Hardware stack levels required when called:    2
 11754 ;; This function calls:
 11755 ;;		_isupper
 11756 ;; This function is called by:
 11757 ;;		_efgtoa
 11758 ;;		_vfpfcnvrt
 11759 ;; This function uses a non-reentrant model
 11760 ;;
 11761                           
 11762                           
 11763                           ;psect for function _tolower
 11764  3028                     _tolower:	
 11765                           
 11766                           ;incstack = 0
 11767                           ; Regs used in _tolower: [wreg+status,2+status,0]
 11768  3028  0877               	movf	tolower@c,w
 11769  3029  3EBF               	addlw	191
 11770  302A  0020               	movlb	0	; select bank0
 11771  302B  00A0               	movwf	??_tolower
 11772  302C  30FF               	movlw	255
 11773  302D  3D78               	addwfc	tolower@c+1,w
 11774  302E  00A1               	movwf	??_tolower+1
 11775  302F  3000               	movlw	0
 11776  3030  0221               	subwf	??_tolower+1,w
 11777  3031  301A               	movlw	26
 11778  3032  1903               	skipnz
 11779  3033  0220               	subwf	??_tolower,w
 11780  3034  1803               	btfsc	3,0
 11781  3035  2838               	goto	u9760
 11782  3036  3001               	movlw	1
 11783  3037  2839               	goto	u9770
 11784  3038                     u9760:	
 11785  3038  3000               	movlw	0
 11786  3039                     u9770:	
 11787  3039  00A2               	movwf	??_tolower+2
 11788  303A  01A3               	clrf	??_tolower+3
 11789  303B  0822               	movf	??_tolower+2,w
 11790  303C  00F9               	movwf	_tolower$1866
 11791  303D  0823               	movf	??_tolower+3,w
 11792  303E  00FA               	movwf	_tolower$1866+1
 11793  303F  0879               	movf	_tolower$1866,w
 11794  3040  047A               	iorwf	_tolower$1866+1,w
 11795  3041  1903               	btfsc	3,2
 11796  3042  0008               	return
 11797  3043  3020               	movlw	32
 11798  3044  0477               	iorwf	tolower@c,w
 11799  3045  00F7               	movwf	?_tolower
 11800  3046  3000               	movlw	0
 11801  3047  0478               	iorwf	tolower@c+1,w
 11802  3048  00F8               	movwf	?_tolower+1
 11803  3049  0008               	return
 11804  304A                     __end_of_tolower:	
 11805                           
 11806                           	psect	text22
 11807  3F04                     __ptext22:	
 11808 ;; *************** function _isupper *****************
 11809 ;; Defined at:
 11810 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
 11811 ;; Parameters:    Size  Location     Type
 11812 ;;  c               2    1[COMMON] int 
 11813 ;; Auto vars:     Size  Location     Type
 11814 ;;		None
 11815 ;; Return value:  Size  Location     Type
 11816 ;;                  2    1[COMMON] int 
 11817 ;; Registers used:
 11818 ;;		wreg, status,2, status,0
 11819 ;; Tracked objects:
 11820 ;;		On entry : 0/0
 11821 ;;		On exit  : 0/0
 11822 ;;		Unchanged: 0/0
 11823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11824 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11826 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11827 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11828 ;;Total ram usage:        6 bytes
 11829 ;; Hardware stack levels used:    1
 11830 ;; Hardware stack levels required when called:    1
 11831 ;; This function calls:
 11832 ;;		Nothing
 11833 ;; This function is called by:
 11834 ;;		_efgtoa
 11835 ;;		_xtoa
 11836 ;;		_vfpfcnvrt
 11837 ;;		_tolower
 11838 ;; This function uses a non-reentrant model
 11839 ;;
 11840                           
 11841                           
 11842                           ;psect for function _isupper
 11843  3F04                     _isupper:	
 11844                           
 11845                           ;incstack = 0
 11846                           ; Regs used in _isupper: [wreg+status,2+status,0]
 11847  3F04  0871               	movf	isupper@c,w
 11848  3F05  3EBF               	addlw	191
 11849  3F06  00F3               	movwf	??_isupper
 11850  3F07  30FF               	movlw	255
 11851  3F08  3D72               	addwfc	isupper@c+1,w
 11852  3F09  00F4               	movwf	??_isupper+1
 11853  3F0A  3000               	movlw	0
 11854  3F0B  0274               	subwf	??_isupper+1,w
 11855  3F0C  301A               	movlw	26
 11856  3F0D  1903               	skipnz
 11857  3F0E  0273               	subwf	??_isupper,w
 11858  3F0F  1803               	btfsc	3,0
 11859  3F10  2F13               	goto	u9680
 11860  3F11  3001               	movlw	1
 11861  3F12  2F14               	goto	u9690
 11862  3F13                     u9680:	
 11863  3F13  3000               	movlw	0
 11864  3F14                     u9690:	
 11865  3F14  00F5               	movwf	??_isupper+2
 11866  3F15  01F6               	clrf	??_isupper+3
 11867  3F16  0875               	movf	??_isupper+2,w
 11868  3F17  00F1               	movwf	?_isupper
 11869  3F18  0876               	movf	??_isupper+3,w
 11870  3F19  00F2               	movwf	?_isupper+1
 11871  3F1A  0008               	return
 11872  3F1B                     __end_of_isupper:	
 11873                           
 11874                           	psect	text23
 11875  3FC0                     __ptext23:	
 11876 ;; *************** function _strcpy *****************
 11877 ;; Defined at:
 11878 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
 11879 ;; Parameters:    Size  Location     Type
 11880 ;;  dest            1    wreg     PTR unsigned char 
 11881 ;;		 -> dbuf(80), 
 11882 ;;  src             2    1[COMMON] PTR const unsigned char 
 11883 ;;		 -> STR_32(4), STR_31(4), STR_28(4), STR_27(4), 
 11884 ;;		 -> dbuf(80), 
 11885 ;; Auto vars:     Size  Location     Type
 11886 ;;  dest            1    8[COMMON] PTR unsigned char 
 11887 ;;		 -> dbuf(80), 
 11888 ;;  s               2    5[COMMON] PTR const unsigned char 
 11889 ;;		 -> STR_32(4), STR_31(4), STR_28(4), STR_27(4), 
 11890 ;;		 -> dbuf(80), 
 11891 ;;  d               1    7[COMMON] PTR unsigned char 
 11892 ;;		 -> dbuf(80), 
 11893 ;; Return value:  Size  Location     Type
 11894 ;;                  1    wreg      PTR unsigned char 
 11895 ;; Registers used:
 11896 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 11897 ;; Tracked objects:
 11898 ;;		On entry : 0/0
 11899 ;;		On exit  : 0/0
 11900 ;;		Unchanged: 0/0
 11901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11902 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11903 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11904 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11905 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11906 ;;Total ram usage:        8 bytes
 11907 ;; Hardware stack levels used:    1
 11908 ;; Hardware stack levels required when called:    1
 11909 ;; This function calls:
 11910 ;;		Nothing
 11911 ;; This function is called by:
 11912 ;;		_efgtoa
 11913 ;; This function uses a non-reentrant model
 11914 ;;
 11915                           
 11916                           
 11917                           ;psect for function _strcpy
 11918  3FC0                     _strcpy:	
 11919                           
 11920                           ;incstack = 0
 11921                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
 11922                           ;strcpy@dest stored from wreg
 11923  3FC0  00F8               	movwf	strcpy@dest
 11924  3FC1  0872               	movf	strcpy@src+1,w
 11925  3FC2  00F6               	movwf	strcpy@s+1
 11926  3FC3  0871               	movf	strcpy@src,w
 11927  3FC4  00F5               	movwf	strcpy@s
 11928  3FC5  0878               	movf	strcpy@dest,w
 11929  3FC6  00F3               	movwf	??_strcpy
 11930  3FC7  0873               	movf	??_strcpy,w
 11931  3FC8  00F7               	movwf	strcpy@d
 11932  3FC9                     l4753:	
 11933  3FC9  0877               	movf	strcpy@d,w
 11934  3FCA  0086               	movwf	6
 11935  3FCB  3002               	movlw	2	; select bank4/5
 11936  3FCC  0087               	movwf	7
 11937  3FCD  0AF7               	incf	strcpy@d,f
 11938  3FCE  0876               	movf	strcpy@s+1,w
 11939  3FCF  00F4               	movwf	??_strcpy+1
 11940  3FD0  0875               	movf	strcpy@s,w
 11941  3FD1  00F3               	movwf	??_strcpy
 11942  3FD2  0AF5               	incf	strcpy@s,f
 11943  3FD3  1903               	skipnz
 11944  3FD4  0AF6               	incf	strcpy@s+1,f
 11945  3FD5  0873               	movf	??_strcpy,w
 11946  3FD6  0084               	movwf	4
 11947  3FD7  0874               	movf	??_strcpy+1,w
 11948  3FD8  0085               	movwf	5
 11949  3FD9  0800               	movf	0,w	;code access
 11950  3FDA  3FC0               	movwi [0]fsr1
 11951  3FDB  0889               	movf	9,f
 11952  3FDC  1903               	btfsc	3,2
 11953  3FDD  0008               	return
 11954  3FDE  2FC9               	goto	l4753
 11955  3FDF                     __end_of_strcpy:	
 11956                           
 11957                           	psect	text24
 11958  2E4D                     __ptext24:	
 11959 ;; *************** function _floorf *****************
 11960 ;; Defined at:
 11961 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
 11962 ;; Parameters:    Size  Location     Type
 11963 ;;  x               4   58[BANK0 ] float 
 11964 ;; Auto vars:     Size  Location     Type
 11965 ;;  u               4   74[BANK0 ] struct .
 11966 ;;  m               4   68[BANK0 ] unsigned long 
 11967 ;;  e               2   72[BANK0 ] int 
 11968 ;; Return value:  Size  Location     Type
 11969 ;;                  4   58[BANK0 ] float 
 11970 ;; Registers used:
 11971 ;;		wreg, status,2, status,0
 11972 ;; Tracked objects:
 11973 ;;		On entry : 0/0
 11974 ;;		On exit  : 0/0
 11975 ;;		Unchanged: 0/0
 11976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11977 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11978 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11979 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11980 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11981 ;;Total ram usage:       20 bytes
 11982 ;; Hardware stack levels used:    1
 11983 ;; Hardware stack levels required when called:    1
 11984 ;; This function calls:
 11985 ;;		Nothing
 11986 ;; This function is called by:
 11987 ;;		_efgtoa
 11988 ;; This function uses a non-reentrant model
 11989 ;;
 11990                           
 11991                           
 11992                           ;psect for function _floorf
 11993  2E4D                     _floorf:	
 11994                           
 11995                           ;incstack = 0
 11996                           ; Regs used in _floorf: [wreg+status,2+status,0]
 11997  2E4D  0023               	movlb	3	; select bank3
 11998  2E4E  0823               	movf	(floorf@F524+3)^(0+384),w
 11999  2E4F  0020               	movlb	0	; select bank0
 12000  2E50  00ED               	movwf	floorf@u+3
 12001  2E51  0023               	movlb	3	; select bank3
 12002  2E52  0822               	movf	(floorf@F524+2)^(0+384),w
 12003  2E53  0020               	movlb	0	; select bank0
 12004  2E54  00EC               	movwf	floorf@u+2
 12005  2E55  0023               	movlb	3	; select bank3
 12006  2E56  0821               	movf	(floorf@F524+1)^(0+384),w
 12007  2E57  0020               	movlb	0	; select bank0
 12008  2E58  00EB               	movwf	floorf@u+1
 12009  2E59  0023               	movlb	3	; select bank3
 12010  2E5A  0820               	movf	floorf@F524^(0+384),w
 12011  2E5B  0020               	movlb	0	; select bank0
 12012  2E5C  00EA               	movwf	floorf@u
 12013  2E5D  085D               	movf	floorf@x+3,w
 12014  2E5E  00ED               	movwf	floorf@u+3
 12015  2E5F  085C               	movf	floorf@x+2,w
 12016  2E60  00EC               	movwf	floorf@u+2
 12017  2E61  085B               	movf	floorf@x+1,w
 12018  2E62  00EB               	movwf	floorf@u+1
 12019  2E63  085A               	movf	floorf@x,w
 12020  2E64  00EA               	movwf	floorf@u
 12021  2E65  086A               	movf	floorf@u,w
 12022  2E66  00DE               	movwf	??_floorf
 12023  2E67  086B               	movf	floorf@u+1,w
 12024  2E68  00DF               	movwf	??_floorf+1
 12025  2E69  086C               	movf	floorf@u+2,w
 12026  2E6A  00E0               	movwf	??_floorf+2
 12027  2E6B  086D               	movf	floorf@u+3,w
 12028  2E6C  00E1               	movwf	??_floorf+3
 12029  2E6D  3017               	movlw	23
 12030  2E6E                     u5595:	
 12031  2E6E  36E1               	lsrf	??_floorf+3,f
 12032  2E6F  0CE0               	rrf	??_floorf+2,f
 12033  2E70  0CDF               	rrf	??_floorf+1,f
 12034  2E71  0CDE               	rrf	??_floorf,f
 12035  2E72  0B89               	decfsz	9,f
 12036  2E73  2E6E               	goto	u5595
 12037  2E74  30FF               	movlw	255
 12038  2E75  055E               	andwf	??_floorf,w
 12039  2E76  00E2               	movwf	??_floorf+4
 12040  2E77  3000               	movlw	0
 12041  2E78  055F               	andwf	??_floorf+1,w
 12042  2E79  00E3               	movwf	??_floorf+5
 12043  2E7A  0862               	movf	??_floorf+4,w
 12044  2E7B  3E81               	addlw	129
 12045  2E7C  00E8               	movwf	floorf@e
 12046  2E7D  30FF               	movlw	255
 12047  2E7E  3D63               	addwfc	??_floorf+5,w
 12048  2E7F  00E9               	movwf	floorf@e+1
 12049  2E80  0869               	movf	floorf@e+1,w
 12050  2E81  3A80               	xorlw	128
 12051  2E82  00DE               	movwf	??_floorf
 12052  2E83  3080               	movlw	128
 12053  2E84  025E               	subwf	??_floorf,w
 12054  2E85  1D03               	skipz
 12055  2E86  2E89               	goto	u5605
 12056  2E87  3017               	movlw	23
 12057  2E88  0268               	subwf	floorf@e,w
 12058  2E89                     u5605:	
 12059  2E89  1803               	btfsc	3,0
 12060  2E8A  0008               	return
 12061  2E8B  0020               	movlb	0	; select bank0
 12062  2E8C  1BE9               	btfsc	floorf@e+1,7
 12063  2E8D  2EE6               	goto	l4785
 12064  2E8E  30FF               	movlw	255
 12065  2E8F  00DE               	movwf	??_floorf
 12066  2E90  30FF               	movlw	255
 12067  2E91  00DF               	movwf	??_floorf+1
 12068  2E92  307F               	movlw	127
 12069  2E93  00E0               	movwf	??_floorf+2
 12070  2E94  3000               	movlw	0
 12071  2E95  00E1               	movwf	??_floorf+3
 12072  2E96  0A68               	incf	floorf@e,w
 12073  2E97  2E9C               	goto	u5620
 12074  2E98                     u5625:	
 12075  2E98  37E1               	asrf	??_floorf+3,f
 12076  2E99  0CE0               	rrf	??_floorf+2,f
 12077  2E9A  0CDF               	rrf	??_floorf+1,f
 12078  2E9B  0CDE               	rrf	??_floorf,f
 12079  2E9C                     u5620:	
 12080  2E9C  0B89               	decfsz	9,f
 12081  2E9D  2E98               	goto	u5625
 12082  2E9E  0861               	movf	??_floorf+3,w
 12083  2E9F  00E7               	movwf	floorf@m+3
 12084  2EA0  0860               	movf	??_floorf+2,w
 12085  2EA1  00E6               	movwf	floorf@m+2
 12086  2EA2  085F               	movf	??_floorf+1,w
 12087  2EA3  00E5               	movwf	floorf@m+1
 12088  2EA4  085E               	movf	??_floorf,w
 12089  2EA5  00E4               	movwf	floorf@m
 12090  2EA6  086A               	movf	floorf@u,w
 12091  2EA7  0564               	andwf	floorf@m,w
 12092  2EA8  00DE               	movwf	??_floorf
 12093  2EA9  086B               	movf	floorf@u+1,w
 12094  2EAA  0565               	andwf	floorf@m+1,w
 12095  2EAB  00DF               	movwf	??_floorf+1
 12096  2EAC  086C               	movf	floorf@u+2,w
 12097  2EAD  0566               	andwf	floorf@m+2,w
 12098  2EAE  00E0               	movwf	??_floorf+2
 12099  2EAF  086D               	movf	floorf@u+3,w
 12100  2EB0  0567               	andwf	floorf@m+3,w
 12101  2EB1  00E1               	movwf	??_floorf+3
 12102  2EB2  0861               	movf	??_floorf+3,w
 12103  2EB3  0460               	iorwf	??_floorf+2,w
 12104  2EB4  045F               	iorwf	??_floorf+1,w
 12105  2EB5  045E               	iorwf	??_floorf,w
 12106  2EB6  1903               	btfsc	3,2
 12107  2EB7  0008               	return
 12108  2EB8  086A               	movf	floorf@u,w
 12109  2EB9  00DE               	movwf	??_floorf
 12110  2EBA  086B               	movf	floorf@u+1,w
 12111  2EBB  00DF               	movwf	??_floorf+1
 12112  2EBC  086C               	movf	floorf@u+2,w
 12113  2EBD  00E0               	movwf	??_floorf+2
 12114  2EBE  086D               	movf	floorf@u+3,w
 12115  2EBF  00E1               	movwf	??_floorf+3
 12116  2EC0  301F               	movlw	31
 12117  2EC1                     u5645:	
 12118  2EC1  36E1               	lsrf	??_floorf+3,f
 12119  2EC2  0CE0               	rrf	??_floorf+2,f
 12120  2EC3  0CDF               	rrf	??_floorf+1,f
 12121  2EC4  0CDE               	rrf	??_floorf,f
 12122  2EC5  0B89               	decfsz	9,f
 12123  2EC6  2EC1               	goto	u5645
 12124  2EC7  0861               	movf	??_floorf+3,w
 12125  2EC8  0460               	iorwf	??_floorf+2,w
 12126  2EC9  045F               	iorwf	??_floorf+1,w
 12127  2ECA  045E               	iorwf	??_floorf,w
 12128  2ECB  1903               	skipnz
 12129  2ECC  2ED5               	goto	l4783
 12130  2ECD  0864               	movf	floorf@m,w
 12131  2ECE  07EA               	addwf	floorf@u,f
 12132  2ECF  0865               	movf	floorf@m+1,w
 12133  2ED0  3DEB               	addwfc	floorf@u+1,f
 12134  2ED1  0866               	movf	floorf@m+2,w
 12135  2ED2  3DEC               	addwfc	floorf@u+2,f
 12136  2ED3  0867               	movf	floorf@m+3,w
 12137  2ED4  3DED               	addwfc	floorf@u+3,f
 12138  2ED5                     l4783:	
 12139  2ED5  0964               	comf	floorf@m,w
 12140  2ED6  00DE               	movwf	??_floorf
 12141  2ED7  0965               	comf	floorf@m+1,w
 12142  2ED8  00DF               	movwf	??_floorf+1
 12143  2ED9  0966               	comf	floorf@m+2,w
 12144  2EDA  00E0               	movwf	??_floorf+2
 12145  2EDB  0967               	comf	floorf@m+3,w
 12146  2EDC  00E1               	movwf	??_floorf+3
 12147  2EDD  085E               	movf	??_floorf,w
 12148  2EDE  05EA               	andwf	floorf@u,f
 12149  2EDF  085F               	movf	??_floorf+1,w
 12150  2EE0  05EB               	andwf	floorf@u+1,f
 12151  2EE1  0860               	movf	??_floorf+2,w
 12152  2EE2  05EC               	andwf	floorf@u+2,f
 12153  2EE3  0861               	movf	??_floorf+3,w
 12154  2EE4  05ED               	andwf	floorf@u+3,f
 12155  2EE5  2F1C               	goto	l1468
 12156  2EE6                     l4785:	
 12157  2EE6  086A               	movf	floorf@u,w
 12158  2EE7  00DE               	movwf	??_floorf
 12159  2EE8  086B               	movf	floorf@u+1,w
 12160  2EE9  00DF               	movwf	??_floorf+1
 12161  2EEA  086C               	movf	floorf@u+2,w
 12162  2EEB  00E0               	movwf	??_floorf+2
 12163  2EEC  086D               	movf	floorf@u+3,w
 12164  2EED  00E1               	movwf	??_floorf+3
 12165  2EEE  301F               	movlw	31
 12166  2EEF                     u5665:	
 12167  2EEF  36E1               	lsrf	??_floorf+3,f
 12168  2EF0  0CE0               	rrf	??_floorf+2,f
 12169  2EF1  0CDF               	rrf	??_floorf+1,f
 12170  2EF2  0CDE               	rrf	??_floorf,f
 12171  2EF3  0B89               	decfsz	9,f
 12172  2EF4  2EEF               	goto	u5665
 12173  2EF5  0861               	movf	??_floorf+3,w
 12174  2EF6  0460               	iorwf	??_floorf+2,w
 12175  2EF7  045F               	iorwf	??_floorf+1,w
 12176  2EF8  045E               	iorwf	??_floorf,w
 12177  2EF9  1D03               	skipz
 12178  2EFA  2EFF               	goto	l4789
 12179  2EFB  3000               	movlw	0
 12180  2EFC  00ED               	movwf	floorf@u+3
 12181  2EFD  3000               	movlw	0
 12182  2EFE  2F17               	goto	L10
 12183  2EFF                     l4789:	
 12184  2EFF  086A               	movf	floorf@u,w
 12185  2F00  00DE               	movwf	??_floorf
 12186  2F01  086B               	movf	floorf@u+1,w
 12187  2F02  00DF               	movwf	??_floorf+1
 12188  2F03  086C               	movf	floorf@u+2,w
 12189  2F04  00E0               	movwf	??_floorf+2
 12190  2F05  086D               	movf	floorf@u+3,w
 12191  2F06  00E1               	movwf	??_floorf+3
 12192  2F07  3001               	movlw	1
 12193  2F08                     u5685:	
 12194  2F08  35DE               	lslf	??_floorf,f
 12195  2F09  0DDF               	rlf	??_floorf+1,f
 12196  2F0A  0DE0               	rlf	??_floorf+2,f
 12197  2F0B  0DE1               	rlf	??_floorf+3,f
 12198  2F0C  0B89               	decfsz	9,f
 12199  2F0D  2F08               	goto	u5685
 12200  2F0E  0861               	movf	??_floorf+3,w
 12201  2F0F  0460               	iorwf	??_floorf+2,w
 12202  2F10  045F               	iorwf	??_floorf+1,w
 12203  2F11  045E               	iorwf	??_floorf,w
 12204  2F12  1903               	skipnz
 12205  2F13  2F1C               	goto	l1468
 12206  2F14  30BF               	movlw	191
 12207  2F15  00ED               	movwf	floorf@u+3
 12208  2F16  3080               	movlw	128
 12209  2F17                     L10:	
 12210  2F17  00EC               	movwf	floorf@u+2
 12211  2F18  3000               	movlw	0
 12212  2F19  00EB               	movwf	floorf@u+1
 12213  2F1A  3000               	movlw	0
 12214  2F1B  00EA               	movwf	floorf@u
 12215  2F1C                     l1468:	
 12216  2F1C  086D               	movf	floorf@u+3,w
 12217  2F1D  00DD               	movwf	?_floorf+3
 12218  2F1E  086C               	movf	floorf@u+2,w
 12219  2F1F  00DC               	movwf	?_floorf+2
 12220  2F20  086B               	movf	floorf@u+1,w
 12221  2F21  00DB               	movwf	?_floorf+1
 12222  2F22  086A               	movf	floorf@u,w
 12223  2F23  00DA               	movwf	?_floorf
 12224  2F24  0008               	return
 12225  2F25                     __end_of_floorf:	
 12226                           
 12227                           	psect	text25
 12228  360E                     __ptext25:	
 12229 ;; *************** function ___fpclassifyf *****************
 12230 ;; Defined at:
 12231 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
 12232 ;; Parameters:    Size  Location     Type
 12233 ;;  x               4    1[COMMON] float 
 12234 ;; Auto vars:     Size  Location     Type
 12235 ;;  u               4    2[BANK0 ] struct .
 12236 ;;  e               2    0[BANK0 ] int 
 12237 ;; Return value:  Size  Location     Type
 12238 ;;                  2    1[COMMON] int 
 12239 ;; Registers used:
 12240 ;;		wreg, status,2, status,0
 12241 ;; Tracked objects:
 12242 ;;		On entry : 0/0
 12243 ;;		On exit  : 0/0
 12244 ;;		Unchanged: 0/0
 12245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12246 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12247 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12248 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12249 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12250 ;;Total ram usage:       16 bytes
 12251 ;; Hardware stack levels used:    1
 12252 ;; Hardware stack levels required when called:    1
 12253 ;; This function calls:
 12254 ;;		Nothing
 12255 ;; This function is called by:
 12256 ;;		_efgtoa
 12257 ;; This function uses a non-reentrant model
 12258 ;;
 12259                           
 12260                           
 12261                           ;psect for function ___fpclassifyf
 12262  360E                     ___fpclassifyf:	
 12263                           
 12264                           ;incstack = 0
 12265                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
 12266  360E  0023               	movlb	3	; select bank3
 12267  360F  0827               	movf	(___fpclassifyf@F463+3)^(0+384),w
 12268  3610  0020               	movlb	0	; select bank0
 12269  3611  00A5               	movwf	___fpclassifyf@u+3
 12270  3612  0023               	movlb	3	; select bank3
 12271  3613  0826               	movf	(___fpclassifyf@F463+2)^(0+384),w
 12272  3614  0020               	movlb	0	; select bank0
 12273  3615  00A4               	movwf	___fpclassifyf@u+2
 12274  3616  0023               	movlb	3	; select bank3
 12275  3617  0825               	movf	(___fpclassifyf@F463+1)^(0+384),w
 12276  3618  0020               	movlb	0	; select bank0
 12277  3619  00A3               	movwf	___fpclassifyf@u+1
 12278  361A  0023               	movlb	3	; select bank3
 12279  361B  0824               	movf	___fpclassifyf@F463^(0+384),w
 12280  361C  0020               	movlb	0	; select bank0
 12281  361D  00A2               	movwf	___fpclassifyf@u
 12282  361E  0874               	movf	___fpclassifyf@x+3,w
 12283  361F  00A5               	movwf	___fpclassifyf@u+3
 12284  3620  0873               	movf	___fpclassifyf@x+2,w
 12285  3621  00A4               	movwf	___fpclassifyf@u+2
 12286  3622  0872               	movf	___fpclassifyf@x+1,w
 12287  3623  00A3               	movwf	___fpclassifyf@u+1
 12288  3624  0871               	movf	___fpclassifyf@x,w
 12289  3625  00A2               	movwf	___fpclassifyf@u
 12290  3626  0822               	movf	___fpclassifyf@u,w
 12291  3627  00F5               	movwf	??___fpclassifyf
 12292  3628  0823               	movf	___fpclassifyf@u+1,w
 12293  3629  00F6               	movwf	??___fpclassifyf+1
 12294  362A  0824               	movf	___fpclassifyf@u+2,w
 12295  362B  00F7               	movwf	??___fpclassifyf+2
 12296  362C  0825               	movf	___fpclassifyf@u+3,w
 12297  362D  00F8               	movwf	??___fpclassifyf+3
 12298  362E  3017               	movlw	23
 12299  362F                     u5475:	
 12300  362F  36F8               	lsrf	??___fpclassifyf+3,f
 12301  3630  0CF7               	rrf	??___fpclassifyf+2,f
 12302  3631  0CF6               	rrf	??___fpclassifyf+1,f
 12303  3632  0CF5               	rrf	??___fpclassifyf,f
 12304  3633  0B89               	decfsz	9,f
 12305  3634  2E2F               	goto	u5475
 12306  3635  30FF               	movlw	255
 12307  3636  0575               	andwf	??___fpclassifyf,w
 12308  3637  00A0               	movwf	___fpclassifyf@e
 12309  3638  3000               	movlw	0
 12310  3639  0576               	andwf	??___fpclassifyf+1,w
 12311  363A  00A1               	movwf	___fpclassifyf@e+1
 12312  363B  0820               	movf	___fpclassifyf@e,w
 12313  363C  0421               	iorwf	___fpclassifyf@e+1,w
 12314  363D  1D03               	btfss	3,2
 12315  363E  2E5E               	goto	l4741
 12316  363F  0822               	movf	___fpclassifyf@u,w
 12317  3640  00F5               	movwf	??___fpclassifyf
 12318  3641  0823               	movf	___fpclassifyf@u+1,w
 12319  3642  00F6               	movwf	??___fpclassifyf+1
 12320  3643  0824               	movf	___fpclassifyf@u+2,w
 12321  3644  00F7               	movwf	??___fpclassifyf+2
 12322  3645  0825               	movf	___fpclassifyf@u+3,w
 12323  3646  00F8               	movwf	??___fpclassifyf+3
 12324  3647  3001               	movlw	1
 12325  3648                     u5495:	
 12326  3648  35F5               	lslf	??___fpclassifyf,f
 12327  3649  0DF6               	rlf	??___fpclassifyf+1,f
 12328  364A  0DF7               	rlf	??___fpclassifyf+2,f
 12329  364B  0DF8               	rlf	??___fpclassifyf+3,f
 12330  364C  0B89               	decfsz	9,f
 12331  364D  2E48               	goto	u5495
 12332  364E  0878               	movf	??___fpclassifyf+3,w
 12333  364F  0477               	iorwf	??___fpclassifyf+2,w
 12334  3650  0476               	iorwf	??___fpclassifyf+1,w
 12335  3651  0475               	iorwf	??___fpclassifyf,w
 12336  3652  1D03               	skipz
 12337  3653  2E59               	goto	l4737
 12338  3654  3002               	movlw	2
 12339  3655  00F1               	movwf	?___fpclassifyf
 12340  3656  3000               	movlw	0
 12341  3657  00F2               	movwf	?___fpclassifyf+1
 12342  3658  0008               	return
 12343  3659                     l4737:	
 12344  3659  3003               	movlw	3
 12345  365A  00F1               	movwf	?___fpclassifyf
 12346  365B  3000               	movlw	0
 12347  365C  00F2               	movwf	?___fpclassifyf+1
 12348  365D  0008               	return
 12349  365E                     l4741:	
 12350  365E  0A20               	incf	___fpclassifyf@e,w
 12351  365F  0421               	iorwf	___fpclassifyf@e+1,w
 12352  3660  1D03               	btfss	3,2
 12353  3661  2E81               	goto	l4747
 12354  3662  0822               	movf	___fpclassifyf@u,w
 12355  3663  00F5               	movwf	??___fpclassifyf
 12356  3664  0823               	movf	___fpclassifyf@u+1,w
 12357  3665  00F6               	movwf	??___fpclassifyf+1
 12358  3666  0824               	movf	___fpclassifyf@u+2,w
 12359  3667  00F7               	movwf	??___fpclassifyf+2
 12360  3668  0825               	movf	___fpclassifyf@u+3,w
 12361  3669  00F8               	movwf	??___fpclassifyf+3
 12362  366A  3009               	movlw	9
 12363  366B                     u5525:	
 12364  366B  35F5               	lslf	??___fpclassifyf,f
 12365  366C  0DF6               	rlf	??___fpclassifyf+1,f
 12366  366D  0DF7               	rlf	??___fpclassifyf+2,f
 12367  366E  0DF8               	rlf	??___fpclassifyf+3,f
 12368  366F  0B89               	decfsz	9,f
 12369  3670  2E6B               	goto	u5525
 12370  3671  0878               	movf	??___fpclassifyf+3,w
 12371  3672  0477               	iorwf	??___fpclassifyf+2,w
 12372  3673  0476               	iorwf	??___fpclassifyf+1,w
 12373  3674  0475               	iorwf	??___fpclassifyf,w
 12374  3675  1D03               	btfss	3,2
 12375  3676  2E79               	goto	u5530
 12376  3677  3001               	movlw	1
 12377  3678  2E7A               	goto	u5540
 12378  3679                     u5530:	
 12379  3679  3000               	movlw	0
 12380  367A                     u5540:	
 12381  367A  00F9               	movwf	??___fpclassifyf+4
 12382  367B  01FA               	clrf	??___fpclassifyf+5
 12383  367C  0879               	movf	??___fpclassifyf+4,w
 12384  367D  00F1               	movwf	?___fpclassifyf
 12385  367E  087A               	movf	??___fpclassifyf+5,w
 12386  367F  00F2               	movwf	?___fpclassifyf+1
 12387  3680  0008               	return
 12388  3681                     l4747:	
 12389  3681  3004               	movlw	4
 12390  3682  00F1               	movwf	?___fpclassifyf
 12391  3683  3000               	movlw	0
 12392  3684  00F2               	movwf	?___fpclassifyf+1
 12393  3685  0008               	return
 12394  3686                     __end_of___fpclassifyf:	
 12395                           
 12396                           	psect	text26
 12397  314B                     __ptext26:	
 12398 ;; *************** function ___flsub *****************
 12399 ;; Defined at:
 12400 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 12401 ;; Parameters:    Size  Location     Type
 12402 ;;  a               4    0[BANK1 ] int 
 12403 ;;  b               4    4[BANK1 ] int 
 12404 ;; Auto vars:     Size  Location     Type
 12405 ;;		None
 12406 ;; Return value:  Size  Location     Type
 12407 ;;                  4    0[BANK1 ] int 
 12408 ;; Registers used:
 12409 ;;		wreg, status,2, status,0, pclath, cstack
 12410 ;; Tracked objects:
 12411 ;;		On entry : 0/0
 12412 ;;		On exit  : 0/0
 12413 ;;		Unchanged: 0/0
 12414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12415 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12418 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12419 ;;Total ram usage:        8 bytes
 12420 ;; Hardware stack levels used:    1
 12421 ;; Hardware stack levels required when called:    2
 12422 ;; This function calls:
 12423 ;;		___fladd
 12424 ;; This function is called by:
 12425 ;;		_efgtoa
 12426 ;; This function uses a non-reentrant model
 12427 ;;
 12428                           
 12429                           
 12430                           ;psect for function ___flsub
 12431  314B                     ___flsub:	
 12432                           
 12433                           ;incstack = 0
 12434                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 12435  314B  3080               	movlw	128
 12436  314C  0021               	movlb	1	; select bank1
 12437  314D  06A3               	xorwf	(___flsub@a+3)^(0+128),f
 12438  314E  0827               	movf	(___flsub@b+3)^(0+128),w
 12439  314F  0020               	movlb	0	; select bank0
 12440  3150  00DD               	movwf	___fladd@b+3
 12441  3151  0021               	movlb	1	; select bank1
 12442  3152  0826               	movf	(___flsub@b+2)^(0+128),w
 12443  3153  0020               	movlb	0	; select bank0
 12444  3154  00DC               	movwf	___fladd@b+2
 12445  3155  0021               	movlb	1	; select bank1
 12446  3156  0825               	movf	(___flsub@b+1)^(0+128),w
 12447  3157  0020               	movlb	0	; select bank0
 12448  3158  00DB               	movwf	___fladd@b+1
 12449  3159  0021               	movlb	1	; select bank1
 12450  315A  0824               	movf	___flsub@b^(0+128),w
 12451  315B  0020               	movlb	0	; select bank0
 12452  315C  00DA               	movwf	___fladd@b
 12453  315D  0021               	movlb	1	; select bank1
 12454  315E  0823               	movf	(___flsub@a+3)^(0+128),w
 12455  315F  0020               	movlb	0	; select bank0
 12456  3160  00E1               	movwf	___fladd@a+3
 12457  3161  0021               	movlb	1	; select bank1
 12458  3162  0822               	movf	(___flsub@a+2)^(0+128),w
 12459  3163  0020               	movlb	0	; select bank0
 12460  3164  00E0               	movwf	___fladd@a+2
 12461  3165  0021               	movlb	1	; select bank1
 12462  3166  0821               	movf	(___flsub@a+1)^(0+128),w
 12463  3167  0020               	movlb	0	; select bank0
 12464  3168  00DF               	movwf	___fladd@a+1
 12465  3169  0021               	movlb	1	; select bank1
 12466  316A  0820               	movf	___flsub@a^(0+128),w
 12467  316B  0020               	movlb	0	; select bank0
 12468  316C  00DE               	movwf	___fladd@a
 12469  316D  319E  261E         	fcall	___fladd
 12470  316F  0020               	movlb	0	; select bank0
 12471  3170  085D               	movf	?___fladd+3,w
 12472  3171  0021               	movlb	1	; select bank1
 12473  3172  00A3               	movwf	(?___flsub+3)^(0+128)
 12474  3173  0020               	movlb	0	; select bank0
 12475  3174  085C               	movf	?___fladd+2,w
 12476  3175  0021               	movlb	1	; select bank1
 12477  3176  00A2               	movwf	(?___flsub+2)^(0+128)
 12478  3177  0020               	movlb	0	; select bank0
 12479  3178  085B               	movf	?___fladd+1,w
 12480  3179  0021               	movlb	1	; select bank1
 12481  317A  00A1               	movwf	(?___flsub+1)^(0+128)
 12482  317B  0020               	movlb	0	; select bank0
 12483  317C  085A               	movf	?___fladd,w
 12484  317D  0021               	movlb	1	; select bank1
 12485  317E  00A0               	movwf	?___flsub^(0+128)
 12486  317F  0008               	return
 12487  3180                     __end_of___flsub:	
 12488                           
 12489                           	psect	text27
 12490  3E78                     __ptext27:	
 12491 ;; *************** function ___flneg *****************
 12492 ;; Defined at:
 12493 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
 12494 ;; Parameters:    Size  Location     Type
 12495 ;;  f1              4    1[COMMON] int 
 12496 ;; Auto vars:     Size  Location     Type
 12497 ;;		None
 12498 ;; Return value:  Size  Location     Type
 12499 ;;                  4    1[COMMON] int 
 12500 ;; Registers used:
 12501 ;;		wreg
 12502 ;; Tracked objects:
 12503 ;;		On entry : 0/0
 12504 ;;		On exit  : 0/0
 12505 ;;		Unchanged: 0/0
 12506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12507 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12510 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12511 ;;Total ram usage:        4 bytes
 12512 ;; Hardware stack levels used:    1
 12513 ;; Hardware stack levels required when called:    1
 12514 ;; This function calls:
 12515 ;;		Nothing
 12516 ;; This function is called by:
 12517 ;;		_efgtoa
 12518 ;; This function uses a non-reentrant model
 12519 ;;
 12520                           
 12521                           
 12522                           ;psect for function ___flneg
 12523  3E78                     ___flneg:	
 12524                           
 12525                           ;incstack = 0
 12526                           ; Regs used in ___flneg: [wreg]
 12527  3E78  0874               	movf	___flneg@f1+3,w
 12528  3E79  0473               	iorwf	___flneg@f1+2,w
 12529  3E7A  0472               	iorwf	___flneg@f1+1,w
 12530  3E7B  0471               	iorwf	___flneg@f1,w
 12531  3E7C  1903               	skipnz
 12532  3E7D  0008               	return
 12533  3E7E  3080               	movlw	128
 12534  3E7F  06F4               	xorwf	___flneg@f1+3,f
 12535  3E80  0008               	return
 12536  3E81                     __end_of___flneg:	
 12537                           
 12538                           	psect	text28
 12539  32FA                     __ptext28:	
 12540 ;; *************** function ___fleq *****************
 12541 ;; Defined at:
 12542 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
 12543 ;; Parameters:    Size  Location     Type
 12544 ;;  ff1             4    1[COMMON] int 
 12545 ;;  ff2             4    5[COMMON] int 
 12546 ;; Auto vars:     Size  Location     Type
 12547 ;;		None
 12548 ;; Return value:  Size  Location     Type
 12549 ;;		None               void
 12550 ;; Registers used:
 12551 ;;		wreg, status,2, status,0
 12552 ;; Tracked objects:
 12553 ;;		On entry : 0/0
 12554 ;;		On exit  : 0/0
 12555 ;;		Unchanged: 0/0
 12556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12557 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12559 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12560 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12561 ;;Total ram usage:       12 bytes
 12562 ;; Hardware stack levels used:    1
 12563 ;; Hardware stack levels required when called:    1
 12564 ;; This function calls:
 12565 ;;		Nothing
 12566 ;; This function is called by:
 12567 ;;		_efgtoa
 12568 ;; This function uses a non-reentrant model
 12569 ;;
 12570                           
 12571                           
 12572                           ;psect for function ___fleq
 12573  32FA                     ___fleq:	
 12574                           
 12575                           ;incstack = 0
 12576                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 12577  32FA  3000               	movlw	0
 12578  32FB  0571               	andwf	___fleq@ff1,w
 12579  32FC  0020               	movlb	0	; select bank0
 12580  32FD  00A0               	movwf	??___fleq
 12581  32FE  3000               	movlw	0
 12582  32FF  0572               	andwf	___fleq@ff1+1,w
 12583  3300  00A1               	movwf	??___fleq+1
 12584  3301  3080               	movlw	128
 12585  3302  0573               	andwf	___fleq@ff1+2,w
 12586  3303  00A2               	movwf	??___fleq+2
 12587  3304  307F               	movlw	127
 12588  3305  0574               	andwf	___fleq@ff1+3,w
 12589  3306  00A3               	movwf	??___fleq+3
 12590  3307  0823               	movf	??___fleq+3,w
 12591  3308  0422               	iorwf	??___fleq+2,w
 12592  3309  0421               	iorwf	??___fleq+1,w
 12593  330A  0420               	iorwf	??___fleq,w
 12594  330B  1D03               	skipz
 12595  330C  2B15               	goto	l1128
 12596  330D  3000               	movlw	0
 12597  330E  00F4               	movwf	___fleq@ff1+3
 12598  330F  3000               	movlw	0
 12599  3310  00F3               	movwf	___fleq@ff1+2
 12600  3311  3000               	movlw	0
 12601  3312  00F2               	movwf	___fleq@ff1+1
 12602  3313  3000               	movlw	0
 12603  3314  00F1               	movwf	___fleq@ff1
 12604  3315                     l1128:	
 12605  3315  3000               	movlw	0
 12606  3316  0575               	andwf	___fleq@ff2,w
 12607  3317  00A0               	movwf	??___fleq
 12608  3318  3000               	movlw	0
 12609  3319  0576               	andwf	___fleq@ff2+1,w
 12610  331A  00A1               	movwf	??___fleq+1
 12611  331B  3080               	movlw	128
 12612  331C  0577               	andwf	___fleq@ff2+2,w
 12613  331D  00A2               	movwf	??___fleq+2
 12614  331E  307F               	movlw	127
 12615  331F  0578               	andwf	___fleq@ff2+3,w
 12616  3320  00A3               	movwf	??___fleq+3
 12617  3321  0823               	movf	??___fleq+3,w
 12618  3322  0422               	iorwf	??___fleq+2,w
 12619  3323  0421               	iorwf	??___fleq+1,w
 12620  3324  0420               	iorwf	??___fleq,w
 12621  3325  1D03               	skipz
 12622  3326  2B2F               	goto	l1129
 12623  3327  3000               	movlw	0
 12624  3328  00F8               	movwf	___fleq@ff2+3
 12625  3329  3000               	movlw	0
 12626  332A  00F7               	movwf	___fleq@ff2+2
 12627  332B  3000               	movlw	0
 12628  332C  00F6               	movwf	___fleq@ff2+1
 12629  332D  3000               	movlw	0
 12630  332E  00F5               	movwf	___fleq@ff2
 12631  332F                     l1129:	
 12632  332F  0878               	movf	___fleq@ff2+3,w
 12633  3330  0674               	xorwf	___fleq@ff1+3,w
 12634  3331  1D03               	skipz
 12635  3332  2B3D               	goto	u9845
 12636  3333  0877               	movf	___fleq@ff2+2,w
 12637  3334  0673               	xorwf	___fleq@ff1+2,w
 12638  3335  1D03               	skipz
 12639  3336  2B3D               	goto	u9845
 12640  3337  0876               	movf	___fleq@ff2+1,w
 12641  3338  0672               	xorwf	___fleq@ff1+1,w
 12642  3339  1D03               	skipz
 12643  333A  2B3D               	goto	u9845
 12644  333B  0875               	movf	___fleq@ff2,w
 12645  333C  0671               	xorwf	___fleq@ff1,w
 12646  333D                     u9845:	
 12647  333D  1903               	skipnz
 12648  333E  2B41               	goto	l7281
 12649  333F  1003               	clrc
 12650  3340  0008               	return
 12651  3341                     l7281:	
 12652  3341  1403               	setc
 12653  3342  0008               	return
 12654  3343                     __end_of___fleq:	
 12655                           
 12656                           	psect	text29
 12657  326E                     __ptext29:	
 12658 ;; *************** function ___awmod *****************
 12659 ;; Defined at:
 12660 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
 12661 ;; Parameters:    Size  Location     Type
 12662 ;;  divisor         2    1[COMMON] int 
 12663 ;;  dividend        2    3[COMMON] int 
 12664 ;; Auto vars:     Size  Location     Type
 12665 ;;  sign            1    7[COMMON] unsigned char 
 12666 ;;  counter         1    6[COMMON] unsigned char 
 12667 ;; Return value:  Size  Location     Type
 12668 ;;                  2    1[COMMON] int 
 12669 ;; Registers used:
 12670 ;;		wreg, status,2, status,0
 12671 ;; Tracked objects:
 12672 ;;		On entry : 0/0
 12673 ;;		On exit  : 0/0
 12674 ;;		Unchanged: 0/0
 12675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12676 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12677 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12678 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12679 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12680 ;;Total ram usage:        7 bytes
 12681 ;; Hardware stack levels used:    1
 12682 ;; Hardware stack levels required when called:    1
 12683 ;; This function calls:
 12684 ;;		Nothing
 12685 ;; This function is called by:
 12686 ;;		_efgtoa
 12687 ;; This function uses a non-reentrant model
 12688 ;;
 12689                           
 12690                           
 12691                           ;psect for function ___awmod
 12692  326E                     ___awmod:	
 12693                           
 12694                           ;incstack = 0
 12695                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 12696  326E  01F7               	clrf	___awmod@sign
 12697  326F  1FF4               	btfss	___awmod@dividend+1,7
 12698  3270  2A78               	goto	l4947
 12699  3271  09F3               	comf	___awmod@dividend,f
 12700  3272  09F4               	comf	___awmod@dividend+1,f
 12701  3273  0AF3               	incf	___awmod@dividend,f
 12702  3274  1903               	skipnz
 12703  3275  0AF4               	incf	___awmod@dividend+1,f
 12704  3276  01F7               	clrf	___awmod@sign
 12705  3277  0AF7               	incf	___awmod@sign,f
 12706  3278                     l4947:	
 12707  3278  1FF2               	btfss	___awmod@divisor+1,7
 12708  3279  2A7F               	goto	l4951
 12709  327A  09F1               	comf	___awmod@divisor,f
 12710  327B  09F2               	comf	___awmod@divisor+1,f
 12711  327C  0AF1               	incf	___awmod@divisor,f
 12712  327D  1903               	skipnz
 12713  327E  0AF2               	incf	___awmod@divisor+1,f
 12714  327F                     l4951:	
 12715  327F  0871               	movf	___awmod@divisor,w
 12716  3280  0472               	iorwf	___awmod@divisor+1,w
 12717  3281  1903               	btfsc	3,2
 12718  3282  2AA6               	goto	l4969
 12719  3283  01F6               	clrf	___awmod@counter
 12720  3284  0AF6               	incf	___awmod@counter,f
 12721  3285                     l4959:	
 12722  3285  1BF2               	btfsc	___awmod@divisor+1,7
 12723  3286  2A91               	goto	l4961
 12724  3287  3001               	movlw	1
 12725  3288                     u6155:	
 12726  3288  35F1               	lslf	___awmod@divisor,f
 12727  3289  0DF2               	rlf	___awmod@divisor+1,f
 12728  328A  0B89               	decfsz	9,f
 12729  328B  2A88               	goto	u6155
 12730  328C  3001               	movlw	1
 12731  328D  00F5               	movwf	??___awmod
 12732  328E  0875               	movf	??___awmod,w
 12733  328F  07F6               	addwf	___awmod@counter,f
 12734  3290  2A85               	goto	l4959
 12735  3291                     l4961:	
 12736  3291  0872               	movf	___awmod@divisor+1,w
 12737  3292  0274               	subwf	___awmod@dividend+1,w
 12738  3293  1D03               	skipz
 12739  3294  2A97               	goto	u6175
 12740  3295  0871               	movf	___awmod@divisor,w
 12741  3296  0273               	subwf	___awmod@dividend,w
 12742  3297                     u6175:	
 12743  3297  1C03               	skipc
 12744  3298  2A9D               	goto	l4965
 12745  3299  0871               	movf	___awmod@divisor,w
 12746  329A  02F3               	subwf	___awmod@dividend,f
 12747  329B  0872               	movf	___awmod@divisor+1,w
 12748  329C  3BF4               	subwfb	___awmod@dividend+1,f
 12749  329D                     l4965:	
 12750  329D  3001               	movlw	1
 12751  329E                     u6185:	
 12752  329E  36F2               	lsrf	___awmod@divisor+1,f
 12753  329F  0CF1               	rrf	___awmod@divisor,f
 12754  32A0  0B89               	decfsz	9,f
 12755  32A1  2A9E               	goto	u6185
 12756  32A2  3001               	movlw	1
 12757  32A3  02F6               	subwf	___awmod@counter,f
 12758  32A4  1D03               	btfss	3,2
 12759  32A5  2A91               	goto	l4961
 12760  32A6                     l4969:	
 12761  32A6  0877               	movf	___awmod@sign,w
 12762  32A7  1903               	btfsc	3,2
 12763  32A8  2AAE               	goto	l4973
 12764  32A9  09F3               	comf	___awmod@dividend,f
 12765  32AA  09F4               	comf	___awmod@dividend+1,f
 12766  32AB  0AF3               	incf	___awmod@dividend,f
 12767  32AC  1903               	skipnz
 12768  32AD  0AF4               	incf	___awmod@dividend+1,f
 12769  32AE                     l4973:	
 12770  32AE  0874               	movf	___awmod@dividend+1,w
 12771  32AF  00F2               	movwf	?___awmod+1
 12772  32B0  0873               	movf	___awmod@dividend,w
 12773  32B1  00F1               	movwf	?___awmod
 12774  32B2  0008               	return
 12775  32B3                     __end_of___awmod:	
 12776                           
 12777                           	psect	text30
 12778  3394                     __ptext30:	
 12779 ;; *************** function ___awdiv *****************
 12780 ;; Defined at:
 12781 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 12782 ;; Parameters:    Size  Location     Type
 12783 ;;  divisor         2    1[COMMON] int 
 12784 ;;  dividend        2    3[COMMON] int 
 12785 ;; Auto vars:     Size  Location     Type
 12786 ;;  quotient        2    8[COMMON] int 
 12787 ;;  sign            1    7[COMMON] unsigned char 
 12788 ;;  counter         1    6[COMMON] unsigned char 
 12789 ;; Return value:  Size  Location     Type
 12790 ;;                  2    1[COMMON] int 
 12791 ;; Registers used:
 12792 ;;		wreg, status,2, status,0
 12793 ;; Tracked objects:
 12794 ;;		On entry : 0/0
 12795 ;;		On exit  : 0/0
 12796 ;;		Unchanged: 0/0
 12797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12798 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12799 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12800 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12801 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12802 ;;Total ram usage:        9 bytes
 12803 ;; Hardware stack levels used:    1
 12804 ;; Hardware stack levels required when called:    1
 12805 ;; This function calls:
 12806 ;;		Nothing
 12807 ;; This function is called by:
 12808 ;;		_efgtoa
 12809 ;; This function uses a non-reentrant model
 12810 ;;
 12811                           
 12812                           
 12813                           ;psect for function ___awdiv
 12814  3394                     ___awdiv:	
 12815                           
 12816                           ;incstack = 0
 12817                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 12818  3394  01F7               	clrf	___awdiv@sign
 12819  3395  1FF2               	btfss	___awdiv@divisor+1,7
 12820  3396  2B9E               	goto	l4903
 12821  3397  09F1               	comf	___awdiv@divisor,f
 12822  3398  09F2               	comf	___awdiv@divisor+1,f
 12823  3399  0AF1               	incf	___awdiv@divisor,f
 12824  339A  1903               	skipnz
 12825  339B  0AF2               	incf	___awdiv@divisor+1,f
 12826  339C  01F7               	clrf	___awdiv@sign
 12827  339D  0AF7               	incf	___awdiv@sign,f
 12828  339E                     l4903:	
 12829  339E  1FF4               	btfss	___awdiv@dividend+1,7
 12830  339F  2BA9               	goto	l4909
 12831  33A0  09F3               	comf	___awdiv@dividend,f
 12832  33A1  09F4               	comf	___awdiv@dividend+1,f
 12833  33A2  0AF3               	incf	___awdiv@dividend,f
 12834  33A3  1903               	skipnz
 12835  33A4  0AF4               	incf	___awdiv@dividend+1,f
 12836  33A5  3001               	movlw	1
 12837  33A6  00F5               	movwf	??___awdiv
 12838  33A7  0875               	movf	??___awdiv,w
 12839  33A8  06F7               	xorwf	___awdiv@sign,f
 12840  33A9                     l4909:	
 12841  33A9  01F8               	clrf	___awdiv@quotient
 12842  33AA  01F9               	clrf	___awdiv@quotient+1
 12843  33AB  0871               	movf	___awdiv@divisor,w
 12844  33AC  0472               	iorwf	___awdiv@divisor+1,w
 12845  33AD  1903               	btfsc	3,2
 12846  33AE  2BD8               	goto	l4931
 12847  33AF  01F6               	clrf	___awdiv@counter
 12848  33B0  0AF6               	incf	___awdiv@counter,f
 12849  33B1                     l4919:	
 12850  33B1  1BF2               	btfsc	___awdiv@divisor+1,7
 12851  33B2  2BBD               	goto	l4921
 12852  33B3  3001               	movlw	1
 12853  33B4                     u6055:	
 12854  33B4  35F1               	lslf	___awdiv@divisor,f
 12855  33B5  0DF2               	rlf	___awdiv@divisor+1,f
 12856  33B6  0B89               	decfsz	9,f
 12857  33B7  2BB4               	goto	u6055
 12858  33B8  3001               	movlw	1
 12859  33B9  00F5               	movwf	??___awdiv
 12860  33BA  0875               	movf	??___awdiv,w
 12861  33BB  07F6               	addwf	___awdiv@counter,f
 12862  33BC  2BB1               	goto	l4919
 12863  33BD                     l4921:	
 12864  33BD  3001               	movlw	1
 12865  33BE                     u6075:	
 12866  33BE  35F8               	lslf	___awdiv@quotient,f
 12867  33BF  0DF9               	rlf	___awdiv@quotient+1,f
 12868  33C0  0B89               	decfsz	9,f
 12869  33C1  2BBE               	goto	u6075
 12870  33C2  0872               	movf	___awdiv@divisor+1,w
 12871  33C3  0274               	subwf	___awdiv@dividend+1,w
 12872  33C4  1D03               	skipz
 12873  33C5  2BC8               	goto	u6085
 12874  33C6  0871               	movf	___awdiv@divisor,w
 12875  33C7  0273               	subwf	___awdiv@dividend,w
 12876  33C8                     u6085:	
 12877  33C8  1C03               	skipc
 12878  33C9  2BCF               	goto	l4927
 12879  33CA  0871               	movf	___awdiv@divisor,w
 12880  33CB  02F3               	subwf	___awdiv@dividend,f
 12881  33CC  0872               	movf	___awdiv@divisor+1,w
 12882  33CD  3BF4               	subwfb	___awdiv@dividend+1,f
 12883  33CE  1478               	bsf	___awdiv@quotient,0
 12884  33CF                     l4927:	
 12885  33CF  3001               	movlw	1
 12886  33D0                     u6095:	
 12887  33D0  36F2               	lsrf	___awdiv@divisor+1,f
 12888  33D1  0CF1               	rrf	___awdiv@divisor,f
 12889  33D2  0B89               	decfsz	9,f
 12890  33D3  2BD0               	goto	u6095
 12891  33D4  3001               	movlw	1
 12892  33D5  02F6               	subwf	___awdiv@counter,f
 12893  33D6  1D03               	btfss	3,2
 12894  33D7  2BBD               	goto	l4921
 12895  33D8                     l4931:	
 12896  33D8  0877               	movf	___awdiv@sign,w
 12897  33D9  1903               	btfsc	3,2
 12898  33DA  2BE0               	goto	l4935
 12899  33DB  09F8               	comf	___awdiv@quotient,f
 12900  33DC  09F9               	comf	___awdiv@quotient+1,f
 12901  33DD  0AF8               	incf	___awdiv@quotient,f
 12902  33DE  1903               	skipnz
 12903  33DF  0AF9               	incf	___awdiv@quotient+1,f
 12904  33E0                     l4935:	
 12905  33E0  0879               	movf	___awdiv@quotient+1,w
 12906  33E1  00F2               	movwf	?___awdiv+1
 12907  33E2  0878               	movf	___awdiv@quotient,w
 12908  33E3  00F1               	movwf	?___awdiv
 12909  33E4  0008               	return
 12910  33E5                     __end_of___awdiv:	
 12911                           
 12912                           	psect	text31
 12913  19F8                     __ptext31:	
 12914 ;; *************** function _dtoa *****************
 12915 ;; Defined at:
 12916 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 12917 ;; Parameters:    Size  Location     Type
 12918 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
 12919 ;;		 -> vsnprintf@f(6), 
 12920 ;;  d               8   18[BANK0 ] long long 
 12921 ;; Auto vars:     Size  Location     Type
 12922 ;;  n               8   37[BANK0 ] long long 
 12923 ;;  i               2   45[BANK0 ] int 
 12924 ;;  s               2   35[BANK0 ] int 
 12925 ;;  w               2   33[BANK0 ] int 
 12926 ;;  p               2   31[BANK0 ] int 
 12927 ;; Return value:  Size  Location     Type
 12928 ;;                  2   16[BANK0 ] int 
 12929 ;; Registers used:
 12930 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12931 ;; Tracked objects:
 12932 ;;		On entry : 0/0
 12933 ;;		On exit  : 0/0
 12934 ;;		Unchanged: 0/0
 12935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12936 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12937 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12938 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12939 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12940 ;;Total ram usage:       31 bytes
 12941 ;; Hardware stack levels used:    1
 12942 ;; Hardware stack levels required when called:    5
 12943 ;; This function calls:
 12944 ;;		___aodiv
 12945 ;;		___aomod
 12946 ;;		_abs
 12947 ;;		_pad
 12948 ;; This function is called by:
 12949 ;;		_vfpfcnvrt
 12950 ;; This function uses a non-reentrant model
 12951 ;;
 12952                           
 12953                           
 12954                           ;psect for function _dtoa
 12955  19F8                     _dtoa:	
 12956                           
 12957                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
 12958                           
 12959                           ;incstack = 0
 12960                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12961  19F8  0020               	movlb	0	; select bank0
 12962  19F9  0832               	movf	dtoa@d,w
 12963  19FA  00C5               	movwf	dtoa@n
 12964  19FB  0833               	movf	dtoa@d+1,w
 12965  19FC  00C6               	movwf	dtoa@n+1
 12966  19FD  0834               	movf	dtoa@d+2,w
 12967  19FE  00C7               	movwf	dtoa@n+2
 12968  19FF  0835               	movf	dtoa@d+3,w
 12969  1A00  00C8               	movwf	dtoa@n+3
 12970  1A01  0836               	movf	dtoa@d+4,w
 12971  1A02  00C9               	movwf	dtoa@n+4
 12972  1A03  0837               	movf	dtoa@d+5,w
 12973  1A04  00CA               	movwf	dtoa@n+5
 12974  1A05  0838               	movf	dtoa@d+6,w
 12975  1A06  00CB               	movwf	dtoa@n+6
 12976  1A07  0839               	movf	dtoa@d+7,w
 12977  1A08  00CC               	movwf	dtoa@n+7
 12978                           
 12979                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 12980  1A09  3045               	movlw	low dtoa@n
 12981  1A0A  0086               	movwf	6
 12982  1A0B  3000               	movlw	high dtoa@n
 12983  1A0C  0087               	movwf	7
 12984  1A0D  3F47               	moviw [7]fsr1
 12985  1A0E  00BA               	movwf	??_dtoa
 12986  1A0F  1FBA               	btfss	??_dtoa,7
 12987  1A10  2A13               	goto	u9860
 12988  1A11  3001               	movlw	1
 12989  1A12  2A14               	goto	u9870
 12990  1A13                     u9860:	
 12991  1A13  3000               	movlw	0
 12992  1A14                     u9870:	
 12993  1A14  0020               	movlb	0	; select bank0
 12994  1A15  00BB               	movwf	??_dtoa+1
 12995  1A16  01BC               	clrf	??_dtoa+2
 12996  1A17  083B               	movf	??_dtoa+1,w
 12997  1A18  00C3               	movwf	dtoa@s
 12998  1A19  083C               	movf	??_dtoa+2,w
 12999  1A1A  00C4               	movwf	dtoa@s+1
 13000                           
 13001                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 13002  1A1B  0843               	movf	dtoa@s,w
 13003  1A1C  0444               	iorwf	dtoa@s+1,w
 13004  1A1D  1903               	btfsc	3,2
 13005  1A1E  2A3D               	goto	l656
 13006                           
 13007                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 13008  1A1F  09C5               	comf	dtoa@n,f
 13009  1A20  09C6               	comf	dtoa@n+1,f
 13010  1A21  09C7               	comf	dtoa@n+2,f
 13011  1A22  09C8               	comf	dtoa@n+3,f
 13012  1A23  09C9               	comf	dtoa@n+4,f
 13013  1A24  09CA               	comf	dtoa@n+5,f
 13014  1A25  09CB               	comf	dtoa@n+6,f
 13015  1A26  09CC               	comf	dtoa@n+7,f
 13016  1A27  0AC5               	incf	dtoa@n,f
 13017  1A28  1D03               	skipz
 13018  1A29  2A3D               	goto	l656
 13019  1A2A  0AC6               	incf	dtoa@n+1,f
 13020  1A2B  1D03               	skipz
 13021  1A2C  2A3D               	goto	l656
 13022  1A2D  0AC7               	incf	dtoa@n+2,f
 13023  1A2E  1D03               	skipz
 13024  1A2F  2A3D               	goto	l656
 13025  1A30  0AC8               	incf	dtoa@n+3,f
 13026  1A31  1D03               	skipz
 13027  1A32  2A3D               	goto	l656
 13028  1A33  0AC9               	incf	dtoa@n+4,f
 13029  1A34  1D03               	skipz
 13030  1A35  2A3D               	goto	l656
 13031  1A36  0ACA               	incf	dtoa@n+5,f
 13032  1A37  1D03               	skipz
 13033  1A38  2A3D               	goto	l656
 13034  1A39  0ACB               	incf	dtoa@n+6,f
 13035  1A3A  1D03               	skipz
 13036  1A3B  2A3D               	goto	l656
 13037  1A3C  0ACC               	incf	dtoa@n+7,f
 13038  1A3D                     l656:	
 13039                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
 13040                           
 13041                           
 13042                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 13043  1A3D  0023               	movlb	3	; select bank3
 13044  1A3E  1BB7               	btfsc	(_prec+1)^(0+384),7
 13045  1A3F  2A44               	goto	l657
 13046                           
 13047                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 13048  1A40  30FD               	movlw	253
 13049  1A41  05B8               	andwf	_flags^(0+384),f
 13050  1A42  30FF               	movlw	255
 13051  1A43  05B9               	andwf	(_flags+1)^(0+384),f
 13052  1A44                     l657:	
 13053                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
 13054                           
 13055                           
 13056                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 13057  1A44  0837               	movf	(_prec+1)^(0+384),w
 13058  1A45  3A80               	xorlw	128
 13059  1A46  0020               	movlb	0	; select bank0
 13060  1A47  00BA               	movwf	??_dtoa
 13061  1A48  3080               	movlw	128
 13062  1A49  023A               	subwf	??_dtoa,w
 13063  1A4A  1D03               	skipz
 13064  1A4B  2A4F               	goto	u9915
 13065  1A4C  3001               	movlw	1
 13066  1A4D  0023               	movlb	3	; select bank3
 13067  1A4E  0236               	subwf	_prec^(0+384),w
 13068  1A4F                     u9915:	
 13069  1A4F  1803               	skipnc
 13070  1A50  2A57               	goto	l7311
 13071  1A51  3001               	movlw	1
 13072  1A52  0020               	movlb	0	; select bank0
 13073  1A53  00BF               	movwf	dtoa@p
 13074  1A54  3000               	movlw	0
 13075  1A55  00C0               	movwf	dtoa@p+1
 13076  1A56  2A5F               	goto	l661
 13077  1A57                     l7311:	
 13078  1A57  0023               	movlb	3	; select bank3
 13079  1A58  0837               	movf	(_prec+1)^(0+384),w
 13080  1A59  0020               	movlb	0	; select bank0
 13081  1A5A  00C0               	movwf	dtoa@p+1
 13082  1A5B  0023               	movlb	3	; select bank3
 13083  1A5C  0836               	movf	_prec^(0+384),w
 13084  1A5D  0020               	movlb	0	; select bank0
 13085  1A5E  00BF               	movwf	dtoa@p
 13086  1A5F                     l661:	
 13087                           
 13088                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 13089  1A5F  0023               	movlb	3	; select bank3
 13090  1A60  0835               	movf	(_width+1)^(0+384),w
 13091  1A61  0020               	movlb	0	; select bank0
 13092  1A62  00C2               	movwf	dtoa@w+1
 13093  1A63  0023               	movlb	3	; select bank3
 13094  1A64  0834               	movf	_width^(0+384),w
 13095  1A65  0020               	movlb	0	; select bank0
 13096  1A66  00C1               	movwf	dtoa@w
 13097                           
 13098                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 13099  1A67  0843               	movf	dtoa@s,w
 13100  1A68  0444               	iorwf	dtoa@s+1,w
 13101  1A69  1D03               	btfss	3,2
 13102  1A6A  2A6E               	goto	l7317
 13103  1A6B  0023               	movlb	3	; select bank3
 13104  1A6C  1D38               	btfss	_flags^(0+384),2
 13105  1A6D  2A73               	goto	l662
 13106  1A6E                     l7317:	
 13107                           
 13108                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 13109  1A6E  30FF               	movlw	255
 13110  1A6F  0020               	movlb	0	; select bank0
 13111  1A70  07C1               	addwf	dtoa@w,f
 13112  1A71  30FF               	movlw	255
 13113  1A72  3DC2               	addwfc	dtoa@w+1,f
 13114  1A73                     l662:	
 13115                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
 13116                           
 13117                           
 13118                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 13119  1A73  304F               	movlw	79
 13120  1A74  0020               	movlb	0	; select bank0
 13121  1A75  00CD               	movwf	dtoa@i
 13122  1A76  3000               	movlw	0
 13123  1A77  00CE               	movwf	dtoa@i+1
 13124                           
 13125                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 13126  1A78  0025               	movlb	5	; select bank5
 13127  1A79  01EF               	clrf	(_dbuf^(0+640)+79)
 13128                           
 13129                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13130  1A7A  2B09               	goto	l665
 13131  1A7B                     l7331:	
 13132  1A7B  0020               	movlb	0	; select bank0
 13133  1A7C  0845               	movf	dtoa@n,w
 13134  1A7D  0446               	iorwf	dtoa@n+1,w
 13135  1A7E  0447               	iorwf	dtoa@n+2,w
 13136  1A7F  0448               	iorwf	dtoa@n+3,w
 13137  1A80  0449               	iorwf	dtoa@n+4,w
 13138  1A81  044A               	iorwf	dtoa@n+5,w
 13139  1A82  044B               	iorwf	dtoa@n+6,w
 13140  1A83  044C               	iorwf	dtoa@n+7,w
 13141  1A84  1D03               	skipz
 13142  1A85  2AA0               	goto	l7321
 13143  1A86  0840               	movf	dtoa@p+1,w
 13144  1A87  3A80               	xorlw	128
 13145  1A88  00BA               	movwf	??_dtoa
 13146  1A89  3080               	movlw	128
 13147  1A8A  023A               	subwf	??_dtoa,w
 13148  1A8B  1D03               	skipz
 13149  1A8C  2A8F               	goto	u9965
 13150  1A8D  3001               	movlw	1
 13151  1A8E  023F               	subwf	dtoa@p,w
 13152  1A8F                     u9965:	
 13153  1A8F  1803               	skipnc
 13154  1A90  2AA0               	goto	l7321
 13155  1A91  0020               	movlb	0	; select bank0
 13156  1A92  0842               	movf	dtoa@w+1,w
 13157  1A93  3A80               	xorlw	128
 13158  1A94  00BA               	movwf	??_dtoa
 13159  1A95  3080               	movlw	128
 13160  1A96  023A               	subwf	??_dtoa,w
 13161  1A97  1D03               	skipz
 13162  1A98  2A9B               	goto	u9975
 13163  1A99  3001               	movlw	1
 13164  1A9A  0241               	subwf	dtoa@w,w
 13165  1A9B                     u9975:	
 13166  1A9B  1C03               	skipc
 13167  1A9C  2B15               	goto	l7339
 13168  1A9D  0023               	movlb	3	; select bank3
 13169  1A9E  1CB8               	btfss	_flags^(0+384),1
 13170  1A9F  2B15               	goto	l7339
 13171  1AA0                     l7321:	
 13172                           
 13173                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 13174  1AA0  30FF               	movlw	255
 13175  1AA1  0020               	movlb	0	; select bank0
 13176  1AA2  07CD               	addwf	dtoa@i,f
 13177  1AA3  30FF               	movlw	255
 13178  1AA4  3DCE               	addwfc	dtoa@i+1,f
 13179                           
 13180                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 13181  1AA5  300A               	movlw	10
 13182  1AA6  00A0               	movwf	___aomod@divisor
 13183  1AA7  01A1               	clrf	___aomod@divisor+1
 13184  1AA8  01A2               	clrf	___aomod@divisor+2
 13185  1AA9  01A3               	clrf	___aomod@divisor+3
 13186  1AAA  01A4               	clrf	___aomod@divisor+4
 13187  1AAB  01A5               	clrf	___aomod@divisor+5
 13188  1AAC  01A6               	clrf	___aomod@divisor+6
 13189  1AAD  01A7               	clrf	___aomod@divisor+7
 13190  1AAE  0845               	movf	dtoa@n,w
 13191  1AAF  00A8               	movwf	___aomod@dividend
 13192  1AB0  0846               	movf	dtoa@n+1,w
 13193  1AB1  00A9               	movwf	___aomod@dividend+1
 13194  1AB2  0847               	movf	dtoa@n+2,w
 13195  1AB3  00AA               	movwf	___aomod@dividend+2
 13196  1AB4  0848               	movf	dtoa@n+3,w
 13197  1AB5  00AB               	movwf	___aomod@dividend+3
 13198  1AB6  0849               	movf	dtoa@n+4,w
 13199  1AB7  00AC               	movwf	___aomod@dividend+4
 13200  1AB8  084A               	movf	dtoa@n+5,w
 13201  1AB9  00AD               	movwf	___aomod@dividend+5
 13202  1ABA  084B               	movf	dtoa@n+6,w
 13203  1ABB  00AE               	movwf	___aomod@dividend+6
 13204  1ABC  084C               	movf	dtoa@n+7,w
 13205  1ABD  00AF               	movwf	___aomod@dividend+7
 13206  1ABE  31A0  2054  3199   	fcall	___aomod
 13207  1AC1  0020               	movlb	0	; select bank0
 13208  1AC2  0821               	movf	?___aomod+1,w
 13209  1AC3  00F5               	movwf	abs@a+1
 13210  1AC4  0820               	movf	?___aomod,w
 13211  1AC5  00F4               	movwf	abs@a
 13212  1AC6  31BE  26ED  3199   	fcall	_abs
 13213  1AC9  0874               	movf	?_abs,w
 13214  1ACA  3E30               	addlw	48
 13215  1ACB  0020               	movlb	0	; select bank0
 13216  1ACC  00BA               	movwf	??_dtoa
 13217  1ACD  084D               	movf	dtoa@i,w
 13218  1ACE  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 13219  1ACF  0086               	movwf	6
 13220  1AD0  3002               	movlw	2	; select bank5/6
 13221  1AD1  0087               	movwf	7
 13222  1AD2  083A               	movf	??_dtoa,w
 13223  1AD3  0081               	movwf	1
 13224                           
 13225                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 13226  1AD4  30FF               	movlw	255
 13227  1AD5  07BF               	addwf	dtoa@p,f
 13228  1AD6  30FF               	movlw	255
 13229  1AD7  3DC0               	addwfc	dtoa@p+1,f
 13230                           
 13231                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 13232  1AD8  30FF               	movlw	255
 13233  1AD9  07C1               	addwf	dtoa@w,f
 13234  1ADA  30FF               	movlw	255
 13235  1ADB  3DC2               	addwfc	dtoa@w+1,f
 13236                           
 13237                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 13238  1ADC  300A               	movlw	10
 13239  1ADD  00A0               	movwf	___aodiv@divisor
 13240  1ADE  01A1               	clrf	___aodiv@divisor+1
 13241  1ADF  01A2               	clrf	___aodiv@divisor+2
 13242  1AE0  01A3               	clrf	___aodiv@divisor+3
 13243  1AE1  01A4               	clrf	___aodiv@divisor+4
 13244  1AE2  01A5               	clrf	___aodiv@divisor+5
 13245  1AE3  01A6               	clrf	___aodiv@divisor+6
 13246  1AE4  01A7               	clrf	___aodiv@divisor+7
 13247  1AE5  0845               	movf	dtoa@n,w
 13248  1AE6  00A8               	movwf	___aodiv@dividend
 13249  1AE7  0846               	movf	dtoa@n+1,w
 13250  1AE8  00A9               	movwf	___aodiv@dividend+1
 13251  1AE9  0847               	movf	dtoa@n+2,w
 13252  1AEA  00AA               	movwf	___aodiv@dividend+2
 13253  1AEB  0848               	movf	dtoa@n+3,w
 13254  1AEC  00AB               	movwf	___aodiv@dividend+3
 13255  1AED  0849               	movf	dtoa@n+4,w
 13256  1AEE  00AC               	movwf	___aodiv@dividend+4
 13257  1AEF  084A               	movf	dtoa@n+5,w
 13258  1AF0  00AD               	movwf	___aodiv@dividend+5
 13259  1AF1  084B               	movf	dtoa@n+6,w
 13260  1AF2  00AE               	movwf	___aodiv@dividend+6
 13261  1AF3  084C               	movf	dtoa@n+7,w
 13262  1AF4  00AF               	movwf	___aodiv@dividend+7
 13263  1AF5  31A3  23EC  3199   	fcall	___aodiv
 13264  1AF8  0020               	movlb	0	; select bank0
 13265  1AF9  0820               	movf	?___aodiv,w
 13266  1AFA  00C5               	movwf	dtoa@n
 13267  1AFB  0821               	movf	?___aodiv+1,w
 13268  1AFC  00C6               	movwf	dtoa@n+1
 13269  1AFD  0822               	movf	?___aodiv+2,w
 13270  1AFE  00C7               	movwf	dtoa@n+2
 13271  1AFF  0823               	movf	?___aodiv+3,w
 13272  1B00  00C8               	movwf	dtoa@n+3
 13273  1B01  0824               	movf	?___aodiv+4,w
 13274  1B02  00C9               	movwf	dtoa@n+4
 13275  1B03  0825               	movf	?___aodiv+5,w
 13276  1B04  00CA               	movwf	dtoa@n+5
 13277  1B05  0826               	movf	?___aodiv+6,w
 13278  1B06  00CB               	movwf	dtoa@n+6
 13279  1B07  0827               	movf	?___aodiv+7,w
 13280  1B08  00CC               	movwf	dtoa@n+7
 13281  1B09                     l665:	
 13282                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
 13283                           
 13284                           
 13285                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13286  1B09  0020               	movlb	0	; select bank0
 13287  1B0A  084E               	movf	dtoa@i+1,w
 13288  1B0B  3A80               	xorlw	128
 13289  1B0C  00BA               	movwf	??_dtoa
 13290  1B0D  3080               	movlw	128
 13291  1B0E  023A               	subwf	??_dtoa,w
 13292  1B0F  1D03               	skipz
 13293  1B10  2B13               	goto	u9945
 13294  1B11  3001               	movlw	1
 13295  1B12  024D               	subwf	dtoa@i,w
 13296  1B13                     u9945:	
 13297  1B13  1803               	btfsc	3,0
 13298  1B14  2A7B               	goto	l7331
 13299  1B15                     l7339:	
 13300                           
 13301                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 13302  1B15  0020               	movlb	0	; select bank0
 13303  1B16  0843               	movf	dtoa@s,w
 13304  1B17  0444               	iorwf	dtoa@s+1,w
 13305  1B18  1D03               	btfss	3,2
 13306  1B19  2B1D               	goto	l7343
 13307  1B1A  0023               	movlb	3	; select bank3
 13308  1B1B  1D38               	btfss	_flags^(0+384),2
 13309  1B1C  2B35               	goto	l7353
 13310  1B1D                     l7343:	
 13311                           
 13312                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 13313  1B1D  30FF               	movlw	255
 13314  1B1E  0020               	movlb	0	; select bank0
 13315  1B1F  07CD               	addwf	dtoa@i,f
 13316  1B20  30FF               	movlw	255
 13317  1B21  3DCE               	addwfc	dtoa@i+1,f
 13318                           
 13319                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 13320  1B22  0843               	movf	dtoa@s,w
 13321  1B23  0444               	iorwf	dtoa@s+1,w
 13322  1B24  1D03               	btfss	3,2
 13323  1B25  2B28               	goto	l7349
 13324  1B26  302B               	movlw	43
 13325  1B27  2B29               	goto	L11
 13326  1B28                     l7349:	
 13327  1B28  302D               	movlw	45
 13328  1B29                     L11:	
 13329  1B29  00BD               	movwf	_dtoa$1204
 13330  1B2A  3000               	movlw	0
 13331  1B2B  00BE               	movwf	_dtoa$1204+1
 13332  1B2C  083D               	movf	_dtoa$1204,w
 13333  1B2D  00BA               	movwf	??_dtoa
 13334  1B2E  084D               	movf	dtoa@i,w
 13335  1B2F  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 13336  1B30  0086               	movwf	6
 13337  1B31  3002               	movlw	2	; select bank5/6
 13338  1B32  0087               	movwf	7
 13339  1B33  083A               	movf	??_dtoa,w
 13340  1B34  0081               	movwf	1
 13341  1B35                     l7353:	
 13342                           
 13343                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 13344  1B35  0020               	movlb	0	; select bank0
 13345  1B36  0831               	movf	dtoa@fp+1,w
 13346  1B37  00A7               	movwf	pad@fp+1
 13347  1B38  0830               	movf	dtoa@fp,w
 13348  1B39  00A6               	movwf	pad@fp
 13349  1B3A  084D               	movf	dtoa@i,w
 13350  1B3B  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 13351  1B3C  00BA               	movwf	??_dtoa
 13352  1B3D  083A               	movf	??_dtoa,w
 13353  1B3E  00A8               	movwf	pad@buf
 13354  1B3F  0842               	movf	dtoa@w+1,w
 13355  1B40  00AA               	movwf	pad@p+1
 13356  1B41  0841               	movf	dtoa@w,w
 13357  1B42  00A9               	movwf	pad@p
 13358  1B43  31B3  2343         	fcall	_pad
 13359  1B45  0020               	movlb	0	; select bank0
 13360  1B46  0827               	movf	?_pad+1,w
 13361  1B47  00B1               	movwf	?_dtoa+1
 13362  1B48  0826               	movf	?_pad,w
 13363  1B49  00B0               	movwf	?_dtoa
 13364  1B4A  0008               	return
 13365  1B4B                     __end_of_dtoa:	
 13366                           
 13367                           	psect	text32
 13368  3EED                     __ptext32:	
 13369 ;; *************** function _abs *****************
 13370 ;; Defined at:
 13371 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 13372 ;; Parameters:    Size  Location     Type
 13373 ;;  a               2    4[COMMON] int 
 13374 ;; Auto vars:     Size  Location     Type
 13375 ;;		None
 13376 ;; Return value:  Size  Location     Type
 13377 ;;                  2    4[COMMON] int 
 13378 ;; Registers used:
 13379 ;;		wreg, status,2, status,0
 13380 ;; Tracked objects:
 13381 ;;		On entry : 0/0
 13382 ;;		On exit  : 0/0
 13383 ;;		Unchanged: 0/0
 13384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13385 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13387 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13388 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13389 ;;Total ram usage:        4 bytes
 13390 ;; Hardware stack levels used:    1
 13391 ;; Hardware stack levels required when called:    1
 13392 ;; This function calls:
 13393 ;;		Nothing
 13394 ;; This function is called by:
 13395 ;;		_dtoa
 13396 ;; This function uses a non-reentrant model
 13397 ;;
 13398                           
 13399                           
 13400                           ;psect for function _abs
 13401  3EED                     _abs:	
 13402                           
 13403                           ;incstack = 0
 13404                           ; Regs used in _abs: [wreg+status,2+status,0]
 13405  3EED  0875               	movf	abs@a+1,w
 13406  3EEE  3A80               	xorlw	128
 13407  3EEF  00F6               	movwf	??_abs
 13408  3EF0  3080               	movlw	128
 13409  3EF1  0276               	subwf	??_abs,w
 13410  3EF2  1D03               	skipz
 13411  3EF3  2EF6               	goto	u5465
 13412  3EF4  3001               	movlw	1
 13413  3EF5  0274               	subwf	abs@a,w
 13414  3EF6                     u5465:	
 13415  3EF6  1803               	skipnc
 13416  3EF7  0008               	return
 13417  3EF8  0974               	comf	abs@a,w
 13418  3EF9  00F6               	movwf	??_abs
 13419  3EFA  0975               	comf	abs@a+1,w
 13420  3EFB  00F7               	movwf	??_abs+1
 13421  3EFC  0AF6               	incf	??_abs,f
 13422  3EFD  1903               	skipnz
 13423  3EFE  0AF7               	incf	??_abs+1,f
 13424  3EFF  0876               	movf	??_abs,w
 13425  3F00  00F4               	movwf	?_abs
 13426  3F01  0877               	movf	??_abs+1,w
 13427  3F02  00F5               	movwf	?_abs+1
 13428  3F03  0008               	return
 13429  3F04                     __end_of_abs:	
 13430                           
 13431                           	psect	text33
 13432  2054                     __ptext33:	
 13433 ;; *************** function ___aomod *****************
 13434 ;; Defined at:
 13435 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 13436 ;; Parameters:    Size  Location     Type
 13437 ;;  divisor         8    0[BANK0 ] long long 
 13438 ;;  dividend        8    8[BANK0 ] long long 
 13439 ;; Auto vars:     Size  Location     Type
 13440 ;;  sign            1    3[COMMON] unsigned char 
 13441 ;;  counter         1    2[COMMON] unsigned char 
 13442 ;; Return value:  Size  Location     Type
 13443 ;;                  8    0[BANK0 ] long long 
 13444 ;; Registers used:
 13445 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13446 ;; Tracked objects:
 13447 ;;		On entry : 0/0
 13448 ;;		On exit  : 0/0
 13449 ;;		Unchanged: 0/0
 13450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13451 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13452 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13453 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13454 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13455 ;;Total ram usage:       19 bytes
 13456 ;; Hardware stack levels used:    1
 13457 ;; Hardware stack levels required when called:    1
 13458 ;; This function calls:
 13459 ;;		Nothing
 13460 ;; This function is called by:
 13461 ;;		_dtoa
 13462 ;; This function uses a non-reentrant model
 13463 ;;
 13464                           
 13465                           
 13466                           ;psect for function ___aomod
 13467  2054                     ___aomod:	
 13468                           
 13469                           ;incstack = 0
 13470                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
 13471  2054  01F3               	clrf	___aomod@sign
 13472  2055  3028               	movlw	low ___aomod@dividend
 13473  2056  0086               	movwf	6
 13474  2057  3000               	movlw	high ___aomod@dividend
 13475  2058  0087               	movwf	7
 13476  2059  3F47               	moviw [7]fsr1
 13477  205A  00F1               	movwf	??___aomod
 13478  205B  1FF1               	btfss	??___aomod,7
 13479  205C  287E               	goto	l4871
 13480  205D  0020               	movlb	0	; select bank0
 13481  205E  09A8               	comf	___aomod@dividend,f
 13482  205F  09A9               	comf	___aomod@dividend+1,f
 13483  2060  09AA               	comf	___aomod@dividend+2,f
 13484  2061  09AB               	comf	___aomod@dividend+3,f
 13485  2062  09AC               	comf	___aomod@dividend+4,f
 13486  2063  09AD               	comf	___aomod@dividend+5,f
 13487  2064  09AE               	comf	___aomod@dividend+6,f
 13488  2065  09AF               	comf	___aomod@dividend+7,f
 13489  2066  0AA8               	incf	___aomod@dividend,f
 13490  2067  1D03               	skipz
 13491  2068  287C               	goto	u593lld
 13492  2069  0AA9               	incf	___aomod@dividend+1,f
 13493  206A  1D03               	skipz
 13494  206B  287C               	goto	u593lld
 13495  206C  0AAA               	incf	___aomod@dividend+2,f
 13496  206D  1D03               	skipz
 13497  206E  287C               	goto	u593lld
 13498  206F  0AAB               	incf	___aomod@dividend+3,f
 13499  2070  1D03               	skipz
 13500  2071  287C               	goto	u593lld
 13501  2072  0AAC               	incf	___aomod@dividend+4,f
 13502  2073  1D03               	skipz
 13503  2074  287C               	goto	u593lld
 13504  2075  0AAD               	incf	___aomod@dividend+5,f
 13505  2076  1D03               	skipz
 13506  2077  287C               	goto	u593lld
 13507  2078  0AAE               	incf	___aomod@dividend+6,f
 13508  2079  1D03               	skipz
 13509  207A  287C               	goto	u593lld
 13510  207B  0AAF               	incf	___aomod@dividend+7,f
 13511  207C                     u593lld:	
 13512  207C  01F3               	clrf	___aomod@sign
 13513  207D  0AF3               	incf	___aomod@sign,f
 13514  207E                     l4871:	
 13515  207E  3020               	movlw	low ___aomod@divisor
 13516  207F  0086               	movwf	6
 13517  2080  3000               	movlw	high ___aomod@divisor
 13518  2081  0087               	movwf	7
 13519  2082  3F47               	moviw [7]fsr1
 13520  2083  00F1               	movwf	??___aomod
 13521  2084  1FF1               	btfss	??___aomod,7
 13522  2085  28A5               	goto	l4875
 13523  2086  0020               	movlb	0	; select bank0
 13524  2087  09A0               	comf	___aomod@divisor,f
 13525  2088  09A1               	comf	___aomod@divisor+1,f
 13526  2089  09A2               	comf	___aomod@divisor+2,f
 13527  208A  09A3               	comf	___aomod@divisor+3,f
 13528  208B  09A4               	comf	___aomod@divisor+4,f
 13529  208C  09A5               	comf	___aomod@divisor+5,f
 13530  208D  09A6               	comf	___aomod@divisor+6,f
 13531  208E  09A7               	comf	___aomod@divisor+7,f
 13532  208F  0AA0               	incf	___aomod@divisor,f
 13533  2090  1D03               	skipz
 13534  2091  28A5               	goto	l4875
 13535  2092  0AA1               	incf	___aomod@divisor+1,f
 13536  2093  1D03               	skipz
 13537  2094  28A5               	goto	l4875
 13538  2095  0AA2               	incf	___aomod@divisor+2,f
 13539  2096  1D03               	skipz
 13540  2097  28A5               	goto	l4875
 13541  2098  0AA3               	incf	___aomod@divisor+3,f
 13542  2099  1D03               	skipz
 13543  209A  28A5               	goto	l4875
 13544  209B  0AA4               	incf	___aomod@divisor+4,f
 13545  209C  1D03               	skipz
 13546  209D  28A5               	goto	l4875
 13547  209E  0AA5               	incf	___aomod@divisor+5,f
 13548  209F  1D03               	skipz
 13549  20A0  28A5               	goto	l4875
 13550  20A1  0AA6               	incf	___aomod@divisor+6,f
 13551  20A2  1D03               	skipz
 13552  20A3  28A5               	goto	l4875
 13553  20A4  0AA7               	incf	___aomod@divisor+7,f
 13554  20A5                     l4875:	
 13555  20A5  0020               	movlb	0	; select bank0
 13556  20A6  0820               	movf	___aomod@divisor,w
 13557  20A7  0421               	iorwf	___aomod@divisor+1,w
 13558  20A8  0422               	iorwf	___aomod@divisor+2,w
 13559  20A9  0423               	iorwf	___aomod@divisor+3,w
 13560  20AA  0424               	iorwf	___aomod@divisor+4,w
 13561  20AB  0425               	iorwf	___aomod@divisor+5,w
 13562  20AC  0426               	iorwf	___aomod@divisor+6,w
 13563  20AD  0427               	iorwf	___aomod@divisor+7,w
 13564  20AE  1903               	skipnz
 13565  20AF  28FD               	goto	l4891
 13566  20B0  01F2               	clrf	___aomod@counter
 13567  20B1  0AF2               	incf	___aomod@counter,f
 13568  20B2                     l4883:	
 13569  20B2  1BA7               	btfsc	___aomod@divisor+7,7
 13570  20B3  28C1               	goto	l4885
 13571  20B4  35A0               	lslf	___aomod@divisor,f
 13572  20B5  0DA1               	rlf	___aomod@divisor+1,f
 13573  20B6  0DA2               	rlf	___aomod@divisor+2,f
 13574  20B7  0DA3               	rlf	___aomod@divisor+3,f
 13575  20B8  0DA4               	rlf	___aomod@divisor+4,f
 13576  20B9  0DA5               	rlf	___aomod@divisor+5,f
 13577  20BA  0DA6               	rlf	___aomod@divisor+6,f
 13578  20BB  0DA7               	rlf	___aomod@divisor+7,f
 13579  20BC  3001               	movlw	1
 13580  20BD  00F1               	movwf	??___aomod
 13581  20BE  0871               	movf	??___aomod,w
 13582  20BF  07F2               	addwf	___aomod@counter,f
 13583  20C0  28B2               	goto	l4883
 13584  20C1                     l4885:	
 13585  20C1  0827               	movf	___aomod@divisor+7,w
 13586  20C2  022F               	subwf	___aomod@dividend+7,w
 13587  20C3  1D03               	skipz
 13588  20C4  28DF               	goto	u5985
 13589  20C5  0826               	movf	___aomod@divisor+6,w
 13590  20C6  022E               	subwf	___aomod@dividend+6,w
 13591  20C7  1D03               	skipz
 13592  20C8  28DF               	goto	u5985
 13593  20C9  0825               	movf	___aomod@divisor+5,w
 13594  20CA  022D               	subwf	___aomod@dividend+5,w
 13595  20CB  1D03               	skipz
 13596  20CC  28DF               	goto	u5985
 13597  20CD  0824               	movf	___aomod@divisor+4,w
 13598  20CE  022C               	subwf	___aomod@dividend+4,w
 13599  20CF  1D03               	skipz
 13600  20D0  28DF               	goto	u5985
 13601  20D1  0823               	movf	___aomod@divisor+3,w
 13602  20D2  022B               	subwf	___aomod@dividend+3,w
 13603  20D3  1D03               	skipz
 13604  20D4  28DF               	goto	u5985
 13605  20D5  0822               	movf	___aomod@divisor+2,w
 13606  20D6  022A               	subwf	___aomod@dividend+2,w
 13607  20D7  1D03               	skipz
 13608  20D8  28DF               	goto	u5985
 13609  20D9  0821               	movf	___aomod@divisor+1,w
 13610  20DA  0229               	subwf	___aomod@dividend+1,w
 13611  20DB  1D03               	skipz
 13612  20DC  28DF               	goto	u5985
 13613  20DD  0820               	movf	___aomod@divisor,w
 13614  20DE  0228               	subwf	___aomod@dividend,w
 13615  20DF                     u5985:	
 13616  20DF  1C03               	skipc
 13617  20E0  28F1               	goto	l4889
 13618  20E1  0820               	movf	___aomod@divisor,w
 13619  20E2  02A8               	subwf	___aomod@dividend,f
 13620  20E3  0821               	movf	___aomod@divisor+1,w
 13621  20E4  3BA9               	subwfb	___aomod@dividend+1,f
 13622  20E5  0822               	movf	___aomod@divisor+2,w
 13623  20E6  3BAA               	subwfb	___aomod@dividend+2,f
 13624  20E7  0823               	movf	___aomod@divisor+3,w
 13625  20E8  3BAB               	subwfb	___aomod@dividend+3,f
 13626  20E9  0824               	movf	___aomod@divisor+4,w
 13627  20EA  3BAC               	subwfb	___aomod@dividend+4,f
 13628  20EB  0825               	movf	___aomod@divisor+5,w
 13629  20EC  3BAD               	subwfb	___aomod@dividend+5,f
 13630  20ED  0826               	movf	___aomod@divisor+6,w
 13631  20EE  3BAE               	subwfb	___aomod@dividend+6,f
 13632  20EF  0827               	movf	___aomod@divisor+7,w
 13633  20F0  3BAF               	subwfb	___aomod@dividend+7,f
 13634  20F1                     l4889:	
 13635  20F1  36A7               	lsrf	___aomod@divisor+7,f
 13636  20F2  0CA6               	rrf	___aomod@divisor+6,f
 13637  20F3  0CA5               	rrf	___aomod@divisor+5,f
 13638  20F4  0CA4               	rrf	___aomod@divisor+4,f
 13639  20F5  0CA3               	rrf	___aomod@divisor+3,f
 13640  20F6  0CA2               	rrf	___aomod@divisor+2,f
 13641  20F7  0CA1               	rrf	___aomod@divisor+1,f
 13642  20F8  0CA0               	rrf	___aomod@divisor,f
 13643  20F9  3001               	movlw	1
 13644  20FA  02F2               	subwf	___aomod@counter,f
 13645  20FB  1D03               	btfss	3,2
 13646  20FC  28C1               	goto	l4885
 13647  20FD                     l4891:	
 13648  20FD  0873               	movf	___aomod@sign,w
 13649  20FE  1903               	btfsc	3,2
 13650  20FF  291E               	goto	l1072
 13651  2100  09A8               	comf	___aomod@dividend,f
 13652  2101  09A9               	comf	___aomod@dividend+1,f
 13653  2102  09AA               	comf	___aomod@dividend+2,f
 13654  2103  09AB               	comf	___aomod@dividend+3,f
 13655  2104  09AC               	comf	___aomod@dividend+4,f
 13656  2105  09AD               	comf	___aomod@dividend+5,f
 13657  2106  09AE               	comf	___aomod@dividend+6,f
 13658  2107  09AF               	comf	___aomod@dividend+7,f
 13659  2108  0AA8               	incf	___aomod@dividend,f
 13660  2109  1D03               	skipz
 13661  210A  291E               	goto	l1072
 13662  210B  0AA9               	incf	___aomod@dividend+1,f
 13663  210C  1D03               	skipz
 13664  210D  291E               	goto	l1072
 13665  210E  0AAA               	incf	___aomod@dividend+2,f
 13666  210F  1D03               	skipz
 13667  2110  291E               	goto	l1072
 13668  2111  0AAB               	incf	___aomod@dividend+3,f
 13669  2112  1D03               	skipz
 13670  2113  291E               	goto	l1072
 13671  2114  0AAC               	incf	___aomod@dividend+4,f
 13672  2115  1D03               	skipz
 13673  2116  291E               	goto	l1072
 13674  2117  0AAD               	incf	___aomod@dividend+5,f
 13675  2118  1D03               	skipz
 13676  2119  291E               	goto	l1072
 13677  211A  0AAE               	incf	___aomod@dividend+6,f
 13678  211B  1D03               	skipz
 13679  211C  291E               	goto	l1072
 13680  211D  0AAF               	incf	___aomod@dividend+7,f
 13681  211E                     l1072:	
 13682  211E  0020               	movlb	0	; select bank0
 13683  211F  0828               	movf	___aomod@dividend,w
 13684  2120  00A0               	movwf	?___aomod
 13685  2121  0829               	movf	___aomod@dividend+1,w
 13686  2122  00A1               	movwf	?___aomod+1
 13687  2123  082A               	movf	___aomod@dividend+2,w
 13688  2124  00A2               	movwf	?___aomod+2
 13689  2125  082B               	movf	___aomod@dividend+3,w
 13690  2126  00A3               	movwf	?___aomod+3
 13691  2127  082C               	movf	___aomod@dividend+4,w
 13692  2128  00A4               	movwf	?___aomod+4
 13693  2129  082D               	movf	___aomod@dividend+5,w
 13694  212A  00A5               	movwf	?___aomod+5
 13695  212B  082E               	movf	___aomod@dividend+6,w
 13696  212C  00A6               	movwf	?___aomod+6
 13697  212D  082F               	movf	___aomod@dividend+7,w
 13698  212E  00A7               	movwf	?___aomod+7
 13699  212F  0008               	return
 13700  2130                     __end_of___aomod:	
 13701                           
 13702                           	psect	text34
 13703  23EC                     __ptext34:	
 13704 ;; *************** function ___aodiv *****************
 13705 ;; Defined at:
 13706 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 13707 ;; Parameters:    Size  Location     Type
 13708 ;;  divisor         8    0[BANK0 ] long long 
 13709 ;;  dividend        8    8[BANK0 ] long long 
 13710 ;; Auto vars:     Size  Location     Type
 13711 ;;  quotient        8    4[COMMON] long long 
 13712 ;;  sign            1    3[COMMON] unsigned char 
 13713 ;;  counter         1    2[COMMON] unsigned char 
 13714 ;; Return value:  Size  Location     Type
 13715 ;;                  8    0[BANK0 ] long long 
 13716 ;; Registers used:
 13717 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13718 ;; Tracked objects:
 13719 ;;		On entry : 0/0
 13720 ;;		On exit  : 0/0
 13721 ;;		Unchanged: 0/0
 13722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13723 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13724 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13725 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13726 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13727 ;;Total ram usage:       27 bytes
 13728 ;; Hardware stack levels used:    1
 13729 ;; Hardware stack levels required when called:    1
 13730 ;; This function calls:
 13731 ;;		Nothing
 13732 ;; This function is called by:
 13733 ;;		_dtoa
 13734 ;; This function uses a non-reentrant model
 13735 ;;
 13736                           
 13737                           
 13738                           ;psect for function ___aodiv
 13739  23EC                     ___aodiv:	
 13740                           
 13741                           ;incstack = 0
 13742                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 13743  23EC  01F3               	clrf	___aodiv@sign
 13744  23ED  3020               	movlw	low ___aodiv@divisor
 13745  23EE  0086               	movwf	6
 13746  23EF  3000               	movlw	high ___aodiv@divisor
 13747  23F0  0087               	movwf	7
 13748  23F1  3F47               	moviw [7]fsr1
 13749  23F2  00F1               	movwf	??___aodiv
 13750  23F3  1FF1               	btfss	??___aodiv,7
 13751  23F4  2C16               	goto	l4833
 13752  23F5  0020               	movlb	0	; select bank0
 13753  23F6  09A0               	comf	___aodiv@divisor,f
 13754  23F7  09A1               	comf	___aodiv@divisor+1,f
 13755  23F8  09A2               	comf	___aodiv@divisor+2,f
 13756  23F9  09A3               	comf	___aodiv@divisor+3,f
 13757  23FA  09A4               	comf	___aodiv@divisor+4,f
 13758  23FB  09A5               	comf	___aodiv@divisor+5,f
 13759  23FC  09A6               	comf	___aodiv@divisor+6,f
 13760  23FD  09A7               	comf	___aodiv@divisor+7,f
 13761  23FE  0AA0               	incf	___aodiv@divisor,f
 13762  23FF  1D03               	skipz
 13763  2400  2C14               	goto	u582lld
 13764  2401  0AA1               	incf	___aodiv@divisor+1,f
 13765  2402  1D03               	skipz
 13766  2403  2C14               	goto	u582lld
 13767  2404  0AA2               	incf	___aodiv@divisor+2,f
 13768  2405  1D03               	skipz
 13769  2406  2C14               	goto	u582lld
 13770  2407  0AA3               	incf	___aodiv@divisor+3,f
 13771  2408  1D03               	skipz
 13772  2409  2C14               	goto	u582lld
 13773  240A  0AA4               	incf	___aodiv@divisor+4,f
 13774  240B  1D03               	skipz
 13775  240C  2C14               	goto	u582lld
 13776  240D  0AA5               	incf	___aodiv@divisor+5,f
 13777  240E  1D03               	skipz
 13778  240F  2C14               	goto	u582lld
 13779  2410  0AA6               	incf	___aodiv@divisor+6,f
 13780  2411  1D03               	skipz
 13781  2412  2C14               	goto	u582lld
 13782  2413  0AA7               	incf	___aodiv@divisor+7,f
 13783  2414                     u582lld:	
 13784  2414  01F3               	clrf	___aodiv@sign
 13785  2415  0AF3               	incf	___aodiv@sign,f
 13786  2416                     l4833:	
 13787  2416  3028               	movlw	low ___aodiv@dividend
 13788  2417  0086               	movwf	6
 13789  2418  3000               	movlw	high ___aodiv@dividend
 13790  2419  0087               	movwf	7
 13791  241A  3F47               	moviw [7]fsr1
 13792  241B  00F1               	movwf	??___aodiv
 13793  241C  1FF1               	btfss	??___aodiv,7
 13794  241D  2C41               	goto	l4839
 13795  241E  0020               	movlb	0	; select bank0
 13796  241F  09A8               	comf	___aodiv@dividend,f
 13797  2420  09A9               	comf	___aodiv@dividend+1,f
 13798  2421  09AA               	comf	___aodiv@dividend+2,f
 13799  2422  09AB               	comf	___aodiv@dividend+3,f
 13800  2423  09AC               	comf	___aodiv@dividend+4,f
 13801  2424  09AD               	comf	___aodiv@dividend+5,f
 13802  2425  09AE               	comf	___aodiv@dividend+6,f
 13803  2426  09AF               	comf	___aodiv@dividend+7,f
 13804  2427  0AA8               	incf	___aodiv@dividend,f
 13805  2428  1D03               	skipz
 13806  2429  2C3D               	goto	l4837
 13807  242A  0AA9               	incf	___aodiv@dividend+1,f
 13808  242B  1D03               	skipz
 13809  242C  2C3D               	goto	l4837
 13810  242D  0AAA               	incf	___aodiv@dividend+2,f
 13811  242E  1D03               	skipz
 13812  242F  2C3D               	goto	l4837
 13813  2430  0AAB               	incf	___aodiv@dividend+3,f
 13814  2431  1D03               	skipz
 13815  2432  2C3D               	goto	l4837
 13816  2433  0AAC               	incf	___aodiv@dividend+4,f
 13817  2434  1D03               	skipz
 13818  2435  2C3D               	goto	l4837
 13819  2436  0AAD               	incf	___aodiv@dividend+5,f
 13820  2437  1D03               	skipz
 13821  2438  2C3D               	goto	l4837
 13822  2439  0AAE               	incf	___aodiv@dividend+6,f
 13823  243A  1D03               	skipz
 13824  243B  2C3D               	goto	l4837
 13825  243C  0AAF               	incf	___aodiv@dividend+7,f
 13826  243D                     l4837:	
 13827  243D  3001               	movlw	1
 13828  243E  00F1               	movwf	??___aodiv
 13829  243F  0871               	movf	??___aodiv,w
 13830  2440  06F3               	xorwf	___aodiv@sign,f
 13831  2441                     l4839:	
 13832  2441  3074               	movlw	low ___aodiv@quotient
 13833  2442  0086               	movwf	6
 13834  2443  3000               	movlw	high ___aodiv@quotient
 13835  2444  0087               	movwf	7
 13836  2445  3008               	movlw	8
 13837  2446  00F1               	movwf	??___aodiv
 13838  2447  3000               	movlw	0
 13839  2448                     u5850:	
 13840  2448  001E               	movwi fsr1++
 13841  2449  0BF1               	decfsz	??___aodiv,f
 13842  244A  2C48               	goto	u5850
 13843  244B  0020               	movlb	0	; select bank0
 13844  244C  0820               	movf	___aodiv@divisor,w
 13845  244D  0421               	iorwf	___aodiv@divisor+1,w
 13846  244E  0422               	iorwf	___aodiv@divisor+2,w
 13847  244F  0423               	iorwf	___aodiv@divisor+3,w
 13848  2450  0424               	iorwf	___aodiv@divisor+4,w
 13849  2451  0425               	iorwf	___aodiv@divisor+5,w
 13850  2452  0426               	iorwf	___aodiv@divisor+6,w
 13851  2453  0427               	iorwf	___aodiv@divisor+7,w
 13852  2454  1903               	skipnz
 13853  2455  2CAC               	goto	l4861
 13854  2456  01F2               	clrf	___aodiv@counter
 13855  2457  0AF2               	incf	___aodiv@counter,f
 13856  2458                     l4849:	
 13857  2458  1BA7               	btfsc	___aodiv@divisor+7,7
 13858  2459  2C67               	goto	l4851
 13859  245A  35A0               	lslf	___aodiv@divisor,f
 13860  245B  0DA1               	rlf	___aodiv@divisor+1,f
 13861  245C  0DA2               	rlf	___aodiv@divisor+2,f
 13862  245D  0DA3               	rlf	___aodiv@divisor+3,f
 13863  245E  0DA4               	rlf	___aodiv@divisor+4,f
 13864  245F  0DA5               	rlf	___aodiv@divisor+5,f
 13865  2460  0DA6               	rlf	___aodiv@divisor+6,f
 13866  2461  0DA7               	rlf	___aodiv@divisor+7,f
 13867  2462  3001               	movlw	1
 13868  2463  00F1               	movwf	??___aodiv
 13869  2464  0871               	movf	??___aodiv,w
 13870  2465  07F2               	addwf	___aodiv@counter,f
 13871  2466  2C58               	goto	l4849
 13872  2467                     l4851:	
 13873  2467  35F4               	lslf	___aodiv@quotient,f
 13874  2468  0DF5               	rlf	___aodiv@quotient+1,f
 13875  2469  0DF6               	rlf	___aodiv@quotient+2,f
 13876  246A  0DF7               	rlf	___aodiv@quotient+3,f
 13877  246B  0DF8               	rlf	___aodiv@quotient+4,f
 13878  246C  0DF9               	rlf	___aodiv@quotient+5,f
 13879  246D  0DFA               	rlf	___aodiv@quotient+6,f
 13880  246E  0DFB               	rlf	___aodiv@quotient+7,f
 13881  246F  0827               	movf	___aodiv@divisor+7,w
 13882  2470  022F               	subwf	___aodiv@dividend+7,w
 13883  2471  1D03               	skipz
 13884  2472  2C8D               	goto	u5885
 13885  2473  0826               	movf	___aodiv@divisor+6,w
 13886  2474  022E               	subwf	___aodiv@dividend+6,w
 13887  2475  1D03               	skipz
 13888  2476  2C8D               	goto	u5885
 13889  2477  0825               	movf	___aodiv@divisor+5,w
 13890  2478  022D               	subwf	___aodiv@dividend+5,w
 13891  2479  1D03               	skipz
 13892  247A  2C8D               	goto	u5885
 13893  247B  0824               	movf	___aodiv@divisor+4,w
 13894  247C  022C               	subwf	___aodiv@dividend+4,w
 13895  247D  1D03               	skipz
 13896  247E  2C8D               	goto	u5885
 13897  247F  0823               	movf	___aodiv@divisor+3,w
 13898  2480  022B               	subwf	___aodiv@dividend+3,w
 13899  2481  1D03               	skipz
 13900  2482  2C8D               	goto	u5885
 13901  2483  0822               	movf	___aodiv@divisor+2,w
 13902  2484  022A               	subwf	___aodiv@dividend+2,w
 13903  2485  1D03               	skipz
 13904  2486  2C8D               	goto	u5885
 13905  2487  0821               	movf	___aodiv@divisor+1,w
 13906  2488  0229               	subwf	___aodiv@dividend+1,w
 13907  2489  1D03               	skipz
 13908  248A  2C8D               	goto	u5885
 13909  248B  0820               	movf	___aodiv@divisor,w
 13910  248C  0228               	subwf	___aodiv@dividend,w
 13911  248D                     u5885:	
 13912  248D  1C03               	skipc
 13913  248E  2CA0               	goto	l4859
 13914  248F  0820               	movf	___aodiv@divisor,w
 13915  2490  02A8               	subwf	___aodiv@dividend,f
 13916  2491  0821               	movf	___aodiv@divisor+1,w
 13917  2492  3BA9               	subwfb	___aodiv@dividend+1,f
 13918  2493  0822               	movf	___aodiv@divisor+2,w
 13919  2494  3BAA               	subwfb	___aodiv@dividend+2,f
 13920  2495  0823               	movf	___aodiv@divisor+3,w
 13921  2496  3BAB               	subwfb	___aodiv@dividend+3,f
 13922  2497  0824               	movf	___aodiv@divisor+4,w
 13923  2498  3BAC               	subwfb	___aodiv@dividend+4,f
 13924  2499  0825               	movf	___aodiv@divisor+5,w
 13925  249A  3BAD               	subwfb	___aodiv@dividend+5,f
 13926  249B  0826               	movf	___aodiv@divisor+6,w
 13927  249C  3BAE               	subwfb	___aodiv@dividend+6,f
 13928  249D  0827               	movf	___aodiv@divisor+7,w
 13929  249E  3BAF               	subwfb	___aodiv@dividend+7,f
 13930  249F  1474               	bsf	___aodiv@quotient,0
 13931  24A0                     l4859:	
 13932  24A0  36A7               	lsrf	___aodiv@divisor+7,f
 13933  24A1  0CA6               	rrf	___aodiv@divisor+6,f
 13934  24A2  0CA5               	rrf	___aodiv@divisor+5,f
 13935  24A3  0CA4               	rrf	___aodiv@divisor+4,f
 13936  24A4  0CA3               	rrf	___aodiv@divisor+3,f
 13937  24A5  0CA2               	rrf	___aodiv@divisor+2,f
 13938  24A6  0CA1               	rrf	___aodiv@divisor+1,f
 13939  24A7  0CA0               	rrf	___aodiv@divisor,f
 13940  24A8  3001               	movlw	1
 13941  24A9  02F2               	subwf	___aodiv@counter,f
 13942  24AA  1D03               	btfss	3,2
 13943  24AB  2C67               	goto	l4851
 13944  24AC                     l4861:	
 13945  24AC  0873               	movf	___aodiv@sign,w
 13946  24AD  1903               	btfsc	3,2
 13947  24AE  2CCD               	goto	l1059
 13948  24AF  09F4               	comf	___aodiv@quotient,f
 13949  24B0  09F5               	comf	___aodiv@quotient+1,f
 13950  24B1  09F6               	comf	___aodiv@quotient+2,f
 13951  24B2  09F7               	comf	___aodiv@quotient+3,f
 13952  24B3  09F8               	comf	___aodiv@quotient+4,f
 13953  24B4  09F9               	comf	___aodiv@quotient+5,f
 13954  24B5  09FA               	comf	___aodiv@quotient+6,f
 13955  24B6  09FB               	comf	___aodiv@quotient+7,f
 13956  24B7  0AF4               	incf	___aodiv@quotient,f
 13957  24B8  1D03               	skipz
 13958  24B9  2CCD               	goto	l1059
 13959  24BA  0AF5               	incf	___aodiv@quotient+1,f
 13960  24BB  1D03               	skipz
 13961  24BC  2CCD               	goto	l1059
 13962  24BD  0AF6               	incf	___aodiv@quotient+2,f
 13963  24BE  1D03               	skipz
 13964  24BF  2CCD               	goto	l1059
 13965  24C0  0AF7               	incf	___aodiv@quotient+3,f
 13966  24C1  1D03               	skipz
 13967  24C2  2CCD               	goto	l1059
 13968  24C3  0AF8               	incf	___aodiv@quotient+4,f
 13969  24C4  1D03               	skipz
 13970  24C5  2CCD               	goto	l1059
 13971  24C6  0AF9               	incf	___aodiv@quotient+5,f
 13972  24C7  1D03               	skipz
 13973  24C8  2CCD               	goto	l1059
 13974  24C9  0AFA               	incf	___aodiv@quotient+6,f
 13975  24CA  1D03               	skipz
 13976  24CB  2CCD               	goto	l1059
 13977  24CC  0AFB               	incf	___aodiv@quotient+7,f
 13978  24CD                     l1059:	
 13979  24CD  0874               	movf	___aodiv@quotient,w
 13980  24CE  0020               	movlb	0	; select bank0
 13981  24CF  00A0               	movwf	?___aodiv
 13982  24D0  0875               	movf	___aodiv@quotient+1,w
 13983  24D1  00A1               	movwf	?___aodiv+1
 13984  24D2  0876               	movf	___aodiv@quotient+2,w
 13985  24D3  00A2               	movwf	?___aodiv+2
 13986  24D4  0877               	movf	___aodiv@quotient+3,w
 13987  24D5  00A3               	movwf	?___aodiv+3
 13988  24D6  0878               	movf	___aodiv@quotient+4,w
 13989  24D7  00A4               	movwf	?___aodiv+4
 13990  24D8  0879               	movf	___aodiv@quotient+5,w
 13991  24D9  00A5               	movwf	?___aodiv+5
 13992  24DA  087A               	movf	___aodiv@quotient+6,w
 13993  24DB  00A6               	movwf	?___aodiv+6
 13994  24DC  087B               	movf	___aodiv@quotient+7,w
 13995  24DD  00A7               	movwf	?___aodiv+7
 13996  24DE  0008               	return
 13997  24DF                     __end_of___aodiv:	
 13998                           
 13999                           	psect	text35
 14000  30B6                     __ptext35:	
 14001 ;; *************** function _ctoa *****************
 14002 ;; Defined at:
 14003 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 14004 ;; Parameters:    Size  Location     Type
 14005 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
 14006 ;;		 -> vsnprintf@f(6), 
 14007 ;;  c               1   18[BANK0 ] unsigned char 
 14008 ;; Auto vars:     Size  Location     Type
 14009 ;;  w               2   20[BANK0 ] int 
 14010 ;;  l               2    0        int 
 14011 ;; Return value:  Size  Location     Type
 14012 ;;                  2   16[BANK0 ] int 
 14013 ;; Registers used:
 14014 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14015 ;; Tracked objects:
 14016 ;;		On entry : 0/0
 14017 ;;		On exit  : 0/0
 14018 ;;		Unchanged: 0/0
 14019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14020 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14021 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14022 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14023 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14024 ;;Total ram usage:        6 bytes
 14025 ;; Hardware stack levels used:    1
 14026 ;; Hardware stack levels required when called:    5
 14027 ;; This function calls:
 14028 ;;		_pad
 14029 ;; This function is called by:
 14030 ;;		_vfpfcnvrt
 14031 ;; This function uses a non-reentrant model
 14032 ;;
 14033                           
 14034                           
 14035                           ;psect for function _ctoa
 14036  30B6                     _ctoa:	
 14037                           
 14038                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 14039                           
 14040                           ;incstack = 0
 14041                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14042  30B6  0023               	movlb	3	; select bank3
 14043  30B7  0834               	movf	_width^(0+384),w
 14044  30B8  0435               	iorwf	(_width+1)^(0+384),w
 14045  30B9  1D03               	btfss	3,2
 14046  30BA  28C3               	goto	l7289
 14047  30BB  0835               	movf	(_width+1)^(0+384),w
 14048  30BC  0020               	movlb	0	; select bank0
 14049  30BD  00B5               	movwf	ctoa@w+1
 14050  30BE  0023               	movlb	3	; select bank3
 14051  30BF  0834               	movf	_width^(0+384),w
 14052  30C0  0020               	movlb	0	; select bank0
 14053  30C1  00B4               	movwf	ctoa@w
 14054  30C2  28CC               	goto	l7291
 14055  30C3                     l7289:	
 14056  30C3  0834               	movf	_width^(0+384),w
 14057  30C4  3EFF               	addlw	255
 14058  30C5  0020               	movlb	0	; select bank0
 14059  30C6  00B4               	movwf	ctoa@w
 14060  30C7  30FF               	movlw	255
 14061  30C8  0023               	movlb	3	; select bank3
 14062  30C9  3D35               	addwfc	(_width+1)^(0+384),w
 14063  30CA  0020               	movlb	0	; select bank0
 14064  30CB  00B5               	movwf	ctoa@w+1
 14065  30CC                     l7291:	
 14066                           
 14067                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 14068  30CC  0832               	movf	ctoa@c,w
 14069  30CD  00B3               	movwf	??_ctoa
 14070  30CE  0833               	movf	??_ctoa,w
 14071  30CF  0025               	movlb	5	; select bank5
 14072  30D0  00A0               	movwf	_dbuf^(0+640)
 14073                           
 14074                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 14075  30D1  01A1               	clrf	(_dbuf^(0+640)+1)
 14076                           
 14077                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 14078  30D2  0020               	movlb	0	; select bank0
 14079  30D3  0831               	movf	ctoa@fp+1,w
 14080  30D4  00A7               	movwf	pad@fp+1
 14081  30D5  0830               	movf	ctoa@fp,w
 14082  30D6  00A6               	movwf	pad@fp
 14083  30D7  30A0               	movlw	(low (_dbuf| (0+512)))& (0+255)
 14084  30D8  00B3               	movwf	??_ctoa
 14085  30D9  0833               	movf	??_ctoa,w
 14086  30DA  00A8               	movwf	pad@buf
 14087  30DB  0835               	movf	ctoa@w+1,w
 14088  30DC  00AA               	movwf	pad@p+1
 14089  30DD  0834               	movf	ctoa@w,w
 14090  30DE  00A9               	movwf	pad@p
 14091  30DF  31B3  2343         	fcall	_pad
 14092  30E1  0020               	movlb	0	; select bank0
 14093  30E2  0827               	movf	?_pad+1,w
 14094  30E3  00B1               	movwf	?_ctoa+1
 14095  30E4  0826               	movf	?_pad,w
 14096  30E5  00B0               	movwf	?_ctoa
 14097  30E6  0008               	return
 14098  30E7                     __end_of_ctoa:	
 14099                           
 14100                           	psect	text36
 14101  3343                     __ptext36:	
 14102 ;; *************** function _pad *****************
 14103 ;; Defined at:
 14104 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 14105 ;; Parameters:    Size  Location     Type
 14106 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
 14107 ;;		 -> vsnprintf@f(6), 
 14108 ;;  buf             1    8[BANK0 ] PTR unsigned char 
 14109 ;;		 -> dbuf(80), 
 14110 ;;  p               2    9[BANK0 ] int 
 14111 ;; Auto vars:     Size  Location     Type
 14112 ;;  w               2   14[BANK0 ] int 
 14113 ;;  i               2   12[BANK0 ] int 
 14114 ;; Return value:  Size  Location     Type
 14115 ;;                  2    6[BANK0 ] int 
 14116 ;; Registers used:
 14117 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14118 ;; Tracked objects:
 14119 ;;		On entry : 0/0
 14120 ;;		On exit  : 0/0
 14121 ;;		Unchanged: 0/0
 14122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14123 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14124 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14125 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14126 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14127 ;;Total ram usage:       10 bytes
 14128 ;; Hardware stack levels used:    1
 14129 ;; Hardware stack levels required when called:    4
 14130 ;; This function calls:
 14131 ;;		_fputc
 14132 ;;		_fputs
 14133 ;;		_strlen
 14134 ;; This function is called by:
 14135 ;;		_ctoa
 14136 ;;		_dtoa
 14137 ;;		_efgtoa
 14138 ;;		_otoa
 14139 ;;		_utoa
 14140 ;;		_xtoa
 14141 ;; This function uses a non-reentrant model
 14142 ;;
 14143                           
 14144                           
 14145                           ;psect for function _pad
 14146  3343                     _pad:	
 14147                           
 14148                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 14149                           
 14150                           ;incstack = 0
 14151                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14152  3343  0023               	movlb	3	; select bank3
 14153  3344  1C38               	btfss	_flags^(0+384),0
 14154  3345  2B4F               	goto	l7235
 14155                           
 14156                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 14157  3346  0020               	movlb	0	; select bank0
 14158  3347  0827               	movf	pad@fp+1,w
 14159  3348  00FB               	movwf	fputs@fp+1
 14160  3349  0826               	movf	pad@fp,w
 14161  334A  00FA               	movwf	fputs@fp
 14162  334B  0828               	movf	pad@buf,w
 14163  334C  31B0  2090  31B3   	fcall	_fputs
 14164  334F                     l7235:	
 14165                           
 14166                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 14167  334F  0020               	movlb	0	; select bank0
 14168  3350  1BAA               	btfsc	pad@p+1,7
 14169  3351  2B57               	goto	l7239
 14170  3352  082A               	movf	pad@p+1,w
 14171  3353  00AF               	movwf	pad@w+1
 14172  3354  0829               	movf	pad@p,w
 14173  3355  00AE               	movwf	pad@w
 14174  3356  2B59               	goto	l641
 14175  3357                     l7239:	
 14176  3357  01AE               	clrf	pad@w
 14177  3358  01AF               	clrf	pad@w+1
 14178  3359                     l641:	
 14179                           
 14180                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 14181  3359  01AC               	clrf	pad@i
 14182  335A  01AD               	clrf	pad@i+1
 14183  335B                     l7245:	
 14184                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14185                           
 14186                           
 14187                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14188  335B  082D               	movf	pad@i+1,w
 14189  335C  3A80               	xorlw	128
 14190  335D  00AB               	movwf	??_pad
 14191  335E  082F               	movf	pad@w+1,w
 14192  335F  3A80               	xorlw	128
 14193  3360  022B               	subwf	??_pad,w
 14194  3361  1D03               	skipz
 14195  3362  2B65               	goto	u9745
 14196  3363  082E               	movf	pad@w,w
 14197  3364  022C               	subwf	pad@i,w
 14198  3365                     u9745:	
 14199  3365  1803               	btfsc	3,0
 14200  3366  2B79               	goto	l644
 14201                           
 14202                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 14203  3367  3020               	movlw	32
 14204  3368  00F1               	movwf	fputc@c
 14205  3369  3000               	movlw	0
 14206  336A  00F2               	movwf	fputc@c+1
 14207  336B  0020               	movlb	0	; select bank0
 14208  336C  0827               	movf	pad@fp+1,w
 14209  336D  00F4               	movwf	fputc@fp+1
 14210  336E  0826               	movf	pad@fp,w
 14211  336F  00F3               	movwf	fputc@fp
 14212  3370  31A0  2000  31B3   	fcall	_fputc
 14213                           
 14214                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 14215  3373  3001               	movlw	1
 14216  3374  0020               	movlb	0	; select bank0
 14217  3375  07AC               	addwf	pad@i,f
 14218  3376  3000               	movlw	0
 14219  3377  3DAD               	addwfc	pad@i+1,f
 14220  3378  2B5B               	goto	l7245
 14221  3379                     l644:	
 14222                           
 14223                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 14224  3379  0023               	movlb	3	; select bank3
 14225  337A  1838               	btfsc	_flags^(0+384),0
 14226  337B  2B85               	goto	l7249
 14227                           
 14228                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 14229  337C  0020               	movlb	0	; select bank0
 14230  337D  0827               	movf	pad@fp+1,w
 14231  337E  00FB               	movwf	fputs@fp+1
 14232  337F  0826               	movf	pad@fp,w
 14233  3380  00FA               	movwf	fputs@fp
 14234  3381  0828               	movf	pad@buf,w
 14235  3382  31B0  2090  31B3   	fcall	_fputs
 14236  3385                     l7249:	
 14237                           
 14238                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 14239  3385  0020               	movlb	0	; select bank0
 14240  3386  0828               	movf	pad@buf,w
 14241  3387  00F1               	movwf	strlen@s
 14242  3388  3002               	movlw	2
 14243  3389  00F2               	movwf	strlen@s+1
 14244  338A  31BE  26D6         	fcall	_strlen
 14245  338C  0020               	movlb	0	; select bank0
 14246  338D  082E               	movf	pad@w,w
 14247  338E  0771               	addwf	?_strlen,w
 14248  338F  00A6               	movwf	?_pad
 14249  3390  082F               	movf	pad@w+1,w
 14250  3391  3D72               	addwfc	?_strlen+1,w
 14251  3392  00A7               	movwf	?_pad+1
 14252  3393  0008               	return
 14253  3394                     __end_of_pad:	
 14254                           
 14255                           	psect	text37
 14256  3ED6                     __ptext37:	
 14257 ;; *************** function _strlen *****************
 14258 ;; Defined at:
 14259 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 14260 ;; Parameters:    Size  Location     Type
 14261 ;;  s               2    1[COMMON] PTR const unsigned char 
 14262 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), adcGain(2), 
 14263 ;; Auto vars:     Size  Location     Type
 14264 ;;  a               2    3[COMMON] PTR const unsigned char 
 14265 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), adcGain(2), 
 14266 ;; Return value:  Size  Location     Type
 14267 ;;                  2    1[COMMON] unsigned int 
 14268 ;; Registers used:
 14269 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14270 ;; Tracked objects:
 14271 ;;		On entry : 0/0
 14272 ;;		On exit  : 0/0
 14273 ;;		Unchanged: 0/0
 14274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14275 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14276 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14278 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14279 ;;Total ram usage:        4 bytes
 14280 ;; Hardware stack levels used:    1
 14281 ;; Hardware stack levels required when called:    1
 14282 ;; This function calls:
 14283 ;;		Nothing
 14284 ;; This function is called by:
 14285 ;;		_pad
 14286 ;;		_stoa
 14287 ;; This function uses a non-reentrant model
 14288 ;;
 14289                           
 14290                           
 14291                           ;psect for function _strlen
 14292  3ED6                     _strlen:	
 14293                           
 14294                           ;incstack = 0
 14295                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 14296  3ED6  0872               	movf	strlen@s+1,w
 14297  3ED7  00F4               	movwf	strlen@a+1
 14298  3ED8  0871               	movf	strlen@s,w
 14299  3ED9  00F3               	movwf	strlen@a
 14300  3EDA                     l4479:	
 14301  3EDA  0871               	movf	strlen@s,w
 14302  3EDB  0086               	movwf	6
 14303  3EDC  0872               	movf	strlen@s+1,w
 14304  3EDD  0087               	movwf	7
 14305  3EDE  0801               	movf	1,w
 14306  3EDF  1903               	btfsc	3,2
 14307  3EE0  2EE6               	goto	l4481
 14308  3EE1  3001               	movlw	1
 14309  3EE2  07F1               	addwf	strlen@s,f
 14310  3EE3  3000               	movlw	0
 14311  3EE4  3DF2               	addwfc	strlen@s+1,f
 14312  3EE5  2EDA               	goto	l4479
 14313  3EE6                     l4481:	
 14314  3EE6  0873               	movf	strlen@a,w
 14315  3EE7  0271               	subwf	strlen@s,w
 14316  3EE8  00F1               	movwf	?_strlen
 14317  3EE9  0874               	movf	strlen@a+1,w
 14318  3EEA  3B72               	subwfb	strlen@s+1,w
 14319  3EEB  00F2               	movwf	?_strlen+1
 14320  3EEC  0008               	return
 14321  3EED                     __end_of_strlen:	
 14322                           
 14323                           	psect	text38
 14324  3090                     __ptext38:	
 14325 ;; *************** function _fputs *****************
 14326 ;; Defined at:
 14327 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 14328 ;; Parameters:    Size  Location     Type
 14329 ;;  s               1    wreg     PTR const unsigned char 
 14330 ;;		 -> dbuf(80), 
 14331 ;;  fp              2   10[COMMON] PTR struct _IO_FILE
 14332 ;;		 -> vsnprintf@f(6), 
 14333 ;; Auto vars:     Size  Location     Type
 14334 ;;  s               1    5[BANK0 ] PTR const unsigned char 
 14335 ;;		 -> dbuf(80), 
 14336 ;;  i               2    3[BANK0 ] int 
 14337 ;;  c               1    2[BANK0 ] unsigned char 
 14338 ;; Return value:  Size  Location     Type
 14339 ;;                  2   10[COMMON] int 
 14340 ;; Registers used:
 14341 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14342 ;; Tracked objects:
 14343 ;;		On entry : 0/0
 14344 ;;		On exit  : 0/0
 14345 ;;		Unchanged: 0/0
 14346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14347 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14348 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14349 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14350 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14351 ;;Total ram usage:        8 bytes
 14352 ;; Hardware stack levels used:    1
 14353 ;; Hardware stack levels required when called:    3
 14354 ;; This function calls:
 14355 ;;		_fputc
 14356 ;; This function is called by:
 14357 ;;		_pad
 14358 ;; This function uses a non-reentrant model
 14359 ;;
 14360                           
 14361                           
 14362                           ;psect for function _fputs
 14363  3090                     _fputs:	
 14364                           
 14365                           ;incstack = 0
 14366                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14367                           ;fputs@s stored from wreg
 14368  3090  0020               	movlb	0	; select bank0
 14369  3091  00A5               	movwf	fputs@s
 14370  3092  01A3               	clrf	fputs@i
 14371  3093  01A4               	clrf	fputs@i+1
 14372  3094                     l4473:	
 14373  3094  0823               	movf	fputs@i,w
 14374  3095  0725               	addwf	fputs@s,w
 14375  3096  00A0               	movwf	??_fputs
 14376  3097  0820               	movf	??_fputs,w
 14377  3098  0086               	movwf	6
 14378  3099  3002               	movlw	2	; select bank4/5
 14379  309A  0087               	movwf	7
 14380  309B  0801               	movf	1,w
 14381  309C  00A1               	movwf	??_fputs+1
 14382  309D  0821               	movf	??_fputs+1,w
 14383  309E  00A2               	movwf	fputs@c
 14384  309F  0822               	movf	fputs@c,w
 14385  30A0  1903               	btfsc	3,2
 14386  30A1  0008               	return
 14387  30A2  0822               	movf	fputs@c,w
 14388  30A3  00A0               	movwf	??_fputs
 14389  30A4  01A1               	clrf	??_fputs+1
 14390  30A5  0820               	movf	??_fputs,w
 14391  30A6  00F1               	movwf	fputc@c
 14392  30A7  0821               	movf	??_fputs+1,w
 14393  30A8  00F2               	movwf	fputc@c+1
 14394  30A9  087B               	movf	fputs@fp+1,w
 14395  30AA  00F4               	movwf	fputc@fp+1
 14396  30AB  087A               	movf	fputs@fp,w
 14397  30AC  00F3               	movwf	fputc@fp
 14398  30AD  31A0  2000  31B0   	fcall	_fputc
 14399  30B0  3001               	movlw	1
 14400  30B1  0020               	movlb	0	; select bank0
 14401  30B2  07A3               	addwf	fputs@i,f
 14402  30B3  3000               	movlw	0
 14403  30B4  3DA4               	addwfc	fputs@i+1,f
 14404  30B5  2894               	goto	l4473
 14405  30B6                     __end_of_fputs:	
 14406                           
 14407                           	psect	text39
 14408  2000                     __ptext39:	
 14409 ;; *************** function _fputc *****************
 14410 ;; Defined at:
 14411 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 14412 ;; Parameters:    Size  Location     Type
 14413 ;;  c               2    1[COMMON] int 
 14414 ;;  fp              2    3[COMMON] PTR struct _IO_FILE
 14415 ;;		 -> vsnprintf@f(6), 
 14416 ;; Auto vars:     Size  Location     Type
 14417 ;;		None
 14418 ;; Return value:  Size  Location     Type
 14419 ;;                  2    1[COMMON] int 
 14420 ;; Registers used:
 14421 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14422 ;; Tracked objects:
 14423 ;;		On entry : 0/0
 14424 ;;		On exit  : 0/0
 14425 ;;		Unchanged: 0/0
 14426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14427 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14429 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14430 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14431 ;;Total ram usage:        9 bytes
 14432 ;; Hardware stack levels used:    1
 14433 ;; Hardware stack levels required when called:    2
 14434 ;; This function calls:
 14435 ;;		_putch
 14436 ;; This function is called by:
 14437 ;;		_pad
 14438 ;;		_stoa
 14439 ;;		_vfpfcnvrt
 14440 ;;		_fputs
 14441 ;; This function uses a non-reentrant model
 14442 ;;
 14443                           
 14444                           
 14445                           ;psect for function _fputc
 14446  2000                     _fputc:	
 14447                           
 14448                           ;incstack = 0
 14449                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14450  2000  0873               	movf	fputc@fp,w
 14451  2001  0474               	iorwf	fputc@fp+1,w
 14452  2002  1903               	btfsc	3,2
 14453  2003  2808               	goto	l4455
 14454  2004  0873               	movf	fputc@fp,w
 14455  2005  0474               	iorwf	fputc@fp+1,w
 14456  2006  1D03               	btfss	3,2
 14457  2007  280C               	goto	l4457
 14458  2008                     l4455:	
 14459  2008  0871               	movf	fputc@c,w
 14460  2009  3180  2003         	fcall	_putch
 14461  200B  0008               	return
 14462  200C                     l4457:	
 14463  200C  0873               	movf	fputc@fp,w
 14464  200D  0086               	movwf	6
 14465  200E  0874               	movf	fputc@fp+1,w
 14466  200F  0087               	movwf	7
 14467  2010  3144               	addfsr 1,4
 14468  2011  0016               	moviw fsr1++
 14469  2012  0401               	iorwf	1,w
 14470  2013  1903               	btfsc	3,2
 14471  2014  2833               	goto	l4461
 14472  2015  0873               	movf	fputc@fp,w
 14473  2016  0086               	movwf	6
 14474  2017  0874               	movf	fputc@fp+1,w
 14475  2018  0087               	movwf	7
 14476  2019  3144               	addfsr 1,4
 14477  201A  3F40               	moviw [0]fsr1
 14478  201B  00F5               	movwf	??_fputc
 14479  201C  3F41               	moviw [1]fsr1
 14480  201D  00F6               	movwf	??_fputc+1
 14481  201E  0873               	movf	fputc@fp,w
 14482  201F  0086               	movwf	6
 14483  2020  0874               	movf	fputc@fp+1,w
 14484  2021  0087               	movwf	7
 14485  2022  3142               	addfsr 1,2
 14486  2023  3F40               	moviw [0]fsr1
 14487  2024  00F7               	movwf	??_fputc+2
 14488  2025  3F41               	moviw [1]fsr1
 14489  2026  00F8               	movwf	??_fputc+3
 14490  2027  0878               	movf	??_fputc+3,w
 14491  2028  3A80               	xorlw	128
 14492  2029  00F9               	movwf	??_fputc+4
 14493  202A  0876               	movf	??_fputc+1,w
 14494  202B  3A80               	xorlw	128
 14495  202C  0279               	subwf	??_fputc+4,w
 14496  202D  1D03               	skipz
 14497  202E  2831               	goto	u4895
 14498  202F  0875               	movf	??_fputc,w
 14499  2030  0277               	subwf	??_fputc+2,w
 14500  2031                     u4895:	
 14501  2031  1803               	skipnc
 14502  2032  0008               	return
 14503  2033                     l4461:	
 14504  2033  0873               	movf	fputc@fp,w
 14505  2034  0086               	movwf	6
 14506  2035  0874               	movf	fputc@fp+1,w
 14507  2036  0087               	movwf	7
 14508  2037  3142               	addfsr 1,2
 14509  2038  0873               	movf	fputc@fp,w
 14510  2039  0084               	movwf	4
 14511  203A  0874               	movf	fputc@fp+1,w
 14512  203B  0085               	movwf	5
 14513  203C  3F40               	moviw [0]fsr1
 14514  203D  0700               	addwf	0,w
 14515  203E  00F5               	movwf	??_fputc
 14516  203F  3101               	addfsr 0,1
 14517  2040  3F41               	moviw [1]fsr1
 14518  2041  3D00               	addwfc	0,w
 14519  2042  00F6               	movwf	??_fputc+1
 14520  2043  0875               	movf	??_fputc,w
 14521  2044  0086               	movwf	6
 14522  2045  0876               	movf	??_fputc+1,w
 14523  2046  0087               	movwf	7
 14524  2047  0871               	movf	fputc@c,w
 14525  2048  0081               	movwf	1
 14526  2049  0873               	movf	fputc@fp,w
 14527  204A  0086               	movwf	6
 14528  204B  0874               	movf	fputc@fp+1,w
 14529  204C  0087               	movwf	7
 14530  204D  3142               	addfsr 1,2
 14531  204E  3001               	movlw	1
 14532  204F  0781               	addwf	1,f
 14533  2050  3141               	addfsr 1,1
 14534  2051  1803               	skipnc
 14535  2052  0A81               	incf	1,f
 14536  2053  0008               	return
 14537  2054                     __end_of_fputc:	
 14538                           
 14539                           	psect	text40
 14540  0003                     __ptext40:	
 14541 ;; *************** function _putch *****************
 14542 ;; Defined at:
 14543 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
 14544 ;; Parameters:    Size  Location     Type
 14545 ;;  c               1    wreg     unsigned char 
 14546 ;; Auto vars:     Size  Location     Type
 14547 ;;  c               1    0[COMMON] unsigned char 
 14548 ;; Return value:  Size  Location     Type
 14549 ;;                  1    wreg      void 
 14550 ;; Registers used:
 14551 ;;		wreg
 14552 ;; Tracked objects:
 14553 ;;		On entry : 0/0
 14554 ;;		On exit  : 0/0
 14555 ;;		Unchanged: 0/0
 14556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14561 ;;Total ram usage:        0 bytes
 14562 ;; Hardware stack levels used:    1
 14563 ;; Hardware stack levels required when called:    1
 14564 ;; This function calls:
 14565 ;;		Nothing
 14566 ;; This function is called by:
 14567 ;;		_fputc
 14568 ;; This function uses a non-reentrant model
 14569 ;;
 14570                           
 14571                           
 14572                           ;psect for function _putch
 14573  0003                     _putch:	
 14574                           
 14575                           ;incstack = 0
 14576                           ; Regs used in _putch: [wreg]
 14577  0003  0008               	return
 14578  0004                     __end_of_putch:	
 14579                           
 14580                           	psect	text41
 14581  2A95                     __ptext41:	
 14582 ;; *************** function _atoi *****************
 14583 ;; Defined at:
 14584 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 14585 ;; Parameters:    Size  Location     Type
 14586 ;;  s               2    7[COMMON] PTR const unsigned char 
 14587 ;;		 -> STR_25(18), STR_24(18), STR_23(19), STR_22(20), 
 14588 ;;		 -> STR_21(20), STR_20(21), STR_19(21), STR_18(21), 
 14589 ;;		 -> STR_17(22), STR_16(22), STR_15(21), STR_14(21), 
 14590 ;;		 -> STR_11(38), STR_8(57), STR_7(44), STR_6(42), 
 14591 ;;		 -> STR_3(43), 
 14592 ;; Auto vars:     Size  Location     Type
 14593 ;;  n               2   11[BANK0 ] int 
 14594 ;;  neg             2    4[BANK0 ] int 
 14595 ;; Return value:  Size  Location     Type
 14596 ;;                  2    7[COMMON] int 
 14597 ;; Registers used:
 14598 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14599 ;; Tracked objects:
 14600 ;;		On entry : 0/0
 14601 ;;		On exit  : 0/0
 14602 ;;		Unchanged: 0/0
 14603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14604 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14605 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14606 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14607 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14608 ;;Total ram usage:       15 bytes
 14609 ;; Hardware stack levels used:    1
 14610 ;; Hardware stack levels required when called:    2
 14611 ;; This function calls:
 14612 ;;		___wmul
 14613 ;;		_isdigit
 14614 ;;		_isspace
 14615 ;; This function is called by:
 14616 ;;		_vfpfcnvrt
 14617 ;; This function uses a non-reentrant model
 14618 ;;
 14619                           
 14620                           
 14621                           ;psect for function _atoi
 14622  2A95                     _atoi:	
 14623                           
 14624                           ;incstack = 0
 14625                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14626  2A95  0020               	movlb	0	; select bank0
 14627  2A96  01AB               	clrf	atoi@n
 14628  2A97  01AC               	clrf	atoi@n+1
 14629  2A98  01A4               	clrf	atoi@neg
 14630  2A99  01A5               	clrf	atoi@neg+1
 14631  2A9A                     l7847:	
 14632  2A9A  01AA               	clrf	_atoi$1744
 14633  2A9B  0AAA               	incf	_atoi$1744,f
 14634  2A9C  0877               	movf	atoi@s,w
 14635  2A9D  0084               	movwf	4
 14636  2A9E  0878               	movf	atoi@s+1,w
 14637  2A9F  0085               	movwf	5
 14638  2AA0  0012               	moviw fsr0++
 14639  2AA1  3A20               	xorlw	32
 14640  2AA2  1903               	btfsc	3,2
 14641  2AA3  2AB6               	goto	l7855
 14642  2AA4  0877               	movf	atoi@s,w
 14643  2AA5  0084               	movwf	4
 14644  2AA6  0878               	movf	atoi@s+1,w
 14645  2AA7  0085               	movwf	5
 14646  2AA8  0800               	movf	0,w	;code access
 14647  2AA9  3EF7               	addlw	247
 14648  2AAA  00A0               	movwf	??_atoi
 14649  2AAB  30FF               	movlw	255
 14650  2AAC  1803               	skipnc
 14651  2AAD  3000               	movlw	0
 14652  2AAE  00A1               	movwf	??_atoi+1
 14653  2AAF  3000               	movlw	0
 14654  2AB0  0221               	subwf	??_atoi+1,w
 14655  2AB1  3005               	movlw	5
 14656  2AB2  1903               	skipnz
 14657  2AB3  0220               	subwf	??_atoi,w
 14658  2AB4  1803               	btfsc	3,0
 14659  2AB5  01AA               	clrf	_atoi$1744
 14660  2AB6                     l7855:	
 14661  2AB6  082A               	movf	_atoi$1744,w
 14662  2AB7  00A0               	movwf	??_atoi
 14663  2AB8  01A1               	clrf	??_atoi+1
 14664  2AB9  0820               	movf	??_atoi,w
 14665  2ABA  00A6               	movwf	_atoi$1743
 14666  2ABB  0821               	movf	??_atoi+1,w
 14667  2ABC  00A7               	movwf	_atoi$1743+1
 14668  2ABD  0826               	movf	_atoi$1743,w
 14669  2ABE  0427               	iorwf	_atoi$1743+1,w
 14670  2ABF  1903               	btfsc	3,2
 14671  2AC0  2ACB               	goto	l7863
 14672  2AC1  3001               	movlw	1
 14673  2AC2  07F7               	addwf	atoi@s,f
 14674  2AC3  3000               	movlw	0
 14675  2AC4  3DF8               	addwfc	atoi@s+1,f
 14676  2AC5  2A9A               	goto	l7847
 14677  2AC6                     l7861:	
 14678  2AC6  3001               	movlw	1
 14679  2AC7  00A4               	movwf	atoi@neg
 14680  2AC8  3000               	movlw	0
 14681  2AC9  00A5               	movwf	atoi@neg+1
 14682  2ACA  2AFE               	goto	l1445
 14683  2ACB                     l7863:	
 14684  2ACB  0877               	movf	atoi@s,w
 14685  2ACC  0084               	movwf	4
 14686  2ACD  0878               	movf	atoi@s+1,w
 14687  2ACE  0085               	movwf	5
 14688  2ACF  0800               	movf	0,w	;code access
 14689  2AD0  00A0               	movwf	??_atoi
 14690  2AD1  01A1               	clrf	??_atoi+1
 14691                           
 14692                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14693                           ; Switch size 1, requested type "simple"
 14694                           ; Number of cases is 1, Range of values is 0 to 0
 14695                           ; switch strategies available:
 14696                           ; Name         Instructions Cycles
 14697                           ; simple_byte            4     3 (average)
 14698                           ; direct_byte            8     6 (fixed)
 14699                           ; jumptable            260     6 (fixed)
 14700                           ;	Chosen strategy is simple_byte
 14701  2AD2  0821               	movf	??_atoi+1,w
 14702  2AD3  3A00               	xorlw	0	; case 0
 14703  2AD4  1903               	skipnz
 14704  2AD5  2AD7               	goto	l8863
 14705  2AD6  2B02               	goto	l7869
 14706  2AD7                     l8863:	
 14707                           
 14708                           ; Switch size 1, requested type "simple"
 14709                           ; Number of cases is 2, Range of values is 43 to 45
 14710                           ; switch strategies available:
 14711                           ; Name         Instructions Cycles
 14712                           ; simple_byte            7     4 (average)
 14713                           ; direct_byte           15     9 (fixed)
 14714                           ; jumptable            263     9 (fixed)
 14715                           ;	Chosen strategy is simple_byte
 14716  2AD7  0820               	movf	??_atoi,w
 14717  2AD8  3A2B               	xorlw	43	; case 43
 14718  2AD9  1903               	skipnz
 14719  2ADA  2AFE               	goto	l1445
 14720  2ADB  3A06               	xorlw	6	; case 45
 14721  2ADC  1903               	skipnz
 14722  2ADD  2AC6               	goto	l7861
 14723  2ADE  2B02               	goto	l7869
 14724  2ADF                     l7865:	
 14725  2ADF  0877               	movf	atoi@s,w
 14726  2AE0  0084               	movwf	4
 14727  2AE1  0878               	movf	atoi@s+1,w
 14728  2AE2  0085               	movwf	5
 14729  2AE3  0800               	movf	0,w	;code access
 14730  2AE4  00A0               	movwf	??_atoi
 14731  2AE5  082C               	movf	atoi@n+1,w
 14732  2AE6  00F2               	movwf	___wmul@multiplier+1
 14733  2AE7  082B               	movf	atoi@n,w
 14734  2AE8  00F1               	movwf	___wmul@multiplier
 14735  2AE9  300A               	movlw	10
 14736  2AEA  00F3               	movwf	___wmul@multiplicand
 14737  2AEB  3000               	movlw	0
 14738  2AEC  00F4               	movwf	___wmul@multiplicand+1
 14739  2AED  31BF  274D  31AA   	fcall	___wmul
 14740  2AF0  0872               	movf	?___wmul+1,w
 14741  2AF1  0020               	movlb	0	; select bank0
 14742  2AF2  00A2               	movwf	??_atoi+2
 14743  2AF3  0820               	movf	??_atoi,w
 14744  2AF4  0271               	subwf	?___wmul,w
 14745  2AF5  00A1               	movwf	??_atoi+1
 14746  2AF6  1C03               	skipc
 14747  2AF7  03A2               	decf	??_atoi+2,f
 14748  2AF8  0821               	movf	??_atoi+1,w
 14749  2AF9  3E30               	addlw	48
 14750  2AFA  00AB               	movwf	atoi@n
 14751  2AFB  3000               	movlw	0
 14752  2AFC  3D22               	addwfc	??_atoi+2,w
 14753  2AFD  00AC               	movwf	atoi@n+1
 14754  2AFE                     l1445:	
 14755  2AFE  3001               	movlw	1
 14756  2AFF  07F7               	addwf	atoi@s,f
 14757  2B00  3000               	movlw	0
 14758  2B01  3DF8               	addwfc	atoi@s+1,f
 14759  2B02                     l7869:	
 14760  2B02  0877               	movf	atoi@s,w
 14761  2B03  0084               	movwf	4
 14762  2B04  0878               	movf	atoi@s+1,w
 14763  2B05  0085               	movwf	5
 14764  2B06  0800               	movf	0,w	;code access
 14765  2B07  3ED0               	addlw	208
 14766  2B08  00A0               	movwf	??_atoi
 14767  2B09  30FF               	movlw	255
 14768  2B0A  1803               	skipnc
 14769  2B0B  3000               	movlw	0
 14770  2B0C  00A1               	movwf	??_atoi+1
 14771  2B0D  3000               	movlw	0
 14772  2B0E  0221               	subwf	??_atoi+1,w
 14773  2B0F  300A               	movlw	10
 14774  2B10  1903               	skipnz
 14775  2B11  0220               	subwf	??_atoi,w
 14776  2B12  1803               	btfsc	3,0
 14777  2B13  2B16               	goto	u11000
 14778  2B14  3001               	movlw	1
 14779  2B15  2B17               	goto	u11010
 14780  2B16                     u11000:	
 14781  2B16  3000               	movlw	0
 14782  2B17                     u11010:	
 14783  2B17  00A2               	movwf	??_atoi+2
 14784  2B18  01A3               	clrf	??_atoi+3
 14785  2B19  0822               	movf	??_atoi+2,w
 14786  2B1A  00A8               	movwf	_atoi$1745
 14787  2B1B  0823               	movf	??_atoi+3,w
 14788  2B1C  00A9               	movwf	_atoi$1745+1
 14789  2B1D  0828               	movf	_atoi$1745,w
 14790  2B1E  0429               	iorwf	_atoi$1745+1,w
 14791  2B1F  1D03               	btfss	3,2
 14792  2B20  2ADF               	goto	l7865
 14793  2B21  0824               	movf	atoi@neg,w
 14794  2B22  0425               	iorwf	atoi@neg+1,w
 14795  2B23  1D03               	btfss	3,2
 14796  2B24  2B31               	goto	l7879
 14797  2B25  092B               	comf	atoi@n,w
 14798  2B26  00A0               	movwf	??_atoi
 14799  2B27  092C               	comf	atoi@n+1,w
 14800  2B28  00A1               	movwf	??_atoi+1
 14801  2B29  0AA0               	incf	??_atoi,f
 14802  2B2A  1903               	skipnz
 14803  2B2B  0AA1               	incf	??_atoi+1,f
 14804  2B2C  0820               	movf	??_atoi,w
 14805  2B2D  00F7               	movwf	?_atoi
 14806  2B2E  0821               	movf	??_atoi+1,w
 14807  2B2F  00F8               	movwf	?_atoi+1
 14808  2B30  0008               	return
 14809  2B31                     l7879:	
 14810  2B31  082C               	movf	atoi@n+1,w
 14811  2B32  00F8               	movwf	?_atoi+1
 14812  2B33  082B               	movf	atoi@n,w
 14813  2B34  00F7               	movwf	?_atoi
 14814  2B35  0008               	return
 14815  2B36                     __end_of_atoi:	
 14816                           
 14817                           	psect	text42
 14818  3F68                     __ptext42:	
 14819 ;; *************** function _isspace *****************
 14820 ;; Defined at:
 14821 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 14822 ;; Parameters:    Size  Location     Type
 14823 ;;  c               2    1[COMMON] int 
 14824 ;; Auto vars:     Size  Location     Type
 14825 ;;		None
 14826 ;; Return value:  Size  Location     Type
 14827 ;;                  2    1[COMMON] int 
 14828 ;; Registers used:
 14829 ;;		wreg, status,2, status,0
 14830 ;; Tracked objects:
 14831 ;;		On entry : 0/0
 14832 ;;		On exit  : 0/0
 14833 ;;		Unchanged: 0/0
 14834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14835 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14836 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14837 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14838 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14839 ;;Total ram usage:        5 bytes
 14840 ;; Hardware stack levels used:    1
 14841 ;; Hardware stack levels required when called:    1
 14842 ;; This function calls:
 14843 ;;		Nothing
 14844 ;; This function is called by:
 14845 ;;		_atoi
 14846 ;; This function uses a non-reentrant model
 14847 ;;
 14848                           
 14849                           
 14850                           ;psect for function _isspace
 14851  3F68                     _isspace:	
 14852                           
 14853                           ;incstack = 0
 14854                           ; Regs used in _isspace: [wreg+status,2+status,0]
 14855  3F68  01F5               	clrf	_isspace$1783
 14856  3F69  0AF5               	incf	_isspace$1783,f
 14857  3F6A  3020               	movlw	32
 14858  3F6B  0671               	xorwf	isspace@c,w
 14859  3F6C  0472               	iorwf	isspace@c+1,w
 14860  3F6D  1903               	btfsc	3,2
 14861  3F6E  2F7C               	goto	l5385
 14862  3F6F  0871               	movf	isspace@c,w
 14863  3F70  3EF7               	addlw	247
 14864  3F71  00F3               	movwf	??_isspace
 14865  3F72  30FF               	movlw	255
 14866  3F73  3D72               	addwfc	isspace@c+1,w
 14867  3F74  00F4               	movwf	??_isspace+1
 14868  3F75  3000               	movlw	0
 14869  3F76  0274               	subwf	??_isspace+1,w
 14870  3F77  3005               	movlw	5
 14871  3F78  1903               	skipnz
 14872  3F79  0273               	subwf	??_isspace,w
 14873  3F7A  1803               	btfsc	3,0
 14874  3F7B  01F5               	clrf	_isspace$1783
 14875  3F7C                     l5385:	
 14876  3F7C  0875               	movf	_isspace$1783,w
 14877  3F7D  00F3               	movwf	??_isspace
 14878  3F7E  01F4               	clrf	??_isspace+1
 14879  3F7F  0873               	movf	??_isspace,w
 14880  3F80  00F1               	movwf	?_isspace
 14881  3F81  0874               	movf	??_isspace+1,w
 14882  3F82  00F2               	movwf	?_isspace+1
 14883  3F83  0008               	return
 14884  3F84                     __end_of_isspace:	
 14885                           
 14886                           	psect	text43
 14887  3EBF                     __ptext43:	
 14888 ;; *************** function _isdigit *****************
 14889 ;; Defined at:
 14890 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 14891 ;; Parameters:    Size  Location     Type
 14892 ;;  c               2    1[COMMON] int 
 14893 ;; Auto vars:     Size  Location     Type
 14894 ;;		None
 14895 ;; Return value:  Size  Location     Type
 14896 ;;                  2    1[COMMON] int 
 14897 ;; Registers used:
 14898 ;;		wreg, status,2, status,0
 14899 ;; Tracked objects:
 14900 ;;		On entry : 0/0
 14901 ;;		On exit  : 0/0
 14902 ;;		Unchanged: 0/0
 14903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14904 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14906 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14907 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14908 ;;Total ram usage:        6 bytes
 14909 ;; Hardware stack levels used:    1
 14910 ;; Hardware stack levels required when called:    1
 14911 ;; This function calls:
 14912 ;;		Nothing
 14913 ;; This function is called by:
 14914 ;;		_vfpfcnvrt
 14915 ;;		_atoi
 14916 ;; This function uses a non-reentrant model
 14917 ;;
 14918                           
 14919                           
 14920                           ;psect for function _isdigit
 14921  3EBF                     _isdigit:	
 14922                           
 14923                           ;incstack = 0
 14924                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 14925  3EBF  0871               	movf	isdigit@c,w
 14926  3EC0  3ED0               	addlw	208
 14927  3EC1  00F3               	movwf	??_isdigit
 14928  3EC2  30FF               	movlw	255
 14929  3EC3  3D72               	addwfc	isdigit@c+1,w
 14930  3EC4  00F4               	movwf	??_isdigit+1
 14931  3EC5  3000               	movlw	0
 14932  3EC6  0274               	subwf	??_isdigit+1,w
 14933  3EC7  300A               	movlw	10
 14934  3EC8  1903               	skipnz
 14935  3EC9  0273               	subwf	??_isdigit,w
 14936  3ECA  1803               	btfsc	3,0
 14937  3ECB  2ECE               	goto	u5750
 14938  3ECC  3001               	movlw	1
 14939  3ECD  2ECF               	goto	u5760
 14940  3ECE                     u5750:	
 14941  3ECE  3000               	movlw	0
 14942  3ECF                     u5760:	
 14943  3ECF  00F5               	movwf	??_isdigit+2
 14944  3ED0  01F6               	clrf	??_isdigit+3
 14945  3ED1  0875               	movf	??_isdigit+2,w
 14946  3ED2  00F1               	movwf	?_isdigit
 14947  3ED3  0876               	movf	??_isdigit+3,w
 14948  3ED4  00F2               	movwf	?_isdigit+1
 14949  3ED5  0008               	return
 14950  3ED6                     __end_of_isdigit:	
 14951                           
 14952                           	psect	text44
 14953  3F33                     __ptext44:	
 14954 ;; *************** function _EUSART_Write_Text *****************
 14955 ;; Defined at:
 14956 ;;		line 75 in file "EUSART.c"
 14957 ;; Parameters:    Size  Location     Type
 14958 ;;  text            2    2[COMMON] PTR unsigned char 
 14959 ;;		 -> STR_26(3), STR_13(3), STR_12(38), STR_10(45), 
 14960 ;;		 -> STR_9(42), STR_5(3), STR_4(53), messageBuffer(127), 
 14961 ;;		 -> STR_2(46), STR_1(40), 
 14962 ;; Auto vars:     Size  Location     Type
 14963 ;;  i               2    5[COMMON] int 
 14964 ;; Return value:  Size  Location     Type
 14965 ;;                  1    wreg      void 
 14966 ;; Registers used:
 14967 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14968 ;; Tracked objects:
 14969 ;;		On entry : 0/0
 14970 ;;		On exit  : 0/0
 14971 ;;		Unchanged: 0/0
 14972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14973 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14974 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14975 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14976 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14977 ;;Total ram usage:        5 bytes
 14978 ;; Hardware stack levels used:    1
 14979 ;; Hardware stack levels required when called:    2
 14980 ;; This function calls:
 14981 ;;		_EUSART_Write
 14982 ;; This function is called by:
 14983 ;;		_statemachine
 14984 ;;		_printcellVoltages
 14985 ;;		_printotAFERegisters
 14986 ;; This function uses a non-reentrant model
 14987 ;;
 14988                           
 14989                           
 14990                           ;psect for function _EUSART_Write_Text
 14991  3F33                     _EUSART_Write_Text:	
 14992                           
 14993                           ;EUSART.c: 75: void EUSART_Write_Text(char *text);EUSART.c: 76: {;EUSART.c: 77:   int i;
      +                          ;EUSART.c: 78:   for(i=0;text[i]!='\0';i++)
 14994                           
 14995                           ;incstack = 0
 14996                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14997  3F33  01F5               	clrf	EUSART_Write_Text@i
 14998  3F34  01F6               	clrf	EUSART_Write_Text@i+1
 14999  3F35                     l6679:	
 15000  3F35  0872               	movf	EUSART_Write_Text@text,w
 15001  3F36  0775               	addwf	EUSART_Write_Text@i,w
 15002  3F37  0084               	movwf	4
 15003  3F38  0873               	movf	EUSART_Write_Text@text+1,w
 15004  3F39  3D76               	addwfc	EUSART_Write_Text@i+1,w
 15005  3F3A  0085               	movwf	5
 15006  3F3B  0012               	moviw fsr0++
 15007  3F3C  1903               	btfsc	3,2
 15008  3F3D  0008               	return
 15009                           
 15010                           ;EUSART.c: 79:    EUSART_Write(text[i]);
 15011  3F3E  0872               	movf	EUSART_Write_Text@text,w
 15012  3F3F  0775               	addwf	EUSART_Write_Text@i,w
 15013  3F40  0084               	movwf	4
 15014  3F41  0873               	movf	EUSART_Write_Text@text+1,w
 15015  3F42  3D76               	addwfc	EUSART_Write_Text@i+1,w
 15016  3F43  0085               	movwf	5
 15017  3F44  0800               	movf	0,w	;code access
 15018  3F45  31BE  264C  31BF   	fcall	_EUSART_Write
 15019  3F48  3001               	movlw	1
 15020  3F49  07F5               	addwf	EUSART_Write_Text@i,f
 15021  3F4A  3000               	movlw	0
 15022  3F4B  3DF6               	addwfc	EUSART_Write_Text@i+1,f
 15023  3F4C  2F35               	goto	l6679
 15024  3F4D                     __end_of_EUSART_Write_Text:	
 15025                           
 15026                           	psect	text45
 15027  3E4C                     __ptext45:	
 15028 ;; *************** function _EUSART_Write *****************
 15029 ;; Defined at:
 15030 ;;		line 56 in file "EUSART.c"
 15031 ;; Parameters:    Size  Location     Type
 15032 ;;  txData          1    wreg     unsigned char 
 15033 ;; Auto vars:     Size  Location     Type
 15034 ;;  txData          1    1[COMMON] unsigned char 
 15035 ;; Return value:  Size  Location     Type
 15036 ;;                  1    wreg      void 
 15037 ;; Registers used:
 15038 ;;		wreg
 15039 ;; Tracked objects:
 15040 ;;		On entry : 0/0
 15041 ;;		On exit  : 0/0
 15042 ;;		Unchanged: 0/0
 15043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15045 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15047 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15048 ;;Total ram usage:        1 bytes
 15049 ;; Hardware stack levels used:    1
 15050 ;; Hardware stack levels required when called:    1
 15051 ;; This function calls:
 15052 ;;		Nothing
 15053 ;; This function is called by:
 15054 ;;		_EUSART_Write_Text
 15055 ;; This function uses a non-reentrant model
 15056 ;;
 15057                           
 15058                           
 15059                           ;psect for function _EUSART_Write
 15060  3E4C                     _EUSART_Write:	
 15061                           
 15062                           ;incstack = 0
 15063                           ; Regs used in _EUSART_Write: [wreg]
 15064                           ;EUSART_Write@txData stored from wreg
 15065  3E4C  00F1               	movwf	EUSART_Write@txData
 15066  3E4D                     l250:	
 15067                           ;EUSART.c: 59:     {;EUSART.c: 60:     }
 15068                           
 15069                           
 15070                           ;EUSART.c: 58:     while(0 == PIR1bits.TXIF)
 15071  3E4D  0020               	movlb	0	; select bank0
 15072  3E4E  1E11               	btfss	17,4	;volatile
 15073  3E4F  2E4D               	goto	l250
 15074                           
 15075                           ;EUSART.c: 62:     TX1REG = txData;
 15076  3E50  0871               	movf	EUSART_Write@txData,w
 15077  3E51  0023               	movlb	3	; select bank3
 15078  3E52  009A               	movwf	26	;volatile
 15079  3E53  0008               	return
 15080  3E54                     __end_of_EUSART_Write:	
 15081                           
 15082                           	psect	text46
 15083  3437                     __ptext46:	
 15084 ;; *************** function _init_AFE *****************
 15085 ;; Defined at:
 15086 ;;		line 3 in file "BQ76920.c"
 15087 ;; Parameters:    Size  Location     Type
 15088 ;;		None
 15089 ;; Auto vars:     Size  Location     Type
 15090 ;;		None
 15091 ;; Return value:  Size  Location     Type
 15092 ;;                  1    wreg      void 
 15093 ;; Registers used:
 15094 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15095 ;; Tracked objects:
 15096 ;;		On entry : 0/0
 15097 ;;		On exit  : 0/0
 15098 ;;		Unchanged: 0/0
 15099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15104 ;;Total ram usage:        0 bytes
 15105 ;; Hardware stack levels used:    1
 15106 ;; Hardware stack levels required when called:    4
 15107 ;; This function calls:
 15108 ;;		_setCellOvervoltageProtection
 15109 ;;		_setCellUndervoltageProtection
 15110 ;;		_setOverCurrentDischargeProtection
 15111 ;;		_setShortCircuitProtection
 15112 ;;		_setShuntResistorValue
 15113 ;;		_setTemperatureLimitsint
 15114 ;; This function is called by:
 15115 ;;		_statemachine
 15116 ;; This function uses a non-reentrant model
 15117 ;;
 15118                           
 15119                           
 15120                           ;psect for function _init_AFE
 15121  3437                     _init_AFE:	
 15122                           
 15123                           ;BQ76920.c: 5:     setTemperatureLimitsint(-20, 45, 0, 45);
 15124                           
 15125                           ;incstack = 0
 15126                           ; Regs used in _init_AFE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15127  3437  30EC               	movlw	236
 15128  3438  0020               	movlb	0	; select bank0
 15129  3439  00A0               	movwf	setTemperatureLimitsint@minDischarge_degC
 15130  343A  30FF               	movlw	255
 15131  343B  00A1               	movwf	setTemperatureLimitsint@minDischarge_degC+1
 15132  343C  302D               	movlw	45
 15133  343D  00A2               	movwf	setTemperatureLimitsint@maxDischarge_degC
 15134  343E  3000               	movlw	0
 15135  343F  00A3               	movwf	setTemperatureLimitsint@maxDischarge_degC+1
 15136  3440  3000               	movlw	0
 15137  3441  00A4               	movwf	setTemperatureLimitsint@minCharge_degC
 15138  3442  00A5               	movwf	setTemperatureLimitsint@minCharge_degC+1
 15139  3443  302D               	movlw	45
 15140  3444  00A6               	movwf	setTemperatureLimitsint@maxCharge_degC
 15141  3445  3000               	movlw	0
 15142  3446  00A7               	movwf	setTemperatureLimitsint@maxCharge_degC+1
 15143  3447  31B2  222A  31B4   	fcall	_setTemperatureLimitsint
 15144                           
 15145                           ;BQ76920.c: 6:     setShuntResistorValue(0.02);
 15146  344A  303C               	movlw	60
 15147  344B  00F4               	movwf	setShuntResistorValue@res_mOhm+3
 15148  344C  30A3               	movlw	163
 15149  344D  00F3               	movwf	setShuntResistorValue@res_mOhm+2
 15150  344E  30D7               	movlw	215
 15151  344F  00F2               	movwf	setShuntResistorValue@res_mOhm+1
 15152  3450  300A               	movlw	10
 15153  3451  00F1               	movwf	setShuntResistorValue@res_mOhm
 15154  3452  31BE  2695  31B4   	fcall	_setShuntResistorValue
 15155                           
 15156                           ;BQ76920.c: 7:     setShortCircuitProtection(2500, 200);
 15157  3455  3000               	movlw	0
 15158  3456  0020               	movlb	0	; select bank0
 15159  3457  00E9               	movwf	setShortCircuitProtection@current_mA+3
 15160  3458  3000               	movlw	0
 15161  3459  00E8               	movwf	setShortCircuitProtection@current_mA+2
 15162  345A  3009               	movlw	9
 15163  345B  00E7               	movwf	setShortCircuitProtection@current_mA+1
 15164  345C  30C4               	movlw	196
 15165  345D  00E6               	movwf	setShortCircuitProtection@current_mA
 15166  345E  30C8               	movlw	200
 15167  345F  00EA               	movwf	setShortCircuitProtection@delay_us
 15168  3460  3000               	movlw	0
 15169  3461  00EB               	movwf	setShortCircuitProtection@delay_us+1
 15170  3462  3186  26D2  31B4   	fcall	_setShortCircuitProtection
 15171                           
 15172                           ;BQ76920.c: 9:     setOverCurrentDischargeProtection(20000, 320);
 15173  3465  3000               	movlw	0
 15174  3466  0020               	movlb	0	; select bank0
 15175  3467  00E9               	movwf	setOverCurrentDischargeProtection@current_mA+3
 15176  3468  3000               	movlw	0
 15177  3469  00E8               	movwf	setOverCurrentDischargeProtection@current_mA+2
 15178  346A  304E               	movlw	78
 15179  346B  00E7               	movwf	setOverCurrentDischargeProtection@current_mA+1
 15180  346C  3020               	movlw	32
 15181  346D  00E6               	movwf	setOverCurrentDischargeProtection@current_mA
 15182  346E  3040               	movlw	64
 15183  346F  00EA               	movwf	setOverCurrentDischargeProtection@delay_ms
 15184  3470  3001               	movlw	1
 15185  3471  00EB               	movwf	setOverCurrentDischargeProtection@delay_ms+1
 15186  3472  31A6  26EB  31B4   	fcall	_setOverCurrentDischargeProtection
 15187                           
 15188                           ;BQ76920.c: 10:     setCellUndervoltageProtection(2900, 2);
 15189  3475  3054               	movlw	84
 15190  3476  0020               	movlb	0	; select bank0
 15191  3477  00B2               	movwf	setCellUndervoltageProtection@voltage_mV
 15192  3478  300B               	movlw	11
 15193  3479  00B3               	movwf	setCellUndervoltageProtection@voltage_mV+1
 15194  347A  3002               	movlw	2
 15195  347B  00B4               	movwf	setCellUndervoltageProtection@delay_s
 15196  347C  3000               	movlw	0
 15197  347D  00B5               	movwf	setCellUndervoltageProtection@delay_s+1
 15198  347E  31AF  2725  31B4   	fcall	_setCellUndervoltageProtection
 15199                           
 15200                           ;BQ76920.c: 11:     setCellOvervoltageProtection(4100,2);
 15201  3481  3004               	movlw	4
 15202  3482  0020               	movlb	0	; select bank0
 15203  3483  00B2               	movwf	setCellOvervoltageProtection@voltage_mV
 15204  3484  3010               	movlw	16
 15205  3485  00B3               	movwf	setCellOvervoltageProtection@voltage_mV+1
 15206  3486  3002               	movlw	2
 15207  3487  00B4               	movwf	setCellOvervoltageProtection@delay_s
 15208  3488  3000               	movlw	0
 15209  3489  00B5               	movwf	setCellOvervoltageProtection@delay_s+1
 15210  348A  31AC  24A4         	fcall	_setCellOvervoltageProtection
 15211  348C  0008               	return
 15212  348D                     __end_of_init_AFE:	
 15213                           
 15214                           	psect	text47
 15215  322A                     __ptext47:	
 15216 ;; *************** function _setTemperatureLimitsint *****************
 15217 ;; Defined at:
 15218 ;;		line 56 in file "BQ76920.c"
 15219 ;; Parameters:    Size  Location     Type
 15220 ;;  minDischarge    2    0[BANK0 ] int 
 15221 ;;  maxDischarge    2    2[BANK0 ] int 
 15222 ;;  minCharge_de    2    4[BANK0 ] int 
 15223 ;;  maxCharge_de    2    6[BANK0 ] int 
 15224 ;; Auto vars:     Size  Location     Type
 15225 ;;		None
 15226 ;; Return value:  Size  Location     Type
 15227 ;;                  1    wreg      void 
 15228 ;; Registers used:
 15229 ;;		wreg, status,2, status,0, pclath, cstack
 15230 ;; Tracked objects:
 15231 ;;		On entry : 0/0
 15232 ;;		On exit  : 0/0
 15233 ;;		Unchanged: 0/0
 15234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15235 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15238 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15239 ;;Total ram usage:        8 bytes
 15240 ;; Hardware stack levels used:    1
 15241 ;; Hardware stack levels required when called:    2
 15242 ;; This function calls:
 15243 ;;		___wmul
 15244 ;; This function is called by:
 15245 ;;		_init_AFE
 15246 ;; This function uses a non-reentrant model
 15247 ;;
 15248                           
 15249                           
 15250                           ;psect for function _setTemperatureLimitsint
 15251  322A                     _setTemperatureLimitsint:	
 15252                           
 15253                           ;BQ76920.c: 58:     minCellTempDischarge = minDischarge_degC * 10;
 15254                           
 15255                           ;incstack = 0
 15256                           ; Regs used in _setTemperatureLimitsint: [wreg+status,2+status,0+pclath+cstack]
 15257  322A  0020               	movlb	0	; select bank0
 15258  322B  0821               	movf	setTemperatureLimitsint@minDischarge_degC+1,w
 15259  322C  00F2               	movwf	___wmul@multiplier+1
 15260  322D  0820               	movf	setTemperatureLimitsint@minDischarge_degC,w
 15261  322E  00F1               	movwf	___wmul@multiplier
 15262  322F  300A               	movlw	10
 15263  3230  00F3               	movwf	___wmul@multiplicand
 15264  3231  3000               	movlw	0
 15265  3232  00F4               	movwf	___wmul@multiplicand+1
 15266  3233  31BF  274D  31B2   	fcall	___wmul
 15267  3236  0872               	movf	?___wmul+1,w
 15268  3237  0023               	movlb	3	; select bank3
 15269  3238  00C7               	movwf	(_minCellTempDischarge+1)^(0+384)
 15270  3239  0871               	movf	?___wmul,w
 15271  323A  00C6               	movwf	_minCellTempDischarge^(0+384)
 15272                           
 15273                           ;BQ76920.c: 59:     maxCellTempDischarge = maxDischarge_degC * 10;
 15274  323B  0020               	movlb	0	; select bank0
 15275  323C  0823               	movf	setTemperatureLimitsint@maxDischarge_degC+1,w
 15276  323D  00F2               	movwf	___wmul@multiplier+1
 15277  323E  0822               	movf	setTemperatureLimitsint@maxDischarge_degC,w
 15278  323F  00F1               	movwf	___wmul@multiplier
 15279  3240  300A               	movlw	10
 15280  3241  00F3               	movwf	___wmul@multiplicand
 15281  3242  3000               	movlw	0
 15282  3243  00F4               	movwf	___wmul@multiplicand+1
 15283  3244  31BF  274D  31B2   	fcall	___wmul
 15284  3247  0872               	movf	?___wmul+1,w
 15285  3248  0023               	movlb	3	; select bank3
 15286  3249  00C3               	movwf	(_maxCellTempDischarge+1)^(0+384)
 15287  324A  0871               	movf	?___wmul,w
 15288  324B  00C2               	movwf	_maxCellTempDischarge^(0+384)
 15289                           
 15290                           ;BQ76920.c: 60:     minCellTempCharge = minCharge_degC * 10;
 15291  324C  0020               	movlb	0	; select bank0
 15292  324D  0825               	movf	setTemperatureLimitsint@minCharge_degC+1,w
 15293  324E  00F2               	movwf	___wmul@multiplier+1
 15294  324F  0824               	movf	setTemperatureLimitsint@minCharge_degC,w
 15295  3250  00F1               	movwf	___wmul@multiplier
 15296  3251  300A               	movlw	10
 15297  3252  00F3               	movwf	___wmul@multiplicand
 15298  3253  3000               	movlw	0
 15299  3254  00F4               	movwf	___wmul@multiplicand+1
 15300  3255  31BF  274D  31B2   	fcall	___wmul
 15301  3258  0872               	movf	?___wmul+1,w
 15302  3259  0023               	movlb	3	; select bank3
 15303  325A  00C9               	movwf	(_minCellTempCharge+1)^(0+384)
 15304  325B  0871               	movf	?___wmul,w
 15305  325C  00C8               	movwf	_minCellTempCharge^(0+384)
 15306                           
 15307                           ;BQ76920.c: 61:     maxCellTempCharge = maxCharge_degC * 10;
 15308  325D  0020               	movlb	0	; select bank0
 15309  325E  0827               	movf	setTemperatureLimitsint@maxCharge_degC+1,w
 15310  325F  00F2               	movwf	___wmul@multiplier+1
 15311  3260  0826               	movf	setTemperatureLimitsint@maxCharge_degC,w
 15312  3261  00F1               	movwf	___wmul@multiplier
 15313  3262  300A               	movlw	10
 15314  3263  00F3               	movwf	___wmul@multiplicand
 15315  3264  3000               	movlw	0
 15316  3265  00F4               	movwf	___wmul@multiplicand+1
 15317  3266  31BF  274D         	fcall	___wmul
 15318  3268  0872               	movf	?___wmul+1,w
 15319  3269  0023               	movlb	3	; select bank3
 15320  326A  00C5               	movwf	(_maxCellTempCharge+1)^(0+384)
 15321  326B  0871               	movf	?___wmul,w
 15322  326C  00C4               	movwf	_maxCellTempCharge^(0+384)
 15323  326D  0008               	return
 15324  326E                     __end_of_setTemperatureLimitsint:	
 15325                           
 15326                           	psect	text48
 15327  3F4D                     __ptext48:	
 15328 ;; *************** function ___wmul *****************
 15329 ;; Defined at:
 15330 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 15331 ;; Parameters:    Size  Location     Type
 15332 ;;  multiplier      2    1[COMMON] unsigned int 
 15333 ;;  multiplicand    2    3[COMMON] unsigned int 
 15334 ;; Auto vars:     Size  Location     Type
 15335 ;;  product         2    5[COMMON] unsigned int 
 15336 ;; Return value:  Size  Location     Type
 15337 ;;                  2    1[COMMON] unsigned int 
 15338 ;; Registers used:
 15339 ;;		wreg, status,2, status,0
 15340 ;; Tracked objects:
 15341 ;;		On entry : 0/0
 15342 ;;		On exit  : 0/0
 15343 ;;		Unchanged: 0/0
 15344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15345 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15346 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15348 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15349 ;;Total ram usage:        6 bytes
 15350 ;; Hardware stack levels used:    1
 15351 ;; Hardware stack levels required when called:    1
 15352 ;; This function calls:
 15353 ;;		Nothing
 15354 ;; This function is called by:
 15355 ;;		_setTemperatureLimitsint
 15356 ;;		_atoi
 15357 ;; This function uses a non-reentrant model
 15358 ;;
 15359                           
 15360                           
 15361                           ;psect for function ___wmul
 15362  3F4D                     ___wmul:	
 15363                           
 15364                           ;incstack = 0
 15365                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 15366  3F4D  01F5               	clrf	___wmul@product
 15367  3F4E  01F6               	clrf	___wmul@product+1
 15368  3F4F                     l4815:	
 15369  3F4F  1C71               	btfss	___wmul@multiplier,0
 15370  3F50  2F55               	goto	l959
 15371  3F51  0873               	movf	___wmul@multiplicand,w
 15372  3F52  07F5               	addwf	___wmul@product,f
 15373  3F53  0874               	movf	___wmul@multiplicand+1,w
 15374  3F54  3DF6               	addwfc	___wmul@product+1,f
 15375  3F55                     l959:	
 15376  3F55  3001               	movlw	1
 15377  3F56                     u5785:	
 15378  3F56  35F3               	lslf	___wmul@multiplicand,f
 15379  3F57  0DF4               	rlf	___wmul@multiplicand+1,f
 15380  3F58  0B89               	decfsz	9,f
 15381  3F59  2F56               	goto	u5785
 15382  3F5A  3001               	movlw	1
 15383  3F5B                     u5795:	
 15384  3F5B  36F2               	lsrf	___wmul@multiplier+1,f
 15385  3F5C  0CF1               	rrf	___wmul@multiplier,f
 15386  3F5D  0B89               	decfsz	9,f
 15387  3F5E  2F5B               	goto	u5795
 15388  3F5F  0871               	movf	___wmul@multiplier,w
 15389  3F60  0472               	iorwf	___wmul@multiplier+1,w
 15390  3F61  1D03               	btfss	3,2
 15391  3F62  2F4F               	goto	l4815
 15392  3F63  0876               	movf	___wmul@product+1,w
 15393  3F64  00F2               	movwf	?___wmul+1
 15394  3F65  0875               	movf	___wmul@product,w
 15395  3F66  00F1               	movwf	?___wmul
 15396  3F67  0008               	return
 15397  3F68                     __end_of___wmul:	
 15398                           
 15399                           	psect	text49
 15400  3E95                     __ptext49:	
 15401 ;; *************** function _setShuntResistorValue *****************
 15402 ;; Defined at:
 15403 ;;		line 68 in file "BQ76920.c"
 15404 ;; Parameters:    Size  Location     Type
 15405 ;;  res_mOhm        4    1[COMMON] float 
 15406 ;; Auto vars:     Size  Location     Type
 15407 ;;		None
 15408 ;; Return value:  Size  Location     Type
 15409 ;;                  1    wreg      void 
 15410 ;; Registers used:
 15411 ;;		wreg
 15412 ;; Tracked objects:
 15413 ;;		On entry : 0/0
 15414 ;;		On exit  : 0/0
 15415 ;;		Unchanged: 0/0
 15416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15417 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15420 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15421 ;;Total ram usage:        4 bytes
 15422 ;; Hardware stack levels used:    1
 15423 ;; Hardware stack levels required when called:    1
 15424 ;; This function calls:
 15425 ;;		Nothing
 15426 ;; This function is called by:
 15427 ;;		_init_AFE
 15428 ;; This function uses a non-reentrant model
 15429 ;;
 15430                           
 15431                           
 15432                           ;psect for function _setShuntResistorValue
 15433  3E95                     _setShuntResistorValue:	
 15434                           
 15435                           ;BQ76920.c: 69:     shuntResistorValue_mOhm = res_mOhm;
 15436                           
 15437                           ;incstack = 0
 15438                           ; Regs used in _setShuntResistorValue: [wreg]
 15439  3E95  0874               	movf	setShuntResistorValue@res_mOhm+3,w
 15440  3E96  0023               	movlb	3	; select bank3
 15441  3E97  00AB               	movwf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384)
 15442  3E98  0873               	movf	setShuntResistorValue@res_mOhm+2,w
 15443  3E99  00AA               	movwf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384)
 15444  3E9A  0872               	movf	setShuntResistorValue@res_mOhm+1,w
 15445  3E9B  00A9               	movwf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384)
 15446  3E9C  0871               	movf	setShuntResistorValue@res_mOhm,w
 15447  3E9D  00A8               	movwf	BQ76920@shuntResistorValue_mOhm^(0+384)
 15448  3E9E  0008               	return
 15449  3E9F                     __end_of_setShuntResistorValue:	
 15450                           
 15451                           	psect	text50
 15452  06D2                     __ptext50:	
 15453 ;; *************** function _setShortCircuitProtection *****************
 15454 ;; Defined at:
 15455 ;;		line 76 in file "BQ76920.c"
 15456 ;; Parameters:    Size  Location     Type
 15457 ;;  current_mA      4   70[BANK0 ] long 
 15458 ;;  delay_us        2   74[BANK0 ] int 
 15459 ;; Auto vars:     Size  Location     Type
 15460 ;;  i               2   10[BANK1 ] int 
 15461 ;;  i               2    8[BANK1 ] int 
 15462 ;;  scaler          4    0[BANK1 ] float 
 15463 ;; Return value:  Size  Location     Type
 15464 ;;                  1    wreg      void 
 15465 ;; Registers used:
 15466 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15467 ;; Tracked objects:
 15468 ;;		On entry : 0/0
 15469 ;;		On exit  : 0/0
 15470 ;;		Unchanged: 0/0
 15471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15472 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15473 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15474 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15475 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15476 ;;Total ram usage:       21 bytes
 15477 ;; Hardware stack levels used:    1
 15478 ;; Hardware stack levels required when called:    3
 15479 ;; This function calls:
 15480 ;;		_I2C_writeRegister
 15481 ;;		___fldiv
 15482 ;;		___flge
 15483 ;;		___flmul
 15484 ;;		___xxtofl
 15485 ;; This function is called by:
 15486 ;;		_init_AFE
 15487 ;; This function uses a non-reentrant model
 15488 ;;
 15489                           
 15490                           
 15491                           ;psect for function _setShortCircuitProtection
 15492  06D2                     _setShortCircuitProtection:	
 15493                           
 15494                           ;BQ76920.c: 81:     float scaler = 1000.0;
 15495                           
 15496                           ;incstack = 0
 15497                           ; Regs used in _setShortCircuitProtection: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15498  06D2  3044               	movlw	68
 15499  06D3  0021               	movlb	1	; select bank1
 15500  06D4  00A3               	movwf	(setShortCircuitProtection@scaler+3)^(0+128)
 15501  06D5  307A               	movlw	122
 15502  06D6  00A2               	movwf	(setShortCircuitProtection@scaler+2)^(0+128)
 15503  06D7  3000               	movlw	0
 15504  06D8  00A1               	movwf	(setShortCircuitProtection@scaler+1)^(0+128)
 15505  06D9  3000               	movlw	0
 15506  06DA  00A0               	movwf	setShortCircuitProtection@scaler^(0+128)
 15507                           
 15508                           ;BQ76920.c: 82:     protect1.bits.SCD_THRESH = 0;
 15509  06DB  30F8               	movlw	-8
 15510  06DC  0023               	movlb	3	; select bank3
 15511  06DD  05CE               	andwf	BQ76920@protect1^(0+384),f
 15512                           
 15513                           ;BQ76920.c: 83:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 15514  06DE  0021               	movlb	1	; select bank1
 15515  06DF  01A8               	clrf	setShortCircuitProtection@i^(0+128)
 15516  06E0  01A9               	clrf	(setShortCircuitProtection@i+1)^(0+128)
 15517  06E1                     l6711:	
 15518                           
 15519                           ;BQ76920.c: 84:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 15520  06E1  0023               	movlb	3	; select bank3
 15521  06E2  082B               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 15522  06E3  0020               	movlb	0	; select bank0
 15523  06E4  00A9               	movwf	___flmul@b+3
 15524  06E5  0023               	movlb	3	; select bank3
 15525  06E6  082A               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 15526  06E7  0020               	movlb	0	; select bank0
 15527  06E8  00A8               	movwf	___flmul@b+2
 15528  06E9  0023               	movlb	3	; select bank3
 15529  06EA  0829               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 15530  06EB  0020               	movlb	0	; select bank0
 15531  06EC  00A7               	movwf	___flmul@b+1
 15532  06ED  0023               	movlb	3	; select bank3
 15533  06EE  0828               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 15534  06EF  0020               	movlb	0	; select bank0
 15535  06F0  00A6               	movwf	___flmul@b
 15536  06F1  0869               	movf	setShortCircuitProtection@current_mA+3,w
 15537  06F2  00F4               	movwf	___xxtofl@val+3
 15538  06F3  0868               	movf	setShortCircuitProtection@current_mA+2,w
 15539  06F4  00F3               	movwf	___xxtofl@val+2
 15540  06F5  0867               	movf	setShortCircuitProtection@current_mA+1,w
 15541  06F6  00F2               	movwf	___xxtofl@val+1
 15542  06F7  0866               	movf	setShortCircuitProtection@current_mA,w
 15543  06F8  00F1               	movwf	___xxtofl@val
 15544  06F9  3001               	movlw	1
 15545  06FA  31A9  21FF  3186   	fcall	___xxtofl
 15546  06FD  0874               	movf	?___xxtofl+3,w
 15547  06FE  0020               	movlb	0	; select bank0
 15548  06FF  00AD               	movwf	___flmul@a+3
 15549  0700  0873               	movf	?___xxtofl+2,w
 15550  0701  00AC               	movwf	___flmul@a+2
 15551  0702  0872               	movf	?___xxtofl+1,w
 15552  0703  00AB               	movwf	___flmul@a+1
 15553  0704  0871               	movf	?___xxtofl,w
 15554  0705  00AA               	movwf	___flmul@a
 15555  0706  3193  23A8  3186   	fcall	___flmul
 15556  0709  0020               	movlb	0	; select bank0
 15557  070A  0829               	movf	?___flmul+3,w
 15558  070B  0021               	movlb	1	; select bank1
 15559  070C  00A7               	movwf	(_setShortCircuitProtection$2111+3)^(0+128)
 15560  070D  0020               	movlb	0	; select bank0
 15561  070E  0828               	movf	?___flmul+2,w
 15562  070F  0021               	movlb	1	; select bank1
 15563  0710  00A6               	movwf	(_setShortCircuitProtection$2111+2)^(0+128)
 15564  0711  0020               	movlb	0	; select bank0
 15565  0712  0827               	movf	?___flmul+1,w
 15566  0713  0021               	movlb	1	; select bank1
 15567  0714  00A5               	movwf	(_setShortCircuitProtection$2111+1)^(0+128)
 15568  0715  0020               	movlb	0	; select bank0
 15569  0716  0826               	movf	?___flmul,w
 15570  0717  0021               	movlb	1	; select bank1
 15571  0718  00A4               	movwf	_setShortCircuitProtection$2111^(0+128)
 15572                           
 15573                           ;BQ76920.c: 84:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 15574  0719  3044               	movlw	68
 15575  071A  0020               	movlb	0	; select bank0
 15576  071B  00C3               	movwf	___fldiv@a+3
 15577  071C  307A               	movlw	122
 15578  071D  00C2               	movwf	___fldiv@a+2
 15579  071E  3000               	movlw	0
 15580  071F  00C1               	movwf	___fldiv@a+1
 15581  0720  3000               	movlw	0
 15582  0721  00C0               	movwf	___fldiv@a
 15583  0722  0021               	movlb	1	; select bank1
 15584  0723  0823               	movf	(setShortCircuitProtection@scaler+3)^(0+128),w
 15585  0724  0020               	movlb	0	; select bank0
 15586  0725  00A9               	movwf	___flmul@b+3
 15587  0726  0021               	movlb	1	; select bank1
 15588  0727  0822               	movf	(setShortCircuitProtection@scaler+2)^(0+128),w
 15589  0728  0020               	movlb	0	; select bank0
 15590  0729  00A8               	movwf	___flmul@b+2
 15591  072A  0021               	movlb	1	; select bank1
 15592  072B  0821               	movf	(setShortCircuitProtection@scaler+1)^(0+128),w
 15593  072C  0020               	movlb	0	; select bank0
 15594  072D  00A7               	movwf	___flmul@b+1
 15595  072E  0021               	movlb	1	; select bank1
 15596  072F  0820               	movf	setShortCircuitProtection@scaler^(0+128),w
 15597  0730  0020               	movlb	0	; select bank0
 15598  0731  00A6               	movwf	___flmul@b
 15599  0732  0021               	movlb	1	; select bank1
 15600  0733  0827               	movf	(_setShortCircuitProtection$2111+3)^(0+128),w
 15601  0734  0020               	movlb	0	; select bank0
 15602  0735  00AD               	movwf	___flmul@a+3
 15603  0736  0021               	movlb	1	; select bank1
 15604  0737  0826               	movf	(_setShortCircuitProtection$2111+2)^(0+128),w
 15605  0738  0020               	movlb	0	; select bank0
 15606  0739  00AC               	movwf	___flmul@a+2
 15607  073A  0021               	movlb	1	; select bank1
 15608  073B  0825               	movf	(_setShortCircuitProtection$2111+1)^(0+128),w
 15609  073C  0020               	movlb	0	; select bank0
 15610  073D  00AB               	movwf	___flmul@a+1
 15611  073E  0021               	movlb	1	; select bank1
 15612  073F  0824               	movf	_setShortCircuitProtection$2111^(0+128),w
 15613  0740  0020               	movlb	0	; select bank0
 15614  0741  00AA               	movwf	___flmul@a
 15615  0742  3193  23A8  3186   	fcall	___flmul
 15616  0745  0020               	movlb	0	; select bank0
 15617  0746  0829               	movf	?___flmul+3,w
 15618  0747  00C7               	movwf	___fldiv@b+3
 15619  0748  0828               	movf	?___flmul+2,w
 15620  0749  00C6               	movwf	___fldiv@b+2
 15621  074A  0827               	movf	?___flmul+1,w
 15622  074B  00C5               	movwf	___fldiv@b+1
 15623  074C  0826               	movf	?___flmul,w
 15624  074D  00C4               	movwf	___fldiv@b
 15625  074E  319C  24A4  3186   	fcall	___fldiv
 15626  0751  0020               	movlb	0	; select bank0
 15627  0752  0843               	movf	?___fldiv+3,w
 15628  0753  00DD               	movwf	___flge@ff1+3
 15629  0754  0842               	movf	?___fldiv+2,w
 15630  0755  00DC               	movwf	___flge@ff1+2
 15631  0756  0841               	movf	?___fldiv+1,w
 15632  0757  00DB               	movwf	___flge@ff1+1
 15633  0758  0840               	movf	?___fldiv,w
 15634  0759  00DA               	movwf	___flge@ff1
 15635  075A  0021               	movlb	1	; select bank1
 15636  075B  0829               	movf	(setShortCircuitProtection@i+1)^(0+128),w
 15637  075C  0085               	movwf	5
 15638  075D  0828               	movf	setShortCircuitProtection@i^(0+128),w
 15639  075E  0084               	movwf	4
 15640  075F  3584               	lslf	4,f
 15641  0760  0D85               	rlf	5,f
 15642  0761  300E               	movlw	low (_SCD_threshold_setting| (0+32768))
 15643  0762  0784               	addwf	4,f
 15644  0763  30BB               	movlw	high (_SCD_threshold_setting| (0+32768))
 15645  0764  3D85               	addwfc	5,f
 15646  0765  3F00               	moviw [0]fsr0
 15647  0766  0020               	movlb	0	; select bank0
 15648  0767  00EC               	movwf	??_setShortCircuitProtection
 15649  0768  3F01               	moviw [1]fsr0
 15650  0769  00ED               	movwf	??_setShortCircuitProtection+1
 15651  076A  086C               	movf	??_setShortCircuitProtection,w
 15652  076B  00F1               	movwf	___xxtofl@val
 15653  076C  086D               	movf	??_setShortCircuitProtection+1,w
 15654  076D  00F2               	movwf	___xxtofl@val+1
 15655  076E  0D89               	rlf	9,f
 15656  076F  3B89               	subwfb	9,f
 15657  0770  0989               	comf	9,f
 15658  0771  00F3               	movwf	___xxtofl@val+2
 15659  0772  00F4               	movwf	___xxtofl@val+3
 15660  0773  3001               	movlw	1
 15661  0774  31A9  21FF  3186   	fcall	___xxtofl
 15662  0777  0874               	movf	?___xxtofl+3,w
 15663  0778  0020               	movlb	0	; select bank0
 15664  0779  00E1               	movwf	___flge@ff2+3
 15665  077A  0873               	movf	?___xxtofl+2,w
 15666  077B  00E0               	movwf	___flge@ff2+2
 15667  077C  0872               	movf	?___xxtofl+1,w
 15668  077D  00DF               	movwf	___flge@ff2+1
 15669  077E  0871               	movf	?___xxtofl,w
 15670  077F  00DE               	movwf	___flge@ff2
 15671  0780  31B6  2686  3186   	fcall	___flge
 15672  0783  1C03               	btfss	3,0
 15673  0784  2F8D               	goto	l6717
 15674                           
 15675                           ;BQ76920.c: 85:             protect1.bits.SCD_THRESH = i;
 15676  0785  0023               	movlb	3	; select bank3
 15677  0786  084E               	movf	BQ76920@protect1^(0+384),w
 15678  0787  0021               	movlb	1	; select bank1
 15679  0788  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 15680  0789  39F8               	andlw	-8
 15681  078A  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 15682  078B  0023               	movlb	3	; select bank3
 15683  078C  00CE               	movwf	BQ76920@protect1^(0+384)
 15684  078D                     l6717:	
 15685                           
 15686                           ;BQ76920.c: 87:     }
 15687  078D  3001               	movlw	1
 15688  078E  0021               	movlb	1	; select bank1
 15689  078F  07A8               	addwf	setShortCircuitProtection@i^(0+128),f
 15690  0790  3000               	movlw	0
 15691  0791  3DA9               	addwfc	(setShortCircuitProtection@i+1)^(0+128),f
 15692  0792  3000               	movlw	0
 15693  0793  0229               	subwf	(setShortCircuitProtection@i+1)^(0+128),w
 15694  0794  3007               	movlw	7
 15695  0795  1903               	skipnz
 15696  0796  0228               	subwf	setShortCircuitProtection@i^(0+128),w
 15697  0797  1C03               	skipc
 15698  0798  2EE1               	goto	l6711
 15699                           
 15700                           ;BQ76920.c: 89:     protect1.bits.SCD_DELAY = 0;
 15701  0799  30E7               	movlw	-25
 15702  079A  0023               	movlb	3	; select bank3
 15703  079B  05CE               	andwf	BQ76920@protect1^(0+384),f
 15704                           
 15705                           ;BQ76920.c: 90:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 15706  079C  0021               	movlb	1	; select bank1
 15707  079D  01AA               	clrf	setShortCircuitProtection@i_966^(0+128)
 15708  079E  01AB               	clrf	(setShortCircuitProtection@i_966+1)^(0+128)
 15709  079F                     l6729:	
 15710                           
 15711                           ;BQ76920.c: 91:         if (delay_us >= SCD_delay_setting[i]) {
 15712  079F  082B               	movf	(setShortCircuitProtection@i_966+1)^(0+128),w
 15713  07A0  0085               	movwf	5
 15714  07A1  082A               	movf	setShortCircuitProtection@i_966^(0+128),w
 15715  07A2  0084               	movwf	4
 15716  07A3  3584               	lslf	4,f
 15717  07A4  0D85               	rlf	5,f
 15718  07A5  302E               	movlw	low (_SCD_delay_setting| (0+32768))
 15719  07A6  0784               	addwf	4,f
 15720  07A7  30BB               	movlw	high (_SCD_delay_setting| (0+32768))
 15721  07A8  3D85               	addwfc	5,f
 15722  07A9  3F00               	moviw [0]fsr0
 15723  07AA  0020               	movlb	0	; select bank0
 15724  07AB  00EC               	movwf	??_setShortCircuitProtection
 15725  07AC  3F01               	moviw [1]fsr0
 15726  07AD  00ED               	movwf	??_setShortCircuitProtection+1
 15727  07AE  086B               	movf	setShortCircuitProtection@delay_us+1,w
 15728  07AF  3A80               	xorlw	128
 15729  07B0  00EE               	movwf	??_setShortCircuitProtection+2
 15730  07B1  086D               	movf	??_setShortCircuitProtection+1,w
 15731  07B2  3A80               	xorlw	128
 15732  07B3  026E               	subwf	??_setShortCircuitProtection+2,w
 15733  07B4  1D03               	skipz
 15734  07B5  2FB8               	goto	u9345
 15735  07B6  086C               	movf	??_setShortCircuitProtection,w
 15736  07B7  026A               	subwf	setShortCircuitProtection@delay_us,w
 15737  07B8                     u9345:	
 15738  07B8  1C03               	skipc
 15739  07B9  2FC9               	goto	l6733
 15740                           
 15741                           ;BQ76920.c: 92:             protect1.bits.SCD_DELAY = i;
 15742  07BA  0021               	movlb	1	; select bank1
 15743  07BB  082A               	movf	setShortCircuitProtection@i_966^(0+128),w
 15744  07BC  0020               	movlb	0	; select bank0
 15745  07BD  00EC               	movwf	??_setShortCircuitProtection
 15746  07BE  0DEC               	rlf	??_setShortCircuitProtection,f
 15747  07BF  0DEC               	rlf	??_setShortCircuitProtection,f
 15748  07C0  0DEC               	rlf	??_setShortCircuitProtection,f
 15749  07C1  0023               	movlb	3	; select bank3
 15750  07C2  084E               	movf	BQ76920@protect1^(0+384),w
 15751  07C3  0020               	movlb	0	; select bank0
 15752  07C4  066C               	xorwf	??_setShortCircuitProtection,w
 15753  07C5  39E7               	andlw	-25
 15754  07C6  066C               	xorwf	??_setShortCircuitProtection,w
 15755  07C7  0023               	movlb	3	; select bank3
 15756  07C8  00CE               	movwf	BQ76920@protect1^(0+384)
 15757  07C9                     l6733:	
 15758                           
 15759                           ;BQ76920.c: 94:     }
 15760  07C9  3001               	movlw	1
 15761  07CA  0021               	movlb	1	; select bank1
 15762  07CB  07AA               	addwf	setShortCircuitProtection@i_966^(0+128),f
 15763  07CC  3000               	movlw	0
 15764  07CD  3DAB               	addwfc	(setShortCircuitProtection@i_966+1)^(0+128),f
 15765  07CE  3000               	movlw	0
 15766  07CF  022B               	subwf	(setShortCircuitProtection@i_966+1)^(0+128),w
 15767  07D0  3007               	movlw	7
 15768  07D1  1903               	skipnz
 15769  07D2  022A               	subwf	setShortCircuitProtection@i_966^(0+128),w
 15770  07D3  1C03               	skipc
 15771  07D4  2F9F               	goto	l6729
 15772                           
 15773                           ;BQ76920.c: 96:     I2C_writeRegister(0x18, 0x06, protect1.regByte);
 15774  07D5  3018               	movlw	24
 15775  07D6  00F5               	movwf	I2C_writeRegister@slaveAddress
 15776  07D7  3000               	movlw	0
 15777  07D8  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 15778  07D9  3006               	movlw	6
 15779  07DA  00F7               	movwf	I2C_writeRegister@regAddress
 15780  07DB  3000               	movlw	0
 15781  07DC  00F8               	movwf	I2C_writeRegister@regAddress+1
 15782  07DD  0023               	movlb	3	; select bank3
 15783  07DE  084E               	movf	BQ76920@protect1^(0+384),w
 15784  07DF  0020               	movlb	0	; select bank0
 15785  07E0  00EC               	movwf	??_setShortCircuitProtection
 15786  07E1  01ED               	clrf	??_setShortCircuitProtection+1
 15787  07E2  086C               	movf	??_setShortCircuitProtection,w
 15788  07E3  00F9               	movwf	I2C_writeRegister@data
 15789  07E4  086D               	movf	??_setShortCircuitProtection+1,w
 15790  07E5  00FA               	movwf	I2C_writeRegister@data+1
 15791  07E6  3190  2000         	fcall	_I2C_writeRegister
 15792  07E8  0008               	return
 15793  07E9                     __end_of_setShortCircuitProtection:	
 15794                           
 15795                           	psect	text51
 15796  26EB                     __ptext51:	
 15797 ;; *************** function _setOverCurrentDischargeProtection *****************
 15798 ;; Defined at:
 15799 ;;		line 103 in file "BQ76920.c"
 15800 ;; Parameters:    Size  Location     Type
 15801 ;;  current_mA      4   70[BANK0 ] long 
 15802 ;;  delay_ms        2   74[BANK0 ] int 
 15803 ;; Auto vars:     Size  Location     Type
 15804 ;;  i               2   10[BANK1 ] int 
 15805 ;;  i               2    8[BANK1 ] int 
 15806 ;;  scaler          4    0[BANK1 ] float 
 15807 ;; Return value:  Size  Location     Type
 15808 ;;                  1    wreg      void 
 15809 ;; Registers used:
 15810 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15811 ;; Tracked objects:
 15812 ;;		On entry : 0/0
 15813 ;;		On exit  : 0/0
 15814 ;;		Unchanged: 0/0
 15815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15816 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15817 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15818 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15819 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15820 ;;Total ram usage:       21 bytes
 15821 ;; Hardware stack levels used:    1
 15822 ;; Hardware stack levels required when called:    3
 15823 ;; This function calls:
 15824 ;;		_I2C_writeRegister
 15825 ;;		___fldiv
 15826 ;;		___flge
 15827 ;;		___flmul
 15828 ;;		___xxtofl
 15829 ;; This function is called by:
 15830 ;;		_init_AFE
 15831 ;; This function uses a non-reentrant model
 15832 ;;
 15833                           
 15834                           
 15835                           ;psect for function _setOverCurrentDischargeProtection
 15836  26EB                     _setOverCurrentDischargeProtection:	
 15837                           
 15838                           ;BQ76920.c: 106:     float scaler = 1000.0;
 15839                           
 15840                           ;incstack = 0
 15841                           ; Regs used in _setOverCurrentDischargeProtection: [wreg-fsr0h+status,2+status,0+pclath+
      +                          cstack]
 15842  26EB  3044               	movlw	68
 15843  26EC  0021               	movlb	1	; select bank1
 15844  26ED  00A3               	movwf	(setOverCurrentDischargeProtection@scaler+3)^(0+128)
 15845  26EE  307A               	movlw	122
 15846  26EF  00A2               	movwf	(setOverCurrentDischargeProtection@scaler+2)^(0+128)
 15847  26F0  3000               	movlw	0
 15848  26F1  00A1               	movwf	(setOverCurrentDischargeProtection@scaler+1)^(0+128)
 15849  26F2  3000               	movlw	0
 15850  26F3  00A0               	movwf	setOverCurrentDischargeProtection@scaler^(0+128)
 15851                           
 15852                           ;BQ76920.c: 107:     protect2.bits.OCD_THRESH = 0;
 15853  26F4  30F0               	movlw	-16
 15854  26F5  0023               	movlb	3	; select bank3
 15855  26F6  05CD               	andwf	BQ76920@protect2^(0+384),f
 15856                           
 15857                           ;BQ76920.c: 108:     for (int i = 0; i < (sizeof(OCD_threshold_setting) / sizeof((OCD_th
      +                          reshold_setting)[0])) - 1; i++) {
 15858  26F7  0021               	movlb	1	; select bank1
 15859  26F8  01A8               	clrf	setOverCurrentDischargeProtection@i^(0+128)
 15860  26F9  01A9               	clrf	(setOverCurrentDischargeProtection@i+1)^(0+128)
 15861  26FA                     l6749:	
 15862                           
 15863                           ;BQ76920.c: 109:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 15864  26FA  0023               	movlb	3	; select bank3
 15865  26FB  082B               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 15866  26FC  0020               	movlb	0	; select bank0
 15867  26FD  00A9               	movwf	___flmul@b+3
 15868  26FE  0023               	movlb	3	; select bank3
 15869  26FF  082A               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 15870  2700  0020               	movlb	0	; select bank0
 15871  2701  00A8               	movwf	___flmul@b+2
 15872  2702  0023               	movlb	3	; select bank3
 15873  2703  0829               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 15874  2704  0020               	movlb	0	; select bank0
 15875  2705  00A7               	movwf	___flmul@b+1
 15876  2706  0023               	movlb	3	; select bank3
 15877  2707  0828               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 15878  2708  0020               	movlb	0	; select bank0
 15879  2709  00A6               	movwf	___flmul@b
 15880  270A  0869               	movf	setOverCurrentDischargeProtection@current_mA+3,w
 15881  270B  00F4               	movwf	___xxtofl@val+3
 15882  270C  0868               	movf	setOverCurrentDischargeProtection@current_mA+2,w
 15883  270D  00F3               	movwf	___xxtofl@val+2
 15884  270E  0867               	movf	setOverCurrentDischargeProtection@current_mA+1,w
 15885  270F  00F2               	movwf	___xxtofl@val+1
 15886  2710  0866               	movf	setOverCurrentDischargeProtection@current_mA,w
 15887  2711  00F1               	movwf	___xxtofl@val
 15888  2712  3001               	movlw	1
 15889  2713  31A9  21FF  31A6   	fcall	___xxtofl
 15890  2716  0874               	movf	?___xxtofl+3,w
 15891  2717  0020               	movlb	0	; select bank0
 15892  2718  00AD               	movwf	___flmul@a+3
 15893  2719  0873               	movf	?___xxtofl+2,w
 15894  271A  00AC               	movwf	___flmul@a+2
 15895  271B  0872               	movf	?___xxtofl+1,w
 15896  271C  00AB               	movwf	___flmul@a+1
 15897  271D  0871               	movf	?___xxtofl,w
 15898  271E  00AA               	movwf	___flmul@a
 15899  271F  3193  23A8  31A6   	fcall	___flmul
 15900  2722  0020               	movlb	0	; select bank0
 15901  2723  0829               	movf	?___flmul+3,w
 15902  2724  0021               	movlb	1	; select bank1
 15903  2725  00A7               	movwf	(_setOverCurrentDischargeProtection$2112+3)^(0+128)
 15904  2726  0020               	movlb	0	; select bank0
 15905  2727  0828               	movf	?___flmul+2,w
 15906  2728  0021               	movlb	1	; select bank1
 15907  2729  00A6               	movwf	(_setOverCurrentDischargeProtection$2112+2)^(0+128)
 15908  272A  0020               	movlb	0	; select bank0
 15909  272B  0827               	movf	?___flmul+1,w
 15910  272C  0021               	movlb	1	; select bank1
 15911  272D  00A5               	movwf	(_setOverCurrentDischargeProtection$2112+1)^(0+128)
 15912  272E  0020               	movlb	0	; select bank0
 15913  272F  0826               	movf	?___flmul,w
 15914  2730  0021               	movlb	1	; select bank1
 15915  2731  00A4               	movwf	_setOverCurrentDischargeProtection$2112^(0+128)
 15916                           
 15917                           ;BQ76920.c: 109:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 15918  2732  3044               	movlw	68
 15919  2733  0020               	movlb	0	; select bank0
 15920  2734  00C3               	movwf	___fldiv@a+3
 15921  2735  307A               	movlw	122
 15922  2736  00C2               	movwf	___fldiv@a+2
 15923  2737  3000               	movlw	0
 15924  2738  00C1               	movwf	___fldiv@a+1
 15925  2739  3000               	movlw	0
 15926  273A  00C0               	movwf	___fldiv@a
 15927  273B  0021               	movlb	1	; select bank1
 15928  273C  0823               	movf	(setOverCurrentDischargeProtection@scaler+3)^(0+128),w
 15929  273D  0020               	movlb	0	; select bank0
 15930  273E  00A9               	movwf	___flmul@b+3
 15931  273F  0021               	movlb	1	; select bank1
 15932  2740  0822               	movf	(setOverCurrentDischargeProtection@scaler+2)^(0+128),w
 15933  2741  0020               	movlb	0	; select bank0
 15934  2742  00A8               	movwf	___flmul@b+2
 15935  2743  0021               	movlb	1	; select bank1
 15936  2744  0821               	movf	(setOverCurrentDischargeProtection@scaler+1)^(0+128),w
 15937  2745  0020               	movlb	0	; select bank0
 15938  2746  00A7               	movwf	___flmul@b+1
 15939  2747  0021               	movlb	1	; select bank1
 15940  2748  0820               	movf	setOverCurrentDischargeProtection@scaler^(0+128),w
 15941  2749  0020               	movlb	0	; select bank0
 15942  274A  00A6               	movwf	___flmul@b
 15943  274B  0021               	movlb	1	; select bank1
 15944  274C  0827               	movf	(_setOverCurrentDischargeProtection$2112+3)^(0+128),w
 15945  274D  0020               	movlb	0	; select bank0
 15946  274E  00AD               	movwf	___flmul@a+3
 15947  274F  0021               	movlb	1	; select bank1
 15948  2750  0826               	movf	(_setOverCurrentDischargeProtection$2112+2)^(0+128),w
 15949  2751  0020               	movlb	0	; select bank0
 15950  2752  00AC               	movwf	___flmul@a+2
 15951  2753  0021               	movlb	1	; select bank1
 15952  2754  0825               	movf	(_setOverCurrentDischargeProtection$2112+1)^(0+128),w
 15953  2755  0020               	movlb	0	; select bank0
 15954  2756  00AB               	movwf	___flmul@a+1
 15955  2757  0021               	movlb	1	; select bank1
 15956  2758  0824               	movf	_setOverCurrentDischargeProtection$2112^(0+128),w
 15957  2759  0020               	movlb	0	; select bank0
 15958  275A  00AA               	movwf	___flmul@a
 15959  275B  3193  23A8  31A6   	fcall	___flmul
 15960  275E  0020               	movlb	0	; select bank0
 15961  275F  0829               	movf	?___flmul+3,w
 15962  2760  00C7               	movwf	___fldiv@b+3
 15963  2761  0828               	movf	?___flmul+2,w
 15964  2762  00C6               	movwf	___fldiv@b+2
 15965  2763  0827               	movf	?___flmul+1,w
 15966  2764  00C5               	movwf	___fldiv@b+1
 15967  2765  0826               	movf	?___flmul,w
 15968  2766  00C4               	movwf	___fldiv@b
 15969  2767  319C  24A4  31A6   	fcall	___fldiv
 15970  276A  0020               	movlb	0	; select bank0
 15971  276B  0843               	movf	?___fldiv+3,w
 15972  276C  00DD               	movwf	___flge@ff1+3
 15973  276D  0842               	movf	?___fldiv+2,w
 15974  276E  00DC               	movwf	___flge@ff1+2
 15975  276F  0841               	movf	?___fldiv+1,w
 15976  2770  00DB               	movwf	___flge@ff1+1
 15977  2771  0840               	movf	?___fldiv,w
 15978  2772  00DA               	movwf	___flge@ff1
 15979  2773  0021               	movlb	1	; select bank1
 15980  2774  0829               	movf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 15981  2775  0085               	movwf	5
 15982  2776  0828               	movf	setOverCurrentDischargeProtection@i^(0+128),w
 15983  2777  0084               	movwf	4
 15984  2778  3584               	lslf	4,f
 15985  2779  0D85               	rlf	5,f
 15986  277A  30EA               	movlw	low (_OCD_threshold_setting| (0+32768))
 15987  277B  0784               	addwf	4,f
 15988  277C  30B9               	movlw	high (_OCD_threshold_setting| (0+32768))
 15989  277D  3D85               	addwfc	5,f
 15990  277E  3F00               	moviw [0]fsr0
 15991  277F  0020               	movlb	0	; select bank0
 15992  2780  00EC               	movwf	??_setOverCurrentDischargeProtection
 15993  2781  3F01               	moviw [1]fsr0
 15994  2782  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 15995  2783  086C               	movf	??_setOverCurrentDischargeProtection,w
 15996  2784  00F1               	movwf	___xxtofl@val
 15997  2785  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 15998  2786  00F2               	movwf	___xxtofl@val+1
 15999  2787  0D89               	rlf	9,f
 16000  2788  3B89               	subwfb	9,f
 16001  2789  0989               	comf	9,f
 16002  278A  00F3               	movwf	___xxtofl@val+2
 16003  278B  00F4               	movwf	___xxtofl@val+3
 16004  278C  3001               	movlw	1
 16005  278D  31A9  21FF  31A6   	fcall	___xxtofl
 16006  2790  0874               	movf	?___xxtofl+3,w
 16007  2791  0020               	movlb	0	; select bank0
 16008  2792  00E1               	movwf	___flge@ff2+3
 16009  2793  0873               	movf	?___xxtofl+2,w
 16010  2794  00E0               	movwf	___flge@ff2+2
 16011  2795  0872               	movf	?___xxtofl+1,w
 16012  2796  00DF               	movwf	___flge@ff2+1
 16013  2797  0871               	movf	?___xxtofl,w
 16014  2798  00DE               	movwf	___flge@ff2
 16015  2799  31B6  2686  31A6   	fcall	___flge
 16016  279C  1C03               	btfss	3,0
 16017  279D  2FA6               	goto	l6755
 16018                           
 16019                           ;BQ76920.c: 110:             protect2.bits.OCD_THRESH = i;
 16020  279E  0023               	movlb	3	; select bank3
 16021  279F  084D               	movf	BQ76920@protect2^(0+384),w
 16022  27A0  0021               	movlb	1	; select bank1
 16023  27A1  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 16024  27A2  39F0               	andlw	-16
 16025  27A3  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 16026  27A4  0023               	movlb	3	; select bank3
 16027  27A5  00CD               	movwf	BQ76920@protect2^(0+384)
 16028  27A6                     l6755:	
 16029                           
 16030                           ;BQ76920.c: 112:     }
 16031  27A6  3001               	movlw	1
 16032  27A7  0021               	movlb	1	; select bank1
 16033  27A8  07A8               	addwf	setOverCurrentDischargeProtection@i^(0+128),f
 16034  27A9  3000               	movlw	0
 16035  27AA  3DA9               	addwfc	(setOverCurrentDischargeProtection@i+1)^(0+128),f
 16036  27AB  3000               	movlw	0
 16037  27AC  0229               	subwf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 16038  27AD  300F               	movlw	15
 16039  27AE  1903               	skipnz
 16040  27AF  0228               	subwf	setOverCurrentDischargeProtection@i^(0+128),w
 16041  27B0  1C03               	skipc
 16042  27B1  2EFA               	goto	l6749
 16043                           
 16044                           ;BQ76920.c: 114:     protect2.bits.OCD_DELAY = 0;
 16045  27B2  308F               	movlw	-113
 16046  27B3  0023               	movlb	3	; select bank3
 16047  27B4  05CD               	andwf	BQ76920@protect2^(0+384),f
 16048                           
 16049                           ;BQ76920.c: 115:     for (int i = 0; i < (sizeof(OCD_delay_setting) / sizeof((OCD_delay_
      +                          setting)[0])) - 1; i++) {
 16050  27B5  0021               	movlb	1	; select bank1
 16051  27B6  01AA               	clrf	setOverCurrentDischargeProtection@i_975^(0+128)
 16052  27B7  01AB               	clrf	(setOverCurrentDischargeProtection@i_975+1)^(0+128)
 16053  27B8                     l6767:	
 16054                           
 16055                           ;BQ76920.c: 116:         if (delay_ms >= OCD_delay_setting[i]) {
 16056  27B8  082B               	movf	(setOverCurrentDischargeProtection@i_975+1)^(0+128),w
 16057  27B9  0085               	movwf	5
 16058  27BA  082A               	movf	setOverCurrentDischargeProtection@i_975^(0+128),w
 16059  27BB  0084               	movwf	4
 16060  27BC  3584               	lslf	4,f
 16061  27BD  0D85               	rlf	5,f
 16062  27BE  30FE               	movlw	low (_OCD_delay_setting| (0+32768))
 16063  27BF  0784               	addwf	4,f
 16064  27C0  30BA               	movlw	high (_OCD_delay_setting| (0+32768))
 16065  27C1  3D85               	addwfc	5,f
 16066  27C2  3F00               	moviw [0]fsr0
 16067  27C3  0020               	movlb	0	; select bank0
 16068  27C4  00EC               	movwf	??_setOverCurrentDischargeProtection
 16069  27C5  3F01               	moviw [1]fsr0
 16070  27C6  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 16071  27C7  086B               	movf	setOverCurrentDischargeProtection@delay_ms+1,w
 16072  27C8  3A80               	xorlw	128
 16073  27C9  00EE               	movwf	??_setOverCurrentDischargeProtection+2
 16074  27CA  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 16075  27CB  3A80               	xorlw	128
 16076  27CC  026E               	subwf	??_setOverCurrentDischargeProtection+2,w
 16077  27CD  1D03               	skipz
 16078  27CE  2FD1               	goto	u9385
 16079  27CF  086C               	movf	??_setOverCurrentDischargeProtection,w
 16080  27D0  026A               	subwf	setOverCurrentDischargeProtection@delay_ms,w
 16081  27D1                     u9385:	
 16082  27D1  1C03               	skipc
 16083  27D2  2FE0               	goto	l6771
 16084                           
 16085                           ;BQ76920.c: 117:             protect2.bits.OCD_DELAY = i;
 16086  27D3  0021               	movlb	1	; select bank1
 16087  27D4  082A               	movf	setOverCurrentDischargeProtection@i_975^(0+128),w
 16088  27D5  0020               	movlb	0	; select bank0
 16089  27D6  00EC               	movwf	??_setOverCurrentDischargeProtection
 16090  27D7  0EEC               	swapf	??_setOverCurrentDischargeProtection,f
 16091  27D8  0023               	movlb	3	; select bank3
 16092  27D9  084D               	movf	BQ76920@protect2^(0+384),w
 16093  27DA  0020               	movlb	0	; select bank0
 16094  27DB  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 16095  27DC  398F               	andlw	-113
 16096  27DD  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 16097  27DE  0023               	movlb	3	; select bank3
 16098  27DF  00CD               	movwf	BQ76920@protect2^(0+384)
 16099  27E0                     l6771:	
 16100                           
 16101                           ;BQ76920.c: 119:     }
 16102  27E0  3001               	movlw	1
 16103  27E1  0021               	movlb	1	; select bank1
 16104  27E2  07AA               	addwf	setOverCurrentDischargeProtection@i_975^(0+128),f
 16105  27E3  3000               	movlw	0
 16106  27E4  3DAB               	addwfc	(setOverCurrentDischargeProtection@i_975+1)^(0+128),f
 16107  27E5  3000               	movlw	0
 16108  27E6  022B               	subwf	(setOverCurrentDischargeProtection@i_975+1)^(0+128),w
 16109  27E7  3007               	movlw	7
 16110  27E8  1903               	skipnz
 16111  27E9  022A               	subwf	setOverCurrentDischargeProtection@i_975^(0+128),w
 16112  27EA  1C03               	skipc
 16113  27EB  2FB8               	goto	l6767
 16114                           
 16115                           ;BQ76920.c: 121:     I2C_writeRegister(0x18, 0x07, protect2.regByte);
 16116  27EC  3018               	movlw	24
 16117  27ED  00F5               	movwf	I2C_writeRegister@slaveAddress
 16118  27EE  3000               	movlw	0
 16119  27EF  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16120  27F0  3007               	movlw	7
 16121  27F1  00F7               	movwf	I2C_writeRegister@regAddress
 16122  27F2  3000               	movlw	0
 16123  27F3  00F8               	movwf	I2C_writeRegister@regAddress+1
 16124  27F4  0023               	movlb	3	; select bank3
 16125  27F5  084D               	movf	BQ76920@protect2^(0+384),w
 16126  27F6  0020               	movlb	0	; select bank0
 16127  27F7  00EC               	movwf	??_setOverCurrentDischargeProtection
 16128  27F8  01ED               	clrf	??_setOverCurrentDischargeProtection+1
 16129  27F9  086C               	movf	??_setOverCurrentDischargeProtection,w
 16130  27FA  00F9               	movwf	I2C_writeRegister@data
 16131  27FB  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 16132  27FC  00FA               	movwf	I2C_writeRegister@data+1
 16133  27FD  3190  2000         	fcall	_I2C_writeRegister
 16134  27FF  0008               	return
 16135  2800                     __end_of_setOverCurrentDischargeProtection:	
 16136                           
 16137                           	psect	text52
 16138  3686                     __ptext52:	
 16139 ;; *************** function ___flge *****************
 16140 ;; Defined at:
 16141 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 16142 ;; Parameters:    Size  Location     Type
 16143 ;;  ff1             4   58[BANK0 ] void 
 16144 ;;  ff2             4   62[BANK0 ] void 
 16145 ;; Auto vars:     Size  Location     Type
 16146 ;;		None
 16147 ;; Return value:  Size  Location     Type
 16148 ;;		None               void
 16149 ;; Registers used:
 16150 ;;		wreg, status,2, status,0
 16151 ;; Tracked objects:
 16152 ;;		On entry : 0/0
 16153 ;;		On exit  : 0/0
 16154 ;;		Unchanged: 0/0
 16155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16156 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16158 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16159 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16160 ;;Total ram usage:       12 bytes
 16161 ;; Hardware stack levels used:    1
 16162 ;; Hardware stack levels required when called:    1
 16163 ;; This function calls:
 16164 ;;		Nothing
 16165 ;; This function is called by:
 16166 ;;		_setShortCircuitProtection
 16167 ;;		_setOverCurrentDischargeProtection
 16168 ;;		_efgtoa
 16169 ;; This function uses a non-reentrant model
 16170 ;;
 16171                           
 16172                           
 16173                           ;psect for function ___flge
 16174  3686                     ___flge:	
 16175                           
 16176                           ;incstack = 0
 16177                           ; Regs used in ___flge: [wreg+status,2+status,0]
 16178  3686  3000               	movlw	0
 16179  3687  0020               	movlb	0	; select bank0
 16180  3688  055A               	andwf	___flge@ff1,w
 16181  3689  00E2               	movwf	??___flge
 16182  368A  3000               	movlw	0
 16183  368B  055B               	andwf	___flge@ff1+1,w
 16184  368C  00E3               	movwf	??___flge+1
 16185  368D  3080               	movlw	128
 16186  368E  055C               	andwf	___flge@ff1+2,w
 16187  368F  00E4               	movwf	??___flge+2
 16188  3690  307F               	movlw	127
 16189  3691  055D               	andwf	___flge@ff1+3,w
 16190  3692  00E5               	movwf	??___flge+3
 16191  3693  0865               	movf	??___flge+3,w
 16192  3694  0464               	iorwf	??___flge+2,w
 16193  3695  0463               	iorwf	??___flge+1,w
 16194  3696  0462               	iorwf	??___flge,w
 16195  3697  1D03               	skipz
 16196  3698  2EA1               	goto	l1137
 16197  3699  3000               	movlw	0
 16198  369A  00DD               	movwf	___flge@ff1+3
 16199  369B  3000               	movlw	0
 16200  369C  00DC               	movwf	___flge@ff1+2
 16201  369D  3000               	movlw	0
 16202  369E  00DB               	movwf	___flge@ff1+1
 16203  369F  3000               	movlw	0
 16204  36A0  00DA               	movwf	___flge@ff1
 16205  36A1                     l1137:	
 16206  36A1  3000               	movlw	0
 16207  36A2  055E               	andwf	___flge@ff2,w
 16208  36A3  00E2               	movwf	??___flge
 16209  36A4  3000               	movlw	0
 16210  36A5  055F               	andwf	___flge@ff2+1,w
 16211  36A6  00E3               	movwf	??___flge+1
 16212  36A7  3080               	movlw	128
 16213  36A8  0560               	andwf	___flge@ff2+2,w
 16214  36A9  00E4               	movwf	??___flge+2
 16215  36AA  307F               	movlw	127
 16216  36AB  0561               	andwf	___flge@ff2+3,w
 16217  36AC  00E5               	movwf	??___flge+3
 16218  36AD  0865               	movf	??___flge+3,w
 16219  36AE  0464               	iorwf	??___flge+2,w
 16220  36AF  0463               	iorwf	??___flge+1,w
 16221  36B0  0462               	iorwf	??___flge,w
 16222  36B1  1D03               	skipz
 16223  36B2  2EBB               	goto	l4995
 16224  36B3  3000               	movlw	0
 16225  36B4  00E1               	movwf	___flge@ff2+3
 16226  36B5  3000               	movlw	0
 16227  36B6  00E0               	movwf	___flge@ff2+2
 16228  36B7  3000               	movlw	0
 16229  36B8  00DF               	movwf	___flge@ff2+1
 16230  36B9  3000               	movlw	0
 16231  36BA  00DE               	movwf	___flge@ff2
 16232  36BB                     l4995:	
 16233  36BB  1FDD               	btfss	___flge@ff1+3,7
 16234  36BC  2ED5               	goto	l4999
 16235  36BD  3000               	movlw	0
 16236  36BE  00E2               	movwf	??___flge
 16237  36BF  3000               	movlw	0
 16238  36C0  00E3               	movwf	??___flge+1
 16239  36C1  3000               	movlw	0
 16240  36C2  00E4               	movwf	??___flge+2
 16241  36C3  3080               	movlw	128
 16242  36C4  00E5               	movwf	??___flge+3
 16243  36C5  085A               	movf	___flge@ff1,w
 16244  36C6  02E2               	subwf	??___flge,f
 16245  36C7  085B               	movf	___flge@ff1+1,w
 16246  36C8  3BE3               	subwfb	??___flge+1,f
 16247  36C9  085C               	movf	___flge@ff1+2,w
 16248  36CA  3BE4               	subwfb	??___flge+2,f
 16249  36CB  085D               	movf	___flge@ff1+3,w
 16250  36CC  3BE5               	subwfb	??___flge+3,f
 16251  36CD  0865               	movf	??___flge+3,w
 16252  36CE  00DD               	movwf	___flge@ff1+3
 16253  36CF  0864               	movf	??___flge+2,w
 16254  36D0  00DC               	movwf	___flge@ff1+2
 16255  36D1  0863               	movf	??___flge+1,w
 16256  36D2  00DB               	movwf	___flge@ff1+1
 16257  36D3  0862               	movf	??___flge,w
 16258  36D4  00DA               	movwf	___flge@ff1
 16259  36D5                     l4999:	
 16260  36D5  1FE1               	btfss	___flge@ff2+3,7
 16261  36D6  2EEF               	goto	l1140
 16262  36D7  3000               	movlw	0
 16263  36D8  00E2               	movwf	??___flge
 16264  36D9  3000               	movlw	0
 16265  36DA  00E3               	movwf	??___flge+1
 16266  36DB  3000               	movlw	0
 16267  36DC  00E4               	movwf	??___flge+2
 16268  36DD  3080               	movlw	128
 16269  36DE  00E5               	movwf	??___flge+3
 16270  36DF  085E               	movf	___flge@ff2,w
 16271  36E0  02E2               	subwf	??___flge,f
 16272  36E1  085F               	movf	___flge@ff2+1,w
 16273  36E2  3BE3               	subwfb	??___flge+1,f
 16274  36E3  0860               	movf	___flge@ff2+2,w
 16275  36E4  3BE4               	subwfb	??___flge+2,f
 16276  36E5  0861               	movf	___flge@ff2+3,w
 16277  36E6  3BE5               	subwfb	??___flge+3,f
 16278  36E7  0865               	movf	??___flge+3,w
 16279  36E8  00E1               	movwf	___flge@ff2+3
 16280  36E9  0864               	movf	??___flge+2,w
 16281  36EA  00E0               	movwf	___flge@ff2+2
 16282  36EB  0863               	movf	??___flge+1,w
 16283  36EC  00DF               	movwf	___flge@ff2+1
 16284  36ED  0862               	movf	??___flge,w
 16285  36EE  00DE               	movwf	___flge@ff2
 16286  36EF                     l1140:	
 16287  36EF  3080               	movlw	128
 16288  36F0  06DD               	xorwf	___flge@ff1+3,f
 16289  36F1  3080               	movlw	128
 16290  36F2  06E1               	xorwf	___flge@ff2+3,f
 16291  36F3  0861               	movf	___flge@ff2+3,w
 16292  36F4  025D               	subwf	___flge@ff1+3,w
 16293  36F5  1D03               	skipz
 16294  36F6  0008               	return
 16295  36F7  0860               	movf	___flge@ff2+2,w
 16296  36F8  025C               	subwf	___flge@ff1+2,w
 16297  36F9  1D03               	skipz
 16298  36FA  0008               	return
 16299  36FB  085F               	movf	___flge@ff2+1,w
 16300  36FC  025B               	subwf	___flge@ff1+1,w
 16301  36FD  1D03               	skipz
 16302  36FE  0008               	return
 16303  36FF  085E               	movf	___flge@ff2,w
 16304  3700  025A               	subwf	___flge@ff1,w
 16305  3701  0008               	return
 16306  3702                     __end_of___flge:	
 16307                           
 16308                           	psect	text53
 16309  2F25                     __ptext53:	
 16310 ;; *************** function _setCellUndervoltageProtection *****************
 16311 ;; Defined at:
 16312 ;;		line 127 in file "BQ76920.c"
 16313 ;; Parameters:    Size  Location     Type
 16314 ;;  voltage_mV      2   18[BANK0 ] int 
 16315 ;;  delay_s         2   20[BANK0 ] int 
 16316 ;; Auto vars:     Size  Location     Type
 16317 ;;  i               2   37[BANK0 ] int 
 16318 ;;  uv_trip         1   36[BANK0 ] unsigned char 
 16319 ;; Return value:  Size  Location     Type
 16320 ;;                  1    wreg      void 
 16321 ;; Registers used:
 16322 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16323 ;; Tracked objects:
 16324 ;;		On entry : 0/0
 16325 ;;		On exit  : 0/0
 16326 ;;		Unchanged: 0/0
 16327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16328 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16329 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16330 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16331 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16332 ;;Total ram usage:       21 bytes
 16333 ;; Hardware stack levels used:    1
 16334 ;; Hardware stack levels required when called:    3
 16335 ;; This function calls:
 16336 ;;		_I2C_writeRegister
 16337 ;;		___aldiv
 16338 ;;		___lmul
 16339 ;;		_readRegister
 16340 ;; This function is called by:
 16341 ;;		_init_AFE
 16342 ;; This function uses a non-reentrant model
 16343 ;;
 16344                           
 16345                           
 16346                           ;psect for function _setCellUndervoltageProtection
 16347  2F25                     _setCellUndervoltageProtection:	
 16348                           
 16349                           ;BQ76920.c: 129:     minCellVoltage = voltage_mV;
 16350                           
 16351                           ;incstack = 0
 16352                           ; Regs used in _setCellUndervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+csta
      +                          ck]
 16353  2F25  0020               	movlb	0	; select bank0
 16354  2F26  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 16355  2F27  0023               	movlb	3	; select bank3
 16356  2F28  00BD               	movwf	(_minCellVoltage+1)^(0+384)
 16357  2F29  0020               	movlb	0	; select bank0
 16358  2F2A  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 16359  2F2B  0023               	movlb	3	; select bank3
 16360  2F2C  00BC               	movwf	_minCellVoltage^(0+384)
 16361                           
 16362                           ;BQ76920.c: 131:     protect3.regByte = readRegister(0x18, 0x08);
 16363  2F2D  3018               	movlw	24
 16364  2F2E  00F5               	movwf	readRegister@slaveAddress
 16365  2F2F  3000               	movlw	0
 16366  2F30  00F6               	movwf	readRegister@slaveAddress+1
 16367  2F31  3008               	movlw	8
 16368  2F32  00F7               	movwf	readRegister@regAddress
 16369  2F33  3000               	movlw	0
 16370  2F34  00F8               	movwf	readRegister@regAddress+1
 16371  2F35  31B1  2180  31AF   	fcall	_readRegister
 16372  2F38  0875               	movf	?_readRegister,w
 16373  2F39  0020               	movlb	0	; select bank0
 16374  2F3A  00B6               	movwf	??_setCellUndervoltageProtection
 16375  2F3B  0836               	movf	??_setCellUndervoltageProtection,w
 16376  2F3C  0023               	movlb	3	; select bank3
 16377  2F3D  00CC               	movwf	BQ76920@protect3^(0+384)
 16378                           
 16379                           ;BQ76920.c: 132:     uv_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 16380  2F3E  0855               	movf	_adcGain^(0+384),w
 16381  2F3F  0020               	movlb	0	; select bank0
 16382  2F40  00A4               	movwf	___aldiv@divisor
 16383  2F41  0023               	movlb	3	; select bank3
 16384  2F42  0856               	movf	(_adcGain+1)^(0+384),w
 16385  2F43  0020               	movlb	0	; select bank0
 16386  2F44  00A5               	movwf	___aldiv@divisor+1
 16387  2F45  0D89               	rlf	9,f
 16388  2F46  3B89               	subwfb	9,f
 16389  2F47  0989               	comf	9,f
 16390  2F48  00A6               	movwf	___aldiv@divisor+2
 16391  2F49  00A7               	movwf	___aldiv@divisor+3
 16392  2F4A  0023               	movlb	3	; select bank3
 16393  2F4B  084A               	movf	_adcOffset^(0+384),w
 16394  2F4C  0020               	movlb	0	; select bank0
 16395  2F4D  00B6               	movwf	??_setCellUndervoltageProtection
 16396  2F4E  0023               	movlb	3	; select bank3
 16397  2F4F  084B               	movf	(_adcOffset+1)^(0+384),w
 16398  2F50  0020               	movlb	0	; select bank0
 16399  2F51  00B7               	movwf	??_setCellUndervoltageProtection+1
 16400  2F52  3000               	movlw	0
 16401  2F53  1BB7               	btfsc	??_setCellUndervoltageProtection+1,7
 16402  2F54  30FF               	movlw	255
 16403  2F55  00B8               	movwf	??_setCellUndervoltageProtection+2
 16404  2F56  00B9               	movwf	??_setCellUndervoltageProtection+3
 16405  2F57  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 16406  2F58  00BA               	movwf	??_setCellUndervoltageProtection+4
 16407  2F59  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 16408  2F5A  00BB               	movwf	??_setCellUndervoltageProtection+5
 16409  2F5B  3000               	movlw	0
 16410  2F5C  1BBB               	btfsc	??_setCellUndervoltageProtection+5,7
 16411  2F5D  30FF               	movlw	255
 16412  2F5E  00BC               	movwf	??_setCellUndervoltageProtection+6
 16413  2F5F  00BD               	movwf	??_setCellUndervoltageProtection+7
 16414  2F60  0836               	movf	??_setCellUndervoltageProtection,w
 16415  2F61  02BA               	subwf	??_setCellUndervoltageProtection+4,f
 16416  2F62  0837               	movf	??_setCellUndervoltageProtection+1,w
 16417  2F63  3BBB               	subwfb	??_setCellUndervoltageProtection+5,f
 16418  2F64  0838               	movf	??_setCellUndervoltageProtection+2,w
 16419  2F65  3BBC               	subwfb	??_setCellUndervoltageProtection+6,f
 16420  2F66  0839               	movf	??_setCellUndervoltageProtection+3,w
 16421  2F67  3BBD               	subwfb	??_setCellUndervoltageProtection+7,f
 16422  2F68  083D               	movf	??_setCellUndervoltageProtection+7,w
 16423  2F69  00F4               	movwf	___lmul@multiplier+3
 16424  2F6A  083C               	movf	??_setCellUndervoltageProtection+6,w
 16425  2F6B  00F3               	movwf	___lmul@multiplier+2
 16426  2F6C  083B               	movf	??_setCellUndervoltageProtection+5,w
 16427  2F6D  00F2               	movwf	___lmul@multiplier+1
 16428  2F6E  083A               	movf	??_setCellUndervoltageProtection+4,w
 16429  2F6F  00F1               	movwf	___lmul@multiplier
 16430  2F70  3000               	movlw	0
 16431  2F71  00F8               	movwf	___lmul@multiplicand+3
 16432  2F72  3000               	movlw	0
 16433  2F73  00F7               	movwf	___lmul@multiplicand+2
 16434  2F74  3003               	movlw	3
 16435  2F75  00F6               	movwf	___lmul@multiplicand+1
 16436  2F76  30E8               	movlw	232
 16437  2F77  00F5               	movwf	___lmul@multiplicand
 16438  2F78  31B0  20E7  31AF   	fcall	___lmul
 16439  2F7B  0874               	movf	?___lmul+3,w
 16440  2F7C  0020               	movlb	0	; select bank0
 16441  2F7D  00AB               	movwf	___aldiv@dividend+3
 16442  2F7E  0873               	movf	?___lmul+2,w
 16443  2F7F  00AA               	movwf	___aldiv@dividend+2
 16444  2F80  0872               	movf	?___lmul+1,w
 16445  2F81  00A9               	movwf	___aldiv@dividend+1
 16446  2F82  0871               	movf	?___lmul,w
 16447  2F83  00A8               	movwf	___aldiv@dividend
 16448  2F84  31B7  277E  31AF   	fcall	___aldiv
 16449  2F87  0020               	movlb	0	; select bank0
 16450  2F88  0824               	movf	?___aldiv,w
 16451  2F89  00BE               	movwf	??_setCellUndervoltageProtection+8
 16452  2F8A  0825               	movf	?___aldiv+1,w
 16453  2F8B  00BF               	movwf	??_setCellUndervoltageProtection+9
 16454  2F8C  0826               	movf	?___aldiv+2,w
 16455  2F8D  00C0               	movwf	??_setCellUndervoltageProtection+10
 16456  2F8E  0827               	movf	?___aldiv+3,w
 16457  2F8F  00C1               	movwf	??_setCellUndervoltageProtection+11
 16458  2F90  3004               	movlw	4
 16459  2F91  00C2               	movwf	??_setCellUndervoltageProtection+12
 16460  2F92                     u11835:	
 16461  2F92  37C1               	asrf	??_setCellUndervoltageProtection+11,f
 16462  2F93  0CC0               	rrf	??_setCellUndervoltageProtection+10,f
 16463  2F94  0CBF               	rrf	??_setCellUndervoltageProtection+9,f
 16464  2F95  0CBE               	rrf	??_setCellUndervoltageProtection+8,f
 16465  2F96  0BC2               	decfsz	??_setCellUndervoltageProtection+12,f
 16466  2F97  2F92               	goto	u11835
 16467  2F98  083E               	movf	??_setCellUndervoltageProtection+8,w
 16468  2F99  00C3               	movwf	??_setCellUndervoltageProtection+13
 16469  2F9A  0843               	movf	??_setCellUndervoltageProtection+13,w
 16470  2F9B  00C4               	movwf	setCellUndervoltageProtection@uv_trip
 16471                           
 16472                           ;BQ76920.c: 133:     uv_trip += 1;
 16473  2F9C  3001               	movlw	1
 16474  2F9D  00B6               	movwf	??_setCellUndervoltageProtection
 16475  2F9E  0836               	movf	??_setCellUndervoltageProtection,w
 16476  2F9F  07C4               	addwf	setCellUndervoltageProtection@uv_trip,f
 16477                           
 16478                           ;BQ76920.c: 134:     I2C_writeRegister(0x18, 0x0A, uv_trip);
 16479  2FA0  3018               	movlw	24
 16480  2FA1  00F5               	movwf	I2C_writeRegister@slaveAddress
 16481  2FA2  3000               	movlw	0
 16482  2FA3  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16483  2FA4  300A               	movlw	10
 16484  2FA5  00F7               	movwf	I2C_writeRegister@regAddress
 16485  2FA6  3000               	movlw	0
 16486  2FA7  00F8               	movwf	I2C_writeRegister@regAddress+1
 16487  2FA8  0844               	movf	setCellUndervoltageProtection@uv_trip,w
 16488  2FA9  00B6               	movwf	??_setCellUndervoltageProtection
 16489  2FAA  01B7               	clrf	??_setCellUndervoltageProtection+1
 16490  2FAB  0836               	movf	??_setCellUndervoltageProtection,w
 16491  2FAC  00F9               	movwf	I2C_writeRegister@data
 16492  2FAD  0837               	movf	??_setCellUndervoltageProtection+1,w
 16493  2FAE  00FA               	movwf	I2C_writeRegister@data+1
 16494  2FAF  3190  2000  31AF   	fcall	_I2C_writeRegister
 16495                           
 16496                           ;BQ76920.c: 136:     protect3.bits.UV_DELAY = 0;
 16497  2FB2  303F               	movlw	-193
 16498  2FB3  0023               	movlb	3	; select bank3
 16499  2FB4  05CC               	andwf	BQ76920@protect3^(0+384),f
 16500                           
 16501                           ;BQ76920.c: 137:     for (int i = 0; i < (sizeof(UV_delay_setting) / sizeof((UV_delay_se
      +                          tting)[0])) - 1; i++) {
 16502  2FB5  0020               	movlb	0	; select bank0
 16503  2FB6  01C5               	clrf	setCellUndervoltageProtection@i
 16504  2FB7  01C6               	clrf	setCellUndervoltageProtection@i+1
 16505  2FB8                     l8475:	
 16506                           
 16507                           ;BQ76920.c: 138:         if (delay_s >= UV_delay_setting[i]) {
 16508  2FB8  0846               	movf	setCellUndervoltageProtection@i+1,w
 16509  2FB9  0085               	movwf	5
 16510  2FBA  0845               	movf	setCellUndervoltageProtection@i,w
 16511  2FBB  0084               	movwf	4
 16512  2FBC  3584               	lslf	4,f
 16513  2FBD  0D85               	rlf	5,f
 16514  2FBE  3026               	movlw	low (_UV_delay_setting| (0+32768))
 16515  2FBF  0784               	addwf	4,f
 16516  2FC0  30BB               	movlw	high (_UV_delay_setting| (0+32768))
 16517  2FC1  3D85               	addwfc	5,f
 16518  2FC2  3F00               	moviw [0]fsr0
 16519  2FC3  00B6               	movwf	??_setCellUndervoltageProtection
 16520  2FC4  3F01               	moviw [1]fsr0
 16521  2FC5  00B7               	movwf	??_setCellUndervoltageProtection+1
 16522  2FC6  0835               	movf	setCellUndervoltageProtection@delay_s+1,w
 16523  2FC7  3A80               	xorlw	128
 16524  2FC8  00B8               	movwf	??_setCellUndervoltageProtection+2
 16525  2FC9  0837               	movf	??_setCellUndervoltageProtection+1,w
 16526  2FCA  3A80               	xorlw	128
 16527  2FCB  0238               	subwf	??_setCellUndervoltageProtection+2,w
 16528  2FCC  1D03               	skipz
 16529  2FCD  2FD0               	goto	u11845
 16530  2FCE  0836               	movf	??_setCellUndervoltageProtection,w
 16531  2FCF  0234               	subwf	setCellUndervoltageProtection@delay_s,w
 16532  2FD0                     u11845:	
 16533  2FD0  1C03               	skipc
 16534  2FD1  2FE0               	goto	l8479
 16535                           
 16536                           ;BQ76920.c: 139:             protect3.bits.UV_DELAY = i;
 16537  2FD2  0020               	movlb	0	; select bank0
 16538  2FD3  0845               	movf	setCellUndervoltageProtection@i,w
 16539  2FD4  00B6               	movwf	??_setCellUndervoltageProtection
 16540  2FD5  0EB6               	swapf	??_setCellUndervoltageProtection,f
 16541  2FD6  0DB6               	rlf	??_setCellUndervoltageProtection,f
 16542  2FD7  0DB6               	rlf	??_setCellUndervoltageProtection,f
 16543  2FD8  0023               	movlb	3	; select bank3
 16544  2FD9  084C               	movf	BQ76920@protect3^(0+384),w
 16545  2FDA  0020               	movlb	0	; select bank0
 16546  2FDB  0636               	xorwf	??_setCellUndervoltageProtection,w
 16547  2FDC  393F               	andlw	-193
 16548  2FDD  0636               	xorwf	??_setCellUndervoltageProtection,w
 16549  2FDE  0023               	movlb	3	; select bank3
 16550  2FDF  00CC               	movwf	BQ76920@protect3^(0+384)
 16551  2FE0                     l8479:	
 16552                           
 16553                           ;BQ76920.c: 141:     }
 16554  2FE0  3001               	movlw	1
 16555  2FE1  0020               	movlb	0	; select bank0
 16556  2FE2  07C5               	addwf	setCellUndervoltageProtection@i,f
 16557  2FE3  3000               	movlw	0
 16558  2FE4  3DC6               	addwfc	setCellUndervoltageProtection@i+1,f
 16559  2FE5  3000               	movlw	0
 16560  2FE6  0246               	subwf	setCellUndervoltageProtection@i+1,w
 16561  2FE7  3003               	movlw	3
 16562  2FE8  1903               	skipnz
 16563  2FE9  0245               	subwf	setCellUndervoltageProtection@i,w
 16564  2FEA  1C03               	skipc
 16565  2FEB  2FB8               	goto	l8475
 16566                           
 16567                           ;BQ76920.c: 142:     I2C_writeRegister(0x18, 0x08, protect3.regByte);
 16568  2FEC  3018               	movlw	24
 16569  2FED  00F5               	movwf	I2C_writeRegister@slaveAddress
 16570  2FEE  3000               	movlw	0
 16571  2FEF  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16572  2FF0  3008               	movlw	8
 16573  2FF1  00F7               	movwf	I2C_writeRegister@regAddress
 16574  2FF2  3000               	movlw	0
 16575  2FF3  00F8               	movwf	I2C_writeRegister@regAddress+1
 16576  2FF4  0023               	movlb	3	; select bank3
 16577  2FF5  084C               	movf	BQ76920@protect3^(0+384),w
 16578  2FF6  0020               	movlb	0	; select bank0
 16579  2FF7  00B6               	movwf	??_setCellUndervoltageProtection
 16580  2FF8  01B7               	clrf	??_setCellUndervoltageProtection+1
 16581  2FF9  0836               	movf	??_setCellUndervoltageProtection,w
 16582  2FFA  00F9               	movwf	I2C_writeRegister@data
 16583  2FFB  0837               	movf	??_setCellUndervoltageProtection+1,w
 16584  2FFC  00FA               	movwf	I2C_writeRegister@data+1
 16585  2FFD  3190  2000         	fcall	_I2C_writeRegister
 16586  2FFF  0008               	return
 16587  3000                     __end_of_setCellUndervoltageProtection:	
 16588                           
 16589                           	psect	text54
 16590  2CA4                     __ptext54:	
 16591 ;; *************** function _setCellOvervoltageProtection *****************
 16592 ;; Defined at:
 16593 ;;		line 148 in file "BQ76920.c"
 16594 ;; Parameters:    Size  Location     Type
 16595 ;;  voltage_mV      2   18[BANK0 ] int 
 16596 ;;  delay_s         2   20[BANK0 ] int 
 16597 ;; Auto vars:     Size  Location     Type
 16598 ;;  i               2   37[BANK0 ] int 
 16599 ;;  ov_trip         1   36[BANK0 ] unsigned char 
 16600 ;; Return value:  Size  Location     Type
 16601 ;;                  1    wreg      void 
 16602 ;; Registers used:
 16603 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16604 ;; Tracked objects:
 16605 ;;		On entry : 0/0
 16606 ;;		On exit  : 0/0
 16607 ;;		Unchanged: 0/0
 16608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16609 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16610 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16611 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16612 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16613 ;;Total ram usage:       21 bytes
 16614 ;; Hardware stack levels used:    1
 16615 ;; Hardware stack levels required when called:    3
 16616 ;; This function calls:
 16617 ;;		_I2C_writeRegister
 16618 ;;		___aldiv
 16619 ;;		___lmul
 16620 ;;		_readRegister
 16621 ;; This function is called by:
 16622 ;;		_init_AFE
 16623 ;; This function uses a non-reentrant model
 16624 ;;
 16625                           
 16626                           
 16627                           ;psect for function _setCellOvervoltageProtection
 16628  2CA4                     _setCellOvervoltageProtection:	
 16629                           
 16630                           ;BQ76920.c: 150:     maxCellVoltage = voltage_mV;
 16631                           
 16632                           ;incstack = 0
 16633                           ; Regs used in _setCellOvervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+cstac
      +                          k]
 16634  2CA4  0020               	movlb	0	; select bank0
 16635  2CA5  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 16636  2CA6  0023               	movlb	3	; select bank3
 16637  2CA7  00BF               	movwf	(_maxCellVoltage+1)^(0+384)
 16638  2CA8  0020               	movlb	0	; select bank0
 16639  2CA9  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 16640  2CAA  0023               	movlb	3	; select bank3
 16641  2CAB  00BE               	movwf	_maxCellVoltage^(0+384)
 16642                           
 16643                           ;BQ76920.c: 151:     protect3.regByte = readRegister(0x18, 0x08);
 16644  2CAC  3018               	movlw	24
 16645  2CAD  00F5               	movwf	readRegister@slaveAddress
 16646  2CAE  3000               	movlw	0
 16647  2CAF  00F6               	movwf	readRegister@slaveAddress+1
 16648  2CB0  3008               	movlw	8
 16649  2CB1  00F7               	movwf	readRegister@regAddress
 16650  2CB2  3000               	movlw	0
 16651  2CB3  00F8               	movwf	readRegister@regAddress+1
 16652  2CB4  31B1  2180  31AC   	fcall	_readRegister
 16653  2CB7  0875               	movf	?_readRegister,w
 16654  2CB8  0020               	movlb	0	; select bank0
 16655  2CB9  00B6               	movwf	??_setCellOvervoltageProtection
 16656  2CBA  0836               	movf	??_setCellOvervoltageProtection,w
 16657  2CBB  0023               	movlb	3	; select bank3
 16658  2CBC  00CC               	movwf	BQ76920@protect3^(0+384)
 16659                           
 16660                           ;BQ76920.c: 152:     ov_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 16661  2CBD  0855               	movf	_adcGain^(0+384),w
 16662  2CBE  0020               	movlb	0	; select bank0
 16663  2CBF  00A4               	movwf	___aldiv@divisor
 16664  2CC0  0023               	movlb	3	; select bank3
 16665  2CC1  0856               	movf	(_adcGain+1)^(0+384),w
 16666  2CC2  0020               	movlb	0	; select bank0
 16667  2CC3  00A5               	movwf	___aldiv@divisor+1
 16668  2CC4  0D89               	rlf	9,f
 16669  2CC5  3B89               	subwfb	9,f
 16670  2CC6  0989               	comf	9,f
 16671  2CC7  00A6               	movwf	___aldiv@divisor+2
 16672  2CC8  00A7               	movwf	___aldiv@divisor+3
 16673  2CC9  0023               	movlb	3	; select bank3
 16674  2CCA  084A               	movf	_adcOffset^(0+384),w
 16675  2CCB  0020               	movlb	0	; select bank0
 16676  2CCC  00B6               	movwf	??_setCellOvervoltageProtection
 16677  2CCD  0023               	movlb	3	; select bank3
 16678  2CCE  084B               	movf	(_adcOffset+1)^(0+384),w
 16679  2CCF  0020               	movlb	0	; select bank0
 16680  2CD0  00B7               	movwf	??_setCellOvervoltageProtection+1
 16681  2CD1  3000               	movlw	0
 16682  2CD2  1BB7               	btfsc	??_setCellOvervoltageProtection+1,7
 16683  2CD3  30FF               	movlw	255
 16684  2CD4  00B8               	movwf	??_setCellOvervoltageProtection+2
 16685  2CD5  00B9               	movwf	??_setCellOvervoltageProtection+3
 16686  2CD6  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 16687  2CD7  00BA               	movwf	??_setCellOvervoltageProtection+4
 16688  2CD8  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 16689  2CD9  00BB               	movwf	??_setCellOvervoltageProtection+5
 16690  2CDA  3000               	movlw	0
 16691  2CDB  1BBB               	btfsc	??_setCellOvervoltageProtection+5,7
 16692  2CDC  30FF               	movlw	255
 16693  2CDD  00BC               	movwf	??_setCellOvervoltageProtection+6
 16694  2CDE  00BD               	movwf	??_setCellOvervoltageProtection+7
 16695  2CDF  0836               	movf	??_setCellOvervoltageProtection,w
 16696  2CE0  02BA               	subwf	??_setCellOvervoltageProtection+4,f
 16697  2CE1  0837               	movf	??_setCellOvervoltageProtection+1,w
 16698  2CE2  3BBB               	subwfb	??_setCellOvervoltageProtection+5,f
 16699  2CE3  0838               	movf	??_setCellOvervoltageProtection+2,w
 16700  2CE4  3BBC               	subwfb	??_setCellOvervoltageProtection+6,f
 16701  2CE5  0839               	movf	??_setCellOvervoltageProtection+3,w
 16702  2CE6  3BBD               	subwfb	??_setCellOvervoltageProtection+7,f
 16703  2CE7  083D               	movf	??_setCellOvervoltageProtection+7,w
 16704  2CE8  00F4               	movwf	___lmul@multiplier+3
 16705  2CE9  083C               	movf	??_setCellOvervoltageProtection+6,w
 16706  2CEA  00F3               	movwf	___lmul@multiplier+2
 16707  2CEB  083B               	movf	??_setCellOvervoltageProtection+5,w
 16708  2CEC  00F2               	movwf	___lmul@multiplier+1
 16709  2CED  083A               	movf	??_setCellOvervoltageProtection+4,w
 16710  2CEE  00F1               	movwf	___lmul@multiplier
 16711  2CEF  3000               	movlw	0
 16712  2CF0  00F8               	movwf	___lmul@multiplicand+3
 16713  2CF1  3000               	movlw	0
 16714  2CF2  00F7               	movwf	___lmul@multiplicand+2
 16715  2CF3  3003               	movlw	3
 16716  2CF4  00F6               	movwf	___lmul@multiplicand+1
 16717  2CF5  30E8               	movlw	232
 16718  2CF6  00F5               	movwf	___lmul@multiplicand
 16719  2CF7  31B0  20E7  31AC   	fcall	___lmul
 16720  2CFA  0874               	movf	?___lmul+3,w
 16721  2CFB  0020               	movlb	0	; select bank0
 16722  2CFC  00AB               	movwf	___aldiv@dividend+3
 16723  2CFD  0873               	movf	?___lmul+2,w
 16724  2CFE  00AA               	movwf	___aldiv@dividend+2
 16725  2CFF  0872               	movf	?___lmul+1,w
 16726  2D00  00A9               	movwf	___aldiv@dividend+1
 16727  2D01  0871               	movf	?___lmul,w
 16728  2D02  00A8               	movwf	___aldiv@dividend
 16729  2D03  31B7  277E  31AC   	fcall	___aldiv
 16730  2D06  0020               	movlb	0	; select bank0
 16731  2D07  0824               	movf	?___aldiv,w
 16732  2D08  00BE               	movwf	??_setCellOvervoltageProtection+8
 16733  2D09  0825               	movf	?___aldiv+1,w
 16734  2D0A  00BF               	movwf	??_setCellOvervoltageProtection+9
 16735  2D0B  0826               	movf	?___aldiv+2,w
 16736  2D0C  00C0               	movwf	??_setCellOvervoltageProtection+10
 16737  2D0D  0827               	movf	?___aldiv+3,w
 16738  2D0E  00C1               	movwf	??_setCellOvervoltageProtection+11
 16739  2D0F  3004               	movlw	4
 16740  2D10  00C2               	movwf	??_setCellOvervoltageProtection+12
 16741  2D11                     u11865:	
 16742  2D11  37C1               	asrf	??_setCellOvervoltageProtection+11,f
 16743  2D12  0CC0               	rrf	??_setCellOvervoltageProtection+10,f
 16744  2D13  0CBF               	rrf	??_setCellOvervoltageProtection+9,f
 16745  2D14  0CBE               	rrf	??_setCellOvervoltageProtection+8,f
 16746  2D15  0BC2               	decfsz	??_setCellOvervoltageProtection+12,f
 16747  2D16  2D11               	goto	u11865
 16748  2D17  083E               	movf	??_setCellOvervoltageProtection+8,w
 16749  2D18  00C3               	movwf	??_setCellOvervoltageProtection+13
 16750  2D19  0843               	movf	??_setCellOvervoltageProtection+13,w
 16751  2D1A  00C4               	movwf	setCellOvervoltageProtection@ov_trip
 16752                           
 16753                           ;BQ76920.c: 153:     I2C_writeRegister(0x18, 0x09, ov_trip);
 16754  2D1B  3018               	movlw	24
 16755  2D1C  00F5               	movwf	I2C_writeRegister@slaveAddress
 16756  2D1D  3000               	movlw	0
 16757  2D1E  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16758  2D1F  3009               	movlw	9
 16759  2D20  00F7               	movwf	I2C_writeRegister@regAddress
 16760  2D21  3000               	movlw	0
 16761  2D22  00F8               	movwf	I2C_writeRegister@regAddress+1
 16762  2D23  0844               	movf	setCellOvervoltageProtection@ov_trip,w
 16763  2D24  00B6               	movwf	??_setCellOvervoltageProtection
 16764  2D25  01B7               	clrf	??_setCellOvervoltageProtection+1
 16765  2D26  0836               	movf	??_setCellOvervoltageProtection,w
 16766  2D27  00F9               	movwf	I2C_writeRegister@data
 16767  2D28  0837               	movf	??_setCellOvervoltageProtection+1,w
 16768  2D29  00FA               	movwf	I2C_writeRegister@data+1
 16769  2D2A  3190  2000  31AC   	fcall	_I2C_writeRegister
 16770                           
 16771                           ;BQ76920.c: 155:     for (int i = 0; i < (sizeof(OV_delay_setting) / sizeof((OV_delay_se
      +                          tting)[0])) - 1; i++) {
 16772  2D2D  0020               	movlb	0	; select bank0
 16773  2D2E  01C5               	clrf	setCellOvervoltageProtection@i
 16774  2D2F  01C6               	clrf	setCellOvervoltageProtection@i+1
 16775  2D30                     l8501:	
 16776                           
 16777                           ;BQ76920.c: 156:         if (delay_s >= OV_delay_setting[i]) {
 16778  2D30  0846               	movf	setCellOvervoltageProtection@i+1,w
 16779  2D31  0085               	movwf	5
 16780  2D32  0845               	movf	setCellOvervoltageProtection@i,w
 16781  2D33  0084               	movwf	4
 16782  2D34  3584               	lslf	4,f
 16783  2D35  0D85               	rlf	5,f
 16784  2D36  301E               	movlw	low (_OV_delay_setting| (0+32768))
 16785  2D37  0784               	addwf	4,f
 16786  2D38  30BB               	movlw	high (_OV_delay_setting| (0+32768))
 16787  2D39  3D85               	addwfc	5,f
 16788  2D3A  3F00               	moviw [0]fsr0
 16789  2D3B  00B6               	movwf	??_setCellOvervoltageProtection
 16790  2D3C  3F01               	moviw [1]fsr0
 16791  2D3D  00B7               	movwf	??_setCellOvervoltageProtection+1
 16792  2D3E  0835               	movf	setCellOvervoltageProtection@delay_s+1,w
 16793  2D3F  3A80               	xorlw	128
 16794  2D40  00B8               	movwf	??_setCellOvervoltageProtection+2
 16795  2D41  0837               	movf	??_setCellOvervoltageProtection+1,w
 16796  2D42  3A80               	xorlw	128
 16797  2D43  0238               	subwf	??_setCellOvervoltageProtection+2,w
 16798  2D44  1D03               	skipz
 16799  2D45  2D48               	goto	u11875
 16800  2D46  0836               	movf	??_setCellOvervoltageProtection,w
 16801  2D47  0234               	subwf	setCellOvervoltageProtection@delay_s,w
 16802  2D48                     u11875:	
 16803  2D48  1C03               	skipc
 16804  2D49  2D58               	goto	l8505
 16805                           
 16806                           ;BQ76920.c: 157:             protect3.bits.UV_DELAY = i;
 16807  2D4A  0020               	movlb	0	; select bank0
 16808  2D4B  0845               	movf	setCellOvervoltageProtection@i,w
 16809  2D4C  00B6               	movwf	??_setCellOvervoltageProtection
 16810  2D4D  0EB6               	swapf	??_setCellOvervoltageProtection,f
 16811  2D4E  0DB6               	rlf	??_setCellOvervoltageProtection,f
 16812  2D4F  0DB6               	rlf	??_setCellOvervoltageProtection,f
 16813  2D50  0023               	movlb	3	; select bank3
 16814  2D51  084C               	movf	BQ76920@protect3^(0+384),w
 16815  2D52  0020               	movlb	0	; select bank0
 16816  2D53  0636               	xorwf	??_setCellOvervoltageProtection,w
 16817  2D54  393F               	andlw	-193
 16818  2D55  0636               	xorwf	??_setCellOvervoltageProtection,w
 16819  2D56  0023               	movlb	3	; select bank3
 16820  2D57  00CC               	movwf	BQ76920@protect3^(0+384)
 16821  2D58                     l8505:	
 16822                           
 16823                           ;BQ76920.c: 159:     }
 16824  2D58  3001               	movlw	1
 16825  2D59  0020               	movlb	0	; select bank0
 16826  2D5A  07C5               	addwf	setCellOvervoltageProtection@i,f
 16827  2D5B  3000               	movlw	0
 16828  2D5C  3DC6               	addwfc	setCellOvervoltageProtection@i+1,f
 16829  2D5D  3000               	movlw	0
 16830  2D5E  0246               	subwf	setCellOvervoltageProtection@i+1,w
 16831  2D5F  3003               	movlw	3
 16832  2D60  1903               	skipnz
 16833  2D61  0245               	subwf	setCellOvervoltageProtection@i,w
 16834  2D62  1C03               	skipc
 16835  2D63  2D30               	goto	l8501
 16836                           
 16837                           ;BQ76920.c: 160:     I2C_writeRegister(0x18,0x08, protect3.regByte);
 16838  2D64  3018               	movlw	24
 16839  2D65  00F5               	movwf	I2C_writeRegister@slaveAddress
 16840  2D66  3000               	movlw	0
 16841  2D67  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16842  2D68  3008               	movlw	8
 16843  2D69  00F7               	movwf	I2C_writeRegister@regAddress
 16844  2D6A  3000               	movlw	0
 16845  2D6B  00F8               	movwf	I2C_writeRegister@regAddress+1
 16846  2D6C  0023               	movlb	3	; select bank3
 16847  2D6D  084C               	movf	BQ76920@protect3^(0+384),w
 16848  2D6E  0020               	movlb	0	; select bank0
 16849  2D6F  00B6               	movwf	??_setCellOvervoltageProtection
 16850  2D70  01B7               	clrf	??_setCellOvervoltageProtection+1
 16851  2D71  0836               	movf	??_setCellOvervoltageProtection,w
 16852  2D72  00F9               	movwf	I2C_writeRegister@data
 16853  2D73  0837               	movf	??_setCellOvervoltageProtection+1,w
 16854  2D74  00FA               	movwf	I2C_writeRegister@data+1
 16855  2D75  3190  2000         	fcall	_I2C_writeRegister
 16856  2D77  0008               	return
 16857  2D78                     __end_of_setCellOvervoltageProtection:	
 16858                           
 16859                           	psect	text55
 16860  180B                     __ptext55:	
 16861 ;; *************** function _beginAFEcommunication *****************
 16862 ;; Defined at:
 16863 ;;		line 23 in file "BQ76920.c"
 16864 ;; Parameters:    Size  Location     Type
 16865 ;;		None
 16866 ;; Auto vars:     Size  Location     Type
 16867 ;;  i               2   13[BANK0 ] int 
 16868 ;;  commSuccess     2   11[BANK0 ] int 
 16869 ;; Return value:  Size  Location     Type
 16870 ;;                  2    0[BANK0 ] int 
 16871 ;; Registers used:
 16872 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16873 ;; Tracked objects:
 16874 ;;		On entry : 0/0
 16875 ;;		On exit  : 0/0
 16876 ;;		Unchanged: 0/0
 16877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16878 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16879 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16880 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16881 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16882 ;;Total ram usage:       15 bytes
 16883 ;; Hardware stack levels used:    1
 16884 ;; Hardware stack levels required when called:    3
 16885 ;; This function calls:
 16886 ;;		_I2C_writeRegister
 16887 ;;		_readRegister
 16888 ;; This function is called by:
 16889 ;;		_statemachine
 16890 ;; This function uses a non-reentrant model
 16891 ;;
 16892                           
 16893                           
 16894                           ;psect for function _beginAFEcommunication
 16895  180B                     _beginAFEcommunication:	
 16896                           
 16897                           ;BQ76920.c: 25:     int commSuccess = 0;
 16898                           
 16899                           ;incstack = 0
 16900                           ; Regs used in _beginAFEcommunication: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16901  180B  0020               	movlb	0	; select bank0
 16902  180C  01AB               	clrf	beginAFEcommunication@commSuccess
 16903  180D  01AC               	clrf	beginAFEcommunication@commSuccess+1
 16904                           
 16905                           ;BQ76920.c: 28:     for (int i = 0; i < 4; i++) {
 16906  180E  01AD               	clrf	beginAFEcommunication@i
 16907  180F  01AE               	clrf	beginAFEcommunication@i+1
 16908  1810                     l8549:	
 16909                           
 16910                           ;BQ76920.c: 29:         cellVoltages[i] = 0;
 16911  1810  0020               	movlb	0	; select bank0
 16912  1811  352D               	lslf	beginAFEcommunication@i,w
 16913  1812  3E20               	addlw	(low (_cellVoltages| (0+512)))& (0+255)
 16914  1813  0086               	movwf	6
 16915  1814  3002               	movlw	2	; select bank4/5
 16916  1815  0087               	movwf	7
 16917  1816  3000               	movlw	0
 16918  1817  3FC0               	movwi [0]fsr1
 16919  1818  3FC1               	movwi [1]fsr1
 16920                           
 16921                           ;BQ76920.c: 30:     }
 16922  1819  3001               	movlw	1
 16923  181A  07AD               	addwf	beginAFEcommunication@i,f
 16924  181B  3000               	movlw	0
 16925  181C  3DAE               	addwfc	beginAFEcommunication@i+1,f
 16926  181D  082E               	movf	beginAFEcommunication@i+1,w
 16927  181E  3A80               	xorlw	128
 16928  181F  00A2               	movwf	??_beginAFEcommunication
 16929  1820  3080               	movlw	128
 16930  1821  0222               	subwf	??_beginAFEcommunication,w
 16931  1822  1D03               	skipz
 16932  1823  2826               	goto	u11915
 16933  1824  3004               	movlw	4
 16934  1825  022D               	subwf	beginAFEcommunication@i,w
 16935  1826                     u11915:	
 16936  1826  1C03               	skipc
 16937  1827  2810               	goto	l8549
 16938                           
 16939                           ;BQ76920.c: 33:     I2C_writeRegister(0x18, 0x0B, 0x19);
 16940  1828  3018               	movlw	24
 16941  1829  00F5               	movwf	I2C_writeRegister@slaveAddress
 16942  182A  3000               	movlw	0
 16943  182B  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16944  182C  300B               	movlw	11
 16945  182D  00F7               	movwf	I2C_writeRegister@regAddress
 16946  182E  3000               	movlw	0
 16947  182F  00F8               	movwf	I2C_writeRegister@regAddress+1
 16948  1830  3019               	movlw	25
 16949  1831  00F9               	movwf	I2C_writeRegister@data
 16950  1832  3000               	movlw	0
 16951  1833  00FA               	movwf	I2C_writeRegister@data+1
 16952  1834  3190  2000  3198   	fcall	_I2C_writeRegister
 16953                           
 16954                           ;BQ76920.c: 35:     if (readRegister(0x18, 0x0B) == 0x19) {
 16955  1837  3018               	movlw	24
 16956  1838  00F5               	movwf	readRegister@slaveAddress
 16957  1839  3000               	movlw	0
 16958  183A  00F6               	movwf	readRegister@slaveAddress+1
 16959  183B  300B               	movlw	11
 16960  183C  00F7               	movwf	readRegister@regAddress
 16961  183D  3000               	movlw	0
 16962  183E  00F8               	movwf	readRegister@regAddress+1
 16963  183F  31B1  2180  3198   	fcall	_readRegister
 16964  1842  3019               	movlw	25
 16965  1843  0675               	xorwf	?_readRegister,w
 16966  1844  0476               	iorwf	?_readRegister+1,w
 16967  1845  1D03               	btfss	3,2
 16968  1846  28B9               	goto	l448
 16969                           
 16970                           ;BQ76920.c: 36:         commSuccess = 1;
 16971  1847  3001               	movlw	1
 16972  1848  0020               	movlb	0	; select bank0
 16973  1849  00AB               	movwf	beginAFEcommunication@commSuccess
 16974  184A  3000               	movlw	0
 16975  184B  00AC               	movwf	beginAFEcommunication@commSuccess+1
 16976                           
 16977                           ;BQ76920.c: 40:         I2C_writeRegister(0x18, 0x04, 0x18);
 16978  184C  3018               	movlw	24
 16979  184D  00F5               	movwf	I2C_writeRegister@slaveAddress
 16980  184E  3000               	movlw	0
 16981  184F  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16982  1850  3004               	movlw	4
 16983  1851  00F7               	movwf	I2C_writeRegister@regAddress
 16984  1852  3000               	movlw	0
 16985  1853  00F8               	movwf	I2C_writeRegister@regAddress+1
 16986  1854  3018               	movlw	24
 16987  1855  00F9               	movwf	I2C_writeRegister@data
 16988  1856  3000               	movlw	0
 16989  1857  00FA               	movwf	I2C_writeRegister@data+1
 16990  1858  3190  2000  3198   	fcall	_I2C_writeRegister
 16991                           
 16992                           ;BQ76920.c: 41:         I2C_writeRegister(0x18, 0x05, 0x40);
 16993  185B  3018               	movlw	24
 16994  185C  00F5               	movwf	I2C_writeRegister@slaveAddress
 16995  185D  3000               	movlw	0
 16996  185E  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16997  185F  3005               	movlw	5
 16998  1860  00F7               	movwf	I2C_writeRegister@regAddress
 16999  1861  3000               	movlw	0
 17000  1862  00F8               	movwf	I2C_writeRegister@regAddress+1
 17001  1863  3040               	movlw	64
 17002  1864  00F9               	movwf	I2C_writeRegister@data
 17003  1865  3000               	movlw	0
 17004  1866  00FA               	movwf	I2C_writeRegister@data+1
 17005  1867  3190  2000  3198   	fcall	_I2C_writeRegister
 17006                           
 17007                           ;BQ76920.c: 44:         adcOffset = (signed int) readRegister(0x18, 0x51);
 17008  186A  3018               	movlw	24
 17009  186B  00F5               	movwf	readRegister@slaveAddress
 17010  186C  3000               	movlw	0
 17011  186D  00F6               	movwf	readRegister@slaveAddress+1
 17012  186E  3051               	movlw	81
 17013  186F  00F7               	movwf	readRegister@regAddress
 17014  1870  3000               	movlw	0
 17015  1871  00F8               	movwf	readRegister@regAddress+1
 17016  1872  31B1  2180  3198   	fcall	_readRegister
 17017  1875  0876               	movf	?_readRegister+1,w
 17018  1876  0023               	movlb	3	; select bank3
 17019  1877  00CB               	movwf	(_adcOffset+1)^(0+384)
 17020  1878  0875               	movf	?_readRegister,w
 17021  1879  00CA               	movwf	_adcOffset^(0+384)
 17022                           
 17023                           ;BQ76920.c: 45:         adcGain = 365 + (((readRegister(0x18, 0x50) & 0x0C) << 1) |
 17024  187A  3018               	movlw	24
 17025  187B  00F5               	movwf	readRegister@slaveAddress
 17026  187C  3000               	movlw	0
 17027  187D  00F6               	movwf	readRegister@slaveAddress+1
 17028  187E  3059               	movlw	89
 17029  187F  00F7               	movwf	readRegister@regAddress
 17030  1880  3000               	movlw	0
 17031  1881  00F8               	movwf	readRegister@regAddress+1
 17032  1882  31B1  2180  3198   	fcall	_readRegister
 17033  1885  0875               	movf	?_readRegister,w
 17034  1886  0020               	movlb	0	; select bank0
 17035  1887  00A2               	movwf	??_beginAFEcommunication
 17036  1888  0876               	movf	?_readRegister+1,w
 17037  1889  00A3               	movwf	??_beginAFEcommunication+1
 17038  188A  3005               	movlw	5
 17039  188B  00A4               	movwf	??_beginAFEcommunication+2
 17040  188C                     u11935:	
 17041  188C  0D23               	rlf	??_beginAFEcommunication+1,w
 17042  188D  0CA3               	rrf	??_beginAFEcommunication+1,f
 17043  188E  0CA2               	rrf	??_beginAFEcommunication,f
 17044  188F  0BA4               	decfsz	??_beginAFEcommunication+2,f
 17045  1890  288C               	goto	u11935
 17046  1891  3007               	movlw	7
 17047  1892  0522               	andwf	??_beginAFEcommunication,w
 17048  1893  00A5               	movwf	??_beginAFEcommunication+3
 17049  1894  3000               	movlw	0
 17050  1895  0523               	andwf	??_beginAFEcommunication+1,w
 17051  1896  00A6               	movwf	??_beginAFEcommunication+4
 17052  1897  3018               	movlw	24
 17053  1898  00F5               	movwf	readRegister@slaveAddress
 17054  1899  3000               	movlw	0
 17055  189A  00F6               	movwf	readRegister@slaveAddress+1
 17056  189B  3050               	movlw	80
 17057  189C  00F7               	movwf	readRegister@regAddress
 17058  189D  3000               	movlw	0
 17059  189E  00F8               	movwf	readRegister@regAddress+1
 17060  189F  31B1  2180         	fcall	_readRegister
 17061  18A1  300C               	movlw	12
 17062  18A2  0575               	andwf	?_readRegister,w
 17063  18A3  0020               	movlb	0	; select bank0
 17064  18A4  00A7               	movwf	??_beginAFEcommunication+5
 17065  18A5  3000               	movlw	0
 17066  18A6  0576               	andwf	?_readRegister+1,w
 17067  18A7  00A8               	movwf	??_beginAFEcommunication+6
 17068  18A8  35A7               	lslf	??_beginAFEcommunication+5,f
 17069  18A9  0DA8               	rlf	??_beginAFEcommunication+6,f
 17070  18AA  0825               	movf	??_beginAFEcommunication+3,w
 17071  18AB  0427               	iorwf	??_beginAFEcommunication+5,w
 17072  18AC  00A9               	movwf	??_beginAFEcommunication+7
 17073  18AD  0826               	movf	??_beginAFEcommunication+4,w
 17074  18AE  0428               	iorwf	??_beginAFEcommunication+6,w
 17075  18AF  00AA               	movwf	??_beginAFEcommunication+8
 17076  18B0  0829               	movf	??_beginAFEcommunication+7,w
 17077  18B1  3E6D               	addlw	109
 17078  18B2  0023               	movlb	3	; select bank3
 17079  18B3  00D5               	movwf	_adcGain^(0+384)
 17080  18B4  3001               	movlw	1
 17081  18B5  0020               	movlb	0	; select bank0
 17082  18B6  3D2A               	addwfc	??_beginAFEcommunication+8,w
 17083  18B7  0023               	movlb	3	; select bank3
 17084  18B8  00D6               	movwf	(_adcGain+1)^(0+384)
 17085  18B9                     l448:	
 17086                           ;BQ76920.c: 48:     }
 17087                           
 17088                           
 17089                           ;BQ76920.c: 49:     return commSuccess;
 17090  18B9  0020               	movlb	0	; select bank0
 17091  18BA  082C               	movf	beginAFEcommunication@commSuccess+1,w
 17092  18BB  00A1               	movwf	?_beginAFEcommunication+1
 17093  18BC  082B               	movf	beginAFEcommunication@commSuccess,w
 17094  18BD  00A0               	movwf	?_beginAFEcommunication
 17095  18BE  0008               	return
 17096  18BF                     __end_of_beginAFEcommunication:	
 17097                           
 17098                           	psect	text56
 17099  1000                     __ptext56:	
 17100 ;; *************** function _I2C_writeRegister *****************
 17101 ;; Defined at:
 17102 ;;		line 96 in file "I2C.c"
 17103 ;; Parameters:    Size  Location     Type
 17104 ;;  slaveAddress    2    5[COMMON] int 
 17105 ;;  regAddress      2    7[COMMON] int 
 17106 ;;  data            2    9[COMMON] int 
 17107 ;; Auto vars:     Size  Location     Type
 17108 ;;		None
 17109 ;; Return value:  Size  Location     Type
 17110 ;;                  1    wreg      void 
 17111 ;; Registers used:
 17112 ;;		wreg, status,2, status,0, pclath, cstack
 17113 ;; Tracked objects:
 17114 ;;		On entry : 0/0
 17115 ;;		On exit  : 0/0
 17116 ;;		Unchanged: 0/0
 17117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17118 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17121 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17122 ;;Total ram usage:        6 bytes
 17123 ;; Hardware stack levels used:    1
 17124 ;; Hardware stack levels required when called:    2
 17125 ;; This function calls:
 17126 ;;		_send_I2C_controlByte
 17127 ;;		_send_I2C_data
 17128 ;;		_send_I2C_startBit
 17129 ;;		_send_I2C_stopBit
 17130 ;; This function is called by:
 17131 ;;		_beginAFEcommunication
 17132 ;;		_setShortCircuitProtection
 17133 ;;		_setOverCurrentDischargeProtection
 17134 ;;		_setCellUndervoltageProtection
 17135 ;;		_setCellOvervoltageProtection
 17136 ;; This function uses a non-reentrant model
 17137 ;;
 17138                           
 17139                           
 17140                           ;psect for function _I2C_writeRegister
 17141  1000                     _I2C_writeRegister:	
 17142                           
 17143                           ;I2C.c: 97:     send_I2C_startBit();
 17144                           
 17145                           ;incstack = 0
 17146                           ; Regs used in _I2C_writeRegister: [wreg+status,2+status,0+pclath+cstack]
 17147  1000  31BE  263C  3190   	fcall	_send_I2C_startBit
 17148                           
 17149                           ;I2C.c: 98:     send_I2C_controlByte(slaveAddress, 0);
 17150  1003  0876               	movf	I2C_writeRegister@slaveAddress+1,w
 17151  1004  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 17152  1005  0875               	movf	I2C_writeRegister@slaveAddress,w
 17153  1006  00F1               	movwf	send_I2C_controlByte@BlockAddress
 17154  1007  3000               	movlw	0
 17155  1008  00F3               	movwf	send_I2C_controlByte@RW_bit
 17156  1009  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 17157  100A  31BE  2681  3190   	fcall	_send_I2C_controlByte
 17158                           
 17159                           ;I2C.c: 99:     send_I2C_data(regAddress);
 17160  100D  0878               	movf	I2C_writeRegister@regAddress+1,w
 17161  100E  00F2               	movwf	send_I2C_data@databyte+1
 17162  100F  0877               	movf	I2C_writeRegister@regAddress,w
 17163  1010  00F1               	movwf	send_I2C_data@databyte
 17164  1011  31BE  2666  3190   	fcall	_send_I2C_data
 17165                           
 17166                           ;I2C.c: 100:     send_I2C_data(data);
 17167  1014  087A               	movf	I2C_writeRegister@data+1,w
 17168  1015  00F2               	movwf	send_I2C_data@databyte+1
 17169  1016  0879               	movf	I2C_writeRegister@data,w
 17170  1017  00F1               	movwf	send_I2C_data@databyte
 17171  1018  31BE  2666  3190   	fcall	_send_I2C_data
 17172                           
 17173                           ;I2C.c: 101:     send_I2C_stopBit();
 17174  101B  31BE  2644         	fcall	_send_I2C_stopBit
 17175  101D  0008               	return
 17176  101E                     __end_of_I2C_writeRegister:	
 17177                           
 17178                           	psect	text57
 17179  3006                     __ptext57:	
 17180 ;; *************** function _RGB_AWAIT_AFE_CONN *****************
 17181 ;; Defined at:
 17182 ;;		line 43 in file "RGB.c"
 17183 ;; Parameters:    Size  Location     Type
 17184 ;;		None
 17185 ;; Auto vars:     Size  Location     Type
 17186 ;;		None
 17187 ;; Return value:  Size  Location     Type
 17188 ;;                  1    wreg      void 
 17189 ;; Registers used:
 17190 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17191 ;; Tracked objects:
 17192 ;;		On entry : 0/0
 17193 ;;		On exit  : 0/0
 17194 ;;		Unchanged: 0/0
 17195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17198 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17199 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17200 ;;Total ram usage:        1 bytes
 17201 ;; Hardware stack levels used:    1
 17202 ;; Hardware stack levels required when called:    2
 17203 ;; This function calls:
 17204 ;;		_RGB_color
 17205 ;; This function is called by:
 17206 ;;		_statemachine
 17207 ;; This function uses a non-reentrant model
 17208 ;;
 17209                           
 17210                           
 17211                           ;psect for function _RGB_AWAIT_AFE_CONN
 17212  3006                     _RGB_AWAIT_AFE_CONN:	
 17213                           
 17214                           ;RGB.c: 45:     if (toggleColor) {
 17215                           
 17216                           ;incstack = 0
 17217                           ; Regs used in _RGB_AWAIT_AFE_CONN: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17218  3006  087C               	movf	_toggleColor,w
 17219  3007  1903               	btfsc	3,2
 17220  3008  2818               	goto	l6871
 17221                           
 17222                           ;RGB.c: 46:         toggleColor = !toggleColor;
 17223  3009  087C               	movf	_toggleColor,w
 17224  300A  1D03               	btfss	3,2
 17225  300B  280E               	goto	u9490
 17226  300C  3001               	movlw	1
 17227  300D  280F               	goto	u9500
 17228  300E                     u9490:	
 17229  300E  3000               	movlw	0
 17230  300F                     u9500:	
 17231  300F  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 17232  3010  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 17233  3011  00FC               	movwf	_toggleColor
 17234                           
 17235                           ;RGB.c: 47:         RGB_color(0);
 17236  3012  3000               	movlw	0
 17237  3013  00F1               	movwf	RGB_color@color
 17238  3014  00F2               	movwf	RGB_color@color+1
 17239  3015  31BF  27DF         	fcall	_RGB_color
 17240                           
 17241                           ;RGB.c: 48:     } else {
 17242  3017  0008               	return
 17243  3018                     l6871:	
 17244                           
 17245                           ;RGB.c: 49:         toggleColor = !toggleColor;
 17246  3018  087C               	movf	_toggleColor,w
 17247  3019  1D03               	btfss	3,2
 17248  301A  281D               	goto	u9510
 17249  301B  3001               	movlw	1
 17250  301C  281E               	goto	u9520
 17251  301D                     u9510:	
 17252  301D  3000               	movlw	0
 17253  301E                     u9520:	
 17254  301E  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 17255  301F  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 17256  3020  00FC               	movwf	_toggleColor
 17257                           
 17258                           ;RGB.c: 50:         RGB_color(1);
 17259  3021  3001               	movlw	1
 17260  3022  00F1               	movwf	RGB_color@color
 17261  3023  3000               	movlw	0
 17262  3024  00F2               	movwf	RGB_color@color+1
 17263  3025  31BF  27DF         	fcall	_RGB_color
 17264  3027  0008               	return
 17265  3028                     __end_of_RGB_AWAIT_AFE_CONN:	
 17266                           
 17267                           	psect	text58
 17268  3FDF                     __ptext58:	
 17269 ;; *************** function _RGB_color *****************
 17270 ;; Defined at:
 17271 ;;		line 17 in file "RGB.c"
 17272 ;; Parameters:    Size  Location     Type
 17273 ;;  color           2    1[COMMON] int 
 17274 ;; Auto vars:     Size  Location     Type
 17275 ;;		None
 17276 ;; Return value:  Size  Location     Type
 17277 ;;                  1    wreg      void 
 17278 ;; Registers used:
 17279 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 17280 ;; Tracked objects:
 17281 ;;		On entry : 0/0
 17282 ;;		On exit  : 0/0
 17283 ;;		Unchanged: 0/0
 17284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17285 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17288 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17289 ;;Total ram usage:        2 bytes
 17290 ;; Hardware stack levels used:    1
 17291 ;; Hardware stack levels required when called:    1
 17292 ;; This function calls:
 17293 ;;		Nothing
 17294 ;; This function is called by:
 17295 ;;		_statemachine
 17296 ;;		_RGB_AWAIT_AFE_CONN
 17297 ;;		_watchdog_timeout_shutdown
 17298 ;; This function uses a non-reentrant model
 17299 ;;
 17300                           
 17301                           
 17302                           ;psect for function _RGB_color
 17303  3FDF                     _RGB_color:	
 17304                           
 17305                           ;RGB.c: 19:     switch (color) {
 17306                           
 17307                           ;incstack = 0
 17308                           ; Regs used in _RGB_color: [wreg-fsr0h+status,2+status,0]
 17309  3FDF  2FEF               	goto	l6685
 17310  3FE0                     l343:	
 17311                           ;RGB.c: 20:         case 0:
 17312                           
 17313                           
 17314                           ;RGB.c: 21:             LATAbits.LATA4 = 0;
 17315  3FE0  0022               	movlb	2	; select bank2
 17316  3FE1  120C               	bcf	12,4	;volatile
 17317                           
 17318                           ;RGB.c: 22:             LATAbits.LATA5 = 1;
 17319  3FE2  168C               	bsf	12,5	;volatile
 17320                           
 17321                           ;RGB.c: 23:             LATEbits.LATE0 = 1;
 17322  3FE3  1410               	bsf	16,0	;volatile
 17323                           
 17324                           ;RGB.c: 24:             break;
 17325  3FE4  0008               	return
 17326  3FE5                     l345:	
 17327                           ;RGB.c: 25:         case 1:
 17328                           
 17329                           
 17330                           ;RGB.c: 26:             LATAbits.LATA4 = 1;
 17331  3FE5  0022               	movlb	2	; select bank2
 17332  3FE6  160C               	bsf	12,4	;volatile
 17333                           
 17334                           ;RGB.c: 27:             LATAbits.LATA5 = 0;
 17335  3FE7  128C               	bcf	12,5	;volatile
 17336                           
 17337                           ;RGB.c: 28:             LATEbits.LATE0 = 1;
 17338  3FE8  1410               	bsf	16,0	;volatile
 17339                           
 17340                           ;RGB.c: 29:             break;
 17341  3FE9  0008               	return
 17342  3FEA                     l346:	
 17343                           ;RGB.c: 30:         case 2:
 17344                           
 17345                           
 17346                           ;RGB.c: 31:             LATAbits.LATA4 = 1;
 17347  3FEA  0022               	movlb	2	; select bank2
 17348  3FEB  160C               	bsf	12,4	;volatile
 17349                           
 17350                           ;RGB.c: 32:             LATAbits.LATA5 = 1;
 17351  3FEC  168C               	bsf	12,5	;volatile
 17352                           
 17353                           ;RGB.c: 33:             LATEbits.LATE0 = 0;
 17354  3FED  1010               	bcf	16,0	;volatile
 17355                           
 17356                           ;RGB.c: 34:             break;
 17357  3FEE  0008               	return
 17358  3FEF                     l6685:	
 17359                           
 17360                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17361                           ; Switch size 1, requested type "simple"
 17362                           ; Number of cases is 1, Range of values is 0 to 0
 17363                           ; switch strategies available:
 17364                           ; Name         Instructions Cycles
 17365                           ; simple_byte            4     3 (average)
 17366                           ; direct_byte            8     6 (fixed)
 17367                           ; jumptable            260     6 (fixed)
 17368                           ;	Chosen strategy is simple_byte
 17369  3FEF  0872               	movf	RGB_color@color+1,w
 17370  3FF0  3A00               	xorlw	0	; case 0
 17371  3FF1  1903               	skipnz
 17372  3FF2  2FF4               	goto	l8865
 17373  3FF3  2FFF               	goto	l347
 17374  3FF4                     l8865:	
 17375                           
 17376                           ; Switch size 1, requested type "simple"
 17377                           ; Number of cases is 3, Range of values is 0 to 2
 17378                           ; switch strategies available:
 17379                           ; Name         Instructions Cycles
 17380                           ; simple_byte           10     6 (average)
 17381                           ; direct_byte           12     6 (fixed)
 17382                           ; jumptable            260     6 (fixed)
 17383                           ;	Chosen strategy is simple_byte
 17384  3FF4  0871               	movf	RGB_color@color,w
 17385  3FF5  3A00               	xorlw	0	; case 0
 17386  3FF6  1903               	skipnz
 17387  3FF7  2FE0               	goto	l343
 17388  3FF8  3A01               	xorlw	1	; case 1
 17389  3FF9  1903               	skipnz
 17390  3FFA  2FE5               	goto	l345
 17391  3FFB  3A03               	xorlw	3	; case 2
 17392  3FFC  1903               	skipnz
 17393  3FFD  2FEA               	goto	l346
 17394  3FFE  2FFF               	goto	l347
 17395  3FFF                     l347:	
 17396  3FFF  0008               	return
 17397  4000                     __end_of_RGB_color:	
 17398                           
 17399                           	psect	text59
 17400  34E4                     __ptext59:	
 17401 ;; *************** function _AFE_getSetShortCircuitCurrent *****************
 17402 ;; Defined at:
 17403 ;;		line 221 in file "BQ76920.c"
 17404 ;; Parameters:    Size  Location     Type
 17405 ;;		None
 17406 ;; Auto vars:     Size  Location     Type
 17407 ;;		None
 17408 ;; Return value:  Size  Location     Type
 17409 ;;                  4    9[BANK1 ] long 
 17410 ;; Registers used:
 17411 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17412 ;; Tracked objects:
 17413 ;;		On entry : 0/0
 17414 ;;		On exit  : 0/0
 17415 ;;		Unchanged: 0/0
 17416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17417 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17419 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17420 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17421 ;;Total ram usage:        8 bytes
 17422 ;; Hardware stack levels used:    1
 17423 ;; Hardware stack levels required when called:    2
 17424 ;; This function calls:
 17425 ;;		___fldiv
 17426 ;;		___fltol
 17427 ;;		___xxtofl
 17428 ;; This function is called by:
 17429 ;;		_statemachine
 17430 ;; This function uses a non-reentrant model
 17431 ;;
 17432                           
 17433                           
 17434                           ;psect for function _AFE_getSetShortCircuitCurrent
 17435  34E4                     _AFE_getSetShortCircuitCurrent:	
 17436                           
 17437                           ;BQ76920.c: 222:     return (long) (SCD_threshold_setting[protect1.bits.SCD_THRESH]) / s
      +                          huntResistorValue_mOhm;
 17438                           
 17439                           ;incstack = 0
 17440                           ; Regs used in _AFE_getSetShortCircuitCurrent: [wreg-fsr0h+status,2+status,0+pclath+csta
      +                          ck]
 17441  34E4  0023               	movlb	3	; select bank3
 17442  34E5  084E               	movf	BQ76920@protect1^(0+384),w
 17443  34E6  3907               	andlw	7
 17444  34E7  0021               	movlb	1	; select bank1
 17445  34E8  00AD               	movwf	??_AFE_getSetShortCircuitCurrent^(0+128)
 17446  34E9  01AE               	clrf	(??_AFE_getSetShortCircuitCurrent^(0+128)+1)
 17447  34EA  35AD               	lslf	??_AFE_getSetShortCircuitCurrent^(0+128),f
 17448  34EB  0DAE               	rlf	(??_AFE_getSetShortCircuitCurrent^(0+128)+1),f
 17449  34EC  300E               	movlw	low (_SCD_threshold_setting| (0+32768))
 17450  34ED  072D               	addwf	??_AFE_getSetShortCircuitCurrent^(0+128),w
 17451  34EE  0084               	movwf	4
 17452  34EF  30BB               	movlw	high (_SCD_threshold_setting| (0+32768))
 17453  34F0  3D2E               	addwfc	(??_AFE_getSetShortCircuitCurrent+1)^(0+128),w
 17454  34F1  0085               	movwf	5
 17455  34F2  3F00               	moviw [0]fsr0
 17456  34F3  00AF               	movwf	(??_AFE_getSetShortCircuitCurrent+2)^(0+128)
 17457  34F4  3F01               	moviw [1]fsr0
 17458  34F5  00B0               	movwf	((??_AFE_getSetShortCircuitCurrent+2)^(0+128)+1)
 17459  34F6  082F               	movf	(??_AFE_getSetShortCircuitCurrent+2)^(0+128),w
 17460  34F7  00F1               	movwf	___xxtofl@val
 17461  34F8  0830               	movf	(??_AFE_getSetShortCircuitCurrent+3)^(0+128),w
 17462  34F9  00F2               	movwf	___xxtofl@val+1
 17463  34FA  0D89               	rlf	9,f
 17464  34FB  3B89               	subwfb	9,f
 17465  34FC  0989               	comf	9,f
 17466  34FD  00F3               	movwf	___xxtofl@val+2
 17467  34FE  00F4               	movwf	___xxtofl@val+3
 17468  34FF  3001               	movlw	1
 17469  3500  31A9  21FF  31B4   	fcall	___xxtofl
 17470  3503  0874               	movf	?___xxtofl+3,w
 17471  3504  0020               	movlb	0	; select bank0
 17472  3505  00C7               	movwf	___fldiv@b+3
 17473  3506  0873               	movf	?___xxtofl+2,w
 17474  3507  00C6               	movwf	___fldiv@b+2
 17475  3508  0872               	movf	?___xxtofl+1,w
 17476  3509  00C5               	movwf	___fldiv@b+1
 17477  350A  0871               	movf	?___xxtofl,w
 17478  350B  00C4               	movwf	___fldiv@b
 17479  350C  0023               	movlb	3	; select bank3
 17480  350D  082B               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 17481  350E  0020               	movlb	0	; select bank0
 17482  350F  00C3               	movwf	___fldiv@a+3
 17483  3510  0023               	movlb	3	; select bank3
 17484  3511  082A               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 17485  3512  0020               	movlb	0	; select bank0
 17486  3513  00C2               	movwf	___fldiv@a+2
 17487  3514  0023               	movlb	3	; select bank3
 17488  3515  0829               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 17489  3516  0020               	movlb	0	; select bank0
 17490  3517  00C1               	movwf	___fldiv@a+1
 17491  3518  0023               	movlb	3	; select bank3
 17492  3519  0828               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 17493  351A  0020               	movlb	0	; select bank0
 17494  351B  00C0               	movwf	___fldiv@a
 17495  351C  319C  24A4  31B4   	fcall	___fldiv
 17496  351F  0020               	movlb	0	; select bank0
 17497  3520  0843               	movf	?___fldiv+3,w
 17498  3521  0021               	movlb	1	; select bank1
 17499  3522  00A3               	movwf	(___fltol@f1+3)^(0+128)
 17500  3523  0020               	movlb	0	; select bank0
 17501  3524  0842               	movf	?___fldiv+2,w
 17502  3525  0021               	movlb	1	; select bank1
 17503  3526  00A2               	movwf	(___fltol@f1+2)^(0+128)
 17504  3527  0020               	movlb	0	; select bank0
 17505  3528  0841               	movf	?___fldiv+1,w
 17506  3529  0021               	movlb	1	; select bank1
 17507  352A  00A1               	movwf	(___fltol@f1+1)^(0+128)
 17508  352B  0020               	movlb	0	; select bank0
 17509  352C  0840               	movf	?___fldiv,w
 17510  352D  0021               	movlb	1	; select bank1
 17511  352E  00A0               	movwf	___fltol@f1^(0+128)
 17512  352F  31B5  253B         	fcall	___fltol
 17513  3531  0021               	movlb	1	; select bank1
 17514  3532  0823               	movf	(?___fltol+3)^(0+128),w
 17515  3533  00AC               	movwf	(?_AFE_getSetShortCircuitCurrent+3)^(0+128)
 17516  3534  0822               	movf	(?___fltol+2)^(0+128),w
 17517  3535  00AB               	movwf	(?_AFE_getSetShortCircuitCurrent+2)^(0+128)
 17518  3536  0821               	movf	(?___fltol+1)^(0+128),w
 17519  3537  00AA               	movwf	(?_AFE_getSetShortCircuitCurrent+1)^(0+128)
 17520  3538  0820               	movf	?___fltol^(0+128),w
 17521  3539  00A9               	movwf	?_AFE_getSetShortCircuitCurrent^(0+128)
 17522  353A  0008               	return
 17523  353B                     __end_of_AFE_getSetShortCircuitCurrent:	
 17524                           
 17525                           	psect	text60
 17526  3E8B                     __ptext60:	
 17527 ;; *************** function _AFE_getSetCurrentSenseRes *****************
 17528 ;; Defined at:
 17529 ;;		line 217 in file "BQ76920.c"
 17530 ;; Parameters:    Size  Location     Type
 17531 ;;		None
 17532 ;; Auto vars:     Size  Location     Type
 17533 ;;		None
 17534 ;; Return value:  Size  Location     Type
 17535 ;;                  4    1[COMMON] float 
 17536 ;; Registers used:
 17537 ;;		wreg
 17538 ;; Tracked objects:
 17539 ;;		On entry : 0/0
 17540 ;;		On exit  : 0/0
 17541 ;;		Unchanged: 0/0
 17542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17543 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17546 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17547 ;;Total ram usage:        4 bytes
 17548 ;; Hardware stack levels used:    1
 17549 ;; Hardware stack levels required when called:    1
 17550 ;; This function calls:
 17551 ;;		Nothing
 17552 ;; This function is called by:
 17553 ;;		_statemachine
 17554 ;; This function uses a non-reentrant model
 17555 ;;
 17556                           
 17557                           
 17558                           ;psect for function _AFE_getSetCurrentSenseRes
 17559  3E8B                     _AFE_getSetCurrentSenseRes:	
 17560                           
 17561                           ;BQ76920.c: 218:     return (float) shuntResistorValue_mOhm;
 17562                           
 17563                           ;incstack = 0
 17564                           ; Regs used in _AFE_getSetCurrentSenseRes: [wreg]
 17565  3E8B  0023               	movlb	3	; select bank3
 17566  3E8C  082B               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 17567  3E8D  00F4               	movwf	?_AFE_getSetCurrentSenseRes+3
 17568  3E8E  082A               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 17569  3E8F  00F3               	movwf	?_AFE_getSetCurrentSenseRes+2
 17570  3E90  0829               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 17571  3E91  00F2               	movwf	?_AFE_getSetCurrentSenseRes+1
 17572  3E92  0828               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 17573  3E93  00F1               	movwf	?_AFE_getSetCurrentSenseRes
 17574  3E94  0008               	return
 17575  3E95                     __end_of_AFE_getSetCurrentSenseRes:	
 17576                           
 17577                           	psect	text61
 17578  348D                     __ptext61:	
 17579 ;; *************** function _AFE_getOverCurrentDischargeCurrent *****************
 17580 ;; Defined at:
 17581 ;;		line 225 in file "BQ76920.c"
 17582 ;; Parameters:    Size  Location     Type
 17583 ;;		None
 17584 ;; Auto vars:     Size  Location     Type
 17585 ;;		None
 17586 ;; Return value:  Size  Location     Type
 17587 ;;                  4    9[BANK1 ] long 
 17588 ;; Registers used:
 17589 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17590 ;; Tracked objects:
 17591 ;;		On entry : 0/0
 17592 ;;		On exit  : 0/0
 17593 ;;		Unchanged: 0/0
 17594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17595 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17597 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17598 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17599 ;;Total ram usage:        8 bytes
 17600 ;; Hardware stack levels used:    1
 17601 ;; Hardware stack levels required when called:    2
 17602 ;; This function calls:
 17603 ;;		___fldiv
 17604 ;;		___fltol
 17605 ;;		___xxtofl
 17606 ;; This function is called by:
 17607 ;;		_statemachine
 17608 ;; This function uses a non-reentrant model
 17609 ;;
 17610                           
 17611                           
 17612                           ;psect for function _AFE_getOverCurrentDischargeCurrent
 17613  348D                     _AFE_getOverCurrentDischargeCurrent:	
 17614                           
 17615                           ;BQ76920.c: 226:     return (long) (OCD_threshold_setting[protect2.bits.OCD_THRESH]) / s
      +                          huntResistorValue_mOhm;
 17616                           
 17617                           ;incstack = 0
 17618                           ; Regs used in _AFE_getOverCurrentDischargeCurrent: [wreg-fsr0h+status,2+status,0+pclath
      +                          +cstack]
 17619  348D  0023               	movlb	3	; select bank3
 17620  348E  084D               	movf	BQ76920@protect2^(0+384),w
 17621  348F  390F               	andlw	15
 17622  3490  0021               	movlb	1	; select bank1
 17623  3491  00AD               	movwf	??_AFE_getOverCurrentDischargeCurrent^(0+128)
 17624  3492  01AE               	clrf	(??_AFE_getOverCurrentDischargeCurrent^(0+128)+1)
 17625  3493  35AD               	lslf	??_AFE_getOverCurrentDischargeCurrent^(0+128),f
 17626  3494  0DAE               	rlf	(??_AFE_getOverCurrentDischargeCurrent^(0+128)+1),f
 17627  3495  30EA               	movlw	low (_OCD_threshold_setting| (0+32768))
 17628  3496  072D               	addwf	??_AFE_getOverCurrentDischargeCurrent^(0+128),w
 17629  3497  0084               	movwf	4
 17630  3498  30B9               	movlw	high (_OCD_threshold_setting| (0+32768))
 17631  3499  3D2E               	addwfc	(??_AFE_getOverCurrentDischargeCurrent+1)^(0+128),w
 17632  349A  0085               	movwf	5
 17633  349B  3F00               	moviw [0]fsr0
 17634  349C  00AF               	movwf	(??_AFE_getOverCurrentDischargeCurrent+2)^(0+128)
 17635  349D  3F01               	moviw [1]fsr0
 17636  349E  00B0               	movwf	((??_AFE_getOverCurrentDischargeCurrent+2)^(0+128)+1)
 17637  349F  082F               	movf	(??_AFE_getOverCurrentDischargeCurrent+2)^(0+128),w
 17638  34A0  00F1               	movwf	___xxtofl@val
 17639  34A1  0830               	movf	(??_AFE_getOverCurrentDischargeCurrent+3)^(0+128),w
 17640  34A2  00F2               	movwf	___xxtofl@val+1
 17641  34A3  0D89               	rlf	9,f
 17642  34A4  3B89               	subwfb	9,f
 17643  34A5  0989               	comf	9,f
 17644  34A6  00F3               	movwf	___xxtofl@val+2
 17645  34A7  00F4               	movwf	___xxtofl@val+3
 17646  34A8  3001               	movlw	1
 17647  34A9  31A9  21FF  31B4   	fcall	___xxtofl
 17648  34AC  0874               	movf	?___xxtofl+3,w
 17649  34AD  0020               	movlb	0	; select bank0
 17650  34AE  00C7               	movwf	___fldiv@b+3
 17651  34AF  0873               	movf	?___xxtofl+2,w
 17652  34B0  00C6               	movwf	___fldiv@b+2
 17653  34B1  0872               	movf	?___xxtofl+1,w
 17654  34B2  00C5               	movwf	___fldiv@b+1
 17655  34B3  0871               	movf	?___xxtofl,w
 17656  34B4  00C4               	movwf	___fldiv@b
 17657  34B5  0023               	movlb	3	; select bank3
 17658  34B6  082B               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 17659  34B7  0020               	movlb	0	; select bank0
 17660  34B8  00C3               	movwf	___fldiv@a+3
 17661  34B9  0023               	movlb	3	; select bank3
 17662  34BA  082A               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 17663  34BB  0020               	movlb	0	; select bank0
 17664  34BC  00C2               	movwf	___fldiv@a+2
 17665  34BD  0023               	movlb	3	; select bank3
 17666  34BE  0829               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 17667  34BF  0020               	movlb	0	; select bank0
 17668  34C0  00C1               	movwf	___fldiv@a+1
 17669  34C1  0023               	movlb	3	; select bank3
 17670  34C2  0828               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 17671  34C3  0020               	movlb	0	; select bank0
 17672  34C4  00C0               	movwf	___fldiv@a
 17673  34C5  319C  24A4  31B4   	fcall	___fldiv
 17674  34C8  0020               	movlb	0	; select bank0
 17675  34C9  0843               	movf	?___fldiv+3,w
 17676  34CA  0021               	movlb	1	; select bank1
 17677  34CB  00A3               	movwf	(___fltol@f1+3)^(0+128)
 17678  34CC  0020               	movlb	0	; select bank0
 17679  34CD  0842               	movf	?___fldiv+2,w
 17680  34CE  0021               	movlb	1	; select bank1
 17681  34CF  00A2               	movwf	(___fltol@f1+2)^(0+128)
 17682  34D0  0020               	movlb	0	; select bank0
 17683  34D1  0841               	movf	?___fldiv+1,w
 17684  34D2  0021               	movlb	1	; select bank1
 17685  34D3  00A1               	movwf	(___fltol@f1+1)^(0+128)
 17686  34D4  0020               	movlb	0	; select bank0
 17687  34D5  0840               	movf	?___fldiv,w
 17688  34D6  0021               	movlb	1	; select bank1
 17689  34D7  00A0               	movwf	___fltol@f1^(0+128)
 17690  34D8  31B5  253B         	fcall	___fltol
 17691  34DA  0021               	movlb	1	; select bank1
 17692  34DB  0823               	movf	(?___fltol+3)^(0+128),w
 17693  34DC  00AC               	movwf	(?_AFE_getOverCurrentDischargeCurrent+3)^(0+128)
 17694  34DD  0822               	movf	(?___fltol+2)^(0+128),w
 17695  34DE  00AB               	movwf	(?_AFE_getOverCurrentDischargeCurrent+2)^(0+128)
 17696  34DF  0821               	movf	(?___fltol+1)^(0+128),w
 17697  34E0  00AA               	movwf	(?_AFE_getOverCurrentDischargeCurrent+1)^(0+128)
 17698  34E1  0820               	movf	?___fltol^(0+128),w
 17699  34E2  00A9               	movwf	?_AFE_getOverCurrentDischargeCurrent^(0+128)
 17700  34E3  0008               	return
 17701  34E4                     __end_of_AFE_getOverCurrentDischargeCurrent:	
 17702                           
 17703                           	psect	text62
 17704  3E2A                     __ptext62:	
 17705 ;; *************** function _AFE_UPDATE *****************
 17706 ;; Defined at:
 17707 ;;		line 166 in file "BQ76920.c"
 17708 ;; Parameters:    Size  Location     Type
 17709 ;;		None
 17710 ;; Auto vars:     Size  Location     Type
 17711 ;;		None
 17712 ;; Return value:  Size  Location     Type
 17713 ;;                  1    wreg      void 
 17714 ;; Registers used:
 17715 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17716 ;; Tracked objects:
 17717 ;;		On entry : 0/0
 17718 ;;		On exit  : 0/0
 17719 ;;		Unchanged: 0/0
 17720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17725 ;;Total ram usage:        0 bytes
 17726 ;; Hardware stack levels used:    1
 17727 ;; Hardware stack levels required when called:    4
 17728 ;; This function calls:
 17729 ;;		_updateVoltages
 17730 ;; This function is called by:
 17731 ;;		_statemachine
 17732 ;; This function uses a non-reentrant model
 17733 ;;
 17734                           
 17735                           
 17736                           ;psect for function _AFE_UPDATE
 17737  3E2A                     _AFE_UPDATE:	
 17738                           
 17739                           ;BQ76920.c: 168:     updateVoltages();
 17740                           
 17741                           ;incstack = 0
 17742                           ; Regs used in _AFE_UPDATE: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17743  3E2A  3190  201E         	fcall	_updateVoltages
 17744  3E2C  0008               	return
 17745  3E2D                     __end_of_AFE_UPDATE:	
 17746                           
 17747                           	psect	text63
 17748  101E                     __ptext63:	
 17749 ;; *************** function _updateVoltages *****************
 17750 ;; Defined at:
 17751 ;;		line 179 in file "BQ76920.c"
 17752 ;; Parameters:    Size  Location     Type
 17753 ;;		None
 17754 ;; Auto vars:     Size  Location     Type
 17755 ;;  i               2   20[BANK1 ] int 
 17756 ;;  adcVal          4   16[BANK1 ] long 
 17757 ;; Return value:  Size  Location     Type
 17758 ;;                  1    wreg      void 
 17759 ;; Registers used:
 17760 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17761 ;; Tracked objects:
 17762 ;;		On entry : 0/0
 17763 ;;		On exit  : 0/0
 17764 ;;		Unchanged: 0/0
 17765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17767 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17768 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17769 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17770 ;;Total ram usage:       13 bytes
 17771 ;; Hardware stack levels used:    1
 17772 ;; Hardware stack levels required when called:    3
 17773 ;; This function calls:
 17774 ;;		___aldiv
 17775 ;;		___fladd
 17776 ;;		___fldiv
 17777 ;;		___flmul
 17778 ;;		___fltol
 17779 ;;		___lmul
 17780 ;;		___xxtofl
 17781 ;;		_readRegister
 17782 ;;		_read_I2C_data
 17783 ;;		_send_I2C_ACK
 17784 ;;		_send_I2C_NACK
 17785 ;;		_send_I2C_controlByte
 17786 ;;		_send_I2C_data
 17787 ;;		_send_I2C_startBit
 17788 ;;		_send_I2C_stopBit
 17789 ;; This function is called by:
 17790 ;;		_AFE_UPDATE
 17791 ;; This function uses a non-reentrant model
 17792 ;;
 17793                           
 17794                           
 17795                           ;psect for function _updateVoltages
 17796  101E                     _updateVoltages:	
 17797                           
 17798                           ;BQ76920.c: 184:   adcVal = (readRegister(0x18, 0x2A) << 8) | readRegister(0x18, 0x2B);
 17799                           
 17800                           ;incstack = 0
 17801                           ; Regs used in _updateVoltages: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17802  101E  3018               	movlw	24
 17803  101F  00F5               	movwf	readRegister@slaveAddress
 17804  1020  3000               	movlw	0
 17805  1021  00F6               	movwf	readRegister@slaveAddress+1
 17806  1022  302A               	movlw	42
 17807  1023  00F7               	movwf	readRegister@regAddress
 17808  1024  3000               	movlw	0
 17809  1025  00F8               	movwf	readRegister@regAddress+1
 17810  1026  31B1  2180  3190   	fcall	_readRegister
 17811  1029  0875               	movf	?_readRegister,w
 17812  102A  0021               	movlb	1	; select bank1
 17813  102B  00A9               	movwf	??_updateVoltages^(0+128)
 17814  102C  0876               	movf	?_readRegister+1,w
 17815  102D  00AA               	movwf	(??_updateVoltages^(0+128)+1)
 17816  102E  0829               	movf	??_updateVoltages^(0+128),w
 17817  102F  00AA               	movwf	(??_updateVoltages^(0+128)+1)
 17818  1030  01A9               	clrf	??_updateVoltages^(0+128)
 17819  1031  3018               	movlw	24
 17820  1032  00F5               	movwf	readRegister@slaveAddress
 17821  1033  3000               	movlw	0
 17822  1034  00F6               	movwf	readRegister@slaveAddress+1
 17823  1035  302B               	movlw	43
 17824  1036  00F7               	movwf	readRegister@regAddress
 17825  1037  3000               	movlw	0
 17826  1038  00F8               	movwf	readRegister@regAddress+1
 17827  1039  31B1  2180  3190   	fcall	_readRegister
 17828  103C  0875               	movf	?_readRegister,w
 17829  103D  0021               	movlb	1	; select bank1
 17830  103E  0429               	iorwf	??_updateVoltages^(0+128),w
 17831  103F  00B0               	movwf	updateVoltages@adcVal^(0+128)
 17832  1040  0876               	movf	?_readRegister+1,w
 17833  1041  042A               	iorwf	(??_updateVoltages+1)^(0+128),w
 17834  1042  00B1               	movwf	(updateVoltages@adcVal+1)^(0+128)
 17835  1043  01B2               	clrf	(updateVoltages@adcVal^(0+128)+2)
 17836  1044  1BB1               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 17837  1045  03B2               	decf	(updateVoltages@adcVal+2)^(0+128),f
 17838  1046  0832               	movf	(updateVoltages@adcVal^(0+128)+2),w
 17839  1047  00B3               	movwf	(updateVoltages@adcVal+3)^(0+128)
 17840                           
 17841                           ;BQ76920.c: 185:   batVoltage = 4.0 * adcGain * adcVal / 1000.0 + 4 * adcOffset;
 17842  1048  0023               	movlb	3	; select bank3
 17843  1049  0855               	movf	_adcGain^(0+384),w
 17844  104A  00F1               	movwf	___xxtofl@val
 17845  104B  0856               	movf	(_adcGain+1)^(0+384),w
 17846  104C  00F2               	movwf	___xxtofl@val+1
 17847  104D  0D89               	rlf	9,f
 17848  104E  3B89               	subwfb	9,f
 17849  104F  0989               	comf	9,f
 17850  1050  00F3               	movwf	___xxtofl@val+2
 17851  1051  00F4               	movwf	___xxtofl@val+3
 17852  1052  3001               	movlw	1
 17853  1053  31A9  21FF  3190   	fcall	___xxtofl
 17854  1056  0874               	movf	?___xxtofl+3,w
 17855  1057  0020               	movlb	0	; select bank0
 17856  1058  00AD               	movwf	___flmul@a+3
 17857  1059  0873               	movf	?___xxtofl+2,w
 17858  105A  00AC               	movwf	___flmul@a+2
 17859  105B  0872               	movf	?___xxtofl+1,w
 17860  105C  00AB               	movwf	___flmul@a+1
 17861  105D  0871               	movf	?___xxtofl,w
 17862  105E  00AA               	movwf	___flmul@a
 17863  105F  3040               	movlw	64
 17864  1060  00A9               	movwf	___flmul@b+3
 17865  1061  3080               	movlw	128
 17866  1062  00A8               	movwf	___flmul@b+2
 17867  1063  3000               	movlw	0
 17868  1064  00A7               	movwf	___flmul@b+1
 17869  1065  3000               	movlw	0
 17870  1066  00A6               	movwf	___flmul@b
 17871  1067  3193  23A8  3190   	fcall	___flmul
 17872  106A  0020               	movlb	0	; select bank0
 17873  106B  0829               	movf	?___flmul+3,w
 17874  106C  0021               	movlb	1	; select bank1
 17875  106D  00AF               	movwf	(_updateVoltages$2113+3)^(0+128)
 17876  106E  0020               	movlb	0	; select bank0
 17877  106F  0828               	movf	?___flmul+2,w
 17878  1070  0021               	movlb	1	; select bank1
 17879  1071  00AE               	movwf	(_updateVoltages$2113+2)^(0+128)
 17880  1072  0020               	movlb	0	; select bank0
 17881  1073  0827               	movf	?___flmul+1,w
 17882  1074  0021               	movlb	1	; select bank1
 17883  1075  00AD               	movwf	(_updateVoltages$2113+1)^(0+128)
 17884  1076  0020               	movlb	0	; select bank0
 17885  1077  0826               	movf	?___flmul,w
 17886  1078  0021               	movlb	1	; select bank1
 17887  1079  00AC               	movwf	_updateVoltages$2113^(0+128)
 17888                           
 17889                           ;BQ76920.c: 185:   batVoltage = 4.0 * adcGain * adcVal / 1000.0 + 4 * adcOffset;
 17890  107A  082F               	movf	(_updateVoltages$2113+3)^(0+128),w
 17891  107B  0020               	movlb	0	; select bank0
 17892  107C  00AD               	movwf	___flmul@a+3
 17893  107D  0021               	movlb	1	; select bank1
 17894  107E  082E               	movf	(_updateVoltages$2113+2)^(0+128),w
 17895  107F  0020               	movlb	0	; select bank0
 17896  1080  00AC               	movwf	___flmul@a+2
 17897  1081  0021               	movlb	1	; select bank1
 17898  1082  082D               	movf	(_updateVoltages$2113+1)^(0+128),w
 17899  1083  0020               	movlb	0	; select bank0
 17900  1084  00AB               	movwf	___flmul@a+1
 17901  1085  0021               	movlb	1	; select bank1
 17902  1086  082C               	movf	_updateVoltages$2113^(0+128),w
 17903  1087  0020               	movlb	0	; select bank0
 17904  1088  00AA               	movwf	___flmul@a
 17905  1089  0021               	movlb	1	; select bank1
 17906  108A  0833               	movf	(updateVoltages@adcVal+3)^(0+128),w
 17907  108B  00F4               	movwf	___xxtofl@val+3
 17908  108C  0832               	movf	(updateVoltages@adcVal+2)^(0+128),w
 17909  108D  00F3               	movwf	___xxtofl@val+2
 17910  108E  0831               	movf	(updateVoltages@adcVal+1)^(0+128),w
 17911  108F  00F2               	movwf	___xxtofl@val+1
 17912  1090  0830               	movf	updateVoltages@adcVal^(0+128),w
 17913  1091  00F1               	movwf	___xxtofl@val
 17914  1092  3001               	movlw	1
 17915  1093  31A9  21FF  3190   	fcall	___xxtofl
 17916  1096  0874               	movf	?___xxtofl+3,w
 17917  1097  0020               	movlb	0	; select bank0
 17918  1098  00A9               	movwf	___flmul@b+3
 17919  1099  0873               	movf	?___xxtofl+2,w
 17920  109A  00A8               	movwf	___flmul@b+2
 17921  109B  0872               	movf	?___xxtofl+1,w
 17922  109C  00A7               	movwf	___flmul@b+1
 17923  109D  0871               	movf	?___xxtofl,w
 17924  109E  00A6               	movwf	___flmul@b
 17925  109F  3193  23A8  3190   	fcall	___flmul
 17926  10A2  0020               	movlb	0	; select bank0
 17927  10A3  0829               	movf	?___flmul+3,w
 17928  10A4  00C7               	movwf	___fldiv@b+3
 17929  10A5  0828               	movf	?___flmul+2,w
 17930  10A6  00C6               	movwf	___fldiv@b+2
 17931  10A7  0827               	movf	?___flmul+1,w
 17932  10A8  00C5               	movwf	___fldiv@b+1
 17933  10A9  0826               	movf	?___flmul,w
 17934  10AA  00C4               	movwf	___fldiv@b
 17935  10AB  3044               	movlw	68
 17936  10AC  00C3               	movwf	___fldiv@a+3
 17937  10AD  307A               	movlw	122
 17938  10AE  00C2               	movwf	___fldiv@a+2
 17939  10AF  3000               	movlw	0
 17940  10B0  00C1               	movwf	___fldiv@a+1
 17941  10B1  3000               	movlw	0
 17942  10B2  00C0               	movwf	___fldiv@a
 17943  10B3  319C  24A4  3190   	fcall	___fldiv
 17944  10B6  0020               	movlb	0	; select bank0
 17945  10B7  0843               	movf	?___fldiv+3,w
 17946  10B8  00E1               	movwf	___fladd@a+3
 17947  10B9  0842               	movf	?___fldiv+2,w
 17948  10BA  00E0               	movwf	___fladd@a+2
 17949  10BB  0841               	movf	?___fldiv+1,w
 17950  10BC  00DF               	movwf	___fladd@a+1
 17951  10BD  0840               	movf	?___fldiv,w
 17952  10BE  00DE               	movwf	___fladd@a
 17953  10BF  0023               	movlb	3	; select bank3
 17954  10C0  084B               	movf	(_adcOffset+1)^(0+384),w
 17955  10C1  0021               	movlb	1	; select bank1
 17956  10C2  00AA               	movwf	(??_updateVoltages^(0+128)+1)
 17957  10C3  0023               	movlb	3	; select bank3
 17958  10C4  084A               	movf	_adcOffset^(0+384),w
 17959  10C5  0021               	movlb	1	; select bank1
 17960  10C6  00A9               	movwf	??_updateVoltages^(0+128)
 17961  10C7  35A9               	lslf	??_updateVoltages^(0+128),f
 17962  10C8  0DAA               	rlf	(??_updateVoltages^(0+128)+1),f
 17963  10C9  35A9               	lslf	??_updateVoltages^(0+128),f
 17964  10CA  0DAA               	rlf	(??_updateVoltages^(0+128)+1),f
 17965  10CB  0829               	movf	??_updateVoltages^(0+128),w
 17966  10CC  00F1               	movwf	___xxtofl@val
 17967  10CD  082A               	movf	(??_updateVoltages+1)^(0+128),w
 17968  10CE  00F2               	movwf	___xxtofl@val+1
 17969  10CF  0D89               	rlf	9,f
 17970  10D0  3B89               	subwfb	9,f
 17971  10D1  0989               	comf	9,f
 17972  10D2  00F3               	movwf	___xxtofl@val+2
 17973  10D3  00F4               	movwf	___xxtofl@val+3
 17974  10D4  3001               	movlw	1
 17975  10D5  31A9  21FF  3190   	fcall	___xxtofl
 17976  10D8  0874               	movf	?___xxtofl+3,w
 17977  10D9  0020               	movlb	0	; select bank0
 17978  10DA  00DD               	movwf	___fladd@b+3
 17979  10DB  0873               	movf	?___xxtofl+2,w
 17980  10DC  00DC               	movwf	___fladd@b+2
 17981  10DD  0872               	movf	?___xxtofl+1,w
 17982  10DE  00DB               	movwf	___fladd@b+1
 17983  10DF  0871               	movf	?___xxtofl,w
 17984  10E0  00DA               	movwf	___fladd@b
 17985  10E1  319E  261E  3190   	fcall	___fladd
 17986  10E4  0020               	movlb	0	; select bank0
 17987  10E5  085D               	movf	?___fladd+3,w
 17988  10E6  0021               	movlb	1	; select bank1
 17989  10E7  00A3               	movwf	(___fltol@f1+3)^(0+128)
 17990  10E8  0020               	movlb	0	; select bank0
 17991  10E9  085C               	movf	?___fladd+2,w
 17992  10EA  0021               	movlb	1	; select bank1
 17993  10EB  00A2               	movwf	(___fltol@f1+2)^(0+128)
 17994  10EC  0020               	movlb	0	; select bank0
 17995  10ED  085B               	movf	?___fladd+1,w
 17996  10EE  0021               	movlb	1	; select bank1
 17997  10EF  00A1               	movwf	(___fltol@f1+1)^(0+128)
 17998  10F0  0020               	movlb	0	; select bank0
 17999  10F1  085A               	movf	?___fladd,w
 18000  10F2  0021               	movlb	1	; select bank1
 18001  10F3  00A0               	movwf	___fltol@f1^(0+128)
 18002  10F4  31B5  253B  3190   	fcall	___fltol
 18003  10F7  0021               	movlb	1	; select bank1
 18004  10F8  0823               	movf	(?___fltol+3)^(0+128),w
 18005  10F9  0023               	movlb	3	; select bank3
 18006  10FA  00AF               	movwf	(_batVoltage+3)^(0+384)
 18007  10FB  0021               	movlb	1	; select bank1
 18008  10FC  0822               	movf	(?___fltol+2)^(0+128),w
 18009  10FD  0023               	movlb	3	; select bank3
 18010  10FE  00AE               	movwf	(_batVoltage+2)^(0+384)
 18011  10FF  0021               	movlb	1	; select bank1
 18012  1100  0821               	movf	(?___fltol+1)^(0+128),w
 18013  1101  0023               	movlb	3	; select bank3
 18014  1102  00AD               	movwf	(_batVoltage+1)^(0+384)
 18015  1103  0021               	movlb	1	; select bank1
 18016  1104  0820               	movf	?___fltol^(0+128),w
 18017  1105  0023               	movlb	3	; select bank3
 18018  1106  00AC               	movwf	_batVoltage^(0+384)
 18019                           
 18020                           ;BQ76920.c: 188:     send_I2C_startBit();
 18021  1107  31BE  263C  3190   	fcall	_send_I2C_startBit
 18022                           
 18023                           ;BQ76920.c: 189:     send_I2C_controlByte(0x18, 0);
 18024  110A  3018               	movlw	24
 18025  110B  00F1               	movwf	send_I2C_controlByte@BlockAddress
 18026  110C  3000               	movlw	0
 18027  110D  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 18028  110E  3000               	movlw	0
 18029  110F  00F3               	movwf	send_I2C_controlByte@RW_bit
 18030  1110  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 18031  1111  31BE  2681  3190   	fcall	_send_I2C_controlByte
 18032                           
 18033                           ;BQ76920.c: 190:     send_I2C_data(0x0C);
 18034  1114  300C               	movlw	12
 18035  1115  00F1               	movwf	send_I2C_data@databyte
 18036  1116  3000               	movlw	0
 18037  1117  00F2               	movwf	send_I2C_data@databyte+1
 18038  1118  31BE  2666  3190   	fcall	_send_I2C_data
 18039                           
 18040                           ;BQ76920.c: 191:     send_I2C_stopBit();
 18041  111B  31BE  2644  3190   	fcall	_send_I2C_stopBit
 18042                           
 18043                           ;BQ76920.c: 192:     send_I2C_startBit();
 18044  111E  31BE  263C  3190   	fcall	_send_I2C_startBit
 18045                           
 18046                           ;BQ76920.c: 193:     send_I2C_controlByte(0x18, 1);
 18047  1121  3018               	movlw	24
 18048  1122  00F1               	movwf	send_I2C_controlByte@BlockAddress
 18049  1123  3000               	movlw	0
 18050  1124  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 18051  1125  3001               	movlw	1
 18052  1126  00F3               	movwf	send_I2C_controlByte@RW_bit
 18053  1127  3000               	movlw	0
 18054  1128  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 18055  1129  31BE  2681  3190   	fcall	_send_I2C_controlByte
 18056                           
 18057                           ;BQ76920.c: 195:     for(int i=0;i<numberOfCells;i++){
 18058  112C  0021               	movlb	1	; select bank1
 18059  112D  01B4               	clrf	updateVoltages@i^(0+128)
 18060  112E  01B5               	clrf	(updateVoltages@i+1)^(0+128)
 18061  112F                     l8539:	
 18062  112F  0835               	movf	(updateVoltages@i+1)^(0+128),w
 18063  1130  3A80               	xorlw	128
 18064  1131  00A9               	movwf	??_updateVoltages^(0+128)
 18065  1132  0023               	movlb	3	; select bank3
 18066  1133  0841               	movf	(_numberOfCells+1)^(0+384),w
 18067  1134  3A80               	xorlw	128
 18068  1135  0021               	movlb	1	; select bank1
 18069  1136  0229               	subwf	??_updateVoltages^(0+128),w
 18070  1137  1D03               	skipz
 18071  1138  293D               	goto	u11905
 18072  1139  0023               	movlb	3	; select bank3
 18073  113A  0840               	movf	_numberOfCells^(0+384),w
 18074  113B  0021               	movlb	1	; select bank1
 18075  113C  0234               	subwf	updateVoltages@i^(0+128),w
 18076  113D                     u11905:	
 18077  113D  1803               	btfsc	3,0
 18078  113E  29B4               	goto	l8541
 18079                           
 18080                           ;BQ76920.c: 197:       adcVal = ((read_I2C_data() & 0x3F ) << 8) | read_I2C_data();
 18081  113F  31BE  26AF  3190   	fcall	_read_I2C_data
 18082  1142  303F               	movlw	63
 18083  1143  0571               	andwf	?_read_I2C_data,w
 18084  1144  0021               	movlb	1	; select bank1
 18085  1145  00A9               	movwf	??_updateVoltages^(0+128)
 18086  1146  3000               	movlw	0
 18087  1147  0572               	andwf	?_read_I2C_data+1,w
 18088  1148  00AA               	movwf	(??_updateVoltages+1)^(0+128)
 18089  1149  0829               	movf	??_updateVoltages^(0+128),w
 18090  114A  00AA               	movwf	(??_updateVoltages^(0+128)+1)
 18091  114B  01A9               	clrf	??_updateVoltages^(0+128)
 18092  114C  31BE  26AF  3190   	fcall	_read_I2C_data
 18093  114F  0871               	movf	?_read_I2C_data,w
 18094  1150  0021               	movlb	1	; select bank1
 18095  1151  0429               	iorwf	??_updateVoltages^(0+128),w
 18096  1152  00B0               	movwf	updateVoltages@adcVal^(0+128)
 18097  1153  0872               	movf	?_read_I2C_data+1,w
 18098  1154  042A               	iorwf	(??_updateVoltages+1)^(0+128),w
 18099  1155  00B1               	movwf	(updateVoltages@adcVal+1)^(0+128)
 18100  1156  01B2               	clrf	(updateVoltages@adcVal+2)^(0+128)
 18101  1157  01B3               	clrf	(updateVoltages@adcVal+3)^(0+128)
 18102                           
 18103                           ;BQ76920.c: 203:       if(i<numberOfCells){ send_I2C_ACK(); }else{send_I2C_NACK(); }
 18104  1158  0835               	movf	(updateVoltages@i+1)^(0+128),w
 18105  1159  3A80               	xorlw	128
 18106  115A  00A9               	movwf	??_updateVoltages^(0+128)
 18107  115B  0023               	movlb	3	; select bank3
 18108  115C  0841               	movf	(_numberOfCells+1)^(0+384),w
 18109  115D  3A80               	xorlw	128
 18110  115E  0021               	movlb	1	; select bank1
 18111  115F  0229               	subwf	??_updateVoltages^(0+128),w
 18112  1160  1D03               	skipz
 18113  1161  2966               	goto	u11895
 18114  1162  0023               	movlb	3	; select bank3
 18115  1163  0840               	movf	_numberOfCells^(0+384),w
 18116  1164  0021               	movlb	1	; select bank1
 18117  1165  0234               	subwf	updateVoltages@i^(0+128),w
 18118  1166                     u11895:	
 18119  1166  1803               	skipnc
 18120  1167  296C               	goto	l8533
 18121  1168  31BE  266F  3190   	fcall	_send_I2C_ACK
 18122  116B  296F               	goto	l8535
 18123  116C                     l8533:	
 18124  116C  31BE  265D  3190   	fcall	_send_I2C_NACK
 18125  116F                     l8535:	
 18126                           
 18127                           ;BQ76920.c: 204:       cellVoltages[i] = adcVal * adcGain / 1000 + adcOffset;
 18128  116F  3000               	movlw	0
 18129  1170  0020               	movlb	0	; select bank0
 18130  1171  00A7               	movwf	___aldiv@divisor+3
 18131  1172  3000               	movlw	0
 18132  1173  00A6               	movwf	___aldiv@divisor+2
 18133  1174  3003               	movlw	3
 18134  1175  00A5               	movwf	___aldiv@divisor+1
 18135  1176  30E8               	movlw	232
 18136  1177  00A4               	movwf	___aldiv@divisor
 18137  1178  0023               	movlb	3	; select bank3
 18138  1179  0855               	movf	_adcGain^(0+384),w
 18139  117A  00F1               	movwf	___lmul@multiplier
 18140  117B  0856               	movf	(_adcGain+1)^(0+384),w
 18141  117C  00F2               	movwf	___lmul@multiplier+1
 18142  117D  0D89               	rlf	9,f
 18143  117E  3B89               	subwfb	9,f
 18144  117F  0989               	comf	9,f
 18145  1180  00F3               	movwf	___lmul@multiplier+2
 18146  1181  00F4               	movwf	___lmul@multiplier+3
 18147  1182  0021               	movlb	1	; select bank1
 18148  1183  0833               	movf	(updateVoltages@adcVal+3)^(0+128),w
 18149  1184  00F8               	movwf	___lmul@multiplicand+3
 18150  1185  0832               	movf	(updateVoltages@adcVal+2)^(0+128),w
 18151  1186  00F7               	movwf	___lmul@multiplicand+2
 18152  1187  0831               	movf	(updateVoltages@adcVal+1)^(0+128),w
 18153  1188  00F6               	movwf	___lmul@multiplicand+1
 18154  1189  0830               	movf	updateVoltages@adcVal^(0+128),w
 18155  118A  00F5               	movwf	___lmul@multiplicand
 18156  118B  31B0  20E7  3190   	fcall	___lmul
 18157  118E  0874               	movf	?___lmul+3,w
 18158  118F  0020               	movlb	0	; select bank0
 18159  1190  00AB               	movwf	___aldiv@dividend+3
 18160  1191  0873               	movf	?___lmul+2,w
 18161  1192  00AA               	movwf	___aldiv@dividend+2
 18162  1193  0872               	movf	?___lmul+1,w
 18163  1194  00A9               	movwf	___aldiv@dividend+1
 18164  1195  0871               	movf	?___lmul,w
 18165  1196  00A8               	movwf	___aldiv@dividend
 18166  1197  31B7  277E  3190   	fcall	___aldiv
 18167  119A  0023               	movlb	3	; select bank3
 18168  119B  084A               	movf	_adcOffset^(0+384),w
 18169  119C  0020               	movlb	0	; select bank0
 18170  119D  0724               	addwf	?___aldiv,w
 18171  119E  0021               	movlb	1	; select bank1
 18172  119F  00A9               	movwf	??_updateVoltages^(0+128)
 18173  11A0  0023               	movlb	3	; select bank3
 18174  11A1  084B               	movf	(_adcOffset+1)^(0+384),w
 18175  11A2  0020               	movlb	0	; select bank0
 18176  11A3  3D25               	addwfc	?___aldiv+1,w
 18177  11A4  0021               	movlb	1	; select bank1
 18178  11A5  00AA               	movwf	(??_updateVoltages+1)^(0+128)
 18179  11A6  3534               	lslf	updateVoltages@i^(0+128),w
 18180  11A7  3E20               	addlw	(low (_cellVoltages| (0+512)))& (0+255)
 18181  11A8  0086               	movwf	6
 18182  11A9  3002               	movlw	2	; select bank4/5
 18183  11AA  0087               	movwf	7
 18184  11AB  0829               	movf	??_updateVoltages^(0+128),w
 18185  11AC  3FC0               	movwi [0]fsr1
 18186  11AD  082A               	movf	(??_updateVoltages+1)^(0+128),w
 18187  11AE  3FC1               	movwi [1]fsr1
 18188                           
 18189                           ;BQ76920.c: 207:     }
 18190  11AF  3001               	movlw	1
 18191  11B0  07B4               	addwf	updateVoltages@i^(0+128),f
 18192  11B1  3000               	movlw	0
 18193  11B2  3DB5               	addwfc	(updateVoltages@i+1)^(0+128),f
 18194  11B3  292F               	goto	l8539
 18195  11B4                     l8541:	
 18196                           
 18197                           ;BQ76920.c: 209:     send_I2C_stopBit();
 18198  11B4  31BE  2644         	fcall	_send_I2C_stopBit
 18199  11B6  0008               	return
 18200  11B7                     __end_of_updateVoltages:	
 18201                           
 18202                           	psect	text64
 18203  3E6F                     __ptext64:	
 18204 ;; *************** function _send_I2C_ACK *****************
 18205 ;; Defined at:
 18206 ;;		line 76 in file "I2C.c"
 18207 ;; Parameters:    Size  Location     Type
 18208 ;;		None
 18209 ;; Auto vars:     Size  Location     Type
 18210 ;;		None
 18211 ;; Return value:  Size  Location     Type
 18212 ;;                  1    wreg      void 
 18213 ;; Registers used:
 18214 ;;		None
 18215 ;; Tracked objects:
 18216 ;;		On entry : 0/0
 18217 ;;		On exit  : 0/0
 18218 ;;		Unchanged: 0/0
 18219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18224 ;;Total ram usage:        0 bytes
 18225 ;; Hardware stack levels used:    1
 18226 ;; Hardware stack levels required when called:    1
 18227 ;; This function calls:
 18228 ;;		Nothing
 18229 ;; This function is called by:
 18230 ;;		_updateVoltages
 18231 ;; This function uses a non-reentrant model
 18232 ;;
 18233                           
 18234                           
 18235                           ;psect for function _send_I2C_ACK
 18236  3E6F                     _send_I2C_ACK:	
 18237                           
 18238                           ;I2C.c: 77:     PIR1bits.SSP1IF = 0;
 18239                           
 18240                           ;incstack = 0
 18241                           ; Regs used in _send_I2C_ACK: []
 18242  3E6F  0020               	movlb	0	; select bank0
 18243  3E70  1191               	bcf	17,3	;volatile
 18244                           
 18245                           ;I2C.c: 78:     SSPCON2bits.ACKDT = 0;
 18246  3E71  0024               	movlb	4	; select bank4
 18247  3E72  1296               	bcf	22,5	;volatile
 18248                           
 18249                           ;I2C.c: 79:     SSPCON2bits.ACKEN = 1;
 18250  3E73  1616               	bsf	22,4	;volatile
 18251  3E74                     l315:	
 18252                           ;I2C.c: 80:     while (!PIR1bits.SSP1IF);
 18253                           
 18254  3E74  0020               	movlb	0	; select bank0
 18255  3E75  1991               	btfsc	17,3	;volatile
 18256  3E76  0008               	return
 18257  3E77  2E74               	goto	l315
 18258  3E78                     __end_of_send_I2C_ACK:	
 18259                           
 18260                           	psect	text65
 18261  3180                     __ptext65:	
 18262 ;; *************** function _readRegister *****************
 18263 ;; Defined at:
 18264 ;;		line 107 in file "I2C.c"
 18265 ;; Parameters:    Size  Location     Type
 18266 ;;  slaveAddress    2    5[COMMON] int 
 18267 ;;  regAddress      2    7[COMMON] int 
 18268 ;; Auto vars:     Size  Location     Type
 18269 ;;  recievedData    2    9[COMMON] int 
 18270 ;; Return value:  Size  Location     Type
 18271 ;;                  2    5[COMMON] int 
 18272 ;; Registers used:
 18273 ;;		wreg, status,2, status,0, pclath, cstack
 18274 ;; Tracked objects:
 18275 ;;		On entry : 0/0
 18276 ;;		On exit  : 0/0
 18277 ;;		Unchanged: 0/0
 18278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18279 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18280 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18282 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18283 ;;Total ram usage:        6 bytes
 18284 ;; Hardware stack levels used:    1
 18285 ;; Hardware stack levels required when called:    2
 18286 ;; This function calls:
 18287 ;;		_read_I2C_data
 18288 ;;		_send_I2C_NACK
 18289 ;;		_send_I2C_controlByte
 18290 ;;		_send_I2C_data
 18291 ;;		_send_I2C_startBit
 18292 ;;		_send_I2C_stopBit
 18293 ;; This function is called by:
 18294 ;;		_beginAFEcommunication
 18295 ;;		_setCellUndervoltageProtection
 18296 ;;		_setCellOvervoltageProtection
 18297 ;;		_updateVoltages
 18298 ;;		_printotAFERegisters
 18299 ;; This function uses a non-reentrant model
 18300 ;;
 18301                           
 18302                           
 18303                           ;psect for function _readRegister
 18304  3180                     _readRegister:	
 18305                           
 18306                           ;I2C.c: 108:     int recievedData;;I2C.c: 109:     send_I2C_startBit();
 18307                           
 18308                           ;incstack = 0
 18309                           ; Regs used in _readRegister: [wreg+status,2+status,0+pclath+cstack]
 18310  3180  31BE  263C  31B1   	fcall	_send_I2C_startBit
 18311                           
 18312                           ;I2C.c: 110:     send_I2C_controlByte(slaveAddress, 0);
 18313  3183  0876               	movf	readRegister@slaveAddress+1,w
 18314  3184  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 18315  3185  0875               	movf	readRegister@slaveAddress,w
 18316  3186  00F1               	movwf	send_I2C_controlByte@BlockAddress
 18317  3187  3000               	movlw	0
 18318  3188  00F3               	movwf	send_I2C_controlByte@RW_bit
 18319  3189  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 18320  318A  31BE  2681  31B1   	fcall	_send_I2C_controlByte
 18321                           
 18322                           ;I2C.c: 111:     send_I2C_data(regAddress);
 18323  318D  0878               	movf	readRegister@regAddress+1,w
 18324  318E  00F2               	movwf	send_I2C_data@databyte+1
 18325  318F  0877               	movf	readRegister@regAddress,w
 18326  3190  00F1               	movwf	send_I2C_data@databyte
 18327  3191  31BE  2666  31B1   	fcall	_send_I2C_data
 18328                           
 18329                           ;I2C.c: 112:     send_I2C_stopBit();
 18330  3194  31BE  2644  31B1   	fcall	_send_I2C_stopBit
 18331                           
 18332                           ;I2C.c: 113:     send_I2C_startBit();
 18333  3197  31BE  263C  31B1   	fcall	_send_I2C_startBit
 18334                           
 18335                           ;I2C.c: 114:     send_I2C_controlByte(slaveAddress, 1);
 18336  319A  0876               	movf	readRegister@slaveAddress+1,w
 18337  319B  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 18338  319C  0875               	movf	readRegister@slaveAddress,w
 18339  319D  00F1               	movwf	send_I2C_controlByte@BlockAddress
 18340  319E  3001               	movlw	1
 18341  319F  00F3               	movwf	send_I2C_controlByte@RW_bit
 18342  31A0  3000               	movlw	0
 18343  31A1  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 18344  31A2  31BE  2681  31B1   	fcall	_send_I2C_controlByte
 18345                           
 18346                           ;I2C.c: 115:     recievedData = read_I2C_data();
 18347  31A5  31BE  26AF  31B1   	fcall	_read_I2C_data
 18348  31A8  0872               	movf	?_read_I2C_data+1,w
 18349  31A9  00FA               	movwf	readRegister@recievedData+1
 18350  31AA  0871               	movf	?_read_I2C_data,w
 18351  31AB  00F9               	movwf	readRegister@recievedData
 18352                           
 18353                           ;I2C.c: 116:     send_I2C_NACK();
 18354  31AC  31BE  265D  31B1   	fcall	_send_I2C_NACK
 18355                           
 18356                           ;I2C.c: 117:     send_I2C_stopBit();
 18357  31AF  31BE  2644         	fcall	_send_I2C_stopBit
 18358                           
 18359                           ;I2C.c: 118:     return recievedData;
 18360  31B1  087A               	movf	readRegister@recievedData+1,w
 18361  31B2  00F6               	movwf	?_readRegister+1
 18362  31B3  0879               	movf	readRegister@recievedData,w
 18363  31B4  00F5               	movwf	?_readRegister
 18364  31B5  0008               	return
 18365  31B6                     __end_of_readRegister:	
 18366                           
 18367                           	psect	text66
 18368  3E44                     __ptext66:	
 18369 ;; *************** function _send_I2C_stopBit *****************
 18370 ;; Defined at:
 18371 ;;		line 70 in file "I2C.c"
 18372 ;; Parameters:    Size  Location     Type
 18373 ;;		None
 18374 ;; Auto vars:     Size  Location     Type
 18375 ;;		None
 18376 ;; Return value:  Size  Location     Type
 18377 ;;                  1    wreg      void 
 18378 ;; Registers used:
 18379 ;;		None
 18380 ;; Tracked objects:
 18381 ;;		On entry : 0/0
 18382 ;;		On exit  : 0/0
 18383 ;;		Unchanged: 0/0
 18384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18389 ;;Total ram usage:        0 bytes
 18390 ;; Hardware stack levels used:    1
 18391 ;; Hardware stack levels required when called:    1
 18392 ;; This function calls:
 18393 ;;		Nothing
 18394 ;; This function is called by:
 18395 ;;		_I2C_writeRegister
 18396 ;;		_readRegister
 18397 ;;		_updateVoltages
 18398 ;; This function uses a non-reentrant model
 18399 ;;
 18400                           
 18401                           
 18402                           ;psect for function _send_I2C_stopBit
 18403  3E44                     _send_I2C_stopBit:	
 18404                           
 18405                           ;I2C.c: 71:     PIR1bits.SSP1IF = 0;
 18406                           
 18407                           ;incstack = 0
 18408                           ; Regs used in _send_I2C_stopBit: []
 18409  3E44  0020               	movlb	0	; select bank0
 18410  3E45  1191               	bcf	17,3	;volatile
 18411                           
 18412                           ;I2C.c: 72:     SSPCON2bits.PEN = 1;
 18413  3E46  0024               	movlb	4	; select bank4
 18414  3E47  1516               	bsf	22,2	;volatile
 18415  3E48                     l309:	
 18416                           ;I2C.c: 73:     while (!PIR1bits.SSP1IF);
 18417                           
 18418  3E48  0020               	movlb	0	; select bank0
 18419  3E49  1991               	btfsc	17,3	;volatile
 18420  3E4A  0008               	return
 18421  3E4B  2E48               	goto	l309
 18422  3E4C                     __end_of_send_I2C_stopBit:	
 18423                           
 18424                           	psect	text67
 18425  3E3C                     __ptext67:	
 18426 ;; *************** function _send_I2C_startBit *****************
 18427 ;; Defined at:
 18428 ;;		line 64 in file "I2C.c"
 18429 ;; Parameters:    Size  Location     Type
 18430 ;;		None
 18431 ;; Auto vars:     Size  Location     Type
 18432 ;;		None
 18433 ;; Return value:  Size  Location     Type
 18434 ;;                  1    wreg      void 
 18435 ;; Registers used:
 18436 ;;		None
 18437 ;; Tracked objects:
 18438 ;;		On entry : 0/0
 18439 ;;		On exit  : 0/0
 18440 ;;		Unchanged: 0/0
 18441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18446 ;;Total ram usage:        0 bytes
 18447 ;; Hardware stack levels used:    1
 18448 ;; Hardware stack levels required when called:    1
 18449 ;; This function calls:
 18450 ;;		Nothing
 18451 ;; This function is called by:
 18452 ;;		_I2C_writeRegister
 18453 ;;		_readRegister
 18454 ;;		_updateVoltages
 18455 ;; This function uses a non-reentrant model
 18456 ;;
 18457                           
 18458                           
 18459                           ;psect for function _send_I2C_startBit
 18460  3E3C                     _send_I2C_startBit:	
 18461                           
 18462                           ;I2C.c: 65:     PIR1bits.SSP1IF = 0;
 18463                           
 18464                           ;incstack = 0
 18465                           ; Regs used in _send_I2C_startBit: []
 18466  3E3C  0020               	movlb	0	; select bank0
 18467  3E3D  1191               	bcf	17,3	;volatile
 18468                           
 18469                           ;I2C.c: 66:     SSPCON2bits.SEN = 1;
 18470  3E3E  0024               	movlb	4	; select bank4
 18471  3E3F  1416               	bsf	22,0	;volatile
 18472  3E40                     l303:	
 18473                           ;I2C.c: 67:     while (!PIR1bits.SSP1IF);
 18474                           
 18475  3E40  0020               	movlb	0	; select bank0
 18476  3E41  1991               	btfsc	17,3	;volatile
 18477  3E42  0008               	return
 18478  3E43  2E40               	goto	l303
 18479  3E44                     __end_of_send_I2C_startBit:	
 18480                           
 18481                           	psect	text68
 18482  3E66                     __ptext68:	
 18483 ;; *************** function _send_I2C_data *****************
 18484 ;; Defined at:
 18485 ;;		line 33 in file "I2C.c"
 18486 ;; Parameters:    Size  Location     Type
 18487 ;;  databyte        2    1[COMMON] unsigned int 
 18488 ;; Auto vars:     Size  Location     Type
 18489 ;;		None
 18490 ;; Return value:  Size  Location     Type
 18491 ;;                  1    wreg      void 
 18492 ;; Registers used:
 18493 ;;		wreg
 18494 ;; Tracked objects:
 18495 ;;		On entry : 0/0
 18496 ;;		On exit  : 0/0
 18497 ;;		Unchanged: 0/0
 18498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18499 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18502 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18503 ;;Total ram usage:        2 bytes
 18504 ;; Hardware stack levels used:    1
 18505 ;; Hardware stack levels required when called:    1
 18506 ;; This function calls:
 18507 ;;		Nothing
 18508 ;; This function is called by:
 18509 ;;		_I2C_writeRegister
 18510 ;;		_readRegister
 18511 ;;		_updateVoltages
 18512 ;; This function uses a non-reentrant model
 18513 ;;
 18514                           
 18515                           
 18516                           ;psect for function _send_I2C_data
 18517  3E66                     _send_I2C_data:	
 18518                           
 18519                           ;I2C.c: 34:     PIR1bits.SSP1IF = 0;
 18520                           
 18521                           ;incstack = 0
 18522                           ; Regs used in _send_I2C_data: [wreg]
 18523  3E66  0020               	movlb	0	; select bank0
 18524  3E67  1191               	bcf	17,3	;volatile
 18525                           
 18526                           ;I2C.c: 35:     SSPBUF = databyte;
 18527  3E68  0871               	movf	send_I2C_data@databyte,w
 18528  3E69  0024               	movlb	4	; select bank4
 18529  3E6A  0091               	movwf	17	;volatile
 18530  3E6B                     l285:	
 18531                           ;I2C.c: 36:     while (!PIR1bits.SSP1IF);
 18532                           
 18533  3E6B  0020               	movlb	0	; select bank0
 18534  3E6C  1991               	btfsc	17,3	;volatile
 18535  3E6D  0008               	return
 18536  3E6E  2E6B               	goto	l285
 18537  3E6F                     __end_of_send_I2C_data:	
 18538                           
 18539                           	psect	text69
 18540  3E81                     __ptext69:	
 18541 ;; *************** function _send_I2C_controlByte *****************
 18542 ;; Defined at:
 18543 ;;		line 52 in file "I2C.c"
 18544 ;; Parameters:    Size  Location     Type
 18545 ;;  BlockAddress    2    1[COMMON] unsigned int 
 18546 ;;  RW_bit          2    3[COMMON] unsigned int 
 18547 ;; Auto vars:     Size  Location     Type
 18548 ;;		None
 18549 ;; Return value:  Size  Location     Type
 18550 ;;                  1    wreg      void 
 18551 ;; Registers used:
 18552 ;;		wreg, status,2, status,0
 18553 ;; Tracked objects:
 18554 ;;		On entry : 0/0
 18555 ;;		On exit  : 0/0
 18556 ;;		Unchanged: 0/0
 18557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18558 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18561 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18562 ;;Total ram usage:        4 bytes
 18563 ;; Hardware stack levels used:    1
 18564 ;; Hardware stack levels required when called:    1
 18565 ;; This function calls:
 18566 ;;		Nothing
 18567 ;; This function is called by:
 18568 ;;		_I2C_writeRegister
 18569 ;;		_readRegister
 18570 ;;		_updateVoltages
 18571 ;; This function uses a non-reentrant model
 18572 ;;
 18573                           
 18574                           
 18575                           ;psect for function _send_I2C_controlByte
 18576  3E81                     _send_I2C_controlByte:	
 18577                           
 18578                           ;I2C.c: 53:     PIR1bits.SSP1IF = 0;
 18579                           
 18580                           ;incstack = 0
 18581                           ; Regs used in _send_I2C_controlByte: [wreg+status,2+status,0]
 18582  3E81  0020               	movlb	0	; select bank0
 18583  3E82  1191               	bcf	17,3	;volatile
 18584                           
 18585                           ;I2C.c: 59:     SSPBUF = (((0b0000 << 4) | (BlockAddress << 1)) + RW_bit);
 18586  3E83  3571               	lslf	send_I2C_controlByte@BlockAddress,w
 18587  3E84  0773               	addwf	send_I2C_controlByte@RW_bit,w
 18588  3E85  0024               	movlb	4	; select bank4
 18589  3E86  0091               	movwf	17	;volatile
 18590  3E87                     l297:	
 18591                           ;I2C.c: 61:     while (!PIR1bits.SSP1IF);
 18592                           
 18593  3E87  0020               	movlb	0	; select bank0
 18594  3E88  1991               	btfsc	17,3	;volatile
 18595  3E89  0008               	return
 18596  3E8A  2E87               	goto	l297
 18597  3E8B                     __end_of_send_I2C_controlByte:	
 18598                           
 18599                           	psect	text70
 18600  3E5D                     __ptext70:	
 18601 ;; *************** function _send_I2C_NACK *****************
 18602 ;; Defined at:
 18603 ;;		line 83 in file "I2C.c"
 18604 ;; Parameters:    Size  Location     Type
 18605 ;;		None
 18606 ;; Auto vars:     Size  Location     Type
 18607 ;;		None
 18608 ;; Return value:  Size  Location     Type
 18609 ;;                  1    wreg      void 
 18610 ;; Registers used:
 18611 ;;		None
 18612 ;; Tracked objects:
 18613 ;;		On entry : 0/0
 18614 ;;		On exit  : 0/0
 18615 ;;		Unchanged: 0/0
 18616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18621 ;;Total ram usage:        0 bytes
 18622 ;; Hardware stack levels used:    1
 18623 ;; Hardware stack levels required when called:    1
 18624 ;; This function calls:
 18625 ;;		Nothing
 18626 ;; This function is called by:
 18627 ;;		_readRegister
 18628 ;;		_updateVoltages
 18629 ;; This function uses a non-reentrant model
 18630 ;;
 18631                           
 18632                           
 18633                           ;psect for function _send_I2C_NACK
 18634  3E5D                     _send_I2C_NACK:	
 18635                           
 18636                           ;I2C.c: 84:     PIR1bits.SSP1IF = 0;
 18637                           
 18638                           ;incstack = 0
 18639                           ; Regs used in _send_I2C_NACK: []
 18640  3E5D  0020               	movlb	0	; select bank0
 18641  3E5E  1191               	bcf	17,3	;volatile
 18642                           
 18643                           ;I2C.c: 85:     SSPCON2bits.ACKDT = 1;
 18644  3E5F  0024               	movlb	4	; select bank4
 18645  3E60  1696               	bsf	22,5	;volatile
 18646                           
 18647                           ;I2C.c: 86:     SSPCON2bits.ACKEN = 1;
 18648  3E61  1616               	bsf	22,4	;volatile
 18649  3E62                     l321:	
 18650                           ;I2C.c: 87:     while (!PIR1bits.SSP1IF);
 18651                           
 18652  3E62  0020               	movlb	0	; select bank0
 18653  3E63  1991               	btfsc	17,3	;volatile
 18654  3E64  0008               	return
 18655  3E65  2E62               	goto	l321
 18656  3E66                     __end_of_send_I2C_NACK:	
 18657                           
 18658                           	psect	text71
 18659  3EAF                     __ptext71:	
 18660 ;; *************** function _read_I2C_data *****************
 18661 ;; Defined at:
 18662 ;;		line 42 in file "I2C.c"
 18663 ;; Parameters:    Size  Location     Type
 18664 ;;		None
 18665 ;; Auto vars:     Size  Location     Type
 18666 ;;		None
 18667 ;; Return value:  Size  Location     Type
 18668 ;;                  2    1[COMMON] unsigned int 
 18669 ;; Registers used:
 18670 ;;		wreg
 18671 ;; Tracked objects:
 18672 ;;		On entry : 0/0
 18673 ;;		On exit  : 0/0
 18674 ;;		Unchanged: 0/0
 18675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18676 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18678 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18679 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18680 ;;Total ram usage:        4 bytes
 18681 ;; Hardware stack levels used:    1
 18682 ;; Hardware stack levels required when called:    1
 18683 ;; This function calls:
 18684 ;;		Nothing
 18685 ;; This function is called by:
 18686 ;;		_readRegister
 18687 ;;		_updateVoltages
 18688 ;; This function uses a non-reentrant model
 18689 ;;
 18690                           
 18691                           
 18692                           ;psect for function _read_I2C_data
 18693  3EAF                     _read_I2C_data:	
 18694                           
 18695                           ;I2C.c: 43:     PIR1bits.SSP1IF = 0;
 18696                           
 18697                           ;incstack = 0
 18698                           ; Regs used in _read_I2C_data: [wreg]
 18699  3EAF  0020               	movlb	0	; select bank0
 18700  3EB0  1191               	bcf	17,3	;volatile
 18701                           
 18702                           ;I2C.c: 44:     SSPCON2bits.RCEN = 1;
 18703  3EB1  0024               	movlb	4	; select bank4
 18704  3EB2  1596               	bsf	22,3	;volatile
 18705  3EB3                     l291:	
 18706                           ;I2C.c: 45:     while (!PIR1bits.SSP1IF);
 18707                           
 18708  3EB3  0020               	movlb	0	; select bank0
 18709  3EB4  1D91               	btfss	17,3	;volatile
 18710  3EB5  2EB3               	goto	l291
 18711                           
 18712                           ;I2C.c: 46:     return (SSPBUF);
 18713  3EB6  0024               	movlb	4	; select bank4
 18714  3EB7  0811               	movf	17,w	;volatile
 18715  3EB8  00F3               	movwf	??_read_I2C_data
 18716  3EB9  01F4               	clrf	??_read_I2C_data+1
 18717  3EBA  0873               	movf	??_read_I2C_data,w
 18718  3EBB  00F1               	movwf	?_read_I2C_data
 18719  3EBC  0874               	movf	??_read_I2C_data+1,w
 18720  3EBD  00F2               	movwf	?_read_I2C_data+1
 18721  3EBE  0008               	return
 18722  3EBF                     __end_of_read_I2C_data:	
 18723                           
 18724                           	psect	text72
 18725  29FF                     __ptext72:	
 18726 ;; *************** function ___xxtofl *****************
 18727 ;; Defined at:
 18728 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 18729 ;; Parameters:    Size  Location     Type
 18730 ;;  sign            1    wreg     unsigned char 
 18731 ;;  val             4    1[COMMON] long 
 18732 ;; Auto vars:     Size  Location     Type
 18733 ;;  sign            1    0[BANK0 ] unsigned char 
 18734 ;;  arg             4    2[BANK0 ] unsigned long 
 18735 ;;  exp             1    1[BANK0 ] unsigned char 
 18736 ;; Return value:  Size  Location     Type
 18737 ;;                  4    1[COMMON] unsigned char 
 18738 ;; Registers used:
 18739 ;;		wreg, status,2, status,0
 18740 ;; Tracked objects:
 18741 ;;		On entry : 0/0
 18742 ;;		On exit  : 0/0
 18743 ;;		Unchanged: 0/0
 18744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18745 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18746 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18747 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18748 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18749 ;;Total ram usage:       14 bytes
 18750 ;; Hardware stack levels used:    1
 18751 ;; Hardware stack levels required when called:    1
 18752 ;; This function calls:
 18753 ;;		Nothing
 18754 ;; This function is called by:
 18755 ;;		_setShortCircuitProtection
 18756 ;;		_setOverCurrentDischargeProtection
 18757 ;;		_updateVoltages
 18758 ;;		_AFE_getSetShortCircuitCurrent
 18759 ;;		_AFE_getOverCurrentDischargeCurrent
 18760 ;; This function uses a non-reentrant model
 18761 ;;
 18762                           
 18763                           
 18764                           ;psect for function ___xxtofl
 18765  29FF                     ___xxtofl:	
 18766                           
 18767                           ;incstack = 0
 18768                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 18769                           ;___xxtofl@sign stored from wreg
 18770  29FF  0020               	movlb	0	; select bank0
 18771  2A00  00A0               	movwf	___xxtofl@sign
 18772  2A01  0820               	movf	___xxtofl@sign,w
 18773  2A02  1D03               	btfss	3,2
 18774  2A03  1FF4               	btfss	___xxtofl@val+3,7
 18775  2A04  2A15               	goto	l6603
 18776  2A05  0971               	comf	___xxtofl@val,w
 18777  2A06  00A2               	movwf	___xxtofl@arg
 18778  2A07  0972               	comf	___xxtofl@val+1,w
 18779  2A08  00A3               	movwf	___xxtofl@arg+1
 18780  2A09  0973               	comf	___xxtofl@val+2,w
 18781  2A0A  00A4               	movwf	___xxtofl@arg+2
 18782  2A0B  0974               	comf	___xxtofl@val+3,w
 18783  2A0C  00A5               	movwf	___xxtofl@arg+3
 18784  2A0D  0AA2               	incf	___xxtofl@arg,f
 18785  2A0E  1903               	skipnz
 18786  2A0F  0AA3               	incf	___xxtofl@arg+1,f
 18787  2A10  1903               	skipnz
 18788  2A11  0AA4               	incf	___xxtofl@arg+2,f
 18789  2A12  1903               	skipnz
 18790  2A13  0AA5               	incf	___xxtofl@arg+3,f
 18791  2A14  2A1D               	goto	l1394
 18792  2A15                     l6603:	
 18793  2A15  0874               	movf	___xxtofl@val+3,w
 18794  2A16  00A5               	movwf	___xxtofl@arg+3
 18795  2A17  0873               	movf	___xxtofl@val+2,w
 18796  2A18  00A4               	movwf	___xxtofl@arg+2
 18797  2A19  0872               	movf	___xxtofl@val+1,w
 18798  2A1A  00A3               	movwf	___xxtofl@arg+1
 18799  2A1B  0871               	movf	___xxtofl@val,w
 18800  2A1C  00A2               	movwf	___xxtofl@arg
 18801  2A1D                     l1394:	
 18802  2A1D  0874               	movf	___xxtofl@val+3,w
 18803  2A1E  0473               	iorwf	___xxtofl@val+2,w
 18804  2A1F  0472               	iorwf	___xxtofl@val+1,w
 18805  2A20  0471               	iorwf	___xxtofl@val,w
 18806  2A21  1D03               	skipz
 18807  2A22  2A2C               	goto	l6609
 18808  2A23  3000               	movlw	0
 18809  2A24  00F4               	movwf	?___xxtofl+3
 18810  2A25  3000               	movlw	0
 18811  2A26  00F3               	movwf	?___xxtofl+2
 18812  2A27  3000               	movlw	0
 18813  2A28  00F2               	movwf	?___xxtofl+1
 18814  2A29  3000               	movlw	0
 18815  2A2A  00F1               	movwf	?___xxtofl
 18816  2A2B  0008               	return
 18817  2A2C                     l6609:	
 18818  2A2C  3096               	movlw	150
 18819  2A2D  00F5               	movwf	??___xxtofl
 18820  2A2E  0875               	movf	??___xxtofl,w
 18821  2A2F  00A1               	movwf	___xxtofl@exp
 18822  2A30                     l6613:	
 18823  2A30  30FE               	movlw	254
 18824  2A31  0525               	andwf	___xxtofl@arg+3,w
 18825  2A32  1903               	btfsc	3,2
 18826  2A33  2A53               	goto	l1400
 18827  2A34  3001               	movlw	1
 18828  2A35  00F5               	movwf	??___xxtofl
 18829  2A36  0875               	movf	??___xxtofl,w
 18830  2A37  07A1               	addwf	___xxtofl@exp,f
 18831  2A38  3001               	movlw	1
 18832  2A39                     u9155:	
 18833  2A39  36A5               	lsrf	___xxtofl@arg+3,f
 18834  2A3A  0CA4               	rrf	___xxtofl@arg+2,f
 18835  2A3B  0CA3               	rrf	___xxtofl@arg+1,f
 18836  2A3C  0CA2               	rrf	___xxtofl@arg,f
 18837  2A3D  0B89               	decfsz	9,f
 18838  2A3E  2A39               	goto	u9155
 18839  2A3F  2A30               	goto	l6613
 18840  2A40                     l6615:	
 18841  2A40  3001               	movlw	1
 18842  2A41  00F5               	movwf	??___xxtofl
 18843  2A42  0875               	movf	??___xxtofl,w
 18844  2A43  07A1               	addwf	___xxtofl@exp,f
 18845  2A44  3001               	movlw	1
 18846  2A45  07A2               	addwf	___xxtofl@arg,f
 18847  2A46  3000               	movlw	0
 18848  2A47  3DA3               	addwfc	___xxtofl@arg+1,f
 18849  2A48  3000               	movlw	0
 18850  2A49  3DA4               	addwfc	___xxtofl@arg+2,f
 18851  2A4A  3000               	movlw	0
 18852  2A4B  3DA5               	addwfc	___xxtofl@arg+3,f
 18853  2A4C  3001               	movlw	1
 18854  2A4D                     u9175:	
 18855  2A4D  36A5               	lsrf	___xxtofl@arg+3,f
 18856  2A4E  0CA4               	rrf	___xxtofl@arg+2,f
 18857  2A4F  0CA3               	rrf	___xxtofl@arg+1,f
 18858  2A50  0CA2               	rrf	___xxtofl@arg,f
 18859  2A51  0B89               	decfsz	9,f
 18860  2A52  2A4D               	goto	u9175
 18861  2A53                     l1400:	
 18862  2A53  30FF               	movlw	255
 18863  2A54  0525               	andwf	___xxtofl@arg+3,w
 18864  2A55  1903               	btfsc	3,2
 18865  2A56  2A65               	goto	l6623
 18866  2A57  2A40               	goto	l6615
 18867  2A58                     l6625:	
 18868  2A58  3002               	movlw	2
 18869  2A59  0221               	subwf	___xxtofl@exp,w
 18870  2A5A  1C03               	btfss	3,0
 18871  2A5B  2A67               	goto	l1407
 18872  2A5C  3001               	movlw	1
 18873  2A5D  02A1               	subwf	___xxtofl@exp,f
 18874  2A5E  3001               	movlw	1
 18875  2A5F                     u9195:	
 18876  2A5F  35A2               	lslf	___xxtofl@arg,f
 18877  2A60  0DA3               	rlf	___xxtofl@arg+1,f
 18878  2A61  0DA4               	rlf	___xxtofl@arg+2,f
 18879  2A62  0DA5               	rlf	___xxtofl@arg+3,f
 18880  2A63  0B89               	decfsz	9,f
 18881  2A64  2A5F               	goto	u9195
 18882  2A65                     l6623:	
 18883  2A65  1FA4               	btfss	___xxtofl@arg+2,7
 18884  2A66  2A58               	goto	l6625
 18885  2A67                     l1407:	
 18886  2A67  1821               	btfsc	___xxtofl@exp,0
 18887  2A68  2A71               	goto	l1408
 18888  2A69  30FF               	movlw	255
 18889  2A6A  05A2               	andwf	___xxtofl@arg,f
 18890  2A6B  30FF               	movlw	255
 18891  2A6C  05A3               	andwf	___xxtofl@arg+1,f
 18892  2A6D  307F               	movlw	127
 18893  2A6E  05A4               	andwf	___xxtofl@arg+2,f
 18894  2A6F  30FF               	movlw	255
 18895  2A70  05A5               	andwf	___xxtofl@arg+3,f
 18896  2A71                     l1408:	
 18897  2A71  1003               	clrc
 18898  2A72  0CA1               	rrf	___xxtofl@exp,f
 18899  2A73  0821               	movf	___xxtofl@exp,w
 18900  2A74  00F5               	movwf	??___xxtofl
 18901  2A75  01F6               	clrf	??___xxtofl+1
 18902  2A76  01F7               	clrf	??___xxtofl+2
 18903  2A77  01F8               	clrf	??___xxtofl+3
 18904  2A78  3018               	movlw	24
 18905  2A79                     u9235:	
 18906  2A79  35F5               	lslf	??___xxtofl,f
 18907  2A7A  0DF6               	rlf	??___xxtofl+1,f
 18908  2A7B  0DF7               	rlf	??___xxtofl+2,f
 18909  2A7C  0DF8               	rlf	??___xxtofl+3,f
 18910  2A7D  0B89               	decfsz	9,f
 18911  2A7E  2A79               	goto	u9235
 18912  2A7F  0875               	movf	??___xxtofl,w
 18913  2A80  04A2               	iorwf	___xxtofl@arg,f
 18914  2A81  0876               	movf	??___xxtofl+1,w
 18915  2A82  04A3               	iorwf	___xxtofl@arg+1,f
 18916  2A83  0877               	movf	??___xxtofl+2,w
 18917  2A84  04A4               	iorwf	___xxtofl@arg+2,f
 18918  2A85  0878               	movf	??___xxtofl+3,w
 18919  2A86  04A5               	iorwf	___xxtofl@arg+3,f
 18920  2A87  0820               	movf	___xxtofl@sign,w
 18921  2A88  1D03               	btfss	3,2
 18922  2A89  1FF4               	btfss	___xxtofl@val+3,7
 18923  2A8A  2A8C               	goto	l6637
 18924  2A8B  17A5               	bsf	___xxtofl@arg+3,7
 18925  2A8C                     l6637:	
 18926  2A8C  0825               	movf	___xxtofl@arg+3,w
 18927  2A8D  00F4               	movwf	?___xxtofl+3
 18928  2A8E  0824               	movf	___xxtofl@arg+2,w
 18929  2A8F  00F3               	movwf	?___xxtofl+2
 18930  2A90  0823               	movf	___xxtofl@arg+1,w
 18931  2A91  00F2               	movwf	?___xxtofl+1
 18932  2A92  0822               	movf	___xxtofl@arg,w
 18933  2A93  00F1               	movwf	?___xxtofl
 18934  2A94  0008               	return
 18935  2A95                     __end_of___xxtofl:	
 18936                           
 18937                           	psect	text73
 18938  30E7                     __ptext73:	
 18939 ;; *************** function ___lmul *****************
 18940 ;; Defined at:
 18941 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
 18942 ;; Parameters:    Size  Location     Type
 18943 ;;  multiplier      4    1[COMMON] unsigned long 
 18944 ;;  multiplicand    4    5[COMMON] unsigned long 
 18945 ;; Auto vars:     Size  Location     Type
 18946 ;;  product         4    0[BANK0 ] unsigned long 
 18947 ;; Return value:  Size  Location     Type
 18948 ;;                  4    1[COMMON] unsigned long 
 18949 ;; Registers used:
 18950 ;;		wreg, status,2, status,0
 18951 ;; Tracked objects:
 18952 ;;		On entry : 0/0
 18953 ;;		On exit  : 0/0
 18954 ;;		Unchanged: 0/0
 18955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18956 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18957 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18959 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18960 ;;Total ram usage:       12 bytes
 18961 ;; Hardware stack levels used:    1
 18962 ;; Hardware stack levels required when called:    1
 18963 ;; This function calls:
 18964 ;;		Nothing
 18965 ;; This function is called by:
 18966 ;;		_setCellUndervoltageProtection
 18967 ;;		_setCellOvervoltageProtection
 18968 ;;		_updateVoltages
 18969 ;; This function uses a non-reentrant model
 18970 ;;
 18971                           
 18972                           
 18973                           ;psect for function ___lmul
 18974  30E7                     ___lmul:	
 18975                           
 18976                           ;incstack = 0
 18977                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 18978  30E7  3000               	movlw	0
 18979  30E8  0020               	movlb	0	; select bank0
 18980  30E9  00A3               	movwf	___lmul@product+3
 18981  30EA  3000               	movlw	0
 18982  30EB  00A2               	movwf	___lmul@product+2
 18983  30EC  3000               	movlw	0
 18984  30ED  00A1               	movwf	___lmul@product+1
 18985  30EE  3000               	movlw	0
 18986  30EF  00A0               	movwf	___lmul@product
 18987  30F0                     l8365:	
 18988  30F0  1C71               	btfss	___lmul@multiplier,0
 18989  30F1  28FB               	goto	l8369
 18990  30F2  0875               	movf	___lmul@multiplicand,w
 18991  30F3  0020               	movlb	0	; select bank0
 18992  30F4  07A0               	addwf	___lmul@product,f
 18993  30F5  0876               	movf	___lmul@multiplicand+1,w
 18994  30F6  3DA1               	addwfc	___lmul@product+1,f
 18995  30F7  0877               	movf	___lmul@multiplicand+2,w
 18996  30F8  3DA2               	addwfc	___lmul@product+2,f
 18997  30F9  0878               	movf	___lmul@multiplicand+3,w
 18998  30FA  3DA3               	addwfc	___lmul@product+3,f
 18999  30FB                     l8369:	
 19000  30FB  3001               	movlw	1
 19001  30FC                     u11655:	
 19002  30FC  35F5               	lslf	___lmul@multiplicand,f
 19003  30FD  0DF6               	rlf	___lmul@multiplicand+1,f
 19004  30FE  0DF7               	rlf	___lmul@multiplicand+2,f
 19005  30FF  0DF8               	rlf	___lmul@multiplicand+3,f
 19006  3100  0B89               	decfsz	9,f
 19007  3101  28FC               	goto	u11655
 19008  3102  3001               	movlw	1
 19009  3103                     u11665:	
 19010  3103  36F4               	lsrf	___lmul@multiplier+3,f
 19011  3104  0CF3               	rrf	___lmul@multiplier+2,f
 19012  3105  0CF2               	rrf	___lmul@multiplier+1,f
 19013  3106  0CF1               	rrf	___lmul@multiplier,f
 19014  3107  0B89               	decfsz	9,f
 19015  3108  2903               	goto	u11665
 19016  3109  0874               	movf	___lmul@multiplier+3,w
 19017  310A  0473               	iorwf	___lmul@multiplier+2,w
 19018  310B  0472               	iorwf	___lmul@multiplier+1,w
 19019  310C  0471               	iorwf	___lmul@multiplier,w
 19020  310D  1D03               	skipz
 19021  310E  28F0               	goto	l8365
 19022  310F  0020               	movlb	0	; select bank0
 19023  3110  0823               	movf	___lmul@product+3,w
 19024  3111  00F4               	movwf	?___lmul+3
 19025  3112  0822               	movf	___lmul@product+2,w
 19026  3113  00F3               	movwf	?___lmul+2
 19027  3114  0821               	movf	___lmul@product+1,w
 19028  3115  00F2               	movwf	?___lmul+1
 19029  3116  0820               	movf	___lmul@product,w
 19030  3117  00F1               	movwf	?___lmul
 19031  3118  0008               	return
 19032  3119                     __end_of___lmul:	
 19033                           
 19034                           	psect	text74
 19035  353B                     __ptext74:	
 19036 ;; *************** function ___fltol *****************
 19037 ;; Defined at:
 19038 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 19039 ;; Parameters:    Size  Location     Type
 19040 ;;  f1              4    0[BANK1 ] unsigned long 
 19041 ;; Auto vars:     Size  Location     Type
 19042 ;;  exp1            1   11[COMMON] unsigned char 
 19043 ;;  sign1           1   10[COMMON] unsigned char 
 19044 ;; Return value:  Size  Location     Type
 19045 ;;                  4    0[BANK1 ] long 
 19046 ;; Registers used:
 19047 ;;		wreg, status,2, status,0
 19048 ;; Tracked objects:
 19049 ;;		On entry : 0/0
 19050 ;;		On exit  : 0/0
 19051 ;;		Unchanged: 0/0
 19052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19053 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19054 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19055 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19056 ;;      Totals:         2       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19057 ;;Total ram usage:       11 bytes
 19058 ;; Hardware stack levels used:    1
 19059 ;; Hardware stack levels required when called:    1
 19060 ;; This function calls:
 19061 ;;		Nothing
 19062 ;; This function is called by:
 19063 ;;		_updateVoltages
 19064 ;;		_AFE_getSetShortCircuitCurrent
 19065 ;;		_AFE_getOverCurrentDischargeCurrent
 19066 ;;		_efgtoa
 19067 ;; This function uses a non-reentrant model
 19068 ;;
 19069                           
 19070                           
 19071                           ;psect for function ___fltol
 19072  353B                     ___fltol:	
 19073                           
 19074                           ;incstack = 0
 19075                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 19076  353B  1003               	clrc
 19077  353C  0021               	movlb	1	; select bank1
 19078  353D  0D22               	rlf	(___fltol@f1+2)^(0+128),w
 19079  353E  0D23               	rlf	(___fltol@f1+3)^(0+128),w
 19080  353F  00A4               	movwf	??___fltol^(0+128)
 19081  3540  0824               	movf	??___fltol^(0+128),w
 19082  3541  00FB               	movwf	___fltol@exp1
 19083  3542  087B               	movf	___fltol@exp1,w
 19084  3543  1D03               	btfss	3,2
 19085  3544  2D4E               	goto	l5023
 19086  3545                     l5019:	
 19087  3545  3000               	movlw	0
 19088  3546  00A3               	movwf	(?___fltol+3)^(0+128)
 19089  3547  3000               	movlw	0
 19090  3548  00A2               	movwf	(?___fltol+2)^(0+128)
 19091  3549  3000               	movlw	0
 19092  354A  00A1               	movwf	(?___fltol+1)^(0+128)
 19093  354B  3000               	movlw	0
 19094  354C  00A0               	movwf	?___fltol^(0+128)
 19095  354D  0008               	return
 19096  354E                     l5023:	
 19097  354E  0820               	movf	___fltol@f1^(0+128),w
 19098  354F  00A4               	movwf	??___fltol^(0+128)
 19099  3550  0821               	movf	(___fltol@f1+1)^(0+128),w
 19100  3551  00A5               	movwf	(??___fltol^(0+128)+1)
 19101  3552  0822               	movf	(___fltol@f1+2)^(0+128),w
 19102  3553  00A6               	movwf	(??___fltol^(0+128)+2)
 19103  3554  0823               	movf	(___fltol@f1+3)^(0+128),w
 19104  3555  00A7               	movwf	(??___fltol^(0+128)+3)
 19105  3556  301F               	movlw	31
 19106  3557                     u6315:	
 19107  3557  36A7               	lsrf	(??___fltol^(0+128)+3),f
 19108  3558  0CA6               	rrf	(??___fltol^(0+128)+2),f
 19109  3559  0CA5               	rrf	(??___fltol^(0+128)+1),f
 19110  355A  0CA4               	rrf	??___fltol^(0+128),f
 19111  355B  0B89               	decfsz	9,f
 19112  355C  2D57               	goto	u6315
 19113  355D  0824               	movf	??___fltol^(0+128),w
 19114  355E  00A8               	movwf	(??___fltol+4)^(0+128)
 19115  355F  0828               	movf	(??___fltol+4)^(0+128),w
 19116  3560  00FA               	movwf	___fltol@sign1
 19117  3561  17A2               	bsf	(___fltol@f1^(0+128)+2),7
 19118  3562  30FF               	movlw	255
 19119  3563  05A0               	andwf	___fltol@f1^(0+128),f
 19120  3564  30FF               	movlw	255
 19121  3565  05A1               	andwf	(___fltol@f1+1)^(0+128),f
 19122  3566  30FF               	movlw	255
 19123  3567  05A2               	andwf	(___fltol@f1+2)^(0+128),f
 19124  3568  3000               	movlw	0
 19125  3569  05A3               	andwf	(___fltol@f1+3)^(0+128),f
 19126  356A  3096               	movlw	150
 19127  356B  02FB               	subwf	___fltol@exp1,f
 19128  356C  1FFB               	btfss	___fltol@exp1,7
 19129  356D  2D81               	goto	l5041
 19130  356E  087B               	movf	___fltol@exp1,w
 19131  356F  3A80               	xorlw	128
 19132  3570  3E97               	addlw	151
 19133  3571  1C03               	btfss	3,0
 19134  3572  2D45               	goto	l5019
 19135  3573                     l5039:	
 19136  3573  3001               	movlw	1
 19137  3574                     u6345:	
 19138  3574  36A3               	lsrf	(___fltol@f1+3)^(0+128),f
 19139  3575  0CA2               	rrf	(___fltol@f1+2)^(0+128),f
 19140  3576  0CA1               	rrf	(___fltol@f1+1)^(0+128),f
 19141  3577  0CA0               	rrf	___fltol@f1^(0+128),f
 19142  3578  0B89               	decfsz	9,f
 19143  3579  2D74               	goto	u6345
 19144  357A  3001               	movlw	1
 19145  357B  00A4               	movwf	??___fltol^(0+128)
 19146  357C  0824               	movf	??___fltol^(0+128),w
 19147  357D  07FB               	addwf	___fltol@exp1,f
 19148  357E  1903               	btfsc	3,2
 19149  357F  2D92               	goto	l5049
 19150  3580  2D73               	goto	l5039
 19151  3581                     l5041:	
 19152  3581  3020               	movlw	32
 19153  3582  027B               	subwf	___fltol@exp1,w
 19154  3583  1803               	btfsc	3,0
 19155  3584  2D45               	goto	l5019
 19156  3585                     l1160:	
 19157  3585  087B               	movf	___fltol@exp1,w
 19158  3586  1903               	btfsc	3,2
 19159  3587  2D92               	goto	l5049
 19160  3588  3001               	movlw	1
 19161  3589                     u6375:	
 19162  3589  35A0               	lslf	___fltol@f1^(0+128),f
 19163  358A  0DA1               	rlf	(___fltol@f1+1)^(0+128),f
 19164  358B  0DA2               	rlf	(___fltol@f1+2)^(0+128),f
 19165  358C  0DA3               	rlf	(___fltol@f1+3)^(0+128),f
 19166  358D  0B89               	decfsz	9,f
 19167  358E  2D89               	goto	u6375
 19168  358F  3001               	movlw	1
 19169  3590  02FB               	subwf	___fltol@exp1,f
 19170  3591  2D85               	goto	l1160
 19171  3592                     l5049:	
 19172  3592  087A               	movf	___fltol@sign1,w
 19173  3593  1903               	btfsc	3,2
 19174  3594  0008               	return
 19175  3595  09A0               	comf	___fltol@f1^(0+128),f
 19176  3596  09A1               	comf	(___fltol@f1+1)^(0+128),f
 19177  3597  09A2               	comf	(___fltol@f1+2)^(0+128),f
 19178  3598  09A3               	comf	(___fltol@f1+3)^(0+128),f
 19179  3599  0AA0               	incf	___fltol@f1^(0+128),f
 19180  359A  1903               	skipnz
 19181  359B  0AA1               	incf	(___fltol@f1+1)^(0+128),f
 19182  359C  1903               	skipnz
 19183  359D  0AA2               	incf	(___fltol@f1+2)^(0+128),f
 19184  359E  1903               	skipnz
 19185  359F  0AA3               	incf	(___fltol@f1+3)^(0+128),f
 19186  35A0  0008               	return
 19187  35A1                     __end_of___fltol:	
 19188                           
 19189                           	psect	text75
 19190  13A8                     __ptext75:	
 19191 ;; *************** function ___flmul *****************
 19192 ;; Defined at:
 19193 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 19194 ;; Parameters:    Size  Location     Type
 19195 ;;  b               4    6[BANK0 ] long 
 19196 ;;  a               4   10[BANK0 ] long 
 19197 ;; Auto vars:     Size  Location     Type
 19198 ;;  prod            4   26[BANK0 ] struct .
 19199 ;;  grs             4   20[BANK0 ] unsigned long 
 19200 ;;  temp            2   30[BANK0 ] struct .
 19201 ;;  bexp            1   25[BANK0 ] unsigned char 
 19202 ;;  aexp            1   24[BANK0 ] unsigned char 
 19203 ;;  sign            1   19[BANK0 ] unsigned char 
 19204 ;; Return value:  Size  Location     Type
 19205 ;;                  4    6[BANK0 ] unsigned char 
 19206 ;; Registers used:
 19207 ;;		wreg, status,2, status,0, pclath, cstack
 19208 ;; Tracked objects:
 19209 ;;		On entry : 0/0
 19210 ;;		On exit  : 0/0
 19211 ;;		Unchanged: 0/0
 19212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19213 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19214 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19215 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19216 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19217 ;;Total ram usage:       26 bytes
 19218 ;; Hardware stack levels used:    1
 19219 ;; Hardware stack levels required when called:    2
 19220 ;; This function calls:
 19221 ;;		__Umul8_16
 19222 ;; This function is called by:
 19223 ;;		_setShortCircuitProtection
 19224 ;;		_setOverCurrentDischargeProtection
 19225 ;;		_updateVoltages
 19226 ;;		_efgtoa
 19227 ;; This function uses a non-reentrant model
 19228 ;;
 19229                           
 19230                           
 19231                           ;psect for function ___flmul
 19232  13A8                     ___flmul:	
 19233                           
 19234                           ;incstack = 0
 19235                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 19236  13A8  0020               	movlb	0	; select bank0
 19237  13A9  0829               	movf	___flmul@b+3,w
 19238  13AA  3980               	andlw	128
 19239  13AB  00AE               	movwf	??___flmul
 19240  13AC  082E               	movf	??___flmul,w
 19241  13AD  00B3               	movwf	___flmul@sign
 19242  13AE  3529               	lslf	___flmul@b+3,w
 19243  13AF  00AE               	movwf	??___flmul
 19244  13B0  082E               	movf	??___flmul,w
 19245  13B1  00B9               	movwf	___flmul@bexp
 19246  13B2  1BA8               	btfsc	___flmul@b+2,7
 19247  13B3  1439               	bsf	___flmul@bexp,0
 19248  13B4  0839               	movf	___flmul@bexp,w
 19249  13B5  1903               	btfsc	3,2
 19250  13B6  2BC4               	goto	l5253
 19251  13B7  0A39               	incf	___flmul@bexp,w
 19252  13B8  1D03               	btfss	3,2
 19253  13B9  2BC2               	goto	l5251
 19254  13BA  3000               	movlw	0
 19255  13BB  00A9               	movwf	___flmul@b+3
 19256  13BC  3000               	movlw	0
 19257  13BD  00A8               	movwf	___flmul@b+2
 19258  13BE  3000               	movlw	0
 19259  13BF  00A7               	movwf	___flmul@b+1
 19260  13C0  3000               	movlw	0
 19261  13C1  00A6               	movwf	___flmul@b
 19262  13C2                     l5251:	
 19263  13C2  17A8               	bsf	___flmul@b+2,7
 19264  13C3  2BCC               	goto	l5255
 19265  13C4                     l5253:	
 19266  13C4  3000               	movlw	0
 19267  13C5  00A9               	movwf	___flmul@b+3
 19268  13C6  3000               	movlw	0
 19269  13C7  00A8               	movwf	___flmul@b+2
 19270  13C8  3000               	movlw	0
 19271  13C9  00A7               	movwf	___flmul@b+1
 19272  13CA  3000               	movlw	0
 19273  13CB  00A6               	movwf	___flmul@b
 19274  13CC                     l5255:	
 19275  13CC  082D               	movf	___flmul@a+3,w
 19276  13CD  3980               	andlw	128
 19277  13CE  00AE               	movwf	??___flmul
 19278  13CF  082E               	movf	??___flmul,w
 19279  13D0  06B3               	xorwf	___flmul@sign,f
 19280  13D1  352D               	lslf	___flmul@a+3,w
 19281  13D2  00AE               	movwf	??___flmul
 19282  13D3  082E               	movf	??___flmul,w
 19283  13D4  00B8               	movwf	___flmul@aexp
 19284  13D5  1BAC               	btfsc	___flmul@a+2,7
 19285  13D6  1438               	bsf	___flmul@aexp,0
 19286  13D7  0838               	movf	___flmul@aexp,w
 19287  13D8  1903               	btfsc	3,2
 19288  13D9  2BE7               	goto	l5271
 19289  13DA  0A38               	incf	___flmul@aexp,w
 19290  13DB  1D03               	btfss	3,2
 19291  13DC  2BE5               	goto	l5269
 19292  13DD  3000               	movlw	0
 19293  13DE  00AD               	movwf	___flmul@a+3
 19294  13DF  3000               	movlw	0
 19295  13E0  00AC               	movwf	___flmul@a+2
 19296  13E1  3000               	movlw	0
 19297  13E2  00AB               	movwf	___flmul@a+1
 19298  13E3  3000               	movlw	0
 19299  13E4  00AA               	movwf	___flmul@a
 19300  13E5                     l5269:	
 19301  13E5  17AC               	bsf	___flmul@a+2,7
 19302  13E6  2BEF               	goto	l5273
 19303  13E7                     l5271:	
 19304  13E7  3000               	movlw	0
 19305  13E8  00AD               	movwf	___flmul@a+3
 19306  13E9  3000               	movlw	0
 19307  13EA  00AC               	movwf	___flmul@a+2
 19308  13EB  3000               	movlw	0
 19309  13EC  00AB               	movwf	___flmul@a+1
 19310  13ED  3000               	movlw	0
 19311  13EE  00AA               	movwf	___flmul@a
 19312  13EF                     l5273:	
 19313  13EF  0838               	movf	___flmul@aexp,w
 19314  13F0  1D03               	btfss	3,2
 19315  13F1  0839               	movf	___flmul@bexp,w
 19316  13F2  1D03               	btfss	3,2
 19317  13F3  2BFD               	goto	l5281
 19318  13F4  3000               	movlw	0
 19319  13F5  00A9               	movwf	?___flmul+3
 19320  13F6  3000               	movlw	0
 19321  13F7  00A8               	movwf	?___flmul+2
 19322  13F8  3000               	movlw	0
 19323  13F9  00A7               	movwf	?___flmul+1
 19324  13FA  3000               	movlw	0
 19325  13FB  00A6               	movwf	?___flmul
 19326  13FC  0008               	return
 19327  13FD                     l5281:	
 19328  13FD  0826               	movf	___flmul@b,w
 19329  13FE  00AE               	movwf	??___flmul
 19330  13FF  082E               	movf	??___flmul,w
 19331  1400  00F1               	movwf	__Umul8_16@multiplicand
 19332  1401  082C               	movf	___flmul@a+2,w
 19333  1402  31BF  27A1  3193   	fcall	__Umul8_16
 19334  1405  0872               	movf	?__Umul8_16+1,w
 19335  1406  0020               	movlb	0	; select bank0
 19336  1407  00BF               	movwf	___flmul@temp+1
 19337  1408  0871               	movf	?__Umul8_16,w
 19338  1409  00BE               	movwf	___flmul@temp
 19339  140A  083E               	movf	___flmul@temp,w
 19340  140B  00AE               	movwf	??___flmul
 19341  140C  01AF               	clrf	??___flmul+1
 19342  140D  01B0               	clrf	??___flmul+2
 19343  140E  01B1               	clrf	??___flmul+3
 19344  140F  0831               	movf	??___flmul+3,w
 19345  1410  00B7               	movwf	___flmul@grs+3
 19346  1411  0830               	movf	??___flmul+2,w
 19347  1412  00B6               	movwf	___flmul@grs+2
 19348  1413  082F               	movf	??___flmul+1,w
 19349  1414  00B5               	movwf	___flmul@grs+1
 19350  1415  082E               	movf	??___flmul,w
 19351  1416  00B4               	movwf	___flmul@grs
 19352  1417  083F               	movf	___flmul@temp+1,w
 19353  1418  00AE               	movwf	??___flmul
 19354  1419  01AF               	clrf	??___flmul+1
 19355  141A  01B0               	clrf	??___flmul+2
 19356  141B  01B1               	clrf	??___flmul+3
 19357  141C  0831               	movf	??___flmul+3,w
 19358  141D  00BD               	movwf	___flmul@prod+3
 19359  141E  0830               	movf	??___flmul+2,w
 19360  141F  00BC               	movwf	___flmul@prod+2
 19361  1420  082F               	movf	??___flmul+1,w
 19362  1421  00BB               	movwf	___flmul@prod+1
 19363  1422  082E               	movf	??___flmul,w
 19364  1423  00BA               	movwf	___flmul@prod
 19365  1424  0827               	movf	___flmul@b+1,w
 19366  1425  00AE               	movwf	??___flmul
 19367  1426  082E               	movf	??___flmul,w
 19368  1427  00F1               	movwf	__Umul8_16@multiplicand
 19369  1428  082B               	movf	___flmul@a+1,w
 19370  1429  31BF  27A1  3193   	fcall	__Umul8_16
 19371  142C  0872               	movf	?__Umul8_16+1,w
 19372  142D  0020               	movlb	0	; select bank0
 19373  142E  00BF               	movwf	___flmul@temp+1
 19374  142F  0871               	movf	?__Umul8_16,w
 19375  1430  00BE               	movwf	___flmul@temp
 19376  1431  083E               	movf	___flmul@temp,w
 19377  1432  00AE               	movwf	??___flmul
 19378  1433  01AF               	clrf	??___flmul+1
 19379  1434  01B0               	clrf	??___flmul+2
 19380  1435  01B1               	clrf	??___flmul+3
 19381  1436  082E               	movf	??___flmul,w
 19382  1437  07B4               	addwf	___flmul@grs,f
 19383  1438  082F               	movf	??___flmul+1,w
 19384  1439  3DB5               	addwfc	___flmul@grs+1,f
 19385  143A  0830               	movf	??___flmul+2,w
 19386  143B  3DB6               	addwfc	___flmul@grs+2,f
 19387  143C  0831               	movf	??___flmul+3,w
 19388  143D  3DB7               	addwfc	___flmul@grs+3,f
 19389  143E  083F               	movf	___flmul@temp+1,w
 19390  143F  00AE               	movwf	??___flmul
 19391  1440  01AF               	clrf	??___flmul+1
 19392  1441  01B0               	clrf	??___flmul+2
 19393  1442  01B1               	clrf	??___flmul+3
 19394  1443  082E               	movf	??___flmul,w
 19395  1444  07BA               	addwf	___flmul@prod,f
 19396  1445  082F               	movf	??___flmul+1,w
 19397  1446  3DBB               	addwfc	___flmul@prod+1,f
 19398  1447  0830               	movf	??___flmul+2,w
 19399  1448  3DBC               	addwfc	___flmul@prod+2,f
 19400  1449  0831               	movf	??___flmul+3,w
 19401  144A  3DBD               	addwfc	___flmul@prod+3,f
 19402  144B  0828               	movf	___flmul@b+2,w
 19403  144C  00AE               	movwf	??___flmul
 19404  144D  082E               	movf	??___flmul,w
 19405  144E  00F1               	movwf	__Umul8_16@multiplicand
 19406  144F  082A               	movf	___flmul@a,w
 19407  1450  31BF  27A1  3193   	fcall	__Umul8_16
 19408  1453  0872               	movf	?__Umul8_16+1,w
 19409  1454  0020               	movlb	0	; select bank0
 19410  1455  00BF               	movwf	___flmul@temp+1
 19411  1456  0871               	movf	?__Umul8_16,w
 19412  1457  00BE               	movwf	___flmul@temp
 19413  1458  083E               	movf	___flmul@temp,w
 19414  1459  00AE               	movwf	??___flmul
 19415  145A  01AF               	clrf	??___flmul+1
 19416  145B  01B0               	clrf	??___flmul+2
 19417  145C  01B1               	clrf	??___flmul+3
 19418  145D  082E               	movf	??___flmul,w
 19419  145E  07B4               	addwf	___flmul@grs,f
 19420  145F  082F               	movf	??___flmul+1,w
 19421  1460  3DB5               	addwfc	___flmul@grs+1,f
 19422  1461  0830               	movf	??___flmul+2,w
 19423  1462  3DB6               	addwfc	___flmul@grs+2,f
 19424  1463  0831               	movf	??___flmul+3,w
 19425  1464  3DB7               	addwfc	___flmul@grs+3,f
 19426  1465  083F               	movf	___flmul@temp+1,w
 19427  1466  00AE               	movwf	??___flmul
 19428  1467  01AF               	clrf	??___flmul+1
 19429  1468  01B0               	clrf	??___flmul+2
 19430  1469  01B1               	clrf	??___flmul+3
 19431  146A  082E               	movf	??___flmul,w
 19432  146B  07BA               	addwf	___flmul@prod,f
 19433  146C  082F               	movf	??___flmul+1,w
 19434  146D  3DBB               	addwfc	___flmul@prod+1,f
 19435  146E  0830               	movf	??___flmul+2,w
 19436  146F  3DBC               	addwfc	___flmul@prod+2,f
 19437  1470  0831               	movf	??___flmul+3,w
 19438  1471  3DBD               	addwfc	___flmul@prod+3,f
 19439  1472  3008               	movlw	8
 19440  1473                     u6865:	
 19441  1473  35B4               	lslf	___flmul@grs,f
 19442  1474  0DB5               	rlf	___flmul@grs+1,f
 19443  1475  0DB6               	rlf	___flmul@grs+2,f
 19444  1476  0DB7               	rlf	___flmul@grs+3,f
 19445  1477  0B89               	decfsz	9,f
 19446  1478  2C73               	goto	u6865
 19447  1479  0827               	movf	___flmul@b+1,w
 19448  147A  00AE               	movwf	??___flmul
 19449  147B  082E               	movf	??___flmul,w
 19450  147C  00F1               	movwf	__Umul8_16@multiplicand
 19451  147D  082A               	movf	___flmul@a,w
 19452  147E  31BF  27A1  3193   	fcall	__Umul8_16
 19453  1481  0872               	movf	?__Umul8_16+1,w
 19454  1482  0020               	movlb	0	; select bank0
 19455  1483  00BF               	movwf	___flmul@temp+1
 19456  1484  0871               	movf	?__Umul8_16,w
 19457  1485  00BE               	movwf	___flmul@temp
 19458  1486  083E               	movf	___flmul@temp,w
 19459  1487  07B4               	addwf	___flmul@grs,f
 19460  1488  083F               	movf	___flmul@temp+1,w
 19461  1489  3DB5               	addwfc	___flmul@grs+1,f
 19462  148A  3000               	movlw	0
 19463  148B  3DB6               	addwfc	___flmul@grs+2,f
 19464  148C  3DB7               	addwfc	___flmul@grs+3,f
 19465  148D  0826               	movf	___flmul@b,w
 19466  148E  00AE               	movwf	??___flmul
 19467  148F  082E               	movf	??___flmul,w
 19468  1490  00F1               	movwf	__Umul8_16@multiplicand
 19469  1491  082B               	movf	___flmul@a+1,w
 19470  1492  31BF  27A1  3193   	fcall	__Umul8_16
 19471  1495  0872               	movf	?__Umul8_16+1,w
 19472  1496  0020               	movlb	0	; select bank0
 19473  1497  00BF               	movwf	___flmul@temp+1
 19474  1498  0871               	movf	?__Umul8_16,w
 19475  1499  00BE               	movwf	___flmul@temp
 19476  149A  083E               	movf	___flmul@temp,w
 19477  149B  07B4               	addwf	___flmul@grs,f
 19478  149C  083F               	movf	___flmul@temp+1,w
 19479  149D  3DB5               	addwfc	___flmul@grs+1,f
 19480  149E  3000               	movlw	0
 19481  149F  3DB6               	addwfc	___flmul@grs+2,f
 19482  14A0  3DB7               	addwfc	___flmul@grs+3,f
 19483  14A1  3008               	movlw	8
 19484  14A2                     u6875:	
 19485  14A2  35B4               	lslf	___flmul@grs,f
 19486  14A3  0DB5               	rlf	___flmul@grs+1,f
 19487  14A4  0DB6               	rlf	___flmul@grs+2,f
 19488  14A5  0DB7               	rlf	___flmul@grs+3,f
 19489  14A6  0B89               	decfsz	9,f
 19490  14A7  2CA2               	goto	u6875
 19491  14A8  0826               	movf	___flmul@b,w
 19492  14A9  00AE               	movwf	??___flmul
 19493  14AA  082E               	movf	??___flmul,w
 19494  14AB  00F1               	movwf	__Umul8_16@multiplicand
 19495  14AC  082A               	movf	___flmul@a,w
 19496  14AD  31BF  27A1  3193   	fcall	__Umul8_16
 19497  14B0  0872               	movf	?__Umul8_16+1,w
 19498  14B1  0020               	movlb	0	; select bank0
 19499  14B2  00BF               	movwf	___flmul@temp+1
 19500  14B3  0871               	movf	?__Umul8_16,w
 19501  14B4  00BE               	movwf	___flmul@temp
 19502  14B5  083E               	movf	___flmul@temp,w
 19503  14B6  07B4               	addwf	___flmul@grs,f
 19504  14B7  083F               	movf	___flmul@temp+1,w
 19505  14B8  3DB5               	addwfc	___flmul@grs+1,f
 19506  14B9  3000               	movlw	0
 19507  14BA  3DB6               	addwfc	___flmul@grs+2,f
 19508  14BB  3DB7               	addwfc	___flmul@grs+3,f
 19509  14BC  0827               	movf	___flmul@b+1,w
 19510  14BD  00AE               	movwf	??___flmul
 19511  14BE  082E               	movf	??___flmul,w
 19512  14BF  00F1               	movwf	__Umul8_16@multiplicand
 19513  14C0  082C               	movf	___flmul@a+2,w
 19514  14C1  31BF  27A1  3193   	fcall	__Umul8_16
 19515  14C4  0872               	movf	?__Umul8_16+1,w
 19516  14C5  0020               	movlb	0	; select bank0
 19517  14C6  00BF               	movwf	___flmul@temp+1
 19518  14C7  0871               	movf	?__Umul8_16,w
 19519  14C8  00BE               	movwf	___flmul@temp
 19520  14C9  083E               	movf	___flmul@temp,w
 19521  14CA  07BA               	addwf	___flmul@prod,f
 19522  14CB  083F               	movf	___flmul@temp+1,w
 19523  14CC  3DBB               	addwfc	___flmul@prod+1,f
 19524  14CD  3000               	movlw	0
 19525  14CE  3DBC               	addwfc	___flmul@prod+2,f
 19526  14CF  3DBD               	addwfc	___flmul@prod+3,f
 19527  14D0  0828               	movf	___flmul@b+2,w
 19528  14D1  00AE               	movwf	??___flmul
 19529  14D2  082E               	movf	??___flmul,w
 19530  14D3  00F1               	movwf	__Umul8_16@multiplicand
 19531  14D4  082B               	movf	___flmul@a+1,w
 19532  14D5  31BF  27A1  3193   	fcall	__Umul8_16
 19533  14D8  0872               	movf	?__Umul8_16+1,w
 19534  14D9  0020               	movlb	0	; select bank0
 19535  14DA  00BF               	movwf	___flmul@temp+1
 19536  14DB  0871               	movf	?__Umul8_16,w
 19537  14DC  00BE               	movwf	___flmul@temp
 19538  14DD  083E               	movf	___flmul@temp,w
 19539  14DE  07BA               	addwf	___flmul@prod,f
 19540  14DF  083F               	movf	___flmul@temp+1,w
 19541  14E0  3DBB               	addwfc	___flmul@prod+1,f
 19542  14E1  3000               	movlw	0
 19543  14E2  3DBC               	addwfc	___flmul@prod+2,f
 19544  14E3  3DBD               	addwfc	___flmul@prod+3,f
 19545  14E4  0828               	movf	___flmul@b+2,w
 19546  14E5  00AE               	movwf	??___flmul
 19547  14E6  082E               	movf	??___flmul,w
 19548  14E7  00F1               	movwf	__Umul8_16@multiplicand
 19549  14E8  082C               	movf	___flmul@a+2,w
 19550  14E9  31BF  27A1  3193   	fcall	__Umul8_16
 19551  14EC  0872               	movf	?__Umul8_16+1,w
 19552  14ED  0020               	movlb	0	; select bank0
 19553  14EE  00BF               	movwf	___flmul@temp+1
 19554  14EF  0871               	movf	?__Umul8_16,w
 19555  14F0  00BE               	movwf	___flmul@temp
 19556  14F1  083E               	movf	___flmul@temp,w
 19557  14F2  00AE               	movwf	??___flmul
 19558  14F3  083F               	movf	___flmul@temp+1,w
 19559  14F4  00AF               	movwf	??___flmul+1
 19560  14F5  01B0               	clrf	??___flmul+2
 19561  14F6  01B1               	clrf	??___flmul+3
 19562  14F7  3008               	movlw	8
 19563  14F8                     u6885:	
 19564  14F8  35AE               	lslf	??___flmul,f
 19565  14F9  0DAF               	rlf	??___flmul+1,f
 19566  14FA  0DB0               	rlf	??___flmul+2,f
 19567  14FB  0DB1               	rlf	??___flmul+3,f
 19568  14FC  0B89               	decfsz	9,f
 19569  14FD  2CF8               	goto	u6885
 19570  14FE  082E               	movf	??___flmul,w
 19571  14FF  07BA               	addwf	___flmul@prod,f
 19572  1500  082F               	movf	??___flmul+1,w
 19573  1501  3DBB               	addwfc	___flmul@prod+1,f
 19574  1502  0830               	movf	??___flmul+2,w
 19575  1503  3DBC               	addwfc	___flmul@prod+2,f
 19576  1504  0831               	movf	??___flmul+3,w
 19577  1505  3DBD               	addwfc	___flmul@prod+3,f
 19578  1506  0834               	movf	___flmul@grs,w
 19579  1507  00AE               	movwf	??___flmul
 19580  1508  0835               	movf	___flmul@grs+1,w
 19581  1509  00AF               	movwf	??___flmul+1
 19582  150A  0836               	movf	___flmul@grs+2,w
 19583  150B  00B0               	movwf	??___flmul+2
 19584  150C  0837               	movf	___flmul@grs+3,w
 19585  150D  00B1               	movwf	??___flmul+3
 19586  150E  3018               	movlw	24
 19587  150F                     u6895:	
 19588  150F  36B1               	lsrf	??___flmul+3,f
 19589  1510  0CB0               	rrf	??___flmul+2,f
 19590  1511  0CAF               	rrf	??___flmul+1,f
 19591  1512  0CAE               	rrf	??___flmul,f
 19592  1513  0B89               	decfsz	9,f
 19593  1514  2D0F               	goto	u6895
 19594  1515  082E               	movf	??___flmul,w
 19595  1516  07BA               	addwf	___flmul@prod,f
 19596  1517  082F               	movf	??___flmul+1,w
 19597  1518  3DBB               	addwfc	___flmul@prod+1,f
 19598  1519  0830               	movf	??___flmul+2,w
 19599  151A  3DBC               	addwfc	___flmul@prod+2,f
 19600  151B  0831               	movf	??___flmul+3,w
 19601  151C  3DBD               	addwfc	___flmul@prod+3,f
 19602  151D  3008               	movlw	8
 19603  151E                     u6905:	
 19604  151E  35B4               	lslf	___flmul@grs,f
 19605  151F  0DB5               	rlf	___flmul@grs+1,f
 19606  1520  0DB6               	rlf	___flmul@grs+2,f
 19607  1521  0DB7               	rlf	___flmul@grs+3,f
 19608  1522  0B89               	decfsz	9,f
 19609  1523  2D1E               	goto	u6905
 19610  1524  0839               	movf	___flmul@bexp,w
 19611  1525  0738               	addwf	___flmul@aexp,w
 19612  1526  00AE               	movwf	??___flmul
 19613  1527  01AF               	clrf	??___flmul+1
 19614  1528  0DAF               	rlf	??___flmul+1,f
 19615  1529  082E               	movf	??___flmul,w
 19616  152A  3E82               	addlw	130
 19617  152B  00BE               	movwf	___flmul@temp
 19618  152C  30FF               	movlw	255
 19619  152D  3D2F               	addwfc	??___flmul+1,w
 19620  152E  00BF               	movwf	___flmul@temp+1
 19621  152F                     l5333:	
 19622  152F  1BBC               	btfsc	___flmul@prod+2,7
 19623  1530  2D46               	goto	l5335
 19624  1531  3001               	movlw	1
 19625  1532                     u6915:	
 19626  1532  35BA               	lslf	___flmul@prod,f
 19627  1533  0DBB               	rlf	___flmul@prod+1,f
 19628  1534  0DBC               	rlf	___flmul@prod+2,f
 19629  1535  0DBD               	rlf	___flmul@prod+3,f
 19630  1536  0B89               	decfsz	9,f
 19631  1537  2D32               	goto	u6915
 19632  1538  1BB7               	btfsc	___flmul@grs+3,7
 19633  1539  143A               	bsf	___flmul@prod,0
 19634  153A  3001               	movlw	1
 19635  153B                     u6935:	
 19636  153B  35B4               	lslf	___flmul@grs,f
 19637  153C  0DB5               	rlf	___flmul@grs+1,f
 19638  153D  0DB6               	rlf	___flmul@grs+2,f
 19639  153E  0DB7               	rlf	___flmul@grs+3,f
 19640  153F  0B89               	decfsz	9,f
 19641  1540  2D3B               	goto	u6935
 19642  1541  30FF               	movlw	255
 19643  1542  07BE               	addwf	___flmul@temp,f
 19644  1543  30FF               	movlw	255
 19645  1544  3DBF               	addwfc	___flmul@temp+1,f
 19646  1545  2D2F               	goto	l5333
 19647  1546                     l5335:	
 19648  1546  01B8               	clrf	___flmul@aexp
 19649  1547  1FB7               	btfss	___flmul@grs+3,7
 19650  1548  2D5F               	goto	l5345
 19651  1549  30FF               	movlw	255
 19652  154A  0534               	andwf	___flmul@grs,w
 19653  154B  00AE               	movwf	??___flmul
 19654  154C  30FF               	movlw	255
 19655  154D  0535               	andwf	___flmul@grs+1,w
 19656  154E  00AF               	movwf	??___flmul+1
 19657  154F  30FF               	movlw	255
 19658  1550  0536               	andwf	___flmul@grs+2,w
 19659  1551  00B0               	movwf	??___flmul+2
 19660  1552  307F               	movlw	127
 19661  1553  0537               	andwf	___flmul@grs+3,w
 19662  1554  00B1               	movwf	??___flmul+3
 19663  1555  0831               	movf	??___flmul+3,w
 19664  1556  0430               	iorwf	??___flmul+2,w
 19665  1557  042F               	iorwf	??___flmul+1,w
 19666  1558  042E               	iorwf	??___flmul,w
 19667  1559  1903               	skipnz
 19668  155A  183A               	btfsc	___flmul@prod,0
 19669  155B  2D5D               	goto	l5341
 19670  155C  2D5F               	goto	l5345
 19671  155D                     l5341:	
 19672  155D  01B8               	clrf	___flmul@aexp
 19673  155E  0AB8               	incf	___flmul@aexp,f
 19674  155F                     l5345:	
 19675  155F  0838               	movf	___flmul@aexp,w
 19676  1560  1903               	btfsc	3,2
 19677  1561  2D88               	goto	l5355
 19678  1562  3001               	movlw	1
 19679  1563  07BA               	addwf	___flmul@prod,f
 19680  1564  3000               	movlw	0
 19681  1565  3DBB               	addwfc	___flmul@prod+1,f
 19682  1566  3000               	movlw	0
 19683  1567  3DBC               	addwfc	___flmul@prod+2,f
 19684  1568  3000               	movlw	0
 19685  1569  3DBD               	addwfc	___flmul@prod+3,f
 19686  156A  1C3D               	btfss	___flmul@prod+3,0
 19687  156B  2D88               	goto	l5355
 19688  156C  083A               	movf	___flmul@prod,w
 19689  156D  00AE               	movwf	??___flmul
 19690  156E  083B               	movf	___flmul@prod+1,w
 19691  156F  00AF               	movwf	??___flmul+1
 19692  1570  083C               	movf	___flmul@prod+2,w
 19693  1571  00B0               	movwf	??___flmul+2
 19694  1572  083D               	movf	___flmul@prod+3,w
 19695  1573  00B1               	movwf	??___flmul+3
 19696  1574  3001               	movlw	1
 19697  1575  00B2               	movwf	??___flmul+4
 19698  1576                     u7005:	
 19699  1576  37B1               	asrf	??___flmul+3,f
 19700  1577  0CB0               	rrf	??___flmul+2,f
 19701  1578  0CAF               	rrf	??___flmul+1,f
 19702  1579  0CAE               	rrf	??___flmul,f
 19703  157A  0BB2               	decfsz	??___flmul+4,f
 19704  157B  2D76               	goto	u7005
 19705  157C  0831               	movf	??___flmul+3,w
 19706  157D  00BD               	movwf	___flmul@prod+3
 19707  157E  0830               	movf	??___flmul+2,w
 19708  157F  00BC               	movwf	___flmul@prod+2
 19709  1580  082F               	movf	??___flmul+1,w
 19710  1581  00BB               	movwf	___flmul@prod+1
 19711  1582  082E               	movf	??___flmul,w
 19712  1583  00BA               	movwf	___flmul@prod
 19713  1584  3001               	movlw	1
 19714  1585  07BE               	addwf	___flmul@temp,f
 19715  1586  3000               	movlw	0
 19716  1587  3DBF               	addwfc	___flmul@temp+1,f
 19717  1588                     l5355:	
 19718  1588  083F               	movf	___flmul@temp+1,w
 19719  1589  3A80               	xorlw	128
 19720  158A  00AE               	movwf	??___flmul
 19721  158B  3080               	movlw	128
 19722  158C  022E               	subwf	??___flmul,w
 19723  158D  1D03               	skipz
 19724  158E  2D91               	goto	u7015
 19725  158F  30FF               	movlw	255
 19726  1590  023E               	subwf	___flmul@temp,w
 19727  1591                     u7015:	
 19728  1591  1C03               	skipc
 19729  1592  2D9D               	goto	l5359
 19730  1593  307F               	movlw	127
 19731  1594  0020               	movlb	0	; select bank0
 19732  1595  00BD               	movwf	___flmul@prod+3
 19733  1596  3080               	movlw	128
 19734  1597  00BC               	movwf	___flmul@prod+2
 19735  1598  3000               	movlw	0
 19736  1599  00BB               	movwf	___flmul@prod+1
 19737  159A  3000               	movlw	0
 19738  159B  00BA               	movwf	___flmul@prod
 19739  159C  2DC7               	goto	l1368
 19740  159D                     l5359:	
 19741  159D  0020               	movlb	0	; select bank0
 19742  159E  083F               	movf	___flmul@temp+1,w
 19743  159F  3A80               	xorlw	128
 19744  15A0  00AE               	movwf	??___flmul
 19745  15A1  3080               	movlw	128
 19746  15A2  022E               	subwf	??___flmul,w
 19747  15A3  1D03               	skipz
 19748  15A4  2DA7               	goto	u7025
 19749  15A5  3001               	movlw	1
 19750  15A6  023E               	subwf	___flmul@temp,w
 19751  15A7                     u7025:	
 19752  15A7  1803               	skipnc
 19753  15A8  2DB4               	goto	l5365
 19754  15A9  3000               	movlw	0
 19755  15AA  0020               	movlb	0	; select bank0
 19756  15AB  00BD               	movwf	___flmul@prod+3
 19757  15AC  3000               	movlw	0
 19758  15AD  00BC               	movwf	___flmul@prod+2
 19759  15AE  3000               	movlw	0
 19760  15AF  00BB               	movwf	___flmul@prod+1
 19761  15B0  3000               	movlw	0
 19762  15B1  00BA               	movwf	___flmul@prod
 19763  15B2  01B3               	clrf	___flmul@sign
 19764  15B3  2DC7               	goto	l1368
 19765  15B4                     l5365:	
 19766  15B4  0020               	movlb	0	; select bank0
 19767  15B5  083E               	movf	___flmul@temp,w
 19768  15B6  00AE               	movwf	??___flmul
 19769  15B7  082E               	movf	??___flmul,w
 19770  15B8  00B9               	movwf	___flmul@bexp
 19771  15B9  30FF               	movlw	255
 19772  15BA  05BA               	andwf	___flmul@prod,f
 19773  15BB  30FF               	movlw	255
 19774  15BC  05BB               	andwf	___flmul@prod+1,f
 19775  15BD  307F               	movlw	127
 19776  15BE  05BC               	andwf	___flmul@prod+2,f
 19777  15BF  3000               	movlw	0
 19778  15C0  05BD               	andwf	___flmul@prod+3,f
 19779  15C1  1839               	btfsc	___flmul@bexp,0
 19780  15C2  17BC               	bsf	___flmul@prod+2,7
 19781  15C3  3639               	lsrf	___flmul@bexp,w
 19782  15C4  00AE               	movwf	??___flmul
 19783  15C5  082E               	movf	??___flmul,w
 19784  15C6  00BD               	movwf	___flmul@prod+3
 19785  15C7                     l1368:	
 19786  15C7  0833               	movf	___flmul@sign,w
 19787  15C8  00AE               	movwf	??___flmul
 19788  15C9  082E               	movf	??___flmul,w
 19789  15CA  04BD               	iorwf	___flmul@prod+3,f
 19790  15CB  083D               	movf	___flmul@prod+3,w
 19791  15CC  00A9               	movwf	?___flmul+3
 19792  15CD  083C               	movf	___flmul@prod+2,w
 19793  15CE  00A8               	movwf	?___flmul+2
 19794  15CF  083B               	movf	___flmul@prod+1,w
 19795  15D0  00A7               	movwf	?___flmul+1
 19796  15D1  083A               	movf	___flmul@prod,w
 19797  15D2  00A6               	movwf	?___flmul
 19798  15D3  0008               	return
 19799  15D4                     __end_of___flmul:	
 19800                           
 19801                           	psect	text76
 19802  3FA1                     __ptext76:	
 19803 ;; *************** function __Umul8_16 *****************
 19804 ;; Defined at:
 19805 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 19806 ;; Parameters:    Size  Location     Type
 19807 ;;  multiplier      1    wreg     unsigned char 
 19808 ;;  multiplicand    1    1[COMMON] unsigned char 
 19809 ;; Auto vars:     Size  Location     Type
 19810 ;;  multiplier      1    9[COMMON] unsigned char 
 19811 ;;  word_mpld       2    7[COMMON] unsigned int 
 19812 ;;  product         2    5[COMMON] unsigned int 
 19813 ;; Return value:  Size  Location     Type
 19814 ;;                  2    1[COMMON] unsigned int 
 19815 ;; Registers used:
 19816 ;;		wreg, status,2, status,0
 19817 ;; Tracked objects:
 19818 ;;		On entry : 0/0
 19819 ;;		On exit  : 0/0
 19820 ;;		Unchanged: 0/0
 19821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19822 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19823 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19824 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19825 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19826 ;;Total ram usage:        9 bytes
 19827 ;; Hardware stack levels used:    1
 19828 ;; Hardware stack levels required when called:    1
 19829 ;; This function calls:
 19830 ;;		Nothing
 19831 ;; This function is called by:
 19832 ;;		___flmul
 19833 ;; This function uses a non-reentrant model
 19834 ;;
 19835                           
 19836                           
 19837                           ;psect for function __Umul8_16
 19838  3FA1                     __Umul8_16:	
 19839                           
 19840                           ;incstack = 0
 19841                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 19842                           ;__Umul8_16@multiplier stored from wreg
 19843  3FA1  00F9               	movwf	__Umul8_16@multiplier
 19844  3FA2  01F5               	clrf	__Umul8_16@product
 19845  3FA3  01F6               	clrf	__Umul8_16@product+1
 19846  3FA4  0871               	movf	__Umul8_16@multiplicand,w
 19847  3FA5  00F3               	movwf	??__Umul8_16
 19848  3FA6  01F4               	clrf	??__Umul8_16+1
 19849  3FA7  0873               	movf	??__Umul8_16,w
 19850  3FA8  00F7               	movwf	__Umul8_16@word_mpld
 19851  3FA9  0874               	movf	??__Umul8_16+1,w
 19852  3FAA  00F8               	movwf	__Umul8_16@word_mpld+1
 19853  3FAB                     l4687:	
 19854  3FAB  1C79               	btfss	__Umul8_16@multiplier,0
 19855  3FAC  2FB1               	goto	l1578
 19856  3FAD  0877               	movf	__Umul8_16@word_mpld,w
 19857  3FAE  07F5               	addwf	__Umul8_16@product,f
 19858  3FAF  0878               	movf	__Umul8_16@word_mpld+1,w
 19859  3FB0  3DF6               	addwfc	__Umul8_16@product+1,f
 19860  3FB1                     l1578:	
 19861  3FB1  3001               	movlw	1
 19862  3FB2                     u5385:	
 19863  3FB2  35F7               	lslf	__Umul8_16@word_mpld,f
 19864  3FB3  0DF8               	rlf	__Umul8_16@word_mpld+1,f
 19865  3FB4  0B89               	decfsz	9,f
 19866  3FB5  2FB2               	goto	u5385
 19867  3FB6  1003               	clrc
 19868  3FB7  0CF9               	rrf	__Umul8_16@multiplier,f
 19869  3FB8  0879               	movf	__Umul8_16@multiplier,w
 19870  3FB9  1D03               	btfss	3,2
 19871  3FBA  2FAB               	goto	l4687
 19872  3FBB  0876               	movf	__Umul8_16@product+1,w
 19873  3FBC  00F2               	movwf	?__Umul8_16+1
 19874  3FBD  0875               	movf	__Umul8_16@product,w
 19875  3FBE  00F1               	movwf	?__Umul8_16
 19876  3FBF  0008               	return
 19877  3FC0                     __end_of__Umul8_16:	
 19878                           
 19879                           	psect	text77
 19880  1CA4                     __ptext77:	
 19881 ;; *************** function ___fldiv *****************
 19882 ;; Defined at:
 19883 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 19884 ;; Parameters:    Size  Location     Type
 19885 ;;  a               4   32[BANK0 ] unsigned int 
 19886 ;;  b               4   36[BANK0 ] unsigned int 
 19887 ;; Auto vars:     Size  Location     Type
 19888 ;;  grs             4   52[BANK0 ] unsigned long 
 19889 ;;  rem             4   45[BANK0 ] unsigned long 
 19890 ;;  new_exp         2   50[BANK0 ] int 
 19891 ;;  aexp            1   57[BANK0 ] unsigned char 
 19892 ;;  bexp            1   56[BANK0 ] unsigned char 
 19893 ;;  sign            1   49[BANK0 ] unsigned char 
 19894 ;; Return value:  Size  Location     Type
 19895 ;;                  4   32[BANK0 ] unsigned char 
 19896 ;; Registers used:
 19897 ;;		wreg, status,2, status,0
 19898 ;; Tracked objects:
 19899 ;;		On entry : 0/0
 19900 ;;		On exit  : 0/0
 19901 ;;		Unchanged: 0/0
 19902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19903 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19904 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19905 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19906 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19907 ;;Total ram usage:       26 bytes
 19908 ;; Hardware stack levels used:    1
 19909 ;; Hardware stack levels required when called:    1
 19910 ;; This function calls:
 19911 ;;		Nothing
 19912 ;; This function is called by:
 19913 ;;		_setShortCircuitProtection
 19914 ;;		_setOverCurrentDischargeProtection
 19915 ;;		_updateVoltages
 19916 ;;		_AFE_getSetShortCircuitCurrent
 19917 ;;		_AFE_getOverCurrentDischargeCurrent
 19918 ;;		_efgtoa
 19919 ;; This function uses a non-reentrant model
 19920 ;;
 19921                           
 19922                           
 19923                           ;psect for function ___fldiv
 19924  1CA4                     ___fldiv:	
 19925                           
 19926                           ;incstack = 0
 19927                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 19928  1CA4  0020               	movlb	0	; select bank0
 19929  1CA5  0847               	movf	___fldiv@b+3,w
 19930  1CA6  3980               	andlw	128
 19931  1CA7  00C8               	movwf	??___fldiv
 19932  1CA8  0848               	movf	??___fldiv,w
 19933  1CA9  00D1               	movwf	___fldiv@sign
 19934  1CAA  3547               	lslf	___fldiv@b+3,w
 19935  1CAB  00C8               	movwf	??___fldiv
 19936  1CAC  0848               	movf	??___fldiv,w
 19937  1CAD  00D8               	movwf	___fldiv@bexp
 19938  1CAE  1BC6               	btfsc	___fldiv@b+2,7
 19939  1CAF  1458               	bsf	___fldiv@bexp,0
 19940  1CB0  0858               	movf	___fldiv@bexp,w
 19941  1CB1  1903               	btfsc	3,2
 19942  1CB2  2CC1               	goto	l5115
 19943  1CB3  0A58               	incf	___fldiv@bexp,w
 19944  1CB4  1D03               	btfss	3,2
 19945  1CB5  2CBE               	goto	l5111
 19946  1CB6  3000               	movlw	0
 19947  1CB7  00C7               	movwf	___fldiv@b+3
 19948  1CB8  3000               	movlw	0
 19949  1CB9  00C6               	movwf	___fldiv@b+2
 19950  1CBA  3000               	movlw	0
 19951  1CBB  00C5               	movwf	___fldiv@b+1
 19952  1CBC  3000               	movlw	0
 19953  1CBD  00C4               	movwf	___fldiv@b
 19954  1CBE                     l5111:	
 19955  1CBE  17C6               	bsf	___fldiv@b+2,7
 19956  1CBF  01C7               	clrf	___fldiv@b+3
 19957  1CC0  2CC9               	goto	l5117
 19958  1CC1                     l5115:	
 19959  1CC1  3000               	movlw	0
 19960  1CC2  00C7               	movwf	___fldiv@b+3
 19961  1CC3  3000               	movlw	0
 19962  1CC4  00C6               	movwf	___fldiv@b+2
 19963  1CC5  3000               	movlw	0
 19964  1CC6  00C5               	movwf	___fldiv@b+1
 19965  1CC7  3000               	movlw	0
 19966  1CC8  00C4               	movwf	___fldiv@b
 19967  1CC9                     l5117:	
 19968  1CC9  0843               	movf	___fldiv@a+3,w
 19969  1CCA  3980               	andlw	128
 19970  1CCB  00C8               	movwf	??___fldiv
 19971  1CCC  0848               	movf	??___fldiv,w
 19972  1CCD  06D1               	xorwf	___fldiv@sign,f
 19973  1CCE  3543               	lslf	___fldiv@a+3,w
 19974  1CCF  00C8               	movwf	??___fldiv
 19975  1CD0  0848               	movf	??___fldiv,w
 19976  1CD1  00D9               	movwf	___fldiv@aexp
 19977  1CD2  1BC2               	btfsc	___fldiv@a+2,7
 19978  1CD3  1459               	bsf	___fldiv@aexp,0
 19979  1CD4  0859               	movf	___fldiv@aexp,w
 19980  1CD5  1903               	btfsc	3,2
 19981  1CD6  2CE5               	goto	l5135
 19982  1CD7  0A59               	incf	___fldiv@aexp,w
 19983  1CD8  1D03               	btfss	3,2
 19984  1CD9  2CE2               	goto	l5131
 19985  1CDA  3000               	movlw	0
 19986  1CDB  00C3               	movwf	___fldiv@a+3
 19987  1CDC  3000               	movlw	0
 19988  1CDD  00C2               	movwf	___fldiv@a+2
 19989  1CDE  3000               	movlw	0
 19990  1CDF  00C1               	movwf	___fldiv@a+1
 19991  1CE0  3000               	movlw	0
 19992  1CE1  00C0               	movwf	___fldiv@a
 19993  1CE2                     l5131:	
 19994  1CE2  17C2               	bsf	___fldiv@a+2,7
 19995  1CE3  01C3               	clrf	___fldiv@a+3
 19996  1CE4  2CED               	goto	l1316
 19997  1CE5                     l5135:	
 19998  1CE5  3000               	movlw	0
 19999  1CE6  00C3               	movwf	___fldiv@a+3
 20000  1CE7  3000               	movlw	0
 20001  1CE8  00C2               	movwf	___fldiv@a+2
 20002  1CE9  3000               	movlw	0
 20003  1CEA  00C1               	movwf	___fldiv@a+1
 20004  1CEB  3000               	movlw	0
 20005  1CEC  00C0               	movwf	___fldiv@a
 20006  1CED                     l1316:	
 20007  1CED  0843               	movf	___fldiv@a+3,w
 20008  1CEE  0442               	iorwf	___fldiv@a+2,w
 20009  1CEF  0441               	iorwf	___fldiv@a+1,w
 20010  1CF0  0440               	iorwf	___fldiv@a,w
 20011  1CF1  1D03               	skipz
 20012  1CF2  2D0C               	goto	l5145
 20013  1CF3  3000               	movlw	0
 20014  1CF4  00C7               	movwf	___fldiv@b+3
 20015  1CF5  3000               	movlw	0
 20016  1CF6  00C6               	movwf	___fldiv@b+2
 20017  1CF7  3000               	movlw	0
 20018  1CF8  00C5               	movwf	___fldiv@b+1
 20019  1CF9  3000               	movlw	0
 20020  1CFA  00C4               	movwf	___fldiv@b
 20021  1CFB  3080               	movlw	128
 20022  1CFC  04C6               	iorwf	___fldiv@b+2,f
 20023  1CFD  307F               	movlw	127
 20024  1CFE  04C7               	iorwf	___fldiv@b+3,f
 20025  1CFF                     L13:	
 20026  1CFF  0851               	movf	___fldiv@sign,w
 20027  1D00  00C8               	movwf	??___fldiv
 20028  1D01  0848               	movf	??___fldiv,w
 20029  1D02  04C7               	iorwf	___fldiv@b+3,f
 20030  1D03  0847               	movf	___fldiv@b+3,w
 20031  1D04  00C3               	movwf	?___fldiv+3
 20032  1D05  0846               	movf	___fldiv@b+2,w
 20033  1D06  00C2               	movwf	?___fldiv+2
 20034  1D07  0845               	movf	___fldiv@b+1,w
 20035  1D08  00C1               	movwf	?___fldiv+1
 20036  1D09  0844               	movf	___fldiv@b,w
 20037  1D0A  00C0               	movwf	?___fldiv
 20038  1D0B  0008               	return
 20039  1D0C                     l5145:	
 20040  1D0C  0858               	movf	___fldiv@bexp,w
 20041  1D0D  1D03               	btfss	3,2
 20042  1D0E  2D18               	goto	l5151
 20043  1D0F  3000               	movlw	0
 20044  1D10  00C3               	movwf	?___fldiv+3
 20045  1D11  3000               	movlw	0
 20046  1D12  00C2               	movwf	?___fldiv+2
 20047  1D13  3000               	movlw	0
 20048  1D14  00C1               	movwf	?___fldiv+1
 20049  1D15  3000               	movlw	0
 20050  1D16  00C0               	movwf	?___fldiv
 20051  1D17  0008               	return
 20052  1D18                     l5151:	
 20053  1D18  0858               	movf	___fldiv@bexp,w
 20054  1D19  00C8               	movwf	??___fldiv
 20055  1D1A  01C9               	clrf	??___fldiv+1
 20056  1D1B  0849               	movf	??___fldiv+1,w
 20057  1D1C  00CB               	movwf	??___fldiv+3
 20058  1D1D  0859               	movf	___fldiv@aexp,w
 20059  1D1E  0248               	subwf	??___fldiv,w
 20060  1D1F  00CA               	movwf	??___fldiv+2
 20061  1D20  1C03               	skipc
 20062  1D21  03CB               	decf	??___fldiv+3,f
 20063  1D22  084A               	movf	??___fldiv+2,w
 20064  1D23  3E7F               	addlw	127
 20065  1D24  00D2               	movwf	___fldiv@new_exp
 20066  1D25  3000               	movlw	0
 20067  1D26  3D4B               	addwfc	??___fldiv+3,w
 20068  1D27  00D3               	movwf	___fldiv@new_exp+1
 20069  1D28  0847               	movf	___fldiv@b+3,w
 20070  1D29  00D0               	movwf	___fldiv@rem+3
 20071  1D2A  0846               	movf	___fldiv@b+2,w
 20072  1D2B  00CF               	movwf	___fldiv@rem+2
 20073  1D2C  0845               	movf	___fldiv@b+1,w
 20074  1D2D  00CE               	movwf	___fldiv@rem+1
 20075  1D2E  0844               	movf	___fldiv@b,w
 20076  1D2F  00CD               	movwf	___fldiv@rem
 20077  1D30  3000               	movlw	0
 20078  1D31  00C7               	movwf	___fldiv@b+3
 20079  1D32  3000               	movlw	0
 20080  1D33  00C6               	movwf	___fldiv@b+2
 20081  1D34  3000               	movlw	0
 20082  1D35  00C5               	movwf	___fldiv@b+1
 20083  1D36  3000               	movlw	0
 20084  1D37  00C4               	movwf	___fldiv@b
 20085  1D38  3000               	movlw	0
 20086  1D39  00D7               	movwf	___fldiv@grs+3
 20087  1D3A  3000               	movlw	0
 20088  1D3B  00D6               	movwf	___fldiv@grs+2
 20089  1D3C  3000               	movlw	0
 20090  1D3D  00D5               	movwf	___fldiv@grs+1
 20091  1D3E  3000               	movlw	0
 20092  1D3F  00D4               	movwf	___fldiv@grs
 20093  1D40  01D9               	clrf	___fldiv@aexp
 20094  1D41                     l5179:	
 20095  1D41  301A               	movlw	26
 20096  1D42  0259               	subwf	___fldiv@aexp,w
 20097  1D43  1803               	btfsc	3,0
 20098  1D44  2D7D               	goto	l5181
 20099  1D45  0859               	movf	___fldiv@aexp,w
 20100  1D46  1903               	btfsc	3,2
 20101  1D47  2D5F               	goto	l5171
 20102  1D48  3001               	movlw	1
 20103  1D49                     u6585:	
 20104  1D49  35CD               	lslf	___fldiv@rem,f
 20105  1D4A  0DCE               	rlf	___fldiv@rem+1,f
 20106  1D4B  0DCF               	rlf	___fldiv@rem+2,f
 20107  1D4C  0DD0               	rlf	___fldiv@rem+3,f
 20108  1D4D  0B89               	decfsz	9,f
 20109  1D4E  2D49               	goto	u6585
 20110  1D4F  3001               	movlw	1
 20111  1D50                     u6595:	
 20112  1D50  35C4               	lslf	___fldiv@b,f
 20113  1D51  0DC5               	rlf	___fldiv@b+1,f
 20114  1D52  0DC6               	rlf	___fldiv@b+2,f
 20115  1D53  0DC7               	rlf	___fldiv@b+3,f
 20116  1D54  0B89               	decfsz	9,f
 20117  1D55  2D50               	goto	u6595
 20118  1D56  1BD7               	btfsc	___fldiv@grs+3,7
 20119  1D57  1444               	bsf	___fldiv@b,0
 20120  1D58  3001               	movlw	1
 20121  1D59                     u6615:	
 20122  1D59  35D4               	lslf	___fldiv@grs,f
 20123  1D5A  0DD5               	rlf	___fldiv@grs+1,f
 20124  1D5B  0DD6               	rlf	___fldiv@grs+2,f
 20125  1D5C  0DD7               	rlf	___fldiv@grs+3,f
 20126  1D5D  0B89               	decfsz	9,f
 20127  1D5E  2D59               	goto	u6615
 20128  1D5F                     l5171:	
 20129  1D5F  0843               	movf	___fldiv@a+3,w
 20130  1D60  0250               	subwf	___fldiv@rem+3,w
 20131  1D61  1D03               	skipz
 20132  1D62  2D6D               	goto	u6625
 20133  1D63  0842               	movf	___fldiv@a+2,w
 20134  1D64  024F               	subwf	___fldiv@rem+2,w
 20135  1D65  1D03               	skipz
 20136  1D66  2D6D               	goto	u6625
 20137  1D67  0841               	movf	___fldiv@a+1,w
 20138  1D68  024E               	subwf	___fldiv@rem+1,w
 20139  1D69  1D03               	skipz
 20140  1D6A  2D6D               	goto	u6625
 20141  1D6B  0840               	movf	___fldiv@a,w
 20142  1D6C  024D               	subwf	___fldiv@rem,w
 20143  1D6D                     u6625:	
 20144  1D6D  1C03               	skipc
 20145  1D6E  2D78               	goto	l5177
 20146  1D6F  1757               	bsf	___fldiv@grs+3,6
 20147  1D70  0840               	movf	___fldiv@a,w
 20148  1D71  02CD               	subwf	___fldiv@rem,f
 20149  1D72  0841               	movf	___fldiv@a+1,w
 20150  1D73  3BCE               	subwfb	___fldiv@rem+1,f
 20151  1D74  0842               	movf	___fldiv@a+2,w
 20152  1D75  3BCF               	subwfb	___fldiv@rem+2,f
 20153  1D76  0843               	movf	___fldiv@a+3,w
 20154  1D77  3BD0               	subwfb	___fldiv@rem+3,f
 20155  1D78                     l5177:	
 20156  1D78  3001               	movlw	1
 20157  1D79  00C8               	movwf	??___fldiv
 20158  1D7A  0848               	movf	??___fldiv,w
 20159  1D7B  07D9               	addwf	___fldiv@aexp,f
 20160  1D7C  2D41               	goto	l5179
 20161  1D7D                     l5181:	
 20162  1D7D  0850               	movf	___fldiv@rem+3,w
 20163  1D7E  044F               	iorwf	___fldiv@rem+2,w
 20164  1D7F  044E               	iorwf	___fldiv@rem+1,w
 20165  1D80  044D               	iorwf	___fldiv@rem,w
 20166  1D81  1D03               	btfss	3,2
 20167  1D82  1454               	bsf	___fldiv@grs,0
 20168  1D83                     l5195:	
 20169  1D83  1BC6               	btfsc	___fldiv@b+2,7
 20170  1D84  2D9A               	goto	l5197
 20171  1D85  3001               	movlw	1
 20172  1D86                     u6655:	
 20173  1D86  35C4               	lslf	___fldiv@b,f
 20174  1D87  0DC5               	rlf	___fldiv@b+1,f
 20175  1D88  0DC6               	rlf	___fldiv@b+2,f
 20176  1D89  0DC7               	rlf	___fldiv@b+3,f
 20177  1D8A  0B89               	decfsz	9,f
 20178  1D8B  2D86               	goto	u6655
 20179  1D8C  1BD7               	btfsc	___fldiv@grs+3,7
 20180  1D8D  1444               	bsf	___fldiv@b,0
 20181  1D8E  3001               	movlw	1
 20182  1D8F                     u6675:	
 20183  1D8F  35D4               	lslf	___fldiv@grs,f
 20184  1D90  0DD5               	rlf	___fldiv@grs+1,f
 20185  1D91  0DD6               	rlf	___fldiv@grs+2,f
 20186  1D92  0DD7               	rlf	___fldiv@grs+3,f
 20187  1D93  0B89               	decfsz	9,f
 20188  1D94  2D8F               	goto	u6675
 20189  1D95  30FF               	movlw	255
 20190  1D96  07D2               	addwf	___fldiv@new_exp,f
 20191  1D97  30FF               	movlw	255
 20192  1D98  3DD3               	addwfc	___fldiv@new_exp+1,f
 20193  1D99  2D83               	goto	l5195
 20194  1D9A                     l5197:	
 20195  1D9A  01D9               	clrf	___fldiv@aexp
 20196  1D9B  1FD7               	btfss	___fldiv@grs+3,7
 20197  1D9C  2DB3               	goto	l5207
 20198  1D9D  30FF               	movlw	255
 20199  1D9E  0554               	andwf	___fldiv@grs,w
 20200  1D9F  00C8               	movwf	??___fldiv
 20201  1DA0  30FF               	movlw	255
 20202  1DA1  0555               	andwf	___fldiv@grs+1,w
 20203  1DA2  00C9               	movwf	??___fldiv+1
 20204  1DA3  30FF               	movlw	255
 20205  1DA4  0556               	andwf	___fldiv@grs+2,w
 20206  1DA5  00CA               	movwf	??___fldiv+2
 20207  1DA6  307F               	movlw	127
 20208  1DA7  0557               	andwf	___fldiv@grs+3,w
 20209  1DA8  00CB               	movwf	??___fldiv+3
 20210  1DA9  084B               	movf	??___fldiv+3,w
 20211  1DAA  044A               	iorwf	??___fldiv+2,w
 20212  1DAB  0449               	iorwf	??___fldiv+1,w
 20213  1DAC  0448               	iorwf	??___fldiv,w
 20214  1DAD  1903               	skipnz
 20215  1DAE  1844               	btfsc	___fldiv@b,0
 20216  1DAF  2DB1               	goto	l5203
 20217  1DB0  2DB3               	goto	l5207
 20218  1DB1                     l5203:	
 20219  1DB1  01D9               	clrf	___fldiv@aexp
 20220  1DB2  0AD9               	incf	___fldiv@aexp,f
 20221  1DB3                     l5207:	
 20222  1DB3  0859               	movf	___fldiv@aexp,w
 20223  1DB4  1903               	btfsc	3,2
 20224  1DB5  2DDC               	goto	l5217
 20225  1DB6  3001               	movlw	1
 20226  1DB7  07C4               	addwf	___fldiv@b,f
 20227  1DB8  3000               	movlw	0
 20228  1DB9  3DC5               	addwfc	___fldiv@b+1,f
 20229  1DBA  3000               	movlw	0
 20230  1DBB  3DC6               	addwfc	___fldiv@b+2,f
 20231  1DBC  3000               	movlw	0
 20232  1DBD  3DC7               	addwfc	___fldiv@b+3,f
 20233  1DBE  1C47               	btfss	___fldiv@b+3,0
 20234  1DBF  2DDC               	goto	l5217
 20235  1DC0  0844               	movf	___fldiv@b,w
 20236  1DC1  00C8               	movwf	??___fldiv
 20237  1DC2  0845               	movf	___fldiv@b+1,w
 20238  1DC3  00C9               	movwf	??___fldiv+1
 20239  1DC4  0846               	movf	___fldiv@b+2,w
 20240  1DC5  00CA               	movwf	??___fldiv+2
 20241  1DC6  0847               	movf	___fldiv@b+3,w
 20242  1DC7  00CB               	movwf	??___fldiv+3
 20243  1DC8  3001               	movlw	1
 20244  1DC9  00CC               	movwf	??___fldiv+4
 20245  1DCA                     u6745:	
 20246  1DCA  37CB               	asrf	??___fldiv+3,f
 20247  1DCB  0CCA               	rrf	??___fldiv+2,f
 20248  1DCC  0CC9               	rrf	??___fldiv+1,f
 20249  1DCD  0CC8               	rrf	??___fldiv,f
 20250  1DCE  0BCC               	decfsz	??___fldiv+4,f
 20251  1DCF  2DCA               	goto	u6745
 20252  1DD0  084B               	movf	??___fldiv+3,w
 20253  1DD1  00C7               	movwf	___fldiv@b+3
 20254  1DD2  084A               	movf	??___fldiv+2,w
 20255  1DD3  00C6               	movwf	___fldiv@b+2
 20256  1DD4  0849               	movf	??___fldiv+1,w
 20257  1DD5  00C5               	movwf	___fldiv@b+1
 20258  1DD6  0848               	movf	??___fldiv,w
 20259  1DD7  00C4               	movwf	___fldiv@b
 20260  1DD8  3001               	movlw	1
 20261  1DD9  07D2               	addwf	___fldiv@new_exp,f
 20262  1DDA  3000               	movlw	0
 20263  1DDB  3DD3               	addwfc	___fldiv@new_exp+1,f
 20264  1DDC                     l5217:	
 20265  1DDC  0853               	movf	___fldiv@new_exp+1,w
 20266  1DDD  3A80               	xorlw	128
 20267  1DDE  00C8               	movwf	??___fldiv
 20268  1DDF  3080               	movlw	128
 20269  1DE0  0248               	subwf	??___fldiv,w
 20270  1DE1  1D03               	skipz
 20271  1DE2  2DE5               	goto	u6755
 20272  1DE3  30FF               	movlw	255
 20273  1DE4  0252               	subwf	___fldiv@new_exp,w
 20274  1DE5                     u6755:	
 20275  1DE5  1C03               	skipc
 20276  1DE6  2DF4               	goto	l1337
 20277  1DE7  30FF               	movlw	255
 20278  1DE8  0020               	movlb	0	; select bank0
 20279  1DE9  00D2               	movwf	___fldiv@new_exp
 20280  1DEA  3000               	movlw	0
 20281  1DEB  00D3               	movwf	___fldiv@new_exp+1
 20282  1DEC  3000               	movlw	0
 20283  1DED  00C7               	movwf	___fldiv@b+3
 20284  1DEE  3000               	movlw	0
 20285  1DEF  00C6               	movwf	___fldiv@b+2
 20286  1DF0  3000               	movlw	0
 20287  1DF1  00C5               	movwf	___fldiv@b+1
 20288  1DF2  3000               	movlw	0
 20289  1DF3  00C4               	movwf	___fldiv@b
 20290  1DF4                     l1337:	
 20291  1DF4  0020               	movlb	0	; select bank0
 20292  1DF5  0853               	movf	___fldiv@new_exp+1,w
 20293  1DF6  3A80               	xorlw	128
 20294  1DF7  00C8               	movwf	??___fldiv
 20295  1DF8  3080               	movlw	128
 20296  1DF9  0248               	subwf	??___fldiv,w
 20297  1DFA  1D03               	skipz
 20298  1DFB  2DFE               	goto	u6765
 20299  1DFC  3001               	movlw	1
 20300  1DFD  0252               	subwf	___fldiv@new_exp,w
 20301  1DFE                     u6765:	
 20302  1DFE  1803               	skipnc
 20303  1DFF  2E0C               	goto	l1338
 20304  1E00  0020               	movlb	0	; select bank0
 20305  1E01  01D2               	clrf	___fldiv@new_exp
 20306  1E02  01D3               	clrf	___fldiv@new_exp+1
 20307  1E03  3000               	movlw	0
 20308  1E04  00C7               	movwf	___fldiv@b+3
 20309  1E05  3000               	movlw	0
 20310  1E06  00C6               	movwf	___fldiv@b+2
 20311  1E07  3000               	movlw	0
 20312  1E08  00C5               	movwf	___fldiv@b+1
 20313  1E09  3000               	movlw	0
 20314  1E0A  00C4               	movwf	___fldiv@b
 20315  1E0B  01D1               	clrf	___fldiv@sign
 20316  1E0C                     l1338:	
 20317  1E0C  0020               	movlb	0	; select bank0
 20318  1E0D  0852               	movf	___fldiv@new_exp,w
 20319  1E0E  00C8               	movwf	??___fldiv
 20320  1E0F  0848               	movf	??___fldiv,w
 20321  1E10  00D8               	movwf	___fldiv@bexp
 20322  1E11  1C58               	btfss	___fldiv@bexp,0
 20323  1E12  2E15               	goto	l5231
 20324  1E13  17C6               	bsf	___fldiv@b+2,7
 20325  1E14  2E19               	goto	l1340
 20326  1E15                     l5231:	
 20327  1E15  307F               	movlw	127
 20328  1E16  00C8               	movwf	??___fldiv
 20329  1E17  0848               	movf	??___fldiv,w
 20330  1E18  05C6               	andwf	___fldiv@b+2,f
 20331  1E19                     l1340:	
 20332  1E19  3658               	lsrf	___fldiv@bexp,w
 20333  1E1A  00C8               	movwf	??___fldiv
 20334  1E1B  0848               	movf	??___fldiv,w
 20335  1E1C  00C7               	movwf	___fldiv@b+3
 20336  1E1D  2CFF               	goto	L13
 20337  1E1E                     __end_of___fldiv:	
 20338                           
 20339                           	psect	text78
 20340  1E1E                     __ptext78:	
 20341 ;; *************** function ___fladd *****************
 20342 ;; Defined at:
 20343 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 20344 ;; Parameters:    Size  Location     Type
 20345 ;;  b               4   58[BANK0 ] unsigned char 
 20346 ;;  a               4   62[BANK0 ] unsigned char 
 20347 ;; Auto vars:     Size  Location     Type
 20348 ;;  grs             1   77[BANK0 ] unsigned char 
 20349 ;;  bexp            1   76[BANK0 ] unsigned char 
 20350 ;;  aexp            1   75[BANK0 ] unsigned char 
 20351 ;;  signs           1   74[BANK0 ] unsigned char 
 20352 ;; Return value:  Size  Location     Type
 20353 ;;                  4   58[BANK0 ] unsigned char 
 20354 ;; Registers used:
 20355 ;;		wreg, status,2, status,0
 20356 ;; Tracked objects:
 20357 ;;		On entry : 0/0
 20358 ;;		On exit  : 0/0
 20359 ;;		Unchanged: 0/0
 20360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20361 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20362 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20363 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20364 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20365 ;;Total ram usage:       20 bytes
 20366 ;; Hardware stack levels used:    1
 20367 ;; Hardware stack levels required when called:    1
 20368 ;; This function calls:
 20369 ;;		Nothing
 20370 ;; This function is called by:
 20371 ;;		_updateVoltages
 20372 ;;		_efgtoa
 20373 ;;		___flsub
 20374 ;; This function uses a non-reentrant model
 20375 ;;
 20376                           
 20377                           
 20378                           ;psect for function ___fladd
 20379  1E1E                     ___fladd:	
 20380                           
 20381                           ;incstack = 0
 20382                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 20383  1E1E  0020               	movlb	0	; select bank0
 20384  1E1F  085D               	movf	___fladd@b+3,w
 20385  1E20  3980               	andlw	128
 20386  1E21  00E2               	movwf	??___fladd
 20387  1E22  0862               	movf	??___fladd,w
 20388  1E23  00EA               	movwf	___fladd@signs
 20389  1E24  355D               	lslf	___fladd@b+3,w
 20390  1E25  00E2               	movwf	??___fladd
 20391  1E26  0862               	movf	??___fladd,w
 20392  1E27  00EC               	movwf	___fladd@bexp
 20393  1E28  1BDC               	btfsc	___fladd@b+2,7
 20394  1E29  146C               	bsf	___fladd@bexp,0
 20395  1E2A  086C               	movf	___fladd@bexp,w
 20396  1E2B  1903               	btfsc	3,2
 20397  1E2C  2E3B               	goto	l4507
 20398  1E2D  0A6C               	incf	___fladd@bexp,w
 20399  1E2E  1D03               	btfss	3,2
 20400  1E2F  2E38               	goto	l4503
 20401  1E30  3000               	movlw	0
 20402  1E31  00DD               	movwf	___fladd@b+3
 20403  1E32  3000               	movlw	0
 20404  1E33  00DC               	movwf	___fladd@b+2
 20405  1E34  3000               	movlw	0
 20406  1E35  00DB               	movwf	___fladd@b+1
 20407  1E36  3000               	movlw	0
 20408  1E37  00DA               	movwf	___fladd@b
 20409  1E38                     l4503:	
 20410  1E38  17DC               	bsf	___fladd@b+2,7
 20411  1E39  01DD               	clrf	___fladd@b+3
 20412  1E3A  2E43               	goto	l4509
 20413  1E3B                     l4507:	
 20414  1E3B  3000               	movlw	0
 20415  1E3C  00DD               	movwf	___fladd@b+3
 20416  1E3D  3000               	movlw	0
 20417  1E3E  00DC               	movwf	___fladd@b+2
 20418  1E3F  3000               	movlw	0
 20419  1E40  00DB               	movwf	___fladd@b+1
 20420  1E41  3000               	movlw	0
 20421  1E42  00DA               	movwf	___fladd@b
 20422  1E43                     l4509:	
 20423  1E43  0861               	movf	___fladd@a+3,w
 20424  1E44  3980               	andlw	128
 20425  1E45  00E2               	movwf	??___fladd
 20426  1E46  0862               	movf	??___fladd,w
 20427  1E47  00EB               	movwf	___fladd@aexp
 20428  1E48  086B               	movf	___fladd@aexp,w
 20429  1E49  066A               	xorwf	___fladd@signs,w
 20430  1E4A  1D03               	btfss	3,2
 20431  1E4B  176A               	bsf	___fladd@signs,6
 20432  1E4C  3561               	lslf	___fladd@a+3,w
 20433  1E4D  00E2               	movwf	??___fladd
 20434  1E4E  0862               	movf	??___fladd,w
 20435  1E4F  00EB               	movwf	___fladd@aexp
 20436  1E50  1BE0               	btfsc	___fladd@a+2,7
 20437  1E51  146B               	bsf	___fladd@aexp,0
 20438  1E52  086B               	movf	___fladd@aexp,w
 20439  1E53  1903               	btfsc	3,2
 20440  1E54  2E63               	goto	l4531
 20441  1E55  0A6B               	incf	___fladd@aexp,w
 20442  1E56  1D03               	btfss	3,2
 20443  1E57  2E60               	goto	l4527
 20444  1E58  3000               	movlw	0
 20445  1E59  00E1               	movwf	___fladd@a+3
 20446  1E5A  3000               	movlw	0
 20447  1E5B  00E0               	movwf	___fladd@a+2
 20448  1E5C  3000               	movlw	0
 20449  1E5D  00DF               	movwf	___fladd@a+1
 20450  1E5E  3000               	movlw	0
 20451  1E5F  00DE               	movwf	___fladd@a
 20452  1E60                     l4527:	
 20453  1E60  17E0               	bsf	___fladd@a+2,7
 20454  1E61  01E1               	clrf	___fladd@a+3
 20455  1E62  2E6B               	goto	l1260
 20456  1E63                     l4531:	
 20457  1E63  3000               	movlw	0
 20458  1E64  00E1               	movwf	___fladd@a+3
 20459  1E65  3000               	movlw	0
 20460  1E66  00E0               	movwf	___fladd@a+2
 20461  1E67  3000               	movlw	0
 20462  1E68  00DF               	movwf	___fladd@a+1
 20463  1E69  3000               	movlw	0
 20464  1E6A  00DE               	movwf	___fladd@a
 20465  1E6B                     l1260:	
 20466  1E6B  086C               	movf	___fladd@bexp,w
 20467  1E6C  026B               	subwf	___fladd@aexp,w
 20468  1E6D  1803               	skipnc
 20469  1E6E  2EB1               	goto	l4567
 20470  1E6F  1F6A               	btfss	___fladd@signs,6
 20471  1E70  2E75               	goto	l4537
 20472  1E71  3080               	movlw	128
 20473  1E72  00E2               	movwf	??___fladd
 20474  1E73  0862               	movf	??___fladd,w
 20475  1E74  06EA               	xorwf	___fladd@signs,f
 20476  1E75                     l4537:	
 20477  1E75  086C               	movf	___fladd@bexp,w
 20478  1E76  00E2               	movwf	??___fladd
 20479  1E77  0862               	movf	??___fladd,w
 20480  1E78  00ED               	movwf	___fladd@grs
 20481  1E79  086B               	movf	___fladd@aexp,w
 20482  1E7A  00E2               	movwf	??___fladd
 20483  1E7B  0862               	movf	??___fladd,w
 20484  1E7C  00EC               	movwf	___fladd@bexp
 20485  1E7D  086D               	movf	___fladd@grs,w
 20486  1E7E  00E2               	movwf	??___fladd
 20487  1E7F  0862               	movf	??___fladd,w
 20488  1E80  00EB               	movwf	___fladd@aexp
 20489  1E81  085A               	movf	___fladd@b,w
 20490  1E82  00E2               	movwf	??___fladd
 20491  1E83  0862               	movf	??___fladd,w
 20492  1E84  00ED               	movwf	___fladd@grs
 20493  1E85  085E               	movf	___fladd@a,w
 20494  1E86  00E2               	movwf	??___fladd
 20495  1E87  0862               	movf	??___fladd,w
 20496  1E88  00DA               	movwf	___fladd@b
 20497  1E89  086D               	movf	___fladd@grs,w
 20498  1E8A  00E2               	movwf	??___fladd
 20499  1E8B  0862               	movf	??___fladd,w
 20500  1E8C  00DE               	movwf	___fladd@a
 20501  1E8D  085B               	movf	___fladd@b+1,w
 20502  1E8E  00E2               	movwf	??___fladd
 20503  1E8F  0862               	movf	??___fladd,w
 20504  1E90  00ED               	movwf	___fladd@grs
 20505  1E91  085F               	movf	___fladd@a+1,w
 20506  1E92  00E2               	movwf	??___fladd
 20507  1E93  0862               	movf	??___fladd,w
 20508  1E94  00DB               	movwf	___fladd@b+1
 20509  1E95  086D               	movf	___fladd@grs,w
 20510  1E96  00E2               	movwf	??___fladd
 20511  1E97  0862               	movf	??___fladd,w
 20512  1E98  00DF               	movwf	___fladd@a+1
 20513  1E99  085C               	movf	___fladd@b+2,w
 20514  1E9A  00E2               	movwf	??___fladd
 20515  1E9B  0862               	movf	??___fladd,w
 20516  1E9C  00ED               	movwf	___fladd@grs
 20517  1E9D  0860               	movf	___fladd@a+2,w
 20518  1E9E  00E2               	movwf	??___fladd
 20519  1E9F  0862               	movf	??___fladd,w
 20520  1EA0  00DC               	movwf	___fladd@b+2
 20521  1EA1  086D               	movf	___fladd@grs,w
 20522  1EA2  00E2               	movwf	??___fladd
 20523  1EA3  0862               	movf	??___fladd,w
 20524  1EA4  00E0               	movwf	___fladd@a+2
 20525  1EA5  085D               	movf	___fladd@b+3,w
 20526  1EA6  00E2               	movwf	??___fladd
 20527  1EA7  0862               	movf	??___fladd,w
 20528  1EA8  00ED               	movwf	___fladd@grs
 20529  1EA9  0861               	movf	___fladd@a+3,w
 20530  1EAA  00E2               	movwf	??___fladd
 20531  1EAB  0862               	movf	??___fladd,w
 20532  1EAC  00DD               	movwf	___fladd@b+3
 20533  1EAD  086D               	movf	___fladd@grs,w
 20534  1EAE  00E2               	movwf	??___fladd
 20535  1EAF  0862               	movf	??___fladd,w
 20536  1EB0  00E1               	movwf	___fladd@a+3
 20537  1EB1                     l4567:	
 20538  1EB1  01ED               	clrf	___fladd@grs
 20539  1EB2  086B               	movf	___fladd@aexp,w
 20540  1EB3  00E2               	movwf	??___fladd
 20541  1EB4  01E3               	clrf	??___fladd+1
 20542  1EB5  0863               	movf	??___fladd+1,w
 20543  1EB6  00E5               	movwf	??___fladd+3
 20544  1EB7  086C               	movf	___fladd@bexp,w
 20545  1EB8  0262               	subwf	??___fladd,w
 20546  1EB9  00E4               	movwf	??___fladd+2
 20547  1EBA  1C03               	skipc
 20548  1EBB  03E5               	decf	??___fladd+3,f
 20549  1EBC  0865               	movf	??___fladd+3,w
 20550  1EBD  3A80               	xorlw	128
 20551  1EBE  00E6               	movwf	??___fladd+4
 20552  1EBF  3080               	movlw	128
 20553  1EC0  0266               	subwf	??___fladd+4,w
 20554  1EC1  1D03               	skipz
 20555  1EC2  2EC5               	goto	u5035
 20556  1EC3  301A               	movlw	26
 20557  1EC4  0264               	subwf	??___fladd+2,w
 20558  1EC5                     u5035:	
 20559  1EC5  1C03               	skipc
 20560  1EC6  2EF9               	goto	l4585
 20561  1EC7  0020               	movlb	0	; select bank0
 20562  1EC8  085D               	movf	___fladd@b+3,w
 20563  1EC9  045C               	iorwf	___fladd@b+2,w
 20564  1ECA  045B               	iorwf	___fladd@b+1,w
 20565  1ECB  045A               	iorwf	___fladd@b,w
 20566  1ECC  1903               	btfsc	3,2
 20567  1ECD  2ED0               	goto	u5040
 20568  1ECE  3001               	movlw	1
 20569  1ECF  2ED1               	goto	u5050
 20570  1ED0                     u5040:	
 20571  1ED0  3000               	movlw	0
 20572  1ED1                     u5050:	
 20573  1ED1  00E2               	movwf	??___fladd
 20574  1ED2  0862               	movf	??___fladd,w
 20575  1ED3  00ED               	movwf	___fladd@grs
 20576  1ED4  3000               	movlw	0
 20577  1ED5  00DD               	movwf	___fladd@b+3
 20578  1ED6  3000               	movlw	0
 20579  1ED7  00DC               	movwf	___fladd@b+2
 20580  1ED8  3000               	movlw	0
 20581  1ED9  00DB               	movwf	___fladd@b+1
 20582  1EDA  3000               	movlw	0
 20583  1EDB  00DA               	movwf	___fladd@b
 20584  1EDC  086B               	movf	___fladd@aexp,w
 20585  1EDD  00E2               	movwf	??___fladd
 20586  1EDE  0862               	movf	??___fladd,w
 20587  1EDF  00EC               	movwf	___fladd@bexp
 20588  1EE0  2EFE               	goto	l1264
 20589  1EE1                     l1266:	
 20590  1EE1  1C6D               	btfss	___fladd@grs,0
 20591  1EE2  2EE9               	goto	l4575
 20592  1EE3  366D               	lsrf	___fladd@grs,w
 20593  1EE4  3801               	iorlw	1
 20594  1EE5  00E2               	movwf	??___fladd
 20595  1EE6  0862               	movf	??___fladd,w
 20596  1EE7  00ED               	movwf	___fladd@grs
 20597  1EE8  2EEB               	goto	l4577
 20598  1EE9                     l4575:	
 20599  1EE9  1003               	clrc
 20600  1EEA  0CED               	rrf	___fladd@grs,f
 20601  1EEB                     l4577:	
 20602  1EEB  185A               	btfsc	___fladd@b,0
 20603  1EEC  17ED               	bsf	___fladd@grs,7
 20604  1EED  3001               	movlw	1
 20605  1EEE  00E2               	movwf	??___fladd
 20606  1EEF                     u5085:	
 20607  1EEF  37DD               	asrf	___fladd@b+3,f
 20608  1EF0  0CDC               	rrf	___fladd@b+2,f
 20609  1EF1  0CDB               	rrf	___fladd@b+1,f
 20610  1EF2  0CDA               	rrf	___fladd@b,f
 20611  1EF3  0BE2               	decfsz	??___fladd& (0+127),f
 20612  1EF4  2EEF               	goto	u5085
 20613  1EF5  3001               	movlw	1
 20614  1EF6  00E2               	movwf	??___fladd
 20615  1EF7  0862               	movf	??___fladd,w
 20616  1EF8  07EC               	addwf	___fladd@bexp,f
 20617  1EF9                     l4585:	
 20618  1EF9  0020               	movlb	0	; select bank0
 20619  1EFA  086B               	movf	___fladd@aexp,w
 20620  1EFB  026C               	subwf	___fladd@bexp,w
 20621  1EFC  1C03               	skipc
 20622  1EFD  2EE1               	goto	l1266
 20623  1EFE                     l1264:	
 20624  1EFE  1B6A               	btfsc	___fladd@signs,6
 20625  1EFF  2F2F               	goto	l4611
 20626  1F00  086C               	movf	___fladd@bexp,w
 20627  1F01  1D03               	btfss	3,2
 20628  1F02  2F0C               	goto	l4593
 20629  1F03  3000               	movlw	0
 20630  1F04  00DD               	movwf	?___fladd+3
 20631  1F05  3000               	movlw	0
 20632  1F06  00DC               	movwf	?___fladd+2
 20633  1F07  3000               	movlw	0
 20634  1F08  00DB               	movwf	?___fladd+1
 20635  1F09  3000               	movlw	0
 20636  1F0A  00DA               	movwf	?___fladd
 20637  1F0B  0008               	return
 20638  1F0C                     l4593:	
 20639  1F0C  085E               	movf	___fladd@a,w
 20640  1F0D  07DA               	addwf	___fladd@b,f
 20641  1F0E  085F               	movf	___fladd@a+1,w
 20642  1F0F  3DDB               	addwfc	___fladd@b+1,f
 20643  1F10  0860               	movf	___fladd@a+2,w
 20644  1F11  3DDC               	addwfc	___fladd@b+2,f
 20645  1F12  0861               	movf	___fladd@a+3,w
 20646  1F13  3DDD               	addwfc	___fladd@b+3,f
 20647  1F14  1C5D               	btfss	___fladd@b+3,0
 20648  1F15  2FA9               	goto	l4645
 20649  1F16  1C6D               	btfss	___fladd@grs,0
 20650  1F17  2F1E               	goto	l4601
 20651  1F18  366D               	lsrf	___fladd@grs,w
 20652  1F19  3801               	iorlw	1
 20653  1F1A  00E2               	movwf	??___fladd
 20654  1F1B  0862               	movf	??___fladd,w
 20655  1F1C  00ED               	movwf	___fladd@grs
 20656  1F1D  2F20               	goto	l4603
 20657  1F1E                     l4601:	
 20658  1F1E  1003               	clrc
 20659  1F1F  0CED               	rrf	___fladd@grs,f
 20660  1F20                     l4603:	
 20661  1F20  185A               	btfsc	___fladd@b,0
 20662  1F21  17ED               	bsf	___fladd@grs,7
 20663  1F22  3001               	movlw	1
 20664  1F23  00E2               	movwf	??___fladd
 20665  1F24                     u5155:	
 20666  1F24  37DD               	asrf	___fladd@b+3,f
 20667  1F25  0CDC               	rrf	___fladd@b+2,f
 20668  1F26  0CDB               	rrf	___fladd@b+1,f
 20669  1F27  0CDA               	rrf	___fladd@b,f
 20670  1F28  0BE2               	decfsz	??___fladd& (0+127),f
 20671  1F29  2F24               	goto	u5155
 20672  1F2A  3001               	movlw	1
 20673  1F2B  00E2               	movwf	??___fladd
 20674  1F2C  0862               	movf	??___fladd,w
 20675  1F2D  07EC               	addwf	___fladd@bexp,f
 20676  1F2E  2FA9               	goto	l4645
 20677  1F2F                     l4611:	
 20678  1F2F  085D               	movf	___fladd@b+3,w
 20679  1F30  3A80               	xorlw	128
 20680  1F31  00E2               	movwf	??___fladd
 20681  1F32  0861               	movf	___fladd@a+3,w
 20682  1F33  3A80               	xorlw	128
 20683  1F34  0262               	subwf	??___fladd,w
 20684  1F35  1D03               	skipz
 20685  1F36  2F41               	goto	u5163
 20686  1F37  0860               	movf	___fladd@a+2,w
 20687  1F38  025C               	subwf	___fladd@b+2,w
 20688  1F39  1D03               	skipz
 20689  1F3A  2F41               	goto	u5163
 20690  1F3B  085F               	movf	___fladd@a+1,w
 20691  1F3C  025B               	subwf	___fladd@b+1,w
 20692  1F3D  1D03               	skipz
 20693  1F3E  2F41               	goto	u5163
 20694  1F3F  085E               	movf	___fladd@a,w
 20695  1F40  025A               	subwf	___fladd@b,w
 20696  1F41                     u5163:	
 20697  1F41  1803               	skipnc
 20698  1F42  2F79               	goto	l4621
 20699  1F43  30FF               	movlw	255
 20700  1F44  00E2               	movwf	??___fladd
 20701  1F45  30FF               	movlw	255
 20702  1F46  00E3               	movwf	??___fladd+1
 20703  1F47  30FF               	movlw	255
 20704  1F48  00E4               	movwf	??___fladd+2
 20705  1F49  30FF               	movlw	255
 20706  1F4A  00E5               	movwf	??___fladd+3
 20707  1F4B  085A               	movf	___fladd@b,w
 20708  1F4C  025E               	subwf	___fladd@a,w
 20709  1F4D  00E6               	movwf	??___fladd+4
 20710  1F4E  085B               	movf	___fladd@b+1,w
 20711  1F4F  3B5F               	subwfb	___fladd@a+1,w
 20712  1F50  00E7               	movwf	??___fladd+5
 20713  1F51  085C               	movf	___fladd@b+2,w
 20714  1F52  3B60               	subwfb	___fladd@a+2,w
 20715  1F53  00E8               	movwf	??___fladd+6
 20716  1F54  085D               	movf	___fladd@b+3,w
 20717  1F55  3B61               	subwfb	___fladd@a+3,w
 20718  1F56  00E9               	movwf	??___fladd+7
 20719  1F57  0866               	movf	??___fladd+4,w
 20720  1F58  07E2               	addwf	??___fladd,f
 20721  1F59  0867               	movf	??___fladd+5,w
 20722  1F5A  3DE3               	addwfc	??___fladd+1,f
 20723  1F5B  0868               	movf	??___fladd+6,w
 20724  1F5C  3DE4               	addwfc	??___fladd+2,f
 20725  1F5D  0869               	movf	??___fladd+7,w
 20726  1F5E  3DE5               	addwfc	??___fladd+3,f
 20727  1F5F  0865               	movf	??___fladd+3,w
 20728  1F60  00DD               	movwf	___fladd@b+3
 20729  1F61  0864               	movf	??___fladd+2,w
 20730  1F62  00DC               	movwf	___fladd@b+2
 20731  1F63  0863               	movf	??___fladd+1,w
 20732  1F64  00DB               	movwf	___fladd@b+1
 20733  1F65  0862               	movf	??___fladd,w
 20734  1F66  00DA               	movwf	___fladd@b
 20735  1F67  3080               	movlw	128
 20736  1F68  00E2               	movwf	??___fladd
 20737  1F69  0862               	movf	??___fladd,w
 20738  1F6A  06EA               	xorwf	___fladd@signs,f
 20739  1F6B  09ED               	comf	___fladd@grs,f
 20740  1F6C  0AED               	incf	___fladd@grs,f
 20741  1F6D  086D               	movf	___fladd@grs,w
 20742  1F6E  1D03               	btfss	3,2
 20743  1F6F  2F81               	goto	l1281
 20744  1F70  3001               	movlw	1
 20745  1F71  07DA               	addwf	___fladd@b,f
 20746  1F72  3000               	movlw	0
 20747  1F73  3DDB               	addwfc	___fladd@b+1,f
 20748  1F74  3000               	movlw	0
 20749  1F75  3DDC               	addwfc	___fladd@b+2,f
 20750  1F76  3000               	movlw	0
 20751  1F77  3DDD               	addwfc	___fladd@b+3,f
 20752  1F78  2F81               	goto	l1281
 20753  1F79                     l4621:	
 20754  1F79  085E               	movf	___fladd@a,w
 20755  1F7A  02DA               	subwf	___fladd@b,f
 20756  1F7B  085F               	movf	___fladd@a+1,w
 20757  1F7C  3BDB               	subwfb	___fladd@b+1,f
 20758  1F7D  0860               	movf	___fladd@a+2,w
 20759  1F7E  3BDC               	subwfb	___fladd@b+2,f
 20760  1F7F  0861               	movf	___fladd@a+3,w
 20761  1F80  3BDD               	subwfb	___fladd@b+3,f
 20762  1F81                     l1281:	
 20763  1F81  085D               	movf	___fladd@b+3,w
 20764  1F82  045C               	iorwf	___fladd@b+2,w
 20765  1F83  045B               	iorwf	___fladd@b+1,w
 20766  1F84  045A               	iorwf	___fladd@b,w
 20767  1F85  1D03               	skipz
 20768  1F86  2FA7               	goto	l4643
 20769  1F87  086D               	movf	___fladd@grs,w
 20770  1F88  1D03               	btfss	3,2
 20771  1F89  2FA7               	goto	l4643
 20772  1F8A  3000               	movlw	0
 20773  1F8B  00DD               	movwf	?___fladd+3
 20774  1F8C  3000               	movlw	0
 20775  1F8D  00DC               	movwf	?___fladd+2
 20776  1F8E  3000               	movlw	0
 20777  1F8F  00DB               	movwf	?___fladd+1
 20778  1F90  3000               	movlw	0
 20779  1F91  00DA               	movwf	?___fladd
 20780  1F92  0008               	return
 20781  1F93                     l4629:	
 20782  1F93  3001               	movlw	1
 20783  1F94                     u5205:	
 20784  1F94  35DA               	lslf	___fladd@b,f
 20785  1F95  0DDB               	rlf	___fladd@b+1,f
 20786  1F96  0DDC               	rlf	___fladd@b+2,f
 20787  1F97  0DDD               	rlf	___fladd@b+3,f
 20788  1F98  0B89               	decfsz	9,f
 20789  1F99  2F94               	goto	u5205
 20790  1F9A  1BED               	btfsc	___fladd@grs,7
 20791  1F9B  145A               	bsf	___fladd@b,0
 20792  1F9C  1C6D               	btfss	___fladd@grs,0
 20793  1F9D  2FA0               	goto	l4637
 20794  1F9E  1403               	setc
 20795  1F9F  2FA1               	goto	L14
 20796  1FA0                     l4637:	
 20797  1FA0  1003               	clrc
 20798  1FA1                     L14:	
 20799  1FA1  0DED               	rlf	___fladd@grs,f
 20800  1FA2  086C               	movf	___fladd@bexp,w
 20801  1FA3  1903               	btfsc	3,2
 20802  1FA4  2FA7               	goto	l4643
 20803  1FA5  3001               	movlw	1
 20804  1FA6  02EC               	subwf	___fladd@bexp,f
 20805  1FA7                     l4643:	
 20806  1FA7  1FDC               	btfss	___fladd@b+2,7
 20807  1FA8  2F93               	goto	l4629
 20808  1FA9                     l4645:	
 20809  1FA9  01EB               	clrf	___fladd@aexp
 20810  1FAA  1FED               	btfss	___fladd@grs,7
 20811  1FAB  2FB4               	goto	l4655
 20812  1FAC  086D               	movf	___fladd@grs,w
 20813  1FAD  397F               	andlw	127
 20814  1FAE  1903               	btfsc	3,2
 20815  1FAF  185A               	btfsc	___fladd@b,0
 20816  1FB0  2FB2               	goto	l4651
 20817  1FB1  2FB4               	goto	l4655
 20818  1FB2                     l4651:	
 20819  1FB2  01EB               	clrf	___fladd@aexp
 20820  1FB3  0AEB               	incf	___fladd@aexp,f
 20821  1FB4                     l4655:	
 20822  1FB4  086B               	movf	___fladd@aexp,w
 20823  1FB5  1903               	btfsc	3,2
 20824  1FB6  2FE0               	goto	l1294
 20825  1FB7  3001               	movlw	1
 20826  1FB8  07DA               	addwf	___fladd@b,f
 20827  1FB9  3000               	movlw	0
 20828  1FBA  3DDB               	addwfc	___fladd@b+1,f
 20829  1FBB  3000               	movlw	0
 20830  1FBC  3DDC               	addwfc	___fladd@b+2,f
 20831  1FBD  3000               	movlw	0
 20832  1FBE  3DDD               	addwfc	___fladd@b+3,f
 20833  1FBF  1C5D               	btfss	___fladd@b+3,0
 20834  1FC0  2FE0               	goto	l1294
 20835  1FC1  085A               	movf	___fladd@b,w
 20836  1FC2  00E2               	movwf	??___fladd
 20837  1FC3  085B               	movf	___fladd@b+1,w
 20838  1FC4  00E3               	movwf	??___fladd+1
 20839  1FC5  085C               	movf	___fladd@b+2,w
 20840  1FC6  00E4               	movwf	??___fladd+2
 20841  1FC7  085D               	movf	___fladd@b+3,w
 20842  1FC8  00E5               	movwf	??___fladd+3
 20843  1FC9  3001               	movlw	1
 20844  1FCA  00E6               	movwf	??___fladd+4
 20845  1FCB                     u5305:	
 20846  1FCB  37E5               	asrf	??___fladd+3,f
 20847  1FCC  0CE4               	rrf	??___fladd+2,f
 20848  1FCD  0CE3               	rrf	??___fladd+1,f
 20849  1FCE  0CE2               	rrf	??___fladd,f
 20850  1FCF  0BE6               	decfsz	??___fladd+4,f
 20851  1FD0  2FCB               	goto	u5305
 20852  1FD1  0865               	movf	??___fladd+3,w
 20853  1FD2  00DD               	movwf	___fladd@b+3
 20854  1FD3  0864               	movf	??___fladd+2,w
 20855  1FD4  00DC               	movwf	___fladd@b+2
 20856  1FD5  0863               	movf	??___fladd+1,w
 20857  1FD6  00DB               	movwf	___fladd@b+1
 20858  1FD7  0862               	movf	??___fladd,w
 20859  1FD8  00DA               	movwf	___fladd@b
 20860  1FD9  0A6C               	incf	___fladd@bexp,w
 20861  1FDA  1903               	btfsc	3,2
 20862  1FDB  2FE0               	goto	l1294
 20863  1FDC  3001               	movlw	1
 20864  1FDD  00E2               	movwf	??___fladd
 20865  1FDE  0862               	movf	??___fladd,w
 20866  1FDF  07EC               	addwf	___fladd@bexp,f
 20867  1FE0                     l1294:	
 20868  1FE0  0A6C               	incf	___fladd@bexp,w
 20869  1FE1  1D03               	btfss	3,2
 20870  1FE2  086C               	movf	___fladd@bexp,w
 20871  1FE3  1D03               	btfss	3,2
 20872  1FE4  2FF0               	goto	l4673
 20873  1FE5  3000               	movlw	0
 20874  1FE6  00DD               	movwf	___fladd@b+3
 20875  1FE7  3000               	movlw	0
 20876  1FE8  00DC               	movwf	___fladd@b+2
 20877  1FE9  3000               	movlw	0
 20878  1FEA  00DB               	movwf	___fladd@b+1
 20879  1FEB  3000               	movlw	0
 20880  1FEC  00DA               	movwf	___fladd@b
 20881  1FED  086C               	movf	___fladd@bexp,w
 20882  1FEE  1903               	btfsc	3,2
 20883  1FEF  01EA               	clrf	___fladd@signs
 20884  1FF0                     l4673:	
 20885  1FF0  1C6C               	btfss	___fladd@bexp,0
 20886  1FF1  2FF4               	goto	l4677
 20887  1FF2  17DC               	bsf	___fladd@b+2,7
 20888  1FF3  2FF8               	goto	l1302
 20889  1FF4                     l4677:	
 20890  1FF4  307F               	movlw	127
 20891  1FF5  00E2               	movwf	??___fladd
 20892  1FF6  0862               	movf	??___fladd,w
 20893  1FF7  05DC               	andwf	___fladd@b+2,f
 20894  1FF8                     l1302:	
 20895  1FF8  366C               	lsrf	___fladd@bexp,w
 20896  1FF9  00E2               	movwf	??___fladd
 20897  1FFA  0862               	movf	??___fladd,w
 20898  1FFB  00DD               	movwf	___fladd@b+3
 20899  1FFC  1FEA               	btfss	___fladd@signs,7
 20900  1FFD  0008               	return
 20901  1FFE  17DD               	bsf	___fladd@b+3,7
 20902  1FFF  0008               	return
 20903  2000                     __end_of___fladd:	
 20904                           
 20905                           	psect	text79
 20906  1800                     __ptext79:	
 20907 ;; *************** function _init_TMR1 *****************
 20908 ;; Defined at:
 20909 ;;		line 187 in file "main.c"
 20910 ;; Parameters:    Size  Location     Type
 20911 ;;		None
 20912 ;; Auto vars:     Size  Location     Type
 20913 ;;		None
 20914 ;; Return value:  Size  Location     Type
 20915 ;;                  1    wreg      void 
 20916 ;; Registers used:
 20917 ;;		wreg, status,2, status,0
 20918 ;; Tracked objects:
 20919 ;;		On entry : 0/0
 20920 ;;		On exit  : 0/0
 20921 ;;		Unchanged: 0/0
 20922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20927 ;;Total ram usage:        0 bytes
 20928 ;; Hardware stack levels used:    1
 20929 ;; Hardware stack levels required when called:    1
 20930 ;; This function calls:
 20931 ;;		Nothing
 20932 ;; This function is called by:
 20933 ;;		_main
 20934 ;; This function uses a non-reentrant model
 20935 ;;
 20936                           
 20937                           
 20938                           ;psect for function _init_TMR1
 20939  1800                     _init_TMR1:	
 20940                           
 20941                           ;main.c: 190:     T1CONbits.T1CKPS = 0b00;
 20942                           
 20943                           ;incstack = 0
 20944                           ; Regs used in _init_TMR1: [wreg+status,2+status,0]
 20945  1800  30CF               	movlw	-49
 20946  1801  0020               	movlb	0	; select bank0
 20947  1802  0598               	andwf	24,f	;volatile
 20948                           
 20949                           ;main.c: 192:     TMR1 = 0;
 20950  1803  0196               	clrf	22	;volatile
 20951  1804  0197               	clrf	23	;volatile
 20952                           
 20953                           ;main.c: 194:     T1CONbits.TMR1ON = 1;
 20954  1805  1418               	bsf	24,0	;volatile
 20955                           
 20956                           ;main.c: 196:     PIE1bits.TMR1IE = 1;
 20957  1806  0021               	movlb	1	; select bank1
 20958  1807  1411               	bsf	17,0	;volatile
 20959                           
 20960                           ;main.c: 198:     INTCONbits.PEIE = 1;
 20961  1808  170B               	bsf	11,6	;volatile
 20962                           
 20963                           ;main.c: 200:     (INTCONbits.GIE = 1);
 20964  1809  178B               	bsf	11,7	;volatile
 20965  180A  0008               	return
 20966  180B                     __end_of_init_TMR1:	
 20967                           
 20968                           	psect	text80
 20969  3E30                     __ptext80:	
 20970 ;; *************** function _init_RGB *****************
 20971 ;; Defined at:
 20972 ;;		line 6 in file "RGB.c"
 20973 ;; Parameters:    Size  Location     Type
 20974 ;;		None
 20975 ;; Auto vars:     Size  Location     Type
 20976 ;;		None
 20977 ;; Return value:  Size  Location     Type
 20978 ;;                  1    wreg      void 
 20979 ;; Registers used:
 20980 ;;		None
 20981 ;; Tracked objects:
 20982 ;;		On entry : 0/0
 20983 ;;		On exit  : 0/0
 20984 ;;		Unchanged: 0/0
 20985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20990 ;;Total ram usage:        0 bytes
 20991 ;; Hardware stack levels used:    1
 20992 ;; Hardware stack levels required when called:    1
 20993 ;; This function calls:
 20994 ;;		Nothing
 20995 ;; This function is called by:
 20996 ;;		_main
 20997 ;; This function uses a non-reentrant model
 20998 ;;
 20999                           
 21000                           
 21001                           ;psect for function _init_RGB
 21002  3E30                     _init_RGB:	
 21003                           
 21004                           ;RGB.c: 8:     LATAbits.LATA4 = 1;
 21005                           
 21006                           ;incstack = 0
 21007                           ; Regs used in _init_RGB: []
 21008  3E30  0022               	movlb	2	; select bank2
 21009  3E31  160C               	bsf	12,4	;volatile
 21010                           
 21011                           ;RGB.c: 9:     LATAbits.LATA5 = 1;
 21012  3E32  168C               	bsf	12,5	;volatile
 21013                           
 21014                           ;RGB.c: 10:     LATEbits.LATE0 = 1;
 21015  3E33  1410               	bsf	16,0	;volatile
 21016  3E34  0008               	return
 21017  3E35                     __end_of_init_RGB:	
 21018                           
 21019                           	psect	text81
 21020  3E9F                     __ptext81:	
 21021 ;; *************** function _init_I2C *****************
 21022 ;; Defined at:
 21023 ;;		line 10 in file "I2C.c"
 21024 ;; Parameters:    Size  Location     Type
 21025 ;;		None
 21026 ;; Auto vars:     Size  Location     Type
 21027 ;;		None
 21028 ;; Return value:  Size  Location     Type
 21029 ;;                  1    wreg      void 
 21030 ;; Registers used:
 21031 ;;		wreg, status,2, status,0
 21032 ;; Tracked objects:
 21033 ;;		On entry : 0/0
 21034 ;;		On exit  : 0/0
 21035 ;;		Unchanged: 0/0
 21036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21039 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21040 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21041 ;;Total ram usage:        1 bytes
 21042 ;; Hardware stack levels used:    1
 21043 ;; Hardware stack levels required when called:    1
 21044 ;; This function calls:
 21045 ;;		Nothing
 21046 ;; This function is called by:
 21047 ;;		_main
 21048 ;; This function uses a non-reentrant model
 21049 ;;
 21050                           
 21051                           
 21052                           ;psect for function _init_I2C
 21053  3E9F                     _init_I2C:	
 21054                           
 21055                           ;I2C.c: 14:     SSPCONbits.SSPM = 0x08;
 21056                           
 21057                           ;incstack = 0
 21058                           ; Regs used in _init_I2C: [wreg+status,2+status,0]
 21059  3E9F  0024               	movlb	4	; select bank4
 21060  3EA0  0815               	movf	21,w	;volatile
 21061  3EA1  39F0               	andlw	-16
 21062  3EA2  3808               	iorlw	8
 21063  3EA3  0095               	movwf	21	;volatile
 21064                           
 21065                           ;I2C.c: 15:     SSPCONbits.SSPEN = 1;
 21066  3EA4  1695               	bsf	21,5	;volatile
 21067                           
 21068                           ;I2C.c: 24:     SSPADD = 39;
 21069  3EA5  3027               	movlw	39
 21070  3EA6  0092               	movwf	18	;volatile
 21071                           
 21072                           ;I2C.c: 27:     _delay((unsigned long)((10)*(16000000/4000.0)));
 21073  3EA7  3034               	movlw	52
 21074  3EA8  00F1               	movwf	??_init_I2C
 21075  3EA9  30F2               	movlw	242
 21076  3EAA                     u12087:	
 21077  3EAA  0B89               	decfsz	9,f
 21078  3EAB  2EAA               	goto	u12087
 21079  3EAC  0BF1               	decfsz	??_init_I2C,f
 21080  3EAD  2EAA               	goto	u12087
 21081  3EAE  0008               	return
 21082  3EAF                     __end_of_init_I2C:	
 21083                           
 21084                           	psect	text82
 21085  31EF                     __ptext82:	
 21086 ;; *************** function _init_GPIO *****************
 21087 ;; Defined at:
 21088 ;;		line 204 in file "main.c"
 21089 ;; Parameters:    Size  Location     Type
 21090 ;;		None
 21091 ;; Auto vars:     Size  Location     Type
 21092 ;;		None
 21093 ;; Return value:  Size  Location     Type
 21094 ;;                  1    wreg      void 
 21095 ;; Registers used:
 21096 ;;		wreg, status,2, status,0
 21097 ;; Tracked objects:
 21098 ;;		On entry : 0/0
 21099 ;;		On exit  : 0/0
 21100 ;;		Unchanged: 0/0
 21101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21106 ;;Total ram usage:        0 bytes
 21107 ;; Hardware stack levels used:    1
 21108 ;; Hardware stack levels required when called:    1
 21109 ;; This function calls:
 21110 ;;		Nothing
 21111 ;; This function is called by:
 21112 ;;		_main
 21113 ;; This function uses a non-reentrant model
 21114 ;;
 21115                           
 21116                           
 21117                           ;psect for function _init_GPIO
 21118  31EF                     _init_GPIO:	
 21119                           
 21120                           ;main.c: 210:     TRISBbits.TRISB2 = 0;
 21121                           
 21122                           ;incstack = 0
 21123                           ; Regs used in _init_GPIO: [wreg+status,2+status,0]
 21124  31EF  0021               	movlb	1	; select bank1
 21125  31F0  110D               	bcf	13,2	;volatile
 21126                           
 21127                           ;main.c: 211:     ANSELBbits.ANSB2 = 0;
 21128  31F1  0023               	movlb	3	; select bank3
 21129  31F2  110D               	bcf	13,2	;volatile
 21130                           
 21131                           ;main.c: 212:     TRISBbits.TRISB3 = 1;
 21132  31F3  0021               	movlb	1	; select bank1
 21133  31F4  158D               	bsf	13,3	;volatile
 21134                           
 21135                           ;main.c: 213:     ANSELBbits.ANSB3 = 0;
 21136  31F5  0023               	movlb	3	; select bank3
 21137  31F6  118D               	bcf	13,3	;volatile
 21138                           
 21139                           ;main.c: 218:     ANSELCbits.ANSC4 = 0;
 21140  31F7  120E               	bcf	14,4	;volatile
 21141                           
 21142                           ;main.c: 219:     ANSELCbits.ANSC5 = 0;
 21143  31F8  128E               	bcf	14,5	;volatile
 21144                           
 21145                           ;main.c: 220:     TRISCbits.TRISC4 = 1;
 21146  31F9  0021               	movlb	1	; select bank1
 21147  31FA  160E               	bsf	14,4	;volatile
 21148                           
 21149                           ;main.c: 221:     TRISCbits.TRISC5 = 1;
 21150  31FB  168E               	bsf	14,5	;volatile
 21151                           
 21152                           ;main.c: 230:     TRISAbits.TRISA4 = 0;
 21153  31FC  120C               	bcf	12,4	;volatile
 21154                           
 21155                           ;main.c: 231:     TRISAbits.TRISA5 = 0;
 21156  31FD  128C               	bcf	12,5	;volatile
 21157                           
 21158                           ;main.c: 232:     TRISEbits.TRISE0 = 0;
 21159  31FE  1010               	bcf	16,0	;volatile
 21160                           
 21161                           ;main.c: 237:     TRISAbits.TRISA3 = 0;
 21162  31FF  118C               	bcf	12,3	;volatile
 21163                           
 21164                           ;main.c: 238:     LATAbits.LATA3 = 0;
 21165  3200  0022               	movlb	2	; select bank2
 21166  3201  118C               	bcf	12,3	;volatile
 21167                           
 21168                           ;main.c: 244:     PPSLOCK = 0x55;
 21169  3202  3055               	movlw	85
 21170  3203  003C               	movlb	28	; select bank28
 21171  3204  008F               	movwf	15	;volsfr
 21172                           
 21173                           ;main.c: 245:     PPSLOCK = 0xAA;
 21174  3205  30AA               	movlw	170
 21175  3206  008F               	movwf	15	;volsfr
 21176                           
 21177                           ;main.c: 246:     PPSLOCKbits.PPSLOCKED = 0x00;
 21178  3207  100F               	bcf	15,0	;volsfr
 21179                           
 21180                           ;main.c: 250:     RC4PPSbits.RC4PPS = 0x0011;
 21181  3208  003D               	movlb	29	; select bank29
 21182  3209  0824               	movf	36,w	;volatile
 21183  320A  39E0               	andlw	-32
 21184  320B  3811               	iorlw	17
 21185  320C  00A4               	movwf	36	;volatile
 21186                           
 21187                           ;main.c: 251:     SSPDATPPSbits.SSPDATPPS = 0x0014;
 21188  320D  003C               	movlb	28	; select bank28
 21189  320E  0821               	movf	33,w	;volatile
 21190  320F  39E0               	andlw	-32
 21191  3210  3814               	iorlw	20
 21192  3211  00A1               	movwf	33	;volatile
 21193                           
 21194                           ;main.c: 252:     SSPCLKPPSbits.SSPCLKPPS = 0x0015;
 21195  3212  0820               	movf	32,w	;volatile
 21196  3213  39E0               	andlw	-32
 21197  3214  3815               	iorlw	21
 21198  3215  00A0               	movwf	32	;volatile
 21199                           
 21200                           ;main.c: 253:     RC5PPSbits.RC5PPS = 0x0010;
 21201  3216  003D               	movlb	29	; select bank29
 21202  3217  0825               	movf	37,w	;volatile
 21203  3218  39E0               	andlw	-32
 21204  3219  3810               	iorlw	16
 21205  321A  00A5               	movwf	37	;volatile
 21206                           
 21207                           ;main.c: 256:     RB2PPSbits.RB2PPS = 0x14;
 21208  321B  081A               	movf	26,w	;volatile
 21209  321C  39E0               	andlw	-32
 21210  321D  3814               	iorlw	20
 21211  321E  009A               	movwf	26	;volatile
 21212                           
 21213                           ;main.c: 257:     RXPPSbits.RXPPS = 0x0B;
 21214  321F  003C               	movlb	28	; select bank28
 21215  3220  0824               	movf	36,w	;volatile
 21216  3221  39E0               	andlw	-32
 21217  3222  380B               	iorlw	11
 21218  3223  00A4               	movwf	36	;volatile
 21219                           
 21220                           ;main.c: 259:     PPSLOCK = 0x55;
 21221  3224  3055               	movlw	85
 21222  3225  008F               	movwf	15	;volsfr
 21223                           
 21224                           ;main.c: 260:     PPSLOCK = 0xAA;
 21225  3226  30AA               	movlw	170
 21226  3227  008F               	movwf	15	;volsfr
 21227                           
 21228                           ;main.c: 261:     PPSLOCKbits.PPSLOCKED = 0x01;
 21229  3228  140F               	bsf	15,0	;volsfr
 21230  3229  0008               	return
 21231  322A                     __end_of_init_GPIO:	
 21232                           
 21233                           	psect	text83
 21234  3000                     __ptext83:	
 21235 ;; *************** function _initWDT *****************
 21236 ;; Defined at:
 21237 ;;		line 265 in file "main.c"
 21238 ;; Parameters:    Size  Location     Type
 21239 ;;		None
 21240 ;; Auto vars:     Size  Location     Type
 21241 ;;		None
 21242 ;; Return value:  Size  Location     Type
 21243 ;;                  1    wreg      void 
 21244 ;; Registers used:
 21245 ;;		wreg, status,2, status,0
 21246 ;; Tracked objects:
 21247 ;;		On entry : 0/0
 21248 ;;		On exit  : 0/0
 21249 ;;		Unchanged: 0/0
 21250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21255 ;;Total ram usage:        0 bytes
 21256 ;; Hardware stack levels used:    1
 21257 ;; Hardware stack levels required when called:    1
 21258 ;; This function calls:
 21259 ;;		Nothing
 21260 ;; This function is called by:
 21261 ;;		_main
 21262 ;; This function uses a non-reentrant model
 21263 ;;
 21264                           
 21265                           
 21266                           ;psect for function _initWDT
 21267  3000                     _initWDT:	
 21268                           
 21269                           ;main.c: 267:     WDTCONbits.WDTPS = 0b01101;
 21270                           
 21271                           ;incstack = 0
 21272                           ; Regs used in _initWDT: [wreg+status,2+status,0]
 21273  3000  0021               	movlb	1	; select bank1
 21274  3001  0817               	movf	23,w	;volatile
 21275  3002  39C1               	andlw	-63
 21276  3003  381A               	iorlw	26
 21277  3004  0097               	movwf	23	;volatile
 21278  3005  0008               	return
 21279  3006                     __end_of_initWDT:	
 21280                           
 21281                           	psect	text84
 21282  3E27                     __ptext84:	
 21283 ;; *************** function _initClock *****************
 21284 ;; Defined at:
 21285 ;;		line 178 in file "main.c"
 21286 ;; Parameters:    Size  Location     Type
 21287 ;;		None
 21288 ;; Auto vars:     Size  Location     Type
 21289 ;;		None
 21290 ;; Return value:  Size  Location     Type
 21291 ;;                  1    wreg      void 
 21292 ;; Registers used:
 21293 ;;		status,2, status,0, pclath, cstack
 21294 ;; Tracked objects:
 21295 ;;		On entry : 0/0
 21296 ;;		On exit  : 0/0
 21297 ;;		Unchanged: 0/0
 21298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21303 ;;Total ram usage:        0 bytes
 21304 ;; Hardware stack levels used:    1
 21305 ;; Hardware stack levels required when called:    2
 21306 ;; This function calls:
 21307 ;;		_internal_16
 21308 ;; This function is called by:
 21309 ;;		_main
 21310 ;; This function uses a non-reentrant model
 21311 ;;
 21312                           
 21313                           
 21314                           ;psect for function _initClock
 21315  3E27                     _initClock:	
 21316                           
 21317                           ;main.c: 180:     internal_16();
 21318                           
 21319                           ;incstack = 0
 21320                           ; Regs used in _initClock: [status,2+status,0+pclath+cstack]
 21321  3E27  31BE  2654         	fcall	_internal_16
 21322  3E29  0008               	return
 21323  3E2A                     __end_of_initClock:	
 21324                           
 21325                           	psect	text85
 21326  3E54                     __ptext85:	
 21327 ;; *************** function _internal_16 *****************
 21328 ;; Defined at:
 21329 ;;		line 26 in file "pic16f1719_internals.c"
 21330 ;; Parameters:    Size  Location     Type
 21331 ;;		None
 21332 ;; Auto vars:     Size  Location     Type
 21333 ;;		None
 21334 ;; Return value:  Size  Location     Type
 21335 ;;                  1    wreg      void 
 21336 ;; Registers used:
 21337 ;;		None
 21338 ;; Tracked objects:
 21339 ;;		On entry : 0/0
 21340 ;;		On exit  : 0/0
 21341 ;;		Unchanged: 0/0
 21342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21347 ;;Total ram usage:        0 bytes
 21348 ;; Hardware stack levels used:    1
 21349 ;; Hardware stack levels required when called:    1
 21350 ;; This function calls:
 21351 ;;		Nothing
 21352 ;; This function is called by:
 21353 ;;		_initClock
 21354 ;; This function uses a non-reentrant model
 21355 ;;
 21356                           
 21357                           
 21358                           ;psect for function _internal_16
 21359  3E54                     _internal_16:	
 21360                           
 21361                           ;pic16f1719_internals.c: 28: SCS0 = 0;
 21362                           
 21363                           ;incstack = 0
 21364                           ; Regs used in _internal_16: []
 21365  3E54  0021               	movlb	1	; select bank1
 21366  3E55  1019               	bcf	25,0	;volatile
 21367                           
 21368                           ;pic16f1719_internals.c: 29: SCS1 = 0;
 21369  3E56  1099               	bcf	25,1	;volatile
 21370                           
 21371                           ;pic16f1719_internals.c: 31: IRCF0 = 1;
 21372  3E57  1599               	bsf	25,3	;volatile
 21373                           
 21374                           ;pic16f1719_internals.c: 32: IRCF1 = 1;
 21375  3E58  1619               	bsf	25,4	;volatile
 21376                           
 21377                           ;pic16f1719_internals.c: 33: IRCF2 = 1;
 21378  3E59  1699               	bsf	25,5	;volatile
 21379                           
 21380                           ;pic16f1719_internals.c: 34: IRCF3 = 1;
 21381  3E5A  1719               	bsf	25,6	;volatile
 21382                           
 21383                           ;pic16f1719_internals.c: 36: SPLLEN = 0;
 21384  3E5B  1399               	bcf	25,7	;volatile
 21385  3E5C  0008               	return
 21386  3E5D                     __end_of_internal_16:	
 21387                           
 21388                           	psect	text86
 21389  2B36                     __ptext86:	
 21390 ;; *************** function _EUSART_Initialize *****************
 21391 ;; Defined at:
 21392 ;;		line 6 in file "EUSART.c"
 21393 ;; Parameters:    Size  Location     Type
 21394 ;;  baudrate        4   18[BANK0 ] const long 
 21395 ;; Auto vars:     Size  Location     Type
 21396 ;;  x               2   10[COMMON] unsigned int 
 21397 ;; Return value:  Size  Location     Type
 21398 ;;                  1    wreg      unsigned char 
 21399 ;; Registers used:
 21400 ;;		wreg, status,2, status,0, pclath, cstack
 21401 ;; Tracked objects:
 21402 ;;		On entry : 0/0
 21403 ;;		On exit  : 0/0
 21404 ;;		Unchanged: 0/0
 21405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21406 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21407 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21408 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21409 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21410 ;;Total ram usage:       18 bytes
 21411 ;; Hardware stack levels used:    1
 21412 ;; Hardware stack levels required when called:    2
 21413 ;; This function calls:
 21414 ;;		___aldiv
 21415 ;; This function is called by:
 21416 ;;		_main
 21417 ;; This function uses a non-reentrant model
 21418 ;;
 21419                           
 21420                           
 21421                           ;psect for function _EUSART_Initialize
 21422  2B36                     _EUSART_Initialize:	
 21423                           
 21424                           ;EUSART.c: 6: char EUSART_Initialize(const long int baudrate);EUSART.c: 7: {;EUSART.c: 8
      +                          :  unsigned int x;;EUSART.c: 9:  x = (16000000 - baudrate*64)/(baudrate*64);
 21425                           
 21426                           ;incstack = 0
 21427                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 21428  2B36  0020               	movlb	0	; select bank0
 21429  2B37  0832               	movf	EUSART_Initialize@baudrate,w
 21430  2B38  00B6               	movwf	??_EUSART_Initialize
 21431  2B39  0833               	movf	EUSART_Initialize@baudrate+1,w
 21432  2B3A  00B7               	movwf	??_EUSART_Initialize+1
 21433  2B3B  0834               	movf	EUSART_Initialize@baudrate+2,w
 21434  2B3C  00B8               	movwf	??_EUSART_Initialize+2
 21435  2B3D  0835               	movf	EUSART_Initialize@baudrate+3,w
 21436  2B3E  00B9               	movwf	??_EUSART_Initialize+3
 21437  2B3F  3006               	movlw	6
 21438  2B40                     u11945:	
 21439  2B40  35B6               	lslf	??_EUSART_Initialize,f
 21440  2B41  0DB7               	rlf	??_EUSART_Initialize+1,f
 21441  2B42  0DB8               	rlf	??_EUSART_Initialize+2,f
 21442  2B43  0DB9               	rlf	??_EUSART_Initialize+3,f
 21443  2B44  0B89               	decfsz	9,f
 21444  2B45  2B40               	goto	u11945
 21445  2B46  0839               	movf	??_EUSART_Initialize+3,w
 21446  2B47  00A7               	movwf	___aldiv@divisor+3
 21447  2B48  0838               	movf	??_EUSART_Initialize+2,w
 21448  2B49  00A6               	movwf	___aldiv@divisor+2
 21449  2B4A  0837               	movf	??_EUSART_Initialize+1,w
 21450  2B4B  00A5               	movwf	___aldiv@divisor+1
 21451  2B4C  0836               	movf	??_EUSART_Initialize,w
 21452  2B4D  00A4               	movwf	___aldiv@divisor
 21453  2B4E  0832               	movf	EUSART_Initialize@baudrate,w
 21454  2B4F  00BA               	movwf	??_EUSART_Initialize+4
 21455  2B50  0833               	movf	EUSART_Initialize@baudrate+1,w
 21456  2B51  00BB               	movwf	??_EUSART_Initialize+5
 21457  2B52  0834               	movf	EUSART_Initialize@baudrate+2,w
 21458  2B53  00BC               	movwf	??_EUSART_Initialize+6
 21459  2B54  0835               	movf	EUSART_Initialize@baudrate+3,w
 21460  2B55  00BD               	movwf	??_EUSART_Initialize+7
 21461  2B56  3006               	movlw	6
 21462  2B57                     u11955:	
 21463  2B57  35BA               	lslf	??_EUSART_Initialize+4,f
 21464  2B58  0DBB               	rlf	??_EUSART_Initialize+5,f
 21465  2B59  0DBC               	rlf	??_EUSART_Initialize+6,f
 21466  2B5A  0DBD               	rlf	??_EUSART_Initialize+7,f
 21467  2B5B  0B89               	decfsz	9,f
 21468  2B5C  2B57               	goto	u11955
 21469  2B5D  3000               	movlw	0
 21470  2B5E  00BE               	movwf	??_EUSART_Initialize+8
 21471  2B5F  3024               	movlw	36
 21472  2B60  00BF               	movwf	??_EUSART_Initialize+9
 21473  2B61  30F4               	movlw	244
 21474  2B62  00C0               	movwf	??_EUSART_Initialize+10
 21475  2B63  3000               	movlw	0
 21476  2B64  00C1               	movwf	??_EUSART_Initialize+11
 21477  2B65  083A               	movf	??_EUSART_Initialize+4,w
 21478  2B66  02BE               	subwf	??_EUSART_Initialize+8,f
 21479  2B67  083B               	movf	??_EUSART_Initialize+5,w
 21480  2B68  3BBF               	subwfb	??_EUSART_Initialize+9,f
 21481  2B69  083C               	movf	??_EUSART_Initialize+6,w
 21482  2B6A  3BC0               	subwfb	??_EUSART_Initialize+10,f
 21483  2B6B  083D               	movf	??_EUSART_Initialize+7,w
 21484  2B6C  3BC1               	subwfb	??_EUSART_Initialize+11,f
 21485  2B6D  0841               	movf	??_EUSART_Initialize+11,w
 21486  2B6E  00AB               	movwf	___aldiv@dividend+3
 21487  2B6F  0840               	movf	??_EUSART_Initialize+10,w
 21488  2B70  00AA               	movwf	___aldiv@dividend+2
 21489  2B71  083F               	movf	??_EUSART_Initialize+9,w
 21490  2B72  00A9               	movwf	___aldiv@dividend+1
 21491  2B73  083E               	movf	??_EUSART_Initialize+8,w
 21492  2B74  00A8               	movwf	___aldiv@dividend
 21493  2B75  31B7  277E  31AB   	fcall	___aldiv
 21494  2B78  0020               	movlb	0	; select bank0
 21495  2B79  0825               	movf	?___aldiv+1,w
 21496  2B7A  00FB               	movwf	EUSART_Initialize@x+1
 21497  2B7B  0824               	movf	?___aldiv,w
 21498  2B7C  00FA               	movwf	EUSART_Initialize@x
 21499                           
 21500                           ;EUSART.c: 10:  if(x>255)
 21501  2B7D  3001               	movlw	1
 21502  2B7E  027B               	subwf	EUSART_Initialize@x+1,w
 21503  2B7F  3000               	movlw	0
 21504  2B80  1903               	skipnz
 21505  2B81  027A               	subwf	EUSART_Initialize@x,w
 21506  2B82  1C03               	skipc
 21507  2B83  2BCC               	goto	l8649
 21508                           
 21509                           ;EUSART.c: 11:  {;EUSART.c: 12:   x = (16000000 - baudrate*16)/(baudrate*16);
 21510  2B84  0832               	movf	EUSART_Initialize@baudrate,w
 21511  2B85  00B6               	movwf	??_EUSART_Initialize
 21512  2B86  0833               	movf	EUSART_Initialize@baudrate+1,w
 21513  2B87  00B7               	movwf	??_EUSART_Initialize+1
 21514  2B88  0834               	movf	EUSART_Initialize@baudrate+2,w
 21515  2B89  00B8               	movwf	??_EUSART_Initialize+2
 21516  2B8A  0835               	movf	EUSART_Initialize@baudrate+3,w
 21517  2B8B  00B9               	movwf	??_EUSART_Initialize+3
 21518  2B8C  3004               	movlw	4
 21519  2B8D                     u11975:	
 21520  2B8D  35B6               	lslf	??_EUSART_Initialize,f
 21521  2B8E  0DB7               	rlf	??_EUSART_Initialize+1,f
 21522  2B8F  0DB8               	rlf	??_EUSART_Initialize+2,f
 21523  2B90  0DB9               	rlf	??_EUSART_Initialize+3,f
 21524  2B91  0B89               	decfsz	9,f
 21525  2B92  2B8D               	goto	u11975
 21526  2B93  0839               	movf	??_EUSART_Initialize+3,w
 21527  2B94  00A7               	movwf	___aldiv@divisor+3
 21528  2B95  0838               	movf	??_EUSART_Initialize+2,w
 21529  2B96  00A6               	movwf	___aldiv@divisor+2
 21530  2B97  0837               	movf	??_EUSART_Initialize+1,w
 21531  2B98  00A5               	movwf	___aldiv@divisor+1
 21532  2B99  0836               	movf	??_EUSART_Initialize,w
 21533  2B9A  00A4               	movwf	___aldiv@divisor
 21534  2B9B  0832               	movf	EUSART_Initialize@baudrate,w
 21535  2B9C  00BA               	movwf	??_EUSART_Initialize+4
 21536  2B9D  0833               	movf	EUSART_Initialize@baudrate+1,w
 21537  2B9E  00BB               	movwf	??_EUSART_Initialize+5
 21538  2B9F  0834               	movf	EUSART_Initialize@baudrate+2,w
 21539  2BA0  00BC               	movwf	??_EUSART_Initialize+6
 21540  2BA1  0835               	movf	EUSART_Initialize@baudrate+3,w
 21541  2BA2  00BD               	movwf	??_EUSART_Initialize+7
 21542  2BA3  3004               	movlw	4
 21543  2BA4                     u11985:	
 21544  2BA4  35BA               	lslf	??_EUSART_Initialize+4,f
 21545  2BA5  0DBB               	rlf	??_EUSART_Initialize+5,f
 21546  2BA6  0DBC               	rlf	??_EUSART_Initialize+6,f
 21547  2BA7  0DBD               	rlf	??_EUSART_Initialize+7,f
 21548  2BA8  0B89               	decfsz	9,f
 21549  2BA9  2BA4               	goto	u11985
 21550  2BAA  3000               	movlw	0
 21551  2BAB  00BE               	movwf	??_EUSART_Initialize+8
 21552  2BAC  3024               	movlw	36
 21553  2BAD  00BF               	movwf	??_EUSART_Initialize+9
 21554  2BAE  30F4               	movlw	244
 21555  2BAF  00C0               	movwf	??_EUSART_Initialize+10
 21556  2BB0  3000               	movlw	0
 21557  2BB1  00C1               	movwf	??_EUSART_Initialize+11
 21558  2BB2  083A               	movf	??_EUSART_Initialize+4,w
 21559  2BB3  02BE               	subwf	??_EUSART_Initialize+8,f
 21560  2BB4  083B               	movf	??_EUSART_Initialize+5,w
 21561  2BB5  3BBF               	subwfb	??_EUSART_Initialize+9,f
 21562  2BB6  083C               	movf	??_EUSART_Initialize+6,w
 21563  2BB7  3BC0               	subwfb	??_EUSART_Initialize+10,f
 21564  2BB8  083D               	movf	??_EUSART_Initialize+7,w
 21565  2BB9  3BC1               	subwfb	??_EUSART_Initialize+11,f
 21566  2BBA  0841               	movf	??_EUSART_Initialize+11,w
 21567  2BBB  00AB               	movwf	___aldiv@dividend+3
 21568  2BBC  0840               	movf	??_EUSART_Initialize+10,w
 21569  2BBD  00AA               	movwf	___aldiv@dividend+2
 21570  2BBE  083F               	movf	??_EUSART_Initialize+9,w
 21571  2BBF  00A9               	movwf	___aldiv@dividend+1
 21572  2BC0  083E               	movf	??_EUSART_Initialize+8,w
 21573  2BC1  00A8               	movwf	___aldiv@dividend
 21574  2BC2  31B7  277E  31AB   	fcall	___aldiv
 21575  2BC5  0020               	movlb	0	; select bank0
 21576  2BC6  0825               	movf	?___aldiv+1,w
 21577  2BC7  00FB               	movwf	EUSART_Initialize@x+1
 21578  2BC8  0824               	movf	?___aldiv,w
 21579  2BC9  00FA               	movwf	EUSART_Initialize@x
 21580                           
 21581                           ;EUSART.c: 13:   BRGH = 1;
 21582  2BCA  0023               	movlb	3	; select bank3
 21583  2BCB  151E               	bsf	30,2	;volatile
 21584  2BCC                     l8649:	
 21585                           
 21586                           ;EUSART.c: 15:  if(x<256)
 21587  2BCC  3001               	movlw	1
 21588  2BCD  027B               	subwf	EUSART_Initialize@x+1,w
 21589  2BCE  3000               	movlw	0
 21590  2BCF  1903               	skipnz
 21591  2BD0  027A               	subwf	EUSART_Initialize@x,w
 21592  2BD1  1803               	skipnc
 21593  2BD2  0008               	return
 21594                           
 21595                           ;EUSART.c: 16:  {;EUSART.c: 17:    SPBRG = x;
 21596  2BD3  087A               	movf	EUSART_Initialize@x,w
 21597  2BD4  0023               	movlb	3	; select bank3
 21598  2BD5  009B               	movwf	27	;volatile
 21599                           
 21600                           ;EUSART.c: 18:    SYNC = 0;
 21601  2BD6  121E               	bcf	30,4	;volatile
 21602                           
 21603                           ;EUSART.c: 19:    SPEN = 1;
 21604  2BD7  179D               	bsf	29,7	;volatile
 21605                           
 21606                           ;EUSART.c: 20:           TRISC7 = 1;
 21607  2BD8  0021               	movlb	1	; select bank1
 21608  2BD9  178E               	bsf	14,7	;volatile
 21609                           
 21610                           ;EUSART.c: 21:           TRISC6 = 1;
 21611  2BDA  170E               	bsf	14,6	;volatile
 21612                           
 21613                           ;EUSART.c: 22:           CREN = 1;
 21614  2BDB  0023               	movlb	3	; select bank3
 21615  2BDC  161D               	bsf	29,4	;volatile
 21616                           
 21617                           ;EUSART.c: 23:           TXEN = 1;
 21618  2BDD  169E               	bsf	30,5	;volatile
 21619  2BDE  0008               	return
 21620  2BDF                     __end_of_EUSART_Initialize:	
 21621                           
 21622                           	psect	text87
 21623  377E                     __ptext87:	
 21624 ;; *************** function ___aldiv *****************
 21625 ;; Defined at:
 21626 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
 21627 ;; Parameters:    Size  Location     Type
 21628 ;;  divisor         4    4[BANK0 ] long 
 21629 ;;  dividend        4    8[BANK0 ] long 
 21630 ;; Auto vars:     Size  Location     Type
 21631 ;;  quotient        4   14[BANK0 ] long 
 21632 ;;  sign            1   13[BANK0 ] unsigned char 
 21633 ;;  counter         1   12[BANK0 ] unsigned char 
 21634 ;; Return value:  Size  Location     Type
 21635 ;;                  4    4[BANK0 ] long 
 21636 ;; Registers used:
 21637 ;;		wreg, status,2, status,0
 21638 ;; Tracked objects:
 21639 ;;		On entry : 0/0
 21640 ;;		On exit  : 0/0
 21641 ;;		Unchanged: 0/0
 21642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21643 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21644 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21645 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21646 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21647 ;;Total ram usage:       15 bytes
 21648 ;; Hardware stack levels used:    1
 21649 ;; Hardware stack levels required when called:    1
 21650 ;; This function calls:
 21651 ;;		Nothing
 21652 ;; This function is called by:
 21653 ;;		_EUSART_Initialize
 21654 ;;		_setCellUndervoltageProtection
 21655 ;;		_setCellOvervoltageProtection
 21656 ;;		_updateVoltages
 21657 ;; This function uses a non-reentrant model
 21658 ;;
 21659                           
 21660                           
 21661                           ;psect for function ___aldiv
 21662  377E                     ___aldiv:	
 21663                           
 21664                           ;incstack = 0
 21665                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 21666  377E  0020               	movlb	0	; select bank0
 21667  377F  01AD               	clrf	___aldiv@sign
 21668  3780  1FA7               	btfss	___aldiv@divisor+3,7
 21669  3781  2F8F               	goto	l1024
 21670  3782  09A4               	comf	___aldiv@divisor,f
 21671  3783  09A5               	comf	___aldiv@divisor+1,f
 21672  3784  09A6               	comf	___aldiv@divisor+2,f
 21673  3785  09A7               	comf	___aldiv@divisor+3,f
 21674  3786  0AA4               	incf	___aldiv@divisor,f
 21675  3787  1903               	skipnz
 21676  3788  0AA5               	incf	___aldiv@divisor+1,f
 21677  3789  1903               	skipnz
 21678  378A  0AA6               	incf	___aldiv@divisor+2,f
 21679  378B  1903               	skipnz
 21680  378C  0AA7               	incf	___aldiv@divisor+3,f
 21681  378D  01AD               	clrf	___aldiv@sign
 21682  378E  0AAD               	incf	___aldiv@sign,f
 21683  378F                     l1024:	
 21684  378F  1FAB               	btfss	___aldiv@dividend+3,7
 21685  3790  2FA0               	goto	l8387
 21686  3791  09A8               	comf	___aldiv@dividend,f
 21687  3792  09A9               	comf	___aldiv@dividend+1,f
 21688  3793  09AA               	comf	___aldiv@dividend+2,f
 21689  3794  09AB               	comf	___aldiv@dividend+3,f
 21690  3795  0AA8               	incf	___aldiv@dividend,f
 21691  3796  1903               	skipnz
 21692  3797  0AA9               	incf	___aldiv@dividend+1,f
 21693  3798  1903               	skipnz
 21694  3799  0AAA               	incf	___aldiv@dividend+2,f
 21695  379A  1903               	skipnz
 21696  379B  0AAB               	incf	___aldiv@dividend+3,f
 21697  379C  3001               	movlw	1
 21698  379D  00F9               	movwf	??___aldiv
 21699  379E  0879               	movf	??___aldiv,w
 21700  379F  06AD               	xorwf	___aldiv@sign,f
 21701  37A0                     l8387:	
 21702  37A0  3000               	movlw	0
 21703  37A1  00B1               	movwf	___aldiv@quotient+3
 21704  37A2  3000               	movlw	0
 21705  37A3  00B0               	movwf	___aldiv@quotient+2
 21706  37A4  3000               	movlw	0
 21707  37A5  00AF               	movwf	___aldiv@quotient+1
 21708  37A6  3000               	movlw	0
 21709  37A7  00AE               	movwf	___aldiv@quotient
 21710  37A8  0827               	movf	___aldiv@divisor+3,w
 21711  37A9  0426               	iorwf	___aldiv@divisor+2,w
 21712  37AA  0425               	iorwf	___aldiv@divisor+1,w
 21713  37AB  0424               	iorwf	___aldiv@divisor,w
 21714  37AC  1903               	skipnz
 21715  37AD  2FE9               	goto	l8409
 21716  37AE  01AC               	clrf	___aldiv@counter
 21717  37AF  0AAC               	incf	___aldiv@counter,f
 21718  37B0                     l8395:	
 21719  37B0  1BA7               	btfsc	___aldiv@divisor+3,7
 21720  37B1  2FBE               	goto	l8397
 21721  37B2  3001               	movlw	1
 21722  37B3                     u11715:	
 21723  37B3  35A4               	lslf	___aldiv@divisor,f
 21724  37B4  0DA5               	rlf	___aldiv@divisor+1,f
 21725  37B5  0DA6               	rlf	___aldiv@divisor+2,f
 21726  37B6  0DA7               	rlf	___aldiv@divisor+3,f
 21727  37B7  0B89               	decfsz	9,f
 21728  37B8  2FB3               	goto	u11715
 21729  37B9  3001               	movlw	1
 21730  37BA  00F9               	movwf	??___aldiv
 21731  37BB  0879               	movf	??___aldiv,w
 21732  37BC  07AC               	addwf	___aldiv@counter,f
 21733  37BD  2FB0               	goto	l8395
 21734  37BE                     l8397:	
 21735  37BE  3001               	movlw	1
 21736  37BF                     u11735:	
 21737  37BF  35AE               	lslf	___aldiv@quotient,f
 21738  37C0  0DAF               	rlf	___aldiv@quotient+1,f
 21739  37C1  0DB0               	rlf	___aldiv@quotient+2,f
 21740  37C2  0DB1               	rlf	___aldiv@quotient+3,f
 21741  37C3  0B89               	decfsz	9,f
 21742  37C4  2FBF               	goto	u11735
 21743  37C5  0827               	movf	___aldiv@divisor+3,w
 21744  37C6  022B               	subwf	___aldiv@dividend+3,w
 21745  37C7  1D03               	skipz
 21746  37C8  2FD3               	goto	u11745
 21747  37C9  0826               	movf	___aldiv@divisor+2,w
 21748  37CA  022A               	subwf	___aldiv@dividend+2,w
 21749  37CB  1D03               	skipz
 21750  37CC  2FD3               	goto	u11745
 21751  37CD  0825               	movf	___aldiv@divisor+1,w
 21752  37CE  0229               	subwf	___aldiv@dividend+1,w
 21753  37CF  1D03               	skipz
 21754  37D0  2FD3               	goto	u11745
 21755  37D1  0824               	movf	___aldiv@divisor,w
 21756  37D2  0228               	subwf	___aldiv@dividend,w
 21757  37D3                     u11745:	
 21758  37D3  1C03               	skipc
 21759  37D4  2FDE               	goto	l8405
 21760  37D5  0824               	movf	___aldiv@divisor,w
 21761  37D6  02A8               	subwf	___aldiv@dividend,f
 21762  37D7  0825               	movf	___aldiv@divisor+1,w
 21763  37D8  3BA9               	subwfb	___aldiv@dividend+1,f
 21764  37D9  0826               	movf	___aldiv@divisor+2,w
 21765  37DA  3BAA               	subwfb	___aldiv@dividend+2,f
 21766  37DB  0827               	movf	___aldiv@divisor+3,w
 21767  37DC  3BAB               	subwfb	___aldiv@dividend+3,f
 21768  37DD  142E               	bsf	___aldiv@quotient,0
 21769  37DE                     l8405:	
 21770  37DE  3001               	movlw	1
 21771  37DF                     u11755:	
 21772  37DF  36A7               	lsrf	___aldiv@divisor+3,f
 21773  37E0  0CA6               	rrf	___aldiv@divisor+2,f
 21774  37E1  0CA5               	rrf	___aldiv@divisor+1,f
 21775  37E2  0CA4               	rrf	___aldiv@divisor,f
 21776  37E3  0B89               	decfsz	9,f
 21777  37E4  2FDF               	goto	u11755
 21778  37E5  3001               	movlw	1
 21779  37E6  02AC               	subwf	___aldiv@counter,f
 21780  37E7  1D03               	btfss	3,2
 21781  37E8  2FBE               	goto	l8397
 21782  37E9                     l8409:	
 21783  37E9  082D               	movf	___aldiv@sign,w
 21784  37EA  1903               	btfsc	3,2
 21785  37EB  2FF7               	goto	l8413
 21786  37EC  09AE               	comf	___aldiv@quotient,f
 21787  37ED  09AF               	comf	___aldiv@quotient+1,f
 21788  37EE  09B0               	comf	___aldiv@quotient+2,f
 21789  37EF  09B1               	comf	___aldiv@quotient+3,f
 21790  37F0  0AAE               	incf	___aldiv@quotient,f
 21791  37F1  1903               	skipnz
 21792  37F2  0AAF               	incf	___aldiv@quotient+1,f
 21793  37F3  1903               	skipnz
 21794  37F4  0AB0               	incf	___aldiv@quotient+2,f
 21795  37F5  1903               	skipnz
 21796  37F6  0AB1               	incf	___aldiv@quotient+3,f
 21797  37F7                     l8413:	
 21798  37F7  0831               	movf	___aldiv@quotient+3,w
 21799  37F8  00A7               	movwf	?___aldiv+3
 21800  37F9  0830               	movf	___aldiv@quotient+2,w
 21801  37FA  00A6               	movwf	?___aldiv+2
 21802  37FB  082F               	movf	___aldiv@quotient+1,w
 21803  37FC  00A5               	movwf	?___aldiv+1
 21804  37FD  082E               	movf	___aldiv@quotient,w
 21805  37FE  00A4               	movwf	?___aldiv
 21806  37FF  0008               	return
 21807  3800                     __end_of___aldiv:	
 21808                           
 21809                           	psect	intentry
 21810  0004                     __pintentry:	
 21811 ;; *************** function _myIsr *****************
 21812 ;; Defined at:
 21813 ;;		line 59 in file "main.c"
 21814 ;; Parameters:    Size  Location     Type
 21815 ;;		None
 21816 ;; Auto vars:     Size  Location     Type
 21817 ;;		None
 21818 ;; Return value:  Size  Location     Type
 21819 ;;                  1    wreg      void 
 21820 ;; Registers used:
 21821 ;;		wreg, status,2, status,0
 21822 ;; Tracked objects:
 21823 ;;		On entry : 0/0
 21824 ;;		On exit  : 0/0
 21825 ;;		Unchanged: 0/0
 21826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21829 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21830 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21831 ;;Total ram usage:        1 bytes
 21832 ;; Hardware stack levels used:    1
 21833 ;; This function calls:
 21834 ;;		Nothing
 21835 ;; This function is called by:
 21836 ;;		Interrupt level 1
 21837 ;; This function uses a non-reentrant model
 21838 ;;
 21839                           
 21840  0004                     _myIsr:	
 21841                           
 21842                           ;incstack = 0
 21843  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 21844                           
 21845                           ; Regs used in _myIsr: [wreg+status,2+status,0]
 21846  0005  3180               	pagesel	$
 21847                           
 21848                           ;main.c: 61:     static uint8_t count = 0;;main.c: 63:     if (PIR1bits.TMR1IF && PIE1bi
      +                          ts.TMR1IE) {
 21849  0006  0020               	movlb	0	; select bank0
 21850  0007  1C11               	btfss	17,0	;volatile
 21851  0008  281C               	goto	i1l153
 21852  0009  0021               	movlb	1	; select bank1
 21853  000A  1C11               	btfss	17,0	;volatile
 21854  000B  281C               	goto	i1l153
 21855                           
 21856                           ;main.c: 64:         PIR1bits.TMR1IF = 0;
 21857  000C  0020               	movlb	0	; select bank0
 21858  000D  1011               	bcf	17,0	;volatile
 21859                           
 21860                           ;main.c: 65:         count++;
 21861  000E  3001               	movlw	1
 21862  000F  00F0               	movwf	??_myIsr
 21863  0010  0870               	movf	??_myIsr,w
 21864  0011  0023               	movlb	3	; select bank3
 21865  0012  07CF               	addwf	myIsr@count^(0+384),f
 21866                           
 21867                           ;main.c: 68:         if (count == 61) {
 21868  0013  303D               	movlw	61
 21869  0014  064F               	xorwf	myIsr@count^(0+384),w
 21870  0015  1D03               	btfss	3,2
 21871  0016  281C               	goto	i1l153
 21872                           
 21873                           ;main.c: 69:             tmr1_flag = 1;
 21874  0017  3001               	movlw	1
 21875  0018  00F0               	movwf	??_myIsr
 21876  0019  0870               	movf	??_myIsr,w
 21877  001A  00D0               	movwf	_tmr1_flag^(0+384)	;volatile
 21878                           
 21879                           ;main.c: 70:             count = 0;
 21880  001B  01CF               	clrf	myIsr@count^(0+384)
 21881  001C                     i1l153:	
 21882  001C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 21883  001D  0009               	retfie
 21884  001E                     __end_of_myIsr:	
 21885  007E                     btemp	set	126	;btemp
 21886  007E                     int$flags	set	126
 21887  007E                     wtemp0	set	126
 21888  2771                     
 21889                           	psect	text9_split_1
 21890  28EE                     l7983:	
 21891                           
 21892                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
 21893  28EE  0021               	movlb	1	; select bank1
 21894  28EF  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 21895  28F0  0086               	movwf	6
 21896  28F1  3001               	movlw	1	; select bank2/3
 21897  28F2  0087               	movwf	7
 21898  28F3  3F40               	moviw [0]fsr1
 21899  28F4  00F1               	movwf	strncmp@_l
 21900  28F5  3F41               	moviw [1]fsr1
 21901  28F6  00F2               	movwf	strncmp@_l+1
 21902  28F7  3042               	movlw	low (STR_35| (0+32768))
 21903  28F8  00F3               	movwf	strncmp@_r
 21904  28F9  30BB               	movlw	high (STR_35| (0+32768))
 21905  28FA  00F4               	movwf	strncmp@_r+1
 21906  28FB  3003               	movlw	3
 21907  28FC  00F5               	movwf	strncmp@n
 21908  28FD  3000               	movlw	0
 21909  28FE  00F6               	movwf	strncmp@n+1
 21910  28FF  31B3  23E5  31A8   	fcall	_strncmp
 21911  2902  0871               	movf	?_strncmp,w
 21912  2903  0472               	iorwf	?_strncmp+1,w
 21913  2904  1903               	btfsc	3,2
 21914  2905  291E               	goto	l7987
 21915  2906  0021               	movlb	1	; select bank1
 21916  2907  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 21917  2908  0086               	movwf	6
 21918  2909  3001               	movlw	1	; select bank2/3
 21919  290A  0087               	movwf	7
 21920  290B  3F40               	moviw [0]fsr1
 21921  290C  00F1               	movwf	strncmp@_l
 21922  290D  3F41               	moviw [1]fsr1
 21923  290E  00F2               	movwf	strncmp@_l+1
 21924  290F  304A               	movlw	low (STR_39| (0+32768))
 21925  2910  00F3               	movwf	strncmp@_r
 21926  2911  30BB               	movlw	high (STR_39| (0+32768))
 21927  2912  00F4               	movwf	strncmp@_r+1
 21928  2913  3003               	movlw	3
 21929  2914  00F5               	movwf	strncmp@n
 21930  2915  3000               	movlw	0
 21931  2916  00F6               	movwf	strncmp@n+1
 21932  2917  31B3  23E5  31A8   	fcall	_strncmp
 21933  291A  0871               	movf	?_strncmp,w
 21934  291B  0472               	iorwf	?_strncmp+1,w
 21935  291C  1D03               	btfss	3,2
 21936  291D  2972               	goto	L18
 21937  291E                     l7987:	
 21938                           
 21939                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
 21940  291E  0021               	movlb	1	; select bank1
 21941  291F  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 21942  2920  0086               	movwf	6
 21943  2921  3001               	movlw	1	; select bank2/3
 21944  2922  0087               	movwf	7
 21945  2923  3003               	movlw	3
 21946  2924  0781               	addwf	1,f
 21947  2925  3141               	addfsr 1,1
 21948  2926  1803               	skipnc
 21949  2927  0A81               	incf	1,f
 21950                           
 21951                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 21952  2928  086F               	movf	vfpfcnvrt@ap^(0+128),w
 21953  2929  0086               	movwf	6
 21954  292A  3001               	movlw	1	; select bank2/3
 21955  292B  0087               	movwf	7
 21956  292C  0801               	movf	1,w
 21957  292D  0084               	movwf	4
 21958  292E  3001               	movlw	1	; select bank2/3
 21959  292F  0085               	movwf	5
 21960  2930  3002               	movlw	2
 21961  2931  0781               	addwf	1,f
 21962  2932  0800               	movf	0,w
 21963  2933  0022               	movlb	2	; select bank2
 21964  2934  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 21965  2935  3980               	andlw	128
 21966  2936  1D03               	skipz
 21967  2937  30FF               	movlw	255
 21968  2938  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 21969  2939  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 21970  293A  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 21971  293B  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 21972  293C  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 21973  293D  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 21974  293E  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 21975                           
 21976                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
 21977  293F  0021               	movlb	1	; select bank1
 21978  2940  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21979  2941  0020               	movlb	0	; select bank0
 21980  2942  00B1               	movwf	dtoa@fp+1
 21981  2943  0021               	movlb	1	; select bank1
 21982  2944  086C               	movf	vfpfcnvrt@fp^(0+128),w
 21983  2945  0020               	movlb	0	; select bank0
 21984  2946  00B0               	movwf	dtoa@fp
 21985  2947  0022               	movlb	2	; select bank2
 21986  2948  083C               	movf	vfpfcnvrt@ll^(0+256),w
 21987  2949  0020               	movlb	0	; select bank0
 21988  294A  00B2               	movwf	dtoa@d
 21989  294B  0022               	movlb	2	; select bank2
 21990  294C  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 21991  294D  0020               	movlb	0	; select bank0
 21992  294E  00B3               	movwf	dtoa@d+1
 21993  294F  0022               	movlb	2	; select bank2
 21994  2950  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 21995  2951  0020               	movlb	0	; select bank0
 21996  2952  00B4               	movwf	dtoa@d+2
 21997  2953  0022               	movlb	2	; select bank2
 21998  2954  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 21999  2955  0020               	movlb	0	; select bank0
 22000  2956  00B5               	movwf	dtoa@d+3
 22001  2957  0022               	movlb	2	; select bank2
 22002  2958  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 22003  2959  0020               	movlb	0	; select bank0
 22004  295A  00B6               	movwf	dtoa@d+4
 22005  295B  0022               	movlb	2	; select bank2
 22006  295C  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 22007  295D  0020               	movlb	0	; select bank0
 22008  295E  00B7               	movwf	dtoa@d+5
 22009  295F  0022               	movlb	2	; select bank2
 22010  2960  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 22011  2961  0020               	movlb	0	; select bank0
 22012  2962  00B8               	movwf	dtoa@d+6
 22013  2963  0022               	movlb	2	; select bank2
 22014  2964  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 22015  2965  0020               	movlb	0	; select bank0
 22016  2966  00B9               	movwf	dtoa@d+7
 22017  2967  3199  21F8         	fcall	_dtoa
 22018  2969  0020               	movlb	0	; select bank0
 22019  296A  0831               	movf	?_dtoa+1,w
 22020  296B  0021               	movlb	1	; select bank1
 22021  296C  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22022  296D  0020               	movlb	0	; select bank0
 22023  296E  0830               	movf	?_dtoa,w
 22024  296F  0021               	movlb	1	; select bank1
 22025  2970  00EC               	movwf	?_vfpfcnvrt^(0+128)
 22026  2971  0008               	return
 22027  2972                     L18:	
 22028  2972                     L17:	
 22029  2972  31A9  2974         	ljmp	l7995
 22030                           
 22031                           	psect	text9_split_2
 22032  2974                     l7995:	
 22033                           
 22034                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
 22035  2974  0021               	movlb	1	; select bank1
 22036  2975  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22037  2976  0086               	movwf	6
 22038  2977  3001               	movlw	1	; select bank2/3
 22039  2978  0087               	movwf	7
 22040  2979  3F40               	moviw [0]fsr1
 22041  297A  00F1               	movwf	strncmp@_l
 22042  297B  3F41               	moviw [1]fsr1
 22043  297C  00F2               	movwf	strncmp@_l+1
 22044  297D  3043               	movlw	low ((STR_35+1)| (0+32768))
 22045  297E  00F3               	movwf	strncmp@_r
 22046  297F  30BB               	movlw	high ((STR_35+1)| (0+32768))
 22047  2980  00F4               	movwf	strncmp@_r+1
 22048  2981  3002               	movlw	2
 22049  2982  00F5               	movwf	strncmp@n
 22050  2983  3000               	movlw	0
 22051  2984  00F6               	movwf	strncmp@n+1
 22052  2985  31B3  23E5  31A9   	fcall	_strncmp
 22053  2988  0871               	movf	?_strncmp,w
 22054  2989  0472               	iorwf	?_strncmp+1,w
 22055  298A  1903               	btfsc	3,2
 22056  298B  29A4               	goto	l7999
 22057  298C  0021               	movlb	1	; select bank1
 22058  298D  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22059  298E  0086               	movwf	6
 22060  298F  3001               	movlw	1	; select bank2/3
 22061  2990  0087               	movwf	7
 22062  2991  3F40               	moviw [0]fsr1
 22063  2992  00F1               	movwf	strncmp@_l
 22064  2993  3F41               	moviw [1]fsr1
 22065  2994  00F2               	movwf	strncmp@_l+1
 22066  2995  304B               	movlw	low ((STR_39+1)| (0+32768))
 22067  2996  00F3               	movwf	strncmp@_r
 22068  2997  30BB               	movlw	high ((STR_39+1)| (0+32768))
 22069  2998  00F4               	movwf	strncmp@_r+1
 22070  2999  3002               	movlw	2
 22071  299A  00F5               	movwf	strncmp@n
 22072  299B  3000               	movlw	0
 22073  299C  00F6               	movwf	strncmp@n+1
 22074  299D  31B3  23E5  31A9   	fcall	_strncmp
 22075  29A0  0871               	movf	?_strncmp,w
 22076  29A1  0472               	iorwf	?_strncmp+1,w
 22077  29A2  1D03               	btfss	3,2
 22078  29A3  29FD               	goto	L20
 22079  29A4                     l7999:	
 22080                           
 22081                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
 22082  29A4  0021               	movlb	1	; select bank1
 22083  29A5  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22084  29A6  0086               	movwf	6
 22085  29A7  3001               	movlw	1	; select bank2/3
 22086  29A8  0087               	movwf	7
 22087  29A9  3002               	movlw	2
 22088  29AA  0781               	addwf	1,f
 22089  29AB  3141               	addfsr 1,1
 22090  29AC  1803               	skipnc
 22091  29AD  0A81               	incf	1,f
 22092                           
 22093                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
 22094  29AE  086F               	movf	vfpfcnvrt@ap^(0+128),w
 22095  29AF  0086               	movwf	6
 22096  29B0  3001               	movlw	1	; select bank2/3
 22097  29B1  0087               	movwf	7
 22098  29B2  0801               	movf	1,w
 22099  29B3  0084               	movwf	4
 22100  29B4  3001               	movlw	1	; select bank2/3
 22101  29B5  0085               	movwf	5
 22102  29B6  3002               	movlw	2
 22103  29B7  0781               	addwf	1,f
 22104  29B8  3F00               	moviw [0]fsr0
 22105  29B9  0022               	movlb	2	; select bank2
 22106  29BA  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22107  29BB  3F01               	moviw [1]fsr0
 22108  29BC  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22109  29BD  0820               	movf	??_vfpfcnvrt^(0+256),w
 22110  29BE  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 22111  29BF  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22112  29C0  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 22113  29C1  0D89               	rlf	9,f
 22114  29C2  3B89               	subwfb	9,f
 22115  29C3  0989               	comf	9,f
 22116  29C4  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 22117  29C5  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 22118  29C6  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 22119  29C7  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 22120  29C8  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 22121  29C9  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 22122                           
 22123                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 820:       
      +                                return dtoa(fp, ll);
 22124  29CA  0021               	movlb	1	; select bank1
 22125  29CB  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22126  29CC  0020               	movlb	0	; select bank0
 22127  29CD  00B1               	movwf	dtoa@fp+1
 22128  29CE  0021               	movlb	1	; select bank1
 22129  29CF  086C               	movf	vfpfcnvrt@fp^(0+128),w
 22130  29D0  0020               	movlb	0	; select bank0
 22131  29D1  00B0               	movwf	dtoa@fp
 22132  29D2  0022               	movlb	2	; select bank2
 22133  29D3  083C               	movf	vfpfcnvrt@ll^(0+256),w
 22134  29D4  0020               	movlb	0	; select bank0
 22135  29D5  00B2               	movwf	dtoa@d
 22136  29D6  0022               	movlb	2	; select bank2
 22137  29D7  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 22138  29D8  0020               	movlb	0	; select bank0
 22139  29D9  00B3               	movwf	dtoa@d+1
 22140  29DA  0022               	movlb	2	; select bank2
 22141  29DB  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 22142  29DC  0020               	movlb	0	; select bank0
 22143  29DD  00B4               	movwf	dtoa@d+2
 22144  29DE  0022               	movlb	2	; select bank2
 22145  29DF  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 22146  29E0  0020               	movlb	0	; select bank0
 22147  29E1  00B5               	movwf	dtoa@d+3
 22148  29E2  0022               	movlb	2	; select bank2
 22149  29E3  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 22150  29E4  0020               	movlb	0	; select bank0
 22151  29E5  00B6               	movwf	dtoa@d+4
 22152  29E6  0022               	movlb	2	; select bank2
 22153  29E7  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 22154  29E8  0020               	movlb	0	; select bank0
 22155  29E9  00B7               	movwf	dtoa@d+5
 22156  29EA  0022               	movlb	2	; select bank2
 22157  29EB  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 22158  29EC  0020               	movlb	0	; select bank0
 22159  29ED  00B8               	movwf	dtoa@d+6
 22160  29EE  0022               	movlb	2	; select bank2
 22161  29EF  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 22162  29F0  0020               	movlb	0	; select bank0
 22163  29F1  00B9               	movwf	dtoa@d+7
 22164  29F2  3199  21F8         	fcall	_dtoa
 22165  29F4  0020               	movlb	0	; select bank0
 22166  29F5  0831               	movf	?_dtoa+1,w
 22167  29F6  0021               	movlb	1	; select bank1
 22168  29F7  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22169  29F8  0020               	movlb	0	; select bank0
 22170  29F9  0830               	movf	?_dtoa,w
 22171  29FA  0021               	movlb	1	; select bank1
 22172  29FB  00EC               	movwf	?_vfpfcnvrt^(0+128)
 22173  29FC  0008               	return
 22174  29FD                     L20:	
 22175  29FD                     L19:	
 22176  29FD  31A5  2DDD         	ljmp	l8007
 22177                           
 22178                           	psect	text9_split_3
 22179  25DD                     l8007:	
 22180                           
 22181                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 22182  25DD  0021               	movlb	1	; select bank1
 22183  25DE  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22184  25DF  0086               	movwf	6
 22185  25E0  3001               	movlw	1	; select bank2/3
 22186  25E1  0087               	movwf	7
 22187  25E2  3F40               	moviw [0]fsr1
 22188  25E3  0022               	movlb	2	; select bank2
 22189  25E4  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22190  25E5  3F41               	moviw [1]fsr1
 22191  25E6  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22192  25E7  0820               	movf	??_vfpfcnvrt^(0+256),w
 22193  25E8  0084               	movwf	4
 22194  25E9  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22195  25EA  0085               	movwf	5
 22196  25EB  0012               	moviw fsr0++
 22197  25EC  3A64               	xorlw	100
 22198  25ED  1903               	btfsc	3,2
 22199  25EE  2E01               	goto	l8011
 22200  25EF  0021               	movlb	1	; select bank1
 22201  25F0  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22202  25F1  0086               	movwf	6
 22203  25F2  3001               	movlw	1	; select bank2/3
 22204  25F3  0087               	movwf	7
 22205  25F4  3F40               	moviw [0]fsr1
 22206  25F5  0022               	movlb	2	; select bank2
 22207  25F6  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22208  25F7  3F41               	moviw [1]fsr1
 22209  25F8  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22210  25F9  0820               	movf	??_vfpfcnvrt^(0+256),w
 22211  25FA  0084               	movwf	4
 22212  25FB  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22213  25FC  0085               	movwf	5
 22214  25FD  0012               	moviw fsr0++
 22215  25FE  3A69               	xorlw	105
 22216  25FF  1D03               	btfss	3,2
 22217  2600  2E5A               	goto	l8019
 22218  2601                     l8011:	
 22219                           
 22220                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 22221  2601  0021               	movlb	1	; select bank1
 22222  2602  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22223  2603  0086               	movwf	6
 22224  2604  3001               	movlw	1	; select bank2/3
 22225  2605  0087               	movwf	7
 22226  2606  3001               	movlw	1
 22227  2607  0781               	addwf	1,f
 22228  2608  3141               	addfsr 1,1
 22229  2609  1803               	skipnc
 22230  260A  0A81               	incf	1,f
 22231                           
 22232                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 22233  260B  086F               	movf	vfpfcnvrt@ap^(0+128),w
 22234  260C  0086               	movwf	6
 22235  260D  3001               	movlw	1	; select bank2/3
 22236  260E  0087               	movwf	7
 22237  260F  0801               	movf	1,w
 22238  2610  0084               	movwf	4
 22239  2611  3001               	movlw	1	; select bank2/3
 22240  2612  0085               	movwf	5
 22241  2613  3002               	movlw	2
 22242  2614  0781               	addwf	1,f
 22243  2615  3F00               	moviw [0]fsr0
 22244  2616  0022               	movlb	2	; select bank2
 22245  2617  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22246  2618  3F01               	moviw [1]fsr0
 22247  2619  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22248  261A  0820               	movf	??_vfpfcnvrt^(0+256),w
 22249  261B  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 22250  261C  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22251  261D  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 22252  261E  0D89               	rlf	9,f
 22253  261F  3B89               	subwfb	9,f
 22254  2620  0989               	comf	9,f
 22255  2621  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 22256  2622  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 22257  2623  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 22258  2624  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 22259  2625  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 22260  2626  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 22261                           
 22262                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 22263  2627  0021               	movlb	1	; select bank1
 22264  2628  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22265  2629  0020               	movlb	0	; select bank0
 22266  262A  00B1               	movwf	dtoa@fp+1
 22267  262B  0021               	movlb	1	; select bank1
 22268  262C  086C               	movf	vfpfcnvrt@fp^(0+128),w
 22269  262D  0020               	movlb	0	; select bank0
 22270  262E  00B0               	movwf	dtoa@fp
 22271  262F  0022               	movlb	2	; select bank2
 22272  2630  083C               	movf	vfpfcnvrt@ll^(0+256),w
 22273  2631  0020               	movlb	0	; select bank0
 22274  2632  00B2               	movwf	dtoa@d
 22275  2633  0022               	movlb	2	; select bank2
 22276  2634  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 22277  2635  0020               	movlb	0	; select bank0
 22278  2636  00B3               	movwf	dtoa@d+1
 22279  2637  0022               	movlb	2	; select bank2
 22280  2638  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 22281  2639  0020               	movlb	0	; select bank0
 22282  263A  00B4               	movwf	dtoa@d+2
 22283  263B  0022               	movlb	2	; select bank2
 22284  263C  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 22285  263D  0020               	movlb	0	; select bank0
 22286  263E  00B5               	movwf	dtoa@d+3
 22287  263F  0022               	movlb	2	; select bank2
 22288  2640  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 22289  2641  0020               	movlb	0	; select bank0
 22290  2642  00B6               	movwf	dtoa@d+4
 22291  2643  0022               	movlb	2	; select bank2
 22292  2644  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 22293  2645  0020               	movlb	0	; select bank0
 22294  2646  00B7               	movwf	dtoa@d+5
 22295  2647  0022               	movlb	2	; select bank2
 22296  2648  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 22297  2649  0020               	movlb	0	; select bank0
 22298  264A  00B8               	movwf	dtoa@d+6
 22299  264B  0022               	movlb	2	; select bank2
 22300  264C  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 22301  264D  0020               	movlb	0	; select bank0
 22302  264E  00B9               	movwf	dtoa@d+7
 22303  264F  3199  21F8         	fcall	_dtoa
 22304  2651  0020               	movlb	0	; select bank0
 22305  2652  0831               	movf	?_dtoa+1,w
 22306  2653  0021               	movlb	1	; select bank1
 22307  2654  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22308  2655  0020               	movlb	0	; select bank0
 22309  2656  0830               	movf	?_dtoa,w
 22310  2657  0021               	movlb	1	; select bank1
 22311  2658  00EC               	movwf	?_vfpfcnvrt^(0+128)
 22312  2659  0008               	return
 22313  265A                     l8019:	
 22314                           
 22315                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 835:       
      +                            if (!strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", (
      +                          (sizeof("li")/sizeof("li"[0]))-1))) {
 22316  265A  0021               	movlb	1	; select bank1
 22317  265B  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22318  265C  0086               	movwf	6
 22319  265D  3001               	movlw	1	; select bank2/3
 22320  265E  0087               	movwf	7
 22321  265F  3F40               	moviw [0]fsr1
 22322  2660  00F1               	movwf	strncmp@_l
 22323  2661  3F41               	moviw [1]fsr1
 22324  2662  00F2               	movwf	strncmp@_l+1
 22325  2663  3068               	movlw	low (STR_53| (0+32768))
 22326  2664  00F3               	movwf	strncmp@_r
 22327  2665  30BB               	movlw	high (STR_53| (0+32768))
 22328  2666  00F4               	movwf	strncmp@_r+1
 22329  2667  3002               	movlw	2
 22330  2668  00F5               	movwf	strncmp@n
 22331  2669  3000               	movlw	0
 22332  266A  00F6               	movwf	strncmp@n+1
 22333  266B  31B3  23E5  31A5   	fcall	_strncmp
 22334  266E  0871               	movf	?_strncmp,w
 22335  266F  0472               	iorwf	?_strncmp+1,w
 22336  2670  1903               	btfsc	3,2
 22337  2671  2E8A               	goto	l8023
 22338  2672  0021               	movlb	1	; select bank1
 22339  2673  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22340  2674  0086               	movwf	6
 22341  2675  3001               	movlw	1	; select bank2/3
 22342  2676  0087               	movwf	7
 22343  2677  3F40               	moviw [0]fsr1
 22344  2678  00F1               	movwf	strncmp@_l
 22345  2679  3F41               	moviw [1]fsr1
 22346  267A  00F2               	movwf	strncmp@_l+1
 22347  267B  3071               	movlw	low (STR_57| (0+32768))
 22348  267C  00F3               	movwf	strncmp@_r
 22349  267D  30BB               	movlw	high (STR_57| (0+32768))
 22350  267E  00F4               	movwf	strncmp@_r+1
 22351  267F  3002               	movlw	2
 22352  2680  00F5               	movwf	strncmp@n
 22353  2681  3000               	movlw	0
 22354  2682  00F6               	movwf	strncmp@n+1
 22355  2683  31B3  23E5  31A5   	fcall	_strncmp
 22356  2686  0871               	movf	?_strncmp,w
 22357  2687  0472               	iorwf	?_strncmp+1,w
 22358  2688  1D03               	btfss	3,2
 22359  2689  2EE9               	goto	L22
 22360  268A                     l8023:	
 22361                           
 22362                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 836: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 838:             
      +                          *fmt += ((sizeof("ld")/sizeof("ld"[0]))-1);
 22363  268A  0021               	movlb	1	; select bank1
 22364  268B  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22365  268C  0086               	movwf	6
 22366  268D  3001               	movlw	1	; select bank2/3
 22367  268E  0087               	movwf	7
 22368  268F  3002               	movlw	2
 22369  2690  0781               	addwf	1,f
 22370  2691  3141               	addfsr 1,1
 22371  2692  1803               	skipnc
 22372  2693  0A81               	incf	1,f
 22373                           
 22374                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 839:       
      +                                ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
 22375  2694  086F               	movf	vfpfcnvrt@ap^(0+128),w
 22376  2695  0086               	movwf	6
 22377  2696  3001               	movlw	1	; select bank2/3
 22378  2697  0087               	movwf	7
 22379  2698  0801               	movf	1,w
 22380  2699  0084               	movwf	4
 22381  269A  3001               	movlw	1	; select bank2/3
 22382  269B  0085               	movwf	5
 22383  269C  3004               	movlw	4
 22384  269D  0781               	addwf	1,f
 22385  269E  3F00               	moviw [0]fsr0
 22386  269F  0022               	movlb	2	; select bank2
 22387  26A0  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22388  26A1  3F01               	moviw [1]fsr0
 22389  26A2  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22390  26A3  3F02               	moviw [2]fsr0
 22391  26A4  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 22392  26A5  3F03               	moviw [3]fsr0
 22393  26A6  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 22394  26A7  0820               	movf	??_vfpfcnvrt^(0+256),w
 22395  26A8  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 22396  26A9  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22397  26AA  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 22398  26AB  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 22399  26AC  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 22400  26AD  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 22401  26AE  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 22402  26AF  3000               	movlw	0
 22403  26B0  1BBF               	btfsc	(vfpfcnvrt@ll+3)^(0+256),7
 22404  26B1  30FF               	movlw	255
 22405  26B2  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 22406  26B3  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 22407  26B4  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 22408  26B5  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 22409                           
 22410                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 841:       
      +                                return dtoa(fp, ll);
 22411  26B6  0021               	movlb	1	; select bank1
 22412  26B7  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22413  26B8  0020               	movlb	0	; select bank0
 22414  26B9  00B1               	movwf	dtoa@fp+1
 22415  26BA  0021               	movlb	1	; select bank1
 22416  26BB  086C               	movf	vfpfcnvrt@fp^(0+128),w
 22417  26BC  0020               	movlb	0	; select bank0
 22418  26BD  00B0               	movwf	dtoa@fp
 22419  26BE  0022               	movlb	2	; select bank2
 22420  26BF  083C               	movf	vfpfcnvrt@ll^(0+256),w
 22421  26C0  0020               	movlb	0	; select bank0
 22422  26C1  00B2               	movwf	dtoa@d
 22423  26C2  0022               	movlb	2	; select bank2
 22424  26C3  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 22425  26C4  0020               	movlb	0	; select bank0
 22426  26C5  00B3               	movwf	dtoa@d+1
 22427  26C6  0022               	movlb	2	; select bank2
 22428  26C7  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 22429  26C8  0020               	movlb	0	; select bank0
 22430  26C9  00B4               	movwf	dtoa@d+2
 22431  26CA  0022               	movlb	2	; select bank2
 22432  26CB  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 22433  26CC  0020               	movlb	0	; select bank0
 22434  26CD  00B5               	movwf	dtoa@d+3
 22435  26CE  0022               	movlb	2	; select bank2
 22436  26CF  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 22437  26D0  0020               	movlb	0	; select bank0
 22438  26D1  00B6               	movwf	dtoa@d+4
 22439  26D2  0022               	movlb	2	; select bank2
 22440  26D3  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 22441  26D4  0020               	movlb	0	; select bank0
 22442  26D5  00B7               	movwf	dtoa@d+5
 22443  26D6  0022               	movlb	2	; select bank2
 22444  26D7  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 22445  26D8  0020               	movlb	0	; select bank0
 22446  26D9  00B8               	movwf	dtoa@d+6
 22447  26DA  0022               	movlb	2	; select bank2
 22448  26DB  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 22449  26DC  0020               	movlb	0	; select bank0
 22450  26DD  00B9               	movwf	dtoa@d+7
 22451  26DE  3199  21F8         	fcall	_dtoa
 22452  26E0  0020               	movlb	0	; select bank0
 22453  26E1  0831               	movf	?_dtoa+1,w
 22454  26E2  0021               	movlb	1	; select bank1
 22455  26E3  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22456  26E4  0020               	movlb	0	; select bank0
 22457  26E5  0830               	movf	?_dtoa,w
 22458  26E6  0021               	movlb	1	; select bank1
 22459  26E7  00EC               	movwf	?_vfpfcnvrt^(0+128)
 22460  26E8  0008               	return
 22461  26E9                     L22:	
 22462  26E9                     L21:	
 22463  26E9  31A8  286A         	ljmp	l8031
 22464                           
 22465                           	psect	text9_split_4
 22466  286A                     l8031:	
 22467                           
 22468                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
 22469  286A  0021               	movlb	1	; select bank1
 22470  286B  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22471  286C  0086               	movwf	6
 22472  286D  3001               	movlw	1	; select bank2/3
 22473  286E  0087               	movwf	7
 22474  286F  3F40               	moviw [0]fsr1
 22475  2870  00F1               	movwf	strncmp@_l
 22476  2871  3F41               	moviw [1]fsr1
 22477  2872  00F2               	movwf	strncmp@_l+1
 22478  2873  306B               	movlw	low (STR_62| (0+32768))
 22479  2874  00F3               	movwf	strncmp@_r
 22480  2875  30BB               	movlw	high (STR_62| (0+32768))
 22481  2876  00F4               	movwf	strncmp@_r+1
 22482  2877  3002               	movlw	2
 22483  2878  00F5               	movwf	strncmp@n
 22484  2879  3000               	movlw	0
 22485  287A  00F6               	movwf	strncmp@n+1
 22486  287B  31B3  23E5  31A8   	fcall	_strncmp
 22487  287E  0871               	movf	?_strncmp,w
 22488  287F  0472               	iorwf	?_strncmp+1,w
 22489  2880  1903               	btfsc	3,2
 22490  2881  289A               	goto	l8035
 22491  2882  0021               	movlb	1	; select bank1
 22492  2883  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22493  2884  0086               	movwf	6
 22494  2885  3001               	movlw	1	; select bank2/3
 22495  2886  0087               	movwf	7
 22496  2887  3F40               	moviw [0]fsr1
 22497  2888  00F1               	movwf	strncmp@_l
 22498  2889  3F41               	moviw [1]fsr1
 22499  288A  00F2               	movwf	strncmp@_l+1
 22500  288B  3074               	movlw	low (STR_66| (0+32768))
 22501  288C  00F3               	movwf	strncmp@_r
 22502  288D  30BB               	movlw	high (STR_66| (0+32768))
 22503  288E  00F4               	movwf	strncmp@_r+1
 22504  288F  3002               	movlw	2
 22505  2890  00F5               	movwf	strncmp@n
 22506  2891  3000               	movlw	0
 22507  2892  00F6               	movwf	strncmp@n+1
 22508  2893  31B3  23E5  31A8   	fcall	_strncmp
 22509  2896  0871               	movf	?_strncmp,w
 22510  2897  0472               	iorwf	?_strncmp+1,w
 22511  2898  1D03               	btfss	3,2
 22512  2899  28EC               	goto	L24
 22513  289A                     l8035:	
 22514                           
 22515                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
 22516  289A  0021               	movlb	1	; select bank1
 22517  289B  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22518  289C  0086               	movwf	6
 22519  289D  3001               	movlw	1	; select bank2/3
 22520  289E  0087               	movwf	7
 22521  289F  3002               	movlw	2
 22522  28A0  0781               	addwf	1,f
 22523  28A1  3141               	addfsr 1,1
 22524  28A2  1803               	skipnc
 22525  28A3  0A81               	incf	1,f
 22526                           
 22527                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 22528  28A4  086F               	movf	vfpfcnvrt@ap^(0+128),w
 22529  28A5  0086               	movwf	6
 22530  28A6  3001               	movlw	1	; select bank2/3
 22531  28A7  0087               	movwf	7
 22532  28A8  0801               	movf	1,w
 22533  28A9  0084               	movwf	4
 22534  28AA  3001               	movlw	1	; select bank2/3
 22535  28AB  0085               	movwf	5
 22536  28AC  3002               	movlw	2
 22537  28AD  0781               	addwf	1,f
 22538  28AE  3F00               	moviw [0]fsr0
 22539  28AF  0022               	movlb	2	; select bank2
 22540  28B0  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 22541  28B1  3F01               	moviw [1]fsr0
 22542  28B2  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 22543  28B3  01BE               	clrf	(vfpfcnvrt@ll+2)^(0+256)
 22544  28B4  01BF               	clrf	(vfpfcnvrt@ll+3)^(0+256)
 22545  28B5  01C0               	clrf	(vfpfcnvrt@ll+4)^(0+256)
 22546  28B6  01C1               	clrf	(vfpfcnvrt@ll+5)^(0+256)
 22547  28B7  01C2               	clrf	(vfpfcnvrt@ll+6)^(0+256)
 22548  28B8  01C3               	clrf	(vfpfcnvrt@ll+7)^(0+256)
 22549                           
 22550                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 889:       
      +                                return dtoa(fp, ll);
 22551  28B9  0021               	movlb	1	; select bank1
 22552  28BA  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22553  28BB  0020               	movlb	0	; select bank0
 22554  28BC  00B1               	movwf	dtoa@fp+1
 22555  28BD  0021               	movlb	1	; select bank1
 22556  28BE  086C               	movf	vfpfcnvrt@fp^(0+128),w
 22557  28BF  0020               	movlb	0	; select bank0
 22558  28C0  00B0               	movwf	dtoa@fp
 22559  28C1  0022               	movlb	2	; select bank2
 22560  28C2  083C               	movf	vfpfcnvrt@ll^(0+256),w
 22561  28C3  0020               	movlb	0	; select bank0
 22562  28C4  00B2               	movwf	dtoa@d
 22563  28C5  0022               	movlb	2	; select bank2
 22564  28C6  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 22565  28C7  0020               	movlb	0	; select bank0
 22566  28C8  00B3               	movwf	dtoa@d+1
 22567  28C9  0022               	movlb	2	; select bank2
 22568  28CA  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 22569  28CB  0020               	movlb	0	; select bank0
 22570  28CC  00B4               	movwf	dtoa@d+2
 22571  28CD  0022               	movlb	2	; select bank2
 22572  28CE  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 22573  28CF  0020               	movlb	0	; select bank0
 22574  28D0  00B5               	movwf	dtoa@d+3
 22575  28D1  0022               	movlb	2	; select bank2
 22576  28D2  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 22577  28D3  0020               	movlb	0	; select bank0
 22578  28D4  00B6               	movwf	dtoa@d+4
 22579  28D5  0022               	movlb	2	; select bank2
 22580  28D6  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 22581  28D7  0020               	movlb	0	; select bank0
 22582  28D8  00B7               	movwf	dtoa@d+5
 22583  28D9  0022               	movlb	2	; select bank2
 22584  28DA  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 22585  28DB  0020               	movlb	0	; select bank0
 22586  28DC  00B8               	movwf	dtoa@d+6
 22587  28DD  0022               	movlb	2	; select bank2
 22588  28DE  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 22589  28DF  0020               	movlb	0	; select bank0
 22590  28E0  00B9               	movwf	dtoa@d+7
 22591  28E1  3199  21F8         	fcall	_dtoa
 22592  28E3  0020               	movlb	0	; select bank0
 22593  28E4  0831               	movf	?_dtoa+1,w
 22594  28E5  0021               	movlb	1	; select bank1
 22595  28E6  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22596  28E7  0020               	movlb	0	; select bank0
 22597  28E8  0830               	movf	?_dtoa,w
 22598  28E9  0021               	movlb	1	; select bank1
 22599  28EA  00EC               	movwf	?_vfpfcnvrt^(0+128)
 22600  28EB  0008               	return
 22601  28EC                     L24:	
 22602  28EC                     L23:	
 22603  28EC  31A4  2CDF         	ljmp	l8043
 22604                           
 22605                           	psect	text9_split_5
 22606  24DF                     l8043:	
 22607                           
 22608                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
 22609  24DF  3066               	movlw	102
 22610  24E0  0022               	movlb	2	; select bank2
 22611  24E1  0635               	xorwf	vfpfcnvrt@ct^(0+256),w
 22612  24E2  1D03               	btfss	3,2
 22613  24E3  2D36               	goto	l8055
 22614                           
 22615                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
 22616  24E4  0021               	movlb	1	; select bank1
 22617  24E5  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22618  24E6  0086               	movwf	6
 22619  24E7  3001               	movlw	1	; select bank2/3
 22620  24E8  0087               	movwf	7
 22621  24E9  3F40               	moviw [0]fsr1
 22622  24EA  0022               	movlb	2	; select bank2
 22623  24EB  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22624  24EC  3F41               	moviw [1]fsr1
 22625  24ED  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22626  24EE  0820               	movf	??_vfpfcnvrt^(0+256),w
 22627  24EF  0084               	movwf	4
 22628  24F0  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22629  24F1  0085               	movwf	5
 22630  24F2  0800               	movf	0,w	;code access
 22631  24F3  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 22632  24F4  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 22633  24F5  00C5               	movwf	vfpfcnvrt@c^(0+256)
 22634                           
 22635                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
 22636  24F6  0021               	movlb	1	; select bank1
 22637  24F7  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22638  24F8  0086               	movwf	6
 22639  24F9  3001               	movlw	1	; select bank2/3
 22640  24FA  0087               	movwf	7
 22641  24FB  3001               	movlw	1
 22642  24FC  0781               	addwf	1,f
 22643  24FD  3141               	addfsr 1,1
 22644  24FE  1803               	skipnc
 22645  24FF  0A81               	incf	1,f
 22646                           
 22647                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 22648  2500  086F               	movf	vfpfcnvrt@ap^(0+128),w
 22649  2501  0086               	movwf	6
 22650  2502  3001               	movlw	1	; select bank2/3
 22651  2503  0087               	movwf	7
 22652  2504  0801               	movf	1,w
 22653  2505  0084               	movwf	4
 22654  2506  3001               	movlw	1	; select bank2/3
 22655  2507  0085               	movwf	5
 22656  2508  3004               	movlw	4
 22657  2509  0781               	addwf	1,f
 22658  250A  3F00               	moviw [0]fsr0
 22659  250B  0022               	movlb	2	; select bank2
 22660  250C  00B8               	movwf	vfpfcnvrt@f^(0+256)
 22661  250D  3F01               	moviw [1]fsr0
 22662  250E  00B9               	movwf	(vfpfcnvrt@f+1)^(0+256)
 22663  250F  3F02               	moviw [2]fsr0
 22664  2510  00BA               	movwf	(vfpfcnvrt@f+2)^(0+256)
 22665  2511  3F03               	moviw [3]fsr0
 22666  2512  00BB               	movwf	(vfpfcnvrt@f+3)^(0+256)
 22667                           
 22668                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
 22669  2513  0021               	movlb	1	; select bank1
 22670  2514  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22671  2515  00AA               	movwf	(efgtoa@fp+1)^(0+128)
 22672  2516  086C               	movf	vfpfcnvrt@fp^(0+128),w
 22673  2517  00A9               	movwf	efgtoa@fp^(0+128)
 22674  2518  0022               	movlb	2	; select bank2
 22675  2519  083B               	movf	(vfpfcnvrt@f+3)^(0+256),w
 22676  251A  0021               	movlb	1	; select bank1
 22677  251B  00AE               	movwf	(efgtoa@f+3)^(0+128)
 22678  251C  0022               	movlb	2	; select bank2
 22679  251D  083A               	movf	(vfpfcnvrt@f+2)^(0+256),w
 22680  251E  0021               	movlb	1	; select bank1
 22681  251F  00AD               	movwf	(efgtoa@f+2)^(0+128)
 22682  2520  0022               	movlb	2	; select bank2
 22683  2521  0839               	movf	(vfpfcnvrt@f+1)^(0+256),w
 22684  2522  0021               	movlb	1	; select bank1
 22685  2523  00AC               	movwf	(efgtoa@f+1)^(0+128)
 22686  2524  0022               	movlb	2	; select bank2
 22687  2525  0838               	movf	vfpfcnvrt@f^(0+256),w
 22688  2526  0021               	movlb	1	; select bank1
 22689  2527  00AB               	movwf	efgtoa@f^(0+128)
 22690  2528  0022               	movlb	2	; select bank2
 22691  2529  0845               	movf	vfpfcnvrt@c^(0+256),w
 22692  252A  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22693  252B  0820               	movf	??_vfpfcnvrt^(0+256),w
 22694  252C  0021               	movlb	1	; select bank1
 22695  252D  00AF               	movwf	efgtoa@c^(0+128)
 22696  252E  3180  2063         	fcall	_efgtoa
 22697  2530  0021               	movlb	1	; select bank1
 22698  2531  082A               	movf	(?_efgtoa+1)^(0+128),w
 22699  2532  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22700  2533  0829               	movf	?_efgtoa^(0+128),w
 22701  2534  00EC               	movwf	?_vfpfcnvrt^(0+128)
 22702  2535  0008               	return
 22703  2536                     l8055:	
 22704                           
 22705                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 22706  2536  3035               	movlw	low vfpfcnvrt@ct
 22707  2537  00F1               	movwf	strncmp@_l
 22708  2538  3001               	movlw	high vfpfcnvrt@ct
 22709  2539  00F2               	movwf	strncmp@_l+1
 22710  253A  306E               	movlw	low (STR_71| (0+32768))
 22711  253B  00F3               	movwf	strncmp@_r
 22712  253C  30BB               	movlw	high (STR_71| (0+32768))
 22713  253D  00F4               	movwf	strncmp@_r+1
 22714  253E  3002               	movlw	2
 22715  253F  00F5               	movwf	strncmp@n
 22716  2540  3000               	movlw	0
 22717  2541  00F6               	movwf	strncmp@n+1
 22718  2542  31B3  23E5  31A4   	fcall	_strncmp
 22719  2545  0871               	movf	?_strncmp,w
 22720  2546  0472               	iorwf	?_strncmp+1,w
 22721  2547  1D03               	btfss	3,2
 22722  2548  2DDB               	goto	L26
 22723                           
 22724                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 22725  2549  0021               	movlb	1	; select bank1
 22726  254A  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22727  254B  0086               	movwf	6
 22728  254C  3001               	movlw	1	; select bank2/3
 22729  254D  0087               	movwf	7
 22730  254E  3F40               	moviw [0]fsr1
 22731  254F  0022               	movlb	2	; select bank2
 22732  2550  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22733  2551  3F41               	moviw [1]fsr1
 22734  2552  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22735  2553  3001               	movlw	1
 22736  2554  0720               	addwf	??_vfpfcnvrt^(0+256),w
 22737  2555  0084               	movwf	4
 22738  2556  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 22739  2557  1803               	skipnc
 22740  2558  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 22741  2559  0085               	movwf	5
 22742  255A  0800               	movf	0,w	;code access
 22743  255B  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 22744  255C  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 22745  255D  00C5               	movwf	vfpfcnvrt@c^(0+256)
 22746  255E  0021               	movlb	1	; select bank1
 22747  255F  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22748  2560  0086               	movwf	6
 22749  2561  3001               	movlw	1	; select bank2/3
 22750  2562  0087               	movwf	7
 22751  2563  3F40               	moviw [0]fsr1
 22752  2564  0022               	movlb	2	; select bank2
 22753  2565  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22754  2566  3F41               	moviw [1]fsr1
 22755  2567  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22756  2568  0820               	movf	??_vfpfcnvrt^(0+256),w
 22757  2569  0084               	movwf	4
 22758  256A  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22759  256B  0085               	movwf	5
 22760  256C  0800               	movf	0,w	;code access
 22761  256D  3EBF               	addlw	191
 22762  256E  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 22763  256F  30FF               	movlw	255
 22764  2570  1803               	skipnc
 22765  2571  3000               	movlw	0
 22766  2572  00A3               	movwf	((??_vfpfcnvrt+2)^(0+256)+1)
 22767  2573  3000               	movlw	0
 22768  2574  0223               	subwf	(??_vfpfcnvrt+3)^(0+256),w
 22769  2575  301A               	movlw	26
 22770  2576  1903               	skipnz
 22771  2577  0222               	subwf	(??_vfpfcnvrt+2)^(0+256),w
 22772  2578  1803               	btfsc	3,0
 22773  2579  2D7C               	goto	u11320
 22774  257A  3001               	movlw	1
 22775  257B  2D7D               	goto	u11330
 22776  257C                     u11320:	
 22777  257C  3000               	movlw	0
 22778  257D                     u11330:	
 22779  257D  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 22780  257E  01A5               	clrf	((??_vfpfcnvrt+4)^(0+256)+1)
 22781  257F  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 22782  2580  00B3               	movwf	_vfpfcnvrt$1316^(0+256)
 22783  2581  0825               	movf	(??_vfpfcnvrt+5)^(0+256),w
 22784  2582  00B4               	movwf	(_vfpfcnvrt$1316+1)^(0+256)
 22785  2583  0833               	movf	_vfpfcnvrt$1316^(0+256),w
 22786  2584  0434               	iorwf	(_vfpfcnvrt$1316+1)^(0+256),w
 22787  2585  1903               	btfsc	3,2
 22788  2586  2D9B               	goto	l8065
 22789                           
 22790                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
 22791  2587  0021               	movlb	1	; select bank1
 22792  2588  086F               	movf	vfpfcnvrt@ap^(0+128),w
 22793  2589  0086               	movwf	6
 22794  258A  3001               	movlw	1	; select bank2/3
 22795  258B  0087               	movwf	7
 22796  258C  0801               	movf	1,w
 22797  258D  0084               	movwf	4
 22798  258E  3001               	movlw	1	; select bank2/3
 22799  258F  0085               	movwf	5
 22800  2590  3004               	movlw	4
 22801  2591  0781               	addwf	1,f
 22802  2592  3F00               	moviw [0]fsr0
 22803  2593  0022               	movlb	2	; select bank2
 22804  2594  00B8               	movwf	vfpfcnvrt@f^(0+256)
 22805  2595  3F01               	moviw [1]fsr0
 22806  2596  00B9               	movwf	(vfpfcnvrt@f+1)^(0+256)
 22807  2597  3F02               	moviw [2]fsr0
 22808  2598  00BA               	movwf	(vfpfcnvrt@f+2)^(0+256)
 22809  2599  3F03               	moviw [3]fsr0
 22810  259A  2DAE               	goto	L1
 22811  259B                     l8065:	
 22812                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
 22813                           
 22814                           
 22815                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 22816  259B  0021               	movlb	1	; select bank1
 22817  259C  086F               	movf	vfpfcnvrt@ap^(0+128),w
 22818  259D  0086               	movwf	6
 22819  259E  3001               	movlw	1	; select bank2/3
 22820  259F  0087               	movwf	7
 22821  25A0  0801               	movf	1,w
 22822  25A1  0084               	movwf	4
 22823  25A2  3001               	movlw	1	; select bank2/3
 22824  25A3  0085               	movwf	5
 22825  25A4  3004               	movlw	4
 22826  25A5  0781               	addwf	1,f
 22827  25A6  3F00               	moviw [0]fsr0
 22828  25A7  0022               	movlb	2	; select bank2
 22829  25A8  00B8               	movwf	vfpfcnvrt@f^(0+256)
 22830  25A9  3F01               	moviw [1]fsr0
 22831  25AA  00B9               	movwf	(vfpfcnvrt@f+1)^(0+256)
 22832  25AB  3F02               	moviw [2]fsr0
 22833  25AC  00BA               	movwf	(vfpfcnvrt@f+2)^(0+256)
 22834  25AD  3F03               	moviw [3]fsr0
 22835  25AE                     L1:	
 22836  25AE  00BB               	movwf	(vfpfcnvrt@f+3)^(0+256)
 22837                           
 22838                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
 22839  25AF  0021               	movlb	1	; select bank1
 22840  25B0  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22841  25B1  0086               	movwf	6
 22842  25B2  3001               	movlw	1	; select bank2/3
 22843  25B3  0087               	movwf	7
 22844  25B4  3002               	movlw	2
 22845  25B5  0781               	addwf	1,f
 22846  25B6  3141               	addfsr 1,1
 22847  25B7  1803               	skipnc
 22848  25B8  0A81               	incf	1,f
 22849                           
 22850                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 938:       
      +                                return efgtoa(fp, f, c);
 22851  25B9  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22852  25BA  00AA               	movwf	(efgtoa@fp+1)^(0+128)
 22853  25BB  086C               	movf	vfpfcnvrt@fp^(0+128),w
 22854  25BC  00A9               	movwf	efgtoa@fp^(0+128)
 22855  25BD  0022               	movlb	2	; select bank2
 22856  25BE  083B               	movf	(vfpfcnvrt@f+3)^(0+256),w
 22857  25BF  0021               	movlb	1	; select bank1
 22858  25C0  00AE               	movwf	(efgtoa@f+3)^(0+128)
 22859  25C1  0022               	movlb	2	; select bank2
 22860  25C2  083A               	movf	(vfpfcnvrt@f+2)^(0+256),w
 22861  25C3  0021               	movlb	1	; select bank1
 22862  25C4  00AD               	movwf	(efgtoa@f+2)^(0+128)
 22863  25C5  0022               	movlb	2	; select bank2
 22864  25C6  0839               	movf	(vfpfcnvrt@f+1)^(0+256),w
 22865  25C7  0021               	movlb	1	; select bank1
 22866  25C8  00AC               	movwf	(efgtoa@f+1)^(0+128)
 22867  25C9  0022               	movlb	2	; select bank2
 22868  25CA  0838               	movf	vfpfcnvrt@f^(0+256),w
 22869  25CB  0021               	movlb	1	; select bank1
 22870  25CC  00AB               	movwf	efgtoa@f^(0+128)
 22871  25CD  0022               	movlb	2	; select bank2
 22872  25CE  0845               	movf	vfpfcnvrt@c^(0+256),w
 22873  25CF  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22874  25D0  0820               	movf	??_vfpfcnvrt^(0+256),w
 22875  25D1  0021               	movlb	1	; select bank1
 22876  25D2  00AF               	movwf	efgtoa@c^(0+128)
 22877  25D3  3180  2063         	fcall	_efgtoa
 22878  25D5  0021               	movlb	1	; select bank1
 22879  25D6  082A               	movf	(?_efgtoa+1)^(0+128),w
 22880  25D7  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22881  25D8  0829               	movf	?_efgtoa^(0+128),w
 22882  25D9  00EC               	movwf	?_vfpfcnvrt^(0+128)
 22883  25DA  0008               	return
 22884  25DB                     L26:	
 22885  25DB                     L25:	
 22886  25DB  31AD  2D78         	ljmp	l8073
 22887                           
 22888                           	psect	text9_split_6
 22889  2D78                     l8073:	
 22890                           
 22891                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
 22892  2D78  0021               	movlb	1	; select bank1
 22893  2D79  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22894  2D7A  0086               	movwf	6
 22895  2D7B  3001               	movlw	1	; select bank2/3
 22896  2D7C  0087               	movwf	7
 22897  2D7D  3F40               	moviw [0]fsr1
 22898  2D7E  00F1               	movwf	strncmp@_l
 22899  2D7F  3F41               	moviw [1]fsr1
 22900  2D80  00F2               	movwf	strncmp@_l+1
 22901  2D81  3056               	movlw	low (STR_76| (0+32768))
 22902  2D82  00F3               	movwf	strncmp@_r
 22903  2D83  30BB               	movlw	high (STR_76| (0+32768))
 22904  2D84  00F4               	movwf	strncmp@_r+1
 22905  2D85  3003               	movlw	3
 22906  2D86  00F5               	movwf	strncmp@n
 22907  2D87  3000               	movlw	0
 22908  2D88  00F6               	movwf	strncmp@n+1
 22909  2D89  31B3  23E5  31AD   	fcall	_strncmp
 22910  2D8C  0871               	movf	?_strncmp,w
 22911  2D8D  0472               	iorwf	?_strncmp+1,w
 22912  2D8E  1D03               	btfss	3,2
 22913  2D8F  2DE1               	goto	l8083
 22914                           
 22915                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
 22916  2D90  0021               	movlb	1	; select bank1
 22917  2D91  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22918  2D92  0086               	movwf	6
 22919  2D93  3001               	movlw	1	; select bank2/3
 22920  2D94  0087               	movwf	7
 22921  2D95  3003               	movlw	3
 22922  2D96  0781               	addwf	1,f
 22923  2D97  3141               	addfsr 1,1
 22924  2D98  1803               	skipnc
 22925  2D99  0A81               	incf	1,f
 22926                           
 22927                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 22928  2D9A  086F               	movf	vfpfcnvrt@ap^(0+128),w
 22929  2D9B  0086               	movwf	6
 22930  2D9C  3001               	movlw	1	; select bank2/3
 22931  2D9D  0087               	movwf	7
 22932  2D9E  0801               	movf	1,w
 22933  2D9F  0084               	movwf	4
 22934  2DA0  3001               	movlw	1	; select bank2/3
 22935  2DA1  0085               	movwf	5
 22936  2DA2  3002               	movlw	2
 22937  2DA3  0781               	addwf	1,f
 22938  2DA4  0800               	movf	0,w
 22939  2DA5  0022               	movlb	2	; select bank2
 22940  2DA6  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 22941  2DA7  01C7               	clrf	(vfpfcnvrt@llu+1)^(0+256)
 22942  2DA8  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 22943  2DA9  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 22944  2DAA  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 22945  2DAB  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 22946  2DAC  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 22947  2DAD  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 22948                           
 22949                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
 22950  2DAE  0021               	movlb	1	; select bank1
 22951  2DAF  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22952  2DB0  0020               	movlb	0	; select bank0
 22953  2DB1  00B1               	movwf	otoa@fp+1
 22954  2DB2  0021               	movlb	1	; select bank1
 22955  2DB3  086C               	movf	vfpfcnvrt@fp^(0+128),w
 22956  2DB4  0020               	movlb	0	; select bank0
 22957  2DB5  00B0               	movwf	otoa@fp
 22958  2DB6  0022               	movlb	2	; select bank2
 22959  2DB7  0846               	movf	vfpfcnvrt@llu^(0+256),w
 22960  2DB8  0020               	movlb	0	; select bank0
 22961  2DB9  00B2               	movwf	otoa@d
 22962  2DBA  0022               	movlb	2	; select bank2
 22963  2DBB  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 22964  2DBC  0020               	movlb	0	; select bank0
 22965  2DBD  00B3               	movwf	otoa@d+1
 22966  2DBE  0022               	movlb	2	; select bank2
 22967  2DBF  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 22968  2DC0  0020               	movlb	0	; select bank0
 22969  2DC1  00B4               	movwf	otoa@d+2
 22970  2DC2  0022               	movlb	2	; select bank2
 22971  2DC3  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 22972  2DC4  0020               	movlb	0	; select bank0
 22973  2DC5  00B5               	movwf	otoa@d+3
 22974  2DC6  0022               	movlb	2	; select bank2
 22975  2DC7  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 22976  2DC8  0020               	movlb	0	; select bank0
 22977  2DC9  00B6               	movwf	otoa@d+4
 22978  2DCA  0022               	movlb	2	; select bank2
 22979  2DCB  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 22980  2DCC  0020               	movlb	0	; select bank0
 22981  2DCD  00B7               	movwf	otoa@d+5
 22982  2DCE  0022               	movlb	2	; select bank2
 22983  2DCF  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 22984  2DD0  0020               	movlb	0	; select bank0
 22985  2DD1  00B8               	movwf	otoa@d+6
 22986  2DD2  0022               	movlb	2	; select bank2
 22987  2DD3  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 22988  2DD4  0020               	movlb	0	; select bank0
 22989  2DD5  00B9               	movwf	otoa@d+7
 22990  2DD6  31A2  22FB         	fcall	_otoa
 22991  2DD8  0020               	movlb	0	; select bank0
 22992  2DD9  0831               	movf	?_otoa+1,w
 22993  2DDA  0021               	movlb	1	; select bank1
 22994  2DDB  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22995  2DDC  0020               	movlb	0	; select bank0
 22996  2DDD  0830               	movf	?_otoa,w
 22997  2DDE  0021               	movlb	1	; select bank1
 22998  2DDF  00EC               	movwf	?_vfpfcnvrt^(0+128)
 22999  2DE0  0008               	return
 23000  2DE1                     l8083:	
 23001                           
 23002                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
 23003  2DE1  0021               	movlb	1	; select bank1
 23004  2DE2  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23005  2DE3  0086               	movwf	6
 23006  2DE4  3001               	movlw	1	; select bank2/3
 23007  2DE5  0087               	movwf	7
 23008  2DE6  3F40               	moviw [0]fsr1
 23009  2DE7  00F1               	movwf	strncmp@_l
 23010  2DE8  3F41               	moviw [1]fsr1
 23011  2DE9  00F2               	movwf	strncmp@_l+1
 23012  2DEA  3057               	movlw	low ((STR_76+1)| (0+32768))
 23013  2DEB  00F3               	movwf	strncmp@_r
 23014  2DEC  30BB               	movlw	high ((STR_76+1)| (0+32768))
 23015  2DED  00F4               	movwf	strncmp@_r+1
 23016  2DEE  3002               	movlw	2
 23017  2DEF  00F5               	movwf	strncmp@n
 23018  2DF0  3000               	movlw	0
 23019  2DF1  00F6               	movwf	strncmp@n+1
 23020  2DF2  31B3  23E5  31AD   	fcall	_strncmp
 23021  2DF5  0871               	movf	?_strncmp,w
 23022  2DF6  0472               	iorwf	?_strncmp+1,w
 23023  2DF7  1D03               	btfss	3,2
 23024  2DF8  2E4B               	goto	L28
 23025                           
 23026                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
 23027  2DF9  0021               	movlb	1	; select bank1
 23028  2DFA  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23029  2DFB  0086               	movwf	6
 23030  2DFC  3001               	movlw	1	; select bank2/3
 23031  2DFD  0087               	movwf	7
 23032  2DFE  3002               	movlw	2
 23033  2DFF  0781               	addwf	1,f
 23034  2E00  3141               	addfsr 1,1
 23035  2E01  1803               	skipnc
 23036  2E02  0A81               	incf	1,f
 23037                           
 23038                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
 23039  2E03  086F               	movf	vfpfcnvrt@ap^(0+128),w
 23040  2E04  0086               	movwf	6
 23041  2E05  3001               	movlw	1	; select bank2/3
 23042  2E06  0087               	movwf	7
 23043  2E07  0801               	movf	1,w
 23044  2E08  0084               	movwf	4
 23045  2E09  3001               	movlw	1	; select bank2/3
 23046  2E0A  0085               	movwf	5
 23047  2E0B  3002               	movlw	2
 23048  2E0C  0781               	addwf	1,f
 23049  2E0D  3F00               	moviw [0]fsr0
 23050  2E0E  0022               	movlb	2	; select bank2
 23051  2E0F  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 23052  2E10  3F01               	moviw [1]fsr0
 23053  2E11  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 23054  2E12  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 23055  2E13  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 23056  2E14  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 23057  2E15  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 23058  2E16  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 23059  2E17  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 23060                           
 23061                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 985:       
      +                                return otoa(fp, llu);
 23062  2E18  0021               	movlb	1	; select bank1
 23063  2E19  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23064  2E1A  0020               	movlb	0	; select bank0
 23065  2E1B  00B1               	movwf	otoa@fp+1
 23066  2E1C  0021               	movlb	1	; select bank1
 23067  2E1D  086C               	movf	vfpfcnvrt@fp^(0+128),w
 23068  2E1E  0020               	movlb	0	; select bank0
 23069  2E1F  00B0               	movwf	otoa@fp
 23070  2E20  0022               	movlb	2	; select bank2
 23071  2E21  0846               	movf	vfpfcnvrt@llu^(0+256),w
 23072  2E22  0020               	movlb	0	; select bank0
 23073  2E23  00B2               	movwf	otoa@d
 23074  2E24  0022               	movlb	2	; select bank2
 23075  2E25  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 23076  2E26  0020               	movlb	0	; select bank0
 23077  2E27  00B3               	movwf	otoa@d+1
 23078  2E28  0022               	movlb	2	; select bank2
 23079  2E29  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 23080  2E2A  0020               	movlb	0	; select bank0
 23081  2E2B  00B4               	movwf	otoa@d+2
 23082  2E2C  0022               	movlb	2	; select bank2
 23083  2E2D  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 23084  2E2E  0020               	movlb	0	; select bank0
 23085  2E2F  00B5               	movwf	otoa@d+3
 23086  2E30  0022               	movlb	2	; select bank2
 23087  2E31  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 23088  2E32  0020               	movlb	0	; select bank0
 23089  2E33  00B6               	movwf	otoa@d+4
 23090  2E34  0022               	movlb	2	; select bank2
 23091  2E35  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 23092  2E36  0020               	movlb	0	; select bank0
 23093  2E37  00B7               	movwf	otoa@d+5
 23094  2E38  0022               	movlb	2	; select bank2
 23095  2E39  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 23096  2E3A  0020               	movlb	0	; select bank0
 23097  2E3B  00B8               	movwf	otoa@d+6
 23098  2E3C  0022               	movlb	2	; select bank2
 23099  2E3D  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 23100  2E3E  0020               	movlb	0	; select bank0
 23101  2E3F  00B9               	movwf	otoa@d+7
 23102  2E40  31A2  22FB         	fcall	_otoa
 23103  2E42  0020               	movlb	0	; select bank0
 23104  2E43  0831               	movf	?_otoa+1,w
 23105  2E44  0021               	movlb	1	; select bank1
 23106  2E45  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 23107  2E46  0020               	movlb	0	; select bank0
 23108  2E47  0830               	movf	?_otoa,w
 23109  2E48  0021               	movlb	1	; select bank1
 23110  2E49  00EC               	movwf	?_vfpfcnvrt^(0+128)
 23111  2E4A  0008               	return
 23112  2E4B                     L28:	
 23113  2E4B                     L27:	
 23114  2E4B  31A2  2A11         	ljmp	l8093
 23115                           
 23116                           	psect	text9_split_7
 23117  2211                     l8093:	
 23118                           
 23119                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
 23120  2211  0021               	movlb	1	; select bank1
 23121  2212  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23122  2213  0086               	movwf	6
 23123  2214  3001               	movlw	1	; select bank2/3
 23124  2215  0087               	movwf	7
 23125  2216  3F40               	moviw [0]fsr1
 23126  2217  0022               	movlb	2	; select bank2
 23127  2218  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23128  2219  3F41               	moviw [1]fsr1
 23129  221A  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 23130  221B  0820               	movf	??_vfpfcnvrt^(0+256),w
 23131  221C  0084               	movwf	4
 23132  221D  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 23133  221E  0085               	movwf	5
 23134  221F  0012               	moviw fsr0++
 23135  2220  3A6F               	xorlw	111
 23136  2221  1D03               	btfss	3,2
 23137  2222  2A75               	goto	l8103
 23138                           
 23139                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
 23140  2223  0021               	movlb	1	; select bank1
 23141  2224  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23142  2225  0086               	movwf	6
 23143  2226  3001               	movlw	1	; select bank2/3
 23144  2227  0087               	movwf	7
 23145  2228  3001               	movlw	1
 23146  2229  0781               	addwf	1,f
 23147  222A  3141               	addfsr 1,1
 23148  222B  1803               	skipnc
 23149  222C  0A81               	incf	1,f
 23150                           
 23151                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
 23152  222D  086F               	movf	vfpfcnvrt@ap^(0+128),w
 23153  222E  0086               	movwf	6
 23154  222F  3001               	movlw	1	; select bank2/3
 23155  2230  0087               	movwf	7
 23156  2231  0801               	movf	1,w
 23157  2232  0084               	movwf	4
 23158  2233  3001               	movlw	1	; select bank2/3
 23159  2234  0085               	movwf	5
 23160  2235  3002               	movlw	2
 23161  2236  0781               	addwf	1,f
 23162  2237  3F00               	moviw [0]fsr0
 23163  2238  0022               	movlb	2	; select bank2
 23164  2239  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 23165  223A  3F01               	moviw [1]fsr0
 23166  223B  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 23167  223C  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 23168  223D  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 23169  223E  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 23170  223F  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 23171  2240  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 23172  2241  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 23173                           
 23174                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 995:       
      +                                return otoa(fp, llu);
 23175  2242  0021               	movlb	1	; select bank1
 23176  2243  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23177  2244  0020               	movlb	0	; select bank0
 23178  2245  00B1               	movwf	otoa@fp+1
 23179  2246  0021               	movlb	1	; select bank1
 23180  2247  086C               	movf	vfpfcnvrt@fp^(0+128),w
 23181  2248  0020               	movlb	0	; select bank0
 23182  2249  00B0               	movwf	otoa@fp
 23183  224A  0022               	movlb	2	; select bank2
 23184  224B  0846               	movf	vfpfcnvrt@llu^(0+256),w
 23185  224C  0020               	movlb	0	; select bank0
 23186  224D  00B2               	movwf	otoa@d
 23187  224E  0022               	movlb	2	; select bank2
 23188  224F  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 23189  2250  0020               	movlb	0	; select bank0
 23190  2251  00B3               	movwf	otoa@d+1
 23191  2252  0022               	movlb	2	; select bank2
 23192  2253  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 23193  2254  0020               	movlb	0	; select bank0
 23194  2255  00B4               	movwf	otoa@d+2
 23195  2256  0022               	movlb	2	; select bank2
 23196  2257  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 23197  2258  0020               	movlb	0	; select bank0
 23198  2259  00B5               	movwf	otoa@d+3
 23199  225A  0022               	movlb	2	; select bank2
 23200  225B  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 23201  225C  0020               	movlb	0	; select bank0
 23202  225D  00B6               	movwf	otoa@d+4
 23203  225E  0022               	movlb	2	; select bank2
 23204  225F  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 23205  2260  0020               	movlb	0	; select bank0
 23206  2261  00B7               	movwf	otoa@d+5
 23207  2262  0022               	movlb	2	; select bank2
 23208  2263  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 23209  2264  0020               	movlb	0	; select bank0
 23210  2265  00B8               	movwf	otoa@d+6
 23211  2266  0022               	movlb	2	; select bank2
 23212  2267  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 23213  2268  0020               	movlb	0	; select bank0
 23214  2269  00B9               	movwf	otoa@d+7
 23215  226A  31A2  22FB         	fcall	_otoa
 23216  226C  0020               	movlb	0	; select bank0
 23217  226D  0831               	movf	?_otoa+1,w
 23218  226E  0021               	movlb	1	; select bank1
 23219  226F  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 23220  2270  0020               	movlb	0	; select bank0
 23221  2271  0830               	movf	?_otoa,w
 23222  2272  0021               	movlb	1	; select bank1
 23223  2273  00EC               	movwf	?_vfpfcnvrt^(0+128)
 23224  2274  0008               	return
 23225  2275                     l8103:	
 23226                           
 23227                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1000:      
      +                             if (!strncmp(*fmt, "lo", ((sizeof("lo")/sizeof("lo"[0]))-1))) {
 23228  2275  0021               	movlb	1	; select bank1
 23229  2276  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23230  2277  0086               	movwf	6
 23231  2278  3001               	movlw	1	; select bank2/3
 23232  2279  0087               	movwf	7
 23233  227A  3F40               	moviw [0]fsr1
 23234  227B  00F1               	movwf	strncmp@_l
 23235  227C  3F41               	moviw [1]fsr1
 23236  227D  00F2               	movwf	strncmp@_l+1
 23237  227E  307D               	movlw	low (STR_86| (0+32768))
 23238  227F  00F3               	movwf	strncmp@_r
 23239  2280  30BB               	movlw	high (STR_86| (0+32768))
 23240  2281  00F4               	movwf	strncmp@_r+1
 23241  2282  3002               	movlw	2
 23242  2283  00F5               	movwf	strncmp@n
 23243  2284  3000               	movlw	0
 23244  2285  00F6               	movwf	strncmp@n+1
 23245  2286  31B3  23E5  31A2   	fcall	_strncmp
 23246  2289  0871               	movf	?_strncmp,w
 23247  228A  0472               	iorwf	?_strncmp+1,w
 23248  228B  1D03               	btfss	3,2
 23249  228C  2AF9               	goto	L30
 23250                           
 23251                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1002:      
      +                                 *fmt += ((sizeof("lo")/sizeof("lo"[0]))-1);
 23252  228D  0021               	movlb	1	; select bank1
 23253  228E  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23254  228F  0086               	movwf	6
 23255  2290  3001               	movlw	1	; select bank2/3
 23256  2291  0087               	movwf	7
 23257  2292  3002               	movlw	2
 23258  2293  0781               	addwf	1,f
 23259  2294  3141               	addfsr 1,1
 23260  2295  1803               	skipnc
 23261  2296  0A81               	incf	1,f
 23262                           
 23263                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1003:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 23264  2297  086F               	movf	vfpfcnvrt@ap^(0+128),w
 23265  2298  0086               	movwf	6
 23266  2299  3001               	movlw	1	; select bank2/3
 23267  229A  0087               	movwf	7
 23268  229B  0801               	movf	1,w
 23269  229C  0084               	movwf	4
 23270  229D  3001               	movlw	1	; select bank2/3
 23271  229E  0085               	movwf	5
 23272  229F  3004               	movlw	4
 23273  22A0  0781               	addwf	1,f
 23274  22A1  3F00               	moviw [0]fsr0
 23275  22A2  0022               	movlb	2	; select bank2
 23276  22A3  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23277  22A4  3F01               	moviw [1]fsr0
 23278  22A5  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 23279  22A6  3F02               	moviw [2]fsr0
 23280  22A7  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 23281  22A8  3F03               	moviw [3]fsr0
 23282  22A9  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 23283  22AA  0820               	movf	??_vfpfcnvrt^(0+256),w
 23284  22AB  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 23285  22AC  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 23286  22AD  00A5               	movwf	((??_vfpfcnvrt+4)^(0+256)+1)
 23287  22AE  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 23288  22AF  00A6               	movwf	((??_vfpfcnvrt+4)^(0+256)+2)
 23289  22B0  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 23290  22B1  00A7               	movwf	((??_vfpfcnvrt+4)^(0+256)+3)
 23291  22B2  01A8               	clrf	((??_vfpfcnvrt+4)^(0+256)+4)
 23292  22B3  01A9               	clrf	((??_vfpfcnvrt+4)^(0+256)+5)
 23293  22B4  01AA               	clrf	((??_vfpfcnvrt+4)^(0+256)+6)
 23294  22B5  01AB               	clrf	((??_vfpfcnvrt+4)^(0+256)+7)
 23295  22B6  082B               	movf	((??_vfpfcnvrt+4)^(0+256)+7),w
 23296  22B7  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 23297  22B8  082A               	movf	((??_vfpfcnvrt+4)^(0+256)+6),w
 23298  22B9  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 23299  22BA  0829               	movf	((??_vfpfcnvrt+4)^(0+256)+5),w
 23300  22BB  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 23301  22BC  0828               	movf	((??_vfpfcnvrt+4)^(0+256)+4),w
 23302  22BD  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 23303  22BE  0827               	movf	((??_vfpfcnvrt+4)^(0+256)+3),w
 23304  22BF  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 23305  22C0  0826               	movf	((??_vfpfcnvrt+4)^(0+256)+2),w
 23306  22C1  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 23307  22C2  0825               	movf	((??_vfpfcnvrt+4)^(0+256)+1),w
 23308  22C3  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 23309  22C4  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 23310  22C5  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 23311                           
 23312                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1005:      
      +                                 return otoa(fp, llu);
 23313  22C6  0021               	movlb	1	; select bank1
 23314  22C7  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23315  22C8  0020               	movlb	0	; select bank0
 23316  22C9  00B1               	movwf	otoa@fp+1
 23317  22CA  0021               	movlb	1	; select bank1
 23318  22CB  086C               	movf	vfpfcnvrt@fp^(0+128),w
 23319  22CC  0020               	movlb	0	; select bank0
 23320  22CD  00B0               	movwf	otoa@fp
 23321  22CE  0022               	movlb	2	; select bank2
 23322  22CF  0846               	movf	vfpfcnvrt@llu^(0+256),w
 23323  22D0  0020               	movlb	0	; select bank0
 23324  22D1  00B2               	movwf	otoa@d
 23325  22D2  0022               	movlb	2	; select bank2
 23326  22D3  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 23327  22D4  0020               	movlb	0	; select bank0
 23328  22D5  00B3               	movwf	otoa@d+1
 23329  22D6  0022               	movlb	2	; select bank2
 23330  22D7  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 23331  22D8  0020               	movlb	0	; select bank0
 23332  22D9  00B4               	movwf	otoa@d+2
 23333  22DA  0022               	movlb	2	; select bank2
 23334  22DB  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 23335  22DC  0020               	movlb	0	; select bank0
 23336  22DD  00B5               	movwf	otoa@d+3
 23337  22DE  0022               	movlb	2	; select bank2
 23338  22DF  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 23339  22E0  0020               	movlb	0	; select bank0
 23340  22E1  00B6               	movwf	otoa@d+4
 23341  22E2  0022               	movlb	2	; select bank2
 23342  22E3  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 23343  22E4  0020               	movlb	0	; select bank0
 23344  22E5  00B7               	movwf	otoa@d+5
 23345  22E6  0022               	movlb	2	; select bank2
 23346  22E7  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 23347  22E8  0020               	movlb	0	; select bank0
 23348  22E9  00B8               	movwf	otoa@d+6
 23349  22EA  0022               	movlb	2	; select bank2
 23350  22EB  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 23351  22EC  0020               	movlb	0	; select bank0
 23352  22ED  00B9               	movwf	otoa@d+7
 23353  22EE  31A2  22FB         	fcall	_otoa
 23354  22F0  0020               	movlb	0	; select bank0
 23355  22F1  0831               	movf	?_otoa+1,w
 23356  22F2  0021               	movlb	1	; select bank1
 23357  22F3  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 23358  22F4  0020               	movlb	0	; select bank0
 23359  22F5  0830               	movf	?_otoa,w
 23360  22F6  0021               	movlb	1	; select bank1
 23361  22F7  00EC               	movwf	?_vfpfcnvrt^(0+128)
 23362  22F8  0008               	return
 23363  22F9                     L30:	
 23364  22F9                     L29:	
 23365  22F9  3188  280C         	ljmp	l8113
 23366                           
 23367                           	psect	text9_split_8
 23368  080C                     l8113:	
 23369                           
 23370                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
 23371  080C  0021               	movlb	1	; select bank1
 23372  080D  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23373  080E  0086               	movwf	6
 23374  080F  3001               	movlw	1	; select bank2/3
 23375  0810  0087               	movwf	7
 23376  0811  3F40               	moviw [0]fsr1
 23377  0812  00F1               	movwf	strncmp@_l
 23378  0813  3F41               	moviw [1]fsr1
 23379  0814  00F2               	movwf	strncmp@_l+1
 23380  0815  3080               	movlw	low (STR_91| (0+32768))
 23381  0816  00F3               	movwf	strncmp@_r
 23382  0817  30BB               	movlw	high (STR_91| (0+32768))
 23383  0818  00F4               	movwf	strncmp@_r+1
 23384  0819  3002               	movlw	2
 23385  081A  00F5               	movwf	strncmp@n
 23386  081B  3000               	movlw	0
 23387  081C  00F6               	movwf	strncmp@n+1
 23388  081D  31B3  23E5  3188   	fcall	_strncmp
 23389  0820  0871               	movf	?_strncmp,w
 23390  0821  0472               	iorwf	?_strncmp+1,w
 23391  0822  1D03               	btfss	3,2
 23392  0823  2876               	goto	l8123
 23393                           
 23394                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
 23395  0824  0021               	movlb	1	; select bank1
 23396  0825  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23397  0826  0086               	movwf	6
 23398  0827  3001               	movlw	1	; select bank2/3
 23399  0828  0087               	movwf	7
 23400  0829  3002               	movlw	2
 23401  082A  0781               	addwf	1,f
 23402  082B  3141               	addfsr 1,1
 23403  082C  1803               	skipnc
 23404  082D  0A81               	incf	1,f
 23405                           
 23406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 23407  082E  086F               	movf	vfpfcnvrt@ap^(0+128),w
 23408  082F  0086               	movwf	6
 23409  0830  3001               	movlw	1	; select bank2/3
 23410  0831  0087               	movwf	7
 23411  0832  0801               	movf	1,w
 23412  0833  0084               	movwf	4
 23413  0834  3001               	movlw	1	; select bank2/3
 23414  0835  0085               	movwf	5
 23415  0836  3002               	movlw	2
 23416  0837  0781               	addwf	1,f
 23417  0838  3F00               	moviw [0]fsr0
 23418  0839  0022               	movlb	2	; select bank2
 23419  083A  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 23420  083B  3F01               	moviw [1]fsr0
 23421  083C  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 23422  083D  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 23423  083E  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 23424  083F  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 23425  0840  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 23426  0841  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 23427  0842  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 23428                           
 23429                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1049:      
      +                                 return otoa(fp, llu);
 23430  0843  0021               	movlb	1	; select bank1
 23431  0844  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23432  0845  0020               	movlb	0	; select bank0
 23433  0846  00B1               	movwf	otoa@fp+1
 23434  0847  0021               	movlb	1	; select bank1
 23435  0848  086C               	movf	vfpfcnvrt@fp^(0+128),w
 23436  0849  0020               	movlb	0	; select bank0
 23437  084A  00B0               	movwf	otoa@fp
 23438  084B  0022               	movlb	2	; select bank2
 23439  084C  0846               	movf	vfpfcnvrt@llu^(0+256),w
 23440  084D  0020               	movlb	0	; select bank0
 23441  084E  00B2               	movwf	otoa@d
 23442  084F  0022               	movlb	2	; select bank2
 23443  0850  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 23444  0851  0020               	movlb	0	; select bank0
 23445  0852  00B3               	movwf	otoa@d+1
 23446  0853  0022               	movlb	2	; select bank2
 23447  0854  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 23448  0855  0020               	movlb	0	; select bank0
 23449  0856  00B4               	movwf	otoa@d+2
 23450  0857  0022               	movlb	2	; select bank2
 23451  0858  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 23452  0859  0020               	movlb	0	; select bank0
 23453  085A  00B5               	movwf	otoa@d+3
 23454  085B  0022               	movlb	2	; select bank2
 23455  085C  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 23456  085D  0020               	movlb	0	; select bank0
 23457  085E  00B6               	movwf	otoa@d+4
 23458  085F  0022               	movlb	2	; select bank2
 23459  0860  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 23460  0861  0020               	movlb	0	; select bank0
 23461  0862  00B7               	movwf	otoa@d+5
 23462  0863  0022               	movlb	2	; select bank2
 23463  0864  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 23464  0865  0020               	movlb	0	; select bank0
 23465  0866  00B8               	movwf	otoa@d+6
 23466  0867  0022               	movlb	2	; select bank2
 23467  0868  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 23468  0869  0020               	movlb	0	; select bank0
 23469  086A  00B9               	movwf	otoa@d+7
 23470  086B  31A2  22FB         	fcall	_otoa
 23471  086D  0020               	movlb	0	; select bank0
 23472  086E  0831               	movf	?_otoa+1,w
 23473  086F  0021               	movlb	1	; select bank1
 23474  0870  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 23475  0871  0020               	movlb	0	; select bank0
 23476  0872  0830               	movf	?_otoa,w
 23477  0873  0021               	movlb	1	; select bank1
 23478  0874  00EC               	movwf	?_vfpfcnvrt^(0+128)
 23479  0875  0008               	return
 23480  0876                     l8123:	
 23481                           
 23482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
 23483  0876  0021               	movlb	1	; select bank1
 23484  0877  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23485  0878  0086               	movwf	6
 23486  0879  3001               	movlw	1	; select bank2/3
 23487  087A  0087               	movwf	7
 23488  087B  3F40               	moviw [0]fsr1
 23489  087C  00F1               	movwf	strncmp@_l
 23490  087D  3F41               	moviw [1]fsr1
 23491  087E  00F2               	movwf	strncmp@_l+1
 23492  087F  3052               	movlw	low (STR_96| (0+32768))
 23493  0880  00F3               	movwf	strncmp@_r
 23494  0881  30BB               	movlw	high (STR_96| (0+32768))
 23495  0882  00F4               	movwf	strncmp@_r+1
 23496  0883  3003               	movlw	3
 23497  0884  00F5               	movwf	strncmp@n
 23498  0885  3000               	movlw	0
 23499  0886  00F6               	movwf	strncmp@n+1
 23500  0887  31B3  23E5  3188   	fcall	_strncmp
 23501  088A  0871               	movf	?_strncmp,w
 23502  088B  0472               	iorwf	?_strncmp+1,w
 23503  088C  1D03               	btfss	3,2
 23504  088D  294C               	goto	l8135
 23505                           
 23506                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
 23507  088E  0021               	movlb	1	; select bank1
 23508  088F  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23509  0890  0086               	movwf	6
 23510  0891  3001               	movlw	1	; select bank2/3
 23511  0892  0087               	movwf	7
 23512  0893  3003               	movlw	3
 23513  0894  0781               	addwf	1,f
 23514  0895  3141               	addfsr 1,1
 23515  0896  1803               	skipnc
 23516  0897  0A81               	incf	1,f
 23517                           
 23518                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
 23519  0898  086F               	movf	vfpfcnvrt@ap^(0+128),w
 23520  0899  0086               	movwf	6
 23521  089A  3001               	movlw	1	; select bank2/3
 23522  089B  0087               	movwf	7
 23523  089C  3F40               	moviw [0]fsr1
 23524  089D  0084               	movwf	4
 23525  089E  3001               	movlw	1	; select bank2/3
 23526  089F  0085               	movwf	5
 23527  08A0  0A81               	incf	1,f
 23528  08A1  0800               	movf	0,w
 23529  08A2  0022               	movlb	2	; select bank2
 23530  08A3  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23531  08A4  0820               	movf	??_vfpfcnvrt^(0+256),w
 23532  08A5  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 23533                           
 23534                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
 23535  08A6  0023               	movlb	3	; select bank3
 23536  08A7  0832               	movf	_nout^(0+384),w
 23537  08A8  0022               	movlb	2	; select bank2
 23538  08A9  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23539  08AA  0844               	movf	vfpfcnvrt@vp^(0+256),w
 23540  08AB  0086               	movwf	6
 23541  08AC  3001               	movlw	1	; select bank2/3
 23542  08AD  0087               	movwf	7
 23543  08AE  0820               	movf	??_vfpfcnvrt^(0+256),w
 23544  08AF  0081               	movwf	1
 23545  08B0  2948               	goto	l8131
 23546  08B1                     l8137:	
 23547                           
 23548                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
 23549  08B1  0021               	movlb	1	; select bank1
 23550  08B2  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23551  08B3  0086               	movwf	6
 23552  08B4  3001               	movlw	1	; select bank2/3
 23553  08B5  0087               	movwf	7
 23554  08B6  3002               	movlw	2
 23555  08B7  0781               	addwf	1,f
 23556  08B8  3141               	addfsr 1,1
 23557  08B9  1803               	skipnc
 23558  08BA  0A81               	incf	1,f
 23559                           
 23560                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
 23561  08BB  086F               	movf	vfpfcnvrt@ap^(0+128),w
 23562  08BC  0086               	movwf	6
 23563  08BD  3001               	movlw	1	; select bank2/3
 23564  08BE  0087               	movwf	7
 23565  08BF  3F40               	moviw [0]fsr1
 23566  08C0  0084               	movwf	4
 23567  08C1  3001               	movlw	1	; select bank2/3
 23568  08C2  0085               	movwf	5
 23569  08C3  0A81               	incf	1,f
 23570  08C4  0800               	movf	0,w
 23571  08C5  0022               	movlb	2	; select bank2
 23572  08C6  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23573  08C7  0820               	movf	??_vfpfcnvrt^(0+256),w
 23574  08C8  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 23575                           
 23576                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
 23577  08C9  0844               	movf	vfpfcnvrt@vp^(0+256),w
 23578  08CA  0086               	movwf	6
 23579  08CB  3001               	movlw	1	; select bank2/3
 23580  08CC  0087               	movwf	7
 23581  08CD  0023               	movlb	3	; select bank3
 23582  08CE  0832               	movf	_nout^(0+384),w
 23583  08CF  3FC0               	movwi [0]fsr1
 23584  08D0  0833               	movf	(_nout+1)^(0+384),w
 23585  08D1  3FC1               	movwi [1]fsr1
 23586  08D2  2948               	goto	l8131
 23587  08D3                     l8149:	
 23588                           
 23589                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
 23590  08D3  0021               	movlb	1	; select bank1
 23591  08D4  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23592  08D5  0086               	movwf	6
 23593  08D6  3001               	movlw	1	; select bank2/3
 23594  08D7  0087               	movwf	7
 23595  08D8  3001               	movlw	1
 23596  08D9  0781               	addwf	1,f
 23597  08DA  3141               	addfsr 1,1
 23598  08DB  1803               	skipnc
 23599  08DC  0A81               	incf	1,f
 23600                           
 23601                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
 23602  08DD  086F               	movf	vfpfcnvrt@ap^(0+128),w
 23603  08DE  0086               	movwf	6
 23604  08DF  3001               	movlw	1	; select bank2/3
 23605  08E0  0087               	movwf	7
 23606  08E1  3F40               	moviw [0]fsr1
 23607  08E2  0084               	movwf	4
 23608  08E3  3001               	movlw	1	; select bank2/3
 23609  08E4  0085               	movwf	5
 23610  08E5  0A81               	incf	1,f
 23611  08E6  0800               	movf	0,w
 23612  08E7  0022               	movlb	2	; select bank2
 23613  08E8  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23614  08E9  0820               	movf	??_vfpfcnvrt^(0+256),w
 23615  08EA  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 23616                           
 23617                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
 23618  08EB  0844               	movf	vfpfcnvrt@vp^(0+256),w
 23619  08EC  0086               	movwf	6
 23620  08ED  3001               	movlw	1	; select bank2/3
 23621  08EE  0087               	movwf	7
 23622  08EF  0023               	movlb	3	; select bank3
 23623  08F0  0832               	movf	_nout^(0+384),w
 23624  08F1  3FC0               	movwi [0]fsr1
 23625  08F2  0833               	movf	(_nout+1)^(0+384),w
 23626  08F3  3FC1               	movwi [1]fsr1
 23627  08F4  2948               	goto	l8131
 23628  08F5                     l8161:	
 23629                           
 23630                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1087:      
      +                                 *fmt += ((sizeof("ln")/sizeof("ln"[0]))-1);
 23631  08F5  0021               	movlb	1	; select bank1
 23632  08F6  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23633  08F7  0086               	movwf	6
 23634  08F8  3001               	movlw	1	; select bank2/3
 23635  08F9  0087               	movwf	7
 23636  08FA  3002               	movlw	2
 23637  08FB  0781               	addwf	1,f
 23638  08FC  3141               	addfsr 1,1
 23639  08FD  1803               	skipnc
 23640  08FE  0A81               	incf	1,f
 23641                           
 23642                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1088:      
      +                                 vp = (void *)(*(long * *)__va_arg(*(long * **)ap, (long *)0));
 23643  08FF  086F               	movf	vfpfcnvrt@ap^(0+128),w
 23644  0900  0086               	movwf	6
 23645  0901  3001               	movlw	1	; select bank2/3
 23646  0902  0087               	movwf	7
 23647  0903  3F40               	moviw [0]fsr1
 23648  0904  0084               	movwf	4
 23649  0905  3001               	movlw	1	; select bank2/3
 23650  0906  0085               	movwf	5
 23651  0907  0A81               	incf	1,f
 23652  0908  0800               	movf	0,w
 23653  0909  0022               	movlb	2	; select bank2
 23654  090A  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23655  090B  0820               	movf	??_vfpfcnvrt^(0+256),w
 23656  090C  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 23657                           
 23658                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1089:      
      +                                 *(long *)vp = (long)nout;
 23659  090D  0023               	movlb	3	; select bank3
 23660  090E  0832               	movf	_nout^(0+384),w
 23661  090F  0022               	movlb	2	; select bank2
 23662  0910  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23663  0911  0023               	movlb	3	; select bank3
 23664  0912  0833               	movf	(_nout+1)^(0+384),w
 23665  0913  0022               	movlb	2	; select bank2
 23666  0914  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 23667  0915  3000               	movlw	0
 23668  0916  1BA1               	btfsc	(??_vfpfcnvrt^(0+256)+1),7
 23669  0917  30FF               	movlw	255
 23670  0918  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 23671  0919  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 23672  091A  0844               	movf	vfpfcnvrt@vp^(0+256),w
 23673  091B  0086               	movwf	6
 23674  091C  3001               	movlw	1	; select bank2/3
 23675  091D  0087               	movwf	7
 23676  091E  0820               	movf	??_vfpfcnvrt^(0+256),w
 23677  091F  3FC0               	movwi [0]fsr1
 23678  0920  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 23679  0921  3FC1               	movwi [1]fsr1
 23680  0922  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 23681  0923  3FC2               	movwi [2]fsr1
 23682  0924  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 23683  0925  3FC3               	movwi [3]fsr1
 23684  0926  2948               	goto	l8131
 23685  0927                     l8173:	
 23686                           
 23687                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
 23688  0927  0021               	movlb	1	; select bank1
 23689  0928  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23690  0929  0086               	movwf	6
 23691  092A  3001               	movlw	1	; select bank2/3
 23692  092B  0087               	movwf	7
 23693  092C  3002               	movlw	2
 23694  092D  0781               	addwf	1,f
 23695  092E  3141               	addfsr 1,1
 23696  092F  1803               	skipnc
 23697  0930  0A81               	incf	1,f
 23698                           
 23699                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
 23700  0931  086F               	movf	vfpfcnvrt@ap^(0+128),w
 23701  0932  0086               	movwf	6
 23702  0933  3001               	movlw	1	; select bank2/3
 23703  0934  0087               	movwf	7
 23704  0935  3F40               	moviw [0]fsr1
 23705  0936  0084               	movwf	4
 23706  0937  3001               	movlw	1	; select bank2/3
 23707  0938  0085               	movwf	5
 23708  0939  0A81               	incf	1,f
 23709  093A  0800               	movf	0,w
 23710  093B  0022               	movlb	2	; select bank2
 23711  093C  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23712  093D  0820               	movf	??_vfpfcnvrt^(0+256),w
 23713  093E  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 23714                           
 23715                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
 23716  093F  0844               	movf	vfpfcnvrt@vp^(0+256),w
 23717  0940  0086               	movwf	6
 23718  0941  3001               	movlw	1	; select bank2/3
 23719  0942  0087               	movwf	7
 23720  0943  0023               	movlb	3	; select bank3
 23721  0944  0832               	movf	_nout^(0+384),w
 23722  0945  3FC0               	movwi [0]fsr1
 23723  0946  0833               	movf	(_nout+1)^(0+384),w
 23724  0947  3FC1               	movwi [1]fsr1
 23725  0948                     l8131:	
 23726                           
 23727                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
 23728  0948  0021               	movlb	1	; select bank1
 23729  0949  01EC               	clrf	?_vfpfcnvrt^(0+128)
 23730  094A  01ED               	clrf	(?_vfpfcnvrt+1)^(0+128)
 23731  094B  0008               	return
 23732  094C                     l8135:	
 23733                           
 23734                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
 23735  094C  0021               	movlb	1	; select bank1
 23736  094D  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23737  094E  0086               	movwf	6
 23738  094F  3001               	movlw	1	; select bank2/3
 23739  0950  0087               	movwf	7
 23740  0951  3F40               	moviw [0]fsr1
 23741  0952  00F1               	movwf	strncmp@_l
 23742  0953  3F41               	moviw [1]fsr1
 23743  0954  00F2               	movwf	strncmp@_l+1
 23744  0955  3053               	movlw	low ((STR_96+1)| (0+32768))
 23745  0956  00F3               	movwf	strncmp@_r
 23746  0957  30BB               	movlw	high ((STR_96+1)| (0+32768))
 23747  0958  00F4               	movwf	strncmp@_r+1
 23748  0959  3002               	movlw	2
 23749  095A  00F5               	movwf	strncmp@n
 23750  095B  3000               	movlw	0
 23751  095C  00F6               	movwf	strncmp@n+1
 23752  095D  31B3  23E5  3188   	fcall	_strncmp
 23753  0960  0871               	movf	?_strncmp,w
 23754  0961  0472               	iorwf	?_strncmp+1,w
 23755  0962  1903               	btfsc	3,2
 23756  0963  28B1               	goto	l8137
 23757                           
 23758                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
 23759  0964  0021               	movlb	1	; select bank1
 23760  0965  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23761  0966  0086               	movwf	6
 23762  0967  3001               	movlw	1	; select bank2/3
 23763  0968  0087               	movwf	7
 23764  0969  3F40               	moviw [0]fsr1
 23765  096A  0022               	movlb	2	; select bank2
 23766  096B  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23767  096C  3F41               	moviw [1]fsr1
 23768  096D  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 23769  096E  0820               	movf	??_vfpfcnvrt^(0+256),w
 23770  096F  0084               	movwf	4
 23771  0970  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 23772  0971  0085               	movwf	5
 23773  0972  0012               	moviw fsr0++
 23774  0973  3A6E               	xorlw	110
 23775  0974  1903               	btfsc	3,2
 23776  0975  28D3               	goto	l8149
 23777                           
 23778                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1085:      
      +                             if (!strncmp(*fmt, "ln", ((sizeof("ln")/sizeof("ln"[0]))-1))) {
 23779  0976  0021               	movlb	1	; select bank1
 23780  0977  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23781  0978  0086               	movwf	6
 23782  0979  3001               	movlw	1	; select bank2/3
 23783  097A  0087               	movwf	7
 23784  097B  3F40               	moviw [0]fsr1
 23785  097C  00F1               	movwf	strncmp@_l
 23786  097D  3F41               	moviw [1]fsr1
 23787  097E  00F2               	movwf	strncmp@_l+1
 23788  097F  3077               	movlw	low (STR_106| (0+32768))
 23789  0980  00F3               	movwf	strncmp@_r
 23790  0981  30BB               	movlw	high (STR_106| (0+32768))
 23791  0982  00F4               	movwf	strncmp@_r+1
 23792  0983  3002               	movlw	2
 23793  0984  00F5               	movwf	strncmp@n
 23794  0985  3000               	movlw	0
 23795  0986  00F6               	movwf	strncmp@n+1
 23796  0987  31B3  23E5  3188   	fcall	_strncmp
 23797  098A  0871               	movf	?_strncmp,w
 23798  098B  0472               	iorwf	?_strncmp+1,w
 23799  098C  1903               	btfsc	3,2
 23800  098D  28F5               	goto	l8161
 23801                           
 23802                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
 23803  098E  0021               	movlb	1	; select bank1
 23804  098F  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23805  0990  0086               	movwf	6
 23806  0991  3001               	movlw	1	; select bank2/3
 23807  0992  0087               	movwf	7
 23808  0993  3F40               	moviw [0]fsr1
 23809  0994  00F1               	movwf	strncmp@_l
 23810  0995  3F41               	moviw [1]fsr1
 23811  0996  00F2               	movwf	strncmp@_l+1
 23812  0997  307A               	movlw	low (STR_111| (0+32768))
 23813  0998  00F3               	movwf	strncmp@_r
 23814  0999  30BB               	movlw	high (STR_111| (0+32768))
 23815  099A  00F4               	movwf	strncmp@_r+1
 23816  099B  3002               	movlw	2
 23817  099C  00F5               	movwf	strncmp@n
 23818  099D  3000               	movlw	0
 23819  099E  00F6               	movwf	strncmp@n+1
 23820  099F  31B3  23E5  3188   	fcall	_strncmp
 23821  09A2  0871               	movf	?_strncmp,w
 23822  09A3  0472               	iorwf	?_strncmp+1,w
 23823  09A4  1903               	btfsc	3,2
 23824  09A5  2927               	goto	l8173
 23825                           
 23826                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
 23827  09A6  0021               	movlb	1	; select bank1
 23828  09A7  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23829  09A8  0086               	movwf	6
 23830  09A9  3001               	movlw	1	; select bank2/3
 23831  09AA  0087               	movwf	7
 23832  09AB  3F40               	moviw [0]fsr1
 23833  09AC  0022               	movlb	2	; select bank2
 23834  09AD  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23835  09AE  3F41               	moviw [1]fsr1
 23836  09AF  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 23837  09B0  0820               	movf	??_vfpfcnvrt^(0+256),w
 23838  09B1  0084               	movwf	4
 23839  09B2  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 23840  09B3  0085               	movwf	5
 23841  09B4  0012               	moviw fsr0++
 23842  09B5  3A70               	xorlw	112
 23843  09B6  1D03               	btfss	3,2
 23844  09B7  2A1E               	goto	l8193
 23845                           
 23846                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
 23847  09B8  0021               	movlb	1	; select bank1
 23848  09B9  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23849  09BA  0086               	movwf	6
 23850  09BB  3001               	movlw	1	; select bank2/3
 23851  09BC  0087               	movwf	7
 23852  09BD  3001               	movlw	1
 23853  09BE  0781               	addwf	1,f
 23854  09BF  3141               	addfsr 1,1
 23855  09C0  1803               	skipnc
 23856  09C1  0A81               	incf	1,f
 23857                           
 23858                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
 23859  09C2  086F               	movf	vfpfcnvrt@ap^(0+128),w
 23860  09C3  0086               	movwf	6
 23861  09C4  3001               	movlw	1	; select bank2/3
 23862  09C5  0087               	movwf	7
 23863  09C6  3F40               	moviw [0]fsr1
 23864  09C7  0084               	movwf	4
 23865  09C8  3001               	movlw	1	; select bank2/3
 23866  09C9  0085               	movwf	5
 23867  09CA  0A81               	incf	1,f
 23868  09CB  0800               	movf	0,w
 23869  09CC  0022               	movlb	2	; select bank2
 23870  09CD  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23871  09CE  01A1               	clrf	(??_vfpfcnvrt^(0+256)+1)
 23872  09CF  01A2               	clrf	(??_vfpfcnvrt^(0+256)+2)
 23873  09D0  01A3               	clrf	(??_vfpfcnvrt^(0+256)+3)
 23874  09D1  01A4               	clrf	(??_vfpfcnvrt^(0+256)+4)
 23875  09D2  01A5               	clrf	(??_vfpfcnvrt^(0+256)+5)
 23876  09D3  01A6               	clrf	(??_vfpfcnvrt^(0+256)+6)
 23877  09D4  01A7               	clrf	(??_vfpfcnvrt^(0+256)+7)
 23878  09D5  0827               	movf	(??_vfpfcnvrt^(0+256)+7),w
 23879  09D6  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 23880  09D7  0826               	movf	(??_vfpfcnvrt^(0+256)+6),w
 23881  09D8  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 23882  09D9  0825               	movf	(??_vfpfcnvrt^(0+256)+5),w
 23883  09DA  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 23884  09DB  0824               	movf	(??_vfpfcnvrt^(0+256)+4),w
 23885  09DC  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 23886  09DD  0823               	movf	(??_vfpfcnvrt^(0+256)+3),w
 23887  09DE  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 23888  09DF  0822               	movf	(??_vfpfcnvrt^(0+256)+2),w
 23889  09E0  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 23890  09E1  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 23891  09E2  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 23892  09E3  0820               	movf	??_vfpfcnvrt^(0+256),w
 23893  09E4  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 23894                           
 23895                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
 23896  09E5  0021               	movlb	1	; select bank1
 23897  09E6  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23898  09E7  0020               	movlb	0	; select bank0
 23899  09E8  00B1               	movwf	xtoa@fp+1
 23900  09E9  0021               	movlb	1	; select bank1
 23901  09EA  086C               	movf	vfpfcnvrt@fp^(0+128),w
 23902  09EB  0020               	movlb	0	; select bank0
 23903  09EC  00B0               	movwf	xtoa@fp
 23904  09ED  0022               	movlb	2	; select bank2
 23905  09EE  0846               	movf	vfpfcnvrt@llu^(0+256),w
 23906  09EF  0020               	movlb	0	; select bank0
 23907  09F0  00B2               	movwf	xtoa@d
 23908  09F1  0022               	movlb	2	; select bank2
 23909  09F2  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 23910  09F3  0020               	movlb	0	; select bank0
 23911  09F4  00B3               	movwf	xtoa@d+1
 23912  09F5  0022               	movlb	2	; select bank2
 23913  09F6  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 23914  09F7  0020               	movlb	0	; select bank0
 23915  09F8  00B4               	movwf	xtoa@d+2
 23916  09F9  0022               	movlb	2	; select bank2
 23917  09FA  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 23918  09FB  0020               	movlb	0	; select bank0
 23919  09FC  00B5               	movwf	xtoa@d+3
 23920  09FD  0022               	movlb	2	; select bank2
 23921  09FE  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 23922  09FF  0020               	movlb	0	; select bank0
 23923  0A00  00B6               	movwf	xtoa@d+4
 23924  0A01  0022               	movlb	2	; select bank2
 23925  0A02  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 23926  0A03  0020               	movlb	0	; select bank0
 23927  0A04  00B7               	movwf	xtoa@d+5
 23928  0A05  0022               	movlb	2	; select bank2
 23929  0A06  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 23930  0A07  0020               	movlb	0	; select bank0
 23931  0A08  00B8               	movwf	xtoa@d+6
 23932  0A09  0022               	movlb	2	; select bank2
 23933  0A0A  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 23934  0A0B  0020               	movlb	0	; select bank0
 23935  0A0C  00B9               	movwf	xtoa@d+7
 23936  0A0D  3078               	movlw	120
 23937  0A0E  0022               	movlb	2	; select bank2
 23938  0A0F  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23939  0A10  0820               	movf	??_vfpfcnvrt^(0+256),w
 23940  0A11  0020               	movlb	0	; select bank0
 23941  0A12  00BA               	movwf	xtoa@x
 23942  0A13  319B  234B         	fcall	_xtoa
 23943  0A15  0020               	movlb	0	; select bank0
 23944  0A16  0831               	movf	?_xtoa+1,w
 23945  0A17  0021               	movlb	1	; select bank1
 23946  0A18  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 23947  0A19  0020               	movlb	0	; select bank0
 23948  0A1A  0830               	movf	?_xtoa,w
 23949  0A1B  0021               	movlb	1	; select bank1
 23950  0A1C  00EC               	movwf	?_vfpfcnvrt^(0+128)
 23951  0A1D  0008               	return
 23952  0A1E                     l8193:	
 23953                           
 23954                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 23955  0A1E  0021               	movlb	1	; select bank1
 23956  0A1F  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23957  0A20  0086               	movwf	6
 23958  0A21  3001               	movlw	1	; select bank2/3
 23959  0A22  0087               	movwf	7
 23960  0A23  3F40               	moviw [0]fsr1
 23961  0A24  0022               	movlb	2	; select bank2
 23962  0A25  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23963  0A26  3F41               	moviw [1]fsr1
 23964  0A27  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 23965  0A28  0820               	movf	??_vfpfcnvrt^(0+256),w
 23966  0A29  0084               	movwf	4
 23967  0A2A  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 23968  0A2B  0085               	movwf	5
 23969  0A2C  0012               	moviw fsr0++
 23970  0A2D  3A73               	xorlw	115
 23971  0A2E  1D03               	btfss	3,2
 23972  0A2F  2A61               	goto	l8203
 23973                           
 23974                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 23975  0A30  0021               	movlb	1	; select bank1
 23976  0A31  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23977  0A32  0086               	movwf	6
 23978  0A33  3001               	movlw	1	; select bank2/3
 23979  0A34  0087               	movwf	7
 23980  0A35  3001               	movlw	1
 23981  0A36  0781               	addwf	1,f
 23982  0A37  3141               	addfsr 1,1
 23983  0A38  1803               	skipnc
 23984  0A39  0A81               	incf	1,f
 23985                           
 23986                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 23987  0A3A  086F               	movf	vfpfcnvrt@ap^(0+128),w
 23988  0A3B  0086               	movwf	6
 23989  0A3C  3001               	movlw	1	; select bank2/3
 23990  0A3D  0087               	movwf	7
 23991  0A3E  3F40               	moviw [0]fsr1
 23992  0A3F  0084               	movwf	4
 23993  0A40  3001               	movlw	1	; select bank2/3
 23994  0A41  0085               	movwf	5
 23995  0A42  0A81               	incf	1,f
 23996  0A43  0800               	movf	0,w
 23997  0A44  0022               	movlb	2	; select bank2
 23998  0A45  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23999  0A46  0820               	movf	??_vfpfcnvrt^(0+256),w
 24000  0A47  00AC               	movwf	vfpfcnvrt@cp^(0+256)
 24001                           
 24002                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 24003  0A48  0021               	movlb	1	; select bank1
 24004  0A49  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 24005  0A4A  0020               	movlb	0	; select bank0
 24006  0A4B  00A1               	movwf	stoa@fp+1
 24007  0A4C  0021               	movlb	1	; select bank1
 24008  0A4D  086C               	movf	vfpfcnvrt@fp^(0+128),w
 24009  0A4E  0020               	movlb	0	; select bank0
 24010  0A4F  00A0               	movwf	stoa@fp
 24011  0A50  0022               	movlb	2	; select bank2
 24012  0A51  082C               	movf	vfpfcnvrt@cp^(0+256),w
 24013  0A52  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24014  0A53  0820               	movf	??_vfpfcnvrt^(0+256),w
 24015  0A54  0020               	movlb	0	; select bank0
 24016  0A55  00A2               	movwf	stoa@s
 24017  0A56  31AB  23DF         	fcall	_stoa
 24018  0A58  0020               	movlb	0	; select bank0
 24019  0A59  0821               	movf	?_stoa+1,w
 24020  0A5A  0021               	movlb	1	; select bank1
 24021  0A5B  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 24022  0A5C  0020               	movlb	0	; select bank0
 24023  0A5D  0820               	movf	?_stoa,w
 24024  0A5E  0021               	movlb	1	; select bank1
 24025  0A5F  00EC               	movwf	?_vfpfcnvrt^(0+128)
 24026  0A60  0008               	return
 24027  0A61                     l8203:	
 24028                           
 24029                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
 24030  0A61  0021               	movlb	1	; select bank1
 24031  0A62  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24032  0A63  0086               	movwf	6
 24033  0A64  3001               	movlw	1	; select bank2/3
 24034  0A65  0087               	movwf	7
 24035  0A66  3F40               	moviw [0]fsr1
 24036  0A67  00F1               	movwf	strncmp@_l
 24037  0A68  3F41               	moviw [1]fsr1
 24038  0A69  00F2               	movwf	strncmp@_l+1
 24039  0A6A  305A               	movlw	low (STR_116| (0+32768))
 24040  0A6B  00F3               	movwf	strncmp@_r
 24041  0A6C  30BB               	movlw	high (STR_116| (0+32768))
 24042  0A6D  00F4               	movwf	strncmp@_r+1
 24043  0A6E  3003               	movlw	3
 24044  0A6F  00F5               	movwf	strncmp@n
 24045  0A70  3000               	movlw	0
 24046  0A71  00F6               	movwf	strncmp@n+1
 24047  0A72  31B3  23E5  3188   	fcall	_strncmp
 24048  0A75  0871               	movf	?_strncmp,w
 24049  0A76  0472               	iorwf	?_strncmp+1,w
 24050  0A77  1D03               	btfss	3,2
 24051  0A78  2ACA               	goto	l8213
 24052                           
 24053                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
 24054  0A79  0021               	movlb	1	; select bank1
 24055  0A7A  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24056  0A7B  0086               	movwf	6
 24057  0A7C  3001               	movlw	1	; select bank2/3
 24058  0A7D  0087               	movwf	7
 24059  0A7E  3003               	movlw	3
 24060  0A7F  0781               	addwf	1,f
 24061  0A80  3141               	addfsr 1,1
 24062  0A81  1803               	skipnc
 24063  0A82  0A81               	incf	1,f
 24064                           
 24065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 24066  0A83  086F               	movf	vfpfcnvrt@ap^(0+128),w
 24067  0A84  0086               	movwf	6
 24068  0A85  3001               	movlw	1	; select bank2/3
 24069  0A86  0087               	movwf	7
 24070  0A87  0801               	movf	1,w
 24071  0A88  0084               	movwf	4
 24072  0A89  3001               	movlw	1	; select bank2/3
 24073  0A8A  0085               	movwf	5
 24074  0A8B  3002               	movlw	2
 24075  0A8C  0781               	addwf	1,f
 24076  0A8D  0800               	movf	0,w
 24077  0A8E  0022               	movlb	2	; select bank2
 24078  0A8F  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 24079  0A90  01C7               	clrf	(vfpfcnvrt@llu+1)^(0+256)
 24080  0A91  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 24081  0A92  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 24082  0A93  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 24083  0A94  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 24084  0A95  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 24085  0A96  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 24086                           
 24087                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
 24088  0A97  0021               	movlb	1	; select bank1
 24089  0A98  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 24090  0A99  0020               	movlb	0	; select bank0
 24091  0A9A  00B1               	movwf	utoa@fp+1
 24092  0A9B  0021               	movlb	1	; select bank1
 24093  0A9C  086C               	movf	vfpfcnvrt@fp^(0+128),w
 24094  0A9D  0020               	movlb	0	; select bank0
 24095  0A9E  00B0               	movwf	utoa@fp
 24096  0A9F  0022               	movlb	2	; select bank2
 24097  0AA0  0846               	movf	vfpfcnvrt@llu^(0+256),w
 24098  0AA1  0020               	movlb	0	; select bank0
 24099  0AA2  00B2               	movwf	utoa@d
 24100  0AA3  0022               	movlb	2	; select bank2
 24101  0AA4  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 24102  0AA5  0020               	movlb	0	; select bank0
 24103  0AA6  00B3               	movwf	utoa@d+1
 24104  0AA7  0022               	movlb	2	; select bank2
 24105  0AA8  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 24106  0AA9  0020               	movlb	0	; select bank0
 24107  0AAA  00B4               	movwf	utoa@d+2
 24108  0AAB  0022               	movlb	2	; select bank2
 24109  0AAC  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 24110  0AAD  0020               	movlb	0	; select bank0
 24111  0AAE  00B5               	movwf	utoa@d+3
 24112  0AAF  0022               	movlb	2	; select bank2
 24113  0AB0  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 24114  0AB1  0020               	movlb	0	; select bank0
 24115  0AB2  00B6               	movwf	utoa@d+4
 24116  0AB3  0022               	movlb	2	; select bank2
 24117  0AB4  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 24118  0AB5  0020               	movlb	0	; select bank0
 24119  0AB6  00B7               	movwf	utoa@d+5
 24120  0AB7  0022               	movlb	2	; select bank2
 24121  0AB8  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 24122  0AB9  0020               	movlb	0	; select bank0
 24123  0ABA  00B8               	movwf	utoa@d+6
 24124  0ABB  0022               	movlb	2	; select bank2
 24125  0ABC  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 24126  0ABD  0020               	movlb	0	; select bank0
 24127  0ABE  00B9               	movwf	utoa@d+7
 24128  0ABF  31A1  2130         	fcall	_utoa
 24129  0AC1  0020               	movlb	0	; select bank0
 24130  0AC2  0831               	movf	?_utoa+1,w
 24131  0AC3  0021               	movlb	1	; select bank1
 24132  0AC4  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 24133  0AC5  0020               	movlb	0	; select bank0
 24134  0AC6  0830               	movf	?_utoa,w
 24135  0AC7  0021               	movlb	1	; select bank1
 24136  0AC8  00EC               	movwf	?_vfpfcnvrt^(0+128)
 24137  0AC9  0008               	return
 24138  0ACA                     l8213:	
 24139                           
 24140                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
 24141  0ACA  0021               	movlb	1	; select bank1
 24142  0ACB  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24143  0ACC  0086               	movwf	6
 24144  0ACD  3001               	movlw	1	; select bank2/3
 24145  0ACE  0087               	movwf	7
 24146  0ACF  3F40               	moviw [0]fsr1
 24147  0AD0  00F1               	movwf	strncmp@_l
 24148  0AD1  3F41               	moviw [1]fsr1
 24149  0AD2  00F2               	movwf	strncmp@_l+1
 24150  0AD3  305B               	movlw	low ((STR_116+1)| (0+32768))
 24151  0AD4  00F3               	movwf	strncmp@_r
 24152  0AD5  30BB               	movlw	high ((STR_116+1)| (0+32768))
 24153  0AD6  00F4               	movwf	strncmp@_r+1
 24154  0AD7  3002               	movlw	2
 24155  0AD8  00F5               	movwf	strncmp@n
 24156  0AD9  3000               	movlw	0
 24157  0ADA  00F6               	movwf	strncmp@n+1
 24158  0ADB  31B3  23E5  3188   	fcall	_strncmp
 24159  0ADE  0871               	movf	?_strncmp,w
 24160  0ADF  0472               	iorwf	?_strncmp+1,w
 24161  0AE0  1D03               	btfss	3,2
 24162  0AE1  2B34               	goto	l8223
 24163                           
 24164                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
 24165  0AE2  0021               	movlb	1	; select bank1
 24166  0AE3  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24167  0AE4  0086               	movwf	6
 24168  0AE5  3001               	movlw	1	; select bank2/3
 24169  0AE6  0087               	movwf	7
 24170  0AE7  3002               	movlw	2
 24171  0AE8  0781               	addwf	1,f
 24172  0AE9  3141               	addfsr 1,1
 24173  0AEA  1803               	skipnc
 24174  0AEB  0A81               	incf	1,f
 24175                           
 24176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 24177  0AEC  086F               	movf	vfpfcnvrt@ap^(0+128),w
 24178  0AED  0086               	movwf	6
 24179  0AEE  3001               	movlw	1	; select bank2/3
 24180  0AEF  0087               	movwf	7
 24181  0AF0  0801               	movf	1,w
 24182  0AF1  0084               	movwf	4
 24183  0AF2  3001               	movlw	1	; select bank2/3
 24184  0AF3  0085               	movwf	5
 24185  0AF4  3002               	movlw	2
 24186  0AF5  0781               	addwf	1,f
 24187  0AF6  3F00               	moviw [0]fsr0
 24188  0AF7  0022               	movlb	2	; select bank2
 24189  0AF8  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 24190  0AF9  3F01               	moviw [1]fsr0
 24191  0AFA  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 24192  0AFB  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 24193  0AFC  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 24194  0AFD  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 24195  0AFE  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 24196  0AFF  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 24197  0B00  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 24198                           
 24199                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1177:      
      +                                 return utoa(fp, llu);
 24200  0B01  0021               	movlb	1	; select bank1
 24201  0B02  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 24202  0B03  0020               	movlb	0	; select bank0
 24203  0B04  00B1               	movwf	utoa@fp+1
 24204  0B05  0021               	movlb	1	; select bank1
 24205  0B06  086C               	movf	vfpfcnvrt@fp^(0+128),w
 24206  0B07  0020               	movlb	0	; select bank0
 24207  0B08  00B0               	movwf	utoa@fp
 24208  0B09  0022               	movlb	2	; select bank2
 24209  0B0A  0846               	movf	vfpfcnvrt@llu^(0+256),w
 24210  0B0B  0020               	movlb	0	; select bank0
 24211  0B0C  00B2               	movwf	utoa@d
 24212  0B0D  0022               	movlb	2	; select bank2
 24213  0B0E  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 24214  0B0F  0020               	movlb	0	; select bank0
 24215  0B10  00B3               	movwf	utoa@d+1
 24216  0B11  0022               	movlb	2	; select bank2
 24217  0B12  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 24218  0B13  0020               	movlb	0	; select bank0
 24219  0B14  00B4               	movwf	utoa@d+2
 24220  0B15  0022               	movlb	2	; select bank2
 24221  0B16  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 24222  0B17  0020               	movlb	0	; select bank0
 24223  0B18  00B5               	movwf	utoa@d+3
 24224  0B19  0022               	movlb	2	; select bank2
 24225  0B1A  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 24226  0B1B  0020               	movlb	0	; select bank0
 24227  0B1C  00B6               	movwf	utoa@d+4
 24228  0B1D  0022               	movlb	2	; select bank2
 24229  0B1E  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 24230  0B1F  0020               	movlb	0	; select bank0
 24231  0B20  00B7               	movwf	utoa@d+5
 24232  0B21  0022               	movlb	2	; select bank2
 24233  0B22  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 24234  0B23  0020               	movlb	0	; select bank0
 24235  0B24  00B8               	movwf	utoa@d+6
 24236  0B25  0022               	movlb	2	; select bank2
 24237  0B26  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 24238  0B27  0020               	movlb	0	; select bank0
 24239  0B28  00B9               	movwf	utoa@d+7
 24240  0B29  31A1  2130         	fcall	_utoa
 24241  0B2B  0020               	movlb	0	; select bank0
 24242  0B2C  0831               	movf	?_utoa+1,w
 24243  0B2D  0021               	movlb	1	; select bank1
 24244  0B2E  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 24245  0B2F  0020               	movlb	0	; select bank0
 24246  0B30  0830               	movf	?_utoa,w
 24247  0B31  0021               	movlb	1	; select bank1
 24248  0B32  00EC               	movwf	?_vfpfcnvrt^(0+128)
 24249  0B33  0008               	return
 24250  0B34                     l8223:	
 24251                           
 24252                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 24253  0B34  0021               	movlb	1	; select bank1
 24254  0B35  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24255  0B36  0086               	movwf	6
 24256  0B37  3001               	movlw	1	; select bank2/3
 24257  0B38  0087               	movwf	7
 24258  0B39  3F40               	moviw [0]fsr1
 24259  0B3A  0022               	movlb	2	; select bank2
 24260  0B3B  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24261  0B3C  3F41               	moviw [1]fsr1
 24262  0B3D  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 24263  0B3E  0820               	movf	??_vfpfcnvrt^(0+256),w
 24264  0B3F  0084               	movwf	4
 24265  0B40  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 24266  0B41  0085               	movwf	5
 24267  0B42  0012               	moviw fsr0++
 24268  0B43  3A75               	xorlw	117
 24269  0B44  1D03               	btfss	3,2
 24270  0B45  2B98               	goto	l8233
 24271                           
 24272                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 24273  0B46  0021               	movlb	1	; select bank1
 24274  0B47  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24275  0B48  0086               	movwf	6
 24276  0B49  3001               	movlw	1	; select bank2/3
 24277  0B4A  0087               	movwf	7
 24278  0B4B  3001               	movlw	1
 24279  0B4C  0781               	addwf	1,f
 24280  0B4D  3141               	addfsr 1,1
 24281  0B4E  1803               	skipnc
 24282  0B4F  0A81               	incf	1,f
 24283                           
 24284                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 24285  0B50  086F               	movf	vfpfcnvrt@ap^(0+128),w
 24286  0B51  0086               	movwf	6
 24287  0B52  3001               	movlw	1	; select bank2/3
 24288  0B53  0087               	movwf	7
 24289  0B54  0801               	movf	1,w
 24290  0B55  0084               	movwf	4
 24291  0B56  3001               	movlw	1	; select bank2/3
 24292  0B57  0085               	movwf	5
 24293  0B58  3002               	movlw	2
 24294  0B59  0781               	addwf	1,f
 24295  0B5A  3F00               	moviw [0]fsr0
 24296  0B5B  0022               	movlb	2	; select bank2
 24297  0B5C  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 24298  0B5D  3F01               	moviw [1]fsr0
 24299  0B5E  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 24300  0B5F  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 24301  0B60  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 24302  0B61  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 24303  0B62  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 24304  0B63  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 24305  0B64  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 24306                           
 24307                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 24308  0B65  0021               	movlb	1	; select bank1
 24309  0B66  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 24310  0B67  0020               	movlb	0	; select bank0
 24311  0B68  00B1               	movwf	utoa@fp+1
 24312  0B69  0021               	movlb	1	; select bank1
 24313  0B6A  086C               	movf	vfpfcnvrt@fp^(0+128),w
 24314  0B6B  0020               	movlb	0	; select bank0
 24315  0B6C  00B0               	movwf	utoa@fp
 24316  0B6D  0022               	movlb	2	; select bank2
 24317  0B6E  0846               	movf	vfpfcnvrt@llu^(0+256),w
 24318  0B6F  0020               	movlb	0	; select bank0
 24319  0B70  00B2               	movwf	utoa@d
 24320  0B71  0022               	movlb	2	; select bank2
 24321  0B72  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 24322  0B73  0020               	movlb	0	; select bank0
 24323  0B74  00B3               	movwf	utoa@d+1
 24324  0B75  0022               	movlb	2	; select bank2
 24325  0B76  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 24326  0B77  0020               	movlb	0	; select bank0
 24327  0B78  00B4               	movwf	utoa@d+2
 24328  0B79  0022               	movlb	2	; select bank2
 24329  0B7A  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 24330  0B7B  0020               	movlb	0	; select bank0
 24331  0B7C  00B5               	movwf	utoa@d+3
 24332  0B7D  0022               	movlb	2	; select bank2
 24333  0B7E  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 24334  0B7F  0020               	movlb	0	; select bank0
 24335  0B80  00B6               	movwf	utoa@d+4
 24336  0B81  0022               	movlb	2	; select bank2
 24337  0B82  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 24338  0B83  0020               	movlb	0	; select bank0
 24339  0B84  00B7               	movwf	utoa@d+5
 24340  0B85  0022               	movlb	2	; select bank2
 24341  0B86  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 24342  0B87  0020               	movlb	0	; select bank0
 24343  0B88  00B8               	movwf	utoa@d+6
 24344  0B89  0022               	movlb	2	; select bank2
 24345  0B8A  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 24346  0B8B  0020               	movlb	0	; select bank0
 24347  0B8C  00B9               	movwf	utoa@d+7
 24348  0B8D  31A1  2130         	fcall	_utoa
 24349  0B8F  0020               	movlb	0	; select bank0
 24350  0B90  0831               	movf	?_utoa+1,w
 24351  0B91  0021               	movlb	1	; select bank1
 24352  0B92  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 24353  0B93  0020               	movlb	0	; select bank0
 24354  0B94  0830               	movf	?_utoa,w
 24355  0B95  0021               	movlb	1	; select bank1
 24356  0B96  00EC               	movwf	?_vfpfcnvrt^(0+128)
 24357  0B97  0008               	return
 24358  0B98                     l8233:	
 24359                           
 24360                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1192:      
      +                             if (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 24361  0B98  0021               	movlb	1	; select bank1
 24362  0B99  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24363  0B9A  0086               	movwf	6
 24364  0B9B  3001               	movlw	1	; select bank2/3
 24365  0B9C  0087               	movwf	7
 24366  0B9D  3F40               	moviw [0]fsr1
 24367  0B9E  00F1               	movwf	strncmp@_l
 24368  0B9F  3F41               	moviw [1]fsr1
 24369  0BA0  00F2               	movwf	strncmp@_l+1
 24370  0BA1  3083               	movlw	low (STR_126| (0+32768))
 24371  0BA2  00F3               	movwf	strncmp@_r
 24372  0BA3  30BB               	movlw	high (STR_126| (0+32768))
 24373  0BA4  00F4               	movwf	strncmp@_r+1
 24374  0BA5  3002               	movlw	2
 24375  0BA6  00F5               	movwf	strncmp@n
 24376  0BA7  3000               	movlw	0
 24377  0BA8  00F6               	movwf	strncmp@n+1
 24378  0BA9  31B3  23E5  3188   	fcall	_strncmp
 24379  0BAC  0871               	movf	?_strncmp,w
 24380  0BAD  0472               	iorwf	?_strncmp+1,w
 24381  0BAE  1D03               	btfss	3,2
 24382  0BAF  2C1C               	goto	l8243
 24383                           
 24384                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1194:      
      +                                 *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
 24385  0BB0  0021               	movlb	1	; select bank1
 24386  0BB1  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24387  0BB2  0086               	movwf	6
 24388  0BB3  3001               	movlw	1	; select bank2/3
 24389  0BB4  0087               	movwf	7
 24390  0BB5  3002               	movlw	2
 24391  0BB6  0781               	addwf	1,f
 24392  0BB7  3141               	addfsr 1,1
 24393  0BB8  1803               	skipnc
 24394  0BB9  0A81               	incf	1,f
 24395                           
 24396                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1195:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 24397  0BBA  086F               	movf	vfpfcnvrt@ap^(0+128),w
 24398  0BBB  0086               	movwf	6
 24399  0BBC  3001               	movlw	1	; select bank2/3
 24400  0BBD  0087               	movwf	7
 24401  0BBE  0801               	movf	1,w
 24402  0BBF  0084               	movwf	4
 24403  0BC0  3001               	movlw	1	; select bank2/3
 24404  0BC1  0085               	movwf	5
 24405  0BC2  3004               	movlw	4
 24406  0BC3  0781               	addwf	1,f
 24407  0BC4  3F00               	moviw [0]fsr0
 24408  0BC5  0022               	movlb	2	; select bank2
 24409  0BC6  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24410  0BC7  3F01               	moviw [1]fsr0
 24411  0BC8  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 24412  0BC9  3F02               	moviw [2]fsr0
 24413  0BCA  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 24414  0BCB  3F03               	moviw [3]fsr0
 24415  0BCC  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 24416  0BCD  0820               	movf	??_vfpfcnvrt^(0+256),w
 24417  0BCE  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 24418  0BCF  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 24419  0BD0  00A5               	movwf	((??_vfpfcnvrt+4)^(0+256)+1)
 24420  0BD1  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 24421  0BD2  00A6               	movwf	((??_vfpfcnvrt+4)^(0+256)+2)
 24422  0BD3  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 24423  0BD4  00A7               	movwf	((??_vfpfcnvrt+4)^(0+256)+3)
 24424  0BD5  01A8               	clrf	((??_vfpfcnvrt+4)^(0+256)+4)
 24425  0BD6  01A9               	clrf	((??_vfpfcnvrt+4)^(0+256)+5)
 24426  0BD7  01AA               	clrf	((??_vfpfcnvrt+4)^(0+256)+6)
 24427  0BD8  01AB               	clrf	((??_vfpfcnvrt+4)^(0+256)+7)
 24428  0BD9  082B               	movf	((??_vfpfcnvrt+4)^(0+256)+7),w
 24429  0BDA  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 24430  0BDB  082A               	movf	((??_vfpfcnvrt+4)^(0+256)+6),w
 24431  0BDC  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 24432  0BDD  0829               	movf	((??_vfpfcnvrt+4)^(0+256)+5),w
 24433  0BDE  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 24434  0BDF  0828               	movf	((??_vfpfcnvrt+4)^(0+256)+4),w
 24435  0BE0  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 24436  0BE1  0827               	movf	((??_vfpfcnvrt+4)^(0+256)+3),w
 24437  0BE2  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 24438  0BE3  0826               	movf	((??_vfpfcnvrt+4)^(0+256)+2),w
 24439  0BE4  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 24440  0BE5  0825               	movf	((??_vfpfcnvrt+4)^(0+256)+1),w
 24441  0BE6  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 24442  0BE7  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 24443  0BE8  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 24444                           
 24445                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1197:      
      +                                 return utoa(fp, llu);
 24446  0BE9  0021               	movlb	1	; select bank1
 24447  0BEA  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 24448  0BEB  0020               	movlb	0	; select bank0
 24449  0BEC  00B1               	movwf	utoa@fp+1
 24450  0BED  0021               	movlb	1	; select bank1
 24451  0BEE  086C               	movf	vfpfcnvrt@fp^(0+128),w
 24452  0BEF  0020               	movlb	0	; select bank0
 24453  0BF0  00B0               	movwf	utoa@fp
 24454  0BF1  0022               	movlb	2	; select bank2
 24455  0BF2  0846               	movf	vfpfcnvrt@llu^(0+256),w
 24456  0BF3  0020               	movlb	0	; select bank0
 24457  0BF4  00B2               	movwf	utoa@d
 24458  0BF5  0022               	movlb	2	; select bank2
 24459  0BF6  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 24460  0BF7  0020               	movlb	0	; select bank0
 24461  0BF8  00B3               	movwf	utoa@d+1
 24462  0BF9  0022               	movlb	2	; select bank2
 24463  0BFA  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 24464  0BFB  0020               	movlb	0	; select bank0
 24465  0BFC  00B4               	movwf	utoa@d+2
 24466  0BFD  0022               	movlb	2	; select bank2
 24467  0BFE  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 24468  0BFF  0020               	movlb	0	; select bank0
 24469  0C00  00B5               	movwf	utoa@d+3
 24470  0C01  0022               	movlb	2	; select bank2
 24471  0C02  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 24472  0C03  0020               	movlb	0	; select bank0
 24473  0C04  00B6               	movwf	utoa@d+4
 24474  0C05  0022               	movlb	2	; select bank2
 24475  0C06  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 24476  0C07  0020               	movlb	0	; select bank0
 24477  0C08  00B7               	movwf	utoa@d+5
 24478  0C09  0022               	movlb	2	; select bank2
 24479  0C0A  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 24480  0C0B  0020               	movlb	0	; select bank0
 24481  0C0C  00B8               	movwf	utoa@d+6
 24482  0C0D  0022               	movlb	2	; select bank2
 24483  0C0E  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 24484  0C0F  0020               	movlb	0	; select bank0
 24485  0C10  00B9               	movwf	utoa@d+7
 24486  0C11  31A1  2130         	fcall	_utoa
 24487  0C13  0020               	movlb	0	; select bank0
 24488  0C14  0831               	movf	?_utoa+1,w
 24489  0C15  0021               	movlb	1	; select bank1
 24490  0C16  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 24491  0C17  0020               	movlb	0	; select bank0
 24492  0C18  0830               	movf	?_utoa,w
 24493  0C19  0021               	movlb	1	; select bank1
 24494  0C1A  00EC               	movwf	?_vfpfcnvrt^(0+128)
 24495  0C1B  0008               	return
 24496  0C1C                     l8243:	
 24497                           
 24498                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
 24499  0C1C  0021               	movlb	1	; select bank1
 24500  0C1D  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24501  0C1E  0086               	movwf	6
 24502  0C1F  3001               	movlw	1	; select bank2/3
 24503  0C20  0087               	movwf	7
 24504  0C21  3F40               	moviw [0]fsr1
 24505  0C22  00F1               	movwf	strncmp@_l
 24506  0C23  3F41               	moviw [1]fsr1
 24507  0C24  00F2               	movwf	strncmp@_l+1
 24508  0C25  3086               	movlw	low (STR_131| (0+32768))
 24509  0C26  00F3               	movwf	strncmp@_r
 24510  0C27  30BB               	movlw	high (STR_131| (0+32768))
 24511  0C28  00F4               	movwf	strncmp@_r+1
 24512  0C29  3002               	movlw	2
 24513  0C2A  00F5               	movwf	strncmp@n
 24514  0C2B  3000               	movlw	0
 24515  0C2C  00F6               	movwf	strncmp@n+1
 24516  0C2D  31B3  23E5  3188   	fcall	_strncmp
 24517  0C30  0871               	movf	?_strncmp,w
 24518  0C31  0472               	iorwf	?_strncmp+1,w
 24519  0C32  1D03               	btfss	3,2
 24520  0C33  2C86               	goto	l8253
 24521                           
 24522                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
 24523  0C34  0021               	movlb	1	; select bank1
 24524  0C35  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24525  0C36  0086               	movwf	6
 24526  0C37  3001               	movlw	1	; select bank2/3
 24527  0C38  0087               	movwf	7
 24528  0C39  3002               	movlw	2
 24529  0C3A  0781               	addwf	1,f
 24530  0C3B  3141               	addfsr 1,1
 24531  0C3C  1803               	skipnc
 24532  0C3D  0A81               	incf	1,f
 24533                           
 24534                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 24535  0C3E  086F               	movf	vfpfcnvrt@ap^(0+128),w
 24536  0C3F  0086               	movwf	6
 24537  0C40  3001               	movlw	1	; select bank2/3
 24538  0C41  0087               	movwf	7
 24539  0C42  0801               	movf	1,w
 24540  0C43  0084               	movwf	4
 24541  0C44  3001               	movlw	1	; select bank2/3
 24542  0C45  0085               	movwf	5
 24543  0C46  3002               	movlw	2
 24544  0C47  0781               	addwf	1,f
 24545  0C48  3F00               	moviw [0]fsr0
 24546  0C49  0022               	movlb	2	; select bank2
 24547  0C4A  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 24548  0C4B  3F01               	moviw [1]fsr0
 24549  0C4C  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 24550  0C4D  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 24551  0C4E  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 24552  0C4F  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 24553  0C50  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 24554  0C51  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 24555  0C52  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 24556                           
 24557                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1241:      
      +                                 return utoa(fp, llu);
 24558  0C53  0021               	movlb	1	; select bank1
 24559  0C54  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 24560  0C55  0020               	movlb	0	; select bank0
 24561  0C56  00B1               	movwf	utoa@fp+1
 24562  0C57  0021               	movlb	1	; select bank1
 24563  0C58  086C               	movf	vfpfcnvrt@fp^(0+128),w
 24564  0C59  0020               	movlb	0	; select bank0
 24565  0C5A  00B0               	movwf	utoa@fp
 24566  0C5B  0022               	movlb	2	; select bank2
 24567  0C5C  0846               	movf	vfpfcnvrt@llu^(0+256),w
 24568  0C5D  0020               	movlb	0	; select bank0
 24569  0C5E  00B2               	movwf	utoa@d
 24570  0C5F  0022               	movlb	2	; select bank2
 24571  0C60  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 24572  0C61  0020               	movlb	0	; select bank0
 24573  0C62  00B3               	movwf	utoa@d+1
 24574  0C63  0022               	movlb	2	; select bank2
 24575  0C64  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 24576  0C65  0020               	movlb	0	; select bank0
 24577  0C66  00B4               	movwf	utoa@d+2
 24578  0C67  0022               	movlb	2	; select bank2
 24579  0C68  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 24580  0C69  0020               	movlb	0	; select bank0
 24581  0C6A  00B5               	movwf	utoa@d+3
 24582  0C6B  0022               	movlb	2	; select bank2
 24583  0C6C  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 24584  0C6D  0020               	movlb	0	; select bank0
 24585  0C6E  00B6               	movwf	utoa@d+4
 24586  0C6F  0022               	movlb	2	; select bank2
 24587  0C70  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 24588  0C71  0020               	movlb	0	; select bank0
 24589  0C72  00B7               	movwf	utoa@d+5
 24590  0C73  0022               	movlb	2	; select bank2
 24591  0C74  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 24592  0C75  0020               	movlb	0	; select bank0
 24593  0C76  00B8               	movwf	utoa@d+6
 24594  0C77  0022               	movlb	2	; select bank2
 24595  0C78  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 24596  0C79  0020               	movlb	0	; select bank0
 24597  0C7A  00B9               	movwf	utoa@d+7
 24598  0C7B  31A1  2130         	fcall	_utoa
 24599  0C7D  0020               	movlb	0	; select bank0
 24600  0C7E  0831               	movf	?_utoa+1,w
 24601  0C7F  0021               	movlb	1	; select bank1
 24602  0C80  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 24603  0C81  0020               	movlb	0	; select bank0
 24604  0C82  0830               	movf	?_utoa,w
 24605  0C83  0021               	movlb	1	; select bank1
 24606  0C84  00EC               	movwf	?_vfpfcnvrt^(0+128)
 24607  0C85  0008               	return
 24608  0C86                     l8253:	
 24609                           
 24610                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
 24611  0C86  0021               	movlb	1	; select bank1
 24612  0C87  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24613  0C88  0086               	movwf	6
 24614  0C89  3001               	movlw	1	; select bank2/3
 24615  0C8A  0087               	movwf	7
 24616  0C8B  3F40               	moviw [0]fsr1
 24617  0C8C  00F1               	movwf	strncmp@_l
 24618  0C8D  3F41               	moviw [1]fsr1
 24619  0C8E  00F2               	movwf	strncmp@_l+1
 24620  0C8F  305E               	movlw	low (STR_136| (0+32768))
 24621  0C90  00F3               	movwf	strncmp@_r
 24622  0C91  30BB               	movlw	high (STR_136| (0+32768))
 24623  0C92  00F4               	movwf	strncmp@_r+1
 24624  0C93  3003               	movlw	3
 24625  0C94  00F5               	movwf	strncmp@n
 24626  0C95  3000               	movlw	0
 24627  0C96  00F6               	movwf	strncmp@n+1
 24628  0C97  31B3  23E5  3188   	fcall	_strncmp
 24629  0C9A  0871               	movf	?_strncmp,w
 24630  0C9B  0472               	iorwf	?_strncmp+1,w
 24631  0C9C  1903               	btfsc	3,2
 24632  0C9D  2CB6               	goto	l8257
 24633  0C9E  0021               	movlb	1	; select bank1
 24634  0C9F  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24635  0CA0  0086               	movwf	6
 24636  0CA1  3001               	movlw	1	; select bank2/3
 24637  0CA2  0087               	movwf	7
 24638  0CA3  3F40               	moviw [0]fsr1
 24639  0CA4  00F1               	movwf	strncmp@_l
 24640  0CA5  3F41               	moviw [1]fsr1
 24641  0CA6  00F2               	movwf	strncmp@_l+1
 24642  0CA7  303E               	movlw	low (STR_140| (0+32768))
 24643  0CA8  00F3               	movwf	strncmp@_r
 24644  0CA9  30BB               	movlw	high (STR_140| (0+32768))
 24645  0CAA  00F4               	movwf	strncmp@_r+1
 24646  0CAB  3003               	movlw	3
 24647  0CAC  00F5               	movwf	strncmp@n
 24648  0CAD  3000               	movlw	0
 24649  0CAE  00F6               	movwf	strncmp@n+1
 24650  0CAF  31B3  23E5  3188   	fcall	_strncmp
 24651  0CB2  0871               	movf	?_strncmp,w
 24652  0CB3  0472               	iorwf	?_strncmp+1,w
 24653  0CB4  1D03               	btfss	3,2
 24654  0CB5  2D22               	goto	l8267
 24655  0CB6                     l8257:	
 24656                           
 24657                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
 24658  0CB6  0021               	movlb	1	; select bank1
 24659  0CB7  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24660  0CB8  0086               	movwf	6
 24661  0CB9  3001               	movlw	1	; select bank2/3
 24662  0CBA  0087               	movwf	7
 24663  0CBB  3F40               	moviw [0]fsr1
 24664  0CBC  0022               	movlb	2	; select bank2
 24665  0CBD  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24666  0CBE  3F41               	moviw [1]fsr1
 24667  0CBF  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 24668  0CC0  3002               	movlw	2
 24669  0CC1  0720               	addwf	??_vfpfcnvrt^(0+256),w
 24670  0CC2  0084               	movwf	4
 24671  0CC3  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 24672  0CC4  1803               	skipnc
 24673  0CC5  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 24674  0CC6  0085               	movwf	5
 24675  0CC7  0800               	movf	0,w	;code access
 24676  0CC8  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 24677  0CC9  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 24678  0CCA  00C5               	movwf	vfpfcnvrt@c^(0+256)
 24679                           
 24680                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
 24681  0CCB  0021               	movlb	1	; select bank1
 24682  0CCC  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24683  0CCD  0086               	movwf	6
 24684  0CCE  3001               	movlw	1	; select bank2/3
 24685  0CCF  0087               	movwf	7
 24686  0CD0  3003               	movlw	3
 24687  0CD1  0781               	addwf	1,f
 24688  0CD2  3141               	addfsr 1,1
 24689  0CD3  1803               	skipnc
 24690  0CD4  0A81               	incf	1,f
 24691                           
 24692                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 24693  0CD5  086F               	movf	vfpfcnvrt@ap^(0+128),w
 24694  0CD6  0086               	movwf	6
 24695  0CD7  3001               	movlw	1	; select bank2/3
 24696  0CD8  0087               	movwf	7
 24697  0CD9  0801               	movf	1,w
 24698  0CDA  0084               	movwf	4
 24699  0CDB  3001               	movlw	1	; select bank2/3
 24700  0CDC  0085               	movwf	5
 24701  0CDD  3002               	movlw	2
 24702  0CDE  0781               	addwf	1,f
 24703  0CDF  0800               	movf	0,w
 24704  0CE0  0022               	movlb	2	; select bank2
 24705  0CE1  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 24706  0CE2  01C7               	clrf	(vfpfcnvrt@llu+1)^(0+256)
 24707  0CE3  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 24708  0CE4  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 24709  0CE5  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 24710  0CE6  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 24711  0CE7  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 24712  0CE8  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 24713                           
 24714                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
 24715  0CE9  0021               	movlb	1	; select bank1
 24716  0CEA  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 24717  0CEB  0020               	movlb	0	; select bank0
 24718  0CEC  00B1               	movwf	xtoa@fp+1
 24719  0CED  0021               	movlb	1	; select bank1
 24720  0CEE  086C               	movf	vfpfcnvrt@fp^(0+128),w
 24721  0CEF  0020               	movlb	0	; select bank0
 24722  0CF0  00B0               	movwf	xtoa@fp
 24723  0CF1  0022               	movlb	2	; select bank2
 24724  0CF2  0846               	movf	vfpfcnvrt@llu^(0+256),w
 24725  0CF3  0020               	movlb	0	; select bank0
 24726  0CF4  00B2               	movwf	xtoa@d
 24727  0CF5  0022               	movlb	2	; select bank2
 24728  0CF6  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 24729  0CF7  0020               	movlb	0	; select bank0
 24730  0CF8  00B3               	movwf	xtoa@d+1
 24731  0CF9  0022               	movlb	2	; select bank2
 24732  0CFA  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 24733  0CFB  0020               	movlb	0	; select bank0
 24734  0CFC  00B4               	movwf	xtoa@d+2
 24735  0CFD  0022               	movlb	2	; select bank2
 24736  0CFE  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 24737  0CFF  0020               	movlb	0	; select bank0
 24738  0D00  00B5               	movwf	xtoa@d+3
 24739  0D01  0022               	movlb	2	; select bank2
 24740  0D02  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 24741  0D03  0020               	movlb	0	; select bank0
 24742  0D04  00B6               	movwf	xtoa@d+4
 24743  0D05  0022               	movlb	2	; select bank2
 24744  0D06  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 24745  0D07  0020               	movlb	0	; select bank0
 24746  0D08  00B7               	movwf	xtoa@d+5
 24747  0D09  0022               	movlb	2	; select bank2
 24748  0D0A  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 24749  0D0B  0020               	movlb	0	; select bank0
 24750  0D0C  00B8               	movwf	xtoa@d+6
 24751  0D0D  0022               	movlb	2	; select bank2
 24752  0D0E  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 24753  0D0F  0020               	movlb	0	; select bank0
 24754  0D10  00B9               	movwf	xtoa@d+7
 24755  0D11  0022               	movlb	2	; select bank2
 24756  0D12  0845               	movf	vfpfcnvrt@c^(0+256),w
 24757  0D13  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24758  0D14  0820               	movf	??_vfpfcnvrt^(0+256),w
 24759  0D15  0020               	movlb	0	; select bank0
 24760  0D16  00BA               	movwf	xtoa@x
 24761  0D17  319B  234B         	fcall	_xtoa
 24762  0D19  0020               	movlb	0	; select bank0
 24763  0D1A  0831               	movf	?_xtoa+1,w
 24764  0D1B  0021               	movlb	1	; select bank1
 24765  0D1C  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 24766  0D1D  0020               	movlb	0	; select bank0
 24767  0D1E  0830               	movf	?_xtoa,w
 24768  0D1F  0021               	movlb	1	; select bank1
 24769  0D20  00EC               	movwf	?_vfpfcnvrt^(0+128)
 24770  0D21  0008               	return
 24771  0D22                     l8267:	
 24772                           
 24773                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
 24774  0D22  0021               	movlb	1	; select bank1
 24775  0D23  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24776  0D24  0086               	movwf	6
 24777  0D25  3001               	movlw	1	; select bank2/3
 24778  0D26  0087               	movwf	7
 24779  0D27  3F40               	moviw [0]fsr1
 24780  0D28  00F1               	movwf	strncmp@_l
 24781  0D29  3F41               	moviw [1]fsr1
 24782  0D2A  00F2               	movwf	strncmp@_l+1
 24783  0D2B  305F               	movlw	low ((STR_136+1)| (0+32768))
 24784  0D2C  00F3               	movwf	strncmp@_r
 24785  0D2D  30BB               	movlw	high ((STR_136+1)| (0+32768))
 24786  0D2E  00F4               	movwf	strncmp@_r+1
 24787  0D2F  3002               	movlw	2
 24788  0D30  00F5               	movwf	strncmp@n
 24789  0D31  3000               	movlw	0
 24790  0D32  00F6               	movwf	strncmp@n+1
 24791  0D33  31B3  23E5  3188   	fcall	_strncmp
 24792  0D36  0871               	movf	?_strncmp,w
 24793  0D37  0472               	iorwf	?_strncmp+1,w
 24794  0D38  1903               	btfsc	3,2
 24795  0D39  2D52               	goto	l8271
 24796  0D3A  0021               	movlb	1	; select bank1
 24797  0D3B  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24798  0D3C  0086               	movwf	6
 24799  0D3D  3001               	movlw	1	; select bank2/3
 24800  0D3E  0087               	movwf	7
 24801  0D3F  3F40               	moviw [0]fsr1
 24802  0D40  00F1               	movwf	strncmp@_l
 24803  0D41  3F41               	moviw [1]fsr1
 24804  0D42  00F2               	movwf	strncmp@_l+1
 24805  0D43  303F               	movlw	low ((STR_140+1)| (0+32768))
 24806  0D44  00F3               	movwf	strncmp@_r
 24807  0D45  30BB               	movlw	high ((STR_140+1)| (0+32768))
 24808  0D46  00F4               	movwf	strncmp@_r+1
 24809  0D47  3002               	movlw	2
 24810  0D48  00F5               	movwf	strncmp@n
 24811  0D49  3000               	movlw	0
 24812  0D4A  00F6               	movwf	strncmp@n+1
 24813  0D4B  31B3  23E5  3188   	fcall	_strncmp
 24814  0D4E  0871               	movf	?_strncmp,w
 24815  0D4F  0472               	iorwf	?_strncmp+1,w
 24816  0D50  1D03               	btfss	3,2
 24817  0D51  2DBF               	goto	l8281
 24818  0D52                     l8271:	
 24819                           
 24820                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
 24821  0D52  0021               	movlb	1	; select bank1
 24822  0D53  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24823  0D54  0086               	movwf	6
 24824  0D55  3001               	movlw	1	; select bank2/3
 24825  0D56  0087               	movwf	7
 24826  0D57  3F40               	moviw [0]fsr1
 24827  0D58  0022               	movlb	2	; select bank2
 24828  0D59  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24829  0D5A  3F41               	moviw [1]fsr1
 24830  0D5B  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 24831  0D5C  3001               	movlw	1
 24832  0D5D  0720               	addwf	??_vfpfcnvrt^(0+256),w
 24833  0D5E  0084               	movwf	4
 24834  0D5F  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 24835  0D60  1803               	skipnc
 24836  0D61  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 24837  0D62  0085               	movwf	5
 24838  0D63  0800               	movf	0,w	;code access
 24839  0D64  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 24840  0D65  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 24841  0D66  00C5               	movwf	vfpfcnvrt@c^(0+256)
 24842                           
 24843                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
 24844  0D67  0021               	movlb	1	; select bank1
 24845  0D68  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24846  0D69  0086               	movwf	6
 24847  0D6A  3001               	movlw	1	; select bank2/3
 24848  0D6B  0087               	movwf	7
 24849  0D6C  3002               	movlw	2
 24850  0D6D  0781               	addwf	1,f
 24851  0D6E  3141               	addfsr 1,1
 24852  0D6F  1803               	skipnc
 24853  0D70  0A81               	incf	1,f
 24854                           
 24855                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 24856  0D71  086F               	movf	vfpfcnvrt@ap^(0+128),w
 24857  0D72  0086               	movwf	6
 24858  0D73  3001               	movlw	1	; select bank2/3
 24859  0D74  0087               	movwf	7
 24860  0D75  0801               	movf	1,w
 24861  0D76  0084               	movwf	4
 24862  0D77  3001               	movlw	1	; select bank2/3
 24863  0D78  0085               	movwf	5
 24864  0D79  3002               	movlw	2
 24865  0D7A  0781               	addwf	1,f
 24866  0D7B  3F00               	moviw [0]fsr0
 24867  0D7C  0022               	movlb	2	; select bank2
 24868  0D7D  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 24869  0D7E  3F01               	moviw [1]fsr0
 24870  0D7F  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 24871  0D80  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 24872  0D81  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 24873  0D82  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 24874  0D83  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 24875  0D84  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 24876  0D85  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 24877                           
 24878                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1269:      
      +                                 return xtoa(fp, llu, c);
 24879  0D86  0021               	movlb	1	; select bank1
 24880  0D87  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 24881  0D88  0020               	movlb	0	; select bank0
 24882  0D89  00B1               	movwf	xtoa@fp+1
 24883  0D8A  0021               	movlb	1	; select bank1
 24884  0D8B  086C               	movf	vfpfcnvrt@fp^(0+128),w
 24885  0D8C  0020               	movlb	0	; select bank0
 24886  0D8D  00B0               	movwf	xtoa@fp
 24887  0D8E  0022               	movlb	2	; select bank2
 24888  0D8F  0846               	movf	vfpfcnvrt@llu^(0+256),w
 24889  0D90  0020               	movlb	0	; select bank0
 24890  0D91  00B2               	movwf	xtoa@d
 24891  0D92  0022               	movlb	2	; select bank2
 24892  0D93  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 24893  0D94  0020               	movlb	0	; select bank0
 24894  0D95  00B3               	movwf	xtoa@d+1
 24895  0D96  0022               	movlb	2	; select bank2
 24896  0D97  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 24897  0D98  0020               	movlb	0	; select bank0
 24898  0D99  00B4               	movwf	xtoa@d+2
 24899  0D9A  0022               	movlb	2	; select bank2
 24900  0D9B  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 24901  0D9C  0020               	movlb	0	; select bank0
 24902  0D9D  00B5               	movwf	xtoa@d+3
 24903  0D9E  0022               	movlb	2	; select bank2
 24904  0D9F  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 24905  0DA0  0020               	movlb	0	; select bank0
 24906  0DA1  00B6               	movwf	xtoa@d+4
 24907  0DA2  0022               	movlb	2	; select bank2
 24908  0DA3  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 24909  0DA4  0020               	movlb	0	; select bank0
 24910  0DA5  00B7               	movwf	xtoa@d+5
 24911  0DA6  0022               	movlb	2	; select bank2
 24912  0DA7  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 24913  0DA8  0020               	movlb	0	; select bank0
 24914  0DA9  00B8               	movwf	xtoa@d+6
 24915  0DAA  0022               	movlb	2	; select bank2
 24916  0DAB  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 24917  0DAC  0020               	movlb	0	; select bank0
 24918  0DAD  00B9               	movwf	xtoa@d+7
 24919  0DAE  0022               	movlb	2	; select bank2
 24920  0DAF  0845               	movf	vfpfcnvrt@c^(0+256),w
 24921  0DB0  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24922  0DB1  0820               	movf	??_vfpfcnvrt^(0+256),w
 24923  0DB2  0020               	movlb	0	; select bank0
 24924  0DB3  00BA               	movwf	xtoa@x
 24925  0DB4  319B  234B         	fcall	_xtoa
 24926  0DB6  0020               	movlb	0	; select bank0
 24927  0DB7  0831               	movf	?_xtoa+1,w
 24928  0DB8  0021               	movlb	1	; select bank1
 24929  0DB9  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 24930  0DBA  0020               	movlb	0	; select bank0
 24931  0DBB  0830               	movf	?_xtoa,w
 24932  0DBC  0021               	movlb	1	; select bank1
 24933  0DBD  00EC               	movwf	?_vfpfcnvrt^(0+128)
 24934  0DBE  0008               	return
 24935  0DBF                     l8281:	
 24936                           
 24937                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 24938  0DBF  0021               	movlb	1	; select bank1
 24939  0DC0  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24940  0DC1  0086               	movwf	6
 24941  0DC2  3001               	movlw	1	; select bank2/3
 24942  0DC3  0087               	movwf	7
 24943  0DC4  3F40               	moviw [0]fsr1
 24944  0DC5  0022               	movlb	2	; select bank2
 24945  0DC6  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24946  0DC7  3F41               	moviw [1]fsr1
 24947  0DC8  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 24948  0DC9  0820               	movf	??_vfpfcnvrt^(0+256),w
 24949  0DCA  0084               	movwf	4
 24950  0DCB  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 24951  0DCC  0085               	movwf	5
 24952  0DCD  0012               	moviw fsr0++
 24953  0DCE  3A78               	xorlw	120
 24954  0DCF  1903               	btfsc	3,2
 24955  0DD0  2DE3               	goto	l8285
 24956  0DD1  0021               	movlb	1	; select bank1
 24957  0DD2  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24958  0DD3  0086               	movwf	6
 24959  0DD4  3001               	movlw	1	; select bank2/3
 24960  0DD5  0087               	movwf	7
 24961  0DD6  3F40               	moviw [0]fsr1
 24962  0DD7  0022               	movlb	2	; select bank2
 24963  0DD8  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24964  0DD9  3F41               	moviw [1]fsr1
 24965  0DDA  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 24966  0DDB  0820               	movf	??_vfpfcnvrt^(0+256),w
 24967  0DDC  0084               	movwf	4
 24968  0DDD  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 24969  0DDE  0085               	movwf	5
 24970  0DDF  0012               	moviw fsr0++
 24971  0DE0  3A58               	xorlw	88
 24972  0DE1  1D03               	btfss	3,2
 24973  0DE2  2E4D               	goto	l8295
 24974  0DE3                     l8285:	
 24975                           
 24976                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 24977  0DE3  0021               	movlb	1	; select bank1
 24978  0DE4  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24979  0DE5  0086               	movwf	6
 24980  0DE6  3001               	movlw	1	; select bank2/3
 24981  0DE7  0087               	movwf	7
 24982  0DE8  3F40               	moviw [0]fsr1
 24983  0DE9  0022               	movlb	2	; select bank2
 24984  0DEA  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24985  0DEB  3F41               	moviw [1]fsr1
 24986  0DEC  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 24987  0DED  0820               	movf	??_vfpfcnvrt^(0+256),w
 24988  0DEE  0084               	movwf	4
 24989  0DEF  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 24990  0DF0  0085               	movwf	5
 24991  0DF1  0800               	movf	0,w	;code access
 24992  0DF2  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 24993  0DF3  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 24994  0DF4  00C5               	movwf	vfpfcnvrt@c^(0+256)
 24995                           
 24996                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 24997  0DF5  0021               	movlb	1	; select bank1
 24998  0DF6  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24999  0DF7  0086               	movwf	6
 25000  0DF8  3001               	movlw	1	; select bank2/3
 25001  0DF9  0087               	movwf	7
 25002  0DFA  3001               	movlw	1
 25003  0DFB  0781               	addwf	1,f
 25004  0DFC  3141               	addfsr 1,1
 25005  0DFD  1803               	skipnc
 25006  0DFE  0A81               	incf	1,f
 25007                           
 25008                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 25009  0DFF  086F               	movf	vfpfcnvrt@ap^(0+128),w
 25010  0E00  0086               	movwf	6
 25011  0E01  3001               	movlw	1	; select bank2/3
 25012  0E02  0087               	movwf	7
 25013  0E03  0801               	movf	1,w
 25014  0E04  0084               	movwf	4
 25015  0E05  3001               	movlw	1	; select bank2/3
 25016  0E06  0085               	movwf	5
 25017  0E07  3002               	movlw	2
 25018  0E08  0781               	addwf	1,f
 25019  0E09  3F00               	moviw [0]fsr0
 25020  0E0A  0022               	movlb	2	; select bank2
 25021  0E0B  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 25022  0E0C  3F01               	moviw [1]fsr0
 25023  0E0D  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 25024  0E0E  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 25025  0E0F  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 25026  0E10  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 25027  0E11  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 25028  0E12  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 25029  0E13  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 25030                           
 25031                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 25032  0E14  0021               	movlb	1	; select bank1
 25033  0E15  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 25034  0E16  0020               	movlb	0	; select bank0
 25035  0E17  00B1               	movwf	xtoa@fp+1
 25036  0E18  0021               	movlb	1	; select bank1
 25037  0E19  086C               	movf	vfpfcnvrt@fp^(0+128),w
 25038  0E1A  0020               	movlb	0	; select bank0
 25039  0E1B  00B0               	movwf	xtoa@fp
 25040  0E1C  0022               	movlb	2	; select bank2
 25041  0E1D  0846               	movf	vfpfcnvrt@llu^(0+256),w
 25042  0E1E  0020               	movlb	0	; select bank0
 25043  0E1F  00B2               	movwf	xtoa@d
 25044  0E20  0022               	movlb	2	; select bank2
 25045  0E21  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 25046  0E22  0020               	movlb	0	; select bank0
 25047  0E23  00B3               	movwf	xtoa@d+1
 25048  0E24  0022               	movlb	2	; select bank2
 25049  0E25  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 25050  0E26  0020               	movlb	0	; select bank0
 25051  0E27  00B4               	movwf	xtoa@d+2
 25052  0E28  0022               	movlb	2	; select bank2
 25053  0E29  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 25054  0E2A  0020               	movlb	0	; select bank0
 25055  0E2B  00B5               	movwf	xtoa@d+3
 25056  0E2C  0022               	movlb	2	; select bank2
 25057  0E2D  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 25058  0E2E  0020               	movlb	0	; select bank0
 25059  0E2F  00B6               	movwf	xtoa@d+4
 25060  0E30  0022               	movlb	2	; select bank2
 25061  0E31  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 25062  0E32  0020               	movlb	0	; select bank0
 25063  0E33  00B7               	movwf	xtoa@d+5
 25064  0E34  0022               	movlb	2	; select bank2
 25065  0E35  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 25066  0E36  0020               	movlb	0	; select bank0
 25067  0E37  00B8               	movwf	xtoa@d+6
 25068  0E38  0022               	movlb	2	; select bank2
 25069  0E39  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 25070  0E3A  0020               	movlb	0	; select bank0
 25071  0E3B  00B9               	movwf	xtoa@d+7
 25072  0E3C  0022               	movlb	2	; select bank2
 25073  0E3D  0845               	movf	vfpfcnvrt@c^(0+256),w
 25074  0E3E  00A0               	movwf	??_vfpfcnvrt^(0+256)
 25075  0E3F  0820               	movf	??_vfpfcnvrt^(0+256),w
 25076  0E40  0020               	movlb	0	; select bank0
 25077  0E41  00BA               	movwf	xtoa@x
 25078  0E42  319B  234B         	fcall	_xtoa
 25079  0E44  0020               	movlb	0	; select bank0
 25080  0E45  0831               	movf	?_xtoa+1,w
 25081  0E46  0021               	movlb	1	; select bank1
 25082  0E47  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 25083  0E48  0020               	movlb	0	; select bank0
 25084  0E49  0830               	movf	?_xtoa,w
 25085  0E4A  0021               	movlb	1	; select bank1
 25086  0E4B  00EC               	movwf	?_vfpfcnvrt^(0+128)
 25087  0E4C  0008               	return
 25088  0E4D                     l8295:	
 25089                           
 25090                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1285:      
      +                             if (!strncmp(*fmt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", 
      +                          ((sizeof("lX")/sizeof("lX"[0]))-1))) {
 25091  0E4D  0021               	movlb	1	; select bank1
 25092  0E4E  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25093  0E4F  0086               	movwf	6
 25094  0E50  3001               	movlw	1	; select bank2/3
 25095  0E51  0087               	movwf	7
 25096  0E52  3F40               	moviw [0]fsr1
 25097  0E53  00F1               	movwf	strncmp@_l
 25098  0E54  3F41               	moviw [1]fsr1
 25099  0E55  00F2               	movwf	strncmp@_l+1
 25100  0E56  3089               	movlw	low (STR_154| (0+32768))
 25101  0E57  00F3               	movwf	strncmp@_r
 25102  0E58  30BB               	movlw	high (STR_154| (0+32768))
 25103  0E59  00F4               	movwf	strncmp@_r+1
 25104  0E5A  3002               	movlw	2
 25105  0E5B  00F5               	movwf	strncmp@n
 25106  0E5C  3000               	movlw	0
 25107  0E5D  00F6               	movwf	strncmp@n+1
 25108  0E5E  31B3  23E5  3188   	fcall	_strncmp
 25109  0E61  0871               	movf	?_strncmp,w
 25110  0E62  0472               	iorwf	?_strncmp+1,w
 25111  0E63  1903               	btfsc	3,2
 25112  0E64  2E7D               	goto	l8299
 25113  0E65  0021               	movlb	1	; select bank1
 25114  0E66  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25115  0E67  0086               	movwf	6
 25116  0E68  3001               	movlw	1	; select bank2/3
 25117  0E69  0087               	movwf	7
 25118  0E6A  3F40               	moviw [0]fsr1
 25119  0E6B  00F1               	movwf	strncmp@_l
 25120  0E6C  3F41               	moviw [1]fsr1
 25121  0E6D  00F2               	movwf	strncmp@_l+1
 25122  0E6E  3062               	movlw	low (STR_158| (0+32768))
 25123  0E6F  00F3               	movwf	strncmp@_r
 25124  0E70  30BB               	movlw	high (STR_158| (0+32768))
 25125  0E71  00F4               	movwf	strncmp@_r+1
 25126  0E72  3002               	movlw	2
 25127  0E73  00F5               	movwf	strncmp@n
 25128  0E74  3000               	movlw	0
 25129  0E75  00F6               	movwf	strncmp@n+1
 25130  0E76  31B3  23E5  3188   	fcall	_strncmp
 25131  0E79  0871               	movf	?_strncmp,w
 25132  0E7A  0472               	iorwf	?_strncmp+1,w
 25133  0E7B  1D03               	btfss	3,2
 25134  0E7C  2F04               	goto	l8309
 25135  0E7D                     l8299:	
 25136                           
 25137                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1286: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1288:           
      +                            c = (*fmt)[1];
 25138  0E7D  0021               	movlb	1	; select bank1
 25139  0E7E  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25140  0E7F  0086               	movwf	6
 25141  0E80  3001               	movlw	1	; select bank2/3
 25142  0E81  0087               	movwf	7
 25143  0E82  3F40               	moviw [0]fsr1
 25144  0E83  0022               	movlb	2	; select bank2
 25145  0E84  00A0               	movwf	??_vfpfcnvrt^(0+256)
 25146  0E85  3F41               	moviw [1]fsr1
 25147  0E86  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 25148  0E87  3001               	movlw	1
 25149  0E88  0720               	addwf	??_vfpfcnvrt^(0+256),w
 25150  0E89  0084               	movwf	4
 25151  0E8A  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 25152  0E8B  1803               	skipnc
 25153  0E8C  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 25154  0E8D  0085               	movwf	5
 25155  0E8E  0800               	movf	0,w	;code access
 25156  0E8F  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 25157  0E90  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 25158  0E91  00C5               	movwf	vfpfcnvrt@c^(0+256)
 25159                           
 25160                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1289:      
      +                                 *fmt += ((sizeof("lx")/sizeof("lx"[0]))-1);
 25161  0E92  0021               	movlb	1	; select bank1
 25162  0E93  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25163  0E94  0086               	movwf	6
 25164  0E95  3001               	movlw	1	; select bank2/3
 25165  0E96  0087               	movwf	7
 25166  0E97  3002               	movlw	2
 25167  0E98  0781               	addwf	1,f
 25168  0E99  3141               	addfsr 1,1
 25169  0E9A  1803               	skipnc
 25170  0E9B  0A81               	incf	1,f
 25171                           
 25172                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1290:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 25173  0E9C  086F               	movf	vfpfcnvrt@ap^(0+128),w
 25174  0E9D  0086               	movwf	6
 25175  0E9E  3001               	movlw	1	; select bank2/3
 25176  0E9F  0087               	movwf	7
 25177  0EA0  0801               	movf	1,w
 25178  0EA1  0084               	movwf	4
 25179  0EA2  3001               	movlw	1	; select bank2/3
 25180  0EA3  0085               	movwf	5
 25181  0EA4  3004               	movlw	4
 25182  0EA5  0781               	addwf	1,f
 25183  0EA6  3F00               	moviw [0]fsr0
 25184  0EA7  0022               	movlb	2	; select bank2
 25185  0EA8  00A0               	movwf	??_vfpfcnvrt^(0+256)
 25186  0EA9  3F01               	moviw [1]fsr0
 25187  0EAA  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 25188  0EAB  3F02               	moviw [2]fsr0
 25189  0EAC  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 25190  0EAD  3F03               	moviw [3]fsr0
 25191  0EAE  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 25192  0EAF  0820               	movf	??_vfpfcnvrt^(0+256),w
 25193  0EB0  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 25194  0EB1  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 25195  0EB2  00A5               	movwf	((??_vfpfcnvrt+4)^(0+256)+1)
 25196  0EB3  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 25197  0EB4  00A6               	movwf	((??_vfpfcnvrt+4)^(0+256)+2)
 25198  0EB5  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 25199  0EB6  00A7               	movwf	((??_vfpfcnvrt+4)^(0+256)+3)
 25200  0EB7  01A8               	clrf	((??_vfpfcnvrt+4)^(0+256)+4)
 25201  0EB8  01A9               	clrf	((??_vfpfcnvrt+4)^(0+256)+5)
 25202  0EB9  01AA               	clrf	((??_vfpfcnvrt+4)^(0+256)+6)
 25203  0EBA  01AB               	clrf	((??_vfpfcnvrt+4)^(0+256)+7)
 25204  0EBB  082B               	movf	((??_vfpfcnvrt+4)^(0+256)+7),w
 25205  0EBC  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 25206  0EBD  082A               	movf	((??_vfpfcnvrt+4)^(0+256)+6),w
 25207  0EBE  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 25208  0EBF  0829               	movf	((??_vfpfcnvrt+4)^(0+256)+5),w
 25209  0EC0  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 25210  0EC1  0828               	movf	((??_vfpfcnvrt+4)^(0+256)+4),w
 25211  0EC2  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 25212  0EC3  0827               	movf	((??_vfpfcnvrt+4)^(0+256)+3),w
 25213  0EC4  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 25214  0EC5  0826               	movf	((??_vfpfcnvrt+4)^(0+256)+2),w
 25215  0EC6  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 25216  0EC7  0825               	movf	((??_vfpfcnvrt+4)^(0+256)+1),w
 25217  0EC8  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 25218  0EC9  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 25219  0ECA  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 25220                           
 25221                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1292:      
      +                                 return xtoa(fp, llu, c);
 25222  0ECB  0021               	movlb	1	; select bank1
 25223  0ECC  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 25224  0ECD  0020               	movlb	0	; select bank0
 25225  0ECE  00B1               	movwf	xtoa@fp+1
 25226  0ECF  0021               	movlb	1	; select bank1
 25227  0ED0  086C               	movf	vfpfcnvrt@fp^(0+128),w
 25228  0ED1  0020               	movlb	0	; select bank0
 25229  0ED2  00B0               	movwf	xtoa@fp
 25230  0ED3  0022               	movlb	2	; select bank2
 25231  0ED4  0846               	movf	vfpfcnvrt@llu^(0+256),w
 25232  0ED5  0020               	movlb	0	; select bank0
 25233  0ED6  00B2               	movwf	xtoa@d
 25234  0ED7  0022               	movlb	2	; select bank2
 25235  0ED8  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 25236  0ED9  0020               	movlb	0	; select bank0
 25237  0EDA  00B3               	movwf	xtoa@d+1
 25238  0EDB  0022               	movlb	2	; select bank2
 25239  0EDC  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 25240  0EDD  0020               	movlb	0	; select bank0
 25241  0EDE  00B4               	movwf	xtoa@d+2
 25242  0EDF  0022               	movlb	2	; select bank2
 25243  0EE0  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 25244  0EE1  0020               	movlb	0	; select bank0
 25245  0EE2  00B5               	movwf	xtoa@d+3
 25246  0EE3  0022               	movlb	2	; select bank2
 25247  0EE4  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 25248  0EE5  0020               	movlb	0	; select bank0
 25249  0EE6  00B6               	movwf	xtoa@d+4
 25250  0EE7  0022               	movlb	2	; select bank2
 25251  0EE8  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 25252  0EE9  0020               	movlb	0	; select bank0
 25253  0EEA  00B7               	movwf	xtoa@d+5
 25254  0EEB  0022               	movlb	2	; select bank2
 25255  0EEC  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 25256  0EED  0020               	movlb	0	; select bank0
 25257  0EEE  00B8               	movwf	xtoa@d+6
 25258  0EEF  0022               	movlb	2	; select bank2
 25259  0EF0  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 25260  0EF1  0020               	movlb	0	; select bank0
 25261  0EF2  00B9               	movwf	xtoa@d+7
 25262  0EF3  0022               	movlb	2	; select bank2
 25263  0EF4  0845               	movf	vfpfcnvrt@c^(0+256),w
 25264  0EF5  00A0               	movwf	??_vfpfcnvrt^(0+256)
 25265  0EF6  0820               	movf	??_vfpfcnvrt^(0+256),w
 25266  0EF7  0020               	movlb	0	; select bank0
 25267  0EF8  00BA               	movwf	xtoa@x
 25268  0EF9  319B  234B         	fcall	_xtoa
 25269  0EFB  0020               	movlb	0	; select bank0
 25270  0EFC  0831               	movf	?_xtoa+1,w
 25271  0EFD  0021               	movlb	1	; select bank1
 25272  0EFE  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 25273  0EFF  0020               	movlb	0	; select bank0
 25274  0F00  0830               	movf	?_xtoa,w
 25275  0F01  0021               	movlb	1	; select bank1
 25276  0F02  00EC               	movwf	?_vfpfcnvrt^(0+128)
 25277  0F03  0008               	return
 25278  0F04                     l8309:	
 25279                           
 25280                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
 25281  0F04  0021               	movlb	1	; select bank1
 25282  0F05  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25283  0F06  0086               	movwf	6
 25284  0F07  3001               	movlw	1	; select bank2/3
 25285  0F08  0087               	movwf	7
 25286  0F09  3F40               	moviw [0]fsr1
 25287  0F0A  00F1               	movwf	strncmp@_l
 25288  0F0B  3F41               	moviw [1]fsr1
 25289  0F0C  00F2               	movwf	strncmp@_l+1
 25290  0F0D  308C               	movlw	low (STR_163| (0+32768))
 25291  0F0E  00F3               	movwf	strncmp@_r
 25292  0F0F  30BB               	movlw	high (STR_163| (0+32768))
 25293  0F10  00F4               	movwf	strncmp@_r+1
 25294  0F11  3002               	movlw	2
 25295  0F12  00F5               	movwf	strncmp@n
 25296  0F13  3000               	movlw	0
 25297  0F14  00F6               	movwf	strncmp@n+1
 25298  0F15  31B3  23E5  3188   	fcall	_strncmp
 25299  0F18  0871               	movf	?_strncmp,w
 25300  0F19  0472               	iorwf	?_strncmp+1,w
 25301  0F1A  1903               	btfsc	3,2
 25302  0F1B  2F34               	goto	l8313
 25303  0F1C  0021               	movlb	1	; select bank1
 25304  0F1D  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25305  0F1E  0086               	movwf	6
 25306  0F1F  3001               	movlw	1	; select bank2/3
 25307  0F20  0087               	movwf	7
 25308  0F21  3F40               	moviw [0]fsr1
 25309  0F22  00F1               	movwf	strncmp@_l
 25310  0F23  3F41               	moviw [1]fsr1
 25311  0F24  00F2               	movwf	strncmp@_l+1
 25312  0F25  3065               	movlw	low (STR_167| (0+32768))
 25313  0F26  00F3               	movwf	strncmp@_r
 25314  0F27  30BB               	movlw	high (STR_167| (0+32768))
 25315  0F28  00F4               	movwf	strncmp@_r+1
 25316  0F29  3002               	movlw	2
 25317  0F2A  00F5               	movwf	strncmp@n
 25318  0F2B  3000               	movlw	0
 25319  0F2C  00F6               	movwf	strncmp@n+1
 25320  0F2D  31B3  23E5  3188   	fcall	_strncmp
 25321  0F30  0871               	movf	?_strncmp,w
 25322  0F31  0472               	iorwf	?_strncmp+1,w
 25323  0F32  1D03               	btfss	3,2
 25324  0F33  2FA1               	goto	l8323
 25325  0F34                     l8313:	
 25326                           
 25327                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
 25328  0F34  0021               	movlb	1	; select bank1
 25329  0F35  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25330  0F36  0086               	movwf	6
 25331  0F37  3001               	movlw	1	; select bank2/3
 25332  0F38  0087               	movwf	7
 25333  0F39  3F40               	moviw [0]fsr1
 25334  0F3A  0022               	movlb	2	; select bank2
 25335  0F3B  00A0               	movwf	??_vfpfcnvrt^(0+256)
 25336  0F3C  3F41               	moviw [1]fsr1
 25337  0F3D  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 25338  0F3E  3001               	movlw	1
 25339  0F3F  0720               	addwf	??_vfpfcnvrt^(0+256),w
 25340  0F40  0084               	movwf	4
 25341  0F41  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 25342  0F42  1803               	skipnc
 25343  0F43  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 25344  0F44  0085               	movwf	5
 25345  0F45  0800               	movf	0,w	;code access
 25346  0F46  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 25347  0F47  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 25348  0F48  00C5               	movwf	vfpfcnvrt@c^(0+256)
 25349                           
 25350                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
 25351  0F49  0021               	movlb	1	; select bank1
 25352  0F4A  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25353  0F4B  0086               	movwf	6
 25354  0F4C  3001               	movlw	1	; select bank2/3
 25355  0F4D  0087               	movwf	7
 25356  0F4E  3002               	movlw	2
 25357  0F4F  0781               	addwf	1,f
 25358  0F50  3141               	addfsr 1,1
 25359  0F51  1803               	skipnc
 25360  0F52  0A81               	incf	1,f
 25361                           
 25362                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 25363  0F53  086F               	movf	vfpfcnvrt@ap^(0+128),w
 25364  0F54  0086               	movwf	6
 25365  0F55  3001               	movlw	1	; select bank2/3
 25366  0F56  0087               	movwf	7
 25367  0F57  0801               	movf	1,w
 25368  0F58  0084               	movwf	4
 25369  0F59  3001               	movlw	1	; select bank2/3
 25370  0F5A  0085               	movwf	5
 25371  0F5B  3002               	movlw	2
 25372  0F5C  0781               	addwf	1,f
 25373  0F5D  3F00               	moviw [0]fsr0
 25374  0F5E  0022               	movlb	2	; select bank2
 25375  0F5F  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 25376  0F60  3F01               	moviw [1]fsr0
 25377  0F61  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 25378  0F62  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 25379  0F63  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 25380  0F64  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 25381  0F65  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 25382  0F66  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 25383  0F67  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 25384                           
 25385                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1344:      
      +                                 return xtoa(fp, llu, c);
 25386  0F68  0021               	movlb	1	; select bank1
 25387  0F69  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 25388  0F6A  0020               	movlb	0	; select bank0
 25389  0F6B  00B1               	movwf	xtoa@fp+1
 25390  0F6C  0021               	movlb	1	; select bank1
 25391  0F6D  086C               	movf	vfpfcnvrt@fp^(0+128),w
 25392  0F6E  0020               	movlb	0	; select bank0
 25393  0F6F  00B0               	movwf	xtoa@fp
 25394  0F70  0022               	movlb	2	; select bank2
 25395  0F71  0846               	movf	vfpfcnvrt@llu^(0+256),w
 25396  0F72  0020               	movlb	0	; select bank0
 25397  0F73  00B2               	movwf	xtoa@d
 25398  0F74  0022               	movlb	2	; select bank2
 25399  0F75  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 25400  0F76  0020               	movlb	0	; select bank0
 25401  0F77  00B3               	movwf	xtoa@d+1
 25402  0F78  0022               	movlb	2	; select bank2
 25403  0F79  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 25404  0F7A  0020               	movlb	0	; select bank0
 25405  0F7B  00B4               	movwf	xtoa@d+2
 25406  0F7C  0022               	movlb	2	; select bank2
 25407  0F7D  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 25408  0F7E  0020               	movlb	0	; select bank0
 25409  0F7F  00B5               	movwf	xtoa@d+3
 25410  0F80  0022               	movlb	2	; select bank2
 25411  0F81  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 25412  0F82  0020               	movlb	0	; select bank0
 25413  0F83  00B6               	movwf	xtoa@d+4
 25414  0F84  0022               	movlb	2	; select bank2
 25415  0F85  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 25416  0F86  0020               	movlb	0	; select bank0
 25417  0F87  00B7               	movwf	xtoa@d+5
 25418  0F88  0022               	movlb	2	; select bank2
 25419  0F89  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 25420  0F8A  0020               	movlb	0	; select bank0
 25421  0F8B  00B8               	movwf	xtoa@d+6
 25422  0F8C  0022               	movlb	2	; select bank2
 25423  0F8D  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 25424  0F8E  0020               	movlb	0	; select bank0
 25425  0F8F  00B9               	movwf	xtoa@d+7
 25426  0F90  0022               	movlb	2	; select bank2
 25427  0F91  0845               	movf	vfpfcnvrt@c^(0+256),w
 25428  0F92  00A0               	movwf	??_vfpfcnvrt^(0+256)
 25429  0F93  0820               	movf	??_vfpfcnvrt^(0+256),w
 25430  0F94  0020               	movlb	0	; select bank0
 25431  0F95  00BA               	movwf	xtoa@x
 25432  0F96  319B  234B         	fcall	_xtoa
 25433  0F98  0020               	movlb	0	; select bank0
 25434  0F99  0831               	movf	?_xtoa+1,w
 25435  0F9A  0021               	movlb	1	; select bank1
 25436  0F9B  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 25437  0F9C  0020               	movlb	0	; select bank0
 25438  0F9D  0830               	movf	?_xtoa,w
 25439  0F9E  0021               	movlb	1	; select bank1
 25440  0F9F  00EC               	movwf	?_vfpfcnvrt^(0+128)
 25441  0FA0  0008               	return
 25442  0FA1                     l8323:	
 25443                           
 25444                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 25445  0FA1  0021               	movlb	1	; select bank1
 25446  0FA2  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25447  0FA3  0086               	movwf	6
 25448  0FA4  3001               	movlw	1	; select bank2/3
 25449  0FA5  0087               	movwf	7
 25450  0FA6  3F40               	moviw [0]fsr1
 25451  0FA7  0022               	movlb	2	; select bank2
 25452  0FA8  00A0               	movwf	??_vfpfcnvrt^(0+256)
 25453  0FA9  3F41               	moviw [1]fsr1
 25454  0FAA  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 25455  0FAB  0820               	movf	??_vfpfcnvrt^(0+256),w
 25456  0FAC  0084               	movwf	4
 25457  0FAD  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 25458  0FAE  0085               	movwf	5
 25459  0FAF  0012               	moviw fsr0++
 25460  0FB0  3A25               	xorlw	37
 25461  0FB1  1D03               	btfss	3,2
 25462  0FB2  2FCD               	goto	l8333
 25463                           
 25464                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 25465  0FB3  0021               	movlb	1	; select bank1
 25466  0FB4  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25467  0FB5  0086               	movwf	6
 25468  0FB6  3001               	movlw	1	; select bank2/3
 25469  0FB7  0087               	movwf	7
 25470  0FB8  3001               	movlw	1
 25471  0FB9  0781               	addwf	1,f
 25472  0FBA  3141               	addfsr 1,1
 25473  0FBB  1803               	skipnc
 25474  0FBC  0A81               	incf	1,f
 25475                           
 25476                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 25477  0FBD  3025               	movlw	37
 25478  0FBE  00F1               	movwf	fputc@c
 25479  0FBF  3000               	movlw	0
 25480  0FC0  00F2               	movwf	fputc@c+1
 25481  0FC1  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 25482  0FC2  00F4               	movwf	fputc@fp+1
 25483  0FC3  086C               	movf	vfpfcnvrt@fp^(0+128),w
 25484  0FC4  00F3               	movwf	fputc@fp
 25485  0FC5  31A0  2000         	fcall	_fputc
 25486  0FC7                     l8329:	
 25487                           
 25488                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 25489  0FC7  3001               	movlw	1
 25490  0FC8  0021               	movlb	1	; select bank1
 25491  0FC9  00EC               	movwf	?_vfpfcnvrt^(0+128)
 25492  0FCA  3000               	movlw	0
 25493  0FCB  00ED               	movwf	(?_vfpfcnvrt^(0+128)+1)
 25494  0FCC  0008               	return
 25495  0FCD                     l8333:	
 25496                           
 25497                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 25498  0FCD  0021               	movlb	1	; select bank1
 25499  0FCE  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25500  0FCF  0086               	movwf	6
 25501  0FD0  3001               	movlw	1	; select bank2/3
 25502  0FD1  0087               	movwf	7
 25503  0FD2  3001               	movlw	1
 25504  0FD3  0781               	addwf	1,f
 25505  0FD4  3141               	addfsr 1,1
 25506  0FD5  1803               	skipnc
 25507  0FD6  0A81               	incf	1,f
 25508  0FD7  2948               	goto	l8131
 25509  0FD8                     l8339:	
 25510                           
 25511                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 25512  0FD8  0021               	movlb	1	; select bank1
 25513  0FD9  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25514  0FDA  0086               	movwf	6
 25515  0FDB  3001               	movlw	1	; select bank2/3
 25516  0FDC  0087               	movwf	7
 25517  0FDD  3F40               	moviw [0]fsr1
 25518  0FDE  0022               	movlb	2	; select bank2
 25519  0FDF  00A0               	movwf	??_vfpfcnvrt^(0+256)
 25520  0FE0  3F41               	moviw [1]fsr1
 25521  0FE1  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 25522  0FE2  0820               	movf	??_vfpfcnvrt^(0+256),w
 25523  0FE3  0084               	movwf	4
 25524  0FE4  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 25525  0FE5  0085               	movwf	5
 25526  0FE6  0800               	movf	0,w	;code access
 25527  0FE7  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 25528  0FE8  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
 25529  0FE9  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 25530  0FEA  00F1               	movwf	fputc@c
 25531  0FEB  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 25532  0FEC  00F2               	movwf	fputc@c+1
 25533  0FED  0021               	movlb	1	; select bank1
 25534  0FEE  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 25535  0FEF  00F4               	movwf	fputc@fp+1
 25536  0FF0  086C               	movf	vfpfcnvrt@fp^(0+128),w
 25537  0FF1  00F3               	movwf	fputc@fp
 25538  0FF2  31A0  2000  3188   	fcall	_fputc
 25539                           
 25540                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 25541  0FF5  0021               	movlb	1	; select bank1
 25542  0FF6  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25543  0FF7  0086               	movwf	6
 25544  0FF8  3001               	movlw	1	; select bank2/3
 25545  0FF9  0087               	movwf	7
 25546  0FFA  3001               	movlw	1
 25547  0FFB  0781               	addwf	1,f
 25548  0FFC  3141               	addfsr 1,1
 25549  0FFD  1803               	skipnc
 25550  0FFE  0A81               	incf	1,f
 25551  0FFF  2FC7               	goto	l8329
 25552  1000                     __end_of_vfpfcnvrt:	


Data Sizes:
    Strings     821
    Constant    90
    Data        7
    BSS         154
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     80      80
    BANK3            80     22      77
    BANK4            80      0      25
    BANK5            80      0      80
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           65      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    vsnprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK2[1]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_25(CODE[18]), STR_24(CODE[18]), STR_23(CODE[19]), STR_22(CODE[20]), 
		 -> STR_21(CODE[20]), STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[21]), 
		 -> STR_17(CODE[22]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_11(CODE[38]), STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), 
		 -> STR_3(CODE[43]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_169(CODE[3]), STR_165(CODE[3]), STR_160(CODE[3]), STR_156(CODE[3]), 
		 -> STR_151(CODE[3]), STR_147(CODE[3]), STR_142(CODE[4]), STR_138(CODE[4]), 
		 -> STR_133(CODE[3]), STR_128(CODE[3]), STR_123(CODE[3]), STR_118(CODE[4]), 
		 -> STR_113(CODE[3]), STR_108(CODE[3]), STR_103(CODE[3]), STR_98(CODE[4]), 
		 -> STR_93(CODE[3]), STR_88(CODE[3]), STR_83(CODE[3]), STR_78(CODE[4]), 
		 -> STR_73(CODE[3]), STR_68(CODE[3]), STR_64(CODE[3]), STR_59(CODE[3]), 
		 -> STR_55(CODE[3]), STR_50(CODE[3]), STR_46(CODE[3]), STR_41(CODE[4]), 
		 -> STR_37(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_169(CODE[3]), STR_165(CODE[3]), STR_160(CODE[3]), STR_156(CODE[3]), 
		 -> STR_151(CODE[3]), STR_147(CODE[3]), STR_142(CODE[4]), STR_138(CODE[4]), 
		 -> STR_133(CODE[3]), STR_128(CODE[3]), STR_123(CODE[3]), STR_118(CODE[4]), 
		 -> STR_113(CODE[3]), STR_108(CODE[3]), STR_103(CODE[3]), STR_98(CODE[4]), 
		 -> STR_93(CODE[3]), STR_88(CODE[3]), STR_83(CODE[3]), STR_78(CODE[4]), 
		 -> STR_73(CODE[3]), STR_68(CODE[3]), STR_64(CODE[3]), STR_59(CODE[3]), 
		 -> STR_55(CODE[3]), STR_50(CODE[3]), STR_46(CODE[3]), STR_41(CODE[4]), 
		 -> STR_37(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 57
		 -> vfpfcnvrt@ct(BANK2[3]), STR_25(CODE[18]), STR_24(CODE[18]), STR_23(CODE[19]), 
		 -> STR_22(CODE[20]), STR_21(CODE[20]), STR_20(CODE[21]), STR_19(CODE[21]), 
		 -> STR_18(CODE[21]), STR_17(CODE[22]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_11(CODE[38]), STR_8(CODE[57]), STR_7(CODE[44]), 
		 -> STR_6(CODE[42]), STR_3(CODE[43]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 57
		 -> vfpfcnvrt@ct(BANK2[3]), STR_25(CODE[18]), STR_24(CODE[18]), STR_23(CODE[19]), 
		 -> STR_22(CODE[20]), STR_21(CODE[20]), STR_20(CODE[21]), STR_19(CODE[21]), 
		 -> STR_18(CODE[21]), STR_17(CODE[22]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_11(CODE[38]), STR_8(CODE[57]), STR_7(CODE[44]), 
		 -> STR_6(CODE[42]), STR_3(CODE[43]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK3[2]), stoa@nuls(BANK0[7]), dbuf(BANK5[80]), adcGain(BANK3[2]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK3[2]), stoa@nuls(BANK0[7]), dbuf(BANK5[80]), adcGain(BANK3[2]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK5[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK5[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_32(CODE[4]), STR_31(CODE[4]), STR_28(CODE[4]), STR_27(CODE[4]), 
		 -> dbuf(BANK5[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_32(CODE[4]), STR_31(CODE[4]), STR_28(CODE[4]), STR_27(CODE[4]), 
		 -> dbuf(BANK5[80]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_25(CODE[18]), STR_24(CODE[18]), STR_23(CODE[19]), STR_22(CODE[20]), 
		 -> STR_21(CODE[20]), STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[21]), 
		 -> STR_17(CODE[22]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_11(CODE[38]), STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), 
		 -> STR_3(CODE[43]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    snprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_snprintf(BANK3[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK5[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    S1796_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_25(CODE[18]), STR_24(CODE[18]), STR_23(CODE[19]), STR_22(CODE[20]), 
		 -> STR_21(CODE[20]), STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[21]), 
		 -> STR_17(CODE[22]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_11(CODE[38]), STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), 
		 -> STR_3(CODE[43]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_25(CODE[18]), STR_24(CODE[18]), STR_23(CODE[19]), STR_22(CODE[20]), 
		 -> STR_21(CODE[20]), STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[21]), 
		 -> STR_17(CODE[22]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_11(CODE[38]), STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), 
		 -> STR_3(CODE[43]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 57
		 -> STR_25(CODE[18]), STR_24(CODE[18]), STR_23(CODE[19]), STR_22(CODE[20]), 
		 -> STR_21(CODE[20]), STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[21]), 
		 -> STR_17(CODE[22]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_11(CODE[38]), STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), 
		 -> STR_3(CODE[43]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 2
		 -> ?_snprintf(BANK3[2]), adcGain(BANK3[2]), 

    vfpfcnvrt@vp	PTR void  size(1) Largest target is 2
		 -> ?_snprintf(BANK3[2]), adcGain(BANK3[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK2[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    stoa@s	PTR unsigned char  size(1) Largest target is 2
		 -> ?_snprintf(BANK3[2]), adcGain(BANK3[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK3[2]), stoa@nuls(BANK0[7]), adcGain(BANK3[2]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK5[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK5[80]), 

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 127
		 -> STR_26(CODE[3]), STR_13(CODE[3]), STR_12(CODE[38]), STR_10(CODE[45]), 
		 -> STR_9(CODE[42]), STR_5(CODE[3]), STR_4(CODE[53]), messageBuffer(BIGRAM[127]), 
		 -> STR_2(CODE[46]), STR_1(CODE[40]), 


Critical Paths under _main in COMMON

    _main->_EUSART_Initialize
    _watchdog_timeout_shutdown->_RGB_color
    _vfpfcnvrt->_stoa
    _vfpfcnvrt->_strncmp
    _toupper->_islower
    _stoa->_fputc
    _efgtoa->___fltol
    _tolower->_isupper
    _dtoa->___aodiv
    _abs->___aomod
    _pad->_fputs
    _fputs->_fputc
    _atoi->___wmul
    _atoi->_isdigit
    _EUSART_Write_Text->_EUSART_Write
    _setTemperatureLimitsint->___wmul
    _setShortCircuitProtection->_I2C_writeRegister
    _setOverCurrentDischargeProtection->_I2C_writeRegister
    _setCellUndervoltageProtection->_I2C_writeRegister
    _setCellUndervoltageProtection->_readRegister
    _setCellOvervoltageProtection->_I2C_writeRegister
    _setCellOvervoltageProtection->_readRegister
    _beginAFEcommunication->_I2C_writeRegister
    _beginAFEcommunication->_readRegister
    _I2C_writeRegister->_send_I2C_controlByte
    _RGB_AWAIT_AFE_CONN->_RGB_color
    _AFE_getSetShortCircuitCurrent->___fltol
    _AFE_getOverCurrentDischargeCurrent->___fltol
    _updateVoltages->___fltol
    _readRegister->_read_I2C_data
    _readRegister->_send_I2C_controlByte
    ___flmul->__Umul8_16
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _vsnprintf->_vfprintf
    _xtoa->_pad
    _utoa->___lodiv
    _utoa->___lomod
    _utoa->_pad
    _otoa->_pad
    _efgtoa->___fladd
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___fladd
    _dtoa->___aodiv
    _dtoa->___aomod
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _setShortCircuitProtection->___flge
    _setOverCurrentDischargeProtection->___flge
    ___flge->___fldiv
    _setCellUndervoltageProtection->___aldiv
    _setCellOvervoltageProtection->___aldiv
    _updateVoltages->___fladd
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___fladd->___fldiv
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _AFE_getSetShortCircuitCurrent->___fltol
    _AFE_getOverCurrentDischargeCurrent->___fltol
    _AFE_UPDATE->_updateVoltages
    _updateVoltages->___fltol

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_statemachine
    _statemachine->_printotAFERegisters
    _printotAFERegisters->_snprintf
    _printcellVoltages->_snprintf
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    _statemachine->_snprintf
    _printotAFERegisters->_snprintf
    _printcellVoltages->_snprintf

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _myIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _myIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _myIsr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _myIsr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _myIsr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _myIsr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _myIsr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _myIsr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _myIsr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _myIsr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _myIsr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _myIsr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _myIsr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  373181
                                             20 BANK3      2     2      0
                  _EUSART_Initialize
                          _initClock
                            _initWDT
                          _init_GPIO
                           _init_I2C
                           _init_RGB
                          _init_TMR1
                       _statemachine
          _watchdog_timeout_shutdown
 ---------------------------------------------------------------------------------
 (1) _watchdog_timeout_shutdown                            2     2      0     402
                                              3 COMMON     2     2      0
                          _RGB_color
                       _shutdown_BMS
 ---------------------------------------------------------------------------------
 (2) _shutdown_BMS                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _statemachine                                         3     3      0  371121
                                             77 BANK2      3     3      0
                         _AFE_UPDATE
 _AFE_getOverCurrentDischargeCurrent
          _AFE_getSetCurrentSenseRes
      _AFE_getSetShortCircuitCurrent
                  _EUSART_Write_Text
                 _RGB_AWAIT_AFE_CONN
                          _RGB_color
              _beginAFEcommunication
                           _init_AFE
                  _printcellVoltages
                _printotAFERegisters
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _printotAFERegisters                                  1     1      0   99474
                                             76 BANK2      1     1      0
                  _EUSART_Write_Text
                       _readRegister
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _printcellVoltages                                    0     0      0   95215
                  _EUSART_Write_Text
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _snprintf                                            24     4     20   93127
                                             72 BANK2      4     4      0
                                              0 BANK3     20     0     20
 _AFE_getOverCurrentDischargeCurrent (ARG)
          _AFE_getSetCurrentSenseRes (ARG)
      _AFE_getSetShortCircuitCurrent (ARG)
                       _readRegister (ARG)
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (3) _vsnprintf                                           19    12      7   88202
                                             53 BANK2     19    12      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             9     4      5   87165
                                             78 BANK0      2     2      0
                                             46 BANK2      7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           52    48      4   86303
                                             76 BANK1      4     0      4
                                              0 BANK2     46    46      0
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _otoa
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    9106
                                             16 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     512
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              8     6      2     161
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _utoa                                                25    15     10    7249
                                             16 BANK0     25    15     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             18     2     16     311
                                              1 COMMON     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             26    10     16     314
                                              1 COMMON    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6    6837
                                              1 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    19      3    2280
                                             10 COMMON     2     2      0
                                              0 BANK0     20    17      3
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _otoa                                                34    24     10    6729
                                             16 BANK0     34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              67    60      7   27939
                                              9 BANK1     67    60      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2    1232
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     641
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                               8     6      2     641
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     490
                                             58 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       16    12      4     287
                                              1 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    2789
                                              0 BANK1      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     121
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     490
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              7     3      4     448
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              9     5      4     452
                                              1 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                31    21     10    7932
                                             16 BANK0     31    21     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                              4 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             19     3     16     448
                                              1 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             27    11     16     452
                                              1 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 8     5      3    5680
                                             16 BANK0      6     3      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 10     5      5    5420
                                              6 BANK0     10     5      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     164
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     6      2    1605
                                             10 COMMON     2     0      2
                                              0 BANK0      6     6      0
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1290
                                              1 COMMON     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    2025
                                              7 COMMON     2     0      2
                                              0 BANK0     13    13      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              5     3      2     207
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write_Text                                    5     3      2    2088
                                              2 COMMON     5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_AFE                                             0     0      0   45977
       _setCellOvervoltageProtection
      _setCellUndervoltageProtection
  _setOverCurrentDischargeProtection
          _setShortCircuitProtection
              _setShuntResistorValue
            _setTemperatureLimitsint
 ---------------------------------------------------------------------------------
 (3) _setTemperatureLimitsint                              8     0      8    1244
                                              0 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     852
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _setShuntResistorValue                                4     0      4      98
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) _setShortCircuitProtection                           21    15      6   12348
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _setOverCurrentDischargeProtection                   21    15      6   12348
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1094
                                             58 BANK0     12     4      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _setCellUndervoltageProtection                       21    17      4    9971
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _setCellOvervoltageProtection                        21    17      4    9968
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _beginAFEcommunication                               15    13      2    7643
                                              0 BANK0     15    13      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) _I2C_writeRegister                                    6     0      6    3248
                                              5 COMMON     6     0      6
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (2) _RGB_AWAIT_AFE_CONN                                   1     1      0     402
                                              3 COMMON     1     1      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (2) _RGB_color                                            2     0      2     402
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _AFE_getSetShortCircuitCurrent                        8     4      4    4256
                                              9 BANK1      8     4      4
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _AFE_getSetCurrentSenseRes                            4     0      4       0
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _AFE_getOverCurrentDischargeCurrent                   8     4      4    4256
                                              9 BANK1      8     4      4
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _AFE_UPDATE                                           0     0      0   18247
                     _updateVoltages
 ---------------------------------------------------------------------------------
 (3) _updateVoltages                                      13    13      0   18247
                                              9 BANK1     13    13      0
                            ___aldiv
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                             ___lmul
                           ___xxtofl
                       _readRegister
                      _read_I2C_data
                       _send_I2C_ACK
                      _send_I2C_NACK
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_ACK                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _readRegister                                         6     2      4    4259
                                              5 COMMON     6     2      4
                      _read_I2C_data
                      _send_I2C_NACK
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_stopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_startBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_data                                        2     0      2     326
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _send_I2C_controlByte                                 4     0      4     804
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (4) _send_I2C_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _read_I2C_data                                        4     2      2       0
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1006
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     676
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             11     7      4     609
                                             10 COMMON     2     2      0
                                              0 BANK1      9     5      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             26    18      8    3937
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) __Umul8_16                                            9     7      2     799
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             26    18      8    2641
                                             32 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             20    12      8    2440
                                             58 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_RGB                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_GPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initWDT                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initClock                                            0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   18    14      4    1658
                                             10 COMMON     2     2      0
                                             18 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8    1345
                                              9 COMMON     1     1      0
                                              4 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _myIsr                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     ___aldiv
       ___lmul (ARG)
   _initClock
     _internal_16
   _initWDT
   _init_GPIO
   _init_I2C
   _init_RGB
   _init_TMR1
   _statemachine
     _AFE_UPDATE
       _updateVoltages
         ___aldiv
           ___lmul (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___lmul
         ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _read_I2C_data
         _send_I2C_ACK
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
     _AFE_getOverCurrentDischargeCurrent
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _AFE_getSetCurrentSenseRes
     _AFE_getSetShortCircuitCurrent
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _EUSART_Write_Text
       _EUSART_Write
     _RGB_AWAIT_AFE_CONN
       _RGB_color
     _RGB_color
     _beginAFEcommunication
       _I2C_writeRegister
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
     _init_AFE
       _setCellOvervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setCellUndervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setOverCurrentDischargeProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShortCircuitProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShuntResistorValue
       _setTemperatureLimitsint
         ___wmul
     _printcellVoltages
       _EUSART_Write_Text
         _EUSART_Write
       _snprintf
         _AFE_getOverCurrentDischargeCurrent (ARG)
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
         _AFE_getSetCurrentSenseRes (ARG)
         _AFE_getSetShortCircuitCurrent (ARG)
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
         _readRegister (ARG)
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _vsnprintf (ARG)
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fleq
                 ___flge
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         __Umul8_16
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         __Umul8_16
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
     _printotAFERegisters
       _EUSART_Write_Text
         _EUSART_Write
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _snprintf
         _AFE_getOverCurrentDischargeCurrent (ARG)
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
         _AFE_getSetCurrentSenseRes (ARG)
         _AFE_getSetShortCircuitCurrent (ARG)
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
         _readRegister (ARG)
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _vsnprintf (ARG)
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fleq
                 ___flge
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         __Umul8_16
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         __Umul8_16
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
     _snprintf
       _AFE_getOverCurrentDischargeCurrent (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _AFE_getSetCurrentSenseRes (ARG)
       _AFE_getSetShortCircuitCurrent (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _readRegister (ARG)
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _vsnprintf (ARG)
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fleq
               ___flge
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul
                 __Umul8_16
                 ___xxtofl (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
   _watchdog_timeout_shutdown
     _RGB_color
     _shutdown_BMS

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     50      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50     16      4D      11       96.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      19      13       31.3%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     1B3      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      50      16      100.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     1B3      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              41      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Feb 23 22:20:49 2020

          __end_of_setShortCircuitProtection 07E9                               _maxCellVoltage 01BE  
                      __end_of_send_I2C_data 3E6F                                 ___fldiv@aexp 0059  
                               ___fldiv@bexp 0058                               _updateVoltages 101E  
                               ___fldiv@sign 0051                                  __CFG_CP$OFF 0000  
                               _shutdown_BMS 3E2D                                 ___awdiv@sign 0077  
                        ___wmul@multiplicand 0073                        _setShuntResistorValue 3E95  
                        __Umul8_16@word_mpld 0077                                          l303 3E40  
                                        l321 3E62                    __end_of_printcellVoltages 32FA  
                                        l250 3E4D                                          l315 3E74  
                                        l171 19F7                                          l309 3E48  
                                        l343 3FE0                                          l345 3FE5  
                                        l346 3FEA                                          l291 3EB3  
                                        l347 3FFF                                          l285 3E6B  
                                        l448 18B9                                          l712 029E  
                                        l297 3E87                                          l641 3359  
                                        l713 028B                                          l723 02D2  
                                        l644 3379                                          l804 2C7C  
                                        l812 2137                                          l661 1A5F  
                                        l741 0499                                          l662 1A73  
                                        l831 1B6D                                          l656 1A3D  
                                        l816 2152                                          l665 1B09  
                                        l657 1A44                                          l827 1B52  
                                        l852 1C70                                          l773 2302  
                                        l861 15FD                                          l863 160A  
                                        l784 23BD                                          l864 160D  
                                        l777 231D                                          l865 1610  
                                        l778 23B2                                          l866 1613  
                                        l795 2C21                                          l868 1647  
                                        l959 3F55                          __size_of_AFE_UPDATE 0003  
                                        _abs 3EED                               RGB_color@color 0071  
                                        _pad 3343                                 ___awmod@sign 0077  
                               __CFG_BORV$LO 0000                                          wreg 0009  
                               __CFG_IESO$ON 0000                                 ___flmul@aexp 0038  
                               ___flmul@bexp 0039       setCellOvervoltageProtection@voltage_mV 0032  
    setCellUndervoltageProtection@voltage_mV 0032                                 ___flmul@sign 0033  
                               ___flmul@temp 003E                                 ___flmul@prod 003A  
                               _statemachine 18BF                                 __CFG_LVP$OFF 0000  
                               ___fltol@exp1 007B                                         l1024 378F  
                                       l1202 2859                                         ?_abs 0074  
                                       l1140 36EF                                         l1302 1FF8  
                                       l1160 3585                                         l1400 2A53  
                                       l1072 211E                                         l1128 3315  
                                       l1137 36A1                                         l1129 332F  
                                       l1059 24CD                                         l1260 1E6B  
                                       l1340 1E19                                         l1316 1CED  
                                       l1407 2A67                                         l1264 1EFE  
                                       l1408 2A71                                         l1192 376D  
                                       l1281 1F81                                         l1337 1DF4  
                                       l1266 1EE1                                         l1338 1E0C  
                                       l1445 2AFE                                         l1294 1FE0  
                                       l1368 15C7                                         l1394 2A1D  
                                       l1468 2F1C                                         l5111 1CBE  
                                       l5023 354E                                         l5041 3581  
                                       l1578 3FB1                                         l5203 1DB1  
                                       l5131 1CE2                                         l5115 1CC1  
                                       l5019 3545                                         l6011 3426  
                                       l6003 341F                                         l5117 1CC9  
                                       l6005 33FA                                         l4503 1E38  
                                       l5231 1E15                                         l5207 1DB3  
                                       l5151 1D18                                         l5135 1CE5  
                                       l5039 3573                                         l5063 3719  
                                       l4601 1F1E                                         l5217 1DDC  
                                       l5145 1D0C                                         l5049 3592  
                                       l5073 3761                                         l5065 3728  
                                       l4603 1F20                                         l4611 1F2F  
                                       l4531 1E63                                         l4507 1E3B  
                                       l5171 1D5F                                         l5251 13C2  
                                       l5083 280E                                         l4621 1F79  
                                       l4509 1E43                                         l5181 1D7D  
                                       l5341 155D                                         l5333 152F  
                                       l5253 13C4                                         l4461 2033  
                                       l5085 281D                                         ?_pad 0026  
                                       l4527 1E60                                         l5335 1546  
                                       l5271 13E7                                         l5255 13CC  
                                       l4455 2008                                         l4537 1E75  
                                       l5177 1D78                                         l5345 155F  
                                       l5281 13FD                                         l5273 13EF  
                                       l4457 200C                                         l4473 3094  
                                       l4481 3EE6                                         l5089 284D  
                                       l4651 1FB2                                         l4643 1FA7  
                                       l5195 1D83                                         l5179 1D41  
                                       l5355 1588                                         l8011 2601  
                                       l4637 1FA0                                         l4629 1F93  
                                       l4645 1FA9                                         l5197 1D9A  
                                       l5365 15B4                                         l5269 13E5  
                                       l4741 365E                                         l4655 1FB4  
                                       l4575 1EE9                                         l4567 1EB1  
                                       l5359 159D                                         l4815 3F4F  
                                       l4479 3EDA                                         l7311 1A57  
                                       l4903 339E                                         l8103 2275  
                                       l8031 286A                                         l8023 268A  
                                       l8007 25DD                                         l4673 1FF0  
                                       l4593 1F0C                                         l4577 1EEB  
                                       l4585 1EF9                                         l5385 3F7C  
                                       l4833 2416                                         l7321 1AA0  
                                       l4921 33BD                                         l4737 3659  
                                       l4753 3FC9                                         l8113 080C  
                                       l6603 2A15                                         l7235 334F  
                                       l4851 2467                                         l7331 1A7B  
                                       l4931 33D8                                         l4747 3681  
                                       l8203 0A61                                         l8131 0948  
                                       l8123 0876                                         l8043 24DF  
                                       l8035 289A                                         l8019 265A  
                                       l4677 1FF4                                         l6613 2A30  
                                       l7245 335B                                         l4861 24AC  
                                       l4837 243D                                         l7317 1A6E  
                                       l4909 33A9                                         l7501 030D  
                                       l7405 012C                                         l8213 0ACA  
                                       l4687 3FAB                                         l6623 2A65  
                                       l6615 2A40                                         l6711 06E1  
                                       l7239 3357                                         l4839 2441  
                                       l4871 207E                                         l7343 1B1D  
                                       l4935 33E0                                         l4927 33CF  
                                       l4919 33B1                                         l4951 327F  
                                       l4783 2ED5                                         l7503 03DF  
                                       l7431 01AB                                         l7415 015C  
                                       l7423 018A                                         l8223 0B34  
                                       l8135 094C                                         l8055 2536  
                                       l6625 2A58                                         l6609 2A2C  
                                       l7249 3385                                         l4849 2458  
                                       l7353 1B35                                         l4961 3291  
                                       l7281 3341                                         l4785 2EE6  
                                       l7601 061A                                         l7521 0497  
                                       l7513 0453                                         l7441 0245  
                                       l8313 0F34                                         l8233 0B98  
                                       l8161 08F5                                         l8137 08B1  
                                       l8065 259B                                         l8073 2D78  
                                       l7291 30CC                                         l4859 24A0  
                                       l4883 20B2                                         l4891 20FD  
                                       l4875 20A5                                         l7339 1B15  
                                       l4947 3278                                         l7611 0616  
                                       l7523 04A0                                         l7507 0432  
                                       l7435 01DB                                         l7443 026A  
                                       l8323 0FA1                                         l8243 0C1C  
                                       l8083 2DE1                                         l8413 37F7  
                                       l8405 37DE                                         l6637 2A8C  
                                       l8501 2D30                                         l6733 07C9  
                                       l6717 078D                                         l4885 20C1  
                                       l7349 1B28                                         l4973 32AE  
                                       l4965 329D                                         l4789 2EFF  
                                       l7621 0664                                         l7613 064E  
                                       l7461 02A9                                         l7453 0298  
                                       l7437 0215                                         l7701 2BFA  
                                       l8333 0FCD                                         l8309 0F04  
                                       l8253 0C86                                         l8173 0927  
                                       l8149 08D3                                         l8093 2211  
                                       l4959 3285                                         l7535 0501  
                                       l7455 02A1                                         l7375 00B5  
                                       l7367 00A3                                         l8271 0D52  
                                       l8431 35D0                                         l8423 35B4  
                                       l8409 37E9                                         l8505 2D58  
                                       l6729 079F                                         l7289 30C3  
                                       l4889 20F1                                         l4969 32A6  
                                       l7721 2C50                                         l8329 0FC7  
                                       l8281 0DBF                                         l8257 0CB6  
                                       l8193 0A1E                                         l8441 35FE  
                                       l4995 36BB                                         l6771 27E0  
                                       l6755 27A6                                         l7555 051C  
                                       l7563 0548                                         l7571 05C2  
                                       l7491 02FB                                         l7379 00BC  
                                       l7387 00CE                                         l7715 2C32  
                                       l8267 0D22                                         l8339 0FD8  
                                       l8443 3602                                         l8365 30F0  
                                       l8541 11B4                                         l8533 116C  
                                       l6685 3FEF                                         l6749 26FA  
                                       l7637 0696                                         l7645 06B1  
                                       l7557 0536                                         l7477 02DF  
                                       l7469 02CD                                         l7397 00FE  
                                       l7733 2C80                                         l8285 0DE3  
                                       l8357 31BE                                         l8445 3609  
                                       l8429 35C8                                         l8535 116F  
                                       l6871 3018                                         l4999 36D5  
                                       l6767 27B8                                         l6679 3F35  
                                       l7583 05F0                                         l7575 05DA  
                                       l7487 02F3                                         l7479 02E3  
                                       l7663 2364                                         l7655 2315  
                                       l7719 2C43                                         l7815 1BFD  
                                       l7823 1C3F                                         l8295 0E4D  
                                       l8359 31E6                                         l8369 30FB  
                                       l7673 233F                                         l7737 2C91  
                                       l7729 2C53                                         l8395 37B0  
                                       l8387 37A0                                         l8539 112F  
                                       l8475 2FB8                                         l7739 2C9E  
                                       l7755 2195                                         l8299 0E7D  
                                       l7931 1682                                         l7915 161A  
                                       l8723 19CE                                         l8731 19E2  
                                       l8397 37BE                                         l8549 1810  
                                       l7861 2AC6                                         l7765 21F6  
                                       l7749 214A                                         l7933 1694  
                                       l7941 16C7                                         l7909 1616  
                                       l8479 2FE0                                         l7863 2ACB  
                                       l7855 2AB6                                         l7847 2A9A  
                                       l7599 0612                                         l7767 2171  
                                       l7775 21FB                                         l7839 1C8E  
                                       l7791 1B7D                                         l7935 169E  
                                       l7919 164E                                         l8649 2BCC  
                                       l7865 2ADF                                         l7689 23D6  
                                       l7785 1B65                                         l7953 1711  
                                       l7795 1B95                                         l7955 1723  
                                       l7963 1756                                         l8755 313A  
                                       l7869 2B02                                         l7973 17B9  
                                       l7957 172D                                         l8861 1635  
                                       l8669 18C0                                         l7879 2B31  
                                       l8863 2AD7                                         l7799 1BAF  
                                       l7983 28EE                                         l8865 3FF4  
                                       l7995 2974                                         l7987 291E  
                                       l7899 15FF                                         l8859 19EC  
                                       l8699 1921                                         l7999 29A4  
                                       STR_1 3976                                 __CFG_WDTE$ON 0000  
                                       STR_2 3870                                         STR_3 38F7  
                                       STR_4 383B                                         STR_5 39C1  
                                       STR_6 394C                                         STR_7 38CB  
                                       STR_8 3802                                         STR_9 3922  
                                       _BRGH 0CF2                                         _CREN 0CEC  
                                       u5040 1ED0                                         u5050 1ED1  
                                       u5035 1EC5                                         u5205 1F94  
                                       u5305 1FCB                                         u5163 1F41  
                                       u5155 1F24                                         u5085 1EEF  
                                       u7005 1576                                         u7015 1591  
                                       u6055 33B4                                         u6400 3709  
                                       u7025 15A7                                         u5530 3679  
                                       u6315 3557                                         u6075 33BE  
                                       u6155 3288                                         u5540 367A  
                                       u5620 2E9C                                         u5700 3F99  
                                       u6085 33C8                                         u5525 366B  
                                       u5605 2E89                                         u5710 3F9A  
                                       u6095 33D0                                         u6175 3297  
                                       u5385 3FB2                                         u6345 3574  
                                       u5465 3EF6                                         u6185 329E  
                                       u5625 2E98                                         _SCS0 04C8  
                                       u5475 362F                                         u6435 374E  
                                       _SCS1 04C9                                         u5645 2EC1  
                                       u5750 3ECE                                         u6615 1D59  
                                       u6375 3589                                         u5495 3648  
                                       u5760 3ECF                                         u6625 1D6D  
                                       u5665 2EEF                                         u5850 2448  
                                       u5595 2E6E                                         u6475 283B  
                                       u5685 2F08                                         u6655 1D86  
                                       u4895 2031                                         u6745 1DCA  
                                       u6585 1D49                                         u6905 151E  
                                       u5785 3F56                                         u6755 1DE5  
                                       u6675 1D8F                                         u6595 1D50  
                                       u6915 1532                                         u9235 2A79  
                                       u9155 2A39                                         u5795 3F5B  
                                       u9500 300F                                         u6765 1DFE  
                                       u5885 248D                                         u9510 301D  
                                       u6935 153B                                         u9175 2A4D  
                                       u9520 301E                                         u6865 1473  
                                       u9345 07B8                                         u5985 20DF  
                                       u6875 14A2                                         u9195 2A5F  
                                       u9700 07F8                                         u6885 14F8  
                                       u9710 07F9                                         u6895 150F  
                                       u9800 305B                                         u9385 27D1  
                                       u9490 300E                                         u9680 3F13  
                                       u9760 3038                                         u9745 3365  
                                       u9690 3F14                                         u9770 3039  
                                       u9915 1A4F                                         u9860 1A13  
                                       u9845 333D                                         u9870 1A14  
                                       u9790 305A                                         u9945 1B13  
                                       _TMR1 0016                                         u9965 1A8F  
                                       u9975 1A9B                                         _SPEN 0CEF  
                                       _TXEN 0CF5                                         _SYNC 0CF4  
                ??_watchdog_timeout_shutdown 0073                                 __CFG_WRT$OFF 0000  
                                       abs@a 0074                                         _dbuf 02A0  
                                       _atoi 2A95                                         _ctoa 30B6  
                                       _main 3119                                         _dtoa 19F8  
                                       _prec 01B6                                         _otoa 22FB  
                                       _nout 01B2                                         pad@i 002C  
                                       pad@p 0029                                         fsr0h 0005  
                                       fsr1h 0007                                         indf0 0000  
                                       fsr0l 0004                                         indf1 0001  
                                       fsr1l 0006                                         pad@w 002E  
                                       _stoa 2BDF                                         btemp 007E  
                                       _utoa 2130                                         _xtoa 1B4B  
                              ___fpclassifyf 360E                                         start 001E  
                            ___fldiv@new_exp 0052                                 _tolower$1866 0079  
                     __end_of_updateVoltages 11B7                     __end_of_send_I2C_stopBit 3E4C  
                                      ??_abs 0076                                        ??_pad 002B  
                       _send_I2C_controlByte 3E81                                ?_EUSART_Write 0070  
                              ___fltol@sign1 007A                              __end_of___aldiv 3800  
                            __end_of___aodiv 24DF                                        ?_atoi 0077  
                                      ?_ctoa 0030                              __end_of___fladd 2000  
                                      ?_main 0070                                        ?_dtoa 0030  
                            __end_of___aomod 2130                I2C_writeRegister@slaveAddress 0075  
                            __end_of___fldiv 1E1E                              __end_of___awdiv 33E5  
                            __end_of___flneg 3E81                                        STR_10 389E  
                                      STR_11 399E                                        STR_20 3A75  
                                      STR_12 39C4                                        STR_13 39C1  
                                      STR_21 3A9F                                        STR_22 3AB3  
                                      STR_14 3A8A                                        STR_31 3B3A  
                                      STR_23 3AC7                                        STR_15 3A36  
                                      STR_32 3B4E                                        STR_24 3ADA  
                                      STR_16 3A0A                                        STR_41 3B4A  
                                      STR_25 3AEC                                        STR_17 3A20  
                                      STR_26 39C1                                        STR_50 3B4B  
                                      STR_18 3A4B                                        STR_35 3B42  
                                      STR_27 3B36                                        STR_19 3A60  
                                      STR_28 3B46                              __end_of___awmod 32B3  
                                      STR_37 3B42                                        STR_53 3B68  
                                      STR_46 3B43                                        STR_62 3B6B  
                                      STR_55 3B68                                        STR_71 3B6E  
                                      STR_39 3B4A                                        STR_64 3B6B  
                                      STR_73 3B6E                                        STR_57 3B71  
                                      STR_66 3B74                                        STR_59 3B71  
                                      STR_83 3B57                                        STR_91 3B80  
                                      STR_68 3B74                                        STR_76 3B56  
                                      STR_93 3B80                                        STR_78 3B56  
                                      STR_86 3B7D                                        STR_88 3B7D  
                                      STR_96 3B52                              __end_of___flmul 15D4  
                                      STR_98 3B52                                        ?_otoa 0030  
                            __end_of___flsub 3180                              __end_of___fltol 35A1  
                                      ?_stoa 0020                                        u10110 014D  
                                      ?_utoa 0030                                        u11000 2B16  
                                      u10120 014E                                        u11010 2B17  
                                      u11100 16BD                                        u10070 00EF  
                                      u10080 00F0                                        u10305 0317  
                                      u10225 02B6                                        u10235 02C9  
                                      u11140 174B                                        u10510 0689  
                                      u11150 174C                                        u10520 068A  
                                      u11320 257C                                        u10425 05CC  
                                      u11330 257D                                        u11090 16BC  
                                      u10435 05D8                                        u10195 0296  
                            __end_of___lodiv 377E                                        u12027 3143  
                            ___awdiv@divisor 0071                                        u10605 235F  
                                      u12037 3F29                                        u12047 18EC  
                                      ?_xtoa 0030                                        u10640 2BE9  
                                      u10705 2C5D                                        u12057 192D  
                                      u10555 230D                                        u12067 19DB  
                                      u10565 2396                                        u10725 2C9C  
                                      u12077 11BB                                        u12087 3EAA  
                                      u10495 0657                                        u10575 23BB  
                                      u10815 1B5D                                        u10840 1BC6  
                                      u10745 2142                                        u10905 1C23  
                                      u10850 1BC7                                        u11715 37B3  
                                      u10595 2353                                        u10675 2C1A  
                                      u10915 1C49                                        u10835 1BA9  
                                      u10870 1BE6                                        u11735 37BF  
                                      u11655 30FC                                        u10695 2C4E  
                                      u10775 2184                                        u10935 1C5F  
                                      u10880 1BE7                                        u11745 37D3  
                                      u11665 3103                                        u11905 113D  
                                      u10785 2190                                        u10945 1C6B  
                                      u11825 35F5                                        u11755 37DF  
                                      u11915 1826                                        u11835 2F92  
                                      u11845 2FD0                                        u11935 188C  
                                      u11945 2B40                                        u11865 2D11  
                            __end_of___lomod 286A                                        u11955 2B57  
                                      u11875 2D48                                        u11975 2B8D  
                                      u11895 1166                                        u11985 2BA4  
                                      _IRCF0 04CB                                        _IRCF1 04CC  
                                      _IRCF2 04CD                                        _IRCF3 04CE  
                     __size_of_read_I2C_data 0010                                        i1l153 001C  
                            ___awdiv@counter 0076                                 vfpfcnvrt@fmt 00EE  
                               vfpfcnvrt@llu 0146                                        _SPBRG 019B  
                         __size_of_RGB_color 0021                          ___lmul@multiplicand 0075  
                             __CFG_FCMEN$OFF 0000                              __end_of_initWDT 3006  
                                      _flags 01B8                                        _errno 01B0  
                                      _fputc 2000                              __end_of_isalpha 3FA1  
                                      _fputs 3090                                        _myIsr 0004  
                            __end_of_isdigit 3ED6                          _printotAFERegisters 11B7  
                                      atoi@n 002B                                        pad@fp 0026  
                                      atoi@s 0077                                        _width 01B4  
                                      ctoa@c 0032                                        _putch 0003  
                                      ctoa@w 0034                                        dtoa@d 0032  
                                      dtoa@i 004D                                        dtoa@n 0045  
                                      dtoa@p 003F                                        dtoa@s 0043  
                                      dtoa@w 0041                              __end_of_islower 0800  
                            __end_of_isspace 3F84                              updateVoltages@i 00B4  
                             __CFG_BOREN$OFF 0000                              __end_of_isupper 3F1B  
                                      otoa@d 0032                                        otoa@i 0050  
                                      otoa@n 0048                                        otoa@p 0042  
                                      otoa@t 0044                                        otoa@w 0046  
                                      stoa@i 002A                                        stoa@l 0032  
                                      stoa@p 0030                                        stoa@s 0022  
                                      stoa@w 002C                                        utoa@d 0032  
                                      utoa@i 0047                                        utoa@n 003F  
                                      utoa@p 003B                                        utoa@w 003D  
                                      status 0003                                        wtemp0 007E  
                             ?___fpclassifyf 0071                              __end_of_tolower 304A  
                                      xtoa@c 0055                                        xtoa@d 0032  
                                      xtoa@i 0053                                        xtoa@n 004B  
                                      xtoa@p 0047                                        xtoa@w 0049  
                                      xtoa@x 003A                            _SCD_delay_setting 3B2E  
                            __end_of_strncmp 3437                              __end_of_toupper 306C  
                           ___lodiv@dividend 0028                                 ?_internal_16 0070  
                               _toupper$1881 0079                               __CFG_MCLRE$OFF 0000  
                            __initialization 0020                              ?_updateVoltages 0070  
      setTemperatureLimitsint@maxCharge_degC 0026                                 __end_of_atoi 2B36  
                               __end_of_ctoa 30E7                                 __end_of_main 314B  
                               __end_of_dtoa 1B4B                                 __end_of_otoa 23EC  
                               __end_of_stoa 2CA4                                 __end_of_utoa 2211  
                               __end_of_xtoa 1CA4                         ?_printotAFERegisters 0070  
                   __end_of_UV_delay_setting 3B2E                       ?_setShuntResistorValue 0071  
                     beginAFEcommunication@i 002D                        ?_send_I2C_controlByte 0071  
                             ??_EUSART_Write 0071                    _watchdog_timeout_shutdown 3F1B  
                             __CFG_LPBOR$OFF 0000                            _ATmega328_address 3800  
                                     ??_atoi 0020                                       ??_ctoa 0033  
                                     ??_main 01EB                                       ??_dtoa 003A  
                                     ??_otoa 003A                   __size_of_printcellVoltages 0047  
                                     ??_stoa 007A                                       ??_utoa 003A  
                                     ??_xtoa 003B                               __CFG_PLLEN$OFF 0000  
                           ___lodiv@quotient 0072                                ?_readRegister 0075  
                                     ?_fputc 0071                                       ?_fputs 007A  
                                     STR_103 3B53                                       STR_111 3B7A  
                                     STR_113 3B7A                                       STR_106 3B77  
                                     STR_123 3B5B                                       STR_131 3B86  
                                     ?_myIsr 0070                                       STR_108 3B77  
                                     STR_116 3B5A                                       STR_140 3B3E  
                                     STR_133 3B86                                       STR_142 3B3E  
                                     STR_118 3B5A                                       STR_126 3B83  
                                     STR_151 3B3F                                       STR_160 3B62  
                                     STR_128 3B83                                       STR_136 3B5E  
                                     STR_138 3B5E                                       STR_154 3B89  
                                     STR_147 3B5F                                       STR_163 3B8C  
                                     STR_156 3B89                                       STR_165 3B8C  
                                     STR_158 3B62                                       STR_167 3B65  
                                     STR_169 3B65                             ___awdiv@dividend 0073  
                             __CFG_ZCDDIS$ON 0000                                       ?_putch 0070  
              __end_of_OCD_threshold_setting 3A0A                                       _RC1REG 0199  
                  __end_of_SCD_delay_setting 3B36                                vfpfcnvrt@done 012D  
                               ??_AFE_UPDATE 007C                                       _TX1REG 019A  
                                     _SPLLEN 04CF       setOverCurrentDischargeProtection@i_975 00AA  
                                     _SSPADD 0212                                       _TRISC6 0476  
                                     _TRISC7 0477                                       _SSPBUF 0211  
                                     u582lld 2414                                       u593lld 207C  
                              _read_I2C_data 3EAF                             __end_of___xxtofl 2A95  
                             __CFG_PWRTE$OFF 0000                            __end_of_RGB_color 4000  
                               vfprintf@cfmt 0153                                       ___flge 3686  
                                     ___fleq 32FA                        ??_printotAFERegisters 016C  
                                     ___lmul 30E7                                    ??___aldiv 0079  
                                  ??___aodiv 0071                               _minCellVoltage 01BC  
                                  ??___fladd 0062                                    ??___aomod 0071  
                                     ___wmul 3F4D                                    ??___fldiv 0048  
                                  ??___awdiv 0075                                    ??___flneg 0075  
                             __CFG_STVREN$ON 0000                                    ??___awmod 0075  
                                  ??___flmul 002E                                    ??___flsub 007A  
                                  ??___fltol 00A4                                    ??___lodiv 0071  
                           __end_of_init_I2C 3EAF                                    ??___lomod 0071  
                           __end_of_init_AFE 348D                                       _efgtoa 0063  
                           __end_of_init_RGB 3E35                    __end_of_ATmega328_address 3802  
                                     _floorf 2E4D                             ___awdiv@quotient 0078  
                      _beginAFEcommunication 180B                              ___awmod@divisor 0071  
                            ___awmod@counter 0076                                       pad@buf 0028  
                                     ctoa@fp 0030                                       dtoa@fp 0030  
                                     _strcpy 3FC0                                       _strlen 3ED6  
                                  ??_initWDT 0071                                       fputc@c 0071  
                                     fputs@c 0022                                       fputs@i 0023  
                                     fputs@s 0025                                    ??_isalpha 0073  
                                  ??_isdigit 0073                           __end_of_AFE_UPDATE 3E2D  
                         __size_of__Umul8_16 001F                              ___fpclassifyf@e 0020  
                            ___fpclassifyf@u 0022                              ___fpclassifyf@x 0071  
                                  ??_islower 0073                                    ??_isspace 0073  
                        _updateVoltages$2113 00AC                                       otoa@fp 0030  
                             ??_readRegister 0079                                    ??_isupper 0073  
                                     stoa@cp 002E                                       stoa@fp 0020  
                                     putch@c 0070                             __end_of_vfprintf 31EF  
                                     utoa@fp 0030              ??_setCellUndervoltageProtection 0036  
                           __end_of_snprintf 3090                                    ??_tolower 0020  
                                     xtoa@fp 0030                                    ??_strncmp 0077  
                                  ??_toupper 0020                                   ___flge@ff1 005A  
                                 ___flge@ff2 005E                              ??___fpclassifyf 0075  
                               ___xxtofl@arg 0022                                 ___xxtofl@exp 0021  
                               ___xxtofl@val 0071                                   ___fleq@ff1 0071  
                                 ___fleq@ff2 0075                      __end_of__initialization 005F  
                             ?_read_I2C_data 0071                                   ___flneg@f1 0071  
                                 ___fltol@f1 00A0                     ?_setTemperatureLimitsint 0020  
                              ?_send_I2C_ACK 0070     setTemperatureLimitsint@minDischarge_degC 0020  
                             __pcstackCOMMON 0070                       ??_send_I2C_controlByte 0075  
                               __pidataBANK4 3E35                                __end_of_fputc 2054  
                              __end_of_fputs 30B6                                __end_of_myIsr 001E  
                               _cellVoltages 0220                                __end_of_putch 0004  
                                 _batCurrent 022E                           _RGB_AWAIT_AFE_CONN 3006  
                                 _batVoltage 01AC                          ?_RGB_AWAIT_AFE_CONN 0070  
                                    ??_fputc 0075                                      ??_fputs 0020  
                                    ??_myIsr 0070                                      ??_putch 0071  
          setShortCircuitProtection@delay_us 006A                                   __pbssBANK3 01A0  
                                 __pbssBANK4 0220                                   __pbssBANK5 02A0  
                       __end_of_EUSART_Write 3E54                           __size_of_init_GPIO 003B  
                         __size_of_initClock 0003                           __size_of_init_TMR1 000B  
                        statemachine@success 016F                               ??_send_I2C_ACK 0071  
                          __end_of__Umul8_16 3FC0                                   __pmaintext 3119  
                       ??_RGB_AWAIT_AFE_CONN 0073                         __size_of_internal_16 0009  
            setShortCircuitProtection@scaler 00A0                                      ?___flge 005A  
                                    ?___fleq 0071                            ?_send_I2C_stopBit 0070  
                                    ?___lmul 0071                                      ?___wmul 0071  
      setTemperatureLimitsint@minCharge_degC 0024                              __CFG_PPS1WAY$ON 0000  
                 ?_setShortCircuitProtection 0066                                   __pintentry 0004  
                                    ?_efgtoa 00A9                       ?_beginAFEcommunication 0020  
                                    ?_floorf 005A                           ??_send_I2C_stopBit 0071  
                             ___lmul@product 0020                                      ?_strcpy 0071  
                                    ?_strlen 0071                      _shuntResistorValue_mOhm 022A  
                                  ?___xxtofl 0071               setShortCircuitProtection@i_966 00AA  
                         __size_of_vfpfcnvrt FA2C           __size_of_watchdog_timeout_shutdown 0018  
                                    _PPSLOCK 0E0F                       __size_of_send_I2C_NACK 0009  
                           ___lomod@dividend 0028                              ??_read_I2C_data 0073  
                     __size_of_send_I2C_data 0009                                    ?_init_I2C 0070  
                                  ?_init_AFE 0070                                    ?_init_RGB 0070  
       __end_of_setCellOvervoltageProtection 2D78        __size_of_setCellOvervoltageProtection 00D4  
               _setCellOvervoltageProtection 2CA4                             ??_updateVoltages 00A9  
      __end_of_setCellUndervoltageProtection 3000       __size_of_setCellUndervoltageProtection 00DB  
              _setCellUndervoltageProtection 2F25                     readRegister@recievedData 0079  
                    ??_setShuntResistorValue 0075                           __size_of_vsnprintf 006D  
                       __end_of_readRegister 31B6                                      ___aldiv 377E  
                                    _adcGain 01D5                              __size_of___flge 007C  
                            __size_of___fleq 0049                                      ___aodiv 23EC  
                                    ___fladd 1E1E                                      ___aomod 2054  
                                    ___fldiv 1CA4                                      ___awdiv 3394  
                                    ___flneg 3E78                              __size_of___lmul 0032  
                                    ___awmod 326E                                      ___flmul 13A8  
                                    ___flsub 314B                                      ___fltol 353B  
                            __size_of___wmul 001B                                      ___lodiv 3702  
                                    ___lomod 2801                                    ?_vfprintf 014E  
                            __size_of_efgtoa 066F                                    ?_snprintf 01D7  
                              _messageBuffer 2771              ??_AFE_getSetShortCircuitCurrent 00AD  
                            __size_of_floorf 00D8                                      __ptext1 3F1B  
                                    __ptext2 3E2D                                      __ptext3 18BF  
                                    __ptext4 11B7                                      __ptext5 32B3  
                                    __ptext6 306C                                      __ptext7 35A1  
                                    __ptext8 31B6                                      __ptext9 15D4  
                          __end_of_init_GPIO 322A                            __end_of_initClock 3E2A  
                          __end_of_init_TMR1 180B                              __size_of_strcpy 001F  
                            __size_of_strlen 0017                                    _T1CONbits 0018  
                                    _initWDT 3000                                 __size_of_abs 0017  
         __size_of_AFE_getSetCurrentSenseRes 000A                                 __size_of_pad 0051  
                                    _isalpha 3F84                                      _isdigit 3EBF  
                                 ??___xxtofl 0075                             ___awmod@dividend 0073  
                 ?_AFE_getSetCurrentSenseRes 0071                             ___aldiv@dividend 0028  
                                    _islower 07E9                                      _isspace 3F68  
  __end_of_setOverCurrentDischargeProtection 2800   __size_of_setOverCurrentDischargeProtection 0115  
        ??_setOverCurrentDischargeProtection 006C           ?_setOverCurrentDischargeProtection 0066  
          _setOverCurrentDischargeProtection 26EB                                      _isupper 3F04  
                                    efgtoa@c 00AF                                      efgtoa@d 00CC  
                                    efgtoa@e 00E4                                      efgtoa@f 00AB  
                                    efgtoa@g 00E0                                      efgtoa@h 00D6  
                                    efgtoa@i 00DE                                      efgtoa@l 00DA  
                                    efgtoa@m 00C8                                      efgtoa@n 00E6  
                                    efgtoa@p 00D0                                      efgtoa@t 00C4  
                                    efgtoa@u 00E8                                      efgtoa@w 00D3  
                                    atoi@neg 0024                                      _tolower 3028  
                                    clrloop0 0801            __end_of_watchdog_timeout_shutdown 3F33  
                                    _strncmp 33E5                                      _toupper 304A  
                       end_of_initialization 005F                                      floorf@e 0068  
                                    floorf@m 0064                                      floorf@u 006A  
                                    floorf@x 005A                                   ??_init_I2C 0071  
                                 ??_init_AFE 007B                                   ??_init_RGB 0071  
                                    fputc@fp 0073                                      fputs@fp 007A  
              ?_setCellOvervoltageProtection 0032                            _EUSART_Initialize 2B36  
                         ?_EUSART_Initialize 0032                            __end_of_vfpfcnvrt 1000  
                                 efgtoa@mode 00D5                                   efgtoa@sign 00CE  
                              _send_I2C_NACK 3E5D                             ___aldiv@quotient 002E  
                 send_I2C_controlByte@RW_bit 0073                                      psplit$0 5000A0  
                                    psplit$1 A000A1                                      psplit$2 A100A2  
                                    psplit$3 A200A3                                      psplit$4 A300A4  
                                    psplit$5 A400A5                                      psplit$6 A500A6  
                                    psplit$7 A600A7                                _send_I2C_data 3E66  
                                  _RGB_color 3FDF                                   ??_vfprintf 006E  
                         EUSART_Initialize@x 007A                                   ??_snprintf 0168  
                                    strcpy@d 0077                                      strlen@a 0073  
                                    strcpy@s 0075                                      strlen@s 0071  
                        ??_EUSART_Initialize 0036                                  ___fladd@grs 006D  
                           __CFG_FOSC$INTOSC 0000                                ___xxtofl@sign 0020  
                                  _TRISAbits 008C                         __end_of_send_I2C_ACK 3E78  
                                  _TRISBbits 008D                                    _TRISCbits 008E  
                                  _TRISEbits 0090                        __size_of_EUSART_Write 0008  
          __end_of_AFE_getSetCurrentSenseRes 3E95                            __end_of_vsnprintf 360E  
                                ___fldiv@grs 0054                                  ___fldiv@rem 004D  
              __end_of_SCD_threshold_setting 3B1E                                    _RXPPSbits 0E24  
                          _I2C_writeRegister 1000                                  ___flmul@grs 0034  
                  __end_of_EUSART_Initialize 2BDF                        _OCD_threshold_setting 39EA  
                __end_of_printotAFERegisters 13A8                           ?_I2C_writeRegister 0075  
           beginAFEcommunication@commSuccess 002B                               ?_send_I2C_NACK 0070  
                   readRegister@slaveAddress 0075               ?_setCellUndervoltageProtection 0032  
                             ?_send_I2C_data 0071                          ??_I2C_writeRegister 007B  
                              ?_shutdown_BMS 0070   __end_of_AFE_getOverCurrentDischargeCurrent 34E4  
__size_of_AFE_getOverCurrentDischargeCurrent 0057         ??_AFE_getOverCurrentDischargeCurrent 00AD  
        ?_AFE_getOverCurrentDischargeCurrent 00A9           _AFE_getOverCurrentDischargeCurrent 348D  
                                 ?_RGB_color 0071                               __end_of___flge 3702  
                             __end_of___fleq 3343                               __end_of___lmul 3119  
                                vfpfcnvrt@ap 00EF                                  vfpfcnvrt@cp 012C  
                                vfpfcnvrt@ct 0135                                  vfpfcnvrt@fp 00EC  
                                vfpfcnvrt@ll 013C                               __end_of___wmul 3F68  
                                vfpfcnvrt@vp 0144                               __end_of_efgtoa 06D2  
                               _EUSART_Write 3E4C                               __end_of_floorf 2F25  
                I2C_writeRegister@regAddress 0077                                   floorf@F524 01A0  
              setShuntResistorValue@res_mOhm 0071             __size_of_setTemperatureLimitsint 0044  
                             __end_of_strcpy 3FDF                               __end_of_strlen 3EED  
      __end_of_AFE_getSetShortCircuitCurrent 353B       __size_of_AFE_getSetShortCircuitCurrent 0057  
              _AFE_getSetShortCircuitCurrent 34E4                          start_initialization 0020  
                            ___lodiv@divisor 0020                              ___lodiv@counter 007A  
                              ?_statemachine 0070                                  __end_of_abs 3F04  
                                __end_of_pad 3394                            _minCellTempCharge 01C8  
              setCellOvervoltageProtection@i 0045                         _maxCellTempDischarge 01C2  
                       updateVoltages@adcVal 00B0                         _minCellTempDischarge 01C6  
                  __end_of_I2C_writeRegister 101E       _setOverCurrentDischargeProtection$2112 00A4  
                          pnum$text9_split_1 00A0                            pnum$text9_split_2 00A1  
                          pnum$text9_split_3 00A2                            pnum$text9_split_4 00A3  
                          pnum$text9_split_5 00A4                            pnum$text9_split_6 00A5  
                          pnum$text9_split_7 00A6                            pnum$text9_split_8 00A7  
                      __end_of___fpclassifyf 3686          setCellOvervoltageProtection@delay_s 0034  
       setCellUndervoltageProtection@delay_s 0034                            _EUSART_Write_Text 3F33  
                      __size_of_readRegister 0036                           ?_EUSART_Write_Text 0072  
                    ??_beginAFEcommunication 0022                                  vfprintf@fmt 0150  
                                   ??___flge 0062                                     ??___fleq 0020  
                                   ??___lmul 0079                               ??_shutdown_BMS 0071  
                                   ??___wmul 0075               ??_setCellOvervoltageProtection 0036  
        setCellOvervoltageProtection@ov_trip 0044                                     ??_efgtoa 00B0  
                                  __Umul8_16 3FA1                  ??_setShortCircuitProtection 006C  
                                __pdataBANK4 0232                                     ??_floorf 005E  
                        ??_EUSART_Write_Text 0074                __size_of_send_I2C_controlByte 000A  
       setCellUndervoltageProtection@uv_trip 0044                                     ??_strcpy 0073  
                                   ??_strlen 0073                                    ___fladd@a 005E  
                                  ___fladd@b 005A                                 vsnprintf@cnt 0160  
                               vsnprintf@fmt 0159                                    ___fldiv@a 0040  
                                  ___fldiv@b 0044                                  __pbssBIGRAM 2771  
                                  _adcOffset 01CA                                    ___flmul@a 002A  
                                  ___flmul@b 0026                                  __pbssCOMMON 007C  
                                  ___flsub@a 00A0                                    ___flsub@b 00A4  
                             ??_statemachine 016D                                    ___latbits 0003  
           send_I2C_controlByte@BlockAddress 0071                                   myIsr@count 01CF  
                              __pcstackBANK0 0020                                __pcstackBANK1 00A0  
                              __pcstackBANK2 0120                                __pcstackBANK3 01D7  
                           ___aodiv@dividend 0028                    __size_of_send_I2C_stopBit 0008  
                                snprintf@fmt 01DB                            __size_of___xxtofl 0096  
                               _readRegister 3180     setTemperatureLimitsint@maxDischarge_degC 0022  
                  __end_of_EUSART_Write_Text 3F4D                   __size_of_EUSART_Initialize 00A9  
                              ??_internal_16 0071                                    _atoi$1743 0026  
                                  _atoi$1744 002A                                    _atoi$1745 0028  
                           _OV_delay_setting 3B1E                            __size_of_init_I2C 0010  
                      I2C_writeRegister@data 0079                              ??_send_I2C_NACK 0071  
                          __size_of_init_AFE 0056                            __size_of_init_RGB 0005  
                                _efgtoa$1232 00BC                                  _efgtoa$1227 00B8  
                                _efgtoa$1236 00BE                                  _efgtoa$1228 00BA  
                                _efgtoa$1237 00C0                                  _efgtoa$1238 00C2  
                          _send_I2C_startBit 3E3C                                    _dtoa$1204 003D  
                            ??_send_I2C_data 0073                  __size_of_RGB_AWAIT_AFE_CONN 0022  
             __size_of_setShuntResistorValue 000A                                     ?___aldiv 0024  
                                   ?___aodiv 0020                           ?_send_I2C_startBit 0070  
                                   ?___fladd 005A                __end_of_setShuntResistorValue 3E9F  
                                   ?___aomod 0020                                     ?___fldiv 0040  
                                   ?___awdiv 0071                             ___aodiv@quotient 0074  
                                   ?___flneg 0071                                     ?___awmod 0071  
                                   ?___flmul 0026                                     ?___flsub 00A0  
                                   ?___fltol 00A0                                     ?___lodiv 0020  
                                   ?___lomod 0020                                  ??_RGB_color 0073  
                                 ?__Umul8_16 0071                    EUSART_Initialize@baudrate 0032  
                      __size_of_send_I2C_ACK 0009                            __size_of_vfprintf 0039  
                        ??_send_I2C_startBit 0071                            __size_of_snprintf 0024  
             BQ76920@shuntResistorValue_mOhm 01A8                              ___lomod@divisor 0020  
                                   ?_initWDT 0070                              ___lomod@counter 0072  
                                   ?_isalpha 0071                                     ?_isdigit 0071  
                                   ?_islower 0071                                     ?_isspace 0071  
                ??_AFE_getSetCurrentSenseRes 0075                                    _init_GPIO 31EF  
                                   ?_isupper 0071                                    _initClock 3E27  
                                  _init_TMR1 1800                                    _currState 01D1  
                                   ?_tolower 0077                    _setShortCircuitProtection 06D2  
                 __size_of_I2C_writeRegister 001E                               __size_of_fputc 0054  
                             __size_of_fputs 0026                               __size_of_myIsr 001A  
                                   ?_strncmp 0071               ?_AFE_getSetShortCircuitCurrent 00A9  
                                   ?_toupper 0077                               __size_of_putch 0001  
                            ___aldiv@divisor 0024                        __end_of_read_I2C_data 3EBF  
                            ___aldiv@counter 002C                               ___wmul@product 0075  
                            BQ76920@protect1 01CE                              BQ76920@protect2 01CD  
                            BQ76920@protect3 01CC                                     _LATAbits 010C  
                                   _LATEbits 0110                    __end_of_send_I2C_startBit 3E44  
                                  clear_ram0 0800                                    _tmr1_flag 01D0  
                                   _PIE1bits 0091           setOverCurrentDischargeProtection@i 00A8  
                                   _PIR1bits 0011                                 _send_I2C_ACK 3E6F  
                 setShortCircuitProtection@i 00A8                          __end_of_internal_16 3E5D  
                                  _vfpfcnvrt 15D4                                    _xtoa$1274 0043  
                                  _xtoa$1275 0045                            ___wmul@multiplier 0071  
                    _setTemperatureLimitsint 322A                                   ?_init_GPIO 0070  
                                 ?_initClock 0070                                   ?_init_TMR1 0070  
                      send_I2C_data@databyte 0071                                 _isspace$1783 0075  
                                 vfpfcnvrt@c 0145                                   vfpfcnvrt@f 0138  
                          ___lmul@multiplier 0071                         __end_of_shutdown_BMS 3E30  
                 __size_of_EUSART_Write_Text 001A                   ?_watchdog_timeout_shutdown 0070  
                                  _vsnprintf 35A1                                   _AFE_UPDATE 3E2A  
                          _OCD_delay_setting 3AFE                    _AFE_getSetCurrentSenseRes 3E8B  
                       __end_of_statemachine 19F8                                _numberOfCells 01C0  
                                 vfprintf@ap 0152                                   vfprintf@fp 014E  
                                ??__Umul8_16 0073                             __size_of___aldiv 0082  
                           __size_of___aodiv 00F3                             __size_of___fladd 01E2  
                    __size_of_updateVoltages 0199                             __size_of___aomod 00DC  
                           __size_of___fldiv 017A                             __size_of___awdiv 0051  
             _setShortCircuitProtection$2111 00A4                             __size_of___flneg 0009  
                           __size_of___awmod 0045                                  vsnprintf@ap 015B  
                           __size_of___flmul 022C                             __size_of___flsub 0035  
                           __size_of___fltol 0066                       readRegister@regAddress 0077  
                           __size_of___lodiv 007C                             __size_of___lomod 0069  
                                 ?_vfpfcnvrt 00EC                                   snprintf@ap 016B  
                            ___aodiv@divisor 0020                              ___aodiv@counter 0072  
                                 _ANSELBbits 018D                                   _ANSELCbits 018E  
                         ___fpclassifyf@F463 01A4                                     ___xxtofl 29FF  
setOverCurrentDischargeProtection@current_mA 0066                             __size_of_initWDT 0006  
                           __size_of_isalpha 001D                             __size_of_isdigit 0017  
                           _send_I2C_stopBit 3E44                             __size_of_islower 0017  
                           __size_of_isspace 001C                                     __ptext10 1B4B  
                                   __ptext11 304A                                     __ptext20 0063  
                                   __ptext12 07E9                                     __ptext21 3028  
                                   __ptext13 3F84                                     __ptext30 3394  
                                   __ptext22 3F04                                     __ptext14 2130  
                                   __ptext31 19F8                                     __ptext23 3FC0  
                                   __ptext15 2801                                     __ptext40 0003  
                                   __ptext32 3EED                                     __ptext24 2E4D  
                                   __ptext16 3702                                     __ptext41 2A95  
                                   __ptext33 2054                                     __ptext25 360E  
                                   __ptext17 33E5                                     __ptext50 06D2  
                                   __ptext42 3F68                                     __ptext34 23EC  
                                   __ptext26 314B                                     __ptext18 2BDF  
                                   __ptext51 26EB                                     __ptext43 3EBF  
                                   __ptext35 30B6                                     __ptext27 3E78  
                                   __ptext19 22FB                                     __ptext60 3E8B  
                                   __ptext52 3686                                     __ptext44 3F33  
                                   __ptext36 3343                                     __ptext28 32FA  
                                   __ptext61 348D                                     __ptext53 2F25  
                                   __ptext45 3E4C                                     __ptext37 3ED6  
                                   __ptext29 326E                                     __ptext70 3E5D  
                                   __ptext62 3E2A                                     __ptext54 2CA4  
                                   __ptext46 3437                                     __ptext38 3090  
                                   __ptext71 3EAF                                     __ptext63 101E  
                                   __ptext55 180B                                     __ptext47 322A  
                                   __ptext39 2000                                     __ptext80 3E30  
                                   __ptext72 29FF                                     __ptext64 3E6F  
                                   __ptext56 1000                                     __ptext48 3F4D  
                                   __ptext81 3E9F                                     __ptext73 30E7  
                                   __ptext65 3180                                     __ptext57 3006  
                                   __ptext49 3E95                                     __ptext82 31EF  
                                   __ptext74 353B                                     __ptext66 3E44  
                                   __ptext58 3FDF                                     __ptext83 3000  
                                   __ptext75 13A8                                     __ptext67 3E3C  
                                   __ptext59 34E4                                     __ptext84 3E27  
                                   __ptext76 3FA1                                     __ptext68 3E66  
                                   __ptext85 3E54                                     __ptext77 1CA4  
                                   __ptext69 3E81                                     __ptext86 2B36  
                                   __ptext78 1E1E                                     __ptext87 377E  
                                   __ptext79 1800                             __size_of_isupper 0017  
             setCellUndervoltageProtection@i 0045                             __size_of_tolower 0022  
                  __end_of_OCD_delay_setting 3B0E                                   strcpy@dest 0078  
                           __size_of_strncmp 0052                             __size_of_toupper 0022  
                                 ?_vsnprintf 0155                                     _init_I2C 3E9F  
                                   _init_AFE 3437                                     _init_RGB 3E30  
                              __size_of_atoi 00A1                                __size_of_ctoa 0031  
                              __size_of_main 0032                                __size_of_dtoa 0153  
                              _SSPDATPPSbits 0E21                                    pnum$text9 0050  
                              __size_of_otoa 00F1                        _SCD_threshold_setting 3B0E  
                              __size_of_stoa 00C5                                __size_of_utoa 00E1  
                 __size_of_send_I2C_startBit 0008                                __size_of_xtoa 0159  
                                _internal_16 3E54                                   _RB2PPSbits 0E9A  
                                 _RC1STAbits 019D                                     efgtoa@fp 00A9  
                                   efgtoa@ne 00CA                                     efgtoa@pp 00C6  
                                   efgtoa@ou 00B4                                    stoa@F1174 0232  
                                 _RC4PPSbits 0EA4               __size_of_beginAFEcommunication 00B4  
                              _SSPCLKPPSbits 0E20                __end_of_beginAFEcommunication 18BF  
                                   int$flags 007E                                   _RC5PPSbits 0EA5  
                                   _protect1 01D4                                     _protect2 01D3  
               __size_of_printotAFERegisters 01F1                                     _protect3 01D2  
                  ??_setTemperatureLimitsint 0077                                     _vfprintf 31B6  
                                   _snprintf 306C                             ___aomod@dividend 0028  
  setOverCurrentDischargeProtection@delay_ms 006A                     __end_of_OV_delay_setting 3B26  
                             _vfpfcnvrt$1316 0133                               _vfpfcnvrt$1290 0131  
                             _vfpfcnvrt$1289 012F                                   _INTCONbits 000B  
                                ??_init_GPIO 0071                                  ??_initClock 0071  
                                ??_init_TMR1 0071                               __pstringtext10 389E  
                             __pstringtext11 38CB                               __pstringtext20 3A36  
                             __pstringtext12 38F7                               __pstringtext21 3A4B  
                             __pstringtext13 3922                               __pstringtext30 3B36  
                             __pstringtext22 3A60                               __pstringtext14 394C  
                             __pstringtext31 3B3A                               __pstringtext23 3A75  
                             __pstringtext15 3976                               __pstringtext40 3B5E  
                             __pstringtext32 3B3E                               __pstringtext24 3A8A  
                             __pstringtext16 399E                               __pstringtext41 3B62  
                             __pstringtext33 3B42                               __pstringtext25 3A9F  
                             __pstringtext17 39C4                               __pstringtext50 3B7D  
                             __pstringtext42 3B65                               __pstringtext34 3B46  
                             __pstringtext26 3AB3                               __pstringtext18 3A0A  
                             __pstringtext51 3B80                               __pstringtext43 3B68  
                             __pstringtext35 3B4A                               __pstringtext27 3AC7  
                             __pstringtext19 3A20                               __pstringtext52 3B83  
                             __pstringtext44 3B6B                               __pstringtext36 3B4E  
                             __pstringtext28 3ADA                               __pstringtext53 3B86  
                             __pstringtext45 3B6E                               __pstringtext37 3B52  
                             __pstringtext29 3AEC                               __pstringtext54 3B89  
                             __pstringtext46 3B71                               __pstringtext38 3B56  
                             __pstringtext55 3B8C                               __pstringtext47 3B74  
                             __pstringtext39 3B5A                               __pstringtext56 0000  
                             __pstringtext48 3B77                               __pstringtext49 3B7A  
                                   isalpha@c 0071                                     isdigit@c 0071  
                                 vsnprintf@f 0162                                   vsnprintf@n 0157  
                                 vsnprintf@s 0155                             _UV_delay_setting 3B26  
                                  snprintf@n 01D9                                    snprintf@s 01D7  
               __end_of_send_I2C_controlByte 3E8B                                     intlevel1 0000  
                               _temperatures 01BA          setShortCircuitProtection@current_mA 0066  
                                   islower@c 0071                                  ?_AFE_UPDATE 0070  
                                   isspace@c 0071                            __CFG_CLKOUTEN$OFF 0000  
                                  strcpy@src 0071                                  _PPSLOCKbits 0E0F  
                                   isupper@c 0071           __size_of_setShortCircuitProtection 0117  
                                  strncmp@_l 0071                                    strncmp@_r 0073  
                                efgtoa@nmode 00D2                            _maxCellTempCharge 01C4  
                            ___aomod@divisor 0020                                  ??_vfpfcnvrt 0120  
                                   stoa@nuls 0023                              ___aomod@counter 0072  
                              __pstringtext1 39EA                                __pstringtext2 3AFE  
                              __pstringtext3 3B0E                                __pstringtext4 3B1E  
                              __pstringtext5 3B26                                __pstringtext6 3B2E  
                              __pstringtext7 3800                                __pstringtext8 383B  
                              __pstringtext9 3870                       __Umul8_16@multiplicand 0071  
                                   tolower@c 0077                               _vsnprintf$1918 015E  
                     __size_of___fpclassifyf 0078                        __size_of_shutdown_BMS 0003  
                          _printcellVoltages 32B3                                     strncmp@l 0078  
                                   strncmp@n 0075                                     strncmp@r 007A  
                                   toupper@c 0077                        EUSART_Write_Text@text 0072  
                               ___aldiv@sign 002D                                  _SSPCON2bits 0216  
                                 _WDTCONbits 0097                           ?_printcellVoltages 0070  
                              ___fladd@signs 006A              __end_of_setTemperatureLimitsint 326E  
                         EUSART_Write@txData 0071                                 ___aodiv@sign 0073  
    setOverCurrentDischargeProtection@scaler 00A0                                  ??_vsnprintf 015C  
                               ___fladd@aexp 006B                                 ___fladd@bexp 006C  
                      __size_of_statemachine 0139                                   _STATUSbits 0003  
                        ??_printcellVoltages 007C                                  _toggleColor 007C  
                       __Umul8_16@multiplier 0079                                   _SSPCONbits 0215  
                 __end_of_RGB_AWAIT_AFE_CONN 3028                                 ___aomod@sign 0073  
                         EUSART_Write_Text@i 0075                        __end_of_send_I2C_NACK 3E66  
                          __Umul8_16@product 0075  
