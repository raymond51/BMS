

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Mar 10 11:15:23 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1719
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	stringtext14,global,class=STRCODE,delta=2
    19                           	psect	stringtext15,global,class=STRCODE,delta=2
    20                           	psect	stringtext16,global,class=STRCODE,delta=2
    21                           	psect	stringtext17,global,class=STRCODE,delta=2
    22                           	psect	stringtext18,global,class=STRCODE,delta=2
    23                           	psect	stringtext19,global,class=STRCODE,delta=2
    24                           	psect	stringtext20,global,class=STRCODE,delta=2
    25                           	psect	stringtext21,global,class=STRCODE,delta=2
    26                           	psect	stringtext22,global,class=STRCODE,delta=2
    27                           	psect	stringtext23,global,class=STRCODE,delta=2
    28                           	psect	stringtext24,global,class=STRCODE,delta=2
    29                           	psect	stringtext25,global,class=STRCODE,delta=2
    30                           	psect	stringtext26,global,class=STRCODE,delta=2
    31                           	psect	stringtext27,global,class=STRCODE,delta=2
    32                           	psect	stringtext28,global,class=STRCODE,delta=2
    33                           	psect	stringtext29,global,class=STRCODE,delta=2
    34                           	psect	stringtext30,global,class=STRCODE,delta=2
    35                           	psect	stringtext31,global,class=STRCODE,delta=2
    36                           	psect	stringtext32,global,class=STRCODE,delta=2
    37                           	psect	stringtext33,global,class=STRCODE,delta=2
    38                           	psect	stringtext34,global,class=STRCODE,delta=2
    39                           	psect	stringtext35,global,class=STRCODE,delta=2
    40                           	psect	stringtext36,global,class=STRCODE,delta=2
    41                           	psect	stringtext37,global,class=STRCODE,delta=2
    42                           	psect	stringtext38,global,class=STRCODE,delta=2
    43                           	psect	stringtext39,global,class=STRCODE,delta=2
    44                           	psect	stringtext40,global,class=STRCODE,delta=2
    45                           	psect	stringtext41,global,class=STRCODE,delta=2
    46                           	psect	stringtext42,global,class=STRCODE,delta=2
    47                           	psect	stringtext43,global,class=STRCODE,delta=2
    48                           	psect	stringtext44,global,class=STRCODE,delta=2
    49                           	psect	cinit,global,class=CODE,merge=1,delta=2
    50                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    51                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    52                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    53                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    54                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    55                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    56                           	psect	clrtext,global,class=CODE,delta=2
    57                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    58                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    59                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    60                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    61                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    62                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    63                           	psect	text1,local,class=CODE,merge=1,delta=2
    64                           	psect	text2,local,class=CODE,merge=1,delta=2
    65                           	psect	text3,local,class=CODE,merge=1,delta=2
    66                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    68                           	psect	text6,local,class=CODE,merge=1,delta=2
    69                           	psect	text7,local,class=CODE,merge=1,delta=2
    70                           	psect	text8,local,class=CODE,merge=1,delta=2
    71                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    72                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    73                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    74                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    75                           	psect	text13,local,class=CODE,merge=1,delta=2
    76                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    77                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    78                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    79                           	psect	text17,local,class=CODE,merge=1,delta=2
    80                           	psect	text18,local,class=CODE,merge=1,delta=2
    81                           	psect	text19,local,class=CODE,merge=1,delta=2
    82                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    83                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    84                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    85                           	psect	text23,local,class=CODE,merge=1,delta=2
    86                           	psect	text24,local,class=CODE,merge=1,delta=2
    87                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    88                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    89                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    90                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    91                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    92                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    93                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    94                           	psect	text32,local,class=CODE,merge=1,delta=2
    95                           	psect	text33,local,class=CODE,merge=1,delta=2
    96                           	psect	text34,local,class=CODE,merge=1,delta=2
    97                           	psect	text35,local,class=CODE,merge=1,delta=2
    98                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
    99                           	psect	text37,local,class=CODE,merge=1,delta=2
   100                           	psect	text38,local,class=CODE,merge=1,delta=2
   101                           	psect	text39,local,class=CODE,merge=1,delta=2
   102                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
   103                           	psect	text41,local,class=CODE,merge=1,delta=2
   104                           	psect	text42,local,class=CODE,merge=1,delta=2
   105                           	psect	text43,local,class=CODE,merge=1,delta=2
   106                           	psect	text44,local,class=CODE,merge=1,delta=2
   107                           	psect	text45,local,class=CODE,merge=1,delta=2
   108                           	psect	text46,local,class=CODE,merge=1,delta=2
   109                           	psect	text47,local,class=CODE,merge=1,delta=2
   110                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
   111                           	psect	text49,local,class=CODE,merge=1,delta=2
   112                           	psect	text50,local,class=CODE,merge=1,delta=2,group=2
   113                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
   114                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
   115                           	psect	text53,local,class=CODE,merge=1,delta=2
   116                           	psect	text54,local,class=CODE,merge=1,delta=2,group=1
   117                           	psect	text55,local,class=CODE,merge=1,delta=2,group=1
   118                           	psect	text56,local,class=CODE,merge=1,delta=2,group=1
   119                           	psect	text57,local,class=CODE,merge=1,delta=2,group=1
   120                           	psect	text58,local,class=CODE,merge=1,delta=2,group=1
   121                           	psect	text59,local,class=CODE,merge=1,delta=2,group=1
   122                           	psect	text60,local,class=CODE,merge=1,delta=2
   123                           	psect	text61,local,class=CODE,merge=1,delta=2
   124                           	psect	text62,local,class=CODE,merge=1,delta=2
   125                           	psect	text63,local,class=CODE,merge=1,delta=2
   126                           	psect	text64,local,class=CODE,merge=1,delta=2
   127                           	psect	text65,local,class=CODE,merge=1,delta=2
   128                           	psect	text66,local,class=CODE,merge=1,delta=2
   129                           	psect	text67,local,class=CODE,merge=1,delta=2
   130                           	psect	text68,local,class=CODE,merge=1,delta=2
   131                           	psect	text69,local,class=CODE,merge=1,delta=2
   132                           	psect	text70,local,class=CODE,merge=1,delta=2
   133                           	psect	text71,local,class=CODE,merge=1,delta=2
   134                           	psect	text72,local,class=CODE,merge=1,delta=2
   135                           	psect	text73,local,class=CODE,merge=1,delta=2
   136                           	psect	text74,local,class=CODE,merge=1,delta=2
   137                           	psect	text75,local,class=CODE,merge=1,delta=2
   138                           	psect	text76,local,class=CODE,merge=1,delta=2
   139                           	psect	text77,local,class=CODE,merge=1,delta=2
   140                           	psect	text78,local,class=CODE,merge=1,delta=2,group=1
   141                           	psect	intentry,global,class=CODE,delta=2
   142                           	psect	text7_split_1,local,class=CODE,merge=1,delta=2
   143                           	psect	text7_split_2,local,class=CODE,merge=1,delta=2
   144                           	dabs	1,0xCA0,32
   145                           	dabs	1,0xC20,80
   146                           	dabs	1,0xBE1,15
   147                           	dabs	1,0x2771,0,_messageBuffer
   148                           	dabs	1,0x7E,2
   149  0000                     
   150                           ; Version 2.05
   151                           ; Generated 20/12/2018 GMT
   152                           ; 
   153                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   154                           ; All rights reserved.
   155                           ; 
   156                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   157                           ; 
   158                           ; Redistribution and use in source and binary forms, with or without modification, are
   159                           ; permitted provided that the following conditions are met:
   160                           ; 
   161                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   162                           ;        conditions and the following disclaimer.
   163                           ; 
   164                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   165                           ;        of conditions and the following disclaimer in the documentation and/or other
   166                           ;        materials provided with the distribution.
   167                           ; 
   168                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   169                           ;        software without specific prior written permission.
   170                           ; 
   171                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   172                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   173                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   174                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   175                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   176                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   177                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   178                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   179                           ; 
   180                           ; 
   181                           ; Code-generator required, PIC16F1719 Definitions
   182                           ; 
   183                           ; SFR Addresses
   184  0000                     	;# 
   185  0001                     	;# 
   186  0002                     	;# 
   187  0003                     	;# 
   188  0004                     	;# 
   189  0005                     	;# 
   190  0006                     	;# 
   191  0007                     	;# 
   192  0008                     	;# 
   193  0009                     	;# 
   194  000A                     	;# 
   195  000B                     	;# 
   196  000C                     	;# 
   197  000D                     	;# 
   198  000E                     	;# 
   199  000F                     	;# 
   200  0010                     	;# 
   201  0011                     	;# 
   202  0012                     	;# 
   203  0013                     	;# 
   204  0015                     	;# 
   205  0016                     	;# 
   206  0016                     	;# 
   207  0017                     	;# 
   208  0018                     	;# 
   209  0019                     	;# 
   210  001A                     	;# 
   211  001B                     	;# 
   212  001C                     	;# 
   213  008C                     	;# 
   214  008D                     	;# 
   215  008E                     	;# 
   216  008F                     	;# 
   217  0090                     	;# 
   218  0091                     	;# 
   219  0092                     	;# 
   220  0093                     	;# 
   221  0095                     	;# 
   222  0096                     	;# 
   223  0097                     	;# 
   224  0098                     	;# 
   225  0099                     	;# 
   226  009A                     	;# 
   227  009B                     	;# 
   228  009B                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  009F                     	;# 
   233  010C                     	;# 
   234  010D                     	;# 
   235  010E                     	;# 
   236  010F                     	;# 
   237  0110                     	;# 
   238  0111                     	;# 
   239  0112                     	;# 
   240  0113                     	;# 
   241  0114                     	;# 
   242  0115                     	;# 
   243  0116                     	;# 
   244  0117                     	;# 
   245  0118                     	;# 
   246  0119                     	;# 
   247  011A                     	;# 
   248  011B                     	;# 
   249  011B                     	;# 
   250  011C                     	;# 
   251  018C                     	;# 
   252  018D                     	;# 
   253  018E                     	;# 
   254  018F                     	;# 
   255  0190                     	;# 
   256  0191                     	;# 
   257  0191                     	;# 
   258  0192                     	;# 
   259  0193                     	;# 
   260  0193                     	;# 
   261  0194                     	;# 
   262  0195                     	;# 
   263  0196                     	;# 
   264  0197                     	;# 
   265  0199                     	;# 
   266  0199                     	;# 
   267  0199                     	;# 
   268  019A                     	;# 
   269  019A                     	;# 
   270  019A                     	;# 
   271  019B                     	;# 
   272  019B                     	;# 
   273  019B                     	;# 
   274  019B                     	;# 
   275  019B                     	;# 
   276  019C                     	;# 
   277  019C                     	;# 
   278  019C                     	;# 
   279  019D                     	;# 
   280  019D                     	;# 
   281  019D                     	;# 
   282  019E                     	;# 
   283  019E                     	;# 
   284  019E                     	;# 
   285  019F                     	;# 
   286  019F                     	;# 
   287  019F                     	;# 
   288  019F                     	;# 
   289  019F                     	;# 
   290  020C                     	;# 
   291  020D                     	;# 
   292  020E                     	;# 
   293  020F                     	;# 
   294  0210                     	;# 
   295  0211                     	;# 
   296  0211                     	;# 
   297  0212                     	;# 
   298  0212                     	;# 
   299  0213                     	;# 
   300  0213                     	;# 
   301  0214                     	;# 
   302  0214                     	;# 
   303  0215                     	;# 
   304  0215                     	;# 
   305  0215                     	;# 
   306  0215                     	;# 
   307  0216                     	;# 
   308  0216                     	;# 
   309  0217                     	;# 
   310  0217                     	;# 
   311  028C                     	;# 
   312  028D                     	;# 
   313  028E                     	;# 
   314  028F                     	;# 
   315  0290                     	;# 
   316  0291                     	;# 
   317  0291                     	;# 
   318  0292                     	;# 
   319  0293                     	;# 
   320  0293                     	;# 
   321  0298                     	;# 
   322  0298                     	;# 
   323  0299                     	;# 
   324  029A                     	;# 
   325  029A                     	;# 
   326  029E                     	;# 
   327  030C                     	;# 
   328  030D                     	;# 
   329  030E                     	;# 
   330  030F                     	;# 
   331  0310                     	;# 
   332  038C                     	;# 
   333  038D                     	;# 
   334  038E                     	;# 
   335  038F                     	;# 
   336  0390                     	;# 
   337  0391                     	;# 
   338  0392                     	;# 
   339  0393                     	;# 
   340  0394                     	;# 
   341  0395                     	;# 
   342  0396                     	;# 
   343  0397                     	;# 
   344  0398                     	;# 
   345  0399                     	;# 
   346  039D                     	;# 
   347  039E                     	;# 
   348  039F                     	;# 
   349  0415                     	;# 
   350  0416                     	;# 
   351  0417                     	;# 
   352  041C                     	;# 
   353  041D                     	;# 
   354  041E                     	;# 
   355  0498                     	;# 
   356  0498                     	;# 
   357  0499                     	;# 
   358  049A                     	;# 
   359  049B                     	;# 
   360  049B                     	;# 
   361  049C                     	;# 
   362  049D                     	;# 
   363  049E                     	;# 
   364  049F                     	;# 
   365  0511                     	;# 
   366  0515                     	;# 
   367  0617                     	;# 
   368  0618                     	;# 
   369  0619                     	;# 
   370  0619                     	;# 
   371  061A                     	;# 
   372  061B                     	;# 
   373  061C                     	;# 
   374  061C                     	;# 
   375  0691                     	;# 
   376  0692                     	;# 
   377  0693                     	;# 
   378  0694                     	;# 
   379  0695                     	;# 
   380  0696                     	;# 
   381  0697                     	;# 
   382  0698                     	;# 
   383  0699                     	;# 
   384  069A                     	;# 
   385  069B                     	;# 
   386  069C                     	;# 
   387  069D                     	;# 
   388  069E                     	;# 
   389  069F                     	;# 
   390  0E0F                     	;# 
   391  0E10                     	;# 
   392  0E11                     	;# 
   393  0E12                     	;# 
   394  0E13                     	;# 
   395  0E14                     	;# 
   396  0E15                     	;# 
   397  0E17                     	;# 
   398  0E20                     	;# 
   399  0E21                     	;# 
   400  0E22                     	;# 
   401  0E24                     	;# 
   402  0E25                     	;# 
   403  0E28                     	;# 
   404  0E29                     	;# 
   405  0E2A                     	;# 
   406  0E2B                     	;# 
   407  0E90                     	;# 
   408  0E91                     	;# 
   409  0E92                     	;# 
   410  0E93                     	;# 
   411  0E94                     	;# 
   412  0E95                     	;# 
   413  0E96                     	;# 
   414  0E97                     	;# 
   415  0E98                     	;# 
   416  0E99                     	;# 
   417  0E9A                     	;# 
   418  0E9B                     	;# 
   419  0E9C                     	;# 
   420  0E9D                     	;# 
   421  0E9E                     	;# 
   422  0E9F                     	;# 
   423  0EA0                     	;# 
   424  0EA1                     	;# 
   425  0EA2                     	;# 
   426  0EA3                     	;# 
   427  0EA4                     	;# 
   428  0EA5                     	;# 
   429  0EA6                     	;# 
   430  0EA7                     	;# 
   431  0EA8                     	;# 
   432  0EA9                     	;# 
   433  0EAA                     	;# 
   434  0EAB                     	;# 
   435  0EAC                     	;# 
   436  0EAD                     	;# 
   437  0EAE                     	;# 
   438  0EAF                     	;# 
   439  0EB0                     	;# 
   440  0EB1                     	;# 
   441  0EB2                     	;# 
   442  0F0F                     	;# 
   443  0F10                     	;# 
   444  0F11                     	;# 
   445  0F12                     	;# 
   446  0F13                     	;# 
   447  0F14                     	;# 
   448  0F15                     	;# 
   449  0F16                     	;# 
   450  0F17                     	;# 
   451  0F18                     	;# 
   452  0F19                     	;# 
   453  0F1A                     	;# 
   454  0F1B                     	;# 
   455  0F1C                     	;# 
   456  0F1D                     	;# 
   457  0F1E                     	;# 
   458  0F1F                     	;# 
   459  0F20                     	;# 
   460  0F21                     	;# 
   461  0F22                     	;# 
   462  0F23                     	;# 
   463  0F24                     	;# 
   464  0F25                     	;# 
   465  0F26                     	;# 
   466  0F27                     	;# 
   467  0F28                     	;# 
   468  0F29                     	;# 
   469  0F2A                     	;# 
   470  0F2B                     	;# 
   471  0F2C                     	;# 
   472  0F2D                     	;# 
   473  0F2E                     	;# 
   474  0F2F                     	;# 
   475  0F30                     	;# 
   476  0F31                     	;# 
   477  0F32                     	;# 
   478  0F33                     	;# 
   479  0F34                     	;# 
   480  0F35                     	;# 
   481  0F36                     	;# 
   482  0F37                     	;# 
   483  0FE4                     	;# 
   484  0FE5                     	;# 
   485  0FE6                     	;# 
   486  0FE7                     	;# 
   487  0FE8                     	;# 
   488  0FE9                     	;# 
   489  0FEA                     	;# 
   490  0FEB                     	;# 
   491  0FED                     	;# 
   492  0FEE                     	;# 
   493  0FEF                     	;# 
   494  0000                     	;# 
   495  0001                     	;# 
   496  0002                     	;# 
   497  0003                     	;# 
   498  0004                     	;# 
   499  0005                     	;# 
   500  0006                     	;# 
   501  0007                     	;# 
   502  0008                     	;# 
   503  0009                     	;# 
   504  000A                     	;# 
   505  000B                     	;# 
   506  000C                     	;# 
   507  000D                     	;# 
   508  000E                     	;# 
   509  000F                     	;# 
   510  0010                     	;# 
   511  0011                     	;# 
   512  0012                     	;# 
   513  0013                     	;# 
   514  0015                     	;# 
   515  0016                     	;# 
   516  0016                     	;# 
   517  0017                     	;# 
   518  0018                     	;# 
   519  0019                     	;# 
   520  001A                     	;# 
   521  001B                     	;# 
   522  001C                     	;# 
   523  008C                     	;# 
   524  008D                     	;# 
   525  008E                     	;# 
   526  008F                     	;# 
   527  0090                     	;# 
   528  0091                     	;# 
   529  0092                     	;# 
   530  0093                     	;# 
   531  0095                     	;# 
   532  0096                     	;# 
   533  0097                     	;# 
   534  0098                     	;# 
   535  0099                     	;# 
   536  009A                     	;# 
   537  009B                     	;# 
   538  009B                     	;# 
   539  009C                     	;# 
   540  009D                     	;# 
   541  009E                     	;# 
   542  009F                     	;# 
   543  010C                     	;# 
   544  010D                     	;# 
   545  010E                     	;# 
   546  010F                     	;# 
   547  0110                     	;# 
   548  0111                     	;# 
   549  0112                     	;# 
   550  0113                     	;# 
   551  0114                     	;# 
   552  0115                     	;# 
   553  0116                     	;# 
   554  0117                     	;# 
   555  0118                     	;# 
   556  0119                     	;# 
   557  011A                     	;# 
   558  011B                     	;# 
   559  011B                     	;# 
   560  011C                     	;# 
   561  018C                     	;# 
   562  018D                     	;# 
   563  018E                     	;# 
   564  018F                     	;# 
   565  0190                     	;# 
   566  0191                     	;# 
   567  0191                     	;# 
   568  0192                     	;# 
   569  0193                     	;# 
   570  0193                     	;# 
   571  0194                     	;# 
   572  0195                     	;# 
   573  0196                     	;# 
   574  0197                     	;# 
   575  0199                     	;# 
   576  0199                     	;# 
   577  0199                     	;# 
   578  019A                     	;# 
   579  019A                     	;# 
   580  019A                     	;# 
   581  019B                     	;# 
   582  019B                     	;# 
   583  019B                     	;# 
   584  019B                     	;# 
   585  019B                     	;# 
   586  019C                     	;# 
   587  019C                     	;# 
   588  019C                     	;# 
   589  019D                     	;# 
   590  019D                     	;# 
   591  019D                     	;# 
   592  019E                     	;# 
   593  019E                     	;# 
   594  019E                     	;# 
   595  019F                     	;# 
   596  019F                     	;# 
   597  019F                     	;# 
   598  019F                     	;# 
   599  019F                     	;# 
   600  020C                     	;# 
   601  020D                     	;# 
   602  020E                     	;# 
   603  020F                     	;# 
   604  0210                     	;# 
   605  0211                     	;# 
   606  0211                     	;# 
   607  0212                     	;# 
   608  0212                     	;# 
   609  0213                     	;# 
   610  0213                     	;# 
   611  0214                     	;# 
   612  0214                     	;# 
   613  0215                     	;# 
   614  0215                     	;# 
   615  0215                     	;# 
   616  0215                     	;# 
   617  0216                     	;# 
   618  0216                     	;# 
   619  0217                     	;# 
   620  0217                     	;# 
   621  028C                     	;# 
   622  028D                     	;# 
   623  028E                     	;# 
   624  028F                     	;# 
   625  0290                     	;# 
   626  0291                     	;# 
   627  0291                     	;# 
   628  0292                     	;# 
   629  0293                     	;# 
   630  0293                     	;# 
   631  0298                     	;# 
   632  0298                     	;# 
   633  0299                     	;# 
   634  029A                     	;# 
   635  029A                     	;# 
   636  029E                     	;# 
   637  030C                     	;# 
   638  030D                     	;# 
   639  030E                     	;# 
   640  030F                     	;# 
   641  0310                     	;# 
   642  038C                     	;# 
   643  038D                     	;# 
   644  038E                     	;# 
   645  038F                     	;# 
   646  0390                     	;# 
   647  0391                     	;# 
   648  0392                     	;# 
   649  0393                     	;# 
   650  0394                     	;# 
   651  0395                     	;# 
   652  0396                     	;# 
   653  0397                     	;# 
   654  0398                     	;# 
   655  0399                     	;# 
   656  039D                     	;# 
   657  039E                     	;# 
   658  039F                     	;# 
   659  0415                     	;# 
   660  0416                     	;# 
   661  0417                     	;# 
   662  041C                     	;# 
   663  041D                     	;# 
   664  041E                     	;# 
   665  0498                     	;# 
   666  0498                     	;# 
   667  0499                     	;# 
   668  049A                     	;# 
   669  049B                     	;# 
   670  049B                     	;# 
   671  049C                     	;# 
   672  049D                     	;# 
   673  049E                     	;# 
   674  049F                     	;# 
   675  0511                     	;# 
   676  0515                     	;# 
   677  0617                     	;# 
   678  0618                     	;# 
   679  0619                     	;# 
   680  0619                     	;# 
   681  061A                     	;# 
   682  061B                     	;# 
   683  061C                     	;# 
   684  061C                     	;# 
   685  0691                     	;# 
   686  0692                     	;# 
   687  0693                     	;# 
   688  0694                     	;# 
   689  0695                     	;# 
   690  0696                     	;# 
   691  0697                     	;# 
   692  0698                     	;# 
   693  0699                     	;# 
   694  069A                     	;# 
   695  069B                     	;# 
   696  069C                     	;# 
   697  069D                     	;# 
   698  069E                     	;# 
   699  069F                     	;# 
   700  0E0F                     	;# 
   701  0E10                     	;# 
   702  0E11                     	;# 
   703  0E12                     	;# 
   704  0E13                     	;# 
   705  0E14                     	;# 
   706  0E15                     	;# 
   707  0E17                     	;# 
   708  0E20                     	;# 
   709  0E21                     	;# 
   710  0E22                     	;# 
   711  0E24                     	;# 
   712  0E25                     	;# 
   713  0E28                     	;# 
   714  0E29                     	;# 
   715  0E2A                     	;# 
   716  0E2B                     	;# 
   717  0E90                     	;# 
   718  0E91                     	;# 
   719  0E92                     	;# 
   720  0E93                     	;# 
   721  0E94                     	;# 
   722  0E95                     	;# 
   723  0E96                     	;# 
   724  0E97                     	;# 
   725  0E98                     	;# 
   726  0E99                     	;# 
   727  0E9A                     	;# 
   728  0E9B                     	;# 
   729  0E9C                     	;# 
   730  0E9D                     	;# 
   731  0E9E                     	;# 
   732  0E9F                     	;# 
   733  0EA0                     	;# 
   734  0EA1                     	;# 
   735  0EA2                     	;# 
   736  0EA3                     	;# 
   737  0EA4                     	;# 
   738  0EA5                     	;# 
   739  0EA6                     	;# 
   740  0EA7                     	;# 
   741  0EA8                     	;# 
   742  0EA9                     	;# 
   743  0EAA                     	;# 
   744  0EAB                     	;# 
   745  0EAC                     	;# 
   746  0EAD                     	;# 
   747  0EAE                     	;# 
   748  0EAF                     	;# 
   749  0EB0                     	;# 
   750  0EB1                     	;# 
   751  0EB2                     	;# 
   752  0F0F                     	;# 
   753  0F10                     	;# 
   754  0F11                     	;# 
   755  0F12                     	;# 
   756  0F13                     	;# 
   757  0F14                     	;# 
   758  0F15                     	;# 
   759  0F16                     	;# 
   760  0F17                     	;# 
   761  0F18                     	;# 
   762  0F19                     	;# 
   763  0F1A                     	;# 
   764  0F1B                     	;# 
   765  0F1C                     	;# 
   766  0F1D                     	;# 
   767  0F1E                     	;# 
   768  0F1F                     	;# 
   769  0F20                     	;# 
   770  0F21                     	;# 
   771  0F22                     	;# 
   772  0F23                     	;# 
   773  0F24                     	;# 
   774  0F25                     	;# 
   775  0F26                     	;# 
   776  0F27                     	;# 
   777  0F28                     	;# 
   778  0F29                     	;# 
   779  0F2A                     	;# 
   780  0F2B                     	;# 
   781  0F2C                     	;# 
   782  0F2D                     	;# 
   783  0F2E                     	;# 
   784  0F2F                     	;# 
   785  0F30                     	;# 
   786  0F31                     	;# 
   787  0F32                     	;# 
   788  0F33                     	;# 
   789  0F34                     	;# 
   790  0F35                     	;# 
   791  0F36                     	;# 
   792  0F37                     	;# 
   793  0FE4                     	;# 
   794  0FE5                     	;# 
   795  0FE6                     	;# 
   796  0FE7                     	;# 
   797  0FE8                     	;# 
   798  0FE9                     	;# 
   799  0FEA                     	;# 
   800  0FEB                     	;# 
   801  0FED                     	;# 
   802  0FEE                     	;# 
   803  0FEF                     	;# 
   804  0000                     	;# 
   805  0001                     	;# 
   806  0002                     	;# 
   807  0003                     	;# 
   808  0004                     	;# 
   809  0005                     	;# 
   810  0006                     	;# 
   811  0007                     	;# 
   812  0008                     	;# 
   813  0009                     	;# 
   814  000A                     	;# 
   815  000B                     	;# 
   816  000C                     	;# 
   817  000D                     	;# 
   818  000E                     	;# 
   819  000F                     	;# 
   820  0010                     	;# 
   821  0011                     	;# 
   822  0012                     	;# 
   823  0013                     	;# 
   824  0015                     	;# 
   825  0016                     	;# 
   826  0016                     	;# 
   827  0017                     	;# 
   828  0018                     	;# 
   829  0019                     	;# 
   830  001A                     	;# 
   831  001B                     	;# 
   832  001C                     	;# 
   833  008C                     	;# 
   834  008D                     	;# 
   835  008E                     	;# 
   836  008F                     	;# 
   837  0090                     	;# 
   838  0091                     	;# 
   839  0092                     	;# 
   840  0093                     	;# 
   841  0095                     	;# 
   842  0096                     	;# 
   843  0097                     	;# 
   844  0098                     	;# 
   845  0099                     	;# 
   846  009A                     	;# 
   847  009B                     	;# 
   848  009B                     	;# 
   849  009C                     	;# 
   850  009D                     	;# 
   851  009E                     	;# 
   852  009F                     	;# 
   853  010C                     	;# 
   854  010D                     	;# 
   855  010E                     	;# 
   856  010F                     	;# 
   857  0110                     	;# 
   858  0111                     	;# 
   859  0112                     	;# 
   860  0113                     	;# 
   861  0114                     	;# 
   862  0115                     	;# 
   863  0116                     	;# 
   864  0117                     	;# 
   865  0118                     	;# 
   866  0119                     	;# 
   867  011A                     	;# 
   868  011B                     	;# 
   869  011B                     	;# 
   870  011C                     	;# 
   871  018C                     	;# 
   872  018D                     	;# 
   873  018E                     	;# 
   874  018F                     	;# 
   875  0190                     	;# 
   876  0191                     	;# 
   877  0191                     	;# 
   878  0192                     	;# 
   879  0193                     	;# 
   880  0193                     	;# 
   881  0194                     	;# 
   882  0195                     	;# 
   883  0196                     	;# 
   884  0197                     	;# 
   885  0199                     	;# 
   886  0199                     	;# 
   887  0199                     	;# 
   888  019A                     	;# 
   889  019A                     	;# 
   890  019A                     	;# 
   891  019B                     	;# 
   892  019B                     	;# 
   893  019B                     	;# 
   894  019B                     	;# 
   895  019B                     	;# 
   896  019C                     	;# 
   897  019C                     	;# 
   898  019C                     	;# 
   899  019D                     	;# 
   900  019D                     	;# 
   901  019D                     	;# 
   902  019E                     	;# 
   903  019E                     	;# 
   904  019E                     	;# 
   905  019F                     	;# 
   906  019F                     	;# 
   907  019F                     	;# 
   908  019F                     	;# 
   909  019F                     	;# 
   910  020C                     	;# 
   911  020D                     	;# 
   912  020E                     	;# 
   913  020F                     	;# 
   914  0210                     	;# 
   915  0211                     	;# 
   916  0211                     	;# 
   917  0212                     	;# 
   918  0212                     	;# 
   919  0213                     	;# 
   920  0213                     	;# 
   921  0214                     	;# 
   922  0214                     	;# 
   923  0215                     	;# 
   924  0215                     	;# 
   925  0215                     	;# 
   926  0215                     	;# 
   927  0216                     	;# 
   928  0216                     	;# 
   929  0217                     	;# 
   930  0217                     	;# 
   931  028C                     	;# 
   932  028D                     	;# 
   933  028E                     	;# 
   934  028F                     	;# 
   935  0290                     	;# 
   936  0291                     	;# 
   937  0291                     	;# 
   938  0292                     	;# 
   939  0293                     	;# 
   940  0293                     	;# 
   941  0298                     	;# 
   942  0298                     	;# 
   943  0299                     	;# 
   944  029A                     	;# 
   945  029A                     	;# 
   946  029E                     	;# 
   947  030C                     	;# 
   948  030D                     	;# 
   949  030E                     	;# 
   950  030F                     	;# 
   951  0310                     	;# 
   952  038C                     	;# 
   953  038D                     	;# 
   954  038E                     	;# 
   955  038F                     	;# 
   956  0390                     	;# 
   957  0391                     	;# 
   958  0392                     	;# 
   959  0393                     	;# 
   960  0394                     	;# 
   961  0395                     	;# 
   962  0396                     	;# 
   963  0397                     	;# 
   964  0398                     	;# 
   965  0399                     	;# 
   966  039D                     	;# 
   967  039E                     	;# 
   968  039F                     	;# 
   969  0415                     	;# 
   970  0416                     	;# 
   971  0417                     	;# 
   972  041C                     	;# 
   973  041D                     	;# 
   974  041E                     	;# 
   975  0498                     	;# 
   976  0498                     	;# 
   977  0499                     	;# 
   978  049A                     	;# 
   979  049B                     	;# 
   980  049B                     	;# 
   981  049C                     	;# 
   982  049D                     	;# 
   983  049E                     	;# 
   984  049F                     	;# 
   985  0511                     	;# 
   986  0515                     	;# 
   987  0617                     	;# 
   988  0618                     	;# 
   989  0619                     	;# 
   990  0619                     	;# 
   991  061A                     	;# 
   992  061B                     	;# 
   993  061C                     	;# 
   994  061C                     	;# 
   995  0691                     	;# 
   996  0692                     	;# 
   997  0693                     	;# 
   998  0694                     	;# 
   999  0695                     	;# 
  1000  0696                     	;# 
  1001  0697                     	;# 
  1002  0698                     	;# 
  1003  0699                     	;# 
  1004  069A                     	;# 
  1005  069B                     	;# 
  1006  069C                     	;# 
  1007  069D                     	;# 
  1008  069E                     	;# 
  1009  069F                     	;# 
  1010  0E0F                     	;# 
  1011  0E10                     	;# 
  1012  0E11                     	;# 
  1013  0E12                     	;# 
  1014  0E13                     	;# 
  1015  0E14                     	;# 
  1016  0E15                     	;# 
  1017  0E17                     	;# 
  1018  0E20                     	;# 
  1019  0E21                     	;# 
  1020  0E22                     	;# 
  1021  0E24                     	;# 
  1022  0E25                     	;# 
  1023  0E28                     	;# 
  1024  0E29                     	;# 
  1025  0E2A                     	;# 
  1026  0E2B                     	;# 
  1027  0E90                     	;# 
  1028  0E91                     	;# 
  1029  0E92                     	;# 
  1030  0E93                     	;# 
  1031  0E94                     	;# 
  1032  0E95                     	;# 
  1033  0E96                     	;# 
  1034  0E97                     	;# 
  1035  0E98                     	;# 
  1036  0E99                     	;# 
  1037  0E9A                     	;# 
  1038  0E9B                     	;# 
  1039  0E9C                     	;# 
  1040  0E9D                     	;# 
  1041  0E9E                     	;# 
  1042  0E9F                     	;# 
  1043  0EA0                     	;# 
  1044  0EA1                     	;# 
  1045  0EA2                     	;# 
  1046  0EA3                     	;# 
  1047  0EA4                     	;# 
  1048  0EA5                     	;# 
  1049  0EA6                     	;# 
  1050  0EA7                     	;# 
  1051  0EA8                     	;# 
  1052  0EA9                     	;# 
  1053  0EAA                     	;# 
  1054  0EAB                     	;# 
  1055  0EAC                     	;# 
  1056  0EAD                     	;# 
  1057  0EAE                     	;# 
  1058  0EAF                     	;# 
  1059  0EB0                     	;# 
  1060  0EB1                     	;# 
  1061  0EB2                     	;# 
  1062  0F0F                     	;# 
  1063  0F10                     	;# 
  1064  0F11                     	;# 
  1065  0F12                     	;# 
  1066  0F13                     	;# 
  1067  0F14                     	;# 
  1068  0F15                     	;# 
  1069  0F16                     	;# 
  1070  0F17                     	;# 
  1071  0F18                     	;# 
  1072  0F19                     	;# 
  1073  0F1A                     	;# 
  1074  0F1B                     	;# 
  1075  0F1C                     	;# 
  1076  0F1D                     	;# 
  1077  0F1E                     	;# 
  1078  0F1F                     	;# 
  1079  0F20                     	;# 
  1080  0F21                     	;# 
  1081  0F22                     	;# 
  1082  0F23                     	;# 
  1083  0F24                     	;# 
  1084  0F25                     	;# 
  1085  0F26                     	;# 
  1086  0F27                     	;# 
  1087  0F28                     	;# 
  1088  0F29                     	;# 
  1089  0F2A                     	;# 
  1090  0F2B                     	;# 
  1091  0F2C                     	;# 
  1092  0F2D                     	;# 
  1093  0F2E                     	;# 
  1094  0F2F                     	;# 
  1095  0F30                     	;# 
  1096  0F31                     	;# 
  1097  0F32                     	;# 
  1098  0F33                     	;# 
  1099  0F34                     	;# 
  1100  0F35                     	;# 
  1101  0F36                     	;# 
  1102  0F37                     	;# 
  1103  0FE4                     	;# 
  1104  0FE5                     	;# 
  1105  0FE6                     	;# 
  1106  0FE7                     	;# 
  1107  0FE8                     	;# 
  1108  0FE9                     	;# 
  1109  0FEA                     	;# 
  1110  0FEB                     	;# 
  1111  0FED                     	;# 
  1112  0FEE                     	;# 
  1113  0FEF                     	;# 
  1114  0000                     	;# 
  1115  0001                     	;# 
  1116  0002                     	;# 
  1117  0003                     	;# 
  1118  0004                     	;# 
  1119  0005                     	;# 
  1120  0006                     	;# 
  1121  0007                     	;# 
  1122  0008                     	;# 
  1123  0009                     	;# 
  1124  000A                     	;# 
  1125  000B                     	;# 
  1126  000C                     	;# 
  1127  000D                     	;# 
  1128  000E                     	;# 
  1129  000F                     	;# 
  1130  0010                     	;# 
  1131  0011                     	;# 
  1132  0012                     	;# 
  1133  0013                     	;# 
  1134  0015                     	;# 
  1135  0016                     	;# 
  1136  0016                     	;# 
  1137  0017                     	;# 
  1138  0018                     	;# 
  1139  0019                     	;# 
  1140  001A                     	;# 
  1141  001B                     	;# 
  1142  001C                     	;# 
  1143  008C                     	;# 
  1144  008D                     	;# 
  1145  008E                     	;# 
  1146  008F                     	;# 
  1147  0090                     	;# 
  1148  0091                     	;# 
  1149  0092                     	;# 
  1150  0093                     	;# 
  1151  0095                     	;# 
  1152  0096                     	;# 
  1153  0097                     	;# 
  1154  0098                     	;# 
  1155  0099                     	;# 
  1156  009A                     	;# 
  1157  009B                     	;# 
  1158  009B                     	;# 
  1159  009C                     	;# 
  1160  009D                     	;# 
  1161  009E                     	;# 
  1162  009F                     	;# 
  1163  010C                     	;# 
  1164  010D                     	;# 
  1165  010E                     	;# 
  1166  010F                     	;# 
  1167  0110                     	;# 
  1168  0111                     	;# 
  1169  0112                     	;# 
  1170  0113                     	;# 
  1171  0114                     	;# 
  1172  0115                     	;# 
  1173  0116                     	;# 
  1174  0117                     	;# 
  1175  0118                     	;# 
  1176  0119                     	;# 
  1177  011A                     	;# 
  1178  011B                     	;# 
  1179  011B                     	;# 
  1180  011C                     	;# 
  1181  018C                     	;# 
  1182  018D                     	;# 
  1183  018E                     	;# 
  1184  018F                     	;# 
  1185  0190                     	;# 
  1186  0191                     	;# 
  1187  0191                     	;# 
  1188  0192                     	;# 
  1189  0193                     	;# 
  1190  0193                     	;# 
  1191  0194                     	;# 
  1192  0195                     	;# 
  1193  0196                     	;# 
  1194  0197                     	;# 
  1195  0199                     	;# 
  1196  0199                     	;# 
  1197  0199                     	;# 
  1198  019A                     	;# 
  1199  019A                     	;# 
  1200  019A                     	;# 
  1201  019B                     	;# 
  1202  019B                     	;# 
  1203  019B                     	;# 
  1204  019B                     	;# 
  1205  019B                     	;# 
  1206  019C                     	;# 
  1207  019C                     	;# 
  1208  019C                     	;# 
  1209  019D                     	;# 
  1210  019D                     	;# 
  1211  019D                     	;# 
  1212  019E                     	;# 
  1213  019E                     	;# 
  1214  019E                     	;# 
  1215  019F                     	;# 
  1216  019F                     	;# 
  1217  019F                     	;# 
  1218  019F                     	;# 
  1219  019F                     	;# 
  1220  020C                     	;# 
  1221  020D                     	;# 
  1222  020E                     	;# 
  1223  020F                     	;# 
  1224  0210                     	;# 
  1225  0211                     	;# 
  1226  0211                     	;# 
  1227  0212                     	;# 
  1228  0212                     	;# 
  1229  0213                     	;# 
  1230  0213                     	;# 
  1231  0214                     	;# 
  1232  0214                     	;# 
  1233  0215                     	;# 
  1234  0215                     	;# 
  1235  0215                     	;# 
  1236  0215                     	;# 
  1237  0216                     	;# 
  1238  0216                     	;# 
  1239  0217                     	;# 
  1240  0217                     	;# 
  1241  028C                     	;# 
  1242  028D                     	;# 
  1243  028E                     	;# 
  1244  028F                     	;# 
  1245  0290                     	;# 
  1246  0291                     	;# 
  1247  0291                     	;# 
  1248  0292                     	;# 
  1249  0293                     	;# 
  1250  0293                     	;# 
  1251  0298                     	;# 
  1252  0298                     	;# 
  1253  0299                     	;# 
  1254  029A                     	;# 
  1255  029A                     	;# 
  1256  029E                     	;# 
  1257  030C                     	;# 
  1258  030D                     	;# 
  1259  030E                     	;# 
  1260  030F                     	;# 
  1261  0310                     	;# 
  1262  038C                     	;# 
  1263  038D                     	;# 
  1264  038E                     	;# 
  1265  038F                     	;# 
  1266  0390                     	;# 
  1267  0391                     	;# 
  1268  0392                     	;# 
  1269  0393                     	;# 
  1270  0394                     	;# 
  1271  0395                     	;# 
  1272  0396                     	;# 
  1273  0397                     	;# 
  1274  0398                     	;# 
  1275  0399                     	;# 
  1276  039D                     	;# 
  1277  039E                     	;# 
  1278  039F                     	;# 
  1279  0415                     	;# 
  1280  0416                     	;# 
  1281  0417                     	;# 
  1282  041C                     	;# 
  1283  041D                     	;# 
  1284  041E                     	;# 
  1285  0498                     	;# 
  1286  0498                     	;# 
  1287  0499                     	;# 
  1288  049A                     	;# 
  1289  049B                     	;# 
  1290  049B                     	;# 
  1291  049C                     	;# 
  1292  049D                     	;# 
  1293  049E                     	;# 
  1294  049F                     	;# 
  1295  0511                     	;# 
  1296  0515                     	;# 
  1297  0617                     	;# 
  1298  0618                     	;# 
  1299  0619                     	;# 
  1300  0619                     	;# 
  1301  061A                     	;# 
  1302  061B                     	;# 
  1303  061C                     	;# 
  1304  061C                     	;# 
  1305  0691                     	;# 
  1306  0692                     	;# 
  1307  0693                     	;# 
  1308  0694                     	;# 
  1309  0695                     	;# 
  1310  0696                     	;# 
  1311  0697                     	;# 
  1312  0698                     	;# 
  1313  0699                     	;# 
  1314  069A                     	;# 
  1315  069B                     	;# 
  1316  069C                     	;# 
  1317  069D                     	;# 
  1318  069E                     	;# 
  1319  069F                     	;# 
  1320  0E0F                     	;# 
  1321  0E10                     	;# 
  1322  0E11                     	;# 
  1323  0E12                     	;# 
  1324  0E13                     	;# 
  1325  0E14                     	;# 
  1326  0E15                     	;# 
  1327  0E17                     	;# 
  1328  0E20                     	;# 
  1329  0E21                     	;# 
  1330  0E22                     	;# 
  1331  0E24                     	;# 
  1332  0E25                     	;# 
  1333  0E28                     	;# 
  1334  0E29                     	;# 
  1335  0E2A                     	;# 
  1336  0E2B                     	;# 
  1337  0E90                     	;# 
  1338  0E91                     	;# 
  1339  0E92                     	;# 
  1340  0E93                     	;# 
  1341  0E94                     	;# 
  1342  0E95                     	;# 
  1343  0E96                     	;# 
  1344  0E97                     	;# 
  1345  0E98                     	;# 
  1346  0E99                     	;# 
  1347  0E9A                     	;# 
  1348  0E9B                     	;# 
  1349  0E9C                     	;# 
  1350  0E9D                     	;# 
  1351  0E9E                     	;# 
  1352  0E9F                     	;# 
  1353  0EA0                     	;# 
  1354  0EA1                     	;# 
  1355  0EA2                     	;# 
  1356  0EA3                     	;# 
  1357  0EA4                     	;# 
  1358  0EA5                     	;# 
  1359  0EA6                     	;# 
  1360  0EA7                     	;# 
  1361  0EA8                     	;# 
  1362  0EA9                     	;# 
  1363  0EAA                     	;# 
  1364  0EAB                     	;# 
  1365  0EAC                     	;# 
  1366  0EAD                     	;# 
  1367  0EAE                     	;# 
  1368  0EAF                     	;# 
  1369  0EB0                     	;# 
  1370  0EB1                     	;# 
  1371  0EB2                     	;# 
  1372  0F0F                     	;# 
  1373  0F10                     	;# 
  1374  0F11                     	;# 
  1375  0F12                     	;# 
  1376  0F13                     	;# 
  1377  0F14                     	;# 
  1378  0F15                     	;# 
  1379  0F16                     	;# 
  1380  0F17                     	;# 
  1381  0F18                     	;# 
  1382  0F19                     	;# 
  1383  0F1A                     	;# 
  1384  0F1B                     	;# 
  1385  0F1C                     	;# 
  1386  0F1D                     	;# 
  1387  0F1E                     	;# 
  1388  0F1F                     	;# 
  1389  0F20                     	;# 
  1390  0F21                     	;# 
  1391  0F22                     	;# 
  1392  0F23                     	;# 
  1393  0F24                     	;# 
  1394  0F25                     	;# 
  1395  0F26                     	;# 
  1396  0F27                     	;# 
  1397  0F28                     	;# 
  1398  0F29                     	;# 
  1399  0F2A                     	;# 
  1400  0F2B                     	;# 
  1401  0F2C                     	;# 
  1402  0F2D                     	;# 
  1403  0F2E                     	;# 
  1404  0F2F                     	;# 
  1405  0F30                     	;# 
  1406  0F31                     	;# 
  1407  0F32                     	;# 
  1408  0F33                     	;# 
  1409  0F34                     	;# 
  1410  0F35                     	;# 
  1411  0F36                     	;# 
  1412  0F37                     	;# 
  1413  0FE4                     	;# 
  1414  0FE5                     	;# 
  1415  0FE6                     	;# 
  1416  0FE7                     	;# 
  1417  0FE8                     	;# 
  1418  0FE9                     	;# 
  1419  0FEA                     	;# 
  1420  0FEB                     	;# 
  1421  0FED                     	;# 
  1422  0FEE                     	;# 
  1423  0FEF                     	;# 
  1424  0000                     	;# 
  1425  0001                     	;# 
  1426  0002                     	;# 
  1427  0003                     	;# 
  1428  0004                     	;# 
  1429  0005                     	;# 
  1430  0006                     	;# 
  1431  0007                     	;# 
  1432  0008                     	;# 
  1433  0009                     	;# 
  1434  000A                     	;# 
  1435  000B                     	;# 
  1436  000C                     	;# 
  1437  000D                     	;# 
  1438  000E                     	;# 
  1439  000F                     	;# 
  1440  0010                     	;# 
  1441  0011                     	;# 
  1442  0012                     	;# 
  1443  0013                     	;# 
  1444  0015                     	;# 
  1445  0016                     	;# 
  1446  0016                     	;# 
  1447  0017                     	;# 
  1448  0018                     	;# 
  1449  0019                     	;# 
  1450  001A                     	;# 
  1451  001B                     	;# 
  1452  001C                     	;# 
  1453  008C                     	;# 
  1454  008D                     	;# 
  1455  008E                     	;# 
  1456  008F                     	;# 
  1457  0090                     	;# 
  1458  0091                     	;# 
  1459  0092                     	;# 
  1460  0093                     	;# 
  1461  0095                     	;# 
  1462  0096                     	;# 
  1463  0097                     	;# 
  1464  0098                     	;# 
  1465  0099                     	;# 
  1466  009A                     	;# 
  1467  009B                     	;# 
  1468  009B                     	;# 
  1469  009C                     	;# 
  1470  009D                     	;# 
  1471  009E                     	;# 
  1472  009F                     	;# 
  1473  010C                     	;# 
  1474  010D                     	;# 
  1475  010E                     	;# 
  1476  010F                     	;# 
  1477  0110                     	;# 
  1478  0111                     	;# 
  1479  0112                     	;# 
  1480  0113                     	;# 
  1481  0114                     	;# 
  1482  0115                     	;# 
  1483  0116                     	;# 
  1484  0117                     	;# 
  1485  0118                     	;# 
  1486  0119                     	;# 
  1487  011A                     	;# 
  1488  011B                     	;# 
  1489  011B                     	;# 
  1490  011C                     	;# 
  1491  018C                     	;# 
  1492  018D                     	;# 
  1493  018E                     	;# 
  1494  018F                     	;# 
  1495  0190                     	;# 
  1496  0191                     	;# 
  1497  0191                     	;# 
  1498  0192                     	;# 
  1499  0193                     	;# 
  1500  0193                     	;# 
  1501  0194                     	;# 
  1502  0195                     	;# 
  1503  0196                     	;# 
  1504  0197                     	;# 
  1505  0199                     	;# 
  1506  0199                     	;# 
  1507  0199                     	;# 
  1508  019A                     	;# 
  1509  019A                     	;# 
  1510  019A                     	;# 
  1511  019B                     	;# 
  1512  019B                     	;# 
  1513  019B                     	;# 
  1514  019B                     	;# 
  1515  019B                     	;# 
  1516  019C                     	;# 
  1517  019C                     	;# 
  1518  019C                     	;# 
  1519  019D                     	;# 
  1520  019D                     	;# 
  1521  019D                     	;# 
  1522  019E                     	;# 
  1523  019E                     	;# 
  1524  019E                     	;# 
  1525  019F                     	;# 
  1526  019F                     	;# 
  1527  019F                     	;# 
  1528  019F                     	;# 
  1529  019F                     	;# 
  1530  020C                     	;# 
  1531  020D                     	;# 
  1532  020E                     	;# 
  1533  020F                     	;# 
  1534  0210                     	;# 
  1535  0211                     	;# 
  1536  0211                     	;# 
  1537  0212                     	;# 
  1538  0212                     	;# 
  1539  0213                     	;# 
  1540  0213                     	;# 
  1541  0214                     	;# 
  1542  0214                     	;# 
  1543  0215                     	;# 
  1544  0215                     	;# 
  1545  0215                     	;# 
  1546  0215                     	;# 
  1547  0216                     	;# 
  1548  0216                     	;# 
  1549  0217                     	;# 
  1550  0217                     	;# 
  1551  028C                     	;# 
  1552  028D                     	;# 
  1553  028E                     	;# 
  1554  028F                     	;# 
  1555  0290                     	;# 
  1556  0291                     	;# 
  1557  0291                     	;# 
  1558  0292                     	;# 
  1559  0293                     	;# 
  1560  0293                     	;# 
  1561  0298                     	;# 
  1562  0298                     	;# 
  1563  0299                     	;# 
  1564  029A                     	;# 
  1565  029A                     	;# 
  1566  029E                     	;# 
  1567  030C                     	;# 
  1568  030D                     	;# 
  1569  030E                     	;# 
  1570  030F                     	;# 
  1571  0310                     	;# 
  1572  038C                     	;# 
  1573  038D                     	;# 
  1574  038E                     	;# 
  1575  038F                     	;# 
  1576  0390                     	;# 
  1577  0391                     	;# 
  1578  0392                     	;# 
  1579  0393                     	;# 
  1580  0394                     	;# 
  1581  0395                     	;# 
  1582  0396                     	;# 
  1583  0397                     	;# 
  1584  0398                     	;# 
  1585  0399                     	;# 
  1586  039D                     	;# 
  1587  039E                     	;# 
  1588  039F                     	;# 
  1589  0415                     	;# 
  1590  0416                     	;# 
  1591  0417                     	;# 
  1592  041C                     	;# 
  1593  041D                     	;# 
  1594  041E                     	;# 
  1595  0498                     	;# 
  1596  0498                     	;# 
  1597  0499                     	;# 
  1598  049A                     	;# 
  1599  049B                     	;# 
  1600  049B                     	;# 
  1601  049C                     	;# 
  1602  049D                     	;# 
  1603  049E                     	;# 
  1604  049F                     	;# 
  1605  0511                     	;# 
  1606  0515                     	;# 
  1607  0617                     	;# 
  1608  0618                     	;# 
  1609  0619                     	;# 
  1610  0619                     	;# 
  1611  061A                     	;# 
  1612  061B                     	;# 
  1613  061C                     	;# 
  1614  061C                     	;# 
  1615  0691                     	;# 
  1616  0692                     	;# 
  1617  0693                     	;# 
  1618  0694                     	;# 
  1619  0695                     	;# 
  1620  0696                     	;# 
  1621  0697                     	;# 
  1622  0698                     	;# 
  1623  0699                     	;# 
  1624  069A                     	;# 
  1625  069B                     	;# 
  1626  069C                     	;# 
  1627  069D                     	;# 
  1628  069E                     	;# 
  1629  069F                     	;# 
  1630  0E0F                     	;# 
  1631  0E10                     	;# 
  1632  0E11                     	;# 
  1633  0E12                     	;# 
  1634  0E13                     	;# 
  1635  0E14                     	;# 
  1636  0E15                     	;# 
  1637  0E17                     	;# 
  1638  0E20                     	;# 
  1639  0E21                     	;# 
  1640  0E22                     	;# 
  1641  0E24                     	;# 
  1642  0E25                     	;# 
  1643  0E28                     	;# 
  1644  0E29                     	;# 
  1645  0E2A                     	;# 
  1646  0E2B                     	;# 
  1647  0E90                     	;# 
  1648  0E91                     	;# 
  1649  0E92                     	;# 
  1650  0E93                     	;# 
  1651  0E94                     	;# 
  1652  0E95                     	;# 
  1653  0E96                     	;# 
  1654  0E97                     	;# 
  1655  0E98                     	;# 
  1656  0E99                     	;# 
  1657  0E9A                     	;# 
  1658  0E9B                     	;# 
  1659  0E9C                     	;# 
  1660  0E9D                     	;# 
  1661  0E9E                     	;# 
  1662  0E9F                     	;# 
  1663  0EA0                     	;# 
  1664  0EA1                     	;# 
  1665  0EA2                     	;# 
  1666  0EA3                     	;# 
  1667  0EA4                     	;# 
  1668  0EA5                     	;# 
  1669  0EA6                     	;# 
  1670  0EA7                     	;# 
  1671  0EA8                     	;# 
  1672  0EA9                     	;# 
  1673  0EAA                     	;# 
  1674  0EAB                     	;# 
  1675  0EAC                     	;# 
  1676  0EAD                     	;# 
  1677  0EAE                     	;# 
  1678  0EAF                     	;# 
  1679  0EB0                     	;# 
  1680  0EB1                     	;# 
  1681  0EB2                     	;# 
  1682  0F0F                     	;# 
  1683  0F10                     	;# 
  1684  0F11                     	;# 
  1685  0F12                     	;# 
  1686  0F13                     	;# 
  1687  0F14                     	;# 
  1688  0F15                     	;# 
  1689  0F16                     	;# 
  1690  0F17                     	;# 
  1691  0F18                     	;# 
  1692  0F19                     	;# 
  1693  0F1A                     	;# 
  1694  0F1B                     	;# 
  1695  0F1C                     	;# 
  1696  0F1D                     	;# 
  1697  0F1E                     	;# 
  1698  0F1F                     	;# 
  1699  0F20                     	;# 
  1700  0F21                     	;# 
  1701  0F22                     	;# 
  1702  0F23                     	;# 
  1703  0F24                     	;# 
  1704  0F25                     	;# 
  1705  0F26                     	;# 
  1706  0F27                     	;# 
  1707  0F28                     	;# 
  1708  0F29                     	;# 
  1709  0F2A                     	;# 
  1710  0F2B                     	;# 
  1711  0F2C                     	;# 
  1712  0F2D                     	;# 
  1713  0F2E                     	;# 
  1714  0F2F                     	;# 
  1715  0F30                     	;# 
  1716  0F31                     	;# 
  1717  0F32                     	;# 
  1718  0F33                     	;# 
  1719  0F34                     	;# 
  1720  0F35                     	;# 
  1721  0F36                     	;# 
  1722  0F37                     	;# 
  1723  0FE4                     	;# 
  1724  0FE5                     	;# 
  1725  0FE6                     	;# 
  1726  0FE7                     	;# 
  1727  0FE8                     	;# 
  1728  0FE9                     	;# 
  1729  0FEA                     	;# 
  1730  0FEB                     	;# 
  1731  0FED                     	;# 
  1732  0FEE                     	;# 
  1733  0FEF                     	;# 
  1734  0000                     	;# 
  1735  0001                     	;# 
  1736  0002                     	;# 
  1737  0003                     	;# 
  1738  0004                     	;# 
  1739  0005                     	;# 
  1740  0006                     	;# 
  1741  0007                     	;# 
  1742  0008                     	;# 
  1743  0009                     	;# 
  1744  000A                     	;# 
  1745  000B                     	;# 
  1746  000C                     	;# 
  1747  000D                     	;# 
  1748  000E                     	;# 
  1749  000F                     	;# 
  1750  0010                     	;# 
  1751  0011                     	;# 
  1752  0012                     	;# 
  1753  0013                     	;# 
  1754  0015                     	;# 
  1755  0016                     	;# 
  1756  0016                     	;# 
  1757  0017                     	;# 
  1758  0018                     	;# 
  1759  0019                     	;# 
  1760  001A                     	;# 
  1761  001B                     	;# 
  1762  001C                     	;# 
  1763  008C                     	;# 
  1764  008D                     	;# 
  1765  008E                     	;# 
  1766  008F                     	;# 
  1767  0090                     	;# 
  1768  0091                     	;# 
  1769  0092                     	;# 
  1770  0093                     	;# 
  1771  0095                     	;# 
  1772  0096                     	;# 
  1773  0097                     	;# 
  1774  0098                     	;# 
  1775  0099                     	;# 
  1776  009A                     	;# 
  1777  009B                     	;# 
  1778  009B                     	;# 
  1779  009C                     	;# 
  1780  009D                     	;# 
  1781  009E                     	;# 
  1782  009F                     	;# 
  1783  010C                     	;# 
  1784  010D                     	;# 
  1785  010E                     	;# 
  1786  010F                     	;# 
  1787  0110                     	;# 
  1788  0111                     	;# 
  1789  0112                     	;# 
  1790  0113                     	;# 
  1791  0114                     	;# 
  1792  0115                     	;# 
  1793  0116                     	;# 
  1794  0117                     	;# 
  1795  0118                     	;# 
  1796  0119                     	;# 
  1797  011A                     	;# 
  1798  011B                     	;# 
  1799  011B                     	;# 
  1800  011C                     	;# 
  1801  018C                     	;# 
  1802  018D                     	;# 
  1803  018E                     	;# 
  1804  018F                     	;# 
  1805  0190                     	;# 
  1806  0191                     	;# 
  1807  0191                     	;# 
  1808  0192                     	;# 
  1809  0193                     	;# 
  1810  0193                     	;# 
  1811  0194                     	;# 
  1812  0195                     	;# 
  1813  0196                     	;# 
  1814  0197                     	;# 
  1815  0199                     	;# 
  1816  0199                     	;# 
  1817  0199                     	;# 
  1818  019A                     	;# 
  1819  019A                     	;# 
  1820  019A                     	;# 
  1821  019B                     	;# 
  1822  019B                     	;# 
  1823  019B                     	;# 
  1824  019B                     	;# 
  1825  019B                     	;# 
  1826  019C                     	;# 
  1827  019C                     	;# 
  1828  019C                     	;# 
  1829  019D                     	;# 
  1830  019D                     	;# 
  1831  019D                     	;# 
  1832  019E                     	;# 
  1833  019E                     	;# 
  1834  019E                     	;# 
  1835  019F                     	;# 
  1836  019F                     	;# 
  1837  019F                     	;# 
  1838  019F                     	;# 
  1839  019F                     	;# 
  1840  020C                     	;# 
  1841  020D                     	;# 
  1842  020E                     	;# 
  1843  020F                     	;# 
  1844  0210                     	;# 
  1845  0211                     	;# 
  1846  0211                     	;# 
  1847  0212                     	;# 
  1848  0212                     	;# 
  1849  0213                     	;# 
  1850  0213                     	;# 
  1851  0214                     	;# 
  1852  0214                     	;# 
  1853  0215                     	;# 
  1854  0215                     	;# 
  1855  0215                     	;# 
  1856  0215                     	;# 
  1857  0216                     	;# 
  1858  0216                     	;# 
  1859  0217                     	;# 
  1860  0217                     	;# 
  1861  028C                     	;# 
  1862  028D                     	;# 
  1863  028E                     	;# 
  1864  028F                     	;# 
  1865  0290                     	;# 
  1866  0291                     	;# 
  1867  0291                     	;# 
  1868  0292                     	;# 
  1869  0293                     	;# 
  1870  0293                     	;# 
  1871  0298                     	;# 
  1872  0298                     	;# 
  1873  0299                     	;# 
  1874  029A                     	;# 
  1875  029A                     	;# 
  1876  029E                     	;# 
  1877  030C                     	;# 
  1878  030D                     	;# 
  1879  030E                     	;# 
  1880  030F                     	;# 
  1881  0310                     	;# 
  1882  038C                     	;# 
  1883  038D                     	;# 
  1884  038E                     	;# 
  1885  038F                     	;# 
  1886  0390                     	;# 
  1887  0391                     	;# 
  1888  0392                     	;# 
  1889  0393                     	;# 
  1890  0394                     	;# 
  1891  0395                     	;# 
  1892  0396                     	;# 
  1893  0397                     	;# 
  1894  0398                     	;# 
  1895  0399                     	;# 
  1896  039D                     	;# 
  1897  039E                     	;# 
  1898  039F                     	;# 
  1899  0415                     	;# 
  1900  0416                     	;# 
  1901  0417                     	;# 
  1902  041C                     	;# 
  1903  041D                     	;# 
  1904  041E                     	;# 
  1905  0498                     	;# 
  1906  0498                     	;# 
  1907  0499                     	;# 
  1908  049A                     	;# 
  1909  049B                     	;# 
  1910  049B                     	;# 
  1911  049C                     	;# 
  1912  049D                     	;# 
  1913  049E                     	;# 
  1914  049F                     	;# 
  1915  0511                     	;# 
  1916  0515                     	;# 
  1917  0617                     	;# 
  1918  0618                     	;# 
  1919  0619                     	;# 
  1920  0619                     	;# 
  1921  061A                     	;# 
  1922  061B                     	;# 
  1923  061C                     	;# 
  1924  061C                     	;# 
  1925  0691                     	;# 
  1926  0692                     	;# 
  1927  0693                     	;# 
  1928  0694                     	;# 
  1929  0695                     	;# 
  1930  0696                     	;# 
  1931  0697                     	;# 
  1932  0698                     	;# 
  1933  0699                     	;# 
  1934  069A                     	;# 
  1935  069B                     	;# 
  1936  069C                     	;# 
  1937  069D                     	;# 
  1938  069E                     	;# 
  1939  069F                     	;# 
  1940  0E0F                     	;# 
  1941  0E10                     	;# 
  1942  0E11                     	;# 
  1943  0E12                     	;# 
  1944  0E13                     	;# 
  1945  0E14                     	;# 
  1946  0E15                     	;# 
  1947  0E17                     	;# 
  1948  0E20                     	;# 
  1949  0E21                     	;# 
  1950  0E22                     	;# 
  1951  0E24                     	;# 
  1952  0E25                     	;# 
  1953  0E28                     	;# 
  1954  0E29                     	;# 
  1955  0E2A                     	;# 
  1956  0E2B                     	;# 
  1957  0E90                     	;# 
  1958  0E91                     	;# 
  1959  0E92                     	;# 
  1960  0E93                     	;# 
  1961  0E94                     	;# 
  1962  0E95                     	;# 
  1963  0E96                     	;# 
  1964  0E97                     	;# 
  1965  0E98                     	;# 
  1966  0E99                     	;# 
  1967  0E9A                     	;# 
  1968  0E9B                     	;# 
  1969  0E9C                     	;# 
  1970  0E9D                     	;# 
  1971  0E9E                     	;# 
  1972  0E9F                     	;# 
  1973  0EA0                     	;# 
  1974  0EA1                     	;# 
  1975  0EA2                     	;# 
  1976  0EA3                     	;# 
  1977  0EA4                     	;# 
  1978  0EA5                     	;# 
  1979  0EA6                     	;# 
  1980  0EA7                     	;# 
  1981  0EA8                     	;# 
  1982  0EA9                     	;# 
  1983  0EAA                     	;# 
  1984  0EAB                     	;# 
  1985  0EAC                     	;# 
  1986  0EAD                     	;# 
  1987  0EAE                     	;# 
  1988  0EAF                     	;# 
  1989  0EB0                     	;# 
  1990  0EB1                     	;# 
  1991  0EB2                     	;# 
  1992  0F0F                     	;# 
  1993  0F10                     	;# 
  1994  0F11                     	;# 
  1995  0F12                     	;# 
  1996  0F13                     	;# 
  1997  0F14                     	;# 
  1998  0F15                     	;# 
  1999  0F16                     	;# 
  2000  0F17                     	;# 
  2001  0F18                     	;# 
  2002  0F19                     	;# 
  2003  0F1A                     	;# 
  2004  0F1B                     	;# 
  2005  0F1C                     	;# 
  2006  0F1D                     	;# 
  2007  0F1E                     	;# 
  2008  0F1F                     	;# 
  2009  0F20                     	;# 
  2010  0F21                     	;# 
  2011  0F22                     	;# 
  2012  0F23                     	;# 
  2013  0F24                     	;# 
  2014  0F25                     	;# 
  2015  0F26                     	;# 
  2016  0F27                     	;# 
  2017  0F28                     	;# 
  2018  0F29                     	;# 
  2019  0F2A                     	;# 
  2020  0F2B                     	;# 
  2021  0F2C                     	;# 
  2022  0F2D                     	;# 
  2023  0F2E                     	;# 
  2024  0F2F                     	;# 
  2025  0F30                     	;# 
  2026  0F31                     	;# 
  2027  0F32                     	;# 
  2028  0F33                     	;# 
  2029  0F34                     	;# 
  2030  0F35                     	;# 
  2031  0F36                     	;# 
  2032  0F37                     	;# 
  2033  0FE4                     	;# 
  2034  0FE5                     	;# 
  2035  0FE6                     	;# 
  2036  0FE7                     	;# 
  2037  0FE8                     	;# 
  2038  0FE9                     	;# 
  2039  0FEA                     	;# 
  2040  0FEB                     	;# 
  2041  0FED                     	;# 
  2042  0FEE                     	;# 
  2043  0FEF                     	;# 
  2044  0000                     	;# 
  2045  0001                     	;# 
  2046  0002                     	;# 
  2047  0003                     	;# 
  2048  0004                     	;# 
  2049  0005                     	;# 
  2050  0006                     	;# 
  2051  0007                     	;# 
  2052  0008                     	;# 
  2053  0009                     	;# 
  2054  000A                     	;# 
  2055  000B                     	;# 
  2056  000C                     	;# 
  2057  000D                     	;# 
  2058  000E                     	;# 
  2059  000F                     	;# 
  2060  0010                     	;# 
  2061  0011                     	;# 
  2062  0012                     	;# 
  2063  0013                     	;# 
  2064  0015                     	;# 
  2065  0016                     	;# 
  2066  0016                     	;# 
  2067  0017                     	;# 
  2068  0018                     	;# 
  2069  0019                     	;# 
  2070  001A                     	;# 
  2071  001B                     	;# 
  2072  001C                     	;# 
  2073  008C                     	;# 
  2074  008D                     	;# 
  2075  008E                     	;# 
  2076  008F                     	;# 
  2077  0090                     	;# 
  2078  0091                     	;# 
  2079  0092                     	;# 
  2080  0093                     	;# 
  2081  0095                     	;# 
  2082  0096                     	;# 
  2083  0097                     	;# 
  2084  0098                     	;# 
  2085  0099                     	;# 
  2086  009A                     	;# 
  2087  009B                     	;# 
  2088  009B                     	;# 
  2089  009C                     	;# 
  2090  009D                     	;# 
  2091  009E                     	;# 
  2092  009F                     	;# 
  2093  010C                     	;# 
  2094  010D                     	;# 
  2095  010E                     	;# 
  2096  010F                     	;# 
  2097  0110                     	;# 
  2098  0111                     	;# 
  2099  0112                     	;# 
  2100  0113                     	;# 
  2101  0114                     	;# 
  2102  0115                     	;# 
  2103  0116                     	;# 
  2104  0117                     	;# 
  2105  0118                     	;# 
  2106  0119                     	;# 
  2107  011A                     	;# 
  2108  011B                     	;# 
  2109  011B                     	;# 
  2110  011C                     	;# 
  2111  018C                     	;# 
  2112  018D                     	;# 
  2113  018E                     	;# 
  2114  018F                     	;# 
  2115  0190                     	;# 
  2116  0191                     	;# 
  2117  0191                     	;# 
  2118  0192                     	;# 
  2119  0193                     	;# 
  2120  0193                     	;# 
  2121  0194                     	;# 
  2122  0195                     	;# 
  2123  0196                     	;# 
  2124  0197                     	;# 
  2125  0199                     	;# 
  2126  0199                     	;# 
  2127  0199                     	;# 
  2128  019A                     	;# 
  2129  019A                     	;# 
  2130  019A                     	;# 
  2131  019B                     	;# 
  2132  019B                     	;# 
  2133  019B                     	;# 
  2134  019B                     	;# 
  2135  019B                     	;# 
  2136  019C                     	;# 
  2137  019C                     	;# 
  2138  019C                     	;# 
  2139  019D                     	;# 
  2140  019D                     	;# 
  2141  019D                     	;# 
  2142  019E                     	;# 
  2143  019E                     	;# 
  2144  019E                     	;# 
  2145  019F                     	;# 
  2146  019F                     	;# 
  2147  019F                     	;# 
  2148  019F                     	;# 
  2149  019F                     	;# 
  2150  020C                     	;# 
  2151  020D                     	;# 
  2152  020E                     	;# 
  2153  020F                     	;# 
  2154  0210                     	;# 
  2155  0211                     	;# 
  2156  0211                     	;# 
  2157  0212                     	;# 
  2158  0212                     	;# 
  2159  0213                     	;# 
  2160  0213                     	;# 
  2161  0214                     	;# 
  2162  0214                     	;# 
  2163  0215                     	;# 
  2164  0215                     	;# 
  2165  0215                     	;# 
  2166  0215                     	;# 
  2167  0216                     	;# 
  2168  0216                     	;# 
  2169  0217                     	;# 
  2170  0217                     	;# 
  2171  028C                     	;# 
  2172  028D                     	;# 
  2173  028E                     	;# 
  2174  028F                     	;# 
  2175  0290                     	;# 
  2176  0291                     	;# 
  2177  0291                     	;# 
  2178  0292                     	;# 
  2179  0293                     	;# 
  2180  0293                     	;# 
  2181  0298                     	;# 
  2182  0298                     	;# 
  2183  0299                     	;# 
  2184  029A                     	;# 
  2185  029A                     	;# 
  2186  029E                     	;# 
  2187  030C                     	;# 
  2188  030D                     	;# 
  2189  030E                     	;# 
  2190  030F                     	;# 
  2191  0310                     	;# 
  2192  038C                     	;# 
  2193  038D                     	;# 
  2194  038E                     	;# 
  2195  038F                     	;# 
  2196  0390                     	;# 
  2197  0391                     	;# 
  2198  0392                     	;# 
  2199  0393                     	;# 
  2200  0394                     	;# 
  2201  0395                     	;# 
  2202  0396                     	;# 
  2203  0397                     	;# 
  2204  0398                     	;# 
  2205  0399                     	;# 
  2206  039D                     	;# 
  2207  039E                     	;# 
  2208  039F                     	;# 
  2209  0415                     	;# 
  2210  0416                     	;# 
  2211  0417                     	;# 
  2212  041C                     	;# 
  2213  041D                     	;# 
  2214  041E                     	;# 
  2215  0498                     	;# 
  2216  0498                     	;# 
  2217  0499                     	;# 
  2218  049A                     	;# 
  2219  049B                     	;# 
  2220  049B                     	;# 
  2221  049C                     	;# 
  2222  049D                     	;# 
  2223  049E                     	;# 
  2224  049F                     	;# 
  2225  0511                     	;# 
  2226  0515                     	;# 
  2227  0617                     	;# 
  2228  0618                     	;# 
  2229  0619                     	;# 
  2230  0619                     	;# 
  2231  061A                     	;# 
  2232  061B                     	;# 
  2233  061C                     	;# 
  2234  061C                     	;# 
  2235  0691                     	;# 
  2236  0692                     	;# 
  2237  0693                     	;# 
  2238  0694                     	;# 
  2239  0695                     	;# 
  2240  0696                     	;# 
  2241  0697                     	;# 
  2242  0698                     	;# 
  2243  0699                     	;# 
  2244  069A                     	;# 
  2245  069B                     	;# 
  2246  069C                     	;# 
  2247  069D                     	;# 
  2248  069E                     	;# 
  2249  069F                     	;# 
  2250  0E0F                     	;# 
  2251  0E10                     	;# 
  2252  0E11                     	;# 
  2253  0E12                     	;# 
  2254  0E13                     	;# 
  2255  0E14                     	;# 
  2256  0E15                     	;# 
  2257  0E17                     	;# 
  2258  0E20                     	;# 
  2259  0E21                     	;# 
  2260  0E22                     	;# 
  2261  0E24                     	;# 
  2262  0E25                     	;# 
  2263  0E28                     	;# 
  2264  0E29                     	;# 
  2265  0E2A                     	;# 
  2266  0E2B                     	;# 
  2267  0E90                     	;# 
  2268  0E91                     	;# 
  2269  0E92                     	;# 
  2270  0E93                     	;# 
  2271  0E94                     	;# 
  2272  0E95                     	;# 
  2273  0E96                     	;# 
  2274  0E97                     	;# 
  2275  0E98                     	;# 
  2276  0E99                     	;# 
  2277  0E9A                     	;# 
  2278  0E9B                     	;# 
  2279  0E9C                     	;# 
  2280  0E9D                     	;# 
  2281  0E9E                     	;# 
  2282  0E9F                     	;# 
  2283  0EA0                     	;# 
  2284  0EA1                     	;# 
  2285  0EA2                     	;# 
  2286  0EA3                     	;# 
  2287  0EA4                     	;# 
  2288  0EA5                     	;# 
  2289  0EA6                     	;# 
  2290  0EA7                     	;# 
  2291  0EA8                     	;# 
  2292  0EA9                     	;# 
  2293  0EAA                     	;# 
  2294  0EAB                     	;# 
  2295  0EAC                     	;# 
  2296  0EAD                     	;# 
  2297  0EAE                     	;# 
  2298  0EAF                     	;# 
  2299  0EB0                     	;# 
  2300  0EB1                     	;# 
  2301  0EB2                     	;# 
  2302  0F0F                     	;# 
  2303  0F10                     	;# 
  2304  0F11                     	;# 
  2305  0F12                     	;# 
  2306  0F13                     	;# 
  2307  0F14                     	;# 
  2308  0F15                     	;# 
  2309  0F16                     	;# 
  2310  0F17                     	;# 
  2311  0F18                     	;# 
  2312  0F19                     	;# 
  2313  0F1A                     	;# 
  2314  0F1B                     	;# 
  2315  0F1C                     	;# 
  2316  0F1D                     	;# 
  2317  0F1E                     	;# 
  2318  0F1F                     	;# 
  2319  0F20                     	;# 
  2320  0F21                     	;# 
  2321  0F22                     	;# 
  2322  0F23                     	;# 
  2323  0F24                     	;# 
  2324  0F25                     	;# 
  2325  0F26                     	;# 
  2326  0F27                     	;# 
  2327  0F28                     	;# 
  2328  0F29                     	;# 
  2329  0F2A                     	;# 
  2330  0F2B                     	;# 
  2331  0F2C                     	;# 
  2332  0F2D                     	;# 
  2333  0F2E                     	;# 
  2334  0F2F                     	;# 
  2335  0F30                     	;# 
  2336  0F31                     	;# 
  2337  0F32                     	;# 
  2338  0F33                     	;# 
  2339  0F34                     	;# 
  2340  0F35                     	;# 
  2341  0F36                     	;# 
  2342  0F37                     	;# 
  2343  0FE4                     	;# 
  2344  0FE5                     	;# 
  2345  0FE6                     	;# 
  2346  0FE7                     	;# 
  2347  0FE8                     	;# 
  2348  0FE9                     	;# 
  2349  0FEA                     	;# 
  2350  0FEB                     	;# 
  2351  0FED                     	;# 
  2352  0FEE                     	;# 
  2353  0FEF                     	;_messageBuffer
  2354                           
  2355                           	psect	idataBANK3
  2356  33DF                     __pidataBANK3:	
  2357                           
  2358                           ;initializer for stoa@F1152
  2359  33DF  3428               	retlw	40
  2360  33E0  346E               	retlw	110
  2361  33E1  3475               	retlw	117
  2362  33E2  346C               	retlw	108
  2363  33E3  346C               	retlw	108
  2364  33E4  3429               	retlw	41
  2365  33E5  3400               	retlw	0
  2366                           
  2367                           ;initializer for _thermistorBetaValue
  2368  33E6  346B               	retlw	107
  2369  33E7  340D               	retlw	13
  2370                           
  2371                           	psect	stringtext1
  2372  3897                     __pstringtext1:	
  2373  3897                     _OCD_threshold_setting:	
  2374  3897  3411               	retlw	17
  2375  3898  3400               	retlw	0
  2376  3899  3416               	retlw	22
  2377  389A  3400               	retlw	0
  2378  389B  341C               	retlw	28
  2379  389C  3400               	retlw	0
  2380  389D  3421               	retlw	33
  2381  389E  3400               	retlw	0
  2382  389F  3427               	retlw	39
  2383  38A0  3400               	retlw	0
  2384  38A1  342C               	retlw	44
  2385  38A2  3400               	retlw	0
  2386  38A3  3432               	retlw	50
  2387  38A4  3400               	retlw	0
  2388  38A5  3438               	retlw	56
  2389  38A6  3400               	retlw	0
  2390  38A7  343D               	retlw	61
  2391  38A8  3400               	retlw	0
  2392  38A9  3443               	retlw	67
  2393  38AA  3400               	retlw	0
  2394  38AB  3448               	retlw	72
  2395  38AC  3400               	retlw	0
  2396  38AD  344E               	retlw	78
  2397  38AE  3400               	retlw	0
  2398  38AF  3453               	retlw	83
  2399  38B0  3400               	retlw	0
  2400  38B1  3459               	retlw	89
  2401  38B2  3400               	retlw	0
  2402  38B3  345E               	retlw	94
  2403  38B4  3400               	retlw	0
  2404  38B5  3464               	retlw	100
  2405  38B6  3400               	retlw	0
  2406  38B7                     __end_of_OCD_threshold_setting:	
  2407                           
  2408                           	psect	stringtext2
  2409  39AB                     __pstringtext2:	
  2410  39AB                     _OCD_delay_setting:	
  2411  39AB  3408               	retlw	8
  2412  39AC  3400               	retlw	0
  2413  39AD  3414               	retlw	20
  2414  39AE  3400               	retlw	0
  2415  39AF  3428               	retlw	40
  2416  39B0  3400               	retlw	0
  2417  39B1  3450               	retlw	80
  2418  39B2  3400               	retlw	0
  2419  39B3  34A0               	retlw	160
  2420  39B4  3400               	retlw	0
  2421  39B5  3440               	retlw	64
  2422  39B6  3401               	retlw	1
  2423  39B7  3480               	retlw	128
  2424  39B8  3402               	retlw	2
  2425  39B9  3400               	retlw	0
  2426  39BA  3405               	retlw	5
  2427  39BB                     __end_of_OCD_delay_setting:	
  2428                           
  2429                           	psect	stringtext3
  2430  39BB                     __pstringtext3:	
  2431  39BB                     _SCD_threshold_setting:	
  2432  39BB  342C               	retlw	44
  2433  39BC  3400               	retlw	0
  2434  39BD  3443               	retlw	67
  2435  39BE  3400               	retlw	0
  2436  39BF  3459               	retlw	89
  2437  39C0  3400               	retlw	0
  2438  39C1  346F               	retlw	111
  2439  39C2  3400               	retlw	0
  2440  39C3  3485               	retlw	133
  2441  39C4  3400               	retlw	0
  2442  39C5  349B               	retlw	155
  2443  39C6  3400               	retlw	0
  2444  39C7  34B2               	retlw	178
  2445  39C8  3400               	retlw	0
  2446  39C9  34C8               	retlw	200
  2447  39CA  3400               	retlw	0
  2448  39CB                     __end_of_SCD_threshold_setting:	
  2449                           
  2450                           	psect	stringtext4
  2451  39E9                     __pstringtext4:	
  2452  39E9                     _OV_delay_setting:	
  2453  39E9  3401               	retlw	1
  2454  39EA  3400               	retlw	0
  2455  39EB  3402               	retlw	2
  2456  39EC  3400               	retlw	0
  2457  39ED  3404               	retlw	4
  2458  39EE  3400               	retlw	0
  2459  39EF  3408               	retlw	8
  2460  39F0  3400               	retlw	0
  2461  39F1                     __end_of_OV_delay_setting:	
  2462                           
  2463                           	psect	stringtext5
  2464  39F1                     __pstringtext5:	
  2465  39F1                     _UV_delay_setting:	
  2466  39F1  3401               	retlw	1
  2467  39F2  3400               	retlw	0
  2468  39F3  3404               	retlw	4
  2469  39F4  3400               	retlw	0
  2470  39F5  3408               	retlw	8
  2471  39F6  3400               	retlw	0
  2472  39F7  3410               	retlw	16
  2473  39F8  3400               	retlw	0
  2474  39F9                     __end_of_UV_delay_setting:	
  2475                           
  2476                           	psect	stringtext6
  2477  39F9                     __pstringtext6:	
  2478  39F9                     _SCD_delay_setting:	
  2479  39F9  3446               	retlw	70
  2480  39FA  3400               	retlw	0
  2481  39FB  3464               	retlw	100
  2482  39FC  3400               	retlw	0
  2483  39FD  34C8               	retlw	200
  2484  39FE  3400               	retlw	0
  2485  39FF  3490               	retlw	144
  2486  3A00  3401               	retlw	1
  2487  3A01                     __end_of_SCD_delay_setting:	
  2488                           
  2489                           	psect	stringtext7
  2490  3A01                     __pstringtext7:	
  2491  3A01                     _Lg4:	
  2492  3A01  3426               	retlw	38
  2493  3A02  349E               	retlw	158
  2494  3A03  3478               	retlw	120
  2495  3A04  343E               	retlw	62
  2496  3A05                     __end_of_Lg4:	
  2497                           
  2498                           	psect	stringtext8
  2499  3A05                     __pstringtext8:	
  2500  3A05                     _Lg3:	
  2501  3A05  34EE               	retlw	238
  2502  3A06  34E9               	retlw	233
  2503  3A07  3491               	retlw	145
  2504  3A08  343E               	retlw	62
  2505  3A09                     __end_of_Lg3:	
  2506                           
  2507                           	psect	stringtext9
  2508  3A09                     __pstringtext9:	
  2509  3A09                     _Lg2:	
  2510  3A09  3413               	retlw	19
  2511  3A0A  34CE               	retlw	206
  2512  3A0B  34CC               	retlw	204
  2513  3A0C  343E               	retlw	62
  2514  3A0D                     __end_of_Lg2:	
  2515                           
  2516                           	psect	stringtext10
  2517  3A0D                     __pstringtext10:	
  2518  3A0D                     _Lg1:	
  2519  3A0D  34AA               	retlw	170
  2520  3A0E  34AA               	retlw	170
  2521  3A0F  342A               	retlw	42
  2522  3A10  343F               	retlw	63
  2523  3A11                     __end_of_Lg1:	
  2524                           
  2525                           	psect	stringtext11
  2526  3A11                     __pstringtext11:	
  2527  3A11                     _ln2_lo:	
  2528  3A11  34D1               	retlw	209
  2529  3A12  34F7               	retlw	247
  2530  3A13  3417               	retlw	23
  2531  3A14  3437               	retlw	55
  2532  3A15                     __end_of_ln2_lo:	
  2533                           
  2534                           	psect	stringtext12
  2535  3A15                     __pstringtext12:	
  2536  3A15                     _ln2_hi:	
  2537  3A15  3480               	retlw	128
  2538  3A16  3471               	retlw	113
  2539  3A17  3431               	retlw	49
  2540  3A18  343F               	retlw	63
  2541  3A19                     __end_of_ln2_hi:	
  2542                           
  2543                           	psect	stringtext13
  2544  3800                     __pstringtext13:	
  2545  3800                     _ATmega328_address:	
  2546  3800  3402               	retlw	2
  2547  3801  3400               	retlw	0
  2548  3802                     __end_of_ATmega328_address:	
  2549  0016                     _TMR1	set	22
  2550  0003                     _STATUSbits	set	3
  2551  000B                     _INTCONbits	set	11
  2552  0018                     _T1CONbits	set	24
  2553  0011                     _PIR1bits	set	17
  2554  0097                     _WDTCONbits	set	151
  2555  0090                     _TRISEbits	set	144
  2556  008C                     _TRISAbits	set	140
  2557  008E                     _TRISCbits	set	142
  2558  008D                     _TRISBbits	set	141
  2559  0091                     _PIE1bits	set	145
  2560  0476                     _TRISC6	set	1142
  2561  0477                     _TRISC7	set	1143
  2562  04CF                     _SPLLEN	set	1231
  2563  04CE                     _IRCF3	set	1230
  2564  04CD                     _IRCF2	set	1229
  2565  04CC                     _IRCF1	set	1228
  2566  04CB                     _IRCF0	set	1227
  2567  04C9                     _SCS1	set	1225
  2568  04C8                     _SCS0	set	1224
  2569  0110                     _LATEbits	set	272
  2570  010C                     _LATAbits	set	268
  2571  019A                     _TX1REG	set	410
  2572  0199                     _RC1REG	set	409
  2573  019D                     _RC1STAbits	set	413
  2574  019B                     _SPBRG	set	411
  2575  018E                     _ANSELCbits	set	398
  2576  018D                     _ANSELBbits	set	397
  2577  0CF5                     _TXEN	set	3317
  2578  0CEC                     _CREN	set	3308
  2579  0CEF                     _SPEN	set	3311
  2580  0CF4                     _SYNC	set	3316
  2581  0CF2                     _BRGH	set	3314
  2582  0216                     _SSPCON2bits	set	534
  2583  0211                     _SSPBUF	set	529
  2584  0212                     _SSPADD	set	530
  2585  0215                     _SSPCONbits	set	533
  2586  0E24                     _RXPPSbits	set	3620
  2587  0E20                     _SSPCLKPPSbits	set	3616
  2588  0E21                     _SSPDATPPSbits	set	3617
  2589  0E0F                     _PPSLOCKbits	set	3599
  2590  0E0F                     _PPSLOCK	set	3599
  2591  0E9A                     _RB2PPSbits	set	3738
  2592  0EA5                     _RC5PPSbits	set	3749
  2593  0EA4                     _RC4PPSbits	set	3748
  2594  3802                     STR_2:	
  2595  3802  3443               	retlw	67	;'C'
  2596  3803  3465               	retlw	101	;'e'
  2597  3804  346C               	retlw	108	;'l'
  2598  3805  346C               	retlw	108	;'l'
  2599  3806  3420               	retlw	32	;' '
  2600  3807  3462               	retlw	98	;'b'
  2601  3808  3461               	retlw	97	;'a'
  2602  3809  3474               	retlw	116	;'t'
  2603  380A  3474               	retlw	116	;'t'
  2604  380B  343A               	retlw	58	;':'
  2605  380C  3420               	retlw	32	;' '
  2606  380D  3425               	retlw	37	;'%'
  2607  380E  3469               	retlw	105	;'i'
  2608  380F  3420               	retlw	32	;' '
  2609  3810  342C               	retlw	44	;','
  2610  3811  3425               	retlw	37	;'%'
  2611  3812  3464               	retlw	100	;'d'
  2612  3813  342C               	retlw	44	;','
  2613  3814  3420               	retlw	32	;' '
  2614  3815  3425               	retlw	37	;'%'
  2615  3816  3464               	retlw	100	;'d'
  2616  3817  3420               	retlw	32	;' '
  2617  3818  342C               	retlw	44	;','
  2618  3819  3420               	retlw	32	;' '
  2619  381A  3425               	retlw	37	;'%'
  2620  381B  3464               	retlw	100	;'d'
  2621  381C  342C               	retlw	44	;','
  2622  381D  3420               	retlw	32	;' '
  2623  381E  3425               	retlw	37	;'%'
  2624  381F  3464               	retlw	100	;'d'
  2625  3820  342C               	retlw	44	;','
  2626  3821  3420               	retlw	32	;' '
  2627  3822  3425               	retlw	37	;'%'
  2628  3823  3464               	retlw	100	;'d'
  2629  3824  3420               	retlw	32	;' '
  2630  3825  3442               	retlw	66	;'B'
  2631  3826  3461               	retlw	97	;'a'
  2632  3827  3474               	retlw	116	;'t'
  2633  3828  3474               	retlw	116	;'t'
  2634  3829  3420               	retlw	32	;' '
  2635  382A  3443               	retlw	67	;'C'
  2636  382B  3475               	retlw	117	;'u'
  2637  382C  3472               	retlw	114	;'r'
  2638  382D  3472               	retlw	114	;'r'
  2639  382E  343A               	retlw	58	;':'
  2640  382F  3420               	retlw	32	;' '
  2641  3830  3425               	retlw	37	;'%'
  2642  3831  3469               	retlw	105	;'i'
  2643  3832  3420               	retlw	32	;' '
  2644  3833  3454               	retlw	84	;'T'
  2645  3834  3465               	retlw	101	;'e'
  2646  3835  346D               	retlw	109	;'m'
  2647  3836  3470               	retlw	112	;'p'
  2648  3837  343A               	retlw	58	;':'
  2649  3838  3420               	retlw	32	;' '
  2650  3839  3425               	retlw	37	;'%'
  2651  383A  3469               	retlw	105	;'i'
  2652  383B  3420               	retlw	32	;' '
  2653  383C  3443               	retlw	67	;'C'
  2654  383D  3454               	retlw	84	;'T'
  2655  383E  3452               	retlw	82	;'R'
  2656  383F  344C               	retlw	76	;'L'
  2657  3840  3432               	retlw	50	;'2'
  2658  3841  343A               	retlw	58	;':'
  2659  3842  3420               	retlw	32	;' '
  2660  3843  3425               	retlw	37	;'%'
  2661  3844  3469               	retlw	105	;'i'
  2662  3845  3420               	retlw	32	;' '
  2663  3846  340A               	retlw	10
  2664  3847  340D               	retlw	13
  2665  3848  3400               	retlw	0
  2666                           
  2667                           	psect	stringtext14
  2668  3849                     __pstringtext14:	
  2669  3849                     STR_1:	
  2670  3849  3457               	retlw	87	;'W'
  2671  384A  3441               	retlw	65	;'A'
  2672  384B  3454               	retlw	84	;'T'
  2673  384C  3443               	retlw	67	;'C'
  2674  384D  3448               	retlw	72	;'H'
  2675  384E  3444               	retlw	68	;'D'
  2676  384F  344F               	retlw	79	;'O'
  2677  3850  3447               	retlw	71	;'G'
  2678  3851  3420               	retlw	32	;' '
  2679  3852  344E               	retlw	78	;'N'
  2680  3853  344F               	retlw	79	;'O'
  2681  3854  3454               	retlw	84	;'T'
  2682  3855  3420               	retlw	32	;' '
  2683  3856  344B               	retlw	75	;'K'
  2684  3857  3449               	retlw	73	;'I'
  2685  3858  3443               	retlw	67	;'C'
  2686  3859  344B               	retlw	75	;'K'
  2687  385A  3445               	retlw	69	;'E'
  2688  385B  3444               	retlw	68	;'D'
  2689  385C  343A               	retlw	58	;':'
  2690  385D  3420               	retlw	32	;' '
  2691  385E  3441               	retlw	65	;'A'
  2692  385F  3446               	retlw	70	;'F'
  2693  3860  3445               	retlw	69	;'E'
  2694  3861  3420               	retlw	32	;' '
  2695  3862  3463               	retlw	99	;'c'
  2696  3863  346F               	retlw	111	;'o'
  2697  3864  346D               	retlw	109	;'m'
  2698  3865  346D               	retlw	109	;'m'
  2699  3866  3473               	retlw	115	;'s'
  2700  3867  3420               	retlw	32	;' '
  2701  3868  3465               	retlw	101	;'e'
  2702  3869  3472               	retlw	114	;'r'
  2703  386A  3472               	retlw	114	;'r'
  2704  386B  346F               	retlw	111	;'o'
  2705  386C  3472               	retlw	114	;'r'
  2706  386D  3420               	retlw	32	;' '
  2707  386E  340A               	retlw	10
  2708  386F  340D               	retlw	13
  2709  3870  3400               	retlw	0
  2710                           
  2711                           	psect	stringtext15
  2712  3871                     __pstringtext15:	
  2713  3871                     STR_8:	
  2714  3871  3450               	retlw	80	;'P'
  2715  3872  3472               	retlw	114	;'r'
  2716  3873  3469               	retlw	105	;'i'
  2717  3874  346E               	retlw	110	;'n'
  2718  3875  3474               	retlw	116	;'t'
  2719  3876  3469               	retlw	105	;'i'
  2720  3877  346E               	retlw	110	;'n'
  2721  3878  3467               	retlw	103	;'g'
  2722  3879  3420               	retlw	32	;' '
  2723  387A  346F               	retlw	111	;'o'
  2724  387B  3475               	retlw	117	;'u'
  2725  387C  3474               	retlw	116	;'t'
  2726  387D  3420               	retlw	32	;' '
  2727  387E  3441               	retlw	65	;'A'
  2728  387F  3446               	retlw	70	;'F'
  2729  3880  3445               	retlw	69	;'E'
  2730  3881  3420               	retlw	32	;' '
  2731  3882  3472               	retlw	114	;'r'
  2732  3883  3465               	retlw	101	;'e'
  2733  3884  3467               	retlw	103	;'g'
  2734  3885  3469               	retlw	105	;'i'
  2735  3886  3473               	retlw	115	;'s'
  2736  3887  3474               	retlw	116	;'t'
  2737  3888  3465               	retlw	101	;'e'
  2738  3889  3472               	retlw	114	;'r'
  2739  388A  3420               	retlw	32	;' '
  2740  388B  3476               	retlw	118	;'v'
  2741  388C  3461               	retlw	97	;'a'
  2742  388D  346C               	retlw	108	;'l'
  2743  388E  3475               	retlw	117	;'u'
  2744  388F  3465               	retlw	101	;'e'
  2745  3890  3473               	retlw	115	;'s'
  2746  3891  342E               	retlw	46	;'.'
  2747  3892  342E               	retlw	46	;'.'
  2748  3893  342E               	retlw	46	;'.'
  2749  3894  340A               	retlw	10
  2750  3895  340D               	retlw	13
  2751  3896  3400               	retlw	0
  2752                           
  2753                           	psect	stringtext16
  2754  38B7                     __pstringtext16:	
  2755  38B7                     STR_12:	
  2756  38B7  3430               	retlw	48	;'0'
  2757  38B8  3478               	retlw	120	;'x'
  2758  38B9  3430               	retlw	48	;'0'
  2759  38BA  3434               	retlw	52	;'4'
  2760  38BB  3420               	retlw	32	;' '
  2761  38BC  3453               	retlw	83	;'S'
  2762  38BD  3459               	retlw	89	;'Y'
  2763  38BE  3453               	retlw	83	;'S'
  2764  38BF  345F               	retlw	95	;'_'
  2765  38C0  3443               	retlw	67	;'C'
  2766  38C1  3454               	retlw	84	;'T'
  2767  38C2  3452               	retlw	82	;'R'
  2768  38C3  344C               	retlw	76	;'L'
  2769  38C4  3431               	retlw	49	;'1'
  2770  38C5  343A               	retlw	58	;':'
  2771  38C6  3420               	retlw	32	;' '
  2772  38C7  3425               	retlw	37	;'%'
  2773  38C8  3469               	retlw	105	;'i'
  2774  38C9  3420               	retlw	32	;' '
  2775  38CA  340A               	retlw	10
  2776  38CB  340D               	retlw	13
  2777  38CC  3400               	retlw	0
  2778                           
  2779                           	psect	stringtext17
  2780  38CD                     __pstringtext17:	
  2781  38CD                     STR_3:	
  2782  38CD  3430               	retlw	48	;'0'
  2783  38CE  3478               	retlw	120	;'x'
  2784  38CF  3430               	retlw	48	;'0'
  2785  38D0  3435               	retlw	53	;'5'
  2786  38D1  3420               	retlw	32	;' '
  2787  38D2  3453               	retlw	83	;'S'
  2788  38D3  3459               	retlw	89	;'Y'
  2789  38D4  3453               	retlw	83	;'S'
  2790  38D5  345F               	retlw	95	;'_'
  2791  38D6  3443               	retlw	67	;'C'
  2792  38D7  3454               	retlw	84	;'T'
  2793  38D8  3452               	retlw	82	;'R'
  2794  38D9  344C               	retlw	76	;'L'
  2795  38DA  3432               	retlw	50	;'2'
  2796  38DB  343A               	retlw	58	;':'
  2797  38DC  3420               	retlw	32	;' '
  2798  38DD  3425               	retlw	37	;'%'
  2799  38DE  3469               	retlw	105	;'i'
  2800  38DF  3420               	retlw	32	;' '
  2801  38E0  340A               	retlw	10
  2802  38E1  340D               	retlw	13
  2803  38E2  3400               	retlw	0
  2804                           
  2805                           	psect	stringtext18
  2806  38E3                     __pstringtext18:	
  2807  38E3                     STR_11:	
  2808  38E3  3430               	retlw	48	;'0'
  2809  38E4  3478               	retlw	120	;'x'
  2810  38E5  3430               	retlw	48	;'0'
  2811  38E6  3431               	retlw	49	;'1'
  2812  38E7  3420               	retlw	32	;' '
  2813  38E8  3443               	retlw	67	;'C'
  2814  38E9  3445               	retlw	69	;'E'
  2815  38EA  344C               	retlw	76	;'L'
  2816  38EB  344C               	retlw	76	;'L'
  2817  38EC  3442               	retlw	66	;'B'
  2818  38ED  3441               	retlw	65	;'A'
  2819  38EE  344C               	retlw	76	;'L'
  2820  38EF  3431               	retlw	49	;'1'
  2821  38F0  343A               	retlw	58	;':'
  2822  38F1  3420               	retlw	32	;' '
  2823  38F2  3425               	retlw	37	;'%'
  2824  38F3  3469               	retlw	105	;'i'
  2825  38F4  3420               	retlw	32	;' '
  2826  38F5  340A               	retlw	10
  2827  38F6  340D               	retlw	13
  2828  38F7  3400               	retlw	0
  2829                           
  2830                           	psect	stringtext19
  2831  38F8                     __pstringtext19:	
  2832  38F8                     STR_5:	
  2833  38F8  3430               	retlw	48	;'0'
  2834  38F9  3478               	retlw	120	;'x'
  2835  38FA  3430               	retlw	48	;'0'
  2836  38FB  3436               	retlw	54	;'6'
  2837  38FC  3420               	retlw	32	;' '
  2838  38FD  3450               	retlw	80	;'P'
  2839  38FE  3452               	retlw	82	;'R'
  2840  38FF  344F               	retlw	79	;'O'
  2841  3900  3454               	retlw	84	;'T'
  2842  3901  3445               	retlw	69	;'E'
  2843  3902  3443               	retlw	67	;'C'
  2844  3903  3454               	retlw	84	;'T'
  2845  3904  3431               	retlw	49	;'1'
  2846  3905  343A               	retlw	58	;':'
  2847  3906  3420               	retlw	32	;' '
  2848  3907  3425               	retlw	37	;'%'
  2849  3908  3469               	retlw	105	;'i'
  2850  3909  3420               	retlw	32	;' '
  2851  390A  340A               	retlw	10
  2852  390B  340D               	retlw	13
  2853  390C  3400               	retlw	0
  2854                           
  2855                           	psect	stringtext20
  2856  390D                     __pstringtext20:	
  2857  390D                     STR_15:	
  2858  390D  3430               	retlw	48	;'0'
  2859  390E  3478               	retlw	120	;'x'
  2860  390F  3430               	retlw	48	;'0'
  2861  3910  3437               	retlw	55	;'7'
  2862  3911  3420               	retlw	32	;' '
  2863  3912  3450               	retlw	80	;'P'
  2864  3913  3452               	retlw	82	;'R'
  2865  3914  344F               	retlw	79	;'O'
  2866  3915  3454               	retlw	84	;'T'
  2867  3916  3445               	retlw	69	;'E'
  2868  3917  3443               	retlw	67	;'C'
  2869  3918  3454               	retlw	84	;'T'
  2870  3919  3432               	retlw	50	;'2'
  2871  391A  343A               	retlw	58	;':'
  2872  391B  3420               	retlw	32	;' '
  2873  391C  3425               	retlw	37	;'%'
  2874  391D  3469               	retlw	105	;'i'
  2875  391E  3420               	retlw	32	;' '
  2876  391F  340A               	retlw	10
  2877  3920  340D               	retlw	13
  2878  3921  3400               	retlw	0
  2879                           
  2880                           	psect	stringtext21
  2881  3922                     __pstringtext21:	
  2882  3922                     STR_16:	
  2883  3922  3430               	retlw	48	;'0'
  2884  3923  3478               	retlw	120	;'x'
  2885  3924  3430               	retlw	48	;'0'
  2886  3925  3438               	retlw	56	;'8'
  2887  3926  3420               	retlw	32	;' '
  2888  3927  3450               	retlw	80	;'P'
  2889  3928  3452               	retlw	82	;'R'
  2890  3929  344F               	retlw	79	;'O'
  2891  392A  3454               	retlw	84	;'T'
  2892  392B  3445               	retlw	69	;'E'
  2893  392C  3443               	retlw	67	;'C'
  2894  392D  3454               	retlw	84	;'T'
  2895  392E  3433               	retlw	51	;'3'
  2896  392F  343A               	retlw	58	;':'
  2897  3930  3420               	retlw	32	;' '
  2898  3931  3425               	retlw	37	;'%'
  2899  3932  3469               	retlw	105	;'i'
  2900  3933  3420               	retlw	32	;' '
  2901  3934  340A               	retlw	10
  2902  3935  340D               	retlw	13
  2903  3936  3400               	retlw	0
  2904                           
  2905                           	psect	stringtext22
  2906  3937                     __pstringtext22:	
  2907  3937                     STR_4:	
  2908  3937  3430               	retlw	48	;'0'
  2909  3938  3478               	retlw	120	;'x'
  2910  3939  3430               	retlw	48	;'0'
  2911  393A  3430               	retlw	48	;'0'
  2912  393B  3420               	retlw	32	;' '
  2913  393C  3453               	retlw	83	;'S'
  2914  393D  3459               	retlw	89	;'Y'
  2915  393E  3453               	retlw	83	;'S'
  2916  393F  345F               	retlw	95	;'_'
  2917  3940  3453               	retlw	83	;'S'
  2918  3941  3454               	retlw	84	;'T'
  2919  3942  3441               	retlw	65	;'A'
  2920  3943  3454               	retlw	84	;'T'
  2921  3944  343A               	retlw	58	;':'
  2922  3945  3420               	retlw	32	;' '
  2923  3946  3425               	retlw	37	;'%'
  2924  3947  3469               	retlw	105	;'i'
  2925  3948  3420               	retlw	32	;' '
  2926  3949  340A               	retlw	10
  2927  394A  340D               	retlw	13
  2928  394B  3400               	retlw	0
  2929                           
  2930                           	psect	stringtext23
  2931  394C                     __pstringtext23:	
  2932  394C                     STR_17:	
  2933  394C  3430               	retlw	48	;'0'
  2934  394D  3478               	retlw	120	;'x'
  2935  394E  3430               	retlw	48	;'0'
  2936  394F  3439               	retlw	57	;'9'
  2937  3950  3420               	retlw	32	;' '
  2938  3951  344F               	retlw	79	;'O'
  2939  3952  3456               	retlw	86	;'V'
  2940  3953  345F               	retlw	95	;'_'
  2941  3954  3454               	retlw	84	;'T'
  2942  3955  3452               	retlw	82	;'R'
  2943  3956  3449               	retlw	73	;'I'
  2944  3957  3450               	retlw	80	;'P'
  2945  3958  343A               	retlw	58	;':'
  2946  3959  3420               	retlw	32	;' '
  2947  395A  3425               	retlw	37	;'%'
  2948  395B  3469               	retlw	105	;'i'
  2949  395C  3420               	retlw	32	;' '
  2950  395D  340A               	retlw	10
  2951  395E  340D               	retlw	13
  2952  395F  3400               	retlw	0
  2953                           
  2954                           	psect	stringtext24
  2955  3960                     __pstringtext24:	
  2956  3960                     STR_18:	
  2957  3960  3430               	retlw	48	;'0'
  2958  3961  3478               	retlw	120	;'x'
  2959  3962  3430               	retlw	48	;'0'
  2960  3963  3441               	retlw	65	;'A'
  2961  3964  3420               	retlw	32	;' '
  2962  3965  3455               	retlw	85	;'U'
  2963  3966  3456               	retlw	86	;'V'
  2964  3967  345F               	retlw	95	;'_'
  2965  3968  3454               	retlw	84	;'T'
  2966  3969  3452               	retlw	82	;'R'
  2967  396A  3449               	retlw	73	;'I'
  2968  396B  3450               	retlw	80	;'P'
  2969  396C  343A               	retlw	58	;':'
  2970  396D  3420               	retlw	32	;' '
  2971  396E  3425               	retlw	37	;'%'
  2972  396F  3469               	retlw	105	;'i'
  2973  3970  3420               	retlw	32	;' '
  2974  3971  340A               	retlw	10
  2975  3972  340D               	retlw	13
  2976  3973  3400               	retlw	0
  2977                           
  2978                           	psect	stringtext25
  2979  3974                     __pstringtext25:	
  2980  3974                     STR_19:	
  2981  3974  3430               	retlw	48	;'0'
  2982  3975  3478               	retlw	120	;'x'
  2983  3976  3430               	retlw	48	;'0'
  2984  3977  3442               	retlw	66	;'B'
  2985  3978  3420               	retlw	32	;' '
  2986  3979  3443               	retlw	67	;'C'
  2987  397A  3443               	retlw	67	;'C'
  2988  397B  345F               	retlw	95	;'_'
  2989  397C  3443               	retlw	67	;'C'
  2990  397D  3446               	retlw	70	;'F'
  2991  397E  3447               	retlw	71	;'G'
  2992  397F  343A               	retlw	58	;':'
  2993  3980  3420               	retlw	32	;' '
  2994  3981  3425               	retlw	37	;'%'
  2995  3982  3469               	retlw	105	;'i'
  2996  3983  3420               	retlw	32	;' '
  2997  3984  340A               	retlw	10
  2998  3985  340D               	retlw	13
  2999  3986  3400               	retlw	0
  3000                           
  3001                           	psect	stringtext26
  3002  3987                     __pstringtext26:	
  3003  3987                     STR_20:	
  3004  3987  3430               	retlw	48	;'0'
  3005  3988  3478               	retlw	120	;'x'
  3006  3989  3433               	retlw	51	;'3'
  3007  398A  3432               	retlw	50	;'2'
  3008  398B  3420               	retlw	32	;' '
  3009  398C  3443               	retlw	67	;'C'
  3010  398D  3443               	retlw	67	;'C'
  3011  398E  345F               	retlw	95	;'_'
  3012  398F  3448               	retlw	72	;'H'
  3013  3990  3449               	retlw	73	;'I'
  3014  3991  343A               	retlw	58	;':'
  3015  3992  3420               	retlw	32	;' '
  3016  3993  3425               	retlw	37	;'%'
  3017  3994  3469               	retlw	105	;'i'
  3018  3995  3420               	retlw	32	;' '
  3019  3996  340A               	retlw	10
  3020  3997  340D               	retlw	13
  3021  3998  3400               	retlw	0
  3022                           
  3023                           	psect	stringtext27
  3024  3999                     __pstringtext27:	
  3025  3999                     STR_21:	
  3026  3999  3430               	retlw	48	;'0'
  3027  399A  3478               	retlw	120	;'x'
  3028  399B  3433               	retlw	51	;'3'
  3029  399C  3433               	retlw	51	;'3'
  3030  399D  3420               	retlw	32	;' '
  3031  399E  3443               	retlw	67	;'C'
  3032  399F  3443               	retlw	67	;'C'
  3033  39A0  345F               	retlw	95	;'_'
  3034  39A1  344C               	retlw	76	;'L'
  3035  39A2  344F               	retlw	79	;'O'
  3036  39A3  343A               	retlw	58	;':'
  3037  39A4  3420               	retlw	32	;' '
  3038  39A5  3425               	retlw	37	;'%'
  3039  39A6  3469               	retlw	105	;'i'
  3040  39A7  3420               	retlw	32	;' '
  3041  39A8  340A               	retlw	10
  3042  39A9  340D               	retlw	13
  3043  39AA  3400               	retlw	0
  3044                           
  3045                           	psect	stringtext28
  3046  39CB                     __pstringtext28:	
  3047  39CB                     STR_6:	
  3048  39CB  3443               	retlw	67	;'C'
  3049  39CC  3475               	retlw	117	;'u'
  3050  39CD  3472               	retlw	114	;'r'
  3051  39CE  3472               	retlw	114	;'r'
  3052  39CF  3465               	retlw	101	;'e'
  3053  39D0  346E               	retlw	110	;'n'
  3054  39D1  3474               	retlw	116	;'t'
  3055  39D2  343A               	retlw	58	;':'
  3056  39D3  3420               	retlw	32	;' '
  3057  39D4  3425               	retlw	37	;'%'
  3058  39D5  3464               	retlw	100	;'d'
  3059  39D6  3420               	retlw	32	;' '
  3060  39D7  340A               	retlw	10
  3061  39D8  340D               	retlw	13
  3062  39D9  3400               	retlw	0
  3063                           
  3064                           	psect	stringtext29
  3065  39DA                     __pstringtext29:	
  3066  39DA                     STR_7:	
  3067  39DA  3454               	retlw	84	;'T'
  3068  39DB  3465               	retlw	101	;'e'
  3069  39DC  346D               	retlw	109	;'m'
  3070  39DD  3470               	retlw	112	;'p'
  3071  39DE  343A               	retlw	58	;':'
  3072  39DF  3420               	retlw	32	;' '
  3073  39E0  3425               	retlw	37	;'%'
  3074  39E1  3464               	retlw	100	;'d'
  3075  39E2  3420               	retlw	32	;' '
  3076  39E3  3465               	retlw	101	;'e'
  3077  39E4  342D               	retlw	45	;'-'
  3078  39E5  3432               	retlw	50	;'2'
  3079  39E6  340A               	retlw	10
  3080  39E7  340D               	retlw	13
  3081  39E8  3400               	retlw	0
  3082                           
  3083                           	psect	stringtext30
  3084  3A19                     __pstringtext30:	
  3085  3A19                     STR_99:	
  3086  3A19  3468               	retlw	104	;'h'
  3087  3A1A  3468               	retlw	104	;'h'
  3088  3A1B  3458               	retlw	88	;'X'
  3089  3A1C  3400               	retlw	0
  3090                           
  3091                           	psect	stringtext31
  3092  3A1D                     __pstringtext31:	
  3093  3A1D                     STR_23:	
  3094  3A1D  3468               	retlw	104	;'h'
  3095  3A1E  3468               	retlw	104	;'h'
  3096  3A1F  3464               	retlw	100	;'d'
  3097  3A20  3400               	retlw	0
  3098                           
  3099                           	psect	stringtext32
  3100  3A21                     __pstringtext32:	
  3101  3A21                     STR_27:	
  3102  3A21  3468               	retlw	104	;'h'
  3103  3A22  3468               	retlw	104	;'h'
  3104  3A23  3469               	retlw	105	;'i'
  3105  3A24  3400               	retlw	0
  3106                           
  3107                           	psect	stringtext33
  3108  3A25                     __pstringtext33:	
  3109  3A25                     STR_65:	
  3110  3A25  3468               	retlw	104	;'h'
  3111  3A26  3468               	retlw	104	;'h'
  3112  3A27  346E               	retlw	110	;'n'
  3113  3A28  3400               	retlw	0
  3114                           
  3115                           	psect	stringtext34
  3116  3A29                     __pstringtext34:	
  3117  3A29                     STR_50:	
  3118  3A29  3468               	retlw	104	;'h'
  3119  3A2A  3468               	retlw	104	;'h'
  3120  3A2B  346F               	retlw	111	;'o'
  3121  3A2C  3400               	retlw	0
  3122                           
  3123                           	psect	stringtext35
  3124  3A2D                     __pstringtext35:	
  3125  3A2D                     STR_80:	
  3126  3A2D  3468               	retlw	104	;'h'
  3127  3A2E  3468               	retlw	104	;'h'
  3128  3A2F  3475               	retlw	117	;'u'
  3129  3A30  3400               	retlw	0
  3130                           
  3131                           	psect	stringtext36
  3132  3A31                     __pstringtext36:	
  3133  3A31                     STR_95:	
  3134  3A31  3468               	retlw	104	;'h'
  3135  3A32  3468               	retlw	104	;'h'
  3136  3A33  3478               	retlw	120	;'x'
  3137  3A34  3400               	retlw	0
  3138                           
  3139                           	psect	stringtext37
  3140  3A35                     __pstringtext37:	
  3141  3A35                     STR_117:	
  3142  3A35  347A               	retlw	122	;'z'
  3143  3A36  3458               	retlw	88	;'X'
  3144  3A37  3400               	retlw	0
  3145                           
  3146                           	psect	stringtext38
  3147  3A38                     __pstringtext38:	
  3148  3A38                     STR_41:	
  3149  3A38  347A               	retlw	122	;'z'
  3150  3A39  3464               	retlw	100	;'d'
  3151  3A3A  3400               	retlw	0
  3152                           
  3153                           	psect	stringtext39
  3154  3A3B                     __pstringtext39:	
  3155  3A3B                     STR_45:	
  3156  3A3B  347A               	retlw	122	;'z'
  3157  3A3C  3469               	retlw	105	;'i'
  3158  3A3D  3400               	retlw	0
  3159                           
  3160                           	psect	stringtext40
  3161  3A3E                     __pstringtext40:	
  3162  3A3E                     STR_75:	
  3163  3A3E  347A               	retlw	122	;'z'
  3164  3A3F  346E               	retlw	110	;'n'
  3165  3A40  3400               	retlw	0
  3166                           
  3167                           	psect	stringtext41
  3168  3A41                     __pstringtext41:	
  3169  3A41                     STR_60:	
  3170  3A41  347A               	retlw	122	;'z'
  3171  3A42  346F               	retlw	111	;'o'
  3172  3A43  3400               	retlw	0
  3173                           
  3174                           	psect	stringtext42
  3175  3A44                     __pstringtext42:	
  3176  3A44                     STR_90:	
  3177  3A44  347A               	retlw	122	;'z'
  3178  3A45  3475               	retlw	117	;'u'
  3179  3A46  3400               	retlw	0
  3180                           
  3181                           	psect	stringtext43
  3182  3A47                     __pstringtext43:	
  3183  3A47                     STR_113:	
  3184  3A47  347A               	retlw	122	;'z'
  3185  3A48  3478               	retlw	120	;'x'
  3186  3A49  3400               	retlw	0
  3187                           
  3188                           	psect	stringtext44
  3189  0000                     __pstringtext44:	
  3190  39D7                     
  3191                           ; #config settings
  3192  0000                     
  3193                           	psect	cinit
  3194  0022                     start_initialization:	
  3195  0022                     __initialization:		;BIGRAM
  3196                           
  3197                           ; Initialize objects allocated to BANK3
  3198  0022  30DF               	movlw	low __pidataBANK3
  3199  0023  0084               	movwf	4
  3200  0024  30B3               	movlw	(high __pidataBANK3)| (0+128)
  3201  0025  0085               	movwf	5
  3202  0026  0023               	movlb	3	; select bank3
  3203  0027  0012               	moviw fsr0++
  3204  0028  00DA               	movwf	__pdataBANK3& (0+127)
  3205  0029  0012               	moviw fsr0++
  3206  002A  00DB               	movwf	(__pdataBANK3+1)& (0+127)
  3207  002B  0012               	moviw fsr0++
  3208  002C  00DC               	movwf	(__pdataBANK3+2)& (0+127)
  3209  002D  0012               	moviw fsr0++
  3210  002E  00DD               	movwf	(__pdataBANK3+3)& (0+127)
  3211  002F  0012               	moviw fsr0++
  3212  0030  00DE               	movwf	(__pdataBANK3+4)& (0+127)
  3213  0031  0012               	moviw fsr0++
  3214  0032  00DF               	movwf	(__pdataBANK3+5)& (0+127)
  3215  0033  0012               	moviw fsr0++
  3216  0034  00E0               	movwf	(__pdataBANK3+6)& (0+127)
  3217  0035  0012               	moviw fsr0++
  3218  0036  00E1               	movwf	(__pdataBANK3+7)& (0+127)
  3219  0037  0012               	moviw fsr0++
  3220  0038  00E2               	movwf	(__pdataBANK3+8)& (0+127)
  3221                           
  3222                           ; Clear objects allocated to BIGRAM
  3223  0039  3071               	movlw	low (0+10097)
  3224  003A  0084               	movwf	4
  3225  003B  3027               	movlw	high (0+10097)
  3226  003C  0085               	movwf	5
  3227  003D  307F               	movlw	127
  3228  003E  00FE               	movwf	btemp
  3229  003F  3000               	movlw	0
  3230  0040  00FF               	movwf	btemp+1
  3231  0041  31B4  2411  3180   	fcall	clear_ram0
  3232                           
  3233                           ; Clear objects allocated to COMMON
  3234  0044  01FC               	clrf	__pbssCOMMON& (0+127)
  3235                           
  3236                           ; Clear objects allocated to BANK1
  3237  0045  0021               	movlb	1	; select bank1
  3238  0046  01EF               	clrf	__pbssBANK1& (0+127)
  3239                           
  3240                           ; Clear objects allocated to BANK2
  3241  0047  3065               	movlw	low __pbssBANK2
  3242  0048  0084               	movwf	4
  3243  0049  3001               	movlw	high __pbssBANK2
  3244  004A  0085               	movwf	5
  3245  004B  300A               	movlw	10
  3246  004C  00FE               	movwf	btemp
  3247  004D  3000               	movlw	0
  3248  004E  00FF               	movwf	btemp+1
  3249  004F  31B4  2411  3180   	fcall	clear_ram0
  3250                           
  3251                           ; Clear objects allocated to BANK3
  3252  0052  30A0               	movlw	low __pbssBANK3
  3253  0053  0084               	movwf	4
  3254  0054  3001               	movlw	high __pbssBANK3
  3255  0055  0085               	movwf	5
  3256  0056  303A               	movlw	58
  3257  0057  00FE               	movwf	btemp
  3258  0058  3000               	movlw	0
  3259  0059  00FF               	movwf	btemp+1
  3260  005A  31B4  2411  3180   	fcall	clear_ram0
  3261                           
  3262                           ; Clear objects allocated to BANK4
  3263  005D  3020               	movlw	low __pbssBANK4
  3264  005E  0084               	movwf	4
  3265  005F  3002               	movlw	high __pbssBANK4
  3266  0060  0085               	movwf	5
  3267  0061  3020               	movlw	32
  3268  0062  00FE               	movwf	btemp
  3269  0063  3000               	movlw	0
  3270  0064  00FF               	movwf	btemp+1
  3271  0065  31B4  2411         	fcall	clear_ram0
  3272  0067                     end_of_initialization:	
  3273                           ;End of C runtime variable initialization code
  3274                           
  3275  0067                     __end_of__initialization:	
  3276  0067  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3277  0068  0020               	movlb	0
  3278  0069  31B6  2E60         	ljmp	_main	;jump to C main() function
  3279                           
  3280                           	psect	bssCOMMON
  3281  007C                     __pbssCOMMON:	
  3282  007C                     _toggleColor:	
  3283  007C                     	ds	1
  3284                           
  3285                           	psect	bssBANK1
  3286  00EF                     __pbssBANK1:	
  3287  00EF                     _tmr1_flag:	
  3288  00EF                     	ds	1
  3289                           
  3290                           	psect	bssBANK2
  3291  0165                     __pbssBANK2:	
  3292  0165                     _width:	
  3293  0165                     	ds	2
  3294  0167                     _prec:	
  3295  0167                     	ds	2
  3296  0169                     _flags:	
  3297  0169                     	ds	2
  3298  016B                     _adcOffset:	
  3299  016B                     	ds	2
  3300  016D                     _adcGain:	
  3301  016D                     	ds	2
  3302                           
  3303                           	psect	bssBANK3
  3304  01A0                     __pbssBANK3:	
  3305  01A0                     _cellVoltages:	
  3306  01A0                     	ds	10
  3307  01AA                     logf@F469:	
  3308  01AA                     	ds	4
  3309  01AE                     BQ76920@shuntResistorValue_mOhm:	
  3310  01AE                     	ds	4
  3311  01B2                     _shuntResistorValue_mOhm:	
  3312  01B2                     	ds	4
  3313  01B6                     _temperatureThermistor:	
  3314  01B6                     	ds	4
  3315  01BA                     _batCurrent:	
  3316  01BA                     	ds	4
  3317  01BE                     _batVoltage:	
  3318  01BE                     	ds	4
  3319  01C2                     _errno:	
  3320  01C2                     	ds	2
  3321  01C4                     _nout:	
  3322  01C4                     	ds	2
  3323  01C6                     _minCellVoltage:	
  3324  01C6                     	ds	2
  3325  01C8                     _maxCellVoltage:	
  3326  01C8                     	ds	2
  3327  01CA                     _maxCellTempDischarge:	
  3328  01CA                     	ds	2
  3329  01CC                     _maxCellTempCharge:	
  3330  01CC                     	ds	2
  3331  01CE                     _minCellTempDischarge:	
  3332  01CE                     	ds	2
  3333  01D0                     _minCellTempCharge:	
  3334  01D0                     	ds	2
  3335  01D2                     BQ76920@protect3:	
  3336  01D2                     	ds	1
  3337  01D3                     BQ76920@protect2:	
  3338  01D3                     	ds	1
  3339  01D4                     BQ76920@protect1:	
  3340  01D4                     	ds	1
  3341  01D5                     myIsr@count:	
  3342  01D5                     	ds	1
  3343  01D6                     _protect3:	
  3344  01D6                     	ds	1
  3345  01D7                     _protect2:	
  3346  01D7                     	ds	1
  3347  01D8                     _protect1:	
  3348  01D8                     	ds	1
  3349  01D9                     _currState:	
  3350  01D9                     	ds	1
  3351                           
  3352                           	psect	dataBANK3
  3353  01DA                     __pdataBANK3:	
  3354  01DA                     stoa@F1152:	
  3355  01DA                     	ds	7
  3356  01E1                     _thermistorBetaValue:	
  3357  01E1                     	ds	2
  3358                           
  3359                           	psect	bssBANK4
  3360  0220                     __pbssBANK4:	
  3361  0220                     _dbuf:	
  3362  0220                     	ds	32
  3363                           
  3364                           	psect	clrtext
  3365  3411                     clear_ram0:	
  3366                           ;	Called with FSR0 containing the base address, and
  3367                           ;	btemp/btemp+1 has the size to clear
  3368                           
  3369  3411  0064               	clrwdt	;clear the watchdog before getting into this loop
  3370  3412                     clrloop0:	
  3371  3412  0180               	clrf	0	;clear RAM location pointed to by FSR
  3372  3413  3101               	addfsr 0,1
  3373  3414  3001               	movlw	1
  3374  3415  02FE               	subwf	126,f
  3375  3416  3000               	movlw	0
  3376  3417  3BFF               	subwfb	127,f
  3377  3418  087F               	movf	127,w
  3378  3419  047E               	iorwf	126,w
  3379  341A  1903               	btfsc	3,2
  3380  341B  3400               	retlw	0	;all done for this memory range, return
  3381  341C  2C12               	goto	clrloop0	;have we reached the end yet?
  3382                           
  3383                           	psect	cstackBANK3
  3384  01E3                     __pcstackBANK3:	
  3385  01E3                     ??_main:	
  3386                           
  3387                           ; 1 bytes @ 0x0
  3388  01E3                     	ds	2
  3389                           
  3390                           	psect	cstackBANK2
  3391  0120                     __pcstackBANK2:	
  3392  0120                     logf@R:	
  3393                           
  3394                           ; 4 bytes @ 0x0
  3395  0120                     	ds	4
  3396  0124                     logf@t1:	
  3397                           
  3398                           ; 4 bytes @ 0x4
  3399  0124                     	ds	4
  3400  0128                     logf@t2:	
  3401                           
  3402                           ; 4 bytes @ 0x8
  3403  0128                     	ds	4
  3404  012C                     _logf$2042:	
  3405                           
  3406                           ; 4 bytes @ 0xC
  3407  012C                     	ds	4
  3408  0130                     _logf$2043:	
  3409                           
  3410                           ; 4 bytes @ 0x10
  3411  0130                     	ds	4
  3412  0134                     _logf$2044:	
  3413                           
  3414                           ; 4 bytes @ 0x14
  3415  0134                     	ds	4
  3416  0138                     _logf$2045:	
  3417                           
  3418                           ; 4 bytes @ 0x18
  3419  0138                     	ds	4
  3420  013C                     logf@k:	
  3421                           
  3422                           ; 2 bytes @ 0x1C
  3423  013C                     	ds	2
  3424  013E                     logf@hfsq:	
  3425                           
  3426                           ; 4 bytes @ 0x1E
  3427  013E                     	ds	4
  3428  0142                     logf@dk:	
  3429                           
  3430                           ; 4 bytes @ 0x22
  3431  0142                     	ds	4
  3432  0146                     logf@s:	
  3433                           
  3434                           ; 4 bytes @ 0x26
  3435  0146                     	ds	4
  3436  014A                     logf@z:	
  3437                           
  3438                           ; 4 bytes @ 0x2A
  3439  014A                     	ds	4
  3440  014E                     logf@w:	
  3441                           
  3442                           ; 4 bytes @ 0x2E
  3443  014E                     	ds	4
  3444  0152                     _logf$2041:	
  3445                           
  3446                           ; 4 bytes @ 0x32
  3447  0152                     	ds	4
  3448  0156                     logf@u:	
  3449                           
  3450                           ; 4 bytes @ 0x36
  3451  0156                     	ds	4
  3452  015A                     logf@f:	
  3453                           
  3454                           ; 4 bytes @ 0x3A
  3455  015A                     	ds	4
  3456  015E                     logf@ix:	
  3457                           
  3458                           ; 4 bytes @ 0x3E
  3459  015E                     	ds	4
  3460  0162                     ??_statemachine:	
  3461                           
  3462                           ; 1 bytes @ 0x42
  3463  0162                     	ds	2
  3464  0164                     statemachine@success:	
  3465                           
  3466                           ; 1 bytes @ 0x44
  3467  0164                     	ds	1
  3468                           
  3469                           	psect	cstackBANK1
  3470  00A0                     __pcstackBANK1:	
  3471  00A0                     ?___flsub:	
  3472  00A0                     vfpfcnvrt@cp:	
  3473                           ; 4 bytes @ 0x0
  3474                           
  3475  00A0                     setShortCircuitProtection@scaler:	
  3476                           ; 2 bytes @ 0x0
  3477                           
  3478  00A0                     setOverCurrentDischargeProtection@scaler:	
  3479                           ; 4 bytes @ 0x0
  3480                           
  3481  00A0                     ___flsub@a:	
  3482                           ; 4 bytes @ 0x0
  3483                           
  3484                           
  3485                           ; 4 bytes @ 0x0
  3486  00A0                     	ds	2
  3487  00A2                     vfpfcnvrt@done:	
  3488                           
  3489                           ; 2 bytes @ 0x2
  3490  00A2                     	ds	2
  3491  00A4                     _vfpfcnvrt$1251:	
  3492  00A4                     ___flsub@b:	
  3493                           ; 2 bytes @ 0x4
  3494                           
  3495  00A4                     _setShortCircuitProtection$2027:	
  3496                           ; 4 bytes @ 0x4
  3497                           
  3498  00A4                     _setOverCurrentDischargeProtection$2028:	
  3499                           ; 4 bytes @ 0x4
  3500                           
  3501                           
  3502                           ; 4 bytes @ 0x4
  3503  00A4                     	ds	2
  3504  00A6                     _vfpfcnvrt$1252:	
  3505                           
  3506                           ; 2 bytes @ 0x6
  3507  00A6                     	ds	2
  3508  00A8                     ?_logf:	
  3509  00A8                     ?___fltol:	
  3510                           ; 4 bytes @ 0x8
  3511                           
  3512  00A8                     setShortCircuitProtection@i:	
  3513                           ; 4 bytes @ 0x8
  3514                           
  3515  00A8                     setOverCurrentDischargeProtection@i:	
  3516                           ; 2 bytes @ 0x8
  3517                           
  3518  00A8                     ___fltol@f1:	
  3519                           ; 2 bytes @ 0x8
  3520                           
  3521  00A8                     logf@x:	
  3522                           ; 4 bytes @ 0x8
  3523                           
  3524  00A8                     vfpfcnvrt@ll:	
  3525                           ; 4 bytes @ 0x8
  3526                           
  3527                           
  3528                           ; 8 bytes @ 0x8
  3529  00A8                     	ds	2
  3530  00AA                     setShortCircuitProtection@i_972:	
  3531  00AA                     setOverCurrentDischargeProtection@i_981:	
  3532                           ; 2 bytes @ 0xA
  3533                           
  3534                           
  3535                           ; 2 bytes @ 0xA
  3536  00AA                     	ds	2
  3537  00AC                     ??_logf:	
  3538  00AC                     ??___fltol:	
  3539                           ; 1 bytes @ 0xC
  3540                           
  3541                           
  3542                           ; 1 bytes @ 0xC
  3543  00AC                     	ds	4
  3544  00B0                     vfpfcnvrt@vp:	
  3545                           
  3546                           ; 2 bytes @ 0x10
  3547  00B0                     	ds	1
  3548  00B1                     ??_updateCurrent:	
  3549  00B1                     ??_updateVoltages:	
  3550                           ; 1 bytes @ 0x11
  3551                           
  3552                           
  3553                           ; 1 bytes @ 0x11
  3554  00B1                     	ds	1
  3555  00B2                     vfpfcnvrt@c:	
  3556                           
  3557                           ; 1 bytes @ 0x12
  3558  00B2                     	ds	1
  3559  00B3                     vfpfcnvrt@llu:	
  3560                           
  3561                           ; 8 bytes @ 0x13
  3562  00B3                     	ds	1
  3563  00B4                     ??_updateTemperatures:	
  3564  00B4                     _updateVoltages$2029:	
  3565                           ; 1 bytes @ 0x14
  3566                           
  3567                           
  3568                           ; 4 bytes @ 0x14
  3569  00B4                     	ds	1
  3570  00B5                     updateCurrent@adcVal:	
  3571                           
  3572                           ; 2 bytes @ 0x15
  3573  00B5                     	ds	2
  3574  00B7                     _updateTemperatures$2030:	
  3575                           
  3576                           ; 4 bytes @ 0x17
  3577  00B7                     	ds	1
  3578  00B8                     updateVoltages@adcVal:	
  3579                           
  3580                           ; 4 bytes @ 0x18
  3581  00B8                     	ds	3
  3582  00BB                     ?_vsnprintf:	
  3583  00BB                     vsnprintf@s:	
  3584                           ; 2 bytes @ 0x1B
  3585                           
  3586  00BB                     _updateTemperatures$2031:	
  3587                           ; 2 bytes @ 0x1B
  3588                           
  3589                           
  3590                           ; 4 bytes @ 0x1B
  3591  00BB                     	ds	2
  3592  00BD                     vsnprintf@n:	
  3593                           
  3594                           ; 2 bytes @ 0x1D
  3595  00BD                     	ds	2
  3596  00BF                     vsnprintf@fmt:	
  3597  00BF                     _updateTemperatures$2032:	
  3598                           ; 2 bytes @ 0x1F
  3599                           
  3600                           
  3601                           ; 4 bytes @ 0x1F
  3602  00BF                     	ds	2
  3603  00C1                     vsnprintf@ap:	
  3604                           
  3605                           ; 1 bytes @ 0x21
  3606  00C1                     	ds	1
  3607  00C2                     _vsnprintf$1823:	
  3608                           
  3609                           ; 2 bytes @ 0x22
  3610  00C2                     	ds	1
  3611  00C3                     _updateTemperatures$2033:	
  3612                           
  3613                           ; 4 bytes @ 0x23
  3614  00C3                     	ds	1
  3615  00C4                     vsnprintf@cnt:	
  3616                           
  3617                           ; 2 bytes @ 0x24
  3618  00C4                     	ds	2
  3619  00C6                     vsnprintf@f:	
  3620                           
  3621                           ; 6 bytes @ 0x26
  3622  00C6                     	ds	1
  3623  00C7                     _updateTemperatures$2034:	
  3624                           
  3625                           ; 4 bytes @ 0x27
  3626  00C7                     	ds	4
  3627  00CB                     _updateTemperatures$2035:	
  3628                           
  3629                           ; 4 bytes @ 0x2B
  3630  00CB                     	ds	1
  3631  00CC                     ?_snprintf:	
  3632  00CC                     snprintf@s:	
  3633                           ; 2 bytes @ 0x2C
  3634                           
  3635                           
  3636                           ; 2 bytes @ 0x2C
  3637  00CC                     	ds	2
  3638  00CE                     snprintf@n:	
  3639                           
  3640                           ; 2 bytes @ 0x2E
  3641  00CE                     	ds	1
  3642  00CF                     _updateTemperatures$2036:	
  3643                           
  3644                           ; 4 bytes @ 0x2F
  3645  00CF                     	ds	1
  3646  00D0                     snprintf@fmt:	
  3647                           
  3648                           ; 2 bytes @ 0x30
  3649  00D0                     	ds	3
  3650  00D3                     _updateTemperatures$2037:	
  3651                           
  3652                           ; 4 bytes @ 0x33
  3653  00D3                     	ds	4
  3654  00D7                     _updateTemperatures$2038:	
  3655                           
  3656                           ; 4 bytes @ 0x37
  3657  00D7                     	ds	4
  3658  00DB                     _updateTemperatures$2039:	
  3659                           
  3660                           ; 4 bytes @ 0x3B
  3661  00DB                     	ds	4
  3662  00DF                     _updateTemperatures$2040:	
  3663                           
  3664                           ; 4 bytes @ 0x3F
  3665  00DF                     	ds	4
  3666  00E3                     updateTemperatures@tmp:	
  3667                           
  3668                           ; 4 bytes @ 0x43
  3669  00E3                     	ds	4
  3670  00E7                     updateTemperatures@adcVal:	
  3671                           
  3672                           ; 2 bytes @ 0x47
  3673  00E7                     	ds	2
  3674  00E9                     updateTemperatures@vtsx:	
  3675                           
  3676                           ; 2 bytes @ 0x49
  3677  00E9                     	ds	2
  3678  00EB                     updateTemperatures@rts:	
  3679                           
  3680                           ; 4 bytes @ 0x4B
  3681  00EB                     	ds	4
  3682                           
  3683                           	psect	cstackCOMMON
  3684  0070                     __pcstackCOMMON:	
  3685  0070                     ?_initClock:	
  3686  0070                     ?_init_GPIO:	
  3687                           ; 1 bytes @ 0x0
  3688                           
  3689  0070                     ?_initWDT:	
  3690                           ; 1 bytes @ 0x0
  3691                           
  3692  0070                     ?_init_I2C:	
  3693                           ; 1 bytes @ 0x0
  3694                           
  3695  0070                     ?_init_TMR1:	
  3696                           ; 1 bytes @ 0x0
  3697                           
  3698  0070                     ?_init_RGB:	
  3699                           ; 1 bytes @ 0x0
  3700                           
  3701  0070                     ?_watchdog_timeout_shutdown:	
  3702                           ; 1 bytes @ 0x0
  3703                           
  3704  0070                     ?_statemachine:	
  3705                           ; 1 bytes @ 0x0
  3706                           
  3707  0070                     ?_RGB_AWAIT_AFE_CONN:	
  3708                           ; 1 bytes @ 0x0
  3709                           
  3710  0070                     ?_init_AFE:	
  3711                           ; 1 bytes @ 0x0
  3712                           
  3713  0070                     ?_AFE_UPDATE:	
  3714                           ; 1 bytes @ 0x0
  3715                           
  3716  0070                     ?_printcellParameters:	
  3717                           ; 1 bytes @ 0x0
  3718                           
  3719  0070                     ?_internal_16:	
  3720                           ; 1 bytes @ 0x0
  3721                           
  3722  0070                     ?_updateCurrent:	
  3723                           ; 1 bytes @ 0x0
  3724                           
  3725  0070                     ?_updateVoltages:	
  3726                           ; 1 bytes @ 0x0
  3727                           
  3728  0070                     ?_updateTemperatures:	
  3729                           ; 1 bytes @ 0x0
  3730                           
  3731  0070                     ?_putch:	
  3732                           ; 1 bytes @ 0x0
  3733                           
  3734  0070                     ?_myIsr:	
  3735                           ; 1 bytes @ 0x0
  3736                           
  3737  0070                     ??_myIsr:	
  3738                           ; 1 bytes @ 0x0
  3739                           
  3740  0070                     ?_main:	
  3741                           ; 1 bytes @ 0x0
  3742                           
  3743  0070                     ?_EUSART_Write:	
  3744                           ; 1 bytes @ 0x0
  3745                           
  3746  0070                     ?_send_I2C_startBit:	
  3747                           ; 1 bytes @ 0x0
  3748                           
  3749  0070                     ?_send_I2C_stopBit:	
  3750                           ; 1 bytes @ 0x0
  3751                           
  3752  0070                     ?_send_I2C_NACK:	
  3753                           ; 1 bytes @ 0x0
  3754                           
  3755  0070                     putch@c:	
  3756                           ; 1 bytes @ 0x0
  3757                           
  3758                           
  3759                           ; 1 bytes @ 0x0
  3760  0070                     	ds	1
  3761  0071                     ??_initClock:	
  3762  0071                     ??_init_GPIO:	
  3763                           ; 1 bytes @ 0x1
  3764                           
  3765  0071                     ??_initWDT:	
  3766                           ; 1 bytes @ 0x1
  3767                           
  3768  0071                     ??_init_I2C:	
  3769                           ; 1 bytes @ 0x1
  3770                           
  3771  0071                     ??_init_TMR1:	
  3772                           ; 1 bytes @ 0x1
  3773                           
  3774  0071                     ??_init_RGB:	
  3775                           ; 1 bytes @ 0x1
  3776                           
  3777  0071                     ?_RGB_color:	
  3778                           ; 1 bytes @ 0x1
  3779                           
  3780  0071                     ??_internal_16:	
  3781                           ; 1 bytes @ 0x1
  3782                           
  3783  0071                     ?_setShuntResistorValue:	
  3784                           ; 1 bytes @ 0x1
  3785                           
  3786  0071                     ??_putch:	
  3787                           ; 1 bytes @ 0x1
  3788                           
  3789  0071                     ??_EUSART_Write:	
  3790                           ; 1 bytes @ 0x1
  3791                           
  3792  0071                     ?_send_I2C_data:	
  3793                           ; 1 bytes @ 0x1
  3794                           
  3795  0071                     ?_send_I2C_controlByte:	
  3796                           ; 1 bytes @ 0x1
  3797                           
  3798  0071                     ??_send_I2C_startBit:	
  3799                           ; 1 bytes @ 0x1
  3800                           
  3801  0071                     ??_send_I2C_stopBit:	
  3802                           ; 1 bytes @ 0x1
  3803                           
  3804  0071                     ??_send_I2C_NACK:	
  3805                           ; 1 bytes @ 0x1
  3806                           
  3807  0071                     ??___aodiv:	
  3808                           ; 1 bytes @ 0x1
  3809                           
  3810  0071                     ??___aomod:	
  3811                           ; 1 bytes @ 0x1
  3812                           
  3813  0071                     ??___lodiv:	
  3814                           ; 1 bytes @ 0x1
  3815                           
  3816  0071                     ??___lomod:	
  3817                           ; 1 bytes @ 0x1
  3818                           
  3819  0071                     ?_fputc:	
  3820                           ; 1 bytes @ 0x1
  3821                           
  3822  0071                     ?_strlen:	
  3823                           ; 2 bytes @ 0x1
  3824                           
  3825  0071                     ?_isupper:	
  3826                           ; 2 bytes @ 0x1
  3827                           
  3828  0071                     ?_isalpha:	
  3829                           ; 2 bytes @ 0x1
  3830                           
  3831  0071                     ?_isdigit:	
  3832                           ; 2 bytes @ 0x1
  3833                           
  3834  0071                     ?_strncmp:	
  3835                           ; 2 bytes @ 0x1
  3836                           
  3837  0071                     ?__Umul8_16:	
  3838                           ; 2 bytes @ 0x1
  3839                           
  3840  0071                     ?_isspace:	
  3841                           ; 2 bytes @ 0x1
  3842                           
  3843  0071                     ?_islower:	
  3844                           ; 2 bytes @ 0x1
  3845                           
  3846  0071                     ?_read_I2C_data:	
  3847                           ; 2 bytes @ 0x1
  3848                           
  3849  0071                     ?___wmul:	
  3850                           ; 2 bytes @ 0x1
  3851                           
  3852  0071                     ?___lmul:	
  3853                           ; 2 bytes @ 0x1
  3854                           
  3855  0071                     ?___xxtofl:	
  3856                           ; 4 bytes @ 0x1
  3857                           
  3858  0071                     EUSART_Write@txData:	
  3859                           ; 4 bytes @ 0x1
  3860                           
  3861  0071                     __Umul8_16@multiplicand:	
  3862                           ; 1 bytes @ 0x1
  3863                           
  3864  0071                     send_I2C_data@databyte:	
  3865                           ; 1 bytes @ 0x1
  3866                           
  3867  0071                     send_I2C_controlByte@BlockAddress:	
  3868                           ; 2 bytes @ 0x1
  3869                           
  3870  0071                     RGB_color@color:	
  3871                           ; 2 bytes @ 0x1
  3872                           
  3873  0071                     ___wmul@multiplier:	
  3874                           ; 2 bytes @ 0x1
  3875                           
  3876  0071                     isalpha@c:	
  3877                           ; 2 bytes @ 0x1
  3878                           
  3879  0071                     isdigit@c:	
  3880                           ; 2 bytes @ 0x1
  3881                           
  3882  0071                     isspace@c:	
  3883                           ; 2 bytes @ 0x1
  3884                           
  3885  0071                     isupper@c:	
  3886                           ; 2 bytes @ 0x1
  3887                           
  3888  0071                     fputc@c:	
  3889                           ; 2 bytes @ 0x1
  3890                           
  3891  0071                     strlen@s:	
  3892                           ; 2 bytes @ 0x1
  3893                           
  3894  0071                     strncmp@_l:	
  3895                           ; 2 bytes @ 0x1
  3896                           
  3897  0071                     islower@c:	
  3898                           ; 2 bytes @ 0x1
  3899                           
  3900  0071                     setShuntResistorValue@res_mOhm:	
  3901                           ; 2 bytes @ 0x1
  3902                           
  3903  0071                     ___lmul@multiplier:	
  3904                           ; 4 bytes @ 0x1
  3905                           
  3906  0071                     ___xxtofl@val:	
  3907                           ; 4 bytes @ 0x1
  3908                           
  3909                           
  3910                           ; 4 bytes @ 0x1
  3911  0071                     	ds	1
  3912  0072                     ?_EUSART_Write_Text:	
  3913  0072                     ___aodiv@counter:	
  3914                           ; 1 bytes @ 0x2
  3915                           
  3916  0072                     ___aomod@counter:	
  3917                           ; 1 bytes @ 0x2
  3918                           
  3919  0072                     ___lomod@counter:	
  3920                           ; 1 bytes @ 0x2
  3921                           
  3922  0072                     EUSART_Write_Text@text:	
  3923                           ; 1 bytes @ 0x2
  3924                           
  3925  0072                     ___lodiv@quotient:	
  3926                           ; 2 bytes @ 0x2
  3927                           
  3928                           
  3929                           ; 8 bytes @ 0x2
  3930  0072                     	ds	1
  3931  0073                     ??_watchdog_timeout_shutdown:	
  3932  0073                     ??_RGB_AWAIT_AFE_CONN:	
  3933                           ; 1 bytes @ 0x3
  3934                           
  3935  0073                     ??_RGB_color:	
  3936                           ; 1 bytes @ 0x3
  3937                           
  3938  0073                     ??_strlen:	
  3939                           ; 1 bytes @ 0x3
  3940                           
  3941  0073                     ??_isupper:	
  3942                           ; 1 bytes @ 0x3
  3943                           
  3944  0073                     ??_isalpha:	
  3945                           ; 1 bytes @ 0x3
  3946                           
  3947  0073                     ??_isdigit:	
  3948                           ; 1 bytes @ 0x3
  3949                           
  3950  0073                     ??__Umul8_16:	
  3951                           ; 1 bytes @ 0x3
  3952                           
  3953  0073                     ??_isspace:	
  3954                           ; 1 bytes @ 0x3
  3955                           
  3956  0073                     ??_islower:	
  3957                           ; 1 bytes @ 0x3
  3958                           
  3959  0073                     ??_send_I2C_data:	
  3960                           ; 1 bytes @ 0x3
  3961                           
  3962  0073                     ??_read_I2C_data:	
  3963                           ; 1 bytes @ 0x3
  3964                           
  3965  0073                     ___aodiv@sign:	
  3966                           ; 1 bytes @ 0x3
  3967                           
  3968  0073                     ___aomod@sign:	
  3969                           ; 1 bytes @ 0x3
  3970                           
  3971  0073                     send_I2C_controlByte@RW_bit:	
  3972                           ; 1 bytes @ 0x3
  3973                           
  3974  0073                     ___wmul@multiplicand:	
  3975                           ; 2 bytes @ 0x3
  3976                           
  3977  0073                     fputc@fp:	
  3978                           ; 2 bytes @ 0x3
  3979                           
  3980  0073                     strlen@a:	
  3981                           ; 2 bytes @ 0x3
  3982                           
  3983  0073                     strncmp@_r:	
  3984                           ; 2 bytes @ 0x3
  3985                           
  3986                           
  3987                           ; 2 bytes @ 0x3
  3988  0073                     	ds	1
  3989  0074                     ??_EUSART_Write_Text:	
  3990  0074                     ?_abs:	
  3991                           ; 1 bytes @ 0x4
  3992                           
  3993  0074                     abs@a:	
  3994                           ; 2 bytes @ 0x4
  3995                           
  3996  0074                     ___aodiv@quotient:	
  3997                           ; 2 bytes @ 0x4
  3998                           
  3999                           
  4000                           ; 8 bytes @ 0x4
  4001  0074                     	ds	1
  4002  0075                     ??_setShuntResistorValue:	
  4003  0075                     ??_fputc:	
  4004                           ; 1 bytes @ 0x5
  4005                           
  4006  0075                     ??_send_I2C_controlByte:	
  4007                           ; 1 bytes @ 0x5
  4008                           
  4009  0075                     ?_I2C_writeRegister:	
  4010                           ; 1 bytes @ 0x5
  4011                           
  4012  0075                     ??___wmul:	
  4013                           ; 1 bytes @ 0x5
  4014                           
  4015  0075                     ??___xxtofl:	
  4016                           ; 1 bytes @ 0x5
  4017                           
  4018  0075                     ?_readRegister:	
  4019                           ; 1 bytes @ 0x5
  4020                           
  4021  0075                     _isspace$1678:	
  4022                           ; 2 bytes @ 0x5
  4023                           
  4024  0075                     EUSART_Write_Text@i:	
  4025                           ; 1 bytes @ 0x5
  4026                           
  4027  0075                     I2C_writeRegister@slaveAddress:	
  4028                           ; 2 bytes @ 0x5
  4029                           
  4030  0075                     readRegister@slaveAddress:	
  4031                           ; 2 bytes @ 0x5
  4032                           
  4033  0075                     ___wmul@product:	
  4034                           ; 2 bytes @ 0x5
  4035                           
  4036  0075                     strncmp@n:	
  4037                           ; 2 bytes @ 0x5
  4038                           
  4039  0075                     __Umul8_16@product:	
  4040                           ; 2 bytes @ 0x5
  4041                           
  4042  0075                     ___lmul@multiplicand:	
  4043                           ; 2 bytes @ 0x5
  4044                           
  4045                           
  4046                           ; 4 bytes @ 0x5
  4047  0075                     	ds	1
  4048  0076                     ??_abs:	
  4049                           
  4050                           ; 1 bytes @ 0x6
  4051  0076                     	ds	1
  4052  0077                     ??_setTemperatureLimitsint:	
  4053  0077                     ??_strncmp:	
  4054                           ; 1 bytes @ 0x7
  4055                           
  4056  0077                     ?_toupper:	
  4057                           ; 1 bytes @ 0x7
  4058                           
  4059  0077                     ?_atoi:	
  4060                           ; 2 bytes @ 0x7
  4061                           
  4062  0077                     I2C_writeRegister@regAddress:	
  4063                           ; 2 bytes @ 0x7
  4064                           
  4065  0077                     readRegister@regAddress:	
  4066                           ; 2 bytes @ 0x7
  4067                           
  4068  0077                     atoi@s:	
  4069                           ; 2 bytes @ 0x7
  4070                           
  4071  0077                     toupper@c:	
  4072                           ; 2 bytes @ 0x7
  4073                           
  4074  0077                     __Umul8_16@word_mpld:	
  4075                           ; 2 bytes @ 0x7
  4076                           
  4077                           
  4078                           ; 2 bytes @ 0x7
  4079  0077                     	ds	1
  4080  0078                     strncmp@l:	
  4081                           
  4082                           ; 2 bytes @ 0x8
  4083  0078                     	ds	1
  4084  0079                     ??_readRegister:	
  4085  0079                     ??___lmul:	
  4086                           ; 1 bytes @ 0x9
  4087                           
  4088  0079                     ??___aldiv:	
  4089                           ; 1 bytes @ 0x9
  4090                           
  4091  0079                     __Umul8_16@multiplier:	
  4092                           ; 1 bytes @ 0x9
  4093                           
  4094  0079                     I2C_writeRegister@data:	
  4095                           ; 1 bytes @ 0x9
  4096                           
  4097  0079                     readRegister@recievedData:	
  4098                           ; 2 bytes @ 0x9
  4099                           
  4100  0079                     _toupper$1786:	
  4101                           ; 2 bytes @ 0x9
  4102                           
  4103                           
  4104                           ; 2 bytes @ 0x9
  4105  0079                     	ds	1
  4106  007A                     ??_stoa:	
  4107  007A                     ??___flneg:	
  4108                           ; 1 bytes @ 0xA
  4109                           
  4110  007A                     ??___flsub:	
  4111                           ; 1 bytes @ 0xA
  4112                           
  4113  007A                     ?_fputs:	
  4114                           ; 1 bytes @ 0xA
  4115                           
  4116  007A                     ___fltol@sign1:	
  4117                           ; 2 bytes @ 0xA
  4118                           
  4119  007A                     ___lodiv@counter:	
  4120                           ; 1 bytes @ 0xA
  4121                           
  4122  007A                     EUSART_Initialize@x:	
  4123                           ; 1 bytes @ 0xA
  4124                           
  4125  007A                     fputs@fp:	
  4126                           ; 2 bytes @ 0xA
  4127                           
  4128  007A                     strncmp@r:	
  4129                           ; 2 bytes @ 0xA
  4130                           
  4131                           
  4132                           ; 2 bytes @ 0xA
  4133  007A                     	ds	1
  4134  007B                     ??_init_AFE:	
  4135  007B                     ??_I2C_writeRegister:	
  4136                           ; 1 bytes @ 0xB
  4137                           
  4138  007B                     enableDischarging@sys_ctrl2:	
  4139                           ; 1 bytes @ 0xB
  4140                           
  4141  007B                     enableCharging@sys_ctrl2:	
  4142                           ; 1 bytes @ 0xB
  4143                           
  4144  007B                     ___fltol@exp1:	
  4145                           ; 1 bytes @ 0xB
  4146                           
  4147                           
  4148                           ; 1 bytes @ 0xB
  4149  007B                     	ds	1
  4150  007C                     ??_AFE_UPDATE:	
  4151  007C                     ??_printcellParameters:	
  4152                           ; 1 bytes @ 0xC
  4153                           
  4154                           
  4155                           	psect	cstackBANK0
  4156  0020                     __pcstackBANK0:	
  4157                           ; 1 bytes @ 0xC
  4158                           
  4159  0020                     ?_setTemperatureLimitsint:	
  4160  0020                     ?_enableDischarging:	
  4161                           ; 1 bytes @ 0x0
  4162                           
  4163  0020                     ?_enableCharging:	
  4164                           ; 1 bytes @ 0x0
  4165                           
  4166  0020                     ??_fputs:	
  4167                           ; 1 bytes @ 0x0
  4168                           
  4169  0020                     ??_toupper:	
  4170                           ; 1 bytes @ 0x0
  4171                           
  4172  0020                     ??_atoi:	
  4173                           ; 1 bytes @ 0x0
  4174                           
  4175  0020                     ?_beginAFEcommunication:	
  4176                           ; 1 bytes @ 0x0
  4177                           
  4178  0020                     ?_stoa:	
  4179                           ; 2 bytes @ 0x0
  4180                           
  4181  0020                     ?___aodiv:	
  4182                           ; 2 bytes @ 0x0
  4183                           
  4184  0020                     ?___aomod:	
  4185                           ; 8 bytes @ 0x0
  4186                           
  4187  0020                     ?___lodiv:	
  4188                           ; 8 bytes @ 0x0
  4189                           
  4190  0020                     ?___lomod:	
  4191                           ; 8 bytes @ 0x0
  4192                           
  4193  0020                     ___xxtofl@sign:	
  4194                           ; 8 bytes @ 0x0
  4195                           
  4196  0020                     setTemperatureLimitsint@minDischarge_degC:	
  4197                           ; 1 bytes @ 0x0
  4198                           
  4199  0020                     enableDischarging@enable:	
  4200                           ; 2 bytes @ 0x0
  4201                           
  4202  0020                     enableCharging@enable:	
  4203                           ; 2 bytes @ 0x0
  4204                           
  4205  0020                     stoa@fp:	
  4206                           ; 2 bytes @ 0x0
  4207                           
  4208  0020                     ___lmul@product:	
  4209                           ; 2 bytes @ 0x0
  4210                           
  4211  0020                     ___aodiv@divisor:	
  4212                           ; 4 bytes @ 0x0
  4213                           
  4214  0020                     ___aomod@divisor:	
  4215                           ; 8 bytes @ 0x0
  4216                           
  4217  0020                     ___lodiv@divisor:	
  4218                           ; 8 bytes @ 0x0
  4219                           
  4220  0020                     ___lomod@divisor:	
  4221                           ; 8 bytes @ 0x0
  4222                           
  4223                           
  4224                           ; 8 bytes @ 0x0
  4225  0020                     	ds	1
  4226  0021                     ___xxtofl@exp:	
  4227                           
  4228                           ; 1 bytes @ 0x1
  4229  0021                     	ds	1
  4230  0022                     ??_beginAFEcommunication:	
  4231  0022                     ??_enableDischarging:	
  4232                           ; 1 bytes @ 0x2
  4233                           
  4234  0022                     ??_enableCharging:	
  4235                           ; 1 bytes @ 0x2
  4236                           
  4237  0022                     fputs@c:	
  4238                           ; 1 bytes @ 0x2
  4239                           
  4240  0022                     setTemperatureLimitsint@maxDischarge_degC:	
  4241                           ; 1 bytes @ 0x2
  4242                           
  4243  0022                     stoa@s:	
  4244                           ; 2 bytes @ 0x2
  4245                           
  4246  0022                     ___xxtofl@arg:	
  4247                           ; 2 bytes @ 0x2
  4248                           
  4249                           
  4250                           ; 4 bytes @ 0x2
  4251  0022                     	ds	1
  4252  0023                     fputs@i:	
  4253                           
  4254                           ; 2 bytes @ 0x3
  4255  0023                     	ds	1
  4256  0024                     ?___aldiv:	
  4257  0024                     setTemperatureLimitsint@minCharge_degC:	
  4258                           ; 4 bytes @ 0x4
  4259                           
  4260  0024                     atoi@neg:	
  4261                           ; 2 bytes @ 0x4
  4262                           
  4263  0024                     ___aldiv@divisor:	
  4264                           ; 2 bytes @ 0x4
  4265                           
  4266  0024                     stoa@nuls:	
  4267                           ; 4 bytes @ 0x4
  4268                           
  4269                           
  4270                           ; 7 bytes @ 0x4
  4271  0024                     	ds	1
  4272  0025                     fputs@s:	
  4273                           
  4274                           ; 1 bytes @ 0x5
  4275  0025                     	ds	1
  4276  0026                     ?_pad:	
  4277  0026                     ?___flmul:	
  4278                           ; 2 bytes @ 0x6
  4279                           
  4280  0026                     setTemperatureLimitsint@maxCharge_degC:	
  4281                           ; 4 bytes @ 0x6
  4282                           
  4283  0026                     pad@fp:	
  4284                           ; 2 bytes @ 0x6
  4285                           
  4286  0026                     _atoi$1651:	
  4287                           ; 2 bytes @ 0x6
  4288                           
  4289  0026                     ___flmul@b:	
  4290                           ; 2 bytes @ 0x6
  4291                           
  4292                           
  4293                           ; 4 bytes @ 0x6
  4294  0026                     	ds	2
  4295  0028                     pad@buf:	
  4296  0028                     _atoi$1653:	
  4297                           ; 1 bytes @ 0x8
  4298                           
  4299  0028                     ___aldiv@dividend:	
  4300                           ; 2 bytes @ 0x8
  4301                           
  4302  0028                     ___aodiv@dividend:	
  4303                           ; 4 bytes @ 0x8
  4304                           
  4305  0028                     ___aomod@dividend:	
  4306                           ; 8 bytes @ 0x8
  4307                           
  4308  0028                     ___lodiv@dividend:	
  4309                           ; 8 bytes @ 0x8
  4310                           
  4311  0028                     ___lomod@dividend:	
  4312                           ; 8 bytes @ 0x8
  4313                           
  4314                           
  4315                           ; 8 bytes @ 0x8
  4316  0028                     	ds	1
  4317  0029                     pad@p:	
  4318                           
  4319                           ; 2 bytes @ 0x9
  4320  0029                     	ds	1
  4321  002A                     _atoi$1652:	
  4322  002A                     ___flmul@a:	
  4323                           ; 1 bytes @ 0xA
  4324                           
  4325                           
  4326                           ; 4 bytes @ 0xA
  4327  002A                     	ds	1
  4328  002B                     ??_pad:	
  4329  002B                     beginAFEcommunication@commSuccess:	
  4330                           ; 1 bytes @ 0xB
  4331                           
  4332  002B                     stoa@i:	
  4333                           ; 2 bytes @ 0xB
  4334                           
  4335  002B                     atoi@n:	
  4336                           ; 2 bytes @ 0xB
  4337                           
  4338                           
  4339                           ; 2 bytes @ 0xB
  4340  002B                     	ds	1
  4341  002C                     ___aldiv@counter:	
  4342  002C                     pad@i:	
  4343                           ; 1 bytes @ 0xC
  4344                           
  4345                           
  4346                           ; 2 bytes @ 0xC
  4347  002C                     	ds	1
  4348  002D                     ___aldiv@sign:	
  4349  002D                     beginAFEcommunication@i:	
  4350                           ; 1 bytes @ 0xD
  4351                           
  4352  002D                     stoa@w:	
  4353                           ; 2 bytes @ 0xD
  4354                           
  4355                           
  4356                           ; 2 bytes @ 0xD
  4357  002D                     	ds	1
  4358  002E                     ??___flmul:	
  4359  002E                     pad@w:	
  4360                           ; 1 bytes @ 0xE
  4361                           
  4362  002E                     ___aldiv@quotient:	
  4363                           ; 2 bytes @ 0xE
  4364                           
  4365                           
  4366                           ; 4 bytes @ 0xE
  4367  002E                     	ds	1
  4368  002F                     stoa@cp:	
  4369                           
  4370                           ; 2 bytes @ 0xF
  4371  002F                     	ds	1
  4372  0030                     ?_ctoa:	
  4373  0030                     ?_dtoa:	
  4374                           ; 2 bytes @ 0x10
  4375                           
  4376  0030                     ?_otoa:	
  4377                           ; 2 bytes @ 0x10
  4378                           
  4379  0030                     ?_utoa:	
  4380                           ; 2 bytes @ 0x10
  4381                           
  4382  0030                     ?_xtoa:	
  4383                           ; 2 bytes @ 0x10
  4384                           
  4385  0030                     ctoa@fp:	
  4386                           ; 2 bytes @ 0x10
  4387                           
  4388  0030                     dtoa@fp:	
  4389                           ; 2 bytes @ 0x10
  4390                           
  4391  0030                     otoa@fp:	
  4392                           ; 2 bytes @ 0x10
  4393                           
  4394  0030                     utoa@fp:	
  4395                           ; 2 bytes @ 0x10
  4396                           
  4397  0030                     xtoa@fp:	
  4398                           ; 2 bytes @ 0x10
  4399                           
  4400                           
  4401                           ; 2 bytes @ 0x10
  4402  0030                     	ds	1
  4403  0031                     stoa@p:	
  4404                           
  4405                           ; 2 bytes @ 0x11
  4406  0031                     	ds	1
  4407  0032                     ?_EUSART_Initialize:	
  4408  0032                     ?_setCellUndervoltageProtection:	
  4409                           ; 1 bytes @ 0x12
  4410                           
  4411  0032                     ?_setCellOvervoltageProtection:	
  4412                           ; 1 bytes @ 0x12
  4413                           
  4414  0032                     ctoa@c:	
  4415                           ; 1 bytes @ 0x12
  4416                           
  4417  0032                     setCellUndervoltageProtection@voltage_mV:	
  4418                           ; 1 bytes @ 0x12
  4419                           
  4420  0032                     setCellOvervoltageProtection@voltage_mV:	
  4421                           ; 2 bytes @ 0x12
  4422                           
  4423  0032                     EUSART_Initialize@baudrate:	
  4424                           ; 2 bytes @ 0x12
  4425                           
  4426  0032                     dtoa@d:	
  4427                           ; 4 bytes @ 0x12
  4428                           
  4429  0032                     otoa@d:	
  4430                           ; 8 bytes @ 0x12
  4431                           
  4432  0032                     utoa@d:	
  4433                           ; 8 bytes @ 0x12
  4434                           
  4435  0032                     xtoa@d:	
  4436                           ; 8 bytes @ 0x12
  4437                           
  4438                           
  4439                           ; 8 bytes @ 0x12
  4440  0032                     	ds	1
  4441  0033                     ??_ctoa:	
  4442  0033                     ___flmul@sign:	
  4443                           ; 1 bytes @ 0x13
  4444                           
  4445  0033                     stoa@l:	
  4446                           ; 1 bytes @ 0x13
  4447                           
  4448                           
  4449                           ; 2 bytes @ 0x13
  4450  0033                     	ds	1
  4451  0034                     ___flmul@aexp:	
  4452  0034                     setCellUndervoltageProtection@delay_s:	
  4453                           ; 1 bytes @ 0x14
  4454                           
  4455  0034                     setCellOvervoltageProtection@delay_s:	
  4456                           ; 2 bytes @ 0x14
  4457                           
  4458  0034                     ctoa@w:	
  4459                           ; 2 bytes @ 0x14
  4460                           
  4461                           
  4462                           ; 2 bytes @ 0x14
  4463  0034                     	ds	1
  4464  0035                     ___flmul@grs:	
  4465                           
  4466                           ; 4 bytes @ 0x15
  4467  0035                     	ds	1
  4468  0036                     ??_EUSART_Initialize:	
  4469  0036                     ??_setCellUndervoltageProtection:	
  4470                           ; 1 bytes @ 0x16
  4471                           
  4472  0036                     ??_setCellOvervoltageProtection:	
  4473                           ; 1 bytes @ 0x16
  4474                           
  4475                           
  4476                           ; 1 bytes @ 0x16
  4477  0036                     	ds	3
  4478  0039                     ___flmul@bexp:	
  4479                           
  4480                           ; 1 bytes @ 0x19
  4481  0039                     	ds	1
  4482  003A                     ??_dtoa:	
  4483  003A                     ??_otoa:	
  4484                           ; 1 bytes @ 0x1A
  4485                           
  4486  003A                     ??_utoa:	
  4487                           ; 1 bytes @ 0x1A
  4488                           
  4489  003A                     xtoa@x:	
  4490                           ; 1 bytes @ 0x1A
  4491                           
  4492  003A                     ___flmul@prod:	
  4493                           ; 1 bytes @ 0x1A
  4494                           
  4495                           
  4496                           ; 4 bytes @ 0x1A
  4497  003A                     	ds	1
  4498  003B                     ??_xtoa:	
  4499  003B                     utoa@p:	
  4500                           ; 1 bytes @ 0x1B
  4501                           
  4502                           
  4503                           ; 2 bytes @ 0x1B
  4504  003B                     	ds	2
  4505  003D                     _dtoa$1200:	
  4506  003D                     utoa@w:	
  4507                           ; 2 bytes @ 0x1D
  4508                           
  4509                           
  4510                           ; 2 bytes @ 0x1D
  4511  003D                     	ds	1
  4512  003E                     ___flmul@temp:	
  4513                           
  4514                           ; 2 bytes @ 0x1E
  4515  003E                     	ds	1
  4516  003F                     dtoa@p:	
  4517  003F                     utoa@n:	
  4518                           ; 2 bytes @ 0x1F
  4519                           
  4520                           
  4521                           ; 8 bytes @ 0x1F
  4522  003F                     	ds	1
  4523  0040                     ?___fldiv:	
  4524  0040                     ___fldiv@a:	
  4525                           ; 4 bytes @ 0x20
  4526                           
  4527                           
  4528                           ; 4 bytes @ 0x20
  4529  0040                     	ds	1
  4530  0041                     dtoa@w:	
  4531                           
  4532                           ; 2 bytes @ 0x21
  4533  0041                     	ds	1
  4534  0042                     otoa@p:	
  4535                           
  4536                           ; 2 bytes @ 0x22
  4537  0042                     	ds	1
  4538  0043                     dtoa@s:	
  4539  0043                     _xtoa$1236:	
  4540                           ; 2 bytes @ 0x23
  4541                           
  4542                           
  4543                           ; 2 bytes @ 0x23
  4544  0043                     	ds	1
  4545  0044                     setCellUndervoltageProtection@uv_trip:	
  4546  0044                     setCellOvervoltageProtection@ov_trip:	
  4547                           ; 1 bytes @ 0x24
  4548                           
  4549  0044                     otoa@t:	
  4550                           ; 1 bytes @ 0x24
  4551                           
  4552  0044                     ___fldiv@b:	
  4553                           ; 2 bytes @ 0x24
  4554                           
  4555                           
  4556                           ; 4 bytes @ 0x24
  4557  0044                     	ds	1
  4558  0045                     setCellUndervoltageProtection@i:	
  4559  0045                     setCellOvervoltageProtection@i:	
  4560                           ; 2 bytes @ 0x25
  4561                           
  4562  0045                     _xtoa$1237:	
  4563                           ; 2 bytes @ 0x25
  4564                           
  4565  0045                     dtoa@n:	
  4566                           ; 2 bytes @ 0x25
  4567                           
  4568                           
  4569                           ; 8 bytes @ 0x25
  4570  0045                     	ds	1
  4571  0046                     otoa@w:	
  4572                           
  4573                           ; 2 bytes @ 0x26
  4574  0046                     	ds	1
  4575  0047                     utoa@i:	
  4576  0047                     xtoa@p:	
  4577                           ; 2 bytes @ 0x27
  4578                           
  4579                           
  4580                           ; 2 bytes @ 0x27
  4581  0047                     	ds	1
  4582  0048                     ??___fldiv:	
  4583  0048                     otoa@n:	
  4584                           ; 1 bytes @ 0x28
  4585                           
  4586                           
  4587                           ; 8 bytes @ 0x28
  4588  0048                     	ds	1
  4589  0049                     xtoa@w:	
  4590                           
  4591                           ; 2 bytes @ 0x29
  4592  0049                     	ds	2
  4593  004B                     xtoa@n:	
  4594                           
  4595                           ; 8 bytes @ 0x2B
  4596  004B                     	ds	2
  4597  004D                     dtoa@i:	
  4598  004D                     ___fldiv@rem:	
  4599                           ; 2 bytes @ 0x2D
  4600                           
  4601                           
  4602                           ; 4 bytes @ 0x2D
  4603  004D                     	ds	3
  4604  0050                     otoa@i:	
  4605                           
  4606                           ; 2 bytes @ 0x30
  4607  0050                     	ds	1
  4608  0051                     ___fldiv@sign:	
  4609                           
  4610                           ; 1 bytes @ 0x31
  4611  0051                     	ds	1
  4612  0052                     ___fldiv@new_exp:	
  4613                           
  4614                           ; 2 bytes @ 0x32
  4615  0052                     	ds	1
  4616  0053                     xtoa@i:	
  4617                           
  4618                           ; 2 bytes @ 0x33
  4619  0053                     	ds	1
  4620  0054                     ___fldiv@grs:	
  4621                           
  4622                           ; 4 bytes @ 0x34
  4623  0054                     	ds	1
  4624  0055                     xtoa@c:	
  4625                           
  4626                           ; 2 bytes @ 0x35
  4627  0055                     	ds	2
  4628  0057                     ?_vfpfcnvrt:	
  4629  0057                     vfpfcnvrt@fp:	
  4630                           ; 2 bytes @ 0x37
  4631                           
  4632                           
  4633                           ; 2 bytes @ 0x37
  4634  0057                     	ds	1
  4635  0058                     ___fldiv@bexp:	
  4636                           
  4637                           ; 1 bytes @ 0x38
  4638  0058                     	ds	1
  4639  0059                     vfpfcnvrt@fmt:	
  4640  0059                     ___fldiv@aexp:	
  4641                           ; 1 bytes @ 0x39
  4642                           
  4643                           
  4644                           ; 1 bytes @ 0x39
  4645  0059                     	ds	1
  4646  005A                     ?___flge:	
  4647  005A                     ?___flneg:	
  4648                           ; 1 bit 
  4649                           
  4650  005A                     ?___fladd:	
  4651                           ; 4 bytes @ 0x3A
  4652                           
  4653  005A                     vfpfcnvrt@ap:	
  4654                           ; 4 bytes @ 0x3A
  4655                           
  4656  005A                     ___flge@ff1:	
  4657                           ; 1 bytes @ 0x3A
  4658                           
  4659  005A                     ___flneg@f1:	
  4660                           ; 4 bytes @ 0x3A
  4661                           
  4662  005A                     ___fladd@b:	
  4663                           ; 4 bytes @ 0x3A
  4664                           
  4665                           
  4666                           ; 4 bytes @ 0x3A
  4667  005A                     	ds	1
  4668  005B                     ??_vfpfcnvrt:	
  4669                           
  4670                           ; 1 bytes @ 0x3B
  4671  005B                     	ds	3
  4672  005E                     ___flge@ff2:	
  4673  005E                     ___fladd@a:	
  4674                           ; 4 bytes @ 0x3E
  4675                           
  4676                           
  4677                           ; 4 bytes @ 0x3E
  4678  005E                     	ds	3
  4679  0061                     ?_vfprintf:	
  4680  0061                     vfprintf@fp:	
  4681                           ; 2 bytes @ 0x41
  4682                           
  4683                           
  4684                           ; 2 bytes @ 0x41
  4685  0061                     	ds	1
  4686  0062                     ??___flge:	
  4687  0062                     ??___fladd:	
  4688                           ; 1 bytes @ 0x42
  4689                           
  4690                           
  4691                           ; 1 bytes @ 0x42
  4692  0062                     	ds	1
  4693  0063                     vfprintf@fmt:	
  4694                           
  4695                           ; 2 bytes @ 0x43
  4696  0063                     	ds	2
  4697  0065                     vfprintf@ap:	
  4698                           
  4699                           ; 1 bytes @ 0x45
  4700  0065                     	ds	1
  4701  0066                     ?_setShortCircuitProtection:	
  4702  0066                     ?_setOverCurrentDischargeProtection:	
  4703                           ; 1 bytes @ 0x46
  4704                           
  4705  0066                     ??_vfprintf:	
  4706                           ; 1 bytes @ 0x46
  4707                           
  4708  0066                     setShortCircuitProtection@current_mA:	
  4709                           ; 1 bytes @ 0x46
  4710                           
  4711  0066                     setOverCurrentDischargeProtection@current_mA:	
  4712                           ; 4 bytes @ 0x46
  4713                           
  4714                           
  4715                           ; 4 bytes @ 0x46
  4716  0066                     	ds	2
  4717  0068                     vfprintf@cfmt:	
  4718                           
  4719                           ; 2 bytes @ 0x48
  4720  0068                     	ds	2
  4721  006A                     ??_vsnprintf:	
  4722  006A                     ___fladd@signs:	
  4723                           ; 1 bytes @ 0x4A
  4724                           
  4725  006A                     setShortCircuitProtection@delay_us:	
  4726                           ; 1 bytes @ 0x4A
  4727                           
  4728  006A                     setOverCurrentDischargeProtection@delay_ms:	
  4729                           ; 2 bytes @ 0x4A
  4730                           
  4731                           
  4732                           ; 2 bytes @ 0x4A
  4733  006A                     	ds	1
  4734  006B                     ___fladd@aexp:	
  4735                           
  4736                           ; 1 bytes @ 0x4B
  4737  006B                     	ds	1
  4738  006C                     ??_snprintf:	
  4739  006C                     ??_setShortCircuitProtection:	
  4740                           ; 1 bytes @ 0x4C
  4741                           
  4742  006C                     ??_setOverCurrentDischargeProtection:	
  4743                           ; 1 bytes @ 0x4C
  4744                           
  4745  006C                     ___fladd@bexp:	
  4746                           ; 1 bytes @ 0x4C
  4747                           
  4748                           
  4749                           ; 1 bytes @ 0x4C
  4750  006C                     	ds	1
  4751  006D                     ___fladd@grs:	
  4752                           
  4753                           ; 1 bytes @ 0x4D
  4754  006D                     	ds	2
  4755  006F                     snprintf@ap:	
  4756                           
  4757                           ; 1 bytes @ 0x4F
  4758  006F                     	ds	1
  4759                           
  4760                           	psect	maintext
  4761  3660                     __pmaintext:	
  4762 ;;
  4763 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4764 ;;
  4765 ;; *************** function _main *****************
  4766 ;; Defined at:
  4767 ;;		line 72 in file "main.c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;		None
  4770 ;; Auto vars:     Size  Location     Type
  4771 ;;		None
  4772 ;; Return value:  Size  Location     Type
  4773 ;;                  1    wreg      void 
  4774 ;; Registers used:
  4775 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4776 ;; Tracked objects:
  4777 ;;		On entry : B1F/0
  4778 ;;		On exit  : 0/0
  4779 ;;		Unchanged: 0/0
  4780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4783 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4784 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4785 ;;Total ram usage:        2 bytes
  4786 ;; Hardware stack levels required when called:   12
  4787 ;; This function calls:
  4788 ;;		_EUSART_Initialize
  4789 ;;		_initClock
  4790 ;;		_initWDT
  4791 ;;		_init_GPIO
  4792 ;;		_init_I2C
  4793 ;;		_init_RGB
  4794 ;;		_init_TMR1
  4795 ;;		_statemachine
  4796 ;;		_watchdog_timeout_shutdown
  4797 ;; This function is called by:
  4798 ;;		Startup code after reset
  4799 ;; This function uses a non-reentrant model
  4800 ;;
  4801                           
  4802                           
  4803                           ;psect for function _main
  4804  3660                     _main:	
  4805                           
  4806                           ;main.c: 75:     initClock();
  4807                           
  4808                           ;incstack = 0
  4809                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4810  3660  3187  27FD  31B6   	fcall	_initClock
  4811                           
  4812                           ;main.c: 76:     init_GPIO();
  4813  3663  3188  2008  31B6   	fcall	_init_GPIO
  4814                           
  4815                           ;main.c: 77:     initWDT();
  4816  3666  31B3  23AE  31B6   	fcall	_initWDT
  4817                           
  4818                           ;main.c: 78:     init_I2C();
  4819  3669  31B4  241D  31B6   	fcall	_init_I2C
  4820                           
  4821                           ;main.c: 79:     EUSART_Initialize(9600);
  4822  366C  3000               	movlw	0
  4823  366D  0020               	movlb	0	; select bank0
  4824  366E  00B5               	movwf	EUSART_Initialize@baudrate+3
  4825  366F  3000               	movlw	0
  4826  3670  00B4               	movwf	EUSART_Initialize@baudrate+2
  4827  3671  3025               	movlw	37
  4828  3672  00B3               	movwf	EUSART_Initialize@baudrate+1
  4829  3673  3080               	movlw	128
  4830  3674  00B2               	movwf	EUSART_Initialize@baudrate
  4831  3675  31AD  251A  31B6   	fcall	_EUSART_Initialize
  4832                           
  4833                           ;main.c: 80:     init_TMR1();
  4834  3678  31B4  2406  31B6   	fcall	_init_TMR1
  4835                           
  4836                           ;main.c: 81:     init_RGB();
  4837  367B  31B3  23A9  31B6   	fcall	_init_RGB
  4838                           
  4839                           ;main.c: 84:     watchdog_timeout_shutdown();
  4840  367E  31B5  2519  31B6   	fcall	_watchdog_timeout_shutdown
  4841  3681                     l8430:	
  4842                           
  4843                           ;main.c: 88:         statemachine();
  4844  3681  31A0  2002  31B6   	fcall	_statemachine
  4845                           
  4846                           ;main.c: 90:         _delay((unsigned long)((1000)*(16000000/4000.0)));
  4847  3684  3015               	movlw	21
  4848  3685  0023               	movlb	3	; select bank3
  4849  3686  00E4               	movwf	(??_main^(0+384)+1)
  4850  3687  304B               	movlw	75
  4851  3688  00E3               	movwf	??_main^(0+384)
  4852  3689  30BE               	movlw	190
  4853  368A                     u11497:	
  4854  368A  0B89               	decfsz	9,f
  4855  368B  2E8A               	goto	u11497
  4856  368C  0BE3               	decfsz	??_main^(0+384),f
  4857  368D  2E8A               	goto	u11497
  4858  368E  0BE4               	decfsz	(??_main^(0+384)+1),f
  4859  368F  2E8A               	goto	u11497
  4860  3690  0000               	nop
  4861  3691  2E81               	goto	l8430
  4862  3692                     __end_of_main:	
  4863                           
  4864                           	psect	text1
  4865  3519                     __ptext1:	
  4866 ;; *************** function _watchdog_timeout_shutdown *****************
  4867 ;; Defined at:
  4868 ;;		line 3 in file "algorithms.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;		None
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;		None
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  1    wreg      void 
  4875 ;; Registers used:
  4876 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4884 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4885 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4886 ;;Total ram usage:        2 bytes
  4887 ;; Hardware stack levels used:    1
  4888 ;; Hardware stack levels required when called:    2
  4889 ;; This function calls:
  4890 ;;		_RGB_color
  4891 ;; This function is called by:
  4892 ;;		_main
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           
  4897                           ;psect for function _watchdog_timeout_shutdown
  4898  3519                     _watchdog_timeout_shutdown:	
  4899                           
  4900                           ;algorithms.c: 5:     if (!STATUSbits.nTO) {
  4901                           
  4902                           ;incstack = 0
  4903                           ; Regs used in _watchdog_timeout_shutdown: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4904  3519  0020               	movlb	0	; select bank0
  4905  351A  1A03               	btfsc	3,4	;volatile
  4906  351B  0008               	return
  4907                           
  4908                           ;algorithms.c: 6:         RGB_color(0);
  4909  351C  3000               	movlw	0
  4910  351D  00F1               	movwf	RGB_color@color
  4911  351E  00F2               	movwf	RGB_color@color+1
  4912  351F  31A8  2000  31B5   	fcall	_RGB_color
  4913                           
  4914                           ;algorithms.c: 7:          _delay((unsigned long)((2000)*(16000000/4000.0)));
  4915  3522  3029               	movlw	41
  4916  3523  00F4               	movwf	??_watchdog_timeout_shutdown+1
  4917  3524  3096               	movlw	150
  4918  3525  00F3               	movwf	??_watchdog_timeout_shutdown
  4919  3526  307F               	movlw	127
  4920  3527                     u11507:	
  4921  3527  0B89               	decfsz	9,f
  4922  3528  2D27               	goto	u11507
  4923  3529  0BF3               	decfsz	??_watchdog_timeout_shutdown,f
  4924  352A  2D27               	goto	u11507
  4925  352B  0BF4               	decfsz	??_watchdog_timeout_shutdown+1,f
  4926  352C  2D27               	goto	u11507
  4927  352D  0000               	nop
  4928                           
  4929                           ;algorithms.c: 8:          currState = 3;
  4930  352E  3003               	movlw	3
  4931  352F  00F3               	movwf	??_watchdog_timeout_shutdown
  4932  3530  0873               	movf	??_watchdog_timeout_shutdown,w
  4933  3531  0023               	movlb	3	; select bank3
  4934  3532  00D9               	movwf	_currState^(0+384)
  4935  3533  0008               	return
  4936  3534                     __end_of_watchdog_timeout_shutdown:	
  4937                           
  4938                           	psect	text2
  4939  2002                     __ptext2:	
  4940 ;; *************** function _statemachine *****************
  4941 ;; Defined at:
  4942 ;;		line 96 in file "main.c"
  4943 ;; Parameters:    Size  Location     Type
  4944 ;;		None
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;  success         1   68[BANK2 ] unsigned char 
  4947 ;; Return value:  Size  Location     Type
  4948 ;;                  1    wreg      void 
  4949 ;; Registers used:
  4950 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4951 ;; Tracked objects:
  4952 ;;		On entry : 0/0
  4953 ;;		On exit  : 0/0
  4954 ;;		Unchanged: 0/0
  4955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4957 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4958 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4959 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4960 ;;Total ram usage:        3 bytes
  4961 ;; Hardware stack levels used:    1
  4962 ;; Hardware stack levels required when called:   11
  4963 ;; This function calls:
  4964 ;;		_AFE_UPDATE
  4965 ;;		_EUSART_Write_Text
  4966 ;;		_RGB_AWAIT_AFE_CONN
  4967 ;;		_RGB_color
  4968 ;;		_beginAFEcommunication
  4969 ;;		_init_AFE
  4970 ;;		_printcellParameters
  4971 ;;		_snprintf
  4972 ;; This function is called by:
  4973 ;;		_main
  4974 ;; This function uses a non-reentrant model
  4975 ;;
  4976                           
  4977                           
  4978                           ;psect for function _statemachine
  4979  2002                     _statemachine:	
  4980                           
  4981                           ;main.c: 98:     switch (currState) {
  4982                           
  4983                           ;incstack = 0
  4984                           ; Regs used in _statemachine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4985  2002  2861               	goto	l8406
  4986  2003                     l8372:	
  4987                           
  4988                           ;main.c: 101:             if (tmr1_flag) {
  4989  2003  0021               	movlb	1	; select bank1
  4990  2004  086F               	movf	_tmr1_flag^(0+128),w	;volatile
  4991  2005  1903               	btfsc	3,2
  4992  2006  0008               	return
  4993                           
  4994                           ;main.c: 102:                 tmr1_flag = 0;
  4995  2007  01EF               	clrf	_tmr1_flag^(0+128)	;volatile
  4996                           
  4997                           ;main.c: 103:                 RGB_AWAIT_AFE_CONN();
  4998  2008  31B5  25AA  31A0   	fcall	_RGB_AWAIT_AFE_CONN
  4999                           
  5000                           ;main.c: 104:                 uint8_t success = beginAFEcommunication();
  5001  200B  31AD  25C3  31A0   	fcall	_beginAFEcommunication
  5002  200E  0020               	movlb	0	; select bank0
  5003  200F  0820               	movf	?_beginAFEcommunication,w
  5004  2010  0022               	movlb	2	; select bank2
  5005  2011  00E2               	movwf	??_statemachine^(0+256)
  5006  2012  0862               	movf	??_statemachine^(0+256),w
  5007  2013  00E4               	movwf	statemachine@success^(0+256)
  5008                           
  5009                           ;main.c: 109:                 if (success) {
  5010  2014  0864               	movf	statemachine@success^(0+256),w
  5011  2015  1903               	btfsc	3,2
  5012  2016  0008               	return
  5013                           
  5014                           ;main.c: 110:                     T1CONbits.TMR1ON = 0;
  5015  2017  0020               	movlb	0	; select bank0
  5016  2018  1018               	bcf	24,0	;volatile
  5017                           
  5018                           ;main.c: 111:                     PIE1bits.TMR1IE = 0;
  5019  2019  0021               	movlb	1	; select bank1
  5020  201A  1011               	bcf	17,0	;volatile
  5021                           
  5022                           ;main.c: 112:                     RGB_color(0);
  5023  201B  3000               	movlw	0
  5024  201C  00F1               	movwf	RGB_color@color
  5025  201D  00F2               	movwf	RGB_color@color+1
  5026  201E  31A8  2000         	fcall	_RGB_color
  5027                           
  5028                           ;main.c: 113:                     tmr1_flag = 0;
  5029  2020  0021               	movlb	1	; select bank1
  5030  2021  01EF               	clrf	_tmr1_flag^(0+128)	;volatile
  5031                           
  5032                           ;main.c: 126:                     currState = 1;
  5033  2022  0023               	movlb	3	; select bank3
  5034  2023  01D9               	clrf	_currState^(0+384)
  5035  2024  0AD9               	incf	_currState^(0+384),f
  5036  2025  0008               	return
  5037  2026                     l8390:	
  5038                           
  5039                           ;main.c: 135:             init_AFE();
  5040  2026  31A8  20C7  31A0   	fcall	_init_AFE
  5041                           
  5042                           ;main.c: 154:             RGB_color(1);
  5043  2029  3001               	movlw	1
  5044  202A  00F1               	movwf	RGB_color@color
  5045  202B  3000               	movlw	0
  5046  202C  00F2               	movwf	RGB_color@color+1
  5047  202D  31A8  2000         	fcall	_RGB_color
  5048                           
  5049                           ;main.c: 155:             currState = 2;
  5050  202F  3002               	movlw	2
  5051  2030  0022               	movlb	2	; select bank2
  5052  2031  00E2               	movwf	??_statemachine^(0+256)
  5053  2032  0862               	movf	??_statemachine^(0+256),w
  5054  2033  0023               	movlb	3	; select bank3
  5055  2034  00D9               	movwf	_currState^(0+384)
  5056                           
  5057                           ;main.c: 156:             break;
  5058  2035  0008               	return
  5059  2036                     l8394:	
  5060                           
  5061                           ;main.c: 160:             AFE_UPDATE();
  5062  2036  31B4  24B0  31A0   	fcall	_AFE_UPDATE
  5063  2039  0064               	clrwdt	;# 
  5064                           
  5065                           ;main.c: 164:             printcellParameters();
  5066  203A  3198  20F5  31A0   	fcall	_printcellParameters
  5067                           
  5068                           ;main.c: 166:             _delay((unsigned long)((5000)*(16000000/4000.0)));
  5069  203D  3066               	movlw	102
  5070  203E  0022               	movlb	2	; select bank2
  5071  203F  00E3               	movwf	(??_statemachine^(0+256)+1)
  5072  2040  3076               	movlw	118
  5073  2041  00E2               	movwf	??_statemachine^(0+256)
  5074  2042  30C1               	movlw	193
  5075  2043                     u11517:	
  5076  2043  0B89               	decfsz	9,f
  5077  2044  2843               	goto	u11517
  5078  2045  0BE2               	decfsz	??_statemachine^(0+256),f
  5079  2046  2843               	goto	u11517
  5080  2047  0BE3               	decfsz	(??_statemachine^(0+256)+1),f
  5081  2048  2843               	goto	u11517
  5082                           
  5083                           ;main.c: 168:             break;
  5084  2049  0008               	return
  5085  204A                     l8400:	
  5086                           
  5087                           ;main.c: 172:              snprintf(messageBuffer, 127, "WATCHDOG NOT KICKED: AFE comms 
      +                          error \n\r");
  5088  204A  3071               	movlw	113
  5089  204B  0021               	movlb	1	; select bank1
  5090  204C  00CC               	movwf	snprintf@s^(0+128)
  5091  204D  3027               	movlw	39
  5092  204E  00CD               	movwf	(snprintf@s^(0+128)+1)
  5093  204F  307F               	movlw	127
  5094  2050  00CE               	movwf	snprintf@n^(0+128)
  5095  2051  3000               	movlw	0
  5096  2052  00CF               	movwf	(snprintf@n^(0+128)+1)
  5097  2053  3049               	movlw	low (STR_1| (0+32768))
  5098  2054  00D0               	movwf	snprintf@fmt^(0+128)
  5099  2055  30B8               	movlw	high (STR_1| (0+32768))
  5100  2056  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5101  2057  31B4  24FE  31A0   	fcall	_snprintf
  5102                           
  5103                           ;main.c: 173:              EUSART_Write_Text(messageBuffer);
  5104  205A  3071               	movlw	113
  5105  205B  00F2               	movwf	EUSART_Write_Text@text
  5106  205C  3027               	movlw	39
  5107  205D  00F3               	movwf	EUSART_Write_Text@text+1
  5108  205E  31B4  24C9         	fcall	_EUSART_Write_Text
  5109                           
  5110                           ;main.c: 174:             break;
  5111  2060  0008               	return
  5112  2061                     l8406:	
  5113  2061  0023               	movlb	3	; select bank3
  5114  2062  0859               	movf	_currState^(0+384),w
  5115  2063  0022               	movlb	2	; select bank2
  5116  2064  00E2               	movwf	??_statemachine^(0+256)
  5117  2065  01E3               	clrf	(??_statemachine^(0+256)+1)
  5118                           
  5119                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5120                           ; Switch size 1, requested type "simple"
  5121                           ; Number of cases is 1, Range of values is 0 to 0
  5122                           ; switch strategies available:
  5123                           ; Name         Instructions Cycles
  5124                           ; simple_byte            4     3 (average)
  5125                           ; direct_byte            8     6 (fixed)
  5126                           ; jumptable            260     6 (fixed)
  5127                           ;	Chosen strategy is simple_byte
  5128  2066  0863               	movf	(??_statemachine+1)^(0+256),w
  5129  2067  3A00               	xorlw	0	; case 0
  5130  2068  1903               	skipnz
  5131  2069  286B               	goto	l8598
  5132  206A  2879               	goto	l164
  5133  206B                     l8598:	
  5134                           
  5135                           ; Switch size 1, requested type "simple"
  5136                           ; Number of cases is 4, Range of values is 0 to 3
  5137                           ; switch strategies available:
  5138                           ; Name         Instructions Cycles
  5139                           ; simple_byte           13     7 (average)
  5140                           ; direct_byte           14     6 (fixed)
  5141                           ; jumptable            260     6 (fixed)
  5142                           ;	Chosen strategy is simple_byte
  5143  206B  0862               	movf	??_statemachine^(0+256),w
  5144  206C  3A00               	xorlw	0	; case 0
  5145  206D  1903               	skipnz
  5146  206E  2803               	goto	l8372
  5147  206F  3A01               	xorlw	1	; case 1
  5148  2070  1903               	skipnz
  5149  2071  2826               	goto	l8390
  5150  2072  3A03               	xorlw	3	; case 2
  5151  2073  1903               	skipnz
  5152  2074  2836               	goto	l8394
  5153  2075  3A01               	xorlw	1	; case 3
  5154  2076  1903               	skipnz
  5155  2077  284A               	goto	l8400
  5156  2078  2879               	goto	l164
  5157  2079                     l164:	
  5158  2079  0008               	return
  5159  207A                     __end_of_statemachine:	
  5160                           
  5161                           	psect	text3
  5162  18F5                     __ptext3:	
  5163 ;; *************** function _printcellParameters *****************
  5164 ;; Defined at:
  5165 ;;		line 314 in file "BQ76920.c"
  5166 ;; Parameters:    Size  Location     Type
  5167 ;;		None
  5168 ;; Auto vars:     Size  Location     Type
  5169 ;;		None
  5170 ;; Return value:  Size  Location     Type
  5171 ;;                  1    wreg      void 
  5172 ;; Registers used:
  5173 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5174 ;; Tracked objects:
  5175 ;;		On entry : 0/0
  5176 ;;		On exit  : 0/0
  5177 ;;		Unchanged: 0/0
  5178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5183 ;;Total ram usage:        0 bytes
  5184 ;; Hardware stack levels used:    1
  5185 ;; Hardware stack levels required when called:   10
  5186 ;; This function calls:
  5187 ;;		_EUSART_Write_Text
  5188 ;;		_readRegister
  5189 ;;		_snprintf
  5190 ;; This function is called by:
  5191 ;;		_statemachine
  5192 ;; This function uses a non-reentrant model
  5193 ;;
  5194                           
  5195                           
  5196                           ;psect for function _printcellParameters
  5197  18F5                     _printcellParameters:	
  5198                           
  5199                           ;BQ76920.c: 315:     snprintf(messageBuffer, 127, "Cell batt: %i ,%d, %d , %d, %d, %d Ba
      +                          tt Curr: %i Temp: %i CTRL2: %i \n\r", batVoltage,cellVoltages[0],cellVoltages[1],cellVol
      +                          tages[2],cellVoltages[3],cellVoltages[4], batCurrent, temperatureThermistor,readRegister
      +                          (0x18, 0x05));
  5200                           
  5201                           ;incstack = 0
  5202                           ; Regs used in _printcellParameters: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5203  18F5  3071               	movlw	113
  5204  18F6  0021               	movlb	1	; select bank1
  5205  18F7  00CC               	movwf	snprintf@s^(0+128)
  5206  18F8  3027               	movlw	39
  5207  18F9  00CD               	movwf	(snprintf@s^(0+128)+1)
  5208  18FA  307F               	movlw	127
  5209  18FB  00CE               	movwf	snprintf@n^(0+128)
  5210  18FC  3000               	movlw	0
  5211  18FD  00CF               	movwf	(snprintf@n^(0+128)+1)
  5212  18FE  3002               	movlw	low (STR_2| (0+32768))
  5213  18FF  00D0               	movwf	snprintf@fmt^(0+128)
  5214  1900  30B8               	movlw	high (STR_2| (0+32768))
  5215  1901  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5216  1902  0023               	movlb	3	; select bank3
  5217  1903  0841               	movf	(_batVoltage+3)^(0+384),w
  5218  1904  0021               	movlb	1	; select bank1
  5219  1905  00D5               	movwf	((?_snprintf+3)^(0+128)+6)
  5220  1906  0023               	movlb	3	; select bank3
  5221  1907  0840               	movf	(_batVoltage+2)^(0+384),w
  5222  1908  0021               	movlb	1	; select bank1
  5223  1909  00D4               	movwf	((?_snprintf+2)^(0+128)+6)
  5224  190A  0023               	movlb	3	; select bank3
  5225  190B  083F               	movf	(_batVoltage+1)^(0+384),w
  5226  190C  0021               	movlb	1	; select bank1
  5227  190D  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5228  190E  0023               	movlb	3	; select bank3
  5229  190F  083E               	movf	_batVoltage^(0+384),w
  5230  1910  0021               	movlb	1	; select bank1
  5231  1911  00D2               	movwf	(?_snprintf^(0+128)+6)
  5232  1912  0023               	movlb	3	; select bank3
  5233  1913  0821               	movf	(_cellVoltages+1)^(0+384),w
  5234  1914  0021               	movlb	1	; select bank1
  5235  1915  00D7               	movwf	((?_snprintf+1)^(0+128)+10)
  5236  1916  0023               	movlb	3	; select bank3
  5237  1917  0820               	movf	_cellVoltages^(0+384),w
  5238  1918  0021               	movlb	1	; select bank1
  5239  1919  00D6               	movwf	(?_snprintf^(0+128)+10)
  5240  191A  0023               	movlb	3	; select bank3
  5241  191B  0823               	movf	((_cellVoltages+1)^(0+384)+2),w
  5242  191C  0021               	movlb	1	; select bank1
  5243  191D  00D9               	movwf	((?_snprintf+1)^(0+128)+12)
  5244  191E  0023               	movlb	3	; select bank3
  5245  191F  0822               	movf	(_cellVoltages^(0+384)+2),w
  5246  1920  0021               	movlb	1	; select bank1
  5247  1921  00D8               	movwf	(?_snprintf^(0+128)+12)
  5248  1922  0023               	movlb	3	; select bank3
  5249  1923  0825               	movf	((_cellVoltages+1)^(0+384)+4),w
  5250  1924  0021               	movlb	1	; select bank1
  5251  1925  00DB               	movwf	((?_snprintf+1)^(0+128)+14)
  5252  1926  0023               	movlb	3	; select bank3
  5253  1927  0824               	movf	(_cellVoltages^(0+384)+4),w
  5254  1928  0021               	movlb	1	; select bank1
  5255  1929  00DA               	movwf	(?_snprintf^(0+128)+14)
  5256  192A  0023               	movlb	3	; select bank3
  5257  192B  0827               	movf	((_cellVoltages+1)^(0+384)+6),w
  5258  192C  0021               	movlb	1	; select bank1
  5259  192D  00DD               	movwf	((?_snprintf+1)^(0+128)+16)
  5260  192E  0023               	movlb	3	; select bank3
  5261  192F  0826               	movf	(_cellVoltages^(0+384)+6),w
  5262  1930  0021               	movlb	1	; select bank1
  5263  1931  00DC               	movwf	(?_snprintf^(0+128)+16)
  5264  1932  0023               	movlb	3	; select bank3
  5265  1933  0829               	movf	((_cellVoltages+1)^(0+384)+8),w
  5266  1934  0021               	movlb	1	; select bank1
  5267  1935  00DF               	movwf	((?_snprintf+1)^(0+128)+18)
  5268  1936  0023               	movlb	3	; select bank3
  5269  1937  0828               	movf	(_cellVoltages^(0+384)+8),w
  5270  1938  0021               	movlb	1	; select bank1
  5271  1939  00DE               	movwf	(?_snprintf^(0+128)+18)
  5272  193A  0023               	movlb	3	; select bank3
  5273  193B  083D               	movf	(_batCurrent+3)^(0+384),w
  5274  193C  0021               	movlb	1	; select bank1
  5275  193D  00E3               	movwf	((?_snprintf+3)^(0+128)+20)
  5276  193E  0023               	movlb	3	; select bank3
  5277  193F  083C               	movf	(_batCurrent+2)^(0+384),w
  5278  1940  0021               	movlb	1	; select bank1
  5279  1941  00E2               	movwf	((?_snprintf+2)^(0+128)+20)
  5280  1942  0023               	movlb	3	; select bank3
  5281  1943  083B               	movf	(_batCurrent+1)^(0+384),w
  5282  1944  0021               	movlb	1	; select bank1
  5283  1945  00E1               	movwf	((?_snprintf+1)^(0+128)+20)
  5284  1946  0023               	movlb	3	; select bank3
  5285  1947  083A               	movf	_batCurrent^(0+384),w
  5286  1948  0021               	movlb	1	; select bank1
  5287  1949  00E0               	movwf	(?_snprintf^(0+128)+20)
  5288  194A  0023               	movlb	3	; select bank3
  5289  194B  0839               	movf	(_temperatureThermistor+3)^(0+384),w
  5290  194C  0021               	movlb	1	; select bank1
  5291  194D  00E7               	movwf	((?_snprintf+3)^(0+128)+24)
  5292  194E  0023               	movlb	3	; select bank3
  5293  194F  0838               	movf	(_temperatureThermistor+2)^(0+384),w
  5294  1950  0021               	movlb	1	; select bank1
  5295  1951  00E6               	movwf	((?_snprintf+2)^(0+128)+24)
  5296  1952  0023               	movlb	3	; select bank3
  5297  1953  0837               	movf	(_temperatureThermistor+1)^(0+384),w
  5298  1954  0021               	movlb	1	; select bank1
  5299  1955  00E5               	movwf	((?_snprintf+1)^(0+128)+24)
  5300  1956  0023               	movlb	3	; select bank3
  5301  1957  0836               	movf	_temperatureThermistor^(0+384),w
  5302  1958  0021               	movlb	1	; select bank1
  5303  1959  00E4               	movwf	(?_snprintf^(0+128)+24)
  5304  195A  3018               	movlw	24
  5305  195B  00F5               	movwf	readRegister@slaveAddress
  5306  195C  3000               	movlw	0
  5307  195D  00F6               	movwf	readRegister@slaveAddress+1
  5308  195E  3005               	movlw	5
  5309  195F  00F7               	movwf	readRegister@regAddress
  5310  1960  3000               	movlw	0
  5311  1961  00F8               	movwf	readRegister@regAddress+1
  5312  1962  31B6  26C7  3198   	fcall	_readRegister
  5313  1965  0876               	movf	?_readRegister+1,w
  5314  1966  0021               	movlb	1	; select bank1
  5315  1967  00E9               	movwf	((?_snprintf+1)^(0+128)+28)
  5316  1968  0875               	movf	?_readRegister,w
  5317  1969  00E8               	movwf	(?_snprintf^(0+128)+28)
  5318  196A  31B4  24FE  3198   	fcall	_snprintf
  5319                           
  5320                           ;BQ76920.c: 316:     EUSART_Write_Text(messageBuffer);
  5321  196D  3071               	movlw	113
  5322  196E  00F2               	movwf	EUSART_Write_Text@text
  5323  196F  3027               	movlw	39
  5324  1970  00F3               	movwf	EUSART_Write_Text@text+1
  5325  1971  31B4  24C9  3198   	fcall	_EUSART_Write_Text
  5326                           
  5327                           ;BQ76920.c: 317:     snprintf(messageBuffer, 127, "0x05 SYS_CTRL2: %i \n\r", readRegiste
      +                          r(0x18, 0x05));
  5328  1974  3071               	movlw	113
  5329  1975  0021               	movlb	1	; select bank1
  5330  1976  00CC               	movwf	snprintf@s^(0+128)
  5331  1977  3027               	movlw	39
  5332  1978  00CD               	movwf	(snprintf@s^(0+128)+1)
  5333  1979  307F               	movlw	127
  5334  197A  00CE               	movwf	snprintf@n^(0+128)
  5335  197B  3000               	movlw	0
  5336  197C  00CF               	movwf	(snprintf@n^(0+128)+1)
  5337  197D  30CD               	movlw	low (STR_3| (0+32768))
  5338  197E  00D0               	movwf	snprintf@fmt^(0+128)
  5339  197F  30B8               	movlw	high (STR_3| (0+32768))
  5340  1980  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5341  1981  3018               	movlw	24
  5342  1982  00F5               	movwf	readRegister@slaveAddress
  5343  1983  3000               	movlw	0
  5344  1984  00F6               	movwf	readRegister@slaveAddress+1
  5345  1985  3005               	movlw	5
  5346  1986  00F7               	movwf	readRegister@regAddress
  5347  1987  3000               	movlw	0
  5348  1988  00F8               	movwf	readRegister@regAddress+1
  5349  1989  31B6  26C7  3198   	fcall	_readRegister
  5350  198C  0876               	movf	?_readRegister+1,w
  5351  198D  0021               	movlb	1	; select bank1
  5352  198E  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5353  198F  0875               	movf	?_readRegister,w
  5354  1990  00D2               	movwf	(?_snprintf^(0+128)+6)
  5355  1991  31B4  24FE  3198   	fcall	_snprintf
  5356                           
  5357                           ;BQ76920.c: 318:     EUSART_Write_Text(messageBuffer);
  5358  1994  3071               	movlw	113
  5359  1995  00F2               	movwf	EUSART_Write_Text@text
  5360  1996  3027               	movlw	39
  5361  1997  00F3               	movwf	EUSART_Write_Text@text+1
  5362  1998  31B4  24C9  3198   	fcall	_EUSART_Write_Text
  5363                           
  5364                           ;BQ76920.c: 319:     snprintf(messageBuffer, 127, "0x00 SYS_STAT: %i \n\r", readRegister
      +                          (0x18, 0x00));
  5365  199B  3071               	movlw	113
  5366  199C  0021               	movlb	1	; select bank1
  5367  199D  00CC               	movwf	snprintf@s^(0+128)
  5368  199E  3027               	movlw	39
  5369  199F  00CD               	movwf	(snprintf@s^(0+128)+1)
  5370  19A0  307F               	movlw	127
  5371  19A1  00CE               	movwf	snprintf@n^(0+128)
  5372  19A2  3000               	movlw	0
  5373  19A3  00CF               	movwf	(snprintf@n^(0+128)+1)
  5374  19A4  3037               	movlw	low (STR_4| (0+32768))
  5375  19A5  00D0               	movwf	snprintf@fmt^(0+128)
  5376  19A6  30B9               	movlw	high (STR_4| (0+32768))
  5377  19A7  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5378  19A8  3018               	movlw	24
  5379  19A9  00F5               	movwf	readRegister@slaveAddress
  5380  19AA  3000               	movlw	0
  5381  19AB  00F6               	movwf	readRegister@slaveAddress+1
  5382  19AC  3000               	movlw	0
  5383  19AD  00F7               	movwf	readRegister@regAddress
  5384  19AE  00F8               	movwf	readRegister@regAddress+1
  5385  19AF  31B6  26C7  3198   	fcall	_readRegister
  5386  19B2  0876               	movf	?_readRegister+1,w
  5387  19B3  0021               	movlb	1	; select bank1
  5388  19B4  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5389  19B5  0875               	movf	?_readRegister,w
  5390  19B6  00D2               	movwf	(?_snprintf^(0+128)+6)
  5391  19B7  31B4  24FE  3198   	fcall	_snprintf
  5392                           
  5393                           ;BQ76920.c: 320:     EUSART_Write_Text(messageBuffer);
  5394  19BA  3071               	movlw	113
  5395  19BB  00F2               	movwf	EUSART_Write_Text@text
  5396  19BC  3027               	movlw	39
  5397  19BD  00F3               	movwf	EUSART_Write_Text@text+1
  5398  19BE  31B4  24C9  3198   	fcall	_EUSART_Write_Text
  5399                           
  5400                           ;BQ76920.c: 321:     snprintf(messageBuffer, 127, "0x06 PROTECT1: %i \n\r", readRegister
      +                          (0x18, 0x06));
  5401  19C1  3071               	movlw	113
  5402  19C2  0021               	movlb	1	; select bank1
  5403  19C3  00CC               	movwf	snprintf@s^(0+128)
  5404  19C4  3027               	movlw	39
  5405  19C5  00CD               	movwf	(snprintf@s^(0+128)+1)
  5406  19C6  307F               	movlw	127
  5407  19C7  00CE               	movwf	snprintf@n^(0+128)
  5408  19C8  3000               	movlw	0
  5409  19C9  00CF               	movwf	(snprintf@n^(0+128)+1)
  5410  19CA  30F8               	movlw	low (STR_5| (0+32768))
  5411  19CB  00D0               	movwf	snprintf@fmt^(0+128)
  5412  19CC  30B8               	movlw	high (STR_5| (0+32768))
  5413  19CD  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5414  19CE  3018               	movlw	24
  5415  19CF  00F5               	movwf	readRegister@slaveAddress
  5416  19D0  3000               	movlw	0
  5417  19D1  00F6               	movwf	readRegister@slaveAddress+1
  5418  19D2  3006               	movlw	6
  5419  19D3  00F7               	movwf	readRegister@regAddress
  5420  19D4  3000               	movlw	0
  5421  19D5  00F8               	movwf	readRegister@regAddress+1
  5422  19D6  31B6  26C7  3198   	fcall	_readRegister
  5423  19D9  0876               	movf	?_readRegister+1,w
  5424  19DA  0021               	movlb	1	; select bank1
  5425  19DB  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5426  19DC  0875               	movf	?_readRegister,w
  5427  19DD  00D2               	movwf	(?_snprintf^(0+128)+6)
  5428  19DE  31B4  24FE  3198   	fcall	_snprintf
  5429                           
  5430                           ;BQ76920.c: 322:     EUSART_Write_Text(messageBuffer);
  5431  19E1  3071               	movlw	113
  5432  19E2  00F2               	movwf	EUSART_Write_Text@text
  5433  19E3  3027               	movlw	39
  5434  19E4  00F3               	movwf	EUSART_Write_Text@text+1
  5435  19E5  31B4  24C9  3198   	fcall	_EUSART_Write_Text
  5436                           
  5437                           ;BQ76920.c: 323:     snprintf(messageBuffer, 127, "Current: %d \n\r", batCurrent);
  5438  19E8  3071               	movlw	113
  5439  19E9  0021               	movlb	1	; select bank1
  5440  19EA  00CC               	movwf	snprintf@s^(0+128)
  5441  19EB  3027               	movlw	39
  5442  19EC  00CD               	movwf	(snprintf@s^(0+128)+1)
  5443  19ED  307F               	movlw	127
  5444  19EE  00CE               	movwf	snprintf@n^(0+128)
  5445  19EF  3000               	movlw	0
  5446  19F0  00CF               	movwf	(snprintf@n^(0+128)+1)
  5447  19F1  30CB               	movlw	low (STR_6| (0+32768))
  5448  19F2  00D0               	movwf	snprintf@fmt^(0+128)
  5449  19F3  30B9               	movlw	high (STR_6| (0+32768))
  5450  19F4  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5451  19F5  0023               	movlb	3	; select bank3
  5452  19F6  083D               	movf	(_batCurrent+3)^(0+384),w
  5453  19F7  0021               	movlb	1	; select bank1
  5454  19F8  00D5               	movwf	((?_snprintf+3)^(0+128)+6)
  5455  19F9  0023               	movlb	3	; select bank3
  5456  19FA  083C               	movf	(_batCurrent+2)^(0+384),w
  5457  19FB  0021               	movlb	1	; select bank1
  5458  19FC  00D4               	movwf	((?_snprintf+2)^(0+128)+6)
  5459  19FD  0023               	movlb	3	; select bank3
  5460  19FE  083B               	movf	(_batCurrent+1)^(0+384),w
  5461  19FF  0021               	movlb	1	; select bank1
  5462  1A00  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5463  1A01  0023               	movlb	3	; select bank3
  5464  1A02  083A               	movf	_batCurrent^(0+384),w
  5465  1A03  0021               	movlb	1	; select bank1
  5466  1A04  00D2               	movwf	(?_snprintf^(0+128)+6)
  5467  1A05  31B4  24FE  3198   	fcall	_snprintf
  5468                           
  5469                           ;BQ76920.c: 324:     EUSART_Write_Text(messageBuffer);
  5470  1A08  3071               	movlw	113
  5471  1A09  00F2               	movwf	EUSART_Write_Text@text
  5472  1A0A  3027               	movlw	39
  5473  1A0B  00F3               	movwf	EUSART_Write_Text@text+1
  5474  1A0C  31B4  24C9  3198   	fcall	_EUSART_Write_Text
  5475                           
  5476                           ;BQ76920.c: 325:     snprintf(messageBuffer, 127, "Temp: %d e-2\n\r", temperatureThermis
      +                          tor);
  5477  1A0F  3071               	movlw	113
  5478  1A10  0021               	movlb	1	; select bank1
  5479  1A11  00CC               	movwf	snprintf@s^(0+128)
  5480  1A12  3027               	movlw	39
  5481  1A13  00CD               	movwf	(snprintf@s^(0+128)+1)
  5482  1A14  307F               	movlw	127
  5483  1A15  00CE               	movwf	snprintf@n^(0+128)
  5484  1A16  3000               	movlw	0
  5485  1A17  00CF               	movwf	(snprintf@n^(0+128)+1)
  5486  1A18  30DA               	movlw	low (STR_7| (0+32768))
  5487  1A19  00D0               	movwf	snprintf@fmt^(0+128)
  5488  1A1A  30B9               	movlw	high (STR_7| (0+32768))
  5489  1A1B  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5490  1A1C  0023               	movlb	3	; select bank3
  5491  1A1D  0839               	movf	(_temperatureThermistor+3)^(0+384),w
  5492  1A1E  0021               	movlb	1	; select bank1
  5493  1A1F  00D5               	movwf	((?_snprintf+3)^(0+128)+6)
  5494  1A20  0023               	movlb	3	; select bank3
  5495  1A21  0838               	movf	(_temperatureThermistor+2)^(0+384),w
  5496  1A22  0021               	movlb	1	; select bank1
  5497  1A23  00D4               	movwf	((?_snprintf+2)^(0+128)+6)
  5498  1A24  0023               	movlb	3	; select bank3
  5499  1A25  0837               	movf	(_temperatureThermistor+1)^(0+384),w
  5500  1A26  0021               	movlb	1	; select bank1
  5501  1A27  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5502  1A28  0023               	movlb	3	; select bank3
  5503  1A29  0836               	movf	_temperatureThermistor^(0+384),w
  5504  1A2A  0021               	movlb	1	; select bank1
  5505  1A2B  00D2               	movwf	(?_snprintf^(0+128)+6)
  5506  1A2C  31B4  24FE  3198   	fcall	_snprintf
  5507                           
  5508                           ;BQ76920.c: 326:     EUSART_Write_Text(messageBuffer);
  5509  1A2F  3071               	movlw	113
  5510  1A30  00F2               	movwf	EUSART_Write_Text@text
  5511  1A31  3027               	movlw	39
  5512  1A32  00F3               	movwf	EUSART_Write_Text@text+1
  5513  1A33  31B4  24C9         	fcall	_EUSART_Write_Text
  5514  1A35  0008               	return
  5515  1A36                     __end_of_printcellParameters:	
  5516                           
  5517                           	psect	text4
  5518  34FE                     __ptext4:	
  5519 ;; *************** function _snprintf *****************
  5520 ;; Defined at:
  5521 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\snprintf.c"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;  s               2   44[BANK1 ] PTR unsigned char 
  5524 ;;		 -> messageBuffer(127), 
  5525 ;;  n               2   46[BANK1 ] unsigned int 
  5526 ;;  fmt             2   48[BANK1 ] PTR const unsigned char 
  5527 ;;		 -> STR_21(18), STR_20(18), STR_19(19), STR_18(20), 
  5528 ;;		 -> STR_17(20), STR_16(21), STR_15(21), STR_14(21), 
  5529 ;;		 -> STR_13(22), STR_12(22), STR_11(21), STR_10(21), 
  5530 ;;		 -> STR_7(15), STR_6(15), STR_5(21), STR_4(21), 
  5531 ;;		 -> STR_3(22), STR_2(71), STR_1(40), 
  5532 ;; Auto vars:     Size  Location     Type
  5533 ;;  ret             2    0        int 
  5534 ;;  ap              1   79[BANK0 ] PTR void [1]
  5535 ;;		 -> ?_snprintf(2), 
  5536 ;; Return value:  Size  Location     Type
  5537 ;;                  2   44[BANK1 ] int 
  5538 ;; Registers used:
  5539 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5540 ;; Tracked objects:
  5541 ;;		On entry : 0/0
  5542 ;;		On exit  : 0/0
  5543 ;;		Unchanged: 0/0
  5544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5545 ;;      Params:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5546 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5547 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5548 ;;      Totals:         0       4      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5549 ;;Total ram usage:       34 bytes
  5550 ;; Hardware stack levels used:    1
  5551 ;; Hardware stack levels required when called:    9
  5552 ;; This function calls:
  5553 ;;		_vsnprintf
  5554 ;; This function is called by:
  5555 ;;		_statemachine
  5556 ;;		_printcellParameters
  5557 ;;		_printotAFERegisters
  5558 ;; This function uses a non-reentrant model
  5559 ;;
  5560                           
  5561                           
  5562                           ;psect for function _snprintf
  5563  34FE                     _snprintf:	
  5564                           
  5565                           ;incstack = 0
  5566                           ; Regs used in _snprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5567  34FE  30D2               	movlw	(low ((?_snprintf| 0+6)))& (0+255)
  5568  34FF  0020               	movlb	0	; select bank0
  5569  3500  00EC               	movwf	??_snprintf
  5570  3501  086C               	movf	??_snprintf,w
  5571  3502  00EF               	movwf	snprintf@ap
  5572  3503  0021               	movlb	1	; select bank1
  5573  3504  084D               	movf	(snprintf@s+1)^(0+128),w
  5574  3505  00BC               	movwf	(vsnprintf@s+1)^(0+128)
  5575  3506  084C               	movf	snprintf@s^(0+128),w
  5576  3507  00BB               	movwf	vsnprintf@s^(0+128)
  5577  3508  084F               	movf	(snprintf@n+1)^(0+128),w
  5578  3509  00BE               	movwf	(vsnprintf@n+1)^(0+128)
  5579  350A  084E               	movf	snprintf@n^(0+128),w
  5580  350B  00BD               	movwf	vsnprintf@n^(0+128)
  5581  350C  0851               	movf	(snprintf@fmt+1)^(0+128),w
  5582  350D  00C0               	movwf	(vsnprintf@fmt+1)^(0+128)
  5583  350E  0850               	movf	snprintf@fmt^(0+128),w
  5584  350F  00BF               	movwf	vsnprintf@fmt^(0+128)
  5585  3510  306F               	movlw	(low (snprintf@ap| 0))& (0+255)
  5586  3511  0020               	movlb	0	; select bank0
  5587  3512  00EC               	movwf	??_snprintf
  5588  3513  086C               	movf	??_snprintf,w
  5589  3514  0021               	movlb	1	; select bank1
  5590  3515  00C1               	movwf	vsnprintf@ap^(0+128)
  5591  3516  31AA  22E4         	fcall	_vsnprintf
  5592  3518  0008               	return
  5593  3519                     __end_of_snprintf:	
  5594                           
  5595                           	psect	text5
  5596  2AE4                     __ptext5:	
  5597 ;; *************** function _vsnprintf *****************
  5598 ;; Defined at:
  5599 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_vsnprintf.c"
  5600 ;; Parameters:    Size  Location     Type
  5601 ;;  s               2   27[BANK1 ] PTR unsigned char 
  5602 ;;		 -> messageBuffer(127), 
  5603 ;;  n               2   29[BANK1 ] unsigned int 
  5604 ;;  fmt             2   31[BANK1 ] PTR const unsigned char 
  5605 ;;		 -> STR_21(18), STR_20(18), STR_19(19), STR_18(20), 
  5606 ;;		 -> STR_17(20), STR_16(21), STR_15(21), STR_14(21), 
  5607 ;;		 -> STR_13(22), STR_12(22), STR_11(21), STR_10(21), 
  5608 ;;		 -> STR_7(15), STR_6(15), STR_5(21), STR_4(21), 
  5609 ;;		 -> STR_3(22), STR_2(71), STR_1(40), 
  5610 ;;  ap              1   33[BANK1 ] PTR PTR void 
  5611 ;;		 -> snprintf@ap(1), 
  5612 ;; Auto vars:     Size  Location     Type
  5613 ;;  f               6   38[BANK1 ] struct _IO_FILE
  5614 ;;  cnt             2   36[BANK1 ] int 
  5615 ;; Return value:  Size  Location     Type
  5616 ;;                  2   27[BANK1 ] int 
  5617 ;; Registers used:
  5618 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5619 ;; Tracked objects:
  5620 ;;		On entry : 0/0
  5621 ;;		On exit  : 0/0
  5622 ;;		Unchanged: 0/0
  5623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5624 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5625 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5626 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5627 ;;      Totals:         0       2      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5628 ;;Total ram usage:       19 bytes
  5629 ;; Hardware stack levels used:    1
  5630 ;; Hardware stack levels required when called:    8
  5631 ;; This function calls:
  5632 ;;		_vfprintf
  5633 ;; This function is called by:
  5634 ;;		_snprintf
  5635 ;; This function uses a non-reentrant model
  5636 ;;
  5637                           
  5638                           
  5639                           ;psect for function _vsnprintf
  5640  2AE4                     _vsnprintf:	
  5641                           
  5642                           ;incstack = 0
  5643                           ; Regs used in _vsnprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5644  2AE4  3080               	movlw	128
  5645  2AE5  0021               	movlb	1	; select bank1
  5646  2AE6  023E               	subwf	(vsnprintf@n+1)^(0+128),w
  5647  2AE7  3000               	movlw	0
  5648  2AE8  1903               	skipnz
  5649  2AE9  023D               	subwf	vsnprintf@n^(0+128),w
  5650  2AEA  1C03               	skipc
  5651  2AEB  2AF7               	goto	l7986
  5652  2AEC  304B               	movlw	75
  5653  2AED  0023               	movlb	3	; select bank3
  5654  2AEE  00C2               	movwf	_errno^(0+384)
  5655  2AEF  3000               	movlw	0
  5656  2AF0  00C3               	movwf	(_errno^(0+384)+1)
  5657  2AF1  30FF               	movlw	255
  5658  2AF2  0021               	movlb	1	; select bank1
  5659  2AF3  00BB               	movwf	?_vsnprintf^(0+128)
  5660  2AF4  30FF               	movlw	255
  5661  2AF5  00BC               	movwf	(?_vsnprintf^(0+128)+1)
  5662  2AF6  0008               	return
  5663  2AF7                     l7986:	
  5664  2AF7  083C               	movf	(vsnprintf@s+1)^(0+128),w
  5665  2AF8  00C7               	movwf	(vsnprintf@f+1)^(0+128)
  5666  2AF9  083B               	movf	vsnprintf@s^(0+128),w
  5667  2AFA  00C6               	movwf	vsnprintf@f^(0+128)
  5668  2AFB  3000               	movlw	0
  5669  2AFC  023E               	subwf	(vsnprintf@n+1)^(0+128),w
  5670  2AFD  3002               	movlw	2
  5671  2AFE  1903               	skipnz
  5672  2AFF  023D               	subwf	vsnprintf@n^(0+128),w
  5673  2B00  1C03               	skipc
  5674  2B01  2B0B               	goto	l7992
  5675  2B02  083D               	movf	vsnprintf@n^(0+128),w
  5676  2B03  3EFF               	addlw	255
  5677  2B04  00CA               	movwf	(vsnprintf@f^(0+128)+4)
  5678  2B05  30FF               	movlw	255
  5679  2B06  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  5680  2B07  00CB               	movwf	((vsnprintf@f+1)^(0+128)+4)
  5681  2B08  01C8               	clrf	(vsnprintf@f^(0+128)+2)
  5682  2B09  01C9               	clrf	((vsnprintf@f+1)^(0+128)+2)
  5683  2B0A  2B13               	goto	l7994
  5684  2B0B                     l7992:	
  5685  2B0B  3001               	movlw	1
  5686  2B0C  00CA               	movwf	(vsnprintf@f^(0+128)+4)
  5687  2B0D  3000               	movlw	0
  5688  2B0E  00CB               	movwf	(vsnprintf@f^(0+128)+5)
  5689  2B0F  3001               	movlw	1
  5690  2B10  00C8               	movwf	(vsnprintf@f^(0+128)+2)
  5691  2B11  3000               	movlw	0
  5692  2B12  00C9               	movwf	(vsnprintf@f^(0+128)+3)
  5693  2B13                     l7994:	
  5694  2B13  30C6               	movlw	low vsnprintf@f
  5695  2B14  0020               	movlb	0	; select bank0
  5696  2B15  00E1               	movwf	vfprintf@fp
  5697  2B16  3000               	movlw	high vsnprintf@f
  5698  2B17  00E2               	movwf	vfprintf@fp+1
  5699  2B18  0021               	movlb	1	; select bank1
  5700  2B19  0840               	movf	(vsnprintf@fmt+1)^(0+128),w
  5701  2B1A  0020               	movlb	0	; select bank0
  5702  2B1B  00E4               	movwf	vfprintf@fmt+1
  5703  2B1C  0021               	movlb	1	; select bank1
  5704  2B1D  083F               	movf	vsnprintf@fmt^(0+128),w
  5705  2B1E  0020               	movlb	0	; select bank0
  5706  2B1F  00E3               	movwf	vfprintf@fmt
  5707  2B20  0021               	movlb	1	; select bank1
  5708  2B21  0841               	movf	vsnprintf@ap^(0+128),w
  5709  2B22  0020               	movlb	0	; select bank0
  5710  2B23  00EA               	movwf	??_vsnprintf
  5711  2B24  086A               	movf	??_vsnprintf,w
  5712  2B25  00E5               	movwf	vfprintf@ap
  5713  2B26  31B5  25FD  31AA   	fcall	_vfprintf
  5714  2B29  0020               	movlb	0	; select bank0
  5715  2B2A  0862               	movf	?_vfprintf+1,w
  5716  2B2B  0021               	movlb	1	; select bank1
  5717  2B2C  00C5               	movwf	(vsnprintf@cnt+1)^(0+128)
  5718  2B2D  0020               	movlb	0	; select bank0
  5719  2B2E  0861               	movf	?_vfprintf,w
  5720  2B2F  0021               	movlb	1	; select bank1
  5721  2B30  00C4               	movwf	vsnprintf@cnt^(0+128)
  5722  2B31  083D               	movf	vsnprintf@n^(0+128),w
  5723  2B32  043E               	iorwf	(vsnprintf@n+1)^(0+128),w
  5724  2B33  1D03               	btfss	3,2
  5725  2B34  1BC5               	btfsc	(vsnprintf@cnt+1)^(0+128),7
  5726  2B35  2B5C               	goto	l8008
  5727  2B36  083D               	movf	vsnprintf@n^(0+128),w
  5728  2B37  3EFF               	addlw	255
  5729  2B38  0020               	movlb	0	; select bank0
  5730  2B39  00EA               	movwf	??_vsnprintf
  5731  2B3A  30FF               	movlw	255
  5732  2B3B  0021               	movlb	1	; select bank1
  5733  2B3C  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  5734  2B3D  0020               	movlb	0	; select bank0
  5735  2B3E  00EB               	movwf	??_vsnprintf+1
  5736  2B3F  086B               	movf	??_vsnprintf+1,w
  5737  2B40  0021               	movlb	1	; select bank1
  5738  2B41  0245               	subwf	(vsnprintf@cnt+1)^(0+128),w
  5739  2B42  1D03               	skipz
  5740  2B43  2B48               	goto	u11125
  5741  2B44  0020               	movlb	0	; select bank0
  5742  2B45  086A               	movf	??_vsnprintf,w
  5743  2B46  0021               	movlb	1	; select bank1
  5744  2B47  0244               	subwf	vsnprintf@cnt^(0+128),w
  5745  2B48                     u11125:	
  5746  2B48  1C03               	skipc
  5747  2B49  2B51               	goto	l8004
  5748  2B4A  083D               	movf	vsnprintf@n^(0+128),w
  5749  2B4B  3EFF               	addlw	255
  5750  2B4C  00C2               	movwf	_vsnprintf$1823^(0+128)
  5751  2B4D  30FF               	movlw	255
  5752  2B4E  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  5753  2B4F  00C3               	movwf	(_vsnprintf$1823+1)^(0+128)
  5754  2B50  2B55               	goto	l8006
  5755  2B51                     l8004:	
  5756  2B51  0845               	movf	(vsnprintf@cnt+1)^(0+128),w
  5757  2B52  00C3               	movwf	(_vsnprintf$1823+1)^(0+128)
  5758  2B53  0844               	movf	vsnprintf@cnt^(0+128),w
  5759  2B54  00C2               	movwf	_vsnprintf$1823^(0+128)
  5760  2B55                     l8006:	
  5761  2B55  0842               	movf	_vsnprintf$1823^(0+128),w
  5762  2B56  073B               	addwf	vsnprintf@s^(0+128),w
  5763  2B57  0086               	movwf	6
  5764  2B58  0843               	movf	(_vsnprintf$1823+1)^(0+128),w
  5765  2B59  3D3C               	addwfc	(vsnprintf@s+1)^(0+128),w
  5766  2B5A  0087               	movwf	7
  5767  2B5B  0181               	clrf	1
  5768  2B5C                     l8008:	
  5769  2B5C  0845               	movf	(vsnprintf@cnt+1)^(0+128),w
  5770  2B5D  00BC               	movwf	(?_vsnprintf+1)^(0+128)
  5771  2B5E  0844               	movf	vsnprintf@cnt^(0+128),w
  5772  2B5F  00BB               	movwf	?_vsnprintf^(0+128)
  5773  2B60  0008               	return
  5774  2B61                     __end_of_vsnprintf:	
  5775                           
  5776                           	psect	text6
  5777  35FD                     __ptext6:	
  5778 ;; *************** function _vfprintf *****************
  5779 ;; Defined at:
  5780 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5781 ;; Parameters:    Size  Location     Type
  5782 ;;  fp              2   65[BANK0 ] PTR struct _IO_FILE
  5783 ;;		 -> vsnprintf@f(6), 
  5784 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
  5785 ;;		 -> STR_21(18), STR_20(18), STR_19(19), STR_18(20), 
  5786 ;;		 -> STR_17(20), STR_16(21), STR_15(21), STR_14(21), 
  5787 ;;		 -> STR_13(22), STR_12(22), STR_11(21), STR_10(21), 
  5788 ;;		 -> STR_7(15), STR_6(15), STR_5(21), STR_4(21), 
  5789 ;;		 -> STR_3(22), STR_2(71), STR_1(40), 
  5790 ;;  ap              1   69[BANK0 ] PTR PTR void 
  5791 ;;		 -> snprintf@ap(1), 
  5792 ;; Auto vars:     Size  Location     Type
  5793 ;;  cfmt            2   72[BANK0 ] PTR unsigned char 
  5794 ;;		 -> STR_21(18), STR_20(18), STR_19(19), STR_18(20), 
  5795 ;;		 -> STR_17(20), STR_16(21), STR_15(21), STR_14(21), 
  5796 ;;		 -> STR_13(22), STR_12(22), STR_11(21), STR_10(21), 
  5797 ;;		 -> STR_7(15), STR_6(15), STR_5(21), STR_4(21), 
  5798 ;;		 -> STR_3(22), STR_2(71), STR_1(40), 
  5799 ;; Return value:  Size  Location     Type
  5800 ;;                  2   65[BANK0 ] int 
  5801 ;; Registers used:
  5802 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5803 ;; Tracked objects:
  5804 ;;		On entry : 0/0
  5805 ;;		On exit  : 0/0
  5806 ;;		Unchanged: 0/0
  5807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5808 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5809 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5810 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5811 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5812 ;;Total ram usage:        9 bytes
  5813 ;; Hardware stack levels used:    1
  5814 ;; Hardware stack levels required when called:    7
  5815 ;; This function calls:
  5816 ;;		_vfpfcnvrt
  5817 ;; This function is called by:
  5818 ;;		_vsnprintf
  5819 ;; This function uses a non-reentrant model
  5820 ;;
  5821                           
  5822                           
  5823                           ;psect for function _vfprintf
  5824  35FD                     _vfprintf:	
  5825                           
  5826                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  5827                           
  5828                           ;incstack = 0
  5829                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5830  35FD  0020               	movlb	0	; select bank0
  5831  35FE  0864               	movf	vfprintf@fmt+1,w
  5832  35FF  00E9               	movwf	vfprintf@cfmt+1
  5833  3600  0863               	movf	vfprintf@fmt,w
  5834  3601  00E8               	movwf	vfprintf@cfmt
  5835                           
  5836                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  5837  3602  0023               	movlb	3	; select bank3
  5838  3603  01C4               	clrf	_nout^(0+384)
  5839  3604  01C5               	clrf	(_nout+1)^(0+384)
  5840  3605                     l7408:	
  5841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5842                           
  5843                           
  5844                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5845  3605  0020               	movlb	0	; select bank0
  5846  3606  0868               	movf	vfprintf@cfmt,w
  5847  3607  0084               	movwf	4
  5848  3608  0869               	movf	vfprintf@cfmt+1,w
  5849  3609  0085               	movwf	5
  5850  360A  0012               	moviw fsr0++
  5851  360B  1903               	btfsc	3,2
  5852  360C  2E25               	goto	l7410
  5853                           
  5854                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  5855  360D  0862               	movf	vfprintf@fp+1,w
  5856  360E  00D8               	movwf	vfpfcnvrt@fp+1
  5857  360F  0861               	movf	vfprintf@fp,w
  5858  3610  00D7               	movwf	vfpfcnvrt@fp
  5859  3611  3068               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  5860  3612  00E6               	movwf	??_vfprintf
  5861  3613  0866               	movf	??_vfprintf,w
  5862  3614  00D9               	movwf	vfpfcnvrt@fmt
  5863  3615  0865               	movf	vfprintf@ap,w
  5864  3616  00E7               	movwf	??_vfprintf+1
  5865  3617  0867               	movf	??_vfprintf+1,w
  5866  3618  00DA               	movwf	vfpfcnvrt@ap
  5867  3619  319E  265C  31B5   	fcall	_vfpfcnvrt
  5868  361C  0020               	movlb	0	; select bank0
  5869  361D  0857               	movf	?_vfpfcnvrt,w
  5870  361E  0023               	movlb	3	; select bank3
  5871  361F  07C4               	addwf	_nout^(0+384),f
  5872  3620  0020               	movlb	0	; select bank0
  5873  3621  0858               	movf	?_vfpfcnvrt+1,w
  5874  3622  0023               	movlb	3	; select bank3
  5875  3623  3DC5               	addwfc	(_nout+1)^(0+384),f
  5876  3624  2E05               	goto	l7408
  5877  3625                     l7410:	
  5878                           
  5879                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  5880  3625  0023               	movlb	3	; select bank3
  5881  3626  0845               	movf	(_nout+1)^(0+384),w
  5882  3627  0020               	movlb	0	; select bank0
  5883  3628  00E2               	movwf	?_vfprintf+1
  5884  3629  0023               	movlb	3	; select bank3
  5885  362A  0844               	movf	_nout^(0+384),w
  5886  362B  0020               	movlb	0	; select bank0
  5887  362C  00E1               	movwf	?_vfprintf
  5888  362D  0008               	return
  5889  362E                     __end_of_vfprintf:	
  5890                           
  5891                           	psect	text7
  5892  1E5C                     __ptext7:	
  5893 ;; *************** function _vfpfcnvrt *****************
  5894 ;; Defined at:
  5895 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5896 ;; Parameters:    Size  Location     Type
  5897 ;;  fp              2   55[BANK0 ] PTR struct _IO_FILE
  5898 ;;		 -> vsnprintf@f(6), 
  5899 ;;  fmt             1   57[BANK0 ] PTR PTR unsigned char 
  5900 ;;		 -> vfprintf@cfmt(2), 
  5901 ;;  ap              1   58[BANK0 ] PTR PTR void 
  5902 ;;		 -> snprintf@ap(1), 
  5903 ;; Auto vars:     Size  Location     Type
  5904 ;;  llu             8   19[BANK1 ] unsigned long long 
  5905 ;;  ll              8    8[BANK1 ] long long 
  5906 ;;  f               4    0        long long 
  5907 ;;  ct              3    0        unsigned char [3]
  5908 ;;  vp              2   16[BANK1 ] PTR void 
  5909 ;;		 -> ?_snprintf(2), sp__logf(4), adcGain(2), 
  5910 ;;  done            2    2[BANK1 ] int 
  5911 ;;  cp              2    0[BANK1 ] PTR unsigned char 
  5912 ;;		 -> ?_snprintf(2), sp__logf(4), adcGain(2), 
  5913 ;;  i               2    0        int 
  5914 ;;  c               1   18[BANK1 ] unsigned char 
  5915 ;; Return value:  Size  Location     Type
  5916 ;;                  2   55[BANK0 ] int 
  5917 ;; Registers used:
  5918 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5919 ;; Tracked objects:
  5920 ;;		On entry : 0/0
  5921 ;;		On exit  : 0/0
  5922 ;;		Unchanged: 0/0
  5923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5924 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5925 ;;      Locals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5926 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5927 ;;      Totals:         0      10      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5928 ;;Total ram usage:       37 bytes
  5929 ;; Hardware stack levels used:    1
  5930 ;; Hardware stack levels required when called:    6
  5931 ;; This function calls:
  5932 ;;		_atoi
  5933 ;;		_ctoa
  5934 ;;		_dtoa
  5935 ;;		_fputc
  5936 ;;		_isdigit
  5937 ;;		_otoa
  5938 ;;		_stoa
  5939 ;;		_strncmp
  5940 ;;		_utoa
  5941 ;;		_xtoa
  5942 ;; This function is called by:
  5943 ;;		_vfprintf
  5944 ;; This function uses a non-reentrant model
  5945 ;;
  5946                           
  5947                           
  5948                           ;psect for function _vfpfcnvrt
  5949  1E5C                     _vfpfcnvrt:	
  5950                           
  5951                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  5952                           
  5953                           ;incstack = 0
  5954                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5955  1E5C  0020               	movlb	0	; select bank0
  5956  1E5D  0859               	movf	vfpfcnvrt@fmt,w
  5957  1E5E  0086               	movwf	6
  5958  1E5F  0187               	clrf	7
  5959  1E60  3F40               	moviw [0]fsr1
  5960  1E61  00DB               	movwf	??_vfpfcnvrt
  5961  1E62  3F41               	moviw [1]fsr1
  5962  1E63  00DC               	movwf	??_vfpfcnvrt+1
  5963  1E64  085B               	movf	??_vfpfcnvrt,w
  5964  1E65  0084               	movwf	4
  5965  1E66  085C               	movf	??_vfpfcnvrt+1,w
  5966  1E67  0085               	movwf	5
  5967  1E68  0012               	moviw fsr0++
  5968  1E69  3A25               	xorlw	37
  5969  1E6A  1D03               	btfss	3,2
  5970  1E6B  2FFE               	goto	L7
  5971                           
  5972                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  5973  1E6C  0859               	movf	vfpfcnvrt@fmt,w
  5974  1E6D  0086               	movwf	6
  5975  1E6E  0187               	clrf	7
  5976  1E6F  3001               	movlw	1
  5977  1E70  0781               	addwf	1,f
  5978  1E71  3141               	addfsr 1,1
  5979  1E72  1803               	skipnc
  5980  1E73  0A81               	incf	1,f
  5981                           
  5982                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  5983  1E74  0022               	movlb	2	; select bank2
  5984  1E75  01E5               	clrf	_width^(0+256)
  5985  1E76  01E6               	clrf	(_width+1)^(0+256)
  5986  1E77  01E9               	clrf	_flags^(0+256)
  5987  1E78  01EA               	clrf	(_flags+1)^(0+256)
  5988                           
  5989                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  5990  1E79  30FF               	movlw	255
  5991  1E7A  00E7               	movwf	_prec^(0+256)
  5992  1E7B  30FF               	movlw	255
  5993  1E7C  00E8               	movwf	(_prec^(0+256)+1)
  5994                           
  5995                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  5996  1E7D  0021               	movlb	1	; select bank1
  5997  1E7E  01A2               	clrf	vfpfcnvrt@done^(0+128)
  5998  1E7F  01A3               	clrf	(vfpfcnvrt@done+1)^(0+128)
  5999                           
  6000                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6001  1E80  2E9E               	goto	l6836
  6002  1E81                     l768:	
  6003                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 691:       
      +                                    case '-' :
  6004                           
  6005                           
  6006                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  6007  1E81  0022               	movlb	2	; select bank2
  6008  1E82  1469               	bsf	_flags^(0+256),0
  6009  1E83                     l6820:	
  6010                           
  6011                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  6012  1E83  0020               	movlb	0	; select bank0
  6013  1E84  0859               	movf	vfpfcnvrt@fmt,w
  6014  1E85  0086               	movwf	6
  6015  1E86  0187               	clrf	7
  6016  1E87  3001               	movlw	1
  6017  1E88  0781               	addwf	1,f
  6018  1E89  3141               	addfsr 1,1
  6019  1E8A  1803               	skipnc
  6020  1E8B  0A81               	incf	1,f
  6021                           
  6022                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  6023  1E8C  2E9E               	goto	l6836
  6024  1E8D                     l770:	
  6025                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 695:       
      +                                    case '0' :
  6026                           
  6027                           
  6028                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  6029  1E8D  0022               	movlb	2	; select bank2
  6030  1E8E  14E9               	bsf	_flags^(0+256),1
  6031  1E8F  2E83               	goto	l6820
  6032  1E90                     l771:	
  6033                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 699:       
      +                                    case '+' :
  6034                           
  6035                           
  6036                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  6037  1E90  0022               	movlb	2	; select bank2
  6038  1E91  1569               	bsf	_flags^(0+256),2
  6039  1E92  2E83               	goto	l6820
  6040  1E93                     l772:	
  6041                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 703:       
      +                                    case ' ' :
  6042                           
  6043                           
  6044                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  6045  1E93  0022               	movlb	2	; select bank2
  6046  1E94  15E9               	bsf	_flags^(0+256),3
  6047  1E95  2E83               	goto	l6820
  6048  1E96                     l773:	
  6049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 707:       
      +                                    case '#' :
  6050                           
  6051                           
  6052                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  6053  1E96  0022               	movlb	2	; select bank2
  6054  1E97  1669               	bsf	_flags^(0+256),4
  6055  1E98  2E83               	goto	l6820
  6056  1E99                     l6830:	
  6057                           
  6058                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  6059  1E99  3001               	movlw	1
  6060  1E9A  0021               	movlb	1	; select bank1
  6061  1E9B  00A2               	movwf	vfpfcnvrt@done^(0+128)
  6062  1E9C  3000               	movlw	0
  6063  1E9D  00A3               	movwf	(vfpfcnvrt@done^(0+128)+1)
  6064  1E9E                     l6836:	
  6065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  6066                           
  6067                           
  6068                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6069  1E9E  0021               	movlb	1	; select bank1
  6070  1E9F  0822               	movf	vfpfcnvrt@done^(0+128),w
  6071  1EA0  0423               	iorwf	(vfpfcnvrt@done+1)^(0+128),w
  6072  1EA1  1D03               	btfss	3,2
  6073  1EA2  2EC9               	goto	l775
  6074  1EA3  0020               	movlb	0	; select bank0
  6075  1EA4  0859               	movf	vfpfcnvrt@fmt,w
  6076  1EA5  0086               	movwf	6
  6077  1EA6  0187               	clrf	7
  6078  1EA7  3F40               	moviw [0]fsr1
  6079  1EA8  00DB               	movwf	??_vfpfcnvrt
  6080  1EA9  3F41               	moviw [1]fsr1
  6081  1EAA  00DC               	movwf	??_vfpfcnvrt+1
  6082  1EAB  085B               	movf	??_vfpfcnvrt,w
  6083  1EAC  0084               	movwf	4
  6084  1EAD  085C               	movf	??_vfpfcnvrt+1,w
  6085  1EAE  0085               	movwf	5
  6086  1EAF  0800               	movf	0,w	;code access
  6087  1EB0  00DD               	movwf	??_vfpfcnvrt+2
  6088  1EB1  01DE               	clrf	??_vfpfcnvrt+3
  6089                           
  6090                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6091                           ; Switch size 1, requested type "simple"
  6092                           ; Number of cases is 1, Range of values is 0 to 0
  6093                           ; switch strategies available:
  6094                           ; Name         Instructions Cycles
  6095                           ; simple_byte            4     3 (average)
  6096                           ; direct_byte            8     6 (fixed)
  6097                           ; jumptable            260     6 (fixed)
  6098                           ;	Chosen strategy is simple_byte
  6099  1EB2  085E               	movf	??_vfpfcnvrt+3,w
  6100  1EB3  3A00               	xorlw	0	; case 0
  6101  1EB4  1903               	skipnz
  6102  1EB5  2EB7               	goto	l8600
  6103  1EB6  2E99               	goto	l6830
  6104  1EB7                     l8600:	
  6105                           
  6106                           ; Switch size 1, requested type "simple"
  6107                           ; Number of cases is 5, Range of values is 32 to 48
  6108                           ; switch strategies available:
  6109                           ; Name         Instructions Cycles
  6110                           ; simple_byte           16     9 (average)
  6111                           ; direct_byte           43     9 (fixed)
  6112                           ; jumptable            263     9 (fixed)
  6113                           ;	Chosen strategy is simple_byte
  6114  1EB7  085D               	movf	??_vfpfcnvrt+2,w
  6115  1EB8  3A20               	xorlw	32	; case 32
  6116  1EB9  1903               	skipnz
  6117  1EBA  2E93               	goto	l772
  6118  1EBB  3A03               	xorlw	3	; case 35
  6119  1EBC  1903               	skipnz
  6120  1EBD  2E96               	goto	l773
  6121  1EBE  3A08               	xorlw	8	; case 43
  6122  1EBF  1903               	skipnz
  6123  1EC0  2E90               	goto	l771
  6124  1EC1  3A06               	xorlw	6	; case 45
  6125  1EC2  1903               	skipnz
  6126  1EC3  2E81               	goto	l768
  6127  1EC4  3A1D               	xorlw	29	; case 48
  6128  1EC5  1903               	skipnz
  6129  1EC6  2E8D               	goto	l770
  6130  1EC7  2E99               	goto	l6830
  6131  1EC8  2E9E               	goto	l6836
  6132  1EC9                     l775:	
  6133                           
  6134                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  6135  1EC9  0022               	movlb	2	; select bank2
  6136  1ECA  1C69               	btfss	_flags^(0+256),0
  6137  1ECB  2ED0               	goto	l6840
  6138                           
  6139                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  6140  1ECC  30FD               	movlw	253
  6141  1ECD  05E9               	andwf	_flags^(0+256),f
  6142  1ECE  30FF               	movlw	255
  6143  1ECF  05EA               	andwf	(_flags+1)^(0+256),f
  6144  1ED0                     l6840:	
  6145                           
  6146                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  6147  1ED0  0020               	movlb	0	; select bank0
  6148  1ED1  0859               	movf	vfpfcnvrt@fmt,w
  6149  1ED2  0086               	movwf	6
  6150  1ED3  0187               	clrf	7
  6151  1ED4  3F40               	moviw [0]fsr1
  6152  1ED5  00DB               	movwf	??_vfpfcnvrt
  6153  1ED6  3F41               	moviw [1]fsr1
  6154  1ED7  00DC               	movwf	??_vfpfcnvrt+1
  6155  1ED8  085B               	movf	??_vfpfcnvrt,w
  6156  1ED9  0084               	movwf	4
  6157  1EDA  085C               	movf	??_vfpfcnvrt+1,w
  6158  1EDB  0085               	movwf	5
  6159  1EDC  0012               	moviw fsr0++
  6160  1EDD  3A2A               	xorlw	42
  6161  1EDE  1D03               	btfss	3,2
  6162  1EDF  2EFE               	goto	l6852
  6163                           
  6164                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  6165  1EE0  0859               	movf	vfpfcnvrt@fmt,w
  6166  1EE1  0086               	movwf	6
  6167  1EE2  0187               	clrf	7
  6168  1EE3  3001               	movlw	1
  6169  1EE4  0781               	addwf	1,f
  6170  1EE5  3141               	addfsr 1,1
  6171  1EE6  1803               	skipnc
  6172  1EE7  0A81               	incf	1,f
  6173                           
  6174                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6175  1EE8  085A               	movf	vfpfcnvrt@ap,w
  6176  1EE9  0086               	movwf	6
  6177  1EEA  0187               	clrf	7
  6178  1EEB  0801               	movf	1,w
  6179  1EEC  0084               	movwf	4
  6180  1EED  0185               	clrf	5
  6181  1EEE  3002               	movlw	2
  6182  1EEF  0781               	addwf	1,f
  6183  1EF0  3F00               	moviw [0]fsr0
  6184  1EF1  0022               	movlb	2	; select bank2
  6185  1EF2  00E5               	movwf	_width^(0+256)
  6186  1EF3  3F01               	moviw [1]fsr0
  6187  1EF4  00E6               	movwf	(_width+1)^(0+256)
  6188                           
  6189                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  6190  1EF5  1FE6               	btfss	(_width+1)^(0+256),7
  6191  1EF6  2F41               	goto	l6862
  6192                           
  6193                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  6194  1EF7  1469               	bsf	_flags^(0+256),0
  6195                           
  6196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  6197  1EF8  09E5               	comf	_width^(0+256),f
  6198  1EF9  09E6               	comf	(_width+1)^(0+256),f
  6199  1EFA  0AE5               	incf	_width^(0+256),f
  6200  1EFB  1903               	skipnz
  6201  1EFC  0AE6               	incf	(_width+1)^(0+256),f
  6202  1EFD  2F41               	goto	l6862
  6203  1EFE                     l6852:	
  6204                           
  6205                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  6206  1EFE  0859               	movf	vfpfcnvrt@fmt,w
  6207  1EFF  0086               	movwf	6
  6208  1F00  0187               	clrf	7
  6209  1F01  3F40               	moviw [0]fsr1
  6210  1F02  00F7               	movwf	atoi@s
  6211  1F03  3F41               	moviw [1]fsr1
  6212  1F04  00F8               	movwf	atoi@s+1
  6213  1F05  31AC  2479  319E   	fcall	_atoi
  6214  1F08  0878               	movf	?_atoi+1,w
  6215  1F09  0022               	movlb	2	; select bank2
  6216  1F0A  00E6               	movwf	(_width+1)^(0+256)
  6217  1F0B  0877               	movf	?_atoi,w
  6218  1F0C  00E5               	movwf	_width^(0+256)
  6219                           
  6220                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6221  1F0D  2F17               	goto	l6856
  6222  1F0E                     l6854:	
  6223                           
  6224                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  6225  1F0E  0020               	movlb	0	; select bank0
  6226  1F0F  0859               	movf	vfpfcnvrt@fmt,w
  6227  1F10  0086               	movwf	6
  6228  1F11  0187               	clrf	7
  6229  1F12  3001               	movlw	1
  6230  1F13  0781               	addwf	1,f
  6231  1F14  3141               	addfsr 1,1
  6232  1F15  1803               	skipnc
  6233  1F16  0A81               	incf	1,f
  6234  1F17                     l6856:	
  6235  1F17  0020               	movlb	0	; select bank0
  6236  1F18  0859               	movf	vfpfcnvrt@fmt,w
  6237  1F19  0086               	movwf	6
  6238  1F1A  0187               	clrf	7
  6239  1F1B  3F40               	moviw [0]fsr1
  6240  1F1C  00DB               	movwf	??_vfpfcnvrt
  6241  1F1D  3F41               	moviw [1]fsr1
  6242  1F1E  00DC               	movwf	??_vfpfcnvrt+1
  6243  1F1F  085B               	movf	??_vfpfcnvrt,w
  6244  1F20  0084               	movwf	4
  6245  1F21  085C               	movf	??_vfpfcnvrt+1,w
  6246  1F22  0085               	movwf	5
  6247  1F23  0800               	movf	0,w	;code access
  6248  1F24  3ED0               	addlw	208
  6249  1F25  00DD               	movwf	??_vfpfcnvrt+2
  6250  1F26  30FF               	movlw	255
  6251  1F27  1803               	skipnc
  6252  1F28  3000               	movlw	0
  6253  1F29  00DE               	movwf	??_vfpfcnvrt+3
  6254  1F2A  3000               	movlw	0
  6255  1F2B  025E               	subwf	??_vfpfcnvrt+3,w
  6256  1F2C  300A               	movlw	10
  6257  1F2D  1903               	skipnz
  6258  1F2E  025D               	subwf	??_vfpfcnvrt+2,w
  6259  1F2F  1803               	btfsc	3,0
  6260  1F30  2F33               	goto	u9050
  6261  1F31  3001               	movlw	1
  6262  1F32  2F34               	goto	u9060
  6263  1F33                     u9050:	
  6264  1F33  3000               	movlw	0
  6265  1F34                     u9060:	
  6266  1F34  00DF               	movwf	??_vfpfcnvrt+4
  6267  1F35  01E0               	clrf	??_vfpfcnvrt+5
  6268  1F36  085F               	movf	??_vfpfcnvrt+4,w
  6269  1F37  0021               	movlb	1	; select bank1
  6270  1F38  00A4               	movwf	_vfpfcnvrt$1251^(0+128)
  6271  1F39  0020               	movlb	0	; select bank0
  6272  1F3A  0860               	movf	??_vfpfcnvrt+5,w
  6273  1F3B  0021               	movlb	1	; select bank1
  6274  1F3C  00A5               	movwf	(_vfpfcnvrt$1251+1)^(0+128)
  6275  1F3D  0824               	movf	_vfpfcnvrt$1251^(0+128),w
  6276  1F3E  0425               	iorwf	(_vfpfcnvrt$1251+1)^(0+128),w
  6277  1F3F  1D03               	btfss	3,2
  6278  1F40  2F0E               	goto	l6854
  6279  1F41                     l6862:	
  6280                           
  6281                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  6282  1F41  0020               	movlb	0	; select bank0
  6283  1F42  0859               	movf	vfpfcnvrt@fmt,w
  6284  1F43  0086               	movwf	6
  6285  1F44  0187               	clrf	7
  6286  1F45  3F40               	moviw [0]fsr1
  6287  1F46  00DB               	movwf	??_vfpfcnvrt
  6288  1F47  3F41               	moviw [1]fsr1
  6289  1F48  00DC               	movwf	??_vfpfcnvrt+1
  6290  1F49  085B               	movf	??_vfpfcnvrt,w
  6291  1F4A  0084               	movwf	4
  6292  1F4B  085C               	movf	??_vfpfcnvrt+1,w
  6293  1F4C  0085               	movwf	5
  6294  1F4D  0012               	moviw fsr0++
  6295  1F4E  3A2E               	xorlw	46
  6296  1F4F  1D03               	btfss	3,2
  6297  1F50  2FC5               	goto	l6884
  6298                           
  6299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  6300  1F51  0022               	movlb	2	; select bank2
  6301  1F52  01E7               	clrf	_prec^(0+256)
  6302  1F53  01E8               	clrf	(_prec+1)^(0+256)
  6303                           
  6304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  6305  1F54  0020               	movlb	0	; select bank0
  6306  1F55  0859               	movf	vfpfcnvrt@fmt,w
  6307  1F56  0086               	movwf	6
  6308  1F57  0187               	clrf	7
  6309  1F58  3001               	movlw	1
  6310  1F59  0781               	addwf	1,f
  6311  1F5A  3141               	addfsr 1,1
  6312  1F5B  1803               	skipnc
  6313  1F5C  0A81               	incf	1,f
  6314                           
  6315                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  6316  1F5D  0859               	movf	vfpfcnvrt@fmt,w
  6317  1F5E  0086               	movwf	6
  6318  1F5F  0187               	clrf	7
  6319  1F60  3F40               	moviw [0]fsr1
  6320  1F61  00DB               	movwf	??_vfpfcnvrt
  6321  1F62  3F41               	moviw [1]fsr1
  6322  1F63  00DC               	movwf	??_vfpfcnvrt+1
  6323  1F64  085B               	movf	??_vfpfcnvrt,w
  6324  1F65  0084               	movwf	4
  6325  1F66  085C               	movf	??_vfpfcnvrt+1,w
  6326  1F67  0085               	movwf	5
  6327  1F68  0012               	moviw fsr0++
  6328  1F69  3A2A               	xorlw	42
  6329  1F6A  1D03               	btfss	3,2
  6330  1F6B  2F82               	goto	l6874
  6331                           
  6332                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  6333  1F6C  0859               	movf	vfpfcnvrt@fmt,w
  6334  1F6D  0086               	movwf	6
  6335  1F6E  0187               	clrf	7
  6336  1F6F  3001               	movlw	1
  6337  1F70  0781               	addwf	1,f
  6338  1F71  3141               	addfsr 1,1
  6339  1F72  1803               	skipnc
  6340  1F73  0A81               	incf	1,f
  6341                           
  6342                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  6343  1F74  085A               	movf	vfpfcnvrt@ap,w
  6344  1F75  0086               	movwf	6
  6345  1F76  0187               	clrf	7
  6346  1F77  0801               	movf	1,w
  6347  1F78  0084               	movwf	4
  6348  1F79  0185               	clrf	5
  6349  1F7A  3002               	movlw	2
  6350  1F7B  0781               	addwf	1,f
  6351  1F7C  3F00               	moviw [0]fsr0
  6352  1F7D  0022               	movlb	2	; select bank2
  6353  1F7E  00E7               	movwf	_prec^(0+256)
  6354  1F7F  3F01               	moviw [1]fsr0
  6355  1F80  00E8               	movwf	(_prec+1)^(0+256)
  6356                           
  6357                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  6358  1F81  2FC5               	goto	l6884
  6359  1F82                     l6874:	
  6360                           
  6361                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  6362  1F82  0859               	movf	vfpfcnvrt@fmt,w
  6363  1F83  0086               	movwf	6
  6364  1F84  0187               	clrf	7
  6365  1F85  3F40               	moviw [0]fsr1
  6366  1F86  00F7               	movwf	atoi@s
  6367  1F87  3F41               	moviw [1]fsr1
  6368  1F88  00F8               	movwf	atoi@s+1
  6369  1F89  31AC  2479  319E   	fcall	_atoi
  6370  1F8C  0878               	movf	?_atoi+1,w
  6371  1F8D  0022               	movlb	2	; select bank2
  6372  1F8E  00E8               	movwf	(_prec+1)^(0+256)
  6373  1F8F  0877               	movf	?_atoi,w
  6374  1F90  00E7               	movwf	_prec^(0+256)
  6375                           
  6376                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6377  1F91  2F9B               	goto	l6878
  6378  1F92                     l6876:	
  6379                           
  6380                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  6381  1F92  0020               	movlb	0	; select bank0
  6382  1F93  0859               	movf	vfpfcnvrt@fmt,w
  6383  1F94  0086               	movwf	6
  6384  1F95  0187               	clrf	7
  6385  1F96  3001               	movlw	1
  6386  1F97  0781               	addwf	1,f
  6387  1F98  3141               	addfsr 1,1
  6388  1F99  1803               	skipnc
  6389  1F9A  0A81               	incf	1,f
  6390  1F9B                     l6878:	
  6391  1F9B  0020               	movlb	0	; select bank0
  6392  1F9C  0859               	movf	vfpfcnvrt@fmt,w
  6393  1F9D  0086               	movwf	6
  6394  1F9E  0187               	clrf	7
  6395  1F9F  3F40               	moviw [0]fsr1
  6396  1FA0  00DB               	movwf	??_vfpfcnvrt
  6397  1FA1  3F41               	moviw [1]fsr1
  6398  1FA2  00DC               	movwf	??_vfpfcnvrt+1
  6399  1FA3  085B               	movf	??_vfpfcnvrt,w
  6400  1FA4  0084               	movwf	4
  6401  1FA5  085C               	movf	??_vfpfcnvrt+1,w
  6402  1FA6  0085               	movwf	5
  6403  1FA7  0800               	movf	0,w	;code access
  6404  1FA8  3ED0               	addlw	208
  6405  1FA9  00DD               	movwf	??_vfpfcnvrt+2
  6406  1FAA  30FF               	movlw	255
  6407  1FAB  1803               	skipnc
  6408  1FAC  3000               	movlw	0
  6409  1FAD  00DE               	movwf	??_vfpfcnvrt+3
  6410  1FAE  3000               	movlw	0
  6411  1FAF  025E               	subwf	??_vfpfcnvrt+3,w
  6412  1FB0  300A               	movlw	10
  6413  1FB1  1903               	skipnz
  6414  1FB2  025D               	subwf	??_vfpfcnvrt+2,w
  6415  1FB3  1803               	btfsc	3,0
  6416  1FB4  2FB7               	goto	u9100
  6417  1FB5  3001               	movlw	1
  6418  1FB6  2FB8               	goto	u9110
  6419  1FB7                     u9100:	
  6420  1FB7  3000               	movlw	0
  6421  1FB8                     u9110:	
  6422  1FB8  00DF               	movwf	??_vfpfcnvrt+4
  6423  1FB9  01E0               	clrf	??_vfpfcnvrt+5
  6424  1FBA  085F               	movf	??_vfpfcnvrt+4,w
  6425  1FBB  0021               	movlb	1	; select bank1
  6426  1FBC  00A6               	movwf	_vfpfcnvrt$1252^(0+128)
  6427  1FBD  0020               	movlb	0	; select bank0
  6428  1FBE  0860               	movf	??_vfpfcnvrt+5,w
  6429  1FBF  0021               	movlb	1	; select bank1
  6430  1FC0  00A7               	movwf	(_vfpfcnvrt$1252+1)^(0+128)
  6431  1FC1  0826               	movf	_vfpfcnvrt$1252^(0+128),w
  6432  1FC2  0427               	iorwf	(_vfpfcnvrt$1252+1)^(0+128),w
  6433  1FC3  1D03               	btfss	3,2
  6434  1FC4  2F92               	goto	l6876
  6435  1FC5                     l6884:	
  6436                           
  6437                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  6438  1FC5  0020               	movlb	0	; select bank0
  6439  1FC6  0859               	movf	vfpfcnvrt@fmt,w
  6440  1FC7  0086               	movwf	6
  6441  1FC8  0187               	clrf	7
  6442  1FC9  3F40               	moviw [0]fsr1
  6443  1FCA  00DB               	movwf	??_vfpfcnvrt
  6444  1FCB  3F41               	moviw [1]fsr1
  6445  1FCC  00DC               	movwf	??_vfpfcnvrt+1
  6446  1FCD  085B               	movf	??_vfpfcnvrt,w
  6447  1FCE  0084               	movwf	4
  6448  1FCF  085C               	movf	??_vfpfcnvrt+1,w
  6449  1FD0  0085               	movwf	5
  6450  1FD1  0012               	moviw fsr0++
  6451  1FD2  3A63               	xorlw	99
  6452  1FD3  31A4  1D03         	btfss	3,2
  6453  1FD5  2CD9               	goto	l6894
  6454                           
  6455                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  6456  1FD6  0859               	movf	vfpfcnvrt@fmt,w
  6457  1FD7  0086               	movwf	6
  6458  1FD8  0187               	clrf	7
  6459  1FD9  3001               	movlw	1
  6460  1FDA  0781               	addwf	1,f
  6461  1FDB  3141               	addfsr 1,1
  6462  1FDC  1803               	skipnc
  6463  1FDD  0A81               	incf	1,f
  6464                           
  6465                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6466  1FDE  085A               	movf	vfpfcnvrt@ap,w
  6467  1FDF  0086               	movwf	6
  6468  1FE0  0187               	clrf	7
  6469  1FE1  0801               	movf	1,w
  6470  1FE2  0084               	movwf	4
  6471  1FE3  0185               	clrf	5
  6472  1FE4  3002               	movlw	2
  6473  1FE5  0781               	addwf	1,f
  6474  1FE6  0800               	movf	0,w
  6475  1FE7  00DB               	movwf	??_vfpfcnvrt
  6476  1FE8  085B               	movf	??_vfpfcnvrt,w
  6477  1FE9  0021               	movlb	1	; select bank1
  6478  1FEA  00B2               	movwf	vfpfcnvrt@c^(0+128)
  6479                           
  6480                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  6481  1FEB  0020               	movlb	0	; select bank0
  6482  1FEC  0858               	movf	vfpfcnvrt@fp+1,w
  6483  1FED  00B1               	movwf	ctoa@fp+1
  6484  1FEE  0857               	movf	vfpfcnvrt@fp,w
  6485  1FEF  00B0               	movwf	ctoa@fp
  6486  1FF0  0021               	movlb	1	; select bank1
  6487  1FF1  0832               	movf	vfpfcnvrt@c^(0+128),w
  6488  1FF2  0020               	movlb	0	; select bank0
  6489  1FF3  00DB               	movwf	??_vfpfcnvrt
  6490  1FF4  085B               	movf	??_vfpfcnvrt,w
  6491  1FF5  00B2               	movwf	ctoa@c
  6492  1FF6  31B5  25CC         	fcall	_ctoa
  6493  1FF8  0020               	movlb	0	; select bank0
  6494  1FF9  0831               	movf	?_ctoa+1,w
  6495  1FFA  00D8               	movwf	?_vfpfcnvrt+1
  6496  1FFB  0830               	movf	?_ctoa,w
  6497  1FFC  00D7               	movwf	?_vfpfcnvrt
  6498  1FFD  0008               	return
  6499  1FFE                     L7:	
  6500  1FFE                     L6:	
  6501  1FFE  318F  2FDD         	ljmp	l7162
  6502                           
  6503                           	psect	text8
  6504  1B89                     __ptext8:	
  6505 ;; *************** function _xtoa *****************
  6506 ;; Defined at:
  6507 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6508 ;; Parameters:    Size  Location     Type
  6509 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  6510 ;;		 -> vsnprintf@f(6), 
  6511 ;;  d               8   18[BANK0 ] unsigned long long 
  6512 ;;  x               1   26[BANK0 ] unsigned char 
  6513 ;; Auto vars:     Size  Location     Type
  6514 ;;  n               8   43[BANK0 ] unsigned long long 
  6515 ;;  c               2   53[BANK0 ] int 
  6516 ;;  i               2   51[BANK0 ] int 
  6517 ;;  w               2   41[BANK0 ] int 
  6518 ;;  p               2   39[BANK0 ] int 
  6519 ;; Return value:  Size  Location     Type
  6520 ;;                  2   16[BANK0 ] int 
  6521 ;; Registers used:
  6522 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6523 ;; Tracked objects:
  6524 ;;		On entry : 0/0
  6525 ;;		On exit  : 0/0
  6526 ;;		Unchanged: 0/0
  6527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6528 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6529 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6530 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6531 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6532 ;;Total ram usage:       39 bytes
  6533 ;; Hardware stack levels used:    1
  6534 ;; Hardware stack levels required when called:    5
  6535 ;; This function calls:
  6536 ;;		_isalpha
  6537 ;;		_isupper
  6538 ;;		_pad
  6539 ;;		_toupper
  6540 ;; This function is called by:
  6541 ;;		_vfpfcnvrt
  6542 ;; This function uses a non-reentrant model
  6543 ;;
  6544                           
  6545                           
  6546                           ;psect for function _xtoa
  6547  1B89                     _xtoa:	
  6548                           
  6549                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  6550                           
  6551                           ;incstack = 0
  6552                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6553  1B89  0022               	movlb	2	; select bank2
  6554  1B8A  1BE8               	btfsc	(_prec+1)^(0+256),7
  6555  1B8B  2B90               	goto	l734
  6556                           
  6557                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  6558  1B8C  30FD               	movlw	253
  6559  1B8D  05E9               	andwf	_flags^(0+256),f
  6560  1B8E  30FF               	movlw	255
  6561  1B8F  05EA               	andwf	(_flags+1)^(0+256),f
  6562  1B90                     l734:	
  6563                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 631:     }
  6564                           
  6565                           
  6566                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  6567  1B90  0868               	movf	(_prec+1)^(0+256),w
  6568  1B91  3A80               	xorlw	128
  6569  1B92  0020               	movlb	0	; select bank0
  6570  1B93  00BB               	movwf	??_xtoa
  6571  1B94  3080               	movlw	128
  6572  1B95  023B               	subwf	??_xtoa,w
  6573  1B96  1D03               	skipz
  6574  1B97  2B9B               	goto	u8725
  6575  1B98  3001               	movlw	1
  6576  1B99  0022               	movlb	2	; select bank2
  6577  1B9A  0267               	subwf	_prec^(0+256),w
  6578  1B9B                     u8725:	
  6579  1B9B  1803               	skipnc
  6580  1B9C  2BA3               	goto	l6684
  6581  1B9D  3001               	movlw	1
  6582  1B9E  0020               	movlb	0	; select bank0
  6583  1B9F  00C7               	movwf	xtoa@p
  6584  1BA0  3000               	movlw	0
  6585  1BA1  00C8               	movwf	xtoa@p+1
  6586  1BA2  2BAB               	goto	l738
  6587  1BA3                     l6684:	
  6588  1BA3  0022               	movlb	2	; select bank2
  6589  1BA4  0868               	movf	(_prec+1)^(0+256),w
  6590  1BA5  0020               	movlb	0	; select bank0
  6591  1BA6  00C8               	movwf	xtoa@p+1
  6592  1BA7  0022               	movlb	2	; select bank2
  6593  1BA8  0867               	movf	_prec^(0+256),w
  6594  1BA9  0020               	movlb	0	; select bank0
  6595  1BAA  00C7               	movwf	xtoa@p
  6596  1BAB                     l738:	
  6597                           
  6598                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  6599  1BAB  0022               	movlb	2	; select bank2
  6600  1BAC  0866               	movf	(_width+1)^(0+256),w
  6601  1BAD  0020               	movlb	0	; select bank0
  6602  1BAE  00CA               	movwf	xtoa@w+1
  6603  1BAF  0022               	movlb	2	; select bank2
  6604  1BB0  0865               	movf	_width^(0+256),w
  6605  1BB1  0020               	movlb	0	; select bank0
  6606  1BB2  00C9               	movwf	xtoa@w
  6607                           
  6608                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  6609  1BB3  0022               	movlb	2	; select bank2
  6610  1BB4  1E69               	btfss	_flags^(0+256),4
  6611  1BB5  2BBB               	goto	l6690
  6612                           
  6613                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  6614  1BB6  30FE               	movlw	254
  6615  1BB7  0020               	movlb	0	; select bank0
  6616  1BB8  07C9               	addwf	xtoa@w,f
  6617  1BB9  30FF               	movlw	255
  6618  1BBA  3DCA               	addwfc	xtoa@w+1,f
  6619  1BBB                     l6690:	
  6620                           
  6621                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  6622  1BBB  0020               	movlb	0	; select bank0
  6623  1BBC  0832               	movf	xtoa@d,w
  6624  1BBD  00CB               	movwf	xtoa@n
  6625  1BBE  0833               	movf	xtoa@d+1,w
  6626  1BBF  00CC               	movwf	xtoa@n+1
  6627  1BC0  0834               	movf	xtoa@d+2,w
  6628  1BC1  00CD               	movwf	xtoa@n+2
  6629  1BC2  0835               	movf	xtoa@d+3,w
  6630  1BC3  00CE               	movwf	xtoa@n+3
  6631  1BC4  0836               	movf	xtoa@d+4,w
  6632  1BC5  00CF               	movwf	xtoa@n+4
  6633  1BC6  0837               	movf	xtoa@d+5,w
  6634  1BC7  00D0               	movwf	xtoa@n+5
  6635  1BC8  0838               	movf	xtoa@d+6,w
  6636  1BC9  00D1               	movwf	xtoa@n+6
  6637  1BCA  0839               	movf	xtoa@d+7,w
  6638  1BCB  00D2               	movwf	xtoa@n+7
  6639                           
  6640                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  6641  1BCC  301F               	movlw	31
  6642  1BCD  00D3               	movwf	xtoa@i
  6643  1BCE  3000               	movlw	0
  6644  1BCF  00D4               	movwf	xtoa@i+1
  6645                           
  6646                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  6647  1BD0  0024               	movlb	4	; select bank4
  6648  1BD1  01BF               	clrf	(_dbuf^(0+512)+31)
  6649                           
  6650                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6651  1BD2  2C7D               	goto	l6722
  6652  1BD3                     l6694:	
  6653                           
  6654                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  6655  1BD3  30FF               	movlw	255
  6656  1BD4  0020               	movlb	0	; select bank0
  6657  1BD5  07D3               	addwf	xtoa@i,f
  6658  1BD6  30FF               	movlw	255
  6659  1BD7  3DD4               	addwfc	xtoa@i+1,f
  6660                           
  6661                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  6662  1BD8  300F               	movlw	15
  6663  1BD9  054B               	andwf	xtoa@n,w
  6664  1BDA  00D5               	movwf	xtoa@c
  6665  1BDB  3000               	movlw	0
  6666  1BDC  054C               	andwf	xtoa@n+1,w
  6667  1BDD  00D6               	movwf	xtoa@c+1
  6668                           
  6669                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  6670  1BDE  0856               	movf	xtoa@c+1,w
  6671  1BDF  3A80               	xorlw	128
  6672  1BE0  00BB               	movwf	??_xtoa
  6673  1BE1  3080               	movlw	128
  6674  1BE2  023B               	subwf	??_xtoa,w
  6675  1BE3  1D03               	skipz
  6676  1BE4  2BE7               	goto	u8745
  6677  1BE5  300A               	movlw	10
  6678  1BE6  0255               	subwf	xtoa@c,w
  6679  1BE7                     u8745:	
  6680  1BE7  1C03               	skipc
  6681  1BE8  2BED               	goto	l6698
  6682  1BE9  0020               	movlb	0	; select bank0
  6683  1BEA  0855               	movf	xtoa@c,w
  6684  1BEB  3E57               	addlw	87
  6685  1BEC  2BF0               	goto	L1
  6686  1BED                     l6698:	
  6687  1BED  0020               	movlb	0	; select bank0
  6688  1BEE  0855               	movf	xtoa@c,w
  6689  1BEF  3E30               	addlw	48
  6690  1BF0                     L1:	
  6691  1BF0  00D5               	movwf	xtoa@c
  6692  1BF1  3000               	movlw	0
  6693  1BF2  3D56               	addwfc	xtoa@c+1,w
  6694  1BF3  00D6               	movwf	xtoa@c+1
  6695  1BF4  083A               	movf	xtoa@x,w
  6696  1BF5  3EBF               	addlw	191
  6697  1BF6  00BB               	movwf	??_xtoa
  6698  1BF7  30FF               	movlw	255
  6699  1BF8  1803               	skipnc
  6700  1BF9  3000               	movlw	0
  6701  1BFA  00BC               	movwf	??_xtoa+1
  6702  1BFB  3000               	movlw	0
  6703  1BFC  023C               	subwf	??_xtoa+1,w
  6704  1BFD  301A               	movlw	26
  6705  1BFE  1903               	skipnz
  6706  1BFF  023B               	subwf	??_xtoa,w
  6707  1C00  1803               	btfsc	3,0
  6708  1C01  2C04               	goto	u8750
  6709  1C02  3001               	movlw	1
  6710  1C03  2C05               	goto	u8760
  6711  1C04                     u8750:	
  6712  1C04  3000               	movlw	0
  6713  1C05                     u8760:	
  6714  1C05  00BD               	movwf	??_xtoa+2
  6715  1C06  01BE               	clrf	??_xtoa+3
  6716  1C07  083D               	movf	??_xtoa+2,w
  6717  1C08  00C3               	movwf	_xtoa$1236
  6718  1C09  083E               	movf	??_xtoa+3,w
  6719  1C0A  00C4               	movwf	_xtoa$1236+1
  6720  1C0B  0843               	movf	_xtoa$1236,w
  6721  1C0C  0444               	iorwf	_xtoa$1236+1,w
  6722  1C0D  1903               	btfsc	3,2
  6723  1C0E  2C3B               	goto	l6714
  6724  1C0F  3020               	movlw	32
  6725  1C10  0455               	iorwf	xtoa@c,w
  6726  1C11  00BB               	movwf	??_xtoa
  6727  1C12  3000               	movlw	0
  6728  1C13  0456               	iorwf	xtoa@c+1,w
  6729  1C14  00BC               	movwf	??_xtoa+1
  6730  1C15  083B               	movf	??_xtoa,w
  6731  1C16  3E9F               	addlw	159
  6732  1C17  00BD               	movwf	??_xtoa+2
  6733  1C18  30FF               	movlw	255
  6734  1C19  3D3C               	addwfc	??_xtoa+1,w
  6735  1C1A  00BE               	movwf	??_xtoa+3
  6736  1C1B  3000               	movlw	0
  6737  1C1C  023E               	subwf	??_xtoa+3,w
  6738  1C1D  301A               	movlw	26
  6739  1C1E  1903               	skipnz
  6740  1C1F  023D               	subwf	??_xtoa+2,w
  6741  1C20  1803               	btfsc	3,0
  6742  1C21  2C24               	goto	u8780
  6743  1C22  3001               	movlw	1
  6744  1C23  2C25               	goto	u8790
  6745  1C24                     u8780:	
  6746  1C24  3000               	movlw	0
  6747  1C25                     u8790:	
  6748  1C25  00BF               	movwf	??_xtoa+4
  6749  1C26  01C0               	clrf	??_xtoa+5
  6750  1C27  083F               	movf	??_xtoa+4,w
  6751  1C28  00C5               	movwf	_xtoa$1237
  6752  1C29  0840               	movf	??_xtoa+5,w
  6753  1C2A  00C6               	movwf	_xtoa$1237+1
  6754  1C2B  0845               	movf	_xtoa$1237,w
  6755  1C2C  0446               	iorwf	_xtoa$1237+1,w
  6756  1C2D  1903               	btfsc	3,2
  6757  1C2E  2C3B               	goto	l6714
  6758                           
  6759                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  6760  1C2F  0856               	movf	xtoa@c+1,w
  6761  1C30  00F8               	movwf	toupper@c+1
  6762  1C31  0855               	movf	xtoa@c,w
  6763  1C32  00F7               	movwf	toupper@c
  6764  1C33  3190  2001  319B   	fcall	_toupper
  6765  1C36  0878               	movf	?_toupper+1,w
  6766  1C37  0020               	movlb	0	; select bank0
  6767  1C38  00D6               	movwf	xtoa@c+1
  6768  1C39  0877               	movf	?_toupper,w
  6769  1C3A  00D5               	movwf	xtoa@c
  6770  1C3B                     l6714:	
  6771                           
  6772                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  6773  1C3B  0855               	movf	xtoa@c,w
  6774  1C3C  00BB               	movwf	??_xtoa
  6775  1C3D  0853               	movf	xtoa@i,w
  6776  1C3E  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6777  1C3F  0086               	movwf	6
  6778  1C40  3002               	movlw	2	; select bank4/5
  6779  1C41  0087               	movwf	7
  6780  1C42  083B               	movf	??_xtoa,w
  6781  1C43  0081               	movwf	1
  6782                           
  6783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  6784  1C44  30FF               	movlw	255
  6785  1C45  07C7               	addwf	xtoa@p,f
  6786  1C46  30FF               	movlw	255
  6787  1C47  3DC8               	addwfc	xtoa@p+1,f
  6788                           
  6789                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  6790  1C48  30FF               	movlw	255
  6791  1C49  07C9               	addwf	xtoa@w,f
  6792  1C4A  30FF               	movlw	255
  6793  1C4B  3DCA               	addwfc	xtoa@w+1,f
  6794                           
  6795                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  6796  1C4C  304B               	movlw	low xtoa@n
  6797  1C4D  0086               	movwf	6
  6798  1C4E  3000               	movlw	high xtoa@n
  6799  1C4F  0087               	movwf	7
  6800  1C50  3F40               	moviw [0]fsr1
  6801  1C51  00BB               	movwf	??_xtoa
  6802  1C52  3F41               	moviw [1]fsr1
  6803  1C53  00BC               	movwf	??_xtoa+1
  6804  1C54  3F42               	moviw [2]fsr1
  6805  1C55  00BD               	movwf	??_xtoa+2
  6806  1C56  3F43               	moviw [3]fsr1
  6807  1C57  00BE               	movwf	??_xtoa+3
  6808  1C58  3F44               	moviw [4]fsr1
  6809  1C59  00BF               	movwf	??_xtoa+4
  6810  1C5A  3F45               	moviw [5]fsr1
  6811  1C5B  00C0               	movwf	??_xtoa+5
  6812  1C5C  3F46               	moviw [6]fsr1
  6813  1C5D  00C1               	movwf	??_xtoa+6
  6814  1C5E  3F47               	moviw [7]fsr1
  6815  1C5F  00C2               	movwf	??_xtoa+7
  6816  1C60  3004               	movlw	4
  6817  1C61                     u8815:	
  6818  1C61  0020               	movlb	0	; select bank0
  6819  1C62  36C2               	lsrf	??_xtoa+7,f
  6820  1C63  0CC1               	rrf	??_xtoa+6,f
  6821  1C64  0CC0               	rrf	??_xtoa+5,f
  6822  1C65  0CBF               	rrf	??_xtoa+4,f
  6823  1C66  0CBE               	rrf	??_xtoa+3,f
  6824  1C67  0CBD               	rrf	??_xtoa+2,f
  6825  1C68  0CBC               	rrf	??_xtoa+1,f
  6826  1C69  0CBB               	rrf	??_xtoa,f
  6827  1C6A  0B89               	decfsz	9,f
  6828  1C6B  2C61               	goto	u8815
  6829  1C6C  0020               	movlb	0	; select bank0
  6830  1C6D  0842               	movf	??_xtoa+7,w
  6831  1C6E  00D2               	movwf	xtoa@n+7
  6832  1C6F  0841               	movf	??_xtoa+6,w
  6833  1C70  00D1               	movwf	xtoa@n+6
  6834  1C71  0840               	movf	??_xtoa+5,w
  6835  1C72  00D0               	movwf	xtoa@n+5
  6836  1C73  083F               	movf	??_xtoa+4,w
  6837  1C74  00CF               	movwf	xtoa@n+4
  6838  1C75  083E               	movf	??_xtoa+3,w
  6839  1C76  00CE               	movwf	xtoa@n+3
  6840  1C77  083D               	movf	??_xtoa+2,w
  6841  1C78  00CD               	movwf	xtoa@n+2
  6842  1C79  083C               	movf	??_xtoa+1,w
  6843  1C7A  00CC               	movwf	xtoa@n+1
  6844  1C7B  083B               	movf	??_xtoa,w
  6845  1C7C  00CB               	movwf	xtoa@n
  6846  1C7D                     l6722:	
  6847                           
  6848                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6849  1C7D  0020               	movlb	0	; select bank0
  6850  1C7E  0854               	movf	xtoa@i+1,w
  6851  1C7F  3A80               	xorlw	128
  6852  1C80  00BB               	movwf	??_xtoa
  6853  1C81  3080               	movlw	128
  6854  1C82  023B               	subwf	??_xtoa,w
  6855  1C83  1D03               	skipz
  6856  1C84  2C87               	goto	u8825
  6857  1C85  3002               	movlw	2
  6858  1C86  0253               	subwf	xtoa@i,w
  6859  1C87                     u8825:	
  6860  1C87  1C03               	skipc
  6861  1C88  2CAE               	goto	l759
  6862  1C89  0020               	movlb	0	; select bank0
  6863  1C8A  084B               	movf	xtoa@n,w
  6864  1C8B  044C               	iorwf	xtoa@n+1,w
  6865  1C8C  044D               	iorwf	xtoa@n+2,w
  6866  1C8D  044E               	iorwf	xtoa@n+3,w
  6867  1C8E  044F               	iorwf	xtoa@n+4,w
  6868  1C8F  0450               	iorwf	xtoa@n+5,w
  6869  1C90  0451               	iorwf	xtoa@n+6,w
  6870  1C91  0452               	iorwf	xtoa@n+7,w
  6871  1C92  1D03               	skipz
  6872  1C93  2BD3               	goto	l6694
  6873  1C94  0848               	movf	xtoa@p+1,w
  6874  1C95  3A80               	xorlw	128
  6875  1C96  00BB               	movwf	??_xtoa
  6876  1C97  3080               	movlw	128
  6877  1C98  023B               	subwf	??_xtoa,w
  6878  1C99  1D03               	skipz
  6879  1C9A  2C9D               	goto	u8845
  6880  1C9B  3001               	movlw	1
  6881  1C9C  0247               	subwf	xtoa@p,w
  6882  1C9D                     u8845:	
  6883  1C9D  1803               	skipnc
  6884  1C9E  2BD3               	goto	l6694
  6885  1C9F  0020               	movlb	0	; select bank0
  6886  1CA0  084A               	movf	xtoa@w+1,w
  6887  1CA1  3A80               	xorlw	128
  6888  1CA2  00BB               	movwf	??_xtoa
  6889  1CA3  3080               	movlw	128
  6890  1CA4  023B               	subwf	??_xtoa,w
  6891  1CA5  1D03               	skipz
  6892  1CA6  2CA9               	goto	u8855
  6893  1CA7  3001               	movlw	1
  6894  1CA8  0249               	subwf	xtoa@w,w
  6895  1CA9                     u8855:	
  6896  1CA9  1C03               	skipc
  6897  1CAA  2CAE               	goto	l759
  6898  1CAB  0022               	movlb	2	; select bank2
  6899  1CAC  18E9               	btfsc	_flags^(0+256),1
  6900  1CAD  2BD3               	goto	l6694
  6901  1CAE                     l759:	
  6902                           
  6903                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  6904  1CAE  0022               	movlb	2	; select bank2
  6905  1CAF  1E69               	btfss	_flags^(0+256),4
  6906  1CB0  2CCC               	goto	l6738
  6907                           
  6908                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  6909  1CB1  30FF               	movlw	255
  6910  1CB2  0020               	movlb	0	; select bank0
  6911  1CB3  07D3               	addwf	xtoa@i,f
  6912  1CB4  30FF               	movlw	255
  6913  1CB5  3DD4               	addwfc	xtoa@i+1,f
  6914                           
  6915                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  6916  1CB6  083A               	movf	xtoa@x,w
  6917  1CB7  00BB               	movwf	??_xtoa
  6918  1CB8  0853               	movf	xtoa@i,w
  6919  1CB9  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6920  1CBA  0086               	movwf	6
  6921  1CBB  3002               	movlw	2	; select bank4/5
  6922  1CBC  0087               	movwf	7
  6923  1CBD  083B               	movf	??_xtoa,w
  6924  1CBE  0081               	movwf	1
  6925                           
  6926                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  6927  1CBF  30FF               	movlw	255
  6928  1CC0  07D3               	addwf	xtoa@i,f
  6929  1CC1  30FF               	movlw	255
  6930  1CC2  3DD4               	addwfc	xtoa@i+1,f
  6931                           
  6932                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  6933  1CC3  3030               	movlw	48
  6934  1CC4  00BB               	movwf	??_xtoa
  6935  1CC5  0853               	movf	xtoa@i,w
  6936  1CC6  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6937  1CC7  0086               	movwf	6
  6938  1CC8  3002               	movlw	2	; select bank4/5
  6939  1CC9  0087               	movwf	7
  6940  1CCA  083B               	movf	??_xtoa,w
  6941  1CCB  0081               	movwf	1
  6942  1CCC                     l6738:	
  6943                           
  6944                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  6945  1CCC  0020               	movlb	0	; select bank0
  6946  1CCD  0831               	movf	xtoa@fp+1,w
  6947  1CCE  00A7               	movwf	pad@fp+1
  6948  1CCF  0830               	movf	xtoa@fp,w
  6949  1CD0  00A6               	movwf	pad@fp
  6950  1CD1  0853               	movf	xtoa@i,w
  6951  1CD2  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6952  1CD3  00BB               	movwf	??_xtoa
  6953  1CD4  083B               	movf	??_xtoa,w
  6954  1CD5  00A8               	movwf	pad@buf
  6955  1CD6  084A               	movf	xtoa@w+1,w
  6956  1CD7  00AA               	movwf	pad@p+1
  6957  1CD8  0849               	movf	xtoa@w,w
  6958  1CD9  00A9               	movwf	pad@p
  6959  1CDA  31B7  27AF         	fcall	_pad
  6960  1CDC  0020               	movlb	0	; select bank0
  6961  1CDD  0827               	movf	?_pad+1,w
  6962  1CDE  00B1               	movwf	?_xtoa+1
  6963  1CDF  0826               	movf	?_pad,w
  6964  1CE0  00B0               	movwf	?_xtoa
  6965  1CE1  0008               	return
  6966  1CE2                     __end_of_xtoa:	
  6967                           
  6968                           	psect	text9
  6969  1001                     __ptext9:	
  6970 ;; *************** function _toupper *****************
  6971 ;; Defined at:
  6972 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  6973 ;; Parameters:    Size  Location     Type
  6974 ;;  c               2    7[COMMON] int 
  6975 ;; Auto vars:     Size  Location     Type
  6976 ;;		None
  6977 ;; Return value:  Size  Location     Type
  6978 ;;                  2    7[COMMON] int 
  6979 ;; Registers used:
  6980 ;;		wreg, status,2, status,0
  6981 ;; Tracked objects:
  6982 ;;		On entry : 0/0
  6983 ;;		On exit  : 0/0
  6984 ;;		Unchanged: 0/0
  6985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6986 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6987 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6988 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6989 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6990 ;;Total ram usage:        8 bytes
  6991 ;; Hardware stack levels used:    1
  6992 ;; Hardware stack levels required when called:    2
  6993 ;; This function calls:
  6994 ;;		_islower
  6995 ;; This function is called by:
  6996 ;;		_xtoa
  6997 ;; This function uses a non-reentrant model
  6998 ;;
  6999                           
  7000                           
  7001                           ;psect for function _toupper
  7002  1001                     _toupper:	
  7003                           
  7004                           ;incstack = 0
  7005                           ; Regs used in _toupper: [wreg+status,2+status,0]
  7006  1001  0877               	movf	toupper@c,w
  7007  1002  3E9F               	addlw	159
  7008  1003  0020               	movlb	0	; select bank0
  7009  1004  00A0               	movwf	??_toupper
  7010  1005  30FF               	movlw	255
  7011  1006  3D78               	addwfc	toupper@c+1,w
  7012  1007  00A1               	movwf	??_toupper+1
  7013  1008  3000               	movlw	0
  7014  1009  0221               	subwf	??_toupper+1,w
  7015  100A  301A               	movlw	26
  7016  100B  1903               	skipnz
  7017  100C  0220               	subwf	??_toupper,w
  7018  100D  1803               	btfsc	3,0
  7019  100E  2811               	goto	u7870
  7020  100F  3001               	movlw	1
  7021  1010  2812               	goto	u7880
  7022  1011                     u7870:	
  7023  1011  3000               	movlw	0
  7024  1012                     u7880:	
  7025  1012  00A2               	movwf	??_toupper+2
  7026  1013  01A3               	clrf	??_toupper+3
  7027  1014  0822               	movf	??_toupper+2,w
  7028  1015  00F9               	movwf	_toupper$1786
  7029  1016  0823               	movf	??_toupper+3,w
  7030  1017  00FA               	movwf	_toupper$1786+1
  7031  1018  0879               	movf	_toupper$1786,w
  7032  1019  047A               	iorwf	_toupper$1786+1,w
  7033  101A  1903               	btfsc	3,2
  7034  101B  0008               	return
  7035  101C  305F               	movlw	95
  7036  101D  0577               	andwf	toupper@c,w
  7037  101E  00F7               	movwf	?_toupper
  7038  101F  3000               	movlw	0
  7039  1020  0578               	andwf	toupper@c+1,w
  7040  1021  00F8               	movwf	?_toupper+1
  7041  1022  0008               	return
  7042  1023                     __end_of_toupper:	
  7043                           
  7044                           	psect	text10
  7045  3499                     __ptext10:	
  7046 ;; *************** function _islower *****************
  7047 ;; Defined at:
  7048 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  7049 ;; Parameters:    Size  Location     Type
  7050 ;;  c               2    1[COMMON] int 
  7051 ;; Auto vars:     Size  Location     Type
  7052 ;;		None
  7053 ;; Return value:  Size  Location     Type
  7054 ;;                  2    1[COMMON] int 
  7055 ;; Registers used:
  7056 ;;		wreg, status,2, status,0
  7057 ;; Tracked objects:
  7058 ;;		On entry : 0/0
  7059 ;;		On exit  : 0/0
  7060 ;;		Unchanged: 0/0
  7061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7062 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7064 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7065 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7066 ;;Total ram usage:        6 bytes
  7067 ;; Hardware stack levels used:    1
  7068 ;; Hardware stack levels required when called:    1
  7069 ;; This function calls:
  7070 ;;		Nothing
  7071 ;; This function is called by:
  7072 ;;		_toupper
  7073 ;; This function uses a non-reentrant model
  7074 ;;
  7075                           
  7076                           
  7077                           ;psect for function _islower
  7078  3499                     _islower:	
  7079                           
  7080                           ;incstack = 0
  7081                           ; Regs used in _islower: [wreg+status,2+status,0]
  7082  3499  0871               	movf	islower@c,w
  7083  349A  3E9F               	addlw	159
  7084  349B  00F3               	movwf	??_islower
  7085  349C  30FF               	movlw	255
  7086  349D  3D72               	addwfc	islower@c+1,w
  7087  349E  00F4               	movwf	??_islower+1
  7088  349F  3000               	movlw	0
  7089  34A0  0274               	subwf	??_islower+1,w
  7090  34A1  301A               	movlw	26
  7091  34A2  1903               	skipnz
  7092  34A3  0273               	subwf	??_islower,w
  7093  34A4  1803               	btfsc	3,0
  7094  34A5  2CA8               	goto	u7760
  7095  34A6  3001               	movlw	1
  7096  34A7  2CA9               	goto	u7770
  7097  34A8                     u7760:	
  7098  34A8  3000               	movlw	0
  7099  34A9                     u7770:	
  7100  34A9  00F5               	movwf	??_islower+2
  7101  34AA  01F6               	clrf	??_islower+3
  7102  34AB  0875               	movf	??_islower+2,w
  7103  34AC  00F1               	movwf	?_islower
  7104  34AD  0876               	movf	??_islower+3,w
  7105  34AE  00F2               	movwf	?_islower+1
  7106  34AF  0008               	return
  7107  34B0                     __end_of_islower:	
  7108                           
  7109                           	psect	text11
  7110  3482                     __ptext11:	
  7111 ;; *************** function _isupper *****************
  7112 ;; Defined at:
  7113 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  7114 ;; Parameters:    Size  Location     Type
  7115 ;;  c               2    1[COMMON] int 
  7116 ;; Auto vars:     Size  Location     Type
  7117 ;;		None
  7118 ;; Return value:  Size  Location     Type
  7119 ;;                  2    1[COMMON] int 
  7120 ;; Registers used:
  7121 ;;		wreg, status,2, status,0
  7122 ;; Tracked objects:
  7123 ;;		On entry : 0/0
  7124 ;;		On exit  : 0/0
  7125 ;;		Unchanged: 0/0
  7126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7127 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7129 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7130 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7131 ;;Total ram usage:        6 bytes
  7132 ;; Hardware stack levels used:    1
  7133 ;; Hardware stack levels required when called:    1
  7134 ;; This function calls:
  7135 ;;		Nothing
  7136 ;; This function is called by:
  7137 ;;		_xtoa
  7138 ;; This function uses a non-reentrant model
  7139 ;;
  7140                           
  7141                           
  7142                           ;psect for function _isupper
  7143  3482                     _isupper:	
  7144                           
  7145                           ;incstack = 0
  7146                           ; Regs used in _isupper: [wreg+status,2+status,0]
  7147  3482  0871               	movf	isupper@c,w
  7148  3483  3EBF               	addlw	191
  7149  3484  00F3               	movwf	??_isupper
  7150  3485  30FF               	movlw	255
  7151  3486  3D72               	addwfc	isupper@c+1,w
  7152  3487  00F4               	movwf	??_isupper+1
  7153  3488  3000               	movlw	0
  7154  3489  0274               	subwf	??_isupper+1,w
  7155  348A  301A               	movlw	26
  7156  348B  1903               	skipnz
  7157  348C  0273               	subwf	??_isupper,w
  7158  348D  1803               	btfsc	3,0
  7159  348E  2C91               	goto	u7830
  7160  348F  3001               	movlw	1
  7161  3490  2C92               	goto	u7840
  7162  3491                     u7830:	
  7163  3491  3000               	movlw	0
  7164  3492                     u7840:	
  7165  3492  00F5               	movwf	??_isupper+2
  7166  3493  01F6               	clrf	??_isupper+3
  7167  3494  0875               	movf	??_isupper+2,w
  7168  3495  00F1               	movwf	?_isupper
  7169  3496  0876               	movf	??_isupper+3,w
  7170  3497  00F2               	movwf	?_isupper+1
  7171  3498  0008               	return
  7172  3499                     __end_of_isupper:	
  7173                           
  7174                           	psect	text12
  7175  3550                     __ptext12:	
  7176 ;; *************** function _isalpha *****************
  7177 ;; Defined at:
  7178 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  7179 ;; Parameters:    Size  Location     Type
  7180 ;;  c               2    1[COMMON] int 
  7181 ;; Auto vars:     Size  Location     Type
  7182 ;;		None
  7183 ;; Return value:  Size  Location     Type
  7184 ;;                  2    1[COMMON] int 
  7185 ;; Registers used:
  7186 ;;		wreg, status,2, status,0
  7187 ;; Tracked objects:
  7188 ;;		On entry : 0/0
  7189 ;;		On exit  : 0/0
  7190 ;;		Unchanged: 0/0
  7191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7192 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7194 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7195 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7196 ;;Total ram usage:        8 bytes
  7197 ;; Hardware stack levels used:    1
  7198 ;; Hardware stack levels required when called:    1
  7199 ;; This function calls:
  7200 ;;		Nothing
  7201 ;; This function is called by:
  7202 ;;		_xtoa
  7203 ;; This function uses a non-reentrant model
  7204 ;;
  7205                           
  7206                           
  7207                           ;psect for function _isalpha
  7208  3550                     _isalpha:	
  7209                           
  7210                           ;incstack = 0
  7211                           ; Regs used in _isalpha: [wreg+status,2+status,0]
  7212  3550  3020               	movlw	32
  7213  3551  0471               	iorwf	isalpha@c,w
  7214  3552  00F3               	movwf	??_isalpha
  7215  3553  3000               	movlw	0
  7216  3554  0472               	iorwf	isalpha@c+1,w
  7217  3555  00F4               	movwf	??_isalpha+1
  7218  3556  0873               	movf	??_isalpha,w
  7219  3557  3E9F               	addlw	159
  7220  3558  00F5               	movwf	??_isalpha+2
  7221  3559  30FF               	movlw	255
  7222  355A  3D74               	addwfc	??_isalpha+1,w
  7223  355B  00F6               	movwf	??_isalpha+3
  7224  355C  3000               	movlw	0
  7225  355D  0276               	subwf	??_isalpha+3,w
  7226  355E  301A               	movlw	26
  7227  355F  1903               	skipnz
  7228  3560  0275               	subwf	??_isalpha+2,w
  7229  3561  1803               	btfsc	3,0
  7230  3562  2D65               	goto	u7850
  7231  3563  3001               	movlw	1
  7232  3564  2D66               	goto	u7860
  7233  3565                     u7850:	
  7234  3565  3000               	movlw	0
  7235  3566                     u7860:	
  7236  3566  00F7               	movwf	??_isalpha+4
  7237  3567  01F8               	clrf	??_isalpha+5
  7238  3568  0877               	movf	??_isalpha+4,w
  7239  3569  00F1               	movwf	?_isalpha
  7240  356A  0878               	movf	??_isalpha+5,w
  7241  356B  00F2               	movwf	?_isalpha+1
  7242  356C  0008               	return
  7243  356D                     __end_of_isalpha:	
  7244                           
  7245                           	psect	text13
  7246  2307                     __ptext13:	
  7247 ;; *************** function _utoa *****************
  7248 ;; Defined at:
  7249 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7250 ;; Parameters:    Size  Location     Type
  7251 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  7252 ;;		 -> vsnprintf@f(6), 
  7253 ;;  d               8   18[BANK0 ] unsigned long long 
  7254 ;; Auto vars:     Size  Location     Type
  7255 ;;  n               8   31[BANK0 ] unsigned long long 
  7256 ;;  i               2   39[BANK0 ] int 
  7257 ;;  w               2   29[BANK0 ] int 
  7258 ;;  p               2   27[BANK0 ] int 
  7259 ;; Return value:  Size  Location     Type
  7260 ;;                  2   16[BANK0 ] int 
  7261 ;; Registers used:
  7262 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7263 ;; Tracked objects:
  7264 ;;		On entry : 0/0
  7265 ;;		On exit  : 0/0
  7266 ;;		Unchanged: 0/0
  7267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7268 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7269 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7270 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7271 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7272 ;;Total ram usage:       25 bytes
  7273 ;; Hardware stack levels used:    1
  7274 ;; Hardware stack levels required when called:    5
  7275 ;; This function calls:
  7276 ;;		___lodiv
  7277 ;;		___lomod
  7278 ;;		_pad
  7279 ;; This function is called by:
  7280 ;;		_vfpfcnvrt
  7281 ;; This function uses a non-reentrant model
  7282 ;;
  7283                           
  7284                           
  7285                           ;psect for function _utoa
  7286  2307                     _utoa:	
  7287                           
  7288                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  7289                           
  7290                           ;incstack = 0
  7291                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7292  2307  0022               	movlb	2	; select bank2
  7293  2308  1BE8               	btfsc	(_prec+1)^(0+256),7
  7294  2309  2B0E               	goto	l719
  7295                           
  7296                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  7297  230A  30FD               	movlw	253
  7298  230B  05E9               	andwf	_flags^(0+256),f
  7299  230C  30FF               	movlw	255
  7300  230D  05EA               	andwf	(_flags+1)^(0+256),f
  7301  230E                     l719:	
  7302                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 601:     }
  7303                           
  7304                           
  7305                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  7306  230E  0868               	movf	(_prec+1)^(0+256),w
  7307  230F  3A80               	xorlw	128
  7308  2310  0020               	movlb	0	; select bank0
  7309  2311  00BA               	movwf	??_utoa
  7310  2312  3080               	movlw	128
  7311  2313  023A               	subwf	??_utoa,w
  7312  2314  1D03               	skipz
  7313  2315  2B19               	goto	u8655
  7314  2316  3001               	movlw	1
  7315  2317  0022               	movlb	2	; select bank2
  7316  2318  0267               	subwf	_prec^(0+256),w
  7317  2319                     u8655:	
  7318  2319  1803               	skipnc
  7319  231A  2B21               	goto	l6648
  7320  231B  3001               	movlw	1
  7321  231C  0020               	movlb	0	; select bank0
  7322  231D  00BB               	movwf	utoa@p
  7323  231E  3000               	movlw	0
  7324  231F  00BC               	movwf	utoa@p+1
  7325  2320  2B29               	goto	l723
  7326  2321                     l6648:	
  7327  2321  0022               	movlb	2	; select bank2
  7328  2322  0868               	movf	(_prec+1)^(0+256),w
  7329  2323  0020               	movlb	0	; select bank0
  7330  2324  00BC               	movwf	utoa@p+1
  7331  2325  0022               	movlb	2	; select bank2
  7332  2326  0867               	movf	_prec^(0+256),w
  7333  2327  0020               	movlb	0	; select bank0
  7334  2328  00BB               	movwf	utoa@p
  7335  2329                     l723:	
  7336                           
  7337                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  7338  2329  0022               	movlb	2	; select bank2
  7339  232A  0866               	movf	(_width+1)^(0+256),w
  7340  232B  0020               	movlb	0	; select bank0
  7341  232C  00BE               	movwf	utoa@w+1
  7342  232D  0022               	movlb	2	; select bank2
  7343  232E  0865               	movf	_width^(0+256),w
  7344  232F  0020               	movlb	0	; select bank0
  7345  2330  00BD               	movwf	utoa@w
  7346                           
  7347                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  7348  2331  0832               	movf	utoa@d,w
  7349  2332  00BF               	movwf	utoa@n
  7350  2333  0833               	movf	utoa@d+1,w
  7351  2334  00C0               	movwf	utoa@n+1
  7352  2335  0834               	movf	utoa@d+2,w
  7353  2336  00C1               	movwf	utoa@n+2
  7354  2337  0835               	movf	utoa@d+3,w
  7355  2338  00C2               	movwf	utoa@n+3
  7356  2339  0836               	movf	utoa@d+4,w
  7357  233A  00C3               	movwf	utoa@n+4
  7358  233B  0837               	movf	utoa@d+5,w
  7359  233C  00C4               	movwf	utoa@n+5
  7360  233D  0838               	movf	utoa@d+6,w
  7361  233E  00C5               	movwf	utoa@n+6
  7362  233F  0839               	movf	utoa@d+7,w
  7363  2340  00C6               	movwf	utoa@n+7
  7364                           
  7365                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  7366  2341  301F               	movlw	31
  7367  2342  00C7               	movwf	utoa@i
  7368  2343  3000               	movlw	0
  7369  2344  00C8               	movwf	utoa@i+1
  7370                           
  7371                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  7372  2345  0024               	movlb	4	; select bank4
  7373  2346  01BF               	clrf	(_dbuf^(0+512)+31)
  7374                           
  7375                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7376  2347  2BCD               	goto	l6664
  7377  2348                     l6666:	
  7378  2348  083F               	movf	utoa@n,w
  7379  2349  0440               	iorwf	utoa@n+1,w
  7380  234A  0441               	iorwf	utoa@n+2,w
  7381  234B  0442               	iorwf	utoa@n+3,w
  7382  234C  0443               	iorwf	utoa@n+4,w
  7383  234D  0444               	iorwf	utoa@n+5,w
  7384  234E  0445               	iorwf	utoa@n+6,w
  7385  234F  0446               	iorwf	utoa@n+7,w
  7386  2350  1D03               	skipz
  7387  2351  2B6C               	goto	l6654
  7388  2352  083C               	movf	utoa@p+1,w
  7389  2353  3A80               	xorlw	128
  7390  2354  00BA               	movwf	??_utoa
  7391  2355  3080               	movlw	128
  7392  2356  023A               	subwf	??_utoa,w
  7393  2357  1D03               	skipz
  7394  2358  2B5B               	goto	u8685
  7395  2359  3001               	movlw	1
  7396  235A  023B               	subwf	utoa@p,w
  7397  235B                     u8685:	
  7398  235B  1803               	skipnc
  7399  235C  2B6C               	goto	l6654
  7400  235D  0020               	movlb	0	; select bank0
  7401  235E  083E               	movf	utoa@w+1,w
  7402  235F  3A80               	xorlw	128
  7403  2360  00BA               	movwf	??_utoa
  7404  2361  3080               	movlw	128
  7405  2362  023A               	subwf	??_utoa,w
  7406  2363  1D03               	skipz
  7407  2364  2B67               	goto	u8695
  7408  2365  3001               	movlw	1
  7409  2366  023D               	subwf	utoa@w,w
  7410  2367                     u8695:	
  7411  2367  1C03               	skipc
  7412  2368  2BD2               	goto	l6674
  7413  2369  0022               	movlb	2	; select bank2
  7414  236A  1CE9               	btfss	_flags^(0+256),1
  7415  236B  2BD2               	goto	l6674
  7416  236C                     l6654:	
  7417                           
  7418                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  7419  236C  30FF               	movlw	255
  7420  236D  0020               	movlb	0	; select bank0
  7421  236E  07C7               	addwf	utoa@i,f
  7422  236F  30FF               	movlw	255
  7423  2370  3DC8               	addwfc	utoa@i+1,f
  7424                           
  7425                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  7426  2371  300A               	movlw	10
  7427  2372  00A0               	movwf	___lomod@divisor
  7428  2373  01A1               	clrf	___lomod@divisor+1
  7429  2374  01A2               	clrf	___lomod@divisor+2
  7430  2375  01A3               	clrf	___lomod@divisor+3
  7431  2376  01A4               	clrf	___lomod@divisor+4
  7432  2377  01A5               	clrf	___lomod@divisor+5
  7433  2378  01A6               	clrf	___lomod@divisor+6
  7434  2379  01A7               	clrf	___lomod@divisor+7
  7435  237A  083F               	movf	utoa@n,w
  7436  237B  00A8               	movwf	___lomod@dividend
  7437  237C  0840               	movf	utoa@n+1,w
  7438  237D  00A9               	movwf	___lomod@dividend+1
  7439  237E  0841               	movf	utoa@n+2,w
  7440  237F  00AA               	movwf	___lomod@dividend+2
  7441  2380  0842               	movf	utoa@n+3,w
  7442  2381  00AB               	movwf	___lomod@dividend+3
  7443  2382  0843               	movf	utoa@n+4,w
  7444  2383  00AC               	movwf	___lomod@dividend+4
  7445  2384  0844               	movf	utoa@n+5,w
  7446  2385  00AD               	movwf	___lomod@dividend+5
  7447  2386  0845               	movf	utoa@n+6,w
  7448  2387  00AE               	movwf	___lomod@dividend+6
  7449  2388  0846               	movf	utoa@n+7,w
  7450  2389  00AF               	movwf	___lomod@dividend+7
  7451  238A  31A9  2183  31A3   	fcall	___lomod
  7452  238D  0020               	movlb	0	; select bank0
  7453  238E  0820               	movf	?___lomod,w
  7454  238F  3E30               	addlw	48
  7455  2390  00BA               	movwf	??_utoa
  7456  2391  0847               	movf	utoa@i,w
  7457  2392  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7458  2393  0086               	movwf	6
  7459  2394  3002               	movlw	2	; select bank4/5
  7460  2395  0087               	movwf	7
  7461  2396  083A               	movf	??_utoa,w
  7462  2397  0081               	movwf	1
  7463                           
  7464                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  7465  2398  30FF               	movlw	255
  7466  2399  07BB               	addwf	utoa@p,f
  7467  239A  30FF               	movlw	255
  7468  239B  3DBC               	addwfc	utoa@p+1,f
  7469                           
  7470                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  7471  239C  30FF               	movlw	255
  7472  239D  07BD               	addwf	utoa@w,f
  7473  239E  30FF               	movlw	255
  7474  239F  3DBE               	addwfc	utoa@w+1,f
  7475                           
  7476                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  7477  23A0  300A               	movlw	10
  7478  23A1  00A0               	movwf	___lodiv@divisor
  7479  23A2  01A1               	clrf	___lodiv@divisor+1
  7480  23A3  01A2               	clrf	___lodiv@divisor+2
  7481  23A4  01A3               	clrf	___lodiv@divisor+3
  7482  23A5  01A4               	clrf	___lodiv@divisor+4
  7483  23A6  01A5               	clrf	___lodiv@divisor+5
  7484  23A7  01A6               	clrf	___lodiv@divisor+6
  7485  23A8  01A7               	clrf	___lodiv@divisor+7
  7486  23A9  083F               	movf	utoa@n,w
  7487  23AA  00A8               	movwf	___lodiv@dividend
  7488  23AB  0840               	movf	utoa@n+1,w
  7489  23AC  00A9               	movwf	___lodiv@dividend+1
  7490  23AD  0841               	movf	utoa@n+2,w
  7491  23AE  00AA               	movwf	___lodiv@dividend+2
  7492  23AF  0842               	movf	utoa@n+3,w
  7493  23B0  00AB               	movwf	___lodiv@dividend+3
  7494  23B1  0843               	movf	utoa@n+4,w
  7495  23B2  00AC               	movwf	___lodiv@dividend+4
  7496  23B3  0844               	movf	utoa@n+5,w
  7497  23B4  00AD               	movwf	___lodiv@dividend+5
  7498  23B5  0845               	movf	utoa@n+6,w
  7499  23B6  00AE               	movwf	___lodiv@dividend+6
  7500  23B7  0846               	movf	utoa@n+7,w
  7501  23B8  00AF               	movwf	___lodiv@dividend+7
  7502  23B9  31AA  2268  31A3   	fcall	___lodiv
  7503  23BC  0020               	movlb	0	; select bank0
  7504  23BD  0820               	movf	?___lodiv,w
  7505  23BE  00BF               	movwf	utoa@n
  7506  23BF  0821               	movf	?___lodiv+1,w
  7507  23C0  00C0               	movwf	utoa@n+1
  7508  23C1  0822               	movf	?___lodiv+2,w
  7509  23C2  00C1               	movwf	utoa@n+2
  7510  23C3  0823               	movf	?___lodiv+3,w
  7511  23C4  00C2               	movwf	utoa@n+3
  7512  23C5  0824               	movf	?___lodiv+4,w
  7513  23C6  00C3               	movwf	utoa@n+4
  7514  23C7  0825               	movf	?___lodiv+5,w
  7515  23C8  00C4               	movwf	utoa@n+5
  7516  23C9  0826               	movf	?___lodiv+6,w
  7517  23CA  00C5               	movwf	utoa@n+6
  7518  23CB  0827               	movf	?___lodiv+7,w
  7519  23CC  00C6               	movwf	utoa@n+7
  7520  23CD                     l6664:	
  7521                           
  7522                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7523  23CD  0020               	movlb	0	; select bank0
  7524  23CE  0847               	movf	utoa@i,w
  7525  23CF  0448               	iorwf	utoa@i+1,w
  7526  23D0  1D03               	btfss	3,2
  7527  23D1  2B48               	goto	l6666
  7528  23D2                     l6674:	
  7529                           
  7530                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  7531  23D2  0020               	movlb	0	; select bank0
  7532  23D3  0831               	movf	utoa@fp+1,w
  7533  23D4  00A7               	movwf	pad@fp+1
  7534  23D5  0830               	movf	utoa@fp,w
  7535  23D6  00A6               	movwf	pad@fp
  7536  23D7  0847               	movf	utoa@i,w
  7537  23D8  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7538  23D9  00BA               	movwf	??_utoa
  7539  23DA  083A               	movf	??_utoa,w
  7540  23DB  00A8               	movwf	pad@buf
  7541  23DC  083E               	movf	utoa@w+1,w
  7542  23DD  00AA               	movwf	pad@p+1
  7543  23DE  083D               	movf	utoa@w,w
  7544  23DF  00A9               	movwf	pad@p
  7545  23E0  31B7  27AF         	fcall	_pad
  7546  23E2  0020               	movlb	0	; select bank0
  7547  23E3  0827               	movf	?_pad+1,w
  7548  23E4  00B1               	movwf	?_utoa+1
  7549  23E5  0826               	movf	?_pad,w
  7550  23E6  00B0               	movwf	?_utoa
  7551  23E7  0008               	return
  7552  23E8                     __end_of_utoa:	
  7553                           
  7554                           	psect	text14
  7555  2983                     __ptext14:	
  7556 ;; *************** function ___lomod *****************
  7557 ;; Defined at:
  7558 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  7559 ;; Parameters:    Size  Location     Type
  7560 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7561 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7562 ;; Auto vars:     Size  Location     Type
  7563 ;;  counter         1    2[COMMON] unsigned char 
  7564 ;; Return value:  Size  Location     Type
  7565 ;;                  8    0[BANK0 ] unsigned long long 
  7566 ;; Registers used:
  7567 ;;		wreg, status,2, status,0
  7568 ;; Tracked objects:
  7569 ;;		On entry : 0/0
  7570 ;;		On exit  : 0/0
  7571 ;;		Unchanged: 0/0
  7572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7573 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7574 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7575 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7576 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7577 ;;Total ram usage:       18 bytes
  7578 ;; Hardware stack levels used:    1
  7579 ;; Hardware stack levels required when called:    1
  7580 ;; This function calls:
  7581 ;;		Nothing
  7582 ;; This function is called by:
  7583 ;;		_utoa
  7584 ;; This function uses a non-reentrant model
  7585 ;;
  7586                           
  7587                           
  7588                           ;psect for function ___lomod
  7589  2983                     ___lomod:	
  7590                           
  7591                           ;incstack = 0
  7592                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  7593  2983  0020               	movlb	0	; select bank0
  7594  2984  0820               	movf	___lomod@divisor,w
  7595  2985  0421               	iorwf	___lomod@divisor+1,w
  7596  2986  0422               	iorwf	___lomod@divisor+2,w
  7597  2987  0423               	iorwf	___lomod@divisor+3,w
  7598  2988  0424               	iorwf	___lomod@divisor+4,w
  7599  2989  0425               	iorwf	___lomod@divisor+5,w
  7600  298A  0426               	iorwf	___lomod@divisor+6,w
  7601  298B  0427               	iorwf	___lomod@divisor+7,w
  7602  298C  1903               	skipnz
  7603  298D  29DB               	goto	l1090
  7604  298E  01F2               	clrf	___lomod@counter
  7605  298F  0AF2               	incf	___lomod@counter,f
  7606  2990                     l6456:	
  7607  2990  1BA7               	btfsc	___lomod@divisor+7,7
  7608  2991  299F               	goto	l6458
  7609  2992  35A0               	lslf	___lomod@divisor,f
  7610  2993  0DA1               	rlf	___lomod@divisor+1,f
  7611  2994  0DA2               	rlf	___lomod@divisor+2,f
  7612  2995  0DA3               	rlf	___lomod@divisor+3,f
  7613  2996  0DA4               	rlf	___lomod@divisor+4,f
  7614  2997  0DA5               	rlf	___lomod@divisor+5,f
  7615  2998  0DA6               	rlf	___lomod@divisor+6,f
  7616  2999  0DA7               	rlf	___lomod@divisor+7,f
  7617  299A  3001               	movlw	1
  7618  299B  00F1               	movwf	??___lomod
  7619  299C  0871               	movf	??___lomod,w
  7620  299D  07F2               	addwf	___lomod@counter,f
  7621  299E  2990               	goto	l6456
  7622  299F                     l6458:	
  7623  299F  0827               	movf	___lomod@divisor+7,w
  7624  29A0  022F               	subwf	___lomod@dividend+7,w
  7625  29A1  1D03               	skipz
  7626  29A2  29BD               	goto	u8245
  7627  29A3  0826               	movf	___lomod@divisor+6,w
  7628  29A4  022E               	subwf	___lomod@dividend+6,w
  7629  29A5  1D03               	skipz
  7630  29A6  29BD               	goto	u8245
  7631  29A7  0825               	movf	___lomod@divisor+5,w
  7632  29A8  022D               	subwf	___lomod@dividend+5,w
  7633  29A9  1D03               	skipz
  7634  29AA  29BD               	goto	u8245
  7635  29AB  0824               	movf	___lomod@divisor+4,w
  7636  29AC  022C               	subwf	___lomod@dividend+4,w
  7637  29AD  1D03               	skipz
  7638  29AE  29BD               	goto	u8245
  7639  29AF  0823               	movf	___lomod@divisor+3,w
  7640  29B0  022B               	subwf	___lomod@dividend+3,w
  7641  29B1  1D03               	skipz
  7642  29B2  29BD               	goto	u8245
  7643  29B3  0822               	movf	___lomod@divisor+2,w
  7644  29B4  022A               	subwf	___lomod@dividend+2,w
  7645  29B5  1D03               	skipz
  7646  29B6  29BD               	goto	u8245
  7647  29B7  0821               	movf	___lomod@divisor+1,w
  7648  29B8  0229               	subwf	___lomod@dividend+1,w
  7649  29B9  1D03               	skipz
  7650  29BA  29BD               	goto	u8245
  7651  29BB  0820               	movf	___lomod@divisor,w
  7652  29BC  0228               	subwf	___lomod@dividend,w
  7653  29BD                     u8245:	
  7654  29BD  1C03               	skipc
  7655  29BE  29CF               	goto	l6462
  7656  29BF  0820               	movf	___lomod@divisor,w
  7657  29C0  02A8               	subwf	___lomod@dividend,f
  7658  29C1  0821               	movf	___lomod@divisor+1,w
  7659  29C2  3BA9               	subwfb	___lomod@dividend+1,f
  7660  29C3  0822               	movf	___lomod@divisor+2,w
  7661  29C4  3BAA               	subwfb	___lomod@dividend+2,f
  7662  29C5  0823               	movf	___lomod@divisor+3,w
  7663  29C6  3BAB               	subwfb	___lomod@dividend+3,f
  7664  29C7  0824               	movf	___lomod@divisor+4,w
  7665  29C8  3BAC               	subwfb	___lomod@dividend+4,f
  7666  29C9  0825               	movf	___lomod@divisor+5,w
  7667  29CA  3BAD               	subwfb	___lomod@dividend+5,f
  7668  29CB  0826               	movf	___lomod@divisor+6,w
  7669  29CC  3BAE               	subwfb	___lomod@dividend+6,f
  7670  29CD  0827               	movf	___lomod@divisor+7,w
  7671  29CE  3BAF               	subwfb	___lomod@dividend+7,f
  7672  29CF                     l6462:	
  7673  29CF  36A7               	lsrf	___lomod@divisor+7,f
  7674  29D0  0CA6               	rrf	___lomod@divisor+6,f
  7675  29D1  0CA5               	rrf	___lomod@divisor+5,f
  7676  29D2  0CA4               	rrf	___lomod@divisor+4,f
  7677  29D3  0CA3               	rrf	___lomod@divisor+3,f
  7678  29D4  0CA2               	rrf	___lomod@divisor+2,f
  7679  29D5  0CA1               	rrf	___lomod@divisor+1,f
  7680  29D6  0CA0               	rrf	___lomod@divisor,f
  7681  29D7  3001               	movlw	1
  7682  29D8  02F2               	subwf	___lomod@counter,f
  7683  29D9  1D03               	btfss	3,2
  7684  29DA  299F               	goto	l6458
  7685  29DB                     l1090:	
  7686  29DB  0828               	movf	___lomod@dividend,w
  7687  29DC  00A0               	movwf	?___lomod
  7688  29DD  0829               	movf	___lomod@dividend+1,w
  7689  29DE  00A1               	movwf	?___lomod+1
  7690  29DF  082A               	movf	___lomod@dividend+2,w
  7691  29E0  00A2               	movwf	?___lomod+2
  7692  29E1  082B               	movf	___lomod@dividend+3,w
  7693  29E2  00A3               	movwf	?___lomod+3
  7694  29E3  082C               	movf	___lomod@dividend+4,w
  7695  29E4  00A4               	movwf	?___lomod+4
  7696  29E5  082D               	movf	___lomod@dividend+5,w
  7697  29E6  00A5               	movwf	?___lomod+5
  7698  29E7  082E               	movf	___lomod@dividend+6,w
  7699  29E8  00A6               	movwf	?___lomod+6
  7700  29E9  082F               	movf	___lomod@dividend+7,w
  7701  29EA  00A7               	movwf	?___lomod+7
  7702  29EB  0008               	return
  7703  29EC                     __end_of___lomod:	
  7704                           
  7705                           	psect	text15
  7706  2A68                     __ptext15:	
  7707 ;; *************** function ___lodiv *****************
  7708 ;; Defined at:
  7709 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  7710 ;; Parameters:    Size  Location     Type
  7711 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7712 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7713 ;; Auto vars:     Size  Location     Type
  7714 ;;  quotient        8    2[COMMON] unsigned long long 
  7715 ;;  counter         1   10[COMMON] unsigned char 
  7716 ;; Return value:  Size  Location     Type
  7717 ;;                  8    0[BANK0 ] unsigned long long 
  7718 ;; Registers used:
  7719 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7720 ;; Tracked objects:
  7721 ;;		On entry : 0/0
  7722 ;;		On exit  : 0/0
  7723 ;;		Unchanged: 0/0
  7724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7725 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7726 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7727 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7728 ;;      Totals:        10      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7729 ;;Total ram usage:       26 bytes
  7730 ;; Hardware stack levels used:    1
  7731 ;; Hardware stack levels required when called:    1
  7732 ;; This function calls:
  7733 ;;		Nothing
  7734 ;; This function is called by:
  7735 ;;		_utoa
  7736 ;; This function uses a non-reentrant model
  7737 ;;
  7738                           
  7739                           
  7740                           ;psect for function ___lodiv
  7741  2A68                     ___lodiv:	
  7742                           
  7743                           ;incstack = 0
  7744                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  7745  2A68  3072               	movlw	low ___lodiv@quotient
  7746  2A69  0086               	movwf	6
  7747  2A6A  3000               	movlw	high ___lodiv@quotient
  7748  2A6B  0087               	movwf	7
  7749  2A6C  3008               	movlw	8
  7750  2A6D  00F1               	movwf	??___lodiv
  7751  2A6E  3000               	movlw	0
  7752  2A6F                     u8170:	
  7753  2A6F  001E               	movwi fsr1++
  7754  2A70  0BF1               	decfsz	??___lodiv,f
  7755  2A71  2A6F               	goto	u8170
  7756  2A72  0020               	movlb	0	; select bank0
  7757  2A73  0820               	movf	___lodiv@divisor,w
  7758  2A74  0421               	iorwf	___lodiv@divisor+1,w
  7759  2A75  0422               	iorwf	___lodiv@divisor+2,w
  7760  2A76  0423               	iorwf	___lodiv@divisor+3,w
  7761  2A77  0424               	iorwf	___lodiv@divisor+4,w
  7762  2A78  0425               	iorwf	___lodiv@divisor+5,w
  7763  2A79  0426               	iorwf	___lodiv@divisor+6,w
  7764  2A7A  0427               	iorwf	___lodiv@divisor+7,w
  7765  2A7B  1903               	skipnz
  7766  2A7C  2AD3               	goto	l1080
  7767  2A7D  01FA               	clrf	___lodiv@counter
  7768  2A7E  0AFA               	incf	___lodiv@counter,f
  7769  2A7F                     l6436:	
  7770  2A7F  1BA7               	btfsc	___lodiv@divisor+7,7
  7771  2A80  2A8E               	goto	l6438
  7772  2A81  35A0               	lslf	___lodiv@divisor,f
  7773  2A82  0DA1               	rlf	___lodiv@divisor+1,f
  7774  2A83  0DA2               	rlf	___lodiv@divisor+2,f
  7775  2A84  0DA3               	rlf	___lodiv@divisor+3,f
  7776  2A85  0DA4               	rlf	___lodiv@divisor+4,f
  7777  2A86  0DA5               	rlf	___lodiv@divisor+5,f
  7778  2A87  0DA6               	rlf	___lodiv@divisor+6,f
  7779  2A88  0DA7               	rlf	___lodiv@divisor+7,f
  7780  2A89  3001               	movlw	1
  7781  2A8A  00F1               	movwf	??___lodiv
  7782  2A8B  0871               	movf	??___lodiv,w
  7783  2A8C  07FA               	addwf	___lodiv@counter,f
  7784  2A8D  2A7F               	goto	l6436
  7785  2A8E                     l6438:	
  7786  2A8E  35F2               	lslf	___lodiv@quotient,f
  7787  2A8F  0DF3               	rlf	___lodiv@quotient+1,f
  7788  2A90  0DF4               	rlf	___lodiv@quotient+2,f
  7789  2A91  0DF5               	rlf	___lodiv@quotient+3,f
  7790  2A92  0DF6               	rlf	___lodiv@quotient+4,f
  7791  2A93  0DF7               	rlf	___lodiv@quotient+5,f
  7792  2A94  0DF8               	rlf	___lodiv@quotient+6,f
  7793  2A95  0DF9               	rlf	___lodiv@quotient+7,f
  7794  2A96  0827               	movf	___lodiv@divisor+7,w
  7795  2A97  022F               	subwf	___lodiv@dividend+7,w
  7796  2A98  1D03               	skipz
  7797  2A99  2AB4               	goto	u8205
  7798  2A9A  0826               	movf	___lodiv@divisor+6,w
  7799  2A9B  022E               	subwf	___lodiv@dividend+6,w
  7800  2A9C  1D03               	skipz
  7801  2A9D  2AB4               	goto	u8205
  7802  2A9E  0825               	movf	___lodiv@divisor+5,w
  7803  2A9F  022D               	subwf	___lodiv@dividend+5,w
  7804  2AA0  1D03               	skipz
  7805  2AA1  2AB4               	goto	u8205
  7806  2AA2  0824               	movf	___lodiv@divisor+4,w
  7807  2AA3  022C               	subwf	___lodiv@dividend+4,w
  7808  2AA4  1D03               	skipz
  7809  2AA5  2AB4               	goto	u8205
  7810  2AA6  0823               	movf	___lodiv@divisor+3,w
  7811  2AA7  022B               	subwf	___lodiv@dividend+3,w
  7812  2AA8  1D03               	skipz
  7813  2AA9  2AB4               	goto	u8205
  7814  2AAA  0822               	movf	___lodiv@divisor+2,w
  7815  2AAB  022A               	subwf	___lodiv@dividend+2,w
  7816  2AAC  1D03               	skipz
  7817  2AAD  2AB4               	goto	u8205
  7818  2AAE  0821               	movf	___lodiv@divisor+1,w
  7819  2AAF  0229               	subwf	___lodiv@dividend+1,w
  7820  2AB0  1D03               	skipz
  7821  2AB1  2AB4               	goto	u8205
  7822  2AB2  0820               	movf	___lodiv@divisor,w
  7823  2AB3  0228               	subwf	___lodiv@dividend,w
  7824  2AB4                     u8205:	
  7825  2AB4  1C03               	skipc
  7826  2AB5  2AC7               	goto	l6446
  7827  2AB6  0820               	movf	___lodiv@divisor,w
  7828  2AB7  02A8               	subwf	___lodiv@dividend,f
  7829  2AB8  0821               	movf	___lodiv@divisor+1,w
  7830  2AB9  3BA9               	subwfb	___lodiv@dividend+1,f
  7831  2ABA  0822               	movf	___lodiv@divisor+2,w
  7832  2ABB  3BAA               	subwfb	___lodiv@dividend+2,f
  7833  2ABC  0823               	movf	___lodiv@divisor+3,w
  7834  2ABD  3BAB               	subwfb	___lodiv@dividend+3,f
  7835  2ABE  0824               	movf	___lodiv@divisor+4,w
  7836  2ABF  3BAC               	subwfb	___lodiv@dividend+4,f
  7837  2AC0  0825               	movf	___lodiv@divisor+5,w
  7838  2AC1  3BAD               	subwfb	___lodiv@dividend+5,f
  7839  2AC2  0826               	movf	___lodiv@divisor+6,w
  7840  2AC3  3BAE               	subwfb	___lodiv@dividend+6,f
  7841  2AC4  0827               	movf	___lodiv@divisor+7,w
  7842  2AC5  3BAF               	subwfb	___lodiv@dividend+7,f
  7843  2AC6  1472               	bsf	___lodiv@quotient,0
  7844  2AC7                     l6446:	
  7845  2AC7  36A7               	lsrf	___lodiv@divisor+7,f
  7846  2AC8  0CA6               	rrf	___lodiv@divisor+6,f
  7847  2AC9  0CA5               	rrf	___lodiv@divisor+5,f
  7848  2ACA  0CA4               	rrf	___lodiv@divisor+4,f
  7849  2ACB  0CA3               	rrf	___lodiv@divisor+3,f
  7850  2ACC  0CA2               	rrf	___lodiv@divisor+2,f
  7851  2ACD  0CA1               	rrf	___lodiv@divisor+1,f
  7852  2ACE  0CA0               	rrf	___lodiv@divisor,f
  7853  2ACF  3001               	movlw	1
  7854  2AD0  02FA               	subwf	___lodiv@counter,f
  7855  2AD1  1D03               	btfss	3,2
  7856  2AD2  2A8E               	goto	l6438
  7857  2AD3                     l1080:	
  7858  2AD3  0872               	movf	___lodiv@quotient,w
  7859  2AD4  00A0               	movwf	?___lodiv
  7860  2AD5  0873               	movf	___lodiv@quotient+1,w
  7861  2AD6  00A1               	movwf	?___lodiv+1
  7862  2AD7  0874               	movf	___lodiv@quotient+2,w
  7863  2AD8  00A2               	movwf	?___lodiv+2
  7864  2AD9  0875               	movf	___lodiv@quotient+3,w
  7865  2ADA  00A3               	movwf	?___lodiv+3
  7866  2ADB  0876               	movf	___lodiv@quotient+4,w
  7867  2ADC  00A4               	movwf	?___lodiv+4
  7868  2ADD  0877               	movf	___lodiv@quotient+5,w
  7869  2ADE  00A5               	movwf	?___lodiv+5
  7870  2ADF  0878               	movf	___lodiv@quotient+6,w
  7871  2AE0  00A6               	movwf	?___lodiv+6
  7872  2AE1  0879               	movf	___lodiv@quotient+7,w
  7873  2AE2  00A7               	movwf	?___lodiv+7
  7874  2AE3  0008               	return
  7875  2AE4                     __end_of___lodiv:	
  7876                           
  7877                           	psect	text16
  7878  2821                     __ptext16:	
  7879 ;; *************** function _strncmp *****************
  7880 ;; Defined at:
  7881 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  7882 ;; Parameters:    Size  Location     Type
  7883 ;;  _l              2    1[COMMON] PTR const unsigned char 
  7884 ;;		 -> STR_21(18), STR_20(18), STR_19(19), STR_18(20), 
  7885 ;;		 -> STR_17(20), STR_16(21), STR_15(21), STR_14(21), 
  7886 ;;		 -> STR_13(22), STR_12(22), STR_11(21), STR_10(21), 
  7887 ;;		 -> STR_7(15), STR_6(15), STR_5(21), STR_4(21), 
  7888 ;;		 -> STR_3(22), STR_2(71), STR_1(40), 
  7889 ;;  _r              2    3[COMMON] PTR const unsigned char 
  7890 ;;		 -> STR_119(3), STR_115(3), STR_110(3), STR_106(3), 
  7891 ;;		 -> STR_101(4), STR_97(4), STR_92(3), STR_87(3), 
  7892 ;;		 -> STR_82(4), STR_77(3), STR_72(3), STR_67(4), 
  7893 ;;		 -> STR_62(3), STR_57(3), STR_52(4), STR_47(3), 
  7894 ;;		 -> STR_43(3), STR_38(3), STR_34(3), STR_29(4), 
  7895 ;;		 -> STR_25(4), 
  7896 ;;  n               2    5[COMMON] unsigned int 
  7897 ;; Auto vars:     Size  Location     Type
  7898 ;;  r               2   10[COMMON] PTR const unsigned char 
  7899 ;;		 -> STR_119(3), STR_115(3), STR_110(3), STR_106(3), 
  7900 ;;		 -> STR_101(4), STR_97(4), STR_92(3), STR_87(3), 
  7901 ;;		 -> STR_82(4), STR_77(3), STR_72(3), STR_67(4), 
  7902 ;;		 -> STR_62(3), STR_57(3), STR_52(4), STR_47(3), 
  7903 ;;		 -> STR_43(3), STR_38(3), STR_34(3), STR_29(4), 
  7904 ;;		 -> STR_25(4), 
  7905 ;;  l               2    8[COMMON] PTR const unsigned char 
  7906 ;;		 -> STR_21(18), STR_20(18), STR_19(19), STR_18(20), 
  7907 ;;		 -> STR_17(20), STR_16(21), STR_15(21), STR_14(21), 
  7908 ;;		 -> STR_13(22), STR_12(22), STR_11(21), STR_10(21), 
  7909 ;;		 -> STR_7(15), STR_6(15), STR_5(21), STR_4(21), 
  7910 ;;		 -> STR_3(22), STR_2(71), STR_1(40), 
  7911 ;; Return value:  Size  Location     Type
  7912 ;;                  2    1[COMMON] int 
  7913 ;; Registers used:
  7914 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7915 ;; Tracked objects:
  7916 ;;		On entry : 0/0
  7917 ;;		On exit  : 0/0
  7918 ;;		Unchanged: 0/0
  7919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7920 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7921 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7922 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7923 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7924 ;;Total ram usage:       11 bytes
  7925 ;; Hardware stack levels used:    1
  7926 ;; Hardware stack levels required when called:    1
  7927 ;; This function calls:
  7928 ;;		Nothing
  7929 ;; This function is called by:
  7930 ;;		_vfpfcnvrt
  7931 ;; This function uses a non-reentrant model
  7932 ;;
  7933                           
  7934                           
  7935                           ;psect for function _strncmp
  7936  2821                     _strncmp:	
  7937                           
  7938                           ;incstack = 0
  7939                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  7940  2821  0872               	movf	strncmp@_l+1,w
  7941  2822  00F9               	movwf	strncmp@l+1
  7942  2823  0871               	movf	strncmp@_l,w
  7943  2824  00F8               	movwf	strncmp@l
  7944  2825  0874               	movf	strncmp@_r+1,w
  7945  2826  00FB               	movwf	strncmp@r+1
  7946  2827  0873               	movf	strncmp@_r,w
  7947  2828  00FA               	movwf	strncmp@r
  7948  2829  3001               	movlw	1
  7949  282A  02F5               	subwf	strncmp@n,f
  7950  282B  3000               	movlw	0
  7951  282C  3BF6               	subwfb	strncmp@n+1,f
  7952  282D  0A75               	incf	strncmp@n,w
  7953  282E  1D03               	skipz
  7954  282F  285B               	goto	l6798
  7955  2830  0A76               	incf	strncmp@n+1,w
  7956  2831  1D03               	btfss	3,2
  7957  2832  285B               	goto	l6798
  7958  2833  01F1               	clrf	?_strncmp
  7959  2834  01F2               	clrf	?_strncmp+1
  7960  2835  0008               	return
  7961  2836                     l6800:	
  7962  2836  087A               	movf	strncmp@r,w
  7963  2837  0084               	movwf	4
  7964  2838  087B               	movf	strncmp@r+1,w
  7965  2839  0085               	movwf	5
  7966  283A  0012               	moviw fsr0++
  7967  283B  1903               	btfsc	3,2
  7968  283C  2862               	goto	l6806
  7969  283D  0875               	movf	strncmp@n,w
  7970  283E  0476               	iorwf	strncmp@n+1,w
  7971  283F  1903               	btfsc	3,2
  7972  2840  2862               	goto	l6806
  7973  2841  087A               	movf	strncmp@r,w
  7974  2842  0084               	movwf	4
  7975  2843  087B               	movf	strncmp@r+1,w
  7976  2844  0085               	movwf	5
  7977  2845  0800               	movf	0,w	;code access
  7978  2846  00F7               	movwf	??_strncmp
  7979  2847  0878               	movf	strncmp@l,w
  7980  2848  0084               	movwf	4
  7981  2849  0879               	movf	strncmp@l+1,w
  7982  284A  0085               	movwf	5
  7983  284B  0800               	movf	0,w	;code access
  7984  284C  0677               	xorwf	??_strncmp,w
  7985  284D  1D03               	btfss	3,2
  7986  284E  2862               	goto	l6806
  7987  284F  3001               	movlw	1
  7988  2850  07F8               	addwf	strncmp@l,f
  7989  2851  3000               	movlw	0
  7990  2852  3DF9               	addwfc	strncmp@l+1,f
  7991  2853  3001               	movlw	1
  7992  2854  07FA               	addwf	strncmp@r,f
  7993  2855  3000               	movlw	0
  7994  2856  3DFB               	addwfc	strncmp@r+1,f
  7995  2857  3001               	movlw	1
  7996  2858  02F5               	subwf	strncmp@n,f
  7997  2859  3000               	movlw	0
  7998  285A  3BF6               	subwfb	strncmp@n+1,f
  7999  285B                     l6798:	
  8000  285B  0878               	movf	strncmp@l,w
  8001  285C  0084               	movwf	4
  8002  285D  0879               	movf	strncmp@l+1,w
  8003  285E  0085               	movwf	5
  8004  285F  0012               	moviw fsr0++
  8005  2860  1D03               	btfss	3,2
  8006  2861  2836               	goto	l6800
  8007  2862                     l6806:	
  8008  2862  0878               	movf	strncmp@l,w
  8009  2863  0084               	movwf	4
  8010  2864  0879               	movf	strncmp@l+1,w
  8011  2865  0085               	movwf	5
  8012  2866  0800               	movf	0,w	;code access
  8013  2867  00F7               	movwf	??_strncmp
  8014  2868  087A               	movf	strncmp@r,w
  8015  2869  0084               	movwf	4
  8016  286A  087B               	movf	strncmp@r+1,w
  8017  286B  0085               	movwf	5
  8018  286C  0800               	movf	0,w	;code access
  8019  286D  0277               	subwf	??_strncmp,w
  8020  286E  00F1               	movwf	?_strncmp
  8021  286F  01F2               	clrf	?_strncmp+1
  8022  2870  1C03               	skipc
  8023  2871  03F2               	decf	?_strncmp+1,f
  8024  2872  0008               	return
  8025  2873                     __end_of_strncmp:	
  8026                           
  8027                           	psect	text17
  8028  2F3B                     __ptext17:	
  8029 ;; *************** function _stoa *****************
  8030 ;; Defined at:
  8031 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8032 ;; Parameters:    Size  Location     Type
  8033 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  8034 ;;		 -> vsnprintf@f(6), 
  8035 ;;  s               2    2[BANK0 ] PTR unsigned char 
  8036 ;;		 -> ?_snprintf(2), sp__logf(4), adcGain(2), 
  8037 ;; Auto vars:     Size  Location     Type
  8038 ;;  nuls            7    4[BANK0 ] unsigned char [7]
  8039 ;;  l               2   19[BANK0 ] int 
  8040 ;;  p               2   17[BANK0 ] int 
  8041 ;;  cp              2   15[BANK0 ] PTR unsigned char 
  8042 ;;		 -> ?_snprintf(2), stoa@nuls(7), sp__logf(4), adcGain(2), 
  8043 ;;  w               2   13[BANK0 ] int 
  8044 ;;  i               2   11[BANK0 ] int 
  8045 ;; Return value:  Size  Location     Type
  8046 ;;                  2    0[BANK0 ] int 
  8047 ;; Registers used:
  8048 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8049 ;; Tracked objects:
  8050 ;;		On entry : 0/0
  8051 ;;		On exit  : 0/0
  8052 ;;		Unchanged: 0/0
  8053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8054 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8055 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8056 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8057 ;;      Totals:         2      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8058 ;;Total ram usage:       23 bytes
  8059 ;; Hardware stack levels used:    1
  8060 ;; Hardware stack levels required when called:    3
  8061 ;; This function calls:
  8062 ;;		_fputc
  8063 ;;		_strlen
  8064 ;; This function is called by:
  8065 ;;		_vfpfcnvrt
  8066 ;; This function uses a non-reentrant model
  8067 ;;
  8068                           
  8069                           
  8070                           ;psect for function _stoa
  8071  2F3B                     _stoa:	
  8072                           
  8073                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8074                           
  8075                           ;incstack = 0
  8076                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8077  2F3B  30DA               	movlw	low stoa@F1152
  8078  2F3C  0086               	movwf	6
  8079  2F3D  3001               	movlw	high stoa@F1152
  8080  2F3E  0087               	movwf	7
  8081  2F3F  3024               	movlw	low stoa@nuls
  8082  2F40  0084               	movwf	4
  8083  2F41  3000               	movlw	high stoa@nuls
  8084  2F42  0085               	movwf	5
  8085  2F43  3007               	movlw	7
  8086  2F44  00FA               	movwf	??_stoa
  8087  2F45                     u8550:	
  8088  2F45  0016               	moviw fsr1++
  8089  2F46  001A               	movwi fsr0++
  8090  2F47  0BFA               	decfsz	??_stoa,f
  8091  2F48  2F45               	goto	u8550
  8092                           
  8093                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  8094  2F49  0020               	movlb	0	; select bank0
  8095  2F4A  0823               	movf	stoa@s+1,w
  8096  2F4B  00B0               	movwf	stoa@cp+1
  8097  2F4C  0822               	movf	stoa@s,w
  8098  2F4D  00AF               	movwf	stoa@cp
  8099                           
  8100                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  8101  2F4E  082F               	movf	stoa@cp,w
  8102  2F4F  0430               	iorwf	stoa@cp+1,w
  8103  2F50  1D03               	btfss	3,2
  8104  2F51  2F56               	goto	l6600
  8105                           
  8106                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  8107  2F52  3024               	movlw	low stoa@nuls
  8108  2F53  00AF               	movwf	stoa@cp
  8109  2F54  3000               	movlw	high stoa@nuls
  8110  2F55  00B0               	movwf	stoa@cp+1
  8111  2F56                     l6600:	
  8112                           
  8113                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  8114  2F56  0830               	movf	stoa@cp+1,w
  8115  2F57  00F2               	movwf	strlen@s+1
  8116  2F58  082F               	movf	stoa@cp,w
  8117  2F59  00F1               	movwf	strlen@s
  8118  2F5A  31B4  2454  31AF   	fcall	_strlen
  8119  2F5D  0872               	movf	?_strlen+1,w
  8120  2F5E  0020               	movlb	0	; select bank0
  8121  2F5F  00B4               	movwf	stoa@l+1
  8122  2F60  0871               	movf	?_strlen,w
  8123  2F61  00B3               	movwf	stoa@l
  8124                           
  8125                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  8126  2F62  0022               	movlb	2	; select bank2
  8127  2F63  0868               	movf	(_prec+1)^(0+256),w
  8128  2F64  0020               	movlb	0	; select bank0
  8129  2F65  00B2               	movwf	stoa@p+1
  8130  2F66  0022               	movlb	2	; select bank2
  8131  2F67  0867               	movf	_prec^(0+256),w
  8132  2F68  0020               	movlb	0	; select bank0
  8133  2F69  00B1               	movwf	stoa@p
  8134                           
  8135                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  8136  2F6A  1BB2               	btfsc	stoa@p+1,7
  8137  2F6B  2F7D               	goto	l702
  8138  2F6C  0832               	movf	stoa@p+1,w
  8139  2F6D  3A80               	xorlw	128
  8140  2F6E  00FA               	movwf	??_stoa
  8141  2F6F  0834               	movf	stoa@l+1,w
  8142  2F70  3A80               	xorlw	128
  8143  2F71  027A               	subwf	??_stoa,w
  8144  2F72  1D03               	skipz
  8145  2F73  2F76               	goto	u8585
  8146  2F74  0833               	movf	stoa@l,w
  8147  2F75  0231               	subwf	stoa@p,w
  8148  2F76                     u8585:	
  8149  2F76  1803               	btfsc	3,0
  8150  2F77  2F7D               	goto	l702
  8151  2F78  0020               	movlb	0	; select bank0
  8152  2F79  0832               	movf	stoa@p+1,w
  8153  2F7A  00B4               	movwf	stoa@l+1
  8154  2F7B  0831               	movf	stoa@p,w
  8155  2F7C  00B3               	movwf	stoa@l
  8156  2F7D                     l702:	
  8157                           
  8158                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  8159  2F7D  0020               	movlb	0	; select bank0
  8160  2F7E  0834               	movf	stoa@l+1,w
  8161  2F7F  00B2               	movwf	stoa@p+1
  8162  2F80  0833               	movf	stoa@l,w
  8163  2F81  00B1               	movwf	stoa@p
  8164                           
  8165                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  8166  2F82  0022               	movlb	2	; select bank2
  8167  2F83  0866               	movf	(_width+1)^(0+256),w
  8168  2F84  0020               	movlb	0	; select bank0
  8169  2F85  00AE               	movwf	stoa@w+1
  8170  2F86  0022               	movlb	2	; select bank2
  8171  2F87  0865               	movf	_width^(0+256),w
  8172  2F88  0020               	movlb	0	; select bank0
  8173  2F89  00AD               	movwf	stoa@w
  8174                           
  8175                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  8176  2F8A  0022               	movlb	2	; select bank2
  8177  2F8B  1C69               	btfss	_flags^(0+256),0
  8178  2F8C  2F9F               	goto	l6618
  8179  2F8D  2FAC               	goto	l6620
  8180  2F8E                     l6614:	
  8181                           
  8182                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  8183  2F8E  3020               	movlw	32
  8184  2F8F  00F1               	movwf	fputc@c
  8185  2F90  3000               	movlw	0
  8186  2F91  00F2               	movwf	fputc@c+1
  8187  2F92  0020               	movlb	0	; select bank0
  8188  2F93  0821               	movf	stoa@fp+1,w
  8189  2F94  00F4               	movwf	fputc@fp+1
  8190  2F95  0820               	movf	stoa@fp,w
  8191  2F96  00F3               	movwf	fputc@fp
  8192  2F97  31A8  2073  31AF   	fcall	_fputc
  8193                           
  8194                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  8195  2F9A  3001               	movlw	1
  8196  2F9B  0020               	movlb	0	; select bank0
  8197  2F9C  07B3               	addwf	stoa@l,f
  8198  2F9D  3000               	movlw	0
  8199  2F9E  3DB4               	addwfc	stoa@l+1,f
  8200  2F9F                     l6618:	
  8201                           
  8202                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  8203  2F9F  0020               	movlb	0	; select bank0
  8204  2FA0  0834               	movf	stoa@l+1,w
  8205  2FA1  3A80               	xorlw	128
  8206  2FA2  00FA               	movwf	??_stoa
  8207  2FA3  082E               	movf	stoa@w+1,w
  8208  2FA4  3A80               	xorlw	128
  8209  2FA5  027A               	subwf	??_stoa,w
  8210  2FA6  1D03               	skipz
  8211  2FA7  2FAA               	goto	u8605
  8212  2FA8  082D               	movf	stoa@w,w
  8213  2FA9  0233               	subwf	stoa@l,w
  8214  2FAA                     u8605:	
  8215  2FAA  1C03               	skipc
  8216  2FAB  2F8E               	goto	l6614
  8217  2FAC                     l6620:	
  8218                           
  8219                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  8220  2FAC  0020               	movlb	0	; select bank0
  8221  2FAD  01AB               	clrf	stoa@i
  8222  2FAE  01AC               	clrf	stoa@i+1
  8223  2FAF                     l6628:	
  8224                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8225                           
  8226                           
  8227                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8228  2FAF  082C               	movf	stoa@i+1,w
  8229  2FB0  3A80               	xorlw	128
  8230  2FB1  00FA               	movwf	??_stoa
  8231  2FB2  0832               	movf	stoa@p+1,w
  8232  2FB3  3A80               	xorlw	128
  8233  2FB4  027A               	subwf	??_stoa,w
  8234  2FB5  1D03               	skipz
  8235  2FB6  2FB9               	goto	u8615
  8236  2FB7  0831               	movf	stoa@p,w
  8237  2FB8  022B               	subwf	stoa@i,w
  8238  2FB9                     u8615:	
  8239  2FB9  1803               	btfsc	3,0
  8240  2FBA  2FD8               	goto	l711
  8241                           
  8242                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  8243  2FBB  0020               	movlb	0	; select bank0
  8244  2FBC  082F               	movf	stoa@cp,w
  8245  2FBD  0086               	movwf	6
  8246  2FBE  0830               	movf	stoa@cp+1,w
  8247  2FBF  0087               	movwf	7
  8248  2FC0  0801               	movf	1,w
  8249  2FC1  00FA               	movwf	??_stoa
  8250  2FC2  01FB               	clrf	??_stoa+1
  8251  2FC3  087A               	movf	??_stoa,w
  8252  2FC4  00F1               	movwf	fputc@c
  8253  2FC5  087B               	movf	??_stoa+1,w
  8254  2FC6  00F2               	movwf	fputc@c+1
  8255  2FC7  0821               	movf	stoa@fp+1,w
  8256  2FC8  00F4               	movwf	fputc@fp+1
  8257  2FC9  0820               	movf	stoa@fp,w
  8258  2FCA  00F3               	movwf	fputc@fp
  8259  2FCB  31A8  2073  31AF   	fcall	_fputc
  8260                           
  8261                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  8262  2FCE  3001               	movlw	1
  8263  2FCF  0020               	movlb	0	; select bank0
  8264  2FD0  07AF               	addwf	stoa@cp,f
  8265  2FD1  3000               	movlw	0
  8266  2FD2  3DB0               	addwfc	stoa@cp+1,f
  8267                           
  8268                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  8269  2FD3  3001               	movlw	1
  8270  2FD4  07AB               	addwf	stoa@i,f
  8271  2FD5  3000               	movlw	0
  8272  2FD6  3DAC               	addwfc	stoa@i+1,f
  8273  2FD7  2FAF               	goto	l6628
  8274  2FD8                     l711:	
  8275                           
  8276                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  8277  2FD8  0022               	movlb	2	; select bank2
  8278  2FD9  1869               	btfsc	_flags^(0+256),0
  8279  2FDA  2FED               	goto	l6636
  8280  2FDB  2FFA               	goto	l6638
  8281  2FDC                     l6632:	
  8282                           
  8283                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  8284  2FDC  3020               	movlw	32
  8285  2FDD  00F1               	movwf	fputc@c
  8286  2FDE  3000               	movlw	0
  8287  2FDF  00F2               	movwf	fputc@c+1
  8288  2FE0  0020               	movlb	0	; select bank0
  8289  2FE1  0821               	movf	stoa@fp+1,w
  8290  2FE2  00F4               	movwf	fputc@fp+1
  8291  2FE3  0820               	movf	stoa@fp,w
  8292  2FE4  00F3               	movwf	fputc@fp
  8293  2FE5  31A8  2073  31AF   	fcall	_fputc
  8294                           
  8295                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  8296  2FE8  3001               	movlw	1
  8297  2FE9  0020               	movlb	0	; select bank0
  8298  2FEA  07B3               	addwf	stoa@l,f
  8299  2FEB  3000               	movlw	0
  8300  2FEC  3DB4               	addwfc	stoa@l+1,f
  8301  2FED                     l6636:	
  8302                           
  8303                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  8304  2FED  0020               	movlb	0	; select bank0
  8305  2FEE  0834               	movf	stoa@l+1,w
  8306  2FEF  3A80               	xorlw	128
  8307  2FF0  00FA               	movwf	??_stoa
  8308  2FF1  082E               	movf	stoa@w+1,w
  8309  2FF2  3A80               	xorlw	128
  8310  2FF3  027A               	subwf	??_stoa,w
  8311  2FF4  1D03               	skipz
  8312  2FF5  2FF8               	goto	u8635
  8313  2FF6  082D               	movf	stoa@w,w
  8314  2FF7  0233               	subwf	stoa@l,w
  8315  2FF8                     u8635:	
  8316  2FF8  1C03               	skipc
  8317  2FF9  2FDC               	goto	l6632
  8318  2FFA                     l6638:	
  8319                           
  8320                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  8321  2FFA  0020               	movlb	0	; select bank0
  8322  2FFB  0834               	movf	stoa@l+1,w
  8323  2FFC  00A1               	movwf	?_stoa+1
  8324  2FFD  0833               	movf	stoa@l,w
  8325  2FFE  00A0               	movwf	?_stoa
  8326  2FFF  0008               	return
  8327  3000                     __end_of_stoa:	
  8328                           
  8329                           	psect	text18
  8330  23E8                     __ptext18:	
  8331 ;; *************** function _otoa *****************
  8332 ;; Defined at:
  8333 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8334 ;; Parameters:    Size  Location     Type
  8335 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  8336 ;;		 -> vsnprintf@f(6), 
  8337 ;;  d               8   18[BANK0 ] unsigned long long 
  8338 ;; Auto vars:     Size  Location     Type
  8339 ;;  n               8   40[BANK0 ] unsigned long long 
  8340 ;;  i               2   48[BANK0 ] int 
  8341 ;;  w               2   38[BANK0 ] int 
  8342 ;;  t               2   36[BANK0 ] int 
  8343 ;;  p               2   34[BANK0 ] int 
  8344 ;; Return value:  Size  Location     Type
  8345 ;;                  2   16[BANK0 ] int 
  8346 ;; Registers used:
  8347 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8348 ;; Tracked objects:
  8349 ;;		On entry : 0/0
  8350 ;;		On exit  : 0/0
  8351 ;;		Unchanged: 0/0
  8352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8353 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8354 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8355 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8356 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8357 ;;Total ram usage:       34 bytes
  8358 ;; Hardware stack levels used:    1
  8359 ;; Hardware stack levels required when called:    5
  8360 ;; This function calls:
  8361 ;;		_pad
  8362 ;; This function is called by:
  8363 ;;		_vfpfcnvrt
  8364 ;; This function uses a non-reentrant model
  8365 ;;
  8366                           
  8367                           
  8368                           ;psect for function _otoa
  8369  23E8                     _otoa:	
  8370                           
  8371                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  8372                           
  8373                           ;incstack = 0
  8374                           ; Regs used in _otoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8375  23E8  0022               	movlb	2	; select bank2
  8376  23E9  1BE8               	btfsc	(_prec+1)^(0+256),7
  8377  23EA  2BEF               	goto	l680
  8378                           
  8379                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  8380  23EB  30FD               	movlw	253
  8381  23EC  05E9               	andwf	_flags^(0+256),f
  8382  23ED  30FF               	movlw	255
  8383  23EE  05EA               	andwf	(_flags+1)^(0+256),f
  8384  23EF                     l680:	
  8385                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 515:     }
  8386                           
  8387                           
  8388                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  8389  23EF  0868               	movf	(_prec+1)^(0+256),w
  8390  23F0  3A80               	xorlw	128
  8391  23F1  0020               	movlb	0	; select bank0
  8392  23F2  00BA               	movwf	??_otoa
  8393  23F3  3080               	movlw	128
  8394  23F4  023A               	subwf	??_otoa,w
  8395  23F5  1D03               	skipz
  8396  23F6  2BFA               	goto	u8465
  8397  23F7  3001               	movlw	1
  8398  23F8  0022               	movlb	2	; select bank2
  8399  23F9  0267               	subwf	_prec^(0+256),w
  8400  23FA                     u8465:	
  8401  23FA  1803               	skipnc
  8402  23FB  2C02               	goto	l6554
  8403  23FC  3001               	movlw	1
  8404  23FD  0020               	movlb	0	; select bank0
  8405  23FE  00C2               	movwf	otoa@p
  8406  23FF  3000               	movlw	0
  8407  2400  00C3               	movwf	otoa@p+1
  8408  2401  2C0A               	goto	l684
  8409  2402                     l6554:	
  8410  2402  0022               	movlb	2	; select bank2
  8411  2403  0868               	movf	(_prec+1)^(0+256),w
  8412  2404  0020               	movlb	0	; select bank0
  8413  2405  00C3               	movwf	otoa@p+1
  8414  2406  0022               	movlb	2	; select bank2
  8415  2407  0867               	movf	_prec^(0+256),w
  8416  2408  0020               	movlb	0	; select bank0
  8417  2409  00C2               	movwf	otoa@p
  8418  240A                     l684:	
  8419                           
  8420                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  8421  240A  0022               	movlb	2	; select bank2
  8422  240B  0866               	movf	(_width+1)^(0+256),w
  8423  240C  0020               	movlb	0	; select bank0
  8424  240D  00C7               	movwf	otoa@w+1
  8425  240E  0022               	movlb	2	; select bank2
  8426  240F  0865               	movf	_width^(0+256),w
  8427  2410  0020               	movlb	0	; select bank0
  8428  2411  00C6               	movwf	otoa@w
  8429                           
  8430                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  8431  2412  0832               	movf	otoa@d,w
  8432  2413  00C8               	movwf	otoa@n
  8433  2414  0833               	movf	otoa@d+1,w
  8434  2415  00C9               	movwf	otoa@n+1
  8435  2416  0834               	movf	otoa@d+2,w
  8436  2417  00CA               	movwf	otoa@n+2
  8437  2418  0835               	movf	otoa@d+3,w
  8438  2419  00CB               	movwf	otoa@n+3
  8439  241A  0836               	movf	otoa@d+4,w
  8440  241B  00CC               	movwf	otoa@n+4
  8441  241C  0837               	movf	otoa@d+5,w
  8442  241D  00CD               	movwf	otoa@n+5
  8443  241E  0838               	movf	otoa@d+6,w
  8444  241F  00CE               	movwf	otoa@n+6
  8445  2420  0839               	movf	otoa@d+7,w
  8446  2421  00CF               	movwf	otoa@n+7
  8447                           
  8448                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  8449  2422  301F               	movlw	31
  8450  2423  00D0               	movwf	otoa@i
  8451  2424  3000               	movlw	0
  8452  2425  00D1               	movwf	otoa@i+1
  8453                           
  8454                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  8455  2426  0024               	movlb	4	; select bank4
  8456  2427  01BF               	clrf	(_dbuf^(0+512)+31)
  8457                           
  8458                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  8459  2428  0020               	movlb	0	; select bank0
  8460  2429  01C4               	clrf	otoa@t
  8461  242A  01C5               	clrf	otoa@t+1
  8462                           
  8463                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8464  242B  2C9F               	goto	l685
  8465  242C                     l6572:	
  8466  242C  0020               	movlb	0	; select bank0
  8467  242D  0848               	movf	otoa@n,w
  8468  242E  0449               	iorwf	otoa@n+1,w
  8469  242F  044A               	iorwf	otoa@n+2,w
  8470  2430  044B               	iorwf	otoa@n+3,w
  8471  2431  044C               	iorwf	otoa@n+4,w
  8472  2432  044D               	iorwf	otoa@n+5,w
  8473  2433  044E               	iorwf	otoa@n+6,w
  8474  2434  044F               	iorwf	otoa@n+7,w
  8475  2435  1D03               	skipz
  8476  2436  2C51               	goto	l6562
  8477  2437  0843               	movf	otoa@p+1,w
  8478  2438  3A80               	xorlw	128
  8479  2439  00BA               	movwf	??_otoa
  8480  243A  3080               	movlw	128
  8481  243B  023A               	subwf	??_otoa,w
  8482  243C  1D03               	skipz
  8483  243D  2C40               	goto	u8505
  8484  243E  3001               	movlw	1
  8485  243F  0242               	subwf	otoa@p,w
  8486  2440                     u8505:	
  8487  2440  1803               	skipnc
  8488  2441  2C51               	goto	l6562
  8489  2442  0020               	movlb	0	; select bank0
  8490  2443  0847               	movf	otoa@w+1,w
  8491  2444  3A80               	xorlw	128
  8492  2445  00BA               	movwf	??_otoa
  8493  2446  3080               	movlw	128
  8494  2447  023A               	subwf	??_otoa,w
  8495  2448  1D03               	skipz
  8496  2449  2C4C               	goto	u8515
  8497  244A  3001               	movlw	1
  8498  244B  0246               	subwf	otoa@w,w
  8499  244C                     u8515:	
  8500  244C  1C03               	skipc
  8501  244D  2CAA               	goto	l691
  8502  244E  0022               	movlb	2	; select bank2
  8503  244F  1CE9               	btfss	_flags^(0+256),1
  8504  2450  2CAA               	goto	l691
  8505  2451                     l6562:	
  8506                           
  8507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  8508  2451  30FF               	movlw	255
  8509  2452  0020               	movlb	0	; select bank0
  8510  2453  07D0               	addwf	otoa@i,f
  8511  2454  30FF               	movlw	255
  8512  2455  3DD1               	addwfc	otoa@i+1,f
  8513                           
  8514                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  8515  2456  3007               	movlw	7
  8516  2457  0548               	andwf	otoa@n,w
  8517  2458  00C4               	movwf	otoa@t
  8518  2459  3000               	movlw	0
  8519  245A  0549               	andwf	otoa@n+1,w
  8520  245B  00C5               	movwf	otoa@t+1
  8521                           
  8522                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  8523  245C  0844               	movf	otoa@t,w
  8524  245D  3E30               	addlw	48
  8525  245E  00BA               	movwf	??_otoa
  8526  245F  0850               	movf	otoa@i,w
  8527  2460  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8528  2461  0086               	movwf	6
  8529  2462  3002               	movlw	2	; select bank4/5
  8530  2463  0087               	movwf	7
  8531  2464  083A               	movf	??_otoa,w
  8532  2465  0081               	movwf	1
  8533                           
  8534                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  8535  2466  30FF               	movlw	255
  8536  2467  07C2               	addwf	otoa@p,f
  8537  2468  30FF               	movlw	255
  8538  2469  3DC3               	addwfc	otoa@p+1,f
  8539                           
  8540                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  8541  246A  30FF               	movlw	255
  8542  246B  07C6               	addwf	otoa@w,f
  8543  246C  30FF               	movlw	255
  8544  246D  3DC7               	addwfc	otoa@w+1,f
  8545                           
  8546                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  8547  246E  3048               	movlw	low otoa@n
  8548  246F  0086               	movwf	6
  8549  2470  3000               	movlw	high otoa@n
  8550  2471  0087               	movwf	7
  8551  2472  3F40               	moviw [0]fsr1
  8552  2473  00BA               	movwf	??_otoa
  8553  2474  3F41               	moviw [1]fsr1
  8554  2475  00BB               	movwf	??_otoa+1
  8555  2476  3F42               	moviw [2]fsr1
  8556  2477  00BC               	movwf	??_otoa+2
  8557  2478  3F43               	moviw [3]fsr1
  8558  2479  00BD               	movwf	??_otoa+3
  8559  247A  3F44               	moviw [4]fsr1
  8560  247B  00BE               	movwf	??_otoa+4
  8561  247C  3F45               	moviw [5]fsr1
  8562  247D  00BF               	movwf	??_otoa+5
  8563  247E  3F46               	moviw [6]fsr1
  8564  247F  00C0               	movwf	??_otoa+6
  8565  2480  3F47               	moviw [7]fsr1
  8566  2481  00C1               	movwf	??_otoa+7
  8567  2482  3003               	movlw	3
  8568  2483                     u8475:	
  8569  2483  0020               	movlb	0	; select bank0
  8570  2484  36C1               	lsrf	??_otoa+7,f
  8571  2485  0CC0               	rrf	??_otoa+6,f
  8572  2486  0CBF               	rrf	??_otoa+5,f
  8573  2487  0CBE               	rrf	??_otoa+4,f
  8574  2488  0CBD               	rrf	??_otoa+3,f
  8575  2489  0CBC               	rrf	??_otoa+2,f
  8576  248A  0CBB               	rrf	??_otoa+1,f
  8577  248B  0CBA               	rrf	??_otoa,f
  8578  248C  0B89               	decfsz	9,f
  8579  248D  2C83               	goto	u8475
  8580  248E  0020               	movlb	0	; select bank0
  8581  248F  0841               	movf	??_otoa+7,w
  8582  2490  00CF               	movwf	otoa@n+7
  8583  2491  0840               	movf	??_otoa+6,w
  8584  2492  00CE               	movwf	otoa@n+6
  8585  2493  083F               	movf	??_otoa+5,w
  8586  2494  00CD               	movwf	otoa@n+5
  8587  2495  083E               	movf	??_otoa+4,w
  8588  2496  00CC               	movwf	otoa@n+4
  8589  2497  083D               	movf	??_otoa+3,w
  8590  2498  00CB               	movwf	otoa@n+3
  8591  2499  083C               	movf	??_otoa+2,w
  8592  249A  00CA               	movwf	otoa@n+2
  8593  249B  083B               	movf	??_otoa+1,w
  8594  249C  00C9               	movwf	otoa@n+1
  8595  249D  083A               	movf	??_otoa,w
  8596  249E  00C8               	movwf	otoa@n
  8597  249F                     l685:	
  8598                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 531:     }
  8599                           
  8600                           
  8601                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8602  249F  0851               	movf	otoa@i+1,w
  8603  24A0  3A80               	xorlw	128
  8604  24A1  00BA               	movwf	??_otoa
  8605  24A2  3080               	movlw	128
  8606  24A3  023A               	subwf	??_otoa,w
  8607  24A4  1D03               	skipz
  8608  24A5  2CA8               	goto	u8485
  8609  24A6  3001               	movlw	1
  8610  24A7  0250               	subwf	otoa@i,w
  8611  24A8                     u8485:	
  8612  24A8  1803               	btfsc	3,0
  8613  24A9  2C2C               	goto	l6572
  8614  24AA                     l691:	
  8615                           
  8616                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  8617  24AA  0022               	movlb	2	; select bank2
  8618  24AB  1E69               	btfss	_flags^(0+256),4
  8619  24AC  2CC3               	goto	l6588
  8620  24AD  0020               	movlb	0	; select bank0
  8621  24AE  0844               	movf	otoa@t,w
  8622  24AF  0445               	iorwf	otoa@t+1,w
  8623  24B0  1903               	btfsc	3,2
  8624  24B1  2CC3               	goto	l6588
  8625                           
  8626                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  8627  24B2  30FF               	movlw	255
  8628  24B3  07D0               	addwf	otoa@i,f
  8629  24B4  30FF               	movlw	255
  8630  24B5  3DD1               	addwfc	otoa@i+1,f
  8631                           
  8632                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  8633  24B6  3030               	movlw	48
  8634  24B7  00BA               	movwf	??_otoa
  8635  24B8  0850               	movf	otoa@i,w
  8636  24B9  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8637  24BA  0086               	movwf	6
  8638  24BB  3002               	movlw	2	; select bank4/5
  8639  24BC  0087               	movwf	7
  8640  24BD  083A               	movf	??_otoa,w
  8641  24BE  0081               	movwf	1
  8642                           
  8643                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  8644  24BF  30FF               	movlw	255
  8645  24C0  07C6               	addwf	otoa@w,f
  8646  24C1  30FF               	movlw	255
  8647  24C2  3DC7               	addwfc	otoa@w+1,f
  8648  24C3                     l6588:	
  8649                           
  8650                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  8651  24C3  0020               	movlb	0	; select bank0
  8652  24C4  0831               	movf	otoa@fp+1,w
  8653  24C5  00A7               	movwf	pad@fp+1
  8654  24C6  0830               	movf	otoa@fp,w
  8655  24C7  00A6               	movwf	pad@fp
  8656  24C8  0850               	movf	otoa@i,w
  8657  24C9  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8658  24CA  00BA               	movwf	??_otoa
  8659  24CB  083A               	movf	??_otoa,w
  8660  24CC  00A8               	movwf	pad@buf
  8661  24CD  0847               	movf	otoa@w+1,w
  8662  24CE  00AA               	movwf	pad@p+1
  8663  24CF  0846               	movf	otoa@w,w
  8664  24D0  00A9               	movwf	pad@p
  8665  24D1  31B7  27AF         	fcall	_pad
  8666  24D3  0020               	movlb	0	; select bank0
  8667  24D4  0827               	movf	?_pad+1,w
  8668  24D5  00B1               	movwf	?_otoa+1
  8669  24D6  0826               	movf	?_pad,w
  8670  24D7  00B0               	movwf	?_otoa
  8671  24D8  0008               	return
  8672  24D9                     __end_of_otoa:	
  8673                           
  8674                           	psect	text19
  8675  1A36                     __ptext19:	
  8676 ;; *************** function _dtoa *****************
  8677 ;; Defined at:
  8678 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8679 ;; Parameters:    Size  Location     Type
  8680 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  8681 ;;		 -> vsnprintf@f(6), 
  8682 ;;  d               8   18[BANK0 ] long long 
  8683 ;; Auto vars:     Size  Location     Type
  8684 ;;  n               8   37[BANK0 ] long long 
  8685 ;;  i               2   45[BANK0 ] int 
  8686 ;;  s               2   35[BANK0 ] int 
  8687 ;;  w               2   33[BANK0 ] int 
  8688 ;;  p               2   31[BANK0 ] int 
  8689 ;; Return value:  Size  Location     Type
  8690 ;;                  2   16[BANK0 ] int 
  8691 ;; Registers used:
  8692 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8693 ;; Tracked objects:
  8694 ;;		On entry : 0/0
  8695 ;;		On exit  : 0/0
  8696 ;;		Unchanged: 0/0
  8697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8698 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8699 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8700 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8701 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8702 ;;Total ram usage:       31 bytes
  8703 ;; Hardware stack levels used:    1
  8704 ;; Hardware stack levels required when called:    5
  8705 ;; This function calls:
  8706 ;;		___aodiv
  8707 ;;		___aomod
  8708 ;;		_abs
  8709 ;;		_pad
  8710 ;; This function is called by:
  8711 ;;		_vfpfcnvrt
  8712 ;; This function uses a non-reentrant model
  8713 ;;
  8714                           
  8715                           
  8716                           ;psect for function _dtoa
  8717  1A36                     _dtoa:	
  8718                           
  8719                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  8720                           
  8721                           ;incstack = 0
  8722                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8723  1A36  0020               	movlb	0	; select bank0
  8724  1A37  0832               	movf	dtoa@d,w
  8725  1A38  00C5               	movwf	dtoa@n
  8726  1A39  0833               	movf	dtoa@d+1,w
  8727  1A3A  00C6               	movwf	dtoa@n+1
  8728  1A3B  0834               	movf	dtoa@d+2,w
  8729  1A3C  00C7               	movwf	dtoa@n+2
  8730  1A3D  0835               	movf	dtoa@d+3,w
  8731  1A3E  00C8               	movwf	dtoa@n+3
  8732  1A3F  0836               	movf	dtoa@d+4,w
  8733  1A40  00C9               	movwf	dtoa@n+4
  8734  1A41  0837               	movf	dtoa@d+5,w
  8735  1A42  00CA               	movwf	dtoa@n+5
  8736  1A43  0838               	movf	dtoa@d+6,w
  8737  1A44  00CB               	movwf	dtoa@n+6
  8738  1A45  0839               	movf	dtoa@d+7,w
  8739  1A46  00CC               	movwf	dtoa@n+7
  8740                           
  8741                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  8742  1A47  3045               	movlw	low dtoa@n
  8743  1A48  0086               	movwf	6
  8744  1A49  3000               	movlw	high dtoa@n
  8745  1A4A  0087               	movwf	7
  8746  1A4B  3F47               	moviw [7]fsr1
  8747  1A4C  00BA               	movwf	??_dtoa
  8748  1A4D  1FBA               	btfss	??_dtoa,7
  8749  1A4E  2A51               	goto	u8290
  8750  1A4F  3001               	movlw	1
  8751  1A50  2A52               	goto	u8300
  8752  1A51                     u8290:	
  8753  1A51  3000               	movlw	0
  8754  1A52                     u8300:	
  8755  1A52  0020               	movlb	0	; select bank0
  8756  1A53  00BB               	movwf	??_dtoa+1
  8757  1A54  01BC               	clrf	??_dtoa+2
  8758  1A55  083B               	movf	??_dtoa+1,w
  8759  1A56  00C3               	movwf	dtoa@s
  8760  1A57  083C               	movf	??_dtoa+2,w
  8761  1A58  00C4               	movwf	dtoa@s+1
  8762                           
  8763                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  8764  1A59  0843               	movf	dtoa@s,w
  8765  1A5A  0444               	iorwf	dtoa@s+1,w
  8766  1A5B  1903               	btfsc	3,2
  8767  1A5C  2A7B               	goto	l654
  8768                           
  8769                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  8770  1A5D  09C5               	comf	dtoa@n,f
  8771  1A5E  09C6               	comf	dtoa@n+1,f
  8772  1A5F  09C7               	comf	dtoa@n+2,f
  8773  1A60  09C8               	comf	dtoa@n+3,f
  8774  1A61  09C9               	comf	dtoa@n+4,f
  8775  1A62  09CA               	comf	dtoa@n+5,f
  8776  1A63  09CB               	comf	dtoa@n+6,f
  8777  1A64  09CC               	comf	dtoa@n+7,f
  8778  1A65  0AC5               	incf	dtoa@n,f
  8779  1A66  1D03               	skipz
  8780  1A67  2A7B               	goto	l654
  8781  1A68  0AC6               	incf	dtoa@n+1,f
  8782  1A69  1D03               	skipz
  8783  1A6A  2A7B               	goto	l654
  8784  1A6B  0AC7               	incf	dtoa@n+2,f
  8785  1A6C  1D03               	skipz
  8786  1A6D  2A7B               	goto	l654
  8787  1A6E  0AC8               	incf	dtoa@n+3,f
  8788  1A6F  1D03               	skipz
  8789  1A70  2A7B               	goto	l654
  8790  1A71  0AC9               	incf	dtoa@n+4,f
  8791  1A72  1D03               	skipz
  8792  1A73  2A7B               	goto	l654
  8793  1A74  0ACA               	incf	dtoa@n+5,f
  8794  1A75  1D03               	skipz
  8795  1A76  2A7B               	goto	l654
  8796  1A77  0ACB               	incf	dtoa@n+6,f
  8797  1A78  1D03               	skipz
  8798  1A79  2A7B               	goto	l654
  8799  1A7A  0ACC               	incf	dtoa@n+7,f
  8800  1A7B                     l654:	
  8801                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
  8802                           
  8803                           
  8804                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  8805  1A7B  0022               	movlb	2	; select bank2
  8806  1A7C  1BE8               	btfsc	(_prec+1)^(0+256),7
  8807  1A7D  2A82               	goto	l655
  8808                           
  8809                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  8810  1A7E  30FD               	movlw	253
  8811  1A7F  05E9               	andwf	_flags^(0+256),f
  8812  1A80  30FF               	movlw	255
  8813  1A81  05EA               	andwf	(_flags+1)^(0+256),f
  8814  1A82                     l655:	
  8815                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
  8816                           
  8817                           
  8818                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  8819  1A82  0868               	movf	(_prec+1)^(0+256),w
  8820  1A83  3A80               	xorlw	128
  8821  1A84  0020               	movlb	0	; select bank0
  8822  1A85  00BA               	movwf	??_dtoa
  8823  1A86  3080               	movlw	128
  8824  1A87  023A               	subwf	??_dtoa,w
  8825  1A88  1D03               	skipz
  8826  1A89  2A8D               	goto	u8345
  8827  1A8A  3001               	movlw	1
  8828  1A8B  0022               	movlb	2	; select bank2
  8829  1A8C  0267               	subwf	_prec^(0+256),w
  8830  1A8D                     u8345:	
  8831  1A8D  1803               	skipnc
  8832  1A8E  2A95               	goto	l6502
  8833  1A8F  3001               	movlw	1
  8834  1A90  0020               	movlb	0	; select bank0
  8835  1A91  00BF               	movwf	dtoa@p
  8836  1A92  3000               	movlw	0
  8837  1A93  00C0               	movwf	dtoa@p+1
  8838  1A94  2A9D               	goto	l659
  8839  1A95                     l6502:	
  8840  1A95  0022               	movlb	2	; select bank2
  8841  1A96  0868               	movf	(_prec+1)^(0+256),w
  8842  1A97  0020               	movlb	0	; select bank0
  8843  1A98  00C0               	movwf	dtoa@p+1
  8844  1A99  0022               	movlb	2	; select bank2
  8845  1A9A  0867               	movf	_prec^(0+256),w
  8846  1A9B  0020               	movlb	0	; select bank0
  8847  1A9C  00BF               	movwf	dtoa@p
  8848  1A9D                     l659:	
  8849                           
  8850                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  8851  1A9D  0022               	movlb	2	; select bank2
  8852  1A9E  0866               	movf	(_width+1)^(0+256),w
  8853  1A9F  0020               	movlb	0	; select bank0
  8854  1AA0  00C2               	movwf	dtoa@w+1
  8855  1AA1  0022               	movlb	2	; select bank2
  8856  1AA2  0865               	movf	_width^(0+256),w
  8857  1AA3  0020               	movlb	0	; select bank0
  8858  1AA4  00C1               	movwf	dtoa@w
  8859                           
  8860                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  8861  1AA5  0843               	movf	dtoa@s,w
  8862  1AA6  0444               	iorwf	dtoa@s+1,w
  8863  1AA7  1D03               	btfss	3,2
  8864  1AA8  2AAC               	goto	l6508
  8865  1AA9  0022               	movlb	2	; select bank2
  8866  1AAA  1D69               	btfss	_flags^(0+256),2
  8867  1AAB  2AB1               	goto	l660
  8868  1AAC                     l6508:	
  8869                           
  8870                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  8871  1AAC  30FF               	movlw	255
  8872  1AAD  0020               	movlb	0	; select bank0
  8873  1AAE  07C1               	addwf	dtoa@w,f
  8874  1AAF  30FF               	movlw	255
  8875  1AB0  3DC2               	addwfc	dtoa@w+1,f
  8876  1AB1                     l660:	
  8877                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
  8878                           
  8879                           
  8880                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  8881  1AB1  301F               	movlw	31
  8882  1AB2  0020               	movlb	0	; select bank0
  8883  1AB3  00CD               	movwf	dtoa@i
  8884  1AB4  3000               	movlw	0
  8885  1AB5  00CE               	movwf	dtoa@i+1
  8886                           
  8887                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  8888  1AB6  0024               	movlb	4	; select bank4
  8889  1AB7  01BF               	clrf	(_dbuf^(0+512)+31)
  8890                           
  8891                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8892  1AB8  2B47               	goto	l663
  8893  1AB9                     l6522:	
  8894  1AB9  0020               	movlb	0	; select bank0
  8895  1ABA  0845               	movf	dtoa@n,w
  8896  1ABB  0446               	iorwf	dtoa@n+1,w
  8897  1ABC  0447               	iorwf	dtoa@n+2,w
  8898  1ABD  0448               	iorwf	dtoa@n+3,w
  8899  1ABE  0449               	iorwf	dtoa@n+4,w
  8900  1ABF  044A               	iorwf	dtoa@n+5,w
  8901  1AC0  044B               	iorwf	dtoa@n+6,w
  8902  1AC1  044C               	iorwf	dtoa@n+7,w
  8903  1AC2  1D03               	skipz
  8904  1AC3  2ADE               	goto	l6512
  8905  1AC4  0840               	movf	dtoa@p+1,w
  8906  1AC5  3A80               	xorlw	128
  8907  1AC6  00BA               	movwf	??_dtoa
  8908  1AC7  3080               	movlw	128
  8909  1AC8  023A               	subwf	??_dtoa,w
  8910  1AC9  1D03               	skipz
  8911  1ACA  2ACD               	goto	u8395
  8912  1ACB  3001               	movlw	1
  8913  1ACC  023F               	subwf	dtoa@p,w
  8914  1ACD                     u8395:	
  8915  1ACD  1803               	skipnc
  8916  1ACE  2ADE               	goto	l6512
  8917  1ACF  0020               	movlb	0	; select bank0
  8918  1AD0  0842               	movf	dtoa@w+1,w
  8919  1AD1  3A80               	xorlw	128
  8920  1AD2  00BA               	movwf	??_dtoa
  8921  1AD3  3080               	movlw	128
  8922  1AD4  023A               	subwf	??_dtoa,w
  8923  1AD5  1D03               	skipz
  8924  1AD6  2AD9               	goto	u8405
  8925  1AD7  3001               	movlw	1
  8926  1AD8  0241               	subwf	dtoa@w,w
  8927  1AD9                     u8405:	
  8928  1AD9  1C03               	skipc
  8929  1ADA  2B53               	goto	l6530
  8930  1ADB  0022               	movlb	2	; select bank2
  8931  1ADC  1CE9               	btfss	_flags^(0+256),1
  8932  1ADD  2B53               	goto	l6530
  8933  1ADE                     l6512:	
  8934                           
  8935                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  8936  1ADE  30FF               	movlw	255
  8937  1ADF  0020               	movlb	0	; select bank0
  8938  1AE0  07CD               	addwf	dtoa@i,f
  8939  1AE1  30FF               	movlw	255
  8940  1AE2  3DCE               	addwfc	dtoa@i+1,f
  8941                           
  8942                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  8943  1AE3  300A               	movlw	10
  8944  1AE4  00A0               	movwf	___aomod@divisor
  8945  1AE5  01A1               	clrf	___aomod@divisor+1
  8946  1AE6  01A2               	clrf	___aomod@divisor+2
  8947  1AE7  01A3               	clrf	___aomod@divisor+3
  8948  1AE8  01A4               	clrf	___aomod@divisor+4
  8949  1AE9  01A5               	clrf	___aomod@divisor+5
  8950  1AEA  01A6               	clrf	___aomod@divisor+6
  8951  1AEB  01A7               	clrf	___aomod@divisor+7
  8952  1AEC  0845               	movf	dtoa@n,w
  8953  1AED  00A8               	movwf	___aomod@dividend
  8954  1AEE  0846               	movf	dtoa@n+1,w
  8955  1AEF  00A9               	movwf	___aomod@dividend+1
  8956  1AF0  0847               	movf	dtoa@n+2,w
  8957  1AF1  00AA               	movwf	___aomod@dividend+2
  8958  1AF2  0848               	movf	dtoa@n+3,w
  8959  1AF3  00AB               	movwf	___aomod@dividend+3
  8960  1AF4  0849               	movf	dtoa@n+4,w
  8961  1AF5  00AC               	movwf	___aomod@dividend+4
  8962  1AF6  084A               	movf	dtoa@n+5,w
  8963  1AF7  00AD               	movwf	___aomod@dividend+5
  8964  1AF8  084B               	movf	dtoa@n+6,w
  8965  1AF9  00AE               	movwf	___aomod@dividend+6
  8966  1AFA  084C               	movf	dtoa@n+7,w
  8967  1AFB  00AF               	movwf	___aomod@dividend+7
  8968  1AFC  31A2  222B  319A   	fcall	___aomod
  8969  1AFF  0020               	movlb	0	; select bank0
  8970  1B00  0821               	movf	?___aomod+1,w
  8971  1B01  00F5               	movwf	abs@a+1
  8972  1B02  0820               	movf	?___aomod,w
  8973  1B03  00F4               	movwf	abs@a
  8974  1B04  31B4  246B  319A   	fcall	_abs
  8975  1B07  0874               	movf	?_abs,w
  8976  1B08  3E30               	addlw	48
  8977  1B09  0020               	movlb	0	; select bank0
  8978  1B0A  00BA               	movwf	??_dtoa
  8979  1B0B  084D               	movf	dtoa@i,w
  8980  1B0C  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8981  1B0D  0086               	movwf	6
  8982  1B0E  3002               	movlw	2	; select bank4/5
  8983  1B0F  0087               	movwf	7
  8984  1B10  083A               	movf	??_dtoa,w
  8985  1B11  0081               	movwf	1
  8986                           
  8987                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  8988  1B12  30FF               	movlw	255
  8989  1B13  07BF               	addwf	dtoa@p,f
  8990  1B14  30FF               	movlw	255
  8991  1B15  3DC0               	addwfc	dtoa@p+1,f
  8992                           
  8993                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  8994  1B16  30FF               	movlw	255
  8995  1B17  07C1               	addwf	dtoa@w,f
  8996  1B18  30FF               	movlw	255
  8997  1B19  3DC2               	addwfc	dtoa@w+1,f
  8998                           
  8999                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  9000  1B1A  300A               	movlw	10
  9001  1B1B  00A0               	movwf	___aodiv@divisor
  9002  1B1C  01A1               	clrf	___aodiv@divisor+1
  9003  1B1D  01A2               	clrf	___aodiv@divisor+2
  9004  1B1E  01A3               	clrf	___aodiv@divisor+3
  9005  1B1F  01A4               	clrf	___aodiv@divisor+4
  9006  1B20  01A5               	clrf	___aodiv@divisor+5
  9007  1B21  01A6               	clrf	___aodiv@divisor+6
  9008  1B22  01A7               	clrf	___aodiv@divisor+7
  9009  1B23  0845               	movf	dtoa@n,w
  9010  1B24  00A8               	movwf	___aodiv@dividend
  9011  1B25  0846               	movf	dtoa@n+1,w
  9012  1B26  00A9               	movwf	___aodiv@dividend+1
  9013  1B27  0847               	movf	dtoa@n+2,w
  9014  1B28  00AA               	movwf	___aodiv@dividend+2
  9015  1B29  0848               	movf	dtoa@n+3,w
  9016  1B2A  00AB               	movwf	___aodiv@dividend+3
  9017  1B2B  0849               	movf	dtoa@n+4,w
  9018  1B2C  00AC               	movwf	___aodiv@dividend+4
  9019  1B2D  084A               	movf	dtoa@n+5,w
  9020  1B2E  00AD               	movwf	___aodiv@dividend+5
  9021  1B2F  084B               	movf	dtoa@n+6,w
  9022  1B30  00AE               	movwf	___aodiv@dividend+6
  9023  1B31  084C               	movf	dtoa@n+7,w
  9024  1B32  00AF               	movwf	___aodiv@dividend+7
  9025  1B33  3198  2002  319A   	fcall	___aodiv
  9026  1B36  0020               	movlb	0	; select bank0
  9027  1B37  0820               	movf	?___aodiv,w
  9028  1B38  00C5               	movwf	dtoa@n
  9029  1B39  0821               	movf	?___aodiv+1,w
  9030  1B3A  00C6               	movwf	dtoa@n+1
  9031  1B3B  0822               	movf	?___aodiv+2,w
  9032  1B3C  00C7               	movwf	dtoa@n+2
  9033  1B3D  0823               	movf	?___aodiv+3,w
  9034  1B3E  00C8               	movwf	dtoa@n+3
  9035  1B3F  0824               	movf	?___aodiv+4,w
  9036  1B40  00C9               	movwf	dtoa@n+4
  9037  1B41  0825               	movf	?___aodiv+5,w
  9038  1B42  00CA               	movwf	dtoa@n+5
  9039  1B43  0826               	movf	?___aodiv+6,w
  9040  1B44  00CB               	movwf	dtoa@n+6
  9041  1B45  0827               	movf	?___aodiv+7,w
  9042  1B46  00CC               	movwf	dtoa@n+7
  9043  1B47                     l663:	
  9044                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
  9045                           
  9046                           
  9047                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9048  1B47  0020               	movlb	0	; select bank0
  9049  1B48  084E               	movf	dtoa@i+1,w
  9050  1B49  3A80               	xorlw	128
  9051  1B4A  00BA               	movwf	??_dtoa
  9052  1B4B  3080               	movlw	128
  9053  1B4C  023A               	subwf	??_dtoa,w
  9054  1B4D  1D03               	skipz
  9055  1B4E  2B51               	goto	u8375
  9056  1B4F  3001               	movlw	1
  9057  1B50  024D               	subwf	dtoa@i,w
  9058  1B51                     u8375:	
  9059  1B51  1803               	btfsc	3,0
  9060  1B52  2AB9               	goto	l6522
  9061  1B53                     l6530:	
  9062                           
  9063                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  9064  1B53  0020               	movlb	0	; select bank0
  9065  1B54  0843               	movf	dtoa@s,w
  9066  1B55  0444               	iorwf	dtoa@s+1,w
  9067  1B56  1D03               	btfss	3,2
  9068  1B57  2B5B               	goto	l6534
  9069  1B58  0022               	movlb	2	; select bank2
  9070  1B59  1D69               	btfss	_flags^(0+256),2
  9071  1B5A  2B73               	goto	l6544
  9072  1B5B                     l6534:	
  9073                           
  9074                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  9075  1B5B  30FF               	movlw	255
  9076  1B5C  0020               	movlb	0	; select bank0
  9077  1B5D  07CD               	addwf	dtoa@i,f
  9078  1B5E  30FF               	movlw	255
  9079  1B5F  3DCE               	addwfc	dtoa@i+1,f
  9080                           
  9081                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  9082  1B60  0843               	movf	dtoa@s,w
  9083  1B61  0444               	iorwf	dtoa@s+1,w
  9084  1B62  1D03               	btfss	3,2
  9085  1B63  2B66               	goto	l6540
  9086  1B64  302B               	movlw	43
  9087  1B65  2B67               	goto	L2
  9088  1B66                     l6540:	
  9089  1B66  302D               	movlw	45
  9090  1B67                     L2:	
  9091  1B67  00BD               	movwf	_dtoa$1200
  9092  1B68  3000               	movlw	0
  9093  1B69  00BE               	movwf	_dtoa$1200+1
  9094  1B6A  083D               	movf	_dtoa$1200,w
  9095  1B6B  00BA               	movwf	??_dtoa
  9096  1B6C  084D               	movf	dtoa@i,w
  9097  1B6D  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9098  1B6E  0086               	movwf	6
  9099  1B6F  3002               	movlw	2	; select bank4/5
  9100  1B70  0087               	movwf	7
  9101  1B71  083A               	movf	??_dtoa,w
  9102  1B72  0081               	movwf	1
  9103  1B73                     l6544:	
  9104                           
  9105                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  9106  1B73  0020               	movlb	0	; select bank0
  9107  1B74  0831               	movf	dtoa@fp+1,w
  9108  1B75  00A7               	movwf	pad@fp+1
  9109  1B76  0830               	movf	dtoa@fp,w
  9110  1B77  00A6               	movwf	pad@fp
  9111  1B78  084D               	movf	dtoa@i,w
  9112  1B79  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9113  1B7A  00BA               	movwf	??_dtoa
  9114  1B7B  083A               	movf	??_dtoa,w
  9115  1B7C  00A8               	movwf	pad@buf
  9116  1B7D  0842               	movf	dtoa@w+1,w
  9117  1B7E  00AA               	movwf	pad@p+1
  9118  1B7F  0841               	movf	dtoa@w,w
  9119  1B80  00A9               	movwf	pad@p
  9120  1B81  31B7  27AF         	fcall	_pad
  9121  1B83  0020               	movlb	0	; select bank0
  9122  1B84  0827               	movf	?_pad+1,w
  9123  1B85  00B1               	movwf	?_dtoa+1
  9124  1B86  0826               	movf	?_pad,w
  9125  1B87  00B0               	movwf	?_dtoa
  9126  1B88  0008               	return
  9127  1B89                     __end_of_dtoa:	
  9128                           
  9129                           	psect	text20
  9130  346B                     __ptext20:	
  9131 ;; *************** function _abs *****************
  9132 ;; Defined at:
  9133 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  9134 ;; Parameters:    Size  Location     Type
  9135 ;;  a               2    4[COMMON] int 
  9136 ;; Auto vars:     Size  Location     Type
  9137 ;;		None
  9138 ;; Return value:  Size  Location     Type
  9139 ;;                  2    4[COMMON] int 
  9140 ;; Registers used:
  9141 ;;		wreg, status,2, status,0
  9142 ;; Tracked objects:
  9143 ;;		On entry : 0/0
  9144 ;;		On exit  : 0/0
  9145 ;;		Unchanged: 0/0
  9146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9147 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9149 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9150 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9151 ;;Total ram usage:        4 bytes
  9152 ;; Hardware stack levels used:    1
  9153 ;; Hardware stack levels required when called:    1
  9154 ;; This function calls:
  9155 ;;		Nothing
  9156 ;; This function is called by:
  9157 ;;		_dtoa
  9158 ;; This function uses a non-reentrant model
  9159 ;;
  9160                           
  9161                           
  9162                           ;psect for function _abs
  9163  346B                     _abs:	
  9164                           
  9165                           ;incstack = 0
  9166                           ; Regs used in _abs: [wreg+status,2+status,0]
  9167  346B  0875               	movf	abs@a+1,w
  9168  346C  3A80               	xorlw	128
  9169  346D  00F6               	movwf	??_abs
  9170  346E  3080               	movlw	128
  9171  346F  0276               	subwf	??_abs,w
  9172  3470  1D03               	skipz
  9173  3471  2C74               	goto	u7825
  9174  3472  3001               	movlw	1
  9175  3473  0274               	subwf	abs@a,w
  9176  3474                     u7825:	
  9177  3474  1803               	skipnc
  9178  3475  0008               	return
  9179  3476  0974               	comf	abs@a,w
  9180  3477  00F6               	movwf	??_abs
  9181  3478  0975               	comf	abs@a+1,w
  9182  3479  00F7               	movwf	??_abs+1
  9183  347A  0AF6               	incf	??_abs,f
  9184  347B  1903               	skipnz
  9185  347C  0AF7               	incf	??_abs+1,f
  9186  347D  0876               	movf	??_abs,w
  9187  347E  00F4               	movwf	?_abs
  9188  347F  0877               	movf	??_abs+1,w
  9189  3480  00F5               	movwf	?_abs+1
  9190  3481  0008               	return
  9191  3482                     __end_of_abs:	
  9192                           
  9193                           	psect	text21
  9194  222B                     __ptext21:	
  9195 ;; *************** function ___aomod *****************
  9196 ;; Defined at:
  9197 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  9198 ;; Parameters:    Size  Location     Type
  9199 ;;  divisor         8    0[BANK0 ] long long 
  9200 ;;  dividend        8    8[BANK0 ] long long 
  9201 ;; Auto vars:     Size  Location     Type
  9202 ;;  sign            1    3[COMMON] unsigned char 
  9203 ;;  counter         1    2[COMMON] unsigned char 
  9204 ;; Return value:  Size  Location     Type
  9205 ;;                  8    0[BANK0 ] long long 
  9206 ;; Registers used:
  9207 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9208 ;; Tracked objects:
  9209 ;;		On entry : 0/0
  9210 ;;		On exit  : 0/0
  9211 ;;		Unchanged: 0/0
  9212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9213 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9214 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9215 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9216 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9217 ;;Total ram usage:       19 bytes
  9218 ;; Hardware stack levels used:    1
  9219 ;; Hardware stack levels required when called:    1
  9220 ;; This function calls:
  9221 ;;		Nothing
  9222 ;; This function is called by:
  9223 ;;		_dtoa
  9224 ;; This function uses a non-reentrant model
  9225 ;;
  9226                           
  9227                           
  9228                           ;psect for function ___aomod
  9229  222B                     ___aomod:	
  9230                           
  9231                           ;incstack = 0
  9232                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  9233  222B  01F3               	clrf	___aomod@sign
  9234  222C  3028               	movlw	low ___aomod@dividend
  9235  222D  0086               	movwf	6
  9236  222E  3000               	movlw	high ___aomod@dividend
  9237  222F  0087               	movwf	7
  9238  2230  3F47               	moviw [7]fsr1
  9239  2231  00F1               	movwf	??___aomod
  9240  2232  1FF1               	btfss	??___aomod,7
  9241  2233  2A55               	goto	l6402
  9242  2234  0020               	movlb	0	; select bank0
  9243  2235  09A8               	comf	___aomod@dividend,f
  9244  2236  09A9               	comf	___aomod@dividend+1,f
  9245  2237  09AA               	comf	___aomod@dividend+2,f
  9246  2238  09AB               	comf	___aomod@dividend+3,f
  9247  2239  09AC               	comf	___aomod@dividend+4,f
  9248  223A  09AD               	comf	___aomod@dividend+5,f
  9249  223B  09AE               	comf	___aomod@dividend+6,f
  9250  223C  09AF               	comf	___aomod@dividend+7,f
  9251  223D  0AA8               	incf	___aomod@dividend,f
  9252  223E  1D03               	skipz
  9253  223F  2A53               	goto	u808lld
  9254  2240  0AA9               	incf	___aomod@dividend+1,f
  9255  2241  1D03               	skipz
  9256  2242  2A53               	goto	u808lld
  9257  2243  0AAA               	incf	___aomod@dividend+2,f
  9258  2244  1D03               	skipz
  9259  2245  2A53               	goto	u808lld
  9260  2246  0AAB               	incf	___aomod@dividend+3,f
  9261  2247  1D03               	skipz
  9262  2248  2A53               	goto	u808lld
  9263  2249  0AAC               	incf	___aomod@dividend+4,f
  9264  224A  1D03               	skipz
  9265  224B  2A53               	goto	u808lld
  9266  224C  0AAD               	incf	___aomod@dividend+5,f
  9267  224D  1D03               	skipz
  9268  224E  2A53               	goto	u808lld
  9269  224F  0AAE               	incf	___aomod@dividend+6,f
  9270  2250  1D03               	skipz
  9271  2251  2A53               	goto	u808lld
  9272  2252  0AAF               	incf	___aomod@dividend+7,f
  9273  2253                     u808lld:	
  9274  2253  01F3               	clrf	___aomod@sign
  9275  2254  0AF3               	incf	___aomod@sign,f
  9276  2255                     l6402:	
  9277  2255  3020               	movlw	low ___aomod@divisor
  9278  2256  0086               	movwf	6
  9279  2257  3000               	movlw	high ___aomod@divisor
  9280  2258  0087               	movwf	7
  9281  2259  3F47               	moviw [7]fsr1
  9282  225A  00F1               	movwf	??___aomod
  9283  225B  1FF1               	btfss	??___aomod,7
  9284  225C  2A7C               	goto	l6406
  9285  225D  0020               	movlb	0	; select bank0
  9286  225E  09A0               	comf	___aomod@divisor,f
  9287  225F  09A1               	comf	___aomod@divisor+1,f
  9288  2260  09A2               	comf	___aomod@divisor+2,f
  9289  2261  09A3               	comf	___aomod@divisor+3,f
  9290  2262  09A4               	comf	___aomod@divisor+4,f
  9291  2263  09A5               	comf	___aomod@divisor+5,f
  9292  2264  09A6               	comf	___aomod@divisor+6,f
  9293  2265  09A7               	comf	___aomod@divisor+7,f
  9294  2266  0AA0               	incf	___aomod@divisor,f
  9295  2267  1D03               	skipz
  9296  2268  2A7C               	goto	l6406
  9297  2269  0AA1               	incf	___aomod@divisor+1,f
  9298  226A  1D03               	skipz
  9299  226B  2A7C               	goto	l6406
  9300  226C  0AA2               	incf	___aomod@divisor+2,f
  9301  226D  1D03               	skipz
  9302  226E  2A7C               	goto	l6406
  9303  226F  0AA3               	incf	___aomod@divisor+3,f
  9304  2270  1D03               	skipz
  9305  2271  2A7C               	goto	l6406
  9306  2272  0AA4               	incf	___aomod@divisor+4,f
  9307  2273  1D03               	skipz
  9308  2274  2A7C               	goto	l6406
  9309  2275  0AA5               	incf	___aomod@divisor+5,f
  9310  2276  1D03               	skipz
  9311  2277  2A7C               	goto	l6406
  9312  2278  0AA6               	incf	___aomod@divisor+6,f
  9313  2279  1D03               	skipz
  9314  227A  2A7C               	goto	l6406
  9315  227B  0AA7               	incf	___aomod@divisor+7,f
  9316  227C                     l6406:	
  9317  227C  0020               	movlb	0	; select bank0
  9318  227D  0820               	movf	___aomod@divisor,w
  9319  227E  0421               	iorwf	___aomod@divisor+1,w
  9320  227F  0422               	iorwf	___aomod@divisor+2,w
  9321  2280  0423               	iorwf	___aomod@divisor+3,w
  9322  2281  0424               	iorwf	___aomod@divisor+4,w
  9323  2282  0425               	iorwf	___aomod@divisor+5,w
  9324  2283  0426               	iorwf	___aomod@divisor+6,w
  9325  2284  0427               	iorwf	___aomod@divisor+7,w
  9326  2285  1903               	skipnz
  9327  2286  2AD4               	goto	l6422
  9328  2287  01F2               	clrf	___aomod@counter
  9329  2288  0AF2               	incf	___aomod@counter,f
  9330  2289                     l6414:	
  9331  2289  1BA7               	btfsc	___aomod@divisor+7,7
  9332  228A  2A98               	goto	l6416
  9333  228B  35A0               	lslf	___aomod@divisor,f
  9334  228C  0DA1               	rlf	___aomod@divisor+1,f
  9335  228D  0DA2               	rlf	___aomod@divisor+2,f
  9336  228E  0DA3               	rlf	___aomod@divisor+3,f
  9337  228F  0DA4               	rlf	___aomod@divisor+4,f
  9338  2290  0DA5               	rlf	___aomod@divisor+5,f
  9339  2291  0DA6               	rlf	___aomod@divisor+6,f
  9340  2292  0DA7               	rlf	___aomod@divisor+7,f
  9341  2293  3001               	movlw	1
  9342  2294  00F1               	movwf	??___aomod
  9343  2295  0871               	movf	??___aomod,w
  9344  2296  07F2               	addwf	___aomod@counter,f
  9345  2297  2A89               	goto	l6414
  9346  2298                     l6416:	
  9347  2298  0827               	movf	___aomod@divisor+7,w
  9348  2299  022F               	subwf	___aomod@dividend+7,w
  9349  229A  1D03               	skipz
  9350  229B  2AB6               	goto	u8135
  9351  229C  0826               	movf	___aomod@divisor+6,w
  9352  229D  022E               	subwf	___aomod@dividend+6,w
  9353  229E  1D03               	skipz
  9354  229F  2AB6               	goto	u8135
  9355  22A0  0825               	movf	___aomod@divisor+5,w
  9356  22A1  022D               	subwf	___aomod@dividend+5,w
  9357  22A2  1D03               	skipz
  9358  22A3  2AB6               	goto	u8135
  9359  22A4  0824               	movf	___aomod@divisor+4,w
  9360  22A5  022C               	subwf	___aomod@dividend+4,w
  9361  22A6  1D03               	skipz
  9362  22A7  2AB6               	goto	u8135
  9363  22A8  0823               	movf	___aomod@divisor+3,w
  9364  22A9  022B               	subwf	___aomod@dividend+3,w
  9365  22AA  1D03               	skipz
  9366  22AB  2AB6               	goto	u8135
  9367  22AC  0822               	movf	___aomod@divisor+2,w
  9368  22AD  022A               	subwf	___aomod@dividend+2,w
  9369  22AE  1D03               	skipz
  9370  22AF  2AB6               	goto	u8135
  9371  22B0  0821               	movf	___aomod@divisor+1,w
  9372  22B1  0229               	subwf	___aomod@dividend+1,w
  9373  22B2  1D03               	skipz
  9374  22B3  2AB6               	goto	u8135
  9375  22B4  0820               	movf	___aomod@divisor,w
  9376  22B5  0228               	subwf	___aomod@dividend,w
  9377  22B6                     u8135:	
  9378  22B6  1C03               	skipc
  9379  22B7  2AC8               	goto	l6420
  9380  22B8  0820               	movf	___aomod@divisor,w
  9381  22B9  02A8               	subwf	___aomod@dividend,f
  9382  22BA  0821               	movf	___aomod@divisor+1,w
  9383  22BB  3BA9               	subwfb	___aomod@dividend+1,f
  9384  22BC  0822               	movf	___aomod@divisor+2,w
  9385  22BD  3BAA               	subwfb	___aomod@dividend+2,f
  9386  22BE  0823               	movf	___aomod@divisor+3,w
  9387  22BF  3BAB               	subwfb	___aomod@dividend+3,f
  9388  22C0  0824               	movf	___aomod@divisor+4,w
  9389  22C1  3BAC               	subwfb	___aomod@dividend+4,f
  9390  22C2  0825               	movf	___aomod@divisor+5,w
  9391  22C3  3BAD               	subwfb	___aomod@dividend+5,f
  9392  22C4  0826               	movf	___aomod@divisor+6,w
  9393  22C5  3BAE               	subwfb	___aomod@dividend+6,f
  9394  22C6  0827               	movf	___aomod@divisor+7,w
  9395  22C7  3BAF               	subwfb	___aomod@dividend+7,f
  9396  22C8                     l6420:	
  9397  22C8  36A7               	lsrf	___aomod@divisor+7,f
  9398  22C9  0CA6               	rrf	___aomod@divisor+6,f
  9399  22CA  0CA5               	rrf	___aomod@divisor+5,f
  9400  22CB  0CA4               	rrf	___aomod@divisor+4,f
  9401  22CC  0CA3               	rrf	___aomod@divisor+3,f
  9402  22CD  0CA2               	rrf	___aomod@divisor+2,f
  9403  22CE  0CA1               	rrf	___aomod@divisor+1,f
  9404  22CF  0CA0               	rrf	___aomod@divisor,f
  9405  22D0  3001               	movlw	1
  9406  22D1  02F2               	subwf	___aomod@counter,f
  9407  22D2  1D03               	btfss	3,2
  9408  22D3  2A98               	goto	l6416
  9409  22D4                     l6422:	
  9410  22D4  0873               	movf	___aomod@sign,w
  9411  22D5  1903               	btfsc	3,2
  9412  22D6  2AF5               	goto	l960
  9413  22D7  09A8               	comf	___aomod@dividend,f
  9414  22D8  09A9               	comf	___aomod@dividend+1,f
  9415  22D9  09AA               	comf	___aomod@dividend+2,f
  9416  22DA  09AB               	comf	___aomod@dividend+3,f
  9417  22DB  09AC               	comf	___aomod@dividend+4,f
  9418  22DC  09AD               	comf	___aomod@dividend+5,f
  9419  22DD  09AE               	comf	___aomod@dividend+6,f
  9420  22DE  09AF               	comf	___aomod@dividend+7,f
  9421  22DF  0AA8               	incf	___aomod@dividend,f
  9422  22E0  1D03               	skipz
  9423  22E1  2AF5               	goto	l960
  9424  22E2  0AA9               	incf	___aomod@dividend+1,f
  9425  22E3  1D03               	skipz
  9426  22E4  2AF5               	goto	l960
  9427  22E5  0AAA               	incf	___aomod@dividend+2,f
  9428  22E6  1D03               	skipz
  9429  22E7  2AF5               	goto	l960
  9430  22E8  0AAB               	incf	___aomod@dividend+3,f
  9431  22E9  1D03               	skipz
  9432  22EA  2AF5               	goto	l960
  9433  22EB  0AAC               	incf	___aomod@dividend+4,f
  9434  22EC  1D03               	skipz
  9435  22ED  2AF5               	goto	l960
  9436  22EE  0AAD               	incf	___aomod@dividend+5,f
  9437  22EF  1D03               	skipz
  9438  22F0  2AF5               	goto	l960
  9439  22F1  0AAE               	incf	___aomod@dividend+6,f
  9440  22F2  1D03               	skipz
  9441  22F3  2AF5               	goto	l960
  9442  22F4  0AAF               	incf	___aomod@dividend+7,f
  9443  22F5                     l960:	
  9444  22F5  0020               	movlb	0	; select bank0
  9445  22F6  0828               	movf	___aomod@dividend,w
  9446  22F7  00A0               	movwf	?___aomod
  9447  22F8  0829               	movf	___aomod@dividend+1,w
  9448  22F9  00A1               	movwf	?___aomod+1
  9449  22FA  082A               	movf	___aomod@dividend+2,w
  9450  22FB  00A2               	movwf	?___aomod+2
  9451  22FC  082B               	movf	___aomod@dividend+3,w
  9452  22FD  00A3               	movwf	?___aomod+3
  9453  22FE  082C               	movf	___aomod@dividend+4,w
  9454  22FF  00A4               	movwf	?___aomod+4
  9455  2300  082D               	movf	___aomod@dividend+5,w
  9456  2301  00A5               	movwf	?___aomod+5
  9457  2302  082E               	movf	___aomod@dividend+6,w
  9458  2303  00A6               	movwf	?___aomod+6
  9459  2304  082F               	movf	___aomod@dividend+7,w
  9460  2305  00A7               	movwf	?___aomod+7
  9461  2306  0008               	return
  9462  2307                     __end_of___aomod:	
  9463                           
  9464                           	psect	text22
  9465  1802                     __ptext22:	
  9466 ;; *************** function ___aodiv *****************
  9467 ;; Defined at:
  9468 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  9469 ;; Parameters:    Size  Location     Type
  9470 ;;  divisor         8    0[BANK0 ] long long 
  9471 ;;  dividend        8    8[BANK0 ] long long 
  9472 ;; Auto vars:     Size  Location     Type
  9473 ;;  quotient        8    4[COMMON] long long 
  9474 ;;  sign            1    3[COMMON] unsigned char 
  9475 ;;  counter         1    2[COMMON] unsigned char 
  9476 ;; Return value:  Size  Location     Type
  9477 ;;                  8    0[BANK0 ] long long 
  9478 ;; Registers used:
  9479 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9480 ;; Tracked objects:
  9481 ;;		On entry : 0/0
  9482 ;;		On exit  : 0/0
  9483 ;;		Unchanged: 0/0
  9484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9485 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9486 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9487 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9488 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9489 ;;Total ram usage:       27 bytes
  9490 ;; Hardware stack levels used:    1
  9491 ;; Hardware stack levels required when called:    1
  9492 ;; This function calls:
  9493 ;;		Nothing
  9494 ;; This function is called by:
  9495 ;;		_dtoa
  9496 ;; This function uses a non-reentrant model
  9497 ;;
  9498                           
  9499                           
  9500                           ;psect for function ___aodiv
  9501  1802                     ___aodiv:	
  9502                           
  9503                           ;incstack = 0
  9504                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  9505  1802  01F3               	clrf	___aodiv@sign
  9506  1803  3020               	movlw	low ___aodiv@divisor
  9507  1804  0086               	movwf	6
  9508  1805  3000               	movlw	high ___aodiv@divisor
  9509  1806  0087               	movwf	7
  9510  1807  3F47               	moviw [7]fsr1
  9511  1808  00F1               	movwf	??___aodiv
  9512  1809  1FF1               	btfss	??___aodiv,7
  9513  180A  282C               	goto	l6364
  9514  180B  0020               	movlb	0	; select bank0
  9515  180C  09A0               	comf	___aodiv@divisor,f
  9516  180D  09A1               	comf	___aodiv@divisor+1,f
  9517  180E  09A2               	comf	___aodiv@divisor+2,f
  9518  180F  09A3               	comf	___aodiv@divisor+3,f
  9519  1810  09A4               	comf	___aodiv@divisor+4,f
  9520  1811  09A5               	comf	___aodiv@divisor+5,f
  9521  1812  09A6               	comf	___aodiv@divisor+6,f
  9522  1813  09A7               	comf	___aodiv@divisor+7,f
  9523  1814  0AA0               	incf	___aodiv@divisor,f
  9524  1815  1D03               	skipz
  9525  1816  282A               	goto	u797lld
  9526  1817  0AA1               	incf	___aodiv@divisor+1,f
  9527  1818  1D03               	skipz
  9528  1819  282A               	goto	u797lld
  9529  181A  0AA2               	incf	___aodiv@divisor+2,f
  9530  181B  1D03               	skipz
  9531  181C  282A               	goto	u797lld
  9532  181D  0AA3               	incf	___aodiv@divisor+3,f
  9533  181E  1D03               	skipz
  9534  181F  282A               	goto	u797lld
  9535  1820  0AA4               	incf	___aodiv@divisor+4,f
  9536  1821  1D03               	skipz
  9537  1822  282A               	goto	u797lld
  9538  1823  0AA5               	incf	___aodiv@divisor+5,f
  9539  1824  1D03               	skipz
  9540  1825  282A               	goto	u797lld
  9541  1826  0AA6               	incf	___aodiv@divisor+6,f
  9542  1827  1D03               	skipz
  9543  1828  282A               	goto	u797lld
  9544  1829  0AA7               	incf	___aodiv@divisor+7,f
  9545  182A                     u797lld:	
  9546  182A  01F3               	clrf	___aodiv@sign
  9547  182B  0AF3               	incf	___aodiv@sign,f
  9548  182C                     l6364:	
  9549  182C  3028               	movlw	low ___aodiv@dividend
  9550  182D  0086               	movwf	6
  9551  182E  3000               	movlw	high ___aodiv@dividend
  9552  182F  0087               	movwf	7
  9553  1830  3F47               	moviw [7]fsr1
  9554  1831  00F1               	movwf	??___aodiv
  9555  1832  1FF1               	btfss	??___aodiv,7
  9556  1833  2857               	goto	l6370
  9557  1834  0020               	movlb	0	; select bank0
  9558  1835  09A8               	comf	___aodiv@dividend,f
  9559  1836  09A9               	comf	___aodiv@dividend+1,f
  9560  1837  09AA               	comf	___aodiv@dividend+2,f
  9561  1838  09AB               	comf	___aodiv@dividend+3,f
  9562  1839  09AC               	comf	___aodiv@dividend+4,f
  9563  183A  09AD               	comf	___aodiv@dividend+5,f
  9564  183B  09AE               	comf	___aodiv@dividend+6,f
  9565  183C  09AF               	comf	___aodiv@dividend+7,f
  9566  183D  0AA8               	incf	___aodiv@dividend,f
  9567  183E  1D03               	skipz
  9568  183F  2853               	goto	l6368
  9569  1840  0AA9               	incf	___aodiv@dividend+1,f
  9570  1841  1D03               	skipz
  9571  1842  2853               	goto	l6368
  9572  1843  0AAA               	incf	___aodiv@dividend+2,f
  9573  1844  1D03               	skipz
  9574  1845  2853               	goto	l6368
  9575  1846  0AAB               	incf	___aodiv@dividend+3,f
  9576  1847  1D03               	skipz
  9577  1848  2853               	goto	l6368
  9578  1849  0AAC               	incf	___aodiv@dividend+4,f
  9579  184A  1D03               	skipz
  9580  184B  2853               	goto	l6368
  9581  184C  0AAD               	incf	___aodiv@dividend+5,f
  9582  184D  1D03               	skipz
  9583  184E  2853               	goto	l6368
  9584  184F  0AAE               	incf	___aodiv@dividend+6,f
  9585  1850  1D03               	skipz
  9586  1851  2853               	goto	l6368
  9587  1852  0AAF               	incf	___aodiv@dividend+7,f
  9588  1853                     l6368:	
  9589  1853  3001               	movlw	1
  9590  1854  00F1               	movwf	??___aodiv
  9591  1855  0871               	movf	??___aodiv,w
  9592  1856  06F3               	xorwf	___aodiv@sign,f
  9593  1857                     l6370:	
  9594  1857  3074               	movlw	low ___aodiv@quotient
  9595  1858  0086               	movwf	6
  9596  1859  3000               	movlw	high ___aodiv@quotient
  9597  185A  0087               	movwf	7
  9598  185B  3008               	movlw	8
  9599  185C  00F1               	movwf	??___aodiv
  9600  185D  3000               	movlw	0
  9601  185E                     u8000:	
  9602  185E  001E               	movwi fsr1++
  9603  185F  0BF1               	decfsz	??___aodiv,f
  9604  1860  285E               	goto	u8000
  9605  1861  0020               	movlb	0	; select bank0
  9606  1862  0820               	movf	___aodiv@divisor,w
  9607  1863  0421               	iorwf	___aodiv@divisor+1,w
  9608  1864  0422               	iorwf	___aodiv@divisor+2,w
  9609  1865  0423               	iorwf	___aodiv@divisor+3,w
  9610  1866  0424               	iorwf	___aodiv@divisor+4,w
  9611  1867  0425               	iorwf	___aodiv@divisor+5,w
  9612  1868  0426               	iorwf	___aodiv@divisor+6,w
  9613  1869  0427               	iorwf	___aodiv@divisor+7,w
  9614  186A  1903               	skipnz
  9615  186B  28C2               	goto	l6392
  9616  186C  01F2               	clrf	___aodiv@counter
  9617  186D  0AF2               	incf	___aodiv@counter,f
  9618  186E                     l6380:	
  9619  186E  1BA7               	btfsc	___aodiv@divisor+7,7
  9620  186F  287D               	goto	l6382
  9621  1870  35A0               	lslf	___aodiv@divisor,f
  9622  1871  0DA1               	rlf	___aodiv@divisor+1,f
  9623  1872  0DA2               	rlf	___aodiv@divisor+2,f
  9624  1873  0DA3               	rlf	___aodiv@divisor+3,f
  9625  1874  0DA4               	rlf	___aodiv@divisor+4,f
  9626  1875  0DA5               	rlf	___aodiv@divisor+5,f
  9627  1876  0DA6               	rlf	___aodiv@divisor+6,f
  9628  1877  0DA7               	rlf	___aodiv@divisor+7,f
  9629  1878  3001               	movlw	1
  9630  1879  00F1               	movwf	??___aodiv
  9631  187A  0871               	movf	??___aodiv,w
  9632  187B  07F2               	addwf	___aodiv@counter,f
  9633  187C  286E               	goto	l6380
  9634  187D                     l6382:	
  9635  187D  35F4               	lslf	___aodiv@quotient,f
  9636  187E  0DF5               	rlf	___aodiv@quotient+1,f
  9637  187F  0DF6               	rlf	___aodiv@quotient+2,f
  9638  1880  0DF7               	rlf	___aodiv@quotient+3,f
  9639  1881  0DF8               	rlf	___aodiv@quotient+4,f
  9640  1882  0DF9               	rlf	___aodiv@quotient+5,f
  9641  1883  0DFA               	rlf	___aodiv@quotient+6,f
  9642  1884  0DFB               	rlf	___aodiv@quotient+7,f
  9643  1885  0827               	movf	___aodiv@divisor+7,w
  9644  1886  022F               	subwf	___aodiv@dividend+7,w
  9645  1887  1D03               	skipz
  9646  1888  28A3               	goto	u8035
  9647  1889  0826               	movf	___aodiv@divisor+6,w
  9648  188A  022E               	subwf	___aodiv@dividend+6,w
  9649  188B  1D03               	skipz
  9650  188C  28A3               	goto	u8035
  9651  188D  0825               	movf	___aodiv@divisor+5,w
  9652  188E  022D               	subwf	___aodiv@dividend+5,w
  9653  188F  1D03               	skipz
  9654  1890  28A3               	goto	u8035
  9655  1891  0824               	movf	___aodiv@divisor+4,w
  9656  1892  022C               	subwf	___aodiv@dividend+4,w
  9657  1893  1D03               	skipz
  9658  1894  28A3               	goto	u8035
  9659  1895  0823               	movf	___aodiv@divisor+3,w
  9660  1896  022B               	subwf	___aodiv@dividend+3,w
  9661  1897  1D03               	skipz
  9662  1898  28A3               	goto	u8035
  9663  1899  0822               	movf	___aodiv@divisor+2,w
  9664  189A  022A               	subwf	___aodiv@dividend+2,w
  9665  189B  1D03               	skipz
  9666  189C  28A3               	goto	u8035
  9667  189D  0821               	movf	___aodiv@divisor+1,w
  9668  189E  0229               	subwf	___aodiv@dividend+1,w
  9669  189F  1D03               	skipz
  9670  18A0  28A3               	goto	u8035
  9671  18A1  0820               	movf	___aodiv@divisor,w
  9672  18A2  0228               	subwf	___aodiv@dividend,w
  9673  18A3                     u8035:	
  9674  18A3  1C03               	skipc
  9675  18A4  28B6               	goto	l6390
  9676  18A5  0820               	movf	___aodiv@divisor,w
  9677  18A6  02A8               	subwf	___aodiv@dividend,f
  9678  18A7  0821               	movf	___aodiv@divisor+1,w
  9679  18A8  3BA9               	subwfb	___aodiv@dividend+1,f
  9680  18A9  0822               	movf	___aodiv@divisor+2,w
  9681  18AA  3BAA               	subwfb	___aodiv@dividend+2,f
  9682  18AB  0823               	movf	___aodiv@divisor+3,w
  9683  18AC  3BAB               	subwfb	___aodiv@dividend+3,f
  9684  18AD  0824               	movf	___aodiv@divisor+4,w
  9685  18AE  3BAC               	subwfb	___aodiv@dividend+4,f
  9686  18AF  0825               	movf	___aodiv@divisor+5,w
  9687  18B0  3BAD               	subwfb	___aodiv@dividend+5,f
  9688  18B1  0826               	movf	___aodiv@divisor+6,w
  9689  18B2  3BAE               	subwfb	___aodiv@dividend+6,f
  9690  18B3  0827               	movf	___aodiv@divisor+7,w
  9691  18B4  3BAF               	subwfb	___aodiv@dividend+7,f
  9692  18B5  1474               	bsf	___aodiv@quotient,0
  9693  18B6                     l6390:	
  9694  18B6  36A7               	lsrf	___aodiv@divisor+7,f
  9695  18B7  0CA6               	rrf	___aodiv@divisor+6,f
  9696  18B8  0CA5               	rrf	___aodiv@divisor+5,f
  9697  18B9  0CA4               	rrf	___aodiv@divisor+4,f
  9698  18BA  0CA3               	rrf	___aodiv@divisor+3,f
  9699  18BB  0CA2               	rrf	___aodiv@divisor+2,f
  9700  18BC  0CA1               	rrf	___aodiv@divisor+1,f
  9701  18BD  0CA0               	rrf	___aodiv@divisor,f
  9702  18BE  3001               	movlw	1
  9703  18BF  02F2               	subwf	___aodiv@counter,f
  9704  18C0  1D03               	btfss	3,2
  9705  18C1  287D               	goto	l6382
  9706  18C2                     l6392:	
  9707  18C2  0873               	movf	___aodiv@sign,w
  9708  18C3  1903               	btfsc	3,2
  9709  18C4  28E3               	goto	l947
  9710  18C5  09F4               	comf	___aodiv@quotient,f
  9711  18C6  09F5               	comf	___aodiv@quotient+1,f
  9712  18C7  09F6               	comf	___aodiv@quotient+2,f
  9713  18C8  09F7               	comf	___aodiv@quotient+3,f
  9714  18C9  09F8               	comf	___aodiv@quotient+4,f
  9715  18CA  09F9               	comf	___aodiv@quotient+5,f
  9716  18CB  09FA               	comf	___aodiv@quotient+6,f
  9717  18CC  09FB               	comf	___aodiv@quotient+7,f
  9718  18CD  0AF4               	incf	___aodiv@quotient,f
  9719  18CE  1D03               	skipz
  9720  18CF  28E3               	goto	l947
  9721  18D0  0AF5               	incf	___aodiv@quotient+1,f
  9722  18D1  1D03               	skipz
  9723  18D2  28E3               	goto	l947
  9724  18D3  0AF6               	incf	___aodiv@quotient+2,f
  9725  18D4  1D03               	skipz
  9726  18D5  28E3               	goto	l947
  9727  18D6  0AF7               	incf	___aodiv@quotient+3,f
  9728  18D7  1D03               	skipz
  9729  18D8  28E3               	goto	l947
  9730  18D9  0AF8               	incf	___aodiv@quotient+4,f
  9731  18DA  1D03               	skipz
  9732  18DB  28E3               	goto	l947
  9733  18DC  0AF9               	incf	___aodiv@quotient+5,f
  9734  18DD  1D03               	skipz
  9735  18DE  28E3               	goto	l947
  9736  18DF  0AFA               	incf	___aodiv@quotient+6,f
  9737  18E0  1D03               	skipz
  9738  18E1  28E3               	goto	l947
  9739  18E2  0AFB               	incf	___aodiv@quotient+7,f
  9740  18E3                     l947:	
  9741  18E3  0874               	movf	___aodiv@quotient,w
  9742  18E4  0020               	movlb	0	; select bank0
  9743  18E5  00A0               	movwf	?___aodiv
  9744  18E6  0875               	movf	___aodiv@quotient+1,w
  9745  18E7  00A1               	movwf	?___aodiv+1
  9746  18E8  0876               	movf	___aodiv@quotient+2,w
  9747  18E9  00A2               	movwf	?___aodiv+2
  9748  18EA  0877               	movf	___aodiv@quotient+3,w
  9749  18EB  00A3               	movwf	?___aodiv+3
  9750  18EC  0878               	movf	___aodiv@quotient+4,w
  9751  18ED  00A4               	movwf	?___aodiv+4
  9752  18EE  0879               	movf	___aodiv@quotient+5,w
  9753  18EF  00A5               	movwf	?___aodiv+5
  9754  18F0  087A               	movf	___aodiv@quotient+6,w
  9755  18F1  00A6               	movwf	?___aodiv+6
  9756  18F2  087B               	movf	___aodiv@quotient+7,w
  9757  18F3  00A7               	movwf	?___aodiv+7
  9758  18F4  0008               	return
  9759  18F5                     __end_of___aodiv:	
  9760                           
  9761                           	psect	text23
  9762  35CC                     __ptext23:	
  9763 ;; *************** function _ctoa *****************
  9764 ;; Defined at:
  9765 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9766 ;; Parameters:    Size  Location     Type
  9767 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  9768 ;;		 -> vsnprintf@f(6), 
  9769 ;;  c               1   18[BANK0 ] unsigned char 
  9770 ;; Auto vars:     Size  Location     Type
  9771 ;;  w               2   20[BANK0 ] int 
  9772 ;;  l               2    0        int 
  9773 ;; Return value:  Size  Location     Type
  9774 ;;                  2   16[BANK0 ] int 
  9775 ;; Registers used:
  9776 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9777 ;; Tracked objects:
  9778 ;;		On entry : 0/0
  9779 ;;		On exit  : 0/0
  9780 ;;		Unchanged: 0/0
  9781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9782 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9783 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9784 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9785 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9786 ;;Total ram usage:        6 bytes
  9787 ;; Hardware stack levels used:    1
  9788 ;; Hardware stack levels required when called:    5
  9789 ;; This function calls:
  9790 ;;		_pad
  9791 ;; This function is called by:
  9792 ;;		_vfpfcnvrt
  9793 ;; This function uses a non-reentrant model
  9794 ;;
  9795                           
  9796                           
  9797                           ;psect for function _ctoa
  9798  35CC                     _ctoa:	
  9799                           
  9800                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  9801                           
  9802                           ;incstack = 0
  9803                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9804  35CC  0022               	movlb	2	; select bank2
  9805  35CD  0865               	movf	_width^(0+256),w
  9806  35CE  0466               	iorwf	(_width+1)^(0+256),w
  9807  35CF  1D03               	btfss	3,2
  9808  35D0  2DD9               	goto	l6480
  9809  35D1  0866               	movf	(_width+1)^(0+256),w
  9810  35D2  0020               	movlb	0	; select bank0
  9811  35D3  00B5               	movwf	ctoa@w+1
  9812  35D4  0022               	movlb	2	; select bank2
  9813  35D5  0865               	movf	_width^(0+256),w
  9814  35D6  0020               	movlb	0	; select bank0
  9815  35D7  00B4               	movwf	ctoa@w
  9816  35D8  2DE2               	goto	l6482
  9817  35D9                     l6480:	
  9818  35D9  0865               	movf	_width^(0+256),w
  9819  35DA  3EFF               	addlw	255
  9820  35DB  0020               	movlb	0	; select bank0
  9821  35DC  00B4               	movwf	ctoa@w
  9822  35DD  30FF               	movlw	255
  9823  35DE  0022               	movlb	2	; select bank2
  9824  35DF  3D66               	addwfc	(_width+1)^(0+256),w
  9825  35E0  0020               	movlb	0	; select bank0
  9826  35E1  00B5               	movwf	ctoa@w+1
  9827  35E2                     l6482:	
  9828                           
  9829                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  9830  35E2  0832               	movf	ctoa@c,w
  9831  35E3  00B3               	movwf	??_ctoa
  9832  35E4  0833               	movf	??_ctoa,w
  9833  35E5  0024               	movlb	4	; select bank4
  9834  35E6  00A0               	movwf	_dbuf^(0+512)
  9835                           
  9836                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  9837  35E7  01A1               	clrf	(_dbuf^(0+512)+1)
  9838                           
  9839                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  9840  35E8  0020               	movlb	0	; select bank0
  9841  35E9  0831               	movf	ctoa@fp+1,w
  9842  35EA  00A7               	movwf	pad@fp+1
  9843  35EB  0830               	movf	ctoa@fp,w
  9844  35EC  00A6               	movwf	pad@fp
  9845  35ED  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  9846  35EE  00B3               	movwf	??_ctoa
  9847  35EF  0833               	movf	??_ctoa,w
  9848  35F0  00A8               	movwf	pad@buf
  9849  35F1  0835               	movf	ctoa@w+1,w
  9850  35F2  00AA               	movwf	pad@p+1
  9851  35F3  0834               	movf	ctoa@w,w
  9852  35F4  00A9               	movwf	pad@p
  9853  35F5  31B7  27AF         	fcall	_pad
  9854  35F7  0020               	movlb	0	; select bank0
  9855  35F8  0827               	movf	?_pad+1,w
  9856  35F9  00B1               	movwf	?_ctoa+1
  9857  35FA  0826               	movf	?_pad,w
  9858  35FB  00B0               	movwf	?_ctoa
  9859  35FC  0008               	return
  9860  35FD                     __end_of_ctoa:	
  9861                           
  9862                           	psect	text24
  9863  37AF                     __ptext24:	
  9864 ;; *************** function _pad *****************
  9865 ;; Defined at:
  9866 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9867 ;; Parameters:    Size  Location     Type
  9868 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
  9869 ;;		 -> vsnprintf@f(6), 
  9870 ;;  buf             1    8[BANK0 ] PTR unsigned char 
  9871 ;;		 -> dbuf(32), 
  9872 ;;  p               2    9[BANK0 ] int 
  9873 ;; Auto vars:     Size  Location     Type
  9874 ;;  w               2   14[BANK0 ] int 
  9875 ;;  i               2   12[BANK0 ] int 
  9876 ;; Return value:  Size  Location     Type
  9877 ;;                  2    6[BANK0 ] int 
  9878 ;; Registers used:
  9879 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9880 ;; Tracked objects:
  9881 ;;		On entry : 0/0
  9882 ;;		On exit  : 0/0
  9883 ;;		Unchanged: 0/0
  9884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9885 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9886 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9887 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9888 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9889 ;;Total ram usage:       10 bytes
  9890 ;; Hardware stack levels used:    1
  9891 ;; Hardware stack levels required when called:    4
  9892 ;; This function calls:
  9893 ;;		_fputc
  9894 ;;		_fputs
  9895 ;;		_strlen
  9896 ;; This function is called by:
  9897 ;;		_ctoa
  9898 ;;		_dtoa
  9899 ;;		_otoa
  9900 ;;		_utoa
  9901 ;;		_xtoa
  9902 ;; This function uses a non-reentrant model
  9903 ;;
  9904                           
  9905                           
  9906                           ;psect for function _pad
  9907  37AF                     _pad:	
  9908                           
  9909                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  9910                           
  9911                           ;incstack = 0
  9912                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9913  37AF  0022               	movlb	2	; select bank2
  9914  37B0  1C69               	btfss	_flags^(0+256),0
  9915  37B1  2FBB               	goto	l6300
  9916                           
  9917                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  9918  37B2  0020               	movlb	0	; select bank0
  9919  37B3  0827               	movf	pad@fp+1,w
  9920  37B4  00FB               	movwf	fputs@fp+1
  9921  37B5  0826               	movf	pad@fp,w
  9922  37B6  00FA               	movwf	fputs@fp
  9923  37B7  0828               	movf	pad@buf,w
  9924  37B8  3187  27D7  31B7   	fcall	_fputs
  9925  37BB                     l6300:	
  9926                           
  9927                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  9928  37BB  0020               	movlb	0	; select bank0
  9929  37BC  1BAA               	btfsc	pad@p+1,7
  9930  37BD  2FC3               	goto	l6304
  9931  37BE  082A               	movf	pad@p+1,w
  9932  37BF  00AF               	movwf	pad@w+1
  9933  37C0  0829               	movf	pad@p,w
  9934  37C1  00AE               	movwf	pad@w
  9935  37C2  2FC5               	goto	l639
  9936  37C3                     l6304:	
  9937  37C3  01AE               	clrf	pad@w
  9938  37C4  01AF               	clrf	pad@w+1
  9939  37C5                     l639:	
  9940                           
  9941                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  9942  37C5  01AC               	clrf	pad@i
  9943  37C6  01AD               	clrf	pad@i+1
  9944  37C7                     l6310:	
  9945                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9946                           
  9947                           
  9948                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9949  37C7  082D               	movf	pad@i+1,w
  9950  37C8  3A80               	xorlw	128
  9951  37C9  00AB               	movwf	??_pad
  9952  37CA  082F               	movf	pad@w+1,w
  9953  37CB  3A80               	xorlw	128
  9954  37CC  022B               	subwf	??_pad,w
  9955  37CD  1D03               	skipz
  9956  37CE  2FD1               	goto	u7805
  9957  37CF  082E               	movf	pad@w,w
  9958  37D0  022C               	subwf	pad@i,w
  9959  37D1                     u7805:	
  9960  37D1  1803               	btfsc	3,0
  9961  37D2  2FE5               	goto	l642
  9962                           
  9963                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  9964  37D3  3020               	movlw	32
  9965  37D4  00F1               	movwf	fputc@c
  9966  37D5  3000               	movlw	0
  9967  37D6  00F2               	movwf	fputc@c+1
  9968  37D7  0020               	movlb	0	; select bank0
  9969  37D8  0827               	movf	pad@fp+1,w
  9970  37D9  00F4               	movwf	fputc@fp+1
  9971  37DA  0826               	movf	pad@fp,w
  9972  37DB  00F3               	movwf	fputc@fp
  9973  37DC  31A8  2073  31B7   	fcall	_fputc
  9974                           
  9975                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  9976  37DF  3001               	movlw	1
  9977  37E0  0020               	movlb	0	; select bank0
  9978  37E1  07AC               	addwf	pad@i,f
  9979  37E2  3000               	movlw	0
  9980  37E3  3DAD               	addwfc	pad@i+1,f
  9981  37E4  2FC7               	goto	l6310
  9982  37E5                     l642:	
  9983                           
  9984                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  9985  37E5  0022               	movlb	2	; select bank2
  9986  37E6  1869               	btfsc	_flags^(0+256),0
  9987  37E7  2FF1               	goto	l6314
  9988                           
  9989                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  9990  37E8  0020               	movlb	0	; select bank0
  9991  37E9  0827               	movf	pad@fp+1,w
  9992  37EA  00FB               	movwf	fputs@fp+1
  9993  37EB  0826               	movf	pad@fp,w
  9994  37EC  00FA               	movwf	fputs@fp
  9995  37ED  0828               	movf	pad@buf,w
  9996  37EE  3187  27D7  31B7   	fcall	_fputs
  9997  37F1                     l6314:	
  9998                           
  9999                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 10000  37F1  0020               	movlb	0	; select bank0
 10001  37F2  0828               	movf	pad@buf,w
 10002  37F3  00F1               	movwf	strlen@s
 10003  37F4  3002               	movlw	2
 10004  37F5  00F2               	movwf	strlen@s+1
 10005  37F6  31B4  2454         	fcall	_strlen
 10006  37F8  0020               	movlb	0	; select bank0
 10007  37F9  082E               	movf	pad@w,w
 10008  37FA  0771               	addwf	?_strlen,w
 10009  37FB  00A6               	movwf	?_pad
 10010  37FC  082F               	movf	pad@w+1,w
 10011  37FD  3D72               	addwfc	?_strlen+1,w
 10012  37FE  00A7               	movwf	?_pad+1
 10013  37FF  0008               	return
 10014  3800                     __end_of_pad:	
 10015                           
 10016                           	psect	text25
 10017  3454                     __ptext25:	
 10018 ;; *************** function _strlen *****************
 10019 ;; Defined at:
 10020 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 10021 ;; Parameters:    Size  Location     Type
 10022 ;;  s               2    1[COMMON] PTR const unsigned char 
 10023 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), sp__logf(4), 
 10024 ;;		 -> adcGain(2), 
 10025 ;; Auto vars:     Size  Location     Type
 10026 ;;  a               2    3[COMMON] PTR const unsigned char 
 10027 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), sp__logf(4), 
 10028 ;;		 -> adcGain(2), 
 10029 ;; Return value:  Size  Location     Type
 10030 ;;                  2    1[COMMON] unsigned int 
 10031 ;; Registers used:
 10032 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10033 ;; Tracked objects:
 10034 ;;		On entry : 0/0
 10035 ;;		On exit  : 0/0
 10036 ;;		Unchanged: 0/0
 10037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10038 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10039 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10041 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10042 ;;Total ram usage:        4 bytes
 10043 ;; Hardware stack levels used:    1
 10044 ;; Hardware stack levels required when called:    1
 10045 ;; This function calls:
 10046 ;;		Nothing
 10047 ;; This function is called by:
 10048 ;;		_pad
 10049 ;;		_stoa
 10050 ;; This function uses a non-reentrant model
 10051 ;;
 10052                           
 10053                           
 10054                           ;psect for function _strlen
 10055  3454                     _strlen:	
 10056                           
 10057                           ;incstack = 0
 10058                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 10059  3454  0872               	movf	strlen@s+1,w
 10060  3455  00F4               	movwf	strlen@a+1
 10061  3456  0871               	movf	strlen@s,w
 10062  3457  00F3               	movwf	strlen@a
 10063  3458                     l6286:	
 10064  3458  0871               	movf	strlen@s,w
 10065  3459  0086               	movwf	6
 10066  345A  0872               	movf	strlen@s+1,w
 10067  345B  0087               	movwf	7
 10068  345C  0801               	movf	1,w
 10069  345D  1903               	btfsc	3,2
 10070  345E  2C64               	goto	l6288
 10071  345F  3001               	movlw	1
 10072  3460  07F1               	addwf	strlen@s,f
 10073  3461  3000               	movlw	0
 10074  3462  3DF2               	addwfc	strlen@s+1,f
 10075  3463  2C58               	goto	l6286
 10076  3464                     l6288:	
 10077  3464  0873               	movf	strlen@a,w
 10078  3465  0271               	subwf	strlen@s,w
 10079  3466  00F1               	movwf	?_strlen
 10080  3467  0874               	movf	strlen@a+1,w
 10081  3468  3B72               	subwfb	strlen@s+1,w
 10082  3469  00F2               	movwf	?_strlen+1
 10083  346A  0008               	return
 10084  346B                     __end_of_strlen:	
 10085                           
 10086                           	psect	text26
 10087  07D7                     __ptext26:	
 10088 ;; *************** function _fputs *****************
 10089 ;; Defined at:
 10090 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 10091 ;; Parameters:    Size  Location     Type
 10092 ;;  s               1    wreg     PTR const unsigned char 
 10093 ;;		 -> dbuf(32), 
 10094 ;;  fp              2   10[COMMON] PTR struct _IO_FILE
 10095 ;;		 -> vsnprintf@f(6), 
 10096 ;; Auto vars:     Size  Location     Type
 10097 ;;  s               1    5[BANK0 ] PTR const unsigned char 
 10098 ;;		 -> dbuf(32), 
 10099 ;;  i               2    3[BANK0 ] int 
 10100 ;;  c               1    2[BANK0 ] unsigned char 
 10101 ;; Return value:  Size  Location     Type
 10102 ;;                  2   10[COMMON] int 
 10103 ;; Registers used:
 10104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10105 ;; Tracked objects:
 10106 ;;		On entry : 0/0
 10107 ;;		On exit  : 0/0
 10108 ;;		Unchanged: 0/0
 10109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10110 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10111 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10112 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10113 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10114 ;;Total ram usage:        8 bytes
 10115 ;; Hardware stack levels used:    1
 10116 ;; Hardware stack levels required when called:    3
 10117 ;; This function calls:
 10118 ;;		_fputc
 10119 ;; This function is called by:
 10120 ;;		_pad
 10121 ;; This function uses a non-reentrant model
 10122 ;;
 10123                           
 10124                           
 10125                           ;psect for function _fputs
 10126  07D7                     _fputs:	
 10127                           
 10128                           ;incstack = 0
 10129                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10130                           ;fputs@s stored from wreg
 10131  07D7  0020               	movlb	0	; select bank0
 10132  07D8  00A5               	movwf	fputs@s
 10133  07D9  01A3               	clrf	fputs@i
 10134  07DA  01A4               	clrf	fputs@i+1
 10135  07DB                     l6280:	
 10136  07DB  0823               	movf	fputs@i,w
 10137  07DC  0725               	addwf	fputs@s,w
 10138  07DD  00A0               	movwf	??_fputs
 10139  07DE  0820               	movf	??_fputs,w
 10140  07DF  0086               	movwf	6
 10141  07E0  3002               	movlw	2	; select bank4/5
 10142  07E1  0087               	movwf	7
 10143  07E2  0801               	movf	1,w
 10144  07E3  00A1               	movwf	??_fputs+1
 10145  07E4  0821               	movf	??_fputs+1,w
 10146  07E5  00A2               	movwf	fputs@c
 10147  07E6  0822               	movf	fputs@c,w
 10148  07E7  1903               	btfsc	3,2
 10149  07E8  0008               	return
 10150  07E9  0822               	movf	fputs@c,w
 10151  07EA  00A0               	movwf	??_fputs
 10152  07EB  01A1               	clrf	??_fputs+1
 10153  07EC  0820               	movf	??_fputs,w
 10154  07ED  00F1               	movwf	fputc@c
 10155  07EE  0821               	movf	??_fputs+1,w
 10156  07EF  00F2               	movwf	fputc@c+1
 10157  07F0  087B               	movf	fputs@fp+1,w
 10158  07F1  00F4               	movwf	fputc@fp+1
 10159  07F2  087A               	movf	fputs@fp,w
 10160  07F3  00F3               	movwf	fputc@fp
 10161  07F4  31A8  2073  3187   	fcall	_fputc
 10162  07F7  3001               	movlw	1
 10163  07F8  0020               	movlb	0	; select bank0
 10164  07F9  07A3               	addwf	fputs@i,f
 10165  07FA  3000               	movlw	0
 10166  07FB  3DA4               	addwfc	fputs@i+1,f
 10167  07FC  2FDB               	goto	l6280
 10168  07FD                     __end_of_fputs:	
 10169                           
 10170                           	psect	text27
 10171  2873                     __ptext27:	
 10172 ;; *************** function _fputc *****************
 10173 ;; Defined at:
 10174 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 10175 ;; Parameters:    Size  Location     Type
 10176 ;;  c               2    1[COMMON] int 
 10177 ;;  fp              2    3[COMMON] PTR struct _IO_FILE
 10178 ;;		 -> vsnprintf@f(6), 
 10179 ;; Auto vars:     Size  Location     Type
 10180 ;;		None
 10181 ;; Return value:  Size  Location     Type
 10182 ;;                  2    1[COMMON] int 
 10183 ;; Registers used:
 10184 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10185 ;; Tracked objects:
 10186 ;;		On entry : 0/0
 10187 ;;		On exit  : 0/0
 10188 ;;		Unchanged: 0/0
 10189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10190 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10192 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10193 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10194 ;;Total ram usage:        9 bytes
 10195 ;; Hardware stack levels used:    1
 10196 ;; Hardware stack levels required when called:    2
 10197 ;; This function calls:
 10198 ;;		_putch
 10199 ;; This function is called by:
 10200 ;;		_pad
 10201 ;;		_stoa
 10202 ;;		_vfpfcnvrt
 10203 ;;		_fputs
 10204 ;; This function uses a non-reentrant model
 10205 ;;
 10206                           
 10207                           
 10208                           ;psect for function _fputc
 10209  2873                     _fputc:	
 10210                           
 10211                           ;incstack = 0
 10212                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10213  2873  0873               	movf	fputc@fp,w
 10214  2874  0474               	iorwf	fputc@fp+1,w
 10215  2875  1903               	btfsc	3,2
 10216  2876  287B               	goto	l6262
 10217  2877  0873               	movf	fputc@fp,w
 10218  2878  0474               	iorwf	fputc@fp+1,w
 10219  2879  1D03               	btfss	3,2
 10220  287A  287F               	goto	l6264
 10221  287B                     l6262:	
 10222  287B  0871               	movf	fputc@c,w
 10223  287C  3180  2003         	fcall	_putch
 10224  287E  0008               	return
 10225  287F                     l6264:	
 10226  287F  0873               	movf	fputc@fp,w
 10227  2880  0086               	movwf	6
 10228  2881  0874               	movf	fputc@fp+1,w
 10229  2882  0087               	movwf	7
 10230  2883  3144               	addfsr 1,4
 10231  2884  0016               	moviw fsr1++
 10232  2885  0401               	iorwf	1,w
 10233  2886  1903               	btfsc	3,2
 10234  2887  28A6               	goto	l6268
 10235  2888  0873               	movf	fputc@fp,w
 10236  2889  0086               	movwf	6
 10237  288A  0874               	movf	fputc@fp+1,w
 10238  288B  0087               	movwf	7
 10239  288C  3144               	addfsr 1,4
 10240  288D  3F40               	moviw [0]fsr1
 10241  288E  00F5               	movwf	??_fputc
 10242  288F  3F41               	moviw [1]fsr1
 10243  2890  00F6               	movwf	??_fputc+1
 10244  2891  0873               	movf	fputc@fp,w
 10245  2892  0086               	movwf	6
 10246  2893  0874               	movf	fputc@fp+1,w
 10247  2894  0087               	movwf	7
 10248  2895  3142               	addfsr 1,2
 10249  2896  3F40               	moviw [0]fsr1
 10250  2897  00F7               	movwf	??_fputc+2
 10251  2898  3F41               	moviw [1]fsr1
 10252  2899  00F8               	movwf	??_fputc+3
 10253  289A  0878               	movf	??_fputc+3,w
 10254  289B  3A80               	xorlw	128
 10255  289C  00F9               	movwf	??_fputc+4
 10256  289D  0876               	movf	??_fputc+1,w
 10257  289E  3A80               	xorlw	128
 10258  289F  0279               	subwf	??_fputc+4,w
 10259  28A0  1D03               	skipz
 10260  28A1  28A4               	goto	u7735
 10261  28A2  0875               	movf	??_fputc,w
 10262  28A3  0277               	subwf	??_fputc+2,w
 10263  28A4                     u7735:	
 10264  28A4  1803               	skipnc
 10265  28A5  0008               	return
 10266  28A6                     l6268:	
 10267  28A6  0873               	movf	fputc@fp,w
 10268  28A7  0086               	movwf	6
 10269  28A8  0874               	movf	fputc@fp+1,w
 10270  28A9  0087               	movwf	7
 10271  28AA  3142               	addfsr 1,2
 10272  28AB  0873               	movf	fputc@fp,w
 10273  28AC  0084               	movwf	4
 10274  28AD  0874               	movf	fputc@fp+1,w
 10275  28AE  0085               	movwf	5
 10276  28AF  3F40               	moviw [0]fsr1
 10277  28B0  0700               	addwf	0,w
 10278  28B1  00F5               	movwf	??_fputc
 10279  28B2  3101               	addfsr 0,1
 10280  28B3  3F41               	moviw [1]fsr1
 10281  28B4  3D00               	addwfc	0,w
 10282  28B5  00F6               	movwf	??_fputc+1
 10283  28B6  0875               	movf	??_fputc,w
 10284  28B7  0086               	movwf	6
 10285  28B8  0876               	movf	??_fputc+1,w
 10286  28B9  0087               	movwf	7
 10287  28BA  0871               	movf	fputc@c,w
 10288  28BB  0081               	movwf	1
 10289  28BC  0873               	movf	fputc@fp,w
 10290  28BD  0086               	movwf	6
 10291  28BE  0874               	movf	fputc@fp+1,w
 10292  28BF  0087               	movwf	7
 10293  28C0  3142               	addfsr 1,2
 10294  28C1  3001               	movlw	1
 10295  28C2  0781               	addwf	1,f
 10296  28C3  3141               	addfsr 1,1
 10297  28C4  1803               	skipnc
 10298  28C5  0A81               	incf	1,f
 10299  28C6  0008               	return
 10300  28C7                     __end_of_fputc:	
 10301                           
 10302                           	psect	text28
 10303  0003                     __ptext28:	
 10304 ;; *************** function _putch *****************
 10305 ;; Defined at:
 10306 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
 10307 ;; Parameters:    Size  Location     Type
 10308 ;;  c               1    wreg     unsigned char 
 10309 ;; Auto vars:     Size  Location     Type
 10310 ;;  c               1    0[COMMON] unsigned char 
 10311 ;; Return value:  Size  Location     Type
 10312 ;;                  1    wreg      void 
 10313 ;; Registers used:
 10314 ;;		wreg
 10315 ;; Tracked objects:
 10316 ;;		On entry : 0/0
 10317 ;;		On exit  : 0/0
 10318 ;;		Unchanged: 0/0
 10319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10324 ;;Total ram usage:        0 bytes
 10325 ;; Hardware stack levels used:    1
 10326 ;; Hardware stack levels required when called:    1
 10327 ;; This function calls:
 10328 ;;		Nothing
 10329 ;; This function is called by:
 10330 ;;		_fputc
 10331 ;; This function uses a non-reentrant model
 10332 ;;
 10333                           
 10334                           
 10335                           ;psect for function _putch
 10336  0003                     _putch:	
 10337                           
 10338                           ;incstack = 0
 10339                           ; Regs used in _putch: [wreg]
 10340  0003  0008               	return
 10341  0004                     __end_of_putch:	
 10342                           
 10343                           	psect	text29
 10344  2C79                     __ptext29:	
 10345 ;; *************** function _atoi *****************
 10346 ;; Defined at:
 10347 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 10348 ;; Parameters:    Size  Location     Type
 10349 ;;  s               2    7[COMMON] PTR const unsigned char 
 10350 ;;		 -> STR_21(18), STR_20(18), STR_19(19), STR_18(20), 
 10351 ;;		 -> STR_17(20), STR_16(21), STR_15(21), STR_14(21), 
 10352 ;;		 -> STR_13(22), STR_12(22), STR_11(21), STR_10(21), 
 10353 ;;		 -> STR_7(15), STR_6(15), STR_5(21), STR_4(21), 
 10354 ;;		 -> STR_3(22), STR_2(71), STR_1(40), 
 10355 ;; Auto vars:     Size  Location     Type
 10356 ;;  n               2   11[BANK0 ] int 
 10357 ;;  neg             2    4[BANK0 ] int 
 10358 ;; Return value:  Size  Location     Type
 10359 ;;                  2    7[COMMON] int 
 10360 ;; Registers used:
 10361 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10362 ;; Tracked objects:
 10363 ;;		On entry : 0/0
 10364 ;;		On exit  : 0/0
 10365 ;;		Unchanged: 0/0
 10366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10367 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10368 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10369 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10370 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10371 ;;Total ram usage:       15 bytes
 10372 ;; Hardware stack levels used:    1
 10373 ;; Hardware stack levels required when called:    2
 10374 ;; This function calls:
 10375 ;;		___wmul
 10376 ;;		_isdigit
 10377 ;;		_isspace
 10378 ;; This function is called by:
 10379 ;;		_vfpfcnvrt
 10380 ;; This function uses a non-reentrant model
 10381 ;;
 10382                           
 10383                           
 10384                           ;psect for function _atoi
 10385  2C79                     _atoi:	
 10386                           
 10387                           ;incstack = 0
 10388                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10389  2C79  0020               	movlb	0	; select bank0
 10390  2C7A  01AB               	clrf	atoi@n
 10391  2C7B  01AC               	clrf	atoi@n+1
 10392  2C7C  01A4               	clrf	atoi@neg
 10393  2C7D  01A5               	clrf	atoi@neg+1
 10394  2C7E                     l6746:	
 10395  2C7E  01AA               	clrf	_atoi$1652
 10396  2C7F  0AAA               	incf	_atoi$1652,f
 10397  2C80  0877               	movf	atoi@s,w
 10398  2C81  0084               	movwf	4
 10399  2C82  0878               	movf	atoi@s+1,w
 10400  2C83  0085               	movwf	5
 10401  2C84  0012               	moviw fsr0++
 10402  2C85  3A20               	xorlw	32
 10403  2C86  1903               	btfsc	3,2
 10404  2C87  2C9A               	goto	l6754
 10405  2C88  0877               	movf	atoi@s,w
 10406  2C89  0084               	movwf	4
 10407  2C8A  0878               	movf	atoi@s+1,w
 10408  2C8B  0085               	movwf	5
 10409  2C8C  0800               	movf	0,w	;code access
 10410  2C8D  3EF7               	addlw	247
 10411  2C8E  00A0               	movwf	??_atoi
 10412  2C8F  30FF               	movlw	255
 10413  2C90  1803               	skipnc
 10414  2C91  3000               	movlw	0
 10415  2C92  00A1               	movwf	??_atoi+1
 10416  2C93  3000               	movlw	0
 10417  2C94  0221               	subwf	??_atoi+1,w
 10418  2C95  3005               	movlw	5
 10419  2C96  1903               	skipnz
 10420  2C97  0220               	subwf	??_atoi,w
 10421  2C98  1803               	btfsc	3,0
 10422  2C99  01AA               	clrf	_atoi$1652
 10423  2C9A                     l6754:	
 10424  2C9A  082A               	movf	_atoi$1652,w
 10425  2C9B  00A0               	movwf	??_atoi
 10426  2C9C  01A1               	clrf	??_atoi+1
 10427  2C9D  0820               	movf	??_atoi,w
 10428  2C9E  00A6               	movwf	_atoi$1651
 10429  2C9F  0821               	movf	??_atoi+1,w
 10430  2CA0  00A7               	movwf	_atoi$1651+1
 10431  2CA1  0826               	movf	_atoi$1651,w
 10432  2CA2  0427               	iorwf	_atoi$1651+1,w
 10433  2CA3  1903               	btfsc	3,2
 10434  2CA4  2CAF               	goto	l6762
 10435  2CA5  3001               	movlw	1
 10436  2CA6  07F7               	addwf	atoi@s,f
 10437  2CA7  3000               	movlw	0
 10438  2CA8  3DF8               	addwfc	atoi@s+1,f
 10439  2CA9  2C7E               	goto	l6746
 10440  2CAA                     l6760:	
 10441  2CAA  3001               	movlw	1
 10442  2CAB  00A4               	movwf	atoi@neg
 10443  2CAC  3000               	movlw	0
 10444  2CAD  00A5               	movwf	atoi@neg+1
 10445  2CAE  2CE2               	goto	l1322
 10446  2CAF                     l6762:	
 10447  2CAF  0877               	movf	atoi@s,w
 10448  2CB0  0084               	movwf	4
 10449  2CB1  0878               	movf	atoi@s+1,w
 10450  2CB2  0085               	movwf	5
 10451  2CB3  0800               	movf	0,w	;code access
 10452  2CB4  00A0               	movwf	??_atoi
 10453  2CB5  01A1               	clrf	??_atoi+1
 10454                           
 10455                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10456                           ; Switch size 1, requested type "simple"
 10457                           ; Number of cases is 1, Range of values is 0 to 0
 10458                           ; switch strategies available:
 10459                           ; Name         Instructions Cycles
 10460                           ; simple_byte            4     3 (average)
 10461                           ; direct_byte            8     6 (fixed)
 10462                           ; jumptable            260     6 (fixed)
 10463                           ;	Chosen strategy is simple_byte
 10464  2CB6  0821               	movf	??_atoi+1,w
 10465  2CB7  3A00               	xorlw	0	; case 0
 10466  2CB8  1903               	skipnz
 10467  2CB9  2CBB               	goto	l8602
 10468  2CBA  2CE6               	goto	l6768
 10469  2CBB                     l8602:	
 10470                           
 10471                           ; Switch size 1, requested type "simple"
 10472                           ; Number of cases is 2, Range of values is 43 to 45
 10473                           ; switch strategies available:
 10474                           ; Name         Instructions Cycles
 10475                           ; simple_byte            7     4 (average)
 10476                           ; direct_byte           15     9 (fixed)
 10477                           ; jumptable            263     9 (fixed)
 10478                           ;	Chosen strategy is simple_byte
 10479  2CBB  0820               	movf	??_atoi,w
 10480  2CBC  3A2B               	xorlw	43	; case 43
 10481  2CBD  1903               	skipnz
 10482  2CBE  2CE2               	goto	l1322
 10483  2CBF  3A06               	xorlw	6	; case 45
 10484  2CC0  1903               	skipnz
 10485  2CC1  2CAA               	goto	l6760
 10486  2CC2  2CE6               	goto	l6768
 10487  2CC3                     l6764:	
 10488  2CC3  0877               	movf	atoi@s,w
 10489  2CC4  0084               	movwf	4
 10490  2CC5  0878               	movf	atoi@s+1,w
 10491  2CC6  0085               	movwf	5
 10492  2CC7  0800               	movf	0,w	;code access
 10493  2CC8  00A0               	movwf	??_atoi
 10494  2CC9  082C               	movf	atoi@n+1,w
 10495  2CCA  00F2               	movwf	___wmul@multiplier+1
 10496  2CCB  082B               	movf	atoi@n,w
 10497  2CCC  00F1               	movwf	___wmul@multiplier
 10498  2CCD  300A               	movlw	10
 10499  2CCE  00F3               	movwf	___wmul@multiplicand
 10500  2CCF  3000               	movlw	0
 10501  2CD0  00F4               	movwf	___wmul@multiplicand+1
 10502  2CD1  31B4  24E3  31AC   	fcall	___wmul
 10503  2CD4  0872               	movf	?___wmul+1,w
 10504  2CD5  0020               	movlb	0	; select bank0
 10505  2CD6  00A2               	movwf	??_atoi+2
 10506  2CD7  0820               	movf	??_atoi,w
 10507  2CD8  0271               	subwf	?___wmul,w
 10508  2CD9  00A1               	movwf	??_atoi+1
 10509  2CDA  1C03               	skipc
 10510  2CDB  03A2               	decf	??_atoi+2,f
 10511  2CDC  0821               	movf	??_atoi+1,w
 10512  2CDD  3E30               	addlw	48
 10513  2CDE  00AB               	movwf	atoi@n
 10514  2CDF  3000               	movlw	0
 10515  2CE0  3D22               	addwfc	??_atoi+2,w
 10516  2CE1  00AC               	movwf	atoi@n+1
 10517  2CE2                     l1322:	
 10518  2CE2  3001               	movlw	1
 10519  2CE3  07F7               	addwf	atoi@s,f
 10520  2CE4  3000               	movlw	0
 10521  2CE5  3DF8               	addwfc	atoi@s+1,f
 10522  2CE6                     l6768:	
 10523  2CE6  0877               	movf	atoi@s,w
 10524  2CE7  0084               	movwf	4
 10525  2CE8  0878               	movf	atoi@s+1,w
 10526  2CE9  0085               	movwf	5
 10527  2CEA  0800               	movf	0,w	;code access
 10528  2CEB  3ED0               	addlw	208
 10529  2CEC  00A0               	movwf	??_atoi
 10530  2CED  30FF               	movlw	255
 10531  2CEE  1803               	skipnc
 10532  2CEF  3000               	movlw	0
 10533  2CF0  00A1               	movwf	??_atoi+1
 10534  2CF1  3000               	movlw	0
 10535  2CF2  0221               	subwf	??_atoi+1,w
 10536  2CF3  300A               	movlw	10
 10537  2CF4  1903               	skipnz
 10538  2CF5  0220               	subwf	??_atoi,w
 10539  2CF6  1803               	btfsc	3,0
 10540  2CF7  2CFA               	goto	u8910
 10541  2CF8  3001               	movlw	1
 10542  2CF9  2CFB               	goto	u8920
 10543  2CFA                     u8910:	
 10544  2CFA  3000               	movlw	0
 10545  2CFB                     u8920:	
 10546  2CFB  00A2               	movwf	??_atoi+2
 10547  2CFC  01A3               	clrf	??_atoi+3
 10548  2CFD  0822               	movf	??_atoi+2,w
 10549  2CFE  00A8               	movwf	_atoi$1653
 10550  2CFF  0823               	movf	??_atoi+3,w
 10551  2D00  00A9               	movwf	_atoi$1653+1
 10552  2D01  0828               	movf	_atoi$1653,w
 10553  2D02  0429               	iorwf	_atoi$1653+1,w
 10554  2D03  1D03               	btfss	3,2
 10555  2D04  2CC3               	goto	l6764
 10556  2D05  0824               	movf	atoi@neg,w
 10557  2D06  0425               	iorwf	atoi@neg+1,w
 10558  2D07  1D03               	btfss	3,2
 10559  2D08  2D15               	goto	l6778
 10560  2D09  092B               	comf	atoi@n,w
 10561  2D0A  00A0               	movwf	??_atoi
 10562  2D0B  092C               	comf	atoi@n+1,w
 10563  2D0C  00A1               	movwf	??_atoi+1
 10564  2D0D  0AA0               	incf	??_atoi,f
 10565  2D0E  1903               	skipnz
 10566  2D0F  0AA1               	incf	??_atoi+1,f
 10567  2D10  0820               	movf	??_atoi,w
 10568  2D11  00F7               	movwf	?_atoi
 10569  2D12  0821               	movf	??_atoi+1,w
 10570  2D13  00F8               	movwf	?_atoi+1
 10571  2D14  0008               	return
 10572  2D15                     l6778:	
 10573  2D15  082C               	movf	atoi@n+1,w
 10574  2D16  00F8               	movwf	?_atoi+1
 10575  2D17  082B               	movf	atoi@n,w
 10576  2D18  00F7               	movwf	?_atoi
 10577  2D19  0008               	return
 10578  2D1A                     __end_of_atoi:	
 10579                           
 10580                           	psect	text30
 10581  3534                     __ptext30:	
 10582 ;; *************** function _isspace *****************
 10583 ;; Defined at:
 10584 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 10585 ;; Parameters:    Size  Location     Type
 10586 ;;  c               2    1[COMMON] int 
 10587 ;; Auto vars:     Size  Location     Type
 10588 ;;		None
 10589 ;; Return value:  Size  Location     Type
 10590 ;;                  2    1[COMMON] int 
 10591 ;; Registers used:
 10592 ;;		wreg, status,2, status,0
 10593 ;; Tracked objects:
 10594 ;;		On entry : 0/0
 10595 ;;		On exit  : 0/0
 10596 ;;		Unchanged: 0/0
 10597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10598 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10599 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10600 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10601 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10602 ;;Total ram usage:        5 bytes
 10603 ;; Hardware stack levels used:    1
 10604 ;; Hardware stack levels required when called:    1
 10605 ;; This function calls:
 10606 ;;		Nothing
 10607 ;; This function is called by:
 10608 ;;		_atoi
 10609 ;; This function uses a non-reentrant model
 10610 ;;
 10611                           
 10612                           
 10613                           ;psect for function _isspace
 10614  3534                     _isspace:	
 10615                           
 10616                           ;incstack = 0
 10617                           ; Regs used in _isspace: [wreg+status,2+status,0]
 10618  3534  01F5               	clrf	_isspace$1678
 10619  3535  0AF5               	incf	_isspace$1678,f
 10620  3536  3020               	movlw	32
 10621  3537  0671               	xorwf	isspace@c,w
 10622  3538  0472               	iorwf	isspace@c+1,w
 10623  3539  1903               	btfsc	3,2
 10624  353A  2D48               	goto	l6472
 10625  353B  0871               	movf	isspace@c,w
 10626  353C  3EF7               	addlw	247
 10627  353D  00F3               	movwf	??_isspace
 10628  353E  30FF               	movlw	255
 10629  353F  3D72               	addwfc	isspace@c+1,w
 10630  3540  00F4               	movwf	??_isspace+1
 10631  3541  3000               	movlw	0
 10632  3542  0274               	subwf	??_isspace+1,w
 10633  3543  3005               	movlw	5
 10634  3544  1903               	skipnz
 10635  3545  0273               	subwf	??_isspace,w
 10636  3546  1803               	btfsc	3,0
 10637  3547  01F5               	clrf	_isspace$1678
 10638  3548                     l6472:	
 10639  3548  0875               	movf	_isspace$1678,w
 10640  3549  00F3               	movwf	??_isspace
 10641  354A  01F4               	clrf	??_isspace+1
 10642  354B  0873               	movf	??_isspace,w
 10643  354C  00F1               	movwf	?_isspace
 10644  354D  0874               	movf	??_isspace+1,w
 10645  354E  00F2               	movwf	?_isspace+1
 10646  354F  0008               	return
 10647  3550                     __end_of_isspace:	
 10648                           
 10649                           	psect	text31
 10650  343D                     __ptext31:	
 10651 ;; *************** function _isdigit *****************
 10652 ;; Defined at:
 10653 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 10654 ;; Parameters:    Size  Location     Type
 10655 ;;  c               2    1[COMMON] int 
 10656 ;; Auto vars:     Size  Location     Type
 10657 ;;		None
 10658 ;; Return value:  Size  Location     Type
 10659 ;;                  2    1[COMMON] int 
 10660 ;; Registers used:
 10661 ;;		wreg, status,2, status,0
 10662 ;; Tracked objects:
 10663 ;;		On entry : 0/0
 10664 ;;		On exit  : 0/0
 10665 ;;		Unchanged: 0/0
 10666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10667 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10669 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10670 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10671 ;;Total ram usage:        6 bytes
 10672 ;; Hardware stack levels used:    1
 10673 ;; Hardware stack levels required when called:    1
 10674 ;; This function calls:
 10675 ;;		Nothing
 10676 ;; This function is called by:
 10677 ;;		_vfpfcnvrt
 10678 ;;		_atoi
 10679 ;; This function uses a non-reentrant model
 10680 ;;
 10681                           
 10682                           
 10683                           ;psect for function _isdigit
 10684  343D                     _isdigit:	
 10685                           
 10686                           ;incstack = 0
 10687                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 10688  343D  0871               	movf	isdigit@c,w
 10689  343E  3ED0               	addlw	208
 10690  343F  00F3               	movwf	??_isdigit
 10691  3440  30FF               	movlw	255
 10692  3441  3D72               	addwfc	isdigit@c+1,w
 10693  3442  00F4               	movwf	??_isdigit+1
 10694  3443  3000               	movlw	0
 10695  3444  0274               	subwf	??_isdigit+1,w
 10696  3445  300A               	movlw	10
 10697  3446  1903               	skipnz
 10698  3447  0273               	subwf	??_isdigit,w
 10699  3448  1803               	btfsc	3,0
 10700  3449  2C4C               	goto	u7900
 10701  344A  3001               	movlw	1
 10702  344B  2C4D               	goto	u7910
 10703  344C                     u7900:	
 10704  344C  3000               	movlw	0
 10705  344D                     u7910:	
 10706  344D  00F5               	movwf	??_isdigit+2
 10707  344E  01F6               	clrf	??_isdigit+3
 10708  344F  0875               	movf	??_isdigit+2,w
 10709  3450  00F1               	movwf	?_isdigit
 10710  3451  0876               	movf	??_isdigit+3,w
 10711  3452  00F2               	movwf	?_isdigit+1
 10712  3453  0008               	return
 10713  3454                     __end_of_isdigit:	
 10714                           
 10715                           	psect	text32
 10716  34C9                     __ptext32:	
 10717 ;; *************** function _EUSART_Write_Text *****************
 10718 ;; Defined at:
 10719 ;;		line 75 in file "EUSART.c"
 10720 ;; Parameters:    Size  Location     Type
 10721 ;;  text            2    2[COMMON] PTR unsigned char 
 10722 ;;		 -> STR_22(3), STR_9(3), STR_8(38), messageBuffer(127), 
 10723 ;; Auto vars:     Size  Location     Type
 10724 ;;  i               2    5[COMMON] int 
 10725 ;; Return value:  Size  Location     Type
 10726 ;;                  1    wreg      void 
 10727 ;; Registers used:
 10728 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10729 ;; Tracked objects:
 10730 ;;		On entry : 0/0
 10731 ;;		On exit  : 0/0
 10732 ;;		Unchanged: 0/0
 10733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10734 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10735 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10736 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10737 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10738 ;;Total ram usage:        5 bytes
 10739 ;; Hardware stack levels used:    1
 10740 ;; Hardware stack levels required when called:    2
 10741 ;; This function calls:
 10742 ;;		_EUSART_Write
 10743 ;; This function is called by:
 10744 ;;		_statemachine
 10745 ;;		_printcellParameters
 10746 ;;		_printotAFERegisters
 10747 ;; This function uses a non-reentrant model
 10748 ;;
 10749                           
 10750                           
 10751                           ;psect for function _EUSART_Write_Text
 10752  34C9                     _EUSART_Write_Text:	
 10753                           
 10754                           ;EUSART.c: 75: void EUSART_Write_Text(char *text);EUSART.c: 76: {;EUSART.c: 77:   int i;
      +                          ;EUSART.c: 78:   for(i=0;text[i]!='\0';i++)
 10755                           
 10756                           ;incstack = 0
 10757                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10758  34C9  01F5               	clrf	EUSART_Write_Text@i
 10759  34CA  01F6               	clrf	EUSART_Write_Text@i+1
 10760  34CB                     l8034:	
 10761  34CB  0872               	movf	EUSART_Write_Text@text,w
 10762  34CC  0775               	addwf	EUSART_Write_Text@i,w
 10763  34CD  0084               	movwf	4
 10764  34CE  0873               	movf	EUSART_Write_Text@text+1,w
 10765  34CF  3D76               	addwfc	EUSART_Write_Text@i+1,w
 10766  34D0  0085               	movwf	5
 10767  34D1  0012               	moviw fsr0++
 10768  34D2  1903               	btfsc	3,2
 10769  34D3  0008               	return
 10770                           
 10771                           ;EUSART.c: 79:    EUSART_Write(text[i]);
 10772  34D4  0872               	movf	EUSART_Write_Text@text,w
 10773  34D5  0775               	addwf	EUSART_Write_Text@i,w
 10774  34D6  0084               	movwf	4
 10775  34D7  0873               	movf	EUSART_Write_Text@text+1,w
 10776  34D8  3D76               	addwfc	EUSART_Write_Text@i+1,w
 10777  34D9  0085               	movwf	5
 10778  34DA  0800               	movf	0,w	;code access
 10779  34DB  3188  2000  31B4   	fcall	_EUSART_Write
 10780  34DE  3001               	movlw	1
 10781  34DF  07F5               	addwf	EUSART_Write_Text@i,f
 10782  34E0  3000               	movlw	0
 10783  34E1  3DF6               	addwfc	EUSART_Write_Text@i+1,f
 10784  34E2  2CCB               	goto	l8034
 10785  34E3                     __end_of_EUSART_Write_Text:	
 10786                           
 10787                           	psect	text33
 10788  0800                     __ptext33:	
 10789 ;; *************** function _EUSART_Write *****************
 10790 ;; Defined at:
 10791 ;;		line 56 in file "EUSART.c"
 10792 ;; Parameters:    Size  Location     Type
 10793 ;;  txData          1    wreg     unsigned char 
 10794 ;; Auto vars:     Size  Location     Type
 10795 ;;  txData          1    1[COMMON] unsigned char 
 10796 ;; Return value:  Size  Location     Type
 10797 ;;                  1    wreg      void 
 10798 ;; Registers used:
 10799 ;;		wreg
 10800 ;; Tracked objects:
 10801 ;;		On entry : 0/0
 10802 ;;		On exit  : 0/0
 10803 ;;		Unchanged: 0/0
 10804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10806 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10808 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10809 ;;Total ram usage:        1 bytes
 10810 ;; Hardware stack levels used:    1
 10811 ;; Hardware stack levels required when called:    1
 10812 ;; This function calls:
 10813 ;;		Nothing
 10814 ;; This function is called by:
 10815 ;;		_EUSART_Write_Text
 10816 ;; This function uses a non-reentrant model
 10817 ;;
 10818                           
 10819                           
 10820                           ;psect for function _EUSART_Write
 10821  0800                     _EUSART_Write:	
 10822                           
 10823                           ;incstack = 0
 10824                           ; Regs used in _EUSART_Write: [wreg]
 10825                           ;EUSART_Write@txData stored from wreg
 10826  0800  00F1               	movwf	EUSART_Write@txData
 10827  0801                     l243:	
 10828                           ;EUSART.c: 59:     {;EUSART.c: 60:     }
 10829                           
 10830                           
 10831                           ;EUSART.c: 58:     while(0 == PIR1bits.TXIF)
 10832  0801  0020               	movlb	0	; select bank0
 10833  0802  1E11               	btfss	17,4	;volatile
 10834  0803  2801               	goto	l243
 10835                           
 10836                           ;EUSART.c: 62:     TX1REG = txData;
 10837  0804  0871               	movf	EUSART_Write@txData,w
 10838  0805  0023               	movlb	3	; select bank3
 10839  0806  009A               	movwf	26	;volatile
 10840  0807  0008               	return
 10841  0808                     __end_of_EUSART_Write:	
 10842                           
 10843                           	psect	text34
 10844  28C7                     __ptext34:	
 10845 ;; *************** function _init_AFE *****************
 10846 ;; Defined at:
 10847 ;;		line 3 in file "BQ76920.c"
 10848 ;; Parameters:    Size  Location     Type
 10849 ;;		None
 10850 ;; Auto vars:     Size  Location     Type
 10851 ;;		None
 10852 ;; Return value:  Size  Location     Type
 10853 ;;                  1    wreg      void 
 10854 ;; Registers used:
 10855 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10856 ;; Tracked objects:
 10857 ;;		On entry : 0/0
 10858 ;;		On exit  : 0/0
 10859 ;;		Unchanged: 0/0
 10860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10865 ;;Total ram usage:        0 bytes
 10866 ;; Hardware stack levels used:    1
 10867 ;; Hardware stack levels required when called:    4
 10868 ;; This function calls:
 10869 ;;		_setCellOvervoltageProtection
 10870 ;;		_setCellUndervoltageProtection
 10871 ;;		_setOverCurrentDischargeProtection
 10872 ;;		_setShortCircuitProtection
 10873 ;;		_setShuntResistorValue
 10874 ;;		_setTemperatureLimitsint
 10875 ;; This function is called by:
 10876 ;;		_statemachine
 10877 ;; This function uses a non-reentrant model
 10878 ;;
 10879                           
 10880                           
 10881                           ;psect for function _init_AFE
 10882  28C7                     _init_AFE:	
 10883                           
 10884                           ;BQ76920.c: 5:     setTemperatureLimitsint(-20, 45, 0, 45);
 10885                           
 10886                           ;incstack = 0
 10887                           ; Regs used in _init_AFE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10888  28C7  30EC               	movlw	236
 10889  28C8  0020               	movlb	0	; select bank0
 10890  28C9  00A0               	movwf	setTemperatureLimitsint@minDischarge_degC
 10891  28CA  30FF               	movlw	255
 10892  28CB  00A1               	movwf	setTemperatureLimitsint@minDischarge_degC+1
 10893  28CC  302D               	movlw	45
 10894  28CD  00A2               	movwf	setTemperatureLimitsint@maxDischarge_degC
 10895  28CE  3000               	movlw	0
 10896  28CF  00A3               	movwf	setTemperatureLimitsint@maxDischarge_degC+1
 10897  28D0  3000               	movlw	0
 10898  28D1  00A4               	movwf	setTemperatureLimitsint@minCharge_degC
 10899  28D2  00A5               	movwf	setTemperatureLimitsint@minCharge_degC+1
 10900  28D3  302D               	movlw	45
 10901  28D4  00A6               	movwf	setTemperatureLimitsint@maxCharge_degC
 10902  28D5  3000               	movlw	0
 10903  28D6  00A7               	movwf	setTemperatureLimitsint@maxCharge_degC+1
 10904  28D7  31B7  276B  31A8   	fcall	_setTemperatureLimitsint
 10905                           
 10906                           ;BQ76920.c: 6:     setShuntResistorValue(0.02);
 10907  28DA  303C               	movlw	60
 10908  28DB  00F4               	movwf	setShuntResistorValue@res_mOhm+3
 10909  28DC  30A3               	movlw	163
 10910  28DD  00F3               	movwf	setShuntResistorValue@res_mOhm+2
 10911  28DE  30D7               	movlw	215
 10912  28DF  00F2               	movwf	setShuntResistorValue@res_mOhm+1
 10913  28E0  300A               	movlw	10
 10914  28E1  00F1               	movwf	setShuntResistorValue@res_mOhm
 10915  28E2  31B3  23FC  31A8   	fcall	_setShuntResistorValue
 10916                           
 10917                           ;BQ76920.c: 9:     setShortCircuitProtection(500, 200);
 10918  28E5  3000               	movlw	0
 10919  28E6  0020               	movlb	0	; select bank0
 10920  28E7  00E9               	movwf	setShortCircuitProtection@current_mA+3
 10921  28E8  3000               	movlw	0
 10922  28E9  00E8               	movwf	setShortCircuitProtection@current_mA+2
 10923  28EA  3001               	movlw	1
 10924  28EB  00E7               	movwf	setShortCircuitProtection@current_mA+1
 10925  28EC  30F4               	movlw	244
 10926  28ED  00E6               	movwf	setShortCircuitProtection@current_mA
 10927  28EE  30C8               	movlw	200
 10928  28EF  00EA               	movwf	setShortCircuitProtection@delay_us
 10929  28F0  3000               	movlw	0
 10930  28F1  00EB               	movwf	setShortCircuitProtection@delay_us+1
 10931  28F2  31A6  26E8  31A8   	fcall	_setShortCircuitProtection
 10932                           
 10933                           ;BQ76920.c: 14:     setOverCurrentDischargeProtection(10, 320);
 10934  28F5  3000               	movlw	0
 10935  28F6  0020               	movlb	0	; select bank0
 10936  28F7  00E9               	movwf	setOverCurrentDischargeProtection@current_mA+3
 10937  28F8  3000               	movlw	0
 10938  28F9  00E8               	movwf	setOverCurrentDischargeProtection@current_mA+2
 10939  28FA  3000               	movlw	0
 10940  28FB  00E7               	movwf	setOverCurrentDischargeProtection@current_mA+1
 10941  28FC  300A               	movlw	10
 10942  28FD  00E6               	movwf	setOverCurrentDischargeProtection@current_mA
 10943  28FE  3040               	movlw	64
 10944  28FF  00EA               	movwf	setOverCurrentDischargeProtection@delay_ms
 10945  2900  3001               	movlw	1
 10946  2901  00EB               	movwf	setOverCurrentDischargeProtection@delay_ms+1
 10947  2902  31A5  25D3  31A8   	fcall	_setOverCurrentDischargeProtection
 10948                           
 10949                           ;BQ76920.c: 15:     setCellUndervoltageProtection(2900, 2);
 10950  2905  3054               	movlw	84
 10951  2906  0020               	movlb	0	; select bank0
 10952  2907  00B2               	movwf	setCellUndervoltageProtection@voltage_mV
 10953  2908  300B               	movlw	11
 10954  2909  00B3               	movwf	setCellUndervoltageProtection@voltage_mV+1
 10955  290A  3002               	movlw	2
 10956  290B  00B4               	movwf	setCellUndervoltageProtection@delay_s
 10957  290C  3000               	movlw	0
 10958  290D  00B5               	movwf	setCellUndervoltageProtection@delay_s+1
 10959  290E  31A1  214F  31A8   	fcall	_setCellUndervoltageProtection
 10960                           
 10961                           ;BQ76920.c: 16:     setCellOvervoltageProtection(4100,2);
 10962  2911  3004               	movlw	4
 10963  2912  0020               	movlb	0	; select bank0
 10964  2913  00B2               	movwf	setCellOvervoltageProtection@voltage_mV
 10965  2914  3010               	movlw	16
 10966  2915  00B3               	movwf	setCellOvervoltageProtection@voltage_mV+1
 10967  2916  3002               	movlw	2
 10968  2917  00B4               	movwf	setCellOvervoltageProtection@delay_s
 10969  2918  3000               	movlw	0
 10970  2919  00B5               	movwf	setCellOvervoltageProtection@delay_s+1
 10971  291A  31A0  207A         	fcall	_setCellOvervoltageProtection
 10972  291C  0008               	return
 10973  291D                     __end_of_init_AFE:	
 10974                           
 10975                           	psect	text35
 10976  376B                     __ptext35:	
 10977 ;; *************** function _setTemperatureLimitsint *****************
 10978 ;; Defined at:
 10979 ;;		line 61 in file "BQ76920.c"
 10980 ;; Parameters:    Size  Location     Type
 10981 ;;  minDischarge    2    0[BANK0 ] int 
 10982 ;;  maxDischarge    2    2[BANK0 ] int 
 10983 ;;  minCharge_de    2    4[BANK0 ] int 
 10984 ;;  maxCharge_de    2    6[BANK0 ] int 
 10985 ;; Auto vars:     Size  Location     Type
 10986 ;;		None
 10987 ;; Return value:  Size  Location     Type
 10988 ;;                  1    wreg      void 
 10989 ;; Registers used:
 10990 ;;		wreg, status,2, status,0, pclath, cstack
 10991 ;; Tracked objects:
 10992 ;;		On entry : 0/0
 10993 ;;		On exit  : 0/0
 10994 ;;		Unchanged: 0/0
 10995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10996 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10999 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11000 ;;Total ram usage:        8 bytes
 11001 ;; Hardware stack levels used:    1
 11002 ;; Hardware stack levels required when called:    2
 11003 ;; This function calls:
 11004 ;;		___wmul
 11005 ;; This function is called by:
 11006 ;;		_init_AFE
 11007 ;; This function uses a non-reentrant model
 11008 ;;
 11009                           
 11010                           
 11011                           ;psect for function _setTemperatureLimitsint
 11012  376B                     _setTemperatureLimitsint:	
 11013                           
 11014                           ;BQ76920.c: 63:     minCellTempDischarge = minDischarge_degC * 10;
 11015                           
 11016                           ;incstack = 0
 11017                           ; Regs used in _setTemperatureLimitsint: [wreg+status,2+status,0+pclath+cstack]
 11018  376B  0020               	movlb	0	; select bank0
 11019  376C  0821               	movf	setTemperatureLimitsint@minDischarge_degC+1,w
 11020  376D  00F2               	movwf	___wmul@multiplier+1
 11021  376E  0820               	movf	setTemperatureLimitsint@minDischarge_degC,w
 11022  376F  00F1               	movwf	___wmul@multiplier
 11023  3770  300A               	movlw	10
 11024  3771  00F3               	movwf	___wmul@multiplicand
 11025  3772  3000               	movlw	0
 11026  3773  00F4               	movwf	___wmul@multiplicand+1
 11027  3774  31B4  24E3  31B7   	fcall	___wmul
 11028  3777  0872               	movf	?___wmul+1,w
 11029  3778  0023               	movlb	3	; select bank3
 11030  3779  00CF               	movwf	(_minCellTempDischarge+1)^(0+384)
 11031  377A  0871               	movf	?___wmul,w
 11032  377B  00CE               	movwf	_minCellTempDischarge^(0+384)
 11033                           
 11034                           ;BQ76920.c: 64:     maxCellTempDischarge = maxDischarge_degC * 10;
 11035  377C  0020               	movlb	0	; select bank0
 11036  377D  0823               	movf	setTemperatureLimitsint@maxDischarge_degC+1,w
 11037  377E  00F2               	movwf	___wmul@multiplier+1
 11038  377F  0822               	movf	setTemperatureLimitsint@maxDischarge_degC,w
 11039  3780  00F1               	movwf	___wmul@multiplier
 11040  3781  300A               	movlw	10
 11041  3782  00F3               	movwf	___wmul@multiplicand
 11042  3783  3000               	movlw	0
 11043  3784  00F4               	movwf	___wmul@multiplicand+1
 11044  3785  31B4  24E3  31B7   	fcall	___wmul
 11045  3788  0872               	movf	?___wmul+1,w
 11046  3789  0023               	movlb	3	; select bank3
 11047  378A  00CB               	movwf	(_maxCellTempDischarge+1)^(0+384)
 11048  378B  0871               	movf	?___wmul,w
 11049  378C  00CA               	movwf	_maxCellTempDischarge^(0+384)
 11050                           
 11051                           ;BQ76920.c: 65:     minCellTempCharge = minCharge_degC * 10;
 11052  378D  0020               	movlb	0	; select bank0
 11053  378E  0825               	movf	setTemperatureLimitsint@minCharge_degC+1,w
 11054  378F  00F2               	movwf	___wmul@multiplier+1
 11055  3790  0824               	movf	setTemperatureLimitsint@minCharge_degC,w
 11056  3791  00F1               	movwf	___wmul@multiplier
 11057  3792  300A               	movlw	10
 11058  3793  00F3               	movwf	___wmul@multiplicand
 11059  3794  3000               	movlw	0
 11060  3795  00F4               	movwf	___wmul@multiplicand+1
 11061  3796  31B4  24E3  31B7   	fcall	___wmul
 11062  3799  0872               	movf	?___wmul+1,w
 11063  379A  0023               	movlb	3	; select bank3
 11064  379B  00D1               	movwf	(_minCellTempCharge+1)^(0+384)
 11065  379C  0871               	movf	?___wmul,w
 11066  379D  00D0               	movwf	_minCellTempCharge^(0+384)
 11067                           
 11068                           ;BQ76920.c: 66:     maxCellTempCharge = maxCharge_degC * 10;
 11069  379E  0020               	movlb	0	; select bank0
 11070  379F  0827               	movf	setTemperatureLimitsint@maxCharge_degC+1,w
 11071  37A0  00F2               	movwf	___wmul@multiplier+1
 11072  37A1  0826               	movf	setTemperatureLimitsint@maxCharge_degC,w
 11073  37A2  00F1               	movwf	___wmul@multiplier
 11074  37A3  300A               	movlw	10
 11075  37A4  00F3               	movwf	___wmul@multiplicand
 11076  37A5  3000               	movlw	0
 11077  37A6  00F4               	movwf	___wmul@multiplicand+1
 11078  37A7  31B4  24E3         	fcall	___wmul
 11079  37A9  0872               	movf	?___wmul+1,w
 11080  37AA  0023               	movlb	3	; select bank3
 11081  37AB  00CD               	movwf	(_maxCellTempCharge+1)^(0+384)
 11082  37AC  0871               	movf	?___wmul,w
 11083  37AD  00CC               	movwf	_maxCellTempCharge^(0+384)
 11084  37AE  0008               	return
 11085  37AF                     __end_of_setTemperatureLimitsint:	
 11086                           
 11087                           	psect	text36
 11088  34E3                     __ptext36:	
 11089 ;; *************** function ___wmul *****************
 11090 ;; Defined at:
 11091 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 11092 ;; Parameters:    Size  Location     Type
 11093 ;;  multiplier      2    1[COMMON] unsigned int 
 11094 ;;  multiplicand    2    3[COMMON] unsigned int 
 11095 ;; Auto vars:     Size  Location     Type
 11096 ;;  product         2    5[COMMON] unsigned int 
 11097 ;; Return value:  Size  Location     Type
 11098 ;;                  2    1[COMMON] unsigned int 
 11099 ;; Registers used:
 11100 ;;		wreg, status,2, status,0
 11101 ;; Tracked objects:
 11102 ;;		On entry : 0/0
 11103 ;;		On exit  : 0/0
 11104 ;;		Unchanged: 0/0
 11105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11106 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11107 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11109 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11110 ;;Total ram usage:        6 bytes
 11111 ;; Hardware stack levels used:    1
 11112 ;; Hardware stack levels required when called:    1
 11113 ;; This function calls:
 11114 ;;		Nothing
 11115 ;; This function is called by:
 11116 ;;		_setTemperatureLimitsint
 11117 ;;		_atoi
 11118 ;; This function uses a non-reentrant model
 11119 ;;
 11120                           
 11121                           
 11122                           ;psect for function ___wmul
 11123  34E3                     ___wmul:	
 11124                           
 11125                           ;incstack = 0
 11126                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11127  34E3  01F5               	clrf	___wmul@product
 11128  34E4  01F6               	clrf	___wmul@product+1
 11129  34E5                     l6346:	
 11130  34E5  1C71               	btfss	___wmul@multiplier,0
 11131  34E6  2CEB               	goto	l847
 11132  34E7  0873               	movf	___wmul@multiplicand,w
 11133  34E8  07F5               	addwf	___wmul@product,f
 11134  34E9  0874               	movf	___wmul@multiplicand+1,w
 11135  34EA  3DF6               	addwfc	___wmul@product+1,f
 11136  34EB                     l847:	
 11137  34EB  3001               	movlw	1
 11138  34EC                     u7935:	
 11139  34EC  35F3               	lslf	___wmul@multiplicand,f
 11140  34ED  0DF4               	rlf	___wmul@multiplicand+1,f
 11141  34EE  0B89               	decfsz	9,f
 11142  34EF  2CEC               	goto	u7935
 11143  34F0  3001               	movlw	1
 11144  34F1                     u7945:	
 11145  34F1  36F2               	lsrf	___wmul@multiplier+1,f
 11146  34F2  0CF1               	rrf	___wmul@multiplier,f
 11147  34F3  0B89               	decfsz	9,f
 11148  34F4  2CF1               	goto	u7945
 11149  34F5  0871               	movf	___wmul@multiplier,w
 11150  34F6  0472               	iorwf	___wmul@multiplier+1,w
 11151  34F7  1D03               	btfss	3,2
 11152  34F8  2CE5               	goto	l6346
 11153  34F9  0876               	movf	___wmul@product+1,w
 11154  34FA  00F2               	movwf	?___wmul+1
 11155  34FB  0875               	movf	___wmul@product,w
 11156  34FC  00F1               	movwf	?___wmul
 11157  34FD  0008               	return
 11158  34FE                     __end_of___wmul:	
 11159                           
 11160                           	psect	text37
 11161  33FC                     __ptext37:	
 11162 ;; *************** function _setShuntResistorValue *****************
 11163 ;; Defined at:
 11164 ;;		line 73 in file "BQ76920.c"
 11165 ;; Parameters:    Size  Location     Type
 11166 ;;  res_mOhm        4    1[COMMON] float 
 11167 ;; Auto vars:     Size  Location     Type
 11168 ;;		None
 11169 ;; Return value:  Size  Location     Type
 11170 ;;                  1    wreg      void 
 11171 ;; Registers used:
 11172 ;;		wreg
 11173 ;; Tracked objects:
 11174 ;;		On entry : 0/0
 11175 ;;		On exit  : 0/0
 11176 ;;		Unchanged: 0/0
 11177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11178 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11181 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11182 ;;Total ram usage:        4 bytes
 11183 ;; Hardware stack levels used:    1
 11184 ;; Hardware stack levels required when called:    1
 11185 ;; This function calls:
 11186 ;;		Nothing
 11187 ;; This function is called by:
 11188 ;;		_init_AFE
 11189 ;; This function uses a non-reentrant model
 11190 ;;
 11191                           
 11192                           
 11193                           ;psect for function _setShuntResistorValue
 11194  33FC                     _setShuntResistorValue:	
 11195                           
 11196                           ;BQ76920.c: 74:     shuntResistorValue_mOhm = res_mOhm;
 11197                           
 11198                           ;incstack = 0
 11199                           ; Regs used in _setShuntResistorValue: [wreg]
 11200  33FC  0874               	movf	setShuntResistorValue@res_mOhm+3,w
 11201  33FD  0023               	movlb	3	; select bank3
 11202  33FE  00B1               	movwf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384)
 11203  33FF  0873               	movf	setShuntResistorValue@res_mOhm+2,w
 11204  3400  00B0               	movwf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384)
 11205  3401  0872               	movf	setShuntResistorValue@res_mOhm+1,w
 11206  3402  00AF               	movwf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384)
 11207  3403  0871               	movf	setShuntResistorValue@res_mOhm,w
 11208  3404  00AE               	movwf	BQ76920@shuntResistorValue_mOhm^(0+384)
 11209  3405  0008               	return
 11210  3406                     __end_of_setShuntResistorValue:	
 11211                           
 11212                           	psect	text38
 11213  26E8                     __ptext38:	
 11214 ;; *************** function _setShortCircuitProtection *****************
 11215 ;; Defined at:
 11216 ;;		line 81 in file "BQ76920.c"
 11217 ;; Parameters:    Size  Location     Type
 11218 ;;  current_mA      4   70[BANK0 ] long 
 11219 ;;  delay_us        2   74[BANK0 ] int 
 11220 ;; Auto vars:     Size  Location     Type
 11221 ;;  i               2   10[BANK1 ] int 
 11222 ;;  i               2    8[BANK1 ] int 
 11223 ;;  scaler          4    0[BANK1 ] float 
 11224 ;; Return value:  Size  Location     Type
 11225 ;;                  1    wreg      void 
 11226 ;; Registers used:
 11227 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11228 ;; Tracked objects:
 11229 ;;		On entry : 0/0
 11230 ;;		On exit  : 0/0
 11231 ;;		Unchanged: 0/0
 11232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11233 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11234 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11235 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11236 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11237 ;;Total ram usage:       21 bytes
 11238 ;; Hardware stack levels used:    1
 11239 ;; Hardware stack levels required when called:    3
 11240 ;; This function calls:
 11241 ;;		_I2C_writeRegister
 11242 ;;		___fldiv
 11243 ;;		___flge
 11244 ;;		___flmul
 11245 ;;		___xxtofl
 11246 ;; This function is called by:
 11247 ;;		_init_AFE
 11248 ;; This function uses a non-reentrant model
 11249 ;;
 11250                           
 11251                           
 11252                           ;psect for function _setShortCircuitProtection
 11253  26E8                     _setShortCircuitProtection:	
 11254                           
 11255                           ;BQ76920.c: 86:     float scaler = 1000.0;
 11256                           
 11257                           ;incstack = 0
 11258                           ; Regs used in _setShortCircuitProtection: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11259  26E8  3044               	movlw	68
 11260  26E9  0021               	movlb	1	; select bank1
 11261  26EA  00A3               	movwf	(setShortCircuitProtection@scaler+3)^(0+128)
 11262  26EB  307A               	movlw	122
 11263  26EC  00A2               	movwf	(setShortCircuitProtection@scaler+2)^(0+128)
 11264  26ED  3000               	movlw	0
 11265  26EE  00A1               	movwf	(setShortCircuitProtection@scaler+1)^(0+128)
 11266  26EF  3000               	movlw	0
 11267  26F0  00A0               	movwf	setShortCircuitProtection@scaler^(0+128)
 11268                           
 11269                           ;BQ76920.c: 87:     protect1.bits.SCD_THRESH = 0;
 11270  26F1  30F8               	movlw	-8
 11271  26F2  0023               	movlb	3	; select bank3
 11272  26F3  05D4               	andwf	BQ76920@protect1^(0+384),f
 11273                           
 11274                           ;BQ76920.c: 88:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 11275  26F4  0021               	movlb	1	; select bank1
 11276  26F5  01A8               	clrf	setShortCircuitProtection@i^(0+128)
 11277  26F6  01A9               	clrf	(setShortCircuitProtection@i+1)^(0+128)
 11278  26F7                     l8050:	
 11279                           
 11280                           ;BQ76920.c: 89:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 11281  26F7  0023               	movlb	3	; select bank3
 11282  26F8  0831               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 11283  26F9  0020               	movlb	0	; select bank0
 11284  26FA  00A9               	movwf	___flmul@b+3
 11285  26FB  0023               	movlb	3	; select bank3
 11286  26FC  0830               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 11287  26FD  0020               	movlb	0	; select bank0
 11288  26FE  00A8               	movwf	___flmul@b+2
 11289  26FF  0023               	movlb	3	; select bank3
 11290  2700  082F               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 11291  2701  0020               	movlb	0	; select bank0
 11292  2702  00A7               	movwf	___flmul@b+1
 11293  2703  0023               	movlb	3	; select bank3
 11294  2704  082E               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 11295  2705  0020               	movlb	0	; select bank0
 11296  2706  00A6               	movwf	___flmul@b
 11297  2707  0869               	movf	setShortCircuitProtection@current_mA+3,w
 11298  2708  00F4               	movwf	___xxtofl@val+3
 11299  2709  0868               	movf	setShortCircuitProtection@current_mA+2,w
 11300  270A  00F3               	movwf	___xxtofl@val+2
 11301  270B  0867               	movf	setShortCircuitProtection@current_mA+1,w
 11302  270C  00F2               	movwf	___xxtofl@val+1
 11303  270D  0866               	movf	setShortCircuitProtection@current_mA,w
 11304  270E  00F1               	movwf	___xxtofl@val
 11305  270F  3001               	movlw	1
 11306  2710  31AB  23E3  31A6   	fcall	___xxtofl
 11307  2713  0874               	movf	?___xxtofl+3,w
 11308  2714  0020               	movlb	0	; select bank0
 11309  2715  00AD               	movwf	___flmul@a+3
 11310  2716  0873               	movf	?___xxtofl+2,w
 11311  2717  00AC               	movwf	___flmul@a+2
 11312  2718  0872               	movf	?___xxtofl+1,w
 11313  2719  00AB               	movwf	___flmul@a+1
 11314  271A  0871               	movf	?___xxtofl,w
 11315  271B  00AA               	movwf	___flmul@a
 11316  271C  3190  2023  31A6   	fcall	___flmul
 11317  271F  0020               	movlb	0	; select bank0
 11318  2720  0829               	movf	?___flmul+3,w
 11319  2721  0021               	movlb	1	; select bank1
 11320  2722  00A7               	movwf	(_setShortCircuitProtection$2027+3)^(0+128)
 11321  2723  0020               	movlb	0	; select bank0
 11322  2724  0828               	movf	?___flmul+2,w
 11323  2725  0021               	movlb	1	; select bank1
 11324  2726  00A6               	movwf	(_setShortCircuitProtection$2027+2)^(0+128)
 11325  2727  0020               	movlb	0	; select bank0
 11326  2728  0827               	movf	?___flmul+1,w
 11327  2729  0021               	movlb	1	; select bank1
 11328  272A  00A5               	movwf	(_setShortCircuitProtection$2027+1)^(0+128)
 11329  272B  0020               	movlb	0	; select bank0
 11330  272C  0826               	movf	?___flmul,w
 11331  272D  0021               	movlb	1	; select bank1
 11332  272E  00A4               	movwf	_setShortCircuitProtection$2027^(0+128)
 11333                           
 11334                           ;BQ76920.c: 89:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 11335  272F  3044               	movlw	68
 11336  2730  0020               	movlb	0	; select bank0
 11337  2731  00C3               	movwf	___fldiv@a+3
 11338  2732  307A               	movlw	122
 11339  2733  00C2               	movwf	___fldiv@a+2
 11340  2734  3000               	movlw	0
 11341  2735  00C1               	movwf	___fldiv@a+1
 11342  2736  3000               	movlw	0
 11343  2737  00C0               	movwf	___fldiv@a
 11344  2738  0021               	movlb	1	; select bank1
 11345  2739  0823               	movf	(setShortCircuitProtection@scaler+3)^(0+128),w
 11346  273A  0020               	movlb	0	; select bank0
 11347  273B  00A9               	movwf	___flmul@b+3
 11348  273C  0021               	movlb	1	; select bank1
 11349  273D  0822               	movf	(setShortCircuitProtection@scaler+2)^(0+128),w
 11350  273E  0020               	movlb	0	; select bank0
 11351  273F  00A8               	movwf	___flmul@b+2
 11352  2740  0021               	movlb	1	; select bank1
 11353  2741  0821               	movf	(setShortCircuitProtection@scaler+1)^(0+128),w
 11354  2742  0020               	movlb	0	; select bank0
 11355  2743  00A7               	movwf	___flmul@b+1
 11356  2744  0021               	movlb	1	; select bank1
 11357  2745  0820               	movf	setShortCircuitProtection@scaler^(0+128),w
 11358  2746  0020               	movlb	0	; select bank0
 11359  2747  00A6               	movwf	___flmul@b
 11360  2748  0021               	movlb	1	; select bank1
 11361  2749  0827               	movf	(_setShortCircuitProtection$2027+3)^(0+128),w
 11362  274A  0020               	movlb	0	; select bank0
 11363  274B  00AD               	movwf	___flmul@a+3
 11364  274C  0021               	movlb	1	; select bank1
 11365  274D  0826               	movf	(_setShortCircuitProtection$2027+2)^(0+128),w
 11366  274E  0020               	movlb	0	; select bank0
 11367  274F  00AC               	movwf	___flmul@a+2
 11368  2750  0021               	movlb	1	; select bank1
 11369  2751  0825               	movf	(_setShortCircuitProtection$2027+1)^(0+128),w
 11370  2752  0020               	movlb	0	; select bank0
 11371  2753  00AB               	movwf	___flmul@a+1
 11372  2754  0021               	movlb	1	; select bank1
 11373  2755  0824               	movf	_setShortCircuitProtection$2027^(0+128),w
 11374  2756  0020               	movlb	0	; select bank0
 11375  2757  00AA               	movwf	___flmul@a
 11376  2758  3190  2023  31A6   	fcall	___flmul
 11377  275B  0020               	movlb	0	; select bank0
 11378  275C  0829               	movf	?___flmul+3,w
 11379  275D  00C7               	movwf	___fldiv@b+3
 11380  275E  0828               	movf	?___flmul+2,w
 11381  275F  00C6               	movwf	___fldiv@b+2
 11382  2760  0827               	movf	?___flmul+1,w
 11383  2761  00C5               	movwf	___fldiv@b+1
 11384  2762  0826               	movf	?___flmul,w
 11385  2763  00C4               	movwf	___fldiv@b
 11386  2764  319C  24E2  31A6   	fcall	___fldiv
 11387  2767  0020               	movlb	0	; select bank0
 11388  2768  0843               	movf	?___fldiv+3,w
 11389  2769  00DD               	movwf	___flge@ff1+3
 11390  276A  0842               	movf	?___fldiv+2,w
 11391  276B  00DC               	movwf	___flge@ff1+2
 11392  276C  0841               	movf	?___fldiv+1,w
 11393  276D  00DB               	movwf	___flge@ff1+1
 11394  276E  0840               	movf	?___fldiv,w
 11395  276F  00DA               	movwf	___flge@ff1
 11396  2770  0021               	movlb	1	; select bank1
 11397  2771  0829               	movf	(setShortCircuitProtection@i+1)^(0+128),w
 11398  2772  0085               	movwf	5
 11399  2773  0828               	movf	setShortCircuitProtection@i^(0+128),w
 11400  2774  0084               	movwf	4
 11401  2775  3584               	lslf	4,f
 11402  2776  0D85               	rlf	5,f
 11403  2777  30BB               	movlw	low (_SCD_threshold_setting| (0+32768))
 11404  2778  0784               	addwf	4,f
 11405  2779  30B9               	movlw	high (_SCD_threshold_setting| (0+32768))
 11406  277A  3D85               	addwfc	5,f
 11407  277B  3F00               	moviw [0]fsr0
 11408  277C  0020               	movlb	0	; select bank0
 11409  277D  00EC               	movwf	??_setShortCircuitProtection
 11410  277E  3F01               	moviw [1]fsr0
 11411  277F  00ED               	movwf	??_setShortCircuitProtection+1
 11412  2780  086C               	movf	??_setShortCircuitProtection,w
 11413  2781  00F1               	movwf	___xxtofl@val
 11414  2782  086D               	movf	??_setShortCircuitProtection+1,w
 11415  2783  00F2               	movwf	___xxtofl@val+1
 11416  2784  0D89               	rlf	9,f
 11417  2785  3B89               	subwfb	9,f
 11418  2786  0989               	comf	9,f
 11419  2787  00F3               	movwf	___xxtofl@val+2
 11420  2788  00F4               	movwf	___xxtofl@val+3
 11421  2789  3001               	movlw	1
 11422  278A  31AB  23E3  31A6   	fcall	___xxtofl
 11423  278D  0874               	movf	?___xxtofl+3,w
 11424  278E  0020               	movlb	0	; select bank0
 11425  278F  00E1               	movwf	___flge@ff2+3
 11426  2790  0873               	movf	?___xxtofl+2,w
 11427  2791  00E0               	movwf	___flge@ff2+2
 11428  2792  0872               	movf	?___xxtofl+1,w
 11429  2793  00DF               	movwf	___flge@ff2+1
 11430  2794  0871               	movf	?___xxtofl,w
 11431  2795  00DE               	movwf	___flge@ff2
 11432  2796  31A9  21EC  31A6   	fcall	___flge
 11433  2799  1C03               	btfss	3,0
 11434  279A  2FA3               	goto	l8056
 11435                           
 11436                           ;BQ76920.c: 90:             protect1.bits.SCD_THRESH = i;
 11437  279B  0023               	movlb	3	; select bank3
 11438  279C  0854               	movf	BQ76920@protect1^(0+384),w
 11439  279D  0021               	movlb	1	; select bank1
 11440  279E  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 11441  279F  39F8               	andlw	-8
 11442  27A0  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 11443  27A1  0023               	movlb	3	; select bank3
 11444  27A2  00D4               	movwf	BQ76920@protect1^(0+384)
 11445  27A3                     l8056:	
 11446                           
 11447                           ;BQ76920.c: 92:     }
 11448  27A3  3001               	movlw	1
 11449  27A4  0021               	movlb	1	; select bank1
 11450  27A5  07A8               	addwf	setShortCircuitProtection@i^(0+128),f
 11451  27A6  3000               	movlw	0
 11452  27A7  3DA9               	addwfc	(setShortCircuitProtection@i+1)^(0+128),f
 11453  27A8  3000               	movlw	0
 11454  27A9  0229               	subwf	(setShortCircuitProtection@i+1)^(0+128),w
 11455  27AA  3007               	movlw	7
 11456  27AB  1903               	skipnz
 11457  27AC  0228               	subwf	setShortCircuitProtection@i^(0+128),w
 11458  27AD  1C03               	skipc
 11459  27AE  2EF7               	goto	l8050
 11460                           
 11461                           ;BQ76920.c: 94:     protect1.bits.SCD_DELAY = 0;
 11462  27AF  30E7               	movlw	-25
 11463  27B0  0023               	movlb	3	; select bank3
 11464  27B1  05D4               	andwf	BQ76920@protect1^(0+384),f
 11465                           
 11466                           ;BQ76920.c: 95:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 11467  27B2  0021               	movlb	1	; select bank1
 11468  27B3  01AA               	clrf	setShortCircuitProtection@i_972^(0+128)
 11469  27B4  01AB               	clrf	(setShortCircuitProtection@i_972+1)^(0+128)
 11470  27B5                     l8068:	
 11471                           
 11472                           ;BQ76920.c: 96:         if (delay_us >= SCD_delay_setting[i]) {
 11473  27B5  082B               	movf	(setShortCircuitProtection@i_972+1)^(0+128),w
 11474  27B6  0085               	movwf	5
 11475  27B7  082A               	movf	setShortCircuitProtection@i_972^(0+128),w
 11476  27B8  0084               	movwf	4
 11477  27B9  3584               	lslf	4,f
 11478  27BA  0D85               	rlf	5,f
 11479  27BB  30F9               	movlw	low (_SCD_delay_setting| (0+32768))
 11480  27BC  0784               	addwf	4,f
 11481  27BD  30B9               	movlw	high (_SCD_delay_setting| (0+32768))
 11482  27BE  3D85               	addwfc	5,f
 11483  27BF  3F00               	moviw [0]fsr0
 11484  27C0  0020               	movlb	0	; select bank0
 11485  27C1  00EC               	movwf	??_setShortCircuitProtection
 11486  27C2  3F01               	moviw [1]fsr0
 11487  27C3  00ED               	movwf	??_setShortCircuitProtection+1
 11488  27C4  086B               	movf	setShortCircuitProtection@delay_us+1,w
 11489  27C5  3A80               	xorlw	128
 11490  27C6  00EE               	movwf	??_setShortCircuitProtection+2
 11491  27C7  086D               	movf	??_setShortCircuitProtection+1,w
 11492  27C8  3A80               	xorlw	128
 11493  27C9  026E               	subwf	??_setShortCircuitProtection+2,w
 11494  27CA  1D03               	skipz
 11495  27CB  2FCE               	goto	u11165
 11496  27CC  086C               	movf	??_setShortCircuitProtection,w
 11497  27CD  026A               	subwf	setShortCircuitProtection@delay_us,w
 11498  27CE                     u11165:	
 11499  27CE  1C03               	skipc
 11500  27CF  2FDF               	goto	l8072
 11501                           
 11502                           ;BQ76920.c: 97:             protect1.bits.SCD_DELAY = i;
 11503  27D0  0021               	movlb	1	; select bank1
 11504  27D1  082A               	movf	setShortCircuitProtection@i_972^(0+128),w
 11505  27D2  0020               	movlb	0	; select bank0
 11506  27D3  00EC               	movwf	??_setShortCircuitProtection
 11507  27D4  0DEC               	rlf	??_setShortCircuitProtection,f
 11508  27D5  0DEC               	rlf	??_setShortCircuitProtection,f
 11509  27D6  0DEC               	rlf	??_setShortCircuitProtection,f
 11510  27D7  0023               	movlb	3	; select bank3
 11511  27D8  0854               	movf	BQ76920@protect1^(0+384),w
 11512  27D9  0020               	movlb	0	; select bank0
 11513  27DA  066C               	xorwf	??_setShortCircuitProtection,w
 11514  27DB  39E7               	andlw	-25
 11515  27DC  066C               	xorwf	??_setShortCircuitProtection,w
 11516  27DD  0023               	movlb	3	; select bank3
 11517  27DE  00D4               	movwf	BQ76920@protect1^(0+384)
 11518  27DF                     l8072:	
 11519                           
 11520                           ;BQ76920.c: 99:     }
 11521  27DF  3001               	movlw	1
 11522  27E0  0021               	movlb	1	; select bank1
 11523  27E1  07AA               	addwf	setShortCircuitProtection@i_972^(0+128),f
 11524  27E2  3000               	movlw	0
 11525  27E3  3DAB               	addwfc	(setShortCircuitProtection@i_972+1)^(0+128),f
 11526  27E4  3000               	movlw	0
 11527  27E5  022B               	subwf	(setShortCircuitProtection@i_972+1)^(0+128),w
 11528  27E6  3007               	movlw	7
 11529  27E7  1903               	skipnz
 11530  27E8  022A               	subwf	setShortCircuitProtection@i_972^(0+128),w
 11531  27E9  1C03               	skipc
 11532  27EA  2FB5               	goto	l8068
 11533                           
 11534                           ;BQ76920.c: 100:     protect1.bits.RSNS = 1;
 11535  27EB  0023               	movlb	3	; select bank3
 11536  27EC  17D4               	bsf	BQ76920@protect1^(0+384),7
 11537                           
 11538                           ;BQ76920.c: 102:     I2C_writeRegister(0x18, 0x06, protect1.regByte);
 11539  27ED  3018               	movlw	24
 11540  27EE  00F5               	movwf	I2C_writeRegister@slaveAddress
 11541  27EF  3000               	movlw	0
 11542  27F0  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 11543  27F1  3006               	movlw	6
 11544  27F2  00F7               	movwf	I2C_writeRegister@regAddress
 11545  27F3  3000               	movlw	0
 11546  27F4  00F8               	movwf	I2C_writeRegister@regAddress+1
 11547  27F5  0854               	movf	BQ76920@protect1^(0+384),w
 11548  27F6  0020               	movlb	0	; select bank0
 11549  27F7  00EC               	movwf	??_setShortCircuitProtection
 11550  27F8  01ED               	clrf	??_setShortCircuitProtection+1
 11551  27F9  086C               	movf	??_setShortCircuitProtection,w
 11552  27FA  00F9               	movwf	I2C_writeRegister@data
 11553  27FB  086D               	movf	??_setShortCircuitProtection+1,w
 11554  27FC  00FA               	movwf	I2C_writeRegister@data+1
 11555  27FD  31B5  256D         	fcall	_I2C_writeRegister
 11556  27FF  0008               	return
 11557  2800                     __end_of_setShortCircuitProtection:	
 11558                           
 11559                           	psect	text39
 11560  25D3                     __ptext39:	
 11561 ;; *************** function _setOverCurrentDischargeProtection *****************
 11562 ;; Defined at:
 11563 ;;		line 109 in file "BQ76920.c"
 11564 ;; Parameters:    Size  Location     Type
 11565 ;;  current_mA      4   70[BANK0 ] long 
 11566 ;;  delay_ms        2   74[BANK0 ] int 
 11567 ;; Auto vars:     Size  Location     Type
 11568 ;;  i               2   10[BANK1 ] int 
 11569 ;;  i               2    8[BANK1 ] int 
 11570 ;;  scaler          4    0[BANK1 ] float 
 11571 ;; Return value:  Size  Location     Type
 11572 ;;                  1    wreg      void 
 11573 ;; Registers used:
 11574 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11575 ;; Tracked objects:
 11576 ;;		On entry : 0/0
 11577 ;;		On exit  : 0/0
 11578 ;;		Unchanged: 0/0
 11579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11580 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11581 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11582 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11583 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11584 ;;Total ram usage:       21 bytes
 11585 ;; Hardware stack levels used:    1
 11586 ;; Hardware stack levels required when called:    3
 11587 ;; This function calls:
 11588 ;;		_I2C_writeRegister
 11589 ;;		___fldiv
 11590 ;;		___flge
 11591 ;;		___flmul
 11592 ;;		___xxtofl
 11593 ;; This function is called by:
 11594 ;;		_init_AFE
 11595 ;; This function uses a non-reentrant model
 11596 ;;
 11597                           
 11598                           
 11599                           ;psect for function _setOverCurrentDischargeProtection
 11600  25D3                     _setOverCurrentDischargeProtection:	
 11601                           
 11602                           ;BQ76920.c: 112:     float scaler = 1000.0;
 11603                           
 11604                           ;incstack = 0
 11605                           ; Regs used in _setOverCurrentDischargeProtection: [wreg-fsr0h+status,2+status,0+pclath+
      +                          cstack]
 11606  25D3  3044               	movlw	68
 11607  25D4  0021               	movlb	1	; select bank1
 11608  25D5  00A3               	movwf	(setOverCurrentDischargeProtection@scaler+3)^(0+128)
 11609  25D6  307A               	movlw	122
 11610  25D7  00A2               	movwf	(setOverCurrentDischargeProtection@scaler+2)^(0+128)
 11611  25D8  3000               	movlw	0
 11612  25D9  00A1               	movwf	(setOverCurrentDischargeProtection@scaler+1)^(0+128)
 11613  25DA  3000               	movlw	0
 11614  25DB  00A0               	movwf	setOverCurrentDischargeProtection@scaler^(0+128)
 11615                           
 11616                           ;BQ76920.c: 113:     protect2.bits.OCD_THRESH = 0;
 11617  25DC  30F0               	movlw	-16
 11618  25DD  0023               	movlb	3	; select bank3
 11619  25DE  05D3               	andwf	BQ76920@protect2^(0+384),f
 11620                           
 11621                           ;BQ76920.c: 114:     for (int i = 0; i < (sizeof(OCD_threshold_setting) / sizeof((OCD_th
      +                          reshold_setting)[0])) - 1; i++) {
 11622  25DF  0021               	movlb	1	; select bank1
 11623  25E0  01A8               	clrf	setOverCurrentDischargeProtection@i^(0+128)
 11624  25E1  01A9               	clrf	(setOverCurrentDischargeProtection@i+1)^(0+128)
 11625  25E2                     l8088:	
 11626                           
 11627                           ;BQ76920.c: 115:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 11628  25E2  0023               	movlb	3	; select bank3
 11629  25E3  0831               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 11630  25E4  0020               	movlb	0	; select bank0
 11631  25E5  00A9               	movwf	___flmul@b+3
 11632  25E6  0023               	movlb	3	; select bank3
 11633  25E7  0830               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 11634  25E8  0020               	movlb	0	; select bank0
 11635  25E9  00A8               	movwf	___flmul@b+2
 11636  25EA  0023               	movlb	3	; select bank3
 11637  25EB  082F               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 11638  25EC  0020               	movlb	0	; select bank0
 11639  25ED  00A7               	movwf	___flmul@b+1
 11640  25EE  0023               	movlb	3	; select bank3
 11641  25EF  082E               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 11642  25F0  0020               	movlb	0	; select bank0
 11643  25F1  00A6               	movwf	___flmul@b
 11644  25F2  0869               	movf	setOverCurrentDischargeProtection@current_mA+3,w
 11645  25F3  00F4               	movwf	___xxtofl@val+3
 11646  25F4  0868               	movf	setOverCurrentDischargeProtection@current_mA+2,w
 11647  25F5  00F3               	movwf	___xxtofl@val+2
 11648  25F6  0867               	movf	setOverCurrentDischargeProtection@current_mA+1,w
 11649  25F7  00F2               	movwf	___xxtofl@val+1
 11650  25F8  0866               	movf	setOverCurrentDischargeProtection@current_mA,w
 11651  25F9  00F1               	movwf	___xxtofl@val
 11652  25FA  3001               	movlw	1
 11653  25FB  31AB  23E3  31A5   	fcall	___xxtofl
 11654  25FE  0874               	movf	?___xxtofl+3,w
 11655  25FF  0020               	movlb	0	; select bank0
 11656  2600  00AD               	movwf	___flmul@a+3
 11657  2601  0873               	movf	?___xxtofl+2,w
 11658  2602  00AC               	movwf	___flmul@a+2
 11659  2603  0872               	movf	?___xxtofl+1,w
 11660  2604  00AB               	movwf	___flmul@a+1
 11661  2605  0871               	movf	?___xxtofl,w
 11662  2606  00AA               	movwf	___flmul@a
 11663  2607  3190  2023  31A5   	fcall	___flmul
 11664  260A  0020               	movlb	0	; select bank0
 11665  260B  0829               	movf	?___flmul+3,w
 11666  260C  0021               	movlb	1	; select bank1
 11667  260D  00A7               	movwf	(_setOverCurrentDischargeProtection$2028+3)^(0+128)
 11668  260E  0020               	movlb	0	; select bank0
 11669  260F  0828               	movf	?___flmul+2,w
 11670  2610  0021               	movlb	1	; select bank1
 11671  2611  00A6               	movwf	(_setOverCurrentDischargeProtection$2028+2)^(0+128)
 11672  2612  0020               	movlb	0	; select bank0
 11673  2613  0827               	movf	?___flmul+1,w
 11674  2614  0021               	movlb	1	; select bank1
 11675  2615  00A5               	movwf	(_setOverCurrentDischargeProtection$2028+1)^(0+128)
 11676  2616  0020               	movlb	0	; select bank0
 11677  2617  0826               	movf	?___flmul,w
 11678  2618  0021               	movlb	1	; select bank1
 11679  2619  00A4               	movwf	_setOverCurrentDischargeProtection$2028^(0+128)
 11680                           
 11681                           ;BQ76920.c: 115:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 11682  261A  3044               	movlw	68
 11683  261B  0020               	movlb	0	; select bank0
 11684  261C  00C3               	movwf	___fldiv@a+3
 11685  261D  307A               	movlw	122
 11686  261E  00C2               	movwf	___fldiv@a+2
 11687  261F  3000               	movlw	0
 11688  2620  00C1               	movwf	___fldiv@a+1
 11689  2621  3000               	movlw	0
 11690  2622  00C0               	movwf	___fldiv@a
 11691  2623  0021               	movlb	1	; select bank1
 11692  2624  0823               	movf	(setOverCurrentDischargeProtection@scaler+3)^(0+128),w
 11693  2625  0020               	movlb	0	; select bank0
 11694  2626  00A9               	movwf	___flmul@b+3
 11695  2627  0021               	movlb	1	; select bank1
 11696  2628  0822               	movf	(setOverCurrentDischargeProtection@scaler+2)^(0+128),w
 11697  2629  0020               	movlb	0	; select bank0
 11698  262A  00A8               	movwf	___flmul@b+2
 11699  262B  0021               	movlb	1	; select bank1
 11700  262C  0821               	movf	(setOverCurrentDischargeProtection@scaler+1)^(0+128),w
 11701  262D  0020               	movlb	0	; select bank0
 11702  262E  00A7               	movwf	___flmul@b+1
 11703  262F  0021               	movlb	1	; select bank1
 11704  2630  0820               	movf	setOverCurrentDischargeProtection@scaler^(0+128),w
 11705  2631  0020               	movlb	0	; select bank0
 11706  2632  00A6               	movwf	___flmul@b
 11707  2633  0021               	movlb	1	; select bank1
 11708  2634  0827               	movf	(_setOverCurrentDischargeProtection$2028+3)^(0+128),w
 11709  2635  0020               	movlb	0	; select bank0
 11710  2636  00AD               	movwf	___flmul@a+3
 11711  2637  0021               	movlb	1	; select bank1
 11712  2638  0826               	movf	(_setOverCurrentDischargeProtection$2028+2)^(0+128),w
 11713  2639  0020               	movlb	0	; select bank0
 11714  263A  00AC               	movwf	___flmul@a+2
 11715  263B  0021               	movlb	1	; select bank1
 11716  263C  0825               	movf	(_setOverCurrentDischargeProtection$2028+1)^(0+128),w
 11717  263D  0020               	movlb	0	; select bank0
 11718  263E  00AB               	movwf	___flmul@a+1
 11719  263F  0021               	movlb	1	; select bank1
 11720  2640  0824               	movf	_setOverCurrentDischargeProtection$2028^(0+128),w
 11721  2641  0020               	movlb	0	; select bank0
 11722  2642  00AA               	movwf	___flmul@a
 11723  2643  3190  2023  31A5   	fcall	___flmul
 11724  2646  0020               	movlb	0	; select bank0
 11725  2647  0829               	movf	?___flmul+3,w
 11726  2648  00C7               	movwf	___fldiv@b+3
 11727  2649  0828               	movf	?___flmul+2,w
 11728  264A  00C6               	movwf	___fldiv@b+2
 11729  264B  0827               	movf	?___flmul+1,w
 11730  264C  00C5               	movwf	___fldiv@b+1
 11731  264D  0826               	movf	?___flmul,w
 11732  264E  00C4               	movwf	___fldiv@b
 11733  264F  319C  24E2  31A5   	fcall	___fldiv
 11734  2652  0020               	movlb	0	; select bank0
 11735  2653  0843               	movf	?___fldiv+3,w
 11736  2654  00DD               	movwf	___flge@ff1+3
 11737  2655  0842               	movf	?___fldiv+2,w
 11738  2656  00DC               	movwf	___flge@ff1+2
 11739  2657  0841               	movf	?___fldiv+1,w
 11740  2658  00DB               	movwf	___flge@ff1+1
 11741  2659  0840               	movf	?___fldiv,w
 11742  265A  00DA               	movwf	___flge@ff1
 11743  265B  0021               	movlb	1	; select bank1
 11744  265C  0829               	movf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 11745  265D  0085               	movwf	5
 11746  265E  0828               	movf	setOverCurrentDischargeProtection@i^(0+128),w
 11747  265F  0084               	movwf	4
 11748  2660  3584               	lslf	4,f
 11749  2661  0D85               	rlf	5,f
 11750  2662  3097               	movlw	low (_OCD_threshold_setting| (0+32768))
 11751  2663  0784               	addwf	4,f
 11752  2664  30B8               	movlw	high (_OCD_threshold_setting| (0+32768))
 11753  2665  3D85               	addwfc	5,f
 11754  2666  3F00               	moviw [0]fsr0
 11755  2667  0020               	movlb	0	; select bank0
 11756  2668  00EC               	movwf	??_setOverCurrentDischargeProtection
 11757  2669  3F01               	moviw [1]fsr0
 11758  266A  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 11759  266B  086C               	movf	??_setOverCurrentDischargeProtection,w
 11760  266C  00F1               	movwf	___xxtofl@val
 11761  266D  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 11762  266E  00F2               	movwf	___xxtofl@val+1
 11763  266F  0D89               	rlf	9,f
 11764  2670  3B89               	subwfb	9,f
 11765  2671  0989               	comf	9,f
 11766  2672  00F3               	movwf	___xxtofl@val+2
 11767  2673  00F4               	movwf	___xxtofl@val+3
 11768  2674  3001               	movlw	1
 11769  2675  31AB  23E3  31A5   	fcall	___xxtofl
 11770  2678  0874               	movf	?___xxtofl+3,w
 11771  2679  0020               	movlb	0	; select bank0
 11772  267A  00E1               	movwf	___flge@ff2+3
 11773  267B  0873               	movf	?___xxtofl+2,w
 11774  267C  00E0               	movwf	___flge@ff2+2
 11775  267D  0872               	movf	?___xxtofl+1,w
 11776  267E  00DF               	movwf	___flge@ff2+1
 11777  267F  0871               	movf	?___xxtofl,w
 11778  2680  00DE               	movwf	___flge@ff2
 11779  2681  31A9  21EC  31A5   	fcall	___flge
 11780  2684  1C03               	btfss	3,0
 11781  2685  2E8E               	goto	l8094
 11782                           
 11783                           ;BQ76920.c: 116:             protect2.bits.OCD_THRESH = i;
 11784  2686  0023               	movlb	3	; select bank3
 11785  2687  0853               	movf	BQ76920@protect2^(0+384),w
 11786  2688  0021               	movlb	1	; select bank1
 11787  2689  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 11788  268A  39F0               	andlw	-16
 11789  268B  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 11790  268C  0023               	movlb	3	; select bank3
 11791  268D  00D3               	movwf	BQ76920@protect2^(0+384)
 11792  268E                     l8094:	
 11793                           
 11794                           ;BQ76920.c: 118:     }
 11795  268E  3001               	movlw	1
 11796  268F  0021               	movlb	1	; select bank1
 11797  2690  07A8               	addwf	setOverCurrentDischargeProtection@i^(0+128),f
 11798  2691  3000               	movlw	0
 11799  2692  3DA9               	addwfc	(setOverCurrentDischargeProtection@i+1)^(0+128),f
 11800  2693  3000               	movlw	0
 11801  2694  0229               	subwf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 11802  2695  300F               	movlw	15
 11803  2696  1903               	skipnz
 11804  2697  0228               	subwf	setOverCurrentDischargeProtection@i^(0+128),w
 11805  2698  1C03               	skipc
 11806  2699  2DE2               	goto	l8088
 11807                           
 11808                           ;BQ76920.c: 120:     protect2.bits.OCD_DELAY = 0;
 11809  269A  308F               	movlw	-113
 11810  269B  0023               	movlb	3	; select bank3
 11811  269C  05D3               	andwf	BQ76920@protect2^(0+384),f
 11812                           
 11813                           ;BQ76920.c: 121:     for (int i = 0; i < (sizeof(OCD_delay_setting) / sizeof((OCD_delay_
      +                          setting)[0])) - 1; i++) {
 11814  269D  0021               	movlb	1	; select bank1
 11815  269E  01AA               	clrf	setOverCurrentDischargeProtection@i_981^(0+128)
 11816  269F  01AB               	clrf	(setOverCurrentDischargeProtection@i_981+1)^(0+128)
 11817  26A0                     l8106:	
 11818                           
 11819                           ;BQ76920.c: 122:         if (delay_ms >= OCD_delay_setting[i]) {
 11820  26A0  082B               	movf	(setOverCurrentDischargeProtection@i_981+1)^(0+128),w
 11821  26A1  0085               	movwf	5
 11822  26A2  082A               	movf	setOverCurrentDischargeProtection@i_981^(0+128),w
 11823  26A3  0084               	movwf	4
 11824  26A4  3584               	lslf	4,f
 11825  26A5  0D85               	rlf	5,f
 11826  26A6  30AB               	movlw	low (_OCD_delay_setting| (0+32768))
 11827  26A7  0784               	addwf	4,f
 11828  26A8  30B9               	movlw	high (_OCD_delay_setting| (0+32768))
 11829  26A9  3D85               	addwfc	5,f
 11830  26AA  3F00               	moviw [0]fsr0
 11831  26AB  0020               	movlb	0	; select bank0
 11832  26AC  00EC               	movwf	??_setOverCurrentDischargeProtection
 11833  26AD  3F01               	moviw [1]fsr0
 11834  26AE  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 11835  26AF  086B               	movf	setOverCurrentDischargeProtection@delay_ms+1,w
 11836  26B0  3A80               	xorlw	128
 11837  26B1  00EE               	movwf	??_setOverCurrentDischargeProtection+2
 11838  26B2  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 11839  26B3  3A80               	xorlw	128
 11840  26B4  026E               	subwf	??_setOverCurrentDischargeProtection+2,w
 11841  26B5  1D03               	skipz
 11842  26B6  2EB9               	goto	u11205
 11843  26B7  086C               	movf	??_setOverCurrentDischargeProtection,w
 11844  26B8  026A               	subwf	setOverCurrentDischargeProtection@delay_ms,w
 11845  26B9                     u11205:	
 11846  26B9  1C03               	skipc
 11847  26BA  2EC8               	goto	l8110
 11848                           
 11849                           ;BQ76920.c: 123:             protect2.bits.OCD_DELAY = i;
 11850  26BB  0021               	movlb	1	; select bank1
 11851  26BC  082A               	movf	setOverCurrentDischargeProtection@i_981^(0+128),w
 11852  26BD  0020               	movlb	0	; select bank0
 11853  26BE  00EC               	movwf	??_setOverCurrentDischargeProtection
 11854  26BF  0EEC               	swapf	??_setOverCurrentDischargeProtection,f
 11855  26C0  0023               	movlb	3	; select bank3
 11856  26C1  0853               	movf	BQ76920@protect2^(0+384),w
 11857  26C2  0020               	movlb	0	; select bank0
 11858  26C3  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 11859  26C4  398F               	andlw	-113
 11860  26C5  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 11861  26C6  0023               	movlb	3	; select bank3
 11862  26C7  00D3               	movwf	BQ76920@protect2^(0+384)
 11863  26C8                     l8110:	
 11864                           
 11865                           ;BQ76920.c: 125:     }
 11866  26C8  3001               	movlw	1
 11867  26C9  0021               	movlb	1	; select bank1
 11868  26CA  07AA               	addwf	setOverCurrentDischargeProtection@i_981^(0+128),f
 11869  26CB  3000               	movlw	0
 11870  26CC  3DAB               	addwfc	(setOverCurrentDischargeProtection@i_981+1)^(0+128),f
 11871  26CD  3000               	movlw	0
 11872  26CE  022B               	subwf	(setOverCurrentDischargeProtection@i_981+1)^(0+128),w
 11873  26CF  3007               	movlw	7
 11874  26D0  1903               	skipnz
 11875  26D1  022A               	subwf	setOverCurrentDischargeProtection@i_981^(0+128),w
 11876  26D2  1C03               	skipc
 11877  26D3  2EA0               	goto	l8106
 11878                           
 11879                           ;BQ76920.c: 127:     I2C_writeRegister(0x18, 0x07, protect2.regByte);
 11880  26D4  3018               	movlw	24
 11881  26D5  00F5               	movwf	I2C_writeRegister@slaveAddress
 11882  26D6  3000               	movlw	0
 11883  26D7  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 11884  26D8  3007               	movlw	7
 11885  26D9  00F7               	movwf	I2C_writeRegister@regAddress
 11886  26DA  3000               	movlw	0
 11887  26DB  00F8               	movwf	I2C_writeRegister@regAddress+1
 11888  26DC  0023               	movlb	3	; select bank3
 11889  26DD  0853               	movf	BQ76920@protect2^(0+384),w
 11890  26DE  0020               	movlb	0	; select bank0
 11891  26DF  00EC               	movwf	??_setOverCurrentDischargeProtection
 11892  26E0  01ED               	clrf	??_setOverCurrentDischargeProtection+1
 11893  26E1  086C               	movf	??_setOverCurrentDischargeProtection,w
 11894  26E2  00F9               	movwf	I2C_writeRegister@data
 11895  26E3  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 11896  26E4  00FA               	movwf	I2C_writeRegister@data+1
 11897  26E5  31B5  256D         	fcall	_I2C_writeRegister
 11898  26E7  0008               	return
 11899  26E8                     __end_of_setOverCurrentDischargeProtection:	
 11900                           
 11901                           	psect	text40
 11902  29EC                     __ptext40:	
 11903 ;; *************** function ___flge *****************
 11904 ;; Defined at:
 11905 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 11906 ;; Parameters:    Size  Location     Type
 11907 ;;  ff1             4   58[BANK0 ] void 
 11908 ;;  ff2             4   62[BANK0 ] void 
 11909 ;; Auto vars:     Size  Location     Type
 11910 ;;		None
 11911 ;; Return value:  Size  Location     Type
 11912 ;;		None               void
 11913 ;; Registers used:
 11914 ;;		wreg, status,2, status,0
 11915 ;; Tracked objects:
 11916 ;;		On entry : 0/0
 11917 ;;		On exit  : 0/0
 11918 ;;		Unchanged: 0/0
 11919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11920 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11922 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11923 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11924 ;;Total ram usage:       12 bytes
 11925 ;; Hardware stack levels used:    1
 11926 ;; Hardware stack levels required when called:    1
 11927 ;; This function calls:
 11928 ;;		Nothing
 11929 ;; This function is called by:
 11930 ;;		_setShortCircuitProtection
 11931 ;;		_setOverCurrentDischargeProtection
 11932 ;; This function uses a non-reentrant model
 11933 ;;
 11934                           
 11935                           
 11936                           ;psect for function ___flge
 11937  29EC                     ___flge:	
 11938                           
 11939                           ;incstack = 0
 11940                           ; Regs used in ___flge: [wreg+status,2+status,0]
 11941  29EC  3000               	movlw	0
 11942  29ED  0020               	movlb	0	; select bank0
 11943  29EE  055A               	andwf	___flge@ff1,w
 11944  29EF  00E2               	movwf	??___flge
 11945  29F0  3000               	movlw	0
 11946  29F1  055B               	andwf	___flge@ff1+1,w
 11947  29F2  00E3               	movwf	??___flge+1
 11948  29F3  3080               	movlw	128
 11949  29F4  055C               	andwf	___flge@ff1+2,w
 11950  29F5  00E4               	movwf	??___flge+2
 11951  29F6  307F               	movlw	127
 11952  29F7  055D               	andwf	___flge@ff1+3,w
 11953  29F8  00E5               	movwf	??___flge+3
 11954  29F9  0865               	movf	??___flge+3,w
 11955  29FA  0464               	iorwf	??___flge+2,w
 11956  29FB  0463               	iorwf	??___flge+1,w
 11957  29FC  0462               	iorwf	??___flge,w
 11958  29FD  1D03               	skipz
 11959  29FE  2A07               	goto	l1025
 11960  29FF  3000               	movlw	0
 11961  2A00  00DD               	movwf	___flge@ff1+3
 11962  2A01  3000               	movlw	0
 11963  2A02  00DC               	movwf	___flge@ff1+2
 11964  2A03  3000               	movlw	0
 11965  2A04  00DB               	movwf	___flge@ff1+1
 11966  2A05  3000               	movlw	0
 11967  2A06  00DA               	movwf	___flge@ff1
 11968  2A07                     l1025:	
 11969  2A07  3000               	movlw	0
 11970  2A08  055E               	andwf	___flge@ff2,w
 11971  2A09  00E2               	movwf	??___flge
 11972  2A0A  3000               	movlw	0
 11973  2A0B  055F               	andwf	___flge@ff2+1,w
 11974  2A0C  00E3               	movwf	??___flge+1
 11975  2A0D  3080               	movlw	128
 11976  2A0E  0560               	andwf	___flge@ff2+2,w
 11977  2A0F  00E4               	movwf	??___flge+2
 11978  2A10  307F               	movlw	127
 11979  2A11  0561               	andwf	___flge@ff2+3,w
 11980  2A12  00E5               	movwf	??___flge+3
 11981  2A13  0865               	movf	??___flge+3,w
 11982  2A14  0464               	iorwf	??___flge+2,w
 11983  2A15  0463               	iorwf	??___flge+1,w
 11984  2A16  0462               	iorwf	??___flge,w
 11985  2A17  1D03               	skipz
 11986  2A18  2A21               	goto	l7922
 11987  2A19  3000               	movlw	0
 11988  2A1A  00E1               	movwf	___flge@ff2+3
 11989  2A1B  3000               	movlw	0
 11990  2A1C  00E0               	movwf	___flge@ff2+2
 11991  2A1D  3000               	movlw	0
 11992  2A1E  00DF               	movwf	___flge@ff2+1
 11993  2A1F  3000               	movlw	0
 11994  2A20  00DE               	movwf	___flge@ff2
 11995  2A21                     l7922:	
 11996  2A21  1FDD               	btfss	___flge@ff1+3,7
 11997  2A22  2A3B               	goto	l7926
 11998  2A23  3000               	movlw	0
 11999  2A24  00E2               	movwf	??___flge
 12000  2A25  3000               	movlw	0
 12001  2A26  00E3               	movwf	??___flge+1
 12002  2A27  3000               	movlw	0
 12003  2A28  00E4               	movwf	??___flge+2
 12004  2A29  3080               	movlw	128
 12005  2A2A  00E5               	movwf	??___flge+3
 12006  2A2B  085A               	movf	___flge@ff1,w
 12007  2A2C  02E2               	subwf	??___flge,f
 12008  2A2D  085B               	movf	___flge@ff1+1,w
 12009  2A2E  3BE3               	subwfb	??___flge+1,f
 12010  2A2F  085C               	movf	___flge@ff1+2,w
 12011  2A30  3BE4               	subwfb	??___flge+2,f
 12012  2A31  085D               	movf	___flge@ff1+3,w
 12013  2A32  3BE5               	subwfb	??___flge+3,f
 12014  2A33  0865               	movf	??___flge+3,w
 12015  2A34  00DD               	movwf	___flge@ff1+3
 12016  2A35  0864               	movf	??___flge+2,w
 12017  2A36  00DC               	movwf	___flge@ff1+2
 12018  2A37  0863               	movf	??___flge+1,w
 12019  2A38  00DB               	movwf	___flge@ff1+1
 12020  2A39  0862               	movf	??___flge,w
 12021  2A3A  00DA               	movwf	___flge@ff1
 12022  2A3B                     l7926:	
 12023  2A3B  1FE1               	btfss	___flge@ff2+3,7
 12024  2A3C  2A55               	goto	l1028
 12025  2A3D  3000               	movlw	0
 12026  2A3E  00E2               	movwf	??___flge
 12027  2A3F  3000               	movlw	0
 12028  2A40  00E3               	movwf	??___flge+1
 12029  2A41  3000               	movlw	0
 12030  2A42  00E4               	movwf	??___flge+2
 12031  2A43  3080               	movlw	128
 12032  2A44  00E5               	movwf	??___flge+3
 12033  2A45  085E               	movf	___flge@ff2,w
 12034  2A46  02E2               	subwf	??___flge,f
 12035  2A47  085F               	movf	___flge@ff2+1,w
 12036  2A48  3BE3               	subwfb	??___flge+1,f
 12037  2A49  0860               	movf	___flge@ff2+2,w
 12038  2A4A  3BE4               	subwfb	??___flge+2,f
 12039  2A4B  0861               	movf	___flge@ff2+3,w
 12040  2A4C  3BE5               	subwfb	??___flge+3,f
 12041  2A4D  0865               	movf	??___flge+3,w
 12042  2A4E  00E1               	movwf	___flge@ff2+3
 12043  2A4F  0864               	movf	??___flge+2,w
 12044  2A50  00E0               	movwf	___flge@ff2+2
 12045  2A51  0863               	movf	??___flge+1,w
 12046  2A52  00DF               	movwf	___flge@ff2+1
 12047  2A53  0862               	movf	??___flge,w
 12048  2A54  00DE               	movwf	___flge@ff2
 12049  2A55                     l1028:	
 12050  2A55  3080               	movlw	128
 12051  2A56  06DD               	xorwf	___flge@ff1+3,f
 12052  2A57  3080               	movlw	128
 12053  2A58  06E1               	xorwf	___flge@ff2+3,f
 12054  2A59  0861               	movf	___flge@ff2+3,w
 12055  2A5A  025D               	subwf	___flge@ff1+3,w
 12056  2A5B  1D03               	skipz
 12057  2A5C  0008               	return
 12058  2A5D  0860               	movf	___flge@ff2+2,w
 12059  2A5E  025C               	subwf	___flge@ff1+2,w
 12060  2A5F  1D03               	skipz
 12061  2A60  0008               	return
 12062  2A61  085F               	movf	___flge@ff2+1,w
 12063  2A62  025B               	subwf	___flge@ff1+1,w
 12064  2A63  1D03               	skipz
 12065  2A64  0008               	return
 12066  2A65  085E               	movf	___flge@ff2,w
 12067  2A66  025A               	subwf	___flge@ff1,w
 12068  2A67  0008               	return
 12069  2A68                     __end_of___flge:	
 12070                           
 12071                           	psect	text41
 12072  214F                     __ptext41:	
 12073 ;; *************** function _setCellUndervoltageProtection *****************
 12074 ;; Defined at:
 12075 ;;		line 133 in file "BQ76920.c"
 12076 ;; Parameters:    Size  Location     Type
 12077 ;;  voltage_mV      2   18[BANK0 ] int 
 12078 ;;  delay_s         2   20[BANK0 ] int 
 12079 ;; Auto vars:     Size  Location     Type
 12080 ;;  i               2   37[BANK0 ] int 
 12081 ;;  uv_trip         1   36[BANK0 ] unsigned char 
 12082 ;; Return value:  Size  Location     Type
 12083 ;;                  1    wreg      void 
 12084 ;; Registers used:
 12085 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12086 ;; Tracked objects:
 12087 ;;		On entry : 0/0
 12088 ;;		On exit  : 0/0
 12089 ;;		Unchanged: 0/0
 12090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12091 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12092 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12093 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12094 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12095 ;;Total ram usage:       21 bytes
 12096 ;; Hardware stack levels used:    1
 12097 ;; Hardware stack levels required when called:    3
 12098 ;; This function calls:
 12099 ;;		_I2C_writeRegister
 12100 ;;		___aldiv
 12101 ;;		___lmul
 12102 ;;		_readRegister
 12103 ;; This function is called by:
 12104 ;;		_init_AFE
 12105 ;; This function uses a non-reentrant model
 12106 ;;
 12107                           
 12108                           
 12109                           ;psect for function _setCellUndervoltageProtection
 12110  214F                     _setCellUndervoltageProtection:	
 12111                           
 12112                           ;BQ76920.c: 135:     minCellVoltage = voltage_mV;
 12113                           
 12114                           ;incstack = 0
 12115                           ; Regs used in _setCellUndervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+csta
      +                          ck]
 12116  214F  0020               	movlb	0	; select bank0
 12117  2150  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 12118  2151  0023               	movlb	3	; select bank3
 12119  2152  00C7               	movwf	(_minCellVoltage+1)^(0+384)
 12120  2153  0020               	movlb	0	; select bank0
 12121  2154  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 12122  2155  0023               	movlb	3	; select bank3
 12123  2156  00C6               	movwf	_minCellVoltage^(0+384)
 12124                           
 12125                           ;BQ76920.c: 137:     protect3.regByte = readRegister(0x18, 0x08);
 12126  2157  3018               	movlw	24
 12127  2158  00F5               	movwf	readRegister@slaveAddress
 12128  2159  3000               	movlw	0
 12129  215A  00F6               	movwf	readRegister@slaveAddress+1
 12130  215B  3008               	movlw	8
 12131  215C  00F7               	movwf	readRegister@regAddress
 12132  215D  3000               	movlw	0
 12133  215E  00F8               	movwf	readRegister@regAddress+1
 12134  215F  31B6  26C7  31A1   	fcall	_readRegister
 12135  2162  0875               	movf	?_readRegister,w
 12136  2163  0020               	movlb	0	; select bank0
 12137  2164  00B6               	movwf	??_setCellUndervoltageProtection
 12138  2165  0836               	movf	??_setCellUndervoltageProtection,w
 12139  2166  0023               	movlb	3	; select bank3
 12140  2167  00D2               	movwf	BQ76920@protect3^(0+384)
 12141                           
 12142                           ;BQ76920.c: 138:     uv_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 12143  2168  0022               	movlb	2	; select bank2
 12144  2169  086D               	movf	_adcGain^(0+256),w
 12145  216A  0020               	movlb	0	; select bank0
 12146  216B  00A4               	movwf	___aldiv@divisor
 12147  216C  0022               	movlb	2	; select bank2
 12148  216D  086E               	movf	(_adcGain+1)^(0+256),w
 12149  216E  0020               	movlb	0	; select bank0
 12150  216F  00A5               	movwf	___aldiv@divisor+1
 12151  2170  0D89               	rlf	9,f
 12152  2171  3B89               	subwfb	9,f
 12153  2172  0989               	comf	9,f
 12154  2173  00A6               	movwf	___aldiv@divisor+2
 12155  2174  00A7               	movwf	___aldiv@divisor+3
 12156  2175  0022               	movlb	2	; select bank2
 12157  2176  086B               	movf	_adcOffset^(0+256),w
 12158  2177  0020               	movlb	0	; select bank0
 12159  2178  00B6               	movwf	??_setCellUndervoltageProtection
 12160  2179  0022               	movlb	2	; select bank2
 12161  217A  086C               	movf	(_adcOffset+1)^(0+256),w
 12162  217B  0020               	movlb	0	; select bank0
 12163  217C  00B7               	movwf	??_setCellUndervoltageProtection+1
 12164  217D  3000               	movlw	0
 12165  217E  1BB7               	btfsc	??_setCellUndervoltageProtection+1,7
 12166  217F  30FF               	movlw	255
 12167  2180  00B8               	movwf	??_setCellUndervoltageProtection+2
 12168  2181  00B9               	movwf	??_setCellUndervoltageProtection+3
 12169  2182  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 12170  2183  00BA               	movwf	??_setCellUndervoltageProtection+4
 12171  2184  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 12172  2185  00BB               	movwf	??_setCellUndervoltageProtection+5
 12173  2186  3000               	movlw	0
 12174  2187  1BBB               	btfsc	??_setCellUndervoltageProtection+5,7
 12175  2188  30FF               	movlw	255
 12176  2189  00BC               	movwf	??_setCellUndervoltageProtection+6
 12177  218A  00BD               	movwf	??_setCellUndervoltageProtection+7
 12178  218B  0836               	movf	??_setCellUndervoltageProtection,w
 12179  218C  02BA               	subwf	??_setCellUndervoltageProtection+4,f
 12180  218D  0837               	movf	??_setCellUndervoltageProtection+1,w
 12181  218E  3BBB               	subwfb	??_setCellUndervoltageProtection+5,f
 12182  218F  0838               	movf	??_setCellUndervoltageProtection+2,w
 12183  2190  3BBC               	subwfb	??_setCellUndervoltageProtection+6,f
 12184  2191  0839               	movf	??_setCellUndervoltageProtection+3,w
 12185  2192  3BBD               	subwfb	??_setCellUndervoltageProtection+7,f
 12186  2193  083D               	movf	??_setCellUndervoltageProtection+7,w
 12187  2194  00F4               	movwf	___lmul@multiplier+3
 12188  2195  083C               	movf	??_setCellUndervoltageProtection+6,w
 12189  2196  00F3               	movwf	___lmul@multiplier+2
 12190  2197  083B               	movf	??_setCellUndervoltageProtection+5,w
 12191  2198  00F2               	movwf	___lmul@multiplier+1
 12192  2199  083A               	movf	??_setCellUndervoltageProtection+4,w
 12193  219A  00F1               	movwf	___lmul@multiplier
 12194  219B  3000               	movlw	0
 12195  219C  00F8               	movwf	___lmul@multiplicand+3
 12196  219D  3000               	movlw	0
 12197  219E  00F7               	movwf	___lmul@multiplicand+2
 12198  219F  3003               	movlw	3
 12199  21A0  00F6               	movwf	___lmul@multiplicand+1
 12200  21A1  30E8               	movlw	232
 12201  21A2  00F5               	movwf	___lmul@multiplicand
 12202  21A3  31B6  262E  31A1   	fcall	___lmul
 12203  21A6  0874               	movf	?___lmul+3,w
 12204  21A7  0020               	movlb	0	; select bank0
 12205  21A8  00AB               	movwf	___aldiv@dividend+3
 12206  21A9  0873               	movf	?___lmul+2,w
 12207  21AA  00AA               	movwf	___aldiv@dividend+2
 12208  21AB  0872               	movf	?___lmul+1,w
 12209  21AC  00A9               	movwf	___aldiv@dividend+1
 12210  21AD  0871               	movf	?___lmul,w
 12211  21AE  00A8               	movwf	___aldiv@dividend
 12212  21AF  31AB  2361  31A1   	fcall	___aldiv
 12213  21B2  0020               	movlb	0	; select bank0
 12214  21B3  0824               	movf	?___aldiv,w
 12215  21B4  00BE               	movwf	??_setCellUndervoltageProtection+8
 12216  21B5  0825               	movf	?___aldiv+1,w
 12217  21B6  00BF               	movwf	??_setCellUndervoltageProtection+9
 12218  21B7  0826               	movf	?___aldiv+2,w
 12219  21B8  00C0               	movwf	??_setCellUndervoltageProtection+10
 12220  21B9  0827               	movf	?___aldiv+3,w
 12221  21BA  00C1               	movwf	??_setCellUndervoltageProtection+11
 12222  21BB  3004               	movlw	4
 12223  21BC  00C2               	movwf	??_setCellUndervoltageProtection+12
 12224  21BD                     u11225:	
 12225  21BD  37C1               	asrf	??_setCellUndervoltageProtection+11,f
 12226  21BE  0CC0               	rrf	??_setCellUndervoltageProtection+10,f
 12227  21BF  0CBF               	rrf	??_setCellUndervoltageProtection+9,f
 12228  21C0  0CBE               	rrf	??_setCellUndervoltageProtection+8,f
 12229  21C1  0BC2               	decfsz	??_setCellUndervoltageProtection+12,f
 12230  21C2  29BD               	goto	u11225
 12231  21C3  083E               	movf	??_setCellUndervoltageProtection+8,w
 12232  21C4  00C3               	movwf	??_setCellUndervoltageProtection+13
 12233  21C5  0843               	movf	??_setCellUndervoltageProtection+13,w
 12234  21C6  00C4               	movwf	setCellUndervoltageProtection@uv_trip
 12235                           
 12236                           ;BQ76920.c: 139:     uv_trip += 1;
 12237  21C7  3001               	movlw	1
 12238  21C8  00B6               	movwf	??_setCellUndervoltageProtection
 12239  21C9  0836               	movf	??_setCellUndervoltageProtection,w
 12240  21CA  07C4               	addwf	setCellUndervoltageProtection@uv_trip,f
 12241                           
 12242                           ;BQ76920.c: 140:     I2C_writeRegister(0x18, 0x0A, uv_trip);
 12243  21CB  3018               	movlw	24
 12244  21CC  00F5               	movwf	I2C_writeRegister@slaveAddress
 12245  21CD  3000               	movlw	0
 12246  21CE  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12247  21CF  300A               	movlw	10
 12248  21D0  00F7               	movwf	I2C_writeRegister@regAddress
 12249  21D1  3000               	movlw	0
 12250  21D2  00F8               	movwf	I2C_writeRegister@regAddress+1
 12251  21D3  0844               	movf	setCellUndervoltageProtection@uv_trip,w
 12252  21D4  00B6               	movwf	??_setCellUndervoltageProtection
 12253  21D5  01B7               	clrf	??_setCellUndervoltageProtection+1
 12254  21D6  0836               	movf	??_setCellUndervoltageProtection,w
 12255  21D7  00F9               	movwf	I2C_writeRegister@data
 12256  21D8  0837               	movf	??_setCellUndervoltageProtection+1,w
 12257  21D9  00FA               	movwf	I2C_writeRegister@data+1
 12258  21DA  31B5  256D  31A1   	fcall	_I2C_writeRegister
 12259                           
 12260                           ;BQ76920.c: 142:     protect3.bits.UV_DELAY = 0;
 12261  21DD  303F               	movlw	-193
 12262  21DE  0023               	movlb	3	; select bank3
 12263  21DF  05D2               	andwf	BQ76920@protect3^(0+384),f
 12264                           
 12265                           ;BQ76920.c: 143:     for (int i = 0; i < (sizeof(UV_delay_setting) / sizeof((UV_delay_se
      +                          tting)[0])) - 1; i++) {
 12266  21E0  0020               	movlb	0	; select bank0
 12267  21E1  01C5               	clrf	setCellUndervoltageProtection@i
 12268  21E2  01C6               	clrf	setCellUndervoltageProtection@i+1
 12269  21E3                     l8136:	
 12270                           
 12271                           ;BQ76920.c: 144:         if (delay_s >= UV_delay_setting[i]) {
 12272  21E3  0846               	movf	setCellUndervoltageProtection@i+1,w
 12273  21E4  0085               	movwf	5
 12274  21E5  0845               	movf	setCellUndervoltageProtection@i,w
 12275  21E6  0084               	movwf	4
 12276  21E7  3584               	lslf	4,f
 12277  21E8  0D85               	rlf	5,f
 12278  21E9  30F1               	movlw	low (_UV_delay_setting| (0+32768))
 12279  21EA  0784               	addwf	4,f
 12280  21EB  30B9               	movlw	high (_UV_delay_setting| (0+32768))
 12281  21EC  3D85               	addwfc	5,f
 12282  21ED  3F00               	moviw [0]fsr0
 12283  21EE  00B6               	movwf	??_setCellUndervoltageProtection
 12284  21EF  3F01               	moviw [1]fsr0
 12285  21F0  00B7               	movwf	??_setCellUndervoltageProtection+1
 12286  21F1  0835               	movf	setCellUndervoltageProtection@delay_s+1,w
 12287  21F2  3A80               	xorlw	128
 12288  21F3  00B8               	movwf	??_setCellUndervoltageProtection+2
 12289  21F4  0837               	movf	??_setCellUndervoltageProtection+1,w
 12290  21F5  3A80               	xorlw	128
 12291  21F6  0238               	subwf	??_setCellUndervoltageProtection+2,w
 12292  21F7  1D03               	skipz
 12293  21F8  29FB               	goto	u11235
 12294  21F9  0836               	movf	??_setCellUndervoltageProtection,w
 12295  21FA  0234               	subwf	setCellUndervoltageProtection@delay_s,w
 12296  21FB                     u11235:	
 12297  21FB  1C03               	skipc
 12298  21FC  2A0B               	goto	l8140
 12299                           
 12300                           ;BQ76920.c: 145:             protect3.bits.UV_DELAY = i;
 12301  21FD  0020               	movlb	0	; select bank0
 12302  21FE  0845               	movf	setCellUndervoltageProtection@i,w
 12303  21FF  00B6               	movwf	??_setCellUndervoltageProtection
 12304  2200  0EB6               	swapf	??_setCellUndervoltageProtection,f
 12305  2201  0DB6               	rlf	??_setCellUndervoltageProtection,f
 12306  2202  0DB6               	rlf	??_setCellUndervoltageProtection,f
 12307  2203  0023               	movlb	3	; select bank3
 12308  2204  0852               	movf	BQ76920@protect3^(0+384),w
 12309  2205  0020               	movlb	0	; select bank0
 12310  2206  0636               	xorwf	??_setCellUndervoltageProtection,w
 12311  2207  393F               	andlw	-193
 12312  2208  0636               	xorwf	??_setCellUndervoltageProtection,w
 12313  2209  0023               	movlb	3	; select bank3
 12314  220A  00D2               	movwf	BQ76920@protect3^(0+384)
 12315  220B                     l8140:	
 12316                           
 12317                           ;BQ76920.c: 147:     }
 12318  220B  3001               	movlw	1
 12319  220C  0020               	movlb	0	; select bank0
 12320  220D  07C5               	addwf	setCellUndervoltageProtection@i,f
 12321  220E  3000               	movlw	0
 12322  220F  3DC6               	addwfc	setCellUndervoltageProtection@i+1,f
 12323  2210  3000               	movlw	0
 12324  2211  0246               	subwf	setCellUndervoltageProtection@i+1,w
 12325  2212  3003               	movlw	3
 12326  2213  1903               	skipnz
 12327  2214  0245               	subwf	setCellUndervoltageProtection@i,w
 12328  2215  1C03               	skipc
 12329  2216  29E3               	goto	l8136
 12330                           
 12331                           ;BQ76920.c: 148:     I2C_writeRegister(0x18, 0x08, protect3.regByte);
 12332  2217  3018               	movlw	24
 12333  2218  00F5               	movwf	I2C_writeRegister@slaveAddress
 12334  2219  3000               	movlw	0
 12335  221A  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12336  221B  3008               	movlw	8
 12337  221C  00F7               	movwf	I2C_writeRegister@regAddress
 12338  221D  3000               	movlw	0
 12339  221E  00F8               	movwf	I2C_writeRegister@regAddress+1
 12340  221F  0023               	movlb	3	; select bank3
 12341  2220  0852               	movf	BQ76920@protect3^(0+384),w
 12342  2221  0020               	movlb	0	; select bank0
 12343  2222  00B6               	movwf	??_setCellUndervoltageProtection
 12344  2223  01B7               	clrf	??_setCellUndervoltageProtection+1
 12345  2224  0836               	movf	??_setCellUndervoltageProtection,w
 12346  2225  00F9               	movwf	I2C_writeRegister@data
 12347  2226  0837               	movf	??_setCellUndervoltageProtection+1,w
 12348  2227  00FA               	movwf	I2C_writeRegister@data+1
 12349  2228  31B5  256D         	fcall	_I2C_writeRegister
 12350  222A  0008               	return
 12351  222B                     __end_of_setCellUndervoltageProtection:	
 12352                           
 12353                           	psect	text42
 12354  207A                     __ptext42:	
 12355 ;; *************** function _setCellOvervoltageProtection *****************
 12356 ;; Defined at:
 12357 ;;		line 154 in file "BQ76920.c"
 12358 ;; Parameters:    Size  Location     Type
 12359 ;;  voltage_mV      2   18[BANK0 ] int 
 12360 ;;  delay_s         2   20[BANK0 ] int 
 12361 ;; Auto vars:     Size  Location     Type
 12362 ;;  i               2   37[BANK0 ] int 
 12363 ;;  ov_trip         1   36[BANK0 ] unsigned char 
 12364 ;; Return value:  Size  Location     Type
 12365 ;;                  1    wreg      void 
 12366 ;; Registers used:
 12367 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12368 ;; Tracked objects:
 12369 ;;		On entry : 0/0
 12370 ;;		On exit  : 0/0
 12371 ;;		Unchanged: 0/0
 12372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12373 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12374 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12375 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12376 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12377 ;;Total ram usage:       21 bytes
 12378 ;; Hardware stack levels used:    1
 12379 ;; Hardware stack levels required when called:    3
 12380 ;; This function calls:
 12381 ;;		_I2C_writeRegister
 12382 ;;		___aldiv
 12383 ;;		___lmul
 12384 ;;		_readRegister
 12385 ;; This function is called by:
 12386 ;;		_init_AFE
 12387 ;; This function uses a non-reentrant model
 12388 ;;
 12389                           
 12390                           
 12391                           ;psect for function _setCellOvervoltageProtection
 12392  207A                     _setCellOvervoltageProtection:	
 12393                           
 12394                           ;BQ76920.c: 156:     maxCellVoltage = voltage_mV;
 12395                           
 12396                           ;incstack = 0
 12397                           ; Regs used in _setCellOvervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+cstac
      +                          k]
 12398  207A  0020               	movlb	0	; select bank0
 12399  207B  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 12400  207C  0023               	movlb	3	; select bank3
 12401  207D  00C9               	movwf	(_maxCellVoltage+1)^(0+384)
 12402  207E  0020               	movlb	0	; select bank0
 12403  207F  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 12404  2080  0023               	movlb	3	; select bank3
 12405  2081  00C8               	movwf	_maxCellVoltage^(0+384)
 12406                           
 12407                           ;BQ76920.c: 157:     protect3.regByte = readRegister(0x18, 0x08);
 12408  2082  3018               	movlw	24
 12409  2083  00F5               	movwf	readRegister@slaveAddress
 12410  2084  3000               	movlw	0
 12411  2085  00F6               	movwf	readRegister@slaveAddress+1
 12412  2086  3008               	movlw	8
 12413  2087  00F7               	movwf	readRegister@regAddress
 12414  2088  3000               	movlw	0
 12415  2089  00F8               	movwf	readRegister@regAddress+1
 12416  208A  31B6  26C7  31A0   	fcall	_readRegister
 12417  208D  0875               	movf	?_readRegister,w
 12418  208E  0020               	movlb	0	; select bank0
 12419  208F  00B6               	movwf	??_setCellOvervoltageProtection
 12420  2090  0836               	movf	??_setCellOvervoltageProtection,w
 12421  2091  0023               	movlb	3	; select bank3
 12422  2092  00D2               	movwf	BQ76920@protect3^(0+384)
 12423                           
 12424                           ;BQ76920.c: 158:     ov_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 12425  2093  0022               	movlb	2	; select bank2
 12426  2094  086D               	movf	_adcGain^(0+256),w
 12427  2095  0020               	movlb	0	; select bank0
 12428  2096  00A4               	movwf	___aldiv@divisor
 12429  2097  0022               	movlb	2	; select bank2
 12430  2098  086E               	movf	(_adcGain+1)^(0+256),w
 12431  2099  0020               	movlb	0	; select bank0
 12432  209A  00A5               	movwf	___aldiv@divisor+1
 12433  209B  0D89               	rlf	9,f
 12434  209C  3B89               	subwfb	9,f
 12435  209D  0989               	comf	9,f
 12436  209E  00A6               	movwf	___aldiv@divisor+2
 12437  209F  00A7               	movwf	___aldiv@divisor+3
 12438  20A0  0022               	movlb	2	; select bank2
 12439  20A1  086B               	movf	_adcOffset^(0+256),w
 12440  20A2  0020               	movlb	0	; select bank0
 12441  20A3  00B6               	movwf	??_setCellOvervoltageProtection
 12442  20A4  0022               	movlb	2	; select bank2
 12443  20A5  086C               	movf	(_adcOffset+1)^(0+256),w
 12444  20A6  0020               	movlb	0	; select bank0
 12445  20A7  00B7               	movwf	??_setCellOvervoltageProtection+1
 12446  20A8  3000               	movlw	0
 12447  20A9  1BB7               	btfsc	??_setCellOvervoltageProtection+1,7
 12448  20AA  30FF               	movlw	255
 12449  20AB  00B8               	movwf	??_setCellOvervoltageProtection+2
 12450  20AC  00B9               	movwf	??_setCellOvervoltageProtection+3
 12451  20AD  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 12452  20AE  00BA               	movwf	??_setCellOvervoltageProtection+4
 12453  20AF  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 12454  20B0  00BB               	movwf	??_setCellOvervoltageProtection+5
 12455  20B1  3000               	movlw	0
 12456  20B2  1BBB               	btfsc	??_setCellOvervoltageProtection+5,7
 12457  20B3  30FF               	movlw	255
 12458  20B4  00BC               	movwf	??_setCellOvervoltageProtection+6
 12459  20B5  00BD               	movwf	??_setCellOvervoltageProtection+7
 12460  20B6  0836               	movf	??_setCellOvervoltageProtection,w
 12461  20B7  02BA               	subwf	??_setCellOvervoltageProtection+4,f
 12462  20B8  0837               	movf	??_setCellOvervoltageProtection+1,w
 12463  20B9  3BBB               	subwfb	??_setCellOvervoltageProtection+5,f
 12464  20BA  0838               	movf	??_setCellOvervoltageProtection+2,w
 12465  20BB  3BBC               	subwfb	??_setCellOvervoltageProtection+6,f
 12466  20BC  0839               	movf	??_setCellOvervoltageProtection+3,w
 12467  20BD  3BBD               	subwfb	??_setCellOvervoltageProtection+7,f
 12468  20BE  083D               	movf	??_setCellOvervoltageProtection+7,w
 12469  20BF  00F4               	movwf	___lmul@multiplier+3
 12470  20C0  083C               	movf	??_setCellOvervoltageProtection+6,w
 12471  20C1  00F3               	movwf	___lmul@multiplier+2
 12472  20C2  083B               	movf	??_setCellOvervoltageProtection+5,w
 12473  20C3  00F2               	movwf	___lmul@multiplier+1
 12474  20C4  083A               	movf	??_setCellOvervoltageProtection+4,w
 12475  20C5  00F1               	movwf	___lmul@multiplier
 12476  20C6  3000               	movlw	0
 12477  20C7  00F8               	movwf	___lmul@multiplicand+3
 12478  20C8  3000               	movlw	0
 12479  20C9  00F7               	movwf	___lmul@multiplicand+2
 12480  20CA  3003               	movlw	3
 12481  20CB  00F6               	movwf	___lmul@multiplicand+1
 12482  20CC  30E8               	movlw	232
 12483  20CD  00F5               	movwf	___lmul@multiplicand
 12484  20CE  31B6  262E  31A0   	fcall	___lmul
 12485  20D1  0874               	movf	?___lmul+3,w
 12486  20D2  0020               	movlb	0	; select bank0
 12487  20D3  00AB               	movwf	___aldiv@dividend+3
 12488  20D4  0873               	movf	?___lmul+2,w
 12489  20D5  00AA               	movwf	___aldiv@dividend+2
 12490  20D6  0872               	movf	?___lmul+1,w
 12491  20D7  00A9               	movwf	___aldiv@dividend+1
 12492  20D8  0871               	movf	?___lmul,w
 12493  20D9  00A8               	movwf	___aldiv@dividend
 12494  20DA  31AB  2361  31A0   	fcall	___aldiv
 12495  20DD  0020               	movlb	0	; select bank0
 12496  20DE  0824               	movf	?___aldiv,w
 12497  20DF  00BE               	movwf	??_setCellOvervoltageProtection+8
 12498  20E0  0825               	movf	?___aldiv+1,w
 12499  20E1  00BF               	movwf	??_setCellOvervoltageProtection+9
 12500  20E2  0826               	movf	?___aldiv+2,w
 12501  20E3  00C0               	movwf	??_setCellOvervoltageProtection+10
 12502  20E4  0827               	movf	?___aldiv+3,w
 12503  20E5  00C1               	movwf	??_setCellOvervoltageProtection+11
 12504  20E6  3004               	movlw	4
 12505  20E7  00C2               	movwf	??_setCellOvervoltageProtection+12
 12506  20E8                     u11255:	
 12507  20E8  37C1               	asrf	??_setCellOvervoltageProtection+11,f
 12508  20E9  0CC0               	rrf	??_setCellOvervoltageProtection+10,f
 12509  20EA  0CBF               	rrf	??_setCellOvervoltageProtection+9,f
 12510  20EB  0CBE               	rrf	??_setCellOvervoltageProtection+8,f
 12511  20EC  0BC2               	decfsz	??_setCellOvervoltageProtection+12,f
 12512  20ED  28E8               	goto	u11255
 12513  20EE  083E               	movf	??_setCellOvervoltageProtection+8,w
 12514  20EF  00C3               	movwf	??_setCellOvervoltageProtection+13
 12515  20F0  0843               	movf	??_setCellOvervoltageProtection+13,w
 12516  20F1  00C4               	movwf	setCellOvervoltageProtection@ov_trip
 12517                           
 12518                           ;BQ76920.c: 159:     I2C_writeRegister(0x18, 0x09, ov_trip);
 12519  20F2  3018               	movlw	24
 12520  20F3  00F5               	movwf	I2C_writeRegister@slaveAddress
 12521  20F4  3000               	movlw	0
 12522  20F5  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12523  20F6  3009               	movlw	9
 12524  20F7  00F7               	movwf	I2C_writeRegister@regAddress
 12525  20F8  3000               	movlw	0
 12526  20F9  00F8               	movwf	I2C_writeRegister@regAddress+1
 12527  20FA  0844               	movf	setCellOvervoltageProtection@ov_trip,w
 12528  20FB  00B6               	movwf	??_setCellOvervoltageProtection
 12529  20FC  01B7               	clrf	??_setCellOvervoltageProtection+1
 12530  20FD  0836               	movf	??_setCellOvervoltageProtection,w
 12531  20FE  00F9               	movwf	I2C_writeRegister@data
 12532  20FF  0837               	movf	??_setCellOvervoltageProtection+1,w
 12533  2100  00FA               	movwf	I2C_writeRegister@data+1
 12534  2101  31B5  256D  31A0   	fcall	_I2C_writeRegister
 12535                           
 12536                           ;BQ76920.c: 161:     for (int i = 0; i < (sizeof(OV_delay_setting) / sizeof((OV_delay_se
      +                          tting)[0])) - 1; i++) {
 12537  2104  0020               	movlb	0	; select bank0
 12538  2105  01C5               	clrf	setCellOvervoltageProtection@i
 12539  2106  01C6               	clrf	setCellOvervoltageProtection@i+1
 12540  2107                     l8162:	
 12541                           
 12542                           ;BQ76920.c: 162:         if (delay_s >= OV_delay_setting[i]) {
 12543  2107  0846               	movf	setCellOvervoltageProtection@i+1,w
 12544  2108  0085               	movwf	5
 12545  2109  0845               	movf	setCellOvervoltageProtection@i,w
 12546  210A  0084               	movwf	4
 12547  210B  3584               	lslf	4,f
 12548  210C  0D85               	rlf	5,f
 12549  210D  30E9               	movlw	low (_OV_delay_setting| (0+32768))
 12550  210E  0784               	addwf	4,f
 12551  210F  30B9               	movlw	high (_OV_delay_setting| (0+32768))
 12552  2110  3D85               	addwfc	5,f
 12553  2111  3F00               	moviw [0]fsr0
 12554  2112  00B6               	movwf	??_setCellOvervoltageProtection
 12555  2113  3F01               	moviw [1]fsr0
 12556  2114  00B7               	movwf	??_setCellOvervoltageProtection+1
 12557  2115  0835               	movf	setCellOvervoltageProtection@delay_s+1,w
 12558  2116  3A80               	xorlw	128
 12559  2117  00B8               	movwf	??_setCellOvervoltageProtection+2
 12560  2118  0837               	movf	??_setCellOvervoltageProtection+1,w
 12561  2119  3A80               	xorlw	128
 12562  211A  0238               	subwf	??_setCellOvervoltageProtection+2,w
 12563  211B  1D03               	skipz
 12564  211C  291F               	goto	u11265
 12565  211D  0836               	movf	??_setCellOvervoltageProtection,w
 12566  211E  0234               	subwf	setCellOvervoltageProtection@delay_s,w
 12567  211F                     u11265:	
 12568  211F  1C03               	skipc
 12569  2120  292F               	goto	l8166
 12570                           
 12571                           ;BQ76920.c: 163:             protect3.bits.UV_DELAY = i;
 12572  2121  0020               	movlb	0	; select bank0
 12573  2122  0845               	movf	setCellOvervoltageProtection@i,w
 12574  2123  00B6               	movwf	??_setCellOvervoltageProtection
 12575  2124  0EB6               	swapf	??_setCellOvervoltageProtection,f
 12576  2125  0DB6               	rlf	??_setCellOvervoltageProtection,f
 12577  2126  0DB6               	rlf	??_setCellOvervoltageProtection,f
 12578  2127  0023               	movlb	3	; select bank3
 12579  2128  0852               	movf	BQ76920@protect3^(0+384),w
 12580  2129  0020               	movlb	0	; select bank0
 12581  212A  0636               	xorwf	??_setCellOvervoltageProtection,w
 12582  212B  393F               	andlw	-193
 12583  212C  0636               	xorwf	??_setCellOvervoltageProtection,w
 12584  212D  0023               	movlb	3	; select bank3
 12585  212E  00D2               	movwf	BQ76920@protect3^(0+384)
 12586  212F                     l8166:	
 12587                           
 12588                           ;BQ76920.c: 165:     }
 12589  212F  3001               	movlw	1
 12590  2130  0020               	movlb	0	; select bank0
 12591  2131  07C5               	addwf	setCellOvervoltageProtection@i,f
 12592  2132  3000               	movlw	0
 12593  2133  3DC6               	addwfc	setCellOvervoltageProtection@i+1,f
 12594  2134  3000               	movlw	0
 12595  2135  0246               	subwf	setCellOvervoltageProtection@i+1,w
 12596  2136  3003               	movlw	3
 12597  2137  1903               	skipnz
 12598  2138  0245               	subwf	setCellOvervoltageProtection@i,w
 12599  2139  1C03               	skipc
 12600  213A  2907               	goto	l8162
 12601                           
 12602                           ;BQ76920.c: 166:     I2C_writeRegister(0x18,0x08, protect3.regByte);
 12603  213B  3018               	movlw	24
 12604  213C  00F5               	movwf	I2C_writeRegister@slaveAddress
 12605  213D  3000               	movlw	0
 12606  213E  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12607  213F  3008               	movlw	8
 12608  2140  00F7               	movwf	I2C_writeRegister@regAddress
 12609  2141  3000               	movlw	0
 12610  2142  00F8               	movwf	I2C_writeRegister@regAddress+1
 12611  2143  0023               	movlb	3	; select bank3
 12612  2144  0852               	movf	BQ76920@protect3^(0+384),w
 12613  2145  0020               	movlb	0	; select bank0
 12614  2146  00B6               	movwf	??_setCellOvervoltageProtection
 12615  2147  01B7               	clrf	??_setCellOvervoltageProtection+1
 12616  2148  0836               	movf	??_setCellOvervoltageProtection,w
 12617  2149  00F9               	movwf	I2C_writeRegister@data
 12618  214A  0837               	movf	??_setCellOvervoltageProtection+1,w
 12619  214B  00FA               	movwf	I2C_writeRegister@data+1
 12620  214C  31B5  256D         	fcall	_I2C_writeRegister
 12621  214E  0008               	return
 12622  214F                     __end_of_setCellOvervoltageProtection:	
 12623                           
 12624                           	psect	text43
 12625  2DC3                     __ptext43:	
 12626 ;; *************** function _beginAFEcommunication *****************
 12627 ;; Defined at:
 12628 ;;		line 28 in file "BQ76920.c"
 12629 ;; Parameters:    Size  Location     Type
 12630 ;;		None
 12631 ;; Auto vars:     Size  Location     Type
 12632 ;;  i               2   13[BANK0 ] int 
 12633 ;;  commSuccess     2   11[BANK0 ] int 
 12634 ;; Return value:  Size  Location     Type
 12635 ;;                  2    0[BANK0 ] int 
 12636 ;; Registers used:
 12637 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12638 ;; Tracked objects:
 12639 ;;		On entry : 0/0
 12640 ;;		On exit  : 0/0
 12641 ;;		Unchanged: 0/0
 12642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12643 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12644 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12645 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12646 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12647 ;;Total ram usage:       15 bytes
 12648 ;; Hardware stack levels used:    1
 12649 ;; Hardware stack levels required when called:    3
 12650 ;; This function calls:
 12651 ;;		_I2C_writeRegister
 12652 ;;		_readRegister
 12653 ;; This function is called by:
 12654 ;;		_statemachine
 12655 ;; This function uses a non-reentrant model
 12656 ;;
 12657                           
 12658                           
 12659                           ;psect for function _beginAFEcommunication
 12660  2DC3                     _beginAFEcommunication:	
 12661                           
 12662                           ;BQ76920.c: 30:     int commSuccess = 0;
 12663                           
 12664                           ;incstack = 0
 12665                           ; Regs used in _beginAFEcommunication: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 12666  2DC3  0020               	movlb	0	; select bank0
 12667  2DC4  01AB               	clrf	beginAFEcommunication@commSuccess
 12668  2DC5  01AC               	clrf	beginAFEcommunication@commSuccess+1
 12669                           
 12670                           ;BQ76920.c: 33:     for (int i = 0; i < 4; i++) {
 12671  2DC6  01AD               	clrf	beginAFEcommunication@i
 12672  2DC7  01AE               	clrf	beginAFEcommunication@i+1
 12673  2DC8                     l8286:	
 12674                           
 12675                           ;BQ76920.c: 34:         cellVoltages[i] = 0;
 12676  2DC8  0020               	movlb	0	; select bank0
 12677  2DC9  352D               	lslf	beginAFEcommunication@i,w
 12678  2DCA  3EA0               	addlw	(low (_cellVoltages| (0+256)))& (0+255)
 12679  2DCB  0086               	movwf	6
 12680  2DCC  3001               	movlw	1	; select bank3/4
 12681  2DCD  0087               	movwf	7
 12682  2DCE  3000               	movlw	0
 12683  2DCF  3FC0               	movwi [0]fsr1
 12684  2DD0  3FC1               	movwi [1]fsr1
 12685                           
 12686                           ;BQ76920.c: 35:     }
 12687  2DD1  3001               	movlw	1
 12688  2DD2  07AD               	addwf	beginAFEcommunication@i,f
 12689  2DD3  3000               	movlw	0
 12690  2DD4  3DAE               	addwfc	beginAFEcommunication@i+1,f
 12691  2DD5  082E               	movf	beginAFEcommunication@i+1,w
 12692  2DD6  3A80               	xorlw	128
 12693  2DD7  00A2               	movwf	??_beginAFEcommunication
 12694  2DD8  3080               	movlw	128
 12695  2DD9  0222               	subwf	??_beginAFEcommunication,w
 12696  2DDA  1D03               	skipz
 12697  2DDB  2DDE               	goto	u11375
 12698  2DDC  3004               	movlw	4
 12699  2DDD  022D               	subwf	beginAFEcommunication@i,w
 12700  2DDE                     u11375:	
 12701  2DDE  1C03               	skipc
 12702  2DDF  2DC8               	goto	l8286
 12703                           
 12704                           ;BQ76920.c: 38:     I2C_writeRegister(0x18, 0x0B, 0x19);
 12705  2DE0  3018               	movlw	24
 12706  2DE1  00F5               	movwf	I2C_writeRegister@slaveAddress
 12707  2DE2  3000               	movlw	0
 12708  2DE3  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12709  2DE4  300B               	movlw	11
 12710  2DE5  00F7               	movwf	I2C_writeRegister@regAddress
 12711  2DE6  3000               	movlw	0
 12712  2DE7  00F8               	movwf	I2C_writeRegister@regAddress+1
 12713  2DE8  3019               	movlw	25
 12714  2DE9  00F9               	movwf	I2C_writeRegister@data
 12715  2DEA  3000               	movlw	0
 12716  2DEB  00FA               	movwf	I2C_writeRegister@data+1
 12717  2DEC  31B5  256D  31AD   	fcall	_I2C_writeRegister
 12718                           
 12719                           ;BQ76920.c: 40:     if (readRegister(0x18, 0x0B) == 0x19) {
 12720  2DEF  3018               	movlw	24
 12721  2DF0  00F5               	movwf	readRegister@slaveAddress
 12722  2DF1  3000               	movlw	0
 12723  2DF2  00F6               	movwf	readRegister@slaveAddress+1
 12724  2DF3  300B               	movlw	11
 12725  2DF4  00F7               	movwf	readRegister@regAddress
 12726  2DF5  3000               	movlw	0
 12727  2DF6  00F8               	movwf	readRegister@regAddress+1
 12728  2DF7  31B6  26C7  31AD   	fcall	_readRegister
 12729  2DFA  3019               	movlw	25
 12730  2DFB  0675               	xorwf	?_readRegister,w
 12731  2DFC  0476               	iorwf	?_readRegister+1,w
 12732  2DFD  1D03               	btfss	3,2
 12733  2DFE  2E71               	goto	l447
 12734                           
 12735                           ;BQ76920.c: 41:         commSuccess = 1;
 12736  2DFF  3001               	movlw	1
 12737  2E00  0020               	movlb	0	; select bank0
 12738  2E01  00AB               	movwf	beginAFEcommunication@commSuccess
 12739  2E02  3000               	movlw	0
 12740  2E03  00AC               	movwf	beginAFEcommunication@commSuccess+1
 12741                           
 12742                           ;BQ76920.c: 45:         I2C_writeRegister(0x18, 0x04, 0x18);
 12743  2E04  3018               	movlw	24
 12744  2E05  00F5               	movwf	I2C_writeRegister@slaveAddress
 12745  2E06  3000               	movlw	0
 12746  2E07  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12747  2E08  3004               	movlw	4
 12748  2E09  00F7               	movwf	I2C_writeRegister@regAddress
 12749  2E0A  3000               	movlw	0
 12750  2E0B  00F8               	movwf	I2C_writeRegister@regAddress+1
 12751  2E0C  3018               	movlw	24
 12752  2E0D  00F9               	movwf	I2C_writeRegister@data
 12753  2E0E  3000               	movlw	0
 12754  2E0F  00FA               	movwf	I2C_writeRegister@data+1
 12755  2E10  31B5  256D  31AD   	fcall	_I2C_writeRegister
 12756                           
 12757                           ;BQ76920.c: 46:         I2C_writeRegister(0x18, 0x05, 0x40);
 12758  2E13  3018               	movlw	24
 12759  2E14  00F5               	movwf	I2C_writeRegister@slaveAddress
 12760  2E15  3000               	movlw	0
 12761  2E16  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12762  2E17  3005               	movlw	5
 12763  2E18  00F7               	movwf	I2C_writeRegister@regAddress
 12764  2E19  3000               	movlw	0
 12765  2E1A  00F8               	movwf	I2C_writeRegister@regAddress+1
 12766  2E1B  3040               	movlw	64
 12767  2E1C  00F9               	movwf	I2C_writeRegister@data
 12768  2E1D  3000               	movlw	0
 12769  2E1E  00FA               	movwf	I2C_writeRegister@data+1
 12770  2E1F  31B5  256D  31AD   	fcall	_I2C_writeRegister
 12771                           
 12772                           ;BQ76920.c: 49:         adcOffset = (signed int) readRegister(0x18, 0x51);
 12773  2E22  3018               	movlw	24
 12774  2E23  00F5               	movwf	readRegister@slaveAddress
 12775  2E24  3000               	movlw	0
 12776  2E25  00F6               	movwf	readRegister@slaveAddress+1
 12777  2E26  3051               	movlw	81
 12778  2E27  00F7               	movwf	readRegister@regAddress
 12779  2E28  3000               	movlw	0
 12780  2E29  00F8               	movwf	readRegister@regAddress+1
 12781  2E2A  31B6  26C7  31AD   	fcall	_readRegister
 12782  2E2D  0876               	movf	?_readRegister+1,w
 12783  2E2E  0022               	movlb	2	; select bank2
 12784  2E2F  00EC               	movwf	(_adcOffset+1)^(0+256)
 12785  2E30  0875               	movf	?_readRegister,w
 12786  2E31  00EB               	movwf	_adcOffset^(0+256)
 12787                           
 12788                           ;BQ76920.c: 50:         adcGain = 365 + (((readRegister(0x18, 0x50) & 0x0C) << 1) |
 12789  2E32  3018               	movlw	24
 12790  2E33  00F5               	movwf	readRegister@slaveAddress
 12791  2E34  3000               	movlw	0
 12792  2E35  00F6               	movwf	readRegister@slaveAddress+1
 12793  2E36  3059               	movlw	89
 12794  2E37  00F7               	movwf	readRegister@regAddress
 12795  2E38  3000               	movlw	0
 12796  2E39  00F8               	movwf	readRegister@regAddress+1
 12797  2E3A  31B6  26C7  31AD   	fcall	_readRegister
 12798  2E3D  0875               	movf	?_readRegister,w
 12799  2E3E  0020               	movlb	0	; select bank0
 12800  2E3F  00A2               	movwf	??_beginAFEcommunication
 12801  2E40  0876               	movf	?_readRegister+1,w
 12802  2E41  00A3               	movwf	??_beginAFEcommunication+1
 12803  2E42  3005               	movlw	5
 12804  2E43  00A4               	movwf	??_beginAFEcommunication+2
 12805  2E44                     u11395:	
 12806  2E44  0D23               	rlf	??_beginAFEcommunication+1,w
 12807  2E45  0CA3               	rrf	??_beginAFEcommunication+1,f
 12808  2E46  0CA2               	rrf	??_beginAFEcommunication,f
 12809  2E47  0BA4               	decfsz	??_beginAFEcommunication+2,f
 12810  2E48  2E44               	goto	u11395
 12811  2E49  3007               	movlw	7
 12812  2E4A  0522               	andwf	??_beginAFEcommunication,w
 12813  2E4B  00A5               	movwf	??_beginAFEcommunication+3
 12814  2E4C  3000               	movlw	0
 12815  2E4D  0523               	andwf	??_beginAFEcommunication+1,w
 12816  2E4E  00A6               	movwf	??_beginAFEcommunication+4
 12817  2E4F  3018               	movlw	24
 12818  2E50  00F5               	movwf	readRegister@slaveAddress
 12819  2E51  3000               	movlw	0
 12820  2E52  00F6               	movwf	readRegister@slaveAddress+1
 12821  2E53  3050               	movlw	80
 12822  2E54  00F7               	movwf	readRegister@regAddress
 12823  2E55  3000               	movlw	0
 12824  2E56  00F8               	movwf	readRegister@regAddress+1
 12825  2E57  31B6  26C7         	fcall	_readRegister
 12826  2E59  300C               	movlw	12
 12827  2E5A  0575               	andwf	?_readRegister,w
 12828  2E5B  0020               	movlb	0	; select bank0
 12829  2E5C  00A7               	movwf	??_beginAFEcommunication+5
 12830  2E5D  3000               	movlw	0
 12831  2E5E  0576               	andwf	?_readRegister+1,w
 12832  2E5F  00A8               	movwf	??_beginAFEcommunication+6
 12833  2E60  35A7               	lslf	??_beginAFEcommunication+5,f
 12834  2E61  0DA8               	rlf	??_beginAFEcommunication+6,f
 12835  2E62  0825               	movf	??_beginAFEcommunication+3,w
 12836  2E63  0427               	iorwf	??_beginAFEcommunication+5,w
 12837  2E64  00A9               	movwf	??_beginAFEcommunication+7
 12838  2E65  0826               	movf	??_beginAFEcommunication+4,w
 12839  2E66  0428               	iorwf	??_beginAFEcommunication+6,w
 12840  2E67  00AA               	movwf	??_beginAFEcommunication+8
 12841  2E68  0829               	movf	??_beginAFEcommunication+7,w
 12842  2E69  3E6D               	addlw	109
 12843  2E6A  0022               	movlb	2	; select bank2
 12844  2E6B  00ED               	movwf	_adcGain^(0+256)
 12845  2E6C  3001               	movlw	1
 12846  2E6D  0020               	movlb	0	; select bank0
 12847  2E6E  3D2A               	addwfc	??_beginAFEcommunication+8,w
 12848  2E6F  0022               	movlb	2	; select bank2
 12849  2E70  00EE               	movwf	(_adcGain+1)^(0+256)
 12850  2E71                     l447:	
 12851                           ;BQ76920.c: 53:     }
 12852                           
 12853                           
 12854                           ;BQ76920.c: 54:     return commSuccess;
 12855  2E71  0020               	movlb	0	; select bank0
 12856  2E72  082C               	movf	beginAFEcommunication@commSuccess+1,w
 12857  2E73  00A1               	movwf	?_beginAFEcommunication+1
 12858  2E74  082B               	movf	beginAFEcommunication@commSuccess,w
 12859  2E75  00A0               	movwf	?_beginAFEcommunication
 12860  2E76  0008               	return
 12861  2E77                     __end_of_beginAFEcommunication:	
 12862                           
 12863                           	psect	text44
 12864  35AA                     __ptext44:	
 12865 ;; *************** function _RGB_AWAIT_AFE_CONN *****************
 12866 ;; Defined at:
 12867 ;;		line 43 in file "RGB.c"
 12868 ;; Parameters:    Size  Location     Type
 12869 ;;		None
 12870 ;; Auto vars:     Size  Location     Type
 12871 ;;		None
 12872 ;; Return value:  Size  Location     Type
 12873 ;;                  1    wreg      void 
 12874 ;; Registers used:
 12875 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12876 ;; Tracked objects:
 12877 ;;		On entry : 0/0
 12878 ;;		On exit  : 0/0
 12879 ;;		Unchanged: 0/0
 12880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12883 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12884 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12885 ;;Total ram usage:        1 bytes
 12886 ;; Hardware stack levels used:    1
 12887 ;; Hardware stack levels required when called:    2
 12888 ;; This function calls:
 12889 ;;		_RGB_color
 12890 ;; This function is called by:
 12891 ;;		_statemachine
 12892 ;; This function uses a non-reentrant model
 12893 ;;
 12894                           
 12895                           
 12896                           ;psect for function _RGB_AWAIT_AFE_CONN
 12897  35AA                     _RGB_AWAIT_AFE_CONN:	
 12898                           
 12899                           ;RGB.c: 45:     if (toggleColor) {
 12900                           
 12901                           ;incstack = 0
 12902                           ; Regs used in _RGB_AWAIT_AFE_CONN: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12903  35AA  087C               	movf	_toggleColor,w
 12904  35AB  1903               	btfsc	3,2
 12905  35AC  2DBC               	goto	l8276
 12906                           
 12907                           ;RGB.c: 46:         toggleColor = !toggleColor;
 12908  35AD  087C               	movf	_toggleColor,w
 12909  35AE  1D03               	btfss	3,2
 12910  35AF  2DB2               	goto	u11330
 12911  35B0  3001               	movlw	1
 12912  35B1  2DB3               	goto	u11340
 12913  35B2                     u11330:	
 12914  35B2  3000               	movlw	0
 12915  35B3                     u11340:	
 12916  35B3  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 12917  35B4  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 12918  35B5  00FC               	movwf	_toggleColor
 12919                           
 12920                           ;RGB.c: 47:         RGB_color(0);
 12921  35B6  3000               	movlw	0
 12922  35B7  00F1               	movwf	RGB_color@color
 12923  35B8  00F2               	movwf	RGB_color@color+1
 12924  35B9  31A8  2000         	fcall	_RGB_color
 12925                           
 12926                           ;RGB.c: 48:     } else {
 12927  35BB  0008               	return
 12928  35BC                     l8276:	
 12929                           
 12930                           ;RGB.c: 49:         toggleColor = !toggleColor;
 12931  35BC  087C               	movf	_toggleColor,w
 12932  35BD  1D03               	btfss	3,2
 12933  35BE  2DC1               	goto	u11350
 12934  35BF  3001               	movlw	1
 12935  35C0  2DC2               	goto	u11360
 12936  35C1                     u11350:	
 12937  35C1  3000               	movlw	0
 12938  35C2                     u11360:	
 12939  35C2  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 12940  35C3  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 12941  35C4  00FC               	movwf	_toggleColor
 12942                           
 12943                           ;RGB.c: 50:         RGB_color(1);
 12944  35C5  3001               	movlw	1
 12945  35C6  00F1               	movwf	RGB_color@color
 12946  35C7  3000               	movlw	0
 12947  35C8  00F2               	movwf	RGB_color@color+1
 12948  35C9  31A8  2000         	fcall	_RGB_color
 12949  35CB  0008               	return
 12950  35CC                     __end_of_RGB_AWAIT_AFE_CONN:	
 12951                           
 12952                           	psect	text45
 12953  2800                     __ptext45:	
 12954 ;; *************** function _RGB_color *****************
 12955 ;; Defined at:
 12956 ;;		line 17 in file "RGB.c"
 12957 ;; Parameters:    Size  Location     Type
 12958 ;;  color           2    1[COMMON] int 
 12959 ;; Auto vars:     Size  Location     Type
 12960 ;;		None
 12961 ;; Return value:  Size  Location     Type
 12962 ;;                  1    wreg      void 
 12963 ;; Registers used:
 12964 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12965 ;; Tracked objects:
 12966 ;;		On entry : 0/0
 12967 ;;		On exit  : 0/0
 12968 ;;		Unchanged: 0/0
 12969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12970 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12973 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12974 ;;Total ram usage:        2 bytes
 12975 ;; Hardware stack levels used:    1
 12976 ;; Hardware stack levels required when called:    1
 12977 ;; This function calls:
 12978 ;;		Nothing
 12979 ;; This function is called by:
 12980 ;;		_statemachine
 12981 ;;		_RGB_AWAIT_AFE_CONN
 12982 ;;		_watchdog_timeout_shutdown
 12983 ;; This function uses a non-reentrant model
 12984 ;;
 12985                           
 12986                           
 12987                           ;psect for function _RGB_color
 12988  2800                     _RGB_color:	
 12989                           
 12990                           ;RGB.c: 19:     switch (color) {
 12991                           
 12992                           ;incstack = 0
 12993                           ; Regs used in _RGB_color: [wreg-fsr0h+status,2+status,0]
 12994  2800  2810               	goto	l8016
 12995  2801                     l342:	
 12996                           ;RGB.c: 20:         case 0:
 12997                           
 12998                           
 12999                           ;RGB.c: 21:             LATAbits.LATA4 = 0;
 13000  2801  0022               	movlb	2	; select bank2
 13001  2802  120C               	bcf	12,4	;volatile
 13002                           
 13003                           ;RGB.c: 22:             LATAbits.LATA5 = 1;
 13004  2803  168C               	bsf	12,5	;volatile
 13005                           
 13006                           ;RGB.c: 23:             LATEbits.LATE0 = 1;
 13007  2804  1410               	bsf	16,0	;volatile
 13008                           
 13009                           ;RGB.c: 24:             break;
 13010  2805  0008               	return
 13011  2806                     l344:	
 13012                           ;RGB.c: 25:         case 1:
 13013                           
 13014                           
 13015                           ;RGB.c: 26:             LATAbits.LATA4 = 1;
 13016  2806  0022               	movlb	2	; select bank2
 13017  2807  160C               	bsf	12,4	;volatile
 13018                           
 13019                           ;RGB.c: 27:             LATAbits.LATA5 = 0;
 13020  2808  128C               	bcf	12,5	;volatile
 13021                           
 13022                           ;RGB.c: 28:             LATEbits.LATE0 = 1;
 13023  2809  1410               	bsf	16,0	;volatile
 13024                           
 13025                           ;RGB.c: 29:             break;
 13026  280A  0008               	return
 13027  280B                     l345:	
 13028                           ;RGB.c: 30:         case 2:
 13029                           
 13030                           
 13031                           ;RGB.c: 31:             LATAbits.LATA4 = 1;
 13032  280B  0022               	movlb	2	; select bank2
 13033  280C  160C               	bsf	12,4	;volatile
 13034                           
 13035                           ;RGB.c: 32:             LATAbits.LATA5 = 1;
 13036  280D  168C               	bsf	12,5	;volatile
 13037                           
 13038                           ;RGB.c: 33:             LATEbits.LATE0 = 0;
 13039  280E  1010               	bcf	16,0	;volatile
 13040                           
 13041                           ;RGB.c: 34:             break;
 13042  280F  0008               	return
 13043  2810                     l8016:	
 13044                           
 13045                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13046                           ; Switch size 1, requested type "simple"
 13047                           ; Number of cases is 1, Range of values is 0 to 0
 13048                           ; switch strategies available:
 13049                           ; Name         Instructions Cycles
 13050                           ; simple_byte            4     3 (average)
 13051                           ; direct_byte            8     6 (fixed)
 13052                           ; jumptable            260     6 (fixed)
 13053                           ;	Chosen strategy is simple_byte
 13054  2810  0872               	movf	RGB_color@color+1,w
 13055  2811  3A00               	xorlw	0	; case 0
 13056  2812  1903               	skipnz
 13057  2813  2815               	goto	l8604
 13058  2814  2820               	goto	l346
 13059  2815                     l8604:	
 13060                           
 13061                           ; Switch size 1, requested type "simple"
 13062                           ; Number of cases is 3, Range of values is 0 to 2
 13063                           ; switch strategies available:
 13064                           ; Name         Instructions Cycles
 13065                           ; simple_byte           10     6 (average)
 13066                           ; direct_byte           12     6 (fixed)
 13067                           ; jumptable            260     6 (fixed)
 13068                           ;	Chosen strategy is simple_byte
 13069  2815  0871               	movf	RGB_color@color,w
 13070  2816  3A00               	xorlw	0	; case 0
 13071  2817  1903               	skipnz
 13072  2818  2801               	goto	l342
 13073  2819  3A01               	xorlw	1	; case 1
 13074  281A  1903               	skipnz
 13075  281B  2806               	goto	l344
 13076  281C  3A03               	xorlw	3	; case 2
 13077  281D  1903               	skipnz
 13078  281E  280B               	goto	l345
 13079  281F  2820               	goto	l346
 13080  2820                     l346:	
 13081  2820  0008               	return
 13082  2821                     __end_of_RGB_color:	
 13083                           
 13084                           	psect	text46
 13085  34B0                     __ptext46:	
 13086 ;; *************** function _AFE_UPDATE *****************
 13087 ;; Defined at:
 13088 ;;		line 172 in file "BQ76920.c"
 13089 ;; Parameters:    Size  Location     Type
 13090 ;;		None
 13091 ;; Auto vars:     Size  Location     Type
 13092 ;;		None
 13093 ;; Return value:  Size  Location     Type
 13094 ;;                  1    wreg      void 
 13095 ;; Registers used:
 13096 ;;		wreg, status,2, status,0, pclath, cstack
 13097 ;; Tracked objects:
 13098 ;;		On entry : 0/0
 13099 ;;		On exit  : 0/0
 13100 ;;		Unchanged: 0/0
 13101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13106 ;;Total ram usage:        0 bytes
 13107 ;; Hardware stack levels used:    1
 13108 ;; Hardware stack levels required when called:    5
 13109 ;; This function calls:
 13110 ;;		_enableCharging
 13111 ;;		_enableDischarging
 13112 ;;		_updateCurrent
 13113 ;;		_updateTemperatures
 13114 ;;		_updateVoltages
 13115 ;; This function is called by:
 13116 ;;		_statemachine
 13117 ;; This function uses a non-reentrant model
 13118 ;;
 13119                           
 13120                           
 13121                           ;psect for function _AFE_UPDATE
 13122  34B0                     _AFE_UPDATE:	
 13123                           
 13124                           ;BQ76920.c: 173:     updateCurrent();
 13125                           
 13126                           ;incstack = 0
 13127                           ; Regs used in _AFE_UPDATE: [wreg+status,2+status,0+pclath+cstack]
 13128  34B0  31AE  2677  31B4   	fcall	_updateCurrent
 13129                           
 13130                           ;BQ76920.c: 174:     updateVoltages();
 13131  34B3  3192  224F  31B4   	fcall	_updateVoltages
 13132                           
 13133                           ;BQ76920.c: 175:     updateTemperatures();
 13134  34B6  3195  2527  31B4   	fcall	_updateTemperatures
 13135                           
 13136                           ;BQ76920.c: 178:     enableDischarging(1);
 13137  34B9  3001               	movlw	1
 13138  34BA  0020               	movlb	0	; select bank0
 13139  34BB  00A0               	movwf	enableDischarging@enable
 13140  34BC  3000               	movlw	0
 13141  34BD  00A1               	movwf	enableDischarging@enable+1
 13142  34BE  31B7  2734  31B4   	fcall	_enableDischarging
 13143                           
 13144                           ;BQ76920.c: 179:     enableCharging(1);
 13145  34C1  3001               	movlw	1
 13146  34C2  0020               	movlb	0	; select bank0
 13147  34C3  00A0               	movwf	enableCharging@enable
 13148  34C4  3000               	movlw	0
 13149  34C5  00A1               	movwf	enableCharging@enable+1
 13150  34C6  31B6  26FD         	fcall	_enableCharging
 13151  34C8  0008               	return
 13152  34C9                     __end_of_AFE_UPDATE:	
 13153                           
 13154                           	psect	text47
 13155  124F                     __ptext47:	
 13156 ;; *************** function _updateVoltages *****************
 13157 ;; Defined at:
 13158 ;;		line 209 in file "BQ76920.c"
 13159 ;; Parameters:    Size  Location     Type
 13160 ;;		None
 13161 ;; Auto vars:     Size  Location     Type
 13162 ;;  adcVal          4   24[BANK1 ] long 
 13163 ;; Return value:  Size  Location     Type
 13164 ;;                  1    wreg      void 
 13165 ;; Registers used:
 13166 ;;		wreg, status,2, status,0, pclath, cstack
 13167 ;; Tracked objects:
 13168 ;;		On entry : 0/0
 13169 ;;		On exit  : 0/0
 13170 ;;		Unchanged: 0/0
 13171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13173 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13174 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13175 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13176 ;;Total ram usage:       11 bytes
 13177 ;; Hardware stack levels used:    1
 13178 ;; Hardware stack levels required when called:    3
 13179 ;; This function calls:
 13180 ;;		___aldiv
 13181 ;;		___fladd
 13182 ;;		___fldiv
 13183 ;;		___flmul
 13184 ;;		___fltol
 13185 ;;		___lmul
 13186 ;;		___xxtofl
 13187 ;;		_readRegister
 13188 ;; This function is called by:
 13189 ;;		_AFE_UPDATE
 13190 ;; This function uses a non-reentrant model
 13191 ;;
 13192                           
 13193                           
 13194                           ;psect for function _updateVoltages
 13195  124F                     _updateVoltages:	
 13196                           
 13197                           ;BQ76920.c: 213:   adcVal = (readRegister(0x18, 0x2A) << 8) | readRegister(0x18, 0x2B);
 13198                           
 13199                           ;incstack = 0
 13200                           ; Regs used in _updateVoltages: [wreg+status,2+status,0+pclath+cstack]
 13201  124F  3018               	movlw	24
 13202  1250  00F5               	movwf	readRegister@slaveAddress
 13203  1251  3000               	movlw	0
 13204  1252  00F6               	movwf	readRegister@slaveAddress+1
 13205  1253  302A               	movlw	42
 13206  1254  00F7               	movwf	readRegister@regAddress
 13207  1255  3000               	movlw	0
 13208  1256  00F8               	movwf	readRegister@regAddress+1
 13209  1257  31B6  26C7  3192   	fcall	_readRegister
 13210  125A  0875               	movf	?_readRegister,w
 13211  125B  0021               	movlb	1	; select bank1
 13212  125C  00B1               	movwf	??_updateVoltages^(0+128)
 13213  125D  0876               	movf	?_readRegister+1,w
 13214  125E  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13215  125F  0831               	movf	??_updateVoltages^(0+128),w
 13216  1260  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13217  1261  01B1               	clrf	??_updateVoltages^(0+128)
 13218  1262  3018               	movlw	24
 13219  1263  00F5               	movwf	readRegister@slaveAddress
 13220  1264  3000               	movlw	0
 13221  1265  00F6               	movwf	readRegister@slaveAddress+1
 13222  1266  302B               	movlw	43
 13223  1267  00F7               	movwf	readRegister@regAddress
 13224  1268  3000               	movlw	0
 13225  1269  00F8               	movwf	readRegister@regAddress+1
 13226  126A  31B6  26C7  3192   	fcall	_readRegister
 13227  126D  0875               	movf	?_readRegister,w
 13228  126E  0021               	movlb	1	; select bank1
 13229  126F  0431               	iorwf	??_updateVoltages^(0+128),w
 13230  1270  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13231  1271  0876               	movf	?_readRegister+1,w
 13232  1272  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13233  1273  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13234  1274  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13235  1275  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13236  1276  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13237  1277  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13238  1278  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13239                           
 13240                           ;BQ76920.c: 214:   batVoltage = 4.0 * adcGain * adcVal / 1000.0 + 4 * adcOffset;
 13241  1279  0022               	movlb	2	; select bank2
 13242  127A  086D               	movf	_adcGain^(0+256),w
 13243  127B  00F1               	movwf	___xxtofl@val
 13244  127C  086E               	movf	(_adcGain+1)^(0+256),w
 13245  127D  00F2               	movwf	___xxtofl@val+1
 13246  127E  0D89               	rlf	9,f
 13247  127F  3B89               	subwfb	9,f
 13248  1280  0989               	comf	9,f
 13249  1281  00F3               	movwf	___xxtofl@val+2
 13250  1282  00F4               	movwf	___xxtofl@val+3
 13251  1283  3001               	movlw	1
 13252  1284  31AB  23E3  3192   	fcall	___xxtofl
 13253  1287  0874               	movf	?___xxtofl+3,w
 13254  1288  0020               	movlb	0	; select bank0
 13255  1289  00AD               	movwf	___flmul@a+3
 13256  128A  0873               	movf	?___xxtofl+2,w
 13257  128B  00AC               	movwf	___flmul@a+2
 13258  128C  0872               	movf	?___xxtofl+1,w
 13259  128D  00AB               	movwf	___flmul@a+1
 13260  128E  0871               	movf	?___xxtofl,w
 13261  128F  00AA               	movwf	___flmul@a
 13262  1290  3040               	movlw	64
 13263  1291  00A9               	movwf	___flmul@b+3
 13264  1292  3080               	movlw	128
 13265  1293  00A8               	movwf	___flmul@b+2
 13266  1294  3000               	movlw	0
 13267  1295  00A7               	movwf	___flmul@b+1
 13268  1296  3000               	movlw	0
 13269  1297  00A6               	movwf	___flmul@b
 13270  1298  3190  2023  3192   	fcall	___flmul
 13271  129B  0020               	movlb	0	; select bank0
 13272  129C  0829               	movf	?___flmul+3,w
 13273  129D  0021               	movlb	1	; select bank1
 13274  129E  00B7               	movwf	(_updateVoltages$2029+3)^(0+128)
 13275  129F  0020               	movlb	0	; select bank0
 13276  12A0  0828               	movf	?___flmul+2,w
 13277  12A1  0021               	movlb	1	; select bank1
 13278  12A2  00B6               	movwf	(_updateVoltages$2029+2)^(0+128)
 13279  12A3  0020               	movlb	0	; select bank0
 13280  12A4  0827               	movf	?___flmul+1,w
 13281  12A5  0021               	movlb	1	; select bank1
 13282  12A6  00B5               	movwf	(_updateVoltages$2029+1)^(0+128)
 13283  12A7  0020               	movlb	0	; select bank0
 13284  12A8  0826               	movf	?___flmul,w
 13285  12A9  0021               	movlb	1	; select bank1
 13286  12AA  00B4               	movwf	_updateVoltages$2029^(0+128)
 13287                           
 13288                           ;BQ76920.c: 214:   batVoltage = 4.0 * adcGain * adcVal / 1000.0 + 4 * adcOffset;
 13289  12AB  0837               	movf	(_updateVoltages$2029+3)^(0+128),w
 13290  12AC  0020               	movlb	0	; select bank0
 13291  12AD  00AD               	movwf	___flmul@a+3
 13292  12AE  0021               	movlb	1	; select bank1
 13293  12AF  0836               	movf	(_updateVoltages$2029+2)^(0+128),w
 13294  12B0  0020               	movlb	0	; select bank0
 13295  12B1  00AC               	movwf	___flmul@a+2
 13296  12B2  0021               	movlb	1	; select bank1
 13297  12B3  0835               	movf	(_updateVoltages$2029+1)^(0+128),w
 13298  12B4  0020               	movlb	0	; select bank0
 13299  12B5  00AB               	movwf	___flmul@a+1
 13300  12B6  0021               	movlb	1	; select bank1
 13301  12B7  0834               	movf	_updateVoltages$2029^(0+128),w
 13302  12B8  0020               	movlb	0	; select bank0
 13303  12B9  00AA               	movwf	___flmul@a
 13304  12BA  0021               	movlb	1	; select bank1
 13305  12BB  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13306  12BC  00F4               	movwf	___xxtofl@val+3
 13307  12BD  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13308  12BE  00F3               	movwf	___xxtofl@val+2
 13309  12BF  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13310  12C0  00F2               	movwf	___xxtofl@val+1
 13311  12C1  0838               	movf	updateVoltages@adcVal^(0+128),w
 13312  12C2  00F1               	movwf	___xxtofl@val
 13313  12C3  3001               	movlw	1
 13314  12C4  31AB  23E3  3192   	fcall	___xxtofl
 13315  12C7  0874               	movf	?___xxtofl+3,w
 13316  12C8  0020               	movlb	0	; select bank0
 13317  12C9  00A9               	movwf	___flmul@b+3
 13318  12CA  0873               	movf	?___xxtofl+2,w
 13319  12CB  00A8               	movwf	___flmul@b+2
 13320  12CC  0872               	movf	?___xxtofl+1,w
 13321  12CD  00A7               	movwf	___flmul@b+1
 13322  12CE  0871               	movf	?___xxtofl,w
 13323  12CF  00A6               	movwf	___flmul@b
 13324  12D0  3190  2023  3192   	fcall	___flmul
 13325  12D3  0020               	movlb	0	; select bank0
 13326  12D4  0829               	movf	?___flmul+3,w
 13327  12D5  00C7               	movwf	___fldiv@b+3
 13328  12D6  0828               	movf	?___flmul+2,w
 13329  12D7  00C6               	movwf	___fldiv@b+2
 13330  12D8  0827               	movf	?___flmul+1,w
 13331  12D9  00C5               	movwf	___fldiv@b+1
 13332  12DA  0826               	movf	?___flmul,w
 13333  12DB  00C4               	movwf	___fldiv@b
 13334  12DC  3044               	movlw	68
 13335  12DD  00C3               	movwf	___fldiv@a+3
 13336  12DE  307A               	movlw	122
 13337  12DF  00C2               	movwf	___fldiv@a+2
 13338  12E0  3000               	movlw	0
 13339  12E1  00C1               	movwf	___fldiv@a+1
 13340  12E2  3000               	movlw	0
 13341  12E3  00C0               	movwf	___fldiv@a
 13342  12E4  319C  24E2  3192   	fcall	___fldiv
 13343  12E7  0020               	movlb	0	; select bank0
 13344  12E8  0843               	movf	?___fldiv+3,w
 13345  12E9  00E1               	movwf	___fladd@a+3
 13346  12EA  0842               	movf	?___fldiv+2,w
 13347  12EB  00E0               	movwf	___fladd@a+2
 13348  12EC  0841               	movf	?___fldiv+1,w
 13349  12ED  00DF               	movwf	___fladd@a+1
 13350  12EE  0840               	movf	?___fldiv,w
 13351  12EF  00DE               	movwf	___fladd@a
 13352  12F0  0022               	movlb	2	; select bank2
 13353  12F1  086C               	movf	(_adcOffset+1)^(0+256),w
 13354  12F2  0021               	movlb	1	; select bank1
 13355  12F3  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13356  12F4  0022               	movlb	2	; select bank2
 13357  12F5  086B               	movf	_adcOffset^(0+256),w
 13358  12F6  0021               	movlb	1	; select bank1
 13359  12F7  00B1               	movwf	??_updateVoltages^(0+128)
 13360  12F8  35B1               	lslf	??_updateVoltages^(0+128),f
 13361  12F9  0DB2               	rlf	(??_updateVoltages^(0+128)+1),f
 13362  12FA  35B1               	lslf	??_updateVoltages^(0+128),f
 13363  12FB  0DB2               	rlf	(??_updateVoltages^(0+128)+1),f
 13364  12FC  0831               	movf	??_updateVoltages^(0+128),w
 13365  12FD  00F1               	movwf	___xxtofl@val
 13366  12FE  0832               	movf	(??_updateVoltages+1)^(0+128),w
 13367  12FF  00F2               	movwf	___xxtofl@val+1
 13368  1300  0D89               	rlf	9,f
 13369  1301  3B89               	subwfb	9,f
 13370  1302  0989               	comf	9,f
 13371  1303  00F3               	movwf	___xxtofl@val+2
 13372  1304  00F4               	movwf	___xxtofl@val+3
 13373  1305  3001               	movlw	1
 13374  1306  31AB  23E3  3192   	fcall	___xxtofl
 13375  1309  0874               	movf	?___xxtofl+3,w
 13376  130A  0020               	movlb	0	; select bank0
 13377  130B  00DD               	movwf	___fladd@b+3
 13378  130C  0873               	movf	?___xxtofl+2,w
 13379  130D  00DC               	movwf	___fladd@b+2
 13380  130E  0872               	movf	?___xxtofl+1,w
 13381  130F  00DB               	movwf	___fladd@b+1
 13382  1310  0871               	movf	?___xxtofl,w
 13383  1311  00DA               	movwf	___fladd@b
 13384  1312  3185  25F5  3192   	fcall	___fladd
 13385  1315  0020               	movlb	0	; select bank0
 13386  1316  085D               	movf	?___fladd+3,w
 13387  1317  0021               	movlb	1	; select bank1
 13388  1318  00AB               	movwf	(___fltol@f1+3)^(0+128)
 13389  1319  0020               	movlb	0	; select bank0
 13390  131A  085C               	movf	?___fladd+2,w
 13391  131B  0021               	movlb	1	; select bank1
 13392  131C  00AA               	movwf	(___fltol@f1+2)^(0+128)
 13393  131D  0020               	movlb	0	; select bank0
 13394  131E  085B               	movf	?___fladd+1,w
 13395  131F  0021               	movlb	1	; select bank1
 13396  1320  00A9               	movwf	(___fltol@f1+1)^(0+128)
 13397  1321  0020               	movlb	0	; select bank0
 13398  1322  085A               	movf	?___fladd,w
 13399  1323  0021               	movlb	1	; select bank1
 13400  1324  00A8               	movwf	___fltol@f1^(0+128)
 13401  1325  31A9  211D  3192   	fcall	___fltol
 13402  1328  0021               	movlb	1	; select bank1
 13403  1329  082B               	movf	(?___fltol+3)^(0+128),w
 13404  132A  0023               	movlb	3	; select bank3
 13405  132B  00C1               	movwf	(_batVoltage+3)^(0+384)
 13406  132C  0021               	movlb	1	; select bank1
 13407  132D  082A               	movf	(?___fltol+2)^(0+128),w
 13408  132E  0023               	movlb	3	; select bank3
 13409  132F  00C0               	movwf	(_batVoltage+2)^(0+384)
 13410  1330  0021               	movlb	1	; select bank1
 13411  1331  0829               	movf	(?___fltol+1)^(0+128),w
 13412  1332  0023               	movlb	3	; select bank3
 13413  1333  00BF               	movwf	(_batVoltage+1)^(0+384)
 13414  1334  0021               	movlb	1	; select bank1
 13415  1335  0828               	movf	?___fltol^(0+128),w
 13416  1336  0023               	movlb	3	; select bank3
 13417  1337  00BE               	movwf	_batVoltage^(0+384)
 13418                           
 13419                           ;BQ76920.c: 237:     adcVal = ((readRegister(0x18, 0x0C) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x0D);
 13420  1338  3018               	movlw	24
 13421  1339  00F5               	movwf	readRegister@slaveAddress
 13422  133A  3000               	movlw	0
 13423  133B  00F6               	movwf	readRegister@slaveAddress+1
 13424  133C  300C               	movlw	12
 13425  133D  00F7               	movwf	readRegister@regAddress
 13426  133E  3000               	movlw	0
 13427  133F  00F8               	movwf	readRegister@regAddress+1
 13428  1340  31B6  26C7  3192   	fcall	_readRegister
 13429  1343  303F               	movlw	63
 13430  1344  0575               	andwf	?_readRegister,w
 13431  1345  0021               	movlb	1	; select bank1
 13432  1346  00B1               	movwf	??_updateVoltages^(0+128)
 13433  1347  3000               	movlw	0
 13434  1348  0576               	andwf	?_readRegister+1,w
 13435  1349  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13436  134A  0831               	movf	??_updateVoltages^(0+128),w
 13437  134B  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13438  134C  01B1               	clrf	??_updateVoltages^(0+128)
 13439  134D  3018               	movlw	24
 13440  134E  00F5               	movwf	readRegister@slaveAddress
 13441  134F  3000               	movlw	0
 13442  1350  00F6               	movwf	readRegister@slaveAddress+1
 13443  1351  300D               	movlw	13
 13444  1352  00F7               	movwf	readRegister@regAddress
 13445  1353  3000               	movlw	0
 13446  1354  00F8               	movwf	readRegister@regAddress+1
 13447  1355  31B6  26C7  3192   	fcall	_readRegister
 13448  1358  0875               	movf	?_readRegister,w
 13449  1359  0021               	movlb	1	; select bank1
 13450  135A  0431               	iorwf	??_updateVoltages^(0+128),w
 13451  135B  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13452  135C  0876               	movf	?_readRegister+1,w
 13453  135D  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13454  135E  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13455  135F  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13456  1360  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13457  1361  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13458  1362  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13459  1363  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13460                           
 13461                           ;BQ76920.c: 238:     cellVoltages[0] = (adcVal * adcGain / 1000) + adcOffset;
 13462  1364  3000               	movlw	0
 13463  1365  0020               	movlb	0	; select bank0
 13464  1366  00A7               	movwf	___aldiv@divisor+3
 13465  1367  3000               	movlw	0
 13466  1368  00A6               	movwf	___aldiv@divisor+2
 13467  1369  3003               	movlw	3
 13468  136A  00A5               	movwf	___aldiv@divisor+1
 13469  136B  30E8               	movlw	232
 13470  136C  00A4               	movwf	___aldiv@divisor
 13471  136D  0022               	movlb	2	; select bank2
 13472  136E  086D               	movf	_adcGain^(0+256),w
 13473  136F  00F1               	movwf	___lmul@multiplier
 13474  1370  086E               	movf	(_adcGain+1)^(0+256),w
 13475  1371  00F2               	movwf	___lmul@multiplier+1
 13476  1372  0D89               	rlf	9,f
 13477  1373  3B89               	subwfb	9,f
 13478  1374  0989               	comf	9,f
 13479  1375  00F3               	movwf	___lmul@multiplier+2
 13480  1376  00F4               	movwf	___lmul@multiplier+3
 13481  1377  0021               	movlb	1	; select bank1
 13482  1378  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13483  1379  00F8               	movwf	___lmul@multiplicand+3
 13484  137A  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13485  137B  00F7               	movwf	___lmul@multiplicand+2
 13486  137C  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13487  137D  00F6               	movwf	___lmul@multiplicand+1
 13488  137E  0838               	movf	updateVoltages@adcVal^(0+128),w
 13489  137F  00F5               	movwf	___lmul@multiplicand
 13490  1380  31B6  262E  3192   	fcall	___lmul
 13491  1383  0874               	movf	?___lmul+3,w
 13492  1384  0020               	movlb	0	; select bank0
 13493  1385  00AB               	movwf	___aldiv@dividend+3
 13494  1386  0873               	movf	?___lmul+2,w
 13495  1387  00AA               	movwf	___aldiv@dividend+2
 13496  1388  0872               	movf	?___lmul+1,w
 13497  1389  00A9               	movwf	___aldiv@dividend+1
 13498  138A  0871               	movf	?___lmul,w
 13499  138B  00A8               	movwf	___aldiv@dividend
 13500  138C  31AB  2361  3192   	fcall	___aldiv
 13501  138F  0022               	movlb	2	; select bank2
 13502  1390  086B               	movf	_adcOffset^(0+256),w
 13503  1391  0020               	movlb	0	; select bank0
 13504  1392  0724               	addwf	?___aldiv,w
 13505  1393  0023               	movlb	3	; select bank3
 13506  1394  00A0               	movwf	_cellVoltages^(0+384)
 13507  1395  0022               	movlb	2	; select bank2
 13508  1396  086C               	movf	(_adcOffset+1)^(0+256),w
 13509  1397  0020               	movlb	0	; select bank0
 13510  1398  3D25               	addwfc	?___aldiv+1,w
 13511  1399  0023               	movlb	3	; select bank3
 13512  139A  00A1               	movwf	(_cellVoltages+1)^(0+384)
 13513                           
 13514                           ;BQ76920.c: 239:     adcVal = ((readRegister(0x18, 0x0E) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x0F);
 13515  139B  3018               	movlw	24
 13516  139C  00F5               	movwf	readRegister@slaveAddress
 13517  139D  3000               	movlw	0
 13518  139E  00F6               	movwf	readRegister@slaveAddress+1
 13519  139F  300E               	movlw	14
 13520  13A0  00F7               	movwf	readRegister@regAddress
 13521  13A1  3000               	movlw	0
 13522  13A2  00F8               	movwf	readRegister@regAddress+1
 13523  13A3  31B6  26C7  3192   	fcall	_readRegister
 13524  13A6  303F               	movlw	63
 13525  13A7  0575               	andwf	?_readRegister,w
 13526  13A8  0021               	movlb	1	; select bank1
 13527  13A9  00B1               	movwf	??_updateVoltages^(0+128)
 13528  13AA  3000               	movlw	0
 13529  13AB  0576               	andwf	?_readRegister+1,w
 13530  13AC  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13531  13AD  0831               	movf	??_updateVoltages^(0+128),w
 13532  13AE  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13533  13AF  01B1               	clrf	??_updateVoltages^(0+128)
 13534  13B0  3018               	movlw	24
 13535  13B1  00F5               	movwf	readRegister@slaveAddress
 13536  13B2  3000               	movlw	0
 13537  13B3  00F6               	movwf	readRegister@slaveAddress+1
 13538  13B4  300F               	movlw	15
 13539  13B5  00F7               	movwf	readRegister@regAddress
 13540  13B6  3000               	movlw	0
 13541  13B7  00F8               	movwf	readRegister@regAddress+1
 13542  13B8  31B6  26C7  3192   	fcall	_readRegister
 13543  13BB  0875               	movf	?_readRegister,w
 13544  13BC  0021               	movlb	1	; select bank1
 13545  13BD  0431               	iorwf	??_updateVoltages^(0+128),w
 13546  13BE  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13547  13BF  0876               	movf	?_readRegister+1,w
 13548  13C0  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13549  13C1  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13550  13C2  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13551  13C3  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13552  13C4  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13553  13C5  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13554  13C6  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13555                           
 13556                           ;BQ76920.c: 240:     cellVoltages[1] = (adcVal * adcGain / 1000) + adcOffset;
 13557  13C7  3000               	movlw	0
 13558  13C8  0020               	movlb	0	; select bank0
 13559  13C9  00A7               	movwf	___aldiv@divisor+3
 13560  13CA  3000               	movlw	0
 13561  13CB  00A6               	movwf	___aldiv@divisor+2
 13562  13CC  3003               	movlw	3
 13563  13CD  00A5               	movwf	___aldiv@divisor+1
 13564  13CE  30E8               	movlw	232
 13565  13CF  00A4               	movwf	___aldiv@divisor
 13566  13D0  0022               	movlb	2	; select bank2
 13567  13D1  086D               	movf	_adcGain^(0+256),w
 13568  13D2  00F1               	movwf	___lmul@multiplier
 13569  13D3  086E               	movf	(_adcGain+1)^(0+256),w
 13570  13D4  00F2               	movwf	___lmul@multiplier+1
 13571  13D5  0D89               	rlf	9,f
 13572  13D6  3B89               	subwfb	9,f
 13573  13D7  0989               	comf	9,f
 13574  13D8  00F3               	movwf	___lmul@multiplier+2
 13575  13D9  00F4               	movwf	___lmul@multiplier+3
 13576  13DA  0021               	movlb	1	; select bank1
 13577  13DB  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13578  13DC  00F8               	movwf	___lmul@multiplicand+3
 13579  13DD  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13580  13DE  00F7               	movwf	___lmul@multiplicand+2
 13581  13DF  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13582  13E0  00F6               	movwf	___lmul@multiplicand+1
 13583  13E1  0838               	movf	updateVoltages@adcVal^(0+128),w
 13584  13E2  00F5               	movwf	___lmul@multiplicand
 13585  13E3  31B6  262E  3192   	fcall	___lmul
 13586  13E6  0874               	movf	?___lmul+3,w
 13587  13E7  0020               	movlb	0	; select bank0
 13588  13E8  00AB               	movwf	___aldiv@dividend+3
 13589  13E9  0873               	movf	?___lmul+2,w
 13590  13EA  00AA               	movwf	___aldiv@dividend+2
 13591  13EB  0872               	movf	?___lmul+1,w
 13592  13EC  00A9               	movwf	___aldiv@dividend+1
 13593  13ED  0871               	movf	?___lmul,w
 13594  13EE  00A8               	movwf	___aldiv@dividend
 13595  13EF  31AB  2361  3192   	fcall	___aldiv
 13596  13F2  0022               	movlb	2	; select bank2
 13597  13F3  086B               	movf	_adcOffset^(0+256),w
 13598  13F4  0020               	movlb	0	; select bank0
 13599  13F5  0724               	addwf	?___aldiv,w
 13600  13F6  0023               	movlb	3	; select bank3
 13601  13F7  00A2               	movwf	(_cellVoltages^(0+384)+2)
 13602  13F8  0022               	movlb	2	; select bank2
 13603  13F9  086C               	movf	(_adcOffset+1)^(0+256),w
 13604  13FA  0020               	movlb	0	; select bank0
 13605  13FB  3D25               	addwfc	?___aldiv+1,w
 13606  13FC  0023               	movlb	3	; select bank3
 13607  13FD  00A3               	movwf	((_cellVoltages+1)^(0+384)+2)
 13608                           
 13609                           ;BQ76920.c: 241:     adcVal = ((readRegister(0x18, 0x10) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x11);
 13610  13FE  3018               	movlw	24
 13611  13FF  00F5               	movwf	readRegister@slaveAddress
 13612  1400  3000               	movlw	0
 13613  1401  00F6               	movwf	readRegister@slaveAddress+1
 13614  1402  3010               	movlw	16
 13615  1403  00F7               	movwf	readRegister@regAddress
 13616  1404  3000               	movlw	0
 13617  1405  00F8               	movwf	readRegister@regAddress+1
 13618  1406  31B6  26C7  3192   	fcall	_readRegister
 13619  1409  303F               	movlw	63
 13620  140A  0575               	andwf	?_readRegister,w
 13621  140B  0021               	movlb	1	; select bank1
 13622  140C  00B1               	movwf	??_updateVoltages^(0+128)
 13623  140D  3000               	movlw	0
 13624  140E  0576               	andwf	?_readRegister+1,w
 13625  140F  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13626  1410  0831               	movf	??_updateVoltages^(0+128),w
 13627  1411  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13628  1412  01B1               	clrf	??_updateVoltages^(0+128)
 13629  1413  3018               	movlw	24
 13630  1414  00F5               	movwf	readRegister@slaveAddress
 13631  1415  3000               	movlw	0
 13632  1416  00F6               	movwf	readRegister@slaveAddress+1
 13633  1417  3011               	movlw	17
 13634  1418  00F7               	movwf	readRegister@regAddress
 13635  1419  3000               	movlw	0
 13636  141A  00F8               	movwf	readRegister@regAddress+1
 13637  141B  31B6  26C7  3192   	fcall	_readRegister
 13638  141E  0875               	movf	?_readRegister,w
 13639  141F  0021               	movlb	1	; select bank1
 13640  1420  0431               	iorwf	??_updateVoltages^(0+128),w
 13641  1421  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13642  1422  0876               	movf	?_readRegister+1,w
 13643  1423  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13644  1424  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13645  1425  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13646  1426  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13647  1427  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13648  1428  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13649  1429  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13650                           
 13651                           ;BQ76920.c: 242:     cellVoltages[2] = (adcVal * adcGain / 1000) + adcOffset;
 13652  142A  3000               	movlw	0
 13653  142B  0020               	movlb	0	; select bank0
 13654  142C  00A7               	movwf	___aldiv@divisor+3
 13655  142D  3000               	movlw	0
 13656  142E  00A6               	movwf	___aldiv@divisor+2
 13657  142F  3003               	movlw	3
 13658  1430  00A5               	movwf	___aldiv@divisor+1
 13659  1431  30E8               	movlw	232
 13660  1432  00A4               	movwf	___aldiv@divisor
 13661  1433  0022               	movlb	2	; select bank2
 13662  1434  086D               	movf	_adcGain^(0+256),w
 13663  1435  00F1               	movwf	___lmul@multiplier
 13664  1436  086E               	movf	(_adcGain+1)^(0+256),w
 13665  1437  00F2               	movwf	___lmul@multiplier+1
 13666  1438  0D89               	rlf	9,f
 13667  1439  3B89               	subwfb	9,f
 13668  143A  0989               	comf	9,f
 13669  143B  00F3               	movwf	___lmul@multiplier+2
 13670  143C  00F4               	movwf	___lmul@multiplier+3
 13671  143D  0021               	movlb	1	; select bank1
 13672  143E  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13673  143F  00F8               	movwf	___lmul@multiplicand+3
 13674  1440  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13675  1441  00F7               	movwf	___lmul@multiplicand+2
 13676  1442  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13677  1443  00F6               	movwf	___lmul@multiplicand+1
 13678  1444  0838               	movf	updateVoltages@adcVal^(0+128),w
 13679  1445  00F5               	movwf	___lmul@multiplicand
 13680  1446  31B6  262E  3192   	fcall	___lmul
 13681  1449  0874               	movf	?___lmul+3,w
 13682  144A  0020               	movlb	0	; select bank0
 13683  144B  00AB               	movwf	___aldiv@dividend+3
 13684  144C  0873               	movf	?___lmul+2,w
 13685  144D  00AA               	movwf	___aldiv@dividend+2
 13686  144E  0872               	movf	?___lmul+1,w
 13687  144F  00A9               	movwf	___aldiv@dividend+1
 13688  1450  0871               	movf	?___lmul,w
 13689  1451  00A8               	movwf	___aldiv@dividend
 13690  1452  31AB  2361  3192   	fcall	___aldiv
 13691  1455  0022               	movlb	2	; select bank2
 13692  1456  086B               	movf	_adcOffset^(0+256),w
 13693  1457  0020               	movlb	0	; select bank0
 13694  1458  0724               	addwf	?___aldiv,w
 13695  1459  0023               	movlb	3	; select bank3
 13696  145A  00A4               	movwf	(_cellVoltages^(0+384)+4)
 13697  145B  0022               	movlb	2	; select bank2
 13698  145C  086C               	movf	(_adcOffset+1)^(0+256),w
 13699  145D  0020               	movlb	0	; select bank0
 13700  145E  3D25               	addwfc	?___aldiv+1,w
 13701  145F  0023               	movlb	3	; select bank3
 13702  1460  00A5               	movwf	((_cellVoltages+1)^(0+384)+4)
 13703                           
 13704                           ;BQ76920.c: 243:     adcVal = ((readRegister(0x18, 0x12) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x13);
 13705  1461  3018               	movlw	24
 13706  1462  00F5               	movwf	readRegister@slaveAddress
 13707  1463  3000               	movlw	0
 13708  1464  00F6               	movwf	readRegister@slaveAddress+1
 13709  1465  3012               	movlw	18
 13710  1466  00F7               	movwf	readRegister@regAddress
 13711  1467  3000               	movlw	0
 13712  1468  00F8               	movwf	readRegister@regAddress+1
 13713  1469  31B6  26C7  3192   	fcall	_readRegister
 13714  146C  303F               	movlw	63
 13715  146D  0575               	andwf	?_readRegister,w
 13716  146E  0021               	movlb	1	; select bank1
 13717  146F  00B1               	movwf	??_updateVoltages^(0+128)
 13718  1470  3000               	movlw	0
 13719  1471  0576               	andwf	?_readRegister+1,w
 13720  1472  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13721  1473  0831               	movf	??_updateVoltages^(0+128),w
 13722  1474  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13723  1475  01B1               	clrf	??_updateVoltages^(0+128)
 13724  1476  3018               	movlw	24
 13725  1477  00F5               	movwf	readRegister@slaveAddress
 13726  1478  3000               	movlw	0
 13727  1479  00F6               	movwf	readRegister@slaveAddress+1
 13728  147A  3013               	movlw	19
 13729  147B  00F7               	movwf	readRegister@regAddress
 13730  147C  3000               	movlw	0
 13731  147D  00F8               	movwf	readRegister@regAddress+1
 13732  147E  31B6  26C7  3192   	fcall	_readRegister
 13733  1481  0875               	movf	?_readRegister,w
 13734  1482  0021               	movlb	1	; select bank1
 13735  1483  0431               	iorwf	??_updateVoltages^(0+128),w
 13736  1484  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13737  1485  0876               	movf	?_readRegister+1,w
 13738  1486  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13739  1487  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13740  1488  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13741  1489  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13742  148A  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13743  148B  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13744  148C  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13745                           
 13746                           ;BQ76920.c: 244:     cellVoltages[3] = (adcVal * adcGain / 1000) + adcOffset;
 13747  148D  3000               	movlw	0
 13748  148E  0020               	movlb	0	; select bank0
 13749  148F  00A7               	movwf	___aldiv@divisor+3
 13750  1490  3000               	movlw	0
 13751  1491  00A6               	movwf	___aldiv@divisor+2
 13752  1492  3003               	movlw	3
 13753  1493  00A5               	movwf	___aldiv@divisor+1
 13754  1494  30E8               	movlw	232
 13755  1495  00A4               	movwf	___aldiv@divisor
 13756  1496  0022               	movlb	2	; select bank2
 13757  1497  086D               	movf	_adcGain^(0+256),w
 13758  1498  00F1               	movwf	___lmul@multiplier
 13759  1499  086E               	movf	(_adcGain+1)^(0+256),w
 13760  149A  00F2               	movwf	___lmul@multiplier+1
 13761  149B  0D89               	rlf	9,f
 13762  149C  3B89               	subwfb	9,f
 13763  149D  0989               	comf	9,f
 13764  149E  00F3               	movwf	___lmul@multiplier+2
 13765  149F  00F4               	movwf	___lmul@multiplier+3
 13766  14A0  0021               	movlb	1	; select bank1
 13767  14A1  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13768  14A2  00F8               	movwf	___lmul@multiplicand+3
 13769  14A3  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13770  14A4  00F7               	movwf	___lmul@multiplicand+2
 13771  14A5  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13772  14A6  00F6               	movwf	___lmul@multiplicand+1
 13773  14A7  0838               	movf	updateVoltages@adcVal^(0+128),w
 13774  14A8  00F5               	movwf	___lmul@multiplicand
 13775  14A9  31B6  262E  3192   	fcall	___lmul
 13776  14AC  0874               	movf	?___lmul+3,w
 13777  14AD  0020               	movlb	0	; select bank0
 13778  14AE  00AB               	movwf	___aldiv@dividend+3
 13779  14AF  0873               	movf	?___lmul+2,w
 13780  14B0  00AA               	movwf	___aldiv@dividend+2
 13781  14B1  0872               	movf	?___lmul+1,w
 13782  14B2  00A9               	movwf	___aldiv@dividend+1
 13783  14B3  0871               	movf	?___lmul,w
 13784  14B4  00A8               	movwf	___aldiv@dividend
 13785  14B5  31AB  2361  3192   	fcall	___aldiv
 13786  14B8  0022               	movlb	2	; select bank2
 13787  14B9  086B               	movf	_adcOffset^(0+256),w
 13788  14BA  0020               	movlb	0	; select bank0
 13789  14BB  0724               	addwf	?___aldiv,w
 13790  14BC  0023               	movlb	3	; select bank3
 13791  14BD  00A6               	movwf	(_cellVoltages^(0+384)+6)
 13792  14BE  0022               	movlb	2	; select bank2
 13793  14BF  086C               	movf	(_adcOffset+1)^(0+256),w
 13794  14C0  0020               	movlb	0	; select bank0
 13795  14C1  3D25               	addwfc	?___aldiv+1,w
 13796  14C2  0023               	movlb	3	; select bank3
 13797  14C3  00A7               	movwf	((_cellVoltages+1)^(0+384)+6)
 13798                           
 13799                           ;BQ76920.c: 245:     adcVal = ((readRegister(0x18, 0x14) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x15);
 13800  14C4  3018               	movlw	24
 13801  14C5  00F5               	movwf	readRegister@slaveAddress
 13802  14C6  3000               	movlw	0
 13803  14C7  00F6               	movwf	readRegister@slaveAddress+1
 13804  14C8  3014               	movlw	20
 13805  14C9  00F7               	movwf	readRegister@regAddress
 13806  14CA  3000               	movlw	0
 13807  14CB  00F8               	movwf	readRegister@regAddress+1
 13808  14CC  31B6  26C7  3192   	fcall	_readRegister
 13809  14CF  303F               	movlw	63
 13810  14D0  0575               	andwf	?_readRegister,w
 13811  14D1  0021               	movlb	1	; select bank1
 13812  14D2  00B1               	movwf	??_updateVoltages^(0+128)
 13813  14D3  3000               	movlw	0
 13814  14D4  0576               	andwf	?_readRegister+1,w
 13815  14D5  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13816  14D6  0831               	movf	??_updateVoltages^(0+128),w
 13817  14D7  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13818  14D8  01B1               	clrf	??_updateVoltages^(0+128)
 13819  14D9  3018               	movlw	24
 13820  14DA  00F5               	movwf	readRegister@slaveAddress
 13821  14DB  3000               	movlw	0
 13822  14DC  00F6               	movwf	readRegister@slaveAddress+1
 13823  14DD  3015               	movlw	21
 13824  14DE  00F7               	movwf	readRegister@regAddress
 13825  14DF  3000               	movlw	0
 13826  14E0  00F8               	movwf	readRegister@regAddress+1
 13827  14E1  31B6  26C7  3192   	fcall	_readRegister
 13828  14E4  0875               	movf	?_readRegister,w
 13829  14E5  0021               	movlb	1	; select bank1
 13830  14E6  0431               	iorwf	??_updateVoltages^(0+128),w
 13831  14E7  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13832  14E8  0876               	movf	?_readRegister+1,w
 13833  14E9  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13834  14EA  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13835  14EB  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13836  14EC  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13837  14ED  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13838  14EE  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13839  14EF  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13840                           
 13841                           ;BQ76920.c: 246:     cellVoltages[4] = (adcVal * adcGain / 1000) + adcOffset;
 13842  14F0  3000               	movlw	0
 13843  14F1  0020               	movlb	0	; select bank0
 13844  14F2  00A7               	movwf	___aldiv@divisor+3
 13845  14F3  3000               	movlw	0
 13846  14F4  00A6               	movwf	___aldiv@divisor+2
 13847  14F5  3003               	movlw	3
 13848  14F6  00A5               	movwf	___aldiv@divisor+1
 13849  14F7  30E8               	movlw	232
 13850  14F8  00A4               	movwf	___aldiv@divisor
 13851  14F9  0022               	movlb	2	; select bank2
 13852  14FA  086D               	movf	_adcGain^(0+256),w
 13853  14FB  00F1               	movwf	___lmul@multiplier
 13854  14FC  086E               	movf	(_adcGain+1)^(0+256),w
 13855  14FD  00F2               	movwf	___lmul@multiplier+1
 13856  14FE  0D89               	rlf	9,f
 13857  14FF  3B89               	subwfb	9,f
 13858  1500  0989               	comf	9,f
 13859  1501  00F3               	movwf	___lmul@multiplier+2
 13860  1502  00F4               	movwf	___lmul@multiplier+3
 13861  1503  0021               	movlb	1	; select bank1
 13862  1504  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13863  1505  00F8               	movwf	___lmul@multiplicand+3
 13864  1506  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13865  1507  00F7               	movwf	___lmul@multiplicand+2
 13866  1508  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13867  1509  00F6               	movwf	___lmul@multiplicand+1
 13868  150A  0838               	movf	updateVoltages@adcVal^(0+128),w
 13869  150B  00F5               	movwf	___lmul@multiplicand
 13870  150C  31B6  262E  3192   	fcall	___lmul
 13871  150F  0874               	movf	?___lmul+3,w
 13872  1510  0020               	movlb	0	; select bank0
 13873  1511  00AB               	movwf	___aldiv@dividend+3
 13874  1512  0873               	movf	?___lmul+2,w
 13875  1513  00AA               	movwf	___aldiv@dividend+2
 13876  1514  0872               	movf	?___lmul+1,w
 13877  1515  00A9               	movwf	___aldiv@dividend+1
 13878  1516  0871               	movf	?___lmul,w
 13879  1517  00A8               	movwf	___aldiv@dividend
 13880  1518  31AB  2361         	fcall	___aldiv
 13881  151A  0022               	movlb	2	; select bank2
 13882  151B  086B               	movf	_adcOffset^(0+256),w
 13883  151C  0020               	movlb	0	; select bank0
 13884  151D  0724               	addwf	?___aldiv,w
 13885  151E  0023               	movlb	3	; select bank3
 13886  151F  00A8               	movwf	(_cellVoltages^(0+384)+8)
 13887  1520  0022               	movlb	2	; select bank2
 13888  1521  086C               	movf	(_adcOffset+1)^(0+256),w
 13889  1522  0020               	movlb	0	; select bank0
 13890  1523  3D25               	addwfc	?___aldiv+1,w
 13891  1524  0023               	movlb	3	; select bank3
 13892  1525  00A9               	movwf	((_cellVoltages+1)^(0+384)+8)
 13893  1526  0008               	return
 13894  1527                     __end_of_updateVoltages:	
 13895                           
 13896                           	psect	text48
 13897  362E                     __ptext48:	
 13898 ;; *************** function ___lmul *****************
 13899 ;; Defined at:
 13900 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
 13901 ;; Parameters:    Size  Location     Type
 13902 ;;  multiplier      4    1[COMMON] unsigned long 
 13903 ;;  multiplicand    4    5[COMMON] unsigned long 
 13904 ;; Auto vars:     Size  Location     Type
 13905 ;;  product         4    0[BANK0 ] unsigned long 
 13906 ;; Return value:  Size  Location     Type
 13907 ;;                  4    1[COMMON] unsigned long 
 13908 ;; Registers used:
 13909 ;;		wreg, status,2, status,0
 13910 ;; Tracked objects:
 13911 ;;		On entry : 0/0
 13912 ;;		On exit  : 0/0
 13913 ;;		Unchanged: 0/0
 13914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13915 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13916 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13918 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13919 ;;Total ram usage:       12 bytes
 13920 ;; Hardware stack levels used:    1
 13921 ;; Hardware stack levels required when called:    1
 13922 ;; This function calls:
 13923 ;;		Nothing
 13924 ;; This function is called by:
 13925 ;;		_setCellUndervoltageProtection
 13926 ;;		_setCellOvervoltageProtection
 13927 ;;		_updateVoltages
 13928 ;; This function uses a non-reentrant model
 13929 ;;
 13930                           
 13931                           
 13932                           ;psect for function ___lmul
 13933  362E                     ___lmul:	
 13934                           
 13935                           ;incstack = 0
 13936                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 13937  362E  3000               	movlw	0
 13938  362F  0020               	movlb	0	; select bank0
 13939  3630  00A3               	movwf	___lmul@product+3
 13940  3631  3000               	movlw	0
 13941  3632  00A2               	movwf	___lmul@product+2
 13942  3633  3000               	movlw	0
 13943  3634  00A1               	movwf	___lmul@product+1
 13944  3635  3000               	movlw	0
 13945  3636  00A0               	movwf	___lmul@product
 13946  3637                     l7864:	
 13947  3637  1C71               	btfss	___lmul@multiplier,0
 13948  3638  2E42               	goto	l7868
 13949  3639  0875               	movf	___lmul@multiplicand,w
 13950  363A  0020               	movlb	0	; select bank0
 13951  363B  07A0               	addwf	___lmul@product,f
 13952  363C  0876               	movf	___lmul@multiplicand+1,w
 13953  363D  3DA1               	addwfc	___lmul@product+1,f
 13954  363E  0877               	movf	___lmul@multiplicand+2,w
 13955  363F  3DA2               	addwfc	___lmul@product+2,f
 13956  3640  0878               	movf	___lmul@multiplicand+3,w
 13957  3641  3DA3               	addwfc	___lmul@product+3,f
 13958  3642                     l7868:	
 13959  3642  3001               	movlw	1
 13960  3643                     u10795:	
 13961  3643  35F5               	lslf	___lmul@multiplicand,f
 13962  3644  0DF6               	rlf	___lmul@multiplicand+1,f
 13963  3645  0DF7               	rlf	___lmul@multiplicand+2,f
 13964  3646  0DF8               	rlf	___lmul@multiplicand+3,f
 13965  3647  0B89               	decfsz	9,f
 13966  3648  2E43               	goto	u10795
 13967  3649  3001               	movlw	1
 13968  364A                     u10805:	
 13969  364A  36F4               	lsrf	___lmul@multiplier+3,f
 13970  364B  0CF3               	rrf	___lmul@multiplier+2,f
 13971  364C  0CF2               	rrf	___lmul@multiplier+1,f
 13972  364D  0CF1               	rrf	___lmul@multiplier,f
 13973  364E  0B89               	decfsz	9,f
 13974  364F  2E4A               	goto	u10805
 13975  3650  0874               	movf	___lmul@multiplier+3,w
 13976  3651  0473               	iorwf	___lmul@multiplier+2,w
 13977  3652  0472               	iorwf	___lmul@multiplier+1,w
 13978  3653  0471               	iorwf	___lmul@multiplier,w
 13979  3654  1D03               	skipz
 13980  3655  2E37               	goto	l7864
 13981  3656  0020               	movlb	0	; select bank0
 13982  3657  0823               	movf	___lmul@product+3,w
 13983  3658  00F4               	movwf	?___lmul+3
 13984  3659  0822               	movf	___lmul@product+2,w
 13985  365A  00F3               	movwf	?___lmul+2
 13986  365B  0821               	movf	___lmul@product+1,w
 13987  365C  00F2               	movwf	?___lmul+1
 13988  365D  0820               	movf	___lmul@product,w
 13989  365E  00F1               	movwf	?___lmul
 13990  365F  0008               	return
 13991  3660                     __end_of___lmul:	
 13992                           
 13993                           	psect	text49
 13994  1527                     __ptext49:	
 13995 ;; *************** function _updateTemperatures *****************
 13996 ;; Defined at:
 13997 ;;		line 253 in file "BQ76920.c"
 13998 ;; Parameters:    Size  Location     Type
 13999 ;;		None
 14000 ;; Auto vars:     Size  Location     Type
 14001 ;;  rts             4   75[BANK1 ] unsigned long 
 14002 ;;  tmp             4   67[BANK1 ] float 
 14003 ;;  vtsx            2   73[BANK1 ] int 
 14004 ;;  adcVal          2   71[BANK1 ] int 
 14005 ;; Return value:  Size  Location     Type
 14006 ;;                  1    wreg      void 
 14007 ;; Registers used:
 14008 ;;		wreg, status,2, status,0, pclath, cstack
 14009 ;; Tracked objects:
 14010 ;;		On entry : 0/0
 14011 ;;		On exit  : 0/0
 14012 ;;		Unchanged: 0/0
 14013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14015 ;;      Locals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14016 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14017 ;;      Totals:         0       0      59       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14018 ;;Total ram usage:       59 bytes
 14019 ;; Hardware stack levels used:    1
 14020 ;; Hardware stack levels required when called:    4
 14021 ;; This function calls:
 14022 ;;		___fladd
 14023 ;;		___fldiv
 14024 ;;		___flmul
 14025 ;;		___flsub
 14026 ;;		___fltol
 14027 ;;		___xxtofl
 14028 ;;		_logf
 14029 ;;		_readRegister
 14030 ;; This function is called by:
 14031 ;;		_AFE_UPDATE
 14032 ;; This function uses a non-reentrant model
 14033 ;;
 14034                           
 14035                           
 14036                           ;psect for function _updateTemperatures
 14037  1527                     _updateTemperatures:	
 14038                           
 14039                           ;BQ76920.c: 257:      unsigned long rts = 0;
 14040                           
 14041                           ;incstack = 0
 14042                           ; Regs used in _updateTemperatures: [wreg+status,2+status,0+pclath+cstack]
 14043  1527  3000               	movlw	0
 14044  1528  0021               	movlb	1	; select bank1
 14045  1529  00EE               	movwf	(updateTemperatures@rts+3)^(0+128)
 14046  152A  3000               	movlw	0
 14047  152B  00ED               	movwf	(updateTemperatures@rts+2)^(0+128)
 14048  152C  3000               	movlw	0
 14049  152D  00EC               	movwf	(updateTemperatures@rts+1)^(0+128)
 14050  152E  3000               	movlw	0
 14051  152F  00EB               	movwf	updateTemperatures@rts^(0+128)
 14052                           
 14053                           ;BQ76920.c: 259:      adcVal = ((readRegister(0x18, 0x2C) & 0x3F) << 8) | readRegister(0
      +                          x18, 0x2D);
 14054  1530  3018               	movlw	24
 14055  1531  00F5               	movwf	readRegister@slaveAddress
 14056  1532  3000               	movlw	0
 14057  1533  00F6               	movwf	readRegister@slaveAddress+1
 14058  1534  302C               	movlw	44
 14059  1535  00F7               	movwf	readRegister@regAddress
 14060  1536  3000               	movlw	0
 14061  1537  00F8               	movwf	readRegister@regAddress+1
 14062  1538  31B6  26C7  3195   	fcall	_readRegister
 14063  153B  303F               	movlw	63
 14064  153C  0575               	andwf	?_readRegister,w
 14065  153D  0021               	movlb	1	; select bank1
 14066  153E  00B4               	movwf	??_updateTemperatures^(0+128)
 14067  153F  3000               	movlw	0
 14068  1540  0576               	andwf	?_readRegister+1,w
 14069  1541  00B5               	movwf	(??_updateTemperatures+1)^(0+128)
 14070  1542  0834               	movf	??_updateTemperatures^(0+128),w
 14071  1543  00B5               	movwf	(??_updateTemperatures^(0+128)+1)
 14072  1544  01B4               	clrf	??_updateTemperatures^(0+128)
 14073  1545  3018               	movlw	24
 14074  1546  00F5               	movwf	readRegister@slaveAddress
 14075  1547  3000               	movlw	0
 14076  1548  00F6               	movwf	readRegister@slaveAddress+1
 14077  1549  302D               	movlw	45
 14078  154A  00F7               	movwf	readRegister@regAddress
 14079  154B  3000               	movlw	0
 14080  154C  00F8               	movwf	readRegister@regAddress+1
 14081  154D  31B6  26C7  3195   	fcall	_readRegister
 14082  1550  0875               	movf	?_readRegister,w
 14083  1551  0021               	movlb	1	; select bank1
 14084  1552  0434               	iorwf	??_updateTemperatures^(0+128),w
 14085  1553  00E7               	movwf	updateTemperatures@adcVal^(0+128)
 14086  1554  0876               	movf	?_readRegister+1,w
 14087  1555  0435               	iorwf	(??_updateTemperatures+1)^(0+128),w
 14088  1556  00E8               	movwf	(updateTemperatures@adcVal+1)^(0+128)
 14089                           
 14090                           ;BQ76920.c: 260:      vtsx = adcVal * 0.382;
 14091  1557  0867               	movf	updateTemperatures@adcVal^(0+128),w
 14092  1558  00F1               	movwf	___xxtofl@val
 14093  1559  0868               	movf	(updateTemperatures@adcVal+1)^(0+128),w
 14094  155A  00F2               	movwf	___xxtofl@val+1
 14095  155B  0D89               	rlf	9,f
 14096  155C  3B89               	subwfb	9,f
 14097  155D  0989               	comf	9,f
 14098  155E  00F3               	movwf	___xxtofl@val+2
 14099  155F  00F4               	movwf	___xxtofl@val+3
 14100  1560  3001               	movlw	1
 14101  1561  31AB  23E3  3195   	fcall	___xxtofl
 14102  1564  0874               	movf	?___xxtofl+3,w
 14103  1565  0020               	movlb	0	; select bank0
 14104  1566  00AD               	movwf	___flmul@a+3
 14105  1567  0873               	movf	?___xxtofl+2,w
 14106  1568  00AC               	movwf	___flmul@a+2
 14107  1569  0872               	movf	?___xxtofl+1,w
 14108  156A  00AB               	movwf	___flmul@a+1
 14109  156B  0871               	movf	?___xxtofl,w
 14110  156C  00AA               	movwf	___flmul@a
 14111  156D  303E               	movlw	62
 14112  156E  00A9               	movwf	___flmul@b+3
 14113  156F  30C3               	movlw	195
 14114  1570  00A8               	movwf	___flmul@b+2
 14115  1571  3095               	movlw	149
 14116  1572  00A7               	movwf	___flmul@b+1
 14117  1573  3081               	movlw	129
 14118  1574  00A6               	movwf	___flmul@b
 14119  1575  3190  2023  3195   	fcall	___flmul
 14120  1578  0020               	movlb	0	; select bank0
 14121  1579  0829               	movf	?___flmul+3,w
 14122  157A  0021               	movlb	1	; select bank1
 14123  157B  00AB               	movwf	(___fltol@f1+3)^(0+128)
 14124  157C  0020               	movlb	0	; select bank0
 14125  157D  0828               	movf	?___flmul+2,w
 14126  157E  0021               	movlb	1	; select bank1
 14127  157F  00AA               	movwf	(___fltol@f1+2)^(0+128)
 14128  1580  0020               	movlb	0	; select bank0
 14129  1581  0827               	movf	?___flmul+1,w
 14130  1582  0021               	movlb	1	; select bank1
 14131  1583  00A9               	movwf	(___fltol@f1+1)^(0+128)
 14132  1584  0020               	movlb	0	; select bank0
 14133  1585  0826               	movf	?___flmul,w
 14134  1586  0021               	movlb	1	; select bank1
 14135  1587  00A8               	movwf	___fltol@f1^(0+128)
 14136  1588  31A9  211D  3195   	fcall	___fltol
 14137  158B  0021               	movlb	1	; select bank1
 14138  158C  0829               	movf	(?___fltol+1)^(0+128),w
 14139  158D  00EA               	movwf	(updateTemperatures@vtsx+1)^(0+128)
 14140  158E  0828               	movf	?___fltol^(0+128),w
 14141  158F  00E9               	movwf	updateTemperatures@vtsx^(0+128)
 14142                           
 14143                           ;BQ76920.c: 261:      rts = 10000.0 * vtsx / (3300.0 - vtsx);
 14144  1590  0869               	movf	updateTemperatures@vtsx^(0+128),w
 14145  1591  00F1               	movwf	___xxtofl@val
 14146  1592  086A               	movf	(updateTemperatures@vtsx+1)^(0+128),w
 14147  1593  00F2               	movwf	___xxtofl@val+1
 14148  1594  0D89               	rlf	9,f
 14149  1595  3B89               	subwfb	9,f
 14150  1596  0989               	comf	9,f
 14151  1597  00F3               	movwf	___xxtofl@val+2
 14152  1598  00F4               	movwf	___xxtofl@val+3
 14153  1599  3001               	movlw	1
 14154  159A  31AB  23E3  3195   	fcall	___xxtofl
 14155  159D  0874               	movf	?___xxtofl+3,w
 14156  159E  0020               	movlb	0	; select bank0
 14157  159F  00AD               	movwf	___flmul@a+3
 14158  15A0  0873               	movf	?___xxtofl+2,w
 14159  15A1  00AC               	movwf	___flmul@a+2
 14160  15A2  0872               	movf	?___xxtofl+1,w
 14161  15A3  00AB               	movwf	___flmul@a+1
 14162  15A4  0871               	movf	?___xxtofl,w
 14163  15A5  00AA               	movwf	___flmul@a
 14164  15A6  3046               	movlw	70
 14165  15A7  00A9               	movwf	___flmul@b+3
 14166  15A8  301C               	movlw	28
 14167  15A9  00A8               	movwf	___flmul@b+2
 14168  15AA  3040               	movlw	64
 14169  15AB  00A7               	movwf	___flmul@b+1
 14170  15AC  3000               	movlw	0
 14171  15AD  00A6               	movwf	___flmul@b
 14172  15AE  3190  2023  3195   	fcall	___flmul
 14173  15B1  0020               	movlb	0	; select bank0
 14174  15B2  0829               	movf	?___flmul+3,w
 14175  15B3  00C7               	movwf	___fldiv@b+3
 14176  15B4  0828               	movf	?___flmul+2,w
 14177  15B5  00C6               	movwf	___fldiv@b+2
 14178  15B6  0827               	movf	?___flmul+1,w
 14179  15B7  00C5               	movwf	___fldiv@b+1
 14180  15B8  0826               	movf	?___flmul,w
 14181  15B9  00C4               	movwf	___fldiv@b
 14182  15BA  3045               	movlw	69
 14183  15BB  0021               	movlb	1	; select bank1
 14184  15BC  00A7               	movwf	(___flsub@b+3)^(0+128)
 14185  15BD  304E               	movlw	78
 14186  15BE  00A6               	movwf	(___flsub@b+2)^(0+128)
 14187  15BF  3040               	movlw	64
 14188  15C0  00A5               	movwf	(___flsub@b+1)^(0+128)
 14189  15C1  3000               	movlw	0
 14190  15C2  00A4               	movwf	___flsub@b^(0+128)
 14191  15C3  0869               	movf	updateTemperatures@vtsx^(0+128),w
 14192  15C4  00F1               	movwf	___xxtofl@val
 14193  15C5  086A               	movf	(updateTemperatures@vtsx+1)^(0+128),w
 14194  15C6  00F2               	movwf	___xxtofl@val+1
 14195  15C7  0D89               	rlf	9,f
 14196  15C8  3B89               	subwfb	9,f
 14197  15C9  0989               	comf	9,f
 14198  15CA  00F3               	movwf	___xxtofl@val+2
 14199  15CB  00F4               	movwf	___xxtofl@val+3
 14200  15CC  3001               	movlw	1
 14201  15CD  31AB  23E3  3195   	fcall	___xxtofl
 14202  15D0  0874               	movf	?___xxtofl+3,w
 14203  15D1  0021               	movlb	1	; select bank1
 14204  15D2  00A3               	movwf	(___flsub@a+3)^(0+128)
 14205  15D3  0873               	movf	?___xxtofl+2,w
 14206  15D4  00A2               	movwf	(___flsub@a+2)^(0+128)
 14207  15D5  0872               	movf	?___xxtofl+1,w
 14208  15D6  00A1               	movwf	(___flsub@a+1)^(0+128)
 14209  15D7  0871               	movf	?___xxtofl,w
 14210  15D8  00A0               	movwf	___flsub@a^(0+128)
 14211  15D9  31B6  2692  3195   	fcall	___flsub
 14212  15DC  0021               	movlb	1	; select bank1
 14213  15DD  0823               	movf	(?___flsub+3)^(0+128),w
 14214  15DE  0020               	movlb	0	; select bank0
 14215  15DF  00C3               	movwf	___fldiv@a+3
 14216  15E0  0021               	movlb	1	; select bank1
 14217  15E1  0822               	movf	(?___flsub+2)^(0+128),w
 14218  15E2  0020               	movlb	0	; select bank0
 14219  15E3  00C2               	movwf	___fldiv@a+2
 14220  15E4  0021               	movlb	1	; select bank1
 14221  15E5  0821               	movf	(?___flsub+1)^(0+128),w
 14222  15E6  0020               	movlb	0	; select bank0
 14223  15E7  00C1               	movwf	___fldiv@a+1
 14224  15E8  0021               	movlb	1	; select bank1
 14225  15E9  0820               	movf	?___flsub^(0+128),w
 14226  15EA  0020               	movlb	0	; select bank0
 14227  15EB  00C0               	movwf	___fldiv@a
 14228  15EC  319C  24E2  3195   	fcall	___fldiv
 14229  15EF  0020               	movlb	0	; select bank0
 14230  15F0  0843               	movf	?___fldiv+3,w
 14231  15F1  0021               	movlb	1	; select bank1
 14232  15F2  00AB               	movwf	(___fltol@f1+3)^(0+128)
 14233  15F3  0020               	movlb	0	; select bank0
 14234  15F4  0842               	movf	?___fldiv+2,w
 14235  15F5  0021               	movlb	1	; select bank1
 14236  15F6  00AA               	movwf	(___fltol@f1+2)^(0+128)
 14237  15F7  0020               	movlb	0	; select bank0
 14238  15F8  0841               	movf	?___fldiv+1,w
 14239  15F9  0021               	movlb	1	; select bank1
 14240  15FA  00A9               	movwf	(___fltol@f1+1)^(0+128)
 14241  15FB  0020               	movlb	0	; select bank0
 14242  15FC  0840               	movf	?___fldiv,w
 14243  15FD  0021               	movlb	1	; select bank1
 14244  15FE  00A8               	movwf	___fltol@f1^(0+128)
 14245  15FF  31A9  211D  3195   	fcall	___fltol
 14246  1602  0021               	movlb	1	; select bank1
 14247  1603  082B               	movf	(?___fltol+3)^(0+128),w
 14248  1604  00EE               	movwf	(updateTemperatures@rts+3)^(0+128)
 14249  1605  082A               	movf	(?___fltol+2)^(0+128),w
 14250  1606  00ED               	movwf	(updateTemperatures@rts+2)^(0+128)
 14251  1607  0829               	movf	(?___fltol+1)^(0+128),w
 14252  1608  00EC               	movwf	(updateTemperatures@rts+1)^(0+128)
 14253  1609  0828               	movf	?___fltol^(0+128),w
 14254  160A  00EB               	movwf	updateTemperatures@rts^(0+128)
 14255                           
 14256                           ;BQ76920.c: 268:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14257  160B  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14258  160C  00F4               	movwf	___xxtofl@val+3
 14259  160D  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14260  160E  00F3               	movwf	___xxtofl@val+2
 14261  160F  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14262  1610  00F2               	movwf	___xxtofl@val+1
 14263  1611  086B               	movf	updateTemperatures@rts^(0+128),w
 14264  1612  00F1               	movwf	___xxtofl@val
 14265  1613  3000               	movlw	0
 14266  1614  31AB  23E3  3195   	fcall	___xxtofl
 14267  1617  0874               	movf	?___xxtofl+3,w
 14268  1618  0021               	movlb	1	; select bank1
 14269  1619  00BA               	movwf	(_updateTemperatures$2030+3)^(0+128)
 14270  161A  0873               	movf	?___xxtofl+2,w
 14271  161B  00B9               	movwf	(_updateTemperatures$2030+2)^(0+128)
 14272  161C  0872               	movf	?___xxtofl+1,w
 14273  161D  00B8               	movwf	(_updateTemperatures$2030+1)^(0+128)
 14274  161E  0871               	movf	?___xxtofl,w
 14275  161F  00B7               	movwf	_updateTemperatures$2030^(0+128)
 14276                           
 14277                           ;BQ76920.c: 268:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14278  1620  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14279  1621  00F4               	movwf	___xxtofl@val+3
 14280  1622  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14281  1623  00F3               	movwf	___xxtofl@val+2
 14282  1624  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14283  1625  00F2               	movwf	___xxtofl@val+1
 14284  1626  086B               	movf	updateTemperatures@rts^(0+128),w
 14285  1627  00F1               	movwf	___xxtofl@val
 14286  1628  3000               	movlw	0
 14287  1629  31AB  23E3  3195   	fcall	___xxtofl
 14288  162C  0874               	movf	?___xxtofl+3,w
 14289  162D  0021               	movlb	1	; select bank1
 14290  162E  00BE               	movwf	(_updateTemperatures$2031+3)^(0+128)
 14291  162F  0873               	movf	?___xxtofl+2,w
 14292  1630  00BD               	movwf	(_updateTemperatures$2031+2)^(0+128)
 14293  1631  0872               	movf	?___xxtofl+1,w
 14294  1632  00BC               	movwf	(_updateTemperatures$2031+1)^(0+128)
 14295  1633  0871               	movf	?___xxtofl,w
 14296  1634  00BB               	movwf	_updateTemperatures$2031^(0+128)
 14297                           
 14298                           ;BQ76920.c: 268:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14299  1635  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14300  1636  00F4               	movwf	___xxtofl@val+3
 14301  1637  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14302  1638  00F3               	movwf	___xxtofl@val+2
 14303  1639  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14304  163A  00F2               	movwf	___xxtofl@val+1
 14305  163B  086B               	movf	updateTemperatures@rts^(0+128),w
 14306  163C  00F1               	movwf	___xxtofl@val
 14307  163D  3000               	movlw	0
 14308  163E  31AB  23E3  3195   	fcall	___xxtofl
 14309  1641  0874               	movf	?___xxtofl+3,w
 14310  1642  0021               	movlb	1	; select bank1
 14311  1643  00C2               	movwf	(_updateTemperatures$2032+3)^(0+128)
 14312  1644  0873               	movf	?___xxtofl+2,w
 14313  1645  00C1               	movwf	(_updateTemperatures$2032+2)^(0+128)
 14314  1646  0872               	movf	?___xxtofl+1,w
 14315  1647  00C0               	movwf	(_updateTemperatures$2032+1)^(0+128)
 14316  1648  0871               	movf	?___xxtofl,w
 14317  1649  00BF               	movwf	_updateTemperatures$2032^(0+128)
 14318                           
 14319                           ;BQ76920.c: 268:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14320  164A  083E               	movf	(_updateTemperatures$2031+3)^(0+128),w
 14321  164B  00AB               	movwf	(logf@x+3)^(0+128)
 14322  164C  083D               	movf	(_updateTemperatures$2031+2)^(0+128),w
 14323  164D  00AA               	movwf	(logf@x+2)^(0+128)
 14324  164E  083C               	movf	(_updateTemperatures$2031+1)^(0+128),w
 14325  164F  00A9               	movwf	(logf@x+1)^(0+128)
 14326  1650  083B               	movf	_updateTemperatures$2031^(0+128),w
 14327  1651  00A8               	movwf	logf@x^(0+128)
 14328  1652  3180  206B  3195   	fcall	_logf
 14329  1655  0021               	movlb	1	; select bank1
 14330  1656  082B               	movf	(?_logf+3)^(0+128),w
 14331  1657  00C6               	movwf	(_updateTemperatures$2033+3)^(0+128)
 14332  1658  082A               	movf	(?_logf+2)^(0+128),w
 14333  1659  00C5               	movwf	(_updateTemperatures$2033+2)^(0+128)
 14334  165A  0829               	movf	(?_logf+1)^(0+128),w
 14335  165B  00C4               	movwf	(_updateTemperatures$2033+1)^(0+128)
 14336  165C  0828               	movf	?_logf^(0+128),w
 14337  165D  00C3               	movwf	_updateTemperatures$2033^(0+128)
 14338                           
 14339                           ;BQ76920.c: 268:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14340  165E  0842               	movf	(_updateTemperatures$2032+3)^(0+128),w
 14341  165F  00AB               	movwf	(logf@x+3)^(0+128)
 14342  1660  0841               	movf	(_updateTemperatures$2032+2)^(0+128),w
 14343  1661  00AA               	movwf	(logf@x+2)^(0+128)
 14344  1662  0840               	movf	(_updateTemperatures$2032+1)^(0+128),w
 14345  1663  00A9               	movwf	(logf@x+1)^(0+128)
 14346  1664  083F               	movf	_updateTemperatures$2032^(0+128),w
 14347  1665  00A8               	movwf	logf@x^(0+128)
 14348  1666  3180  206B  3195   	fcall	_logf
 14349  1669  0021               	movlb	1	; select bank1
 14350  166A  082B               	movf	(?_logf+3)^(0+128),w
 14351  166B  00CA               	movwf	(_updateTemperatures$2034+3)^(0+128)
 14352  166C  082A               	movf	(?_logf+2)^(0+128),w
 14353  166D  00C9               	movwf	(_updateTemperatures$2034+2)^(0+128)
 14354  166E  0829               	movf	(?_logf+1)^(0+128),w
 14355  166F  00C8               	movwf	(_updateTemperatures$2034+1)^(0+128)
 14356  1670  0828               	movf	?_logf^(0+128),w
 14357  1671  00C7               	movwf	_updateTemperatures$2034^(0+128)
 14358                           
 14359                           ;BQ76920.c: 268:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14360  1672  083A               	movf	(_updateTemperatures$2030+3)^(0+128),w
 14361  1673  00AB               	movwf	(logf@x+3)^(0+128)
 14362  1674  0839               	movf	(_updateTemperatures$2030+2)^(0+128),w
 14363  1675  00AA               	movwf	(logf@x+2)^(0+128)
 14364  1676  0838               	movf	(_updateTemperatures$2030+1)^(0+128),w
 14365  1677  00A9               	movwf	(logf@x+1)^(0+128)
 14366  1678  0837               	movf	_updateTemperatures$2030^(0+128),w
 14367  1679  00A8               	movwf	logf@x^(0+128)
 14368  167A  3180  206B  3195   	fcall	_logf
 14369  167D  0021               	movlb	1	; select bank1
 14370  167E  082B               	movf	(?_logf+3)^(0+128),w
 14371  167F  00CE               	movwf	(_updateTemperatures$2035+3)^(0+128)
 14372  1680  082A               	movf	(?_logf+2)^(0+128),w
 14373  1681  00CD               	movwf	(_updateTemperatures$2035+2)^(0+128)
 14374  1682  0829               	movf	(?_logf+1)^(0+128),w
 14375  1683  00CC               	movwf	(_updateTemperatures$2035+1)^(0+128)
 14376  1684  0828               	movf	?_logf^(0+128),w
 14377  1685  00CB               	movwf	_updateTemperatures$2035^(0+128)
 14378                           
 14379                           ;BQ76920.c: 268:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14380  1686  0846               	movf	(_updateTemperatures$2033+3)^(0+128),w
 14381  1687  0020               	movlb	0	; select bank0
 14382  1688  00A9               	movwf	___flmul@b+3
 14383  1689  0021               	movlb	1	; select bank1
 14384  168A  0845               	movf	(_updateTemperatures$2033+2)^(0+128),w
 14385  168B  0020               	movlb	0	; select bank0
 14386  168C  00A8               	movwf	___flmul@b+2
 14387  168D  0021               	movlb	1	; select bank1
 14388  168E  0844               	movf	(_updateTemperatures$2033+1)^(0+128),w
 14389  168F  0020               	movlb	0	; select bank0
 14390  1690  00A7               	movwf	___flmul@b+1
 14391  1691  0021               	movlb	1	; select bank1
 14392  1692  0843               	movf	_updateTemperatures$2033^(0+128),w
 14393  1693  0020               	movlb	0	; select bank0
 14394  1694  00A6               	movwf	___flmul@b
 14395  1695  0021               	movlb	1	; select bank1
 14396  1696  084A               	movf	(_updateTemperatures$2034+3)^(0+128),w
 14397  1697  0020               	movlb	0	; select bank0
 14398  1698  00AD               	movwf	___flmul@a+3
 14399  1699  0021               	movlb	1	; select bank1
 14400  169A  0849               	movf	(_updateTemperatures$2034+2)^(0+128),w
 14401  169B  0020               	movlb	0	; select bank0
 14402  169C  00AC               	movwf	___flmul@a+2
 14403  169D  0021               	movlb	1	; select bank1
 14404  169E  0848               	movf	(_updateTemperatures$2034+1)^(0+128),w
 14405  169F  0020               	movlb	0	; select bank0
 14406  16A0  00AB               	movwf	___flmul@a+1
 14407  16A1  0021               	movlb	1	; select bank1
 14408  16A2  0847               	movf	_updateTemperatures$2034^(0+128),w
 14409  16A3  0020               	movlb	0	; select bank0
 14410  16A4  00AA               	movwf	___flmul@a
 14411  16A5  3190  2023  3195   	fcall	___flmul
 14412  16A8  0020               	movlb	0	; select bank0
 14413  16A9  0829               	movf	?___flmul+3,w
 14414  16AA  0021               	movlb	1	; select bank1
 14415  16AB  00D2               	movwf	(_updateTemperatures$2036+3)^(0+128)
 14416  16AC  0020               	movlb	0	; select bank0
 14417  16AD  0828               	movf	?___flmul+2,w
 14418  16AE  0021               	movlb	1	; select bank1
 14419  16AF  00D1               	movwf	(_updateTemperatures$2036+2)^(0+128)
 14420  16B0  0020               	movlb	0	; select bank0
 14421  16B1  0827               	movf	?___flmul+1,w
 14422  16B2  0021               	movlb	1	; select bank1
 14423  16B3  00D0               	movwf	(_updateTemperatures$2036+1)^(0+128)
 14424  16B4  0020               	movlb	0	; select bank0
 14425  16B5  0826               	movf	?___flmul,w
 14426  16B6  0021               	movlb	1	; select bank1
 14427  16B7  00CF               	movwf	_updateTemperatures$2036^(0+128)
 14428                           
 14429                           ;BQ76920.c: 268:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14430  16B8  084E               	movf	(_updateTemperatures$2035+3)^(0+128),w
 14431  16B9  0020               	movlb	0	; select bank0
 14432  16BA  00A9               	movwf	___flmul@b+3
 14433  16BB  0021               	movlb	1	; select bank1
 14434  16BC  084D               	movf	(_updateTemperatures$2035+2)^(0+128),w
 14435  16BD  0020               	movlb	0	; select bank0
 14436  16BE  00A8               	movwf	___flmul@b+2
 14437  16BF  0021               	movlb	1	; select bank1
 14438  16C0  084C               	movf	(_updateTemperatures$2035+1)^(0+128),w
 14439  16C1  0020               	movlb	0	; select bank0
 14440  16C2  00A7               	movwf	___flmul@b+1
 14441  16C3  0021               	movlb	1	; select bank1
 14442  16C4  084B               	movf	_updateTemperatures$2035^(0+128),w
 14443  16C5  0020               	movlb	0	; select bank0
 14444  16C6  00A6               	movwf	___flmul@b
 14445  16C7  0021               	movlb	1	; select bank1
 14446  16C8  0852               	movf	(_updateTemperatures$2036+3)^(0+128),w
 14447  16C9  0020               	movlb	0	; select bank0
 14448  16CA  00AD               	movwf	___flmul@a+3
 14449  16CB  0021               	movlb	1	; select bank1
 14450  16CC  0851               	movf	(_updateTemperatures$2036+2)^(0+128),w
 14451  16CD  0020               	movlb	0	; select bank0
 14452  16CE  00AC               	movwf	___flmul@a+2
 14453  16CF  0021               	movlb	1	; select bank1
 14454  16D0  0850               	movf	(_updateTemperatures$2036+1)^(0+128),w
 14455  16D1  0020               	movlb	0	; select bank0
 14456  16D2  00AB               	movwf	___flmul@a+1
 14457  16D3  0021               	movlb	1	; select bank1
 14458  16D4  084F               	movf	_updateTemperatures$2036^(0+128),w
 14459  16D5  0020               	movlb	0	; select bank0
 14460  16D6  00AA               	movwf	___flmul@a
 14461  16D7  3190  2023  3195   	fcall	___flmul
 14462  16DA  0020               	movlb	0	; select bank0
 14463  16DB  0829               	movf	?___flmul+3,w
 14464  16DC  0021               	movlb	1	; select bank1
 14465  16DD  00D6               	movwf	(_updateTemperatures$2037+3)^(0+128)
 14466  16DE  0020               	movlb	0	; select bank0
 14467  16DF  0828               	movf	?___flmul+2,w
 14468  16E0  0021               	movlb	1	; select bank1
 14469  16E1  00D5               	movwf	(_updateTemperatures$2037+2)^(0+128)
 14470  16E2  0020               	movlb	0	; select bank0
 14471  16E3  0827               	movf	?___flmul+1,w
 14472  16E4  0021               	movlb	1	; select bank1
 14473  16E5  00D4               	movwf	(_updateTemperatures$2037+1)^(0+128)
 14474  16E6  0020               	movlb	0	; select bank0
 14475  16E7  0826               	movf	?___flmul,w
 14476  16E8  0021               	movlb	1	; select bank1
 14477  16E9  00D3               	movwf	_updateTemperatures$2037^(0+128)
 14478                           
 14479                           ;BQ76920.c: 268:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14480  16EA  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14481  16EB  00F4               	movwf	___xxtofl@val+3
 14482  16EC  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14483  16ED  00F3               	movwf	___xxtofl@val+2
 14484  16EE  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14485  16EF  00F2               	movwf	___xxtofl@val+1
 14486  16F0  086B               	movf	updateTemperatures@rts^(0+128),w
 14487  16F1  00F1               	movwf	___xxtofl@val
 14488  16F2  3000               	movlw	0
 14489  16F3  31AB  23E3  3195   	fcall	___xxtofl
 14490  16F6  0874               	movf	?___xxtofl+3,w
 14491  16F7  0021               	movlb	1	; select bank1
 14492  16F8  00DA               	movwf	(_updateTemperatures$2038+3)^(0+128)
 14493  16F9  0873               	movf	?___xxtofl+2,w
 14494  16FA  00D9               	movwf	(_updateTemperatures$2038+2)^(0+128)
 14495  16FB  0872               	movf	?___xxtofl+1,w
 14496  16FC  00D8               	movwf	(_updateTemperatures$2038+1)^(0+128)
 14497  16FD  0871               	movf	?___xxtofl,w
 14498  16FE  00D7               	movwf	_updateTemperatures$2038^(0+128)
 14499                           
 14500                           ;BQ76920.c: 268:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14501  16FF  085A               	movf	(_updateTemperatures$2038+3)^(0+128),w
 14502  1700  00AB               	movwf	(logf@x+3)^(0+128)
 14503  1701  0859               	movf	(_updateTemperatures$2038+2)^(0+128),w
 14504  1702  00AA               	movwf	(logf@x+2)^(0+128)
 14505  1703  0858               	movf	(_updateTemperatures$2038+1)^(0+128),w
 14506  1704  00A9               	movwf	(logf@x+1)^(0+128)
 14507  1705  0857               	movf	_updateTemperatures$2038^(0+128),w
 14508  1706  00A8               	movwf	logf@x^(0+128)
 14509  1707  3180  206B  3195   	fcall	_logf
 14510  170A  0021               	movlb	1	; select bank1
 14511  170B  082B               	movf	(?_logf+3)^(0+128),w
 14512  170C  00DE               	movwf	(_updateTemperatures$2039+3)^(0+128)
 14513  170D  082A               	movf	(?_logf+2)^(0+128),w
 14514  170E  00DD               	movwf	(_updateTemperatures$2039+2)^(0+128)
 14515  170F  0829               	movf	(?_logf+1)^(0+128),w
 14516  1710  00DC               	movwf	(_updateTemperatures$2039+1)^(0+128)
 14517  1711  0828               	movf	?_logf^(0+128),w
 14518  1712  00DB               	movwf	_updateTemperatures$2039^(0+128)
 14519                           
 14520                           ;BQ76920.c: 268:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14521  1713  30BC               	movlw	188
 14522  1714  0020               	movlb	0	; select bank0
 14523  1715  00DD               	movwf	___fladd@b+3
 14524  1716  308E               	movlw	142
 14525  1717  00DC               	movwf	___fladd@b+2
 14526  1718  30C5               	movlw	197
 14527  1719  00DB               	movwf	___fladd@b+1
 14528  171A  3072               	movlw	114
 14529  171B  00DA               	movwf	___fladd@b
 14530  171C  303B               	movlw	59
 14531  171D  00A9               	movwf	___flmul@b+3
 14532  171E  304D               	movlw	77
 14533  171F  00A8               	movwf	___flmul@b+2
 14534  1720  3098               	movlw	152
 14535  1721  00A7               	movwf	___flmul@b+1
 14536  1722  3025               	movlw	37
 14537  1723  00A6               	movwf	___flmul@b
 14538  1724  0021               	movlb	1	; select bank1
 14539  1725  085E               	movf	(_updateTemperatures$2039+3)^(0+128),w
 14540  1726  0020               	movlb	0	; select bank0
 14541  1727  00AD               	movwf	___flmul@a+3
 14542  1728  0021               	movlb	1	; select bank1
 14543  1729  085D               	movf	(_updateTemperatures$2039+2)^(0+128),w
 14544  172A  0020               	movlb	0	; select bank0
 14545  172B  00AC               	movwf	___flmul@a+2
 14546  172C  0021               	movlb	1	; select bank1
 14547  172D  085C               	movf	(_updateTemperatures$2039+1)^(0+128),w
 14548  172E  0020               	movlb	0	; select bank0
 14549  172F  00AB               	movwf	___flmul@a+1
 14550  1730  0021               	movlb	1	; select bank1
 14551  1731  085B               	movf	_updateTemperatures$2039^(0+128),w
 14552  1732  0020               	movlb	0	; select bank0
 14553  1733  00AA               	movwf	___flmul@a
 14554  1734  3190  2023  3195   	fcall	___flmul
 14555  1737  0020               	movlb	0	; select bank0
 14556  1738  0829               	movf	?___flmul+3,w
 14557  1739  00E1               	movwf	___fladd@a+3
 14558  173A  0828               	movf	?___flmul+2,w
 14559  173B  00E0               	movwf	___fladd@a+2
 14560  173C  0827               	movf	?___flmul+1,w
 14561  173D  00DF               	movwf	___fladd@a+1
 14562  173E  0826               	movf	?___flmul,w
 14563  173F  00DE               	movwf	___fladd@a
 14564  1740  3185  25F5  3195   	fcall	___fladd
 14565  1743  0020               	movlb	0	; select bank0
 14566  1744  085D               	movf	?___fladd+3,w
 14567  1745  0021               	movlb	1	; select bank1
 14568  1746  00E2               	movwf	(_updateTemperatures$2040+3)^(0+128)
 14569  1747  0020               	movlb	0	; select bank0
 14570  1748  085C               	movf	?___fladd+2,w
 14571  1749  0021               	movlb	1	; select bank1
 14572  174A  00E1               	movwf	(_updateTemperatures$2040+2)^(0+128)
 14573  174B  0020               	movlb	0	; select bank0
 14574  174C  085B               	movf	?___fladd+1,w
 14575  174D  0021               	movlb	1	; select bank1
 14576  174E  00E0               	movwf	(_updateTemperatures$2040+1)^(0+128)
 14577  174F  0020               	movlb	0	; select bank0
 14578  1750  085A               	movf	?___fladd,w
 14579  1751  0021               	movlb	1	; select bank1
 14580  1752  00DF               	movwf	_updateTemperatures$2040^(0+128)
 14581                           
 14582                           ;BQ76920.c: 268:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14583  1753  30B7               	movlw	183
 14584  1754  0020               	movlb	0	; select bank0
 14585  1755  00A9               	movwf	___flmul@b+3
 14586  1756  302E               	movlw	46
 14587  1757  00A8               	movwf	___flmul@b+2
 14588  1758  302F               	movlw	47
 14589  1759  00A7               	movwf	___flmul@b+1
 14590  175A  3045               	movlw	69
 14591  175B  00A6               	movwf	___flmul@b
 14592  175C  0021               	movlb	1	; select bank1
 14593  175D  0856               	movf	(_updateTemperatures$2037+3)^(0+128),w
 14594  175E  0020               	movlb	0	; select bank0
 14595  175F  00AD               	movwf	___flmul@a+3
 14596  1760  0021               	movlb	1	; select bank1
 14597  1761  0855               	movf	(_updateTemperatures$2037+2)^(0+128),w
 14598  1762  0020               	movlb	0	; select bank0
 14599  1763  00AC               	movwf	___flmul@a+2
 14600  1764  0021               	movlb	1	; select bank1
 14601  1765  0854               	movf	(_updateTemperatures$2037+1)^(0+128),w
 14602  1766  0020               	movlb	0	; select bank0
 14603  1767  00AB               	movwf	___flmul@a+1
 14604  1768  0021               	movlb	1	; select bank1
 14605  1769  0853               	movf	_updateTemperatures$2037^(0+128),w
 14606  176A  0020               	movlb	0	; select bank0
 14607  176B  00AA               	movwf	___flmul@a
 14608  176C  3190  2023  3195   	fcall	___flmul
 14609  176F  0020               	movlb	0	; select bank0
 14610  1770  0829               	movf	?___flmul+3,w
 14611  1771  00DD               	movwf	___fladd@b+3
 14612  1772  0828               	movf	?___flmul+2,w
 14613  1773  00DC               	movwf	___fladd@b+2
 14614  1774  0827               	movf	?___flmul+1,w
 14615  1775  00DB               	movwf	___fladd@b+1
 14616  1776  0826               	movf	?___flmul,w
 14617  1777  00DA               	movwf	___fladd@b
 14618  1778  0021               	movlb	1	; select bank1
 14619  1779  0862               	movf	(_updateTemperatures$2040+3)^(0+128),w
 14620  177A  0020               	movlb	0	; select bank0
 14621  177B  00E1               	movwf	___fladd@a+3
 14622  177C  0021               	movlb	1	; select bank1
 14623  177D  0861               	movf	(_updateTemperatures$2040+2)^(0+128),w
 14624  177E  0020               	movlb	0	; select bank0
 14625  177F  00E0               	movwf	___fladd@a+2
 14626  1780  0021               	movlb	1	; select bank1
 14627  1781  0860               	movf	(_updateTemperatures$2040+1)^(0+128),w
 14628  1782  0020               	movlb	0	; select bank0
 14629  1783  00DF               	movwf	___fladd@a+1
 14630  1784  0021               	movlb	1	; select bank1
 14631  1785  085F               	movf	_updateTemperatures$2040^(0+128),w
 14632  1786  0020               	movlb	0	; select bank0
 14633  1787  00DE               	movwf	___fladd@a
 14634  1788  3185  25F5  3195   	fcall	___fladd
 14635  178B  0020               	movlb	0	; select bank0
 14636  178C  085D               	movf	?___fladd+3,w
 14637  178D  00C3               	movwf	___fldiv@a+3
 14638  178E  085C               	movf	?___fladd+2,w
 14639  178F  00C2               	movwf	___fldiv@a+2
 14640  1790  085B               	movf	?___fladd+1,w
 14641  1791  00C1               	movwf	___fldiv@a+1
 14642  1792  085A               	movf	?___fladd,w
 14643  1793  00C0               	movwf	___fldiv@a
 14644  1794  303F               	movlw	63
 14645  1795  00C7               	movwf	___fldiv@b+3
 14646  1796  3080               	movlw	128
 14647  1797  00C6               	movwf	___fldiv@b+2
 14648  1798  3000               	movlw	0
 14649  1799  00C5               	movwf	___fldiv@b+1
 14650  179A  3000               	movlw	0
 14651  179B  00C4               	movwf	___fldiv@b
 14652  179C  319C  24E2  3195   	fcall	___fldiv
 14653  179F  0020               	movlb	0	; select bank0
 14654  17A0  0843               	movf	?___fldiv+3,w
 14655  17A1  0021               	movlb	1	; select bank1
 14656  17A2  00E6               	movwf	(updateTemperatures@tmp+3)^(0+128)
 14657  17A3  0020               	movlb	0	; select bank0
 14658  17A4  0842               	movf	?___fldiv+2,w
 14659  17A5  0021               	movlb	1	; select bank1
 14660  17A6  00E5               	movwf	(updateTemperatures@tmp+2)^(0+128)
 14661  17A7  0020               	movlb	0	; select bank0
 14662  17A8  0841               	movf	?___fldiv+1,w
 14663  17A9  0021               	movlb	1	; select bank1
 14664  17AA  00E4               	movwf	(updateTemperatures@tmp+1)^(0+128)
 14665  17AB  0020               	movlb	0	; select bank0
 14666  17AC  0840               	movf	?___fldiv,w
 14667  17AD  0021               	movlb	1	; select bank1
 14668  17AE  00E3               	movwf	updateTemperatures@tmp^(0+128)
 14669                           
 14670                           ;BQ76920.c: 270:      temperatureThermistor = (tmp - 273.15)*100;
 14671  17AF  0866               	movf	(updateTemperatures@tmp+3)^(0+128),w
 14672  17B0  0020               	movlb	0	; select bank0
 14673  17B1  00E1               	movwf	___fladd@a+3
 14674  17B2  0021               	movlb	1	; select bank1
 14675  17B3  0865               	movf	(updateTemperatures@tmp+2)^(0+128),w
 14676  17B4  0020               	movlb	0	; select bank0
 14677  17B5  00E0               	movwf	___fladd@a+2
 14678  17B6  0021               	movlb	1	; select bank1
 14679  17B7  0864               	movf	(updateTemperatures@tmp+1)^(0+128),w
 14680  17B8  0020               	movlb	0	; select bank0
 14681  17B9  00DF               	movwf	___fladd@a+1
 14682  17BA  0021               	movlb	1	; select bank1
 14683  17BB  0863               	movf	updateTemperatures@tmp^(0+128),w
 14684  17BC  0020               	movlb	0	; select bank0
 14685  17BD  00DE               	movwf	___fladd@a
 14686  17BE  30C3               	movlw	195
 14687  17BF  00DD               	movwf	___fladd@b+3
 14688  17C0  3088               	movlw	136
 14689  17C1  00DC               	movwf	___fladd@b+2
 14690  17C2  3093               	movlw	147
 14691  17C3  00DB               	movwf	___fladd@b+1
 14692  17C4  3033               	movlw	51
 14693  17C5  00DA               	movwf	___fladd@b
 14694  17C6  3185  25F5  3195   	fcall	___fladd
 14695  17C9  0020               	movlb	0	; select bank0
 14696  17CA  085D               	movf	?___fladd+3,w
 14697  17CB  00AD               	movwf	___flmul@a+3
 14698  17CC  085C               	movf	?___fladd+2,w
 14699  17CD  00AC               	movwf	___flmul@a+2
 14700  17CE  085B               	movf	?___fladd+1,w
 14701  17CF  00AB               	movwf	___flmul@a+1
 14702  17D0  085A               	movf	?___fladd,w
 14703  17D1  00AA               	movwf	___flmul@a
 14704  17D2  3042               	movlw	66
 14705  17D3  00A9               	movwf	___flmul@b+3
 14706  17D4  30C8               	movlw	200
 14707  17D5  00A8               	movwf	___flmul@b+2
 14708  17D6  3000               	movlw	0
 14709  17D7  00A7               	movwf	___flmul@b+1
 14710  17D8  3000               	movlw	0
 14711  17D9  00A6               	movwf	___flmul@b
 14712  17DA  3190  2023  3195   	fcall	___flmul
 14713  17DD  0020               	movlb	0	; select bank0
 14714  17DE  0829               	movf	?___flmul+3,w
 14715  17DF  0021               	movlb	1	; select bank1
 14716  17E0  00AB               	movwf	(___fltol@f1+3)^(0+128)
 14717  17E1  0020               	movlb	0	; select bank0
 14718  17E2  0828               	movf	?___flmul+2,w
 14719  17E3  0021               	movlb	1	; select bank1
 14720  17E4  00AA               	movwf	(___fltol@f1+2)^(0+128)
 14721  17E5  0020               	movlb	0	; select bank0
 14722  17E6  0827               	movf	?___flmul+1,w
 14723  17E7  0021               	movlb	1	; select bank1
 14724  17E8  00A9               	movwf	(___fltol@f1+1)^(0+128)
 14725  17E9  0020               	movlb	0	; select bank0
 14726  17EA  0826               	movf	?___flmul,w
 14727  17EB  0021               	movlb	1	; select bank1
 14728  17EC  00A8               	movwf	___fltol@f1^(0+128)
 14729  17ED  31A9  211D         	fcall	___fltol
 14730  17EF  0021               	movlb	1	; select bank1
 14731  17F0  082B               	movf	(?___fltol+3)^(0+128),w
 14732  17F1  0023               	movlb	3	; select bank3
 14733  17F2  00B9               	movwf	(_temperatureThermistor+3)^(0+384)
 14734  17F3  0021               	movlb	1	; select bank1
 14735  17F4  082A               	movf	(?___fltol+2)^(0+128),w
 14736  17F5  0023               	movlb	3	; select bank3
 14737  17F6  00B8               	movwf	(_temperatureThermistor+2)^(0+384)
 14738  17F7  0021               	movlb	1	; select bank1
 14739  17F8  0829               	movf	(?___fltol+1)^(0+128),w
 14740  17F9  0023               	movlb	3	; select bank3
 14741  17FA  00B7               	movwf	(_temperatureThermistor+1)^(0+384)
 14742  17FB  0021               	movlb	1	; select bank1
 14743  17FC  0828               	movf	?___fltol^(0+128),w
 14744  17FD  0023               	movlb	3	; select bank3
 14745  17FE  00B6               	movwf	_temperatureThermistor^(0+384)
 14746  17FF  0008               	return
 14747  1800                     __end_of_updateTemperatures:	
 14748                           
 14749                           	psect	text50
 14750  006B                     __ptext50:	
 14751 ;; *************** function _logf *****************
 14752 ;; Defined at:
 14753 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\logf.c"
 14754 ;; Parameters:    Size  Location     Type
 14755 ;;  x               4    8[BANK1 ] float 
 14756 ;; Auto vars:     Size  Location     Type
 14757 ;;  ix              4   62[BANK2 ] unsigned long 
 14758 ;;  f               4   58[BANK2 ] float 
 14759 ;;  u               4   54[BANK2 ] struct .
 14760 ;;  w               4   46[BANK2 ] float 
 14761 ;;  z               4   42[BANK2 ] float 
 14762 ;;  s               4   38[BANK2 ] float 
 14763 ;;  dk              4   34[BANK2 ] float 
 14764 ;;  hfsq            4   30[BANK2 ] float 
 14765 ;;  t2              4    8[BANK2 ] float 
 14766 ;;  t1              4    4[BANK2 ] float 
 14767 ;;  R               4    0[BANK2 ] float 
 14768 ;;  k               2   28[BANK2 ] int 
 14769 ;; Return value:  Size  Location     Type
 14770 ;;                  4    8[BANK1 ] float 
 14771 ;; Registers used:
 14772 ;;		wreg, status,2, status,0, pclath, cstack
 14773 ;; Tracked objects:
 14774 ;;		On entry : 0/0
 14775 ;;		On exit  : 0/0
 14776 ;;		Unchanged: 0/0
 14777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14778 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14779 ;;      Locals:         0       0       0      66       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14780 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14781 ;;      Totals:         0       0      12      66       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14782 ;;Total ram usage:       78 bytes
 14783 ;; Hardware stack levels used:    1
 14784 ;; Hardware stack levels required when called:    3
 14785 ;; This function calls:
 14786 ;;		___fladd
 14787 ;;		___fldiv
 14788 ;;		___flmul
 14789 ;;		___flsub
 14790 ;;		___xxtofl
 14791 ;; This function is called by:
 14792 ;;		_updateTemperatures
 14793 ;; This function uses a non-reentrant model
 14794 ;;
 14795                           
 14796                           
 14797                           ;psect for function _logf
 14798  006B                     _logf:	
 14799                           
 14800                           ;incstack = 0
 14801                           ; Regs used in _logf: [wreg+status,2+status,0+pclath+cstack]
 14802  006B  0023               	movlb	3	; select bank3
 14803  006C  082D               	movf	(logf@F469+3)^(0+384),w
 14804  006D  0022               	movlb	2	; select bank2
 14805  006E  00D9               	movwf	(logf@u+3)^(0+256)
 14806  006F  0023               	movlb	3	; select bank3
 14807  0070  082C               	movf	(logf@F469+2)^(0+384),w
 14808  0071  0022               	movlb	2	; select bank2
 14809  0072  00D8               	movwf	(logf@u+2)^(0+256)
 14810  0073  0023               	movlb	3	; select bank3
 14811  0074  082B               	movf	(logf@F469+1)^(0+384),w
 14812  0075  0022               	movlb	2	; select bank2
 14813  0076  00D7               	movwf	(logf@u+1)^(0+256)
 14814  0077  0023               	movlb	3	; select bank3
 14815  0078  082A               	movf	logf@F469^(0+384),w
 14816  0079  0022               	movlb	2	; select bank2
 14817  007A  00D6               	movwf	logf@u^(0+256)
 14818  007B  0021               	movlb	1	; select bank1
 14819  007C  082B               	movf	(logf@x+3)^(0+128),w
 14820  007D  0022               	movlb	2	; select bank2
 14821  007E  00D9               	movwf	(logf@u+3)^(0+256)
 14822  007F  0021               	movlb	1	; select bank1
 14823  0080  082A               	movf	(logf@x+2)^(0+128),w
 14824  0081  0022               	movlb	2	; select bank2
 14825  0082  00D8               	movwf	(logf@u+2)^(0+256)
 14826  0083  0021               	movlb	1	; select bank1
 14827  0084  0829               	movf	(logf@x+1)^(0+128),w
 14828  0085  0022               	movlb	2	; select bank2
 14829  0086  00D7               	movwf	(logf@u+1)^(0+256)
 14830  0087  0021               	movlb	1	; select bank1
 14831  0088  0828               	movf	logf@x^(0+128),w
 14832  0089  0022               	movlb	2	; select bank2
 14833  008A  00D6               	movwf	logf@u^(0+256)
 14834  008B  0859               	movf	(logf@u+3)^(0+256),w
 14835  008C  00E1               	movwf	(logf@ix+3)^(0+256)
 14836  008D  0858               	movf	(logf@u+2)^(0+256),w
 14837  008E  00E0               	movwf	(logf@ix+2)^(0+256)
 14838  008F  0857               	movf	(logf@u+1)^(0+256),w
 14839  0090  00DF               	movwf	(logf@ix+1)^(0+256)
 14840  0091  0856               	movf	logf@u^(0+256),w
 14841  0092  00DE               	movwf	logf@ix^(0+256)
 14842  0093  01BC               	clrf	logf@k^(0+256)
 14843  0094  01BD               	clrf	(logf@k+1)^(0+256)
 14844  0095  0861               	movf	(logf@ix+3)^(0+256),w
 14845  0096  1D03               	btfss	3,2
 14846  0097  289C               	goto	l7782
 14847  0098  3080               	movlw	128
 14848  0099  0260               	subwf	(logf@ix+2)^(0+256),w
 14849  009A  1C03               	btfss	3,0
 14850  009B  28B8               	goto	l7784
 14851  009C                     l7782:	
 14852  009C  085E               	movf	logf@ix^(0+256),w
 14853  009D  0021               	movlb	1	; select bank1
 14854  009E  00AC               	movwf	??_logf^(0+128)
 14855  009F  0022               	movlb	2	; select bank2
 14856  00A0  085F               	movf	(logf@ix+1)^(0+256),w
 14857  00A1  0021               	movlb	1	; select bank1
 14858  00A2  00AD               	movwf	(??_logf^(0+128)+1)
 14859  00A3  0022               	movlb	2	; select bank2
 14860  00A4  0860               	movf	(logf@ix+2)^(0+256),w
 14861  00A5  0021               	movlb	1	; select bank1
 14862  00A6  00AE               	movwf	(??_logf^(0+128)+2)
 14863  00A7  0022               	movlb	2	; select bank2
 14864  00A8  0861               	movf	(logf@ix+3)^(0+256),w
 14865  00A9  0021               	movlb	1	; select bank1
 14866  00AA  00AF               	movwf	(??_logf^(0+128)+3)
 14867  00AB  301F               	movlw	31
 14868  00AC                     u10695:	
 14869  00AC  36AF               	lsrf	(??_logf^(0+128)+3),f
 14870  00AD  0CAE               	rrf	(??_logf^(0+128)+2),f
 14871  00AE  0CAD               	rrf	(??_logf^(0+128)+1),f
 14872  00AF  0CAC               	rrf	??_logf^(0+128),f
 14873  00B0  0B89               	decfsz	9,f
 14874  00B1  28AC               	goto	u10695
 14875  00B2  082F               	movf	(??_logf+3)^(0+128),w
 14876  00B3  042E               	iorwf	(??_logf+2)^(0+128),w
 14877  00B4  042D               	iorwf	(??_logf+1)^(0+128),w
 14878  00B5  042C               	iorwf	??_logf^(0+128),w
 14879  00B6  1903               	skipnz
 14880  00B7  29C1               	goto	l7804
 14881  00B8                     l7784:	
 14882  00B8  0022               	movlb	2	; select bank2
 14883  00B9  085E               	movf	logf@ix^(0+256),w
 14884  00BA  0021               	movlb	1	; select bank1
 14885  00BB  00AC               	movwf	??_logf^(0+128)
 14886  00BC  0022               	movlb	2	; select bank2
 14887  00BD  085F               	movf	(logf@ix+1)^(0+256),w
 14888  00BE  0021               	movlb	1	; select bank1
 14889  00BF  00AD               	movwf	(??_logf^(0+128)+1)
 14890  00C0  0022               	movlb	2	; select bank2
 14891  00C1  0860               	movf	(logf@ix+2)^(0+256),w
 14892  00C2  0021               	movlb	1	; select bank1
 14893  00C3  00AE               	movwf	(??_logf^(0+128)+2)
 14894  00C4  0022               	movlb	2	; select bank2
 14895  00C5  0861               	movf	(logf@ix+3)^(0+256),w
 14896  00C6  0021               	movlb	1	; select bank1
 14897  00C7  00AF               	movwf	(??_logf^(0+128)+3)
 14898  00C8  3001               	movlw	1
 14899  00C9                     u10715:	
 14900  00C9  35AC               	lslf	??_logf^(0+128),f
 14901  00CA  0DAD               	rlf	(??_logf^(0+128)+1),f
 14902  00CB  0DAE               	rlf	(??_logf^(0+128)+2),f
 14903  00CC  0DAF               	rlf	(??_logf^(0+128)+3),f
 14904  00CD  0B89               	decfsz	9,f
 14905  00CE  28C9               	goto	u10715
 14906  00CF  082F               	movf	(??_logf+3)^(0+128),w
 14907  00D0  042E               	iorwf	(??_logf+2)^(0+128),w
 14908  00D1  042D               	iorwf	(??_logf+1)^(0+128),w
 14909  00D2  042C               	iorwf	??_logf^(0+128),w
 14910  00D3  1D03               	skipz
 14911  00D4  291B               	goto	l7790
 14912  00D5  082B               	movf	(logf@x+3)^(0+128),w
 14913  00D6  0020               	movlb	0	; select bank0
 14914  00D7  00A9               	movwf	___flmul@b+3
 14915  00D8  0021               	movlb	1	; select bank1
 14916  00D9  082A               	movf	(logf@x+2)^(0+128),w
 14917  00DA  0020               	movlb	0	; select bank0
 14918  00DB  00A8               	movwf	___flmul@b+2
 14919  00DC  0021               	movlb	1	; select bank1
 14920  00DD  0829               	movf	(logf@x+1)^(0+128),w
 14921  00DE  0020               	movlb	0	; select bank0
 14922  00DF  00A7               	movwf	___flmul@b+1
 14923  00E0  0021               	movlb	1	; select bank1
 14924  00E1  0828               	movf	logf@x^(0+128),w
 14925  00E2  0020               	movlb	0	; select bank0
 14926  00E3  00A6               	movwf	___flmul@b
 14927  00E4  0021               	movlb	1	; select bank1
 14928  00E5  082B               	movf	(logf@x+3)^(0+128),w
 14929  00E6  0020               	movlb	0	; select bank0
 14930  00E7  00AD               	movwf	___flmul@a+3
 14931  00E8  0021               	movlb	1	; select bank1
 14932  00E9  082A               	movf	(logf@x+2)^(0+128),w
 14933  00EA  0020               	movlb	0	; select bank0
 14934  00EB  00AC               	movwf	___flmul@a+2
 14935  00EC  0021               	movlb	1	; select bank1
 14936  00ED  0829               	movf	(logf@x+1)^(0+128),w
 14937  00EE  0020               	movlb	0	; select bank0
 14938  00EF  00AB               	movwf	___flmul@a+1
 14939  00F0  0021               	movlb	1	; select bank1
 14940  00F1  0828               	movf	logf@x^(0+128),w
 14941  00F2  0020               	movlb	0	; select bank0
 14942  00F3  00AA               	movwf	___flmul@a
 14943  00F4  3190  2023  3180   	fcall	___flmul
 14944  00F7  0020               	movlb	0	; select bank0
 14945  00F8  0829               	movf	?___flmul+3,w
 14946  00F9  00C3               	movwf	___fldiv@a+3
 14947  00FA  0828               	movf	?___flmul+2,w
 14948  00FB  00C2               	movwf	___fldiv@a+2
 14949  00FC  0827               	movf	?___flmul+1,w
 14950  00FD  00C1               	movwf	___fldiv@a+1
 14951  00FE  0826               	movf	?___flmul,w
 14952  00FF  00C0               	movwf	___fldiv@a
 14953  0100  30BF               	movlw	191
 14954  0101  00C7               	movwf	___fldiv@b+3
 14955  0102  3080               	movlw	128
 14956  0103  00C6               	movwf	___fldiv@b+2
 14957  0104  3000               	movlw	0
 14958  0105  00C5               	movwf	___fldiv@b+1
 14959  0106  3000               	movlw	0
 14960  0107  00C4               	movwf	___fldiv@b
 14961  0108  319C  24E2         	fcall	___fldiv
 14962  010A  0020               	movlb	0	; select bank0
 14963  010B  0843               	movf	?___fldiv+3,w
 14964  010C  0021               	movlb	1	; select bank1
 14965  010D  00AB               	movwf	(?_logf+3)^(0+128)
 14966  010E  0020               	movlb	0	; select bank0
 14967  010F  0842               	movf	?___fldiv+2,w
 14968  0110  0021               	movlb	1	; select bank1
 14969  0111  00AA               	movwf	(?_logf+2)^(0+128)
 14970  0112  0020               	movlb	0	; select bank0
 14971  0113  0841               	movf	?___fldiv+1,w
 14972  0114  0021               	movlb	1	; select bank1
 14973  0115  00A9               	movwf	(?_logf+1)^(0+128)
 14974  0116  0020               	movlb	0	; select bank0
 14975  0117  0840               	movf	?___fldiv,w
 14976  0118  0021               	movlb	1	; select bank1
 14977  0119  00A8               	movwf	?_logf^(0+128)
 14978  011A  0008               	return
 14979  011B                     l7790:	
 14980  011B  0022               	movlb	2	; select bank2
 14981  011C  085E               	movf	logf@ix^(0+256),w
 14982  011D  0021               	movlb	1	; select bank1
 14983  011E  00AC               	movwf	??_logf^(0+128)
 14984  011F  0022               	movlb	2	; select bank2
 14985  0120  085F               	movf	(logf@ix+1)^(0+256),w
 14986  0121  0021               	movlb	1	; select bank1
 14987  0122  00AD               	movwf	(??_logf^(0+128)+1)
 14988  0123  0022               	movlb	2	; select bank2
 14989  0124  0860               	movf	(logf@ix+2)^(0+256),w
 14990  0125  0021               	movlb	1	; select bank1
 14991  0126  00AE               	movwf	(??_logf^(0+128)+2)
 14992  0127  0022               	movlb	2	; select bank2
 14993  0128  0861               	movf	(logf@ix+3)^(0+256),w
 14994  0129  0021               	movlb	1	; select bank1
 14995  012A  00AF               	movwf	(??_logf^(0+128)+3)
 14996  012B  301F               	movlw	31
 14997  012C                     u10735:	
 14998  012C  36AF               	lsrf	(??_logf^(0+128)+3),f
 14999  012D  0CAE               	rrf	(??_logf^(0+128)+2),f
 15000  012E  0CAD               	rrf	(??_logf^(0+128)+1),f
 15001  012F  0CAC               	rrf	??_logf^(0+128),f
 15002  0130  0B89               	decfsz	9,f
 15003  0131  292C               	goto	u10735
 15004  0132  082F               	movf	(??_logf+3)^(0+128),w
 15005  0133  042E               	iorwf	(??_logf+2)^(0+128),w
 15006  0134  042D               	iorwf	(??_logf+1)^(0+128),w
 15007  0135  042C               	iorwf	??_logf^(0+128),w
 15008  0136  1903               	skipnz
 15009  0137  2978               	goto	l7796
 15010  0138  3000               	movlw	0
 15011  0139  0020               	movlb	0	; select bank0
 15012  013A  00C3               	movwf	___fldiv@a+3
 15013  013B  3000               	movlw	0
 15014  013C  00C2               	movwf	___fldiv@a+2
 15015  013D  3000               	movlw	0
 15016  013E  00C1               	movwf	___fldiv@a+1
 15017  013F  3000               	movlw	0
 15018  0140  00C0               	movwf	___fldiv@a
 15019  0141  0021               	movlb	1	; select bank1
 15020  0142  082B               	movf	(logf@x+3)^(0+128),w
 15021  0143  00A3               	movwf	(___flsub@a+3)^(0+128)
 15022  0144  082A               	movf	(logf@x+2)^(0+128),w
 15023  0145  00A2               	movwf	(___flsub@a+2)^(0+128)
 15024  0146  0829               	movf	(logf@x+1)^(0+128),w
 15025  0147  00A1               	movwf	(___flsub@a+1)^(0+128)
 15026  0148  0828               	movf	logf@x^(0+128),w
 15027  0149  00A0               	movwf	___flsub@a^(0+128)
 15028  014A  082B               	movf	(logf@x+3)^(0+128),w
 15029  014B  00A7               	movwf	(___flsub@b+3)^(0+128)
 15030  014C  082A               	movf	(logf@x+2)^(0+128),w
 15031  014D  00A6               	movwf	(___flsub@b+2)^(0+128)
 15032  014E  0829               	movf	(logf@x+1)^(0+128),w
 15033  014F  00A5               	movwf	(___flsub@b+1)^(0+128)
 15034  0150  0828               	movf	logf@x^(0+128),w
 15035  0151  00A4               	movwf	___flsub@b^(0+128)
 15036  0152  31B6  2692  3180   	fcall	___flsub
 15037  0155  0021               	movlb	1	; select bank1
 15038  0156  0823               	movf	(?___flsub+3)^(0+128),w
 15039  0157  0020               	movlb	0	; select bank0
 15040  0158  00C7               	movwf	___fldiv@b+3
 15041  0159  0021               	movlb	1	; select bank1
 15042  015A  0822               	movf	(?___flsub+2)^(0+128),w
 15043  015B  0020               	movlb	0	; select bank0
 15044  015C  00C6               	movwf	___fldiv@b+2
 15045  015D  0021               	movlb	1	; select bank1
 15046  015E  0821               	movf	(?___flsub+1)^(0+128),w
 15047  015F  0020               	movlb	0	; select bank0
 15048  0160  00C5               	movwf	___fldiv@b+1
 15049  0161  0021               	movlb	1	; select bank1
 15050  0162  0820               	movf	?___flsub^(0+128),w
 15051  0163  0020               	movlb	0	; select bank0
 15052  0164  00C4               	movwf	___fldiv@b
 15053  0165  319C  24E2         	fcall	___fldiv
 15054  0167  0020               	movlb	0	; select bank0
 15055  0168  0843               	movf	?___fldiv+3,w
 15056  0169  0021               	movlb	1	; select bank1
 15057  016A  00AB               	movwf	(?_logf+3)^(0+128)
 15058  016B  0020               	movlb	0	; select bank0
 15059  016C  0842               	movf	?___fldiv+2,w
 15060  016D  0021               	movlb	1	; select bank1
 15061  016E  00AA               	movwf	(?_logf+2)^(0+128)
 15062  016F  0020               	movlb	0	; select bank0
 15063  0170  0841               	movf	?___fldiv+1,w
 15064  0171  0021               	movlb	1	; select bank1
 15065  0172  00A9               	movwf	(?_logf+1)^(0+128)
 15066  0173  0020               	movlb	0	; select bank0
 15067  0174  0840               	movf	?___fldiv,w
 15068  0175  0021               	movlb	1	; select bank1
 15069  0176  00A8               	movwf	?_logf^(0+128)
 15070  0177  0008               	return
 15071  0178                     l7796:	
 15072  0178  30E7               	movlw	231
 15073  0179  0022               	movlb	2	; select bank2
 15074  017A  07BC               	addwf	logf@k^(0+256),f
 15075  017B  30FF               	movlw	255
 15076  017C  3DBD               	addwfc	(logf@k+1)^(0+256),f
 15077  017D  304C               	movlw	76
 15078  017E  0020               	movlb	0	; select bank0
 15079  017F  00A9               	movwf	___flmul@b+3
 15080  0180  3000               	movlw	0
 15081  0181  00A8               	movwf	___flmul@b+2
 15082  0182  3000               	movlw	0
 15083  0183  00A7               	movwf	___flmul@b+1
 15084  0184  3000               	movlw	0
 15085  0185  00A6               	movwf	___flmul@b
 15086  0186  0021               	movlb	1	; select bank1
 15087  0187  082B               	movf	(logf@x+3)^(0+128),w
 15088  0188  0020               	movlb	0	; select bank0
 15089  0189  00AD               	movwf	___flmul@a+3
 15090  018A  0021               	movlb	1	; select bank1
 15091  018B  082A               	movf	(logf@x+2)^(0+128),w
 15092  018C  0020               	movlb	0	; select bank0
 15093  018D  00AC               	movwf	___flmul@a+2
 15094  018E  0021               	movlb	1	; select bank1
 15095  018F  0829               	movf	(logf@x+1)^(0+128),w
 15096  0190  0020               	movlb	0	; select bank0
 15097  0191  00AB               	movwf	___flmul@a+1
 15098  0192  0021               	movlb	1	; select bank1
 15099  0193  0828               	movf	logf@x^(0+128),w
 15100  0194  0020               	movlb	0	; select bank0
 15101  0195  00AA               	movwf	___flmul@a
 15102  0196  3190  2023  3180   	fcall	___flmul
 15103  0199  0020               	movlb	0	; select bank0
 15104  019A  0829               	movf	?___flmul+3,w
 15105  019B  0021               	movlb	1	; select bank1
 15106  019C  00AB               	movwf	(logf@x+3)^(0+128)
 15107  019D  0020               	movlb	0	; select bank0
 15108  019E  0828               	movf	?___flmul+2,w
 15109  019F  0021               	movlb	1	; select bank1
 15110  01A0  00AA               	movwf	(logf@x+2)^(0+128)
 15111  01A1  0020               	movlb	0	; select bank0
 15112  01A2  0827               	movf	?___flmul+1,w
 15113  01A3  0021               	movlb	1	; select bank1
 15114  01A4  00A9               	movwf	(logf@x+1)^(0+128)
 15115  01A5  0020               	movlb	0	; select bank0
 15116  01A6  0826               	movf	?___flmul,w
 15117  01A7  0021               	movlb	1	; select bank1
 15118  01A8  00A8               	movwf	logf@x^(0+128)
 15119  01A9  082B               	movf	(logf@x+3)^(0+128),w
 15120  01AA  0022               	movlb	2	; select bank2
 15121  01AB  00D9               	movwf	(logf@u+3)^(0+256)
 15122  01AC  0021               	movlb	1	; select bank1
 15123  01AD  082A               	movf	(logf@x+2)^(0+128),w
 15124  01AE  0022               	movlb	2	; select bank2
 15125  01AF  00D8               	movwf	(logf@u+2)^(0+256)
 15126  01B0  0021               	movlb	1	; select bank1
 15127  01B1  0829               	movf	(logf@x+1)^(0+128),w
 15128  01B2  0022               	movlb	2	; select bank2
 15129  01B3  00D7               	movwf	(logf@u+1)^(0+256)
 15130  01B4  0021               	movlb	1	; select bank1
 15131  01B5  0828               	movf	logf@x^(0+128),w
 15132  01B6  0022               	movlb	2	; select bank2
 15133  01B7  00D6               	movwf	logf@u^(0+256)
 15134  01B8  0859               	movf	(logf@u+3)^(0+256),w
 15135  01B9  00E1               	movwf	(logf@ix+3)^(0+256)
 15136  01BA  0858               	movf	(logf@u+2)^(0+256),w
 15137  01BB  00E0               	movwf	(logf@ix+2)^(0+256)
 15138  01BC  0857               	movf	(logf@u+1)^(0+256),w
 15139  01BD  00DF               	movwf	(logf@ix+1)^(0+256)
 15140  01BE  0856               	movf	logf@u^(0+256),w
 15141  01BF  00DE               	movwf	logf@ix^(0+256)
 15142  01C0  29DB               	goto	l7816
 15143  01C1                     l7804:	
 15144  01C1  3080               	movlw	128
 15145  01C2  0022               	movlb	2	; select bank2
 15146  01C3  0260               	subwf	(logf@ix+2)^(0+256),w
 15147  01C4  307F               	movlw	127
 15148  01C5  3B61               	subwfb	(logf@ix+3)^(0+256),w
 15149  01C6  1803               	btfsc	3,0
 15150  01C7  0008               	return
 15151  01C8  3080               	movlw	128
 15152  01C9  0660               	xorwf	(logf@ix+2)^(0+256),w
 15153  01CA  303F               	movlw	63
 15154  01CB  1903               	skipnz
 15155  01CC  0661               	xorwf	(logf@ix+3)^(0+256),w
 15156  01CD  045E               	iorwf	logf@ix^(0+256),w
 15157  01CE  045F               	iorwf	(logf@ix+1)^(0+256),w
 15158  01CF  1D03               	btfss	3,2
 15159  01D0  29DB               	goto	l7816
 15160  01D1  3000               	movlw	0
 15161  01D2  0021               	movlb	1	; select bank1
 15162  01D3  00AB               	movwf	(?_logf+3)^(0+128)
 15163  01D4  3000               	movlw	0
 15164  01D5  00AA               	movwf	(?_logf+2)^(0+128)
 15165  01D6  3000               	movlw	0
 15166  01D7  00A9               	movwf	(?_logf+1)^(0+128)
 15167  01D8  3000               	movlw	0
 15168  01D9  00A8               	movwf	?_logf^(0+128)
 15169  01DA  0008               	return
 15170  01DB                     l7816:	
 15171  01DB  300D               	movlw	13
 15172  01DC  07DE               	addwf	logf@ix^(0+256),f
 15173  01DD  30FB               	movlw	251
 15174  01DE  3DDF               	addwfc	(logf@ix+1)^(0+256),f
 15175  01DF  304A               	movlw	74
 15176  01E0  3DE0               	addwfc	(logf@ix+2)^(0+256),f
 15177  01E1  3000               	movlw	0
 15178  01E2  3DE1               	addwfc	(logf@ix+3)^(0+256),f
 15179  01E3  085E               	movf	logf@ix^(0+256),w
 15180  01E4  0021               	movlb	1	; select bank1
 15181  01E5  00AC               	movwf	??_logf^(0+128)
 15182  01E6  0022               	movlb	2	; select bank2
 15183  01E7  085F               	movf	(logf@ix+1)^(0+256),w
 15184  01E8  0021               	movlb	1	; select bank1
 15185  01E9  00AD               	movwf	(??_logf^(0+128)+1)
 15186  01EA  0022               	movlb	2	; select bank2
 15187  01EB  0860               	movf	(logf@ix+2)^(0+256),w
 15188  01EC  0021               	movlb	1	; select bank1
 15189  01ED  00AE               	movwf	(??_logf^(0+128)+2)
 15190  01EE  0022               	movlb	2	; select bank2
 15191  01EF  0861               	movf	(logf@ix+3)^(0+256),w
 15192  01F0  0021               	movlb	1	; select bank1
 15193  01F1  00AF               	movwf	(??_logf^(0+128)+3)
 15194  01F2  3017               	movlw	23
 15195  01F3                     u10775:	
 15196  01F3  36AF               	lsrf	(??_logf^(0+128)+3),f
 15197  01F4  0CAE               	rrf	(??_logf^(0+128)+2),f
 15198  01F5  0CAD               	rrf	(??_logf^(0+128)+1),f
 15199  01F6  0CAC               	rrf	??_logf^(0+128),f
 15200  01F7  0B89               	decfsz	9,f
 15201  01F8  29F3               	goto	u10775
 15202  01F9  082C               	movf	??_logf^(0+128),w
 15203  01FA  3E81               	addlw	129
 15204  01FB  00B0               	movwf	(??_logf+4)^(0+128)
 15205  01FC  30FF               	movlw	255
 15206  01FD  3D2D               	addwfc	(??_logf+1)^(0+128),w
 15207  01FE  00B1               	movwf	(??_logf+5)^(0+128)
 15208  01FF  0830               	movf	(??_logf+4)^(0+128),w
 15209  0200  0022               	movlb	2	; select bank2
 15210  0201  07BC               	addwf	logf@k^(0+256),f
 15211  0202  0021               	movlb	1	; select bank1
 15212  0203  0831               	movf	(??_logf+5)^(0+128),w
 15213  0204  0022               	movlb	2	; select bank2
 15214  0205  3DBD               	addwfc	(logf@k+1)^(0+256),f
 15215  0206  30F3               	movlw	243
 15216  0207  0021               	movlb	1	; select bank1
 15217  0208  00AC               	movwf	??_logf^(0+128)
 15218  0209  3004               	movlw	4
 15219  020A  00AD               	movwf	(??_logf^(0+128)+1)
 15220  020B  3035               	movlw	53
 15221  020C  00AE               	movwf	(??_logf^(0+128)+2)
 15222  020D  303F               	movlw	63
 15223  020E  00AF               	movwf	(??_logf^(0+128)+3)
 15224  020F  30FF               	movlw	255
 15225  0210  0022               	movlb	2	; select bank2
 15226  0211  055E               	andwf	logf@ix^(0+256),w
 15227  0212  0021               	movlb	1	; select bank1
 15228  0213  00B0               	movwf	(??_logf+4)^(0+128)
 15229  0214  30FF               	movlw	255
 15230  0215  0022               	movlb	2	; select bank2
 15231  0216  055F               	andwf	(logf@ix+1)^(0+256),w
 15232  0217  0021               	movlb	1	; select bank1
 15233  0218  00B1               	movwf	((??_logf+4)^(0+128)+1)
 15234  0219  307F               	movlw	127
 15235  021A  0022               	movlb	2	; select bank2
 15236  021B  0560               	andwf	(logf@ix+2)^(0+256),w
 15237  021C  0021               	movlb	1	; select bank1
 15238  021D  00B2               	movwf	((??_logf+4)^(0+128)+2)
 15239  021E  3000               	movlw	0
 15240  021F  0022               	movlb	2	; select bank2
 15241  0220  0561               	andwf	(logf@ix+3)^(0+256),w
 15242  0221  0021               	movlb	1	; select bank1
 15243  0222  00B3               	movwf	((??_logf+4)^(0+128)+3)
 15244  0223  0830               	movf	(??_logf+4)^(0+128),w
 15245  0224  07AC               	addwf	??_logf^(0+128),f
 15246  0225  0831               	movf	(??_logf+5)^(0+128),w
 15247  0226  3DAD               	addwfc	(??_logf^(0+128)+1),f
 15248  0227  0832               	movf	(??_logf+6)^(0+128),w
 15249  0228  3DAE               	addwfc	(??_logf^(0+128)+2),f
 15250  0229  0833               	movf	(??_logf+7)^(0+128),w
 15251  022A  3DAF               	addwfc	(??_logf^(0+128)+3),f
 15252  022B  082F               	movf	(??_logf+3)^(0+128),w
 15253  022C  0022               	movlb	2	; select bank2
 15254  022D  00E1               	movwf	(logf@ix+3)^(0+256)
 15255  022E  0021               	movlb	1	; select bank1
 15256  022F  082E               	movf	(??_logf+2)^(0+128),w
 15257  0230  0022               	movlb	2	; select bank2
 15258  0231  00E0               	movwf	(logf@ix+2)^(0+256)
 15259  0232  0021               	movlb	1	; select bank1
 15260  0233  082D               	movf	(??_logf+1)^(0+128),w
 15261  0234  0022               	movlb	2	; select bank2
 15262  0235  00DF               	movwf	(logf@ix+1)^(0+256)
 15263  0236  0021               	movlb	1	; select bank1
 15264  0237  082C               	movf	??_logf^(0+128),w
 15265  0238  0022               	movlb	2	; select bank2
 15266  0239  00DE               	movwf	logf@ix^(0+256)
 15267  023A  0861               	movf	(logf@ix+3)^(0+256),w
 15268  023B  00D9               	movwf	(logf@u+3)^(0+256)
 15269  023C  0860               	movf	(logf@ix+2)^(0+256),w
 15270  023D  00D8               	movwf	(logf@u+2)^(0+256)
 15271  023E  085F               	movf	(logf@ix+1)^(0+256),w
 15272  023F  00D7               	movwf	(logf@u+1)^(0+256)
 15273  0240  085E               	movf	logf@ix^(0+256),w
 15274  0241  00D6               	movwf	logf@u^(0+256)
 15275  0242  0859               	movf	(logf@u+3)^(0+256),w
 15276  0243  0021               	movlb	1	; select bank1
 15277  0244  00AB               	movwf	(logf@x+3)^(0+128)
 15278  0245  0022               	movlb	2	; select bank2
 15279  0246  0858               	movf	(logf@u+2)^(0+256),w
 15280  0247  0021               	movlb	1	; select bank1
 15281  0248  00AA               	movwf	(logf@x+2)^(0+128)
 15282  0249  0022               	movlb	2	; select bank2
 15283  024A  0857               	movf	(logf@u+1)^(0+256),w
 15284  024B  0021               	movlb	1	; select bank1
 15285  024C  00A9               	movwf	(logf@x+1)^(0+128)
 15286  024D  0022               	movlb	2	; select bank2
 15287  024E  0856               	movf	logf@u^(0+256),w
 15288  024F  0021               	movlb	1	; select bank1
 15289  0250  00A8               	movwf	logf@x^(0+128)
 15290  0251  30BF               	movlw	191
 15291  0252  0020               	movlb	0	; select bank0
 15292  0253  00DD               	movwf	___fladd@b+3
 15293  0254  3080               	movlw	128
 15294  0255  00DC               	movwf	___fladd@b+2
 15295  0256  3000               	movlw	0
 15296  0257  00DB               	movwf	___fladd@b+1
 15297  0258  3000               	movlw	0
 15298  0259  00DA               	movwf	___fladd@b
 15299  025A  0021               	movlb	1	; select bank1
 15300  025B  082B               	movf	(logf@x+3)^(0+128),w
 15301  025C  0020               	movlb	0	; select bank0
 15302  025D  00E1               	movwf	___fladd@a+3
 15303  025E  0021               	movlb	1	; select bank1
 15304  025F  082A               	movf	(logf@x+2)^(0+128),w
 15305  0260  0020               	movlb	0	; select bank0
 15306  0261  00E0               	movwf	___fladd@a+2
 15307  0262  0021               	movlb	1	; select bank1
 15308  0263  0829               	movf	(logf@x+1)^(0+128),w
 15309  0264  0020               	movlb	0	; select bank0
 15310  0265  00DF               	movwf	___fladd@a+1
 15311  0266  0021               	movlb	1	; select bank1
 15312  0267  0828               	movf	logf@x^(0+128),w
 15313  0268  0020               	movlb	0	; select bank0
 15314  0269  00DE               	movwf	___fladd@a
 15315  026A  3185  25F5  3180   	fcall	___fladd
 15316  026D  0020               	movlb	0	; select bank0
 15317  026E  085D               	movf	?___fladd+3,w
 15318  026F  0022               	movlb	2	; select bank2
 15319  0270  00DD               	movwf	(logf@f+3)^(0+256)
 15320  0271  0020               	movlb	0	; select bank0
 15321  0272  085C               	movf	?___fladd+2,w
 15322  0273  0022               	movlb	2	; select bank2
 15323  0274  00DC               	movwf	(logf@f+2)^(0+256)
 15324  0275  0020               	movlb	0	; select bank0
 15325  0276  085B               	movf	?___fladd+1,w
 15326  0277  0022               	movlb	2	; select bank2
 15327  0278  00DB               	movwf	(logf@f+1)^(0+256)
 15328  0279  0020               	movlb	0	; select bank0
 15329  027A  085A               	movf	?___fladd,w
 15330  027B  0022               	movlb	2	; select bank2
 15331  027C  00DA               	movwf	logf@f^(0+256)
 15332  027D  3040               	movlw	64
 15333  027E  0020               	movlb	0	; select bank0
 15334  027F  00DD               	movwf	___fladd@b+3
 15335  0280  3000               	movlw	0
 15336  0281  00DC               	movwf	___fladd@b+2
 15337  0282  3000               	movlw	0
 15338  0283  00DB               	movwf	___fladd@b+1
 15339  0284  3000               	movlw	0
 15340  0285  00DA               	movwf	___fladd@b
 15341  0286  0022               	movlb	2	; select bank2
 15342  0287  085D               	movf	(logf@f+3)^(0+256),w
 15343  0288  0020               	movlb	0	; select bank0
 15344  0289  00E1               	movwf	___fladd@a+3
 15345  028A  0022               	movlb	2	; select bank2
 15346  028B  085C               	movf	(logf@f+2)^(0+256),w
 15347  028C  0020               	movlb	0	; select bank0
 15348  028D  00E0               	movwf	___fladd@a+2
 15349  028E  0022               	movlb	2	; select bank2
 15350  028F  085B               	movf	(logf@f+1)^(0+256),w
 15351  0290  0020               	movlb	0	; select bank0
 15352  0291  00DF               	movwf	___fladd@a+1
 15353  0292  0022               	movlb	2	; select bank2
 15354  0293  085A               	movf	logf@f^(0+256),w
 15355  0294  0020               	movlb	0	; select bank0
 15356  0295  00DE               	movwf	___fladd@a
 15357  0296  3185  25F5  3180   	fcall	___fladd
 15358  0299  0020               	movlb	0	; select bank0
 15359  029A  085D               	movf	?___fladd+3,w
 15360  029B  00C3               	movwf	___fldiv@a+3
 15361  029C  085C               	movf	?___fladd+2,w
 15362  029D  00C2               	movwf	___fldiv@a+2
 15363  029E  085B               	movf	?___fladd+1,w
 15364  029F  00C1               	movwf	___fldiv@a+1
 15365  02A0  085A               	movf	?___fladd,w
 15366  02A1  00C0               	movwf	___fldiv@a
 15367  02A2  0022               	movlb	2	; select bank2
 15368  02A3  085D               	movf	(logf@f+3)^(0+256),w
 15369  02A4  0020               	movlb	0	; select bank0
 15370  02A5  00C7               	movwf	___fldiv@b+3
 15371  02A6  0022               	movlb	2	; select bank2
 15372  02A7  085C               	movf	(logf@f+2)^(0+256),w
 15373  02A8  0020               	movlb	0	; select bank0
 15374  02A9  00C6               	movwf	___fldiv@b+2
 15375  02AA  0022               	movlb	2	; select bank2
 15376  02AB  085B               	movf	(logf@f+1)^(0+256),w
 15377  02AC  0020               	movlb	0	; select bank0
 15378  02AD  00C5               	movwf	___fldiv@b+1
 15379  02AE  0022               	movlb	2	; select bank2
 15380  02AF  085A               	movf	logf@f^(0+256),w
 15381  02B0  0020               	movlb	0	; select bank0
 15382  02B1  00C4               	movwf	___fldiv@b
 15383  02B2  319C  24E2  3180   	fcall	___fldiv
 15384  02B5  0020               	movlb	0	; select bank0
 15385  02B6  0843               	movf	?___fldiv+3,w
 15386  02B7  0022               	movlb	2	; select bank2
 15387  02B8  00C9               	movwf	(logf@s+3)^(0+256)
 15388  02B9  0020               	movlb	0	; select bank0
 15389  02BA  0842               	movf	?___fldiv+2,w
 15390  02BB  0022               	movlb	2	; select bank2
 15391  02BC  00C8               	movwf	(logf@s+2)^(0+256)
 15392  02BD  0020               	movlb	0	; select bank0
 15393  02BE  0841               	movf	?___fldiv+1,w
 15394  02BF  0022               	movlb	2	; select bank2
 15395  02C0  00C7               	movwf	(logf@s+1)^(0+256)
 15396  02C1  0020               	movlb	0	; select bank0
 15397  02C2  0840               	movf	?___fldiv,w
 15398  02C3  0022               	movlb	2	; select bank2
 15399  02C4  00C6               	movwf	logf@s^(0+256)
 15400  02C5  0849               	movf	(logf@s+3)^(0+256),w
 15401  02C6  0020               	movlb	0	; select bank0
 15402  02C7  00A9               	movwf	___flmul@b+3
 15403  02C8  0022               	movlb	2	; select bank2
 15404  02C9  0848               	movf	(logf@s+2)^(0+256),w
 15405  02CA  0020               	movlb	0	; select bank0
 15406  02CB  00A8               	movwf	___flmul@b+2
 15407  02CC  0022               	movlb	2	; select bank2
 15408  02CD  0847               	movf	(logf@s+1)^(0+256),w
 15409  02CE  0020               	movlb	0	; select bank0
 15410  02CF  00A7               	movwf	___flmul@b+1
 15411  02D0  0022               	movlb	2	; select bank2
 15412  02D1  0846               	movf	logf@s^(0+256),w
 15413  02D2  0020               	movlb	0	; select bank0
 15414  02D3  00A6               	movwf	___flmul@b
 15415  02D4  0022               	movlb	2	; select bank2
 15416  02D5  0849               	movf	(logf@s+3)^(0+256),w
 15417  02D6  0020               	movlb	0	; select bank0
 15418  02D7  00AD               	movwf	___flmul@a+3
 15419  02D8  0022               	movlb	2	; select bank2
 15420  02D9  0848               	movf	(logf@s+2)^(0+256),w
 15421  02DA  0020               	movlb	0	; select bank0
 15422  02DB  00AC               	movwf	___flmul@a+2
 15423  02DC  0022               	movlb	2	; select bank2
 15424  02DD  0847               	movf	(logf@s+1)^(0+256),w
 15425  02DE  0020               	movlb	0	; select bank0
 15426  02DF  00AB               	movwf	___flmul@a+1
 15427  02E0  0022               	movlb	2	; select bank2
 15428  02E1  0846               	movf	logf@s^(0+256),w
 15429  02E2  0020               	movlb	0	; select bank0
 15430  02E3  00AA               	movwf	___flmul@a
 15431  02E4  3190  2023  3180   	fcall	___flmul
 15432  02E7  0020               	movlb	0	; select bank0
 15433  02E8  0829               	movf	?___flmul+3,w
 15434  02E9  0022               	movlb	2	; select bank2
 15435  02EA  00CD               	movwf	(logf@z+3)^(0+256)
 15436  02EB  0020               	movlb	0	; select bank0
 15437  02EC  0828               	movf	?___flmul+2,w
 15438  02ED  0022               	movlb	2	; select bank2
 15439  02EE  00CC               	movwf	(logf@z+2)^(0+256)
 15440  02EF  0020               	movlb	0	; select bank0
 15441  02F0  0827               	movf	?___flmul+1,w
 15442  02F1  0022               	movlb	2	; select bank2
 15443  02F2  00CB               	movwf	(logf@z+1)^(0+256)
 15444  02F3  0020               	movlb	0	; select bank0
 15445  02F4  0826               	movf	?___flmul,w
 15446  02F5  0022               	movlb	2	; select bank2
 15447  02F6  00CA               	movwf	logf@z^(0+256)
 15448  02F7  084D               	movf	(logf@z+3)^(0+256),w
 15449  02F8  0020               	movlb	0	; select bank0
 15450  02F9  00A9               	movwf	___flmul@b+3
 15451  02FA  0022               	movlb	2	; select bank2
 15452  02FB  084C               	movf	(logf@z+2)^(0+256),w
 15453  02FC  0020               	movlb	0	; select bank0
 15454  02FD  00A8               	movwf	___flmul@b+2
 15455  02FE  0022               	movlb	2	; select bank2
 15456  02FF  084B               	movf	(logf@z+1)^(0+256),w
 15457  0300  0020               	movlb	0	; select bank0
 15458  0301  00A7               	movwf	___flmul@b+1
 15459  0302  0022               	movlb	2	; select bank2
 15460  0303  084A               	movf	logf@z^(0+256),w
 15461  0304  0020               	movlb	0	; select bank0
 15462  0305  00A6               	movwf	___flmul@b
 15463  0306  0022               	movlb	2	; select bank2
 15464  0307  084D               	movf	(logf@z+3)^(0+256),w
 15465  0308  0020               	movlb	0	; select bank0
 15466  0309  00AD               	movwf	___flmul@a+3
 15467  030A  0022               	movlb	2	; select bank2
 15468  030B  084C               	movf	(logf@z+2)^(0+256),w
 15469  030C  0020               	movlb	0	; select bank0
 15470  030D  00AC               	movwf	___flmul@a+2
 15471  030E  0022               	movlb	2	; select bank2
 15472  030F  084B               	movf	(logf@z+1)^(0+256),w
 15473  0310  0020               	movlb	0	; select bank0
 15474  0311  00AB               	movwf	___flmul@a+1
 15475  0312  0022               	movlb	2	; select bank2
 15476  0313  084A               	movf	logf@z^(0+256),w
 15477  0314  0020               	movlb	0	; select bank0
 15478  0315  00AA               	movwf	___flmul@a
 15479  0316  3190  2023  3180   	fcall	___flmul
 15480  0319  0020               	movlb	0	; select bank0
 15481  031A  0829               	movf	?___flmul+3,w
 15482  031B  0022               	movlb	2	; select bank2
 15483  031C  00D1               	movwf	(logf@w+3)^(0+256)
 15484  031D  0020               	movlb	0	; select bank0
 15485  031E  0828               	movf	?___flmul+2,w
 15486  031F  0022               	movlb	2	; select bank2
 15487  0320  00D0               	movwf	(logf@w+2)^(0+256)
 15488  0321  0020               	movlb	0	; select bank0
 15489  0322  0827               	movf	?___flmul+1,w
 15490  0323  0022               	movlb	2	; select bank2
 15491  0324  00CF               	movwf	(logf@w+1)^(0+256)
 15492  0325  0020               	movlb	0	; select bank0
 15493  0326  0826               	movf	?___flmul,w
 15494  0327  0022               	movlb	2	; select bank2
 15495  0328  00CE               	movwf	logf@w^(0+256)
 15496  0329  303E               	movlw	62
 15497  032A  0020               	movlb	0	; select bank0
 15498  032B  00DD               	movwf	___fladd@b+3
 15499  032C  30CC               	movlw	204
 15500  032D  00DC               	movwf	___fladd@b+2
 15501  032E  30CE               	movlw	206
 15502  032F  00DB               	movwf	___fladd@b+1
 15503  0330  3013               	movlw	19
 15504  0331  00DA               	movwf	___fladd@b
 15505  0332  303E               	movlw	62
 15506  0333  00A9               	movwf	___flmul@b+3
 15507  0334  3078               	movlw	120
 15508  0335  00A8               	movwf	___flmul@b+2
 15509  0336  309E               	movlw	158
 15510  0337  00A7               	movwf	___flmul@b+1
 15511  0338  3026               	movlw	38
 15512  0339  00A6               	movwf	___flmul@b
 15513  033A  0022               	movlb	2	; select bank2
 15514  033B  0851               	movf	(logf@w+3)^(0+256),w
 15515  033C  0020               	movlb	0	; select bank0
 15516  033D  00AD               	movwf	___flmul@a+3
 15517  033E  0022               	movlb	2	; select bank2
 15518  033F  0850               	movf	(logf@w+2)^(0+256),w
 15519  0340  0020               	movlb	0	; select bank0
 15520  0341  00AC               	movwf	___flmul@a+2
 15521  0342  0022               	movlb	2	; select bank2
 15522  0343  084F               	movf	(logf@w+1)^(0+256),w
 15523  0344  0020               	movlb	0	; select bank0
 15524  0345  00AB               	movwf	___flmul@a+1
 15525  0346  0022               	movlb	2	; select bank2
 15526  0347  084E               	movf	logf@w^(0+256),w
 15527  0348  0020               	movlb	0	; select bank0
 15528  0349  00AA               	movwf	___flmul@a
 15529  034A  3190  2023  3180   	fcall	___flmul
 15530  034D  0020               	movlb	0	; select bank0
 15531  034E  0829               	movf	?___flmul+3,w
 15532  034F  00E1               	movwf	___fladd@a+3
 15533  0350  0828               	movf	?___flmul+2,w
 15534  0351  00E0               	movwf	___fladd@a+2
 15535  0352  0827               	movf	?___flmul+1,w
 15536  0353  00DF               	movwf	___fladd@a+1
 15537  0354  0826               	movf	?___flmul,w
 15538  0355  00DE               	movwf	___fladd@a
 15539  0356  3185  25F5  3180   	fcall	___fladd
 15540  0359  0020               	movlb	0	; select bank0
 15541  035A  085D               	movf	?___fladd+3,w
 15542  035B  0022               	movlb	2	; select bank2
 15543  035C  00D5               	movwf	(_logf$2041+3)^(0+256)
 15544  035D  0020               	movlb	0	; select bank0
 15545  035E  085C               	movf	?___fladd+2,w
 15546  035F  0022               	movlb	2	; select bank2
 15547  0360  00D4               	movwf	(_logf$2041+2)^(0+256)
 15548  0361  0020               	movlb	0	; select bank0
 15549  0362  085B               	movf	?___fladd+1,w
 15550  0363  0022               	movlb	2	; select bank2
 15551  0364  00D3               	movwf	(_logf$2041+1)^(0+256)
 15552  0365  0020               	movlb	0	; select bank0
 15553  0366  085A               	movf	?___fladd,w
 15554  0367  0022               	movlb	2	; select bank2
 15555  0368  00D2               	movwf	_logf$2041^(0+256)
 15556  0369  0851               	movf	(logf@w+3)^(0+256),w
 15557  036A  0020               	movlb	0	; select bank0
 15558  036B  00A9               	movwf	___flmul@b+3
 15559  036C  0022               	movlb	2	; select bank2
 15560  036D  0850               	movf	(logf@w+2)^(0+256),w
 15561  036E  0020               	movlb	0	; select bank0
 15562  036F  00A8               	movwf	___flmul@b+2
 15563  0370  0022               	movlb	2	; select bank2
 15564  0371  084F               	movf	(logf@w+1)^(0+256),w
 15565  0372  0020               	movlb	0	; select bank0
 15566  0373  00A7               	movwf	___flmul@b+1
 15567  0374  0022               	movlb	2	; select bank2
 15568  0375  084E               	movf	logf@w^(0+256),w
 15569  0376  0020               	movlb	0	; select bank0
 15570  0377  00A6               	movwf	___flmul@b
 15571  0378  0022               	movlb	2	; select bank2
 15572  0379  0855               	movf	(_logf$2041+3)^(0+256),w
 15573  037A  0020               	movlb	0	; select bank0
 15574  037B  00AD               	movwf	___flmul@a+3
 15575  037C  0022               	movlb	2	; select bank2
 15576  037D  0854               	movf	(_logf$2041+2)^(0+256),w
 15577  037E  0020               	movlb	0	; select bank0
 15578  037F  00AC               	movwf	___flmul@a+2
 15579  0380  0022               	movlb	2	; select bank2
 15580  0381  0853               	movf	(_logf$2041+1)^(0+256),w
 15581  0382  0020               	movlb	0	; select bank0
 15582  0383  00AB               	movwf	___flmul@a+1
 15583  0384  0022               	movlb	2	; select bank2
 15584  0385  0852               	movf	_logf$2041^(0+256),w
 15585  0386  0020               	movlb	0	; select bank0
 15586  0387  00AA               	movwf	___flmul@a
 15587  0388  3190  2023  3180   	fcall	___flmul
 15588  038B  0020               	movlb	0	; select bank0
 15589  038C  0829               	movf	?___flmul+3,w
 15590  038D  0022               	movlb	2	; select bank2
 15591  038E  00A7               	movwf	(logf@t1+3)^(0+256)
 15592  038F  0020               	movlb	0	; select bank0
 15593  0390  0828               	movf	?___flmul+2,w
 15594  0391  0022               	movlb	2	; select bank2
 15595  0392  00A6               	movwf	(logf@t1+2)^(0+256)
 15596  0393  0020               	movlb	0	; select bank0
 15597  0394  0827               	movf	?___flmul+1,w
 15598  0395  0022               	movlb	2	; select bank2
 15599  0396  00A5               	movwf	(logf@t1+1)^(0+256)
 15600  0397  0020               	movlb	0	; select bank0
 15601  0398  0826               	movf	?___flmul,w
 15602  0399  0022               	movlb	2	; select bank2
 15603  039A  00A4               	movwf	logf@t1^(0+256)
 15604  039B  303F               	movlw	63
 15605  039C  0020               	movlb	0	; select bank0
 15606  039D  00DD               	movwf	___fladd@b+3
 15607  039E  302A               	movlw	42
 15608  039F  00DC               	movwf	___fladd@b+2
 15609  03A0  30AA               	movlw	170
 15610  03A1  00DB               	movwf	___fladd@b+1
 15611  03A2  30AA               	movlw	170
 15612  03A3  00DA               	movwf	___fladd@b
 15613  03A4  303E               	movlw	62
 15614  03A5  00A9               	movwf	___flmul@b+3
 15615  03A6  3091               	movlw	145
 15616  03A7  00A8               	movwf	___flmul@b+2
 15617  03A8  30E9               	movlw	233
 15618  03A9  00A7               	movwf	___flmul@b+1
 15619  03AA  30EE               	movlw	238
 15620  03AB  00A6               	movwf	___flmul@b
 15621  03AC  0022               	movlb	2	; select bank2
 15622  03AD  0851               	movf	(logf@w+3)^(0+256),w
 15623  03AE  0020               	movlb	0	; select bank0
 15624  03AF  00AD               	movwf	___flmul@a+3
 15625  03B0  0022               	movlb	2	; select bank2
 15626  03B1  0850               	movf	(logf@w+2)^(0+256),w
 15627  03B2  0020               	movlb	0	; select bank0
 15628  03B3  00AC               	movwf	___flmul@a+2
 15629  03B4  0022               	movlb	2	; select bank2
 15630  03B5  084F               	movf	(logf@w+1)^(0+256),w
 15631  03B6  0020               	movlb	0	; select bank0
 15632  03B7  00AB               	movwf	___flmul@a+1
 15633  03B8  0022               	movlb	2	; select bank2
 15634  03B9  084E               	movf	logf@w^(0+256),w
 15635  03BA  0020               	movlb	0	; select bank0
 15636  03BB  00AA               	movwf	___flmul@a
 15637  03BC  3190  2023  3180   	fcall	___flmul
 15638  03BF  0020               	movlb	0	; select bank0
 15639  03C0  0829               	movf	?___flmul+3,w
 15640  03C1  00E1               	movwf	___fladd@a+3
 15641  03C2  0828               	movf	?___flmul+2,w
 15642  03C3  00E0               	movwf	___fladd@a+2
 15643  03C4  0827               	movf	?___flmul+1,w
 15644  03C5  00DF               	movwf	___fladd@a+1
 15645  03C6  0826               	movf	?___flmul,w
 15646  03C7  00DE               	movwf	___fladd@a
 15647  03C8  3185  25F5  3180   	fcall	___fladd
 15648  03CB  0020               	movlb	0	; select bank0
 15649  03CC  085D               	movf	?___fladd+3,w
 15650  03CD  0022               	movlb	2	; select bank2
 15651  03CE  00D5               	movwf	(_logf$2041+3)^(0+256)
 15652  03CF  0020               	movlb	0	; select bank0
 15653  03D0  085C               	movf	?___fladd+2,w
 15654  03D1  0022               	movlb	2	; select bank2
 15655  03D2  00D4               	movwf	(_logf$2041+2)^(0+256)
 15656  03D3  0020               	movlb	0	; select bank0
 15657  03D4  085B               	movf	?___fladd+1,w
 15658  03D5  0022               	movlb	2	; select bank2
 15659  03D6  00D3               	movwf	(_logf$2041+1)^(0+256)
 15660  03D7  0020               	movlb	0	; select bank0
 15661  03D8  085A               	movf	?___fladd,w
 15662  03D9  0022               	movlb	2	; select bank2
 15663  03DA  00D2               	movwf	_logf$2041^(0+256)
 15664  03DB  084D               	movf	(logf@z+3)^(0+256),w
 15665  03DC  0020               	movlb	0	; select bank0
 15666  03DD  00A9               	movwf	___flmul@b+3
 15667  03DE  0022               	movlb	2	; select bank2
 15668  03DF  084C               	movf	(logf@z+2)^(0+256),w
 15669  03E0  0020               	movlb	0	; select bank0
 15670  03E1  00A8               	movwf	___flmul@b+2
 15671  03E2  0022               	movlb	2	; select bank2
 15672  03E3  084B               	movf	(logf@z+1)^(0+256),w
 15673  03E4  0020               	movlb	0	; select bank0
 15674  03E5  00A7               	movwf	___flmul@b+1
 15675  03E6  0022               	movlb	2	; select bank2
 15676  03E7  084A               	movf	logf@z^(0+256),w
 15677  03E8  0020               	movlb	0	; select bank0
 15678  03E9  00A6               	movwf	___flmul@b
 15679  03EA  0022               	movlb	2	; select bank2
 15680  03EB  0855               	movf	(_logf$2041+3)^(0+256),w
 15681  03EC  0020               	movlb	0	; select bank0
 15682  03ED  00AD               	movwf	___flmul@a+3
 15683  03EE  0022               	movlb	2	; select bank2
 15684  03EF  0854               	movf	(_logf$2041+2)^(0+256),w
 15685  03F0  0020               	movlb	0	; select bank0
 15686  03F1  00AC               	movwf	___flmul@a+2
 15687  03F2  0022               	movlb	2	; select bank2
 15688  03F3  0853               	movf	(_logf$2041+1)^(0+256),w
 15689  03F4  0020               	movlb	0	; select bank0
 15690  03F5  00AB               	movwf	___flmul@a+1
 15691  03F6  0022               	movlb	2	; select bank2
 15692  03F7  0852               	movf	_logf$2041^(0+256),w
 15693  03F8  0020               	movlb	0	; select bank0
 15694  03F9  00AA               	movwf	___flmul@a
 15695  03FA  3190  2023  3180   	fcall	___flmul
 15696  03FD  0020               	movlb	0	; select bank0
 15697  03FE  0829               	movf	?___flmul+3,w
 15698  03FF  0022               	movlb	2	; select bank2
 15699  0400  00AB               	movwf	(logf@t2+3)^(0+256)
 15700  0401  0020               	movlb	0	; select bank0
 15701  0402  0828               	movf	?___flmul+2,w
 15702  0403  0022               	movlb	2	; select bank2
 15703  0404  00AA               	movwf	(logf@t2+2)^(0+256)
 15704  0405  0020               	movlb	0	; select bank0
 15705  0406  0827               	movf	?___flmul+1,w
 15706  0407  0022               	movlb	2	; select bank2
 15707  0408  00A9               	movwf	(logf@t2+1)^(0+256)
 15708  0409  0020               	movlb	0	; select bank0
 15709  040A  0826               	movf	?___flmul,w
 15710  040B  0022               	movlb	2	; select bank2
 15711  040C  00A8               	movwf	logf@t2^(0+256)
 15712  040D  0827               	movf	(logf@t1+3)^(0+256),w
 15713  040E  0020               	movlb	0	; select bank0
 15714  040F  00DD               	movwf	___fladd@b+3
 15715  0410  0022               	movlb	2	; select bank2
 15716  0411  0826               	movf	(logf@t1+2)^(0+256),w
 15717  0412  0020               	movlb	0	; select bank0
 15718  0413  00DC               	movwf	___fladd@b+2
 15719  0414  0022               	movlb	2	; select bank2
 15720  0415  0825               	movf	(logf@t1+1)^(0+256),w
 15721  0416  0020               	movlb	0	; select bank0
 15722  0417  00DB               	movwf	___fladd@b+1
 15723  0418  0022               	movlb	2	; select bank2
 15724  0419  0824               	movf	logf@t1^(0+256),w
 15725  041A  0020               	movlb	0	; select bank0
 15726  041B  00DA               	movwf	___fladd@b
 15727  041C  0022               	movlb	2	; select bank2
 15728  041D  082B               	movf	(logf@t2+3)^(0+256),w
 15729  041E  0020               	movlb	0	; select bank0
 15730  041F  00E1               	movwf	___fladd@a+3
 15731  0420  0022               	movlb	2	; select bank2
 15732  0421  082A               	movf	(logf@t2+2)^(0+256),w
 15733  0422  0020               	movlb	0	; select bank0
 15734  0423  00E0               	movwf	___fladd@a+2
 15735  0424  0022               	movlb	2	; select bank2
 15736  0425  0829               	movf	(logf@t2+1)^(0+256),w
 15737  0426  0020               	movlb	0	; select bank0
 15738  0427  00DF               	movwf	___fladd@a+1
 15739  0428  0022               	movlb	2	; select bank2
 15740  0429  0828               	movf	logf@t2^(0+256),w
 15741  042A  0020               	movlb	0	; select bank0
 15742  042B  00DE               	movwf	___fladd@a
 15743  042C  3185  25F5  3180   	fcall	___fladd
 15744  042F  0020               	movlb	0	; select bank0
 15745  0430  085D               	movf	?___fladd+3,w
 15746  0431  0022               	movlb	2	; select bank2
 15747  0432  00A3               	movwf	(logf@R+3)^(0+256)
 15748  0433  0020               	movlb	0	; select bank0
 15749  0434  085C               	movf	?___fladd+2,w
 15750  0435  0022               	movlb	2	; select bank2
 15751  0436  00A2               	movwf	(logf@R+2)^(0+256)
 15752  0437  0020               	movlb	0	; select bank0
 15753  0438  085B               	movf	?___fladd+1,w
 15754  0439  0022               	movlb	2	; select bank2
 15755  043A  00A1               	movwf	(logf@R+1)^(0+256)
 15756  043B  0020               	movlb	0	; select bank0
 15757  043C  085A               	movf	?___fladd,w
 15758  043D  0022               	movlb	2	; select bank2
 15759  043E  00A0               	movwf	logf@R^(0+256)
 15760  043F  303F               	movlw	63
 15761  0440  0020               	movlb	0	; select bank0
 15762  0441  00A9               	movwf	___flmul@b+3
 15763  0442  3000               	movlw	0
 15764  0443  00A8               	movwf	___flmul@b+2
 15765  0444  3000               	movlw	0
 15766  0445  00A7               	movwf	___flmul@b+1
 15767  0446  3000               	movlw	0
 15768  0447  00A6               	movwf	___flmul@b
 15769  0448  0022               	movlb	2	; select bank2
 15770  0449  085D               	movf	(logf@f+3)^(0+256),w
 15771  044A  0020               	movlb	0	; select bank0
 15772  044B  00AD               	movwf	___flmul@a+3
 15773  044C  0022               	movlb	2	; select bank2
 15774  044D  085C               	movf	(logf@f+2)^(0+256),w
 15775  044E  0020               	movlb	0	; select bank0
 15776  044F  00AC               	movwf	___flmul@a+2
 15777  0450  0022               	movlb	2	; select bank2
 15778  0451  085B               	movf	(logf@f+1)^(0+256),w
 15779  0452  0020               	movlb	0	; select bank0
 15780  0453  00AB               	movwf	___flmul@a+1
 15781  0454  0022               	movlb	2	; select bank2
 15782  0455  085A               	movf	logf@f^(0+256),w
 15783  0456  0020               	movlb	0	; select bank0
 15784  0457  00AA               	movwf	___flmul@a
 15785  0458  3190  2023  3180   	fcall	___flmul
 15786  045B  0020               	movlb	0	; select bank0
 15787  045C  0829               	movf	?___flmul+3,w
 15788  045D  0022               	movlb	2	; select bank2
 15789  045E  00D5               	movwf	(_logf$2041+3)^(0+256)
 15790  045F  0020               	movlb	0	; select bank0
 15791  0460  0828               	movf	?___flmul+2,w
 15792  0461  0022               	movlb	2	; select bank2
 15793  0462  00D4               	movwf	(_logf$2041+2)^(0+256)
 15794  0463  0020               	movlb	0	; select bank0
 15795  0464  0827               	movf	?___flmul+1,w
 15796  0465  0022               	movlb	2	; select bank2
 15797  0466  00D3               	movwf	(_logf$2041+1)^(0+256)
 15798  0467  0020               	movlb	0	; select bank0
 15799  0468  0826               	movf	?___flmul,w
 15800  0469  0022               	movlb	2	; select bank2
 15801  046A  00D2               	movwf	_logf$2041^(0+256)
 15802  046B  085D               	movf	(logf@f+3)^(0+256),w
 15803  046C  0020               	movlb	0	; select bank0
 15804  046D  00A9               	movwf	___flmul@b+3
 15805  046E  0022               	movlb	2	; select bank2
 15806  046F  085C               	movf	(logf@f+2)^(0+256),w
 15807  0470  0020               	movlb	0	; select bank0
 15808  0471  00A8               	movwf	___flmul@b+2
 15809  0472  0022               	movlb	2	; select bank2
 15810  0473  085B               	movf	(logf@f+1)^(0+256),w
 15811  0474  0020               	movlb	0	; select bank0
 15812  0475  00A7               	movwf	___flmul@b+1
 15813  0476  0022               	movlb	2	; select bank2
 15814  0477  085A               	movf	logf@f^(0+256),w
 15815  0478  0020               	movlb	0	; select bank0
 15816  0479  00A6               	movwf	___flmul@b
 15817  047A  0022               	movlb	2	; select bank2
 15818  047B  0855               	movf	(_logf$2041+3)^(0+256),w
 15819  047C  0020               	movlb	0	; select bank0
 15820  047D  00AD               	movwf	___flmul@a+3
 15821  047E  0022               	movlb	2	; select bank2
 15822  047F  0854               	movf	(_logf$2041+2)^(0+256),w
 15823  0480  0020               	movlb	0	; select bank0
 15824  0481  00AC               	movwf	___flmul@a+2
 15825  0482  0022               	movlb	2	; select bank2
 15826  0483  0853               	movf	(_logf$2041+1)^(0+256),w
 15827  0484  0020               	movlb	0	; select bank0
 15828  0485  00AB               	movwf	___flmul@a+1
 15829  0486  0022               	movlb	2	; select bank2
 15830  0487  0852               	movf	_logf$2041^(0+256),w
 15831  0488  0020               	movlb	0	; select bank0
 15832  0489  00AA               	movwf	___flmul@a
 15833  048A  3190  2023  3180   	fcall	___flmul
 15834  048D  0020               	movlb	0	; select bank0
 15835  048E  0829               	movf	?___flmul+3,w
 15836  048F  0022               	movlb	2	; select bank2
 15837  0490  00C1               	movwf	(logf@hfsq+3)^(0+256)
 15838  0491  0020               	movlb	0	; select bank0
 15839  0492  0828               	movf	?___flmul+2,w
 15840  0493  0022               	movlb	2	; select bank2
 15841  0494  00C0               	movwf	(logf@hfsq+2)^(0+256)
 15842  0495  0020               	movlb	0	; select bank0
 15843  0496  0827               	movf	?___flmul+1,w
 15844  0497  0022               	movlb	2	; select bank2
 15845  0498  00BF               	movwf	(logf@hfsq+1)^(0+256)
 15846  0499  0020               	movlb	0	; select bank0
 15847  049A  0826               	movf	?___flmul,w
 15848  049B  0022               	movlb	2	; select bank2
 15849  049C  00BE               	movwf	logf@hfsq^(0+256)
 15850  049D  083C               	movf	logf@k^(0+256),w
 15851  049E  00F1               	movwf	___xxtofl@val
 15852  049F  083D               	movf	(logf@k+1)^(0+256),w
 15853  04A0  00F2               	movwf	___xxtofl@val+1
 15854  04A1  0D89               	rlf	9,f
 15855  04A2  3B89               	subwfb	9,f
 15856  04A3  0989               	comf	9,f
 15857  04A4  00F3               	movwf	___xxtofl@val+2
 15858  04A5  00F4               	movwf	___xxtofl@val+3
 15859  04A6  3001               	movlw	1
 15860  04A7  31AB  23E3  3180   	fcall	___xxtofl
 15861  04AA  0874               	movf	?___xxtofl+3,w
 15862  04AB  0022               	movlb	2	; select bank2
 15863  04AC  00C5               	movwf	(logf@dk+3)^(0+256)
 15864  04AD  0873               	movf	?___xxtofl+2,w
 15865  04AE  00C4               	movwf	(logf@dk+2)^(0+256)
 15866  04AF  0872               	movf	?___xxtofl+1,w
 15867  04B0  00C3               	movwf	(logf@dk+1)^(0+256)
 15868  04B1  0871               	movf	?___xxtofl,w
 15869  04B2  00C2               	movwf	logf@dk^(0+256)
 15870  04B3  0849               	movf	(logf@s+3)^(0+256),w
 15871  04B4  0020               	movlb	0	; select bank0
 15872  04B5  00A9               	movwf	___flmul@b+3
 15873  04B6  0022               	movlb	2	; select bank2
 15874  04B7  0848               	movf	(logf@s+2)^(0+256),w
 15875  04B8  0020               	movlb	0	; select bank0
 15876  04B9  00A8               	movwf	___flmul@b+2
 15877  04BA  0022               	movlb	2	; select bank2
 15878  04BB  0847               	movf	(logf@s+1)^(0+256),w
 15879  04BC  0020               	movlb	0	; select bank0
 15880  04BD  00A7               	movwf	___flmul@b+1
 15881  04BE  0022               	movlb	2	; select bank2
 15882  04BF  0846               	movf	logf@s^(0+256),w
 15883  04C0  0020               	movlb	0	; select bank0
 15884  04C1  00A6               	movwf	___flmul@b
 15885  04C2  0022               	movlb	2	; select bank2
 15886  04C3  0823               	movf	(logf@R+3)^(0+256),w
 15887  04C4  0020               	movlb	0	; select bank0
 15888  04C5  00DD               	movwf	___fladd@b+3
 15889  04C6  0022               	movlb	2	; select bank2
 15890  04C7  0822               	movf	(logf@R+2)^(0+256),w
 15891  04C8  0020               	movlb	0	; select bank0
 15892  04C9  00DC               	movwf	___fladd@b+2
 15893  04CA  0022               	movlb	2	; select bank2
 15894  04CB  0821               	movf	(logf@R+1)^(0+256),w
 15895  04CC  0020               	movlb	0	; select bank0
 15896  04CD  00DB               	movwf	___fladd@b+1
 15897  04CE  0022               	movlb	2	; select bank2
 15898  04CF  0820               	movf	logf@R^(0+256),w
 15899  04D0  0020               	movlb	0	; select bank0
 15900  04D1  00DA               	movwf	___fladd@b
 15901  04D2  0022               	movlb	2	; select bank2
 15902  04D3  0841               	movf	(logf@hfsq+3)^(0+256),w
 15903  04D4  0020               	movlb	0	; select bank0
 15904  04D5  00E1               	movwf	___fladd@a+3
 15905  04D6  0022               	movlb	2	; select bank2
 15906  04D7  0840               	movf	(logf@hfsq+2)^(0+256),w
 15907  04D8  0020               	movlb	0	; select bank0
 15908  04D9  00E0               	movwf	___fladd@a+2
 15909  04DA  0022               	movlb	2	; select bank2
 15910  04DB  083F               	movf	(logf@hfsq+1)^(0+256),w
 15911  04DC  0020               	movlb	0	; select bank0
 15912  04DD  00DF               	movwf	___fladd@a+1
 15913  04DE  0022               	movlb	2	; select bank2
 15914  04DF  083E               	movf	logf@hfsq^(0+256),w
 15915  04E0  0020               	movlb	0	; select bank0
 15916  04E1  00DE               	movwf	___fladd@a
 15917  04E2  3185  25F5  3180   	fcall	___fladd
 15918  04E5  0020               	movlb	0	; select bank0
 15919  04E6  085D               	movf	?___fladd+3,w
 15920  04E7  00AD               	movwf	___flmul@a+3
 15921  04E8  085C               	movf	?___fladd+2,w
 15922  04E9  00AC               	movwf	___flmul@a+2
 15923  04EA  085B               	movf	?___fladd+1,w
 15924  04EB  00AB               	movwf	___flmul@a+1
 15925  04EC  085A               	movf	?___fladd,w
 15926  04ED  00AA               	movwf	___flmul@a
 15927  04EE  3190  2023  3180   	fcall	___flmul
 15928  04F1  0020               	movlb	0	; select bank0
 15929  04F2  0829               	movf	?___flmul+3,w
 15930  04F3  0022               	movlb	2	; select bank2
 15931  04F4  00AF               	movwf	(_logf$2042+3)^(0+256)
 15932  04F5  0020               	movlb	0	; select bank0
 15933  04F6  0828               	movf	?___flmul+2,w
 15934  04F7  0022               	movlb	2	; select bank2
 15935  04F8  00AE               	movwf	(_logf$2042+2)^(0+256)
 15936  04F9  0020               	movlb	0	; select bank0
 15937  04FA  0827               	movf	?___flmul+1,w
 15938  04FB  0022               	movlb	2	; select bank2
 15939  04FC  00AD               	movwf	(_logf$2042+1)^(0+256)
 15940  04FD  0020               	movlb	0	; select bank0
 15941  04FE  0826               	movf	?___flmul,w
 15942  04FF  0022               	movlb	2	; select bank2
 15943  0500  00AC               	movwf	_logf$2042^(0+256)
 15944  0501  3037               	movlw	55
 15945  0502  0020               	movlb	0	; select bank0
 15946  0503  00A9               	movwf	___flmul@b+3
 15947  0504  3017               	movlw	23
 15948  0505  00A8               	movwf	___flmul@b+2
 15949  0506  30F7               	movlw	247
 15950  0507  00A7               	movwf	___flmul@b+1
 15951  0508  30D1               	movlw	209
 15952  0509  00A6               	movwf	___flmul@b
 15953  050A  0022               	movlb	2	; select bank2
 15954  050B  0845               	movf	(logf@dk+3)^(0+256),w
 15955  050C  0020               	movlb	0	; select bank0
 15956  050D  00AD               	movwf	___flmul@a+3
 15957  050E  0022               	movlb	2	; select bank2
 15958  050F  0844               	movf	(logf@dk+2)^(0+256),w
 15959  0510  0020               	movlb	0	; select bank0
 15960  0511  00AC               	movwf	___flmul@a+2
 15961  0512  0022               	movlb	2	; select bank2
 15962  0513  0843               	movf	(logf@dk+1)^(0+256),w
 15963  0514  0020               	movlb	0	; select bank0
 15964  0515  00AB               	movwf	___flmul@a+1
 15965  0516  0022               	movlb	2	; select bank2
 15966  0517  0842               	movf	logf@dk^(0+256),w
 15967  0518  0020               	movlb	0	; select bank0
 15968  0519  00AA               	movwf	___flmul@a
 15969  051A  3190  2023  3180   	fcall	___flmul
 15970  051D  0020               	movlb	0	; select bank0
 15971  051E  0829               	movf	?___flmul+3,w
 15972  051F  00DD               	movwf	___fladd@b+3
 15973  0520  0828               	movf	?___flmul+2,w
 15974  0521  00DC               	movwf	___fladd@b+2
 15975  0522  0827               	movf	?___flmul+1,w
 15976  0523  00DB               	movwf	___fladd@b+1
 15977  0524  0826               	movf	?___flmul,w
 15978  0525  00DA               	movwf	___fladd@b
 15979  0526  0022               	movlb	2	; select bank2
 15980  0527  082F               	movf	(_logf$2042+3)^(0+256),w
 15981  0528  0020               	movlb	0	; select bank0
 15982  0529  00E1               	movwf	___fladd@a+3
 15983  052A  0022               	movlb	2	; select bank2
 15984  052B  082E               	movf	(_logf$2042+2)^(0+256),w
 15985  052C  0020               	movlb	0	; select bank0
 15986  052D  00E0               	movwf	___fladd@a+2
 15987  052E  0022               	movlb	2	; select bank2
 15988  052F  082D               	movf	(_logf$2042+1)^(0+256),w
 15989  0530  0020               	movlb	0	; select bank0
 15990  0531  00DF               	movwf	___fladd@a+1
 15991  0532  0022               	movlb	2	; select bank2
 15992  0533  082C               	movf	_logf$2042^(0+256),w
 15993  0534  0020               	movlb	0	; select bank0
 15994  0535  00DE               	movwf	___fladd@a
 15995  0536  3185  25F5  3180   	fcall	___fladd
 15996  0539  0020               	movlb	0	; select bank0
 15997  053A  085D               	movf	?___fladd+3,w
 15998  053B  0022               	movlb	2	; select bank2
 15999  053C  00B3               	movwf	(_logf$2043+3)^(0+256)
 16000  053D  0020               	movlb	0	; select bank0
 16001  053E  085C               	movf	?___fladd+2,w
 16002  053F  0022               	movlb	2	; select bank2
 16003  0540  00B2               	movwf	(_logf$2043+2)^(0+256)
 16004  0541  0020               	movlb	0	; select bank0
 16005  0542  085B               	movf	?___fladd+1,w
 16006  0543  0022               	movlb	2	; select bank2
 16007  0544  00B1               	movwf	(_logf$2043+1)^(0+256)
 16008  0545  0020               	movlb	0	; select bank0
 16009  0546  085A               	movf	?___fladd,w
 16010  0547  0022               	movlb	2	; select bank2
 16011  0548  00B0               	movwf	_logf$2043^(0+256)
 16012  0549  0841               	movf	(logf@hfsq+3)^(0+256),w
 16013  054A  0021               	movlb	1	; select bank1
 16014  054B  00A3               	movwf	(___flsub@a+3)^(0+128)
 16015  054C  0022               	movlb	2	; select bank2
 16016  054D  0840               	movf	(logf@hfsq+2)^(0+256),w
 16017  054E  0021               	movlb	1	; select bank1
 16018  054F  00A2               	movwf	(___flsub@a+2)^(0+128)
 16019  0550  0022               	movlb	2	; select bank2
 16020  0551  083F               	movf	(logf@hfsq+1)^(0+256),w
 16021  0552  0021               	movlb	1	; select bank1
 16022  0553  00A1               	movwf	(___flsub@a+1)^(0+128)
 16023  0554  0022               	movlb	2	; select bank2
 16024  0555  083E               	movf	logf@hfsq^(0+256),w
 16025  0556  0021               	movlb	1	; select bank1
 16026  0557  00A0               	movwf	___flsub@a^(0+128)
 16027  0558  0022               	movlb	2	; select bank2
 16028  0559  0833               	movf	(_logf$2043+3)^(0+256),w
 16029  055A  0021               	movlb	1	; select bank1
 16030  055B  00A7               	movwf	(___flsub@b+3)^(0+128)
 16031  055C  0022               	movlb	2	; select bank2
 16032  055D  0832               	movf	(_logf$2043+2)^(0+256),w
 16033  055E  0021               	movlb	1	; select bank1
 16034  055F  00A6               	movwf	(___flsub@b+2)^(0+128)
 16035  0560  0022               	movlb	2	; select bank2
 16036  0561  0831               	movf	(_logf$2043+1)^(0+256),w
 16037  0562  0021               	movlb	1	; select bank1
 16038  0563  00A5               	movwf	(___flsub@b+1)^(0+128)
 16039  0564  0022               	movlb	2	; select bank2
 16040  0565  0830               	movf	_logf$2043^(0+256),w
 16041  0566  0021               	movlb	1	; select bank1
 16042  0567  00A4               	movwf	___flsub@b^(0+128)
 16043  0568  31B6  2692  3180   	fcall	___flsub
 16044  056B  0021               	movlb	1	; select bank1
 16045  056C  0823               	movf	(?___flsub+3)^(0+128),w
 16046  056D  0022               	movlb	2	; select bank2
 16047  056E  00B7               	movwf	(_logf$2044+3)^(0+256)
 16048  056F  0021               	movlb	1	; select bank1
 16049  0570  0822               	movf	(?___flsub+2)^(0+128),w
 16050  0571  0022               	movlb	2	; select bank2
 16051  0572  00B6               	movwf	(_logf$2044+2)^(0+256)
 16052  0573  0021               	movlb	1	; select bank1
 16053  0574  0821               	movf	(?___flsub+1)^(0+128),w
 16054  0575  0022               	movlb	2	; select bank2
 16055  0576  00B5               	movwf	(_logf$2044+1)^(0+256)
 16056  0577  0021               	movlb	1	; select bank1
 16057  0578  0820               	movf	?___flsub^(0+128),w
 16058  0579  0022               	movlb	2	; select bank2
 16059  057A  00B4               	movwf	_logf$2044^(0+256)
 16060  057B  085D               	movf	(logf@f+3)^(0+256),w
 16061  057C  0020               	movlb	0	; select bank0
 16062  057D  00DD               	movwf	___fladd@b+3
 16063  057E  0022               	movlb	2	; select bank2
 16064  057F  085C               	movf	(logf@f+2)^(0+256),w
 16065  0580  0020               	movlb	0	; select bank0
 16066  0581  00DC               	movwf	___fladd@b+2
 16067  0582  0022               	movlb	2	; select bank2
 16068  0583  085B               	movf	(logf@f+1)^(0+256),w
 16069  0584  0020               	movlb	0	; select bank0
 16070  0585  00DB               	movwf	___fladd@b+1
 16071  0586  0022               	movlb	2	; select bank2
 16072  0587  085A               	movf	logf@f^(0+256),w
 16073  0588  0020               	movlb	0	; select bank0
 16074  0589  00DA               	movwf	___fladd@b
 16075  058A  0022               	movlb	2	; select bank2
 16076  058B  0837               	movf	(_logf$2044+3)^(0+256),w
 16077  058C  0020               	movlb	0	; select bank0
 16078  058D  00E1               	movwf	___fladd@a+3
 16079  058E  0022               	movlb	2	; select bank2
 16080  058F  0836               	movf	(_logf$2044+2)^(0+256),w
 16081  0590  0020               	movlb	0	; select bank0
 16082  0591  00E0               	movwf	___fladd@a+2
 16083  0592  0022               	movlb	2	; select bank2
 16084  0593  0835               	movf	(_logf$2044+1)^(0+256),w
 16085  0594  0020               	movlb	0	; select bank0
 16086  0595  00DF               	movwf	___fladd@a+1
 16087  0596  0022               	movlb	2	; select bank2
 16088  0597  0834               	movf	_logf$2044^(0+256),w
 16089  0598  0020               	movlb	0	; select bank0
 16090  0599  00DE               	movwf	___fladd@a
 16091  059A  3185  25F5  3180   	fcall	___fladd
 16092  059D  0020               	movlb	0	; select bank0
 16093  059E  085D               	movf	?___fladd+3,w
 16094  059F  0022               	movlb	2	; select bank2
 16095  05A0  00BB               	movwf	(_logf$2045+3)^(0+256)
 16096  05A1  0020               	movlb	0	; select bank0
 16097  05A2  085C               	movf	?___fladd+2,w
 16098  05A3  0022               	movlb	2	; select bank2
 16099  05A4  00BA               	movwf	(_logf$2045+2)^(0+256)
 16100  05A5  0020               	movlb	0	; select bank0
 16101  05A6  085B               	movf	?___fladd+1,w
 16102  05A7  0022               	movlb	2	; select bank2
 16103  05A8  00B9               	movwf	(_logf$2045+1)^(0+256)
 16104  05A9  0020               	movlb	0	; select bank0
 16105  05AA  085A               	movf	?___fladd,w
 16106  05AB  0022               	movlb	2	; select bank2
 16107  05AC  00B8               	movwf	_logf$2045^(0+256)
 16108  05AD  303F               	movlw	63
 16109  05AE  0020               	movlb	0	; select bank0
 16110  05AF  00A9               	movwf	___flmul@b+3
 16111  05B0  3031               	movlw	49
 16112  05B1  00A8               	movwf	___flmul@b+2
 16113  05B2  3071               	movlw	113
 16114  05B3  00A7               	movwf	___flmul@b+1
 16115  05B4  3080               	movlw	128
 16116  05B5  00A6               	movwf	___flmul@b
 16117  05B6  0022               	movlb	2	; select bank2
 16118  05B7  0845               	movf	(logf@dk+3)^(0+256),w
 16119  05B8  0020               	movlb	0	; select bank0
 16120  05B9  00AD               	movwf	___flmul@a+3
 16121  05BA  0022               	movlb	2	; select bank2
 16122  05BB  0844               	movf	(logf@dk+2)^(0+256),w
 16123  05BC  0020               	movlb	0	; select bank0
 16124  05BD  00AC               	movwf	___flmul@a+2
 16125  05BE  0022               	movlb	2	; select bank2
 16126  05BF  0843               	movf	(logf@dk+1)^(0+256),w
 16127  05C0  0020               	movlb	0	; select bank0
 16128  05C1  00AB               	movwf	___flmul@a+1
 16129  05C2  0022               	movlb	2	; select bank2
 16130  05C3  0842               	movf	logf@dk^(0+256),w
 16131  05C4  0020               	movlb	0	; select bank0
 16132  05C5  00AA               	movwf	___flmul@a
 16133  05C6  3190  2023  3180   	fcall	___flmul
 16134  05C9  0020               	movlb	0	; select bank0
 16135  05CA  0829               	movf	?___flmul+3,w
 16136  05CB  00DD               	movwf	___fladd@b+3
 16137  05CC  0828               	movf	?___flmul+2,w
 16138  05CD  00DC               	movwf	___fladd@b+2
 16139  05CE  0827               	movf	?___flmul+1,w
 16140  05CF  00DB               	movwf	___fladd@b+1
 16141  05D0  0826               	movf	?___flmul,w
 16142  05D1  00DA               	movwf	___fladd@b
 16143  05D2  0022               	movlb	2	; select bank2
 16144  05D3  083B               	movf	(_logf$2045+3)^(0+256),w
 16145  05D4  0020               	movlb	0	; select bank0
 16146  05D5  00E1               	movwf	___fladd@a+3
 16147  05D6  0022               	movlb	2	; select bank2
 16148  05D7  083A               	movf	(_logf$2045+2)^(0+256),w
 16149  05D8  0020               	movlb	0	; select bank0
 16150  05D9  00E0               	movwf	___fladd@a+2
 16151  05DA  0022               	movlb	2	; select bank2
 16152  05DB  0839               	movf	(_logf$2045+1)^(0+256),w
 16153  05DC  0020               	movlb	0	; select bank0
 16154  05DD  00DF               	movwf	___fladd@a+1
 16155  05DE  0022               	movlb	2	; select bank2
 16156  05DF  0838               	movf	_logf$2045^(0+256),w
 16157  05E0  0020               	movlb	0	; select bank0
 16158  05E1  00DE               	movwf	___fladd@a
 16159  05E2  3185  25F5         	fcall	___fladd
 16160  05E4  0020               	movlb	0	; select bank0
 16161  05E5  085D               	movf	?___fladd+3,w
 16162  05E6  0021               	movlb	1	; select bank1
 16163  05E7  00AB               	movwf	(?_logf+3)^(0+128)
 16164  05E8  0020               	movlb	0	; select bank0
 16165  05E9  085C               	movf	?___fladd+2,w
 16166  05EA  0021               	movlb	1	; select bank1
 16167  05EB  00AA               	movwf	(?_logf+2)^(0+128)
 16168  05EC  0020               	movlb	0	; select bank0
 16169  05ED  085B               	movf	?___fladd+1,w
 16170  05EE  0021               	movlb	1	; select bank1
 16171  05EF  00A9               	movwf	(?_logf+1)^(0+128)
 16172  05F0  0020               	movlb	0	; select bank0
 16173  05F1  085A               	movf	?___fladd,w
 16174  05F2  0021               	movlb	1	; select bank1
 16175  05F3  00A8               	movwf	?_logf^(0+128)
 16176  05F4  0008               	return
 16177  05F5                     __end_of_logf:	
 16178                           
 16179                           	psect	text51
 16180  3692                     __ptext51:	
 16181 ;; *************** function ___flsub *****************
 16182 ;; Defined at:
 16183 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 16184 ;; Parameters:    Size  Location     Type
 16185 ;;  a               4    0[BANK1 ] float 
 16186 ;;  b               4    4[BANK1 ] float 
 16187 ;; Auto vars:     Size  Location     Type
 16188 ;;		None
 16189 ;; Return value:  Size  Location     Type
 16190 ;;                  4    0[BANK1 ] float 
 16191 ;; Registers used:
 16192 ;;		wreg, status,2, status,0, pclath, cstack
 16193 ;; Tracked objects:
 16194 ;;		On entry : 0/0
 16195 ;;		On exit  : 0/0
 16196 ;;		Unchanged: 0/0
 16197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16198 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16201 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16202 ;;Total ram usage:        8 bytes
 16203 ;; Hardware stack levels used:    1
 16204 ;; Hardware stack levels required when called:    2
 16205 ;; This function calls:
 16206 ;;		___fladd
 16207 ;; This function is called by:
 16208 ;;		_updateTemperatures
 16209 ;;		_logf
 16210 ;; This function uses a non-reentrant model
 16211 ;;
 16212                           
 16213                           
 16214                           ;psect for function ___flsub
 16215  3692                     ___flsub:	
 16216                           
 16217                           ;incstack = 0
 16218                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 16219  3692  3080               	movlw	128
 16220  3693  0021               	movlb	1	; select bank1
 16221  3694  06A3               	xorwf	(___flsub@a+3)^(0+128),f
 16222  3695  0827               	movf	(___flsub@b+3)^(0+128),w
 16223  3696  0020               	movlb	0	; select bank0
 16224  3697  00DD               	movwf	___fladd@b+3
 16225  3698  0021               	movlb	1	; select bank1
 16226  3699  0826               	movf	(___flsub@b+2)^(0+128),w
 16227  369A  0020               	movlb	0	; select bank0
 16228  369B  00DC               	movwf	___fladd@b+2
 16229  369C  0021               	movlb	1	; select bank1
 16230  369D  0825               	movf	(___flsub@b+1)^(0+128),w
 16231  369E  0020               	movlb	0	; select bank0
 16232  369F  00DB               	movwf	___fladd@b+1
 16233  36A0  0021               	movlb	1	; select bank1
 16234  36A1  0824               	movf	___flsub@b^(0+128),w
 16235  36A2  0020               	movlb	0	; select bank0
 16236  36A3  00DA               	movwf	___fladd@b
 16237  36A4  0021               	movlb	1	; select bank1
 16238  36A5  0823               	movf	(___flsub@a+3)^(0+128),w
 16239  36A6  0020               	movlb	0	; select bank0
 16240  36A7  00E1               	movwf	___fladd@a+3
 16241  36A8  0021               	movlb	1	; select bank1
 16242  36A9  0822               	movf	(___flsub@a+2)^(0+128),w
 16243  36AA  0020               	movlb	0	; select bank0
 16244  36AB  00E0               	movwf	___fladd@a+2
 16245  36AC  0021               	movlb	1	; select bank1
 16246  36AD  0821               	movf	(___flsub@a+1)^(0+128),w
 16247  36AE  0020               	movlb	0	; select bank0
 16248  36AF  00DF               	movwf	___fladd@a+1
 16249  36B0  0021               	movlb	1	; select bank1
 16250  36B1  0820               	movf	___flsub@a^(0+128),w
 16251  36B2  0020               	movlb	0	; select bank0
 16252  36B3  00DE               	movwf	___fladd@a
 16253  36B4  3185  25F5         	fcall	___fladd
 16254  36B6  0020               	movlb	0	; select bank0
 16255  36B7  085D               	movf	?___fladd+3,w
 16256  36B8  0021               	movlb	1	; select bank1
 16257  36B9  00A3               	movwf	(?___flsub+3)^(0+128)
 16258  36BA  0020               	movlb	0	; select bank0
 16259  36BB  085C               	movf	?___fladd+2,w
 16260  36BC  0021               	movlb	1	; select bank1
 16261  36BD  00A2               	movwf	(?___flsub+2)^(0+128)
 16262  36BE  0020               	movlb	0	; select bank0
 16263  36BF  085B               	movf	?___fladd+1,w
 16264  36C0  0021               	movlb	1	; select bank1
 16265  36C1  00A1               	movwf	(?___flsub+1)^(0+128)
 16266  36C2  0020               	movlb	0	; select bank0
 16267  36C3  085A               	movf	?___fladd,w
 16268  36C4  0021               	movlb	1	; select bank1
 16269  36C5  00A0               	movwf	?___flsub^(0+128)
 16270  36C6  0008               	return
 16271  36C7                     __end_of___flsub:	
 16272                           
 16273                           	psect	text52
 16274  05F5                     __ptext52:	
 16275 ;; *************** function ___fladd *****************
 16276 ;; Defined at:
 16277 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 16278 ;; Parameters:    Size  Location     Type
 16279 ;;  b               4   58[BANK0 ] float 
 16280 ;;  a               4   62[BANK0 ] float 
 16281 ;; Auto vars:     Size  Location     Type
 16282 ;;  grs             1   77[BANK0 ] unsigned char 
 16283 ;;  bexp            1   76[BANK0 ] unsigned char 
 16284 ;;  aexp            1   75[BANK0 ] unsigned char 
 16285 ;;  signs           1   74[BANK0 ] unsigned char 
 16286 ;; Return value:  Size  Location     Type
 16287 ;;                  4   58[BANK0 ] unsigned char 
 16288 ;; Registers used:
 16289 ;;		wreg, status,2, status,0
 16290 ;; Tracked objects:
 16291 ;;		On entry : 0/0
 16292 ;;		On exit  : 0/0
 16293 ;;		Unchanged: 0/0
 16294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16295 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16296 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16297 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16298 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16299 ;;Total ram usage:       20 bytes
 16300 ;; Hardware stack levels used:    1
 16301 ;; Hardware stack levels required when called:    1
 16302 ;; This function calls:
 16303 ;;		Nothing
 16304 ;; This function is called by:
 16305 ;;		_updateVoltages
 16306 ;;		_updateTemperatures
 16307 ;;		___flsub
 16308 ;;		_logf
 16309 ;; This function uses a non-reentrant model
 16310 ;;
 16311                           
 16312                           
 16313                           ;psect for function ___fladd
 16314  05F5                     ___fladd:	
 16315                           
 16316                           ;incstack = 0
 16317                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 16318  05F5  0020               	movlb	0	; select bank0
 16319  05F6  085D               	movf	___fladd@b+3,w
 16320  05F7  3980               	andlw	128
 16321  05F8  00E2               	movwf	??___fladd
 16322  05F9  0862               	movf	??___fladd,w
 16323  05FA  00EA               	movwf	___fladd@signs
 16324  05FB  355D               	lslf	___fladd@b+3,w
 16325  05FC  00E2               	movwf	??___fladd
 16326  05FD  0862               	movf	??___fladd,w
 16327  05FE  00EC               	movwf	___fladd@bexp
 16328  05FF  1BDC               	btfsc	___fladd@b+2,7
 16329  0600  146C               	bsf	___fladd@bexp,0
 16330  0601  086C               	movf	___fladd@bexp,w
 16331  0602  1903               	btfsc	3,2
 16332  0603  2E12               	goto	l7192
 16333  0604  0A6C               	incf	___fladd@bexp,w
 16334  0605  1D03               	btfss	3,2
 16335  0606  2E0F               	goto	l7188
 16336  0607  3000               	movlw	0
 16337  0608  00DD               	movwf	___fladd@b+3
 16338  0609  3000               	movlw	0
 16339  060A  00DC               	movwf	___fladd@b+2
 16340  060B  3000               	movlw	0
 16341  060C  00DB               	movwf	___fladd@b+1
 16342  060D  3000               	movlw	0
 16343  060E  00DA               	movwf	___fladd@b
 16344  060F                     l7188:	
 16345  060F  17DC               	bsf	___fladd@b+2,7
 16346  0610  01DD               	clrf	___fladd@b+3
 16347  0611  2E1A               	goto	l7194
 16348  0612                     l7192:	
 16349  0612  3000               	movlw	0
 16350  0613  00DD               	movwf	___fladd@b+3
 16351  0614  3000               	movlw	0
 16352  0615  00DC               	movwf	___fladd@b+2
 16353  0616  3000               	movlw	0
 16354  0617  00DB               	movwf	___fladd@b+1
 16355  0618  3000               	movlw	0
 16356  0619  00DA               	movwf	___fladd@b
 16357  061A                     l7194:	
 16358  061A  0861               	movf	___fladd@a+3,w
 16359  061B  3980               	andlw	128
 16360  061C  00E2               	movwf	??___fladd
 16361  061D  0862               	movf	??___fladd,w
 16362  061E  00EB               	movwf	___fladd@aexp
 16363  061F  086B               	movf	___fladd@aexp,w
 16364  0620  066A               	xorwf	___fladd@signs,w
 16365  0621  1D03               	btfss	3,2
 16366  0622  176A               	bsf	___fladd@signs,6
 16367  0623  3561               	lslf	___fladd@a+3,w
 16368  0624  00E2               	movwf	??___fladd
 16369  0625  0862               	movf	??___fladd,w
 16370  0626  00EB               	movwf	___fladd@aexp
 16371  0627  1BE0               	btfsc	___fladd@a+2,7
 16372  0628  146B               	bsf	___fladd@aexp,0
 16373  0629  086B               	movf	___fladd@aexp,w
 16374  062A  1903               	btfsc	3,2
 16375  062B  2E3A               	goto	l7216
 16376  062C  0A6B               	incf	___fladd@aexp,w
 16377  062D  1D03               	btfss	3,2
 16378  062E  2E37               	goto	l7212
 16379  062F  3000               	movlw	0
 16380  0630  00E1               	movwf	___fladd@a+3
 16381  0631  3000               	movlw	0
 16382  0632  00E0               	movwf	___fladd@a+2
 16383  0633  3000               	movlw	0
 16384  0634  00DF               	movwf	___fladd@a+1
 16385  0635  3000               	movlw	0
 16386  0636  00DE               	movwf	___fladd@a
 16387  0637                     l7212:	
 16388  0637  17E0               	bsf	___fladd@a+2,7
 16389  0638  01E1               	clrf	___fladd@a+3
 16390  0639  2E42               	goto	l1148
 16391  063A                     l7216:	
 16392  063A  3000               	movlw	0
 16393  063B  00E1               	movwf	___fladd@a+3
 16394  063C  3000               	movlw	0
 16395  063D  00E0               	movwf	___fladd@a+2
 16396  063E  3000               	movlw	0
 16397  063F  00DF               	movwf	___fladd@a+1
 16398  0640  3000               	movlw	0
 16399  0641  00DE               	movwf	___fladd@a
 16400  0642                     l1148:	
 16401  0642  086C               	movf	___fladd@bexp,w
 16402  0643  026B               	subwf	___fladd@aexp,w
 16403  0644  1803               	skipnc
 16404  0645  2E88               	goto	l7252
 16405  0646  1F6A               	btfss	___fladd@signs,6
 16406  0647  2E4C               	goto	l7222
 16407  0648  3080               	movlw	128
 16408  0649  00E2               	movwf	??___fladd
 16409  064A  0862               	movf	??___fladd,w
 16410  064B  06EA               	xorwf	___fladd@signs,f
 16411  064C                     l7222:	
 16412  064C  086C               	movf	___fladd@bexp,w
 16413  064D  00E2               	movwf	??___fladd
 16414  064E  0862               	movf	??___fladd,w
 16415  064F  00ED               	movwf	___fladd@grs
 16416  0650  086B               	movf	___fladd@aexp,w
 16417  0651  00E2               	movwf	??___fladd
 16418  0652  0862               	movf	??___fladd,w
 16419  0653  00EC               	movwf	___fladd@bexp
 16420  0654  086D               	movf	___fladd@grs,w
 16421  0655  00E2               	movwf	??___fladd
 16422  0656  0862               	movf	??___fladd,w
 16423  0657  00EB               	movwf	___fladd@aexp
 16424  0658  085A               	movf	___fladd@b,w
 16425  0659  00E2               	movwf	??___fladd
 16426  065A  0862               	movf	??___fladd,w
 16427  065B  00ED               	movwf	___fladd@grs
 16428  065C  085E               	movf	___fladd@a,w
 16429  065D  00E2               	movwf	??___fladd
 16430  065E  0862               	movf	??___fladd,w
 16431  065F  00DA               	movwf	___fladd@b
 16432  0660  086D               	movf	___fladd@grs,w
 16433  0661  00E2               	movwf	??___fladd
 16434  0662  0862               	movf	??___fladd,w
 16435  0663  00DE               	movwf	___fladd@a
 16436  0664  085B               	movf	___fladd@b+1,w
 16437  0665  00E2               	movwf	??___fladd
 16438  0666  0862               	movf	??___fladd,w
 16439  0667  00ED               	movwf	___fladd@grs
 16440  0668  085F               	movf	___fladd@a+1,w
 16441  0669  00E2               	movwf	??___fladd
 16442  066A  0862               	movf	??___fladd,w
 16443  066B  00DB               	movwf	___fladd@b+1
 16444  066C  086D               	movf	___fladd@grs,w
 16445  066D  00E2               	movwf	??___fladd
 16446  066E  0862               	movf	??___fladd,w
 16447  066F  00DF               	movwf	___fladd@a+1
 16448  0670  085C               	movf	___fladd@b+2,w
 16449  0671  00E2               	movwf	??___fladd
 16450  0672  0862               	movf	??___fladd,w
 16451  0673  00ED               	movwf	___fladd@grs
 16452  0674  0860               	movf	___fladd@a+2,w
 16453  0675  00E2               	movwf	??___fladd
 16454  0676  0862               	movf	??___fladd,w
 16455  0677  00DC               	movwf	___fladd@b+2
 16456  0678  086D               	movf	___fladd@grs,w
 16457  0679  00E2               	movwf	??___fladd
 16458  067A  0862               	movf	??___fladd,w
 16459  067B  00E0               	movwf	___fladd@a+2
 16460  067C  085D               	movf	___fladd@b+3,w
 16461  067D  00E2               	movwf	??___fladd
 16462  067E  0862               	movf	??___fladd,w
 16463  067F  00ED               	movwf	___fladd@grs
 16464  0680  0861               	movf	___fladd@a+3,w
 16465  0681  00E2               	movwf	??___fladd
 16466  0682  0862               	movf	??___fladd,w
 16467  0683  00DD               	movwf	___fladd@b+3
 16468  0684  086D               	movf	___fladd@grs,w
 16469  0685  00E2               	movwf	??___fladd
 16470  0686  0862               	movf	??___fladd,w
 16471  0687  00E1               	movwf	___fladd@a+3
 16472  0688                     l7252:	
 16473  0688  01ED               	clrf	___fladd@grs
 16474  0689  086B               	movf	___fladd@aexp,w
 16475  068A  00E2               	movwf	??___fladd
 16476  068B  01E3               	clrf	??___fladd+1
 16477  068C  0863               	movf	??___fladd+1,w
 16478  068D  00E5               	movwf	??___fladd+3
 16479  068E  086C               	movf	___fladd@bexp,w
 16480  068F  0262               	subwf	??___fladd,w
 16481  0690  00E4               	movwf	??___fladd+2
 16482  0691  1C03               	skipc
 16483  0692  03E5               	decf	??___fladd+3,f
 16484  0693  0865               	movf	??___fladd+3,w
 16485  0694  3A80               	xorlw	128
 16486  0695  00E6               	movwf	??___fladd+4
 16487  0696  3080               	movlw	128
 16488  0697  0266               	subwf	??___fladd+4,w
 16489  0698  1D03               	skipz
 16490  0699  2E9C               	goto	u9545
 16491  069A  301A               	movlw	26
 16492  069B  0264               	subwf	??___fladd+2,w
 16493  069C                     u9545:	
 16494  069C  1C03               	skipc
 16495  069D  2ED0               	goto	l7270
 16496  069E  0020               	movlb	0	; select bank0
 16497  069F  085D               	movf	___fladd@b+3,w
 16498  06A0  045C               	iorwf	___fladd@b+2,w
 16499  06A1  045B               	iorwf	___fladd@b+1,w
 16500  06A2  045A               	iorwf	___fladd@b,w
 16501  06A3  1903               	btfsc	3,2
 16502  06A4  2EA7               	goto	u9550
 16503  06A5  3001               	movlw	1
 16504  06A6  2EA8               	goto	u9560
 16505  06A7                     u9550:	
 16506  06A7  3000               	movlw	0
 16507  06A8                     u9560:	
 16508  06A8  00E2               	movwf	??___fladd
 16509  06A9  0862               	movf	??___fladd,w
 16510  06AA  00ED               	movwf	___fladd@grs
 16511  06AB  3000               	movlw	0
 16512  06AC  00DD               	movwf	___fladd@b+3
 16513  06AD  3000               	movlw	0
 16514  06AE  00DC               	movwf	___fladd@b+2
 16515  06AF  3000               	movlw	0
 16516  06B0  00DB               	movwf	___fladd@b+1
 16517  06B1  3000               	movlw	0
 16518  06B2  00DA               	movwf	___fladd@b
 16519  06B3  086B               	movf	___fladd@aexp,w
 16520  06B4  00E2               	movwf	??___fladd
 16521  06B5  0862               	movf	??___fladd,w
 16522  06B6  00EC               	movwf	___fladd@bexp
 16523  06B7  2ED5               	goto	l1152
 16524  06B8                     l1154:	
 16525  06B8  1C6D               	btfss	___fladd@grs,0
 16526  06B9  2EC0               	goto	l7260
 16527  06BA  366D               	lsrf	___fladd@grs,w
 16528  06BB  3801               	iorlw	1
 16529  06BC  00E2               	movwf	??___fladd
 16530  06BD  0862               	movf	??___fladd,w
 16531  06BE  00ED               	movwf	___fladd@grs
 16532  06BF  2EC2               	goto	l7262
 16533  06C0                     l7260:	
 16534  06C0  1003               	clrc
 16535  06C1  0CED               	rrf	___fladd@grs,f
 16536  06C2                     l7262:	
 16537  06C2  185A               	btfsc	___fladd@b,0
 16538  06C3  17ED               	bsf	___fladd@grs,7
 16539  06C4  3001               	movlw	1
 16540  06C5  00E2               	movwf	??___fladd
 16541  06C6                     u9595:	
 16542  06C6  37DD               	asrf	___fladd@b+3,f
 16543  06C7  0CDC               	rrf	___fladd@b+2,f
 16544  06C8  0CDB               	rrf	___fladd@b+1,f
 16545  06C9  0CDA               	rrf	___fladd@b,f
 16546  06CA  0BE2               	decfsz	??___fladd& (0+127),f
 16547  06CB  2EC6               	goto	u9595
 16548  06CC  3001               	movlw	1
 16549  06CD  00E2               	movwf	??___fladd
 16550  06CE  0862               	movf	??___fladd,w
 16551  06CF  07EC               	addwf	___fladd@bexp,f
 16552  06D0                     l7270:	
 16553  06D0  0020               	movlb	0	; select bank0
 16554  06D1  086B               	movf	___fladd@aexp,w
 16555  06D2  026C               	subwf	___fladd@bexp,w
 16556  06D3  1C03               	skipc
 16557  06D4  2EB8               	goto	l1154
 16558  06D5                     l1152:	
 16559  06D5  1B6A               	btfsc	___fladd@signs,6
 16560  06D6  2F06               	goto	l7296
 16561  06D7  086C               	movf	___fladd@bexp,w
 16562  06D8  1D03               	btfss	3,2
 16563  06D9  2EE3               	goto	l7278
 16564  06DA  3000               	movlw	0
 16565  06DB  00DD               	movwf	?___fladd+3
 16566  06DC  3000               	movlw	0
 16567  06DD  00DC               	movwf	?___fladd+2
 16568  06DE  3000               	movlw	0
 16569  06DF  00DB               	movwf	?___fladd+1
 16570  06E0  3000               	movlw	0
 16571  06E1  00DA               	movwf	?___fladd
 16572  06E2  0008               	return
 16573  06E3                     l7278:	
 16574  06E3  085E               	movf	___fladd@a,w
 16575  06E4  07DA               	addwf	___fladd@b,f
 16576  06E5  085F               	movf	___fladd@a+1,w
 16577  06E6  3DDB               	addwfc	___fladd@b+1,f
 16578  06E7  0860               	movf	___fladd@a+2,w
 16579  06E8  3DDC               	addwfc	___fladd@b+2,f
 16580  06E9  0861               	movf	___fladd@a+3,w
 16581  06EA  3DDD               	addwfc	___fladd@b+3,f
 16582  06EB  1C5D               	btfss	___fladd@b+3,0
 16583  06EC  2F80               	goto	l7330
 16584  06ED  1C6D               	btfss	___fladd@grs,0
 16585  06EE  2EF5               	goto	l7286
 16586  06EF  366D               	lsrf	___fladd@grs,w
 16587  06F0  3801               	iorlw	1
 16588  06F1  00E2               	movwf	??___fladd
 16589  06F2  0862               	movf	??___fladd,w
 16590  06F3  00ED               	movwf	___fladd@grs
 16591  06F4  2EF7               	goto	l7288
 16592  06F5                     l7286:	
 16593  06F5  1003               	clrc
 16594  06F6  0CED               	rrf	___fladd@grs,f
 16595  06F7                     l7288:	
 16596  06F7  185A               	btfsc	___fladd@b,0
 16597  06F8  17ED               	bsf	___fladd@grs,7
 16598  06F9  3001               	movlw	1
 16599  06FA  00E2               	movwf	??___fladd
 16600  06FB                     u9665:	
 16601  06FB  37DD               	asrf	___fladd@b+3,f
 16602  06FC  0CDC               	rrf	___fladd@b+2,f
 16603  06FD  0CDB               	rrf	___fladd@b+1,f
 16604  06FE  0CDA               	rrf	___fladd@b,f
 16605  06FF  0BE2               	decfsz	??___fladd& (0+127),f
 16606  0700  2EFB               	goto	u9665
 16607  0701  3001               	movlw	1
 16608  0702  00E2               	movwf	??___fladd
 16609  0703  0862               	movf	??___fladd,w
 16610  0704  07EC               	addwf	___fladd@bexp,f
 16611  0705  2F80               	goto	l7330
 16612  0706                     l7296:	
 16613  0706  085D               	movf	___fladd@b+3,w
 16614  0707  3A80               	xorlw	128
 16615  0708  00E2               	movwf	??___fladd
 16616  0709  0861               	movf	___fladd@a+3,w
 16617  070A  3A80               	xorlw	128
 16618  070B  0262               	subwf	??___fladd,w
 16619  070C  1D03               	skipz
 16620  070D  2F18               	goto	u9673
 16621  070E  0860               	movf	___fladd@a+2,w
 16622  070F  025C               	subwf	___fladd@b+2,w
 16623  0710  1D03               	skipz
 16624  0711  2F18               	goto	u9673
 16625  0712  085F               	movf	___fladd@a+1,w
 16626  0713  025B               	subwf	___fladd@b+1,w
 16627  0714  1D03               	skipz
 16628  0715  2F18               	goto	u9673
 16629  0716  085E               	movf	___fladd@a,w
 16630  0717  025A               	subwf	___fladd@b,w
 16631  0718                     u9673:	
 16632  0718  1803               	skipnc
 16633  0719  2F50               	goto	l7306
 16634  071A  30FF               	movlw	255
 16635  071B  00E2               	movwf	??___fladd
 16636  071C  30FF               	movlw	255
 16637  071D  00E3               	movwf	??___fladd+1
 16638  071E  30FF               	movlw	255
 16639  071F  00E4               	movwf	??___fladd+2
 16640  0720  30FF               	movlw	255
 16641  0721  00E5               	movwf	??___fladd+3
 16642  0722  085A               	movf	___fladd@b,w
 16643  0723  025E               	subwf	___fladd@a,w
 16644  0724  00E6               	movwf	??___fladd+4
 16645  0725  085B               	movf	___fladd@b+1,w
 16646  0726  3B5F               	subwfb	___fladd@a+1,w
 16647  0727  00E7               	movwf	??___fladd+5
 16648  0728  085C               	movf	___fladd@b+2,w
 16649  0729  3B60               	subwfb	___fladd@a+2,w
 16650  072A  00E8               	movwf	??___fladd+6
 16651  072B  085D               	movf	___fladd@b+3,w
 16652  072C  3B61               	subwfb	___fladd@a+3,w
 16653  072D  00E9               	movwf	??___fladd+7
 16654  072E  0866               	movf	??___fladd+4,w
 16655  072F  07E2               	addwf	??___fladd,f
 16656  0730  0867               	movf	??___fladd+5,w
 16657  0731  3DE3               	addwfc	??___fladd+1,f
 16658  0732  0868               	movf	??___fladd+6,w
 16659  0733  3DE4               	addwfc	??___fladd+2,f
 16660  0734  0869               	movf	??___fladd+7,w
 16661  0735  3DE5               	addwfc	??___fladd+3,f
 16662  0736  0865               	movf	??___fladd+3,w
 16663  0737  00DD               	movwf	___fladd@b+3
 16664  0738  0864               	movf	??___fladd+2,w
 16665  0739  00DC               	movwf	___fladd@b+2
 16666  073A  0863               	movf	??___fladd+1,w
 16667  073B  00DB               	movwf	___fladd@b+1
 16668  073C  0862               	movf	??___fladd,w
 16669  073D  00DA               	movwf	___fladd@b
 16670  073E  3080               	movlw	128
 16671  073F  00E2               	movwf	??___fladd
 16672  0740  0862               	movf	??___fladd,w
 16673  0741  06EA               	xorwf	___fladd@signs,f
 16674  0742  09ED               	comf	___fladd@grs,f
 16675  0743  0AED               	incf	___fladd@grs,f
 16676  0744  086D               	movf	___fladd@grs,w
 16677  0745  1D03               	btfss	3,2
 16678  0746  2F58               	goto	l1169
 16679  0747  3001               	movlw	1
 16680  0748  07DA               	addwf	___fladd@b,f
 16681  0749  3000               	movlw	0
 16682  074A  3DDB               	addwfc	___fladd@b+1,f
 16683  074B  3000               	movlw	0
 16684  074C  3DDC               	addwfc	___fladd@b+2,f
 16685  074D  3000               	movlw	0
 16686  074E  3DDD               	addwfc	___fladd@b+3,f
 16687  074F  2F58               	goto	l1169
 16688  0750                     l7306:	
 16689  0750  085E               	movf	___fladd@a,w
 16690  0751  02DA               	subwf	___fladd@b,f
 16691  0752  085F               	movf	___fladd@a+1,w
 16692  0753  3BDB               	subwfb	___fladd@b+1,f
 16693  0754  0860               	movf	___fladd@a+2,w
 16694  0755  3BDC               	subwfb	___fladd@b+2,f
 16695  0756  0861               	movf	___fladd@a+3,w
 16696  0757  3BDD               	subwfb	___fladd@b+3,f
 16697  0758                     l1169:	
 16698  0758  085D               	movf	___fladd@b+3,w
 16699  0759  045C               	iorwf	___fladd@b+2,w
 16700  075A  045B               	iorwf	___fladd@b+1,w
 16701  075B  045A               	iorwf	___fladd@b,w
 16702  075C  1D03               	skipz
 16703  075D  2F7E               	goto	l7328
 16704  075E  086D               	movf	___fladd@grs,w
 16705  075F  1D03               	btfss	3,2
 16706  0760  2F7E               	goto	l7328
 16707  0761  3000               	movlw	0
 16708  0762  00DD               	movwf	?___fladd+3
 16709  0763  3000               	movlw	0
 16710  0764  00DC               	movwf	?___fladd+2
 16711  0765  3000               	movlw	0
 16712  0766  00DB               	movwf	?___fladd+1
 16713  0767  3000               	movlw	0
 16714  0768  00DA               	movwf	?___fladd
 16715  0769  0008               	return
 16716  076A                     l7314:	
 16717  076A  3001               	movlw	1
 16718  076B                     u9715:	
 16719  076B  35DA               	lslf	___fladd@b,f
 16720  076C  0DDB               	rlf	___fladd@b+1,f
 16721  076D  0DDC               	rlf	___fladd@b+2,f
 16722  076E  0DDD               	rlf	___fladd@b+3,f
 16723  076F  0B89               	decfsz	9,f
 16724  0770  2F6B               	goto	u9715
 16725  0771  1BED               	btfsc	___fladd@grs,7
 16726  0772  145A               	bsf	___fladd@b,0
 16727  0773  1C6D               	btfss	___fladd@grs,0
 16728  0774  2F77               	goto	l7322
 16729  0775  1403               	setc
 16730  0776  2F78               	goto	L4
 16731  0777                     l7322:	
 16732  0777  1003               	clrc
 16733  0778                     L4:	
 16734  0778  0DED               	rlf	___fladd@grs,f
 16735  0779  086C               	movf	___fladd@bexp,w
 16736  077A  1903               	btfsc	3,2
 16737  077B  2F7E               	goto	l7328
 16738  077C  3001               	movlw	1
 16739  077D  02EC               	subwf	___fladd@bexp,f
 16740  077E                     l7328:	
 16741  077E  1FDC               	btfss	___fladd@b+2,7
 16742  077F  2F6A               	goto	l7314
 16743  0780                     l7330:	
 16744  0780  01EB               	clrf	___fladd@aexp
 16745  0781  1FED               	btfss	___fladd@grs,7
 16746  0782  2F8B               	goto	l7340
 16747  0783  086D               	movf	___fladd@grs,w
 16748  0784  397F               	andlw	127
 16749  0785  1903               	btfsc	3,2
 16750  0786  185A               	btfsc	___fladd@b,0
 16751  0787  2F89               	goto	l7336
 16752  0788  2F8B               	goto	l7340
 16753  0789                     l7336:	
 16754  0789  01EB               	clrf	___fladd@aexp
 16755  078A  0AEB               	incf	___fladd@aexp,f
 16756  078B                     l7340:	
 16757  078B  086B               	movf	___fladd@aexp,w
 16758  078C  1903               	btfsc	3,2
 16759  078D  2FB7               	goto	l1182
 16760  078E  3001               	movlw	1
 16761  078F  07DA               	addwf	___fladd@b,f
 16762  0790  3000               	movlw	0
 16763  0791  3DDB               	addwfc	___fladd@b+1,f
 16764  0792  3000               	movlw	0
 16765  0793  3DDC               	addwfc	___fladd@b+2,f
 16766  0794  3000               	movlw	0
 16767  0795  3DDD               	addwfc	___fladd@b+3,f
 16768  0796  1C5D               	btfss	___fladd@b+3,0
 16769  0797  2FB7               	goto	l1182
 16770  0798  085A               	movf	___fladd@b,w
 16771  0799  00E2               	movwf	??___fladd
 16772  079A  085B               	movf	___fladd@b+1,w
 16773  079B  00E3               	movwf	??___fladd+1
 16774  079C  085C               	movf	___fladd@b+2,w
 16775  079D  00E4               	movwf	??___fladd+2
 16776  079E  085D               	movf	___fladd@b+3,w
 16777  079F  00E5               	movwf	??___fladd+3
 16778  07A0  3001               	movlw	1
 16779  07A1  00E6               	movwf	??___fladd+4
 16780  07A2                     u9815:	
 16781  07A2  37E5               	asrf	??___fladd+3,f
 16782  07A3  0CE4               	rrf	??___fladd+2,f
 16783  07A4  0CE3               	rrf	??___fladd+1,f
 16784  07A5  0CE2               	rrf	??___fladd,f
 16785  07A6  0BE6               	decfsz	??___fladd+4,f
 16786  07A7  2FA2               	goto	u9815
 16787  07A8  0865               	movf	??___fladd+3,w
 16788  07A9  00DD               	movwf	___fladd@b+3
 16789  07AA  0864               	movf	??___fladd+2,w
 16790  07AB  00DC               	movwf	___fladd@b+2
 16791  07AC  0863               	movf	??___fladd+1,w
 16792  07AD  00DB               	movwf	___fladd@b+1
 16793  07AE  0862               	movf	??___fladd,w
 16794  07AF  00DA               	movwf	___fladd@b
 16795  07B0  0A6C               	incf	___fladd@bexp,w
 16796  07B1  1903               	btfsc	3,2
 16797  07B2  2FB7               	goto	l1182
 16798  07B3  3001               	movlw	1
 16799  07B4  00E2               	movwf	??___fladd
 16800  07B5  0862               	movf	??___fladd,w
 16801  07B6  07EC               	addwf	___fladd@bexp,f
 16802  07B7                     l1182:	
 16803  07B7  0A6C               	incf	___fladd@bexp,w
 16804  07B8  1D03               	btfss	3,2
 16805  07B9  086C               	movf	___fladd@bexp,w
 16806  07BA  1D03               	btfss	3,2
 16807  07BB  2FC7               	goto	l7358
 16808  07BC  3000               	movlw	0
 16809  07BD  00DD               	movwf	___fladd@b+3
 16810  07BE  3000               	movlw	0
 16811  07BF  00DC               	movwf	___fladd@b+2
 16812  07C0  3000               	movlw	0
 16813  07C1  00DB               	movwf	___fladd@b+1
 16814  07C2  3000               	movlw	0
 16815  07C3  00DA               	movwf	___fladd@b
 16816  07C4  086C               	movf	___fladd@bexp,w
 16817  07C5  1903               	btfsc	3,2
 16818  07C6  01EA               	clrf	___fladd@signs
 16819  07C7                     l7358:	
 16820  07C7  1C6C               	btfss	___fladd@bexp,0
 16821  07C8  2FCB               	goto	l7362
 16822  07C9  17DC               	bsf	___fladd@b+2,7
 16823  07CA  2FCF               	goto	l1190
 16824  07CB                     l7362:	
 16825  07CB  307F               	movlw	127
 16826  07CC  00E2               	movwf	??___fladd
 16827  07CD  0862               	movf	??___fladd,w
 16828  07CE  05DC               	andwf	___fladd@b+2,f
 16829  07CF                     l1190:	
 16830  07CF  366C               	lsrf	___fladd@bexp,w
 16831  07D0  00E2               	movwf	??___fladd
 16832  07D1  0862               	movf	??___fladd,w
 16833  07D2  00DD               	movwf	___fladd@b+3
 16834  07D3  1FEA               	btfss	___fladd@signs,7
 16835  07D4  0008               	return
 16836  07D5  17DD               	bsf	___fladd@b+3,7
 16837  07D6  0008               	return
 16838  07D7                     __end_of___fladd:	
 16839                           
 16840                           	psect	text53
 16841  2E77                     __ptext53:	
 16842 ;; *************** function _updateCurrent *****************
 16843 ;; Defined at:
 16844 ;;		line 186 in file "BQ76920.c"
 16845 ;; Parameters:    Size  Location     Type
 16846 ;;		None
 16847 ;; Auto vars:     Size  Location     Type
 16848 ;;  adcVal          2   21[BANK1 ] int 
 16849 ;;  sys_stat        1    0        struct regSYS_STAT
 16850 ;; Return value:  Size  Location     Type
 16851 ;;                  1    wreg      void 
 16852 ;; Registers used:
 16853 ;;		wreg, status,2, status,0, pclath, cstack
 16854 ;; Tracked objects:
 16855 ;;		On entry : 0/0
 16856 ;;		On exit  : 0/0
 16857 ;;		Unchanged: 0/0
 16858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16860 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16861 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16862 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16863 ;;Total ram usage:        6 bytes
 16864 ;; Hardware stack levels used:    1
 16865 ;; Hardware stack levels required when called:    3
 16866 ;; This function calls:
 16867 ;;		_I2C_writeRegister
 16868 ;;		___fldiv
 16869 ;;		___flmul
 16870 ;;		___flneg
 16871 ;;		___fltol
 16872 ;;		___xxtofl
 16873 ;;		_readRegister
 16874 ;; This function is called by:
 16875 ;;		_AFE_UPDATE
 16876 ;; This function uses a non-reentrant model
 16877 ;;
 16878                           
 16879                           
 16880                           ;psect for function _updateCurrent
 16881  2E77                     _updateCurrent:	
 16882                           
 16883                           ;incstack = 0
 16884                           ; Regs used in _updateCurrent: [wreg+status,2+status,0+pclath+cstack]
 16885  2E77  3018               	movlw	24
 16886  2E78  00F5               	movwf	readRegister@slaveAddress
 16887  2E79  3000               	movlw	0
 16888  2E7A  00F6               	movwf	readRegister@slaveAddress+1
 16889  2E7B  3000               	movlw	0
 16890  2E7C  00F7               	movwf	readRegister@regAddress
 16891  2E7D  00F8               	movwf	readRegister@regAddress+1
 16892  2E7E  31B6  26C7  31AE   	fcall	_readRegister
 16893                           
 16894                           ;BQ76920.c: 193:     adcVal = (readRegister(0x18, 0x32) << 8)| readRegister(0x18, 0x33);
 16895  2E81  3018               	movlw	24
 16896  2E82  00F5               	movwf	readRegister@slaveAddress
 16897  2E83  3000               	movlw	0
 16898  2E84  00F6               	movwf	readRegister@slaveAddress+1
 16899  2E85  3032               	movlw	50
 16900  2E86  00F7               	movwf	readRegister@regAddress
 16901  2E87  3000               	movlw	0
 16902  2E88  00F8               	movwf	readRegister@regAddress+1
 16903  2E89  31B6  26C7  31AE   	fcall	_readRegister
 16904  2E8C  0875               	movf	?_readRegister,w
 16905  2E8D  0021               	movlb	1	; select bank1
 16906  2E8E  00B1               	movwf	??_updateCurrent^(0+128)
 16907  2E8F  0876               	movf	?_readRegister+1,w
 16908  2E90  00B2               	movwf	(??_updateCurrent^(0+128)+1)
 16909  2E91  0831               	movf	??_updateCurrent^(0+128),w
 16910  2E92  00B2               	movwf	(??_updateCurrent^(0+128)+1)
 16911  2E93  01B1               	clrf	??_updateCurrent^(0+128)
 16912  2E94  3018               	movlw	24
 16913  2E95  00F5               	movwf	readRegister@slaveAddress
 16914  2E96  3000               	movlw	0
 16915  2E97  00F6               	movwf	readRegister@slaveAddress+1
 16916  2E98  3033               	movlw	51
 16917  2E99  00F7               	movwf	readRegister@regAddress
 16918  2E9A  3000               	movlw	0
 16919  2E9B  00F8               	movwf	readRegister@regAddress+1
 16920  2E9C  31B6  26C7  31AE   	fcall	_readRegister
 16921  2E9F  0875               	movf	?_readRegister,w
 16922  2EA0  0021               	movlb	1	; select bank1
 16923  2EA1  0431               	iorwf	??_updateCurrent^(0+128),w
 16924  2EA2  00B5               	movwf	updateCurrent@adcVal^(0+128)
 16925  2EA3  0876               	movf	?_readRegister+1,w
 16926  2EA4  0432               	iorwf	(??_updateCurrent+1)^(0+128),w
 16927  2EA5  00B6               	movwf	(updateCurrent@adcVal+1)^(0+128)
 16928                           
 16929                           ;BQ76920.c: 194:     batCurrent = -(adcVal * 8.44 / 5.0);
 16930  2EA6  0835               	movf	updateCurrent@adcVal^(0+128),w
 16931  2EA7  00F1               	movwf	___xxtofl@val
 16932  2EA8  0836               	movf	(updateCurrent@adcVal+1)^(0+128),w
 16933  2EA9  00F2               	movwf	___xxtofl@val+1
 16934  2EAA  0D89               	rlf	9,f
 16935  2EAB  3B89               	subwfb	9,f
 16936  2EAC  0989               	comf	9,f
 16937  2EAD  00F3               	movwf	___xxtofl@val+2
 16938  2EAE  00F4               	movwf	___xxtofl@val+3
 16939  2EAF  3001               	movlw	1
 16940  2EB0  31AB  23E3  31AE   	fcall	___xxtofl
 16941  2EB3  0874               	movf	?___xxtofl+3,w
 16942  2EB4  0020               	movlb	0	; select bank0
 16943  2EB5  00AD               	movwf	___flmul@a+3
 16944  2EB6  0873               	movf	?___xxtofl+2,w
 16945  2EB7  00AC               	movwf	___flmul@a+2
 16946  2EB8  0872               	movf	?___xxtofl+1,w
 16947  2EB9  00AB               	movwf	___flmul@a+1
 16948  2EBA  0871               	movf	?___xxtofl,w
 16949  2EBB  00AA               	movwf	___flmul@a
 16950  2EBC  3041               	movlw	65
 16951  2EBD  00A9               	movwf	___flmul@b+3
 16952  2EBE  3007               	movlw	7
 16953  2EBF  00A8               	movwf	___flmul@b+2
 16954  2EC0  300A               	movlw	10
 16955  2EC1  00A7               	movwf	___flmul@b+1
 16956  2EC2  303D               	movlw	61
 16957  2EC3  00A6               	movwf	___flmul@b
 16958  2EC4  3190  2023  31AE   	fcall	___flmul
 16959  2EC7  0020               	movlb	0	; select bank0
 16960  2EC8  0829               	movf	?___flmul+3,w
 16961  2EC9  00C7               	movwf	___fldiv@b+3
 16962  2ECA  0828               	movf	?___flmul+2,w
 16963  2ECB  00C6               	movwf	___fldiv@b+2
 16964  2ECC  0827               	movf	?___flmul+1,w
 16965  2ECD  00C5               	movwf	___fldiv@b+1
 16966  2ECE  0826               	movf	?___flmul,w
 16967  2ECF  00C4               	movwf	___fldiv@b
 16968  2ED0  3040               	movlw	64
 16969  2ED1  00C3               	movwf	___fldiv@a+3
 16970  2ED2  30A0               	movlw	160
 16971  2ED3  00C2               	movwf	___fldiv@a+2
 16972  2ED4  3000               	movlw	0
 16973  2ED5  00C1               	movwf	___fldiv@a+1
 16974  2ED6  3000               	movlw	0
 16975  2ED7  00C0               	movwf	___fldiv@a
 16976  2ED8  319C  24E2  31AE   	fcall	___fldiv
 16977  2EDB  0020               	movlb	0	; select bank0
 16978  2EDC  0843               	movf	?___fldiv+3,w
 16979  2EDD  00DD               	movwf	___flneg@f1+3
 16980  2EDE  0842               	movf	?___fldiv+2,w
 16981  2EDF  00DC               	movwf	___flneg@f1+2
 16982  2EE0  0841               	movf	?___fldiv+1,w
 16983  2EE1  00DB               	movwf	___flneg@f1+1
 16984  2EE2  0840               	movf	?___fldiv,w
 16985  2EE3  00DA               	movwf	___flneg@f1
 16986  2EE4  31B3  23F2  31AE   	fcall	___flneg
 16987  2EE7  0020               	movlb	0	; select bank0
 16988  2EE8  085D               	movf	?___flneg+3,w
 16989  2EE9  0021               	movlb	1	; select bank1
 16990  2EEA  00AB               	movwf	(___fltol@f1+3)^(0+128)
 16991  2EEB  0020               	movlb	0	; select bank0
 16992  2EEC  085C               	movf	?___flneg+2,w
 16993  2EED  0021               	movlb	1	; select bank1
 16994  2EEE  00AA               	movwf	(___fltol@f1+2)^(0+128)
 16995  2EEF  0020               	movlb	0	; select bank0
 16996  2EF0  085B               	movf	?___flneg+1,w
 16997  2EF1  0021               	movlb	1	; select bank1
 16998  2EF2  00A9               	movwf	(___fltol@f1+1)^(0+128)
 16999  2EF3  0020               	movlb	0	; select bank0
 17000  2EF4  085A               	movf	?___flneg,w
 17001  2EF5  0021               	movlb	1	; select bank1
 17002  2EF6  00A8               	movwf	___fltol@f1^(0+128)
 17003  2EF7  31A9  211D  31AE   	fcall	___fltol
 17004  2EFA  0021               	movlb	1	; select bank1
 17005  2EFB  082B               	movf	(?___fltol+3)^(0+128),w
 17006  2EFC  0023               	movlb	3	; select bank3
 17007  2EFD  00BD               	movwf	(_batCurrent+3)^(0+384)
 17008  2EFE  0021               	movlb	1	; select bank1
 17009  2EFF  082A               	movf	(?___fltol+2)^(0+128),w
 17010  2F00  0023               	movlb	3	; select bank3
 17011  2F01  00BC               	movwf	(_batCurrent+2)^(0+384)
 17012  2F02  0021               	movlb	1	; select bank1
 17013  2F03  0829               	movf	(?___fltol+1)^(0+128),w
 17014  2F04  0023               	movlb	3	; select bank3
 17015  2F05  00BB               	movwf	(_batCurrent+1)^(0+384)
 17016  2F06  0021               	movlb	1	; select bank1
 17017  2F07  0828               	movf	?___fltol^(0+128),w
 17018  2F08  0023               	movlb	3	; select bank3
 17019  2F09  00BA               	movwf	_batCurrent^(0+384)
 17020                           
 17021                           ;BQ76920.c: 196:     if (batCurrent > -10 && batCurrent < 10)
 17022  2F0A  1FBD               	btfss	(_batCurrent+3)^(0+384),7
 17023  2F0B  2F16               	goto	l8182
 17024  2F0C  30F7               	movlw	247
 17025  2F0D  023A               	subwf	_batCurrent^(0+384),w
 17026  2F0E  30FF               	movlw	255
 17027  2F0F  3B3B               	subwfb	(_batCurrent+1)^(0+384),w
 17028  2F10  30FF               	movlw	255
 17029  2F11  3B3C               	subwfb	(_batCurrent+2)^(0+384),w
 17030  2F12  30FF               	movlw	255
 17031  2F13  3B3D               	subwfb	(_batCurrent+3)^(0+384),w
 17032  2F14  1C03               	btfss	3,0
 17033  2F15  2F2D               	goto	l8186
 17034  2F16                     l8182:	
 17035  2F16  1BBD               	btfsc	(_batCurrent+3)^(0+384),7
 17036  2F17  2F25               	goto	l8184
 17037  2F18  083D               	movf	(_batCurrent+3)^(0+384),w
 17038  2F19  1D03               	btfss	3,2
 17039  2F1A  2F2D               	goto	l8186
 17040  2F1B  083C               	movf	(_batCurrent+2)^(0+384),w
 17041  2F1C  1D03               	btfss	3,2
 17042  2F1D  2F2D               	goto	l8186
 17043  2F1E  083B               	movf	(_batCurrent+1)^(0+384),w
 17044  2F1F  1D03               	btfss	3,2
 17045  2F20  2F2D               	goto	l8186
 17046  2F21  300A               	movlw	10
 17047  2F22  023A               	subwf	_batCurrent^(0+384),w
 17048  2F23  1803               	btfsc	3,0
 17049  2F24  2F2D               	goto	l8186
 17050  2F25                     l8184:	
 17051                           
 17052                           ;BQ76920.c: 197:     {;BQ76920.c: 198:       batCurrent = 0;
 17053  2F25  3000               	movlw	0
 17054  2F26  00BD               	movwf	(_batCurrent+3)^(0+384)
 17055  2F27  3000               	movlw	0
 17056  2F28  00BC               	movwf	(_batCurrent+2)^(0+384)
 17057  2F29  3000               	movlw	0
 17058  2F2A  00BB               	movwf	(_batCurrent+1)^(0+384)
 17059  2F2B  3000               	movlw	0
 17060  2F2C  00BA               	movwf	_batCurrent^(0+384)
 17061  2F2D                     l8186:	
 17062                           
 17063                           ;BQ76920.c: 201:     I2C_writeRegister(0x18, 0x00, 0x80);
 17064  2F2D  3018               	movlw	24
 17065  2F2E  00F5               	movwf	I2C_writeRegister@slaveAddress
 17066  2F2F  3000               	movlw	0
 17067  2F30  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 17068  2F31  3000               	movlw	0
 17069  2F32  00F7               	movwf	I2C_writeRegister@regAddress
 17070  2F33  00F8               	movwf	I2C_writeRegister@regAddress+1
 17071  2F34  3080               	movlw	128
 17072  2F35  00F9               	movwf	I2C_writeRegister@data
 17073  2F36  3000               	movlw	0
 17074  2F37  00FA               	movwf	I2C_writeRegister@data+1
 17075  2F38  31B5  256D         	fcall	_I2C_writeRegister
 17076  2F3A  0008               	return
 17077  2F3B                     __end_of_updateCurrent:	
 17078                           
 17079                           	psect	text54
 17080  2BE3                     __ptext54:	
 17081 ;; *************** function ___xxtofl *****************
 17082 ;; Defined at:
 17083 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 17084 ;; Parameters:    Size  Location     Type
 17085 ;;  sign            1    wreg     unsigned char 
 17086 ;;  val             4    1[COMMON] long 
 17087 ;; Auto vars:     Size  Location     Type
 17088 ;;  sign            1    0[BANK0 ] unsigned char 
 17089 ;;  arg             4    2[BANK0 ] unsigned long 
 17090 ;;  exp             1    1[BANK0 ] unsigned char 
 17091 ;; Return value:  Size  Location     Type
 17092 ;;                  4    1[COMMON] unsigned char 
 17093 ;; Registers used:
 17094 ;;		wreg, status,2, status,0
 17095 ;; Tracked objects:
 17096 ;;		On entry : 0/0
 17097 ;;		On exit  : 0/0
 17098 ;;		Unchanged: 0/0
 17099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17100 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17101 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17102 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17103 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17104 ;;Total ram usage:       14 bytes
 17105 ;; Hardware stack levels used:    1
 17106 ;; Hardware stack levels required when called:    1
 17107 ;; This function calls:
 17108 ;;		Nothing
 17109 ;; This function is called by:
 17110 ;;		_setShortCircuitProtection
 17111 ;;		_setOverCurrentDischargeProtection
 17112 ;;		_updateCurrent
 17113 ;;		_updateVoltages
 17114 ;;		_updateTemperatures
 17115 ;;		_logf
 17116 ;;		_AFE_getSetShortCircuitCurrent
 17117 ;;		_AFE_getOverCurrentDischargeCurrent
 17118 ;; This function uses a non-reentrant model
 17119 ;;
 17120                           
 17121                           
 17122                           ;psect for function ___xxtofl
 17123  2BE3                     ___xxtofl:	
 17124                           
 17125                           ;incstack = 0
 17126                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 17127                           ;___xxtofl@sign stored from wreg
 17128  2BE3  0020               	movlb	0	; select bank0
 17129  2BE4  00A0               	movwf	___xxtofl@sign
 17130  2BE5  0820               	movf	___xxtofl@sign,w
 17131  2BE6  1D03               	btfss	3,2
 17132  2BE7  1FF4               	btfss	___xxtofl@val+3,7
 17133  2BE8  2BF9               	goto	l7706
 17134  2BE9  0971               	comf	___xxtofl@val,w
 17135  2BEA  00A2               	movwf	___xxtofl@arg
 17136  2BEB  0972               	comf	___xxtofl@val+1,w
 17137  2BEC  00A3               	movwf	___xxtofl@arg+1
 17138  2BED  0973               	comf	___xxtofl@val+2,w
 17139  2BEE  00A4               	movwf	___xxtofl@arg+2
 17140  2BEF  0974               	comf	___xxtofl@val+3,w
 17141  2BF0  00A5               	movwf	___xxtofl@arg+3
 17142  2BF1  0AA2               	incf	___xxtofl@arg,f
 17143  2BF2  1903               	skipnz
 17144  2BF3  0AA3               	incf	___xxtofl@arg+1,f
 17145  2BF4  1903               	skipnz
 17146  2BF5  0AA4               	incf	___xxtofl@arg+2,f
 17147  2BF6  1903               	skipnz
 17148  2BF7  0AA5               	incf	___xxtofl@arg+3,f
 17149  2BF8  2C01               	goto	l1282
 17150  2BF9                     l7706:	
 17151  2BF9  0874               	movf	___xxtofl@val+3,w
 17152  2BFA  00A5               	movwf	___xxtofl@arg+3
 17153  2BFB  0873               	movf	___xxtofl@val+2,w
 17154  2BFC  00A4               	movwf	___xxtofl@arg+2
 17155  2BFD  0872               	movf	___xxtofl@val+1,w
 17156  2BFE  00A3               	movwf	___xxtofl@arg+1
 17157  2BFF  0871               	movf	___xxtofl@val,w
 17158  2C00  00A2               	movwf	___xxtofl@arg
 17159  2C01                     l1282:	
 17160  2C01  0874               	movf	___xxtofl@val+3,w
 17161  2C02  0473               	iorwf	___xxtofl@val+2,w
 17162  2C03  0472               	iorwf	___xxtofl@val+1,w
 17163  2C04  0471               	iorwf	___xxtofl@val,w
 17164  2C05  1D03               	skipz
 17165  2C06  2C10               	goto	l7712
 17166  2C07  3000               	movlw	0
 17167  2C08  00F4               	movwf	?___xxtofl+3
 17168  2C09  3000               	movlw	0
 17169  2C0A  00F3               	movwf	?___xxtofl+2
 17170  2C0B  3000               	movlw	0
 17171  2C0C  00F2               	movwf	?___xxtofl+1
 17172  2C0D  3000               	movlw	0
 17173  2C0E  00F1               	movwf	?___xxtofl
 17174  2C0F  0008               	return
 17175  2C10                     l7712:	
 17176  2C10  3096               	movlw	150
 17177  2C11  00F5               	movwf	??___xxtofl
 17178  2C12  0875               	movf	??___xxtofl,w
 17179  2C13  00A1               	movwf	___xxtofl@exp
 17180  2C14                     l7716:	
 17181  2C14  30FE               	movlw	254
 17182  2C15  0525               	andwf	___xxtofl@arg+3,w
 17183  2C16  1903               	btfsc	3,2
 17184  2C17  2C37               	goto	l1288
 17185  2C18  3001               	movlw	1
 17186  2C19  00F5               	movwf	??___xxtofl
 17187  2C1A  0875               	movf	??___xxtofl,w
 17188  2C1B  07A1               	addwf	___xxtofl@exp,f
 17189  2C1C  3001               	movlw	1
 17190  2C1D                     u10565:	
 17191  2C1D  36A5               	lsrf	___xxtofl@arg+3,f
 17192  2C1E  0CA4               	rrf	___xxtofl@arg+2,f
 17193  2C1F  0CA3               	rrf	___xxtofl@arg+1,f
 17194  2C20  0CA2               	rrf	___xxtofl@arg,f
 17195  2C21  0B89               	decfsz	9,f
 17196  2C22  2C1D               	goto	u10565
 17197  2C23  2C14               	goto	l7716
 17198  2C24                     l7718:	
 17199  2C24  3001               	movlw	1
 17200  2C25  00F5               	movwf	??___xxtofl
 17201  2C26  0875               	movf	??___xxtofl,w
 17202  2C27  07A1               	addwf	___xxtofl@exp,f
 17203  2C28  3001               	movlw	1
 17204  2C29  07A2               	addwf	___xxtofl@arg,f
 17205  2C2A  3000               	movlw	0
 17206  2C2B  3DA3               	addwfc	___xxtofl@arg+1,f
 17207  2C2C  3000               	movlw	0
 17208  2C2D  3DA4               	addwfc	___xxtofl@arg+2,f
 17209  2C2E  3000               	movlw	0
 17210  2C2F  3DA5               	addwfc	___xxtofl@arg+3,f
 17211  2C30  3001               	movlw	1
 17212  2C31                     u10585:	
 17213  2C31  36A5               	lsrf	___xxtofl@arg+3,f
 17214  2C32  0CA4               	rrf	___xxtofl@arg+2,f
 17215  2C33  0CA3               	rrf	___xxtofl@arg+1,f
 17216  2C34  0CA2               	rrf	___xxtofl@arg,f
 17217  2C35  0B89               	decfsz	9,f
 17218  2C36  2C31               	goto	u10585
 17219  2C37                     l1288:	
 17220  2C37  30FF               	movlw	255
 17221  2C38  0525               	andwf	___xxtofl@arg+3,w
 17222  2C39  1903               	btfsc	3,2
 17223  2C3A  2C49               	goto	l7726
 17224  2C3B  2C24               	goto	l7718
 17225  2C3C                     l7728:	
 17226  2C3C  3002               	movlw	2
 17227  2C3D  0221               	subwf	___xxtofl@exp,w
 17228  2C3E  1C03               	btfss	3,0
 17229  2C3F  2C4B               	goto	l1295
 17230  2C40  3001               	movlw	1
 17231  2C41  02A1               	subwf	___xxtofl@exp,f
 17232  2C42  3001               	movlw	1
 17233  2C43                     u10605:	
 17234  2C43  35A2               	lslf	___xxtofl@arg,f
 17235  2C44  0DA3               	rlf	___xxtofl@arg+1,f
 17236  2C45  0DA4               	rlf	___xxtofl@arg+2,f
 17237  2C46  0DA5               	rlf	___xxtofl@arg+3,f
 17238  2C47  0B89               	decfsz	9,f
 17239  2C48  2C43               	goto	u10605
 17240  2C49                     l7726:	
 17241  2C49  1FA4               	btfss	___xxtofl@arg+2,7
 17242  2C4A  2C3C               	goto	l7728
 17243  2C4B                     l1295:	
 17244  2C4B  1821               	btfsc	___xxtofl@exp,0
 17245  2C4C  2C55               	goto	l1296
 17246  2C4D  30FF               	movlw	255
 17247  2C4E  05A2               	andwf	___xxtofl@arg,f
 17248  2C4F  30FF               	movlw	255
 17249  2C50  05A3               	andwf	___xxtofl@arg+1,f
 17250  2C51  307F               	movlw	127
 17251  2C52  05A4               	andwf	___xxtofl@arg+2,f
 17252  2C53  30FF               	movlw	255
 17253  2C54  05A5               	andwf	___xxtofl@arg+3,f
 17254  2C55                     l1296:	
 17255  2C55  1003               	clrc
 17256  2C56  0CA1               	rrf	___xxtofl@exp,f
 17257  2C57  0821               	movf	___xxtofl@exp,w
 17258  2C58  00F5               	movwf	??___xxtofl
 17259  2C59  01F6               	clrf	??___xxtofl+1
 17260  2C5A  01F7               	clrf	??___xxtofl+2
 17261  2C5B  01F8               	clrf	??___xxtofl+3
 17262  2C5C  3018               	movlw	24
 17263  2C5D                     u10645:	
 17264  2C5D  35F5               	lslf	??___xxtofl,f
 17265  2C5E  0DF6               	rlf	??___xxtofl+1,f
 17266  2C5F  0DF7               	rlf	??___xxtofl+2,f
 17267  2C60  0DF8               	rlf	??___xxtofl+3,f
 17268  2C61  0B89               	decfsz	9,f
 17269  2C62  2C5D               	goto	u10645
 17270  2C63  0875               	movf	??___xxtofl,w
 17271  2C64  04A2               	iorwf	___xxtofl@arg,f
 17272  2C65  0876               	movf	??___xxtofl+1,w
 17273  2C66  04A3               	iorwf	___xxtofl@arg+1,f
 17274  2C67  0877               	movf	??___xxtofl+2,w
 17275  2C68  04A4               	iorwf	___xxtofl@arg+2,f
 17276  2C69  0878               	movf	??___xxtofl+3,w
 17277  2C6A  04A5               	iorwf	___xxtofl@arg+3,f
 17278  2C6B  0820               	movf	___xxtofl@sign,w
 17279  2C6C  1D03               	btfss	3,2
 17280  2C6D  1FF4               	btfss	___xxtofl@val+3,7
 17281  2C6E  2C70               	goto	l7740
 17282  2C6F  17A5               	bsf	___xxtofl@arg+3,7
 17283  2C70                     l7740:	
 17284  2C70  0825               	movf	___xxtofl@arg+3,w
 17285  2C71  00F4               	movwf	?___xxtofl+3
 17286  2C72  0824               	movf	___xxtofl@arg+2,w
 17287  2C73  00F3               	movwf	?___xxtofl+2
 17288  2C74  0823               	movf	___xxtofl@arg+1,w
 17289  2C75  00F2               	movwf	?___xxtofl+1
 17290  2C76  0822               	movf	___xxtofl@arg,w
 17291  2C77  00F1               	movwf	?___xxtofl
 17292  2C78  0008               	return
 17293  2C79                     __end_of___xxtofl:	
 17294                           
 17295                           	psect	text55
 17296  291D                     __ptext55:	
 17297 ;; *************** function ___fltol *****************
 17298 ;; Defined at:
 17299 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 17300 ;; Parameters:    Size  Location     Type
 17301 ;;  f1              4    8[BANK1 ] unsigned char 
 17302 ;; Auto vars:     Size  Location     Type
 17303 ;;  exp1            1   11[COMMON] unsigned char 
 17304 ;;  sign1           1   10[COMMON] unsigned char 
 17305 ;; Return value:  Size  Location     Type
 17306 ;;                  4    8[BANK1 ] long 
 17307 ;; Registers used:
 17308 ;;		wreg, status,2, status,0
 17309 ;; Tracked objects:
 17310 ;;		On entry : 0/0
 17311 ;;		On exit  : 0/0
 17312 ;;		Unchanged: 0/0
 17313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17314 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17315 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17316 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17317 ;;      Totals:         2       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17318 ;;Total ram usage:       11 bytes
 17319 ;; Hardware stack levels used:    1
 17320 ;; Hardware stack levels required when called:    1
 17321 ;; This function calls:
 17322 ;;		Nothing
 17323 ;; This function is called by:
 17324 ;;		_updateCurrent
 17325 ;;		_updateVoltages
 17326 ;;		_updateTemperatures
 17327 ;;		_AFE_getSetShortCircuitCurrent
 17328 ;;		_AFE_getOverCurrentDischargeCurrent
 17329 ;; This function uses a non-reentrant model
 17330 ;;
 17331                           
 17332                           
 17333                           ;psect for function ___fltol
 17334  291D                     ___fltol:	
 17335                           
 17336                           ;incstack = 0
 17337                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 17338  291D  1003               	clrc
 17339  291E  0021               	movlb	1	; select bank1
 17340  291F  0D2A               	rlf	(___fltol@f1+2)^(0+128),w
 17341  2920  0D2B               	rlf	(___fltol@f1+3)^(0+128),w
 17342  2921  00AC               	movwf	??___fltol^(0+128)
 17343  2922  082C               	movf	??___fltol^(0+128),w
 17344  2923  00FB               	movwf	___fltol@exp1
 17345  2924  087B               	movf	___fltol@exp1,w
 17346  2925  1D03               	btfss	3,2
 17347  2926  2930               	goto	l7950
 17348  2927                     l7946:	
 17349  2927  3000               	movlw	0
 17350  2928  00AB               	movwf	(?___fltol+3)^(0+128)
 17351  2929  3000               	movlw	0
 17352  292A  00AA               	movwf	(?___fltol+2)^(0+128)
 17353  292B  3000               	movlw	0
 17354  292C  00A9               	movwf	(?___fltol+1)^(0+128)
 17355  292D  3000               	movlw	0
 17356  292E  00A8               	movwf	?___fltol^(0+128)
 17357  292F  0008               	return
 17358  2930                     l7950:	
 17359  2930  0828               	movf	___fltol@f1^(0+128),w
 17360  2931  00AC               	movwf	??___fltol^(0+128)
 17361  2932  0829               	movf	(___fltol@f1+1)^(0+128),w
 17362  2933  00AD               	movwf	(??___fltol^(0+128)+1)
 17363  2934  082A               	movf	(___fltol@f1+2)^(0+128),w
 17364  2935  00AE               	movwf	(??___fltol^(0+128)+2)
 17365  2936  082B               	movf	(___fltol@f1+3)^(0+128),w
 17366  2937  00AF               	movwf	(??___fltol^(0+128)+3)
 17367  2938  301F               	movlw	31
 17368  2939                     u10995:	
 17369  2939  36AF               	lsrf	(??___fltol^(0+128)+3),f
 17370  293A  0CAE               	rrf	(??___fltol^(0+128)+2),f
 17371  293B  0CAD               	rrf	(??___fltol^(0+128)+1),f
 17372  293C  0CAC               	rrf	??___fltol^(0+128),f
 17373  293D  0B89               	decfsz	9,f
 17374  293E  2939               	goto	u10995
 17375  293F  082C               	movf	??___fltol^(0+128),w
 17376  2940  00B0               	movwf	(??___fltol+4)^(0+128)
 17377  2941  0830               	movf	(??___fltol+4)^(0+128),w
 17378  2942  00FA               	movwf	___fltol@sign1
 17379  2943  17AA               	bsf	(___fltol@f1^(0+128)+2),7
 17380  2944  30FF               	movlw	255
 17381  2945  05A8               	andwf	___fltol@f1^(0+128),f
 17382  2946  30FF               	movlw	255
 17383  2947  05A9               	andwf	(___fltol@f1+1)^(0+128),f
 17384  2948  30FF               	movlw	255
 17385  2949  05AA               	andwf	(___fltol@f1+2)^(0+128),f
 17386  294A  3000               	movlw	0
 17387  294B  05AB               	andwf	(___fltol@f1+3)^(0+128),f
 17388  294C  3096               	movlw	150
 17389  294D  02FB               	subwf	___fltol@exp1,f
 17390  294E  1FFB               	btfss	___fltol@exp1,7
 17391  294F  2963               	goto	l7968
 17392  2950  087B               	movf	___fltol@exp1,w
 17393  2951  3A80               	xorlw	128
 17394  2952  3E97               	addlw	151
 17395  2953  1C03               	btfss	3,0
 17396  2954  2927               	goto	l7946
 17397  2955                     l7966:	
 17398  2955  3001               	movlw	1
 17399  2956                     u11025:	
 17400  2956  36AB               	lsrf	(___fltol@f1+3)^(0+128),f
 17401  2957  0CAA               	rrf	(___fltol@f1+2)^(0+128),f
 17402  2958  0CA9               	rrf	(___fltol@f1+1)^(0+128),f
 17403  2959  0CA8               	rrf	___fltol@f1^(0+128),f
 17404  295A  0B89               	decfsz	9,f
 17405  295B  2956               	goto	u11025
 17406  295C  3001               	movlw	1
 17407  295D  00AC               	movwf	??___fltol^(0+128)
 17408  295E  082C               	movf	??___fltol^(0+128),w
 17409  295F  07FB               	addwf	___fltol@exp1,f
 17410  2960  1903               	btfsc	3,2
 17411  2961  2974               	goto	l7976
 17412  2962  2955               	goto	l7966
 17413  2963                     l7968:	
 17414  2963  3020               	movlw	32
 17415  2964  027B               	subwf	___fltol@exp1,w
 17416  2965  1803               	btfsc	3,0
 17417  2966  2927               	goto	l7946
 17418  2967                     l1048:	
 17419  2967  087B               	movf	___fltol@exp1,w
 17420  2968  1903               	btfsc	3,2
 17421  2969  2974               	goto	l7976
 17422  296A  3001               	movlw	1
 17423  296B                     u11055:	
 17424  296B  35A8               	lslf	___fltol@f1^(0+128),f
 17425  296C  0DA9               	rlf	(___fltol@f1+1)^(0+128),f
 17426  296D  0DAA               	rlf	(___fltol@f1+2)^(0+128),f
 17427  296E  0DAB               	rlf	(___fltol@f1+3)^(0+128),f
 17428  296F  0B89               	decfsz	9,f
 17429  2970  296B               	goto	u11055
 17430  2971  3001               	movlw	1
 17431  2972  02FB               	subwf	___fltol@exp1,f
 17432  2973  2967               	goto	l1048
 17433  2974                     l7976:	
 17434  2974  087A               	movf	___fltol@sign1,w
 17435  2975  1903               	btfsc	3,2
 17436  2976  0008               	return
 17437  2977  09A8               	comf	___fltol@f1^(0+128),f
 17438  2978  09A9               	comf	(___fltol@f1+1)^(0+128),f
 17439  2979  09AA               	comf	(___fltol@f1+2)^(0+128),f
 17440  297A  09AB               	comf	(___fltol@f1+3)^(0+128),f
 17441  297B  0AA8               	incf	___fltol@f1^(0+128),f
 17442  297C  1903               	skipnz
 17443  297D  0AA9               	incf	(___fltol@f1+1)^(0+128),f
 17444  297E  1903               	skipnz
 17445  297F  0AAA               	incf	(___fltol@f1+2)^(0+128),f
 17446  2980  1903               	skipnz
 17447  2981  0AAB               	incf	(___fltol@f1+3)^(0+128),f
 17448  2982  0008               	return
 17449  2983                     __end_of___fltol:	
 17450                           
 17451                           	psect	text56
 17452  33F2                     __ptext56:	
 17453 ;; *************** function ___flneg *****************
 17454 ;; Defined at:
 17455 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
 17456 ;; Parameters:    Size  Location     Type
 17457 ;;  f1              4   58[BANK0 ] long 
 17458 ;; Auto vars:     Size  Location     Type
 17459 ;;		None
 17460 ;; Return value:  Size  Location     Type
 17461 ;;                  4   58[BANK0 ] long 
 17462 ;; Registers used:
 17463 ;;		wreg
 17464 ;; Tracked objects:
 17465 ;;		On entry : 0/0
 17466 ;;		On exit  : 0/0
 17467 ;;		Unchanged: 0/0
 17468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17469 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17472 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17473 ;;Total ram usage:        4 bytes
 17474 ;; Hardware stack levels used:    1
 17475 ;; Hardware stack levels required when called:    1
 17476 ;; This function calls:
 17477 ;;		Nothing
 17478 ;; This function is called by:
 17479 ;;		_updateCurrent
 17480 ;; This function uses a non-reentrant model
 17481 ;;
 17482                           
 17483                           
 17484                           ;psect for function ___flneg
 17485  33F2                     ___flneg:	
 17486                           
 17487                           ;incstack = 0
 17488                           ; Regs used in ___flneg: [wreg]
 17489  33F2  0020               	movlb	0	; select bank0
 17490  33F3  085D               	movf	___flneg@f1+3,w
 17491  33F4  045C               	iorwf	___flneg@f1+2,w
 17492  33F5  045B               	iorwf	___flneg@f1+1,w
 17493  33F6  045A               	iorwf	___flneg@f1,w
 17494  33F7  1903               	skipnz
 17495  33F8  0008               	return
 17496  33F9  3080               	movlw	128
 17497  33FA  06DD               	xorwf	___flneg@f1+3,f
 17498  33FB  0008               	return
 17499  33FC                     __end_of___flneg:	
 17500                           
 17501                           	psect	text57
 17502  1023                     __ptext57:	
 17503 ;; *************** function ___flmul *****************
 17504 ;; Defined at:
 17505 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 17506 ;; Parameters:    Size  Location     Type
 17507 ;;  b               4    6[BANK0 ] long 
 17508 ;;  a               4   10[BANK0 ] long 
 17509 ;; Auto vars:     Size  Location     Type
 17510 ;;  prod            4   26[BANK0 ] struct .
 17511 ;;  grs             4   21[BANK0 ] unsigned long 
 17512 ;;  temp            2   30[BANK0 ] struct .
 17513 ;;  bexp            1   25[BANK0 ] unsigned char 
 17514 ;;  aexp            1   20[BANK0 ] unsigned char 
 17515 ;;  sign            1   19[BANK0 ] unsigned char 
 17516 ;; Return value:  Size  Location     Type
 17517 ;;                  4    6[BANK0 ] unsigned char 
 17518 ;; Registers used:
 17519 ;;		wreg, status,2, status,0, pclath, cstack
 17520 ;; Tracked objects:
 17521 ;;		On entry : 0/0
 17522 ;;		On exit  : 0/0
 17523 ;;		Unchanged: 0/0
 17524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17525 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17526 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17527 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17528 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17529 ;;Total ram usage:       26 bytes
 17530 ;; Hardware stack levels used:    1
 17531 ;; Hardware stack levels required when called:    2
 17532 ;; This function calls:
 17533 ;;		__Umul8_16
 17534 ;; This function is called by:
 17535 ;;		_setShortCircuitProtection
 17536 ;;		_setOverCurrentDischargeProtection
 17537 ;;		_updateCurrent
 17538 ;;		_updateVoltages
 17539 ;;		_updateTemperatures
 17540 ;;		_logf
 17541 ;; This function uses a non-reentrant model
 17542 ;;
 17543                           
 17544                           
 17545                           ;psect for function ___flmul
 17546  1023                     ___flmul:	
 17547                           
 17548                           ;incstack = 0
 17549                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 17550  1023  0020               	movlb	0	; select bank0
 17551  1024  0829               	movf	___flmul@b+3,w
 17552  1025  3980               	andlw	128
 17553  1026  00AE               	movwf	??___flmul
 17554  1027  082E               	movf	??___flmul,w
 17555  1028  00B3               	movwf	___flmul@sign
 17556  1029  3529               	lslf	___flmul@b+3,w
 17557  102A  00AE               	movwf	??___flmul
 17558  102B  082E               	movf	??___flmul,w
 17559  102C  00B9               	movwf	___flmul@bexp
 17560  102D  1BA8               	btfsc	___flmul@b+2,7
 17561  102E  1439               	bsf	___flmul@bexp,0
 17562  102F  0839               	movf	___flmul@bexp,w
 17563  1030  1903               	btfsc	3,2
 17564  1031  283F               	goto	l7576
 17565  1032  0A39               	incf	___flmul@bexp,w
 17566  1033  1D03               	btfss	3,2
 17567  1034  283D               	goto	l7574
 17568  1035  3000               	movlw	0
 17569  1036  00A9               	movwf	___flmul@b+3
 17570  1037  3000               	movlw	0
 17571  1038  00A8               	movwf	___flmul@b+2
 17572  1039  3000               	movlw	0
 17573  103A  00A7               	movwf	___flmul@b+1
 17574  103B  3000               	movlw	0
 17575  103C  00A6               	movwf	___flmul@b
 17576  103D                     l7574:	
 17577  103D  17A8               	bsf	___flmul@b+2,7
 17578  103E  2847               	goto	l7578
 17579  103F                     l7576:	
 17580  103F  3000               	movlw	0
 17581  1040  00A9               	movwf	___flmul@b+3
 17582  1041  3000               	movlw	0
 17583  1042  00A8               	movwf	___flmul@b+2
 17584  1043  3000               	movlw	0
 17585  1044  00A7               	movwf	___flmul@b+1
 17586  1045  3000               	movlw	0
 17587  1046  00A6               	movwf	___flmul@b
 17588  1047                     l7578:	
 17589  1047  082D               	movf	___flmul@a+3,w
 17590  1048  3980               	andlw	128
 17591  1049  00AE               	movwf	??___flmul
 17592  104A  082E               	movf	??___flmul,w
 17593  104B  06B3               	xorwf	___flmul@sign,f
 17594  104C  352D               	lslf	___flmul@a+3,w
 17595  104D  00AE               	movwf	??___flmul
 17596  104E  082E               	movf	??___flmul,w
 17597  104F  00B4               	movwf	___flmul@aexp
 17598  1050  1BAC               	btfsc	___flmul@a+2,7
 17599  1051  1434               	bsf	___flmul@aexp,0
 17600  1052  0834               	movf	___flmul@aexp,w
 17601  1053  1903               	btfsc	3,2
 17602  1054  2862               	goto	l7594
 17603  1055  0A34               	incf	___flmul@aexp,w
 17604  1056  1D03               	btfss	3,2
 17605  1057  2860               	goto	l7592
 17606  1058  3000               	movlw	0
 17607  1059  00AD               	movwf	___flmul@a+3
 17608  105A  3000               	movlw	0
 17609  105B  00AC               	movwf	___flmul@a+2
 17610  105C  3000               	movlw	0
 17611  105D  00AB               	movwf	___flmul@a+1
 17612  105E  3000               	movlw	0
 17613  105F  00AA               	movwf	___flmul@a
 17614  1060                     l7592:	
 17615  1060  17AC               	bsf	___flmul@a+2,7
 17616  1061  286A               	goto	l7596
 17617  1062                     l7594:	
 17618  1062  3000               	movlw	0
 17619  1063  00AD               	movwf	___flmul@a+3
 17620  1064  3000               	movlw	0
 17621  1065  00AC               	movwf	___flmul@a+2
 17622  1066  3000               	movlw	0
 17623  1067  00AB               	movwf	___flmul@a+1
 17624  1068  3000               	movlw	0
 17625  1069  00AA               	movwf	___flmul@a
 17626  106A                     l7596:	
 17627  106A  0834               	movf	___flmul@aexp,w
 17628  106B  1D03               	btfss	3,2
 17629  106C  0839               	movf	___flmul@bexp,w
 17630  106D  1D03               	btfss	3,2
 17631  106E  2878               	goto	l7604
 17632  106F  3000               	movlw	0
 17633  1070  00A9               	movwf	?___flmul+3
 17634  1071  3000               	movlw	0
 17635  1072  00A8               	movwf	?___flmul+2
 17636  1073  3000               	movlw	0
 17637  1074  00A7               	movwf	?___flmul+1
 17638  1075  3000               	movlw	0
 17639  1076  00A6               	movwf	?___flmul
 17640  1077  0008               	return
 17641  1078                     l7604:	
 17642  1078  0826               	movf	___flmul@b,w
 17643  1079  00AE               	movwf	??___flmul
 17644  107A  082E               	movf	??___flmul,w
 17645  107B  00F1               	movwf	__Umul8_16@multiplicand
 17646  107C  082C               	movf	___flmul@a+2,w
 17647  107D  31B5  258B  3190   	fcall	__Umul8_16
 17648  1080  0872               	movf	?__Umul8_16+1,w
 17649  1081  0020               	movlb	0	; select bank0
 17650  1082  00BF               	movwf	___flmul@temp+1
 17651  1083  0871               	movf	?__Umul8_16,w
 17652  1084  00BE               	movwf	___flmul@temp
 17653  1085  083E               	movf	___flmul@temp,w
 17654  1086  00AE               	movwf	??___flmul
 17655  1087  01AF               	clrf	??___flmul+1
 17656  1088  01B0               	clrf	??___flmul+2
 17657  1089  01B1               	clrf	??___flmul+3
 17658  108A  0831               	movf	??___flmul+3,w
 17659  108B  00B8               	movwf	___flmul@grs+3
 17660  108C  0830               	movf	??___flmul+2,w
 17661  108D  00B7               	movwf	___flmul@grs+2
 17662  108E  082F               	movf	??___flmul+1,w
 17663  108F  00B6               	movwf	___flmul@grs+1
 17664  1090  082E               	movf	??___flmul,w
 17665  1091  00B5               	movwf	___flmul@grs
 17666  1092  083F               	movf	___flmul@temp+1,w
 17667  1093  00AE               	movwf	??___flmul
 17668  1094  01AF               	clrf	??___flmul+1
 17669  1095  01B0               	clrf	??___flmul+2
 17670  1096  01B1               	clrf	??___flmul+3
 17671  1097  0831               	movf	??___flmul+3,w
 17672  1098  00BD               	movwf	___flmul@prod+3
 17673  1099  0830               	movf	??___flmul+2,w
 17674  109A  00BC               	movwf	___flmul@prod+2
 17675  109B  082F               	movf	??___flmul+1,w
 17676  109C  00BB               	movwf	___flmul@prod+1
 17677  109D  082E               	movf	??___flmul,w
 17678  109E  00BA               	movwf	___flmul@prod
 17679  109F  0827               	movf	___flmul@b+1,w
 17680  10A0  00AE               	movwf	??___flmul
 17681  10A1  082E               	movf	??___flmul,w
 17682  10A2  00F1               	movwf	__Umul8_16@multiplicand
 17683  10A3  082B               	movf	___flmul@a+1,w
 17684  10A4  31B5  258B  3190   	fcall	__Umul8_16
 17685  10A7  0872               	movf	?__Umul8_16+1,w
 17686  10A8  0020               	movlb	0	; select bank0
 17687  10A9  00BF               	movwf	___flmul@temp+1
 17688  10AA  0871               	movf	?__Umul8_16,w
 17689  10AB  00BE               	movwf	___flmul@temp
 17690  10AC  083E               	movf	___flmul@temp,w
 17691  10AD  00AE               	movwf	??___flmul
 17692  10AE  01AF               	clrf	??___flmul+1
 17693  10AF  01B0               	clrf	??___flmul+2
 17694  10B0  01B1               	clrf	??___flmul+3
 17695  10B1  082E               	movf	??___flmul,w
 17696  10B2  07B5               	addwf	___flmul@grs,f
 17697  10B3  082F               	movf	??___flmul+1,w
 17698  10B4  3DB6               	addwfc	___flmul@grs+1,f
 17699  10B5  0830               	movf	??___flmul+2,w
 17700  10B6  3DB7               	addwfc	___flmul@grs+2,f
 17701  10B7  0831               	movf	??___flmul+3,w
 17702  10B8  3DB8               	addwfc	___flmul@grs+3,f
 17703  10B9  083F               	movf	___flmul@temp+1,w
 17704  10BA  00AE               	movwf	??___flmul
 17705  10BB  01AF               	clrf	??___flmul+1
 17706  10BC  01B0               	clrf	??___flmul+2
 17707  10BD  01B1               	clrf	??___flmul+3
 17708  10BE  082E               	movf	??___flmul,w
 17709  10BF  07BA               	addwf	___flmul@prod,f
 17710  10C0  082F               	movf	??___flmul+1,w
 17711  10C1  3DBB               	addwfc	___flmul@prod+1,f
 17712  10C2  0830               	movf	??___flmul+2,w
 17713  10C3  3DBC               	addwfc	___flmul@prod+2,f
 17714  10C4  0831               	movf	??___flmul+3,w
 17715  10C5  3DBD               	addwfc	___flmul@prod+3,f
 17716  10C6  0828               	movf	___flmul@b+2,w
 17717  10C7  00AE               	movwf	??___flmul
 17718  10C8  082E               	movf	??___flmul,w
 17719  10C9  00F1               	movwf	__Umul8_16@multiplicand
 17720  10CA  082A               	movf	___flmul@a,w
 17721  10CB  31B5  258B  3190   	fcall	__Umul8_16
 17722  10CE  0872               	movf	?__Umul8_16+1,w
 17723  10CF  0020               	movlb	0	; select bank0
 17724  10D0  00BF               	movwf	___flmul@temp+1
 17725  10D1  0871               	movf	?__Umul8_16,w
 17726  10D2  00BE               	movwf	___flmul@temp
 17727  10D3  083E               	movf	___flmul@temp,w
 17728  10D4  00AE               	movwf	??___flmul
 17729  10D5  01AF               	clrf	??___flmul+1
 17730  10D6  01B0               	clrf	??___flmul+2
 17731  10D7  01B1               	clrf	??___flmul+3
 17732  10D8  082E               	movf	??___flmul,w
 17733  10D9  07B5               	addwf	___flmul@grs,f
 17734  10DA  082F               	movf	??___flmul+1,w
 17735  10DB  3DB6               	addwfc	___flmul@grs+1,f
 17736  10DC  0830               	movf	??___flmul+2,w
 17737  10DD  3DB7               	addwfc	___flmul@grs+2,f
 17738  10DE  0831               	movf	??___flmul+3,w
 17739  10DF  3DB8               	addwfc	___flmul@grs+3,f
 17740  10E0  083F               	movf	___flmul@temp+1,w
 17741  10E1  00AE               	movwf	??___flmul
 17742  10E2  01AF               	clrf	??___flmul+1
 17743  10E3  01B0               	clrf	??___flmul+2
 17744  10E4  01B1               	clrf	??___flmul+3
 17745  10E5  082E               	movf	??___flmul,w
 17746  10E6  07BA               	addwf	___flmul@prod,f
 17747  10E7  082F               	movf	??___flmul+1,w
 17748  10E8  3DBB               	addwfc	___flmul@prod+1,f
 17749  10E9  0830               	movf	??___flmul+2,w
 17750  10EA  3DBC               	addwfc	___flmul@prod+2,f
 17751  10EB  0831               	movf	??___flmul+3,w
 17752  10EC  3DBD               	addwfc	___flmul@prod+3,f
 17753  10ED  3008               	movlw	8
 17754  10EE                     u10355:	
 17755  10EE  35B5               	lslf	___flmul@grs,f
 17756  10EF  0DB6               	rlf	___flmul@grs+1,f
 17757  10F0  0DB7               	rlf	___flmul@grs+2,f
 17758  10F1  0DB8               	rlf	___flmul@grs+3,f
 17759  10F2  0B89               	decfsz	9,f
 17760  10F3  28EE               	goto	u10355
 17761  10F4  0827               	movf	___flmul@b+1,w
 17762  10F5  00AE               	movwf	??___flmul
 17763  10F6  082E               	movf	??___flmul,w
 17764  10F7  00F1               	movwf	__Umul8_16@multiplicand
 17765  10F8  082A               	movf	___flmul@a,w
 17766  10F9  31B5  258B  3190   	fcall	__Umul8_16
 17767  10FC  0872               	movf	?__Umul8_16+1,w
 17768  10FD  0020               	movlb	0	; select bank0
 17769  10FE  00BF               	movwf	___flmul@temp+1
 17770  10FF  0871               	movf	?__Umul8_16,w
 17771  1100  00BE               	movwf	___flmul@temp
 17772  1101  083E               	movf	___flmul@temp,w
 17773  1102  07B5               	addwf	___flmul@grs,f
 17774  1103  083F               	movf	___flmul@temp+1,w
 17775  1104  3DB6               	addwfc	___flmul@grs+1,f
 17776  1105  3000               	movlw	0
 17777  1106  3DB7               	addwfc	___flmul@grs+2,f
 17778  1107  3DB8               	addwfc	___flmul@grs+3,f
 17779  1108  0826               	movf	___flmul@b,w
 17780  1109  00AE               	movwf	??___flmul
 17781  110A  082E               	movf	??___flmul,w
 17782  110B  00F1               	movwf	__Umul8_16@multiplicand
 17783  110C  082B               	movf	___flmul@a+1,w
 17784  110D  31B5  258B  3190   	fcall	__Umul8_16
 17785  1110  0872               	movf	?__Umul8_16+1,w
 17786  1111  0020               	movlb	0	; select bank0
 17787  1112  00BF               	movwf	___flmul@temp+1
 17788  1113  0871               	movf	?__Umul8_16,w
 17789  1114  00BE               	movwf	___flmul@temp
 17790  1115  083E               	movf	___flmul@temp,w
 17791  1116  07B5               	addwf	___flmul@grs,f
 17792  1117  083F               	movf	___flmul@temp+1,w
 17793  1118  3DB6               	addwfc	___flmul@grs+1,f
 17794  1119  3000               	movlw	0
 17795  111A  3DB7               	addwfc	___flmul@grs+2,f
 17796  111B  3DB8               	addwfc	___flmul@grs+3,f
 17797  111C  3008               	movlw	8
 17798  111D                     u10365:	
 17799  111D  35B5               	lslf	___flmul@grs,f
 17800  111E  0DB6               	rlf	___flmul@grs+1,f
 17801  111F  0DB7               	rlf	___flmul@grs+2,f
 17802  1120  0DB8               	rlf	___flmul@grs+3,f
 17803  1121  0B89               	decfsz	9,f
 17804  1122  291D               	goto	u10365
 17805  1123  0826               	movf	___flmul@b,w
 17806  1124  00AE               	movwf	??___flmul
 17807  1125  082E               	movf	??___flmul,w
 17808  1126  00F1               	movwf	__Umul8_16@multiplicand
 17809  1127  082A               	movf	___flmul@a,w
 17810  1128  31B5  258B  3190   	fcall	__Umul8_16
 17811  112B  0872               	movf	?__Umul8_16+1,w
 17812  112C  0020               	movlb	0	; select bank0
 17813  112D  00BF               	movwf	___flmul@temp+1
 17814  112E  0871               	movf	?__Umul8_16,w
 17815  112F  00BE               	movwf	___flmul@temp
 17816  1130  083E               	movf	___flmul@temp,w
 17817  1131  07B5               	addwf	___flmul@grs,f
 17818  1132  083F               	movf	___flmul@temp+1,w
 17819  1133  3DB6               	addwfc	___flmul@grs+1,f
 17820  1134  3000               	movlw	0
 17821  1135  3DB7               	addwfc	___flmul@grs+2,f
 17822  1136  3DB8               	addwfc	___flmul@grs+3,f
 17823  1137  0827               	movf	___flmul@b+1,w
 17824  1138  00AE               	movwf	??___flmul
 17825  1139  082E               	movf	??___flmul,w
 17826  113A  00F1               	movwf	__Umul8_16@multiplicand
 17827  113B  082C               	movf	___flmul@a+2,w
 17828  113C  31B5  258B  3190   	fcall	__Umul8_16
 17829  113F  0872               	movf	?__Umul8_16+1,w
 17830  1140  0020               	movlb	0	; select bank0
 17831  1141  00BF               	movwf	___flmul@temp+1
 17832  1142  0871               	movf	?__Umul8_16,w
 17833  1143  00BE               	movwf	___flmul@temp
 17834  1144  083E               	movf	___flmul@temp,w
 17835  1145  07BA               	addwf	___flmul@prod,f
 17836  1146  083F               	movf	___flmul@temp+1,w
 17837  1147  3DBB               	addwfc	___flmul@prod+1,f
 17838  1148  3000               	movlw	0
 17839  1149  3DBC               	addwfc	___flmul@prod+2,f
 17840  114A  3DBD               	addwfc	___flmul@prod+3,f
 17841  114B  0828               	movf	___flmul@b+2,w
 17842  114C  00AE               	movwf	??___flmul
 17843  114D  082E               	movf	??___flmul,w
 17844  114E  00F1               	movwf	__Umul8_16@multiplicand
 17845  114F  082B               	movf	___flmul@a+1,w
 17846  1150  31B5  258B  3190   	fcall	__Umul8_16
 17847  1153  0872               	movf	?__Umul8_16+1,w
 17848  1154  0020               	movlb	0	; select bank0
 17849  1155  00BF               	movwf	___flmul@temp+1
 17850  1156  0871               	movf	?__Umul8_16,w
 17851  1157  00BE               	movwf	___flmul@temp
 17852  1158  083E               	movf	___flmul@temp,w
 17853  1159  07BA               	addwf	___flmul@prod,f
 17854  115A  083F               	movf	___flmul@temp+1,w
 17855  115B  3DBB               	addwfc	___flmul@prod+1,f
 17856  115C  3000               	movlw	0
 17857  115D  3DBC               	addwfc	___flmul@prod+2,f
 17858  115E  3DBD               	addwfc	___flmul@prod+3,f
 17859  115F  0828               	movf	___flmul@b+2,w
 17860  1160  00AE               	movwf	??___flmul
 17861  1161  082E               	movf	??___flmul,w
 17862  1162  00F1               	movwf	__Umul8_16@multiplicand
 17863  1163  082C               	movf	___flmul@a+2,w
 17864  1164  31B5  258B  3190   	fcall	__Umul8_16
 17865  1167  0872               	movf	?__Umul8_16+1,w
 17866  1168  0020               	movlb	0	; select bank0
 17867  1169  00BF               	movwf	___flmul@temp+1
 17868  116A  0871               	movf	?__Umul8_16,w
 17869  116B  00BE               	movwf	___flmul@temp
 17870  116C  083E               	movf	___flmul@temp,w
 17871  116D  00AE               	movwf	??___flmul
 17872  116E  083F               	movf	___flmul@temp+1,w
 17873  116F  00AF               	movwf	??___flmul+1
 17874  1170  01B0               	clrf	??___flmul+2
 17875  1171  01B1               	clrf	??___flmul+3
 17876  1172  3008               	movlw	8
 17877  1173                     u10375:	
 17878  1173  35AE               	lslf	??___flmul,f
 17879  1174  0DAF               	rlf	??___flmul+1,f
 17880  1175  0DB0               	rlf	??___flmul+2,f
 17881  1176  0DB1               	rlf	??___flmul+3,f
 17882  1177  0B89               	decfsz	9,f
 17883  1178  2973               	goto	u10375
 17884  1179  082E               	movf	??___flmul,w
 17885  117A  07BA               	addwf	___flmul@prod,f
 17886  117B  082F               	movf	??___flmul+1,w
 17887  117C  3DBB               	addwfc	___flmul@prod+1,f
 17888  117D  0830               	movf	??___flmul+2,w
 17889  117E  3DBC               	addwfc	___flmul@prod+2,f
 17890  117F  0831               	movf	??___flmul+3,w
 17891  1180  3DBD               	addwfc	___flmul@prod+3,f
 17892  1181  0835               	movf	___flmul@grs,w
 17893  1182  00AE               	movwf	??___flmul
 17894  1183  0836               	movf	___flmul@grs+1,w
 17895  1184  00AF               	movwf	??___flmul+1
 17896  1185  0837               	movf	___flmul@grs+2,w
 17897  1186  00B0               	movwf	??___flmul+2
 17898  1187  0838               	movf	___flmul@grs+3,w
 17899  1188  00B1               	movwf	??___flmul+3
 17900  1189  3018               	movlw	24
 17901  118A                     u10385:	
 17902  118A  36B1               	lsrf	??___flmul+3,f
 17903  118B  0CB0               	rrf	??___flmul+2,f
 17904  118C  0CAF               	rrf	??___flmul+1,f
 17905  118D  0CAE               	rrf	??___flmul,f
 17906  118E  0B89               	decfsz	9,f
 17907  118F  298A               	goto	u10385
 17908  1190  082E               	movf	??___flmul,w
 17909  1191  07BA               	addwf	___flmul@prod,f
 17910  1192  082F               	movf	??___flmul+1,w
 17911  1193  3DBB               	addwfc	___flmul@prod+1,f
 17912  1194  0830               	movf	??___flmul+2,w
 17913  1195  3DBC               	addwfc	___flmul@prod+2,f
 17914  1196  0831               	movf	??___flmul+3,w
 17915  1197  3DBD               	addwfc	___flmul@prod+3,f
 17916  1198  3008               	movlw	8
 17917  1199                     u10395:	
 17918  1199  35B5               	lslf	___flmul@grs,f
 17919  119A  0DB6               	rlf	___flmul@grs+1,f
 17920  119B  0DB7               	rlf	___flmul@grs+2,f
 17921  119C  0DB8               	rlf	___flmul@grs+3,f
 17922  119D  0B89               	decfsz	9,f
 17923  119E  2999               	goto	u10395
 17924  119F  0839               	movf	___flmul@bexp,w
 17925  11A0  0734               	addwf	___flmul@aexp,w
 17926  11A1  00AE               	movwf	??___flmul
 17927  11A2  01AF               	clrf	??___flmul+1
 17928  11A3  0DAF               	rlf	??___flmul+1,f
 17929  11A4  082E               	movf	??___flmul,w
 17930  11A5  3E82               	addlw	130
 17931  11A6  00BE               	movwf	___flmul@temp
 17932  11A7  30FF               	movlw	255
 17933  11A8  3D2F               	addwfc	??___flmul+1,w
 17934  11A9  00BF               	movwf	___flmul@temp+1
 17935  11AA                     l7656:	
 17936  11AA  1BBC               	btfsc	___flmul@prod+2,7
 17937  11AB  29C1               	goto	l7658
 17938  11AC  3001               	movlw	1
 17939  11AD                     u10405:	
 17940  11AD  35BA               	lslf	___flmul@prod,f
 17941  11AE  0DBB               	rlf	___flmul@prod+1,f
 17942  11AF  0DBC               	rlf	___flmul@prod+2,f
 17943  11B0  0DBD               	rlf	___flmul@prod+3,f
 17944  11B1  0B89               	decfsz	9,f
 17945  11B2  29AD               	goto	u10405
 17946  11B3  1BB8               	btfsc	___flmul@grs+3,7
 17947  11B4  143A               	bsf	___flmul@prod,0
 17948  11B5  3001               	movlw	1
 17949  11B6                     u10425:	
 17950  11B6  35B5               	lslf	___flmul@grs,f
 17951  11B7  0DB6               	rlf	___flmul@grs+1,f
 17952  11B8  0DB7               	rlf	___flmul@grs+2,f
 17953  11B9  0DB8               	rlf	___flmul@grs+3,f
 17954  11BA  0B89               	decfsz	9,f
 17955  11BB  29B6               	goto	u10425
 17956  11BC  30FF               	movlw	255
 17957  11BD  07BE               	addwf	___flmul@temp,f
 17958  11BE  30FF               	movlw	255
 17959  11BF  3DBF               	addwfc	___flmul@temp+1,f
 17960  11C0  29AA               	goto	l7656
 17961  11C1                     l7658:	
 17962  11C1  01B4               	clrf	___flmul@aexp
 17963  11C2  1FB8               	btfss	___flmul@grs+3,7
 17964  11C3  29DA               	goto	l7668
 17965  11C4  30FF               	movlw	255
 17966  11C5  0535               	andwf	___flmul@grs,w
 17967  11C6  00AE               	movwf	??___flmul
 17968  11C7  30FF               	movlw	255
 17969  11C8  0536               	andwf	___flmul@grs+1,w
 17970  11C9  00AF               	movwf	??___flmul+1
 17971  11CA  30FF               	movlw	255
 17972  11CB  0537               	andwf	___flmul@grs+2,w
 17973  11CC  00B0               	movwf	??___flmul+2
 17974  11CD  307F               	movlw	127
 17975  11CE  0538               	andwf	___flmul@grs+3,w
 17976  11CF  00B1               	movwf	??___flmul+3
 17977  11D0  0831               	movf	??___flmul+3,w
 17978  11D1  0430               	iorwf	??___flmul+2,w
 17979  11D2  042F               	iorwf	??___flmul+1,w
 17980  11D3  042E               	iorwf	??___flmul,w
 17981  11D4  1903               	skipnz
 17982  11D5  183A               	btfsc	___flmul@prod,0
 17983  11D6  29D8               	goto	l7664
 17984  11D7  29DA               	goto	l7668
 17985  11D8                     l7664:	
 17986  11D8  01B4               	clrf	___flmul@aexp
 17987  11D9  0AB4               	incf	___flmul@aexp,f
 17988  11DA                     l7668:	
 17989  11DA  0834               	movf	___flmul@aexp,w
 17990  11DB  1903               	btfsc	3,2
 17991  11DC  2A03               	goto	l7678
 17992  11DD  3001               	movlw	1
 17993  11DE  07BA               	addwf	___flmul@prod,f
 17994  11DF  3000               	movlw	0
 17995  11E0  3DBB               	addwfc	___flmul@prod+1,f
 17996  11E1  3000               	movlw	0
 17997  11E2  3DBC               	addwfc	___flmul@prod+2,f
 17998  11E3  3000               	movlw	0
 17999  11E4  3DBD               	addwfc	___flmul@prod+3,f
 18000  11E5  1C3D               	btfss	___flmul@prod+3,0
 18001  11E6  2A03               	goto	l7678
 18002  11E7  083A               	movf	___flmul@prod,w
 18003  11E8  00AE               	movwf	??___flmul
 18004  11E9  083B               	movf	___flmul@prod+1,w
 18005  11EA  00AF               	movwf	??___flmul+1
 18006  11EB  083C               	movf	___flmul@prod+2,w
 18007  11EC  00B0               	movwf	??___flmul+2
 18008  11ED  083D               	movf	___flmul@prod+3,w
 18009  11EE  00B1               	movwf	??___flmul+3
 18010  11EF  3001               	movlw	1
 18011  11F0  00B2               	movwf	??___flmul+4
 18012  11F1                     u10495:	
 18013  11F1  37B1               	asrf	??___flmul+3,f
 18014  11F2  0CB0               	rrf	??___flmul+2,f
 18015  11F3  0CAF               	rrf	??___flmul+1,f
 18016  11F4  0CAE               	rrf	??___flmul,f
 18017  11F5  0BB2               	decfsz	??___flmul+4,f
 18018  11F6  29F1               	goto	u10495
 18019  11F7  0831               	movf	??___flmul+3,w
 18020  11F8  00BD               	movwf	___flmul@prod+3
 18021  11F9  0830               	movf	??___flmul+2,w
 18022  11FA  00BC               	movwf	___flmul@prod+2
 18023  11FB  082F               	movf	??___flmul+1,w
 18024  11FC  00BB               	movwf	___flmul@prod+1
 18025  11FD  082E               	movf	??___flmul,w
 18026  11FE  00BA               	movwf	___flmul@prod
 18027  11FF  3001               	movlw	1
 18028  1200  07BE               	addwf	___flmul@temp,f
 18029  1201  3000               	movlw	0
 18030  1202  3DBF               	addwfc	___flmul@temp+1,f
 18031  1203                     l7678:	
 18032  1203  083F               	movf	___flmul@temp+1,w
 18033  1204  3A80               	xorlw	128
 18034  1205  00AE               	movwf	??___flmul
 18035  1206  3080               	movlw	128
 18036  1207  022E               	subwf	??___flmul,w
 18037  1208  1D03               	skipz
 18038  1209  2A0C               	goto	u10505
 18039  120A  30FF               	movlw	255
 18040  120B  023E               	subwf	___flmul@temp,w
 18041  120C                     u10505:	
 18042  120C  1C03               	skipc
 18043  120D  2A18               	goto	l7682
 18044  120E  307F               	movlw	127
 18045  120F  0020               	movlb	0	; select bank0
 18046  1210  00BD               	movwf	___flmul@prod+3
 18047  1211  3080               	movlw	128
 18048  1212  00BC               	movwf	___flmul@prod+2
 18049  1213  3000               	movlw	0
 18050  1214  00BB               	movwf	___flmul@prod+1
 18051  1215  3000               	movlw	0
 18052  1216  00BA               	movwf	___flmul@prod
 18053  1217  2A42               	goto	l1256
 18054  1218                     l7682:	
 18055  1218  0020               	movlb	0	; select bank0
 18056  1219  083F               	movf	___flmul@temp+1,w
 18057  121A  3A80               	xorlw	128
 18058  121B  00AE               	movwf	??___flmul
 18059  121C  3080               	movlw	128
 18060  121D  022E               	subwf	??___flmul,w
 18061  121E  1D03               	skipz
 18062  121F  2A22               	goto	u10515
 18063  1220  3001               	movlw	1
 18064  1221  023E               	subwf	___flmul@temp,w
 18065  1222                     u10515:	
 18066  1222  1803               	skipnc
 18067  1223  2A2F               	goto	l7688
 18068  1224  3000               	movlw	0
 18069  1225  0020               	movlb	0	; select bank0
 18070  1226  00BD               	movwf	___flmul@prod+3
 18071  1227  3000               	movlw	0
 18072  1228  00BC               	movwf	___flmul@prod+2
 18073  1229  3000               	movlw	0
 18074  122A  00BB               	movwf	___flmul@prod+1
 18075  122B  3000               	movlw	0
 18076  122C  00BA               	movwf	___flmul@prod
 18077  122D  01B3               	clrf	___flmul@sign
 18078  122E  2A42               	goto	l1256
 18079  122F                     l7688:	
 18080  122F  0020               	movlb	0	; select bank0
 18081  1230  083E               	movf	___flmul@temp,w
 18082  1231  00AE               	movwf	??___flmul
 18083  1232  082E               	movf	??___flmul,w
 18084  1233  00B9               	movwf	___flmul@bexp
 18085  1234  30FF               	movlw	255
 18086  1235  05BA               	andwf	___flmul@prod,f
 18087  1236  30FF               	movlw	255
 18088  1237  05BB               	andwf	___flmul@prod+1,f
 18089  1238  307F               	movlw	127
 18090  1239  05BC               	andwf	___flmul@prod+2,f
 18091  123A  3000               	movlw	0
 18092  123B  05BD               	andwf	___flmul@prod+3,f
 18093  123C  1839               	btfsc	___flmul@bexp,0
 18094  123D  17BC               	bsf	___flmul@prod+2,7
 18095  123E  3639               	lsrf	___flmul@bexp,w
 18096  123F  00AE               	movwf	??___flmul
 18097  1240  082E               	movf	??___flmul,w
 18098  1241  00BD               	movwf	___flmul@prod+3
 18099  1242                     l1256:	
 18100  1242  0833               	movf	___flmul@sign,w
 18101  1243  00AE               	movwf	??___flmul
 18102  1244  082E               	movf	??___flmul,w
 18103  1245  04BD               	iorwf	___flmul@prod+3,f
 18104  1246  083D               	movf	___flmul@prod+3,w
 18105  1247  00A9               	movwf	?___flmul+3
 18106  1248  083C               	movf	___flmul@prod+2,w
 18107  1249  00A8               	movwf	?___flmul+2
 18108  124A  083B               	movf	___flmul@prod+1,w
 18109  124B  00A7               	movwf	?___flmul+1
 18110  124C  083A               	movf	___flmul@prod,w
 18111  124D  00A6               	movwf	?___flmul
 18112  124E  0008               	return
 18113  124F                     __end_of___flmul:	
 18114                           
 18115                           	psect	text58
 18116  358B                     __ptext58:	
 18117 ;; *************** function __Umul8_16 *****************
 18118 ;; Defined at:
 18119 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 18120 ;; Parameters:    Size  Location     Type
 18121 ;;  multiplier      1    wreg     unsigned char 
 18122 ;;  multiplicand    1    1[COMMON] unsigned char 
 18123 ;; Auto vars:     Size  Location     Type
 18124 ;;  multiplier      1    9[COMMON] unsigned char 
 18125 ;;  word_mpld       2    7[COMMON] unsigned int 
 18126 ;;  product         2    5[COMMON] unsigned int 
 18127 ;; Return value:  Size  Location     Type
 18128 ;;                  2    1[COMMON] unsigned int 
 18129 ;; Registers used:
 18130 ;;		wreg, status,2, status,0
 18131 ;; Tracked objects:
 18132 ;;		On entry : 0/0
 18133 ;;		On exit  : 0/0
 18134 ;;		Unchanged: 0/0
 18135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18136 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18137 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18138 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18139 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18140 ;;Total ram usage:        9 bytes
 18141 ;; Hardware stack levels used:    1
 18142 ;; Hardware stack levels required when called:    1
 18143 ;; This function calls:
 18144 ;;		Nothing
 18145 ;; This function is called by:
 18146 ;;		___flmul
 18147 ;; This function uses a non-reentrant model
 18148 ;;
 18149                           
 18150                           
 18151                           ;psect for function __Umul8_16
 18152  358B                     __Umul8_16:	
 18153                           
 18154                           ;incstack = 0
 18155                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 18156                           ;__Umul8_16@multiplier stored from wreg
 18157  358B  00F9               	movwf	__Umul8_16@multiplier
 18158  358C  01F5               	clrf	__Umul8_16@product
 18159  358D  01F6               	clrf	__Umul8_16@product+1
 18160  358E  0871               	movf	__Umul8_16@multiplicand,w
 18161  358F  00F3               	movwf	??__Umul8_16
 18162  3590  01F4               	clrf	??__Umul8_16+1
 18163  3591  0873               	movf	??__Umul8_16,w
 18164  3592  00F7               	movwf	__Umul8_16@word_mpld
 18165  3593  0874               	movf	??__Umul8_16+1,w
 18166  3594  00F8               	movwf	__Umul8_16@word_mpld+1
 18167  3595                     l7372:	
 18168  3595  1C79               	btfss	__Umul8_16@multiplier,0
 18169  3596  2D9B               	goto	l1449
 18170  3597  0877               	movf	__Umul8_16@word_mpld,w
 18171  3598  07F5               	addwf	__Umul8_16@product,f
 18172  3599  0878               	movf	__Umul8_16@word_mpld+1,w
 18173  359A  3DF6               	addwfc	__Umul8_16@product+1,f
 18174  359B                     l1449:	
 18175  359B  3001               	movlw	1
 18176  359C                     u9895:	
 18177  359C  35F7               	lslf	__Umul8_16@word_mpld,f
 18178  359D  0DF8               	rlf	__Umul8_16@word_mpld+1,f
 18179  359E  0B89               	decfsz	9,f
 18180  359F  2D9C               	goto	u9895
 18181  35A0  1003               	clrc
 18182  35A1  0CF9               	rrf	__Umul8_16@multiplier,f
 18183  35A2  0879               	movf	__Umul8_16@multiplier,w
 18184  35A3  1D03               	btfss	3,2
 18185  35A4  2D95               	goto	l7372
 18186  35A5  0876               	movf	__Umul8_16@product+1,w
 18187  35A6  00F2               	movwf	?__Umul8_16+1
 18188  35A7  0875               	movf	__Umul8_16@product,w
 18189  35A8  00F1               	movwf	?__Umul8_16
 18190  35A9  0008               	return
 18191  35AA                     __end_of__Umul8_16:	
 18192                           
 18193                           	psect	text59
 18194  1CE2                     __ptext59:	
 18195 ;; *************** function ___fldiv *****************
 18196 ;; Defined at:
 18197 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 18198 ;; Parameters:    Size  Location     Type
 18199 ;;  a               4   32[BANK0 ] unsigned int 
 18200 ;;  b               4   36[BANK0 ] unsigned int 
 18201 ;; Auto vars:     Size  Location     Type
 18202 ;;  grs             4   52[BANK0 ] unsigned long 
 18203 ;;  rem             4   45[BANK0 ] unsigned long 
 18204 ;;  new_exp         2   50[BANK0 ] int 
 18205 ;;  aexp            1   57[BANK0 ] unsigned char 
 18206 ;;  bexp            1   56[BANK0 ] unsigned char 
 18207 ;;  sign            1   49[BANK0 ] unsigned char 
 18208 ;; Return value:  Size  Location     Type
 18209 ;;                  4   32[BANK0 ] unsigned char 
 18210 ;; Registers used:
 18211 ;;		wreg, status,2, status,0
 18212 ;; Tracked objects:
 18213 ;;		On entry : 0/0
 18214 ;;		On exit  : 0/0
 18215 ;;		Unchanged: 0/0
 18216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18217 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18218 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18219 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18220 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18221 ;;Total ram usage:       26 bytes
 18222 ;; Hardware stack levels used:    1
 18223 ;; Hardware stack levels required when called:    1
 18224 ;; This function calls:
 18225 ;;		Nothing
 18226 ;; This function is called by:
 18227 ;;		_setShortCircuitProtection
 18228 ;;		_setOverCurrentDischargeProtection
 18229 ;;		_updateCurrent
 18230 ;;		_updateVoltages
 18231 ;;		_updateTemperatures
 18232 ;;		_logf
 18233 ;;		_AFE_getSetShortCircuitCurrent
 18234 ;;		_AFE_getOverCurrentDischargeCurrent
 18235 ;; This function uses a non-reentrant model
 18236 ;;
 18237                           
 18238                           
 18239                           ;psect for function ___fldiv
 18240  1CE2                     ___fldiv:	
 18241                           
 18242                           ;incstack = 0
 18243                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 18244  1CE2  0020               	movlb	0	; select bank0
 18245  1CE3  0847               	movf	___fldiv@b+3,w
 18246  1CE4  3980               	andlw	128
 18247  1CE5  00C8               	movwf	??___fldiv
 18248  1CE6  0848               	movf	??___fldiv,w
 18249  1CE7  00D1               	movwf	___fldiv@sign
 18250  1CE8  3547               	lslf	___fldiv@b+3,w
 18251  1CE9  00C8               	movwf	??___fldiv
 18252  1CEA  0848               	movf	??___fldiv,w
 18253  1CEB  00D8               	movwf	___fldiv@bexp
 18254  1CEC  1BC6               	btfsc	___fldiv@b+2,7
 18255  1CED  1458               	bsf	___fldiv@bexp,0
 18256  1CEE  0858               	movf	___fldiv@bexp,w
 18257  1CEF  1903               	btfsc	3,2
 18258  1CF0  2CFF               	goto	l7438
 18259  1CF1  0A58               	incf	___fldiv@bexp,w
 18260  1CF2  1D03               	btfss	3,2
 18261  1CF3  2CFC               	goto	l7434
 18262  1CF4  3000               	movlw	0
 18263  1CF5  00C7               	movwf	___fldiv@b+3
 18264  1CF6  3000               	movlw	0
 18265  1CF7  00C6               	movwf	___fldiv@b+2
 18266  1CF8  3000               	movlw	0
 18267  1CF9  00C5               	movwf	___fldiv@b+1
 18268  1CFA  3000               	movlw	0
 18269  1CFB  00C4               	movwf	___fldiv@b
 18270  1CFC                     l7434:	
 18271  1CFC  17C6               	bsf	___fldiv@b+2,7
 18272  1CFD  01C7               	clrf	___fldiv@b+3
 18273  1CFE  2D07               	goto	l7440
 18274  1CFF                     l7438:	
 18275  1CFF  3000               	movlw	0
 18276  1D00  00C7               	movwf	___fldiv@b+3
 18277  1D01  3000               	movlw	0
 18278  1D02  00C6               	movwf	___fldiv@b+2
 18279  1D03  3000               	movlw	0
 18280  1D04  00C5               	movwf	___fldiv@b+1
 18281  1D05  3000               	movlw	0
 18282  1D06  00C4               	movwf	___fldiv@b
 18283  1D07                     l7440:	
 18284  1D07  0843               	movf	___fldiv@a+3,w
 18285  1D08  3980               	andlw	128
 18286  1D09  00C8               	movwf	??___fldiv
 18287  1D0A  0848               	movf	??___fldiv,w
 18288  1D0B  06D1               	xorwf	___fldiv@sign,f
 18289  1D0C  3543               	lslf	___fldiv@a+3,w
 18290  1D0D  00C8               	movwf	??___fldiv
 18291  1D0E  0848               	movf	??___fldiv,w
 18292  1D0F  00D9               	movwf	___fldiv@aexp
 18293  1D10  1BC2               	btfsc	___fldiv@a+2,7
 18294  1D11  1459               	bsf	___fldiv@aexp,0
 18295  1D12  0859               	movf	___fldiv@aexp,w
 18296  1D13  1903               	btfsc	3,2
 18297  1D14  2D23               	goto	l7458
 18298  1D15  0A59               	incf	___fldiv@aexp,w
 18299  1D16  1D03               	btfss	3,2
 18300  1D17  2D20               	goto	l7454
 18301  1D18  3000               	movlw	0
 18302  1D19  00C3               	movwf	___fldiv@a+3
 18303  1D1A  3000               	movlw	0
 18304  1D1B  00C2               	movwf	___fldiv@a+2
 18305  1D1C  3000               	movlw	0
 18306  1D1D  00C1               	movwf	___fldiv@a+1
 18307  1D1E  3000               	movlw	0
 18308  1D1F  00C0               	movwf	___fldiv@a
 18309  1D20                     l7454:	
 18310  1D20  17C2               	bsf	___fldiv@a+2,7
 18311  1D21  01C3               	clrf	___fldiv@a+3
 18312  1D22  2D2B               	goto	l1204
 18313  1D23                     l7458:	
 18314  1D23  3000               	movlw	0
 18315  1D24  00C3               	movwf	___fldiv@a+3
 18316  1D25  3000               	movlw	0
 18317  1D26  00C2               	movwf	___fldiv@a+2
 18318  1D27  3000               	movlw	0
 18319  1D28  00C1               	movwf	___fldiv@a+1
 18320  1D29  3000               	movlw	0
 18321  1D2A  00C0               	movwf	___fldiv@a
 18322  1D2B                     l1204:	
 18323  1D2B  0843               	movf	___fldiv@a+3,w
 18324  1D2C  0442               	iorwf	___fldiv@a+2,w
 18325  1D2D  0441               	iorwf	___fldiv@a+1,w
 18326  1D2E  0440               	iorwf	___fldiv@a,w
 18327  1D2F  1D03               	skipz
 18328  1D30  2D4A               	goto	l7468
 18329  1D31  3000               	movlw	0
 18330  1D32  00C7               	movwf	___fldiv@b+3
 18331  1D33  3000               	movlw	0
 18332  1D34  00C6               	movwf	___fldiv@b+2
 18333  1D35  3000               	movlw	0
 18334  1D36  00C5               	movwf	___fldiv@b+1
 18335  1D37  3000               	movlw	0
 18336  1D38  00C4               	movwf	___fldiv@b
 18337  1D39  3080               	movlw	128
 18338  1D3A  04C6               	iorwf	___fldiv@b+2,f
 18339  1D3B  307F               	movlw	127
 18340  1D3C  04C7               	iorwf	___fldiv@b+3,f
 18341  1D3D                     L5:	
 18342  1D3D  0851               	movf	___fldiv@sign,w
 18343  1D3E  00C8               	movwf	??___fldiv
 18344  1D3F  0848               	movf	??___fldiv,w
 18345  1D40  04C7               	iorwf	___fldiv@b+3,f
 18346  1D41  0847               	movf	___fldiv@b+3,w
 18347  1D42  00C3               	movwf	?___fldiv+3
 18348  1D43  0846               	movf	___fldiv@b+2,w
 18349  1D44  00C2               	movwf	?___fldiv+2
 18350  1D45  0845               	movf	___fldiv@b+1,w
 18351  1D46  00C1               	movwf	?___fldiv+1
 18352  1D47  0844               	movf	___fldiv@b,w
 18353  1D48  00C0               	movwf	?___fldiv
 18354  1D49  0008               	return
 18355  1D4A                     l7468:	
 18356  1D4A  0858               	movf	___fldiv@bexp,w
 18357  1D4B  1D03               	btfss	3,2
 18358  1D4C  2D56               	goto	l7474
 18359  1D4D  3000               	movlw	0
 18360  1D4E  00C3               	movwf	?___fldiv+3
 18361  1D4F  3000               	movlw	0
 18362  1D50  00C2               	movwf	?___fldiv+2
 18363  1D51  3000               	movlw	0
 18364  1D52  00C1               	movwf	?___fldiv+1
 18365  1D53  3000               	movlw	0
 18366  1D54  00C0               	movwf	?___fldiv
 18367  1D55  0008               	return
 18368  1D56                     l7474:	
 18369  1D56  0858               	movf	___fldiv@bexp,w
 18370  1D57  00C8               	movwf	??___fldiv
 18371  1D58  01C9               	clrf	??___fldiv+1
 18372  1D59  0849               	movf	??___fldiv+1,w
 18373  1D5A  00CB               	movwf	??___fldiv+3
 18374  1D5B  0859               	movf	___fldiv@aexp,w
 18375  1D5C  0248               	subwf	??___fldiv,w
 18376  1D5D  00CA               	movwf	??___fldiv+2
 18377  1D5E  1C03               	skipc
 18378  1D5F  03CB               	decf	??___fldiv+3,f
 18379  1D60  084A               	movf	??___fldiv+2,w
 18380  1D61  3E7F               	addlw	127
 18381  1D62  00D2               	movwf	___fldiv@new_exp
 18382  1D63  3000               	movlw	0
 18383  1D64  3D4B               	addwfc	??___fldiv+3,w
 18384  1D65  00D3               	movwf	___fldiv@new_exp+1
 18385  1D66  0847               	movf	___fldiv@b+3,w
 18386  1D67  00D0               	movwf	___fldiv@rem+3
 18387  1D68  0846               	movf	___fldiv@b+2,w
 18388  1D69  00CF               	movwf	___fldiv@rem+2
 18389  1D6A  0845               	movf	___fldiv@b+1,w
 18390  1D6B  00CE               	movwf	___fldiv@rem+1
 18391  1D6C  0844               	movf	___fldiv@b,w
 18392  1D6D  00CD               	movwf	___fldiv@rem
 18393  1D6E  3000               	movlw	0
 18394  1D6F  00C7               	movwf	___fldiv@b+3
 18395  1D70  3000               	movlw	0
 18396  1D71  00C6               	movwf	___fldiv@b+2
 18397  1D72  3000               	movlw	0
 18398  1D73  00C5               	movwf	___fldiv@b+1
 18399  1D74  3000               	movlw	0
 18400  1D75  00C4               	movwf	___fldiv@b
 18401  1D76  3000               	movlw	0
 18402  1D77  00D7               	movwf	___fldiv@grs+3
 18403  1D78  3000               	movlw	0
 18404  1D79  00D6               	movwf	___fldiv@grs+2
 18405  1D7A  3000               	movlw	0
 18406  1D7B  00D5               	movwf	___fldiv@grs+1
 18407  1D7C  3000               	movlw	0
 18408  1D7D  00D4               	movwf	___fldiv@grs
 18409  1D7E  01D9               	clrf	___fldiv@aexp
 18410  1D7F                     l7502:	
 18411  1D7F  301A               	movlw	26
 18412  1D80  0259               	subwf	___fldiv@aexp,w
 18413  1D81  1803               	btfsc	3,0
 18414  1D82  2DBB               	goto	l7504
 18415  1D83  0859               	movf	___fldiv@aexp,w
 18416  1D84  1903               	btfsc	3,2
 18417  1D85  2D9D               	goto	l7494
 18418  1D86  3001               	movlw	1
 18419  1D87                     u10075:	
 18420  1D87  35CD               	lslf	___fldiv@rem,f
 18421  1D88  0DCE               	rlf	___fldiv@rem+1,f
 18422  1D89  0DCF               	rlf	___fldiv@rem+2,f
 18423  1D8A  0DD0               	rlf	___fldiv@rem+3,f
 18424  1D8B  0B89               	decfsz	9,f
 18425  1D8C  2D87               	goto	u10075
 18426  1D8D  3001               	movlw	1
 18427  1D8E                     u10085:	
 18428  1D8E  35C4               	lslf	___fldiv@b,f
 18429  1D8F  0DC5               	rlf	___fldiv@b+1,f
 18430  1D90  0DC6               	rlf	___fldiv@b+2,f
 18431  1D91  0DC7               	rlf	___fldiv@b+3,f
 18432  1D92  0B89               	decfsz	9,f
 18433  1D93  2D8E               	goto	u10085
 18434  1D94  1BD7               	btfsc	___fldiv@grs+3,7
 18435  1D95  1444               	bsf	___fldiv@b,0
 18436  1D96  3001               	movlw	1
 18437  1D97                     u10105:	
 18438  1D97  35D4               	lslf	___fldiv@grs,f
 18439  1D98  0DD5               	rlf	___fldiv@grs+1,f
 18440  1D99  0DD6               	rlf	___fldiv@grs+2,f
 18441  1D9A  0DD7               	rlf	___fldiv@grs+3,f
 18442  1D9B  0B89               	decfsz	9,f
 18443  1D9C  2D97               	goto	u10105
 18444  1D9D                     l7494:	
 18445  1D9D  0843               	movf	___fldiv@a+3,w
 18446  1D9E  0250               	subwf	___fldiv@rem+3,w
 18447  1D9F  1D03               	skipz
 18448  1DA0  2DAB               	goto	u10115
 18449  1DA1  0842               	movf	___fldiv@a+2,w
 18450  1DA2  024F               	subwf	___fldiv@rem+2,w
 18451  1DA3  1D03               	skipz
 18452  1DA4  2DAB               	goto	u10115
 18453  1DA5  0841               	movf	___fldiv@a+1,w
 18454  1DA6  024E               	subwf	___fldiv@rem+1,w
 18455  1DA7  1D03               	skipz
 18456  1DA8  2DAB               	goto	u10115
 18457  1DA9  0840               	movf	___fldiv@a,w
 18458  1DAA  024D               	subwf	___fldiv@rem,w
 18459  1DAB                     u10115:	
 18460  1DAB  1C03               	skipc
 18461  1DAC  2DB6               	goto	l7500
 18462  1DAD  1757               	bsf	___fldiv@grs+3,6
 18463  1DAE  0840               	movf	___fldiv@a,w
 18464  1DAF  02CD               	subwf	___fldiv@rem,f
 18465  1DB0  0841               	movf	___fldiv@a+1,w
 18466  1DB1  3BCE               	subwfb	___fldiv@rem+1,f
 18467  1DB2  0842               	movf	___fldiv@a+2,w
 18468  1DB3  3BCF               	subwfb	___fldiv@rem+2,f
 18469  1DB4  0843               	movf	___fldiv@a+3,w
 18470  1DB5  3BD0               	subwfb	___fldiv@rem+3,f
 18471  1DB6                     l7500:	
 18472  1DB6  3001               	movlw	1
 18473  1DB7  00C8               	movwf	??___fldiv
 18474  1DB8  0848               	movf	??___fldiv,w
 18475  1DB9  07D9               	addwf	___fldiv@aexp,f
 18476  1DBA  2D7F               	goto	l7502
 18477  1DBB                     l7504:	
 18478  1DBB  0850               	movf	___fldiv@rem+3,w
 18479  1DBC  044F               	iorwf	___fldiv@rem+2,w
 18480  1DBD  044E               	iorwf	___fldiv@rem+1,w
 18481  1DBE  044D               	iorwf	___fldiv@rem,w
 18482  1DBF  1D03               	btfss	3,2
 18483  1DC0  1454               	bsf	___fldiv@grs,0
 18484  1DC1                     l7518:	
 18485  1DC1  1BC6               	btfsc	___fldiv@b+2,7
 18486  1DC2  2DD8               	goto	l7520
 18487  1DC3  3001               	movlw	1
 18488  1DC4                     u10145:	
 18489  1DC4  35C4               	lslf	___fldiv@b,f
 18490  1DC5  0DC5               	rlf	___fldiv@b+1,f
 18491  1DC6  0DC6               	rlf	___fldiv@b+2,f
 18492  1DC7  0DC7               	rlf	___fldiv@b+3,f
 18493  1DC8  0B89               	decfsz	9,f
 18494  1DC9  2DC4               	goto	u10145
 18495  1DCA  1BD7               	btfsc	___fldiv@grs+3,7
 18496  1DCB  1444               	bsf	___fldiv@b,0
 18497  1DCC  3001               	movlw	1
 18498  1DCD                     u10165:	
 18499  1DCD  35D4               	lslf	___fldiv@grs,f
 18500  1DCE  0DD5               	rlf	___fldiv@grs+1,f
 18501  1DCF  0DD6               	rlf	___fldiv@grs+2,f
 18502  1DD0  0DD7               	rlf	___fldiv@grs+3,f
 18503  1DD1  0B89               	decfsz	9,f
 18504  1DD2  2DCD               	goto	u10165
 18505  1DD3  30FF               	movlw	255
 18506  1DD4  07D2               	addwf	___fldiv@new_exp,f
 18507  1DD5  30FF               	movlw	255
 18508  1DD6  3DD3               	addwfc	___fldiv@new_exp+1,f
 18509  1DD7  2DC1               	goto	l7518
 18510  1DD8                     l7520:	
 18511  1DD8  01D9               	clrf	___fldiv@aexp
 18512  1DD9  1FD7               	btfss	___fldiv@grs+3,7
 18513  1DDA  2DF1               	goto	l7530
 18514  1DDB  30FF               	movlw	255
 18515  1DDC  0554               	andwf	___fldiv@grs,w
 18516  1DDD  00C8               	movwf	??___fldiv
 18517  1DDE  30FF               	movlw	255
 18518  1DDF  0555               	andwf	___fldiv@grs+1,w
 18519  1DE0  00C9               	movwf	??___fldiv+1
 18520  1DE1  30FF               	movlw	255
 18521  1DE2  0556               	andwf	___fldiv@grs+2,w
 18522  1DE3  00CA               	movwf	??___fldiv+2
 18523  1DE4  307F               	movlw	127
 18524  1DE5  0557               	andwf	___fldiv@grs+3,w
 18525  1DE6  00CB               	movwf	??___fldiv+3
 18526  1DE7  084B               	movf	??___fldiv+3,w
 18527  1DE8  044A               	iorwf	??___fldiv+2,w
 18528  1DE9  0449               	iorwf	??___fldiv+1,w
 18529  1DEA  0448               	iorwf	??___fldiv,w
 18530  1DEB  1903               	skipnz
 18531  1DEC  1844               	btfsc	___fldiv@b,0
 18532  1DED  2DEF               	goto	l7526
 18533  1DEE  2DF1               	goto	l7530
 18534  1DEF                     l7526:	
 18535  1DEF  01D9               	clrf	___fldiv@aexp
 18536  1DF0  0AD9               	incf	___fldiv@aexp,f
 18537  1DF1                     l7530:	
 18538  1DF1  0859               	movf	___fldiv@aexp,w
 18539  1DF2  1903               	btfsc	3,2
 18540  1DF3  2E1A               	goto	l7540
 18541  1DF4  3001               	movlw	1
 18542  1DF5  07C4               	addwf	___fldiv@b,f
 18543  1DF6  3000               	movlw	0
 18544  1DF7  3DC5               	addwfc	___fldiv@b+1,f
 18545  1DF8  3000               	movlw	0
 18546  1DF9  3DC6               	addwfc	___fldiv@b+2,f
 18547  1DFA  3000               	movlw	0
 18548  1DFB  3DC7               	addwfc	___fldiv@b+3,f
 18549  1DFC  1C47               	btfss	___fldiv@b+3,0
 18550  1DFD  2E1A               	goto	l7540
 18551  1DFE  0844               	movf	___fldiv@b,w
 18552  1DFF  00C8               	movwf	??___fldiv
 18553  1E00  0845               	movf	___fldiv@b+1,w
 18554  1E01  00C9               	movwf	??___fldiv+1
 18555  1E02  0846               	movf	___fldiv@b+2,w
 18556  1E03  00CA               	movwf	??___fldiv+2
 18557  1E04  0847               	movf	___fldiv@b+3,w
 18558  1E05  00CB               	movwf	??___fldiv+3
 18559  1E06  3001               	movlw	1
 18560  1E07  00CC               	movwf	??___fldiv+4
 18561  1E08                     u10235:	
 18562  1E08  37CB               	asrf	??___fldiv+3,f
 18563  1E09  0CCA               	rrf	??___fldiv+2,f
 18564  1E0A  0CC9               	rrf	??___fldiv+1,f
 18565  1E0B  0CC8               	rrf	??___fldiv,f
 18566  1E0C  0BCC               	decfsz	??___fldiv+4,f
 18567  1E0D  2E08               	goto	u10235
 18568  1E0E  084B               	movf	??___fldiv+3,w
 18569  1E0F  00C7               	movwf	___fldiv@b+3
 18570  1E10  084A               	movf	??___fldiv+2,w
 18571  1E11  00C6               	movwf	___fldiv@b+2
 18572  1E12  0849               	movf	??___fldiv+1,w
 18573  1E13  00C5               	movwf	___fldiv@b+1
 18574  1E14  0848               	movf	??___fldiv,w
 18575  1E15  00C4               	movwf	___fldiv@b
 18576  1E16  3001               	movlw	1
 18577  1E17  07D2               	addwf	___fldiv@new_exp,f
 18578  1E18  3000               	movlw	0
 18579  1E19  3DD3               	addwfc	___fldiv@new_exp+1,f
 18580  1E1A                     l7540:	
 18581  1E1A  0853               	movf	___fldiv@new_exp+1,w
 18582  1E1B  3A80               	xorlw	128
 18583  1E1C  00C8               	movwf	??___fldiv
 18584  1E1D  3080               	movlw	128
 18585  1E1E  0248               	subwf	??___fldiv,w
 18586  1E1F  1D03               	skipz
 18587  1E20  2E23               	goto	u10245
 18588  1E21  30FF               	movlw	255
 18589  1E22  0252               	subwf	___fldiv@new_exp,w
 18590  1E23                     u10245:	
 18591  1E23  1C03               	skipc
 18592  1E24  2E32               	goto	l1225
 18593  1E25  30FF               	movlw	255
 18594  1E26  0020               	movlb	0	; select bank0
 18595  1E27  00D2               	movwf	___fldiv@new_exp
 18596  1E28  3000               	movlw	0
 18597  1E29  00D3               	movwf	___fldiv@new_exp+1
 18598  1E2A  3000               	movlw	0
 18599  1E2B  00C7               	movwf	___fldiv@b+3
 18600  1E2C  3000               	movlw	0
 18601  1E2D  00C6               	movwf	___fldiv@b+2
 18602  1E2E  3000               	movlw	0
 18603  1E2F  00C5               	movwf	___fldiv@b+1
 18604  1E30  3000               	movlw	0
 18605  1E31  00C4               	movwf	___fldiv@b
 18606  1E32                     l1225:	
 18607  1E32  0020               	movlb	0	; select bank0
 18608  1E33  0853               	movf	___fldiv@new_exp+1,w
 18609  1E34  3A80               	xorlw	128
 18610  1E35  00C8               	movwf	??___fldiv
 18611  1E36  3080               	movlw	128
 18612  1E37  0248               	subwf	??___fldiv,w
 18613  1E38  1D03               	skipz
 18614  1E39  2E3C               	goto	u10255
 18615  1E3A  3001               	movlw	1
 18616  1E3B  0252               	subwf	___fldiv@new_exp,w
 18617  1E3C                     u10255:	
 18618  1E3C  1803               	skipnc
 18619  1E3D  2E4A               	goto	l1226
 18620  1E3E  0020               	movlb	0	; select bank0
 18621  1E3F  01D2               	clrf	___fldiv@new_exp
 18622  1E40  01D3               	clrf	___fldiv@new_exp+1
 18623  1E41  3000               	movlw	0
 18624  1E42  00C7               	movwf	___fldiv@b+3
 18625  1E43  3000               	movlw	0
 18626  1E44  00C6               	movwf	___fldiv@b+2
 18627  1E45  3000               	movlw	0
 18628  1E46  00C5               	movwf	___fldiv@b+1
 18629  1E47  3000               	movlw	0
 18630  1E48  00C4               	movwf	___fldiv@b
 18631  1E49  01D1               	clrf	___fldiv@sign
 18632  1E4A                     l1226:	
 18633  1E4A  0020               	movlb	0	; select bank0
 18634  1E4B  0852               	movf	___fldiv@new_exp,w
 18635  1E4C  00C8               	movwf	??___fldiv
 18636  1E4D  0848               	movf	??___fldiv,w
 18637  1E4E  00D8               	movwf	___fldiv@bexp
 18638  1E4F  1C58               	btfss	___fldiv@bexp,0
 18639  1E50  2E53               	goto	l7554
 18640  1E51  17C6               	bsf	___fldiv@b+2,7
 18641  1E52  2E57               	goto	l1228
 18642  1E53                     l7554:	
 18643  1E53  307F               	movlw	127
 18644  1E54  00C8               	movwf	??___fldiv
 18645  1E55  0848               	movf	??___fldiv,w
 18646  1E56  05C6               	andwf	___fldiv@b+2,f
 18647  1E57                     l1228:	
 18648  1E57  3658               	lsrf	___fldiv@bexp,w
 18649  1E58  00C8               	movwf	??___fldiv
 18650  1E59  0848               	movf	??___fldiv,w
 18651  1E5A  00C7               	movwf	___fldiv@b+3
 18652  1E5B  2D3D               	goto	L5
 18653  1E5C                     __end_of___fldiv:	
 18654                           
 18655                           	psect	text60
 18656  3734                     __ptext60:	
 18657 ;; *************** function _enableDischarging *****************
 18658 ;; Defined at:
 18659 ;;		line 277 in file "BQ76920.c"
 18660 ;; Parameters:    Size  Location     Type
 18661 ;;  enable          2    0[BANK0 ] unsigned int 
 18662 ;; Auto vars:     Size  Location     Type
 18663 ;;  sys_ctrl2       1   11[COMMON] unsigned char 
 18664 ;; Return value:  Size  Location     Type
 18665 ;;                  1    wreg      void 
 18666 ;; Registers used:
 18667 ;;		wreg, status,2, status,0, pclath, cstack
 18668 ;; Tracked objects:
 18669 ;;		On entry : 0/0
 18670 ;;		On exit  : 0/0
 18671 ;;		Unchanged: 0/0
 18672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18673 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18674 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18675 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18676 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18677 ;;Total ram usage:        5 bytes
 18678 ;; Hardware stack levels used:    1
 18679 ;; Hardware stack levels required when called:    3
 18680 ;; This function calls:
 18681 ;;		_I2C_writeRegister
 18682 ;;		_readRegister
 18683 ;; This function is called by:
 18684 ;;		_AFE_UPDATE
 18685 ;; This function uses a non-reentrant model
 18686 ;;
 18687                           
 18688                           
 18689                           ;psect for function _enableDischarging
 18690  3734                     _enableDischarging:	
 18691                           
 18692                           ;BQ76920.c: 278:     uint8_t sys_ctrl2;;BQ76920.c: 279:     sys_ctrl2 = readRegister(0x1
      +                          8, 0x05);
 18693                           
 18694                           ;incstack = 0
 18695                           ; Regs used in _enableDischarging: [wreg+status,2+status,0+pclath+cstack]
 18696  3734  3018               	movlw	24
 18697  3735  00F5               	movwf	readRegister@slaveAddress
 18698  3736  3000               	movlw	0
 18699  3737  00F6               	movwf	readRegister@slaveAddress+1
 18700  3738  3005               	movlw	5
 18701  3739  00F7               	movwf	readRegister@regAddress
 18702  373A  3000               	movlw	0
 18703  373B  00F8               	movwf	readRegister@regAddress+1
 18704  373C  31B6  26C7  31B7   	fcall	_readRegister
 18705  373F  0875               	movf	?_readRegister,w
 18706  3740  0020               	movlb	0	; select bank0
 18707  3741  00A2               	movwf	??_enableDischarging
 18708  3742  0822               	movf	??_enableDischarging,w
 18709  3743  00FB               	movwf	enableDischarging@sys_ctrl2
 18710                           
 18711                           ;BQ76920.c: 280:     if(enable){
 18712  3744  0820               	movf	enableDischarging@enable,w
 18713  3745  0421               	iorwf	enableDischarging@enable+1,w
 18714  3746  1903               	btfsc	3,2
 18715  3747  2F58               	goto	l8260
 18716                           
 18717                           ;BQ76920.c: 281:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 | 0x02);
 18718  3748  3018               	movlw	24
 18719  3749  00F5               	movwf	I2C_writeRegister@slaveAddress
 18720  374A  3000               	movlw	0
 18721  374B  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 18722  374C  3005               	movlw	5
 18723  374D  00F7               	movwf	I2C_writeRegister@regAddress
 18724  374E  3000               	movlw	0
 18725  374F  00F8               	movwf	I2C_writeRegister@regAddress+1
 18726  3750  3002               	movlw	2
 18727  3751  047B               	iorwf	enableDischarging@sys_ctrl2,w
 18728  3752  00F9               	movwf	I2C_writeRegister@data
 18729  3753  3000               	movlw	0
 18730  3754  00FA               	movwf	I2C_writeRegister@data+1
 18731  3755  31B5  256D         	fcall	_I2C_writeRegister
 18732                           
 18733                           ;BQ76920.c: 282:     }else{
 18734  3757  0008               	return
 18735  3758                     l8260:	
 18736                           
 18737                           ;BQ76920.c: 283:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 & ~(0x02));
 18738  3758  3018               	movlw	24
 18739  3759  00F5               	movwf	I2C_writeRegister@slaveAddress
 18740  375A  3000               	movlw	0
 18741  375B  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 18742  375C  3005               	movlw	5
 18743  375D  00F7               	movwf	I2C_writeRegister@regAddress
 18744  375E  3000               	movlw	0
 18745  375F  00F8               	movwf	I2C_writeRegister@regAddress+1
 18746  3760  087B               	movf	enableDischarging@sys_ctrl2,w
 18747  3761  39FD               	andlw	253
 18748  3762  00A2               	movwf	??_enableDischarging
 18749  3763  01A3               	clrf	??_enableDischarging+1
 18750  3764  0822               	movf	??_enableDischarging,w
 18751  3765  00F9               	movwf	I2C_writeRegister@data
 18752  3766  0823               	movf	??_enableDischarging+1,w
 18753  3767  00FA               	movwf	I2C_writeRegister@data+1
 18754  3768  31B5  256D         	fcall	_I2C_writeRegister
 18755  376A  0008               	return
 18756  376B                     __end_of_enableDischarging:	
 18757                           
 18758                           	psect	text61
 18759  36FD                     __ptext61:	
 18760 ;; *************** function _enableCharging *****************
 18761 ;; Defined at:
 18762 ;;		line 287 in file "BQ76920.c"
 18763 ;; Parameters:    Size  Location     Type
 18764 ;;  enable          2    0[BANK0 ] unsigned int 
 18765 ;; Auto vars:     Size  Location     Type
 18766 ;;  sys_ctrl2       1   11[COMMON] unsigned char 
 18767 ;; Return value:  Size  Location     Type
 18768 ;;                  1    wreg      void 
 18769 ;; Registers used:
 18770 ;;		wreg, status,2, status,0, pclath, cstack
 18771 ;; Tracked objects:
 18772 ;;		On entry : 0/0
 18773 ;;		On exit  : 0/0
 18774 ;;		Unchanged: 0/0
 18775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18776 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18777 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18778 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18779 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18780 ;;Total ram usage:        5 bytes
 18781 ;; Hardware stack levels used:    1
 18782 ;; Hardware stack levels required when called:    3
 18783 ;; This function calls:
 18784 ;;		_I2C_writeRegister
 18785 ;;		_readRegister
 18786 ;; This function is called by:
 18787 ;;		_AFE_UPDATE
 18788 ;; This function uses a non-reentrant model
 18789 ;;
 18790                           
 18791                           
 18792                           ;psect for function _enableCharging
 18793  36FD                     _enableCharging:	
 18794                           
 18795                           ;BQ76920.c: 288:     uint8_t sys_ctrl2;;BQ76920.c: 289:     sys_ctrl2 = readRegister(0x1
      +                          8, 0x05);
 18796                           
 18797                           ;incstack = 0
 18798                           ; Regs used in _enableCharging: [wreg+status,2+status,0+pclath+cstack]
 18799  36FD  3018               	movlw	24
 18800  36FE  00F5               	movwf	readRegister@slaveAddress
 18801  36FF  3000               	movlw	0
 18802  3700  00F6               	movwf	readRegister@slaveAddress+1
 18803  3701  3005               	movlw	5
 18804  3702  00F7               	movwf	readRegister@regAddress
 18805  3703  3000               	movlw	0
 18806  3704  00F8               	movwf	readRegister@regAddress+1
 18807  3705  31B6  26C7  31B6   	fcall	_readRegister
 18808  3708  0875               	movf	?_readRegister,w
 18809  3709  0020               	movlb	0	; select bank0
 18810  370A  00A2               	movwf	??_enableCharging
 18811  370B  0822               	movf	??_enableCharging,w
 18812  370C  00FB               	movwf	enableCharging@sys_ctrl2
 18813                           
 18814                           ;BQ76920.c: 290:     if(enable){
 18815  370D  0820               	movf	enableCharging@enable,w
 18816  370E  0421               	iorwf	enableCharging@enable+1,w
 18817  370F  1903               	btfsc	3,2
 18818  3710  2F21               	goto	l8268
 18819                           
 18820                           ;BQ76920.c: 291:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 | 0x01);
 18821  3711  3018               	movlw	24
 18822  3712  00F5               	movwf	I2C_writeRegister@slaveAddress
 18823  3713  3000               	movlw	0
 18824  3714  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 18825  3715  3005               	movlw	5
 18826  3716  00F7               	movwf	I2C_writeRegister@regAddress
 18827  3717  3000               	movlw	0
 18828  3718  00F8               	movwf	I2C_writeRegister@regAddress+1
 18829  3719  3001               	movlw	1
 18830  371A  047B               	iorwf	enableCharging@sys_ctrl2,w
 18831  371B  00F9               	movwf	I2C_writeRegister@data
 18832  371C  3000               	movlw	0
 18833  371D  00FA               	movwf	I2C_writeRegister@data+1
 18834  371E  31B5  256D         	fcall	_I2C_writeRegister
 18835                           
 18836                           ;BQ76920.c: 292:     }else{
 18837  3720  0008               	return
 18838  3721                     l8268:	
 18839                           
 18840                           ;BQ76920.c: 293:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 & ~(0x01));
 18841  3721  3018               	movlw	24
 18842  3722  00F5               	movwf	I2C_writeRegister@slaveAddress
 18843  3723  3000               	movlw	0
 18844  3724  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 18845  3725  3005               	movlw	5
 18846  3726  00F7               	movwf	I2C_writeRegister@regAddress
 18847  3727  3000               	movlw	0
 18848  3728  00F8               	movwf	I2C_writeRegister@regAddress+1
 18849  3729  087B               	movf	enableCharging@sys_ctrl2,w
 18850  372A  39FE               	andlw	254
 18851  372B  00A2               	movwf	??_enableCharging
 18852  372C  01A3               	clrf	??_enableCharging+1
 18853  372D  0822               	movf	??_enableCharging,w
 18854  372E  00F9               	movwf	I2C_writeRegister@data
 18855  372F  0823               	movf	??_enableCharging+1,w
 18856  3730  00FA               	movwf	I2C_writeRegister@data+1
 18857  3731  31B5  256D         	fcall	_I2C_writeRegister
 18858  3733  0008               	return
 18859  3734                     __end_of_enableCharging:	
 18860                           
 18861                           	psect	text62
 18862  36C7                     __ptext62:	
 18863 ;; *************** function _readRegister *****************
 18864 ;; Defined at:
 18865 ;;		line 115 in file "I2C.c"
 18866 ;; Parameters:    Size  Location     Type
 18867 ;;  slaveAddress    2    5[COMMON] int 
 18868 ;;  regAddress      2    7[COMMON] int 
 18869 ;; Auto vars:     Size  Location     Type
 18870 ;;  recievedData    2    9[COMMON] int 
 18871 ;; Return value:  Size  Location     Type
 18872 ;;                  2    5[COMMON] int 
 18873 ;; Registers used:
 18874 ;;		wreg, status,2, status,0, pclath, cstack
 18875 ;; Tracked objects:
 18876 ;;		On entry : 0/0
 18877 ;;		On exit  : 0/0
 18878 ;;		Unchanged: 0/0
 18879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18880 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18881 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18883 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18884 ;;Total ram usage:        6 bytes
 18885 ;; Hardware stack levels used:    1
 18886 ;; Hardware stack levels required when called:    2
 18887 ;; This function calls:
 18888 ;;		_read_I2C_data
 18889 ;;		_send_I2C_NACK
 18890 ;;		_send_I2C_controlByte
 18891 ;;		_send_I2C_data
 18892 ;;		_send_I2C_startBit
 18893 ;;		_send_I2C_stopBit
 18894 ;; This function is called by:
 18895 ;;		_beginAFEcommunication
 18896 ;;		_setCellUndervoltageProtection
 18897 ;;		_setCellOvervoltageProtection
 18898 ;;		_updateCurrent
 18899 ;;		_updateVoltages
 18900 ;;		_updateTemperatures
 18901 ;;		_enableDischarging
 18902 ;;		_enableCharging
 18903 ;;		_printcellParameters
 18904 ;;		_printotAFERegisters
 18905 ;; This function uses a non-reentrant model
 18906 ;;
 18907                           
 18908                           
 18909                           ;psect for function _readRegister
 18910  36C7                     _readRegister:	
 18911                           
 18912                           ;I2C.c: 116:     int recievedData;;I2C.c: 117:     send_I2C_startBit();
 18913                           
 18914                           ;incstack = 0
 18915                           ; Regs used in _readRegister: [wreg+status,2+status,0+pclath+cstack]
 18916  36C7  31B3  23B4  31B6   	fcall	_send_I2C_startBit
 18917                           
 18918                           ;I2C.c: 118:     send_I2C_controlByte(slaveAddress, 0);
 18919  36CA  0876               	movf	readRegister@slaveAddress+1,w
 18920  36CB  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 18921  36CC  0875               	movf	readRegister@slaveAddress,w
 18922  36CD  00F1               	movwf	send_I2C_controlByte@BlockAddress
 18923  36CE  3000               	movlw	0
 18924  36CF  00F3               	movwf	send_I2C_controlByte@RW_bit
 18925  36D0  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 18926  36D1  31B3  23E8  31B6   	fcall	_send_I2C_controlByte
 18927                           
 18928                           ;I2C.c: 119:     send_I2C_data(regAddress);
 18929  36D4  0878               	movf	readRegister@regAddress+1,w
 18930  36D5  00F2               	movwf	send_I2C_data@databyte+1
 18931  36D6  0877               	movf	readRegister@regAddress,w
 18932  36D7  00F1               	movwf	send_I2C_data@databyte
 18933  36D8  31B3  23CD  31B6   	fcall	_send_I2C_data
 18934                           
 18935                           ;I2C.c: 120:     send_I2C_stopBit();
 18936  36DB  31B3  23BC  31B6   	fcall	_send_I2C_stopBit
 18937                           
 18938                           ;I2C.c: 121:     send_I2C_startBit();
 18939  36DE  31B3  23B4  31B6   	fcall	_send_I2C_startBit
 18940                           
 18941                           ;I2C.c: 122:     send_I2C_controlByte(slaveAddress, 1);
 18942  36E1  0876               	movf	readRegister@slaveAddress+1,w
 18943  36E2  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 18944  36E3  0875               	movf	readRegister@slaveAddress,w
 18945  36E4  00F1               	movwf	send_I2C_controlByte@BlockAddress
 18946  36E5  3001               	movlw	1
 18947  36E6  00F3               	movwf	send_I2C_controlByte@RW_bit
 18948  36E7  3000               	movlw	0
 18949  36E8  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 18950  36E9  31B3  23E8  31B6   	fcall	_send_I2C_controlByte
 18951                           
 18952                           ;I2C.c: 123:     recievedData = read_I2C_data();
 18953  36EC  31B4  242D  31B6   	fcall	_read_I2C_data
 18954  36EF  0872               	movf	?_read_I2C_data+1,w
 18955  36F0  00FA               	movwf	readRegister@recievedData+1
 18956  36F1  0871               	movf	?_read_I2C_data,w
 18957  36F2  00F9               	movwf	readRegister@recievedData
 18958                           
 18959                           ;I2C.c: 124:     send_I2C_NACK();
 18960  36F3  31B3  23D6  31B6   	fcall	_send_I2C_NACK
 18961                           
 18962                           ;I2C.c: 125:     send_I2C_stopBit();
 18963  36F6  31B3  23BC         	fcall	_send_I2C_stopBit
 18964                           
 18965                           ;I2C.c: 126:     return recievedData;
 18966  36F8  087A               	movf	readRegister@recievedData+1,w
 18967  36F9  00F6               	movwf	?_readRegister+1
 18968  36FA  0879               	movf	readRegister@recievedData,w
 18969  36FB  00F5               	movwf	?_readRegister
 18970  36FC  0008               	return
 18971  36FD                     __end_of_readRegister:	
 18972                           
 18973                           	psect	text63
 18974  33D6                     __ptext63:	
 18975 ;; *************** function _send_I2C_NACK *****************
 18976 ;; Defined at:
 18977 ;;		line 91 in file "I2C.c"
 18978 ;; Parameters:    Size  Location     Type
 18979 ;;		None
 18980 ;; Auto vars:     Size  Location     Type
 18981 ;;		None
 18982 ;; Return value:  Size  Location     Type
 18983 ;;                  1    wreg      void 
 18984 ;; Registers used:
 18985 ;;		None
 18986 ;; Tracked objects:
 18987 ;;		On entry : 0/0
 18988 ;;		On exit  : 0/0
 18989 ;;		Unchanged: 0/0
 18990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18995 ;;Total ram usage:        0 bytes
 18996 ;; Hardware stack levels used:    1
 18997 ;; Hardware stack levels required when called:    1
 18998 ;; This function calls:
 18999 ;;		Nothing
 19000 ;; This function is called by:
 19001 ;;		_readRegister
 19002 ;; This function uses a non-reentrant model
 19003 ;;
 19004                           
 19005                           
 19006                           ;psect for function _send_I2C_NACK
 19007  33D6                     _send_I2C_NACK:	
 19008                           
 19009                           ;I2C.c: 92:     PIR1bits.SSP1IF = 0;
 19010                           
 19011                           ;incstack = 0
 19012                           ; Regs used in _send_I2C_NACK: []
 19013  33D6  0020               	movlb	0	; select bank0
 19014  33D7  1191               	bcf	17,3	;volatile
 19015                           
 19016                           ;I2C.c: 93:     SSPCON2bits.ACKDT = 1;
 19017  33D8  0024               	movlb	4	; select bank4
 19018  33D9  1696               	bsf	22,5	;volatile
 19019                           
 19020                           ;I2C.c: 94:     SSPCON2bits.ACKEN = 1;
 19021  33DA  1616               	bsf	22,4	;volatile
 19022  33DB                     l320:	
 19023                           ;I2C.c: 95:     while (!PIR1bits.SSP1IF);
 19024                           
 19025  33DB  0020               	movlb	0	; select bank0
 19026  33DC  1991               	btfsc	17,3	;volatile
 19027  33DD  0008               	return
 19028  33DE  2BDB               	goto	l320
 19029  33DF                     __end_of_send_I2C_NACK:	
 19030                           
 19031                           	psect	text64
 19032  342D                     __ptext64:	
 19033 ;; *************** function _read_I2C_data *****************
 19034 ;; Defined at:
 19035 ;;		line 43 in file "I2C.c"
 19036 ;; Parameters:    Size  Location     Type
 19037 ;;		None
 19038 ;; Auto vars:     Size  Location     Type
 19039 ;;		None
 19040 ;; Return value:  Size  Location     Type
 19041 ;;                  2    1[COMMON] unsigned int 
 19042 ;; Registers used:
 19043 ;;		wreg
 19044 ;; Tracked objects:
 19045 ;;		On entry : 0/0
 19046 ;;		On exit  : 0/0
 19047 ;;		Unchanged: 0/0
 19048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19049 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19051 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19052 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19053 ;;Total ram usage:        4 bytes
 19054 ;; Hardware stack levels used:    1
 19055 ;; Hardware stack levels required when called:    1
 19056 ;; This function calls:
 19057 ;;		Nothing
 19058 ;; This function is called by:
 19059 ;;		_readRegister
 19060 ;; This function uses a non-reentrant model
 19061 ;;
 19062                           
 19063                           
 19064                           ;psect for function _read_I2C_data
 19065  342D                     _read_I2C_data:	
 19066                           
 19067                           ;I2C.c: 44:     PIR1bits.SSP1IF = 0;
 19068                           
 19069                           ;incstack = 0
 19070                           ; Regs used in _read_I2C_data: [wreg]
 19071  342D  0020               	movlb	0	; select bank0
 19072  342E  1191               	bcf	17,3	;volatile
 19073                           
 19074                           ;I2C.c: 45:     SSPCON2bits.RCEN = 1;
 19075  342F  0024               	movlb	4	; select bank4
 19076  3430  1596               	bsf	22,3	;volatile
 19077  3431                     l284:	
 19078                           ;I2C.c: 46:     while (!PIR1bits.SSP1IF);
 19079                           
 19080  3431  0020               	movlb	0	; select bank0
 19081  3432  1D91               	btfss	17,3	;volatile
 19082  3433  2C31               	goto	l284
 19083                           
 19084                           ;I2C.c: 47:     return (SSPBUF);
 19085  3434  0024               	movlb	4	; select bank4
 19086  3435  0811               	movf	17,w	;volatile
 19087  3436  00F3               	movwf	??_read_I2C_data
 19088  3437  01F4               	clrf	??_read_I2C_data+1
 19089  3438  0873               	movf	??_read_I2C_data,w
 19090  3439  00F1               	movwf	?_read_I2C_data
 19091  343A  0874               	movf	??_read_I2C_data+1,w
 19092  343B  00F2               	movwf	?_read_I2C_data+1
 19093  343C  0008               	return
 19094  343D                     __end_of_read_I2C_data:	
 19095                           
 19096                           	psect	text65
 19097  356D                     __ptext65:	
 19098 ;; *************** function _I2C_writeRegister *****************
 19099 ;; Defined at:
 19100 ;;		line 104 in file "I2C.c"
 19101 ;; Parameters:    Size  Location     Type
 19102 ;;  slaveAddress    2    5[COMMON] int 
 19103 ;;  regAddress      2    7[COMMON] int 
 19104 ;;  data            2    9[COMMON] int 
 19105 ;; Auto vars:     Size  Location     Type
 19106 ;;		None
 19107 ;; Return value:  Size  Location     Type
 19108 ;;                  1    wreg      void 
 19109 ;; Registers used:
 19110 ;;		wreg, status,2, status,0, pclath, cstack
 19111 ;; Tracked objects:
 19112 ;;		On entry : 0/0
 19113 ;;		On exit  : 0/0
 19114 ;;		Unchanged: 0/0
 19115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19116 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19119 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19120 ;;Total ram usage:        6 bytes
 19121 ;; Hardware stack levels used:    1
 19122 ;; Hardware stack levels required when called:    2
 19123 ;; This function calls:
 19124 ;;		_send_I2C_controlByte
 19125 ;;		_send_I2C_data
 19126 ;;		_send_I2C_startBit
 19127 ;;		_send_I2C_stopBit
 19128 ;; This function is called by:
 19129 ;;		_beginAFEcommunication
 19130 ;;		_setShortCircuitProtection
 19131 ;;		_setOverCurrentDischargeProtection
 19132 ;;		_setCellUndervoltageProtection
 19133 ;;		_setCellOvervoltageProtection
 19134 ;;		_updateCurrent
 19135 ;;		_enableDischarging
 19136 ;;		_enableCharging
 19137 ;; This function uses a non-reentrant model
 19138 ;;
 19139                           
 19140                           
 19141                           ;psect for function _I2C_writeRegister
 19142  356D                     _I2C_writeRegister:	
 19143                           
 19144                           ;I2C.c: 105:     send_I2C_startBit();
 19145                           
 19146                           ;incstack = 0
 19147                           ; Regs used in _I2C_writeRegister: [wreg+status,2+status,0+pclath+cstack]
 19148  356D  31B3  23B4  31B5   	fcall	_send_I2C_startBit
 19149                           
 19150                           ;I2C.c: 106:     send_I2C_controlByte(slaveAddress, 0);
 19151  3570  0876               	movf	I2C_writeRegister@slaveAddress+1,w
 19152  3571  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 19153  3572  0875               	movf	I2C_writeRegister@slaveAddress,w
 19154  3573  00F1               	movwf	send_I2C_controlByte@BlockAddress
 19155  3574  3000               	movlw	0
 19156  3575  00F3               	movwf	send_I2C_controlByte@RW_bit
 19157  3576  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 19158  3577  31B3  23E8  31B5   	fcall	_send_I2C_controlByte
 19159                           
 19160                           ;I2C.c: 107:     send_I2C_data(regAddress);
 19161  357A  0878               	movf	I2C_writeRegister@regAddress+1,w
 19162  357B  00F2               	movwf	send_I2C_data@databyte+1
 19163  357C  0877               	movf	I2C_writeRegister@regAddress,w
 19164  357D  00F1               	movwf	send_I2C_data@databyte
 19165  357E  31B3  23CD  31B5   	fcall	_send_I2C_data
 19166                           
 19167                           ;I2C.c: 108:     send_I2C_data(data);
 19168  3581  087A               	movf	I2C_writeRegister@data+1,w
 19169  3582  00F2               	movwf	send_I2C_data@databyte+1
 19170  3583  0879               	movf	I2C_writeRegister@data,w
 19171  3584  00F1               	movwf	send_I2C_data@databyte
 19172  3585  31B3  23CD  31B5   	fcall	_send_I2C_data
 19173                           
 19174                           ;I2C.c: 109:     send_I2C_stopBit();
 19175  3588  31B3  23BC         	fcall	_send_I2C_stopBit
 19176  358A  0008               	return
 19177  358B                     __end_of_I2C_writeRegister:	
 19178                           
 19179                           	psect	text66
 19180  33BC                     __ptext66:	
 19181 ;; *************** function _send_I2C_stopBit *****************
 19182 ;; Defined at:
 19183 ;;		line 78 in file "I2C.c"
 19184 ;; Parameters:    Size  Location     Type
 19185 ;;		None
 19186 ;; Auto vars:     Size  Location     Type
 19187 ;;		None
 19188 ;; Return value:  Size  Location     Type
 19189 ;;                  1    wreg      void 
 19190 ;; Registers used:
 19191 ;;		None
 19192 ;; Tracked objects:
 19193 ;;		On entry : 0/0
 19194 ;;		On exit  : 0/0
 19195 ;;		Unchanged: 0/0
 19196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19201 ;;Total ram usage:        0 bytes
 19202 ;; Hardware stack levels used:    1
 19203 ;; Hardware stack levels required when called:    1
 19204 ;; This function calls:
 19205 ;;		Nothing
 19206 ;; This function is called by:
 19207 ;;		_I2C_writeRegister
 19208 ;;		_readRegister
 19209 ;; This function uses a non-reentrant model
 19210 ;;
 19211                           
 19212                           
 19213                           ;psect for function _send_I2C_stopBit
 19214  33BC                     _send_I2C_stopBit:	
 19215                           
 19216                           ;I2C.c: 79:     PIR1bits.SSP1IF = 0;
 19217                           
 19218                           ;incstack = 0
 19219                           ; Regs used in _send_I2C_stopBit: []
 19220  33BC  0020               	movlb	0	; select bank0
 19221  33BD  1191               	bcf	17,3	;volatile
 19222                           
 19223                           ;I2C.c: 80:     SSPCON2bits.PEN = 1;
 19224  33BE  0024               	movlb	4	; select bank4
 19225  33BF  1516               	bsf	22,2	;volatile
 19226  33C0                     l308:	
 19227                           ;I2C.c: 81:     while (!PIR1bits.SSP1IF);
 19228                           
 19229  33C0  0020               	movlb	0	; select bank0
 19230  33C1  1991               	btfsc	17,3	;volatile
 19231  33C2  0008               	return
 19232  33C3  2BC0               	goto	l308
 19233  33C4                     __end_of_send_I2C_stopBit:	
 19234                           
 19235                           	psect	text67
 19236  33B4                     __ptext67:	
 19237 ;; *************** function _send_I2C_startBit *****************
 19238 ;; Defined at:
 19239 ;;		line 65 in file "I2C.c"
 19240 ;; Parameters:    Size  Location     Type
 19241 ;;		None
 19242 ;; Auto vars:     Size  Location     Type
 19243 ;;		None
 19244 ;; Return value:  Size  Location     Type
 19245 ;;                  1    wreg      void 
 19246 ;; Registers used:
 19247 ;;		None
 19248 ;; Tracked objects:
 19249 ;;		On entry : 0/0
 19250 ;;		On exit  : 0/0
 19251 ;;		Unchanged: 0/0
 19252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19257 ;;Total ram usage:        0 bytes
 19258 ;; Hardware stack levels used:    1
 19259 ;; Hardware stack levels required when called:    1
 19260 ;; This function calls:
 19261 ;;		Nothing
 19262 ;; This function is called by:
 19263 ;;		_I2C_writeRegister
 19264 ;;		_readRegister
 19265 ;; This function uses a non-reentrant model
 19266 ;;
 19267                           
 19268                           
 19269                           ;psect for function _send_I2C_startBit
 19270  33B4                     _send_I2C_startBit:	
 19271                           
 19272                           ;I2C.c: 66:     PIR1bits.SSP1IF = 0;
 19273                           
 19274                           ;incstack = 0
 19275                           ; Regs used in _send_I2C_startBit: []
 19276  33B4  0020               	movlb	0	; select bank0
 19277  33B5  1191               	bcf	17,3	;volatile
 19278                           
 19279                           ;I2C.c: 67:     SSPCON2bits.SEN = 1;
 19280  33B6  0024               	movlb	4	; select bank4
 19281  33B7  1416               	bsf	22,0	;volatile
 19282  33B8                     l296:	
 19283                           ;I2C.c: 68:     while (!PIR1bits.SSP1IF);
 19284                           
 19285  33B8  0020               	movlb	0	; select bank0
 19286  33B9  1991               	btfsc	17,3	;volatile
 19287  33BA  0008               	return
 19288  33BB  2BB8               	goto	l296
 19289  33BC                     __end_of_send_I2C_startBit:	
 19290                           
 19291                           	psect	text68
 19292  33CD                     __ptext68:	
 19293 ;; *************** function _send_I2C_data *****************
 19294 ;; Defined at:
 19295 ;;		line 33 in file "I2C.c"
 19296 ;; Parameters:    Size  Location     Type
 19297 ;;  databyte        2    1[COMMON] unsigned int 
 19298 ;; Auto vars:     Size  Location     Type
 19299 ;;		None
 19300 ;; Return value:  Size  Location     Type
 19301 ;;                  1    wreg      void 
 19302 ;; Registers used:
 19303 ;;		wreg
 19304 ;; Tracked objects:
 19305 ;;		On entry : 0/0
 19306 ;;		On exit  : 0/0
 19307 ;;		Unchanged: 0/0
 19308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19309 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19312 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19313 ;;Total ram usage:        2 bytes
 19314 ;; Hardware stack levels used:    1
 19315 ;; Hardware stack levels required when called:    1
 19316 ;; This function calls:
 19317 ;;		Nothing
 19318 ;; This function is called by:
 19319 ;;		_I2C_writeRegister
 19320 ;;		_readRegister
 19321 ;; This function uses a non-reentrant model
 19322 ;;
 19323                           
 19324                           
 19325                           ;psect for function _send_I2C_data
 19326  33CD                     _send_I2C_data:	
 19327                           
 19328                           ;I2C.c: 34:     PIR1bits.SSP1IF = 0;
 19329                           
 19330                           ;incstack = 0
 19331                           ; Regs used in _send_I2C_data: [wreg]
 19332  33CD  0020               	movlb	0	; select bank0
 19333  33CE  1191               	bcf	17,3	;volatile
 19334                           
 19335                           ;I2C.c: 35:     SSPBUF = databyte;
 19336  33CF  0871               	movf	send_I2C_data@databyte,w
 19337  33D0  0024               	movlb	4	; select bank4
 19338  33D1  0091               	movwf	17	;volatile
 19339  33D2                     l278:	
 19340                           ;I2C.c: 37:     while (!PIR1bits.SSP1IF);
 19341                           
 19342  33D2  0020               	movlb	0	; select bank0
 19343  33D3  1991               	btfsc	17,3	;volatile
 19344  33D4  0008               	return
 19345  33D5  2BD2               	goto	l278
 19346  33D6                     __end_of_send_I2C_data:	
 19347                           
 19348                           	psect	text69
 19349  33E8                     __ptext69:	
 19350 ;; *************** function _send_I2C_controlByte *****************
 19351 ;; Defined at:
 19352 ;;		line 53 in file "I2C.c"
 19353 ;; Parameters:    Size  Location     Type
 19354 ;;  BlockAddress    2    1[COMMON] unsigned int 
 19355 ;;  RW_bit          2    3[COMMON] unsigned int 
 19356 ;; Auto vars:     Size  Location     Type
 19357 ;;		None
 19358 ;; Return value:  Size  Location     Type
 19359 ;;                  1    wreg      void 
 19360 ;; Registers used:
 19361 ;;		wreg, status,2, status,0
 19362 ;; Tracked objects:
 19363 ;;		On entry : 0/0
 19364 ;;		On exit  : 0/0
 19365 ;;		Unchanged: 0/0
 19366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19367 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19370 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19371 ;;Total ram usage:        4 bytes
 19372 ;; Hardware stack levels used:    1
 19373 ;; Hardware stack levels required when called:    1
 19374 ;; This function calls:
 19375 ;;		Nothing
 19376 ;; This function is called by:
 19377 ;;		_I2C_writeRegister
 19378 ;;		_readRegister
 19379 ;; This function uses a non-reentrant model
 19380 ;;
 19381                           
 19382                           
 19383                           ;psect for function _send_I2C_controlByte
 19384  33E8                     _send_I2C_controlByte:	
 19385                           
 19386                           ;I2C.c: 54:     PIR1bits.SSP1IF = 0;
 19387                           
 19388                           ;incstack = 0
 19389                           ; Regs used in _send_I2C_controlByte: [wreg+status,2+status,0]
 19390  33E8  0020               	movlb	0	; select bank0
 19391  33E9  1191               	bcf	17,3	;volatile
 19392                           
 19393                           ;I2C.c: 60:     SSPBUF = (((0b0000 << 4) | (BlockAddress << 1)) + RW_bit);
 19394  33EA  3571               	lslf	send_I2C_controlByte@BlockAddress,w
 19395  33EB  0773               	addwf	send_I2C_controlByte@RW_bit,w
 19396  33EC  0024               	movlb	4	; select bank4
 19397  33ED  0091               	movwf	17	;volatile
 19398  33EE                     l290:	
 19399                           ;I2C.c: 62:     while (!PIR1bits.SSP1IF);
 19400                           
 19401  33EE  0020               	movlb	0	; select bank0
 19402  33EF  1991               	btfsc	17,3	;volatile
 19403  33F0  0008               	return
 19404  33F1  2BEE               	goto	l290
 19405  33F2                     __end_of_send_I2C_controlByte:	
 19406                           
 19407                           	psect	text70
 19408  3406                     __ptext70:	
 19409 ;; *************** function _init_TMR1 *****************
 19410 ;; Defined at:
 19411 ;;		line 189 in file "main.c"
 19412 ;; Parameters:    Size  Location     Type
 19413 ;;		None
 19414 ;; Auto vars:     Size  Location     Type
 19415 ;;		None
 19416 ;; Return value:  Size  Location     Type
 19417 ;;                  1    wreg      void 
 19418 ;; Registers used:
 19419 ;;		wreg, status,2, status,0
 19420 ;; Tracked objects:
 19421 ;;		On entry : 0/0
 19422 ;;		On exit  : 0/0
 19423 ;;		Unchanged: 0/0
 19424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19429 ;;Total ram usage:        0 bytes
 19430 ;; Hardware stack levels used:    1
 19431 ;; Hardware stack levels required when called:    1
 19432 ;; This function calls:
 19433 ;;		Nothing
 19434 ;; This function is called by:
 19435 ;;		_main
 19436 ;; This function uses a non-reentrant model
 19437 ;;
 19438                           
 19439                           
 19440                           ;psect for function _init_TMR1
 19441  3406                     _init_TMR1:	
 19442                           
 19443                           ;main.c: 192:     T1CONbits.T1CKPS = 0b00;
 19444                           
 19445                           ;incstack = 0
 19446                           ; Regs used in _init_TMR1: [wreg+status,2+status,0]
 19447  3406  30CF               	movlw	-49
 19448  3407  0020               	movlb	0	; select bank0
 19449  3408  0598               	andwf	24,f	;volatile
 19450                           
 19451                           ;main.c: 194:     TMR1 = 0;
 19452  3409  0196               	clrf	22	;volatile
 19453  340A  0197               	clrf	23	;volatile
 19454                           
 19455                           ;main.c: 196:     T1CONbits.TMR1ON = 1;
 19456  340B  1418               	bsf	24,0	;volatile
 19457                           
 19458                           ;main.c: 198:     PIE1bits.TMR1IE = 1;
 19459  340C  0021               	movlb	1	; select bank1
 19460  340D  1411               	bsf	17,0	;volatile
 19461                           
 19462                           ;main.c: 200:     INTCONbits.PEIE = 1;
 19463  340E  170B               	bsf	11,6	;volatile
 19464                           
 19465                           ;main.c: 202:     (INTCONbits.GIE = 1);
 19466  340F  178B               	bsf	11,7	;volatile
 19467  3410  0008               	return
 19468  3411                     __end_of_init_TMR1:	
 19469                           
 19470                           	psect	text71
 19471  33A9                     __ptext71:	
 19472 ;; *************** function _init_RGB *****************
 19473 ;; Defined at:
 19474 ;;		line 6 in file "RGB.c"
 19475 ;; Parameters:    Size  Location     Type
 19476 ;;		None
 19477 ;; Auto vars:     Size  Location     Type
 19478 ;;		None
 19479 ;; Return value:  Size  Location     Type
 19480 ;;                  1    wreg      void 
 19481 ;; Registers used:
 19482 ;;		None
 19483 ;; Tracked objects:
 19484 ;;		On entry : 0/0
 19485 ;;		On exit  : 0/0
 19486 ;;		Unchanged: 0/0
 19487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19492 ;;Total ram usage:        0 bytes
 19493 ;; Hardware stack levels used:    1
 19494 ;; Hardware stack levels required when called:    1
 19495 ;; This function calls:
 19496 ;;		Nothing
 19497 ;; This function is called by:
 19498 ;;		_main
 19499 ;; This function uses a non-reentrant model
 19500 ;;
 19501                           
 19502                           
 19503                           ;psect for function _init_RGB
 19504  33A9                     _init_RGB:	
 19505                           
 19506                           ;RGB.c: 8:     LATAbits.LATA4 = 1;
 19507                           
 19508                           ;incstack = 0
 19509                           ; Regs used in _init_RGB: []
 19510  33A9  0022               	movlb	2	; select bank2
 19511  33AA  160C               	bsf	12,4	;volatile
 19512                           
 19513                           ;RGB.c: 9:     LATAbits.LATA5 = 1;
 19514  33AB  168C               	bsf	12,5	;volatile
 19515                           
 19516                           ;RGB.c: 10:     LATEbits.LATE0 = 1;
 19517  33AC  1410               	bsf	16,0	;volatile
 19518  33AD  0008               	return
 19519  33AE                     __end_of_init_RGB:	
 19520                           
 19521                           	psect	text72
 19522  341D                     __ptext72:	
 19523 ;; *************** function _init_I2C *****************
 19524 ;; Defined at:
 19525 ;;		line 10 in file "I2C.c"
 19526 ;; Parameters:    Size  Location     Type
 19527 ;;		None
 19528 ;; Auto vars:     Size  Location     Type
 19529 ;;		None
 19530 ;; Return value:  Size  Location     Type
 19531 ;;                  1    wreg      void 
 19532 ;; Registers used:
 19533 ;;		wreg, status,2, status,0
 19534 ;; Tracked objects:
 19535 ;;		On entry : 0/0
 19536 ;;		On exit  : 0/0
 19537 ;;		Unchanged: 0/0
 19538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19541 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19542 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19543 ;;Total ram usage:        1 bytes
 19544 ;; Hardware stack levels used:    1
 19545 ;; Hardware stack levels required when called:    1
 19546 ;; This function calls:
 19547 ;;		Nothing
 19548 ;; This function is called by:
 19549 ;;		_main
 19550 ;; This function uses a non-reentrant model
 19551 ;;
 19552                           
 19553                           
 19554                           ;psect for function _init_I2C
 19555  341D                     _init_I2C:	
 19556                           
 19557                           ;I2C.c: 14:     SSPCONbits.SSPM = 0x08;
 19558                           
 19559                           ;incstack = 0
 19560                           ; Regs used in _init_I2C: [wreg+status,2+status,0]
 19561  341D  0024               	movlb	4	; select bank4
 19562  341E  0815               	movf	21,w	;volatile
 19563  341F  39F0               	andlw	-16
 19564  3420  3808               	iorlw	8
 19565  3421  0095               	movwf	21	;volatile
 19566                           
 19567                           ;I2C.c: 15:     SSPCONbits.SSPEN = 1;
 19568  3422  1695               	bsf	21,5	;volatile
 19569                           
 19570                           ;I2C.c: 24:     SSPADD = 39;
 19571  3423  3027               	movlw	39
 19572  3424  0092               	movwf	18	;volatile
 19573                           
 19574                           ;I2C.c: 27:     _delay((unsigned long)((10)*(16000000/4000.0)));
 19575  3425  3034               	movlw	52
 19576  3426  00F1               	movwf	??_init_I2C
 19577  3427  30F2               	movlw	242
 19578  3428                     u11527:	
 19579  3428  0B89               	decfsz	9,f
 19580  3429  2C28               	goto	u11527
 19581  342A  0BF1               	decfsz	??_init_I2C,f
 19582  342B  2C28               	goto	u11527
 19583  342C  0008               	return
 19584  342D                     __end_of_init_I2C:	
 19585                           
 19586                           	psect	text73
 19587  0808                     __ptext73:	
 19588 ;; *************** function _init_GPIO *****************
 19589 ;; Defined at:
 19590 ;;		line 206 in file "main.c"
 19591 ;; Parameters:    Size  Location     Type
 19592 ;;		None
 19593 ;; Auto vars:     Size  Location     Type
 19594 ;;		None
 19595 ;; Return value:  Size  Location     Type
 19596 ;;                  1    wreg      void 
 19597 ;; Registers used:
 19598 ;;		wreg, status,2, status,0
 19599 ;; Tracked objects:
 19600 ;;		On entry : 0/0
 19601 ;;		On exit  : 0/0
 19602 ;;		Unchanged: 0/0
 19603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19608 ;;Total ram usage:        0 bytes
 19609 ;; Hardware stack levels used:    1
 19610 ;; Hardware stack levels required when called:    1
 19611 ;; This function calls:
 19612 ;;		Nothing
 19613 ;; This function is called by:
 19614 ;;		_main
 19615 ;; This function uses a non-reentrant model
 19616 ;;
 19617                           
 19618                           
 19619                           ;psect for function _init_GPIO
 19620  0808                     _init_GPIO:	
 19621                           
 19622                           ;main.c: 212:     TRISBbits.TRISB2 = 0;
 19623                           
 19624                           ;incstack = 0
 19625                           ; Regs used in _init_GPIO: [wreg+status,2+status,0]
 19626  0808  0021               	movlb	1	; select bank1
 19627  0809  110D               	bcf	13,2	;volatile
 19628                           
 19629                           ;main.c: 213:     ANSELBbits.ANSB2 = 0;
 19630  080A  0023               	movlb	3	; select bank3
 19631  080B  110D               	bcf	13,2	;volatile
 19632                           
 19633                           ;main.c: 214:     TRISBbits.TRISB3 = 1;
 19634  080C  0021               	movlb	1	; select bank1
 19635  080D  158D               	bsf	13,3	;volatile
 19636                           
 19637                           ;main.c: 215:     ANSELBbits.ANSB3 = 0;
 19638  080E  0023               	movlb	3	; select bank3
 19639  080F  118D               	bcf	13,3	;volatile
 19640                           
 19641                           ;main.c: 220:     ANSELCbits.ANSC4 = 0;
 19642  0810  120E               	bcf	14,4	;volatile
 19643                           
 19644                           ;main.c: 221:     ANSELCbits.ANSC5 = 0;
 19645  0811  128E               	bcf	14,5	;volatile
 19646                           
 19647                           ;main.c: 222:     TRISCbits.TRISC4 = 1;
 19648  0812  0021               	movlb	1	; select bank1
 19649  0813  160E               	bsf	14,4	;volatile
 19650                           
 19651                           ;main.c: 223:     TRISCbits.TRISC5 = 1;
 19652  0814  168E               	bsf	14,5	;volatile
 19653                           
 19654                           ;main.c: 232:     TRISAbits.TRISA4 = 0;
 19655  0815  120C               	bcf	12,4	;volatile
 19656                           
 19657                           ;main.c: 233:     TRISAbits.TRISA5 = 0;
 19658  0816  128C               	bcf	12,5	;volatile
 19659                           
 19660                           ;main.c: 234:     TRISEbits.TRISE0 = 0;
 19661  0817  1010               	bcf	16,0	;volatile
 19662                           
 19663                           ;main.c: 239:     TRISAbits.TRISA3 = 0;
 19664  0818  118C               	bcf	12,3	;volatile
 19665                           
 19666                           ;main.c: 240:     LATAbits.LATA3 = 0;
 19667  0819  0022               	movlb	2	; select bank2
 19668  081A  118C               	bcf	12,3	;volatile
 19669                           
 19670                           ;main.c: 246:     PPSLOCK = 0x55;
 19671  081B  3055               	movlw	85
 19672  081C  003C               	movlb	28	; select bank28
 19673  081D  008F               	movwf	15	;volsfr
 19674                           
 19675                           ;main.c: 247:     PPSLOCK = 0xAA;
 19676  081E  30AA               	movlw	170
 19677  081F  008F               	movwf	15	;volsfr
 19678                           
 19679                           ;main.c: 248:     PPSLOCKbits.PPSLOCKED = 0x00;
 19680  0820  100F               	bcf	15,0	;volsfr
 19681                           
 19682                           ;main.c: 252:     RC4PPSbits.RC4PPS = 0x0011;
 19683  0821  003D               	movlb	29	; select bank29
 19684  0822  0824               	movf	36,w	;volatile
 19685  0823  39E0               	andlw	-32
 19686  0824  3811               	iorlw	17
 19687  0825  00A4               	movwf	36	;volatile
 19688                           
 19689                           ;main.c: 253:     SSPDATPPSbits.SSPDATPPS = 0x0014;
 19690  0826  003C               	movlb	28	; select bank28
 19691  0827  0821               	movf	33,w	;volatile
 19692  0828  39E0               	andlw	-32
 19693  0829  3814               	iorlw	20
 19694  082A  00A1               	movwf	33	;volatile
 19695                           
 19696                           ;main.c: 254:     SSPCLKPPSbits.SSPCLKPPS = 0x0015;
 19697  082B  0820               	movf	32,w	;volatile
 19698  082C  39E0               	andlw	-32
 19699  082D  3815               	iorlw	21
 19700  082E  00A0               	movwf	32	;volatile
 19701                           
 19702                           ;main.c: 255:     RC5PPSbits.RC5PPS = 0x0010;
 19703  082F  003D               	movlb	29	; select bank29
 19704  0830  0825               	movf	37,w	;volatile
 19705  0831  39E0               	andlw	-32
 19706  0832  3810               	iorlw	16
 19707  0833  00A5               	movwf	37	;volatile
 19708                           
 19709                           ;main.c: 258:     RB2PPSbits.RB2PPS = 0x14;
 19710  0834  081A               	movf	26,w	;volatile
 19711  0835  39E0               	andlw	-32
 19712  0836  3814               	iorlw	20
 19713  0837  009A               	movwf	26	;volatile
 19714                           
 19715                           ;main.c: 259:     RXPPSbits.RXPPS = 0x0B;
 19716  0838  003C               	movlb	28	; select bank28
 19717  0839  0824               	movf	36,w	;volatile
 19718  083A  39E0               	andlw	-32
 19719  083B  380B               	iorlw	11
 19720  083C  00A4               	movwf	36	;volatile
 19721                           
 19722                           ;main.c: 261:     PPSLOCK = 0x55;
 19723  083D  3055               	movlw	85
 19724  083E  008F               	movwf	15	;volsfr
 19725                           
 19726                           ;main.c: 262:     PPSLOCK = 0xAA;
 19727  083F  30AA               	movlw	170
 19728  0840  008F               	movwf	15	;volsfr
 19729                           
 19730                           ;main.c: 263:     PPSLOCKbits.PPSLOCKED = 0x01;
 19731  0841  140F               	bsf	15,0	;volsfr
 19732  0842  0008               	return
 19733  0843                     __end_of_init_GPIO:	
 19734                           
 19735                           	psect	text74
 19736  33AE                     __ptext74:	
 19737 ;; *************** function _initWDT *****************
 19738 ;; Defined at:
 19739 ;;		line 267 in file "main.c"
 19740 ;; Parameters:    Size  Location     Type
 19741 ;;		None
 19742 ;; Auto vars:     Size  Location     Type
 19743 ;;		None
 19744 ;; Return value:  Size  Location     Type
 19745 ;;                  1    wreg      void 
 19746 ;; Registers used:
 19747 ;;		wreg, status,2, status,0
 19748 ;; Tracked objects:
 19749 ;;		On entry : 0/0
 19750 ;;		On exit  : 0/0
 19751 ;;		Unchanged: 0/0
 19752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19757 ;;Total ram usage:        0 bytes
 19758 ;; Hardware stack levels used:    1
 19759 ;; Hardware stack levels required when called:    1
 19760 ;; This function calls:
 19761 ;;		Nothing
 19762 ;; This function is called by:
 19763 ;;		_main
 19764 ;; This function uses a non-reentrant model
 19765 ;;
 19766                           
 19767                           
 19768                           ;psect for function _initWDT
 19769  33AE                     _initWDT:	
 19770                           
 19771                           ;main.c: 269:     WDTCONbits.WDTPS = 0b01101;
 19772                           
 19773                           ;incstack = 0
 19774                           ; Regs used in _initWDT: [wreg+status,2+status,0]
 19775  33AE  0021               	movlb	1	; select bank1
 19776  33AF  0817               	movf	23,w	;volatile
 19777  33B0  39C1               	andlw	-63
 19778  33B1  381A               	iorlw	26
 19779  33B2  0097               	movwf	23	;volatile
 19780  33B3  0008               	return
 19781  33B4                     __end_of_initWDT:	
 19782                           
 19783                           	psect	text75
 19784  07FD                     __ptext75:	
 19785 ;; *************** function _initClock *****************
 19786 ;; Defined at:
 19787 ;;		line 180 in file "main.c"
 19788 ;; Parameters:    Size  Location     Type
 19789 ;;		None
 19790 ;; Auto vars:     Size  Location     Type
 19791 ;;		None
 19792 ;; Return value:  Size  Location     Type
 19793 ;;                  1    wreg      void 
 19794 ;; Registers used:
 19795 ;;		status,2, status,0, pclath, cstack
 19796 ;; Tracked objects:
 19797 ;;		On entry : 0/0
 19798 ;;		On exit  : 0/0
 19799 ;;		Unchanged: 0/0
 19800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19805 ;;Total ram usage:        0 bytes
 19806 ;; Hardware stack levels used:    1
 19807 ;; Hardware stack levels required when called:    2
 19808 ;; This function calls:
 19809 ;;		_internal_16
 19810 ;; This function is called by:
 19811 ;;		_main
 19812 ;; This function uses a non-reentrant model
 19813 ;;
 19814                           
 19815                           
 19816                           ;psect for function _initClock
 19817  07FD                     _initClock:	
 19818                           
 19819                           ;main.c: 182:     internal_16();
 19820                           
 19821                           ;incstack = 0
 19822                           ; Regs used in _initClock: [status,2+status,0+pclath+cstack]
 19823  07FD  31B3  23C4         	fcall	_internal_16
 19824  07FF  0008               	return
 19825  0800                     __end_of_initClock:	
 19826                           
 19827                           	psect	text76
 19828  33C4                     __ptext76:	
 19829 ;; *************** function _internal_16 *****************
 19830 ;; Defined at:
 19831 ;;		line 26 in file "pic16f1719_internals.c"
 19832 ;; Parameters:    Size  Location     Type
 19833 ;;		None
 19834 ;; Auto vars:     Size  Location     Type
 19835 ;;		None
 19836 ;; Return value:  Size  Location     Type
 19837 ;;                  1    wreg      void 
 19838 ;; Registers used:
 19839 ;;		None
 19840 ;; Tracked objects:
 19841 ;;		On entry : 0/0
 19842 ;;		On exit  : 0/0
 19843 ;;		Unchanged: 0/0
 19844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19849 ;;Total ram usage:        0 bytes
 19850 ;; Hardware stack levels used:    1
 19851 ;; Hardware stack levels required when called:    1
 19852 ;; This function calls:
 19853 ;;		Nothing
 19854 ;; This function is called by:
 19855 ;;		_initClock
 19856 ;; This function uses a non-reentrant model
 19857 ;;
 19858                           
 19859                           
 19860                           ;psect for function _internal_16
 19861  33C4                     _internal_16:	
 19862                           
 19863                           ;pic16f1719_internals.c: 28: SCS0 = 0;
 19864                           
 19865                           ;incstack = 0
 19866                           ; Regs used in _internal_16: []
 19867  33C4  0021               	movlb	1	; select bank1
 19868  33C5  1019               	bcf	25,0	;volatile
 19869                           
 19870                           ;pic16f1719_internals.c: 29: SCS1 = 0;
 19871  33C6  1099               	bcf	25,1	;volatile
 19872                           
 19873                           ;pic16f1719_internals.c: 31: IRCF0 = 1;
 19874  33C7  1599               	bsf	25,3	;volatile
 19875                           
 19876                           ;pic16f1719_internals.c: 32: IRCF1 = 1;
 19877  33C8  1619               	bsf	25,4	;volatile
 19878                           
 19879                           ;pic16f1719_internals.c: 33: IRCF2 = 1;
 19880  33C9  1699               	bsf	25,5	;volatile
 19881                           
 19882                           ;pic16f1719_internals.c: 34: IRCF3 = 1;
 19883  33CA  1719               	bsf	25,6	;volatile
 19884                           
 19885                           ;pic16f1719_internals.c: 36: SPLLEN = 0;
 19886  33CB  1399               	bcf	25,7	;volatile
 19887  33CC  0008               	return
 19888  33CD                     __end_of_internal_16:	
 19889                           
 19890                           	psect	text77
 19891  2D1A                     __ptext77:	
 19892 ;; *************** function _EUSART_Initialize *****************
 19893 ;; Defined at:
 19894 ;;		line 6 in file "EUSART.c"
 19895 ;; Parameters:    Size  Location     Type
 19896 ;;  baudrate        4   18[BANK0 ] const long 
 19897 ;; Auto vars:     Size  Location     Type
 19898 ;;  x               2   10[COMMON] unsigned int 
 19899 ;; Return value:  Size  Location     Type
 19900 ;;                  1    wreg      unsigned char 
 19901 ;; Registers used:
 19902 ;;		wreg, status,2, status,0, pclath, cstack
 19903 ;; Tracked objects:
 19904 ;;		On entry : 0/0
 19905 ;;		On exit  : 0/0
 19906 ;;		Unchanged: 0/0
 19907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19908 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19909 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19910 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19911 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19912 ;;Total ram usage:       18 bytes
 19913 ;; Hardware stack levels used:    1
 19914 ;; Hardware stack levels required when called:    2
 19915 ;; This function calls:
 19916 ;;		___aldiv
 19917 ;; This function is called by:
 19918 ;;		_main
 19919 ;; This function uses a non-reentrant model
 19920 ;;
 19921                           
 19922                           
 19923                           ;psect for function _EUSART_Initialize
 19924  2D1A                     _EUSART_Initialize:	
 19925                           
 19926                           ;EUSART.c: 6: char EUSART_Initialize(const long int baudrate);EUSART.c: 7: {;EUSART.c: 8
      +                          :  unsigned int x;;EUSART.c: 9:  x = (16000000 - baudrate*64)/(baudrate*64);
 19927                           
 19928                           ;incstack = 0
 19929                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 19930  2D1A  0020               	movlb	0	; select bank0
 19931  2D1B  0832               	movf	EUSART_Initialize@baudrate,w
 19932  2D1C  00B6               	movwf	??_EUSART_Initialize
 19933  2D1D  0833               	movf	EUSART_Initialize@baudrate+1,w
 19934  2D1E  00B7               	movwf	??_EUSART_Initialize+1
 19935  2D1F  0834               	movf	EUSART_Initialize@baudrate+2,w
 19936  2D20  00B8               	movwf	??_EUSART_Initialize+2
 19937  2D21  0835               	movf	EUSART_Initialize@baudrate+3,w
 19938  2D22  00B9               	movwf	??_EUSART_Initialize+3
 19939  2D23  3006               	movlw	6
 19940  2D24                     u11405:	
 19941  2D24  35B6               	lslf	??_EUSART_Initialize,f
 19942  2D25  0DB7               	rlf	??_EUSART_Initialize+1,f
 19943  2D26  0DB8               	rlf	??_EUSART_Initialize+2,f
 19944  2D27  0DB9               	rlf	??_EUSART_Initialize+3,f
 19945  2D28  0B89               	decfsz	9,f
 19946  2D29  2D24               	goto	u11405
 19947  2D2A  0839               	movf	??_EUSART_Initialize+3,w
 19948  2D2B  00A7               	movwf	___aldiv@divisor+3
 19949  2D2C  0838               	movf	??_EUSART_Initialize+2,w
 19950  2D2D  00A6               	movwf	___aldiv@divisor+2
 19951  2D2E  0837               	movf	??_EUSART_Initialize+1,w
 19952  2D2F  00A5               	movwf	___aldiv@divisor+1
 19953  2D30  0836               	movf	??_EUSART_Initialize,w
 19954  2D31  00A4               	movwf	___aldiv@divisor
 19955  2D32  0832               	movf	EUSART_Initialize@baudrate,w
 19956  2D33  00BA               	movwf	??_EUSART_Initialize+4
 19957  2D34  0833               	movf	EUSART_Initialize@baudrate+1,w
 19958  2D35  00BB               	movwf	??_EUSART_Initialize+5
 19959  2D36  0834               	movf	EUSART_Initialize@baudrate+2,w
 19960  2D37  00BC               	movwf	??_EUSART_Initialize+6
 19961  2D38  0835               	movf	EUSART_Initialize@baudrate+3,w
 19962  2D39  00BD               	movwf	??_EUSART_Initialize+7
 19963  2D3A  3006               	movlw	6
 19964  2D3B                     u11415:	
 19965  2D3B  35BA               	lslf	??_EUSART_Initialize+4,f
 19966  2D3C  0DBB               	rlf	??_EUSART_Initialize+5,f
 19967  2D3D  0DBC               	rlf	??_EUSART_Initialize+6,f
 19968  2D3E  0DBD               	rlf	??_EUSART_Initialize+7,f
 19969  2D3F  0B89               	decfsz	9,f
 19970  2D40  2D3B               	goto	u11415
 19971  2D41  3000               	movlw	0
 19972  2D42  00BE               	movwf	??_EUSART_Initialize+8
 19973  2D43  3024               	movlw	36
 19974  2D44  00BF               	movwf	??_EUSART_Initialize+9
 19975  2D45  30F4               	movlw	244
 19976  2D46  00C0               	movwf	??_EUSART_Initialize+10
 19977  2D47  3000               	movlw	0
 19978  2D48  00C1               	movwf	??_EUSART_Initialize+11
 19979  2D49  083A               	movf	??_EUSART_Initialize+4,w
 19980  2D4A  02BE               	subwf	??_EUSART_Initialize+8,f
 19981  2D4B  083B               	movf	??_EUSART_Initialize+5,w
 19982  2D4C  3BBF               	subwfb	??_EUSART_Initialize+9,f
 19983  2D4D  083C               	movf	??_EUSART_Initialize+6,w
 19984  2D4E  3BC0               	subwfb	??_EUSART_Initialize+10,f
 19985  2D4F  083D               	movf	??_EUSART_Initialize+7,w
 19986  2D50  3BC1               	subwfb	??_EUSART_Initialize+11,f
 19987  2D51  0841               	movf	??_EUSART_Initialize+11,w
 19988  2D52  00AB               	movwf	___aldiv@dividend+3
 19989  2D53  0840               	movf	??_EUSART_Initialize+10,w
 19990  2D54  00AA               	movwf	___aldiv@dividend+2
 19991  2D55  083F               	movf	??_EUSART_Initialize+9,w
 19992  2D56  00A9               	movwf	___aldiv@dividend+1
 19993  2D57  083E               	movf	??_EUSART_Initialize+8,w
 19994  2D58  00A8               	movwf	___aldiv@dividend
 19995  2D59  31AB  2361  31AD   	fcall	___aldiv
 19996  2D5C  0020               	movlb	0	; select bank0
 19997  2D5D  0825               	movf	?___aldiv+1,w
 19998  2D5E  00FB               	movwf	EUSART_Initialize@x+1
 19999  2D5F  0824               	movf	?___aldiv,w
 20000  2D60  00FA               	movwf	EUSART_Initialize@x
 20001                           
 20002                           ;EUSART.c: 10:  if(x>255)
 20003  2D61  3001               	movlw	1
 20004  2D62  027B               	subwf	EUSART_Initialize@x+1,w
 20005  2D63  3000               	movlw	0
 20006  2D64  1903               	skipnz
 20007  2D65  027A               	subwf	EUSART_Initialize@x,w
 20008  2D66  1C03               	skipc
 20009  2D67  2DB0               	goto	l8344
 20010                           
 20011                           ;EUSART.c: 11:  {;EUSART.c: 12:   x = (16000000 - baudrate*16)/(baudrate*16);
 20012  2D68  0832               	movf	EUSART_Initialize@baudrate,w
 20013  2D69  00B6               	movwf	??_EUSART_Initialize
 20014  2D6A  0833               	movf	EUSART_Initialize@baudrate+1,w
 20015  2D6B  00B7               	movwf	??_EUSART_Initialize+1
 20016  2D6C  0834               	movf	EUSART_Initialize@baudrate+2,w
 20017  2D6D  00B8               	movwf	??_EUSART_Initialize+2
 20018  2D6E  0835               	movf	EUSART_Initialize@baudrate+3,w
 20019  2D6F  00B9               	movwf	??_EUSART_Initialize+3
 20020  2D70  3004               	movlw	4
 20021  2D71                     u11435:	
 20022  2D71  35B6               	lslf	??_EUSART_Initialize,f
 20023  2D72  0DB7               	rlf	??_EUSART_Initialize+1,f
 20024  2D73  0DB8               	rlf	??_EUSART_Initialize+2,f
 20025  2D74  0DB9               	rlf	??_EUSART_Initialize+3,f
 20026  2D75  0B89               	decfsz	9,f
 20027  2D76  2D71               	goto	u11435
 20028  2D77  0839               	movf	??_EUSART_Initialize+3,w
 20029  2D78  00A7               	movwf	___aldiv@divisor+3
 20030  2D79  0838               	movf	??_EUSART_Initialize+2,w
 20031  2D7A  00A6               	movwf	___aldiv@divisor+2
 20032  2D7B  0837               	movf	??_EUSART_Initialize+1,w
 20033  2D7C  00A5               	movwf	___aldiv@divisor+1
 20034  2D7D  0836               	movf	??_EUSART_Initialize,w
 20035  2D7E  00A4               	movwf	___aldiv@divisor
 20036  2D7F  0832               	movf	EUSART_Initialize@baudrate,w
 20037  2D80  00BA               	movwf	??_EUSART_Initialize+4
 20038  2D81  0833               	movf	EUSART_Initialize@baudrate+1,w
 20039  2D82  00BB               	movwf	??_EUSART_Initialize+5
 20040  2D83  0834               	movf	EUSART_Initialize@baudrate+2,w
 20041  2D84  00BC               	movwf	??_EUSART_Initialize+6
 20042  2D85  0835               	movf	EUSART_Initialize@baudrate+3,w
 20043  2D86  00BD               	movwf	??_EUSART_Initialize+7
 20044  2D87  3004               	movlw	4
 20045  2D88                     u11445:	
 20046  2D88  35BA               	lslf	??_EUSART_Initialize+4,f
 20047  2D89  0DBB               	rlf	??_EUSART_Initialize+5,f
 20048  2D8A  0DBC               	rlf	??_EUSART_Initialize+6,f
 20049  2D8B  0DBD               	rlf	??_EUSART_Initialize+7,f
 20050  2D8C  0B89               	decfsz	9,f
 20051  2D8D  2D88               	goto	u11445
 20052  2D8E  3000               	movlw	0
 20053  2D8F  00BE               	movwf	??_EUSART_Initialize+8
 20054  2D90  3024               	movlw	36
 20055  2D91  00BF               	movwf	??_EUSART_Initialize+9
 20056  2D92  30F4               	movlw	244
 20057  2D93  00C0               	movwf	??_EUSART_Initialize+10
 20058  2D94  3000               	movlw	0
 20059  2D95  00C1               	movwf	??_EUSART_Initialize+11
 20060  2D96  083A               	movf	??_EUSART_Initialize+4,w
 20061  2D97  02BE               	subwf	??_EUSART_Initialize+8,f
 20062  2D98  083B               	movf	??_EUSART_Initialize+5,w
 20063  2D99  3BBF               	subwfb	??_EUSART_Initialize+9,f
 20064  2D9A  083C               	movf	??_EUSART_Initialize+6,w
 20065  2D9B  3BC0               	subwfb	??_EUSART_Initialize+10,f
 20066  2D9C  083D               	movf	??_EUSART_Initialize+7,w
 20067  2D9D  3BC1               	subwfb	??_EUSART_Initialize+11,f
 20068  2D9E  0841               	movf	??_EUSART_Initialize+11,w
 20069  2D9F  00AB               	movwf	___aldiv@dividend+3
 20070  2DA0  0840               	movf	??_EUSART_Initialize+10,w
 20071  2DA1  00AA               	movwf	___aldiv@dividend+2
 20072  2DA2  083F               	movf	??_EUSART_Initialize+9,w
 20073  2DA3  00A9               	movwf	___aldiv@dividend+1
 20074  2DA4  083E               	movf	??_EUSART_Initialize+8,w
 20075  2DA5  00A8               	movwf	___aldiv@dividend
 20076  2DA6  31AB  2361  31AD   	fcall	___aldiv
 20077  2DA9  0020               	movlb	0	; select bank0
 20078  2DAA  0825               	movf	?___aldiv+1,w
 20079  2DAB  00FB               	movwf	EUSART_Initialize@x+1
 20080  2DAC  0824               	movf	?___aldiv,w
 20081  2DAD  00FA               	movwf	EUSART_Initialize@x
 20082                           
 20083                           ;EUSART.c: 13:   BRGH = 1;
 20084  2DAE  0023               	movlb	3	; select bank3
 20085  2DAF  151E               	bsf	30,2	;volatile
 20086  2DB0                     l8344:	
 20087                           
 20088                           ;EUSART.c: 15:  if(x<256)
 20089  2DB0  3001               	movlw	1
 20090  2DB1  027B               	subwf	EUSART_Initialize@x+1,w
 20091  2DB2  3000               	movlw	0
 20092  2DB3  1903               	skipnz
 20093  2DB4  027A               	subwf	EUSART_Initialize@x,w
 20094  2DB5  1803               	skipnc
 20095  2DB6  0008               	return
 20096                           
 20097                           ;EUSART.c: 16:  {;EUSART.c: 17:    SPBRG = x;
 20098  2DB7  087A               	movf	EUSART_Initialize@x,w
 20099  2DB8  0023               	movlb	3	; select bank3
 20100  2DB9  009B               	movwf	27	;volatile
 20101                           
 20102                           ;EUSART.c: 18:    SYNC = 0;
 20103  2DBA  121E               	bcf	30,4	;volatile
 20104                           
 20105                           ;EUSART.c: 19:    SPEN = 1;
 20106  2DBB  179D               	bsf	29,7	;volatile
 20107                           
 20108                           ;EUSART.c: 20:           TRISC7 = 1;
 20109  2DBC  0021               	movlb	1	; select bank1
 20110  2DBD  178E               	bsf	14,7	;volatile
 20111                           
 20112                           ;EUSART.c: 21:           TRISC6 = 1;
 20113  2DBE  170E               	bsf	14,6	;volatile
 20114                           
 20115                           ;EUSART.c: 22:           CREN = 1;
 20116  2DBF  0023               	movlb	3	; select bank3
 20117  2DC0  161D               	bsf	29,4	;volatile
 20118                           
 20119                           ;EUSART.c: 23:           TXEN = 1;
 20120  2DC1  169E               	bsf	30,5	;volatile
 20121  2DC2  0008               	return
 20122  2DC3                     __end_of_EUSART_Initialize:	
 20123                           
 20124                           	psect	text78
 20125  2B61                     __ptext78:	
 20126 ;; *************** function ___aldiv *****************
 20127 ;; Defined at:
 20128 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
 20129 ;; Parameters:    Size  Location     Type
 20130 ;;  divisor         4    4[BANK0 ] long 
 20131 ;;  dividend        4    8[BANK0 ] long 
 20132 ;; Auto vars:     Size  Location     Type
 20133 ;;  quotient        4   14[BANK0 ] long 
 20134 ;;  sign            1   13[BANK0 ] unsigned char 
 20135 ;;  counter         1   12[BANK0 ] unsigned char 
 20136 ;; Return value:  Size  Location     Type
 20137 ;;                  4    4[BANK0 ] long 
 20138 ;; Registers used:
 20139 ;;		wreg, status,2, status,0
 20140 ;; Tracked objects:
 20141 ;;		On entry : 0/0
 20142 ;;		On exit  : 0/0
 20143 ;;		Unchanged: 0/0
 20144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20145 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20146 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20147 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20148 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20149 ;;Total ram usage:       15 bytes
 20150 ;; Hardware stack levels used:    1
 20151 ;; Hardware stack levels required when called:    1
 20152 ;; This function calls:
 20153 ;;		Nothing
 20154 ;; This function is called by:
 20155 ;;		_EUSART_Initialize
 20156 ;;		_setCellUndervoltageProtection
 20157 ;;		_setCellOvervoltageProtection
 20158 ;;		_updateVoltages
 20159 ;; This function uses a non-reentrant model
 20160 ;;
 20161                           
 20162                           
 20163                           ;psect for function ___aldiv
 20164  2B61                     ___aldiv:	
 20165                           
 20166                           ;incstack = 0
 20167                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 20168  2B61  0020               	movlb	0	; select bank0
 20169  2B62  01AD               	clrf	___aldiv@sign
 20170  2B63  1FA7               	btfss	___aldiv@divisor+3,7
 20171  2B64  2B72               	goto	l912
 20172  2B65  09A4               	comf	___aldiv@divisor,f
 20173  2B66  09A5               	comf	___aldiv@divisor+1,f
 20174  2B67  09A6               	comf	___aldiv@divisor+2,f
 20175  2B68  09A7               	comf	___aldiv@divisor+3,f
 20176  2B69  0AA4               	incf	___aldiv@divisor,f
 20177  2B6A  1903               	skipnz
 20178  2B6B  0AA5               	incf	___aldiv@divisor+1,f
 20179  2B6C  1903               	skipnz
 20180  2B6D  0AA6               	incf	___aldiv@divisor+2,f
 20181  2B6E  1903               	skipnz
 20182  2B6F  0AA7               	incf	___aldiv@divisor+3,f
 20183  2B70  01AD               	clrf	___aldiv@sign
 20184  2B71  0AAD               	incf	___aldiv@sign,f
 20185  2B72                     l912:	
 20186  2B72  1FAB               	btfss	___aldiv@dividend+3,7
 20187  2B73  2B83               	goto	l7886
 20188  2B74  09A8               	comf	___aldiv@dividend,f
 20189  2B75  09A9               	comf	___aldiv@dividend+1,f
 20190  2B76  09AA               	comf	___aldiv@dividend+2,f
 20191  2B77  09AB               	comf	___aldiv@dividend+3,f
 20192  2B78  0AA8               	incf	___aldiv@dividend,f
 20193  2B79  1903               	skipnz
 20194  2B7A  0AA9               	incf	___aldiv@dividend+1,f
 20195  2B7B  1903               	skipnz
 20196  2B7C  0AAA               	incf	___aldiv@dividend+2,f
 20197  2B7D  1903               	skipnz
 20198  2B7E  0AAB               	incf	___aldiv@dividend+3,f
 20199  2B7F  3001               	movlw	1
 20200  2B80  00F9               	movwf	??___aldiv
 20201  2B81  0879               	movf	??___aldiv,w
 20202  2B82  06AD               	xorwf	___aldiv@sign,f
 20203  2B83                     l7886:	
 20204  2B83  3000               	movlw	0
 20205  2B84  00B1               	movwf	___aldiv@quotient+3
 20206  2B85  3000               	movlw	0
 20207  2B86  00B0               	movwf	___aldiv@quotient+2
 20208  2B87  3000               	movlw	0
 20209  2B88  00AF               	movwf	___aldiv@quotient+1
 20210  2B89  3000               	movlw	0
 20211  2B8A  00AE               	movwf	___aldiv@quotient
 20212  2B8B  0827               	movf	___aldiv@divisor+3,w
 20213  2B8C  0426               	iorwf	___aldiv@divisor+2,w
 20214  2B8D  0425               	iorwf	___aldiv@divisor+1,w
 20215  2B8E  0424               	iorwf	___aldiv@divisor,w
 20216  2B8F  1903               	skipnz
 20217  2B90  2BCC               	goto	l7908
 20218  2B91  01AC               	clrf	___aldiv@counter
 20219  2B92  0AAC               	incf	___aldiv@counter,f
 20220  2B93                     l7894:	
 20221  2B93  1BA7               	btfsc	___aldiv@divisor+3,7
 20222  2B94  2BA1               	goto	l7896
 20223  2B95  3001               	movlw	1
 20224  2B96                     u10855:	
 20225  2B96  35A4               	lslf	___aldiv@divisor,f
 20226  2B97  0DA5               	rlf	___aldiv@divisor+1,f
 20227  2B98  0DA6               	rlf	___aldiv@divisor+2,f
 20228  2B99  0DA7               	rlf	___aldiv@divisor+3,f
 20229  2B9A  0B89               	decfsz	9,f
 20230  2B9B  2B96               	goto	u10855
 20231  2B9C  3001               	movlw	1
 20232  2B9D  00F9               	movwf	??___aldiv
 20233  2B9E  0879               	movf	??___aldiv,w
 20234  2B9F  07AC               	addwf	___aldiv@counter,f
 20235  2BA0  2B93               	goto	l7894
 20236  2BA1                     l7896:	
 20237  2BA1  3001               	movlw	1
 20238  2BA2                     u10875:	
 20239  2BA2  35AE               	lslf	___aldiv@quotient,f
 20240  2BA3  0DAF               	rlf	___aldiv@quotient+1,f
 20241  2BA4  0DB0               	rlf	___aldiv@quotient+2,f
 20242  2BA5  0DB1               	rlf	___aldiv@quotient+3,f
 20243  2BA6  0B89               	decfsz	9,f
 20244  2BA7  2BA2               	goto	u10875
 20245  2BA8  0827               	movf	___aldiv@divisor+3,w
 20246  2BA9  022B               	subwf	___aldiv@dividend+3,w
 20247  2BAA  1D03               	skipz
 20248  2BAB  2BB6               	goto	u10885
 20249  2BAC  0826               	movf	___aldiv@divisor+2,w
 20250  2BAD  022A               	subwf	___aldiv@dividend+2,w
 20251  2BAE  1D03               	skipz
 20252  2BAF  2BB6               	goto	u10885
 20253  2BB0  0825               	movf	___aldiv@divisor+1,w
 20254  2BB1  0229               	subwf	___aldiv@dividend+1,w
 20255  2BB2  1D03               	skipz
 20256  2BB3  2BB6               	goto	u10885
 20257  2BB4  0824               	movf	___aldiv@divisor,w
 20258  2BB5  0228               	subwf	___aldiv@dividend,w
 20259  2BB6                     u10885:	
 20260  2BB6  1C03               	skipc
 20261  2BB7  2BC1               	goto	l7904
 20262  2BB8  0824               	movf	___aldiv@divisor,w
 20263  2BB9  02A8               	subwf	___aldiv@dividend,f
 20264  2BBA  0825               	movf	___aldiv@divisor+1,w
 20265  2BBB  3BA9               	subwfb	___aldiv@dividend+1,f
 20266  2BBC  0826               	movf	___aldiv@divisor+2,w
 20267  2BBD  3BAA               	subwfb	___aldiv@dividend+2,f
 20268  2BBE  0827               	movf	___aldiv@divisor+3,w
 20269  2BBF  3BAB               	subwfb	___aldiv@dividend+3,f
 20270  2BC0  142E               	bsf	___aldiv@quotient,0
 20271  2BC1                     l7904:	
 20272  2BC1  3001               	movlw	1
 20273  2BC2                     u10895:	
 20274  2BC2  36A7               	lsrf	___aldiv@divisor+3,f
 20275  2BC3  0CA6               	rrf	___aldiv@divisor+2,f
 20276  2BC4  0CA5               	rrf	___aldiv@divisor+1,f
 20277  2BC5  0CA4               	rrf	___aldiv@divisor,f
 20278  2BC6  0B89               	decfsz	9,f
 20279  2BC7  2BC2               	goto	u10895
 20280  2BC8  3001               	movlw	1
 20281  2BC9  02AC               	subwf	___aldiv@counter,f
 20282  2BCA  1D03               	btfss	3,2
 20283  2BCB  2BA1               	goto	l7896
 20284  2BCC                     l7908:	
 20285  2BCC  082D               	movf	___aldiv@sign,w
 20286  2BCD  1903               	btfsc	3,2
 20287  2BCE  2BDA               	goto	l7912
 20288  2BCF  09AE               	comf	___aldiv@quotient,f
 20289  2BD0  09AF               	comf	___aldiv@quotient+1,f
 20290  2BD1  09B0               	comf	___aldiv@quotient+2,f
 20291  2BD2  09B1               	comf	___aldiv@quotient+3,f
 20292  2BD3  0AAE               	incf	___aldiv@quotient,f
 20293  2BD4  1903               	skipnz
 20294  2BD5  0AAF               	incf	___aldiv@quotient+1,f
 20295  2BD6  1903               	skipnz
 20296  2BD7  0AB0               	incf	___aldiv@quotient+2,f
 20297  2BD8  1903               	skipnz
 20298  2BD9  0AB1               	incf	___aldiv@quotient+3,f
 20299  2BDA                     l7912:	
 20300  2BDA  0831               	movf	___aldiv@quotient+3,w
 20301  2BDB  00A7               	movwf	?___aldiv+3
 20302  2BDC  0830               	movf	___aldiv@quotient+2,w
 20303  2BDD  00A6               	movwf	?___aldiv+2
 20304  2BDE  082F               	movf	___aldiv@quotient+1,w
 20305  2BDF  00A5               	movwf	?___aldiv+1
 20306  2BE0  082E               	movf	___aldiv@quotient,w
 20307  2BE1  00A4               	movwf	?___aldiv
 20308  2BE2  0008               	return
 20309  2BE3                     __end_of___aldiv:	
 20310                           
 20311                           	psect	intentry
 20312  0004                     __pintentry:	
 20313 ;; *************** function _myIsr *****************
 20314 ;; Defined at:
 20315 ;;		line 54 in file "main.c"
 20316 ;; Parameters:    Size  Location     Type
 20317 ;;		None
 20318 ;; Auto vars:     Size  Location     Type
 20319 ;;		None
 20320 ;; Return value:  Size  Location     Type
 20321 ;;                  1    wreg      void 
 20322 ;; Registers used:
 20323 ;;		wreg, status,2, status,0
 20324 ;; Tracked objects:
 20325 ;;		On entry : 0/0
 20326 ;;		On exit  : 0/0
 20327 ;;		Unchanged: 0/0
 20328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20331 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20332 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20333 ;;Total ram usage:        1 bytes
 20334 ;; Hardware stack levels used:    1
 20335 ;; This function calls:
 20336 ;;		Nothing
 20337 ;; This function is called by:
 20338 ;;		Interrupt level 1
 20339 ;; This function uses a non-reentrant model
 20340 ;;
 20341                           
 20342  0004                     _myIsr:	
 20343                           
 20344                           ;incstack = 0
 20345  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 20346                           
 20347                           ; Regs used in _myIsr: [wreg+status,2+status,0]
 20348  0005  3180               	pagesel	$
 20349                           
 20350                           ;main.c: 56:     static uint8_t count = 0;;main.c: 58:     if (PIR1bits.TMR1IF && PIE1bi
      +                          ts.TMR1IE) {
 20351  0006  0020               	movlb	0	; select bank0
 20352  0007  1C11               	btfss	17,0	;volatile
 20353  0008  281E               	goto	i1l145
 20354  0009  0021               	movlb	1	; select bank1
 20355  000A  1C11               	btfss	17,0	;volatile
 20356  000B  281E               	goto	i1l145
 20357                           
 20358                           ;main.c: 59:         PIR1bits.TMR1IF = 0;
 20359  000C  0020               	movlb	0	; select bank0
 20360  000D  1011               	bcf	17,0	;volatile
 20361                           
 20362                           ;main.c: 60:         count++;
 20363  000E  3001               	movlw	1
 20364  000F  00F0               	movwf	??_myIsr
 20365  0010  0870               	movf	??_myIsr,w
 20366  0011  0023               	movlb	3	; select bank3
 20367  0012  07D5               	addwf	myIsr@count^(0+384),f
 20368                           
 20369                           ;main.c: 63:         if (count == 61) {
 20370  0013  303D               	movlw	61
 20371  0014  0655               	xorwf	myIsr@count^(0+384),w
 20372  0015  1D03               	btfss	3,2
 20373  0016  281E               	goto	i1l145
 20374                           
 20375                           ;main.c: 64:             tmr1_flag = 1;
 20376  0017  3001               	movlw	1
 20377  0018  00F0               	movwf	??_myIsr
 20378  0019  0870               	movf	??_myIsr,w
 20379  001A  0021               	movlb	1	; select bank1
 20380  001B  00EF               	movwf	_tmr1_flag^(0+128)	;volatile
 20381                           
 20382                           ;main.c: 65:             count = 0;
 20383  001C  0023               	movlb	3	; select bank3
 20384  001D  01D5               	clrf	myIsr@count^(0+384)
 20385  001E                     i1l145:	
 20386  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 20387  001F  0009               	retfie
 20388  0020                     __end_of_myIsr:	
 20389  007E                     btemp	set	126	;btemp
 20390  007E                     int$flags	set	126
 20391  007E                     wtemp0	set	126
 20392  2771                     
 20393                           	psect	text7_split_1
 20394  24D9                     l6894:	
 20395                           
 20396                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
 20397  24D9  0859               	movf	vfpfcnvrt@fmt,w
 20398  24DA  0086               	movwf	6
 20399  24DB  0187               	clrf	7
 20400  24DC  3F40               	moviw [0]fsr1
 20401  24DD  00F1               	movwf	strncmp@_l
 20402  24DE  3F41               	moviw [1]fsr1
 20403  24DF  00F2               	movwf	strncmp@_l+1
 20404  24E0  301D               	movlw	low (STR_23| (0+32768))
 20405  24E1  00F3               	movwf	strncmp@_r
 20406  24E2  30BA               	movlw	high (STR_23| (0+32768))
 20407  24E3  00F4               	movwf	strncmp@_r+1
 20408  24E4  3003               	movlw	3
 20409  24E5  00F5               	movwf	strncmp@n
 20410  24E6  3000               	movlw	0
 20411  24E7  00F6               	movwf	strncmp@n+1
 20412  24E8  31A8  2021  31A4   	fcall	_strncmp
 20413  24EB  0871               	movf	?_strncmp,w
 20414  24EC  0472               	iorwf	?_strncmp+1,w
 20415  24ED  1903               	btfsc	3,2
 20416  24EE  2D06               	goto	l6898
 20417  24EF  0020               	movlb	0	; select bank0
 20418  24F0  0859               	movf	vfpfcnvrt@fmt,w
 20419  24F1  0086               	movwf	6
 20420  24F2  0187               	clrf	7
 20421  24F3  3F40               	moviw [0]fsr1
 20422  24F4  00F1               	movwf	strncmp@_l
 20423  24F5  3F41               	moviw [1]fsr1
 20424  24F6  00F2               	movwf	strncmp@_l+1
 20425  24F7  3021               	movlw	low (STR_27| (0+32768))
 20426  24F8  00F3               	movwf	strncmp@_r
 20427  24F9  30BA               	movlw	high (STR_27| (0+32768))
 20428  24FA  00F4               	movwf	strncmp@_r+1
 20429  24FB  3003               	movlw	3
 20430  24FC  00F5               	movwf	strncmp@n
 20431  24FD  3000               	movlw	0
 20432  24FE  00F6               	movwf	strncmp@n+1
 20433  24FF  31A8  2021  31A4   	fcall	_strncmp
 20434  2502  0871               	movf	?_strncmp,w
 20435  2503  0472               	iorwf	?_strncmp+1,w
 20436  2504  1D03               	btfss	3,2
 20437  2505  2D51               	goto	l6906
 20438  2506                     l6898:	
 20439                           
 20440                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
 20441  2506  0020               	movlb	0	; select bank0
 20442  2507  0859               	movf	vfpfcnvrt@fmt,w
 20443  2508  0086               	movwf	6
 20444  2509  0187               	clrf	7
 20445  250A  3003               	movlw	3
 20446  250B  0781               	addwf	1,f
 20447  250C  3141               	addfsr 1,1
 20448  250D  1803               	skipnc
 20449  250E  0A81               	incf	1,f
 20450                           
 20451                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 20452  250F  085A               	movf	vfpfcnvrt@ap,w
 20453  2510  0086               	movwf	6
 20454  2511  0187               	clrf	7
 20455  2512  0801               	movf	1,w
 20456  2513  0084               	movwf	4
 20457  2514  0185               	clrf	5
 20458  2515  3002               	movlw	2
 20459  2516  0781               	addwf	1,f
 20460  2517  0800               	movf	0,w
 20461  2518  0021               	movlb	1	; select bank1
 20462  2519  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 20463  251A  3980               	andlw	128
 20464  251B  1D03               	skipz
 20465  251C  30FF               	movlw	255
 20466  251D  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 20467  251E  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 20468  251F  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 20469  2520  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 20470  2521  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 20471  2522  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 20472  2523  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 20473                           
 20474                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
 20475  2524  0020               	movlb	0	; select bank0
 20476  2525  0858               	movf	vfpfcnvrt@fp+1,w
 20477  2526  00B1               	movwf	dtoa@fp+1
 20478  2527  0857               	movf	vfpfcnvrt@fp,w
 20479  2528  00B0               	movwf	dtoa@fp
 20480  2529  0021               	movlb	1	; select bank1
 20481  252A  0828               	movf	vfpfcnvrt@ll^(0+128),w
 20482  252B  0020               	movlb	0	; select bank0
 20483  252C  00B2               	movwf	dtoa@d
 20484  252D  0021               	movlb	1	; select bank1
 20485  252E  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 20486  252F  0020               	movlb	0	; select bank0
 20487  2530  00B3               	movwf	dtoa@d+1
 20488  2531  0021               	movlb	1	; select bank1
 20489  2532  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 20490  2533  0020               	movlb	0	; select bank0
 20491  2534  00B4               	movwf	dtoa@d+2
 20492  2535  0021               	movlb	1	; select bank1
 20493  2536  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 20494  2537  0020               	movlb	0	; select bank0
 20495  2538  00B5               	movwf	dtoa@d+3
 20496  2539  0021               	movlb	1	; select bank1
 20497  253A  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 20498  253B  0020               	movlb	0	; select bank0
 20499  253C  00B6               	movwf	dtoa@d+4
 20500  253D  0021               	movlb	1	; select bank1
 20501  253E  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 20502  253F  0020               	movlb	0	; select bank0
 20503  2540  00B7               	movwf	dtoa@d+5
 20504  2541  0021               	movlb	1	; select bank1
 20505  2542  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 20506  2543  0020               	movlb	0	; select bank0
 20507  2544  00B8               	movwf	dtoa@d+6
 20508  2545  0021               	movlb	1	; select bank1
 20509  2546  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 20510  2547  0020               	movlb	0	; select bank0
 20511  2548  00B9               	movwf	dtoa@d+7
 20512  2549  319A  2236         	fcall	_dtoa
 20513  254B  0020               	movlb	0	; select bank0
 20514  254C  0831               	movf	?_dtoa+1,w
 20515  254D  00D8               	movwf	?_vfpfcnvrt+1
 20516  254E  0830               	movf	?_dtoa,w
 20517  254F  00D7               	movwf	?_vfpfcnvrt
 20518  2550  0008               	return
 20519  2551                     l6906:	
 20520                           
 20521                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
 20522  2551  0020               	movlb	0	; select bank0
 20523  2552  0859               	movf	vfpfcnvrt@fmt,w
 20524  2553  0086               	movwf	6
 20525  2554  0187               	clrf	7
 20526  2555  3F40               	moviw [0]fsr1
 20527  2556  00F1               	movwf	strncmp@_l
 20528  2557  3F41               	moviw [1]fsr1
 20529  2558  00F2               	movwf	strncmp@_l+1
 20530  2559  301E               	movlw	low ((STR_23+1)| (0+32768))
 20531  255A  00F3               	movwf	strncmp@_r
 20532  255B  30BA               	movlw	high ((STR_23+1)| (0+32768))
 20533  255C  00F4               	movwf	strncmp@_r+1
 20534  255D  3002               	movlw	2
 20535  255E  00F5               	movwf	strncmp@n
 20536  255F  3000               	movlw	0
 20537  2560  00F6               	movwf	strncmp@n+1
 20538  2561  31A8  2021  31A4   	fcall	_strncmp
 20539  2564  0871               	movf	?_strncmp,w
 20540  2565  0472               	iorwf	?_strncmp+1,w
 20541  2566  1903               	btfsc	3,2
 20542  2567  2D7F               	goto	l6910
 20543  2568  0020               	movlb	0	; select bank0
 20544  2569  0859               	movf	vfpfcnvrt@fmt,w
 20545  256A  0086               	movwf	6
 20546  256B  0187               	clrf	7
 20547  256C  3F40               	moviw [0]fsr1
 20548  256D  00F1               	movwf	strncmp@_l
 20549  256E  3F41               	moviw [1]fsr1
 20550  256F  00F2               	movwf	strncmp@_l+1
 20551  2570  3022               	movlw	low ((STR_27+1)| (0+32768))
 20552  2571  00F3               	movwf	strncmp@_r
 20553  2572  30BA               	movlw	high ((STR_27+1)| (0+32768))
 20554  2573  00F4               	movwf	strncmp@_r+1
 20555  2574  3002               	movlw	2
 20556  2575  00F5               	movwf	strncmp@n
 20557  2576  3000               	movlw	0
 20558  2577  00F6               	movwf	strncmp@n+1
 20559  2578  31A8  2021  31A4   	fcall	_strncmp
 20560  257B  0871               	movf	?_strncmp,w
 20561  257C  0472               	iorwf	?_strncmp+1,w
 20562  257D  1D03               	btfss	3,2
 20563  257E  2DD1               	goto	L9
 20564  257F                     l6910:	
 20565                           
 20566                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
 20567  257F  0020               	movlb	0	; select bank0
 20568  2580  0859               	movf	vfpfcnvrt@fmt,w
 20569  2581  0086               	movwf	6
 20570  2582  0187               	clrf	7
 20571  2583  3002               	movlw	2
 20572  2584  0781               	addwf	1,f
 20573  2585  3141               	addfsr 1,1
 20574  2586  1803               	skipnc
 20575  2587  0A81               	incf	1,f
 20576                           
 20577                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
 20578  2588  085A               	movf	vfpfcnvrt@ap,w
 20579  2589  0086               	movwf	6
 20580  258A  0187               	clrf	7
 20581  258B  0801               	movf	1,w
 20582  258C  0084               	movwf	4
 20583  258D  0185               	clrf	5
 20584  258E  3002               	movlw	2
 20585  258F  0781               	addwf	1,f
 20586  2590  3F00               	moviw [0]fsr0
 20587  2591  00DB               	movwf	??_vfpfcnvrt
 20588  2592  3F01               	moviw [1]fsr0
 20589  2593  00DC               	movwf	??_vfpfcnvrt+1
 20590  2594  085B               	movf	??_vfpfcnvrt,w
 20591  2595  0021               	movlb	1	; select bank1
 20592  2596  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 20593  2597  0020               	movlb	0	; select bank0
 20594  2598  085C               	movf	??_vfpfcnvrt+1,w
 20595  2599  0021               	movlb	1	; select bank1
 20596  259A  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 20597  259B  0D89               	rlf	9,f
 20598  259C  3B89               	subwfb	9,f
 20599  259D  0989               	comf	9,f
 20600  259E  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 20601  259F  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 20602  25A0  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 20603  25A1  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 20604  25A2  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 20605  25A3  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 20606                           
 20607                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 820:       
      +                                return dtoa(fp, ll);
 20608  25A4  0020               	movlb	0	; select bank0
 20609  25A5  0858               	movf	vfpfcnvrt@fp+1,w
 20610  25A6  00B1               	movwf	dtoa@fp+1
 20611  25A7  0857               	movf	vfpfcnvrt@fp,w
 20612  25A8  00B0               	movwf	dtoa@fp
 20613  25A9  0021               	movlb	1	; select bank1
 20614  25AA  0828               	movf	vfpfcnvrt@ll^(0+128),w
 20615  25AB  0020               	movlb	0	; select bank0
 20616  25AC  00B2               	movwf	dtoa@d
 20617  25AD  0021               	movlb	1	; select bank1
 20618  25AE  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 20619  25AF  0020               	movlb	0	; select bank0
 20620  25B0  00B3               	movwf	dtoa@d+1
 20621  25B1  0021               	movlb	1	; select bank1
 20622  25B2  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 20623  25B3  0020               	movlb	0	; select bank0
 20624  25B4  00B4               	movwf	dtoa@d+2
 20625  25B5  0021               	movlb	1	; select bank1
 20626  25B6  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 20627  25B7  0020               	movlb	0	; select bank0
 20628  25B8  00B5               	movwf	dtoa@d+3
 20629  25B9  0021               	movlb	1	; select bank1
 20630  25BA  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 20631  25BB  0020               	movlb	0	; select bank0
 20632  25BC  00B6               	movwf	dtoa@d+4
 20633  25BD  0021               	movlb	1	; select bank1
 20634  25BE  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 20635  25BF  0020               	movlb	0	; select bank0
 20636  25C0  00B7               	movwf	dtoa@d+5
 20637  25C1  0021               	movlb	1	; select bank1
 20638  25C2  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 20639  25C3  0020               	movlb	0	; select bank0
 20640  25C4  00B8               	movwf	dtoa@d+6
 20641  25C5  0021               	movlb	1	; select bank1
 20642  25C6  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 20643  25C7  0020               	movlb	0	; select bank0
 20644  25C8  00B9               	movwf	dtoa@d+7
 20645  25C9  319A  2236         	fcall	_dtoa
 20646  25CB  0020               	movlb	0	; select bank0
 20647  25CC  0831               	movf	?_dtoa+1,w
 20648  25CD  00D8               	movwf	?_vfpfcnvrt+1
 20649  25CE  0830               	movf	?_dtoa,w
 20650  25CF  00D7               	movwf	?_vfpfcnvrt
 20651  25D0  0008               	return
 20652  25D1                     L9:	
 20653  25D1                     L8:	
 20654  25D1  3188  2843         	ljmp	l6918
 20655                           
 20656                           	psect	text7_split_2
 20657  0843                     l6918:	
 20658                           
 20659                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 20660  0843  0020               	movlb	0	; select bank0
 20661  0844  0859               	movf	vfpfcnvrt@fmt,w
 20662  0845  0086               	movwf	6
 20663  0846  0187               	clrf	7
 20664  0847  3F40               	moviw [0]fsr1
 20665  0848  00DB               	movwf	??_vfpfcnvrt
 20666  0849  3F41               	moviw [1]fsr1
 20667  084A  00DC               	movwf	??_vfpfcnvrt+1
 20668  084B  085B               	movf	??_vfpfcnvrt,w
 20669  084C  0084               	movwf	4
 20670  084D  085C               	movf	??_vfpfcnvrt+1,w
 20671  084E  0085               	movwf	5
 20672  084F  0012               	moviw fsr0++
 20673  0850  3A64               	xorlw	100
 20674  0851  1903               	btfsc	3,2
 20675  0852  2862               	goto	l6922
 20676  0853  0859               	movf	vfpfcnvrt@fmt,w
 20677  0854  0086               	movwf	6
 20678  0855  0187               	clrf	7
 20679  0856  3F40               	moviw [0]fsr1
 20680  0857  00DB               	movwf	??_vfpfcnvrt
 20681  0858  3F41               	moviw [1]fsr1
 20682  0859  00DC               	movwf	??_vfpfcnvrt+1
 20683  085A  085B               	movf	??_vfpfcnvrt,w
 20684  085B  0084               	movwf	4
 20685  085C  085C               	movf	??_vfpfcnvrt+1,w
 20686  085D  0085               	movwf	5
 20687  085E  0012               	moviw fsr0++
 20688  085F  3A69               	xorlw	105
 20689  0860  1D03               	btfss	3,2
 20690  0861  28B3               	goto	l6930
 20691  0862                     l6922:	
 20692                           
 20693                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 20694  0862  0859               	movf	vfpfcnvrt@fmt,w
 20695  0863  0086               	movwf	6
 20696  0864  0187               	clrf	7
 20697  0865  3001               	movlw	1
 20698  0866  0781               	addwf	1,f
 20699  0867  3141               	addfsr 1,1
 20700  0868  1803               	skipnc
 20701  0869  0A81               	incf	1,f
 20702                           
 20703                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 20704  086A  085A               	movf	vfpfcnvrt@ap,w
 20705  086B  0086               	movwf	6
 20706  086C  0187               	clrf	7
 20707  086D  0801               	movf	1,w
 20708  086E  0084               	movwf	4
 20709  086F  0185               	clrf	5
 20710  0870  3002               	movlw	2
 20711  0871  0781               	addwf	1,f
 20712  0872  3F00               	moviw [0]fsr0
 20713  0873  00DB               	movwf	??_vfpfcnvrt
 20714  0874  3F01               	moviw [1]fsr0
 20715  0875  00DC               	movwf	??_vfpfcnvrt+1
 20716  0876  085B               	movf	??_vfpfcnvrt,w
 20717  0877  0021               	movlb	1	; select bank1
 20718  0878  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 20719  0879  0020               	movlb	0	; select bank0
 20720  087A  085C               	movf	??_vfpfcnvrt+1,w
 20721  087B  0021               	movlb	1	; select bank1
 20722  087C  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 20723  087D  0D89               	rlf	9,f
 20724  087E  3B89               	subwfb	9,f
 20725  087F  0989               	comf	9,f
 20726  0880  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 20727  0881  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 20728  0882  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 20729  0883  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 20730  0884  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 20731  0885  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 20732                           
 20733                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 20734  0886  0020               	movlb	0	; select bank0
 20735  0887  0858               	movf	vfpfcnvrt@fp+1,w
 20736  0888  00B1               	movwf	dtoa@fp+1
 20737  0889  0857               	movf	vfpfcnvrt@fp,w
 20738  088A  00B0               	movwf	dtoa@fp
 20739  088B  0021               	movlb	1	; select bank1
 20740  088C  0828               	movf	vfpfcnvrt@ll^(0+128),w
 20741  088D  0020               	movlb	0	; select bank0
 20742  088E  00B2               	movwf	dtoa@d
 20743  088F  0021               	movlb	1	; select bank1
 20744  0890  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 20745  0891  0020               	movlb	0	; select bank0
 20746  0892  00B3               	movwf	dtoa@d+1
 20747  0893  0021               	movlb	1	; select bank1
 20748  0894  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 20749  0895  0020               	movlb	0	; select bank0
 20750  0896  00B4               	movwf	dtoa@d+2
 20751  0897  0021               	movlb	1	; select bank1
 20752  0898  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 20753  0899  0020               	movlb	0	; select bank0
 20754  089A  00B5               	movwf	dtoa@d+3
 20755  089B  0021               	movlb	1	; select bank1
 20756  089C  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 20757  089D  0020               	movlb	0	; select bank0
 20758  089E  00B6               	movwf	dtoa@d+4
 20759  089F  0021               	movlb	1	; select bank1
 20760  08A0  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 20761  08A1  0020               	movlb	0	; select bank0
 20762  08A2  00B7               	movwf	dtoa@d+5
 20763  08A3  0021               	movlb	1	; select bank1
 20764  08A4  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 20765  08A5  0020               	movlb	0	; select bank0
 20766  08A6  00B8               	movwf	dtoa@d+6
 20767  08A7  0021               	movlb	1	; select bank1
 20768  08A8  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 20769  08A9  0020               	movlb	0	; select bank0
 20770  08AA  00B9               	movwf	dtoa@d+7
 20771  08AB  319A  2236         	fcall	_dtoa
 20772  08AD  0020               	movlb	0	; select bank0
 20773  08AE  0831               	movf	?_dtoa+1,w
 20774  08AF  00D8               	movwf	?_vfpfcnvrt+1
 20775  08B0  0830               	movf	?_dtoa,w
 20776  08B1  00D7               	movwf	?_vfpfcnvrt
 20777  08B2  0008               	return
 20778  08B3                     l6930:	
 20779                           
 20780                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
 20781  08B3  0859               	movf	vfpfcnvrt@fmt,w
 20782  08B4  0086               	movwf	6
 20783  08B5  0187               	clrf	7
 20784  08B6  3F40               	moviw [0]fsr1
 20785  08B7  00F1               	movwf	strncmp@_l
 20786  08B8  3F41               	moviw [1]fsr1
 20787  08B9  00F2               	movwf	strncmp@_l+1
 20788  08BA  3038               	movlw	low (STR_41| (0+32768))
 20789  08BB  00F3               	movwf	strncmp@_r
 20790  08BC  30BA               	movlw	high (STR_41| (0+32768))
 20791  08BD  00F4               	movwf	strncmp@_r+1
 20792  08BE  3002               	movlw	2
 20793  08BF  00F5               	movwf	strncmp@n
 20794  08C0  3000               	movlw	0
 20795  08C1  00F6               	movwf	strncmp@n+1
 20796  08C2  31A8  2021  3188   	fcall	_strncmp
 20797  08C5  0871               	movf	?_strncmp,w
 20798  08C6  0472               	iorwf	?_strncmp+1,w
 20799  08C7  1903               	btfsc	3,2
 20800  08C8  28E0               	goto	l6934
 20801  08C9  0020               	movlb	0	; select bank0
 20802  08CA  0859               	movf	vfpfcnvrt@fmt,w
 20803  08CB  0086               	movwf	6
 20804  08CC  0187               	clrf	7
 20805  08CD  3F40               	moviw [0]fsr1
 20806  08CE  00F1               	movwf	strncmp@_l
 20807  08CF  3F41               	moviw [1]fsr1
 20808  08D0  00F2               	movwf	strncmp@_l+1
 20809  08D1  303B               	movlw	low (STR_45| (0+32768))
 20810  08D2  00F3               	movwf	strncmp@_r
 20811  08D3  30BA               	movlw	high (STR_45| (0+32768))
 20812  08D4  00F4               	movwf	strncmp@_r+1
 20813  08D5  3002               	movlw	2
 20814  08D6  00F5               	movwf	strncmp@n
 20815  08D7  3000               	movlw	0
 20816  08D8  00F6               	movwf	strncmp@n+1
 20817  08D9  31A8  2021  3188   	fcall	_strncmp
 20818  08DC  0871               	movf	?_strncmp,w
 20819  08DD  0472               	iorwf	?_strncmp+1,w
 20820  08DE  1D03               	btfss	3,2
 20821  08DF  2929               	goto	l6942
 20822  08E0                     l6934:	
 20823                           
 20824                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
 20825  08E0  0020               	movlb	0	; select bank0
 20826  08E1  0859               	movf	vfpfcnvrt@fmt,w
 20827  08E2  0086               	movwf	6
 20828  08E3  0187               	clrf	7
 20829  08E4  3002               	movlw	2
 20830  08E5  0781               	addwf	1,f
 20831  08E6  3141               	addfsr 1,1
 20832  08E7  1803               	skipnc
 20833  08E8  0A81               	incf	1,f
 20834                           
 20835                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 20836  08E9  085A               	movf	vfpfcnvrt@ap,w
 20837  08EA  0086               	movwf	6
 20838  08EB  0187               	clrf	7
 20839  08EC  0801               	movf	1,w
 20840  08ED  0084               	movwf	4
 20841  08EE  0185               	clrf	5
 20842  08EF  3002               	movlw	2
 20843  08F0  0781               	addwf	1,f
 20844  08F1  3F00               	moviw [0]fsr0
 20845  08F2  0021               	movlb	1	; select bank1
 20846  08F3  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 20847  08F4  3F01               	moviw [1]fsr0
 20848  08F5  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 20849  08F6  01AA               	clrf	(vfpfcnvrt@ll+2)^(0+128)
 20850  08F7  01AB               	clrf	(vfpfcnvrt@ll+3)^(0+128)
 20851  08F8  01AC               	clrf	(vfpfcnvrt@ll+4)^(0+128)
 20852  08F9  01AD               	clrf	(vfpfcnvrt@ll+5)^(0+128)
 20853  08FA  01AE               	clrf	(vfpfcnvrt@ll+6)^(0+128)
 20854  08FB  01AF               	clrf	(vfpfcnvrt@ll+7)^(0+128)
 20855                           
 20856                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 889:       
      +                                return dtoa(fp, ll);
 20857  08FC  0020               	movlb	0	; select bank0
 20858  08FD  0858               	movf	vfpfcnvrt@fp+1,w
 20859  08FE  00B1               	movwf	dtoa@fp+1
 20860  08FF  0857               	movf	vfpfcnvrt@fp,w
 20861  0900  00B0               	movwf	dtoa@fp
 20862  0901  0021               	movlb	1	; select bank1
 20863  0902  0828               	movf	vfpfcnvrt@ll^(0+128),w
 20864  0903  0020               	movlb	0	; select bank0
 20865  0904  00B2               	movwf	dtoa@d
 20866  0905  0021               	movlb	1	; select bank1
 20867  0906  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 20868  0907  0020               	movlb	0	; select bank0
 20869  0908  00B3               	movwf	dtoa@d+1
 20870  0909  0021               	movlb	1	; select bank1
 20871  090A  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 20872  090B  0020               	movlb	0	; select bank0
 20873  090C  00B4               	movwf	dtoa@d+2
 20874  090D  0021               	movlb	1	; select bank1
 20875  090E  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 20876  090F  0020               	movlb	0	; select bank0
 20877  0910  00B5               	movwf	dtoa@d+3
 20878  0911  0021               	movlb	1	; select bank1
 20879  0912  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 20880  0913  0020               	movlb	0	; select bank0
 20881  0914  00B6               	movwf	dtoa@d+4
 20882  0915  0021               	movlb	1	; select bank1
 20883  0916  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 20884  0917  0020               	movlb	0	; select bank0
 20885  0918  00B7               	movwf	dtoa@d+5
 20886  0919  0021               	movlb	1	; select bank1
 20887  091A  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 20888  091B  0020               	movlb	0	; select bank0
 20889  091C  00B8               	movwf	dtoa@d+6
 20890  091D  0021               	movlb	1	; select bank1
 20891  091E  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 20892  091F  0020               	movlb	0	; select bank0
 20893  0920  00B9               	movwf	dtoa@d+7
 20894  0921  319A  2236         	fcall	_dtoa
 20895  0923  0020               	movlb	0	; select bank0
 20896  0924  0831               	movf	?_dtoa+1,w
 20897  0925  00D8               	movwf	?_vfpfcnvrt+1
 20898  0926  0830               	movf	?_dtoa,w
 20899  0927  00D7               	movwf	?_vfpfcnvrt
 20900  0928  0008               	return
 20901  0929                     l6942:	
 20902                           
 20903                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
 20904  0929  0020               	movlb	0	; select bank0
 20905  092A  0859               	movf	vfpfcnvrt@fmt,w
 20906  092B  0086               	movwf	6
 20907  092C  0187               	clrf	7
 20908  092D  3F40               	moviw [0]fsr1
 20909  092E  00F1               	movwf	strncmp@_l
 20910  092F  3F41               	moviw [1]fsr1
 20911  0930  00F2               	movwf	strncmp@_l+1
 20912  0931  3029               	movlw	low (STR_50| (0+32768))
 20913  0932  00F3               	movwf	strncmp@_r
 20914  0933  30BA               	movlw	high (STR_50| (0+32768))
 20915  0934  00F4               	movwf	strncmp@_r+1
 20916  0935  3003               	movlw	3
 20917  0936  00F5               	movwf	strncmp@n
 20918  0937  3000               	movlw	0
 20919  0938  00F6               	movwf	strncmp@n+1
 20920  0939  31A8  2021  3188   	fcall	_strncmp
 20921  093C  0871               	movf	?_strncmp,w
 20922  093D  0472               	iorwf	?_strncmp+1,w
 20923  093E  1D03               	btfss	3,2
 20924  093F  2988               	goto	l6952
 20925                           
 20926                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
 20927  0940  0020               	movlb	0	; select bank0
 20928  0941  0859               	movf	vfpfcnvrt@fmt,w
 20929  0942  0086               	movwf	6
 20930  0943  0187               	clrf	7
 20931  0944  3003               	movlw	3
 20932  0945  0781               	addwf	1,f
 20933  0946  3141               	addfsr 1,1
 20934  0947  1803               	skipnc
 20935  0948  0A81               	incf	1,f
 20936                           
 20937                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 20938  0949  085A               	movf	vfpfcnvrt@ap,w
 20939  094A  0086               	movwf	6
 20940  094B  0187               	clrf	7
 20941  094C  0801               	movf	1,w
 20942  094D  0084               	movwf	4
 20943  094E  0185               	clrf	5
 20944  094F  3002               	movlw	2
 20945  0950  0781               	addwf	1,f
 20946  0951  0800               	movf	0,w
 20947  0952  0021               	movlb	1	; select bank1
 20948  0953  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 20949  0954  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 20950  0955  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 20951  0956  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 20952  0957  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 20953  0958  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 20954  0959  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 20955  095A  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 20956                           
 20957                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
 20958  095B  0020               	movlb	0	; select bank0
 20959  095C  0858               	movf	vfpfcnvrt@fp+1,w
 20960  095D  00B1               	movwf	otoa@fp+1
 20961  095E  0857               	movf	vfpfcnvrt@fp,w
 20962  095F  00B0               	movwf	otoa@fp
 20963  0960  0021               	movlb	1	; select bank1
 20964  0961  0833               	movf	vfpfcnvrt@llu^(0+128),w
 20965  0962  0020               	movlb	0	; select bank0
 20966  0963  00B2               	movwf	otoa@d
 20967  0964  0021               	movlb	1	; select bank1
 20968  0965  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 20969  0966  0020               	movlb	0	; select bank0
 20970  0967  00B3               	movwf	otoa@d+1
 20971  0968  0021               	movlb	1	; select bank1
 20972  0969  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 20973  096A  0020               	movlb	0	; select bank0
 20974  096B  00B4               	movwf	otoa@d+2
 20975  096C  0021               	movlb	1	; select bank1
 20976  096D  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 20977  096E  0020               	movlb	0	; select bank0
 20978  096F  00B5               	movwf	otoa@d+3
 20979  0970  0021               	movlb	1	; select bank1
 20980  0971  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 20981  0972  0020               	movlb	0	; select bank0
 20982  0973  00B6               	movwf	otoa@d+4
 20983  0974  0021               	movlb	1	; select bank1
 20984  0975  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 20985  0976  0020               	movlb	0	; select bank0
 20986  0977  00B7               	movwf	otoa@d+5
 20987  0978  0021               	movlb	1	; select bank1
 20988  0979  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 20989  097A  0020               	movlb	0	; select bank0
 20990  097B  00B8               	movwf	otoa@d+6
 20991  097C  0021               	movlb	1	; select bank1
 20992  097D  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 20993  097E  0020               	movlb	0	; select bank0
 20994  097F  00B9               	movwf	otoa@d+7
 20995  0980  31A3  23E8         	fcall	_otoa
 20996  0982  0020               	movlb	0	; select bank0
 20997  0983  0831               	movf	?_otoa+1,w
 20998  0984  00D8               	movwf	?_vfpfcnvrt+1
 20999  0985  0830               	movf	?_otoa,w
 21000  0986  00D7               	movwf	?_vfpfcnvrt
 21001  0987  0008               	return
 21002  0988                     l6952:	
 21003                           
 21004                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
 21005  0988  0020               	movlb	0	; select bank0
 21006  0989  0859               	movf	vfpfcnvrt@fmt,w
 21007  098A  0086               	movwf	6
 21008  098B  0187               	clrf	7
 21009  098C  3F40               	moviw [0]fsr1
 21010  098D  00F1               	movwf	strncmp@_l
 21011  098E  3F41               	moviw [1]fsr1
 21012  098F  00F2               	movwf	strncmp@_l+1
 21013  0990  302A               	movlw	low ((STR_50+1)| (0+32768))
 21014  0991  00F3               	movwf	strncmp@_r
 21015  0992  30BA               	movlw	high ((STR_50+1)| (0+32768))
 21016  0993  00F4               	movwf	strncmp@_r+1
 21017  0994  3002               	movlw	2
 21018  0995  00F5               	movwf	strncmp@n
 21019  0996  3000               	movlw	0
 21020  0997  00F6               	movwf	strncmp@n+1
 21021  0998  31A8  2021  3188   	fcall	_strncmp
 21022  099B  0871               	movf	?_strncmp,w
 21023  099C  0472               	iorwf	?_strncmp+1,w
 21024  099D  1D03               	btfss	3,2
 21025  099E  29E8               	goto	l6962
 21026                           
 21027                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
 21028  099F  0020               	movlb	0	; select bank0
 21029  09A0  0859               	movf	vfpfcnvrt@fmt,w
 21030  09A1  0086               	movwf	6
 21031  09A2  0187               	clrf	7
 21032  09A3  3002               	movlw	2
 21033  09A4  0781               	addwf	1,f
 21034  09A5  3141               	addfsr 1,1
 21035  09A6  1803               	skipnc
 21036  09A7  0A81               	incf	1,f
 21037                           
 21038                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
 21039  09A8  085A               	movf	vfpfcnvrt@ap,w
 21040  09A9  0086               	movwf	6
 21041  09AA  0187               	clrf	7
 21042  09AB  0801               	movf	1,w
 21043  09AC  0084               	movwf	4
 21044  09AD  0185               	clrf	5
 21045  09AE  3002               	movlw	2
 21046  09AF  0781               	addwf	1,f
 21047  09B0  3F00               	moviw [0]fsr0
 21048  09B1  0021               	movlb	1	; select bank1
 21049  09B2  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21050  09B3  3F01               	moviw [1]fsr0
 21051  09B4  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21052  09B5  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21053  09B6  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21054  09B7  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21055  09B8  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21056  09B9  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21057  09BA  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21058                           
 21059                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 985:       
      +                                return otoa(fp, llu);
 21060  09BB  0020               	movlb	0	; select bank0
 21061  09BC  0858               	movf	vfpfcnvrt@fp+1,w
 21062  09BD  00B1               	movwf	otoa@fp+1
 21063  09BE  0857               	movf	vfpfcnvrt@fp,w
 21064  09BF  00B0               	movwf	otoa@fp
 21065  09C0  0021               	movlb	1	; select bank1
 21066  09C1  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21067  09C2  0020               	movlb	0	; select bank0
 21068  09C3  00B2               	movwf	otoa@d
 21069  09C4  0021               	movlb	1	; select bank1
 21070  09C5  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21071  09C6  0020               	movlb	0	; select bank0
 21072  09C7  00B3               	movwf	otoa@d+1
 21073  09C8  0021               	movlb	1	; select bank1
 21074  09C9  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21075  09CA  0020               	movlb	0	; select bank0
 21076  09CB  00B4               	movwf	otoa@d+2
 21077  09CC  0021               	movlb	1	; select bank1
 21078  09CD  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21079  09CE  0020               	movlb	0	; select bank0
 21080  09CF  00B5               	movwf	otoa@d+3
 21081  09D0  0021               	movlb	1	; select bank1
 21082  09D1  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21083  09D2  0020               	movlb	0	; select bank0
 21084  09D3  00B6               	movwf	otoa@d+4
 21085  09D4  0021               	movlb	1	; select bank1
 21086  09D5  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21087  09D6  0020               	movlb	0	; select bank0
 21088  09D7  00B7               	movwf	otoa@d+5
 21089  09D8  0021               	movlb	1	; select bank1
 21090  09D9  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21091  09DA  0020               	movlb	0	; select bank0
 21092  09DB  00B8               	movwf	otoa@d+6
 21093  09DC  0021               	movlb	1	; select bank1
 21094  09DD  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21095  09DE  0020               	movlb	0	; select bank0
 21096  09DF  00B9               	movwf	otoa@d+7
 21097  09E0  31A3  23E8         	fcall	_otoa
 21098  09E2  0020               	movlb	0	; select bank0
 21099  09E3  0831               	movf	?_otoa+1,w
 21100  09E4  00D8               	movwf	?_vfpfcnvrt+1
 21101  09E5  0830               	movf	?_otoa,w
 21102  09E6  00D7               	movwf	?_vfpfcnvrt
 21103  09E7  0008               	return
 21104  09E8                     l6962:	
 21105                           
 21106                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
 21107  09E8  0020               	movlb	0	; select bank0
 21108  09E9  0859               	movf	vfpfcnvrt@fmt,w
 21109  09EA  0086               	movwf	6
 21110  09EB  0187               	clrf	7
 21111  09EC  3F40               	moviw [0]fsr1
 21112  09ED  00DB               	movwf	??_vfpfcnvrt
 21113  09EE  3F41               	moviw [1]fsr1
 21114  09EF  00DC               	movwf	??_vfpfcnvrt+1
 21115  09F0  085B               	movf	??_vfpfcnvrt,w
 21116  09F1  0084               	movwf	4
 21117  09F2  085C               	movf	??_vfpfcnvrt+1,w
 21118  09F3  0085               	movwf	5
 21119  09F4  0012               	moviw fsr0++
 21120  09F5  3A6F               	xorlw	111
 21121  09F6  1D03               	btfss	3,2
 21122  09F7  2A40               	goto	l6972
 21123                           
 21124                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
 21125  09F8  0859               	movf	vfpfcnvrt@fmt,w
 21126  09F9  0086               	movwf	6
 21127  09FA  0187               	clrf	7
 21128  09FB  3001               	movlw	1
 21129  09FC  0781               	addwf	1,f
 21130  09FD  3141               	addfsr 1,1
 21131  09FE  1803               	skipnc
 21132  09FF  0A81               	incf	1,f
 21133                           
 21134                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
 21135  0A00  085A               	movf	vfpfcnvrt@ap,w
 21136  0A01  0086               	movwf	6
 21137  0A02  0187               	clrf	7
 21138  0A03  0801               	movf	1,w
 21139  0A04  0084               	movwf	4
 21140  0A05  0185               	clrf	5
 21141  0A06  3002               	movlw	2
 21142  0A07  0781               	addwf	1,f
 21143  0A08  3F00               	moviw [0]fsr0
 21144  0A09  0021               	movlb	1	; select bank1
 21145  0A0A  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21146  0A0B  3F01               	moviw [1]fsr0
 21147  0A0C  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21148  0A0D  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21149  0A0E  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21150  0A0F  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21151  0A10  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21152  0A11  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21153  0A12  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21154                           
 21155                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 995:       
      +                                return otoa(fp, llu);
 21156  0A13  0020               	movlb	0	; select bank0
 21157  0A14  0858               	movf	vfpfcnvrt@fp+1,w
 21158  0A15  00B1               	movwf	otoa@fp+1
 21159  0A16  0857               	movf	vfpfcnvrt@fp,w
 21160  0A17  00B0               	movwf	otoa@fp
 21161  0A18  0021               	movlb	1	; select bank1
 21162  0A19  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21163  0A1A  0020               	movlb	0	; select bank0
 21164  0A1B  00B2               	movwf	otoa@d
 21165  0A1C  0021               	movlb	1	; select bank1
 21166  0A1D  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21167  0A1E  0020               	movlb	0	; select bank0
 21168  0A1F  00B3               	movwf	otoa@d+1
 21169  0A20  0021               	movlb	1	; select bank1
 21170  0A21  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21171  0A22  0020               	movlb	0	; select bank0
 21172  0A23  00B4               	movwf	otoa@d+2
 21173  0A24  0021               	movlb	1	; select bank1
 21174  0A25  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21175  0A26  0020               	movlb	0	; select bank0
 21176  0A27  00B5               	movwf	otoa@d+3
 21177  0A28  0021               	movlb	1	; select bank1
 21178  0A29  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21179  0A2A  0020               	movlb	0	; select bank0
 21180  0A2B  00B6               	movwf	otoa@d+4
 21181  0A2C  0021               	movlb	1	; select bank1
 21182  0A2D  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21183  0A2E  0020               	movlb	0	; select bank0
 21184  0A2F  00B7               	movwf	otoa@d+5
 21185  0A30  0021               	movlb	1	; select bank1
 21186  0A31  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21187  0A32  0020               	movlb	0	; select bank0
 21188  0A33  00B8               	movwf	otoa@d+6
 21189  0A34  0021               	movlb	1	; select bank1
 21190  0A35  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21191  0A36  0020               	movlb	0	; select bank0
 21192  0A37  00B9               	movwf	otoa@d+7
 21193  0A38  31A3  23E8         	fcall	_otoa
 21194  0A3A  0020               	movlb	0	; select bank0
 21195  0A3B  0831               	movf	?_otoa+1,w
 21196  0A3C  00D8               	movwf	?_vfpfcnvrt+1
 21197  0A3D  0830               	movf	?_otoa,w
 21198  0A3E  00D7               	movwf	?_vfpfcnvrt
 21199  0A3F  0008               	return
 21200  0A40                     l6972:	
 21201                           
 21202                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
 21203  0A40  0859               	movf	vfpfcnvrt@fmt,w
 21204  0A41  0086               	movwf	6
 21205  0A42  0187               	clrf	7
 21206  0A43  3F40               	moviw [0]fsr1
 21207  0A44  00F1               	movwf	strncmp@_l
 21208  0A45  3F41               	moviw [1]fsr1
 21209  0A46  00F2               	movwf	strncmp@_l+1
 21210  0A47  3041               	movlw	low (STR_60| (0+32768))
 21211  0A48  00F3               	movwf	strncmp@_r
 21212  0A49  30BA               	movlw	high (STR_60| (0+32768))
 21213  0A4A  00F4               	movwf	strncmp@_r+1
 21214  0A4B  3002               	movlw	2
 21215  0A4C  00F5               	movwf	strncmp@n
 21216  0A4D  3000               	movlw	0
 21217  0A4E  00F6               	movwf	strncmp@n+1
 21218  0A4F  31A8  2021  3188   	fcall	_strncmp
 21219  0A52  0871               	movf	?_strncmp,w
 21220  0A53  0472               	iorwf	?_strncmp+1,w
 21221  0A54  1D03               	btfss	3,2
 21222  0A55  2A9F               	goto	l6982
 21223                           
 21224                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
 21225  0A56  0020               	movlb	0	; select bank0
 21226  0A57  0859               	movf	vfpfcnvrt@fmt,w
 21227  0A58  0086               	movwf	6
 21228  0A59  0187               	clrf	7
 21229  0A5A  3002               	movlw	2
 21230  0A5B  0781               	addwf	1,f
 21231  0A5C  3141               	addfsr 1,1
 21232  0A5D  1803               	skipnc
 21233  0A5E  0A81               	incf	1,f
 21234                           
 21235                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 21236  0A5F  085A               	movf	vfpfcnvrt@ap,w
 21237  0A60  0086               	movwf	6
 21238  0A61  0187               	clrf	7
 21239  0A62  0801               	movf	1,w
 21240  0A63  0084               	movwf	4
 21241  0A64  0185               	clrf	5
 21242  0A65  3002               	movlw	2
 21243  0A66  0781               	addwf	1,f
 21244  0A67  3F00               	moviw [0]fsr0
 21245  0A68  0021               	movlb	1	; select bank1
 21246  0A69  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21247  0A6A  3F01               	moviw [1]fsr0
 21248  0A6B  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21249  0A6C  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21250  0A6D  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21251  0A6E  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21252  0A6F  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21253  0A70  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21254  0A71  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21255                           
 21256                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1049:      
      +                                 return otoa(fp, llu);
 21257  0A72  0020               	movlb	0	; select bank0
 21258  0A73  0858               	movf	vfpfcnvrt@fp+1,w
 21259  0A74  00B1               	movwf	otoa@fp+1
 21260  0A75  0857               	movf	vfpfcnvrt@fp,w
 21261  0A76  00B0               	movwf	otoa@fp
 21262  0A77  0021               	movlb	1	; select bank1
 21263  0A78  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21264  0A79  0020               	movlb	0	; select bank0
 21265  0A7A  00B2               	movwf	otoa@d
 21266  0A7B  0021               	movlb	1	; select bank1
 21267  0A7C  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21268  0A7D  0020               	movlb	0	; select bank0
 21269  0A7E  00B3               	movwf	otoa@d+1
 21270  0A7F  0021               	movlb	1	; select bank1
 21271  0A80  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21272  0A81  0020               	movlb	0	; select bank0
 21273  0A82  00B4               	movwf	otoa@d+2
 21274  0A83  0021               	movlb	1	; select bank1
 21275  0A84  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21276  0A85  0020               	movlb	0	; select bank0
 21277  0A86  00B5               	movwf	otoa@d+3
 21278  0A87  0021               	movlb	1	; select bank1
 21279  0A88  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21280  0A89  0020               	movlb	0	; select bank0
 21281  0A8A  00B6               	movwf	otoa@d+4
 21282  0A8B  0021               	movlb	1	; select bank1
 21283  0A8C  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21284  0A8D  0020               	movlb	0	; select bank0
 21285  0A8E  00B7               	movwf	otoa@d+5
 21286  0A8F  0021               	movlb	1	; select bank1
 21287  0A90  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21288  0A91  0020               	movlb	0	; select bank0
 21289  0A92  00B8               	movwf	otoa@d+6
 21290  0A93  0021               	movlb	1	; select bank1
 21291  0A94  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21292  0A95  0020               	movlb	0	; select bank0
 21293  0A96  00B9               	movwf	otoa@d+7
 21294  0A97  31A3  23E8         	fcall	_otoa
 21295  0A99  0020               	movlb	0	; select bank0
 21296  0A9A  0831               	movf	?_otoa+1,w
 21297  0A9B  00D8               	movwf	?_vfpfcnvrt+1
 21298  0A9C  0830               	movf	?_otoa,w
 21299  0A9D  00D7               	movwf	?_vfpfcnvrt
 21300  0A9E  0008               	return
 21301  0A9F                     l6982:	
 21302                           
 21303                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
 21304  0A9F  0020               	movlb	0	; select bank0
 21305  0AA0  0859               	movf	vfpfcnvrt@fmt,w
 21306  0AA1  0086               	movwf	6
 21307  0AA2  0187               	clrf	7
 21308  0AA3  3F40               	moviw [0]fsr1
 21309  0AA4  00F1               	movwf	strncmp@_l
 21310  0AA5  3F41               	moviw [1]fsr1
 21311  0AA6  00F2               	movwf	strncmp@_l+1
 21312  0AA7  3025               	movlw	low (STR_65| (0+32768))
 21313  0AA8  00F3               	movwf	strncmp@_r
 21314  0AA9  30BA               	movlw	high (STR_65| (0+32768))
 21315  0AAA  00F4               	movwf	strncmp@_r+1
 21316  0AAB  3003               	movlw	3
 21317  0AAC  00F5               	movwf	strncmp@n
 21318  0AAD  3000               	movlw	0
 21319  0AAE  00F6               	movwf	strncmp@n+1
 21320  0AAF  31A8  2021  3188   	fcall	_strncmp
 21321  0AB2  0871               	movf	?_strncmp,w
 21322  0AB3  0472               	iorwf	?_strncmp+1,w
 21323  0AB4  1D03               	btfss	3,2
 21324  0AB5  2B36               	goto	l6994
 21325                           
 21326                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
 21327  0AB6  0020               	movlb	0	; select bank0
 21328  0AB7  0859               	movf	vfpfcnvrt@fmt,w
 21329  0AB8  0086               	movwf	6
 21330  0AB9  0187               	clrf	7
 21331  0ABA  3003               	movlw	3
 21332  0ABB  0781               	addwf	1,f
 21333  0ABC  3141               	addfsr 1,1
 21334  0ABD  1803               	skipnc
 21335  0ABE  0A81               	incf	1,f
 21336                           
 21337                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
 21338  0ABF  085A               	movf	vfpfcnvrt@ap,w
 21339  0AC0  0086               	movwf	6
 21340  0AC1  0187               	clrf	7
 21341  0AC2  0801               	movf	1,w
 21342  0AC3  0084               	movwf	4
 21343  0AC4  0185               	clrf	5
 21344  0AC5  3002               	movlw	2
 21345  0AC6  0781               	addwf	1,f
 21346  0AC7  3F00               	moviw [0]fsr0
 21347  0AC8  0021               	movlb	1	; select bank1
 21348  0AC9  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 21349  0ACA  3F01               	moviw [1]fsr0
 21350  0ACB  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 21351                           
 21352                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
 21353  0ACC  0830               	movf	vfpfcnvrt@vp^(0+128),w
 21354  0ACD  0086               	movwf	6
 21355  0ACE  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 21356  0ACF  0087               	movwf	7
 21357  0AD0  0023               	movlb	3	; select bank3
 21358  0AD1  0844               	movf	_nout^(0+384),w
 21359  0AD2  0081               	movwf	1
 21360  0AD3  2B32               	goto	l6990
 21361  0AD4                     l6996:	
 21362                           
 21363                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
 21364  0AD4  0020               	movlb	0	; select bank0
 21365  0AD5  0859               	movf	vfpfcnvrt@fmt,w
 21366  0AD6  0086               	movwf	6
 21367  0AD7  0187               	clrf	7
 21368  0AD8  3002               	movlw	2
 21369  0AD9  0781               	addwf	1,f
 21370  0ADA  3141               	addfsr 1,1
 21371  0ADB  1803               	skipnc
 21372  0ADC  0A81               	incf	1,f
 21373                           
 21374                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
 21375  0ADD  085A               	movf	vfpfcnvrt@ap,w
 21376  0ADE  0086               	movwf	6
 21377  0ADF  0187               	clrf	7
 21378  0AE0  0801               	movf	1,w
 21379  0AE1  0084               	movwf	4
 21380  0AE2  0185               	clrf	5
 21381  0AE3  3002               	movlw	2
 21382  0AE4  0781               	addwf	1,f
 21383  0AE5  3F00               	moviw [0]fsr0
 21384  0AE6  0021               	movlb	1	; select bank1
 21385  0AE7  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 21386  0AE8  3F01               	moviw [1]fsr0
 21387  0AE9  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 21388                           
 21389                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
 21390  0AEA  0830               	movf	vfpfcnvrt@vp^(0+128),w
 21391  0AEB  0086               	movwf	6
 21392  0AEC  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 21393  0AED  0087               	movwf	7
 21394  0AEE  0023               	movlb	3	; select bank3
 21395  0AEF  0844               	movf	_nout^(0+384),w
 21396  0AF0  3FC0               	movwi [0]fsr1
 21397  0AF1  0845               	movf	(_nout+1)^(0+384),w
 21398  0AF2  3FC1               	movwi [1]fsr1
 21399  0AF3  2B32               	goto	l6990
 21400  0AF4                     l7008:	
 21401                           
 21402                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
 21403  0AF4  0859               	movf	vfpfcnvrt@fmt,w
 21404  0AF5  0086               	movwf	6
 21405  0AF6  0187               	clrf	7
 21406  0AF7  3001               	movlw	1
 21407  0AF8  0781               	addwf	1,f
 21408  0AF9  3141               	addfsr 1,1
 21409  0AFA  1803               	skipnc
 21410  0AFB  0A81               	incf	1,f
 21411                           
 21412                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
 21413  0AFC  085A               	movf	vfpfcnvrt@ap,w
 21414  0AFD  0086               	movwf	6
 21415  0AFE  0187               	clrf	7
 21416  0AFF  0801               	movf	1,w
 21417  0B00  0084               	movwf	4
 21418  0B01  0185               	clrf	5
 21419  0B02  3002               	movlw	2
 21420  0B03  0781               	addwf	1,f
 21421  0B04  3F00               	moviw [0]fsr0
 21422  0B05  0021               	movlb	1	; select bank1
 21423  0B06  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 21424  0B07  3F01               	moviw [1]fsr0
 21425  0B08  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 21426                           
 21427                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
 21428  0B09  0830               	movf	vfpfcnvrt@vp^(0+128),w
 21429  0B0A  0086               	movwf	6
 21430  0B0B  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 21431  0B0C  0087               	movwf	7
 21432  0B0D  0023               	movlb	3	; select bank3
 21433  0B0E  0844               	movf	_nout^(0+384),w
 21434  0B0F  3FC0               	movwi [0]fsr1
 21435  0B10  0845               	movf	(_nout+1)^(0+384),w
 21436  0B11  3FC1               	movwi [1]fsr1
 21437  0B12  2B32               	goto	l6990
 21438  0B13                     l7020:	
 21439                           
 21440                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
 21441  0B13  0020               	movlb	0	; select bank0
 21442  0B14  0859               	movf	vfpfcnvrt@fmt,w
 21443  0B15  0086               	movwf	6
 21444  0B16  0187               	clrf	7
 21445  0B17  3002               	movlw	2
 21446  0B18  0781               	addwf	1,f
 21447  0B19  3141               	addfsr 1,1
 21448  0B1A  1803               	skipnc
 21449  0B1B  0A81               	incf	1,f
 21450                           
 21451                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
 21452  0B1C  085A               	movf	vfpfcnvrt@ap,w
 21453  0B1D  0086               	movwf	6
 21454  0B1E  0187               	clrf	7
 21455  0B1F  0801               	movf	1,w
 21456  0B20  0084               	movwf	4
 21457  0B21  0185               	clrf	5
 21458  0B22  3002               	movlw	2
 21459  0B23  0781               	addwf	1,f
 21460  0B24  3F00               	moviw [0]fsr0
 21461  0B25  0021               	movlb	1	; select bank1
 21462  0B26  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 21463  0B27  3F01               	moviw [1]fsr0
 21464  0B28  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 21465                           
 21466                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
 21467  0B29  0830               	movf	vfpfcnvrt@vp^(0+128),w
 21468  0B2A  0086               	movwf	6
 21469  0B2B  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 21470  0B2C  0087               	movwf	7
 21471  0B2D  0023               	movlb	3	; select bank3
 21472  0B2E  0844               	movf	_nout^(0+384),w
 21473  0B2F  3FC0               	movwi [0]fsr1
 21474  0B30  0845               	movf	(_nout+1)^(0+384),w
 21475  0B31  3FC1               	movwi [1]fsr1
 21476  0B32                     l6990:	
 21477                           
 21478                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
 21479  0B32  0020               	movlb	0	; select bank0
 21480  0B33  01D7               	clrf	?_vfpfcnvrt
 21481  0B34  01D8               	clrf	?_vfpfcnvrt+1
 21482  0B35  0008               	return
 21483  0B36                     l6994:	
 21484                           
 21485                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
 21486  0B36  0020               	movlb	0	; select bank0
 21487  0B37  0859               	movf	vfpfcnvrt@fmt,w
 21488  0B38  0086               	movwf	6
 21489  0B39  0187               	clrf	7
 21490  0B3A  3F40               	moviw [0]fsr1
 21491  0B3B  00F1               	movwf	strncmp@_l
 21492  0B3C  3F41               	moviw [1]fsr1
 21493  0B3D  00F2               	movwf	strncmp@_l+1
 21494  0B3E  3026               	movlw	low ((STR_65+1)| (0+32768))
 21495  0B3F  00F3               	movwf	strncmp@_r
 21496  0B40  30BA               	movlw	high ((STR_65+1)| (0+32768))
 21497  0B41  00F4               	movwf	strncmp@_r+1
 21498  0B42  3002               	movlw	2
 21499  0B43  00F5               	movwf	strncmp@n
 21500  0B44  3000               	movlw	0
 21501  0B45  00F6               	movwf	strncmp@n+1
 21502  0B46  31A8  2021  3188   	fcall	_strncmp
 21503  0B49  0871               	movf	?_strncmp,w
 21504  0B4A  0472               	iorwf	?_strncmp+1,w
 21505  0B4B  1903               	btfsc	3,2
 21506  0B4C  2AD4               	goto	l6996
 21507                           
 21508                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
 21509  0B4D  0020               	movlb	0	; select bank0
 21510  0B4E  0859               	movf	vfpfcnvrt@fmt,w
 21511  0B4F  0086               	movwf	6
 21512  0B50  0187               	clrf	7
 21513  0B51  3F40               	moviw [0]fsr1
 21514  0B52  00DB               	movwf	??_vfpfcnvrt
 21515  0B53  3F41               	moviw [1]fsr1
 21516  0B54  00DC               	movwf	??_vfpfcnvrt+1
 21517  0B55  085B               	movf	??_vfpfcnvrt,w
 21518  0B56  0084               	movwf	4
 21519  0B57  085C               	movf	??_vfpfcnvrt+1,w
 21520  0B58  0085               	movwf	5
 21521  0B59  0012               	moviw fsr0++
 21522  0B5A  3A6E               	xorlw	110
 21523  0B5B  1903               	btfsc	3,2
 21524  0B5C  2AF4               	goto	l7008
 21525                           
 21526                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
 21527  0B5D  0859               	movf	vfpfcnvrt@fmt,w
 21528  0B5E  0086               	movwf	6
 21529  0B5F  0187               	clrf	7
 21530  0B60  3F40               	moviw [0]fsr1
 21531  0B61  00F1               	movwf	strncmp@_l
 21532  0B62  3F41               	moviw [1]fsr1
 21533  0B63  00F2               	movwf	strncmp@_l+1
 21534  0B64  303E               	movlw	low (STR_75| (0+32768))
 21535  0B65  00F3               	movwf	strncmp@_r
 21536  0B66  30BA               	movlw	high (STR_75| (0+32768))
 21537  0B67  00F4               	movwf	strncmp@_r+1
 21538  0B68  3002               	movlw	2
 21539  0B69  00F5               	movwf	strncmp@n
 21540  0B6A  3000               	movlw	0
 21541  0B6B  00F6               	movwf	strncmp@n+1
 21542  0B6C  31A8  2021  3188   	fcall	_strncmp
 21543  0B6F  0871               	movf	?_strncmp,w
 21544  0B70  0472               	iorwf	?_strncmp+1,w
 21545  0B71  1903               	btfsc	3,2
 21546  0B72  2B13               	goto	l7020
 21547                           
 21548                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
 21549  0B73  0020               	movlb	0	; select bank0
 21550  0B74  0859               	movf	vfpfcnvrt@fmt,w
 21551  0B75  0086               	movwf	6
 21552  0B76  0187               	clrf	7
 21553  0B77  3F40               	moviw [0]fsr1
 21554  0B78  00DB               	movwf	??_vfpfcnvrt
 21555  0B79  3F41               	moviw [1]fsr1
 21556  0B7A  00DC               	movwf	??_vfpfcnvrt+1
 21557  0B7B  085B               	movf	??_vfpfcnvrt,w
 21558  0B7C  0084               	movwf	4
 21559  0B7D  085C               	movf	??_vfpfcnvrt+1,w
 21560  0B7E  0085               	movwf	5
 21561  0B7F  0012               	moviw fsr0++
 21562  0B80  3A70               	xorlw	112
 21563  0B81  1D03               	btfss	3,2
 21564  0B82  2BCF               	goto	l7040
 21565                           
 21566                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
 21567  0B83  0859               	movf	vfpfcnvrt@fmt,w
 21568  0B84  0086               	movwf	6
 21569  0B85  0187               	clrf	7
 21570  0B86  3001               	movlw	1
 21571  0B87  0781               	addwf	1,f
 21572  0B88  3141               	addfsr 1,1
 21573  0B89  1803               	skipnc
 21574  0B8A  0A81               	incf	1,f
 21575                           
 21576                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
 21577  0B8B  085A               	movf	vfpfcnvrt@ap,w
 21578  0B8C  0086               	movwf	6
 21579  0B8D  0187               	clrf	7
 21580  0B8E  0801               	movf	1,w
 21581  0B8F  0084               	movwf	4
 21582  0B90  0185               	clrf	5
 21583  0B91  3002               	movlw	2
 21584  0B92  0781               	addwf	1,f
 21585  0B93  3F00               	moviw [0]fsr0
 21586  0B94  0021               	movlb	1	; select bank1
 21587  0B95  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21588  0B96  3F01               	moviw [1]fsr0
 21589  0B97  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21590  0B98  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21591  0B99  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21592  0B9A  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21593  0B9B  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21594  0B9C  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21595  0B9D  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21596                           
 21597                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
 21598  0B9E  0020               	movlb	0	; select bank0
 21599  0B9F  0858               	movf	vfpfcnvrt@fp+1,w
 21600  0BA0  00B1               	movwf	xtoa@fp+1
 21601  0BA1  0857               	movf	vfpfcnvrt@fp,w
 21602  0BA2  00B0               	movwf	xtoa@fp
 21603  0BA3  0021               	movlb	1	; select bank1
 21604  0BA4  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21605  0BA5  0020               	movlb	0	; select bank0
 21606  0BA6  00B2               	movwf	xtoa@d
 21607  0BA7  0021               	movlb	1	; select bank1
 21608  0BA8  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21609  0BA9  0020               	movlb	0	; select bank0
 21610  0BAA  00B3               	movwf	xtoa@d+1
 21611  0BAB  0021               	movlb	1	; select bank1
 21612  0BAC  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21613  0BAD  0020               	movlb	0	; select bank0
 21614  0BAE  00B4               	movwf	xtoa@d+2
 21615  0BAF  0021               	movlb	1	; select bank1
 21616  0BB0  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21617  0BB1  0020               	movlb	0	; select bank0
 21618  0BB2  00B5               	movwf	xtoa@d+3
 21619  0BB3  0021               	movlb	1	; select bank1
 21620  0BB4  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21621  0BB5  0020               	movlb	0	; select bank0
 21622  0BB6  00B6               	movwf	xtoa@d+4
 21623  0BB7  0021               	movlb	1	; select bank1
 21624  0BB8  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21625  0BB9  0020               	movlb	0	; select bank0
 21626  0BBA  00B7               	movwf	xtoa@d+5
 21627  0BBB  0021               	movlb	1	; select bank1
 21628  0BBC  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21629  0BBD  0020               	movlb	0	; select bank0
 21630  0BBE  00B8               	movwf	xtoa@d+6
 21631  0BBF  0021               	movlb	1	; select bank1
 21632  0BC0  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21633  0BC1  0020               	movlb	0	; select bank0
 21634  0BC2  00B9               	movwf	xtoa@d+7
 21635  0BC3  3078               	movlw	120
 21636  0BC4  00DB               	movwf	??_vfpfcnvrt
 21637  0BC5  085B               	movf	??_vfpfcnvrt,w
 21638  0BC6  00BA               	movwf	xtoa@x
 21639  0BC7  319B  2389         	fcall	_xtoa
 21640  0BC9  0020               	movlb	0	; select bank0
 21641  0BCA  0831               	movf	?_xtoa+1,w
 21642  0BCB  00D8               	movwf	?_vfpfcnvrt+1
 21643  0BCC  0830               	movf	?_xtoa,w
 21644  0BCD  00D7               	movwf	?_vfpfcnvrt
 21645  0BCE  0008               	return
 21646  0BCF                     l7040:	
 21647                           
 21648                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 21649  0BCF  0859               	movf	vfpfcnvrt@fmt,w
 21650  0BD0  0086               	movwf	6
 21651  0BD1  0187               	clrf	7
 21652  0BD2  3F40               	moviw [0]fsr1
 21653  0BD3  00DB               	movwf	??_vfpfcnvrt
 21654  0BD4  3F41               	moviw [1]fsr1
 21655  0BD5  00DC               	movwf	??_vfpfcnvrt+1
 21656  0BD6  085B               	movf	??_vfpfcnvrt,w
 21657  0BD7  0084               	movwf	4
 21658  0BD8  085C               	movf	??_vfpfcnvrt+1,w
 21659  0BD9  0085               	movwf	5
 21660  0BDA  0012               	moviw fsr0++
 21661  0BDB  3A73               	xorlw	115
 21662  0BDC  1D03               	btfss	3,2
 21663  0BDD  2C08               	goto	l7050
 21664                           
 21665                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 21666  0BDE  0859               	movf	vfpfcnvrt@fmt,w
 21667  0BDF  0086               	movwf	6
 21668  0BE0  0187               	clrf	7
 21669  0BE1  3001               	movlw	1
 21670  0BE2  0781               	addwf	1,f
 21671  0BE3  3141               	addfsr 1,1
 21672  0BE4  1803               	skipnc
 21673  0BE5  0A81               	incf	1,f
 21674                           
 21675                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 21676  0BE6  085A               	movf	vfpfcnvrt@ap,w
 21677  0BE7  0086               	movwf	6
 21678  0BE8  0187               	clrf	7
 21679  0BE9  0801               	movf	1,w
 21680  0BEA  0084               	movwf	4
 21681  0BEB  0185               	clrf	5
 21682  0BEC  3002               	movlw	2
 21683  0BED  0781               	addwf	1,f
 21684  0BEE  3F00               	moviw [0]fsr0
 21685  0BEF  0021               	movlb	1	; select bank1
 21686  0BF0  00A0               	movwf	vfpfcnvrt@cp^(0+128)
 21687  0BF1  3F01               	moviw [1]fsr0
 21688  0BF2  00A1               	movwf	(vfpfcnvrt@cp+1)^(0+128)
 21689                           
 21690                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 21691  0BF3  0020               	movlb	0	; select bank0
 21692  0BF4  0858               	movf	vfpfcnvrt@fp+1,w
 21693  0BF5  00A1               	movwf	stoa@fp+1
 21694  0BF6  0857               	movf	vfpfcnvrt@fp,w
 21695  0BF7  00A0               	movwf	stoa@fp
 21696  0BF8  0021               	movlb	1	; select bank1
 21697  0BF9  0821               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 21698  0BFA  0020               	movlb	0	; select bank0
 21699  0BFB  00A3               	movwf	stoa@s+1
 21700  0BFC  0021               	movlb	1	; select bank1
 21701  0BFD  0820               	movf	vfpfcnvrt@cp^(0+128),w
 21702  0BFE  0020               	movlb	0	; select bank0
 21703  0BFF  00A2               	movwf	stoa@s
 21704  0C00  31AF  273B         	fcall	_stoa
 21705  0C02  0020               	movlb	0	; select bank0
 21706  0C03  0821               	movf	?_stoa+1,w
 21707  0C04  00D8               	movwf	?_vfpfcnvrt+1
 21708  0C05  0820               	movf	?_stoa,w
 21709  0C06  00D7               	movwf	?_vfpfcnvrt
 21710  0C07  0008               	return
 21711  0C08                     l7050:	
 21712                           
 21713                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
 21714  0C08  0859               	movf	vfpfcnvrt@fmt,w
 21715  0C09  0086               	movwf	6
 21716  0C0A  0187               	clrf	7
 21717  0C0B  3F40               	moviw [0]fsr1
 21718  0C0C  00F1               	movwf	strncmp@_l
 21719  0C0D  3F41               	moviw [1]fsr1
 21720  0C0E  00F2               	movwf	strncmp@_l+1
 21721  0C0F  302D               	movlw	low (STR_80| (0+32768))
 21722  0C10  00F3               	movwf	strncmp@_r
 21723  0C11  30BA               	movlw	high (STR_80| (0+32768))
 21724  0C12  00F4               	movwf	strncmp@_r+1
 21725  0C13  3003               	movlw	3
 21726  0C14  00F5               	movwf	strncmp@n
 21727  0C15  3000               	movlw	0
 21728  0C16  00F6               	movwf	strncmp@n+1
 21729  0C17  31A8  2021  3188   	fcall	_strncmp
 21730  0C1A  0871               	movf	?_strncmp,w
 21731  0C1B  0472               	iorwf	?_strncmp+1,w
 21732  0C1C  1D03               	btfss	3,2
 21733  0C1D  2C66               	goto	l7060
 21734                           
 21735                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
 21736  0C1E  0020               	movlb	0	; select bank0
 21737  0C1F  0859               	movf	vfpfcnvrt@fmt,w
 21738  0C20  0086               	movwf	6
 21739  0C21  0187               	clrf	7
 21740  0C22  3003               	movlw	3
 21741  0C23  0781               	addwf	1,f
 21742  0C24  3141               	addfsr 1,1
 21743  0C25  1803               	skipnc
 21744  0C26  0A81               	incf	1,f
 21745                           
 21746                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 21747  0C27  085A               	movf	vfpfcnvrt@ap,w
 21748  0C28  0086               	movwf	6
 21749  0C29  0187               	clrf	7
 21750  0C2A  0801               	movf	1,w
 21751  0C2B  0084               	movwf	4
 21752  0C2C  0185               	clrf	5
 21753  0C2D  3002               	movlw	2
 21754  0C2E  0781               	addwf	1,f
 21755  0C2F  0800               	movf	0,w
 21756  0C30  0021               	movlb	1	; select bank1
 21757  0C31  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21758  0C32  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 21759  0C33  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21760  0C34  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21761  0C35  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21762  0C36  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21763  0C37  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21764  0C38  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21765                           
 21766                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
 21767  0C39  0020               	movlb	0	; select bank0
 21768  0C3A  0858               	movf	vfpfcnvrt@fp+1,w
 21769  0C3B  00B1               	movwf	utoa@fp+1
 21770  0C3C  0857               	movf	vfpfcnvrt@fp,w
 21771  0C3D  00B0               	movwf	utoa@fp
 21772  0C3E  0021               	movlb	1	; select bank1
 21773  0C3F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21774  0C40  0020               	movlb	0	; select bank0
 21775  0C41  00B2               	movwf	utoa@d
 21776  0C42  0021               	movlb	1	; select bank1
 21777  0C43  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21778  0C44  0020               	movlb	0	; select bank0
 21779  0C45  00B3               	movwf	utoa@d+1
 21780  0C46  0021               	movlb	1	; select bank1
 21781  0C47  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21782  0C48  0020               	movlb	0	; select bank0
 21783  0C49  00B4               	movwf	utoa@d+2
 21784  0C4A  0021               	movlb	1	; select bank1
 21785  0C4B  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21786  0C4C  0020               	movlb	0	; select bank0
 21787  0C4D  00B5               	movwf	utoa@d+3
 21788  0C4E  0021               	movlb	1	; select bank1
 21789  0C4F  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21790  0C50  0020               	movlb	0	; select bank0
 21791  0C51  00B6               	movwf	utoa@d+4
 21792  0C52  0021               	movlb	1	; select bank1
 21793  0C53  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21794  0C54  0020               	movlb	0	; select bank0
 21795  0C55  00B7               	movwf	utoa@d+5
 21796  0C56  0021               	movlb	1	; select bank1
 21797  0C57  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21798  0C58  0020               	movlb	0	; select bank0
 21799  0C59  00B8               	movwf	utoa@d+6
 21800  0C5A  0021               	movlb	1	; select bank1
 21801  0C5B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21802  0C5C  0020               	movlb	0	; select bank0
 21803  0C5D  00B9               	movwf	utoa@d+7
 21804  0C5E  31A3  2307         	fcall	_utoa
 21805  0C60  0020               	movlb	0	; select bank0
 21806  0C61  0831               	movf	?_utoa+1,w
 21807  0C62  00D8               	movwf	?_vfpfcnvrt+1
 21808  0C63  0830               	movf	?_utoa,w
 21809  0C64  00D7               	movwf	?_vfpfcnvrt
 21810  0C65  0008               	return
 21811  0C66                     l7060:	
 21812                           
 21813                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
 21814  0C66  0020               	movlb	0	; select bank0
 21815  0C67  0859               	movf	vfpfcnvrt@fmt,w
 21816  0C68  0086               	movwf	6
 21817  0C69  0187               	clrf	7
 21818  0C6A  3F40               	moviw [0]fsr1
 21819  0C6B  00F1               	movwf	strncmp@_l
 21820  0C6C  3F41               	moviw [1]fsr1
 21821  0C6D  00F2               	movwf	strncmp@_l+1
 21822  0C6E  302E               	movlw	low ((STR_80+1)| (0+32768))
 21823  0C6F  00F3               	movwf	strncmp@_r
 21824  0C70  30BA               	movlw	high ((STR_80+1)| (0+32768))
 21825  0C71  00F4               	movwf	strncmp@_r+1
 21826  0C72  3002               	movlw	2
 21827  0C73  00F5               	movwf	strncmp@n
 21828  0C74  3000               	movlw	0
 21829  0C75  00F6               	movwf	strncmp@n+1
 21830  0C76  31A8  2021  3188   	fcall	_strncmp
 21831  0C79  0871               	movf	?_strncmp,w
 21832  0C7A  0472               	iorwf	?_strncmp+1,w
 21833  0C7B  1D03               	btfss	3,2
 21834  0C7C  2CC6               	goto	l7070
 21835                           
 21836                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
 21837  0C7D  0020               	movlb	0	; select bank0
 21838  0C7E  0859               	movf	vfpfcnvrt@fmt,w
 21839  0C7F  0086               	movwf	6
 21840  0C80  0187               	clrf	7
 21841  0C81  3002               	movlw	2
 21842  0C82  0781               	addwf	1,f
 21843  0C83  3141               	addfsr 1,1
 21844  0C84  1803               	skipnc
 21845  0C85  0A81               	incf	1,f
 21846                           
 21847                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 21848  0C86  085A               	movf	vfpfcnvrt@ap,w
 21849  0C87  0086               	movwf	6
 21850  0C88  0187               	clrf	7
 21851  0C89  0801               	movf	1,w
 21852  0C8A  0084               	movwf	4
 21853  0C8B  0185               	clrf	5
 21854  0C8C  3002               	movlw	2
 21855  0C8D  0781               	addwf	1,f
 21856  0C8E  3F00               	moviw [0]fsr0
 21857  0C8F  0021               	movlb	1	; select bank1
 21858  0C90  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21859  0C91  3F01               	moviw [1]fsr0
 21860  0C92  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21861  0C93  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21862  0C94  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21863  0C95  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21864  0C96  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21865  0C97  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21866  0C98  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21867                           
 21868                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1177:      
      +                                 return utoa(fp, llu);
 21869  0C99  0020               	movlb	0	; select bank0
 21870  0C9A  0858               	movf	vfpfcnvrt@fp+1,w
 21871  0C9B  00B1               	movwf	utoa@fp+1
 21872  0C9C  0857               	movf	vfpfcnvrt@fp,w
 21873  0C9D  00B0               	movwf	utoa@fp
 21874  0C9E  0021               	movlb	1	; select bank1
 21875  0C9F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21876  0CA0  0020               	movlb	0	; select bank0
 21877  0CA1  00B2               	movwf	utoa@d
 21878  0CA2  0021               	movlb	1	; select bank1
 21879  0CA3  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21880  0CA4  0020               	movlb	0	; select bank0
 21881  0CA5  00B3               	movwf	utoa@d+1
 21882  0CA6  0021               	movlb	1	; select bank1
 21883  0CA7  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21884  0CA8  0020               	movlb	0	; select bank0
 21885  0CA9  00B4               	movwf	utoa@d+2
 21886  0CAA  0021               	movlb	1	; select bank1
 21887  0CAB  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21888  0CAC  0020               	movlb	0	; select bank0
 21889  0CAD  00B5               	movwf	utoa@d+3
 21890  0CAE  0021               	movlb	1	; select bank1
 21891  0CAF  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21892  0CB0  0020               	movlb	0	; select bank0
 21893  0CB1  00B6               	movwf	utoa@d+4
 21894  0CB2  0021               	movlb	1	; select bank1
 21895  0CB3  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21896  0CB4  0020               	movlb	0	; select bank0
 21897  0CB5  00B7               	movwf	utoa@d+5
 21898  0CB6  0021               	movlb	1	; select bank1
 21899  0CB7  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21900  0CB8  0020               	movlb	0	; select bank0
 21901  0CB9  00B8               	movwf	utoa@d+6
 21902  0CBA  0021               	movlb	1	; select bank1
 21903  0CBB  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21904  0CBC  0020               	movlb	0	; select bank0
 21905  0CBD  00B9               	movwf	utoa@d+7
 21906  0CBE  31A3  2307         	fcall	_utoa
 21907  0CC0  0020               	movlb	0	; select bank0
 21908  0CC1  0831               	movf	?_utoa+1,w
 21909  0CC2  00D8               	movwf	?_vfpfcnvrt+1
 21910  0CC3  0830               	movf	?_utoa,w
 21911  0CC4  00D7               	movwf	?_vfpfcnvrt
 21912  0CC5  0008               	return
 21913  0CC6                     l7070:	
 21914                           
 21915                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 21916  0CC6  0020               	movlb	0	; select bank0
 21917  0CC7  0859               	movf	vfpfcnvrt@fmt,w
 21918  0CC8  0086               	movwf	6
 21919  0CC9  0187               	clrf	7
 21920  0CCA  3F40               	moviw [0]fsr1
 21921  0CCB  00DB               	movwf	??_vfpfcnvrt
 21922  0CCC  3F41               	moviw [1]fsr1
 21923  0CCD  00DC               	movwf	??_vfpfcnvrt+1
 21924  0CCE  085B               	movf	??_vfpfcnvrt,w
 21925  0CCF  0084               	movwf	4
 21926  0CD0  085C               	movf	??_vfpfcnvrt+1,w
 21927  0CD1  0085               	movwf	5
 21928  0CD2  0012               	moviw fsr0++
 21929  0CD3  3A75               	xorlw	117
 21930  0CD4  1D03               	btfss	3,2
 21931  0CD5  2D1E               	goto	l7080
 21932                           
 21933                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 21934  0CD6  0859               	movf	vfpfcnvrt@fmt,w
 21935  0CD7  0086               	movwf	6
 21936  0CD8  0187               	clrf	7
 21937  0CD9  3001               	movlw	1
 21938  0CDA  0781               	addwf	1,f
 21939  0CDB  3141               	addfsr 1,1
 21940  0CDC  1803               	skipnc
 21941  0CDD  0A81               	incf	1,f
 21942                           
 21943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 21944  0CDE  085A               	movf	vfpfcnvrt@ap,w
 21945  0CDF  0086               	movwf	6
 21946  0CE0  0187               	clrf	7
 21947  0CE1  0801               	movf	1,w
 21948  0CE2  0084               	movwf	4
 21949  0CE3  0185               	clrf	5
 21950  0CE4  3002               	movlw	2
 21951  0CE5  0781               	addwf	1,f
 21952  0CE6  3F00               	moviw [0]fsr0
 21953  0CE7  0021               	movlb	1	; select bank1
 21954  0CE8  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21955  0CE9  3F01               	moviw [1]fsr0
 21956  0CEA  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21957  0CEB  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21958  0CEC  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21959  0CED  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21960  0CEE  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21961  0CEF  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21962  0CF0  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21963                           
 21964                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 21965  0CF1  0020               	movlb	0	; select bank0
 21966  0CF2  0858               	movf	vfpfcnvrt@fp+1,w
 21967  0CF3  00B1               	movwf	utoa@fp+1
 21968  0CF4  0857               	movf	vfpfcnvrt@fp,w
 21969  0CF5  00B0               	movwf	utoa@fp
 21970  0CF6  0021               	movlb	1	; select bank1
 21971  0CF7  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21972  0CF8  0020               	movlb	0	; select bank0
 21973  0CF9  00B2               	movwf	utoa@d
 21974  0CFA  0021               	movlb	1	; select bank1
 21975  0CFB  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21976  0CFC  0020               	movlb	0	; select bank0
 21977  0CFD  00B3               	movwf	utoa@d+1
 21978  0CFE  0021               	movlb	1	; select bank1
 21979  0CFF  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21980  0D00  0020               	movlb	0	; select bank0
 21981  0D01  00B4               	movwf	utoa@d+2
 21982  0D02  0021               	movlb	1	; select bank1
 21983  0D03  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21984  0D04  0020               	movlb	0	; select bank0
 21985  0D05  00B5               	movwf	utoa@d+3
 21986  0D06  0021               	movlb	1	; select bank1
 21987  0D07  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21988  0D08  0020               	movlb	0	; select bank0
 21989  0D09  00B6               	movwf	utoa@d+4
 21990  0D0A  0021               	movlb	1	; select bank1
 21991  0D0B  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21992  0D0C  0020               	movlb	0	; select bank0
 21993  0D0D  00B7               	movwf	utoa@d+5
 21994  0D0E  0021               	movlb	1	; select bank1
 21995  0D0F  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21996  0D10  0020               	movlb	0	; select bank0
 21997  0D11  00B8               	movwf	utoa@d+6
 21998  0D12  0021               	movlb	1	; select bank1
 21999  0D13  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22000  0D14  0020               	movlb	0	; select bank0
 22001  0D15  00B9               	movwf	utoa@d+7
 22002  0D16  31A3  2307         	fcall	_utoa
 22003  0D18  0020               	movlb	0	; select bank0
 22004  0D19  0831               	movf	?_utoa+1,w
 22005  0D1A  00D8               	movwf	?_vfpfcnvrt+1
 22006  0D1B  0830               	movf	?_utoa,w
 22007  0D1C  00D7               	movwf	?_vfpfcnvrt
 22008  0D1D  0008               	return
 22009  0D1E                     l7080:	
 22010                           
 22011                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
 22012  0D1E  0859               	movf	vfpfcnvrt@fmt,w
 22013  0D1F  0086               	movwf	6
 22014  0D20  0187               	clrf	7
 22015  0D21  3F40               	moviw [0]fsr1
 22016  0D22  00F1               	movwf	strncmp@_l
 22017  0D23  3F41               	moviw [1]fsr1
 22018  0D24  00F2               	movwf	strncmp@_l+1
 22019  0D25  3044               	movlw	low (STR_90| (0+32768))
 22020  0D26  00F3               	movwf	strncmp@_r
 22021  0D27  30BA               	movlw	high (STR_90| (0+32768))
 22022  0D28  00F4               	movwf	strncmp@_r+1
 22023  0D29  3002               	movlw	2
 22024  0D2A  00F5               	movwf	strncmp@n
 22025  0D2B  3000               	movlw	0
 22026  0D2C  00F6               	movwf	strncmp@n+1
 22027  0D2D  31A8  2021  3188   	fcall	_strncmp
 22028  0D30  0871               	movf	?_strncmp,w
 22029  0D31  0472               	iorwf	?_strncmp+1,w
 22030  0D32  1D03               	btfss	3,2
 22031  0D33  2D7D               	goto	l7090
 22032                           
 22033                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
 22034  0D34  0020               	movlb	0	; select bank0
 22035  0D35  0859               	movf	vfpfcnvrt@fmt,w
 22036  0D36  0086               	movwf	6
 22037  0D37  0187               	clrf	7
 22038  0D38  3002               	movlw	2
 22039  0D39  0781               	addwf	1,f
 22040  0D3A  3141               	addfsr 1,1
 22041  0D3B  1803               	skipnc
 22042  0D3C  0A81               	incf	1,f
 22043                           
 22044                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 22045  0D3D  085A               	movf	vfpfcnvrt@ap,w
 22046  0D3E  0086               	movwf	6
 22047  0D3F  0187               	clrf	7
 22048  0D40  0801               	movf	1,w
 22049  0D41  0084               	movwf	4
 22050  0D42  0185               	clrf	5
 22051  0D43  3002               	movlw	2
 22052  0D44  0781               	addwf	1,f
 22053  0D45  3F00               	moviw [0]fsr0
 22054  0D46  0021               	movlb	1	; select bank1
 22055  0D47  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22056  0D48  3F01               	moviw [1]fsr0
 22057  0D49  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22058  0D4A  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22059  0D4B  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22060  0D4C  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22061  0D4D  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22062  0D4E  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22063  0D4F  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22064                           
 22065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1241:      
      +                                 return utoa(fp, llu);
 22066  0D50  0020               	movlb	0	; select bank0
 22067  0D51  0858               	movf	vfpfcnvrt@fp+1,w
 22068  0D52  00B1               	movwf	utoa@fp+1
 22069  0D53  0857               	movf	vfpfcnvrt@fp,w
 22070  0D54  00B0               	movwf	utoa@fp
 22071  0D55  0021               	movlb	1	; select bank1
 22072  0D56  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22073  0D57  0020               	movlb	0	; select bank0
 22074  0D58  00B2               	movwf	utoa@d
 22075  0D59  0021               	movlb	1	; select bank1
 22076  0D5A  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22077  0D5B  0020               	movlb	0	; select bank0
 22078  0D5C  00B3               	movwf	utoa@d+1
 22079  0D5D  0021               	movlb	1	; select bank1
 22080  0D5E  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22081  0D5F  0020               	movlb	0	; select bank0
 22082  0D60  00B4               	movwf	utoa@d+2
 22083  0D61  0021               	movlb	1	; select bank1
 22084  0D62  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22085  0D63  0020               	movlb	0	; select bank0
 22086  0D64  00B5               	movwf	utoa@d+3
 22087  0D65  0021               	movlb	1	; select bank1
 22088  0D66  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22089  0D67  0020               	movlb	0	; select bank0
 22090  0D68  00B6               	movwf	utoa@d+4
 22091  0D69  0021               	movlb	1	; select bank1
 22092  0D6A  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22093  0D6B  0020               	movlb	0	; select bank0
 22094  0D6C  00B7               	movwf	utoa@d+5
 22095  0D6D  0021               	movlb	1	; select bank1
 22096  0D6E  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22097  0D6F  0020               	movlb	0	; select bank0
 22098  0D70  00B8               	movwf	utoa@d+6
 22099  0D71  0021               	movlb	1	; select bank1
 22100  0D72  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22101  0D73  0020               	movlb	0	; select bank0
 22102  0D74  00B9               	movwf	utoa@d+7
 22103  0D75  31A3  2307         	fcall	_utoa
 22104  0D77  0020               	movlb	0	; select bank0
 22105  0D78  0831               	movf	?_utoa+1,w
 22106  0D79  00D8               	movwf	?_vfpfcnvrt+1
 22107  0D7A  0830               	movf	?_utoa,w
 22108  0D7B  00D7               	movwf	?_vfpfcnvrt
 22109  0D7C  0008               	return
 22110  0D7D                     l7090:	
 22111                           
 22112                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
 22113  0D7D  0020               	movlb	0	; select bank0
 22114  0D7E  0859               	movf	vfpfcnvrt@fmt,w
 22115  0D7F  0086               	movwf	6
 22116  0D80  0187               	clrf	7
 22117  0D81  3F40               	moviw [0]fsr1
 22118  0D82  00F1               	movwf	strncmp@_l
 22119  0D83  3F41               	moviw [1]fsr1
 22120  0D84  00F2               	movwf	strncmp@_l+1
 22121  0D85  3031               	movlw	low (STR_95| (0+32768))
 22122  0D86  00F3               	movwf	strncmp@_r
 22123  0D87  30BA               	movlw	high (STR_95| (0+32768))
 22124  0D88  00F4               	movwf	strncmp@_r+1
 22125  0D89  3003               	movlw	3
 22126  0D8A  00F5               	movwf	strncmp@n
 22127  0D8B  3000               	movlw	0
 22128  0D8C  00F6               	movwf	strncmp@n+1
 22129  0D8D  31A8  2021  3188   	fcall	_strncmp
 22130  0D90  0871               	movf	?_strncmp,w
 22131  0D91  0472               	iorwf	?_strncmp+1,w
 22132  0D92  1903               	btfsc	3,2
 22133  0D93  2DAB               	goto	l7094
 22134  0D94  0020               	movlb	0	; select bank0
 22135  0D95  0859               	movf	vfpfcnvrt@fmt,w
 22136  0D96  0086               	movwf	6
 22137  0D97  0187               	clrf	7
 22138  0D98  3F40               	moviw [0]fsr1
 22139  0D99  00F1               	movwf	strncmp@_l
 22140  0D9A  3F41               	moviw [1]fsr1
 22141  0D9B  00F2               	movwf	strncmp@_l+1
 22142  0D9C  3019               	movlw	low (STR_99| (0+32768))
 22143  0D9D  00F3               	movwf	strncmp@_r
 22144  0D9E  30BA               	movlw	high (STR_99| (0+32768))
 22145  0D9F  00F4               	movwf	strncmp@_r+1
 22146  0DA0  3003               	movlw	3
 22147  0DA1  00F5               	movwf	strncmp@n
 22148  0DA2  3000               	movlw	0
 22149  0DA3  00F6               	movwf	strncmp@n+1
 22150  0DA4  31A8  2021  3188   	fcall	_strncmp
 22151  0DA7  0871               	movf	?_strncmp,w
 22152  0DA8  0472               	iorwf	?_strncmp+1,w
 22153  0DA9  1D03               	btfss	3,2
 22154  0DAA  2E0D               	goto	l7104
 22155  0DAB                     l7094:	
 22156                           
 22157                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
 22158  0DAB  0020               	movlb	0	; select bank0
 22159  0DAC  0859               	movf	vfpfcnvrt@fmt,w
 22160  0DAD  0086               	movwf	6
 22161  0DAE  0187               	clrf	7
 22162  0DAF  3F40               	moviw [0]fsr1
 22163  0DB0  00DB               	movwf	??_vfpfcnvrt
 22164  0DB1  3F41               	moviw [1]fsr1
 22165  0DB2  00DC               	movwf	??_vfpfcnvrt+1
 22166  0DB3  3002               	movlw	2
 22167  0DB4  075B               	addwf	??_vfpfcnvrt,w
 22168  0DB5  0084               	movwf	4
 22169  0DB6  085C               	movf	??_vfpfcnvrt+1,w
 22170  0DB7  1803               	skipnc
 22171  0DB8  0A5C               	incf	??_vfpfcnvrt+1,w
 22172  0DB9  0085               	movwf	5
 22173  0DBA  0800               	movf	0,w	;code access
 22174  0DBB  00DD               	movwf	??_vfpfcnvrt+2
 22175  0DBC  085D               	movf	??_vfpfcnvrt+2,w
 22176  0DBD  0021               	movlb	1	; select bank1
 22177  0DBE  00B2               	movwf	vfpfcnvrt@c^(0+128)
 22178                           
 22179                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
 22180  0DBF  0020               	movlb	0	; select bank0
 22181  0DC0  0859               	movf	vfpfcnvrt@fmt,w
 22182  0DC1  0086               	movwf	6
 22183  0DC2  0187               	clrf	7
 22184  0DC3  3003               	movlw	3
 22185  0DC4  0781               	addwf	1,f
 22186  0DC5  3141               	addfsr 1,1
 22187  0DC6  1803               	skipnc
 22188  0DC7  0A81               	incf	1,f
 22189                           
 22190                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 22191  0DC8  085A               	movf	vfpfcnvrt@ap,w
 22192  0DC9  0086               	movwf	6
 22193  0DCA  0187               	clrf	7
 22194  0DCB  0801               	movf	1,w
 22195  0DCC  0084               	movwf	4
 22196  0DCD  0185               	clrf	5
 22197  0DCE  3002               	movlw	2
 22198  0DCF  0781               	addwf	1,f
 22199  0DD0  0800               	movf	0,w
 22200  0DD1  0021               	movlb	1	; select bank1
 22201  0DD2  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22202  0DD3  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 22203  0DD4  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22204  0DD5  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22205  0DD6  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22206  0DD7  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22207  0DD8  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22208  0DD9  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22209                           
 22210                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
 22211  0DDA  0020               	movlb	0	; select bank0
 22212  0DDB  0858               	movf	vfpfcnvrt@fp+1,w
 22213  0DDC  00B1               	movwf	xtoa@fp+1
 22214  0DDD  0857               	movf	vfpfcnvrt@fp,w
 22215  0DDE  00B0               	movwf	xtoa@fp
 22216  0DDF  0021               	movlb	1	; select bank1
 22217  0DE0  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22218  0DE1  0020               	movlb	0	; select bank0
 22219  0DE2  00B2               	movwf	xtoa@d
 22220  0DE3  0021               	movlb	1	; select bank1
 22221  0DE4  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22222  0DE5  0020               	movlb	0	; select bank0
 22223  0DE6  00B3               	movwf	xtoa@d+1
 22224  0DE7  0021               	movlb	1	; select bank1
 22225  0DE8  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22226  0DE9  0020               	movlb	0	; select bank0
 22227  0DEA  00B4               	movwf	xtoa@d+2
 22228  0DEB  0021               	movlb	1	; select bank1
 22229  0DEC  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22230  0DED  0020               	movlb	0	; select bank0
 22231  0DEE  00B5               	movwf	xtoa@d+3
 22232  0DEF  0021               	movlb	1	; select bank1
 22233  0DF0  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22234  0DF1  0020               	movlb	0	; select bank0
 22235  0DF2  00B6               	movwf	xtoa@d+4
 22236  0DF3  0021               	movlb	1	; select bank1
 22237  0DF4  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22238  0DF5  0020               	movlb	0	; select bank0
 22239  0DF6  00B7               	movwf	xtoa@d+5
 22240  0DF7  0021               	movlb	1	; select bank1
 22241  0DF8  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22242  0DF9  0020               	movlb	0	; select bank0
 22243  0DFA  00B8               	movwf	xtoa@d+6
 22244  0DFB  0021               	movlb	1	; select bank1
 22245  0DFC  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22246  0DFD  0020               	movlb	0	; select bank0
 22247  0DFE  00B9               	movwf	xtoa@d+7
 22248  0DFF  0021               	movlb	1	; select bank1
 22249  0E00  0832               	movf	vfpfcnvrt@c^(0+128),w
 22250  0E01  0020               	movlb	0	; select bank0
 22251  0E02  00DB               	movwf	??_vfpfcnvrt
 22252  0E03  085B               	movf	??_vfpfcnvrt,w
 22253  0E04  00BA               	movwf	xtoa@x
 22254  0E05  319B  2389         	fcall	_xtoa
 22255  0E07  0020               	movlb	0	; select bank0
 22256  0E08  0831               	movf	?_xtoa+1,w
 22257  0E09  00D8               	movwf	?_vfpfcnvrt+1
 22258  0E0A  0830               	movf	?_xtoa,w
 22259  0E0B  00D7               	movwf	?_vfpfcnvrt
 22260  0E0C  0008               	return
 22261  0E0D                     l7104:	
 22262                           
 22263                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
 22264  0E0D  0020               	movlb	0	; select bank0
 22265  0E0E  0859               	movf	vfpfcnvrt@fmt,w
 22266  0E0F  0086               	movwf	6
 22267  0E10  0187               	clrf	7
 22268  0E11  3F40               	moviw [0]fsr1
 22269  0E12  00F1               	movwf	strncmp@_l
 22270  0E13  3F41               	moviw [1]fsr1
 22271  0E14  00F2               	movwf	strncmp@_l+1
 22272  0E15  3032               	movlw	low ((STR_95+1)| (0+32768))
 22273  0E16  00F3               	movwf	strncmp@_r
 22274  0E17  30BA               	movlw	high ((STR_95+1)| (0+32768))
 22275  0E18  00F4               	movwf	strncmp@_r+1
 22276  0E19  3002               	movlw	2
 22277  0E1A  00F5               	movwf	strncmp@n
 22278  0E1B  3000               	movlw	0
 22279  0E1C  00F6               	movwf	strncmp@n+1
 22280  0E1D  31A8  2021  3188   	fcall	_strncmp
 22281  0E20  0871               	movf	?_strncmp,w
 22282  0E21  0472               	iorwf	?_strncmp+1,w
 22283  0E22  1903               	btfsc	3,2
 22284  0E23  2E3B               	goto	l7108
 22285  0E24  0020               	movlb	0	; select bank0
 22286  0E25  0859               	movf	vfpfcnvrt@fmt,w
 22287  0E26  0086               	movwf	6
 22288  0E27  0187               	clrf	7
 22289  0E28  3F40               	moviw [0]fsr1
 22290  0E29  00F1               	movwf	strncmp@_l
 22291  0E2A  3F41               	moviw [1]fsr1
 22292  0E2B  00F2               	movwf	strncmp@_l+1
 22293  0E2C  301A               	movlw	low ((STR_99+1)| (0+32768))
 22294  0E2D  00F3               	movwf	strncmp@_r
 22295  0E2E  30BA               	movlw	high ((STR_99+1)| (0+32768))
 22296  0E2F  00F4               	movwf	strncmp@_r+1
 22297  0E30  3002               	movlw	2
 22298  0E31  00F5               	movwf	strncmp@n
 22299  0E32  3000               	movlw	0
 22300  0E33  00F6               	movwf	strncmp@n+1
 22301  0E34  31A8  2021  3188   	fcall	_strncmp
 22302  0E37  0871               	movf	?_strncmp,w
 22303  0E38  0472               	iorwf	?_strncmp+1,w
 22304  0E39  1D03               	btfss	3,2
 22305  0E3A  2E9E               	goto	l7118
 22306  0E3B                     l7108:	
 22307                           
 22308                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
 22309  0E3B  0020               	movlb	0	; select bank0
 22310  0E3C  0859               	movf	vfpfcnvrt@fmt,w
 22311  0E3D  0086               	movwf	6
 22312  0E3E  0187               	clrf	7
 22313  0E3F  3F40               	moviw [0]fsr1
 22314  0E40  00DB               	movwf	??_vfpfcnvrt
 22315  0E41  3F41               	moviw [1]fsr1
 22316  0E42  00DC               	movwf	??_vfpfcnvrt+1
 22317  0E43  3001               	movlw	1
 22318  0E44  075B               	addwf	??_vfpfcnvrt,w
 22319  0E45  0084               	movwf	4
 22320  0E46  085C               	movf	??_vfpfcnvrt+1,w
 22321  0E47  1803               	skipnc
 22322  0E48  0A5C               	incf	??_vfpfcnvrt+1,w
 22323  0E49  0085               	movwf	5
 22324  0E4A  0800               	movf	0,w	;code access
 22325  0E4B  00DD               	movwf	??_vfpfcnvrt+2
 22326  0E4C  085D               	movf	??_vfpfcnvrt+2,w
 22327  0E4D  0021               	movlb	1	; select bank1
 22328  0E4E  00B2               	movwf	vfpfcnvrt@c^(0+128)
 22329                           
 22330                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
 22331  0E4F  0020               	movlb	0	; select bank0
 22332  0E50  0859               	movf	vfpfcnvrt@fmt,w
 22333  0E51  0086               	movwf	6
 22334  0E52  0187               	clrf	7
 22335  0E53  3002               	movlw	2
 22336  0E54  0781               	addwf	1,f
 22337  0E55  3141               	addfsr 1,1
 22338  0E56  1803               	skipnc
 22339  0E57  0A81               	incf	1,f
 22340                           
 22341                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 22342  0E58  085A               	movf	vfpfcnvrt@ap,w
 22343  0E59  0086               	movwf	6
 22344  0E5A  0187               	clrf	7
 22345  0E5B  0801               	movf	1,w
 22346  0E5C  0084               	movwf	4
 22347  0E5D  0185               	clrf	5
 22348  0E5E  3002               	movlw	2
 22349  0E5F  0781               	addwf	1,f
 22350  0E60  3F00               	moviw [0]fsr0
 22351  0E61  0021               	movlb	1	; select bank1
 22352  0E62  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22353  0E63  3F01               	moviw [1]fsr0
 22354  0E64  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22355  0E65  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22356  0E66  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22357  0E67  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22358  0E68  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22359  0E69  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22360  0E6A  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22361                           
 22362                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1269:      
      +                                 return xtoa(fp, llu, c);
 22363  0E6B  0020               	movlb	0	; select bank0
 22364  0E6C  0858               	movf	vfpfcnvrt@fp+1,w
 22365  0E6D  00B1               	movwf	xtoa@fp+1
 22366  0E6E  0857               	movf	vfpfcnvrt@fp,w
 22367  0E6F  00B0               	movwf	xtoa@fp
 22368  0E70  0021               	movlb	1	; select bank1
 22369  0E71  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22370  0E72  0020               	movlb	0	; select bank0
 22371  0E73  00B2               	movwf	xtoa@d
 22372  0E74  0021               	movlb	1	; select bank1
 22373  0E75  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22374  0E76  0020               	movlb	0	; select bank0
 22375  0E77  00B3               	movwf	xtoa@d+1
 22376  0E78  0021               	movlb	1	; select bank1
 22377  0E79  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22378  0E7A  0020               	movlb	0	; select bank0
 22379  0E7B  00B4               	movwf	xtoa@d+2
 22380  0E7C  0021               	movlb	1	; select bank1
 22381  0E7D  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22382  0E7E  0020               	movlb	0	; select bank0
 22383  0E7F  00B5               	movwf	xtoa@d+3
 22384  0E80  0021               	movlb	1	; select bank1
 22385  0E81  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22386  0E82  0020               	movlb	0	; select bank0
 22387  0E83  00B6               	movwf	xtoa@d+4
 22388  0E84  0021               	movlb	1	; select bank1
 22389  0E85  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22390  0E86  0020               	movlb	0	; select bank0
 22391  0E87  00B7               	movwf	xtoa@d+5
 22392  0E88  0021               	movlb	1	; select bank1
 22393  0E89  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22394  0E8A  0020               	movlb	0	; select bank0
 22395  0E8B  00B8               	movwf	xtoa@d+6
 22396  0E8C  0021               	movlb	1	; select bank1
 22397  0E8D  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22398  0E8E  0020               	movlb	0	; select bank0
 22399  0E8F  00B9               	movwf	xtoa@d+7
 22400  0E90  0021               	movlb	1	; select bank1
 22401  0E91  0832               	movf	vfpfcnvrt@c^(0+128),w
 22402  0E92  0020               	movlb	0	; select bank0
 22403  0E93  00DB               	movwf	??_vfpfcnvrt
 22404  0E94  085B               	movf	??_vfpfcnvrt,w
 22405  0E95  00BA               	movwf	xtoa@x
 22406  0E96  319B  2389         	fcall	_xtoa
 22407  0E98  0020               	movlb	0	; select bank0
 22408  0E99  0831               	movf	?_xtoa+1,w
 22409  0E9A  00D8               	movwf	?_vfpfcnvrt+1
 22410  0E9B  0830               	movf	?_xtoa,w
 22411  0E9C  00D7               	movwf	?_vfpfcnvrt
 22412  0E9D  0008               	return
 22413  0E9E                     l7118:	
 22414                           
 22415                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 22416  0E9E  0020               	movlb	0	; select bank0
 22417  0E9F  0859               	movf	vfpfcnvrt@fmt,w
 22418  0EA0  0086               	movwf	6
 22419  0EA1  0187               	clrf	7
 22420  0EA2  3F40               	moviw [0]fsr1
 22421  0EA3  00DB               	movwf	??_vfpfcnvrt
 22422  0EA4  3F41               	moviw [1]fsr1
 22423  0EA5  00DC               	movwf	??_vfpfcnvrt+1
 22424  0EA6  085B               	movf	??_vfpfcnvrt,w
 22425  0EA7  0084               	movwf	4
 22426  0EA8  085C               	movf	??_vfpfcnvrt+1,w
 22427  0EA9  0085               	movwf	5
 22428  0EAA  0012               	moviw fsr0++
 22429  0EAB  3A78               	xorlw	120
 22430  0EAC  1903               	btfsc	3,2
 22431  0EAD  2EBD               	goto	l7122
 22432  0EAE  0859               	movf	vfpfcnvrt@fmt,w
 22433  0EAF  0086               	movwf	6
 22434  0EB0  0187               	clrf	7
 22435  0EB1  3F40               	moviw [0]fsr1
 22436  0EB2  00DB               	movwf	??_vfpfcnvrt
 22437  0EB3  3F41               	moviw [1]fsr1
 22438  0EB4  00DC               	movwf	??_vfpfcnvrt+1
 22439  0EB5  085B               	movf	??_vfpfcnvrt,w
 22440  0EB6  0084               	movwf	4
 22441  0EB7  085C               	movf	??_vfpfcnvrt+1,w
 22442  0EB8  0085               	movwf	5
 22443  0EB9  0012               	moviw fsr0++
 22444  0EBA  3A58               	xorlw	88
 22445  0EBB  1D03               	btfss	3,2
 22446  0EBC  2F1C               	goto	l7132
 22447  0EBD                     l7122:	
 22448                           
 22449                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 22450  0EBD  0859               	movf	vfpfcnvrt@fmt,w
 22451  0EBE  0086               	movwf	6
 22452  0EBF  0187               	clrf	7
 22453  0EC0  3F40               	moviw [0]fsr1
 22454  0EC1  00DB               	movwf	??_vfpfcnvrt
 22455  0EC2  3F41               	moviw [1]fsr1
 22456  0EC3  00DC               	movwf	??_vfpfcnvrt+1
 22457  0EC4  085B               	movf	??_vfpfcnvrt,w
 22458  0EC5  0084               	movwf	4
 22459  0EC6  085C               	movf	??_vfpfcnvrt+1,w
 22460  0EC7  0085               	movwf	5
 22461  0EC8  0800               	movf	0,w	;code access
 22462  0EC9  00DD               	movwf	??_vfpfcnvrt+2
 22463  0ECA  085D               	movf	??_vfpfcnvrt+2,w
 22464  0ECB  0021               	movlb	1	; select bank1
 22465  0ECC  00B2               	movwf	vfpfcnvrt@c^(0+128)
 22466                           
 22467                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 22468  0ECD  0020               	movlb	0	; select bank0
 22469  0ECE  0859               	movf	vfpfcnvrt@fmt,w
 22470  0ECF  0086               	movwf	6
 22471  0ED0  0187               	clrf	7
 22472  0ED1  3001               	movlw	1
 22473  0ED2  0781               	addwf	1,f
 22474  0ED3  3141               	addfsr 1,1
 22475  0ED4  1803               	skipnc
 22476  0ED5  0A81               	incf	1,f
 22477                           
 22478                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 22479  0ED6  085A               	movf	vfpfcnvrt@ap,w
 22480  0ED7  0086               	movwf	6
 22481  0ED8  0187               	clrf	7
 22482  0ED9  0801               	movf	1,w
 22483  0EDA  0084               	movwf	4
 22484  0EDB  0185               	clrf	5
 22485  0EDC  3002               	movlw	2
 22486  0EDD  0781               	addwf	1,f
 22487  0EDE  3F00               	moviw [0]fsr0
 22488  0EDF  0021               	movlb	1	; select bank1
 22489  0EE0  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22490  0EE1  3F01               	moviw [1]fsr0
 22491  0EE2  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22492  0EE3  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22493  0EE4  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22494  0EE5  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22495  0EE6  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22496  0EE7  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22497  0EE8  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22498                           
 22499                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 22500  0EE9  0020               	movlb	0	; select bank0
 22501  0EEA  0858               	movf	vfpfcnvrt@fp+1,w
 22502  0EEB  00B1               	movwf	xtoa@fp+1
 22503  0EEC  0857               	movf	vfpfcnvrt@fp,w
 22504  0EED  00B0               	movwf	xtoa@fp
 22505  0EEE  0021               	movlb	1	; select bank1
 22506  0EEF  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22507  0EF0  0020               	movlb	0	; select bank0
 22508  0EF1  00B2               	movwf	xtoa@d
 22509  0EF2  0021               	movlb	1	; select bank1
 22510  0EF3  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22511  0EF4  0020               	movlb	0	; select bank0
 22512  0EF5  00B3               	movwf	xtoa@d+1
 22513  0EF6  0021               	movlb	1	; select bank1
 22514  0EF7  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22515  0EF8  0020               	movlb	0	; select bank0
 22516  0EF9  00B4               	movwf	xtoa@d+2
 22517  0EFA  0021               	movlb	1	; select bank1
 22518  0EFB  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22519  0EFC  0020               	movlb	0	; select bank0
 22520  0EFD  00B5               	movwf	xtoa@d+3
 22521  0EFE  0021               	movlb	1	; select bank1
 22522  0EFF  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22523  0F00  0020               	movlb	0	; select bank0
 22524  0F01  00B6               	movwf	xtoa@d+4
 22525  0F02  0021               	movlb	1	; select bank1
 22526  0F03  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22527  0F04  0020               	movlb	0	; select bank0
 22528  0F05  00B7               	movwf	xtoa@d+5
 22529  0F06  0021               	movlb	1	; select bank1
 22530  0F07  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22531  0F08  0020               	movlb	0	; select bank0
 22532  0F09  00B8               	movwf	xtoa@d+6
 22533  0F0A  0021               	movlb	1	; select bank1
 22534  0F0B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22535  0F0C  0020               	movlb	0	; select bank0
 22536  0F0D  00B9               	movwf	xtoa@d+7
 22537  0F0E  0021               	movlb	1	; select bank1
 22538  0F0F  0832               	movf	vfpfcnvrt@c^(0+128),w
 22539  0F10  0020               	movlb	0	; select bank0
 22540  0F11  00DB               	movwf	??_vfpfcnvrt
 22541  0F12  085B               	movf	??_vfpfcnvrt,w
 22542  0F13  00BA               	movwf	xtoa@x
 22543  0F14  319B  2389         	fcall	_xtoa
 22544  0F16  0020               	movlb	0	; select bank0
 22545  0F17  0831               	movf	?_xtoa+1,w
 22546  0F18  00D8               	movwf	?_vfpfcnvrt+1
 22547  0F19  0830               	movf	?_xtoa,w
 22548  0F1A  00D7               	movwf	?_vfpfcnvrt
 22549  0F1B  0008               	return
 22550  0F1C                     l7132:	
 22551                           
 22552                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
 22553  0F1C  0859               	movf	vfpfcnvrt@fmt,w
 22554  0F1D  0086               	movwf	6
 22555  0F1E  0187               	clrf	7
 22556  0F1F  3F40               	moviw [0]fsr1
 22557  0F20  00F1               	movwf	strncmp@_l
 22558  0F21  3F41               	moviw [1]fsr1
 22559  0F22  00F2               	movwf	strncmp@_l+1
 22560  0F23  3047               	movlw	low (STR_113| (0+32768))
 22561  0F24  00F3               	movwf	strncmp@_r
 22562  0F25  30BA               	movlw	high (STR_113| (0+32768))
 22563  0F26  00F4               	movwf	strncmp@_r+1
 22564  0F27  3002               	movlw	2
 22565  0F28  00F5               	movwf	strncmp@n
 22566  0F29  3000               	movlw	0
 22567  0F2A  00F6               	movwf	strncmp@n+1
 22568  0F2B  31A8  2021  3188   	fcall	_strncmp
 22569  0F2E  0871               	movf	?_strncmp,w
 22570  0F2F  0472               	iorwf	?_strncmp+1,w
 22571  0F30  1903               	btfsc	3,2
 22572  0F31  2F49               	goto	l7136
 22573  0F32  0020               	movlb	0	; select bank0
 22574  0F33  0859               	movf	vfpfcnvrt@fmt,w
 22575  0F34  0086               	movwf	6
 22576  0F35  0187               	clrf	7
 22577  0F36  3F40               	moviw [0]fsr1
 22578  0F37  00F1               	movwf	strncmp@_l
 22579  0F38  3F41               	moviw [1]fsr1
 22580  0F39  00F2               	movwf	strncmp@_l+1
 22581  0F3A  3035               	movlw	low (STR_117| (0+32768))
 22582  0F3B  00F3               	movwf	strncmp@_r
 22583  0F3C  30BA               	movlw	high (STR_117| (0+32768))
 22584  0F3D  00F4               	movwf	strncmp@_r+1
 22585  0F3E  3002               	movlw	2
 22586  0F3F  00F5               	movwf	strncmp@n
 22587  0F40  3000               	movlw	0
 22588  0F41  00F6               	movwf	strncmp@n+1
 22589  0F42  31A8  2021  3188   	fcall	_strncmp
 22590  0F45  0871               	movf	?_strncmp,w
 22591  0F46  0472               	iorwf	?_strncmp+1,w
 22592  0F47  1D03               	btfss	3,2
 22593  0F48  2FAC               	goto	l7146
 22594  0F49                     l7136:	
 22595                           
 22596                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
 22597  0F49  0020               	movlb	0	; select bank0
 22598  0F4A  0859               	movf	vfpfcnvrt@fmt,w
 22599  0F4B  0086               	movwf	6
 22600  0F4C  0187               	clrf	7
 22601  0F4D  3F40               	moviw [0]fsr1
 22602  0F4E  00DB               	movwf	??_vfpfcnvrt
 22603  0F4F  3F41               	moviw [1]fsr1
 22604  0F50  00DC               	movwf	??_vfpfcnvrt+1
 22605  0F51  3001               	movlw	1
 22606  0F52  075B               	addwf	??_vfpfcnvrt,w
 22607  0F53  0084               	movwf	4
 22608  0F54  085C               	movf	??_vfpfcnvrt+1,w
 22609  0F55  1803               	skipnc
 22610  0F56  0A5C               	incf	??_vfpfcnvrt+1,w
 22611  0F57  0085               	movwf	5
 22612  0F58  0800               	movf	0,w	;code access
 22613  0F59  00DD               	movwf	??_vfpfcnvrt+2
 22614  0F5A  085D               	movf	??_vfpfcnvrt+2,w
 22615  0F5B  0021               	movlb	1	; select bank1
 22616  0F5C  00B2               	movwf	vfpfcnvrt@c^(0+128)
 22617                           
 22618                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
 22619  0F5D  0020               	movlb	0	; select bank0
 22620  0F5E  0859               	movf	vfpfcnvrt@fmt,w
 22621  0F5F  0086               	movwf	6
 22622  0F60  0187               	clrf	7
 22623  0F61  3002               	movlw	2
 22624  0F62  0781               	addwf	1,f
 22625  0F63  3141               	addfsr 1,1
 22626  0F64  1803               	skipnc
 22627  0F65  0A81               	incf	1,f
 22628                           
 22629                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 22630  0F66  085A               	movf	vfpfcnvrt@ap,w
 22631  0F67  0086               	movwf	6
 22632  0F68  0187               	clrf	7
 22633  0F69  0801               	movf	1,w
 22634  0F6A  0084               	movwf	4
 22635  0F6B  0185               	clrf	5
 22636  0F6C  3002               	movlw	2
 22637  0F6D  0781               	addwf	1,f
 22638  0F6E  3F00               	moviw [0]fsr0
 22639  0F6F  0021               	movlb	1	; select bank1
 22640  0F70  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22641  0F71  3F01               	moviw [1]fsr0
 22642  0F72  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22643  0F73  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22644  0F74  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22645  0F75  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22646  0F76  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22647  0F77  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22648  0F78  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22649                           
 22650                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1344:      
      +                                 return xtoa(fp, llu, c);
 22651  0F79  0020               	movlb	0	; select bank0
 22652  0F7A  0858               	movf	vfpfcnvrt@fp+1,w
 22653  0F7B  00B1               	movwf	xtoa@fp+1
 22654  0F7C  0857               	movf	vfpfcnvrt@fp,w
 22655  0F7D  00B0               	movwf	xtoa@fp
 22656  0F7E  0021               	movlb	1	; select bank1
 22657  0F7F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22658  0F80  0020               	movlb	0	; select bank0
 22659  0F81  00B2               	movwf	xtoa@d
 22660  0F82  0021               	movlb	1	; select bank1
 22661  0F83  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22662  0F84  0020               	movlb	0	; select bank0
 22663  0F85  00B3               	movwf	xtoa@d+1
 22664  0F86  0021               	movlb	1	; select bank1
 22665  0F87  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22666  0F88  0020               	movlb	0	; select bank0
 22667  0F89  00B4               	movwf	xtoa@d+2
 22668  0F8A  0021               	movlb	1	; select bank1
 22669  0F8B  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22670  0F8C  0020               	movlb	0	; select bank0
 22671  0F8D  00B5               	movwf	xtoa@d+3
 22672  0F8E  0021               	movlb	1	; select bank1
 22673  0F8F  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22674  0F90  0020               	movlb	0	; select bank0
 22675  0F91  00B6               	movwf	xtoa@d+4
 22676  0F92  0021               	movlb	1	; select bank1
 22677  0F93  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22678  0F94  0020               	movlb	0	; select bank0
 22679  0F95  00B7               	movwf	xtoa@d+5
 22680  0F96  0021               	movlb	1	; select bank1
 22681  0F97  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22682  0F98  0020               	movlb	0	; select bank0
 22683  0F99  00B8               	movwf	xtoa@d+6
 22684  0F9A  0021               	movlb	1	; select bank1
 22685  0F9B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22686  0F9C  0020               	movlb	0	; select bank0
 22687  0F9D  00B9               	movwf	xtoa@d+7
 22688  0F9E  0021               	movlb	1	; select bank1
 22689  0F9F  0832               	movf	vfpfcnvrt@c^(0+128),w
 22690  0FA0  0020               	movlb	0	; select bank0
 22691  0FA1  00DB               	movwf	??_vfpfcnvrt
 22692  0FA2  085B               	movf	??_vfpfcnvrt,w
 22693  0FA3  00BA               	movwf	xtoa@x
 22694  0FA4  319B  2389         	fcall	_xtoa
 22695  0FA6  0020               	movlb	0	; select bank0
 22696  0FA7  0831               	movf	?_xtoa+1,w
 22697  0FA8  00D8               	movwf	?_vfpfcnvrt+1
 22698  0FA9  0830               	movf	?_xtoa,w
 22699  0FAA  00D7               	movwf	?_vfpfcnvrt
 22700  0FAB  0008               	return
 22701  0FAC                     l7146:	
 22702                           
 22703                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 22704  0FAC  0020               	movlb	0	; select bank0
 22705  0FAD  0859               	movf	vfpfcnvrt@fmt,w
 22706  0FAE  0086               	movwf	6
 22707  0FAF  0187               	clrf	7
 22708  0FB0  3F40               	moviw [0]fsr1
 22709  0FB1  00DB               	movwf	??_vfpfcnvrt
 22710  0FB2  3F41               	moviw [1]fsr1
 22711  0FB3  00DC               	movwf	??_vfpfcnvrt+1
 22712  0FB4  085B               	movf	??_vfpfcnvrt,w
 22713  0FB5  0084               	movwf	4
 22714  0FB6  085C               	movf	??_vfpfcnvrt+1,w
 22715  0FB7  0085               	movwf	5
 22716  0FB8  0012               	moviw fsr0++
 22717  0FB9  3A25               	xorlw	37
 22718  0FBA  1D03               	btfss	3,2
 22719  0FBB  2FD4               	goto	l7156
 22720                           
 22721                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 22722  0FBC  0859               	movf	vfpfcnvrt@fmt,w
 22723  0FBD  0086               	movwf	6
 22724  0FBE  0187               	clrf	7
 22725  0FBF  3001               	movlw	1
 22726  0FC0  0781               	addwf	1,f
 22727  0FC1  3141               	addfsr 1,1
 22728  0FC2  1803               	skipnc
 22729  0FC3  0A81               	incf	1,f
 22730                           
 22731                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 22732  0FC4  3025               	movlw	37
 22733  0FC5  00F1               	movwf	fputc@c
 22734  0FC6  3000               	movlw	0
 22735  0FC7  00F2               	movwf	fputc@c+1
 22736  0FC8  0858               	movf	vfpfcnvrt@fp+1,w
 22737  0FC9  00F4               	movwf	fputc@fp+1
 22738  0FCA  0857               	movf	vfpfcnvrt@fp,w
 22739  0FCB  00F3               	movwf	fputc@fp
 22740  0FCC  31A8  2073         	fcall	_fputc
 22741  0FCE                     l7152:	
 22742                           
 22743                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 22744  0FCE  3001               	movlw	1
 22745  0FCF  0020               	movlb	0	; select bank0
 22746  0FD0  00D7               	movwf	?_vfpfcnvrt
 22747  0FD1  3000               	movlw	0
 22748  0FD2  00D8               	movwf	?_vfpfcnvrt+1
 22749  0FD3  0008               	return
 22750  0FD4                     l7156:	
 22751                           
 22752                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 22753  0FD4  0859               	movf	vfpfcnvrt@fmt,w
 22754  0FD5  0086               	movwf	6
 22755  0FD6  0187               	clrf	7
 22756  0FD7  3001               	movlw	1
 22757  0FD8  0781               	addwf	1,f
 22758  0FD9  3141               	addfsr 1,1
 22759  0FDA  1803               	skipnc
 22760  0FDB  0A81               	incf	1,f
 22761  0FDC  2B32               	goto	l6990
 22762  0FDD                     l7162:	
 22763                           
 22764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 22765  0FDD  0859               	movf	vfpfcnvrt@fmt,w
 22766  0FDE  0086               	movwf	6
 22767  0FDF  0187               	clrf	7
 22768  0FE0  3F40               	moviw [0]fsr1
 22769  0FE1  00DB               	movwf	??_vfpfcnvrt
 22770  0FE2  3F41               	moviw [1]fsr1
 22771  0FE3  00DC               	movwf	??_vfpfcnvrt+1
 22772  0FE4  085B               	movf	??_vfpfcnvrt,w
 22773  0FE5  0084               	movwf	4
 22774  0FE6  085C               	movf	??_vfpfcnvrt+1,w
 22775  0FE7  0085               	movwf	5
 22776  0FE8  0800               	movf	0,w	;code access
 22777  0FE9  00DD               	movwf	??_vfpfcnvrt+2
 22778  0FEA  01DE               	clrf	??_vfpfcnvrt+3
 22779  0FEB  085D               	movf	??_vfpfcnvrt+2,w
 22780  0FEC  00F1               	movwf	fputc@c
 22781  0FED  085E               	movf	??_vfpfcnvrt+3,w
 22782  0FEE  00F2               	movwf	fputc@c+1
 22783  0FEF  0858               	movf	vfpfcnvrt@fp+1,w
 22784  0FF0  00F4               	movwf	fputc@fp+1
 22785  0FF1  0857               	movf	vfpfcnvrt@fp,w
 22786  0FF2  00F3               	movwf	fputc@fp
 22787  0FF3  31A8  2073  3188   	fcall	_fputc
 22788                           
 22789                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 22790  0FF6  0020               	movlb	0	; select bank0
 22791  0FF7  0859               	movf	vfpfcnvrt@fmt,w
 22792  0FF8  0086               	movwf	6
 22793  0FF9  0187               	clrf	7
 22794  0FFA  3001               	movlw	1
 22795  0FFB  0781               	addwf	1,f
 22796  0FFC  3141               	addfsr 1,1
 22797  0FFD  1803               	skipnc
 22798  0FFE  0A81               	incf	1,f
 22799  0FFF  2FCE               	goto	l7152
 22800  1000                     __end_of_vfpfcnvrt:	


Data Sizes:
    Strings     472
    Constant    114
    Data        9
    BSS         102
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80     79      80
    BANK2            80     69      79
    BANK3            80      2      69
    BANK4            80      0      32
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           65      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    vsnprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_21(CODE[18]), STR_20(CODE[18]), STR_19(CODE[19]), STR_18(CODE[20]), 
		 -> STR_17(CODE[20]), STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_7(CODE[15]), STR_6(CODE[15]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_3(CODE[22]), STR_2(CODE[71]), STR_1(CODE[40]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_119(CODE[3]), STR_115(CODE[3]), STR_110(CODE[3]), STR_106(CODE[3]), 
		 -> STR_101(CODE[4]), STR_97(CODE[4]), STR_92(CODE[3]), STR_87(CODE[3]), 
		 -> STR_82(CODE[4]), STR_77(CODE[3]), STR_72(CODE[3]), STR_67(CODE[4]), 
		 -> STR_62(CODE[3]), STR_57(CODE[3]), STR_52(CODE[4]), STR_47(CODE[3]), 
		 -> STR_43(CODE[3]), STR_38(CODE[3]), STR_34(CODE[3]), STR_29(CODE[4]), 
		 -> STR_25(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_119(CODE[3]), STR_115(CODE[3]), STR_110(CODE[3]), STR_106(CODE[3]), 
		 -> STR_101(CODE[4]), STR_97(CODE[4]), STR_92(CODE[3]), STR_87(CODE[3]), 
		 -> STR_82(CODE[4]), STR_77(CODE[3]), STR_72(CODE[3]), STR_67(CODE[4]), 
		 -> STR_62(CODE[3]), STR_57(CODE[3]), STR_52(CODE[4]), STR_47(CODE[3]), 
		 -> STR_43(CODE[3]), STR_38(CODE[3]), STR_34(CODE[3]), STR_29(CODE[4]), 
		 -> STR_25(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_21(CODE[18]), STR_20(CODE[18]), STR_19(CODE[19]), STR_18(CODE[20]), 
		 -> STR_17(CODE[20]), STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_7(CODE[15]), STR_6(CODE[15]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_3(CODE[22]), STR_2(CODE[71]), STR_1(CODE[40]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_21(CODE[18]), STR_20(CODE[18]), STR_19(CODE[19]), STR_18(CODE[20]), 
		 -> STR_17(CODE[20]), STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_7(CODE[15]), STR_6(CODE[15]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_3(CODE[22]), STR_2(CODE[71]), STR_1(CODE[40]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[32]), sp__logf(UNKNOWN), 
		 -> adcGain(BANK2[2]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[32]), sp__logf(UNKNOWN), 
		 -> adcGain(BANK2[2]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_21(CODE[18]), STR_20(CODE[18]), STR_19(CODE[19]), STR_18(CODE[20]), 
		 -> STR_17(CODE[20]), STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_7(CODE[15]), STR_6(CODE[15]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_3(CODE[22]), STR_2(CODE[71]), STR_1(CODE[40]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    snprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_snprintf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    S1719_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_21(CODE[18]), STR_20(CODE[18]), STR_19(CODE[19]), STR_18(CODE[20]), 
		 -> STR_17(CODE[20]), STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_7(CODE[15]), STR_6(CODE[15]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_3(CODE[22]), STR_2(CODE[71]), STR_1(CODE[40]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_21(CODE[18]), STR_20(CODE[18]), STR_19(CODE[19]), STR_18(CODE[20]), 
		 -> STR_17(CODE[20]), STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_7(CODE[15]), STR_6(CODE[15]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_3(CODE[22]), STR_2(CODE[71]), STR_1(CODE[40]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 71
		 -> STR_21(CODE[18]), STR_20(CODE[18]), STR_19(CODE[19]), STR_18(CODE[20]), 
		 -> STR_17(CODE[20]), STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_7(CODE[15]), STR_6(CODE[15]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_3(CODE[22]), STR_2(CODE[71]), STR_1(CODE[40]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 4
		 -> ?_snprintf(BANK1[2]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 4
		 -> ?_snprintf(BANK1[2]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 4
		 -> ?_snprintf(BANK1[2]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 127
		 -> STR_22(CODE[3]), STR_9(CODE[3]), STR_8(CODE[38]), messageBuffer(BIGRAM[127]), 


Critical Paths under _main in COMMON

    _main->_EUSART_Initialize
    _watchdog_timeout_shutdown->_RGB_color
    _vfpfcnvrt->_stoa
    _vfpfcnvrt->_strncmp
    _toupper->_islower
    _stoa->_fputc
    _dtoa->___aodiv
    _abs->___aomod
    _pad->_fputs
    _fputs->_fputc
    _atoi->___wmul
    _atoi->_isdigit
    _EUSART_Write_Text->_EUSART_Write
    _setTemperatureLimitsint->___wmul
    _setShortCircuitProtection->_I2C_writeRegister
    _setOverCurrentDischargeProtection->_I2C_writeRegister
    _setCellUndervoltageProtection->_I2C_writeRegister
    _setCellUndervoltageProtection->_readRegister
    _setCellOvervoltageProtection->_I2C_writeRegister
    _setCellOvervoltageProtection->_readRegister
    _beginAFEcommunication->_I2C_writeRegister
    _beginAFEcommunication->_readRegister
    _RGB_AWAIT_AFE_CONN->_RGB_color
    _AFE_UPDATE->_enableCharging
    _AFE_UPDATE->_enableDischarging
    _updateVoltages->___fltol
    _updateTemperatures->___fltol
    _updateCurrent->___fltol
    ___flmul->__Umul8_16
    _enableDischarging->_I2C_writeRegister
    _enableDischarging->_readRegister
    _enableCharging->_I2C_writeRegister
    _enableCharging->_readRegister
    _readRegister->_read_I2C_data
    _readRegister->_send_I2C_controlByte
    _I2C_writeRegister->_send_I2C_controlByte
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _statemachine->_snprintf
    _printcellParameters->_snprintf
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _utoa->___lodiv
    _utoa->___lomod
    _utoa->_pad
    _otoa->_pad
    _dtoa->___aodiv
    _dtoa->___aomod
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _setShortCircuitProtection->___flge
    _setOverCurrentDischargeProtection->___flge
    ___flge->___fldiv
    _setCellUndervoltageProtection->___aldiv
    _setCellOvervoltageProtection->___aldiv
    _updateVoltages->___fladd
    _updateTemperatures->___fladd
    _logf->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___fltol->___fladd
    ___flneg->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _printcellParameters->_snprintf
    _snprintf->_vsnprintf
    _vfprintf->_vfpfcnvrt
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _AFE_UPDATE->_updateTemperatures
    _updateVoltages->___fltol
    _updateTemperatures->_logf
    _logf->___flsub
    _updateCurrent->___fltol
    ___fltol->___flsub

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_statemachine
    _updateTemperatures->_logf

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _myIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _myIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _myIsr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _myIsr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _myIsr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _myIsr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _myIsr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _myIsr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _myIsr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _myIsr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _myIsr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _myIsr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _myIsr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  378080
                                              0 BANK3      2     2      0
                  _EUSART_Initialize
                          _initClock
                            _initWDT
                          _init_GPIO
                           _init_I2C
                           _init_RGB
                          _init_TMR1
                       _statemachine
          _watchdog_timeout_shutdown
 ---------------------------------------------------------------------------------
 (1) _watchdog_timeout_shutdown                            2     2      0     481
                                              3 COMMON     2     2      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (1) _statemachine                                         3     3      0  375221
                                             66 BANK2      3     3      0
                         _AFE_UPDATE
                  _EUSART_Write_Text
                 _RGB_AWAIT_AFE_CONN
                          _RGB_color
              _beginAFEcommunication
                           _init_AFE
                _printcellParameters
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _printcellParameters                                  0     0      0   72044
                  _EUSART_Write_Text
                       _readRegister
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _snprintf                                            34     4     30   61493
                                             76 BANK0      4     4      0
                                             44 BANK1     30     0     30
                       _readRegister (ARG)
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (3) _vsnprintf                                           19    12      7   56076
                                             74 BANK0      2     2      0
                                             27 BANK1     17    10      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             9     4      5   55039
                                             65 BANK0      9     4      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    42      4   54264
                                             55 BANK0     10     6      4
                                              0 BANK1     27    27      0
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    8411
                                             16 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     512
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              8     6      2     191
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _utoa                                                25    15     10    7272
                                             16 BANK0     25    15     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             18     2     16     412
                                              1 COMMON     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             26    10     16     421
                                              1 COMMON    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6    5995
                                              1 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                23    19      4    2652
                                             10 COMMON     2     2      0
                                              0 BANK0     21    17      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _otoa                                                34    24     10    6544
                                             16 BANK0     34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                31    21     10    8126
                                             16 BANK0     31    21     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                              4 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             19     3     16     613
                                              1 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             27    11     16     625
                                              1 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 8     5      3    5656
                                             16 BANK0      6     3      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 10     5      5    5396
                                              6 BANK0     10     5      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     242
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     6      2    1969
                                             10 COMMON     2     0      2
                                              0 BANK0      6     6      0
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1577
                                              1 COMMON     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    2319
                                              7 COMMON     2     0      2
                                              0 BANK0     13    13      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              5     3      2     259
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     371
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write_Text                                    5     3      2    2141
                                              2 COMMON     5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_AFE                                             0     0      0   75346
       _setCellOvervoltageProtection
      _setCellUndervoltageProtection
  _setOverCurrentDischargeProtection
          _setShortCircuitProtection
              _setShuntResistorValue
            _setTemperatureLimitsint
 ---------------------------------------------------------------------------------
 (3) _setTemperatureLimitsint                              8     0      8    1520
                                              0 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    1036
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _setShuntResistorValue                                4     0      4     121
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) _setShortCircuitProtection                           21    15      6   19764
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _setOverCurrentDischargeProtection                   21    15      6   19764
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     626
                                             58 BANK0     12     4      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _setCellUndervoltageProtection                       21    17      4   17090
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _setCellOvervoltageProtection                        21    17      4   17087
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _beginAFEcommunication                               15    13      2   13322
                                              0 BANK0     15    13      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _RGB_AWAIT_AFE_CONN                                   1     1      0     481
                                              3 COMMON     1     1      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (2) _RGB_color                                            2     0      2     481
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _AFE_UPDATE                                           0     0      0  149879
                     _enableCharging
                  _enableDischarging
                      _updateCurrent
                 _updateTemperatures
                     _updateVoltages
 ---------------------------------------------------------------------------------
 (3) _updateVoltages                                      11    11      0   32333
                                             17 BANK1     11    11      0
                            ___aldiv
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                             ___lmul
                           ___xxtofl
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8    1396
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _updateTemperatures                                  59    59      0   62662
                                             20 BANK1     59    59      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                               _logf
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) _logf                                                78    74      4   27318
                                              8 BANK1     12     8      4
                                              0 BANK2     66    66      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    6067
                                              0 BANK1      8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    5462
                                             58 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _updateCurrent                                        6     6      0   28140
                                             17 BANK1      6     6      0
                  _I2C_writeRegister
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    2096
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     967
                                             10 COMMON     2     2      0
                                              8 BANK1      9     5      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     155
                                             58 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    8033
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     980
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    3663
                                             32 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _enableDischarging                                    5     3      2   13372
                                             11 COMMON     1     1      0
                                              0 BANK0      4     2      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _enableCharging                                       5     3      2   13372
                                             11 COMMON     1     1      0
                                              0 BANK0      4     2      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _readRegister                                         6     2      4    8410
                                              5 COMMON     6     2      4
                      _read_I2C_data
                      _send_I2C_NACK
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _read_I2C_data                                        4     2      2       0
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) _I2C_writeRegister                                    6     0      6    4776
                                              5 COMMON     6     0      6
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_stopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_startBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_data                                        2     0      2     301
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _send_I2C_controlByte                                 4     0      4     602
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_RGB                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_GPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initWDT                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initClock                                            0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   18    14      4    2378
                                             10 COMMON     2     2      0
                                             18 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8    2065
                                              9 COMMON     1     1      0
                                              4 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _myIsr                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     ___aldiv
       ___lmul (ARG)
   _initClock
     _internal_16
   _initWDT
   _init_GPIO
   _init_I2C
   _init_RGB
   _init_TMR1
   _statemachine
     _AFE_UPDATE
       _enableCharging
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _enableDischarging
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateCurrent
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___flneg
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateTemperatures
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _logf
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateVoltages
         ___aldiv
           ___lmul (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___lmul
         ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
     _EUSART_Write_Text
       _EUSART_Write
     _RGB_AWAIT_AFE_CONN
       _RGB_color
     _RGB_color
     _beginAFEcommunication
       _I2C_writeRegister
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
     _init_AFE
       _setCellOvervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setCellUndervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setOverCurrentDischargeProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShortCircuitProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShuntResistorValue
       _setTemperatureLimitsint
         ___wmul
     _printcellParameters
       _EUSART_Write_Text
         _EUSART_Write
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _snprintf
         _readRegister (ARG)
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _vsnprintf (ARG)
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
     _snprintf
       _readRegister (ARG)
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _vsnprintf (ARG)
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
   _watchdog_timeout_shutdown
     _RGB_color

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4F      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     45      4F       9       98.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      2      45      11       86.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      20      13       40.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     161      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     161      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              41      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Mar 10 11:15:23 2020

          __end_of_setShortCircuitProtection 2800                               _maxCellVoltage 01C8  
                      __end_of_send_I2C_data 33D6                                 ___fldiv@aexp 0059  
                               ___fldiv@bexp 0058                               _updateVoltages 124F  
                               ___fldiv@sign 0051                                  __CFG_CP$OFF 0000  
                        ___wmul@multiplicand 0073                        _setShuntResistorValue 33FC  
                        __Umul8_16@word_mpld 0077                                          l320 33DB  
                                        l243 0801                                          l308 33C0  
                                        l164 2079                                          l342 2801  
                    enableDischarging@enable 0020                                          l344 2806  
                                        l345 280B                                          l290 33EE  
                                        l346 2820                                          l284 3431  
                                        l278 33D2                                          l702 2F7D  
                                        l447 2E71                                          l711 2FD8  
                                        l296 33B8                                          l642 37E5  
                                        l723 2329                                          l660 1AB1  
                                        l654 1A7B                                          l734 1B90  
                                        l639 37C5                                          l663 1B47  
                                        l655 1A82                                          l719 230E  
                                        l912 2B72                                          l680 23EF  
                                        l738 1BAB                                          l770 1E8D  
                                        l659 1A9D                                          l691 24AA  
                                        l771 1E90                                          l684 240A  
                                        l772 1E93                                          l685 249F  
                                        l773 1E96                                          l847 34EB  
                                        l759 1CAE                                          l775 1EC9  
                                        l960 22F5                                          l768 1E81  
                                        l947 18E3                                          _Lg1 3A0D  
                                        _Lg2 3A09                                          _Lg3 3A05  
                                        _Lg4 3A01                          __size_of_AFE_UPDATE 0019  
                                        _abs 346B                               RGB_color@color 0071  
                                        _pad 37AF                                 __CFG_BORV$LO 0000  
                                        wreg 0009                                 __CFG_IESO$ON 0000  
                               ___flmul@aexp 0034                                 ___flmul@bexp 0039  
     setCellOvervoltageProtection@voltage_mV 0032      setCellUndervoltageProtection@voltage_mV 0032  
                               ___flmul@sign 0033                                 ___flmul@temp 003E  
                               ___flmul@prod 003A                                 _statemachine 2002  
                               __CFG_LVP$OFF 0000                                 ___fltol@exp1 007B  
                                       l1025 2A07                                         ?_abs 0074  
                                       l1204 1D2B                                         l1028 2A55  
                                       l1048 2967                                         l1152 06D5  
                                       l1080 2AD3                                         l1225 1E32  
                                       l1226 1E4A                                         l1154 06B8  
                                       l1322 2CE2                                         l1090 29DB  
                                       l1228 1E57                                         l1148 0642  
                                       l1190 07CF                                         l1182 07B7  
                                       l1256 1242                                         l1169 0758  
                                       l1282 2C01                                         l1295 2C4B  
                                       l1296 2C55                                         l1288 2C37  
                                       l1449 359B                                         l6300 37BB  
                                       l7020 0B13                                         l6310 37C7  
                                       ?_pad 0026                                         l6304 37C3  
                                       l7104 0E0D                                         l7040 0BCF  
                                       l7008 0AF4                                         l6314 37F1  
                                       l6402 2255                                         l7122 0EBD  
                                       l7050 0C08                                         l7212 0637  
                                       l6420 22C8                                         l7132 0F1C  
                                       l7108 0E3B                                         l7060 0C66  
                                       l8004 2B51                                         l7222 064C  
                                       l8110 26C8                                         l6262 287B  
                                       l6414 2289                                         l6422 22D4  
                                       l6406 227C                                         l6502 1A95  
                                       l7118 0E9E                                         l7070 0CC6  
                                       l8006 2B55                                         l7216 063A  
                                       l8016 2810                                         l6264 287F  
                                       l6280 07DB                                         l6416 2298  
                                       l6512 1ADE                                         l6600 2F56  
                                       l7152 0FCE                                         l7136 0F49  
                                       l7080 0D1E                                         l8008 2B5C  
                                       l7322 0777                                         l7314 076A  
                                       l7306 0750                                         l7330 0780  
                                       l8106 26A0                                         l8050 26F7  
                                       l6346 34E5                                         l8034 34CB  
                                       l6370 1857                                         l6522 1AB9  
                                       l6530 1B53                                         l7146 0FAC  
                                       l7090 0D7D                                         l7162 0FDD  
                                       l7410 3625                                         l7500 1DB6  
                                       l7340 078B                                         l7260 06C0  
                                       l7252 0688                                         l8140 220B  
                                       l6268 28A6                                         l6380 186E  
                                       l6364 182C                                         l6540 1B66  
                                       l6508 1AAC                                         l6620 2FAC  
                                       l6436 2A7F                                         l7156 0FD4  
                                       l7502 1D7F                                         l7262 06C2  
                                       l7270 06D0                                         l6286 3458  
                                       l6390 18B6                                         l6382 187D  
                                       l6534 1B5B                                         l6614 2F8E  
                                       l6446 2AC7                                         l6438 2A8E  
                                       l6462 29CF                                         l7094 0DAB  
                                       l7520 1DD8                                         l7504 1DBB  
                                       l7440 1D07                                         l7336 0789  
                                       l7328 077E                                         l7192 0612  
                                       l8136 21E3                                         l8072 27DF  
                                       l8056 27A3                                         l6472 3548  
                                       l6288 3464                                         l6480 35D9  
                                       l6392 18C2                                         l6368 1853  
                                       l6544 1B73                                         l6632 2FDC  
                                       l6800 2836                                         l6456 2990  
                                       l7408 3605                                         l8400 204A  
                                       l7530 1DF1                                         l7434 1CFC  
                                       l7362 07CB                                         l7194 061A  
                                       l8162 2107                                         l6482 35E2  
                                       l6562 2451                                         l6554 2402  
                                       l6618 2F9F                                         l6458 299F  
                                       l6714 1C3B                                         l6722 1C7D  
                                       l8260 3758                                         l7540 1E1A  
                                       l7372 3595                                         l7604 1078  
                                       l7188 060F                                         l8068 27B5  
                                       l6572 242C                                         l6636 2FED  
                                       l6628 2FAF                                         l6820 1E83  
                                       l7526 1DEF                                         l7518 1DC1  
                                       l7454 1D20                                         l7438 1CFF  
                                       l8182 2F16                                         l7358 07C7  
                                       l7286 06F5                                         l7278 06E3  
                                       l8166 212F                                         l8094 268E  
                                       l6638 2FFA                                         l6806 2862  
                                       l6654 236C                                         l6910 257F  
                                       l6830 1E99                                         l8406 2061  
                                       l8430 3681                                         l8344 2DB0  
                                       l7712 2C10                                         l8184 2F25  
                                       l7288 06F7                                         l7296 0706  
                                       l8088 25E2                                         l6760 2CAA  
                                       l6664 23CD                                         l6648 2321  
                                       l6840 1ED0                                         l8600 1EB7  
                                       l7554 1E53                                         l7474 1D56  
                                       l7458 1D23                                         l7706 2BF9  
                                       l8186 2F2D                                         l8602 2CBB  
                                       l6762 2CAF                                         l6754 2C9A  
                                       l6746 2C7E                                         l6666 2348  
                                       l6674 23D2                                         l6738 1CCC  
                                       l6690 1BBB                                         l6930 08B3  
                                       l6922 0862                                         l6906 2551  
                                       l8268 3721                                         l7468 1D4A  
                                       l7740 2C70                                         l7716 2C14  
                                       l7804 01C1                                         l8604 2815  
                                       l8276 35BC                                         l6764 2CC3  
                                       l6588 24C3                                         l6684 1BA3  
                                       l6852 1EFE                                         l6836 1E9E  
                                       l8372 2003                                         l7494 1D9D  
                                       l7574 103D                                         l7726 2C49  
                                       l7718 2C24                                         l8286 2DC8  
                                       l6694 1BD3                                         l6942 0929  
                                       l6934 08E0                                         l6918 0843  
                                       l6854 1F0E                                         l6862 1F41  
                                       l8390 2026                                         l7912 2BDA  
                                       l7904 2BC1                                         l7664 11D8  
                                       l7656 11AA                                         l7592 1060  
                                       l7576 103F                                         l7728 2C3C  
                                       l7816 01DB                                         l6768 2CE6  
                                       l6952 0988                                         l6856 1F17  
                                       l7682 1218                                         l7658 11C1  
                                       l7594 1062                                         l7578 1047  
                                       l7922 2A21                                         l6778 2D15  
                                       l6698 1BED                                         l6962 09E8  
                                       l6874 1F82                                         l8394 2036  
                                       l7908 2BCC                                         l7668 11DA  
                                       l7596 106A                                         l6972 0A40  
                                       l6876 1F92                                         l6884 1FC5  
                                       l7678 1203                                         l7950 2930  
                                       l7790 011B                                         l7782 009C  
                                       l7926 2A3B                                         l6798 285B  
                                       l6990 0B32                                         l6982 0A9F  
                                       l6894 24D9                                         l6878 1F9B  
                                       l7688 122F                                         l7784 00B8  
                                       l7864 3637                                         l7946 2927  
                                       l6994 0B36                                         l6898 2506  
                                       l7796 0178                                         l7868 3642  
                                       l6996 0AD4                                         l7894 2B93  
                                       l7886 2B83                                         l7966 2955  
                                       l8598 206B                                         l7896 2BA1  
                                       l7976 2974                                         l7968 2963  
                                       l7992 2B0B                                         l7994 2B13  
                                       l7986 2AF7                                         STR_1 3849  
                               __CFG_WDTE$ON 0000                                         STR_2 3802  
                                       STR_3 38CD                                         STR_4 3937  
                                       STR_5 38F8                                         STR_6 39CB  
                                       STR_7 39DA                                         STR_8 3871  
                                       _BRGH 0CF2                                         _CREN 0CEC  
                                       u8000 185E                   enableDischarging@sys_ctrl2 007B  
                                       _SCS0 04C8                                         u8035 18A3  
                                       _SCS1 04C9                                         u8300 1A52  
                                       u9100 1FB7                                         u8205 2AB4  
                                       u9110 1FB8                                         u8135 22B6  
                                       u8170 2A6F                                         u9050 1F33  
                                       u9060 1F34                                         u8405 1AD9  
                                       u8245 29BD                                         u8345 1A8D  
                                       u8505 2440                                         u8290 1A51  
                                       u8515 244C                                         u7900 344C  
                                       u7805 37D1                                         u8605 2FAA  
                                       u7910 344D                                         u8550 2F45  
                                       u7830 3491                                         u7735 28A4  
                                       u8375 1B51                                         u8615 2FB9  
                                       u7840 3492                                         u7760 34A8  
                                       u7825 3474                                         u8465 23FA  
                                       u7850 3565                                         u7770 34A9  
                                       u8395 1ACD                                         u8475 2483  
                                       u8635 2FF8                                         u7860 3566  
                                       u8485 24A8                                         u8725 1B9B  
                                       u9550 06A7                                         u8910 2CFA  
                                       u7870 1011                                         u8750 1C04  
                                       u7935 34EC                                         u8655 2319  
                                       u8815 1C61                                         u9560 06A8  
                                       u8920 2CFB                                         u7880 1012  
                                       u8760 1C05                                         u9545 069C  
                                       u7945 34F1                                         u8585 2F76  
                                       u8825 1C87                                         u8745 1BE7  
                                       u9715 076B                                         u8780 1C24  
                                       u8685 235B                                         u8845 1C9D  
                                       u8790 1C25                                         u9815 07A2  
                                       u8695 2367                                         u8855 1CA9  
                                       u9673 0718                                         u9665 06FB  
                                       u9595 06C6                                         _TMR1 0016  
                                       u9895 359C                                         _SPEN 0CEF  
                                       _TXEN 0CF5                                         _SYNC 0CF4  
                ??_watchdog_timeout_shutdown 0073                                 __CFG_WRT$OFF 0000  
                                       abs@a 0074                                         _dbuf 0220  
                             ?_updateCurrent 0070                                         _atoi 2C79  
                                       _ctoa 35CC                                         _main 3660  
                                       _dtoa 1A36                                         _logf 006B  
                                       _prec 0167                                         _otoa 23E8  
                                       _nout 01C4                                         pad@i 002C  
                                       pad@p 0029                                         fsr0h 0005  
                                       fsr1h 0007                                         indf0 0000  
                                       fsr0l 0004                                         indf1 0001  
                                       fsr1l 0006                                         pad@w 002E  
                                       _stoa 2F3B                                         btemp 007E  
                                       _utoa 2307                                         _xtoa 1B89  
                                       start 0020                              ___fldiv@new_exp 0052  
                     __end_of_updateVoltages 1527                     __end_of_send_I2C_stopBit 33C4  
                          _enableDischarging 3734                                        ??_abs 0076  
                                      ??_pad 002B                         _send_I2C_controlByte 33E8  
                              ?_EUSART_Write 0070                           ?_enableDischarging 0020  
                              ___fltol@sign1 007A                              __end_of___aldiv 2BE3  
                            __end_of___aodiv 18F5                                        ?_atoi 0077  
                                      ?_ctoa 0030                              __end_of___fladd 07D7  
                                      ?_main 0070                                        ?_dtoa 0030  
                            __end_of___aomod 2307                I2C_writeRegister@slaveAddress 0075  
                                      ?_logf 00A8                              __end_of___fldiv 1E5C  
                            __end_of___flneg 33FC                                        STR_11 38E3  
                                      STR_20 3987                                        STR_12 38B7  
                                      STR_21 3999                                        STR_23 3A1D  
                                      STR_15 390D                                        STR_16 3922  
                                      STR_25 3A1D                                        STR_41 3A38  
                                      STR_17 394C                                        STR_34 3A1E  
                                      STR_50 3A29                                        STR_18 3960  
                                      STR_43 3A38                                        STR_27 3A21  
                                      STR_19 3974                                        STR_52 3A29  
                                      STR_60 3A41                                        STR_29 3A21  
                                      STR_45 3A3B                                        STR_38 3A22  
                                      STR_62 3A41                                        STR_47 3A3B  
                                      STR_72 3A26                                        STR_80 3A2D  
                                      STR_57 3A2A                                        STR_65 3A25  
                                      STR_82 3A2D                                        STR_90 3A44  
                                      STR_67 3A25                                        STR_75 3A3E  
                                      STR_92 3A44                                        STR_77 3A3E  
                                      STR_87 3A2E                                        STR_95 3A31  
                            __end_of___flmul 124F                                        STR_97 3A31  
                                      ?_otoa 0030                                        STR_99 3A19  
                            __end_of___flsub 36C7                              __end_of___fltol 2983  
                                      ?_stoa 0020                                        ?_utoa 0030  
                                      u10105 1D97                                        u10115 1DAB  
                                      u10145 1DC4                                        u11025 2956  
                                      u10235 1E08                                        u10075 1D87  
                                      u10245 1E23                                        u10165 1DCD  
                                      u10085 1D8E                                        u10405 11AD  
                                      u11205 26B9                                        u11125 2B48  
                                      u10255 1E3C                                        u11055 296B  
                                      u10505 120C                                        u10425 11B6  
                                      u11225 21BD                                        u11330 35B2  
                                      u10515 1222                                        u10355 10EE  
                                      u11235 21FB                              __end_of___lodiv 2AE4  
                                      u11340 35B3                                        u11405 2D24  
                                      u10365 111D                                        u10605 2C43  
                                      u11165 27CE                                        u11350 35C1  
                                      u11415 2D3B                                        u10375 1173  
                                      u11255 20E8                                        ?_xtoa 0030  
                                      u11360 35C2                                        u10385 118A  
                                      u11265 211F                                        u11435 2D71  
                                      u10395 1199                                        u10715 00C9  
                                      u11507 3527                                        u11445 2D88  
                                      u10645 2C5D                                        u10565 2C1D  
                                      u10805 364A                                        u11517 2043  
                                      u11527 3428                                        u10495 11F1  
                                      u10735 012C                                        u11375 2DDE  
                                      u10585 2C31                                        u11395 2E44  
                                      u10855 2B96                                        u10775 01F3  
                                      u10695 00AC                                        u11497 368A  
                                      u10875 2BA2                                        u10795 3643  
                                      u10885 2BB6                                        u10895 2BC2  
                            __end_of___lomod 29EC                                        u10995 2939  
                                      _IRCF0 04CB                                        _IRCF1 04CC  
                                      _IRCF2 04CD                                        _IRCF3 04CE  
                     __size_of_read_I2C_data 0010                                        i1l145 001E  
                               vfpfcnvrt@fmt 0059                                 vfpfcnvrt@llu 00B3  
                                      _SPBRG 019B                           __size_of_RGB_color 0021  
                        ___lmul@multiplicand 0075                          ??_enableDischarging 0022  
                             __CFG_FCMEN$OFF 0000                              __end_of_initWDT 33B4  
                                      _flags 0169                                        _errno 01C2  
                                      _fputc 2873                              __end_of_isalpha 356D  
                                      _fputs 07D7                                        _myIsr 0004  
                            __end_of_isdigit 3454                                        atoi@n 002B  
                                      pad@fp 0026                                        atoi@s 0077  
                                      _width 0165                                        ctoa@c 0032  
                                      _putch 0003                                        ctoa@w 0034  
                                      dtoa@d 0032                                        dtoa@i 004D  
                                      dtoa@n 0045                                        dtoa@p 003F  
                                      dtoa@s 0043                                        dtoa@w 0041  
                            __end_of_islower 34B0                              __end_of_isspace 3550  
                                      logf@R 0120                                        logf@f 015A  
                                      logf@k 013C                                        logf@s 0146  
                                      logf@u 0156                                        logf@w 014E  
                                      logf@x 00A8                                        logf@z 014A  
                             __CFG_BOREN$OFF 0000                              __end_of_isupper 3499  
                                      otoa@d 0032                                        otoa@i 0050  
                                      otoa@n 0048                                        otoa@p 0042  
                                      otoa@t 0044                                        otoa@w 0046  
                    enableCharging@sys_ctrl2 007B                                        stoa@i 002B  
                                      stoa@l 0033                                        stoa@p 0031  
                                      stoa@s 0022                                        stoa@w 002D  
                                      utoa@d 0032                                        utoa@i 0047  
                                      utoa@n 003F                                        utoa@p 003B  
                                      utoa@w 003D                                        status 0003  
                                      wtemp0 007E                                        xtoa@c 0055  
                                      xtoa@d 0032                                        xtoa@i 0053  
                                      xtoa@n 004B                                        xtoa@p 0047  
                                      xtoa@w 0049                                        xtoa@x 003A  
                          _SCD_delay_setting 39F9                              __end_of_strncmp 2873  
                            __end_of_toupper 1023                             ___lodiv@dividend 0028  
                               ?_internal_16 0070                                 _toupper$1786 0079  
                             __CFG_MCLRE$OFF 0000                    __end_of_enableDischarging 376B  
                            __initialization 0022                              ?_updateVoltages 0070  
                   updateTemperatures@adcVal 00E7        setTemperatureLimitsint@maxCharge_degC 0026  
                               __end_of_atoi 2D1A                                 __end_of_ctoa 35FD  
                               __end_of_main 3692                                 __end_of_dtoa 1B89  
                               __end_of_logf 05F5                                 __end_of_otoa 24D9  
                               __end_of_stoa 3000                                 __end_of_utoa 23E8  
                               __end_of_xtoa 1CE2                     __end_of_UV_delay_setting 39F9  
                     ?_setShuntResistorValue 0071                       beginAFEcommunication@i 002D  
                      ?_send_I2C_controlByte 0071                               ??_EUSART_Write 0071  
                  _watchdog_timeout_shutdown 3519                               __CFG_LPBOR$OFF 0000  
                          _ATmega328_address 3800                                       ??_atoi 0020  
                                     ??_ctoa 0033                                       ??_main 01E3  
                                     ??_dtoa 003A                                       ??_logf 00AC  
                                     ??_otoa 003A                                       ??_stoa 007A  
                                     ??_utoa 003A                                       ??_xtoa 003B  
                __end_of_printcellParameters 1A36                               __CFG_PLLEN$OFF 0000  
                           ___lodiv@quotient 0072                                ?_readRegister 0075  
                                     ?_fputc 0071                                       STR_101 3A19  
                                     STR_110 3A1A                                       ?_fputs 007A  
                                     STR_113 3A47                                       STR_106 3A32  
                                     STR_115 3A47                                       ?_myIsr 0070  
                                     STR_117 3A35                                       STR_119 3A35  
                             __CFG_ZCDDIS$ON 0000                                       ?_putch 0070  
              __end_of_OCD_threshold_setting 38B7                              ??_updateCurrent 00B1  
                                     _RC1REG 0199                    __end_of_SCD_delay_setting 3A01  
                              vfpfcnvrt@done 00A2                                 ??_AFE_UPDATE 007C  
                                     _TX1REG 019A                                       _SPLLEN 04CF  
     setOverCurrentDischargeProtection@i_981 00AA                                       _SSPADD 0212  
                                     _TRISC6 0476                                       _TRISC7 0477  
                                     _SSPBUF 0211                                       u808lld 2253  
                              _read_I2C_data 342D                             __end_of___xxtofl 2C79  
                                     u797lld 182A                               __CFG_PWRTE$OFF 0000  
                          __end_of_RGB_color 2821                                 vfprintf@cfmt 0068  
                                     ___flge 29EC                                       ___lmul 362E  
                                  ??___aldiv 0079                                    ??___aodiv 0071  
                             _minCellVoltage 01C6                                    ??___fladd 0062  
                                  ??___aomod 0071                                       ___wmul 34E3  
                                     _ln2_hi 3A15                                    ??___fldiv 0048  
                                     _ln2_lo 3A11                                    ??___flneg 007A  
                             __CFG_STVREN$ON 0000                                    ??___flmul 002E  
                                  ??___flsub 007A                                    ??___fltol 00AC  
                                  ??___lodiv 0071                             __end_of_init_I2C 342D  
                                  ??___lomod 0071                             __end_of_init_AFE 291D  
                           __end_of_init_RGB 33AE                    __end_of_ATmega328_address 3802  
                      _beginAFEcommunication 2DC3                                       pad@buf 0028  
                                     ctoa@fp 0030                                       dtoa@fp 0030  
                                     _strlen 3454                                       logf@t1 0124  
                                     logf@t2 0128                                    ??_initWDT 0071  
                                     logf@dk 0142                                       logf@ix 015E  
                                     fputc@c 0071                                       fputs@c 0022  
                                     fputs@i 0023                                       fputs@s 0025  
                                  ??_isalpha 0073                                    ??_isdigit 0073  
                         __end_of_AFE_UPDATE 34C9                           __size_of__Umul8_16 001F  
                                  ??_islower 0073                                    ??_isspace 0073  
                        _updateVoltages$2029 00B4                                       otoa@fp 0030  
                             ??_readRegister 0079                                    ??_isupper 0073  
                                     stoa@cp 002F                                       stoa@fp 0020  
                                     putch@c 0070                             __end_of_vfprintf 362E  
                                     utoa@fp 0030              ??_setCellUndervoltageProtection 0036  
                           __end_of_snprintf 3519                                       xtoa@fp 0030  
                                  ??_strncmp 0077                                    ??_toupper 0020  
                                 ___flge@ff1 005A                                   ___flge@ff2 005E  
                               ___xxtofl@arg 0022                                 ___xxtofl@exp 0021  
                               ___xxtofl@val 0071                      __end_of__initialization 0067  
                             ?_read_I2C_data 0071                                   ___flneg@f1 005A  
                                 ___fltol@f1 00A8                     ?_setTemperatureLimitsint 0020  
                 __size_of_enableDischarging 0037     setTemperatureLimitsint@minDischarge_degC 0020  
                             __pcstackCOMMON 0070                       ??_send_I2C_controlByte 0075  
                               __pidataBANK3 33DF                                __end_of_fputc 28C7  
                              __end_of_fputs 07FD                                __end_of_myIsr 0020  
                               _cellVoltages 01A0                                __end_of_putch 0004  
                                 _batCurrent 01BA                           _RGB_AWAIT_AFE_CONN 35AA  
                     updateTemperatures@vtsx 00E9                  __size_of_updateTemperatures 02D9  
                                 _batVoltage 01BE                          ?_RGB_AWAIT_AFE_CONN 0070  
                    __size_of_enableCharging 0037                                      ??_fputc 0075  
                                    ??_fputs 0020                                      ??_myIsr 0070  
                                    ??_putch 0071            setShortCircuitProtection@delay_us 006A  
                                 __pbssBANK1 00EF                                   __pbssBANK2 0165  
                                 __pbssBANK3 01A0                                   __pbssBANK4 0220  
                       __end_of_EUSART_Write 0808                           __size_of_init_GPIO 003B  
                         __size_of_initClock 0003                           __size_of_init_TMR1 000B  
                        statemachine@success 0164                            __end_of__Umul8_16 35AA  
                                 __pmaintext 3660                         ??_RGB_AWAIT_AFE_CONN 0073  
                       __size_of_internal_16 0009              setShortCircuitProtection@scaler 00A0  
                                    ?___flge 005A                            ?_send_I2C_stopBit 0070  
                                    ?___lmul 0071                                      ?___wmul 0071  
      setTemperatureLimitsint@minCharge_degC 0024                              __CFG_PPS1WAY$ON 0000  
                 ?_setShortCircuitProtection 0066                                   __pintentry 0004  
                     ?_beginAFEcommunication 0020                           ??_send_I2C_stopBit 0071  
                             ___lmul@product 0020                                      ?_strlen 0071  
                    _shuntResistorValue_mOhm 01B2                                    ?___xxtofl 0071  
             setShortCircuitProtection@i_972 00AA                           __size_of_vfpfcnvrt F1A4  
         __size_of_watchdog_timeout_shutdown 001B                                      _PPSLOCK 0E0F  
                     __size_of_send_I2C_NACK 0009                             ___lomod@dividend 0028  
                            ??_read_I2C_data 0073                       __size_of_send_I2C_data 0009  
                                  ?_init_I2C 0070                                    ?_init_AFE 0070  
                                  ?_init_RGB 0070         __end_of_setCellOvervoltageProtection 214F  
      __size_of_setCellOvervoltageProtection 00D5                 _setCellOvervoltageProtection 207A  
                           ??_updateVoltages 00B1        __end_of_setCellUndervoltageProtection 222B  
     __size_of_setCellUndervoltageProtection 00DC                _setCellUndervoltageProtection 214F  
                   readRegister@recievedData 0079                      ??_setShuntResistorValue 0075  
                         __size_of_vsnprintf 007D                         __end_of_readRegister 36FD  
                                    ___aldiv 2B61                                      _adcGain 016D  
                            __size_of___flge 007C                                      ___aodiv 1802  
                                    ___fladd 05F5                                      ___aomod 222B  
                                    ___fldiv 1CE2                                      ___flneg 33F2  
                            __size_of___lmul 0032                                      ___flmul 1023  
                                    ___flsub 3692                                      ___fltol 291D  
                            __size_of___wmul 001B                                      ___lodiv 2A68  
                                    ___lomod 2983                                    ?_vfprintf 0061  
                                  ?_snprintf 00CC                                _messageBuffer 2771  
                                    __ptext1 3519                                      __ptext2 2002  
                                    __ptext3 18F5                                      __ptext4 34FE  
                                    __ptext5 2AE4                                      __ptext6 35FD  
                                    __ptext7 1E5C                                      __ptext8 1B89  
                                    __ptext9 1001                            __end_of_init_GPIO 0843  
                          __end_of_initClock 0800                            __end_of_init_TMR1 3411  
                            __size_of_strlen 0017                                    _T1CONbits 0018  
                                    _initWDT 33AE                                 __size_of_abs 0017  
                               __size_of_pad 0051                                      _isalpha 3550  
                                    _isdigit 343D                                   ??___xxtofl 0075  
                           ___aldiv@dividend 0028                                      _islower 3499  
                                    _isspace 3534    __end_of_setOverCurrentDischargeProtection 26E8  
 __size_of_setOverCurrentDischargeProtection 0115          ??_setOverCurrentDischargeProtection 006C  
         ?_setOverCurrentDischargeProtection 0066            _setOverCurrentDischargeProtection 25D3  
                                    _isupper 3482                                      atoi@neg 0024  
                                    clrloop0 3412            __end_of_watchdog_timeout_shutdown 3534  
                                    _strncmp 2821                                      _toupper 1001  
                       end_of_initialization 0067                                   ??_init_I2C 0071  
                                 ??_init_AFE 007B                                   ??_init_RGB 0071  
                                    fputc@fp 0073                                      fputs@fp 007A  
              ?_setCellOvervoltageProtection 0032                            _EUSART_Initialize 2D1A  
                         ?_EUSART_Initialize 0032                            __end_of_vfpfcnvrt 1000  
                              _send_I2C_NACK 33D6                             ___aldiv@quotient 002E  
                 send_I2C_controlByte@RW_bit 0073                                      psplit$0 43008C  
                                    psplit$1 8C008D                                _send_I2C_data 33CD  
                                  _RGB_color 2800                                   ??_vfprintf 0066  
                         EUSART_Initialize@x 007A                                   ??_snprintf 006C  
                                    strlen@a 0073                                      strlen@s 0071  
                        ??_EUSART_Initialize 0036                                  ___fladd@grs 006D  
                           __CFG_FOSC$INTOSC 0000                                ___xxtofl@sign 0020  
                                  _TRISAbits 008C                                    _TRISBbits 008D  
                                  _TRISCbits 008E                                    _TRISEbits 0090  
                      __size_of_EUSART_Write 0008                               _enableCharging 36FD  
                          __end_of_vsnprintf 2B61                                  ___fldiv@grs 0054  
                                ___fldiv@rem 004D                 __size_of_printcellParameters 0141  
              __end_of_SCD_threshold_setting 39CB                                    _RXPPSbits 0E24  
                          _I2C_writeRegister 356D                                  ___flmul@grs 0035  
                  __end_of_EUSART_Initialize 2DC3                        __end_of_updateCurrent 2F3B  
                      _OCD_threshold_setting 3897                           ?_I2C_writeRegister 0075  
           beginAFEcommunication@commSuccess 002B                               ?_send_I2C_NACK 0070  
                   readRegister@slaveAddress 0075               ?_setCellUndervoltageProtection 0032  
                             ?_send_I2C_data 0071                          ??_I2C_writeRegister 007B  
                                 ?_RGB_color 0071                               __end_of___flge 2A68  
                             __end_of___lmul 3660                                  vfpfcnvrt@ap 005A  
                                vfpfcnvrt@cp 00A0                                  vfpfcnvrt@fp 0057  
                                vfpfcnvrt@ll 00A8                               __end_of___wmul 34FE  
                                vfpfcnvrt@vp 00B0                               __end_of_ln2_hi 3A19  
                             __end_of_ln2_lo 3A15                                 _EUSART_Write 0800  
                I2C_writeRegister@regAddress 0077                setShuntResistorValue@res_mOhm 0071  
                     __end_of_enableCharging 3734             __size_of_setTemperatureLimitsint 0044  
                             __end_of_strlen 346B                          start_initialization 0022  
                            ___lodiv@divisor 0020                              ___lodiv@counter 007A  
                        _thermistorBetaValue 01E1                                  __end_of_Lg1 3A11  
                                __end_of_Lg2 3A0D                                  __end_of_Lg3 3A09  
                                __end_of_Lg4 3A05                                ?_statemachine 0070  
                                __end_of_abs 3482                                  __end_of_pad 3800  
                          _minCellTempCharge 01D0                setCellOvervoltageProtection@i 0045  
                       _maxCellTempDischarge 01CA                         updateVoltages@adcVal 00B8  
                       _minCellTempDischarge 01CE                            pnum$text7_split_1 008C  
                          pnum$text7_split_2 008D                    __end_of_I2C_writeRegister 358B  
     _setOverCurrentDischargeProtection$2028 00A4          setCellOvervoltageProtection@delay_s 0034  
       setCellUndervoltageProtection@delay_s 0034                            _EUSART_Write_Text 34C9  
                      __size_of_readRegister 0036                           ?_EUSART_Write_Text 0072  
                    ??_beginAFEcommunication 0022                                  vfprintf@fmt 0063  
                                   ??___flge 0062                                     ??___lmul 0079  
                                   ??___wmul 0075               ??_setCellOvervoltageProtection 0036  
        setCellOvervoltageProtection@ov_trip 0044                                    __Umul8_16 358B  
                ??_setShortCircuitProtection 006C                                  __pdataBANK3 01DA  
                        ??_EUSART_Write_Text 0074                __size_of_send_I2C_controlByte 000A  
       setCellUndervoltageProtection@uv_trip 0044                   __end_of_updateTemperatures 1800  
                                   ??_strlen 0073                                    ___fladd@a 005E  
                                  ___fladd@b 005A                                 vsnprintf@cnt 00C4  
                               vsnprintf@fmt 00BF                                    ___fldiv@a 0040  
                                  ___fldiv@b 0044                                  __pbssBIGRAM 2771  
                            ?_enableCharging 0020                         enableCharging@enable 0020  
                                  _adcOffset 016B                                    ___flmul@a 002A  
                                  ___flmul@b 0026                                  __pbssCOMMON 007C  
                                  ___flsub@a 00A0                                    ___flsub@b 00A4  
                             ??_statemachine 0162                                    ___latbits 0003  
           send_I2C_controlByte@BlockAddress 0071                                   myIsr@count 01D5  
                              __pcstackBANK0 0020                                __pcstackBANK1 00A0  
                              __pcstackBANK2 0120                                __pcstackBANK3 01E3  
                           ___aodiv@dividend 0028                    __size_of_send_I2C_stopBit 0008  
                                snprintf@fmt 00D0                            __size_of___xxtofl 0096  
                               _readRegister 36C7     setTemperatureLimitsint@maxDischarge_degC 0022  
                      updateTemperatures@tmp 00E3                        updateTemperatures@rts 00EB  
                  __end_of_EUSART_Write_Text 34E3                   __size_of_EUSART_Initialize 00A9  
                              ??_internal_16 0071                                    _atoi$1651 0026  
                                  _atoi$1652 002A                                    _atoi$1653 0028  
                           _OV_delay_setting 39E9                            __size_of_init_I2C 0010  
                      I2C_writeRegister@data 0079                              ??_send_I2C_NACK 0071  
                          __size_of_init_AFE 0056                            __size_of_init_RGB 0005  
                          _send_I2C_startBit 33B4                                    _dtoa$1200 003D  
                            ??_send_I2C_data 0073                  __size_of_RGB_AWAIT_AFE_CONN 0022  
             __size_of_setShuntResistorValue 000A                                     ?___aldiv 0024  
                                   ?___aodiv 0020                           ?_send_I2C_startBit 0070  
                                   ?___fladd 005A                __end_of_setShuntResistorValue 3406  
                                   ?___aomod 0020                                     ?___fldiv 0040  
                                   ?___flneg 005A                             ___aodiv@quotient 0074  
                                   ?___flmul 0026                                     ?___flsub 00A0  
                                   ?___fltol 00A8                                     ?___lodiv 0020  
                                   ?___lomod 0020                                  ??_RGB_color 0073  
                                 ?__Umul8_16 0071                    EUSART_Initialize@baudrate 0032  
                                  _logf$2041 0152                                    _logf$2042 012C  
                                  _logf$2043 0130                                    _logf$2044 0134  
                                  _logf$2045 0138                            __size_of_vfprintf 0031  
                        ??_send_I2C_startBit 0071                            __size_of_snprintf 001B  
             BQ76920@shuntResistorValue_mOhm 01AE                              ___lomod@divisor 0020  
                                   ?_initWDT 0070                              ___lomod@counter 0072  
                                   ?_isalpha 0071                                     ?_isdigit 0071  
                                   ?_islower 0071                                     ?_isspace 0071  
                                  _init_GPIO 0808                                     ?_isupper 0071  
                                  _initClock 07FD                                    _init_TMR1 3406  
                                  _currState 01D9                    _setShortCircuitProtection 26E8  
                 __size_of_I2C_writeRegister 001E                               __size_of_fputc 0054  
                             __size_of_fputs 0026                               __size_of_myIsr 001C  
                                   ?_strncmp 0071                                     ?_toupper 0077  
                             __size_of_putch 0001                              ___aldiv@divisor 0024  
                      __end_of_read_I2C_data 343D                              ___aldiv@counter 002C  
                             ___wmul@product 0075                              BQ76920@protect1 01D4  
                            BQ76920@protect2 01D3                              BQ76920@protect3 01D2  
                                   _LATAbits 010C                                     _LATEbits 0110  
                  __end_of_send_I2C_startBit 33BC                                    clear_ram0 3411  
                                  _tmr1_flag 00EF                                     _PIE1bits 0091  
         setOverCurrentDischargeProtection@i 00A8                                     _PIR1bits 0011  
                 setShortCircuitProtection@i 00A8                          __end_of_internal_16 33CD  
                        _printcellParameters 18F5                                    _vfpfcnvrt 1E5C  
                                  _xtoa$1236 0043                                    _xtoa$1237 0045  
                          ___wmul@multiplier 0071                      _setTemperatureLimitsint 376B  
                                 ?_init_GPIO 0070                                   ?_initClock 0070  
                                 ?_init_TMR1 0070                        send_I2C_data@databyte 0071  
                               _isspace$1678 0075                                   vfpfcnvrt@c 00B2  
                          ___lmul@multiplier 0071                         ?_printcellParameters 0070  
                      _temperatureThermistor 01B6                   __size_of_EUSART_Write_Text 001A  
                 ?_watchdog_timeout_shutdown 0070                                    _vsnprintf 2AE4  
                                 _AFE_UPDATE 34B0                            _OCD_delay_setting 39AB  
                       __end_of_statemachine 207A                                   vfprintf@ap 0065  
                                 vfprintf@fp 0061                                  ??__Umul8_16 0073  
                           __size_of___aldiv 0082                             __size_of___aodiv 00F3  
                           __size_of___fladd 01E2                      __size_of_updateVoltages 02D8  
                           __size_of___aomod 00DC                             __size_of___fldiv 017A  
             _setShortCircuitProtection$2027 00A4                             __size_of___flneg 000A  
                                vsnprintf@ap 00C1                             __size_of___flmul 022C  
                           __size_of___flsub 0035                             __size_of___fltol 0066  
                     readRegister@regAddress 0077                             __size_of___lodiv 007C  
                           __size_of___lomod 0069                                   ?_vfpfcnvrt 0057  
                                 snprintf@ap 006F                              ___aodiv@divisor 0020  
                            ___aodiv@counter 0072                                   _ANSELBbits 018D  
                                 _ANSELCbits 018E                                     ___xxtofl 2BE3  
setOverCurrentDischargeProtection@current_mA 0066                             __size_of_initWDT 0006  
                           __size_of_isalpha 001D                             __size_of_isdigit 0017  
                           _send_I2C_stopBit 33BC                             __size_of_islower 0017  
                           __size_of_isspace 001C                                     __ptext10 3499  
                                   __ptext11 3482                                     __ptext20 346B  
                                   __ptext12 3550                                     __ptext21 222B  
                                   __ptext13 2307                                     __ptext30 3534  
                                   __ptext22 1802                                     __ptext14 2983  
                                   __ptext31 343D                                     __ptext23 35CC  
                                   __ptext15 2A68                                     __ptext40 29EC  
                                   __ptext32 34C9                                     __ptext24 37AF  
                                   __ptext16 2821                                     __ptext41 214F  
                                   __ptext33 0800                                     __ptext25 3454  
                                   __ptext17 2F3B                                     __ptext50 006B  
                                   __ptext42 207A                                     __ptext34 28C7  
                                   __ptext26 07D7                                     __ptext18 23E8  
                                   __ptext51 3692                                     __ptext43 2DC3  
                                   __ptext35 376B                                     __ptext27 2873  
                                   __ptext19 1A36                                     __ptext60 3734  
                                   __ptext52 05F5                                     __ptext44 35AA  
                                   __ptext36 34E3                                     __ptext28 0003  
                                   __ptext61 36FD                                     __ptext53 2E77  
                                   __ptext45 2800                                     __ptext37 33FC  
                                   __ptext29 2C79                                     __ptext70 3406  
                                   __ptext62 36C7                                     __ptext54 2BE3  
                                   __ptext46 34B0                                     __ptext38 26E8  
                                   __ptext71 33A9                                     __ptext63 33D6  
                                   __ptext55 291D                                     __ptext47 124F  
                                   __ptext39 25D3                                     __ptext72 341D  
                                   __ptext64 342D                                     __ptext56 33F2  
                                   __ptext48 362E                                     __ptext73 0808  
                                   __ptext65 356D                                     __ptext57 1023  
                                   __ptext49 1527                                     __ptext74 33AE  
                                   __ptext66 33BC                                     __ptext58 358B  
                                   __ptext75 07FD                                     __ptext67 33B4  
                                   __ptext59 1CE2                                     __ptext76 33C4  
                                   __ptext68 33CD                                     __ptext77 2D1A  
                                   __ptext69 33E8                                     __ptext78 2B61  
                           __size_of_isupper 0017                        ??_printcellParameters 007C  
             setCellUndervoltageProtection@i 0045                    __end_of_OCD_delay_setting 39BB  
                           __size_of_strncmp 0052                             __size_of_toupper 0022  
                                 ?_vsnprintf 00BB                          updateCurrent@adcVal 00B5  
                                   _init_I2C 341D                                     _init_AFE 28C7  
                                   _init_RGB 33A9                                __size_of_atoi 00A1  
                              __size_of_ctoa 0031                                __size_of_main 0032  
                              __size_of_dtoa 0153                                _SSPDATPPSbits 0E21  
                                  pnum$text7 0043                                __size_of_logf 058A  
                              __size_of_otoa 00F1                        _SCD_threshold_setting 39BB  
                              __size_of_stoa 00C5                                __size_of_utoa 00E1  
                 __size_of_send_I2C_startBit 0008                                __size_of_xtoa 0159  
                                _internal_16 33C4                                   _RB2PPSbits 0E9A  
                                 _RC1STAbits 019D                                    stoa@F1152 01DA  
                                 _RC4PPSbits 0EA4               __size_of_beginAFEcommunication 00B4  
                              _SSPCLKPPSbits 0E20                __end_of_beginAFEcommunication 2E77  
                                   int$flags 007E                                   _RC5PPSbits 0EA5  
                                   _protect1 01D8                                     _protect2 01D7  
                                   _protect3 01D6                    ??_setTemperatureLimitsint 0077  
                                   _vfprintf 35FD                             ??_enableCharging 0022  
                                   _snprintf 34FE                             ___aomod@dividend 0028  
                                   logf@F469 01AA                       __size_of_updateCurrent 00C4  
  setOverCurrentDischargeProtection@delay_ms 006A                     __end_of_OV_delay_setting 39F1  
                             _vfpfcnvrt$1251 00A4                               _vfpfcnvrt$1252 00A6  
                                 _INTCONbits 000B                                  ??_init_GPIO 0071  
                                ??_initClock 0071                                  ??_init_TMR1 0071  
                                   logf@hfsq 013E                               __pstringtext10 3A0D  
                             __pstringtext11 3A11                               __pstringtext20 390D  
                             __pstringtext12 3A15                               __pstringtext21 3922  
                             __pstringtext13 3800                               __pstringtext30 3A19  
                             __pstringtext22 3937                               __pstringtext14 3849  
                             __pstringtext31 3A1D                               __pstringtext23 394C  
                             __pstringtext15 3871                               __pstringtext40 3A3E  
                             __pstringtext32 3A21                               __pstringtext24 3960  
                             __pstringtext16 38B7                               __pstringtext41 3A41  
                             __pstringtext33 3A25                               __pstringtext25 3974  
                             __pstringtext17 38CD                               __pstringtext42 3A44  
                             __pstringtext34 3A29                               __pstringtext26 3987  
                             __pstringtext18 38E3                               __pstringtext43 3A47  
                             __pstringtext35 3A2D                               __pstringtext27 3999  
                             __pstringtext19 38F8                               __pstringtext44 0000  
                             __pstringtext36 3A31                               __pstringtext28 39CB  
                             __pstringtext37 3A35                               __pstringtext29 39DA  
                             __pstringtext38 3A38                               __pstringtext39 3A3B  
                                   isalpha@c 0071                                     isdigit@c 0071  
                                 vsnprintf@f 00C6                                   vsnprintf@n 00BD  
                                 vsnprintf@s 00BB                           _updateTemperatures 1527  
                           _UV_delay_setting 39F1                                    snprintf@n 00CE  
                                  snprintf@s 00CC                 __end_of_send_I2C_controlByte 33F2  
                                   intlevel1 0000          setShortCircuitProtection@current_mA 0066  
                                   islower@c 0071                                  ?_AFE_UPDATE 0070  
                                   isspace@c 0071                          ?_updateTemperatures 0070  
                          __CFG_CLKOUTEN$OFF 0000                                  _PPSLOCKbits 0E0F  
                                   isupper@c 0071           __size_of_setShortCircuitProtection 0118  
                                  strncmp@_l 0071                                    strncmp@_r 0073  
                          _maxCellTempCharge 01CC                              ___aomod@divisor 0020  
                                ??_vfpfcnvrt 005B                                     stoa@nuls 0024  
                            ___aomod@counter 0072                                __pstringtext1 3897  
                              __pstringtext2 39AB                                __pstringtext3 39BB  
                              __pstringtext4 39E9                                __pstringtext5 39F1  
                              __pstringtext6 39F9                                __pstringtext7 3A01  
                              __pstringtext8 3A05                                __pstringtext9 3A09  
                       ??_updateTemperatures 00B4                       __Umul8_16@multiplicand 0071  
                             _vsnprintf$1823 00C2                                     strncmp@l 0078  
                                   strncmp@n 0075                                     strncmp@r 007A  
                                   toupper@c 0077                        EUSART_Write_Text@text 0072  
                               ___aldiv@sign 002D                                  _SSPCON2bits 0216  
                                 _WDTCONbits 0097                                ___fladd@signs 006A  
            __end_of_setTemperatureLimitsint 37AF                           EUSART_Write@txData 0071  
                               ___aodiv@sign 0073      setOverCurrentDischargeProtection@scaler 00A0  
                                ??_vsnprintf 006A                      _updateTemperatures$2030 00B7  
                    _updateTemperatures$2031 00BB                      _updateTemperatures$2040 00DF  
                    _updateTemperatures$2032 00BF                      _updateTemperatures$2033 00C3  
                    _updateTemperatures$2034 00C7                      _updateTemperatures$2035 00CB  
                    _updateTemperatures$2036 00CF                      _updateTemperatures$2037 00D3  
                    _updateTemperatures$2038 00D7                      _updateTemperatures$2039 00DB  
                               ___fladd@aexp 006B                                 ___fladd@bexp 006C  
                      __size_of_statemachine 0078                                   _STATUSbits 0003  
                                _toggleColor 007C                         __Umul8_16@multiplier 0079  
                              _updateCurrent 2E77                                   _SSPCONbits 0215  
                 __end_of_RGB_AWAIT_AFE_CONN 35CC                                 ___aomod@sign 0073  
                         EUSART_Write_Text@i 0075                        __end_of_send_I2C_NACK 33DF  
                          __Umul8_16@product 0075  
