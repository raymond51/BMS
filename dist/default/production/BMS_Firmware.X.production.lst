

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Mar 12 12:01:42 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1719
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	stringtext14,global,class=STRCODE,delta=2
    19                           	psect	stringtext15,global,class=STRCODE,delta=2
    20                           	psect	stringtext16,global,class=STRCODE,delta=2
    21                           	psect	stringtext17,global,class=STRCODE,delta=2
    22                           	psect	stringtext18,global,class=STRCODE,delta=2
    23                           	psect	stringtext19,global,class=STRCODE,delta=2
    24                           	psect	stringtext20,global,class=STRCODE,delta=2
    25                           	psect	stringtext21,global,class=STRCODE,delta=2
    26                           	psect	stringtext22,global,class=STRCODE,delta=2
    27                           	psect	stringtext23,global,class=STRCODE,delta=2
    28                           	psect	stringtext24,global,class=STRCODE,delta=2
    29                           	psect	stringtext25,global,class=STRCODE,delta=2
    30                           	psect	stringtext26,global,class=STRCODE,delta=2
    31                           	psect	stringtext27,global,class=STRCODE,delta=2
    32                           	psect	stringtext28,global,class=STRCODE,delta=2
    33                           	psect	stringtext29,global,class=STRCODE,delta=2
    34                           	psect	stringtext30,global,class=STRCODE,delta=2
    35                           	psect	stringtext31,global,class=STRCODE,delta=2
    36                           	psect	stringtext32,global,class=STRCODE,delta=2
    37                           	psect	stringtext33,global,class=STRCODE,delta=2
    38                           	psect	stringtext34,global,class=STRCODE,delta=2
    39                           	psect	stringtext35,global,class=STRCODE,delta=2
    40                           	psect	stringtext36,global,class=STRCODE,delta=2
    41                           	psect	stringtext37,global,class=STRCODE,delta=2
    42                           	psect	stringtext38,global,class=STRCODE,delta=2
    43                           	psect	stringtext39,global,class=STRCODE,delta=2
    44                           	psect	stringtext40,global,class=STRCODE,delta=2
    45                           	psect	stringtext41,global,class=STRCODE,delta=2
    46                           	psect	stringtext42,global,class=STRCODE,delta=2
    47                           	psect	stringtext43,global,class=STRCODE,delta=2
    48                           	psect	stringtext44,global,class=STRCODE,delta=2
    49                           	psect	cinit,global,class=CODE,merge=1,delta=2
    50                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    51                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    52                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    53                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    54                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    55                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    56                           	psect	clrtext,global,class=CODE,delta=2
    57                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    58                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    59                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    60                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    61                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    62                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    63                           	psect	text1,local,class=CODE,merge=1,delta=2
    64                           	psect	text2,local,class=CODE,merge=1,delta=2
    65                           	psect	text3,local,class=CODE,merge=1,delta=2
    66                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    68                           	psect	text6,local,class=CODE,merge=1,delta=2
    69                           	psect	text7,local,class=CODE,merge=1,delta=2
    70                           	psect	text8,local,class=CODE,merge=1,delta=2
    71                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    72                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    73                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    74                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    75                           	psect	text13,local,class=CODE,merge=1,delta=2
    76                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    77                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    78                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    79                           	psect	text17,local,class=CODE,merge=1,delta=2
    80                           	psect	text18,local,class=CODE,merge=1,delta=2
    81                           	psect	text19,local,class=CODE,merge=1,delta=2
    82                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    83                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    84                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    85                           	psect	text23,local,class=CODE,merge=1,delta=2
    86                           	psect	text24,local,class=CODE,merge=1,delta=2
    87                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    88                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    89                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    90                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    91                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    92                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    93                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    94                           	psect	text32,local,class=CODE,merge=1,delta=2
    95                           	psect	text33,local,class=CODE,merge=1,delta=2
    96                           	psect	text34,local,class=CODE,merge=1,delta=2
    97                           	psect	text35,local,class=CODE,merge=1,delta=2
    98                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
    99                           	psect	text37,local,class=CODE,merge=1,delta=2
   100                           	psect	text38,local,class=CODE,merge=1,delta=2
   101                           	psect	text39,local,class=CODE,merge=1,delta=2
   102                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
   103                           	psect	text41,local,class=CODE,merge=1,delta=2
   104                           	psect	text42,local,class=CODE,merge=1,delta=2
   105                           	psect	text43,local,class=CODE,merge=1,delta=2
   106                           	psect	text44,local,class=CODE,merge=1,delta=2
   107                           	psect	text45,local,class=CODE,merge=1,delta=2
   108                           	psect	text46,local,class=CODE,merge=1,delta=2
   109                           	psect	text47,local,class=CODE,merge=1,delta=2
   110                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
   111                           	psect	text49,local,class=CODE,merge=1,delta=2
   112                           	psect	text50,local,class=CODE,merge=1,delta=2,group=2
   113                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
   114                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
   115                           	psect	text53,local,class=CODE,merge=1,delta=2
   116                           	psect	text54,local,class=CODE,merge=1,delta=2,group=1
   117                           	psect	text55,local,class=CODE,merge=1,delta=2,group=1
   118                           	psect	text56,local,class=CODE,merge=1,delta=2,group=1
   119                           	psect	text57,local,class=CODE,merge=1,delta=2,group=1
   120                           	psect	text58,local,class=CODE,merge=1,delta=2,group=1
   121                           	psect	text59,local,class=CODE,merge=1,delta=2,group=1
   122                           	psect	text60,local,class=CODE,merge=1,delta=2
   123                           	psect	text61,local,class=CODE,merge=1,delta=2
   124                           	psect	text62,local,class=CODE,merge=1,delta=2
   125                           	psect	text63,local,class=CODE,merge=1,delta=2
   126                           	psect	text64,local,class=CODE,merge=1,delta=2
   127                           	psect	text65,local,class=CODE,merge=1,delta=2
   128                           	psect	text66,local,class=CODE,merge=1,delta=2
   129                           	psect	text67,local,class=CODE,merge=1,delta=2
   130                           	psect	text68,local,class=CODE,merge=1,delta=2
   131                           	psect	text69,local,class=CODE,merge=1,delta=2
   132                           	psect	text70,local,class=CODE,merge=1,delta=2
   133                           	psect	text71,local,class=CODE,merge=1,delta=2
   134                           	psect	text72,local,class=CODE,merge=1,delta=2
   135                           	psect	text73,local,class=CODE,merge=1,delta=2
   136                           	psect	text74,local,class=CODE,merge=1,delta=2
   137                           	psect	text75,local,class=CODE,merge=1,delta=2
   138                           	psect	text76,local,class=CODE,merge=1,delta=2
   139                           	psect	text77,local,class=CODE,merge=1,delta=2
   140                           	psect	text78,local,class=CODE,merge=1,delta=2,group=1
   141                           	psect	intentry,global,class=CODE,delta=2
   142                           	psect	text7_split_1,local,class=CODE,merge=1,delta=2
   143                           	psect	text7_split_2,local,class=CODE,merge=1,delta=2
   144                           	dabs	1,0xCA0,32
   145                           	dabs	1,0xC20,80
   146                           	dabs	1,0xBE1,15
   147                           	dabs	1,0x2771,0,_messageBuffer
   148                           	dabs	1,0x7E,2
   149  0000                     
   150                           ; Version 2.05
   151                           ; Generated 20/12/2018 GMT
   152                           ; 
   153                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   154                           ; All rights reserved.
   155                           ; 
   156                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   157                           ; 
   158                           ; Redistribution and use in source and binary forms, with or without modification, are
   159                           ; permitted provided that the following conditions are met:
   160                           ; 
   161                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   162                           ;        conditions and the following disclaimer.
   163                           ; 
   164                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   165                           ;        of conditions and the following disclaimer in the documentation and/or other
   166                           ;        materials provided with the distribution.
   167                           ; 
   168                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   169                           ;        software without specific prior written permission.
   170                           ; 
   171                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   172                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   173                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   174                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   175                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   176                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   177                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   178                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   179                           ; 
   180                           ; 
   181                           ; Code-generator required, PIC16F1719 Definitions
   182                           ; 
   183                           ; SFR Addresses
   184  0000                     	;# 
   185  0001                     	;# 
   186  0002                     	;# 
   187  0003                     	;# 
   188  0004                     	;# 
   189  0005                     	;# 
   190  0006                     	;# 
   191  0007                     	;# 
   192  0008                     	;# 
   193  0009                     	;# 
   194  000A                     	;# 
   195  000B                     	;# 
   196  000C                     	;# 
   197  000D                     	;# 
   198  000E                     	;# 
   199  000F                     	;# 
   200  0010                     	;# 
   201  0011                     	;# 
   202  0012                     	;# 
   203  0013                     	;# 
   204  0015                     	;# 
   205  0016                     	;# 
   206  0016                     	;# 
   207  0017                     	;# 
   208  0018                     	;# 
   209  0019                     	;# 
   210  001A                     	;# 
   211  001B                     	;# 
   212  001C                     	;# 
   213  008C                     	;# 
   214  008D                     	;# 
   215  008E                     	;# 
   216  008F                     	;# 
   217  0090                     	;# 
   218  0091                     	;# 
   219  0092                     	;# 
   220  0093                     	;# 
   221  0095                     	;# 
   222  0096                     	;# 
   223  0097                     	;# 
   224  0098                     	;# 
   225  0099                     	;# 
   226  009A                     	;# 
   227  009B                     	;# 
   228  009B                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  009F                     	;# 
   233  010C                     	;# 
   234  010D                     	;# 
   235  010E                     	;# 
   236  010F                     	;# 
   237  0110                     	;# 
   238  0111                     	;# 
   239  0112                     	;# 
   240  0113                     	;# 
   241  0114                     	;# 
   242  0115                     	;# 
   243  0116                     	;# 
   244  0117                     	;# 
   245  0118                     	;# 
   246  0119                     	;# 
   247  011A                     	;# 
   248  011B                     	;# 
   249  011B                     	;# 
   250  011C                     	;# 
   251  018C                     	;# 
   252  018D                     	;# 
   253  018E                     	;# 
   254  018F                     	;# 
   255  0190                     	;# 
   256  0191                     	;# 
   257  0191                     	;# 
   258  0192                     	;# 
   259  0193                     	;# 
   260  0193                     	;# 
   261  0194                     	;# 
   262  0195                     	;# 
   263  0196                     	;# 
   264  0197                     	;# 
   265  0199                     	;# 
   266  0199                     	;# 
   267  0199                     	;# 
   268  019A                     	;# 
   269  019A                     	;# 
   270  019A                     	;# 
   271  019B                     	;# 
   272  019B                     	;# 
   273  019B                     	;# 
   274  019B                     	;# 
   275  019B                     	;# 
   276  019C                     	;# 
   277  019C                     	;# 
   278  019C                     	;# 
   279  019D                     	;# 
   280  019D                     	;# 
   281  019D                     	;# 
   282  019E                     	;# 
   283  019E                     	;# 
   284  019E                     	;# 
   285  019F                     	;# 
   286  019F                     	;# 
   287  019F                     	;# 
   288  019F                     	;# 
   289  019F                     	;# 
   290  020C                     	;# 
   291  020D                     	;# 
   292  020E                     	;# 
   293  020F                     	;# 
   294  0210                     	;# 
   295  0211                     	;# 
   296  0211                     	;# 
   297  0212                     	;# 
   298  0212                     	;# 
   299  0213                     	;# 
   300  0213                     	;# 
   301  0214                     	;# 
   302  0214                     	;# 
   303  0215                     	;# 
   304  0215                     	;# 
   305  0215                     	;# 
   306  0215                     	;# 
   307  0216                     	;# 
   308  0216                     	;# 
   309  0217                     	;# 
   310  0217                     	;# 
   311  028C                     	;# 
   312  028D                     	;# 
   313  028E                     	;# 
   314  028F                     	;# 
   315  0290                     	;# 
   316  0291                     	;# 
   317  0291                     	;# 
   318  0292                     	;# 
   319  0293                     	;# 
   320  0293                     	;# 
   321  0298                     	;# 
   322  0298                     	;# 
   323  0299                     	;# 
   324  029A                     	;# 
   325  029A                     	;# 
   326  029E                     	;# 
   327  030C                     	;# 
   328  030D                     	;# 
   329  030E                     	;# 
   330  030F                     	;# 
   331  0310                     	;# 
   332  038C                     	;# 
   333  038D                     	;# 
   334  038E                     	;# 
   335  038F                     	;# 
   336  0390                     	;# 
   337  0391                     	;# 
   338  0392                     	;# 
   339  0393                     	;# 
   340  0394                     	;# 
   341  0395                     	;# 
   342  0396                     	;# 
   343  0397                     	;# 
   344  0398                     	;# 
   345  0399                     	;# 
   346  039D                     	;# 
   347  039E                     	;# 
   348  039F                     	;# 
   349  0415                     	;# 
   350  0416                     	;# 
   351  0417                     	;# 
   352  041C                     	;# 
   353  041D                     	;# 
   354  041E                     	;# 
   355  0498                     	;# 
   356  0498                     	;# 
   357  0499                     	;# 
   358  049A                     	;# 
   359  049B                     	;# 
   360  049B                     	;# 
   361  049C                     	;# 
   362  049D                     	;# 
   363  049E                     	;# 
   364  049F                     	;# 
   365  0511                     	;# 
   366  0515                     	;# 
   367  0617                     	;# 
   368  0618                     	;# 
   369  0619                     	;# 
   370  0619                     	;# 
   371  061A                     	;# 
   372  061B                     	;# 
   373  061C                     	;# 
   374  061C                     	;# 
   375  0691                     	;# 
   376  0692                     	;# 
   377  0693                     	;# 
   378  0694                     	;# 
   379  0695                     	;# 
   380  0696                     	;# 
   381  0697                     	;# 
   382  0698                     	;# 
   383  0699                     	;# 
   384  069A                     	;# 
   385  069B                     	;# 
   386  069C                     	;# 
   387  069D                     	;# 
   388  069E                     	;# 
   389  069F                     	;# 
   390  0E0F                     	;# 
   391  0E10                     	;# 
   392  0E11                     	;# 
   393  0E12                     	;# 
   394  0E13                     	;# 
   395  0E14                     	;# 
   396  0E15                     	;# 
   397  0E17                     	;# 
   398  0E20                     	;# 
   399  0E21                     	;# 
   400  0E22                     	;# 
   401  0E24                     	;# 
   402  0E25                     	;# 
   403  0E28                     	;# 
   404  0E29                     	;# 
   405  0E2A                     	;# 
   406  0E2B                     	;# 
   407  0E90                     	;# 
   408  0E91                     	;# 
   409  0E92                     	;# 
   410  0E93                     	;# 
   411  0E94                     	;# 
   412  0E95                     	;# 
   413  0E96                     	;# 
   414  0E97                     	;# 
   415  0E98                     	;# 
   416  0E99                     	;# 
   417  0E9A                     	;# 
   418  0E9B                     	;# 
   419  0E9C                     	;# 
   420  0E9D                     	;# 
   421  0E9E                     	;# 
   422  0E9F                     	;# 
   423  0EA0                     	;# 
   424  0EA1                     	;# 
   425  0EA2                     	;# 
   426  0EA3                     	;# 
   427  0EA4                     	;# 
   428  0EA5                     	;# 
   429  0EA6                     	;# 
   430  0EA7                     	;# 
   431  0EA8                     	;# 
   432  0EA9                     	;# 
   433  0EAA                     	;# 
   434  0EAB                     	;# 
   435  0EAC                     	;# 
   436  0EAD                     	;# 
   437  0EAE                     	;# 
   438  0EAF                     	;# 
   439  0EB0                     	;# 
   440  0EB1                     	;# 
   441  0EB2                     	;# 
   442  0F0F                     	;# 
   443  0F10                     	;# 
   444  0F11                     	;# 
   445  0F12                     	;# 
   446  0F13                     	;# 
   447  0F14                     	;# 
   448  0F15                     	;# 
   449  0F16                     	;# 
   450  0F17                     	;# 
   451  0F18                     	;# 
   452  0F19                     	;# 
   453  0F1A                     	;# 
   454  0F1B                     	;# 
   455  0F1C                     	;# 
   456  0F1D                     	;# 
   457  0F1E                     	;# 
   458  0F1F                     	;# 
   459  0F20                     	;# 
   460  0F21                     	;# 
   461  0F22                     	;# 
   462  0F23                     	;# 
   463  0F24                     	;# 
   464  0F25                     	;# 
   465  0F26                     	;# 
   466  0F27                     	;# 
   467  0F28                     	;# 
   468  0F29                     	;# 
   469  0F2A                     	;# 
   470  0F2B                     	;# 
   471  0F2C                     	;# 
   472  0F2D                     	;# 
   473  0F2E                     	;# 
   474  0F2F                     	;# 
   475  0F30                     	;# 
   476  0F31                     	;# 
   477  0F32                     	;# 
   478  0F33                     	;# 
   479  0F34                     	;# 
   480  0F35                     	;# 
   481  0F36                     	;# 
   482  0F37                     	;# 
   483  0FE4                     	;# 
   484  0FE5                     	;# 
   485  0FE6                     	;# 
   486  0FE7                     	;# 
   487  0FE8                     	;# 
   488  0FE9                     	;# 
   489  0FEA                     	;# 
   490  0FEB                     	;# 
   491  0FED                     	;# 
   492  0FEE                     	;# 
   493  0FEF                     	;# 
   494  0000                     	;# 
   495  0001                     	;# 
   496  0002                     	;# 
   497  0003                     	;# 
   498  0004                     	;# 
   499  0005                     	;# 
   500  0006                     	;# 
   501  0007                     	;# 
   502  0008                     	;# 
   503  0009                     	;# 
   504  000A                     	;# 
   505  000B                     	;# 
   506  000C                     	;# 
   507  000D                     	;# 
   508  000E                     	;# 
   509  000F                     	;# 
   510  0010                     	;# 
   511  0011                     	;# 
   512  0012                     	;# 
   513  0013                     	;# 
   514  0015                     	;# 
   515  0016                     	;# 
   516  0016                     	;# 
   517  0017                     	;# 
   518  0018                     	;# 
   519  0019                     	;# 
   520  001A                     	;# 
   521  001B                     	;# 
   522  001C                     	;# 
   523  008C                     	;# 
   524  008D                     	;# 
   525  008E                     	;# 
   526  008F                     	;# 
   527  0090                     	;# 
   528  0091                     	;# 
   529  0092                     	;# 
   530  0093                     	;# 
   531  0095                     	;# 
   532  0096                     	;# 
   533  0097                     	;# 
   534  0098                     	;# 
   535  0099                     	;# 
   536  009A                     	;# 
   537  009B                     	;# 
   538  009B                     	;# 
   539  009C                     	;# 
   540  009D                     	;# 
   541  009E                     	;# 
   542  009F                     	;# 
   543  010C                     	;# 
   544  010D                     	;# 
   545  010E                     	;# 
   546  010F                     	;# 
   547  0110                     	;# 
   548  0111                     	;# 
   549  0112                     	;# 
   550  0113                     	;# 
   551  0114                     	;# 
   552  0115                     	;# 
   553  0116                     	;# 
   554  0117                     	;# 
   555  0118                     	;# 
   556  0119                     	;# 
   557  011A                     	;# 
   558  011B                     	;# 
   559  011B                     	;# 
   560  011C                     	;# 
   561  018C                     	;# 
   562  018D                     	;# 
   563  018E                     	;# 
   564  018F                     	;# 
   565  0190                     	;# 
   566  0191                     	;# 
   567  0191                     	;# 
   568  0192                     	;# 
   569  0193                     	;# 
   570  0193                     	;# 
   571  0194                     	;# 
   572  0195                     	;# 
   573  0196                     	;# 
   574  0197                     	;# 
   575  0199                     	;# 
   576  0199                     	;# 
   577  0199                     	;# 
   578  019A                     	;# 
   579  019A                     	;# 
   580  019A                     	;# 
   581  019B                     	;# 
   582  019B                     	;# 
   583  019B                     	;# 
   584  019B                     	;# 
   585  019B                     	;# 
   586  019C                     	;# 
   587  019C                     	;# 
   588  019C                     	;# 
   589  019D                     	;# 
   590  019D                     	;# 
   591  019D                     	;# 
   592  019E                     	;# 
   593  019E                     	;# 
   594  019E                     	;# 
   595  019F                     	;# 
   596  019F                     	;# 
   597  019F                     	;# 
   598  019F                     	;# 
   599  019F                     	;# 
   600  020C                     	;# 
   601  020D                     	;# 
   602  020E                     	;# 
   603  020F                     	;# 
   604  0210                     	;# 
   605  0211                     	;# 
   606  0211                     	;# 
   607  0212                     	;# 
   608  0212                     	;# 
   609  0213                     	;# 
   610  0213                     	;# 
   611  0214                     	;# 
   612  0214                     	;# 
   613  0215                     	;# 
   614  0215                     	;# 
   615  0215                     	;# 
   616  0215                     	;# 
   617  0216                     	;# 
   618  0216                     	;# 
   619  0217                     	;# 
   620  0217                     	;# 
   621  028C                     	;# 
   622  028D                     	;# 
   623  028E                     	;# 
   624  028F                     	;# 
   625  0290                     	;# 
   626  0291                     	;# 
   627  0291                     	;# 
   628  0292                     	;# 
   629  0293                     	;# 
   630  0293                     	;# 
   631  0298                     	;# 
   632  0298                     	;# 
   633  0299                     	;# 
   634  029A                     	;# 
   635  029A                     	;# 
   636  029E                     	;# 
   637  030C                     	;# 
   638  030D                     	;# 
   639  030E                     	;# 
   640  030F                     	;# 
   641  0310                     	;# 
   642  038C                     	;# 
   643  038D                     	;# 
   644  038E                     	;# 
   645  038F                     	;# 
   646  0390                     	;# 
   647  0391                     	;# 
   648  0392                     	;# 
   649  0393                     	;# 
   650  0394                     	;# 
   651  0395                     	;# 
   652  0396                     	;# 
   653  0397                     	;# 
   654  0398                     	;# 
   655  0399                     	;# 
   656  039D                     	;# 
   657  039E                     	;# 
   658  039F                     	;# 
   659  0415                     	;# 
   660  0416                     	;# 
   661  0417                     	;# 
   662  041C                     	;# 
   663  041D                     	;# 
   664  041E                     	;# 
   665  0498                     	;# 
   666  0498                     	;# 
   667  0499                     	;# 
   668  049A                     	;# 
   669  049B                     	;# 
   670  049B                     	;# 
   671  049C                     	;# 
   672  049D                     	;# 
   673  049E                     	;# 
   674  049F                     	;# 
   675  0511                     	;# 
   676  0515                     	;# 
   677  0617                     	;# 
   678  0618                     	;# 
   679  0619                     	;# 
   680  0619                     	;# 
   681  061A                     	;# 
   682  061B                     	;# 
   683  061C                     	;# 
   684  061C                     	;# 
   685  0691                     	;# 
   686  0692                     	;# 
   687  0693                     	;# 
   688  0694                     	;# 
   689  0695                     	;# 
   690  0696                     	;# 
   691  0697                     	;# 
   692  0698                     	;# 
   693  0699                     	;# 
   694  069A                     	;# 
   695  069B                     	;# 
   696  069C                     	;# 
   697  069D                     	;# 
   698  069E                     	;# 
   699  069F                     	;# 
   700  0E0F                     	;# 
   701  0E10                     	;# 
   702  0E11                     	;# 
   703  0E12                     	;# 
   704  0E13                     	;# 
   705  0E14                     	;# 
   706  0E15                     	;# 
   707  0E17                     	;# 
   708  0E20                     	;# 
   709  0E21                     	;# 
   710  0E22                     	;# 
   711  0E24                     	;# 
   712  0E25                     	;# 
   713  0E28                     	;# 
   714  0E29                     	;# 
   715  0E2A                     	;# 
   716  0E2B                     	;# 
   717  0E90                     	;# 
   718  0E91                     	;# 
   719  0E92                     	;# 
   720  0E93                     	;# 
   721  0E94                     	;# 
   722  0E95                     	;# 
   723  0E96                     	;# 
   724  0E97                     	;# 
   725  0E98                     	;# 
   726  0E99                     	;# 
   727  0E9A                     	;# 
   728  0E9B                     	;# 
   729  0E9C                     	;# 
   730  0E9D                     	;# 
   731  0E9E                     	;# 
   732  0E9F                     	;# 
   733  0EA0                     	;# 
   734  0EA1                     	;# 
   735  0EA2                     	;# 
   736  0EA3                     	;# 
   737  0EA4                     	;# 
   738  0EA5                     	;# 
   739  0EA6                     	;# 
   740  0EA7                     	;# 
   741  0EA8                     	;# 
   742  0EA9                     	;# 
   743  0EAA                     	;# 
   744  0EAB                     	;# 
   745  0EAC                     	;# 
   746  0EAD                     	;# 
   747  0EAE                     	;# 
   748  0EAF                     	;# 
   749  0EB0                     	;# 
   750  0EB1                     	;# 
   751  0EB2                     	;# 
   752  0F0F                     	;# 
   753  0F10                     	;# 
   754  0F11                     	;# 
   755  0F12                     	;# 
   756  0F13                     	;# 
   757  0F14                     	;# 
   758  0F15                     	;# 
   759  0F16                     	;# 
   760  0F17                     	;# 
   761  0F18                     	;# 
   762  0F19                     	;# 
   763  0F1A                     	;# 
   764  0F1B                     	;# 
   765  0F1C                     	;# 
   766  0F1D                     	;# 
   767  0F1E                     	;# 
   768  0F1F                     	;# 
   769  0F20                     	;# 
   770  0F21                     	;# 
   771  0F22                     	;# 
   772  0F23                     	;# 
   773  0F24                     	;# 
   774  0F25                     	;# 
   775  0F26                     	;# 
   776  0F27                     	;# 
   777  0F28                     	;# 
   778  0F29                     	;# 
   779  0F2A                     	;# 
   780  0F2B                     	;# 
   781  0F2C                     	;# 
   782  0F2D                     	;# 
   783  0F2E                     	;# 
   784  0F2F                     	;# 
   785  0F30                     	;# 
   786  0F31                     	;# 
   787  0F32                     	;# 
   788  0F33                     	;# 
   789  0F34                     	;# 
   790  0F35                     	;# 
   791  0F36                     	;# 
   792  0F37                     	;# 
   793  0FE4                     	;# 
   794  0FE5                     	;# 
   795  0FE6                     	;# 
   796  0FE7                     	;# 
   797  0FE8                     	;# 
   798  0FE9                     	;# 
   799  0FEA                     	;# 
   800  0FEB                     	;# 
   801  0FED                     	;# 
   802  0FEE                     	;# 
   803  0FEF                     	;# 
   804  0000                     	;# 
   805  0001                     	;# 
   806  0002                     	;# 
   807  0003                     	;# 
   808  0004                     	;# 
   809  0005                     	;# 
   810  0006                     	;# 
   811  0007                     	;# 
   812  0008                     	;# 
   813  0009                     	;# 
   814  000A                     	;# 
   815  000B                     	;# 
   816  000C                     	;# 
   817  000D                     	;# 
   818  000E                     	;# 
   819  000F                     	;# 
   820  0010                     	;# 
   821  0011                     	;# 
   822  0012                     	;# 
   823  0013                     	;# 
   824  0015                     	;# 
   825  0016                     	;# 
   826  0016                     	;# 
   827  0017                     	;# 
   828  0018                     	;# 
   829  0019                     	;# 
   830  001A                     	;# 
   831  001B                     	;# 
   832  001C                     	;# 
   833  008C                     	;# 
   834  008D                     	;# 
   835  008E                     	;# 
   836  008F                     	;# 
   837  0090                     	;# 
   838  0091                     	;# 
   839  0092                     	;# 
   840  0093                     	;# 
   841  0095                     	;# 
   842  0096                     	;# 
   843  0097                     	;# 
   844  0098                     	;# 
   845  0099                     	;# 
   846  009A                     	;# 
   847  009B                     	;# 
   848  009B                     	;# 
   849  009C                     	;# 
   850  009D                     	;# 
   851  009E                     	;# 
   852  009F                     	;# 
   853  010C                     	;# 
   854  010D                     	;# 
   855  010E                     	;# 
   856  010F                     	;# 
   857  0110                     	;# 
   858  0111                     	;# 
   859  0112                     	;# 
   860  0113                     	;# 
   861  0114                     	;# 
   862  0115                     	;# 
   863  0116                     	;# 
   864  0117                     	;# 
   865  0118                     	;# 
   866  0119                     	;# 
   867  011A                     	;# 
   868  011B                     	;# 
   869  011B                     	;# 
   870  011C                     	;# 
   871  018C                     	;# 
   872  018D                     	;# 
   873  018E                     	;# 
   874  018F                     	;# 
   875  0190                     	;# 
   876  0191                     	;# 
   877  0191                     	;# 
   878  0192                     	;# 
   879  0193                     	;# 
   880  0193                     	;# 
   881  0194                     	;# 
   882  0195                     	;# 
   883  0196                     	;# 
   884  0197                     	;# 
   885  0199                     	;# 
   886  0199                     	;# 
   887  0199                     	;# 
   888  019A                     	;# 
   889  019A                     	;# 
   890  019A                     	;# 
   891  019B                     	;# 
   892  019B                     	;# 
   893  019B                     	;# 
   894  019B                     	;# 
   895  019B                     	;# 
   896  019C                     	;# 
   897  019C                     	;# 
   898  019C                     	;# 
   899  019D                     	;# 
   900  019D                     	;# 
   901  019D                     	;# 
   902  019E                     	;# 
   903  019E                     	;# 
   904  019E                     	;# 
   905  019F                     	;# 
   906  019F                     	;# 
   907  019F                     	;# 
   908  019F                     	;# 
   909  019F                     	;# 
   910  020C                     	;# 
   911  020D                     	;# 
   912  020E                     	;# 
   913  020F                     	;# 
   914  0210                     	;# 
   915  0211                     	;# 
   916  0211                     	;# 
   917  0212                     	;# 
   918  0212                     	;# 
   919  0213                     	;# 
   920  0213                     	;# 
   921  0214                     	;# 
   922  0214                     	;# 
   923  0215                     	;# 
   924  0215                     	;# 
   925  0215                     	;# 
   926  0215                     	;# 
   927  0216                     	;# 
   928  0216                     	;# 
   929  0217                     	;# 
   930  0217                     	;# 
   931  028C                     	;# 
   932  028D                     	;# 
   933  028E                     	;# 
   934  028F                     	;# 
   935  0290                     	;# 
   936  0291                     	;# 
   937  0291                     	;# 
   938  0292                     	;# 
   939  0293                     	;# 
   940  0293                     	;# 
   941  0298                     	;# 
   942  0298                     	;# 
   943  0299                     	;# 
   944  029A                     	;# 
   945  029A                     	;# 
   946  029E                     	;# 
   947  030C                     	;# 
   948  030D                     	;# 
   949  030E                     	;# 
   950  030F                     	;# 
   951  0310                     	;# 
   952  038C                     	;# 
   953  038D                     	;# 
   954  038E                     	;# 
   955  038F                     	;# 
   956  0390                     	;# 
   957  0391                     	;# 
   958  0392                     	;# 
   959  0393                     	;# 
   960  0394                     	;# 
   961  0395                     	;# 
   962  0396                     	;# 
   963  0397                     	;# 
   964  0398                     	;# 
   965  0399                     	;# 
   966  039D                     	;# 
   967  039E                     	;# 
   968  039F                     	;# 
   969  0415                     	;# 
   970  0416                     	;# 
   971  0417                     	;# 
   972  041C                     	;# 
   973  041D                     	;# 
   974  041E                     	;# 
   975  0498                     	;# 
   976  0498                     	;# 
   977  0499                     	;# 
   978  049A                     	;# 
   979  049B                     	;# 
   980  049B                     	;# 
   981  049C                     	;# 
   982  049D                     	;# 
   983  049E                     	;# 
   984  049F                     	;# 
   985  0511                     	;# 
   986  0515                     	;# 
   987  0617                     	;# 
   988  0618                     	;# 
   989  0619                     	;# 
   990  0619                     	;# 
   991  061A                     	;# 
   992  061B                     	;# 
   993  061C                     	;# 
   994  061C                     	;# 
   995  0691                     	;# 
   996  0692                     	;# 
   997  0693                     	;# 
   998  0694                     	;# 
   999  0695                     	;# 
  1000  0696                     	;# 
  1001  0697                     	;# 
  1002  0698                     	;# 
  1003  0699                     	;# 
  1004  069A                     	;# 
  1005  069B                     	;# 
  1006  069C                     	;# 
  1007  069D                     	;# 
  1008  069E                     	;# 
  1009  069F                     	;# 
  1010  0E0F                     	;# 
  1011  0E10                     	;# 
  1012  0E11                     	;# 
  1013  0E12                     	;# 
  1014  0E13                     	;# 
  1015  0E14                     	;# 
  1016  0E15                     	;# 
  1017  0E17                     	;# 
  1018  0E20                     	;# 
  1019  0E21                     	;# 
  1020  0E22                     	;# 
  1021  0E24                     	;# 
  1022  0E25                     	;# 
  1023  0E28                     	;# 
  1024  0E29                     	;# 
  1025  0E2A                     	;# 
  1026  0E2B                     	;# 
  1027  0E90                     	;# 
  1028  0E91                     	;# 
  1029  0E92                     	;# 
  1030  0E93                     	;# 
  1031  0E94                     	;# 
  1032  0E95                     	;# 
  1033  0E96                     	;# 
  1034  0E97                     	;# 
  1035  0E98                     	;# 
  1036  0E99                     	;# 
  1037  0E9A                     	;# 
  1038  0E9B                     	;# 
  1039  0E9C                     	;# 
  1040  0E9D                     	;# 
  1041  0E9E                     	;# 
  1042  0E9F                     	;# 
  1043  0EA0                     	;# 
  1044  0EA1                     	;# 
  1045  0EA2                     	;# 
  1046  0EA3                     	;# 
  1047  0EA4                     	;# 
  1048  0EA5                     	;# 
  1049  0EA6                     	;# 
  1050  0EA7                     	;# 
  1051  0EA8                     	;# 
  1052  0EA9                     	;# 
  1053  0EAA                     	;# 
  1054  0EAB                     	;# 
  1055  0EAC                     	;# 
  1056  0EAD                     	;# 
  1057  0EAE                     	;# 
  1058  0EAF                     	;# 
  1059  0EB0                     	;# 
  1060  0EB1                     	;# 
  1061  0EB2                     	;# 
  1062  0F0F                     	;# 
  1063  0F10                     	;# 
  1064  0F11                     	;# 
  1065  0F12                     	;# 
  1066  0F13                     	;# 
  1067  0F14                     	;# 
  1068  0F15                     	;# 
  1069  0F16                     	;# 
  1070  0F17                     	;# 
  1071  0F18                     	;# 
  1072  0F19                     	;# 
  1073  0F1A                     	;# 
  1074  0F1B                     	;# 
  1075  0F1C                     	;# 
  1076  0F1D                     	;# 
  1077  0F1E                     	;# 
  1078  0F1F                     	;# 
  1079  0F20                     	;# 
  1080  0F21                     	;# 
  1081  0F22                     	;# 
  1082  0F23                     	;# 
  1083  0F24                     	;# 
  1084  0F25                     	;# 
  1085  0F26                     	;# 
  1086  0F27                     	;# 
  1087  0F28                     	;# 
  1088  0F29                     	;# 
  1089  0F2A                     	;# 
  1090  0F2B                     	;# 
  1091  0F2C                     	;# 
  1092  0F2D                     	;# 
  1093  0F2E                     	;# 
  1094  0F2F                     	;# 
  1095  0F30                     	;# 
  1096  0F31                     	;# 
  1097  0F32                     	;# 
  1098  0F33                     	;# 
  1099  0F34                     	;# 
  1100  0F35                     	;# 
  1101  0F36                     	;# 
  1102  0F37                     	;# 
  1103  0FE4                     	;# 
  1104  0FE5                     	;# 
  1105  0FE6                     	;# 
  1106  0FE7                     	;# 
  1107  0FE8                     	;# 
  1108  0FE9                     	;# 
  1109  0FEA                     	;# 
  1110  0FEB                     	;# 
  1111  0FED                     	;# 
  1112  0FEE                     	;# 
  1113  0FEF                     	;# 
  1114  0000                     	;# 
  1115  0001                     	;# 
  1116  0002                     	;# 
  1117  0003                     	;# 
  1118  0004                     	;# 
  1119  0005                     	;# 
  1120  0006                     	;# 
  1121  0007                     	;# 
  1122  0008                     	;# 
  1123  0009                     	;# 
  1124  000A                     	;# 
  1125  000B                     	;# 
  1126  000C                     	;# 
  1127  000D                     	;# 
  1128  000E                     	;# 
  1129  000F                     	;# 
  1130  0010                     	;# 
  1131  0011                     	;# 
  1132  0012                     	;# 
  1133  0013                     	;# 
  1134  0015                     	;# 
  1135  0016                     	;# 
  1136  0016                     	;# 
  1137  0017                     	;# 
  1138  0018                     	;# 
  1139  0019                     	;# 
  1140  001A                     	;# 
  1141  001B                     	;# 
  1142  001C                     	;# 
  1143  008C                     	;# 
  1144  008D                     	;# 
  1145  008E                     	;# 
  1146  008F                     	;# 
  1147  0090                     	;# 
  1148  0091                     	;# 
  1149  0092                     	;# 
  1150  0093                     	;# 
  1151  0095                     	;# 
  1152  0096                     	;# 
  1153  0097                     	;# 
  1154  0098                     	;# 
  1155  0099                     	;# 
  1156  009A                     	;# 
  1157  009B                     	;# 
  1158  009B                     	;# 
  1159  009C                     	;# 
  1160  009D                     	;# 
  1161  009E                     	;# 
  1162  009F                     	;# 
  1163  010C                     	;# 
  1164  010D                     	;# 
  1165  010E                     	;# 
  1166  010F                     	;# 
  1167  0110                     	;# 
  1168  0111                     	;# 
  1169  0112                     	;# 
  1170  0113                     	;# 
  1171  0114                     	;# 
  1172  0115                     	;# 
  1173  0116                     	;# 
  1174  0117                     	;# 
  1175  0118                     	;# 
  1176  0119                     	;# 
  1177  011A                     	;# 
  1178  011B                     	;# 
  1179  011B                     	;# 
  1180  011C                     	;# 
  1181  018C                     	;# 
  1182  018D                     	;# 
  1183  018E                     	;# 
  1184  018F                     	;# 
  1185  0190                     	;# 
  1186  0191                     	;# 
  1187  0191                     	;# 
  1188  0192                     	;# 
  1189  0193                     	;# 
  1190  0193                     	;# 
  1191  0194                     	;# 
  1192  0195                     	;# 
  1193  0196                     	;# 
  1194  0197                     	;# 
  1195  0199                     	;# 
  1196  0199                     	;# 
  1197  0199                     	;# 
  1198  019A                     	;# 
  1199  019A                     	;# 
  1200  019A                     	;# 
  1201  019B                     	;# 
  1202  019B                     	;# 
  1203  019B                     	;# 
  1204  019B                     	;# 
  1205  019B                     	;# 
  1206  019C                     	;# 
  1207  019C                     	;# 
  1208  019C                     	;# 
  1209  019D                     	;# 
  1210  019D                     	;# 
  1211  019D                     	;# 
  1212  019E                     	;# 
  1213  019E                     	;# 
  1214  019E                     	;# 
  1215  019F                     	;# 
  1216  019F                     	;# 
  1217  019F                     	;# 
  1218  019F                     	;# 
  1219  019F                     	;# 
  1220  020C                     	;# 
  1221  020D                     	;# 
  1222  020E                     	;# 
  1223  020F                     	;# 
  1224  0210                     	;# 
  1225  0211                     	;# 
  1226  0211                     	;# 
  1227  0212                     	;# 
  1228  0212                     	;# 
  1229  0213                     	;# 
  1230  0213                     	;# 
  1231  0214                     	;# 
  1232  0214                     	;# 
  1233  0215                     	;# 
  1234  0215                     	;# 
  1235  0215                     	;# 
  1236  0215                     	;# 
  1237  0216                     	;# 
  1238  0216                     	;# 
  1239  0217                     	;# 
  1240  0217                     	;# 
  1241  028C                     	;# 
  1242  028D                     	;# 
  1243  028E                     	;# 
  1244  028F                     	;# 
  1245  0290                     	;# 
  1246  0291                     	;# 
  1247  0291                     	;# 
  1248  0292                     	;# 
  1249  0293                     	;# 
  1250  0293                     	;# 
  1251  0298                     	;# 
  1252  0298                     	;# 
  1253  0299                     	;# 
  1254  029A                     	;# 
  1255  029A                     	;# 
  1256  029E                     	;# 
  1257  030C                     	;# 
  1258  030D                     	;# 
  1259  030E                     	;# 
  1260  030F                     	;# 
  1261  0310                     	;# 
  1262  038C                     	;# 
  1263  038D                     	;# 
  1264  038E                     	;# 
  1265  038F                     	;# 
  1266  0390                     	;# 
  1267  0391                     	;# 
  1268  0392                     	;# 
  1269  0393                     	;# 
  1270  0394                     	;# 
  1271  0395                     	;# 
  1272  0396                     	;# 
  1273  0397                     	;# 
  1274  0398                     	;# 
  1275  0399                     	;# 
  1276  039D                     	;# 
  1277  039E                     	;# 
  1278  039F                     	;# 
  1279  0415                     	;# 
  1280  0416                     	;# 
  1281  0417                     	;# 
  1282  041C                     	;# 
  1283  041D                     	;# 
  1284  041E                     	;# 
  1285  0498                     	;# 
  1286  0498                     	;# 
  1287  0499                     	;# 
  1288  049A                     	;# 
  1289  049B                     	;# 
  1290  049B                     	;# 
  1291  049C                     	;# 
  1292  049D                     	;# 
  1293  049E                     	;# 
  1294  049F                     	;# 
  1295  0511                     	;# 
  1296  0515                     	;# 
  1297  0617                     	;# 
  1298  0618                     	;# 
  1299  0619                     	;# 
  1300  0619                     	;# 
  1301  061A                     	;# 
  1302  061B                     	;# 
  1303  061C                     	;# 
  1304  061C                     	;# 
  1305  0691                     	;# 
  1306  0692                     	;# 
  1307  0693                     	;# 
  1308  0694                     	;# 
  1309  0695                     	;# 
  1310  0696                     	;# 
  1311  0697                     	;# 
  1312  0698                     	;# 
  1313  0699                     	;# 
  1314  069A                     	;# 
  1315  069B                     	;# 
  1316  069C                     	;# 
  1317  069D                     	;# 
  1318  069E                     	;# 
  1319  069F                     	;# 
  1320  0E0F                     	;# 
  1321  0E10                     	;# 
  1322  0E11                     	;# 
  1323  0E12                     	;# 
  1324  0E13                     	;# 
  1325  0E14                     	;# 
  1326  0E15                     	;# 
  1327  0E17                     	;# 
  1328  0E20                     	;# 
  1329  0E21                     	;# 
  1330  0E22                     	;# 
  1331  0E24                     	;# 
  1332  0E25                     	;# 
  1333  0E28                     	;# 
  1334  0E29                     	;# 
  1335  0E2A                     	;# 
  1336  0E2B                     	;# 
  1337  0E90                     	;# 
  1338  0E91                     	;# 
  1339  0E92                     	;# 
  1340  0E93                     	;# 
  1341  0E94                     	;# 
  1342  0E95                     	;# 
  1343  0E96                     	;# 
  1344  0E97                     	;# 
  1345  0E98                     	;# 
  1346  0E99                     	;# 
  1347  0E9A                     	;# 
  1348  0E9B                     	;# 
  1349  0E9C                     	;# 
  1350  0E9D                     	;# 
  1351  0E9E                     	;# 
  1352  0E9F                     	;# 
  1353  0EA0                     	;# 
  1354  0EA1                     	;# 
  1355  0EA2                     	;# 
  1356  0EA3                     	;# 
  1357  0EA4                     	;# 
  1358  0EA5                     	;# 
  1359  0EA6                     	;# 
  1360  0EA7                     	;# 
  1361  0EA8                     	;# 
  1362  0EA9                     	;# 
  1363  0EAA                     	;# 
  1364  0EAB                     	;# 
  1365  0EAC                     	;# 
  1366  0EAD                     	;# 
  1367  0EAE                     	;# 
  1368  0EAF                     	;# 
  1369  0EB0                     	;# 
  1370  0EB1                     	;# 
  1371  0EB2                     	;# 
  1372  0F0F                     	;# 
  1373  0F10                     	;# 
  1374  0F11                     	;# 
  1375  0F12                     	;# 
  1376  0F13                     	;# 
  1377  0F14                     	;# 
  1378  0F15                     	;# 
  1379  0F16                     	;# 
  1380  0F17                     	;# 
  1381  0F18                     	;# 
  1382  0F19                     	;# 
  1383  0F1A                     	;# 
  1384  0F1B                     	;# 
  1385  0F1C                     	;# 
  1386  0F1D                     	;# 
  1387  0F1E                     	;# 
  1388  0F1F                     	;# 
  1389  0F20                     	;# 
  1390  0F21                     	;# 
  1391  0F22                     	;# 
  1392  0F23                     	;# 
  1393  0F24                     	;# 
  1394  0F25                     	;# 
  1395  0F26                     	;# 
  1396  0F27                     	;# 
  1397  0F28                     	;# 
  1398  0F29                     	;# 
  1399  0F2A                     	;# 
  1400  0F2B                     	;# 
  1401  0F2C                     	;# 
  1402  0F2D                     	;# 
  1403  0F2E                     	;# 
  1404  0F2F                     	;# 
  1405  0F30                     	;# 
  1406  0F31                     	;# 
  1407  0F32                     	;# 
  1408  0F33                     	;# 
  1409  0F34                     	;# 
  1410  0F35                     	;# 
  1411  0F36                     	;# 
  1412  0F37                     	;# 
  1413  0FE4                     	;# 
  1414  0FE5                     	;# 
  1415  0FE6                     	;# 
  1416  0FE7                     	;# 
  1417  0FE8                     	;# 
  1418  0FE9                     	;# 
  1419  0FEA                     	;# 
  1420  0FEB                     	;# 
  1421  0FED                     	;# 
  1422  0FEE                     	;# 
  1423  0FEF                     	;# 
  1424  0000                     	;# 
  1425  0001                     	;# 
  1426  0002                     	;# 
  1427  0003                     	;# 
  1428  0004                     	;# 
  1429  0005                     	;# 
  1430  0006                     	;# 
  1431  0007                     	;# 
  1432  0008                     	;# 
  1433  0009                     	;# 
  1434  000A                     	;# 
  1435  000B                     	;# 
  1436  000C                     	;# 
  1437  000D                     	;# 
  1438  000E                     	;# 
  1439  000F                     	;# 
  1440  0010                     	;# 
  1441  0011                     	;# 
  1442  0012                     	;# 
  1443  0013                     	;# 
  1444  0015                     	;# 
  1445  0016                     	;# 
  1446  0016                     	;# 
  1447  0017                     	;# 
  1448  0018                     	;# 
  1449  0019                     	;# 
  1450  001A                     	;# 
  1451  001B                     	;# 
  1452  001C                     	;# 
  1453  008C                     	;# 
  1454  008D                     	;# 
  1455  008E                     	;# 
  1456  008F                     	;# 
  1457  0090                     	;# 
  1458  0091                     	;# 
  1459  0092                     	;# 
  1460  0093                     	;# 
  1461  0095                     	;# 
  1462  0096                     	;# 
  1463  0097                     	;# 
  1464  0098                     	;# 
  1465  0099                     	;# 
  1466  009A                     	;# 
  1467  009B                     	;# 
  1468  009B                     	;# 
  1469  009C                     	;# 
  1470  009D                     	;# 
  1471  009E                     	;# 
  1472  009F                     	;# 
  1473  010C                     	;# 
  1474  010D                     	;# 
  1475  010E                     	;# 
  1476  010F                     	;# 
  1477  0110                     	;# 
  1478  0111                     	;# 
  1479  0112                     	;# 
  1480  0113                     	;# 
  1481  0114                     	;# 
  1482  0115                     	;# 
  1483  0116                     	;# 
  1484  0117                     	;# 
  1485  0118                     	;# 
  1486  0119                     	;# 
  1487  011A                     	;# 
  1488  011B                     	;# 
  1489  011B                     	;# 
  1490  011C                     	;# 
  1491  018C                     	;# 
  1492  018D                     	;# 
  1493  018E                     	;# 
  1494  018F                     	;# 
  1495  0190                     	;# 
  1496  0191                     	;# 
  1497  0191                     	;# 
  1498  0192                     	;# 
  1499  0193                     	;# 
  1500  0193                     	;# 
  1501  0194                     	;# 
  1502  0195                     	;# 
  1503  0196                     	;# 
  1504  0197                     	;# 
  1505  0199                     	;# 
  1506  0199                     	;# 
  1507  0199                     	;# 
  1508  019A                     	;# 
  1509  019A                     	;# 
  1510  019A                     	;# 
  1511  019B                     	;# 
  1512  019B                     	;# 
  1513  019B                     	;# 
  1514  019B                     	;# 
  1515  019B                     	;# 
  1516  019C                     	;# 
  1517  019C                     	;# 
  1518  019C                     	;# 
  1519  019D                     	;# 
  1520  019D                     	;# 
  1521  019D                     	;# 
  1522  019E                     	;# 
  1523  019E                     	;# 
  1524  019E                     	;# 
  1525  019F                     	;# 
  1526  019F                     	;# 
  1527  019F                     	;# 
  1528  019F                     	;# 
  1529  019F                     	;# 
  1530  020C                     	;# 
  1531  020D                     	;# 
  1532  020E                     	;# 
  1533  020F                     	;# 
  1534  0210                     	;# 
  1535  0211                     	;# 
  1536  0211                     	;# 
  1537  0212                     	;# 
  1538  0212                     	;# 
  1539  0213                     	;# 
  1540  0213                     	;# 
  1541  0214                     	;# 
  1542  0214                     	;# 
  1543  0215                     	;# 
  1544  0215                     	;# 
  1545  0215                     	;# 
  1546  0215                     	;# 
  1547  0216                     	;# 
  1548  0216                     	;# 
  1549  0217                     	;# 
  1550  0217                     	;# 
  1551  028C                     	;# 
  1552  028D                     	;# 
  1553  028E                     	;# 
  1554  028F                     	;# 
  1555  0290                     	;# 
  1556  0291                     	;# 
  1557  0291                     	;# 
  1558  0292                     	;# 
  1559  0293                     	;# 
  1560  0293                     	;# 
  1561  0298                     	;# 
  1562  0298                     	;# 
  1563  0299                     	;# 
  1564  029A                     	;# 
  1565  029A                     	;# 
  1566  029E                     	;# 
  1567  030C                     	;# 
  1568  030D                     	;# 
  1569  030E                     	;# 
  1570  030F                     	;# 
  1571  0310                     	;# 
  1572  038C                     	;# 
  1573  038D                     	;# 
  1574  038E                     	;# 
  1575  038F                     	;# 
  1576  0390                     	;# 
  1577  0391                     	;# 
  1578  0392                     	;# 
  1579  0393                     	;# 
  1580  0394                     	;# 
  1581  0395                     	;# 
  1582  0396                     	;# 
  1583  0397                     	;# 
  1584  0398                     	;# 
  1585  0399                     	;# 
  1586  039D                     	;# 
  1587  039E                     	;# 
  1588  039F                     	;# 
  1589  0415                     	;# 
  1590  0416                     	;# 
  1591  0417                     	;# 
  1592  041C                     	;# 
  1593  041D                     	;# 
  1594  041E                     	;# 
  1595  0498                     	;# 
  1596  0498                     	;# 
  1597  0499                     	;# 
  1598  049A                     	;# 
  1599  049B                     	;# 
  1600  049B                     	;# 
  1601  049C                     	;# 
  1602  049D                     	;# 
  1603  049E                     	;# 
  1604  049F                     	;# 
  1605  0511                     	;# 
  1606  0515                     	;# 
  1607  0617                     	;# 
  1608  0618                     	;# 
  1609  0619                     	;# 
  1610  0619                     	;# 
  1611  061A                     	;# 
  1612  061B                     	;# 
  1613  061C                     	;# 
  1614  061C                     	;# 
  1615  0691                     	;# 
  1616  0692                     	;# 
  1617  0693                     	;# 
  1618  0694                     	;# 
  1619  0695                     	;# 
  1620  0696                     	;# 
  1621  0697                     	;# 
  1622  0698                     	;# 
  1623  0699                     	;# 
  1624  069A                     	;# 
  1625  069B                     	;# 
  1626  069C                     	;# 
  1627  069D                     	;# 
  1628  069E                     	;# 
  1629  069F                     	;# 
  1630  0E0F                     	;# 
  1631  0E10                     	;# 
  1632  0E11                     	;# 
  1633  0E12                     	;# 
  1634  0E13                     	;# 
  1635  0E14                     	;# 
  1636  0E15                     	;# 
  1637  0E17                     	;# 
  1638  0E20                     	;# 
  1639  0E21                     	;# 
  1640  0E22                     	;# 
  1641  0E24                     	;# 
  1642  0E25                     	;# 
  1643  0E28                     	;# 
  1644  0E29                     	;# 
  1645  0E2A                     	;# 
  1646  0E2B                     	;# 
  1647  0E90                     	;# 
  1648  0E91                     	;# 
  1649  0E92                     	;# 
  1650  0E93                     	;# 
  1651  0E94                     	;# 
  1652  0E95                     	;# 
  1653  0E96                     	;# 
  1654  0E97                     	;# 
  1655  0E98                     	;# 
  1656  0E99                     	;# 
  1657  0E9A                     	;# 
  1658  0E9B                     	;# 
  1659  0E9C                     	;# 
  1660  0E9D                     	;# 
  1661  0E9E                     	;# 
  1662  0E9F                     	;# 
  1663  0EA0                     	;# 
  1664  0EA1                     	;# 
  1665  0EA2                     	;# 
  1666  0EA3                     	;# 
  1667  0EA4                     	;# 
  1668  0EA5                     	;# 
  1669  0EA6                     	;# 
  1670  0EA7                     	;# 
  1671  0EA8                     	;# 
  1672  0EA9                     	;# 
  1673  0EAA                     	;# 
  1674  0EAB                     	;# 
  1675  0EAC                     	;# 
  1676  0EAD                     	;# 
  1677  0EAE                     	;# 
  1678  0EAF                     	;# 
  1679  0EB0                     	;# 
  1680  0EB1                     	;# 
  1681  0EB2                     	;# 
  1682  0F0F                     	;# 
  1683  0F10                     	;# 
  1684  0F11                     	;# 
  1685  0F12                     	;# 
  1686  0F13                     	;# 
  1687  0F14                     	;# 
  1688  0F15                     	;# 
  1689  0F16                     	;# 
  1690  0F17                     	;# 
  1691  0F18                     	;# 
  1692  0F19                     	;# 
  1693  0F1A                     	;# 
  1694  0F1B                     	;# 
  1695  0F1C                     	;# 
  1696  0F1D                     	;# 
  1697  0F1E                     	;# 
  1698  0F1F                     	;# 
  1699  0F20                     	;# 
  1700  0F21                     	;# 
  1701  0F22                     	;# 
  1702  0F23                     	;# 
  1703  0F24                     	;# 
  1704  0F25                     	;# 
  1705  0F26                     	;# 
  1706  0F27                     	;# 
  1707  0F28                     	;# 
  1708  0F29                     	;# 
  1709  0F2A                     	;# 
  1710  0F2B                     	;# 
  1711  0F2C                     	;# 
  1712  0F2D                     	;# 
  1713  0F2E                     	;# 
  1714  0F2F                     	;# 
  1715  0F30                     	;# 
  1716  0F31                     	;# 
  1717  0F32                     	;# 
  1718  0F33                     	;# 
  1719  0F34                     	;# 
  1720  0F35                     	;# 
  1721  0F36                     	;# 
  1722  0F37                     	;# 
  1723  0FE4                     	;# 
  1724  0FE5                     	;# 
  1725  0FE6                     	;# 
  1726  0FE7                     	;# 
  1727  0FE8                     	;# 
  1728  0FE9                     	;# 
  1729  0FEA                     	;# 
  1730  0FEB                     	;# 
  1731  0FED                     	;# 
  1732  0FEE                     	;# 
  1733  0FEF                     	;# 
  1734  0000                     	;# 
  1735  0001                     	;# 
  1736  0002                     	;# 
  1737  0003                     	;# 
  1738  0004                     	;# 
  1739  0005                     	;# 
  1740  0006                     	;# 
  1741  0007                     	;# 
  1742  0008                     	;# 
  1743  0009                     	;# 
  1744  000A                     	;# 
  1745  000B                     	;# 
  1746  000C                     	;# 
  1747  000D                     	;# 
  1748  000E                     	;# 
  1749  000F                     	;# 
  1750  0010                     	;# 
  1751  0011                     	;# 
  1752  0012                     	;# 
  1753  0013                     	;# 
  1754  0015                     	;# 
  1755  0016                     	;# 
  1756  0016                     	;# 
  1757  0017                     	;# 
  1758  0018                     	;# 
  1759  0019                     	;# 
  1760  001A                     	;# 
  1761  001B                     	;# 
  1762  001C                     	;# 
  1763  008C                     	;# 
  1764  008D                     	;# 
  1765  008E                     	;# 
  1766  008F                     	;# 
  1767  0090                     	;# 
  1768  0091                     	;# 
  1769  0092                     	;# 
  1770  0093                     	;# 
  1771  0095                     	;# 
  1772  0096                     	;# 
  1773  0097                     	;# 
  1774  0098                     	;# 
  1775  0099                     	;# 
  1776  009A                     	;# 
  1777  009B                     	;# 
  1778  009B                     	;# 
  1779  009C                     	;# 
  1780  009D                     	;# 
  1781  009E                     	;# 
  1782  009F                     	;# 
  1783  010C                     	;# 
  1784  010D                     	;# 
  1785  010E                     	;# 
  1786  010F                     	;# 
  1787  0110                     	;# 
  1788  0111                     	;# 
  1789  0112                     	;# 
  1790  0113                     	;# 
  1791  0114                     	;# 
  1792  0115                     	;# 
  1793  0116                     	;# 
  1794  0117                     	;# 
  1795  0118                     	;# 
  1796  0119                     	;# 
  1797  011A                     	;# 
  1798  011B                     	;# 
  1799  011B                     	;# 
  1800  011C                     	;# 
  1801  018C                     	;# 
  1802  018D                     	;# 
  1803  018E                     	;# 
  1804  018F                     	;# 
  1805  0190                     	;# 
  1806  0191                     	;# 
  1807  0191                     	;# 
  1808  0192                     	;# 
  1809  0193                     	;# 
  1810  0193                     	;# 
  1811  0194                     	;# 
  1812  0195                     	;# 
  1813  0196                     	;# 
  1814  0197                     	;# 
  1815  0199                     	;# 
  1816  0199                     	;# 
  1817  0199                     	;# 
  1818  019A                     	;# 
  1819  019A                     	;# 
  1820  019A                     	;# 
  1821  019B                     	;# 
  1822  019B                     	;# 
  1823  019B                     	;# 
  1824  019B                     	;# 
  1825  019B                     	;# 
  1826  019C                     	;# 
  1827  019C                     	;# 
  1828  019C                     	;# 
  1829  019D                     	;# 
  1830  019D                     	;# 
  1831  019D                     	;# 
  1832  019E                     	;# 
  1833  019E                     	;# 
  1834  019E                     	;# 
  1835  019F                     	;# 
  1836  019F                     	;# 
  1837  019F                     	;# 
  1838  019F                     	;# 
  1839  019F                     	;# 
  1840  020C                     	;# 
  1841  020D                     	;# 
  1842  020E                     	;# 
  1843  020F                     	;# 
  1844  0210                     	;# 
  1845  0211                     	;# 
  1846  0211                     	;# 
  1847  0212                     	;# 
  1848  0212                     	;# 
  1849  0213                     	;# 
  1850  0213                     	;# 
  1851  0214                     	;# 
  1852  0214                     	;# 
  1853  0215                     	;# 
  1854  0215                     	;# 
  1855  0215                     	;# 
  1856  0215                     	;# 
  1857  0216                     	;# 
  1858  0216                     	;# 
  1859  0217                     	;# 
  1860  0217                     	;# 
  1861  028C                     	;# 
  1862  028D                     	;# 
  1863  028E                     	;# 
  1864  028F                     	;# 
  1865  0290                     	;# 
  1866  0291                     	;# 
  1867  0291                     	;# 
  1868  0292                     	;# 
  1869  0293                     	;# 
  1870  0293                     	;# 
  1871  0298                     	;# 
  1872  0298                     	;# 
  1873  0299                     	;# 
  1874  029A                     	;# 
  1875  029A                     	;# 
  1876  029E                     	;# 
  1877  030C                     	;# 
  1878  030D                     	;# 
  1879  030E                     	;# 
  1880  030F                     	;# 
  1881  0310                     	;# 
  1882  038C                     	;# 
  1883  038D                     	;# 
  1884  038E                     	;# 
  1885  038F                     	;# 
  1886  0390                     	;# 
  1887  0391                     	;# 
  1888  0392                     	;# 
  1889  0393                     	;# 
  1890  0394                     	;# 
  1891  0395                     	;# 
  1892  0396                     	;# 
  1893  0397                     	;# 
  1894  0398                     	;# 
  1895  0399                     	;# 
  1896  039D                     	;# 
  1897  039E                     	;# 
  1898  039F                     	;# 
  1899  0415                     	;# 
  1900  0416                     	;# 
  1901  0417                     	;# 
  1902  041C                     	;# 
  1903  041D                     	;# 
  1904  041E                     	;# 
  1905  0498                     	;# 
  1906  0498                     	;# 
  1907  0499                     	;# 
  1908  049A                     	;# 
  1909  049B                     	;# 
  1910  049B                     	;# 
  1911  049C                     	;# 
  1912  049D                     	;# 
  1913  049E                     	;# 
  1914  049F                     	;# 
  1915  0511                     	;# 
  1916  0515                     	;# 
  1917  0617                     	;# 
  1918  0618                     	;# 
  1919  0619                     	;# 
  1920  0619                     	;# 
  1921  061A                     	;# 
  1922  061B                     	;# 
  1923  061C                     	;# 
  1924  061C                     	;# 
  1925  0691                     	;# 
  1926  0692                     	;# 
  1927  0693                     	;# 
  1928  0694                     	;# 
  1929  0695                     	;# 
  1930  0696                     	;# 
  1931  0697                     	;# 
  1932  0698                     	;# 
  1933  0699                     	;# 
  1934  069A                     	;# 
  1935  069B                     	;# 
  1936  069C                     	;# 
  1937  069D                     	;# 
  1938  069E                     	;# 
  1939  069F                     	;# 
  1940  0E0F                     	;# 
  1941  0E10                     	;# 
  1942  0E11                     	;# 
  1943  0E12                     	;# 
  1944  0E13                     	;# 
  1945  0E14                     	;# 
  1946  0E15                     	;# 
  1947  0E17                     	;# 
  1948  0E20                     	;# 
  1949  0E21                     	;# 
  1950  0E22                     	;# 
  1951  0E24                     	;# 
  1952  0E25                     	;# 
  1953  0E28                     	;# 
  1954  0E29                     	;# 
  1955  0E2A                     	;# 
  1956  0E2B                     	;# 
  1957  0E90                     	;# 
  1958  0E91                     	;# 
  1959  0E92                     	;# 
  1960  0E93                     	;# 
  1961  0E94                     	;# 
  1962  0E95                     	;# 
  1963  0E96                     	;# 
  1964  0E97                     	;# 
  1965  0E98                     	;# 
  1966  0E99                     	;# 
  1967  0E9A                     	;# 
  1968  0E9B                     	;# 
  1969  0E9C                     	;# 
  1970  0E9D                     	;# 
  1971  0E9E                     	;# 
  1972  0E9F                     	;# 
  1973  0EA0                     	;# 
  1974  0EA1                     	;# 
  1975  0EA2                     	;# 
  1976  0EA3                     	;# 
  1977  0EA4                     	;# 
  1978  0EA5                     	;# 
  1979  0EA6                     	;# 
  1980  0EA7                     	;# 
  1981  0EA8                     	;# 
  1982  0EA9                     	;# 
  1983  0EAA                     	;# 
  1984  0EAB                     	;# 
  1985  0EAC                     	;# 
  1986  0EAD                     	;# 
  1987  0EAE                     	;# 
  1988  0EAF                     	;# 
  1989  0EB0                     	;# 
  1990  0EB1                     	;# 
  1991  0EB2                     	;# 
  1992  0F0F                     	;# 
  1993  0F10                     	;# 
  1994  0F11                     	;# 
  1995  0F12                     	;# 
  1996  0F13                     	;# 
  1997  0F14                     	;# 
  1998  0F15                     	;# 
  1999  0F16                     	;# 
  2000  0F17                     	;# 
  2001  0F18                     	;# 
  2002  0F19                     	;# 
  2003  0F1A                     	;# 
  2004  0F1B                     	;# 
  2005  0F1C                     	;# 
  2006  0F1D                     	;# 
  2007  0F1E                     	;# 
  2008  0F1F                     	;# 
  2009  0F20                     	;# 
  2010  0F21                     	;# 
  2011  0F22                     	;# 
  2012  0F23                     	;# 
  2013  0F24                     	;# 
  2014  0F25                     	;# 
  2015  0F26                     	;# 
  2016  0F27                     	;# 
  2017  0F28                     	;# 
  2018  0F29                     	;# 
  2019  0F2A                     	;# 
  2020  0F2B                     	;# 
  2021  0F2C                     	;# 
  2022  0F2D                     	;# 
  2023  0F2E                     	;# 
  2024  0F2F                     	;# 
  2025  0F30                     	;# 
  2026  0F31                     	;# 
  2027  0F32                     	;# 
  2028  0F33                     	;# 
  2029  0F34                     	;# 
  2030  0F35                     	;# 
  2031  0F36                     	;# 
  2032  0F37                     	;# 
  2033  0FE4                     	;# 
  2034  0FE5                     	;# 
  2035  0FE6                     	;# 
  2036  0FE7                     	;# 
  2037  0FE8                     	;# 
  2038  0FE9                     	;# 
  2039  0FEA                     	;# 
  2040  0FEB                     	;# 
  2041  0FED                     	;# 
  2042  0FEE                     	;# 
  2043  0FEF                     	;# 
  2044  0000                     	;# 
  2045  0001                     	;# 
  2046  0002                     	;# 
  2047  0003                     	;# 
  2048  0004                     	;# 
  2049  0005                     	;# 
  2050  0006                     	;# 
  2051  0007                     	;# 
  2052  0008                     	;# 
  2053  0009                     	;# 
  2054  000A                     	;# 
  2055  000B                     	;# 
  2056  000C                     	;# 
  2057  000D                     	;# 
  2058  000E                     	;# 
  2059  000F                     	;# 
  2060  0010                     	;# 
  2061  0011                     	;# 
  2062  0012                     	;# 
  2063  0013                     	;# 
  2064  0015                     	;# 
  2065  0016                     	;# 
  2066  0016                     	;# 
  2067  0017                     	;# 
  2068  0018                     	;# 
  2069  0019                     	;# 
  2070  001A                     	;# 
  2071  001B                     	;# 
  2072  001C                     	;# 
  2073  008C                     	;# 
  2074  008D                     	;# 
  2075  008E                     	;# 
  2076  008F                     	;# 
  2077  0090                     	;# 
  2078  0091                     	;# 
  2079  0092                     	;# 
  2080  0093                     	;# 
  2081  0095                     	;# 
  2082  0096                     	;# 
  2083  0097                     	;# 
  2084  0098                     	;# 
  2085  0099                     	;# 
  2086  009A                     	;# 
  2087  009B                     	;# 
  2088  009B                     	;# 
  2089  009C                     	;# 
  2090  009D                     	;# 
  2091  009E                     	;# 
  2092  009F                     	;# 
  2093  010C                     	;# 
  2094  010D                     	;# 
  2095  010E                     	;# 
  2096  010F                     	;# 
  2097  0110                     	;# 
  2098  0111                     	;# 
  2099  0112                     	;# 
  2100  0113                     	;# 
  2101  0114                     	;# 
  2102  0115                     	;# 
  2103  0116                     	;# 
  2104  0117                     	;# 
  2105  0118                     	;# 
  2106  0119                     	;# 
  2107  011A                     	;# 
  2108  011B                     	;# 
  2109  011B                     	;# 
  2110  011C                     	;# 
  2111  018C                     	;# 
  2112  018D                     	;# 
  2113  018E                     	;# 
  2114  018F                     	;# 
  2115  0190                     	;# 
  2116  0191                     	;# 
  2117  0191                     	;# 
  2118  0192                     	;# 
  2119  0193                     	;# 
  2120  0193                     	;# 
  2121  0194                     	;# 
  2122  0195                     	;# 
  2123  0196                     	;# 
  2124  0197                     	;# 
  2125  0199                     	;# 
  2126  0199                     	;# 
  2127  0199                     	;# 
  2128  019A                     	;# 
  2129  019A                     	;# 
  2130  019A                     	;# 
  2131  019B                     	;# 
  2132  019B                     	;# 
  2133  019B                     	;# 
  2134  019B                     	;# 
  2135  019B                     	;# 
  2136  019C                     	;# 
  2137  019C                     	;# 
  2138  019C                     	;# 
  2139  019D                     	;# 
  2140  019D                     	;# 
  2141  019D                     	;# 
  2142  019E                     	;# 
  2143  019E                     	;# 
  2144  019E                     	;# 
  2145  019F                     	;# 
  2146  019F                     	;# 
  2147  019F                     	;# 
  2148  019F                     	;# 
  2149  019F                     	;# 
  2150  020C                     	;# 
  2151  020D                     	;# 
  2152  020E                     	;# 
  2153  020F                     	;# 
  2154  0210                     	;# 
  2155  0211                     	;# 
  2156  0211                     	;# 
  2157  0212                     	;# 
  2158  0212                     	;# 
  2159  0213                     	;# 
  2160  0213                     	;# 
  2161  0214                     	;# 
  2162  0214                     	;# 
  2163  0215                     	;# 
  2164  0215                     	;# 
  2165  0215                     	;# 
  2166  0215                     	;# 
  2167  0216                     	;# 
  2168  0216                     	;# 
  2169  0217                     	;# 
  2170  0217                     	;# 
  2171  028C                     	;# 
  2172  028D                     	;# 
  2173  028E                     	;# 
  2174  028F                     	;# 
  2175  0290                     	;# 
  2176  0291                     	;# 
  2177  0291                     	;# 
  2178  0292                     	;# 
  2179  0293                     	;# 
  2180  0293                     	;# 
  2181  0298                     	;# 
  2182  0298                     	;# 
  2183  0299                     	;# 
  2184  029A                     	;# 
  2185  029A                     	;# 
  2186  029E                     	;# 
  2187  030C                     	;# 
  2188  030D                     	;# 
  2189  030E                     	;# 
  2190  030F                     	;# 
  2191  0310                     	;# 
  2192  038C                     	;# 
  2193  038D                     	;# 
  2194  038E                     	;# 
  2195  038F                     	;# 
  2196  0390                     	;# 
  2197  0391                     	;# 
  2198  0392                     	;# 
  2199  0393                     	;# 
  2200  0394                     	;# 
  2201  0395                     	;# 
  2202  0396                     	;# 
  2203  0397                     	;# 
  2204  0398                     	;# 
  2205  0399                     	;# 
  2206  039D                     	;# 
  2207  039E                     	;# 
  2208  039F                     	;# 
  2209  0415                     	;# 
  2210  0416                     	;# 
  2211  0417                     	;# 
  2212  041C                     	;# 
  2213  041D                     	;# 
  2214  041E                     	;# 
  2215  0498                     	;# 
  2216  0498                     	;# 
  2217  0499                     	;# 
  2218  049A                     	;# 
  2219  049B                     	;# 
  2220  049B                     	;# 
  2221  049C                     	;# 
  2222  049D                     	;# 
  2223  049E                     	;# 
  2224  049F                     	;# 
  2225  0511                     	;# 
  2226  0515                     	;# 
  2227  0617                     	;# 
  2228  0618                     	;# 
  2229  0619                     	;# 
  2230  0619                     	;# 
  2231  061A                     	;# 
  2232  061B                     	;# 
  2233  061C                     	;# 
  2234  061C                     	;# 
  2235  0691                     	;# 
  2236  0692                     	;# 
  2237  0693                     	;# 
  2238  0694                     	;# 
  2239  0695                     	;# 
  2240  0696                     	;# 
  2241  0697                     	;# 
  2242  0698                     	;# 
  2243  0699                     	;# 
  2244  069A                     	;# 
  2245  069B                     	;# 
  2246  069C                     	;# 
  2247  069D                     	;# 
  2248  069E                     	;# 
  2249  069F                     	;# 
  2250  0E0F                     	;# 
  2251  0E10                     	;# 
  2252  0E11                     	;# 
  2253  0E12                     	;# 
  2254  0E13                     	;# 
  2255  0E14                     	;# 
  2256  0E15                     	;# 
  2257  0E17                     	;# 
  2258  0E20                     	;# 
  2259  0E21                     	;# 
  2260  0E22                     	;# 
  2261  0E24                     	;# 
  2262  0E25                     	;# 
  2263  0E28                     	;# 
  2264  0E29                     	;# 
  2265  0E2A                     	;# 
  2266  0E2B                     	;# 
  2267  0E90                     	;# 
  2268  0E91                     	;# 
  2269  0E92                     	;# 
  2270  0E93                     	;# 
  2271  0E94                     	;# 
  2272  0E95                     	;# 
  2273  0E96                     	;# 
  2274  0E97                     	;# 
  2275  0E98                     	;# 
  2276  0E99                     	;# 
  2277  0E9A                     	;# 
  2278  0E9B                     	;# 
  2279  0E9C                     	;# 
  2280  0E9D                     	;# 
  2281  0E9E                     	;# 
  2282  0E9F                     	;# 
  2283  0EA0                     	;# 
  2284  0EA1                     	;# 
  2285  0EA2                     	;# 
  2286  0EA3                     	;# 
  2287  0EA4                     	;# 
  2288  0EA5                     	;# 
  2289  0EA6                     	;# 
  2290  0EA7                     	;# 
  2291  0EA8                     	;# 
  2292  0EA9                     	;# 
  2293  0EAA                     	;# 
  2294  0EAB                     	;# 
  2295  0EAC                     	;# 
  2296  0EAD                     	;# 
  2297  0EAE                     	;# 
  2298  0EAF                     	;# 
  2299  0EB0                     	;# 
  2300  0EB1                     	;# 
  2301  0EB2                     	;# 
  2302  0F0F                     	;# 
  2303  0F10                     	;# 
  2304  0F11                     	;# 
  2305  0F12                     	;# 
  2306  0F13                     	;# 
  2307  0F14                     	;# 
  2308  0F15                     	;# 
  2309  0F16                     	;# 
  2310  0F17                     	;# 
  2311  0F18                     	;# 
  2312  0F19                     	;# 
  2313  0F1A                     	;# 
  2314  0F1B                     	;# 
  2315  0F1C                     	;# 
  2316  0F1D                     	;# 
  2317  0F1E                     	;# 
  2318  0F1F                     	;# 
  2319  0F20                     	;# 
  2320  0F21                     	;# 
  2321  0F22                     	;# 
  2322  0F23                     	;# 
  2323  0F24                     	;# 
  2324  0F25                     	;# 
  2325  0F26                     	;# 
  2326  0F27                     	;# 
  2327  0F28                     	;# 
  2328  0F29                     	;# 
  2329  0F2A                     	;# 
  2330  0F2B                     	;# 
  2331  0F2C                     	;# 
  2332  0F2D                     	;# 
  2333  0F2E                     	;# 
  2334  0F2F                     	;# 
  2335  0F30                     	;# 
  2336  0F31                     	;# 
  2337  0F32                     	;# 
  2338  0F33                     	;# 
  2339  0F34                     	;# 
  2340  0F35                     	;# 
  2341  0F36                     	;# 
  2342  0F37                     	;# 
  2343  0FE4                     	;# 
  2344  0FE5                     	;# 
  2345  0FE6                     	;# 
  2346  0FE7                     	;# 
  2347  0FE8                     	;# 
  2348  0FE9                     	;# 
  2349  0FEA                     	;# 
  2350  0FEB                     	;# 
  2351  0FED                     	;# 
  2352  0FEE                     	;# 
  2353  0FEF                     	;_messageBuffer
  2354                           
  2355                           	psect	idataBANK3
  2356  1800                     __pidataBANK3:	
  2357                           
  2358                           ;initializer for stoa@F1152
  2359  1800  3428               	retlw	40
  2360  1801  346E               	retlw	110
  2361  1802  3475               	retlw	117
  2362  1803  346C               	retlw	108
  2363  1804  346C               	retlw	108
  2364  1805  3429               	retlw	41
  2365  1806  3400               	retlw	0
  2366                           
  2367                           ;initializer for _thermistorBetaValue
  2368  1807  346B               	retlw	107
  2369  1808  340D               	retlw	13
  2370                           
  2371                           	psect	stringtext1
  2372  3897                     __pstringtext1:	
  2373  3897                     _OCD_threshold_setting:	
  2374  3897  3411               	retlw	17
  2375  3898  3400               	retlw	0
  2376  3899  3416               	retlw	22
  2377  389A  3400               	retlw	0
  2378  389B  341C               	retlw	28
  2379  389C  3400               	retlw	0
  2380  389D  3421               	retlw	33
  2381  389E  3400               	retlw	0
  2382  389F  3427               	retlw	39
  2383  38A0  3400               	retlw	0
  2384  38A1  342C               	retlw	44
  2385  38A2  3400               	retlw	0
  2386  38A3  3432               	retlw	50
  2387  38A4  3400               	retlw	0
  2388  38A5  3438               	retlw	56
  2389  38A6  3400               	retlw	0
  2390  38A7  343D               	retlw	61
  2391  38A8  3400               	retlw	0
  2392  38A9  3443               	retlw	67
  2393  38AA  3400               	retlw	0
  2394  38AB  3448               	retlw	72
  2395  38AC  3400               	retlw	0
  2396  38AD  344E               	retlw	78
  2397  38AE  3400               	retlw	0
  2398  38AF  3453               	retlw	83
  2399  38B0  3400               	retlw	0
  2400  38B1  3459               	retlw	89
  2401  38B2  3400               	retlw	0
  2402  38B3  345E               	retlw	94
  2403  38B4  3400               	retlw	0
  2404  38B5  3464               	retlw	100
  2405  38B6  3400               	retlw	0
  2406  38B7                     __end_of_OCD_threshold_setting:	
  2407                           
  2408                           	psect	stringtext2
  2409  39AB                     __pstringtext2:	
  2410  39AB                     _OCD_delay_setting:	
  2411  39AB  3408               	retlw	8
  2412  39AC  3400               	retlw	0
  2413  39AD  3414               	retlw	20
  2414  39AE  3400               	retlw	0
  2415  39AF  3428               	retlw	40
  2416  39B0  3400               	retlw	0
  2417  39B1  3450               	retlw	80
  2418  39B2  3400               	retlw	0
  2419  39B3  34A0               	retlw	160
  2420  39B4  3400               	retlw	0
  2421  39B5  3440               	retlw	64
  2422  39B6  3401               	retlw	1
  2423  39B7  3480               	retlw	128
  2424  39B8  3402               	retlw	2
  2425  39B9  3400               	retlw	0
  2426  39BA  3405               	retlw	5
  2427  39BB                     __end_of_OCD_delay_setting:	
  2428                           
  2429                           	psect	stringtext3
  2430  39BB                     __pstringtext3:	
  2431  39BB                     _SCD_threshold_setting:	
  2432  39BB  342C               	retlw	44
  2433  39BC  3400               	retlw	0
  2434  39BD  3443               	retlw	67
  2435  39BE  3400               	retlw	0
  2436  39BF  3459               	retlw	89
  2437  39C0  3400               	retlw	0
  2438  39C1  346F               	retlw	111
  2439  39C2  3400               	retlw	0
  2440  39C3  3485               	retlw	133
  2441  39C4  3400               	retlw	0
  2442  39C5  349B               	retlw	155
  2443  39C6  3400               	retlw	0
  2444  39C7  34B2               	retlw	178
  2445  39C8  3400               	retlw	0
  2446  39C9  34C8               	retlw	200
  2447  39CA  3400               	retlw	0
  2448  39CB                     __end_of_SCD_threshold_setting:	
  2449                           
  2450                           	psect	stringtext4
  2451  39E9                     __pstringtext4:	
  2452  39E9                     _OV_delay_setting:	
  2453  39E9  3401               	retlw	1
  2454  39EA  3400               	retlw	0
  2455  39EB  3402               	retlw	2
  2456  39EC  3400               	retlw	0
  2457  39ED  3404               	retlw	4
  2458  39EE  3400               	retlw	0
  2459  39EF  3408               	retlw	8
  2460  39F0  3400               	retlw	0
  2461  39F1                     __end_of_OV_delay_setting:	
  2462                           
  2463                           	psect	stringtext5
  2464  39F1                     __pstringtext5:	
  2465  39F1                     _UV_delay_setting:	
  2466  39F1  3401               	retlw	1
  2467  39F2  3400               	retlw	0
  2468  39F3  3404               	retlw	4
  2469  39F4  3400               	retlw	0
  2470  39F5  3408               	retlw	8
  2471  39F6  3400               	retlw	0
  2472  39F7  3410               	retlw	16
  2473  39F8  3400               	retlw	0
  2474  39F9                     __end_of_UV_delay_setting:	
  2475                           
  2476                           	psect	stringtext6
  2477  39F9                     __pstringtext6:	
  2478  39F9                     _SCD_delay_setting:	
  2479  39F9  3446               	retlw	70
  2480  39FA  3400               	retlw	0
  2481  39FB  3464               	retlw	100
  2482  39FC  3400               	retlw	0
  2483  39FD  34C8               	retlw	200
  2484  39FE  3400               	retlw	0
  2485  39FF  3490               	retlw	144
  2486  3A00  3401               	retlw	1
  2487  3A01                     __end_of_SCD_delay_setting:	
  2488                           
  2489                           	psect	stringtext7
  2490  3A01                     __pstringtext7:	
  2491  3A01                     _Lg4:	
  2492  3A01  3426               	retlw	38
  2493  3A02  349E               	retlw	158
  2494  3A03  3478               	retlw	120
  2495  3A04  343E               	retlw	62
  2496  3A05                     __end_of_Lg4:	
  2497                           
  2498                           	psect	stringtext8
  2499  3A05                     __pstringtext8:	
  2500  3A05                     _Lg3:	
  2501  3A05  34EE               	retlw	238
  2502  3A06  34E9               	retlw	233
  2503  3A07  3491               	retlw	145
  2504  3A08  343E               	retlw	62
  2505  3A09                     __end_of_Lg3:	
  2506                           
  2507                           	psect	stringtext9
  2508  3A09                     __pstringtext9:	
  2509  3A09                     _Lg2:	
  2510  3A09  3413               	retlw	19
  2511  3A0A  34CE               	retlw	206
  2512  3A0B  34CC               	retlw	204
  2513  3A0C  343E               	retlw	62
  2514  3A0D                     __end_of_Lg2:	
  2515                           
  2516                           	psect	stringtext10
  2517  3A0D                     __pstringtext10:	
  2518  3A0D                     _Lg1:	
  2519  3A0D  34AA               	retlw	170
  2520  3A0E  34AA               	retlw	170
  2521  3A0F  342A               	retlw	42
  2522  3A10  343F               	retlw	63
  2523  3A11                     __end_of_Lg1:	
  2524                           
  2525                           	psect	stringtext11
  2526  3A11                     __pstringtext11:	
  2527  3A11                     _ln2_lo:	
  2528  3A11  34D1               	retlw	209
  2529  3A12  34F7               	retlw	247
  2530  3A13  3417               	retlw	23
  2531  3A14  3437               	retlw	55
  2532  3A15                     __end_of_ln2_lo:	
  2533                           
  2534                           	psect	stringtext12
  2535  3A15                     __pstringtext12:	
  2536  3A15                     _ln2_hi:	
  2537  3A15  3480               	retlw	128
  2538  3A16  3471               	retlw	113
  2539  3A17  3431               	retlw	49
  2540  3A18  343F               	retlw	63
  2541  3A19                     __end_of_ln2_hi:	
  2542                           
  2543                           	psect	stringtext13
  2544  3800                     __pstringtext13:	
  2545  3800                     _ATmega328_address:	
  2546  3800  3402               	retlw	2
  2547  3801  3400               	retlw	0
  2548  3802                     __end_of_ATmega328_address:	
  2549  0016                     _TMR1	set	22
  2550  0003                     _STATUSbits	set	3
  2551  000B                     _INTCONbits	set	11
  2552  0018                     _T1CONbits	set	24
  2553  0011                     _PIR1bits	set	17
  2554  0097                     _WDTCONbits	set	151
  2555  0090                     _TRISEbits	set	144
  2556  008C                     _TRISAbits	set	140
  2557  008E                     _TRISCbits	set	142
  2558  008D                     _TRISBbits	set	141
  2559  0091                     _PIE1bits	set	145
  2560  0476                     _TRISC6	set	1142
  2561  0477                     _TRISC7	set	1143
  2562  04CF                     _SPLLEN	set	1231
  2563  04CE                     _IRCF3	set	1230
  2564  04CD                     _IRCF2	set	1229
  2565  04CC                     _IRCF1	set	1228
  2566  04CB                     _IRCF0	set	1227
  2567  04C9                     _SCS1	set	1225
  2568  04C8                     _SCS0	set	1224
  2569  0110                     _LATEbits	set	272
  2570  010C                     _LATAbits	set	268
  2571  019A                     _TX1REG	set	410
  2572  0199                     _RC1REG	set	409
  2573  019D                     _RC1STAbits	set	413
  2574  019B                     _SPBRG	set	411
  2575  018E                     _ANSELCbits	set	398
  2576  018D                     _ANSELBbits	set	397
  2577  0CF5                     _TXEN	set	3317
  2578  0CEC                     _CREN	set	3308
  2579  0CEF                     _SPEN	set	3311
  2580  0CF4                     _SYNC	set	3316
  2581  0CF2                     _BRGH	set	3314
  2582  0216                     _SSPCON2bits	set	534
  2583  0211                     _SSPBUF	set	529
  2584  0212                     _SSPADD	set	530
  2585  0215                     _SSPCONbits	set	533
  2586  0E24                     _RXPPSbits	set	3620
  2587  0E20                     _SSPCLKPPSbits	set	3616
  2588  0E21                     _SSPDATPPSbits	set	3617
  2589  0E0F                     _PPSLOCKbits	set	3599
  2590  0E0F                     _PPSLOCK	set	3599
  2591  0E9A                     _RB2PPSbits	set	3738
  2592  0EA5                     _RC5PPSbits	set	3749
  2593  0EA4                     _RC4PPSbits	set	3748
  2594  3802                     STR_2:	
  2595  3802  3443               	retlw	67	;'C'
  2596  3803  3465               	retlw	101	;'e'
  2597  3804  346C               	retlw	108	;'l'
  2598  3805  346C               	retlw	108	;'l'
  2599  3806  3420               	retlw	32	;' '
  2600  3807  3462               	retlw	98	;'b'
  2601  3808  3461               	retlw	97	;'a'
  2602  3809  3474               	retlw	116	;'t'
  2603  380A  3474               	retlw	116	;'t'
  2604  380B  343A               	retlw	58	;':'
  2605  380C  3420               	retlw	32	;' '
  2606  380D  3425               	retlw	37	;'%'
  2607  380E  3469               	retlw	105	;'i'
  2608  380F  3420               	retlw	32	;' '
  2609  3810  342C               	retlw	44	;','
  2610  3811  3425               	retlw	37	;'%'
  2611  3812  3464               	retlw	100	;'d'
  2612  3813  342C               	retlw	44	;','
  2613  3814  3420               	retlw	32	;' '
  2614  3815  3425               	retlw	37	;'%'
  2615  3816  3464               	retlw	100	;'d'
  2616  3817  3420               	retlw	32	;' '
  2617  3818  342C               	retlw	44	;','
  2618  3819  3420               	retlw	32	;' '
  2619  381A  3425               	retlw	37	;'%'
  2620  381B  3464               	retlw	100	;'d'
  2621  381C  342C               	retlw	44	;','
  2622  381D  3420               	retlw	32	;' '
  2623  381E  3425               	retlw	37	;'%'
  2624  381F  3464               	retlw	100	;'d'
  2625  3820  342C               	retlw	44	;','
  2626  3821  3420               	retlw	32	;' '
  2627  3822  3425               	retlw	37	;'%'
  2628  3823  3464               	retlw	100	;'d'
  2629  3824  3420               	retlw	32	;' '
  2630  3825  3442               	retlw	66	;'B'
  2631  3826  3461               	retlw	97	;'a'
  2632  3827  3474               	retlw	116	;'t'
  2633  3828  3474               	retlw	116	;'t'
  2634  3829  3420               	retlw	32	;' '
  2635  382A  3443               	retlw	67	;'C'
  2636  382B  3475               	retlw	117	;'u'
  2637  382C  3472               	retlw	114	;'r'
  2638  382D  3472               	retlw	114	;'r'
  2639  382E  343A               	retlw	58	;':'
  2640  382F  3420               	retlw	32	;' '
  2641  3830  3425               	retlw	37	;'%'
  2642  3831  3469               	retlw	105	;'i'
  2643  3832  3420               	retlw	32	;' '
  2644  3833  3454               	retlw	84	;'T'
  2645  3834  3465               	retlw	101	;'e'
  2646  3835  346D               	retlw	109	;'m'
  2647  3836  3470               	retlw	112	;'p'
  2648  3837  343A               	retlw	58	;':'
  2649  3838  3420               	retlw	32	;' '
  2650  3839  3425               	retlw	37	;'%'
  2651  383A  3469               	retlw	105	;'i'
  2652  383B  3420               	retlw	32	;' '
  2653  383C  3443               	retlw	67	;'C'
  2654  383D  3454               	retlw	84	;'T'
  2655  383E  3452               	retlw	82	;'R'
  2656  383F  344C               	retlw	76	;'L'
  2657  3840  3432               	retlw	50	;'2'
  2658  3841  343A               	retlw	58	;':'
  2659  3842  3420               	retlw	32	;' '
  2660  3843  3425               	retlw	37	;'%'
  2661  3844  3469               	retlw	105	;'i'
  2662  3845  3420               	retlw	32	;' '
  2663  3846  340A               	retlw	10
  2664  3847  340D               	retlw	13
  2665  3848  3400               	retlw	0
  2666                           
  2667                           	psect	stringtext14
  2668  3849                     __pstringtext14:	
  2669  3849                     STR_1:	
  2670  3849  3457               	retlw	87	;'W'
  2671  384A  3441               	retlw	65	;'A'
  2672  384B  3454               	retlw	84	;'T'
  2673  384C  3443               	retlw	67	;'C'
  2674  384D  3448               	retlw	72	;'H'
  2675  384E  3444               	retlw	68	;'D'
  2676  384F  344F               	retlw	79	;'O'
  2677  3850  3447               	retlw	71	;'G'
  2678  3851  3420               	retlw	32	;' '
  2679  3852  344E               	retlw	78	;'N'
  2680  3853  344F               	retlw	79	;'O'
  2681  3854  3454               	retlw	84	;'T'
  2682  3855  3420               	retlw	32	;' '
  2683  3856  344B               	retlw	75	;'K'
  2684  3857  3449               	retlw	73	;'I'
  2685  3858  3443               	retlw	67	;'C'
  2686  3859  344B               	retlw	75	;'K'
  2687  385A  3445               	retlw	69	;'E'
  2688  385B  3444               	retlw	68	;'D'
  2689  385C  343A               	retlw	58	;':'
  2690  385D  3420               	retlw	32	;' '
  2691  385E  3441               	retlw	65	;'A'
  2692  385F  3446               	retlw	70	;'F'
  2693  3860  3445               	retlw	69	;'E'
  2694  3861  3420               	retlw	32	;' '
  2695  3862  3463               	retlw	99	;'c'
  2696  3863  346F               	retlw	111	;'o'
  2697  3864  346D               	retlw	109	;'m'
  2698  3865  346D               	retlw	109	;'m'
  2699  3866  3473               	retlw	115	;'s'
  2700  3867  3420               	retlw	32	;' '
  2701  3868  3465               	retlw	101	;'e'
  2702  3869  3472               	retlw	114	;'r'
  2703  386A  3472               	retlw	114	;'r'
  2704  386B  346F               	retlw	111	;'o'
  2705  386C  3472               	retlw	114	;'r'
  2706  386D  3420               	retlw	32	;' '
  2707  386E  340A               	retlw	10
  2708  386F  340D               	retlw	13
  2709  3870  3400               	retlw	0
  2710                           
  2711                           	psect	stringtext15
  2712  3871                     __pstringtext15:	
  2713  3871                     STR_9:	
  2714  3871  3450               	retlw	80	;'P'
  2715  3872  3472               	retlw	114	;'r'
  2716  3873  3469               	retlw	105	;'i'
  2717  3874  346E               	retlw	110	;'n'
  2718  3875  3474               	retlw	116	;'t'
  2719  3876  3469               	retlw	105	;'i'
  2720  3877  346E               	retlw	110	;'n'
  2721  3878  3467               	retlw	103	;'g'
  2722  3879  3420               	retlw	32	;' '
  2723  387A  346F               	retlw	111	;'o'
  2724  387B  3475               	retlw	117	;'u'
  2725  387C  3474               	retlw	116	;'t'
  2726  387D  3420               	retlw	32	;' '
  2727  387E  3441               	retlw	65	;'A'
  2728  387F  3446               	retlw	70	;'F'
  2729  3880  3445               	retlw	69	;'E'
  2730  3881  3420               	retlw	32	;' '
  2731  3882  3472               	retlw	114	;'r'
  2732  3883  3465               	retlw	101	;'e'
  2733  3884  3467               	retlw	103	;'g'
  2734  3885  3469               	retlw	105	;'i'
  2735  3886  3473               	retlw	115	;'s'
  2736  3887  3474               	retlw	116	;'t'
  2737  3888  3465               	retlw	101	;'e'
  2738  3889  3472               	retlw	114	;'r'
  2739  388A  3420               	retlw	32	;' '
  2740  388B  3476               	retlw	118	;'v'
  2741  388C  3461               	retlw	97	;'a'
  2742  388D  346C               	retlw	108	;'l'
  2743  388E  3475               	retlw	117	;'u'
  2744  388F  3465               	retlw	101	;'e'
  2745  3890  3473               	retlw	115	;'s'
  2746  3891  342E               	retlw	46	;'.'
  2747  3892  342E               	retlw	46	;'.'
  2748  3893  342E               	retlw	46	;'.'
  2749  3894  340A               	retlw	10
  2750  3895  340D               	retlw	13
  2751  3896  3400               	retlw	0
  2752                           
  2753                           	psect	stringtext16
  2754  38B7                     __pstringtext16:	
  2755  38B7                     STR_13:	
  2756  38B7  3430               	retlw	48	;'0'
  2757  38B8  3478               	retlw	120	;'x'
  2758  38B9  3430               	retlw	48	;'0'
  2759  38BA  3434               	retlw	52	;'4'
  2760  38BB  3420               	retlw	32	;' '
  2761  38BC  3453               	retlw	83	;'S'
  2762  38BD  3459               	retlw	89	;'Y'
  2763  38BE  3453               	retlw	83	;'S'
  2764  38BF  345F               	retlw	95	;'_'
  2765  38C0  3443               	retlw	67	;'C'
  2766  38C1  3454               	retlw	84	;'T'
  2767  38C2  3452               	retlw	82	;'R'
  2768  38C3  344C               	retlw	76	;'L'
  2769  38C4  3431               	retlw	49	;'1'
  2770  38C5  343A               	retlw	58	;':'
  2771  38C6  3420               	retlw	32	;' '
  2772  38C7  3425               	retlw	37	;'%'
  2773  38C8  3469               	retlw	105	;'i'
  2774  38C9  3420               	retlw	32	;' '
  2775  38CA  340A               	retlw	10
  2776  38CB  340D               	retlw	13
  2777  38CC  3400               	retlw	0
  2778                           
  2779                           	psect	stringtext17
  2780  38CD                     __pstringtext17:	
  2781  38CD                     STR_3:	
  2782  38CD  3430               	retlw	48	;'0'
  2783  38CE  3478               	retlw	120	;'x'
  2784  38CF  3430               	retlw	48	;'0'
  2785  38D0  3435               	retlw	53	;'5'
  2786  38D1  3420               	retlw	32	;' '
  2787  38D2  3453               	retlw	83	;'S'
  2788  38D3  3459               	retlw	89	;'Y'
  2789  38D4  3453               	retlw	83	;'S'
  2790  38D5  345F               	retlw	95	;'_'
  2791  38D6  3443               	retlw	67	;'C'
  2792  38D7  3454               	retlw	84	;'T'
  2793  38D8  3452               	retlw	82	;'R'
  2794  38D9  344C               	retlw	76	;'L'
  2795  38DA  3432               	retlw	50	;'2'
  2796  38DB  343A               	retlw	58	;':'
  2797  38DC  3420               	retlw	32	;' '
  2798  38DD  3425               	retlw	37	;'%'
  2799  38DE  3469               	retlw	105	;'i'
  2800  38DF  3420               	retlw	32	;' '
  2801  38E0  340A               	retlw	10
  2802  38E1  340D               	retlw	13
  2803  38E2  3400               	retlw	0
  2804                           
  2805                           	psect	stringtext18
  2806  38E3                     __pstringtext18:	
  2807  38E3                     STR_12:	
  2808  38E3  3430               	retlw	48	;'0'
  2809  38E4  3478               	retlw	120	;'x'
  2810  38E5  3430               	retlw	48	;'0'
  2811  38E6  3431               	retlw	49	;'1'
  2812  38E7  3420               	retlw	32	;' '
  2813  38E8  3443               	retlw	67	;'C'
  2814  38E9  3445               	retlw	69	;'E'
  2815  38EA  344C               	retlw	76	;'L'
  2816  38EB  344C               	retlw	76	;'L'
  2817  38EC  3442               	retlw	66	;'B'
  2818  38ED  3441               	retlw	65	;'A'
  2819  38EE  344C               	retlw	76	;'L'
  2820  38EF  3431               	retlw	49	;'1'
  2821  38F0  343A               	retlw	58	;':'
  2822  38F1  3420               	retlw	32	;' '
  2823  38F2  3425               	retlw	37	;'%'
  2824  38F3  3469               	retlw	105	;'i'
  2825  38F4  3420               	retlw	32	;' '
  2826  38F5  340A               	retlw	10
  2827  38F6  340D               	retlw	13
  2828  38F7  3400               	retlw	0
  2829                           
  2830                           	psect	stringtext19
  2831  38F8                     __pstringtext19:	
  2832  38F8                     STR_5:	
  2833  38F8  3430               	retlw	48	;'0'
  2834  38F9  3478               	retlw	120	;'x'
  2835  38FA  3430               	retlw	48	;'0'
  2836  38FB  3436               	retlw	54	;'6'
  2837  38FC  3420               	retlw	32	;' '
  2838  38FD  3450               	retlw	80	;'P'
  2839  38FE  3452               	retlw	82	;'R'
  2840  38FF  344F               	retlw	79	;'O'
  2841  3900  3454               	retlw	84	;'T'
  2842  3901  3445               	retlw	69	;'E'
  2843  3902  3443               	retlw	67	;'C'
  2844  3903  3454               	retlw	84	;'T'
  2845  3904  3431               	retlw	49	;'1'
  2846  3905  343A               	retlw	58	;':'
  2847  3906  3420               	retlw	32	;' '
  2848  3907  3425               	retlw	37	;'%'
  2849  3908  3469               	retlw	105	;'i'
  2850  3909  3420               	retlw	32	;' '
  2851  390A  340A               	retlw	10
  2852  390B  340D               	retlw	13
  2853  390C  3400               	retlw	0
  2854                           
  2855                           	psect	stringtext20
  2856  390D                     __pstringtext20:	
  2857  390D                     STR_6:	
  2858  390D  3430               	retlw	48	;'0'
  2859  390E  3478               	retlw	120	;'x'
  2860  390F  3430               	retlw	48	;'0'
  2861  3910  3437               	retlw	55	;'7'
  2862  3911  3420               	retlw	32	;' '
  2863  3912  3450               	retlw	80	;'P'
  2864  3913  3452               	retlw	82	;'R'
  2865  3914  344F               	retlw	79	;'O'
  2866  3915  3454               	retlw	84	;'T'
  2867  3916  3445               	retlw	69	;'E'
  2868  3917  3443               	retlw	67	;'C'
  2869  3918  3454               	retlw	84	;'T'
  2870  3919  3432               	retlw	50	;'2'
  2871  391A  343A               	retlw	58	;':'
  2872  391B  3420               	retlw	32	;' '
  2873  391C  3425               	retlw	37	;'%'
  2874  391D  3469               	retlw	105	;'i'
  2875  391E  3420               	retlw	32	;' '
  2876  391F  340A               	retlw	10
  2877  3920  340D               	retlw	13
  2878  3921  3400               	retlw	0
  2879                           
  2880                           	psect	stringtext21
  2881  3922                     __pstringtext21:	
  2882  3922                     STR_17:	
  2883  3922  3430               	retlw	48	;'0'
  2884  3923  3478               	retlw	120	;'x'
  2885  3924  3430               	retlw	48	;'0'
  2886  3925  3438               	retlw	56	;'8'
  2887  3926  3420               	retlw	32	;' '
  2888  3927  3450               	retlw	80	;'P'
  2889  3928  3452               	retlw	82	;'R'
  2890  3929  344F               	retlw	79	;'O'
  2891  392A  3454               	retlw	84	;'T'
  2892  392B  3445               	retlw	69	;'E'
  2893  392C  3443               	retlw	67	;'C'
  2894  392D  3454               	retlw	84	;'T'
  2895  392E  3433               	retlw	51	;'3'
  2896  392F  343A               	retlw	58	;':'
  2897  3930  3420               	retlw	32	;' '
  2898  3931  3425               	retlw	37	;'%'
  2899  3932  3469               	retlw	105	;'i'
  2900  3933  3420               	retlw	32	;' '
  2901  3934  340A               	retlw	10
  2902  3935  340D               	retlw	13
  2903  3936  3400               	retlw	0
  2904                           
  2905                           	psect	stringtext22
  2906  3937                     __pstringtext22:	
  2907  3937                     STR_4:	
  2908  3937  3430               	retlw	48	;'0'
  2909  3938  3478               	retlw	120	;'x'
  2910  3939  3430               	retlw	48	;'0'
  2911  393A  3430               	retlw	48	;'0'
  2912  393B  3420               	retlw	32	;' '
  2913  393C  3453               	retlw	83	;'S'
  2914  393D  3459               	retlw	89	;'Y'
  2915  393E  3453               	retlw	83	;'S'
  2916  393F  345F               	retlw	95	;'_'
  2917  3940  3453               	retlw	83	;'S'
  2918  3941  3454               	retlw	84	;'T'
  2919  3942  3441               	retlw	65	;'A'
  2920  3943  3454               	retlw	84	;'T'
  2921  3944  343A               	retlw	58	;':'
  2922  3945  3420               	retlw	32	;' '
  2923  3946  3425               	retlw	37	;'%'
  2924  3947  3469               	retlw	105	;'i'
  2925  3948  3420               	retlw	32	;' '
  2926  3949  340A               	retlw	10
  2927  394A  340D               	retlw	13
  2928  394B  3400               	retlw	0
  2929                           
  2930                           	psect	stringtext23
  2931  394C                     __pstringtext23:	
  2932  394C                     STR_18:	
  2933  394C  3430               	retlw	48	;'0'
  2934  394D  3478               	retlw	120	;'x'
  2935  394E  3430               	retlw	48	;'0'
  2936  394F  3439               	retlw	57	;'9'
  2937  3950  3420               	retlw	32	;' '
  2938  3951  344F               	retlw	79	;'O'
  2939  3952  3456               	retlw	86	;'V'
  2940  3953  345F               	retlw	95	;'_'
  2941  3954  3454               	retlw	84	;'T'
  2942  3955  3452               	retlw	82	;'R'
  2943  3956  3449               	retlw	73	;'I'
  2944  3957  3450               	retlw	80	;'P'
  2945  3958  343A               	retlw	58	;':'
  2946  3959  3420               	retlw	32	;' '
  2947  395A  3425               	retlw	37	;'%'
  2948  395B  3469               	retlw	105	;'i'
  2949  395C  3420               	retlw	32	;' '
  2950  395D  340A               	retlw	10
  2951  395E  340D               	retlw	13
  2952  395F  3400               	retlw	0
  2953                           
  2954                           	psect	stringtext24
  2955  3960                     __pstringtext24:	
  2956  3960                     STR_19:	
  2957  3960  3430               	retlw	48	;'0'
  2958  3961  3478               	retlw	120	;'x'
  2959  3962  3430               	retlw	48	;'0'
  2960  3963  3441               	retlw	65	;'A'
  2961  3964  3420               	retlw	32	;' '
  2962  3965  3455               	retlw	85	;'U'
  2963  3966  3456               	retlw	86	;'V'
  2964  3967  345F               	retlw	95	;'_'
  2965  3968  3454               	retlw	84	;'T'
  2966  3969  3452               	retlw	82	;'R'
  2967  396A  3449               	retlw	73	;'I'
  2968  396B  3450               	retlw	80	;'P'
  2969  396C  343A               	retlw	58	;':'
  2970  396D  3420               	retlw	32	;' '
  2971  396E  3425               	retlw	37	;'%'
  2972  396F  3469               	retlw	105	;'i'
  2973  3970  3420               	retlw	32	;' '
  2974  3971  340A               	retlw	10
  2975  3972  340D               	retlw	13
  2976  3973  3400               	retlw	0
  2977                           
  2978                           	psect	stringtext25
  2979  3974                     __pstringtext25:	
  2980  3974                     STR_20:	
  2981  3974  3430               	retlw	48	;'0'
  2982  3975  3478               	retlw	120	;'x'
  2983  3976  3430               	retlw	48	;'0'
  2984  3977  3442               	retlw	66	;'B'
  2985  3978  3420               	retlw	32	;' '
  2986  3979  3443               	retlw	67	;'C'
  2987  397A  3443               	retlw	67	;'C'
  2988  397B  345F               	retlw	95	;'_'
  2989  397C  3443               	retlw	67	;'C'
  2990  397D  3446               	retlw	70	;'F'
  2991  397E  3447               	retlw	71	;'G'
  2992  397F  343A               	retlw	58	;':'
  2993  3980  3420               	retlw	32	;' '
  2994  3981  3425               	retlw	37	;'%'
  2995  3982  3469               	retlw	105	;'i'
  2996  3983  3420               	retlw	32	;' '
  2997  3984  340A               	retlw	10
  2998  3985  340D               	retlw	13
  2999  3986  3400               	retlw	0
  3000                           
  3001                           	psect	stringtext26
  3002  3987                     __pstringtext26:	
  3003  3987                     STR_21:	
  3004  3987  3430               	retlw	48	;'0'
  3005  3988  3478               	retlw	120	;'x'
  3006  3989  3433               	retlw	51	;'3'
  3007  398A  3432               	retlw	50	;'2'
  3008  398B  3420               	retlw	32	;' '
  3009  398C  3443               	retlw	67	;'C'
  3010  398D  3443               	retlw	67	;'C'
  3011  398E  345F               	retlw	95	;'_'
  3012  398F  3448               	retlw	72	;'H'
  3013  3990  3449               	retlw	73	;'I'
  3014  3991  343A               	retlw	58	;':'
  3015  3992  3420               	retlw	32	;' '
  3016  3993  3425               	retlw	37	;'%'
  3017  3994  3469               	retlw	105	;'i'
  3018  3995  3420               	retlw	32	;' '
  3019  3996  340A               	retlw	10
  3020  3997  340D               	retlw	13
  3021  3998  3400               	retlw	0
  3022                           
  3023                           	psect	stringtext27
  3024  3999                     __pstringtext27:	
  3025  3999                     STR_22:	
  3026  3999  3430               	retlw	48	;'0'
  3027  399A  3478               	retlw	120	;'x'
  3028  399B  3433               	retlw	51	;'3'
  3029  399C  3433               	retlw	51	;'3'
  3030  399D  3420               	retlw	32	;' '
  3031  399E  3443               	retlw	67	;'C'
  3032  399F  3443               	retlw	67	;'C'
  3033  39A0  345F               	retlw	95	;'_'
  3034  39A1  344C               	retlw	76	;'L'
  3035  39A2  344F               	retlw	79	;'O'
  3036  39A3  343A               	retlw	58	;':'
  3037  39A4  3420               	retlw	32	;' '
  3038  39A5  3425               	retlw	37	;'%'
  3039  39A6  3469               	retlw	105	;'i'
  3040  39A7  3420               	retlw	32	;' '
  3041  39A8  340A               	retlw	10
  3042  39A9  340D               	retlw	13
  3043  39AA  3400               	retlw	0
  3044                           
  3045                           	psect	stringtext28
  3046  39CB                     __pstringtext28:	
  3047  39CB                     STR_7:	
  3048  39CB  3443               	retlw	67	;'C'
  3049  39CC  3475               	retlw	117	;'u'
  3050  39CD  3472               	retlw	114	;'r'
  3051  39CE  3472               	retlw	114	;'r'
  3052  39CF  3465               	retlw	101	;'e'
  3053  39D0  346E               	retlw	110	;'n'
  3054  39D1  3474               	retlw	116	;'t'
  3055  39D2  343A               	retlw	58	;':'
  3056  39D3  3420               	retlw	32	;' '
  3057  39D4  3425               	retlw	37	;'%'
  3058  39D5  3464               	retlw	100	;'d'
  3059  39D6  3420               	retlw	32	;' '
  3060  39D7  340A               	retlw	10
  3061  39D8  340D               	retlw	13
  3062  39D9  3400               	retlw	0
  3063                           
  3064                           	psect	stringtext29
  3065  39DA                     __pstringtext29:	
  3066  39DA                     STR_8:	
  3067  39DA  3454               	retlw	84	;'T'
  3068  39DB  3465               	retlw	101	;'e'
  3069  39DC  346D               	retlw	109	;'m'
  3070  39DD  3470               	retlw	112	;'p'
  3071  39DE  343A               	retlw	58	;':'
  3072  39DF  3420               	retlw	32	;' '
  3073  39E0  3425               	retlw	37	;'%'
  3074  39E1  3464               	retlw	100	;'d'
  3075  39E2  3420               	retlw	32	;' '
  3076  39E3  3465               	retlw	101	;'e'
  3077  39E4  342D               	retlw	45	;'-'
  3078  39E5  3432               	retlw	50	;'2'
  3079  39E6  340A               	retlw	10
  3080  39E7  340D               	retlw	13
  3081  39E8  3400               	retlw	0
  3082                           
  3083                           	psect	stringtext30
  3084  3A19                     __pstringtext30:	
  3085  3A19                     STR_100:	
  3086  3A19  3468               	retlw	104	;'h'
  3087  3A1A  3468               	retlw	104	;'h'
  3088  3A1B  3458               	retlw	88	;'X'
  3089  3A1C  3400               	retlw	0
  3090                           
  3091                           	psect	stringtext31
  3092  3A1D                     __pstringtext31:	
  3093  3A1D                     STR_24:	
  3094  3A1D  3468               	retlw	104	;'h'
  3095  3A1E  3468               	retlw	104	;'h'
  3096  3A1F  3464               	retlw	100	;'d'
  3097  3A20  3400               	retlw	0
  3098                           
  3099                           	psect	stringtext32
  3100  3A21                     __pstringtext32:	
  3101  3A21                     STR_28:	
  3102  3A21  3468               	retlw	104	;'h'
  3103  3A22  3468               	retlw	104	;'h'
  3104  3A23  3469               	retlw	105	;'i'
  3105  3A24  3400               	retlw	0
  3106                           
  3107                           	psect	stringtext33
  3108  3A25                     __pstringtext33:	
  3109  3A25                     STR_66:	
  3110  3A25  3468               	retlw	104	;'h'
  3111  3A26  3468               	retlw	104	;'h'
  3112  3A27  346E               	retlw	110	;'n'
  3113  3A28  3400               	retlw	0
  3114                           
  3115                           	psect	stringtext34
  3116  3A29                     __pstringtext34:	
  3117  3A29                     STR_51:	
  3118  3A29  3468               	retlw	104	;'h'
  3119  3A2A  3468               	retlw	104	;'h'
  3120  3A2B  346F               	retlw	111	;'o'
  3121  3A2C  3400               	retlw	0
  3122                           
  3123                           	psect	stringtext35
  3124  3A2D                     __pstringtext35:	
  3125  3A2D                     STR_81:	
  3126  3A2D  3468               	retlw	104	;'h'
  3127  3A2E  3468               	retlw	104	;'h'
  3128  3A2F  3475               	retlw	117	;'u'
  3129  3A30  3400               	retlw	0
  3130                           
  3131                           	psect	stringtext36
  3132  3A31                     __pstringtext36:	
  3133  3A31                     STR_96:	
  3134  3A31  3468               	retlw	104	;'h'
  3135  3A32  3468               	retlw	104	;'h'
  3136  3A33  3478               	retlw	120	;'x'
  3137  3A34  3400               	retlw	0
  3138                           
  3139                           	psect	stringtext37
  3140  3A35                     __pstringtext37:	
  3141  3A35                     STR_118:	
  3142  3A35  347A               	retlw	122	;'z'
  3143  3A36  3458               	retlw	88	;'X'
  3144  3A37  3400               	retlw	0
  3145                           
  3146                           	psect	stringtext38
  3147  3A38                     __pstringtext38:	
  3148  3A38                     STR_42:	
  3149  3A38  347A               	retlw	122	;'z'
  3150  3A39  3464               	retlw	100	;'d'
  3151  3A3A  3400               	retlw	0
  3152                           
  3153                           	psect	stringtext39
  3154  3A3B                     __pstringtext39:	
  3155  3A3B                     STR_46:	
  3156  3A3B  347A               	retlw	122	;'z'
  3157  3A3C  3469               	retlw	105	;'i'
  3158  3A3D  3400               	retlw	0
  3159                           
  3160                           	psect	stringtext40
  3161  3A3E                     __pstringtext40:	
  3162  3A3E                     STR_76:	
  3163  3A3E  347A               	retlw	122	;'z'
  3164  3A3F  346E               	retlw	110	;'n'
  3165  3A40  3400               	retlw	0
  3166                           
  3167                           	psect	stringtext41
  3168  3A41                     __pstringtext41:	
  3169  3A41                     STR_61:	
  3170  3A41  347A               	retlw	122	;'z'
  3171  3A42  346F               	retlw	111	;'o'
  3172  3A43  3400               	retlw	0
  3173                           
  3174                           	psect	stringtext42
  3175  3A44                     __pstringtext42:	
  3176  3A44                     STR_91:	
  3177  3A44  347A               	retlw	122	;'z'
  3178  3A45  3475               	retlw	117	;'u'
  3179  3A46  3400               	retlw	0
  3180                           
  3181                           	psect	stringtext43
  3182  3A47                     __pstringtext43:	
  3183  3A47                     STR_114:	
  3184  3A47  347A               	retlw	122	;'z'
  3185  3A48  3478               	retlw	120	;'x'
  3186  3A49  3400               	retlw	0
  3187                           
  3188                           	psect	stringtext44
  3189  0000                     __pstringtext44:	
  3190  39D7                     
  3191                           ; #config settings
  3192  0000                     
  3193                           	psect	cinit
  3194  0022                     start_initialization:	
  3195  0022                     __initialization:		;BIGRAM
  3196                           
  3197                           ; Initialize objects allocated to BANK3
  3198  0022  3000               	movlw	low __pidataBANK3
  3199  0023  0084               	movwf	4
  3200  0024  3098               	movlw	(high __pidataBANK3)| (0+128)
  3201  0025  0085               	movwf	5
  3202  0026  0023               	movlb	3	; select bank3
  3203  0027  0012               	moviw fsr0++
  3204  0028  00DA               	movwf	__pdataBANK3& (0+127)
  3205  0029  0012               	moviw fsr0++
  3206  002A  00DB               	movwf	(__pdataBANK3+1)& (0+127)
  3207  002B  0012               	moviw fsr0++
  3208  002C  00DC               	movwf	(__pdataBANK3+2)& (0+127)
  3209  002D  0012               	moviw fsr0++
  3210  002E  00DD               	movwf	(__pdataBANK3+3)& (0+127)
  3211  002F  0012               	moviw fsr0++
  3212  0030  00DE               	movwf	(__pdataBANK3+4)& (0+127)
  3213  0031  0012               	moviw fsr0++
  3214  0032  00DF               	movwf	(__pdataBANK3+5)& (0+127)
  3215  0033  0012               	moviw fsr0++
  3216  0034  00E0               	movwf	(__pdataBANK3+6)& (0+127)
  3217  0035  0012               	moviw fsr0++
  3218  0036  00E1               	movwf	(__pdataBANK3+7)& (0+127)
  3219  0037  0012               	moviw fsr0++
  3220  0038  00E2               	movwf	(__pdataBANK3+8)& (0+127)
  3221                           
  3222                           ; Clear objects allocated to BIGRAM
  3223  0039  3071               	movlw	low (0+10097)
  3224  003A  0084               	movwf	4
  3225  003B  3027               	movlw	high (0+10097)
  3226  003C  0085               	movwf	5
  3227  003D  307F               	movlw	127
  3228  003E  00FE               	movwf	btemp
  3229  003F  3000               	movlw	0
  3230  0040  00FF               	movwf	btemp+1
  3231  0041  31B3  23D5  3180   	fcall	clear_ram0
  3232                           
  3233                           ; Clear objects allocated to COMMON
  3234  0044  01FC               	clrf	__pbssCOMMON& (0+127)
  3235                           
  3236                           ; Clear objects allocated to BANK1
  3237  0045  0021               	movlb	1	; select bank1
  3238  0046  01EF               	clrf	__pbssBANK1& (0+127)
  3239                           
  3240                           ; Clear objects allocated to BANK2
  3241  0047  3065               	movlw	low __pbssBANK2
  3242  0048  0084               	movwf	4
  3243  0049  3001               	movlw	high __pbssBANK2
  3244  004A  0085               	movwf	5
  3245  004B  300A               	movlw	10
  3246  004C  00FE               	movwf	btemp
  3247  004D  3000               	movlw	0
  3248  004E  00FF               	movwf	btemp+1
  3249  004F  31B3  23D5  3180   	fcall	clear_ram0
  3250                           
  3251                           ; Clear objects allocated to BANK3
  3252  0052  30A0               	movlw	low __pbssBANK3
  3253  0053  0084               	movwf	4
  3254  0054  3001               	movlw	high __pbssBANK3
  3255  0055  0085               	movwf	5
  3256  0056  303A               	movlw	58
  3257  0057  00FE               	movwf	btemp
  3258  0058  3000               	movlw	0
  3259  0059  00FF               	movwf	btemp+1
  3260  005A  31B3  23D5  3180   	fcall	clear_ram0
  3261                           
  3262                           ; Clear objects allocated to BANK4
  3263  005D  3020               	movlw	low __pbssBANK4
  3264  005E  0084               	movwf	4
  3265  005F  3002               	movlw	high __pbssBANK4
  3266  0060  0085               	movwf	5
  3267  0061  3020               	movlw	32
  3268  0062  00FE               	movwf	btemp
  3269  0063  3000               	movlw	0
  3270  0064  00FF               	movwf	btemp+1
  3271  0065  31B3  23D5         	fcall	clear_ram0
  3272  0067                     end_of_initialization:	
  3273                           ;End of C runtime variable initialization code
  3274                           
  3275  0067                     __end_of__initialization:	
  3276  0067  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3277  0068  0020               	movlb	0
  3278  0069  31B6  2E45         	ljmp	_main	;jump to C main() function
  3279                           
  3280                           	psect	bssCOMMON
  3281  007C                     __pbssCOMMON:	
  3282  007C                     _toggleColor:	
  3283  007C                     	ds	1
  3284                           
  3285                           	psect	bssBANK1
  3286  00EF                     __pbssBANK1:	
  3287  00EF                     _tmr1_flag:	
  3288  00EF                     	ds	1
  3289                           
  3290                           	psect	bssBANK2
  3291  0165                     __pbssBANK2:	
  3292  0165                     _width:	
  3293  0165                     	ds	2
  3294  0167                     _prec:	
  3295  0167                     	ds	2
  3296  0169                     _flags:	
  3297  0169                     	ds	2
  3298  016B                     _adcOffset:	
  3299  016B                     	ds	2
  3300  016D                     _adcGain:	
  3301  016D                     	ds	2
  3302                           
  3303                           	psect	bssBANK3
  3304  01A0                     __pbssBANK3:	
  3305  01A0                     _cellVoltages:	
  3306  01A0                     	ds	10
  3307  01AA                     logf@F469:	
  3308  01AA                     	ds	4
  3309  01AE                     BQ76920@shuntResistorValue_mOhm:	
  3310  01AE                     	ds	4
  3311  01B2                     _shuntResistorValue_mOhm:	
  3312  01B2                     	ds	4
  3313  01B6                     _temperatureThermistor:	
  3314  01B6                     	ds	4
  3315  01BA                     _batCurrent:	
  3316  01BA                     	ds	4
  3317  01BE                     _batVoltage:	
  3318  01BE                     	ds	4
  3319  01C2                     _errno:	
  3320  01C2                     	ds	2
  3321  01C4                     _nout:	
  3322  01C4                     	ds	2
  3323  01C6                     _minCellVoltage:	
  3324  01C6                     	ds	2
  3325  01C8                     _maxCellVoltage:	
  3326  01C8                     	ds	2
  3327  01CA                     _maxCellTempDischarge:	
  3328  01CA                     	ds	2
  3329  01CC                     _maxCellTempCharge:	
  3330  01CC                     	ds	2
  3331  01CE                     _minCellTempDischarge:	
  3332  01CE                     	ds	2
  3333  01D0                     _minCellTempCharge:	
  3334  01D0                     	ds	2
  3335  01D2                     BQ76920@protect3:	
  3336  01D2                     	ds	1
  3337  01D3                     BQ76920@protect2:	
  3338  01D3                     	ds	1
  3339  01D4                     BQ76920@protect1:	
  3340  01D4                     	ds	1
  3341  01D5                     myIsr@count:	
  3342  01D5                     	ds	1
  3343  01D6                     _protect3:	
  3344  01D6                     	ds	1
  3345  01D7                     _protect2:	
  3346  01D7                     	ds	1
  3347  01D8                     _protect1:	
  3348  01D8                     	ds	1
  3349  01D9                     _currState:	
  3350  01D9                     	ds	1
  3351                           
  3352                           	psect	dataBANK3
  3353  01DA                     __pdataBANK3:	
  3354  01DA                     stoa@F1152:	
  3355  01DA                     	ds	7
  3356  01E1                     _thermistorBetaValue:	
  3357  01E1                     	ds	2
  3358                           
  3359                           	psect	bssBANK4
  3360  0220                     __pbssBANK4:	
  3361  0220                     _dbuf:	
  3362  0220                     	ds	32
  3363                           
  3364                           	psect	clrtext
  3365  33D5                     clear_ram0:	
  3366                           ;	Called with FSR0 containing the base address, and
  3367                           ;	btemp/btemp+1 has the size to clear
  3368                           
  3369  33D5  0064               	clrwdt	;clear the watchdog before getting into this loop
  3370  33D6                     clrloop0:	
  3371  33D6  0180               	clrf	0	;clear RAM location pointed to by FSR
  3372  33D7  3101               	addfsr 0,1
  3373  33D8  3001               	movlw	1
  3374  33D9  02FE               	subwf	126,f
  3375  33DA  3000               	movlw	0
  3376  33DB  3BFF               	subwfb	127,f
  3377  33DC  087F               	movf	127,w
  3378  33DD  047E               	iorwf	126,w
  3379  33DE  1903               	btfsc	3,2
  3380  33DF  3400               	retlw	0	;all done for this memory range, return
  3381  33E0  2BD6               	goto	clrloop0	;have we reached the end yet?
  3382                           
  3383                           	psect	cstackBANK3
  3384  01E3                     __pcstackBANK3:	
  3385  01E3                     ??_main:	
  3386                           
  3387                           ; 1 bytes @ 0x0
  3388  01E3                     	ds	2
  3389                           
  3390                           	psect	cstackBANK2
  3391  0120                     __pcstackBANK2:	
  3392  0120                     logf@R:	
  3393                           
  3394                           ; 4 bytes @ 0x0
  3395  0120                     	ds	4
  3396  0124                     logf@t1:	
  3397                           
  3398                           ; 4 bytes @ 0x4
  3399  0124                     	ds	4
  3400  0128                     logf@t2:	
  3401                           
  3402                           ; 4 bytes @ 0x8
  3403  0128                     	ds	4
  3404  012C                     _logf$2043:	
  3405                           
  3406                           ; 4 bytes @ 0xC
  3407  012C                     	ds	4
  3408  0130                     _logf$2044:	
  3409                           
  3410                           ; 4 bytes @ 0x10
  3411  0130                     	ds	4
  3412  0134                     _logf$2045:	
  3413                           
  3414                           ; 4 bytes @ 0x14
  3415  0134                     	ds	4
  3416  0138                     _logf$2046:	
  3417                           
  3418                           ; 4 bytes @ 0x18
  3419  0138                     	ds	4
  3420  013C                     logf@k:	
  3421                           
  3422                           ; 2 bytes @ 0x1C
  3423  013C                     	ds	2
  3424  013E                     logf@hfsq:	
  3425                           
  3426                           ; 4 bytes @ 0x1E
  3427  013E                     	ds	4
  3428  0142                     logf@dk:	
  3429                           
  3430                           ; 4 bytes @ 0x22
  3431  0142                     	ds	4
  3432  0146                     logf@s:	
  3433                           
  3434                           ; 4 bytes @ 0x26
  3435  0146                     	ds	4
  3436  014A                     logf@z:	
  3437                           
  3438                           ; 4 bytes @ 0x2A
  3439  014A                     	ds	4
  3440  014E                     logf@w:	
  3441                           
  3442                           ; 4 bytes @ 0x2E
  3443  014E                     	ds	4
  3444  0152                     _logf$2042:	
  3445                           
  3446                           ; 4 bytes @ 0x32
  3447  0152                     	ds	4
  3448  0156                     logf@u:	
  3449                           
  3450                           ; 4 bytes @ 0x36
  3451  0156                     	ds	4
  3452  015A                     logf@f:	
  3453                           
  3454                           ; 4 bytes @ 0x3A
  3455  015A                     	ds	4
  3456  015E                     logf@ix:	
  3457                           
  3458                           ; 4 bytes @ 0x3E
  3459  015E                     	ds	4
  3460  0162                     ??_statemachine:	
  3461                           
  3462                           ; 1 bytes @ 0x42
  3463  0162                     	ds	2
  3464  0164                     statemachine@success:	
  3465                           
  3466                           ; 1 bytes @ 0x44
  3467  0164                     	ds	1
  3468                           
  3469                           	psect	cstackBANK1
  3470  00A0                     __pcstackBANK1:	
  3471  00A0                     ?___flsub:	
  3472  00A0                     vfpfcnvrt@cp:	
  3473                           ; 4 bytes @ 0x0
  3474                           
  3475  00A0                     setShortCircuitProtection@scaler:	
  3476                           ; 2 bytes @ 0x0
  3477                           
  3478  00A0                     setOverCurrentDischargeProtection@scaler:	
  3479                           ; 4 bytes @ 0x0
  3480                           
  3481  00A0                     ___flsub@a:	
  3482                           ; 4 bytes @ 0x0
  3483                           
  3484                           
  3485                           ; 4 bytes @ 0x0
  3486  00A0                     	ds	2
  3487  00A2                     vfpfcnvrt@done:	
  3488                           
  3489                           ; 2 bytes @ 0x2
  3490  00A2                     	ds	2
  3491  00A4                     _vfpfcnvrt$1252:	
  3492  00A4                     ___flsub@b:	
  3493                           ; 2 bytes @ 0x4
  3494                           
  3495  00A4                     _setShortCircuitProtection$2028:	
  3496                           ; 4 bytes @ 0x4
  3497                           
  3498  00A4                     _setOverCurrentDischargeProtection$2029:	
  3499                           ; 4 bytes @ 0x4
  3500                           
  3501                           
  3502                           ; 4 bytes @ 0x4
  3503  00A4                     	ds	2
  3504  00A6                     _vfpfcnvrt$1253:	
  3505                           
  3506                           ; 2 bytes @ 0x6
  3507  00A6                     	ds	2
  3508  00A8                     ?_logf:	
  3509  00A8                     ?___fltol:	
  3510                           ; 4 bytes @ 0x8
  3511                           
  3512  00A8                     setShortCircuitProtection@i:	
  3513                           ; 4 bytes @ 0x8
  3514                           
  3515  00A8                     setOverCurrentDischargeProtection@i:	
  3516                           ; 2 bytes @ 0x8
  3517                           
  3518  00A8                     ___fltol@f1:	
  3519                           ; 2 bytes @ 0x8
  3520                           
  3521  00A8                     logf@x:	
  3522                           ; 4 bytes @ 0x8
  3523                           
  3524  00A8                     vfpfcnvrt@ll:	
  3525                           ; 4 bytes @ 0x8
  3526                           
  3527                           
  3528                           ; 8 bytes @ 0x8
  3529  00A8                     	ds	2
  3530  00AA                     setShortCircuitProtection@i_972:	
  3531  00AA                     setOverCurrentDischargeProtection@i_981:	
  3532                           ; 2 bytes @ 0xA
  3533                           
  3534                           
  3535                           ; 2 bytes @ 0xA
  3536  00AA                     	ds	2
  3537  00AC                     ??_logf:	
  3538  00AC                     ??___fltol:	
  3539                           ; 1 bytes @ 0xC
  3540                           
  3541                           
  3542                           ; 1 bytes @ 0xC
  3543  00AC                     	ds	4
  3544  00B0                     vfpfcnvrt@vp:	
  3545                           
  3546                           ; 2 bytes @ 0x10
  3547  00B0                     	ds	1
  3548  00B1                     ??_updateCurrent:	
  3549  00B1                     ??_updateVoltages:	
  3550                           ; 1 bytes @ 0x11
  3551                           
  3552                           
  3553                           ; 1 bytes @ 0x11
  3554  00B1                     	ds	1
  3555  00B2                     vfpfcnvrt@c:	
  3556                           
  3557                           ; 1 bytes @ 0x12
  3558  00B2                     	ds	1
  3559  00B3                     vfpfcnvrt@llu:	
  3560                           
  3561                           ; 8 bytes @ 0x13
  3562  00B3                     	ds	1
  3563  00B4                     ??_updateTemperatures:	
  3564  00B4                     _updateVoltages$2030:	
  3565                           ; 1 bytes @ 0x14
  3566                           
  3567                           
  3568                           ; 4 bytes @ 0x14
  3569  00B4                     	ds	1
  3570  00B5                     updateCurrent@adcVal:	
  3571                           
  3572                           ; 2 bytes @ 0x15
  3573  00B5                     	ds	2
  3574  00B7                     _updateTemperatures$2031:	
  3575                           
  3576                           ; 4 bytes @ 0x17
  3577  00B7                     	ds	1
  3578  00B8                     updateVoltages@adcVal:	
  3579                           
  3580                           ; 4 bytes @ 0x18
  3581  00B8                     	ds	3
  3582  00BB                     ?_vsnprintf:	
  3583  00BB                     vsnprintf@s:	
  3584                           ; 2 bytes @ 0x1B
  3585                           
  3586  00BB                     _updateTemperatures$2032:	
  3587                           ; 2 bytes @ 0x1B
  3588                           
  3589                           
  3590                           ; 4 bytes @ 0x1B
  3591  00BB                     	ds	2
  3592  00BD                     vsnprintf@n:	
  3593                           
  3594                           ; 2 bytes @ 0x1D
  3595  00BD                     	ds	2
  3596  00BF                     vsnprintf@fmt:	
  3597  00BF                     _updateTemperatures$2033:	
  3598                           ; 2 bytes @ 0x1F
  3599                           
  3600                           
  3601                           ; 4 bytes @ 0x1F
  3602  00BF                     	ds	2
  3603  00C1                     vsnprintf@ap:	
  3604                           
  3605                           ; 1 bytes @ 0x21
  3606  00C1                     	ds	1
  3607  00C2                     _vsnprintf$1824:	
  3608                           
  3609                           ; 2 bytes @ 0x22
  3610  00C2                     	ds	1
  3611  00C3                     _updateTemperatures$2034:	
  3612                           
  3613                           ; 4 bytes @ 0x23
  3614  00C3                     	ds	1
  3615  00C4                     vsnprintf@cnt:	
  3616                           
  3617                           ; 2 bytes @ 0x24
  3618  00C4                     	ds	2
  3619  00C6                     vsnprintf@f:	
  3620                           
  3621                           ; 6 bytes @ 0x26
  3622  00C6                     	ds	1
  3623  00C7                     _updateTemperatures$2035:	
  3624                           
  3625                           ; 4 bytes @ 0x27
  3626  00C7                     	ds	4
  3627  00CB                     _updateTemperatures$2036:	
  3628                           
  3629                           ; 4 bytes @ 0x2B
  3630  00CB                     	ds	1
  3631  00CC                     ?_snprintf:	
  3632  00CC                     snprintf@s:	
  3633                           ; 2 bytes @ 0x2C
  3634                           
  3635                           
  3636                           ; 2 bytes @ 0x2C
  3637  00CC                     	ds	2
  3638  00CE                     snprintf@n:	
  3639                           
  3640                           ; 2 bytes @ 0x2E
  3641  00CE                     	ds	1
  3642  00CF                     _updateTemperatures$2037:	
  3643                           
  3644                           ; 4 bytes @ 0x2F
  3645  00CF                     	ds	1
  3646  00D0                     snprintf@fmt:	
  3647                           
  3648                           ; 2 bytes @ 0x30
  3649  00D0                     	ds	3
  3650  00D3                     _updateTemperatures$2038:	
  3651                           
  3652                           ; 4 bytes @ 0x33
  3653  00D3                     	ds	4
  3654  00D7                     _updateTemperatures$2039:	
  3655                           
  3656                           ; 4 bytes @ 0x37
  3657  00D7                     	ds	4
  3658  00DB                     _updateTemperatures$2040:	
  3659                           
  3660                           ; 4 bytes @ 0x3B
  3661  00DB                     	ds	4
  3662  00DF                     _updateTemperatures$2041:	
  3663                           
  3664                           ; 4 bytes @ 0x3F
  3665  00DF                     	ds	4
  3666  00E3                     updateTemperatures@tmp:	
  3667                           
  3668                           ; 4 bytes @ 0x43
  3669  00E3                     	ds	4
  3670  00E7                     updateTemperatures@adcVal:	
  3671                           
  3672                           ; 2 bytes @ 0x47
  3673  00E7                     	ds	2
  3674  00E9                     updateTemperatures@vtsx:	
  3675                           
  3676                           ; 2 bytes @ 0x49
  3677  00E9                     	ds	2
  3678  00EB                     updateTemperatures@rts:	
  3679                           
  3680                           ; 4 bytes @ 0x4B
  3681  00EB                     	ds	4
  3682                           
  3683                           	psect	cstackCOMMON
  3684  0070                     __pcstackCOMMON:	
  3685  0070                     ?_initClock:	
  3686  0070                     ?_init_GPIO:	
  3687                           ; 1 bytes @ 0x0
  3688                           
  3689  0070                     ?_initWDT:	
  3690                           ; 1 bytes @ 0x0
  3691                           
  3692  0070                     ?_init_I2C:	
  3693                           ; 1 bytes @ 0x0
  3694                           
  3695  0070                     ?_init_TMR1:	
  3696                           ; 1 bytes @ 0x0
  3697                           
  3698  0070                     ?_init_RGB:	
  3699                           ; 1 bytes @ 0x0
  3700                           
  3701  0070                     ?_watchdog_timeout_shutdown:	
  3702                           ; 1 bytes @ 0x0
  3703                           
  3704  0070                     ?_statemachine:	
  3705                           ; 1 bytes @ 0x0
  3706                           
  3707  0070                     ?_RGB_AWAIT_AFE_CONN:	
  3708                           ; 1 bytes @ 0x0
  3709                           
  3710  0070                     ?_init_AFE:	
  3711                           ; 1 bytes @ 0x0
  3712                           
  3713  0070                     ?_AFE_UPDATE:	
  3714                           ; 1 bytes @ 0x0
  3715                           
  3716  0070                     ?_printcellParameters:	
  3717                           ; 1 bytes @ 0x0
  3718                           
  3719  0070                     ?_internal_16:	
  3720                           ; 1 bytes @ 0x0
  3721                           
  3722  0070                     ?_updateCurrent:	
  3723                           ; 1 bytes @ 0x0
  3724                           
  3725  0070                     ?_updateVoltages:	
  3726                           ; 1 bytes @ 0x0
  3727                           
  3728  0070                     ?_updateTemperatures:	
  3729                           ; 1 bytes @ 0x0
  3730                           
  3731  0070                     ?_putch:	
  3732                           ; 1 bytes @ 0x0
  3733                           
  3734  0070                     ?_myIsr:	
  3735                           ; 1 bytes @ 0x0
  3736                           
  3737  0070                     ??_myIsr:	
  3738                           ; 1 bytes @ 0x0
  3739                           
  3740  0070                     ?_main:	
  3741                           ; 1 bytes @ 0x0
  3742                           
  3743  0070                     ?_EUSART_Write:	
  3744                           ; 1 bytes @ 0x0
  3745                           
  3746  0070                     ?_send_I2C_startBit:	
  3747                           ; 1 bytes @ 0x0
  3748                           
  3749  0070                     ?_send_I2C_stopBit:	
  3750                           ; 1 bytes @ 0x0
  3751                           
  3752  0070                     ?_send_I2C_NACK:	
  3753                           ; 1 bytes @ 0x0
  3754                           
  3755  0070                     putch@c:	
  3756                           ; 1 bytes @ 0x0
  3757                           
  3758                           
  3759                           ; 1 bytes @ 0x0
  3760  0070                     	ds	1
  3761  0071                     ??_initClock:	
  3762  0071                     ??_init_GPIO:	
  3763                           ; 1 bytes @ 0x1
  3764                           
  3765  0071                     ??_initWDT:	
  3766                           ; 1 bytes @ 0x1
  3767                           
  3768  0071                     ??_init_I2C:	
  3769                           ; 1 bytes @ 0x1
  3770                           
  3771  0071                     ??_init_TMR1:	
  3772                           ; 1 bytes @ 0x1
  3773                           
  3774  0071                     ??_init_RGB:	
  3775                           ; 1 bytes @ 0x1
  3776                           
  3777  0071                     ?_RGB_color:	
  3778                           ; 1 bytes @ 0x1
  3779                           
  3780  0071                     ??_internal_16:	
  3781                           ; 1 bytes @ 0x1
  3782                           
  3783  0071                     ?_setShuntResistorValue:	
  3784                           ; 1 bytes @ 0x1
  3785                           
  3786  0071                     ??_putch:	
  3787                           ; 1 bytes @ 0x1
  3788                           
  3789  0071                     ??_EUSART_Write:	
  3790                           ; 1 bytes @ 0x1
  3791                           
  3792  0071                     ?_send_I2C_data:	
  3793                           ; 1 bytes @ 0x1
  3794                           
  3795  0071                     ?_send_I2C_controlByte:	
  3796                           ; 1 bytes @ 0x1
  3797                           
  3798  0071                     ??_send_I2C_startBit:	
  3799                           ; 1 bytes @ 0x1
  3800                           
  3801  0071                     ??_send_I2C_stopBit:	
  3802                           ; 1 bytes @ 0x1
  3803                           
  3804  0071                     ??_send_I2C_NACK:	
  3805                           ; 1 bytes @ 0x1
  3806                           
  3807  0071                     ??___aodiv:	
  3808                           ; 1 bytes @ 0x1
  3809                           
  3810  0071                     ??___aomod:	
  3811                           ; 1 bytes @ 0x1
  3812                           
  3813  0071                     ??___lodiv:	
  3814                           ; 1 bytes @ 0x1
  3815                           
  3816  0071                     ??___lomod:	
  3817                           ; 1 bytes @ 0x1
  3818                           
  3819  0071                     ?_fputc:	
  3820                           ; 1 bytes @ 0x1
  3821                           
  3822  0071                     ?_strlen:	
  3823                           ; 2 bytes @ 0x1
  3824                           
  3825  0071                     ?_isupper:	
  3826                           ; 2 bytes @ 0x1
  3827                           
  3828  0071                     ?_isalpha:	
  3829                           ; 2 bytes @ 0x1
  3830                           
  3831  0071                     ?_isdigit:	
  3832                           ; 2 bytes @ 0x1
  3833                           
  3834  0071                     ?_strncmp:	
  3835                           ; 2 bytes @ 0x1
  3836                           
  3837  0071                     ?__Umul8_16:	
  3838                           ; 2 bytes @ 0x1
  3839                           
  3840  0071                     ?_isspace:	
  3841                           ; 2 bytes @ 0x1
  3842                           
  3843  0071                     ?_islower:	
  3844                           ; 2 bytes @ 0x1
  3845                           
  3846  0071                     ?_read_I2C_data:	
  3847                           ; 2 bytes @ 0x1
  3848                           
  3849  0071                     ?___wmul:	
  3850                           ; 2 bytes @ 0x1
  3851                           
  3852  0071                     ?___lmul:	
  3853                           ; 2 bytes @ 0x1
  3854                           
  3855  0071                     ?___xxtofl:	
  3856                           ; 4 bytes @ 0x1
  3857                           
  3858  0071                     EUSART_Write@txData:	
  3859                           ; 4 bytes @ 0x1
  3860                           
  3861  0071                     __Umul8_16@multiplicand:	
  3862                           ; 1 bytes @ 0x1
  3863                           
  3864  0071                     send_I2C_data@databyte:	
  3865                           ; 1 bytes @ 0x1
  3866                           
  3867  0071                     send_I2C_controlByte@BlockAddress:	
  3868                           ; 2 bytes @ 0x1
  3869                           
  3870  0071                     RGB_color@color:	
  3871                           ; 2 bytes @ 0x1
  3872                           
  3873  0071                     ___wmul@multiplier:	
  3874                           ; 2 bytes @ 0x1
  3875                           
  3876  0071                     isalpha@c:	
  3877                           ; 2 bytes @ 0x1
  3878                           
  3879  0071                     isdigit@c:	
  3880                           ; 2 bytes @ 0x1
  3881                           
  3882  0071                     isspace@c:	
  3883                           ; 2 bytes @ 0x1
  3884                           
  3885  0071                     isupper@c:	
  3886                           ; 2 bytes @ 0x1
  3887                           
  3888  0071                     fputc@c:	
  3889                           ; 2 bytes @ 0x1
  3890                           
  3891  0071                     strlen@s:	
  3892                           ; 2 bytes @ 0x1
  3893                           
  3894  0071                     strncmp@_l:	
  3895                           ; 2 bytes @ 0x1
  3896                           
  3897  0071                     islower@c:	
  3898                           ; 2 bytes @ 0x1
  3899                           
  3900  0071                     setShuntResistorValue@res_mOhm:	
  3901                           ; 2 bytes @ 0x1
  3902                           
  3903  0071                     ___lmul@multiplier:	
  3904                           ; 4 bytes @ 0x1
  3905                           
  3906  0071                     ___xxtofl@val:	
  3907                           ; 4 bytes @ 0x1
  3908                           
  3909                           
  3910                           ; 4 bytes @ 0x1
  3911  0071                     	ds	1
  3912  0072                     ?_EUSART_Write_Text:	
  3913  0072                     ___aodiv@counter:	
  3914                           ; 1 bytes @ 0x2
  3915                           
  3916  0072                     ___aomod@counter:	
  3917                           ; 1 bytes @ 0x2
  3918                           
  3919  0072                     ___lomod@counter:	
  3920                           ; 1 bytes @ 0x2
  3921                           
  3922  0072                     EUSART_Write_Text@text:	
  3923                           ; 1 bytes @ 0x2
  3924                           
  3925  0072                     ___lodiv@quotient:	
  3926                           ; 2 bytes @ 0x2
  3927                           
  3928                           
  3929                           ; 8 bytes @ 0x2
  3930  0072                     	ds	1
  3931  0073                     ??_watchdog_timeout_shutdown:	
  3932  0073                     ??_RGB_AWAIT_AFE_CONN:	
  3933                           ; 1 bytes @ 0x3
  3934                           
  3935  0073                     ??_RGB_color:	
  3936                           ; 1 bytes @ 0x3
  3937                           
  3938  0073                     ??_strlen:	
  3939                           ; 1 bytes @ 0x3
  3940                           
  3941  0073                     ??_isupper:	
  3942                           ; 1 bytes @ 0x3
  3943                           
  3944  0073                     ??_isalpha:	
  3945                           ; 1 bytes @ 0x3
  3946                           
  3947  0073                     ??_isdigit:	
  3948                           ; 1 bytes @ 0x3
  3949                           
  3950  0073                     ??__Umul8_16:	
  3951                           ; 1 bytes @ 0x3
  3952                           
  3953  0073                     ??_isspace:	
  3954                           ; 1 bytes @ 0x3
  3955                           
  3956  0073                     ??_islower:	
  3957                           ; 1 bytes @ 0x3
  3958                           
  3959  0073                     ??_send_I2C_data:	
  3960                           ; 1 bytes @ 0x3
  3961                           
  3962  0073                     ??_read_I2C_data:	
  3963                           ; 1 bytes @ 0x3
  3964                           
  3965  0073                     ___aodiv@sign:	
  3966                           ; 1 bytes @ 0x3
  3967                           
  3968  0073                     ___aomod@sign:	
  3969                           ; 1 bytes @ 0x3
  3970                           
  3971  0073                     send_I2C_controlByte@RW_bit:	
  3972                           ; 1 bytes @ 0x3
  3973                           
  3974  0073                     ___wmul@multiplicand:	
  3975                           ; 2 bytes @ 0x3
  3976                           
  3977  0073                     fputc@fp:	
  3978                           ; 2 bytes @ 0x3
  3979                           
  3980  0073                     strlen@a:	
  3981                           ; 2 bytes @ 0x3
  3982                           
  3983  0073                     strncmp@_r:	
  3984                           ; 2 bytes @ 0x3
  3985                           
  3986                           
  3987                           ; 2 bytes @ 0x3
  3988  0073                     	ds	1
  3989  0074                     ??_EUSART_Write_Text:	
  3990  0074                     ?_abs:	
  3991                           ; 1 bytes @ 0x4
  3992                           
  3993  0074                     abs@a:	
  3994                           ; 2 bytes @ 0x4
  3995                           
  3996  0074                     ___aodiv@quotient:	
  3997                           ; 2 bytes @ 0x4
  3998                           
  3999                           
  4000                           ; 8 bytes @ 0x4
  4001  0074                     	ds	1
  4002  0075                     ??_setShuntResistorValue:	
  4003  0075                     ??_fputc:	
  4004                           ; 1 bytes @ 0x5
  4005                           
  4006  0075                     ??_send_I2C_controlByte:	
  4007                           ; 1 bytes @ 0x5
  4008                           
  4009  0075                     ?_I2C_writeRegister:	
  4010                           ; 1 bytes @ 0x5
  4011                           
  4012  0075                     ??___wmul:	
  4013                           ; 1 bytes @ 0x5
  4014                           
  4015  0075                     ??___xxtofl:	
  4016                           ; 1 bytes @ 0x5
  4017                           
  4018  0075                     ?_readRegister:	
  4019                           ; 1 bytes @ 0x5
  4020                           
  4021  0075                     _isspace$1679:	
  4022                           ; 2 bytes @ 0x5
  4023                           
  4024  0075                     EUSART_Write_Text@i:	
  4025                           ; 1 bytes @ 0x5
  4026                           
  4027  0075                     I2C_writeRegister@slaveAddress:	
  4028                           ; 2 bytes @ 0x5
  4029                           
  4030  0075                     readRegister@slaveAddress:	
  4031                           ; 2 bytes @ 0x5
  4032                           
  4033  0075                     ___wmul@product:	
  4034                           ; 2 bytes @ 0x5
  4035                           
  4036  0075                     strncmp@n:	
  4037                           ; 2 bytes @ 0x5
  4038                           
  4039  0075                     __Umul8_16@product:	
  4040                           ; 2 bytes @ 0x5
  4041                           
  4042  0075                     ___lmul@multiplicand:	
  4043                           ; 2 bytes @ 0x5
  4044                           
  4045                           
  4046                           ; 4 bytes @ 0x5
  4047  0075                     	ds	1
  4048  0076                     ??_abs:	
  4049                           
  4050                           ; 1 bytes @ 0x6
  4051  0076                     	ds	1
  4052  0077                     ??_setTemperatureLimitsint:	
  4053  0077                     ??_strncmp:	
  4054                           ; 1 bytes @ 0x7
  4055                           
  4056  0077                     ?_toupper:	
  4057                           ; 1 bytes @ 0x7
  4058                           
  4059  0077                     ?_atoi:	
  4060                           ; 2 bytes @ 0x7
  4061                           
  4062  0077                     I2C_writeRegister@regAddress:	
  4063                           ; 2 bytes @ 0x7
  4064                           
  4065  0077                     readRegister@regAddress:	
  4066                           ; 2 bytes @ 0x7
  4067                           
  4068  0077                     atoi@s:	
  4069                           ; 2 bytes @ 0x7
  4070                           
  4071  0077                     toupper@c:	
  4072                           ; 2 bytes @ 0x7
  4073                           
  4074  0077                     __Umul8_16@word_mpld:	
  4075                           ; 2 bytes @ 0x7
  4076                           
  4077                           
  4078                           ; 2 bytes @ 0x7
  4079  0077                     	ds	1
  4080  0078                     strncmp@l:	
  4081                           
  4082                           ; 2 bytes @ 0x8
  4083  0078                     	ds	1
  4084  0079                     ??_readRegister:	
  4085  0079                     ??___lmul:	
  4086                           ; 1 bytes @ 0x9
  4087                           
  4088  0079                     ??___aldiv:	
  4089                           ; 1 bytes @ 0x9
  4090                           
  4091  0079                     __Umul8_16@multiplier:	
  4092                           ; 1 bytes @ 0x9
  4093                           
  4094  0079                     I2C_writeRegister@data:	
  4095                           ; 1 bytes @ 0x9
  4096                           
  4097  0079                     readRegister@recievedData:	
  4098                           ; 2 bytes @ 0x9
  4099                           
  4100  0079                     _toupper$1787:	
  4101                           ; 2 bytes @ 0x9
  4102                           
  4103                           
  4104                           ; 2 bytes @ 0x9
  4105  0079                     	ds	1
  4106  007A                     ??_stoa:	
  4107  007A                     ??___flneg:	
  4108                           ; 1 bytes @ 0xA
  4109                           
  4110  007A                     ??___flsub:	
  4111                           ; 1 bytes @ 0xA
  4112                           
  4113  007A                     ?_fputs:	
  4114                           ; 1 bytes @ 0xA
  4115                           
  4116  007A                     ___fltol@sign1:	
  4117                           ; 2 bytes @ 0xA
  4118                           
  4119  007A                     ___lodiv@counter:	
  4120                           ; 1 bytes @ 0xA
  4121                           
  4122  007A                     EUSART_Initialize@x:	
  4123                           ; 1 bytes @ 0xA
  4124                           
  4125  007A                     fputs@fp:	
  4126                           ; 2 bytes @ 0xA
  4127                           
  4128  007A                     strncmp@r:	
  4129                           ; 2 bytes @ 0xA
  4130                           
  4131                           
  4132                           ; 2 bytes @ 0xA
  4133  007A                     	ds	1
  4134  007B                     ??_init_AFE:	
  4135  007B                     ??_I2C_writeRegister:	
  4136                           ; 1 bytes @ 0xB
  4137                           
  4138  007B                     enableDischarging@sys_ctrl2:	
  4139                           ; 1 bytes @ 0xB
  4140                           
  4141  007B                     enableCharging@sys_ctrl2:	
  4142                           ; 1 bytes @ 0xB
  4143                           
  4144  007B                     ___fltol@exp1:	
  4145                           ; 1 bytes @ 0xB
  4146                           
  4147                           
  4148                           ; 1 bytes @ 0xB
  4149  007B                     	ds	1
  4150  007C                     ??_AFE_UPDATE:	
  4151  007C                     ??_printcellParameters:	
  4152                           ; 1 bytes @ 0xC
  4153                           
  4154                           
  4155                           	psect	cstackBANK0
  4156  0020                     __pcstackBANK0:	
  4157                           ; 1 bytes @ 0xC
  4158                           
  4159  0020                     ?_setTemperatureLimitsint:	
  4160  0020                     ?_enableDischarging:	
  4161                           ; 1 bytes @ 0x0
  4162                           
  4163  0020                     ?_enableCharging:	
  4164                           ; 1 bytes @ 0x0
  4165                           
  4166  0020                     ??_fputs:	
  4167                           ; 1 bytes @ 0x0
  4168                           
  4169  0020                     ??_toupper:	
  4170                           ; 1 bytes @ 0x0
  4171                           
  4172  0020                     ??_atoi:	
  4173                           ; 1 bytes @ 0x0
  4174                           
  4175  0020                     ?_beginAFEcommunication:	
  4176                           ; 1 bytes @ 0x0
  4177                           
  4178  0020                     ?_stoa:	
  4179                           ; 2 bytes @ 0x0
  4180                           
  4181  0020                     ?___aodiv:	
  4182                           ; 2 bytes @ 0x0
  4183                           
  4184  0020                     ?___aomod:	
  4185                           ; 8 bytes @ 0x0
  4186                           
  4187  0020                     ?___lodiv:	
  4188                           ; 8 bytes @ 0x0
  4189                           
  4190  0020                     ?___lomod:	
  4191                           ; 8 bytes @ 0x0
  4192                           
  4193  0020                     ___xxtofl@sign:	
  4194                           ; 8 bytes @ 0x0
  4195                           
  4196  0020                     setTemperatureLimitsint@minDischarge_degC:	
  4197                           ; 1 bytes @ 0x0
  4198                           
  4199  0020                     enableDischarging@enable:	
  4200                           ; 2 bytes @ 0x0
  4201                           
  4202  0020                     enableCharging@enable:	
  4203                           ; 2 bytes @ 0x0
  4204                           
  4205  0020                     stoa@fp:	
  4206                           ; 2 bytes @ 0x0
  4207                           
  4208  0020                     ___lmul@product:	
  4209                           ; 2 bytes @ 0x0
  4210                           
  4211  0020                     ___aodiv@divisor:	
  4212                           ; 4 bytes @ 0x0
  4213                           
  4214  0020                     ___aomod@divisor:	
  4215                           ; 8 bytes @ 0x0
  4216                           
  4217  0020                     ___lodiv@divisor:	
  4218                           ; 8 bytes @ 0x0
  4219                           
  4220  0020                     ___lomod@divisor:	
  4221                           ; 8 bytes @ 0x0
  4222                           
  4223                           
  4224                           ; 8 bytes @ 0x0
  4225  0020                     	ds	1
  4226  0021                     ___xxtofl@exp:	
  4227                           
  4228                           ; 1 bytes @ 0x1
  4229  0021                     	ds	1
  4230  0022                     ??_beginAFEcommunication:	
  4231  0022                     ??_enableDischarging:	
  4232                           ; 1 bytes @ 0x2
  4233                           
  4234  0022                     ??_enableCharging:	
  4235                           ; 1 bytes @ 0x2
  4236                           
  4237  0022                     fputs@c:	
  4238                           ; 1 bytes @ 0x2
  4239                           
  4240  0022                     setTemperatureLimitsint@maxDischarge_degC:	
  4241                           ; 1 bytes @ 0x2
  4242                           
  4243  0022                     stoa@s:	
  4244                           ; 2 bytes @ 0x2
  4245                           
  4246  0022                     ___xxtofl@arg:	
  4247                           ; 2 bytes @ 0x2
  4248                           
  4249                           
  4250                           ; 4 bytes @ 0x2
  4251  0022                     	ds	1
  4252  0023                     fputs@i:	
  4253                           
  4254                           ; 2 bytes @ 0x3
  4255  0023                     	ds	1
  4256  0024                     ?___aldiv:	
  4257  0024                     setTemperatureLimitsint@minCharge_degC:	
  4258                           ; 4 bytes @ 0x4
  4259                           
  4260  0024                     atoi@neg:	
  4261                           ; 2 bytes @ 0x4
  4262                           
  4263  0024                     ___aldiv@divisor:	
  4264                           ; 2 bytes @ 0x4
  4265                           
  4266  0024                     stoa@nuls:	
  4267                           ; 4 bytes @ 0x4
  4268                           
  4269                           
  4270                           ; 7 bytes @ 0x4
  4271  0024                     	ds	1
  4272  0025                     fputs@s:	
  4273                           
  4274                           ; 1 bytes @ 0x5
  4275  0025                     	ds	1
  4276  0026                     ?_pad:	
  4277  0026                     ?___flmul:	
  4278                           ; 2 bytes @ 0x6
  4279                           
  4280  0026                     setTemperatureLimitsint@maxCharge_degC:	
  4281                           ; 4 bytes @ 0x6
  4282                           
  4283  0026                     pad@fp:	
  4284                           ; 2 bytes @ 0x6
  4285                           
  4286  0026                     _atoi$1652:	
  4287                           ; 2 bytes @ 0x6
  4288                           
  4289  0026                     ___flmul@b:	
  4290                           ; 2 bytes @ 0x6
  4291                           
  4292                           
  4293                           ; 4 bytes @ 0x6
  4294  0026                     	ds	2
  4295  0028                     pad@buf:	
  4296  0028                     _atoi$1654:	
  4297                           ; 1 bytes @ 0x8
  4298                           
  4299  0028                     ___aldiv@dividend:	
  4300                           ; 2 bytes @ 0x8
  4301                           
  4302  0028                     ___aodiv@dividend:	
  4303                           ; 4 bytes @ 0x8
  4304                           
  4305  0028                     ___aomod@dividend:	
  4306                           ; 8 bytes @ 0x8
  4307                           
  4308  0028                     ___lodiv@dividend:	
  4309                           ; 8 bytes @ 0x8
  4310                           
  4311  0028                     ___lomod@dividend:	
  4312                           ; 8 bytes @ 0x8
  4313                           
  4314                           
  4315                           ; 8 bytes @ 0x8
  4316  0028                     	ds	1
  4317  0029                     pad@p:	
  4318                           
  4319                           ; 2 bytes @ 0x9
  4320  0029                     	ds	1
  4321  002A                     _atoi$1653:	
  4322  002A                     ___flmul@a:	
  4323                           ; 1 bytes @ 0xA
  4324                           
  4325                           
  4326                           ; 4 bytes @ 0xA
  4327  002A                     	ds	1
  4328  002B                     ??_pad:	
  4329  002B                     beginAFEcommunication@commSuccess:	
  4330                           ; 1 bytes @ 0xB
  4331                           
  4332  002B                     stoa@i:	
  4333                           ; 2 bytes @ 0xB
  4334                           
  4335  002B                     atoi@n:	
  4336                           ; 2 bytes @ 0xB
  4337                           
  4338                           
  4339                           ; 2 bytes @ 0xB
  4340  002B                     	ds	1
  4341  002C                     ___aldiv@counter:	
  4342  002C                     pad@i:	
  4343                           ; 1 bytes @ 0xC
  4344                           
  4345                           
  4346                           ; 2 bytes @ 0xC
  4347  002C                     	ds	1
  4348  002D                     ___aldiv@sign:	
  4349  002D                     beginAFEcommunication@i:	
  4350                           ; 1 bytes @ 0xD
  4351                           
  4352  002D                     stoa@w:	
  4353                           ; 2 bytes @ 0xD
  4354                           
  4355                           
  4356                           ; 2 bytes @ 0xD
  4357  002D                     	ds	1
  4358  002E                     ??___flmul:	
  4359  002E                     pad@w:	
  4360                           ; 1 bytes @ 0xE
  4361                           
  4362  002E                     ___aldiv@quotient:	
  4363                           ; 2 bytes @ 0xE
  4364                           
  4365                           
  4366                           ; 4 bytes @ 0xE
  4367  002E                     	ds	1
  4368  002F                     stoa@cp:	
  4369                           
  4370                           ; 2 bytes @ 0xF
  4371  002F                     	ds	1
  4372  0030                     ?_ctoa:	
  4373  0030                     ?_dtoa:	
  4374                           ; 2 bytes @ 0x10
  4375                           
  4376  0030                     ?_otoa:	
  4377                           ; 2 bytes @ 0x10
  4378                           
  4379  0030                     ?_utoa:	
  4380                           ; 2 bytes @ 0x10
  4381                           
  4382  0030                     ?_xtoa:	
  4383                           ; 2 bytes @ 0x10
  4384                           
  4385  0030                     ctoa@fp:	
  4386                           ; 2 bytes @ 0x10
  4387                           
  4388  0030                     dtoa@fp:	
  4389                           ; 2 bytes @ 0x10
  4390                           
  4391  0030                     otoa@fp:	
  4392                           ; 2 bytes @ 0x10
  4393                           
  4394  0030                     utoa@fp:	
  4395                           ; 2 bytes @ 0x10
  4396                           
  4397  0030                     xtoa@fp:	
  4398                           ; 2 bytes @ 0x10
  4399                           
  4400                           
  4401                           ; 2 bytes @ 0x10
  4402  0030                     	ds	1
  4403  0031                     stoa@p:	
  4404                           
  4405                           ; 2 bytes @ 0x11
  4406  0031                     	ds	1
  4407  0032                     ?_EUSART_Initialize:	
  4408  0032                     ?_setCellUndervoltageProtection:	
  4409                           ; 1 bytes @ 0x12
  4410                           
  4411  0032                     ?_setCellOvervoltageProtection:	
  4412                           ; 1 bytes @ 0x12
  4413                           
  4414  0032                     ctoa@c:	
  4415                           ; 1 bytes @ 0x12
  4416                           
  4417  0032                     setCellUndervoltageProtection@voltage_mV:	
  4418                           ; 1 bytes @ 0x12
  4419                           
  4420  0032                     setCellOvervoltageProtection@voltage_mV:	
  4421                           ; 2 bytes @ 0x12
  4422                           
  4423  0032                     EUSART_Initialize@baudrate:	
  4424                           ; 2 bytes @ 0x12
  4425                           
  4426  0032                     dtoa@d:	
  4427                           ; 4 bytes @ 0x12
  4428                           
  4429  0032                     otoa@d:	
  4430                           ; 8 bytes @ 0x12
  4431                           
  4432  0032                     utoa@d:	
  4433                           ; 8 bytes @ 0x12
  4434                           
  4435  0032                     xtoa@d:	
  4436                           ; 8 bytes @ 0x12
  4437                           
  4438                           
  4439                           ; 8 bytes @ 0x12
  4440  0032                     	ds	1
  4441  0033                     ??_ctoa:	
  4442  0033                     ___flmul@sign:	
  4443                           ; 1 bytes @ 0x13
  4444                           
  4445  0033                     stoa@l:	
  4446                           ; 1 bytes @ 0x13
  4447                           
  4448                           
  4449                           ; 2 bytes @ 0x13
  4450  0033                     	ds	1
  4451  0034                     ___flmul@aexp:	
  4452  0034                     setCellUndervoltageProtection@delay_s:	
  4453                           ; 1 bytes @ 0x14
  4454                           
  4455  0034                     setCellOvervoltageProtection@delay_s:	
  4456                           ; 2 bytes @ 0x14
  4457                           
  4458  0034                     ctoa@w:	
  4459                           ; 2 bytes @ 0x14
  4460                           
  4461                           
  4462                           ; 2 bytes @ 0x14
  4463  0034                     	ds	1
  4464  0035                     ___flmul@grs:	
  4465                           
  4466                           ; 4 bytes @ 0x15
  4467  0035                     	ds	1
  4468  0036                     ??_EUSART_Initialize:	
  4469  0036                     ??_setCellUndervoltageProtection:	
  4470                           ; 1 bytes @ 0x16
  4471                           
  4472  0036                     ??_setCellOvervoltageProtection:	
  4473                           ; 1 bytes @ 0x16
  4474                           
  4475                           
  4476                           ; 1 bytes @ 0x16
  4477  0036                     	ds	3
  4478  0039                     ___flmul@bexp:	
  4479                           
  4480                           ; 1 bytes @ 0x19
  4481  0039                     	ds	1
  4482  003A                     ??_dtoa:	
  4483  003A                     ??_otoa:	
  4484                           ; 1 bytes @ 0x1A
  4485                           
  4486  003A                     ??_utoa:	
  4487                           ; 1 bytes @ 0x1A
  4488                           
  4489  003A                     xtoa@x:	
  4490                           ; 1 bytes @ 0x1A
  4491                           
  4492  003A                     ___flmul@prod:	
  4493                           ; 1 bytes @ 0x1A
  4494                           
  4495                           
  4496                           ; 4 bytes @ 0x1A
  4497  003A                     	ds	1
  4498  003B                     ??_xtoa:	
  4499  003B                     utoa@p:	
  4500                           ; 1 bytes @ 0x1B
  4501                           
  4502                           
  4503                           ; 2 bytes @ 0x1B
  4504  003B                     	ds	2
  4505  003D                     _dtoa$1201:	
  4506  003D                     utoa@w:	
  4507                           ; 2 bytes @ 0x1D
  4508                           
  4509                           
  4510                           ; 2 bytes @ 0x1D
  4511  003D                     	ds	1
  4512  003E                     ___flmul@temp:	
  4513                           
  4514                           ; 2 bytes @ 0x1E
  4515  003E                     	ds	1
  4516  003F                     dtoa@p:	
  4517  003F                     utoa@n:	
  4518                           ; 2 bytes @ 0x1F
  4519                           
  4520                           
  4521                           ; 8 bytes @ 0x1F
  4522  003F                     	ds	1
  4523  0040                     ?___fldiv:	
  4524  0040                     ___fldiv@a:	
  4525                           ; 4 bytes @ 0x20
  4526                           
  4527                           
  4528                           ; 4 bytes @ 0x20
  4529  0040                     	ds	1
  4530  0041                     dtoa@w:	
  4531                           
  4532                           ; 2 bytes @ 0x21
  4533  0041                     	ds	1
  4534  0042                     otoa@p:	
  4535                           
  4536                           ; 2 bytes @ 0x22
  4537  0042                     	ds	1
  4538  0043                     dtoa@s:	
  4539  0043                     _xtoa$1237:	
  4540                           ; 2 bytes @ 0x23
  4541                           
  4542                           
  4543                           ; 2 bytes @ 0x23
  4544  0043                     	ds	1
  4545  0044                     setCellUndervoltageProtection@uv_trip:	
  4546  0044                     setCellOvervoltageProtection@ov_trip:	
  4547                           ; 1 bytes @ 0x24
  4548                           
  4549  0044                     otoa@t:	
  4550                           ; 1 bytes @ 0x24
  4551                           
  4552  0044                     ___fldiv@b:	
  4553                           ; 2 bytes @ 0x24
  4554                           
  4555                           
  4556                           ; 4 bytes @ 0x24
  4557  0044                     	ds	1
  4558  0045                     setCellUndervoltageProtection@i:	
  4559  0045                     setCellOvervoltageProtection@i:	
  4560                           ; 2 bytes @ 0x25
  4561                           
  4562  0045                     _xtoa$1238:	
  4563                           ; 2 bytes @ 0x25
  4564                           
  4565  0045                     dtoa@n:	
  4566                           ; 2 bytes @ 0x25
  4567                           
  4568                           
  4569                           ; 8 bytes @ 0x25
  4570  0045                     	ds	1
  4571  0046                     otoa@w:	
  4572                           
  4573                           ; 2 bytes @ 0x26
  4574  0046                     	ds	1
  4575  0047                     utoa@i:	
  4576  0047                     xtoa@p:	
  4577                           ; 2 bytes @ 0x27
  4578                           
  4579                           
  4580                           ; 2 bytes @ 0x27
  4581  0047                     	ds	1
  4582  0048                     ??___fldiv:	
  4583  0048                     otoa@n:	
  4584                           ; 1 bytes @ 0x28
  4585                           
  4586                           
  4587                           ; 8 bytes @ 0x28
  4588  0048                     	ds	1
  4589  0049                     xtoa@w:	
  4590                           
  4591                           ; 2 bytes @ 0x29
  4592  0049                     	ds	2
  4593  004B                     xtoa@n:	
  4594                           
  4595                           ; 8 bytes @ 0x2B
  4596  004B                     	ds	2
  4597  004D                     dtoa@i:	
  4598  004D                     ___fldiv@rem:	
  4599                           ; 2 bytes @ 0x2D
  4600                           
  4601                           
  4602                           ; 4 bytes @ 0x2D
  4603  004D                     	ds	3
  4604  0050                     otoa@i:	
  4605                           
  4606                           ; 2 bytes @ 0x30
  4607  0050                     	ds	1
  4608  0051                     ___fldiv@sign:	
  4609                           
  4610                           ; 1 bytes @ 0x31
  4611  0051                     	ds	1
  4612  0052                     ___fldiv@new_exp:	
  4613                           
  4614                           ; 2 bytes @ 0x32
  4615  0052                     	ds	1
  4616  0053                     xtoa@i:	
  4617                           
  4618                           ; 2 bytes @ 0x33
  4619  0053                     	ds	1
  4620  0054                     ___fldiv@grs:	
  4621                           
  4622                           ; 4 bytes @ 0x34
  4623  0054                     	ds	1
  4624  0055                     xtoa@c:	
  4625                           
  4626                           ; 2 bytes @ 0x35
  4627  0055                     	ds	2
  4628  0057                     ?_vfpfcnvrt:	
  4629  0057                     vfpfcnvrt@fp:	
  4630                           ; 2 bytes @ 0x37
  4631                           
  4632                           
  4633                           ; 2 bytes @ 0x37
  4634  0057                     	ds	1
  4635  0058                     ___fldiv@bexp:	
  4636                           
  4637                           ; 1 bytes @ 0x38
  4638  0058                     	ds	1
  4639  0059                     vfpfcnvrt@fmt:	
  4640  0059                     ___fldiv@aexp:	
  4641                           ; 1 bytes @ 0x39
  4642                           
  4643                           
  4644                           ; 1 bytes @ 0x39
  4645  0059                     	ds	1
  4646  005A                     ?___flge:	
  4647  005A                     ?___flneg:	
  4648                           ; 1 bit 
  4649                           
  4650  005A                     ?___fladd:	
  4651                           ; 4 bytes @ 0x3A
  4652                           
  4653  005A                     vfpfcnvrt@ap:	
  4654                           ; 4 bytes @ 0x3A
  4655                           
  4656  005A                     ___flge@ff1:	
  4657                           ; 1 bytes @ 0x3A
  4658                           
  4659  005A                     ___flneg@f1:	
  4660                           ; 4 bytes @ 0x3A
  4661                           
  4662  005A                     ___fladd@b:	
  4663                           ; 4 bytes @ 0x3A
  4664                           
  4665                           
  4666                           ; 4 bytes @ 0x3A
  4667  005A                     	ds	1
  4668  005B                     ??_vfpfcnvrt:	
  4669                           
  4670                           ; 1 bytes @ 0x3B
  4671  005B                     	ds	3
  4672  005E                     ___flge@ff2:	
  4673  005E                     ___fladd@a:	
  4674                           ; 4 bytes @ 0x3E
  4675                           
  4676                           
  4677                           ; 4 bytes @ 0x3E
  4678  005E                     	ds	3
  4679  0061                     ?_vfprintf:	
  4680  0061                     vfprintf@fp:	
  4681                           ; 2 bytes @ 0x41
  4682                           
  4683                           
  4684                           ; 2 bytes @ 0x41
  4685  0061                     	ds	1
  4686  0062                     ??___flge:	
  4687  0062                     ??___fladd:	
  4688                           ; 1 bytes @ 0x42
  4689                           
  4690                           
  4691                           ; 1 bytes @ 0x42
  4692  0062                     	ds	1
  4693  0063                     vfprintf@fmt:	
  4694                           
  4695                           ; 2 bytes @ 0x43
  4696  0063                     	ds	2
  4697  0065                     vfprintf@ap:	
  4698                           
  4699                           ; 1 bytes @ 0x45
  4700  0065                     	ds	1
  4701  0066                     ?_setShortCircuitProtection:	
  4702  0066                     ?_setOverCurrentDischargeProtection:	
  4703                           ; 1 bytes @ 0x46
  4704                           
  4705  0066                     ??_vfprintf:	
  4706                           ; 1 bytes @ 0x46
  4707                           
  4708  0066                     setShortCircuitProtection@current_mA:	
  4709                           ; 1 bytes @ 0x46
  4710                           
  4711  0066                     setOverCurrentDischargeProtection@current_mA:	
  4712                           ; 4 bytes @ 0x46
  4713                           
  4714                           
  4715                           ; 4 bytes @ 0x46
  4716  0066                     	ds	2
  4717  0068                     vfprintf@cfmt:	
  4718                           
  4719                           ; 2 bytes @ 0x48
  4720  0068                     	ds	2
  4721  006A                     ??_vsnprintf:	
  4722  006A                     ___fladd@signs:	
  4723                           ; 1 bytes @ 0x4A
  4724                           
  4725  006A                     setShortCircuitProtection@delay_us:	
  4726                           ; 1 bytes @ 0x4A
  4727                           
  4728  006A                     setOverCurrentDischargeProtection@delay_ms:	
  4729                           ; 2 bytes @ 0x4A
  4730                           
  4731                           
  4732                           ; 2 bytes @ 0x4A
  4733  006A                     	ds	1
  4734  006B                     ___fladd@aexp:	
  4735                           
  4736                           ; 1 bytes @ 0x4B
  4737  006B                     	ds	1
  4738  006C                     ??_snprintf:	
  4739  006C                     ??_setShortCircuitProtection:	
  4740                           ; 1 bytes @ 0x4C
  4741                           
  4742  006C                     ??_setOverCurrentDischargeProtection:	
  4743                           ; 1 bytes @ 0x4C
  4744                           
  4745  006C                     ___fladd@bexp:	
  4746                           ; 1 bytes @ 0x4C
  4747                           
  4748                           
  4749                           ; 1 bytes @ 0x4C
  4750  006C                     	ds	1
  4751  006D                     ___fladd@grs:	
  4752                           
  4753                           ; 1 bytes @ 0x4D
  4754  006D                     	ds	2
  4755  006F                     snprintf@ap:	
  4756                           
  4757                           ; 1 bytes @ 0x4F
  4758  006F                     	ds	1
  4759                           
  4760                           	psect	maintext
  4761  3645                     __pmaintext:	
  4762 ;;
  4763 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4764 ;;
  4765 ;; *************** function _main *****************
  4766 ;; Defined at:
  4767 ;;		line 72 in file "main.c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;		None
  4770 ;; Auto vars:     Size  Location     Type
  4771 ;;		None
  4772 ;; Return value:  Size  Location     Type
  4773 ;;                  1    wreg      void 
  4774 ;; Registers used:
  4775 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4776 ;; Tracked objects:
  4777 ;;		On entry : B1F/0
  4778 ;;		On exit  : 0/0
  4779 ;;		Unchanged: 0/0
  4780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4783 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4784 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4785 ;;Total ram usage:        2 bytes
  4786 ;; Hardware stack levels required when called:   12
  4787 ;; This function calls:
  4788 ;;		_EUSART_Initialize
  4789 ;;		_initClock
  4790 ;;		_initWDT
  4791 ;;		_init_GPIO
  4792 ;;		_init_I2C
  4793 ;;		_init_RGB
  4794 ;;		_init_TMR1
  4795 ;;		_statemachine
  4796 ;;		_watchdog_timeout_shutdown
  4797 ;; This function is called by:
  4798 ;;		Startup code after reset
  4799 ;; This function uses a non-reentrant model
  4800 ;;
  4801                           
  4802                           
  4803                           ;psect for function _main
  4804  3645                     _main:	
  4805                           
  4806                           ;main.c: 75:     initClock();
  4807                           
  4808                           ;incstack = 0
  4809                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4810  3645  3187  27FD  31B6   	fcall	_initClock
  4811                           
  4812                           ;main.c: 76:     init_GPIO();
  4813  3648  3188  2008  31B6   	fcall	_init_GPIO
  4814                           
  4815                           ;main.c: 77:     initWDT();
  4816  364B  31A0  2000  31B6   	fcall	_initWDT
  4817                           
  4818                           ;main.c: 78:     init_I2C();
  4819  364E  31B3  23E1  31B6   	fcall	_init_I2C
  4820                           
  4821                           ;main.c: 79:     EUSART_Initialize(9600);
  4822  3651  3000               	movlw	0
  4823  3652  0020               	movlb	0	; select bank0
  4824  3653  00B5               	movwf	EUSART_Initialize@baudrate+3
  4825  3654  3000               	movlw	0
  4826  3655  00B4               	movwf	EUSART_Initialize@baudrate+2
  4827  3656  3025               	movlw	37
  4828  3657  00B3               	movwf	EUSART_Initialize@baudrate+1
  4829  3658  3080               	movlw	128
  4830  3659  00B2               	movwf	EUSART_Initialize@baudrate
  4831  365A  31AD  250A  31B6   	fcall	_EUSART_Initialize
  4832                           
  4833                           ;main.c: 80:     init_TMR1();
  4834  365D  31B3  23CA  31B6   	fcall	_init_TMR1
  4835                           
  4836                           ;main.c: 81:     init_RGB();
  4837  3660  31B3  2386  31B6   	fcall	_init_RGB
  4838                           
  4839                           ;main.c: 84:     watchdog_timeout_shutdown();
  4840  3663  31B4  24DD  31B6   	fcall	_watchdog_timeout_shutdown
  4841  3666                     l8436:	
  4842                           
  4843                           ;main.c: 88:         statemachine();
  4844  3666  31A9  2164  31B6   	fcall	_statemachine
  4845                           
  4846                           ;main.c: 90:         _delay((unsigned long)((1000)*(16000000/4000.0)));
  4847  3669  3015               	movlw	21
  4848  366A  0023               	movlb	3	; select bank3
  4849  366B  00E4               	movwf	(??_main^(0+384)+1)
  4850  366C  304B               	movlw	75
  4851  366D  00E3               	movwf	??_main^(0+384)
  4852  366E  30BE               	movlw	190
  4853  366F                     u11497:	
  4854  366F  0B89               	decfsz	9,f
  4855  3670  2E6F               	goto	u11497
  4856  3671  0BE3               	decfsz	??_main^(0+384),f
  4857  3672  2E6F               	goto	u11497
  4858  3673  0BE4               	decfsz	(??_main^(0+384)+1),f
  4859  3674  2E6F               	goto	u11497
  4860  3675  0000               	nop
  4861  3676  2E66               	goto	l8436
  4862  3677                     __end_of_main:	
  4863                           
  4864                           	psect	text1
  4865  34DD                     __ptext1:	
  4866 ;; *************** function _watchdog_timeout_shutdown *****************
  4867 ;; Defined at:
  4868 ;;		line 3 in file "algorithms.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;		None
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;		None
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  1    wreg      void 
  4875 ;; Registers used:
  4876 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4884 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4885 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4886 ;;Total ram usage:        2 bytes
  4887 ;; Hardware stack levels used:    1
  4888 ;; Hardware stack levels required when called:    2
  4889 ;; This function calls:
  4890 ;;		_RGB_color
  4891 ;; This function is called by:
  4892 ;;		_main
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           
  4897                           ;psect for function _watchdog_timeout_shutdown
  4898  34DD                     _watchdog_timeout_shutdown:	
  4899                           
  4900                           ;algorithms.c: 5:     if (!STATUSbits.nTO) {
  4901                           
  4902                           ;incstack = 0
  4903                           ; Regs used in _watchdog_timeout_shutdown: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4904  34DD  0020               	movlb	0	; select bank0
  4905  34DE  1A03               	btfsc	3,4	;volatile
  4906  34DF  0008               	return
  4907                           
  4908                           ;algorithms.c: 6:         RGB_color(0);
  4909  34E0  3000               	movlw	0
  4910  34E1  00F1               	movwf	RGB_color@color
  4911  34E2  00F2               	movwf	RGB_color@color+1
  4912  34E3  31B5  256E  31B4   	fcall	_RGB_color
  4913                           
  4914                           ;algorithms.c: 7:          _delay((unsigned long)((2000)*(16000000/4000.0)));
  4915  34E6  3029               	movlw	41
  4916  34E7  00F4               	movwf	??_watchdog_timeout_shutdown+1
  4917  34E8  3096               	movlw	150
  4918  34E9  00F3               	movwf	??_watchdog_timeout_shutdown
  4919  34EA  307F               	movlw	127
  4920  34EB                     u11507:	
  4921  34EB  0B89               	decfsz	9,f
  4922  34EC  2CEB               	goto	u11507
  4923  34ED  0BF3               	decfsz	??_watchdog_timeout_shutdown,f
  4924  34EE  2CEB               	goto	u11507
  4925  34EF  0BF4               	decfsz	??_watchdog_timeout_shutdown+1,f
  4926  34F0  2CEB               	goto	u11507
  4927  34F1  0000               	nop
  4928                           
  4929                           ;algorithms.c: 8:          currState = 3;
  4930  34F2  3003               	movlw	3
  4931  34F3  00F3               	movwf	??_watchdog_timeout_shutdown
  4932  34F4  0873               	movf	??_watchdog_timeout_shutdown,w
  4933  34F5  0023               	movlb	3	; select bank3
  4934  34F6  00D9               	movwf	_currState^(0+384)
  4935  34F7  0008               	return
  4936  34F8                     __end_of_watchdog_timeout_shutdown:	
  4937                           
  4938                           	psect	text2
  4939  2964                     __ptext2:	
  4940 ;; *************** function _statemachine *****************
  4941 ;; Defined at:
  4942 ;;		line 96 in file "main.c"
  4943 ;; Parameters:    Size  Location     Type
  4944 ;;		None
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;  success         1   68[BANK2 ] unsigned char 
  4947 ;; Return value:  Size  Location     Type
  4948 ;;                  1    wreg      void 
  4949 ;; Registers used:
  4950 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4951 ;; Tracked objects:
  4952 ;;		On entry : 0/0
  4953 ;;		On exit  : 0/0
  4954 ;;		Unchanged: 0/0
  4955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4957 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4958 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4959 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4960 ;;Total ram usage:        3 bytes
  4961 ;; Hardware stack levels used:    1
  4962 ;; Hardware stack levels required when called:   11
  4963 ;; This function calls:
  4964 ;;		_AFE_UPDATE
  4965 ;;		_EUSART_Write_Text
  4966 ;;		_RGB_AWAIT_AFE_CONN
  4967 ;;		_RGB_color
  4968 ;;		_beginAFEcommunication
  4969 ;;		_init_AFE
  4970 ;;		_printcellParameters
  4971 ;;		_snprintf
  4972 ;; This function is called by:
  4973 ;;		_main
  4974 ;; This function uses a non-reentrant model
  4975 ;;
  4976                           
  4977                           
  4978                           ;psect for function _statemachine
  4979  2964                     _statemachine:	
  4980                           
  4981                           ;main.c: 98:     switch (currState) {
  4982                           
  4983                           ;incstack = 0
  4984                           ; Regs used in _statemachine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4985  2964  29C3               	goto	l8412
  4986  2965                     l8378:	
  4987                           
  4988                           ;main.c: 101:             if (tmr1_flag) {
  4989  2965  0021               	movlb	1	; select bank1
  4990  2966  086F               	movf	_tmr1_flag^(0+128),w	;volatile
  4991  2967  1903               	btfsc	3,2
  4992  2968  0008               	return
  4993                           
  4994                           ;main.c: 102:                 tmr1_flag = 0;
  4995  2969  01EF               	clrf	_tmr1_flag^(0+128)	;volatile
  4996                           
  4997                           ;main.c: 103:                 RGB_AWAIT_AFE_CONN();
  4998  296A  31B5  258F  31A9   	fcall	_RGB_AWAIT_AFE_CONN
  4999                           
  5000                           ;main.c: 104:                 uint8_t success = beginAFEcommunication();
  5001  296D  31AD  25B3  31A9   	fcall	_beginAFEcommunication
  5002  2970  0020               	movlb	0	; select bank0
  5003  2971  0820               	movf	?_beginAFEcommunication,w
  5004  2972  0022               	movlb	2	; select bank2
  5005  2973  00E2               	movwf	??_statemachine^(0+256)
  5006  2974  0862               	movf	??_statemachine^(0+256),w
  5007  2975  00E4               	movwf	statemachine@success^(0+256)
  5008                           
  5009                           ;main.c: 109:                 if (success) {
  5010  2976  0864               	movf	statemachine@success^(0+256),w
  5011  2977  1903               	btfsc	3,2
  5012  2978  0008               	return
  5013                           
  5014                           ;main.c: 110:                     T1CONbits.TMR1ON = 0;
  5015  2979  0020               	movlb	0	; select bank0
  5016  297A  1018               	bcf	24,0	;volatile
  5017                           
  5018                           ;main.c: 111:                     PIE1bits.TMR1IE = 0;
  5019  297B  0021               	movlb	1	; select bank1
  5020  297C  1011               	bcf	17,0	;volatile
  5021                           
  5022                           ;main.c: 112:                     RGB_color(0);
  5023  297D  3000               	movlw	0
  5024  297E  00F1               	movwf	RGB_color@color
  5025  297F  00F2               	movwf	RGB_color@color+1
  5026  2980  31B5  256E         	fcall	_RGB_color
  5027                           
  5028                           ;main.c: 113:                     tmr1_flag = 0;
  5029  2982  0021               	movlb	1	; select bank1
  5030  2983  01EF               	clrf	_tmr1_flag^(0+128)	;volatile
  5031                           
  5032                           ;main.c: 126:                     currState = 1;
  5033  2984  0023               	movlb	3	; select bank3
  5034  2985  01D9               	clrf	_currState^(0+384)
  5035  2986  0AD9               	incf	_currState^(0+384),f
  5036  2987  0008               	return
  5037  2988                     l8396:	
  5038                           
  5039                           ;main.c: 135:             init_AFE();
  5040  2988  31A0  2006  31A9   	fcall	_init_AFE
  5041                           
  5042                           ;main.c: 154:             RGB_color(1);
  5043  298B  3001               	movlw	1
  5044  298C  00F1               	movwf	RGB_color@color
  5045  298D  3000               	movlw	0
  5046  298E  00F2               	movwf	RGB_color@color+1
  5047  298F  31B5  256E         	fcall	_RGB_color
  5048                           
  5049                           ;main.c: 155:             currState = 2;
  5050  2991  3002               	movlw	2
  5051  2992  0022               	movlb	2	; select bank2
  5052  2993  00E2               	movwf	??_statemachine^(0+256)
  5053  2994  0862               	movf	??_statemachine^(0+256),w
  5054  2995  0023               	movlb	3	; select bank3
  5055  2996  00D9               	movwf	_currState^(0+384)
  5056                           
  5057                           ;main.c: 156:             break;
  5058  2997  0008               	return
  5059  2998                     l8400:	
  5060                           
  5061                           ;main.c: 160:             AFE_UPDATE();
  5062  2998  31B4  2474  31A9   	fcall	_AFE_UPDATE
  5063  299B  0064               	clrwdt	;# 
  5064                           
  5065                           ;main.c: 164:             printcellParameters();
  5066  299C  319B  237A  31A9   	fcall	_printcellParameters
  5067                           
  5068                           ;main.c: 166:             _delay((unsigned long)((5000)*(16000000/4000.0)));
  5069  299F  3066               	movlw	102
  5070  29A0  0022               	movlb	2	; select bank2
  5071  29A1  00E3               	movwf	(??_statemachine^(0+256)+1)
  5072  29A2  3076               	movlw	118
  5073  29A3  00E2               	movwf	??_statemachine^(0+256)
  5074  29A4  30C1               	movlw	193
  5075  29A5                     u11517:	
  5076  29A5  0B89               	decfsz	9,f
  5077  29A6  29A5               	goto	u11517
  5078  29A7  0BE2               	decfsz	??_statemachine^(0+256),f
  5079  29A8  29A5               	goto	u11517
  5080  29A9  0BE3               	decfsz	(??_statemachine^(0+256)+1),f
  5081  29AA  29A5               	goto	u11517
  5082                           
  5083                           ;main.c: 168:             break;
  5084  29AB  0008               	return
  5085  29AC                     l8406:	
  5086                           
  5087                           ;main.c: 172:              snprintf(messageBuffer, 127, "WATCHDOG NOT KICKED: AFE comms 
      +                          error \n\r");
  5088  29AC  3071               	movlw	113
  5089  29AD  0021               	movlb	1	; select bank1
  5090  29AE  00CC               	movwf	snprintf@s^(0+128)
  5091  29AF  3027               	movlw	39
  5092  29B0  00CD               	movwf	(snprintf@s^(0+128)+1)
  5093  29B1  307F               	movlw	127
  5094  29B2  00CE               	movwf	snprintf@n^(0+128)
  5095  29B3  3000               	movlw	0
  5096  29B4  00CF               	movwf	(snprintf@n^(0+128)+1)
  5097  29B5  3049               	movlw	low (STR_1| (0+32768))
  5098  29B6  00D0               	movwf	snprintf@fmt^(0+128)
  5099  29B7  30B8               	movlw	high (STR_1| (0+32768))
  5100  29B8  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5101  29B9  31B4  24C2  31A9   	fcall	_snprintf
  5102                           
  5103                           ;main.c: 173:              EUSART_Write_Text(messageBuffer);
  5104  29BC  3071               	movlw	113
  5105  29BD  00F2               	movwf	EUSART_Write_Text@text
  5106  29BE  3027               	movlw	39
  5107  29BF  00F3               	movwf	EUSART_Write_Text@text+1
  5108  29C0  31B4  248D         	fcall	_EUSART_Write_Text
  5109                           
  5110                           ;main.c: 174:             break;
  5111  29C2  0008               	return
  5112  29C3                     l8412:	
  5113  29C3  0023               	movlb	3	; select bank3
  5114  29C4  0859               	movf	_currState^(0+384),w
  5115  29C5  0022               	movlb	2	; select bank2
  5116  29C6  00E2               	movwf	??_statemachine^(0+256)
  5117  29C7  01E3               	clrf	(??_statemachine^(0+256)+1)
  5118                           
  5119                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5120                           ; Switch size 1, requested type "simple"
  5121                           ; Number of cases is 1, Range of values is 0 to 0
  5122                           ; switch strategies available:
  5123                           ; Name         Instructions Cycles
  5124                           ; simple_byte            4     3 (average)
  5125                           ; direct_byte            8     6 (fixed)
  5126                           ; jumptable            260     6 (fixed)
  5127                           ;	Chosen strategy is simple_byte
  5128  29C8  0863               	movf	(??_statemachine+1)^(0+256),w
  5129  29C9  3A00               	xorlw	0	; case 0
  5130  29CA  1903               	skipnz
  5131  29CB  29CD               	goto	l8604
  5132  29CC  29DB               	goto	l164
  5133  29CD                     l8604:	
  5134                           
  5135                           ; Switch size 1, requested type "simple"
  5136                           ; Number of cases is 4, Range of values is 0 to 3
  5137                           ; switch strategies available:
  5138                           ; Name         Instructions Cycles
  5139                           ; simple_byte           13     7 (average)
  5140                           ; direct_byte           14     6 (fixed)
  5141                           ; jumptable            260     6 (fixed)
  5142                           ;	Chosen strategy is simple_byte
  5143  29CD  0862               	movf	??_statemachine^(0+256),w
  5144  29CE  3A00               	xorlw	0	; case 0
  5145  29CF  1903               	skipnz
  5146  29D0  2965               	goto	l8378
  5147  29D1  3A01               	xorlw	1	; case 1
  5148  29D2  1903               	skipnz
  5149  29D3  2988               	goto	l8396
  5150  29D4  3A03               	xorlw	3	; case 2
  5151  29D5  1903               	skipnz
  5152  29D6  2998               	goto	l8400
  5153  29D7  3A01               	xorlw	1	; case 3
  5154  29D8  1903               	skipnz
  5155  29D9  29AC               	goto	l8406
  5156  29DA  29DB               	goto	l164
  5157  29DB                     l164:	
  5158  29DB  0008               	return
  5159  29DC                     __end_of_statemachine:	
  5160                           
  5161                           	psect	text3
  5162  1B7A                     __ptext3:	
  5163 ;; *************** function _printcellParameters *****************
  5164 ;; Defined at:
  5165 ;;		line 314 in file "BQ76920.c"
  5166 ;; Parameters:    Size  Location     Type
  5167 ;;		None
  5168 ;; Auto vars:     Size  Location     Type
  5169 ;;		None
  5170 ;; Return value:  Size  Location     Type
  5171 ;;                  1    wreg      void 
  5172 ;; Registers used:
  5173 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5174 ;; Tracked objects:
  5175 ;;		On entry : 0/0
  5176 ;;		On exit  : 0/0
  5177 ;;		Unchanged: 0/0
  5178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5183 ;;Total ram usage:        0 bytes
  5184 ;; Hardware stack levels used:    1
  5185 ;; Hardware stack levels required when called:   10
  5186 ;; This function calls:
  5187 ;;		_EUSART_Write_Text
  5188 ;;		_readRegister
  5189 ;;		_snprintf
  5190 ;; This function is called by:
  5191 ;;		_statemachine
  5192 ;; This function uses a non-reentrant model
  5193 ;;
  5194                           
  5195                           
  5196                           ;psect for function _printcellParameters
  5197  1B7A                     _printcellParameters:	
  5198                           
  5199                           ;BQ76920.c: 315:     snprintf(messageBuffer, 127, "Cell batt: %i ,%d, %d , %d, %d, %d Ba
      +                          tt Curr: %i Temp: %i CTRL2: %i \n\r", batVoltage,cellVoltages[0],cellVoltages[1],cellVol
      +                          tages[2],cellVoltages[3],cellVoltages[4], batCurrent, temperatureThermistor,readRegister
      +                          (0x18, 0x05));
  5200                           
  5201                           ;incstack = 0
  5202                           ; Regs used in _printcellParameters: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5203  1B7A  3071               	movlw	113
  5204  1B7B  0021               	movlb	1	; select bank1
  5205  1B7C  00CC               	movwf	snprintf@s^(0+128)
  5206  1B7D  3027               	movlw	39
  5207  1B7E  00CD               	movwf	(snprintf@s^(0+128)+1)
  5208  1B7F  307F               	movlw	127
  5209  1B80  00CE               	movwf	snprintf@n^(0+128)
  5210  1B81  3000               	movlw	0
  5211  1B82  00CF               	movwf	(snprintf@n^(0+128)+1)
  5212  1B83  3002               	movlw	low (STR_2| (0+32768))
  5213  1B84  00D0               	movwf	snprintf@fmt^(0+128)
  5214  1B85  30B8               	movlw	high (STR_2| (0+32768))
  5215  1B86  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5216  1B87  0023               	movlb	3	; select bank3
  5217  1B88  0841               	movf	(_batVoltage+3)^(0+384),w
  5218  1B89  0021               	movlb	1	; select bank1
  5219  1B8A  00D5               	movwf	((?_snprintf+3)^(0+128)+6)
  5220  1B8B  0023               	movlb	3	; select bank3
  5221  1B8C  0840               	movf	(_batVoltage+2)^(0+384),w
  5222  1B8D  0021               	movlb	1	; select bank1
  5223  1B8E  00D4               	movwf	((?_snprintf+2)^(0+128)+6)
  5224  1B8F  0023               	movlb	3	; select bank3
  5225  1B90  083F               	movf	(_batVoltage+1)^(0+384),w
  5226  1B91  0021               	movlb	1	; select bank1
  5227  1B92  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5228  1B93  0023               	movlb	3	; select bank3
  5229  1B94  083E               	movf	_batVoltage^(0+384),w
  5230  1B95  0021               	movlb	1	; select bank1
  5231  1B96  00D2               	movwf	(?_snprintf^(0+128)+6)
  5232  1B97  0023               	movlb	3	; select bank3
  5233  1B98  0821               	movf	(_cellVoltages+1)^(0+384),w
  5234  1B99  0021               	movlb	1	; select bank1
  5235  1B9A  00D7               	movwf	((?_snprintf+1)^(0+128)+10)
  5236  1B9B  0023               	movlb	3	; select bank3
  5237  1B9C  0820               	movf	_cellVoltages^(0+384),w
  5238  1B9D  0021               	movlb	1	; select bank1
  5239  1B9E  00D6               	movwf	(?_snprintf^(0+128)+10)
  5240  1B9F  0023               	movlb	3	; select bank3
  5241  1BA0  0823               	movf	((_cellVoltages+1)^(0+384)+2),w
  5242  1BA1  0021               	movlb	1	; select bank1
  5243  1BA2  00D9               	movwf	((?_snprintf+1)^(0+128)+12)
  5244  1BA3  0023               	movlb	3	; select bank3
  5245  1BA4  0822               	movf	(_cellVoltages^(0+384)+2),w
  5246  1BA5  0021               	movlb	1	; select bank1
  5247  1BA6  00D8               	movwf	(?_snprintf^(0+128)+12)
  5248  1BA7  0023               	movlb	3	; select bank3
  5249  1BA8  0825               	movf	((_cellVoltages+1)^(0+384)+4),w
  5250  1BA9  0021               	movlb	1	; select bank1
  5251  1BAA  00DB               	movwf	((?_snprintf+1)^(0+128)+14)
  5252  1BAB  0023               	movlb	3	; select bank3
  5253  1BAC  0824               	movf	(_cellVoltages^(0+384)+4),w
  5254  1BAD  0021               	movlb	1	; select bank1
  5255  1BAE  00DA               	movwf	(?_snprintf^(0+128)+14)
  5256  1BAF  0023               	movlb	3	; select bank3
  5257  1BB0  0827               	movf	((_cellVoltages+1)^(0+384)+6),w
  5258  1BB1  0021               	movlb	1	; select bank1
  5259  1BB2  00DD               	movwf	((?_snprintf+1)^(0+128)+16)
  5260  1BB3  0023               	movlb	3	; select bank3
  5261  1BB4  0826               	movf	(_cellVoltages^(0+384)+6),w
  5262  1BB5  0021               	movlb	1	; select bank1
  5263  1BB6  00DC               	movwf	(?_snprintf^(0+128)+16)
  5264  1BB7  0023               	movlb	3	; select bank3
  5265  1BB8  0829               	movf	((_cellVoltages+1)^(0+384)+8),w
  5266  1BB9  0021               	movlb	1	; select bank1
  5267  1BBA  00DF               	movwf	((?_snprintf+1)^(0+128)+18)
  5268  1BBB  0023               	movlb	3	; select bank3
  5269  1BBC  0828               	movf	(_cellVoltages^(0+384)+8),w
  5270  1BBD  0021               	movlb	1	; select bank1
  5271  1BBE  00DE               	movwf	(?_snprintf^(0+128)+18)
  5272  1BBF  0023               	movlb	3	; select bank3
  5273  1BC0  083D               	movf	(_batCurrent+3)^(0+384),w
  5274  1BC1  0021               	movlb	1	; select bank1
  5275  1BC2  00E3               	movwf	((?_snprintf+3)^(0+128)+20)
  5276  1BC3  0023               	movlb	3	; select bank3
  5277  1BC4  083C               	movf	(_batCurrent+2)^(0+384),w
  5278  1BC5  0021               	movlb	1	; select bank1
  5279  1BC6  00E2               	movwf	((?_snprintf+2)^(0+128)+20)
  5280  1BC7  0023               	movlb	3	; select bank3
  5281  1BC8  083B               	movf	(_batCurrent+1)^(0+384),w
  5282  1BC9  0021               	movlb	1	; select bank1
  5283  1BCA  00E1               	movwf	((?_snprintf+1)^(0+128)+20)
  5284  1BCB  0023               	movlb	3	; select bank3
  5285  1BCC  083A               	movf	_batCurrent^(0+384),w
  5286  1BCD  0021               	movlb	1	; select bank1
  5287  1BCE  00E0               	movwf	(?_snprintf^(0+128)+20)
  5288  1BCF  0023               	movlb	3	; select bank3
  5289  1BD0  0839               	movf	(_temperatureThermistor+3)^(0+384),w
  5290  1BD1  0021               	movlb	1	; select bank1
  5291  1BD2  00E7               	movwf	((?_snprintf+3)^(0+128)+24)
  5292  1BD3  0023               	movlb	3	; select bank3
  5293  1BD4  0838               	movf	(_temperatureThermistor+2)^(0+384),w
  5294  1BD5  0021               	movlb	1	; select bank1
  5295  1BD6  00E6               	movwf	((?_snprintf+2)^(0+128)+24)
  5296  1BD7  0023               	movlb	3	; select bank3
  5297  1BD8  0837               	movf	(_temperatureThermistor+1)^(0+384),w
  5298  1BD9  0021               	movlb	1	; select bank1
  5299  1BDA  00E5               	movwf	((?_snprintf+1)^(0+128)+24)
  5300  1BDB  0023               	movlb	3	; select bank3
  5301  1BDC  0836               	movf	_temperatureThermistor^(0+384),w
  5302  1BDD  0021               	movlb	1	; select bank1
  5303  1BDE  00E4               	movwf	(?_snprintf^(0+128)+24)
  5304  1BDF  3018               	movlw	24
  5305  1BE0  00F5               	movwf	readRegister@slaveAddress
  5306  1BE1  3000               	movlw	0
  5307  1BE2  00F6               	movwf	readRegister@slaveAddress+1
  5308  1BE3  3005               	movlw	5
  5309  1BE4  00F7               	movwf	readRegister@regAddress
  5310  1BE5  3000               	movlw	0
  5311  1BE6  00F8               	movwf	readRegister@regAddress+1
  5312  1BE7  31B6  26AC  319B   	fcall	_readRegister
  5313  1BEA  0876               	movf	?_readRegister+1,w
  5314  1BEB  0021               	movlb	1	; select bank1
  5315  1BEC  00E9               	movwf	((?_snprintf+1)^(0+128)+28)
  5316  1BED  0875               	movf	?_readRegister,w
  5317  1BEE  00E8               	movwf	(?_snprintf^(0+128)+28)
  5318  1BEF  31B4  24C2  319B   	fcall	_snprintf
  5319                           
  5320                           ;BQ76920.c: 316:     EUSART_Write_Text(messageBuffer);
  5321  1BF2  3071               	movlw	113
  5322  1BF3  00F2               	movwf	EUSART_Write_Text@text
  5323  1BF4  3027               	movlw	39
  5324  1BF5  00F3               	movwf	EUSART_Write_Text@text+1
  5325  1BF6  31B4  248D  319B   	fcall	_EUSART_Write_Text
  5326                           
  5327                           ;BQ76920.c: 317:     snprintf(messageBuffer, 127, "0x05 SYS_CTRL2: %i \n\r", readRegiste
      +                          r(0x18, 0x05));
  5328  1BF9  3071               	movlw	113
  5329  1BFA  0021               	movlb	1	; select bank1
  5330  1BFB  00CC               	movwf	snprintf@s^(0+128)
  5331  1BFC  3027               	movlw	39
  5332  1BFD  00CD               	movwf	(snprintf@s^(0+128)+1)
  5333  1BFE  307F               	movlw	127
  5334  1BFF  00CE               	movwf	snprintf@n^(0+128)
  5335  1C00  3000               	movlw	0
  5336  1C01  00CF               	movwf	(snprintf@n^(0+128)+1)
  5337  1C02  30CD               	movlw	low (STR_3| (0+32768))
  5338  1C03  00D0               	movwf	snprintf@fmt^(0+128)
  5339  1C04  30B8               	movlw	high (STR_3| (0+32768))
  5340  1C05  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5341  1C06  3018               	movlw	24
  5342  1C07  00F5               	movwf	readRegister@slaveAddress
  5343  1C08  3000               	movlw	0
  5344  1C09  00F6               	movwf	readRegister@slaveAddress+1
  5345  1C0A  3005               	movlw	5
  5346  1C0B  00F7               	movwf	readRegister@regAddress
  5347  1C0C  3000               	movlw	0
  5348  1C0D  00F8               	movwf	readRegister@regAddress+1
  5349  1C0E  31B6  26AC  319B   	fcall	_readRegister
  5350  1C11  0876               	movf	?_readRegister+1,w
  5351  1C12  0021               	movlb	1	; select bank1
  5352  1C13  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5353  1C14  0875               	movf	?_readRegister,w
  5354  1C15  00D2               	movwf	(?_snprintf^(0+128)+6)
  5355  1C16  31B4  24C2  319B   	fcall	_snprintf
  5356                           
  5357                           ;BQ76920.c: 318:     EUSART_Write_Text(messageBuffer);
  5358  1C19  3071               	movlw	113
  5359  1C1A  00F2               	movwf	EUSART_Write_Text@text
  5360  1C1B  3027               	movlw	39
  5361  1C1C  00F3               	movwf	EUSART_Write_Text@text+1
  5362  1C1D  31B4  248D  319B   	fcall	_EUSART_Write_Text
  5363                           
  5364                           ;BQ76920.c: 319:     snprintf(messageBuffer, 127, "0x00 SYS_STAT: %i \n\r", readRegister
      +                          (0x18, 0x00));
  5365  1C20  3071               	movlw	113
  5366  1C21  0021               	movlb	1	; select bank1
  5367  1C22  00CC               	movwf	snprintf@s^(0+128)
  5368  1C23  3027               	movlw	39
  5369  1C24  00CD               	movwf	(snprintf@s^(0+128)+1)
  5370  1C25  307F               	movlw	127
  5371  1C26  00CE               	movwf	snprintf@n^(0+128)
  5372  1C27  3000               	movlw	0
  5373  1C28  00CF               	movwf	(snprintf@n^(0+128)+1)
  5374  1C29  3037               	movlw	low (STR_4| (0+32768))
  5375  1C2A  00D0               	movwf	snprintf@fmt^(0+128)
  5376  1C2B  30B9               	movlw	high (STR_4| (0+32768))
  5377  1C2C  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5378  1C2D  3018               	movlw	24
  5379  1C2E  00F5               	movwf	readRegister@slaveAddress
  5380  1C2F  3000               	movlw	0
  5381  1C30  00F6               	movwf	readRegister@slaveAddress+1
  5382  1C31  3000               	movlw	0
  5383  1C32  00F7               	movwf	readRegister@regAddress
  5384  1C33  00F8               	movwf	readRegister@regAddress+1
  5385  1C34  31B6  26AC  319B   	fcall	_readRegister
  5386  1C37  0876               	movf	?_readRegister+1,w
  5387  1C38  0021               	movlb	1	; select bank1
  5388  1C39  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5389  1C3A  0875               	movf	?_readRegister,w
  5390  1C3B  00D2               	movwf	(?_snprintf^(0+128)+6)
  5391  1C3C  31B4  24C2  319B   	fcall	_snprintf
  5392                           
  5393                           ;BQ76920.c: 320:     EUSART_Write_Text(messageBuffer);
  5394  1C3F  3071               	movlw	113
  5395  1C40  00F2               	movwf	EUSART_Write_Text@text
  5396  1C41  3027               	movlw	39
  5397  1C42  00F3               	movwf	EUSART_Write_Text@text+1
  5398  1C43  31B4  248D  319B   	fcall	_EUSART_Write_Text
  5399                           
  5400                           ;BQ76920.c: 321:     snprintf(messageBuffer, 127, "0x06 PROTECT1: %i \n\r", readRegister
      +                          (0x18, 0x06));
  5401  1C46  3071               	movlw	113
  5402  1C47  0021               	movlb	1	; select bank1
  5403  1C48  00CC               	movwf	snprintf@s^(0+128)
  5404  1C49  3027               	movlw	39
  5405  1C4A  00CD               	movwf	(snprintf@s^(0+128)+1)
  5406  1C4B  307F               	movlw	127
  5407  1C4C  00CE               	movwf	snprintf@n^(0+128)
  5408  1C4D  3000               	movlw	0
  5409  1C4E  00CF               	movwf	(snprintf@n^(0+128)+1)
  5410  1C4F  30F8               	movlw	low (STR_5| (0+32768))
  5411  1C50  00D0               	movwf	snprintf@fmt^(0+128)
  5412  1C51  30B8               	movlw	high (STR_5| (0+32768))
  5413  1C52  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5414  1C53  3018               	movlw	24
  5415  1C54  00F5               	movwf	readRegister@slaveAddress
  5416  1C55  3000               	movlw	0
  5417  1C56  00F6               	movwf	readRegister@slaveAddress+1
  5418  1C57  3006               	movlw	6
  5419  1C58  00F7               	movwf	readRegister@regAddress
  5420  1C59  3000               	movlw	0
  5421  1C5A  00F8               	movwf	readRegister@regAddress+1
  5422  1C5B  31B6  26AC  319B   	fcall	_readRegister
  5423  1C5E  0876               	movf	?_readRegister+1,w
  5424  1C5F  0021               	movlb	1	; select bank1
  5425  1C60  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5426  1C61  0875               	movf	?_readRegister,w
  5427  1C62  00D2               	movwf	(?_snprintf^(0+128)+6)
  5428  1C63  31B4  24C2  319B   	fcall	_snprintf
  5429                           
  5430                           ;BQ76920.c: 322:     EUSART_Write_Text(messageBuffer);
  5431  1C66  3071               	movlw	113
  5432  1C67  00F2               	movwf	EUSART_Write_Text@text
  5433  1C68  3027               	movlw	39
  5434  1C69  00F3               	movwf	EUSART_Write_Text@text+1
  5435  1C6A  31B4  248D  319B   	fcall	_EUSART_Write_Text
  5436                           
  5437                           ;BQ76920.c: 323:     snprintf(messageBuffer, 127, "0x07 PROTECT2: %i \n\r", readRegister
      +                          (0x18, 0x07));
  5438  1C6D  3071               	movlw	113
  5439  1C6E  0021               	movlb	1	; select bank1
  5440  1C6F  00CC               	movwf	snprintf@s^(0+128)
  5441  1C70  3027               	movlw	39
  5442  1C71  00CD               	movwf	(snprintf@s^(0+128)+1)
  5443  1C72  307F               	movlw	127
  5444  1C73  00CE               	movwf	snprintf@n^(0+128)
  5445  1C74  3000               	movlw	0
  5446  1C75  00CF               	movwf	(snprintf@n^(0+128)+1)
  5447  1C76  300D               	movlw	low (STR_6| (0+32768))
  5448  1C77  00D0               	movwf	snprintf@fmt^(0+128)
  5449  1C78  30B9               	movlw	high (STR_6| (0+32768))
  5450  1C79  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5451  1C7A  3018               	movlw	24
  5452  1C7B  00F5               	movwf	readRegister@slaveAddress
  5453  1C7C  3000               	movlw	0
  5454  1C7D  00F6               	movwf	readRegister@slaveAddress+1
  5455  1C7E  3007               	movlw	7
  5456  1C7F  00F7               	movwf	readRegister@regAddress
  5457  1C80  3000               	movlw	0
  5458  1C81  00F8               	movwf	readRegister@regAddress+1
  5459  1C82  31B6  26AC  319B   	fcall	_readRegister
  5460  1C85  0876               	movf	?_readRegister+1,w
  5461  1C86  0021               	movlb	1	; select bank1
  5462  1C87  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5463  1C88  0875               	movf	?_readRegister,w
  5464  1C89  00D2               	movwf	(?_snprintf^(0+128)+6)
  5465  1C8A  31B4  24C2  319B   	fcall	_snprintf
  5466                           
  5467                           ;BQ76920.c: 324:     EUSART_Write_Text(messageBuffer);
  5468  1C8D  3071               	movlw	113
  5469  1C8E  00F2               	movwf	EUSART_Write_Text@text
  5470  1C8F  3027               	movlw	39
  5471  1C90  00F3               	movwf	EUSART_Write_Text@text+1
  5472  1C91  31B4  248D  319B   	fcall	_EUSART_Write_Text
  5473                           
  5474                           ;BQ76920.c: 325:     snprintf(messageBuffer, 127, "Current: %d \n\r", batCurrent);
  5475  1C94  3071               	movlw	113
  5476  1C95  0021               	movlb	1	; select bank1
  5477  1C96  00CC               	movwf	snprintf@s^(0+128)
  5478  1C97  3027               	movlw	39
  5479  1C98  00CD               	movwf	(snprintf@s^(0+128)+1)
  5480  1C99  307F               	movlw	127
  5481  1C9A  00CE               	movwf	snprintf@n^(0+128)
  5482  1C9B  3000               	movlw	0
  5483  1C9C  00CF               	movwf	(snprintf@n^(0+128)+1)
  5484  1C9D  30CB               	movlw	low (STR_7| (0+32768))
  5485  1C9E  00D0               	movwf	snprintf@fmt^(0+128)
  5486  1C9F  30B9               	movlw	high (STR_7| (0+32768))
  5487  1CA0  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5488  1CA1  0023               	movlb	3	; select bank3
  5489  1CA2  083D               	movf	(_batCurrent+3)^(0+384),w
  5490  1CA3  0021               	movlb	1	; select bank1
  5491  1CA4  00D5               	movwf	((?_snprintf+3)^(0+128)+6)
  5492  1CA5  0023               	movlb	3	; select bank3
  5493  1CA6  083C               	movf	(_batCurrent+2)^(0+384),w
  5494  1CA7  0021               	movlb	1	; select bank1
  5495  1CA8  00D4               	movwf	((?_snprintf+2)^(0+128)+6)
  5496  1CA9  0023               	movlb	3	; select bank3
  5497  1CAA  083B               	movf	(_batCurrent+1)^(0+384),w
  5498  1CAB  0021               	movlb	1	; select bank1
  5499  1CAC  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5500  1CAD  0023               	movlb	3	; select bank3
  5501  1CAE  083A               	movf	_batCurrent^(0+384),w
  5502  1CAF  0021               	movlb	1	; select bank1
  5503  1CB0  00D2               	movwf	(?_snprintf^(0+128)+6)
  5504  1CB1  31B4  24C2  319B   	fcall	_snprintf
  5505                           
  5506                           ;BQ76920.c: 326:     EUSART_Write_Text(messageBuffer);
  5507  1CB4  3071               	movlw	113
  5508  1CB5  00F2               	movwf	EUSART_Write_Text@text
  5509  1CB6  3027               	movlw	39
  5510  1CB7  00F3               	movwf	EUSART_Write_Text@text+1
  5511  1CB8  31B4  248D  319B   	fcall	_EUSART_Write_Text
  5512                           
  5513                           ;BQ76920.c: 327:     snprintf(messageBuffer, 127, "Temp: %d e-2\n\r", temperatureThermis
      +                          tor);
  5514  1CBB  3071               	movlw	113
  5515  1CBC  0021               	movlb	1	; select bank1
  5516  1CBD  00CC               	movwf	snprintf@s^(0+128)
  5517  1CBE  3027               	movlw	39
  5518  1CBF  00CD               	movwf	(snprintf@s^(0+128)+1)
  5519  1CC0  307F               	movlw	127
  5520  1CC1  00CE               	movwf	snprintf@n^(0+128)
  5521  1CC2  3000               	movlw	0
  5522  1CC3  00CF               	movwf	(snprintf@n^(0+128)+1)
  5523  1CC4  30DA               	movlw	low (STR_8| (0+32768))
  5524  1CC5  00D0               	movwf	snprintf@fmt^(0+128)
  5525  1CC6  30B9               	movlw	high (STR_8| (0+32768))
  5526  1CC7  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5527  1CC8  0023               	movlb	3	; select bank3
  5528  1CC9  0839               	movf	(_temperatureThermistor+3)^(0+384),w
  5529  1CCA  0021               	movlb	1	; select bank1
  5530  1CCB  00D5               	movwf	((?_snprintf+3)^(0+128)+6)
  5531  1CCC  0023               	movlb	3	; select bank3
  5532  1CCD  0838               	movf	(_temperatureThermistor+2)^(0+384),w
  5533  1CCE  0021               	movlb	1	; select bank1
  5534  1CCF  00D4               	movwf	((?_snprintf+2)^(0+128)+6)
  5535  1CD0  0023               	movlb	3	; select bank3
  5536  1CD1  0837               	movf	(_temperatureThermistor+1)^(0+384),w
  5537  1CD2  0021               	movlb	1	; select bank1
  5538  1CD3  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5539  1CD4  0023               	movlb	3	; select bank3
  5540  1CD5  0836               	movf	_temperatureThermistor^(0+384),w
  5541  1CD6  0021               	movlb	1	; select bank1
  5542  1CD7  00D2               	movwf	(?_snprintf^(0+128)+6)
  5543  1CD8  31B4  24C2  319B   	fcall	_snprintf
  5544                           
  5545                           ;BQ76920.c: 328:     EUSART_Write_Text(messageBuffer);
  5546  1CDB  3071               	movlw	113
  5547  1CDC  00F2               	movwf	EUSART_Write_Text@text
  5548  1CDD  3027               	movlw	39
  5549  1CDE  00F3               	movwf	EUSART_Write_Text@text+1
  5550  1CDF  31B4  248D         	fcall	_EUSART_Write_Text
  5551  1CE1  0008               	return
  5552  1CE2                     __end_of_printcellParameters:	
  5553                           
  5554                           	psect	text4
  5555  34C2                     __ptext4:	
  5556 ;; *************** function _snprintf *****************
  5557 ;; Defined at:
  5558 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\snprintf.c"
  5559 ;; Parameters:    Size  Location     Type
  5560 ;;  s               2   44[BANK1 ] PTR unsigned char 
  5561 ;;		 -> messageBuffer(127), 
  5562 ;;  n               2   46[BANK1 ] unsigned int 
  5563 ;;  fmt             2   48[BANK1 ] PTR const unsigned char 
  5564 ;;		 -> STR_22(18), STR_21(18), STR_20(19), STR_19(20), 
  5565 ;;		 -> STR_18(20), STR_17(21), STR_16(21), STR_15(21), 
  5566 ;;		 -> STR_14(22), STR_13(22), STR_12(21), STR_11(21), 
  5567 ;;		 -> STR_8(15), STR_7(15), STR_6(21), STR_5(21), 
  5568 ;;		 -> STR_4(21), STR_3(22), STR_2(71), STR_1(40), 
  5569 ;; Auto vars:     Size  Location     Type
  5570 ;;  ret             2    0        int 
  5571 ;;  ap              1   79[BANK0 ] PTR void [1]
  5572 ;;		 -> ?_snprintf(2), 
  5573 ;; Return value:  Size  Location     Type
  5574 ;;                  2   44[BANK1 ] int 
  5575 ;; Registers used:
  5576 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5577 ;; Tracked objects:
  5578 ;;		On entry : 0/0
  5579 ;;		On exit  : 0/0
  5580 ;;		Unchanged: 0/0
  5581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5582 ;;      Params:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5583 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5584 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5585 ;;      Totals:         0       4      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5586 ;;Total ram usage:       34 bytes
  5587 ;; Hardware stack levels used:    1
  5588 ;; Hardware stack levels required when called:    9
  5589 ;; This function calls:
  5590 ;;		_vsnprintf
  5591 ;; This function is called by:
  5592 ;;		_statemachine
  5593 ;;		_printcellParameters
  5594 ;;		_printotAFERegisters
  5595 ;; This function uses a non-reentrant model
  5596 ;;
  5597                           
  5598                           
  5599                           ;psect for function _snprintf
  5600  34C2                     _snprintf:	
  5601                           
  5602                           ;incstack = 0
  5603                           ; Regs used in _snprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5604  34C2  30D2               	movlw	(low ((?_snprintf| 0+6)))& (0+255)
  5605  34C3  0020               	movlb	0	; select bank0
  5606  34C4  00EC               	movwf	??_snprintf
  5607  34C5  086C               	movf	??_snprintf,w
  5608  34C6  00EF               	movwf	snprintf@ap
  5609  34C7  0021               	movlb	1	; select bank1
  5610  34C8  084D               	movf	(snprintf@s+1)^(0+128),w
  5611  34C9  00BC               	movwf	(vsnprintf@s+1)^(0+128)
  5612  34CA  084C               	movf	snprintf@s^(0+128),w
  5613  34CB  00BB               	movwf	vsnprintf@s^(0+128)
  5614  34CC  084F               	movf	(snprintf@n+1)^(0+128),w
  5615  34CD  00BE               	movwf	(vsnprintf@n+1)^(0+128)
  5616  34CE  084E               	movf	snprintf@n^(0+128),w
  5617  34CF  00BD               	movwf	vsnprintf@n^(0+128)
  5618  34D0  0851               	movf	(snprintf@fmt+1)^(0+128),w
  5619  34D1  00C0               	movwf	(vsnprintf@fmt+1)^(0+128)
  5620  34D2  0850               	movf	snprintf@fmt^(0+128),w
  5621  34D3  00BF               	movwf	vsnprintf@fmt^(0+128)
  5622  34D4  306F               	movlw	(low (snprintf@ap| 0))& (0+255)
  5623  34D5  0020               	movlb	0	; select bank0
  5624  34D6  00EC               	movwf	??_snprintf
  5625  34D7  086C               	movf	??_snprintf,w
  5626  34D8  0021               	movlb	1	; select bank1
  5627  34D9  00C1               	movwf	vsnprintf@ap^(0+128)
  5628  34DA  31AA  22D4         	fcall	_vsnprintf
  5629  34DC  0008               	return
  5630  34DD                     __end_of_snprintf:	
  5631                           
  5632                           	psect	text5
  5633  2AD4                     __ptext5:	
  5634 ;; *************** function _vsnprintf *****************
  5635 ;; Defined at:
  5636 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_vsnprintf.c"
  5637 ;; Parameters:    Size  Location     Type
  5638 ;;  s               2   27[BANK1 ] PTR unsigned char 
  5639 ;;		 -> messageBuffer(127), 
  5640 ;;  n               2   29[BANK1 ] unsigned int 
  5641 ;;  fmt             2   31[BANK1 ] PTR const unsigned char 
  5642 ;;		 -> STR_22(18), STR_21(18), STR_20(19), STR_19(20), 
  5643 ;;		 -> STR_18(20), STR_17(21), STR_16(21), STR_15(21), 
  5644 ;;		 -> STR_14(22), STR_13(22), STR_12(21), STR_11(21), 
  5645 ;;		 -> STR_8(15), STR_7(15), STR_6(21), STR_5(21), 
  5646 ;;		 -> STR_4(21), STR_3(22), STR_2(71), STR_1(40), 
  5647 ;;  ap              1   33[BANK1 ] PTR PTR void 
  5648 ;;		 -> snprintf@ap(1), 
  5649 ;; Auto vars:     Size  Location     Type
  5650 ;;  f               6   38[BANK1 ] struct _IO_FILE
  5651 ;;  cnt             2   36[BANK1 ] int 
  5652 ;; Return value:  Size  Location     Type
  5653 ;;                  2   27[BANK1 ] int 
  5654 ;; Registers used:
  5655 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5656 ;; Tracked objects:
  5657 ;;		On entry : 0/0
  5658 ;;		On exit  : 0/0
  5659 ;;		Unchanged: 0/0
  5660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5661 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5662 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5663 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5664 ;;      Totals:         0       2      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5665 ;;Total ram usage:       19 bytes
  5666 ;; Hardware stack levels used:    1
  5667 ;; Hardware stack levels required when called:    8
  5668 ;; This function calls:
  5669 ;;		_vfprintf
  5670 ;; This function is called by:
  5671 ;;		_snprintf
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           
  5675                           
  5676                           ;psect for function _vsnprintf
  5677  2AD4                     _vsnprintf:	
  5678                           
  5679                           ;incstack = 0
  5680                           ; Regs used in _vsnprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5681  2AD4  3080               	movlw	128
  5682  2AD5  0021               	movlb	1	; select bank1
  5683  2AD6  023E               	subwf	(vsnprintf@n+1)^(0+128),w
  5684  2AD7  3000               	movlw	0
  5685  2AD8  1903               	skipnz
  5686  2AD9  023D               	subwf	vsnprintf@n^(0+128),w
  5687  2ADA  1C03               	skipc
  5688  2ADB  2AE7               	goto	l7990
  5689  2ADC  304B               	movlw	75
  5690  2ADD  0023               	movlb	3	; select bank3
  5691  2ADE  00C2               	movwf	_errno^(0+384)
  5692  2ADF  3000               	movlw	0
  5693  2AE0  00C3               	movwf	(_errno^(0+384)+1)
  5694  2AE1  30FF               	movlw	255
  5695  2AE2  0021               	movlb	1	; select bank1
  5696  2AE3  00BB               	movwf	?_vsnprintf^(0+128)
  5697  2AE4  30FF               	movlw	255
  5698  2AE5  00BC               	movwf	(?_vsnprintf^(0+128)+1)
  5699  2AE6  0008               	return
  5700  2AE7                     l7990:	
  5701  2AE7  083C               	movf	(vsnprintf@s+1)^(0+128),w
  5702  2AE8  00C7               	movwf	(vsnprintf@f+1)^(0+128)
  5703  2AE9  083B               	movf	vsnprintf@s^(0+128),w
  5704  2AEA  00C6               	movwf	vsnprintf@f^(0+128)
  5705  2AEB  3000               	movlw	0
  5706  2AEC  023E               	subwf	(vsnprintf@n+1)^(0+128),w
  5707  2AED  3002               	movlw	2
  5708  2AEE  1903               	skipnz
  5709  2AEF  023D               	subwf	vsnprintf@n^(0+128),w
  5710  2AF0  1C03               	skipc
  5711  2AF1  2AFB               	goto	l7996
  5712  2AF2  083D               	movf	vsnprintf@n^(0+128),w
  5713  2AF3  3EFF               	addlw	255
  5714  2AF4  00CA               	movwf	(vsnprintf@f^(0+128)+4)
  5715  2AF5  30FF               	movlw	255
  5716  2AF6  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  5717  2AF7  00CB               	movwf	((vsnprintf@f+1)^(0+128)+4)
  5718  2AF8  01C8               	clrf	(vsnprintf@f^(0+128)+2)
  5719  2AF9  01C9               	clrf	((vsnprintf@f+1)^(0+128)+2)
  5720  2AFA  2B03               	goto	l7998
  5721  2AFB                     l7996:	
  5722  2AFB  3001               	movlw	1
  5723  2AFC  00CA               	movwf	(vsnprintf@f^(0+128)+4)
  5724  2AFD  3000               	movlw	0
  5725  2AFE  00CB               	movwf	(vsnprintf@f^(0+128)+5)
  5726  2AFF  3001               	movlw	1
  5727  2B00  00C8               	movwf	(vsnprintf@f^(0+128)+2)
  5728  2B01  3000               	movlw	0
  5729  2B02  00C9               	movwf	(vsnprintf@f^(0+128)+3)
  5730  2B03                     l7998:	
  5731  2B03  30C6               	movlw	low vsnprintf@f
  5732  2B04  0020               	movlb	0	; select bank0
  5733  2B05  00E1               	movwf	vfprintf@fp
  5734  2B06  3000               	movlw	high vsnprintf@f
  5735  2B07  00E2               	movwf	vfprintf@fp+1
  5736  2B08  0021               	movlb	1	; select bank1
  5737  2B09  0840               	movf	(vsnprintf@fmt+1)^(0+128),w
  5738  2B0A  0020               	movlb	0	; select bank0
  5739  2B0B  00E4               	movwf	vfprintf@fmt+1
  5740  2B0C  0021               	movlb	1	; select bank1
  5741  2B0D  083F               	movf	vsnprintf@fmt^(0+128),w
  5742  2B0E  0020               	movlb	0	; select bank0
  5743  2B0F  00E3               	movwf	vfprintf@fmt
  5744  2B10  0021               	movlb	1	; select bank1
  5745  2B11  0841               	movf	vsnprintf@ap^(0+128),w
  5746  2B12  0020               	movlb	0	; select bank0
  5747  2B13  00EA               	movwf	??_vsnprintf
  5748  2B14  086A               	movf	??_vsnprintf,w
  5749  2B15  00E5               	movwf	vfprintf@ap
  5750  2B16  31B5  25E2  31AA   	fcall	_vfprintf
  5751  2B19  0020               	movlb	0	; select bank0
  5752  2B1A  0862               	movf	?_vfprintf+1,w
  5753  2B1B  0021               	movlb	1	; select bank1
  5754  2B1C  00C5               	movwf	(vsnprintf@cnt+1)^(0+128)
  5755  2B1D  0020               	movlb	0	; select bank0
  5756  2B1E  0861               	movf	?_vfprintf,w
  5757  2B1F  0021               	movlb	1	; select bank1
  5758  2B20  00C4               	movwf	vsnprintf@cnt^(0+128)
  5759  2B21  083D               	movf	vsnprintf@n^(0+128),w
  5760  2B22  043E               	iorwf	(vsnprintf@n+1)^(0+128),w
  5761  2B23  1D03               	btfss	3,2
  5762  2B24  1BC5               	btfsc	(vsnprintf@cnt+1)^(0+128),7
  5763  2B25  2B4C               	goto	l8012
  5764  2B26  083D               	movf	vsnprintf@n^(0+128),w
  5765  2B27  3EFF               	addlw	255
  5766  2B28  0020               	movlb	0	; select bank0
  5767  2B29  00EA               	movwf	??_vsnprintf
  5768  2B2A  30FF               	movlw	255
  5769  2B2B  0021               	movlb	1	; select bank1
  5770  2B2C  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  5771  2B2D  0020               	movlb	0	; select bank0
  5772  2B2E  00EB               	movwf	??_vsnprintf+1
  5773  2B2F  086B               	movf	??_vsnprintf+1,w
  5774  2B30  0021               	movlb	1	; select bank1
  5775  2B31  0245               	subwf	(vsnprintf@cnt+1)^(0+128),w
  5776  2B32  1D03               	skipz
  5777  2B33  2B38               	goto	u11125
  5778  2B34  0020               	movlb	0	; select bank0
  5779  2B35  086A               	movf	??_vsnprintf,w
  5780  2B36  0021               	movlb	1	; select bank1
  5781  2B37  0244               	subwf	vsnprintf@cnt^(0+128),w
  5782  2B38                     u11125:	
  5783  2B38  1C03               	skipc
  5784  2B39  2B41               	goto	l8008
  5785  2B3A  083D               	movf	vsnprintf@n^(0+128),w
  5786  2B3B  3EFF               	addlw	255
  5787  2B3C  00C2               	movwf	_vsnprintf$1824^(0+128)
  5788  2B3D  30FF               	movlw	255
  5789  2B3E  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  5790  2B3F  00C3               	movwf	(_vsnprintf$1824+1)^(0+128)
  5791  2B40  2B45               	goto	l8010
  5792  2B41                     l8008:	
  5793  2B41  0845               	movf	(vsnprintf@cnt+1)^(0+128),w
  5794  2B42  00C3               	movwf	(_vsnprintf$1824+1)^(0+128)
  5795  2B43  0844               	movf	vsnprintf@cnt^(0+128),w
  5796  2B44  00C2               	movwf	_vsnprintf$1824^(0+128)
  5797  2B45                     l8010:	
  5798  2B45  0842               	movf	_vsnprintf$1824^(0+128),w
  5799  2B46  073B               	addwf	vsnprintf@s^(0+128),w
  5800  2B47  0086               	movwf	6
  5801  2B48  0843               	movf	(_vsnprintf$1824+1)^(0+128),w
  5802  2B49  3D3C               	addwfc	(vsnprintf@s+1)^(0+128),w
  5803  2B4A  0087               	movwf	7
  5804  2B4B  0181               	clrf	1
  5805  2B4C                     l8012:	
  5806  2B4C  0845               	movf	(vsnprintf@cnt+1)^(0+128),w
  5807  2B4D  00BC               	movwf	(?_vsnprintf+1)^(0+128)
  5808  2B4E  0844               	movf	vsnprintf@cnt^(0+128),w
  5809  2B4F  00BB               	movwf	?_vsnprintf^(0+128)
  5810  2B50  0008               	return
  5811  2B51                     __end_of_vsnprintf:	
  5812                           
  5813                           	psect	text6
  5814  35E2                     __ptext6:	
  5815 ;; *************** function _vfprintf *****************
  5816 ;; Defined at:
  5817 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5818 ;; Parameters:    Size  Location     Type
  5819 ;;  fp              2   65[BANK0 ] PTR struct _IO_FILE
  5820 ;;		 -> vsnprintf@f(6), 
  5821 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
  5822 ;;		 -> STR_22(18), STR_21(18), STR_20(19), STR_19(20), 
  5823 ;;		 -> STR_18(20), STR_17(21), STR_16(21), STR_15(21), 
  5824 ;;		 -> STR_14(22), STR_13(22), STR_12(21), STR_11(21), 
  5825 ;;		 -> STR_8(15), STR_7(15), STR_6(21), STR_5(21), 
  5826 ;;		 -> STR_4(21), STR_3(22), STR_2(71), STR_1(40), 
  5827 ;;  ap              1   69[BANK0 ] PTR PTR void 
  5828 ;;		 -> snprintf@ap(1), 
  5829 ;; Auto vars:     Size  Location     Type
  5830 ;;  cfmt            2   72[BANK0 ] PTR unsigned char 
  5831 ;;		 -> STR_22(18), STR_21(18), STR_20(19), STR_19(20), 
  5832 ;;		 -> STR_18(20), STR_17(21), STR_16(21), STR_15(21), 
  5833 ;;		 -> STR_14(22), STR_13(22), STR_12(21), STR_11(21), 
  5834 ;;		 -> STR_8(15), STR_7(15), STR_6(21), STR_5(21), 
  5835 ;;		 -> STR_4(21), STR_3(22), STR_2(71), STR_1(40), 
  5836 ;; Return value:  Size  Location     Type
  5837 ;;                  2   65[BANK0 ] int 
  5838 ;; Registers used:
  5839 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5840 ;; Tracked objects:
  5841 ;;		On entry : 0/0
  5842 ;;		On exit  : 0/0
  5843 ;;		Unchanged: 0/0
  5844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5845 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5846 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5847 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5848 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5849 ;;Total ram usage:        9 bytes
  5850 ;; Hardware stack levels used:    1
  5851 ;; Hardware stack levels required when called:    7
  5852 ;; This function calls:
  5853 ;;		_vfpfcnvrt
  5854 ;; This function is called by:
  5855 ;;		_vsnprintf
  5856 ;; This function uses a non-reentrant model
  5857 ;;
  5858                           
  5859                           
  5860                           ;psect for function _vfprintf
  5861  35E2                     _vfprintf:	
  5862                           
  5863                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  5864                           
  5865                           ;incstack = 0
  5866                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5867  35E2  0020               	movlb	0	; select bank0
  5868  35E3  0864               	movf	vfprintf@fmt+1,w
  5869  35E4  00E9               	movwf	vfprintf@cfmt+1
  5870  35E5  0863               	movf	vfprintf@fmt,w
  5871  35E6  00E8               	movwf	vfprintf@cfmt
  5872                           
  5873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  5874  35E7  0023               	movlb	3	; select bank3
  5875  35E8  01C4               	clrf	_nout^(0+384)
  5876  35E9  01C5               	clrf	(_nout+1)^(0+384)
  5877  35EA                     l7412:	
  5878                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5879                           
  5880                           
  5881                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5882  35EA  0020               	movlb	0	; select bank0
  5883  35EB  0868               	movf	vfprintf@cfmt,w
  5884  35EC  0084               	movwf	4
  5885  35ED  0869               	movf	vfprintf@cfmt+1,w
  5886  35EE  0085               	movwf	5
  5887  35EF  0012               	moviw fsr0++
  5888  35F0  1903               	btfsc	3,2
  5889  35F1  2E0A               	goto	l7414
  5890                           
  5891                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  5892  35F2  0862               	movf	vfprintf@fp+1,w
  5893  35F3  00D8               	movwf	vfpfcnvrt@fp+1
  5894  35F4  0861               	movf	vfprintf@fp,w
  5895  35F5  00D7               	movwf	vfpfcnvrt@fp
  5896  35F6  3068               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  5897  35F7  00E6               	movwf	??_vfprintf
  5898  35F8  0866               	movf	??_vfprintf,w
  5899  35F9  00D9               	movwf	vfpfcnvrt@fmt
  5900  35FA  0865               	movf	vfprintf@ap,w
  5901  35FB  00E7               	movwf	??_vfprintf+1
  5902  35FC  0867               	movf	??_vfprintf+1,w
  5903  35FD  00DA               	movwf	vfpfcnvrt@ap
  5904  35FE  319E  265C  31B5   	fcall	_vfpfcnvrt
  5905  3601  0020               	movlb	0	; select bank0
  5906  3602  0857               	movf	?_vfpfcnvrt,w
  5907  3603  0023               	movlb	3	; select bank3
  5908  3604  07C4               	addwf	_nout^(0+384),f
  5909  3605  0020               	movlb	0	; select bank0
  5910  3606  0858               	movf	?_vfpfcnvrt+1,w
  5911  3607  0023               	movlb	3	; select bank3
  5912  3608  3DC5               	addwfc	(_nout+1)^(0+384),f
  5913  3609  2DEA               	goto	l7412
  5914  360A                     l7414:	
  5915                           
  5916                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  5917  360A  0023               	movlb	3	; select bank3
  5918  360B  0845               	movf	(_nout+1)^(0+384),w
  5919  360C  0020               	movlb	0	; select bank0
  5920  360D  00E2               	movwf	?_vfprintf+1
  5921  360E  0023               	movlb	3	; select bank3
  5922  360F  0844               	movf	_nout^(0+384),w
  5923  3610  0020               	movlb	0	; select bank0
  5924  3611  00E1               	movwf	?_vfprintf
  5925  3612  0008               	return
  5926  3613                     __end_of_vfprintf:	
  5927                           
  5928                           	psect	text7
  5929  1E5C                     __ptext7:	
  5930 ;; *************** function _vfpfcnvrt *****************
  5931 ;; Defined at:
  5932 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5933 ;; Parameters:    Size  Location     Type
  5934 ;;  fp              2   55[BANK0 ] PTR struct _IO_FILE
  5935 ;;		 -> vsnprintf@f(6), 
  5936 ;;  fmt             1   57[BANK0 ] PTR PTR unsigned char 
  5937 ;;		 -> vfprintf@cfmt(2), 
  5938 ;;  ap              1   58[BANK0 ] PTR PTR void 
  5939 ;;		 -> snprintf@ap(1), 
  5940 ;; Auto vars:     Size  Location     Type
  5941 ;;  llu             8   19[BANK1 ] unsigned long long 
  5942 ;;  ll              8    8[BANK1 ] long long 
  5943 ;;  f               4    0        long long 
  5944 ;;  ct              3    0        unsigned char [3]
  5945 ;;  vp              2   16[BANK1 ] PTR void 
  5946 ;;		 -> ?_snprintf(2), sp__logf(4), adcGain(2), 
  5947 ;;  done            2    2[BANK1 ] int 
  5948 ;;  cp              2    0[BANK1 ] PTR unsigned char 
  5949 ;;		 -> ?_snprintf(2), sp__logf(4), adcGain(2), 
  5950 ;;  i               2    0        int 
  5951 ;;  c               1   18[BANK1 ] unsigned char 
  5952 ;; Return value:  Size  Location     Type
  5953 ;;                  2   55[BANK0 ] int 
  5954 ;; Registers used:
  5955 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5956 ;; Tracked objects:
  5957 ;;		On entry : 0/0
  5958 ;;		On exit  : 0/0
  5959 ;;		Unchanged: 0/0
  5960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5961 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5962 ;;      Locals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5963 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5964 ;;      Totals:         0      10      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5965 ;;Total ram usage:       37 bytes
  5966 ;; Hardware stack levels used:    1
  5967 ;; Hardware stack levels required when called:    6
  5968 ;; This function calls:
  5969 ;;		_atoi
  5970 ;;		_ctoa
  5971 ;;		_dtoa
  5972 ;;		_fputc
  5973 ;;		_isdigit
  5974 ;;		_otoa
  5975 ;;		_stoa
  5976 ;;		_strncmp
  5977 ;;		_utoa
  5978 ;;		_xtoa
  5979 ;; This function is called by:
  5980 ;;		_vfprintf
  5981 ;; This function uses a non-reentrant model
  5982 ;;
  5983                           
  5984                           
  5985                           ;psect for function _vfpfcnvrt
  5986  1E5C                     _vfpfcnvrt:	
  5987                           
  5988                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  5989                           
  5990                           ;incstack = 0
  5991                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5992  1E5C  0020               	movlb	0	; select bank0
  5993  1E5D  0859               	movf	vfpfcnvrt@fmt,w
  5994  1E5E  0086               	movwf	6
  5995  1E5F  0187               	clrf	7
  5996  1E60  3F40               	moviw [0]fsr1
  5997  1E61  00DB               	movwf	??_vfpfcnvrt
  5998  1E62  3F41               	moviw [1]fsr1
  5999  1E63  00DC               	movwf	??_vfpfcnvrt+1
  6000  1E64  085B               	movf	??_vfpfcnvrt,w
  6001  1E65  0084               	movwf	4
  6002  1E66  085C               	movf	??_vfpfcnvrt+1,w
  6003  1E67  0085               	movwf	5
  6004  1E68  0012               	moviw fsr0++
  6005  1E69  3A25               	xorlw	37
  6006  1E6A  1D03               	btfss	3,2
  6007  1E6B  2FFE               	goto	L7
  6008                           
  6009                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  6010  1E6C  0859               	movf	vfpfcnvrt@fmt,w
  6011  1E6D  0086               	movwf	6
  6012  1E6E  0187               	clrf	7
  6013  1E6F  3001               	movlw	1
  6014  1E70  0781               	addwf	1,f
  6015  1E71  3141               	addfsr 1,1
  6016  1E72  1803               	skipnc
  6017  1E73  0A81               	incf	1,f
  6018                           
  6019                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  6020  1E74  0022               	movlb	2	; select bank2
  6021  1E75  01E5               	clrf	_width^(0+256)
  6022  1E76  01E6               	clrf	(_width+1)^(0+256)
  6023  1E77  01E9               	clrf	_flags^(0+256)
  6024  1E78  01EA               	clrf	(_flags+1)^(0+256)
  6025                           
  6026                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  6027  1E79  30FF               	movlw	255
  6028  1E7A  00E7               	movwf	_prec^(0+256)
  6029  1E7B  30FF               	movlw	255
  6030  1E7C  00E8               	movwf	(_prec^(0+256)+1)
  6031                           
  6032                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  6033  1E7D  0021               	movlb	1	; select bank1
  6034  1E7E  01A2               	clrf	vfpfcnvrt@done^(0+128)
  6035  1E7F  01A3               	clrf	(vfpfcnvrt@done+1)^(0+128)
  6036                           
  6037                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6038  1E80  2E9E               	goto	l6840
  6039  1E81                     l768:	
  6040                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 691:       
      +                                    case '-' :
  6041                           
  6042                           
  6043                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  6044  1E81  0022               	movlb	2	; select bank2
  6045  1E82  1469               	bsf	_flags^(0+256),0
  6046  1E83                     l6824:	
  6047                           
  6048                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  6049  1E83  0020               	movlb	0	; select bank0
  6050  1E84  0859               	movf	vfpfcnvrt@fmt,w
  6051  1E85  0086               	movwf	6
  6052  1E86  0187               	clrf	7
  6053  1E87  3001               	movlw	1
  6054  1E88  0781               	addwf	1,f
  6055  1E89  3141               	addfsr 1,1
  6056  1E8A  1803               	skipnc
  6057  1E8B  0A81               	incf	1,f
  6058                           
  6059                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  6060  1E8C  2E9E               	goto	l6840
  6061  1E8D                     l770:	
  6062                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 695:       
      +                                    case '0' :
  6063                           
  6064                           
  6065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  6066  1E8D  0022               	movlb	2	; select bank2
  6067  1E8E  14E9               	bsf	_flags^(0+256),1
  6068  1E8F  2E83               	goto	l6824
  6069  1E90                     l771:	
  6070                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 699:       
      +                                    case '+' :
  6071                           
  6072                           
  6073                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  6074  1E90  0022               	movlb	2	; select bank2
  6075  1E91  1569               	bsf	_flags^(0+256),2
  6076  1E92  2E83               	goto	l6824
  6077  1E93                     l772:	
  6078                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 703:       
      +                                    case ' ' :
  6079                           
  6080                           
  6081                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  6082  1E93  0022               	movlb	2	; select bank2
  6083  1E94  15E9               	bsf	_flags^(0+256),3
  6084  1E95  2E83               	goto	l6824
  6085  1E96                     l773:	
  6086                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 707:       
      +                                    case '#' :
  6087                           
  6088                           
  6089                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  6090  1E96  0022               	movlb	2	; select bank2
  6091  1E97  1669               	bsf	_flags^(0+256),4
  6092  1E98  2E83               	goto	l6824
  6093  1E99                     l6834:	
  6094                           
  6095                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  6096  1E99  3001               	movlw	1
  6097  1E9A  0021               	movlb	1	; select bank1
  6098  1E9B  00A2               	movwf	vfpfcnvrt@done^(0+128)
  6099  1E9C  3000               	movlw	0
  6100  1E9D  00A3               	movwf	(vfpfcnvrt@done^(0+128)+1)
  6101  1E9E                     l6840:	
  6102                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  6103                           
  6104                           
  6105                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6106  1E9E  0021               	movlb	1	; select bank1
  6107  1E9F  0822               	movf	vfpfcnvrt@done^(0+128),w
  6108  1EA0  0423               	iorwf	(vfpfcnvrt@done+1)^(0+128),w
  6109  1EA1  1D03               	btfss	3,2
  6110  1EA2  2EC9               	goto	l775
  6111  1EA3  0020               	movlb	0	; select bank0
  6112  1EA4  0859               	movf	vfpfcnvrt@fmt,w
  6113  1EA5  0086               	movwf	6
  6114  1EA6  0187               	clrf	7
  6115  1EA7  3F40               	moviw [0]fsr1
  6116  1EA8  00DB               	movwf	??_vfpfcnvrt
  6117  1EA9  3F41               	moviw [1]fsr1
  6118  1EAA  00DC               	movwf	??_vfpfcnvrt+1
  6119  1EAB  085B               	movf	??_vfpfcnvrt,w
  6120  1EAC  0084               	movwf	4
  6121  1EAD  085C               	movf	??_vfpfcnvrt+1,w
  6122  1EAE  0085               	movwf	5
  6123  1EAF  0800               	movf	0,w	;code access
  6124  1EB0  00DD               	movwf	??_vfpfcnvrt+2
  6125  1EB1  01DE               	clrf	??_vfpfcnvrt+3
  6126                           
  6127                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6128                           ; Switch size 1, requested type "simple"
  6129                           ; Number of cases is 1, Range of values is 0 to 0
  6130                           ; switch strategies available:
  6131                           ; Name         Instructions Cycles
  6132                           ; simple_byte            4     3 (average)
  6133                           ; direct_byte            8     6 (fixed)
  6134                           ; jumptable            260     6 (fixed)
  6135                           ;	Chosen strategy is simple_byte
  6136  1EB2  085E               	movf	??_vfpfcnvrt+3,w
  6137  1EB3  3A00               	xorlw	0	; case 0
  6138  1EB4  1903               	skipnz
  6139  1EB5  2EB7               	goto	l8606
  6140  1EB6  2E99               	goto	l6834
  6141  1EB7                     l8606:	
  6142                           
  6143                           ; Switch size 1, requested type "simple"
  6144                           ; Number of cases is 5, Range of values is 32 to 48
  6145                           ; switch strategies available:
  6146                           ; Name         Instructions Cycles
  6147                           ; simple_byte           16     9 (average)
  6148                           ; direct_byte           43     9 (fixed)
  6149                           ; jumptable            263     9 (fixed)
  6150                           ;	Chosen strategy is simple_byte
  6151  1EB7  085D               	movf	??_vfpfcnvrt+2,w
  6152  1EB8  3A20               	xorlw	32	; case 32
  6153  1EB9  1903               	skipnz
  6154  1EBA  2E93               	goto	l772
  6155  1EBB  3A03               	xorlw	3	; case 35
  6156  1EBC  1903               	skipnz
  6157  1EBD  2E96               	goto	l773
  6158  1EBE  3A08               	xorlw	8	; case 43
  6159  1EBF  1903               	skipnz
  6160  1EC0  2E90               	goto	l771
  6161  1EC1  3A06               	xorlw	6	; case 45
  6162  1EC2  1903               	skipnz
  6163  1EC3  2E81               	goto	l768
  6164  1EC4  3A1D               	xorlw	29	; case 48
  6165  1EC5  1903               	skipnz
  6166  1EC6  2E8D               	goto	l770
  6167  1EC7  2E99               	goto	l6834
  6168  1EC8  2E9E               	goto	l6840
  6169  1EC9                     l775:	
  6170                           
  6171                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  6172  1EC9  0022               	movlb	2	; select bank2
  6173  1ECA  1C69               	btfss	_flags^(0+256),0
  6174  1ECB  2ED0               	goto	l6844
  6175                           
  6176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  6177  1ECC  30FD               	movlw	253
  6178  1ECD  05E9               	andwf	_flags^(0+256),f
  6179  1ECE  30FF               	movlw	255
  6180  1ECF  05EA               	andwf	(_flags+1)^(0+256),f
  6181  1ED0                     l6844:	
  6182                           
  6183                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  6184  1ED0  0020               	movlb	0	; select bank0
  6185  1ED1  0859               	movf	vfpfcnvrt@fmt,w
  6186  1ED2  0086               	movwf	6
  6187  1ED3  0187               	clrf	7
  6188  1ED4  3F40               	moviw [0]fsr1
  6189  1ED5  00DB               	movwf	??_vfpfcnvrt
  6190  1ED6  3F41               	moviw [1]fsr1
  6191  1ED7  00DC               	movwf	??_vfpfcnvrt+1
  6192  1ED8  085B               	movf	??_vfpfcnvrt,w
  6193  1ED9  0084               	movwf	4
  6194  1EDA  085C               	movf	??_vfpfcnvrt+1,w
  6195  1EDB  0085               	movwf	5
  6196  1EDC  0012               	moviw fsr0++
  6197  1EDD  3A2A               	xorlw	42
  6198  1EDE  1D03               	btfss	3,2
  6199  1EDF  2EFE               	goto	l6856
  6200                           
  6201                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  6202  1EE0  0859               	movf	vfpfcnvrt@fmt,w
  6203  1EE1  0086               	movwf	6
  6204  1EE2  0187               	clrf	7
  6205  1EE3  3001               	movlw	1
  6206  1EE4  0781               	addwf	1,f
  6207  1EE5  3141               	addfsr 1,1
  6208  1EE6  1803               	skipnc
  6209  1EE7  0A81               	incf	1,f
  6210                           
  6211                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6212  1EE8  085A               	movf	vfpfcnvrt@ap,w
  6213  1EE9  0086               	movwf	6
  6214  1EEA  0187               	clrf	7
  6215  1EEB  0801               	movf	1,w
  6216  1EEC  0084               	movwf	4
  6217  1EED  0185               	clrf	5
  6218  1EEE  3002               	movlw	2
  6219  1EEF  0781               	addwf	1,f
  6220  1EF0  3F00               	moviw [0]fsr0
  6221  1EF1  0022               	movlb	2	; select bank2
  6222  1EF2  00E5               	movwf	_width^(0+256)
  6223  1EF3  3F01               	moviw [1]fsr0
  6224  1EF4  00E6               	movwf	(_width+1)^(0+256)
  6225                           
  6226                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  6227  1EF5  1FE6               	btfss	(_width+1)^(0+256),7
  6228  1EF6  2F41               	goto	l6866
  6229                           
  6230                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  6231  1EF7  1469               	bsf	_flags^(0+256),0
  6232                           
  6233                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  6234  1EF8  09E5               	comf	_width^(0+256),f
  6235  1EF9  09E6               	comf	(_width+1)^(0+256),f
  6236  1EFA  0AE5               	incf	_width^(0+256),f
  6237  1EFB  1903               	skipnz
  6238  1EFC  0AE6               	incf	(_width+1)^(0+256),f
  6239  1EFD  2F41               	goto	l6866
  6240  1EFE                     l6856:	
  6241                           
  6242                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  6243  1EFE  0859               	movf	vfpfcnvrt@fmt,w
  6244  1EFF  0086               	movwf	6
  6245  1F00  0187               	clrf	7
  6246  1F01  3F40               	moviw [0]fsr1
  6247  1F02  00F7               	movwf	atoi@s
  6248  1F03  3F41               	moviw [1]fsr1
  6249  1F04  00F8               	movwf	atoi@s+1
  6250  1F05  31AC  2469  319E   	fcall	_atoi
  6251  1F08  0878               	movf	?_atoi+1,w
  6252  1F09  0022               	movlb	2	; select bank2
  6253  1F0A  00E6               	movwf	(_width+1)^(0+256)
  6254  1F0B  0877               	movf	?_atoi,w
  6255  1F0C  00E5               	movwf	_width^(0+256)
  6256                           
  6257                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6258  1F0D  2F17               	goto	l6860
  6259  1F0E                     l6858:	
  6260                           
  6261                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  6262  1F0E  0020               	movlb	0	; select bank0
  6263  1F0F  0859               	movf	vfpfcnvrt@fmt,w
  6264  1F10  0086               	movwf	6
  6265  1F11  0187               	clrf	7
  6266  1F12  3001               	movlw	1
  6267  1F13  0781               	addwf	1,f
  6268  1F14  3141               	addfsr 1,1
  6269  1F15  1803               	skipnc
  6270  1F16  0A81               	incf	1,f
  6271  1F17                     l6860:	
  6272  1F17  0020               	movlb	0	; select bank0
  6273  1F18  0859               	movf	vfpfcnvrt@fmt,w
  6274  1F19  0086               	movwf	6
  6275  1F1A  0187               	clrf	7
  6276  1F1B  3F40               	moviw [0]fsr1
  6277  1F1C  00DB               	movwf	??_vfpfcnvrt
  6278  1F1D  3F41               	moviw [1]fsr1
  6279  1F1E  00DC               	movwf	??_vfpfcnvrt+1
  6280  1F1F  085B               	movf	??_vfpfcnvrt,w
  6281  1F20  0084               	movwf	4
  6282  1F21  085C               	movf	??_vfpfcnvrt+1,w
  6283  1F22  0085               	movwf	5
  6284  1F23  0800               	movf	0,w	;code access
  6285  1F24  3ED0               	addlw	208
  6286  1F25  00DD               	movwf	??_vfpfcnvrt+2
  6287  1F26  30FF               	movlw	255
  6288  1F27  1803               	skipnc
  6289  1F28  3000               	movlw	0
  6290  1F29  00DE               	movwf	??_vfpfcnvrt+3
  6291  1F2A  3000               	movlw	0
  6292  1F2B  025E               	subwf	??_vfpfcnvrt+3,w
  6293  1F2C  300A               	movlw	10
  6294  1F2D  1903               	skipnz
  6295  1F2E  025D               	subwf	??_vfpfcnvrt+2,w
  6296  1F2F  1803               	btfsc	3,0
  6297  1F30  2F33               	goto	u9050
  6298  1F31  3001               	movlw	1
  6299  1F32  2F34               	goto	u9060
  6300  1F33                     u9050:	
  6301  1F33  3000               	movlw	0
  6302  1F34                     u9060:	
  6303  1F34  00DF               	movwf	??_vfpfcnvrt+4
  6304  1F35  01E0               	clrf	??_vfpfcnvrt+5
  6305  1F36  085F               	movf	??_vfpfcnvrt+4,w
  6306  1F37  0021               	movlb	1	; select bank1
  6307  1F38  00A4               	movwf	_vfpfcnvrt$1252^(0+128)
  6308  1F39  0020               	movlb	0	; select bank0
  6309  1F3A  0860               	movf	??_vfpfcnvrt+5,w
  6310  1F3B  0021               	movlb	1	; select bank1
  6311  1F3C  00A5               	movwf	(_vfpfcnvrt$1252+1)^(0+128)
  6312  1F3D  0824               	movf	_vfpfcnvrt$1252^(0+128),w
  6313  1F3E  0425               	iorwf	(_vfpfcnvrt$1252+1)^(0+128),w
  6314  1F3F  1D03               	btfss	3,2
  6315  1F40  2F0E               	goto	l6858
  6316  1F41                     l6866:	
  6317                           
  6318                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  6319  1F41  0020               	movlb	0	; select bank0
  6320  1F42  0859               	movf	vfpfcnvrt@fmt,w
  6321  1F43  0086               	movwf	6
  6322  1F44  0187               	clrf	7
  6323  1F45  3F40               	moviw [0]fsr1
  6324  1F46  00DB               	movwf	??_vfpfcnvrt
  6325  1F47  3F41               	moviw [1]fsr1
  6326  1F48  00DC               	movwf	??_vfpfcnvrt+1
  6327  1F49  085B               	movf	??_vfpfcnvrt,w
  6328  1F4A  0084               	movwf	4
  6329  1F4B  085C               	movf	??_vfpfcnvrt+1,w
  6330  1F4C  0085               	movwf	5
  6331  1F4D  0012               	moviw fsr0++
  6332  1F4E  3A2E               	xorlw	46
  6333  1F4F  1D03               	btfss	3,2
  6334  1F50  2FC5               	goto	l6888
  6335                           
  6336                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  6337  1F51  0022               	movlb	2	; select bank2
  6338  1F52  01E7               	clrf	_prec^(0+256)
  6339  1F53  01E8               	clrf	(_prec+1)^(0+256)
  6340                           
  6341                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  6342  1F54  0020               	movlb	0	; select bank0
  6343  1F55  0859               	movf	vfpfcnvrt@fmt,w
  6344  1F56  0086               	movwf	6
  6345  1F57  0187               	clrf	7
  6346  1F58  3001               	movlw	1
  6347  1F59  0781               	addwf	1,f
  6348  1F5A  3141               	addfsr 1,1
  6349  1F5B  1803               	skipnc
  6350  1F5C  0A81               	incf	1,f
  6351                           
  6352                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  6353  1F5D  0859               	movf	vfpfcnvrt@fmt,w
  6354  1F5E  0086               	movwf	6
  6355  1F5F  0187               	clrf	7
  6356  1F60  3F40               	moviw [0]fsr1
  6357  1F61  00DB               	movwf	??_vfpfcnvrt
  6358  1F62  3F41               	moviw [1]fsr1
  6359  1F63  00DC               	movwf	??_vfpfcnvrt+1
  6360  1F64  085B               	movf	??_vfpfcnvrt,w
  6361  1F65  0084               	movwf	4
  6362  1F66  085C               	movf	??_vfpfcnvrt+1,w
  6363  1F67  0085               	movwf	5
  6364  1F68  0012               	moviw fsr0++
  6365  1F69  3A2A               	xorlw	42
  6366  1F6A  1D03               	btfss	3,2
  6367  1F6B  2F82               	goto	l6878
  6368                           
  6369                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  6370  1F6C  0859               	movf	vfpfcnvrt@fmt,w
  6371  1F6D  0086               	movwf	6
  6372  1F6E  0187               	clrf	7
  6373  1F6F  3001               	movlw	1
  6374  1F70  0781               	addwf	1,f
  6375  1F71  3141               	addfsr 1,1
  6376  1F72  1803               	skipnc
  6377  1F73  0A81               	incf	1,f
  6378                           
  6379                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  6380  1F74  085A               	movf	vfpfcnvrt@ap,w
  6381  1F75  0086               	movwf	6
  6382  1F76  0187               	clrf	7
  6383  1F77  0801               	movf	1,w
  6384  1F78  0084               	movwf	4
  6385  1F79  0185               	clrf	5
  6386  1F7A  3002               	movlw	2
  6387  1F7B  0781               	addwf	1,f
  6388  1F7C  3F00               	moviw [0]fsr0
  6389  1F7D  0022               	movlb	2	; select bank2
  6390  1F7E  00E7               	movwf	_prec^(0+256)
  6391  1F7F  3F01               	moviw [1]fsr0
  6392  1F80  00E8               	movwf	(_prec+1)^(0+256)
  6393                           
  6394                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  6395  1F81  2FC5               	goto	l6888
  6396  1F82                     l6878:	
  6397                           
  6398                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  6399  1F82  0859               	movf	vfpfcnvrt@fmt,w
  6400  1F83  0086               	movwf	6
  6401  1F84  0187               	clrf	7
  6402  1F85  3F40               	moviw [0]fsr1
  6403  1F86  00F7               	movwf	atoi@s
  6404  1F87  3F41               	moviw [1]fsr1
  6405  1F88  00F8               	movwf	atoi@s+1
  6406  1F89  31AC  2469  319E   	fcall	_atoi
  6407  1F8C  0878               	movf	?_atoi+1,w
  6408  1F8D  0022               	movlb	2	; select bank2
  6409  1F8E  00E8               	movwf	(_prec+1)^(0+256)
  6410  1F8F  0877               	movf	?_atoi,w
  6411  1F90  00E7               	movwf	_prec^(0+256)
  6412                           
  6413                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6414  1F91  2F9B               	goto	l6882
  6415  1F92                     l6880:	
  6416                           
  6417                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  6418  1F92  0020               	movlb	0	; select bank0
  6419  1F93  0859               	movf	vfpfcnvrt@fmt,w
  6420  1F94  0086               	movwf	6
  6421  1F95  0187               	clrf	7
  6422  1F96  3001               	movlw	1
  6423  1F97  0781               	addwf	1,f
  6424  1F98  3141               	addfsr 1,1
  6425  1F99  1803               	skipnc
  6426  1F9A  0A81               	incf	1,f
  6427  1F9B                     l6882:	
  6428  1F9B  0020               	movlb	0	; select bank0
  6429  1F9C  0859               	movf	vfpfcnvrt@fmt,w
  6430  1F9D  0086               	movwf	6
  6431  1F9E  0187               	clrf	7
  6432  1F9F  3F40               	moviw [0]fsr1
  6433  1FA0  00DB               	movwf	??_vfpfcnvrt
  6434  1FA1  3F41               	moviw [1]fsr1
  6435  1FA2  00DC               	movwf	??_vfpfcnvrt+1
  6436  1FA3  085B               	movf	??_vfpfcnvrt,w
  6437  1FA4  0084               	movwf	4
  6438  1FA5  085C               	movf	??_vfpfcnvrt+1,w
  6439  1FA6  0085               	movwf	5
  6440  1FA7  0800               	movf	0,w	;code access
  6441  1FA8  3ED0               	addlw	208
  6442  1FA9  00DD               	movwf	??_vfpfcnvrt+2
  6443  1FAA  30FF               	movlw	255
  6444  1FAB  1803               	skipnc
  6445  1FAC  3000               	movlw	0
  6446  1FAD  00DE               	movwf	??_vfpfcnvrt+3
  6447  1FAE  3000               	movlw	0
  6448  1FAF  025E               	subwf	??_vfpfcnvrt+3,w
  6449  1FB0  300A               	movlw	10
  6450  1FB1  1903               	skipnz
  6451  1FB2  025D               	subwf	??_vfpfcnvrt+2,w
  6452  1FB3  1803               	btfsc	3,0
  6453  1FB4  2FB7               	goto	u9100
  6454  1FB5  3001               	movlw	1
  6455  1FB6  2FB8               	goto	u9110
  6456  1FB7                     u9100:	
  6457  1FB7  3000               	movlw	0
  6458  1FB8                     u9110:	
  6459  1FB8  00DF               	movwf	??_vfpfcnvrt+4
  6460  1FB9  01E0               	clrf	??_vfpfcnvrt+5
  6461  1FBA  085F               	movf	??_vfpfcnvrt+4,w
  6462  1FBB  0021               	movlb	1	; select bank1
  6463  1FBC  00A6               	movwf	_vfpfcnvrt$1253^(0+128)
  6464  1FBD  0020               	movlb	0	; select bank0
  6465  1FBE  0860               	movf	??_vfpfcnvrt+5,w
  6466  1FBF  0021               	movlb	1	; select bank1
  6467  1FC0  00A7               	movwf	(_vfpfcnvrt$1253+1)^(0+128)
  6468  1FC1  0826               	movf	_vfpfcnvrt$1253^(0+128),w
  6469  1FC2  0427               	iorwf	(_vfpfcnvrt$1253+1)^(0+128),w
  6470  1FC3  1D03               	btfss	3,2
  6471  1FC4  2F92               	goto	l6880
  6472  1FC5                     l6888:	
  6473                           
  6474                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  6475  1FC5  0020               	movlb	0	; select bank0
  6476  1FC6  0859               	movf	vfpfcnvrt@fmt,w
  6477  1FC7  0086               	movwf	6
  6478  1FC8  0187               	clrf	7
  6479  1FC9  3F40               	moviw [0]fsr1
  6480  1FCA  00DB               	movwf	??_vfpfcnvrt
  6481  1FCB  3F41               	moviw [1]fsr1
  6482  1FCC  00DC               	movwf	??_vfpfcnvrt+1
  6483  1FCD  085B               	movf	??_vfpfcnvrt,w
  6484  1FCE  0084               	movwf	4
  6485  1FCF  085C               	movf	??_vfpfcnvrt+1,w
  6486  1FD0  0085               	movwf	5
  6487  1FD1  0012               	moviw fsr0++
  6488  1FD2  3A63               	xorlw	99
  6489  1FD3  31A4  1D03         	btfss	3,2
  6490  1FD5  2CD9               	goto	l6898
  6491                           
  6492                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  6493  1FD6  0859               	movf	vfpfcnvrt@fmt,w
  6494  1FD7  0086               	movwf	6
  6495  1FD8  0187               	clrf	7
  6496  1FD9  3001               	movlw	1
  6497  1FDA  0781               	addwf	1,f
  6498  1FDB  3141               	addfsr 1,1
  6499  1FDC  1803               	skipnc
  6500  1FDD  0A81               	incf	1,f
  6501                           
  6502                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6503  1FDE  085A               	movf	vfpfcnvrt@ap,w
  6504  1FDF  0086               	movwf	6
  6505  1FE0  0187               	clrf	7
  6506  1FE1  0801               	movf	1,w
  6507  1FE2  0084               	movwf	4
  6508  1FE3  0185               	clrf	5
  6509  1FE4  3002               	movlw	2
  6510  1FE5  0781               	addwf	1,f
  6511  1FE6  0800               	movf	0,w
  6512  1FE7  00DB               	movwf	??_vfpfcnvrt
  6513  1FE8  085B               	movf	??_vfpfcnvrt,w
  6514  1FE9  0021               	movlb	1	; select bank1
  6515  1FEA  00B2               	movwf	vfpfcnvrt@c^(0+128)
  6516                           
  6517                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  6518  1FEB  0020               	movlb	0	; select bank0
  6519  1FEC  0858               	movf	vfpfcnvrt@fp+1,w
  6520  1FED  00B1               	movwf	ctoa@fp+1
  6521  1FEE  0857               	movf	vfpfcnvrt@fp,w
  6522  1FEF  00B0               	movwf	ctoa@fp
  6523  1FF0  0021               	movlb	1	; select bank1
  6524  1FF1  0832               	movf	vfpfcnvrt@c^(0+128),w
  6525  1FF2  0020               	movlb	0	; select bank0
  6526  1FF3  00DB               	movwf	??_vfpfcnvrt
  6527  1FF4  085B               	movf	??_vfpfcnvrt,w
  6528  1FF5  00B2               	movwf	ctoa@c
  6529  1FF6  31B5  25B1         	fcall	_ctoa
  6530  1FF8  0020               	movlb	0	; select bank0
  6531  1FF9  0831               	movf	?_ctoa+1,w
  6532  1FFA  00D8               	movwf	?_vfpfcnvrt+1
  6533  1FFB  0830               	movf	?_ctoa,w
  6534  1FFC  00D7               	movwf	?_vfpfcnvrt
  6535  1FFD  0008               	return
  6536  1FFE                     L7:	
  6537  1FFE                     L6:	
  6538  1FFE  318F  2FDD         	ljmp	l7166
  6539                           
  6540                           	psect	text8
  6541  1A21                     __ptext8:	
  6542 ;; *************** function _xtoa *****************
  6543 ;; Defined at:
  6544 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6545 ;; Parameters:    Size  Location     Type
  6546 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  6547 ;;		 -> vsnprintf@f(6), 
  6548 ;;  d               8   18[BANK0 ] unsigned long long 
  6549 ;;  x               1   26[BANK0 ] unsigned char 
  6550 ;; Auto vars:     Size  Location     Type
  6551 ;;  n               8   43[BANK0 ] unsigned long long 
  6552 ;;  c               2   53[BANK0 ] int 
  6553 ;;  i               2   51[BANK0 ] int 
  6554 ;;  w               2   41[BANK0 ] int 
  6555 ;;  p               2   39[BANK0 ] int 
  6556 ;; Return value:  Size  Location     Type
  6557 ;;                  2   16[BANK0 ] int 
  6558 ;; Registers used:
  6559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6560 ;; Tracked objects:
  6561 ;;		On entry : 0/0
  6562 ;;		On exit  : 0/0
  6563 ;;		Unchanged: 0/0
  6564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6565 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6566 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6567 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6568 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6569 ;;Total ram usage:       39 bytes
  6570 ;; Hardware stack levels used:    1
  6571 ;; Hardware stack levels required when called:    5
  6572 ;; This function calls:
  6573 ;;		_isalpha
  6574 ;;		_isupper
  6575 ;;		_pad
  6576 ;;		_toupper
  6577 ;; This function is called by:
  6578 ;;		_vfpfcnvrt
  6579 ;; This function uses a non-reentrant model
  6580 ;;
  6581                           
  6582                           
  6583                           ;psect for function _xtoa
  6584  1A21                     _xtoa:	
  6585                           
  6586                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  6587                           
  6588                           ;incstack = 0
  6589                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6590  1A21  0022               	movlb	2	; select bank2
  6591  1A22  1BE8               	btfsc	(_prec+1)^(0+256),7
  6592  1A23  2A28               	goto	l734
  6593                           
  6594                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  6595  1A24  30FD               	movlw	253
  6596  1A25  05E9               	andwf	_flags^(0+256),f
  6597  1A26  30FF               	movlw	255
  6598  1A27  05EA               	andwf	(_flags+1)^(0+256),f
  6599  1A28                     l734:	
  6600                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 631:     }
  6601                           
  6602                           
  6603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  6604  1A28  0868               	movf	(_prec+1)^(0+256),w
  6605  1A29  3A80               	xorlw	128
  6606  1A2A  0020               	movlb	0	; select bank0
  6607  1A2B  00BB               	movwf	??_xtoa
  6608  1A2C  3080               	movlw	128
  6609  1A2D  023B               	subwf	??_xtoa,w
  6610  1A2E  1D03               	skipz
  6611  1A2F  2A33               	goto	u8725
  6612  1A30  3001               	movlw	1
  6613  1A31  0022               	movlb	2	; select bank2
  6614  1A32  0267               	subwf	_prec^(0+256),w
  6615  1A33                     u8725:	
  6616  1A33  1803               	skipnc
  6617  1A34  2A3B               	goto	l6688
  6618  1A35  3001               	movlw	1
  6619  1A36  0020               	movlb	0	; select bank0
  6620  1A37  00C7               	movwf	xtoa@p
  6621  1A38  3000               	movlw	0
  6622  1A39  00C8               	movwf	xtoa@p+1
  6623  1A3A  2A43               	goto	l738
  6624  1A3B                     l6688:	
  6625  1A3B  0022               	movlb	2	; select bank2
  6626  1A3C  0868               	movf	(_prec+1)^(0+256),w
  6627  1A3D  0020               	movlb	0	; select bank0
  6628  1A3E  00C8               	movwf	xtoa@p+1
  6629  1A3F  0022               	movlb	2	; select bank2
  6630  1A40  0867               	movf	_prec^(0+256),w
  6631  1A41  0020               	movlb	0	; select bank0
  6632  1A42  00C7               	movwf	xtoa@p
  6633  1A43                     l738:	
  6634                           
  6635                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  6636  1A43  0022               	movlb	2	; select bank2
  6637  1A44  0866               	movf	(_width+1)^(0+256),w
  6638  1A45  0020               	movlb	0	; select bank0
  6639  1A46  00CA               	movwf	xtoa@w+1
  6640  1A47  0022               	movlb	2	; select bank2
  6641  1A48  0865               	movf	_width^(0+256),w
  6642  1A49  0020               	movlb	0	; select bank0
  6643  1A4A  00C9               	movwf	xtoa@w
  6644                           
  6645                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  6646  1A4B  0022               	movlb	2	; select bank2
  6647  1A4C  1E69               	btfss	_flags^(0+256),4
  6648  1A4D  2A53               	goto	l6694
  6649                           
  6650                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  6651  1A4E  30FE               	movlw	254
  6652  1A4F  0020               	movlb	0	; select bank0
  6653  1A50  07C9               	addwf	xtoa@w,f
  6654  1A51  30FF               	movlw	255
  6655  1A52  3DCA               	addwfc	xtoa@w+1,f
  6656  1A53                     l6694:	
  6657                           
  6658                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  6659  1A53  0020               	movlb	0	; select bank0
  6660  1A54  0832               	movf	xtoa@d,w
  6661  1A55  00CB               	movwf	xtoa@n
  6662  1A56  0833               	movf	xtoa@d+1,w
  6663  1A57  00CC               	movwf	xtoa@n+1
  6664  1A58  0834               	movf	xtoa@d+2,w
  6665  1A59  00CD               	movwf	xtoa@n+2
  6666  1A5A  0835               	movf	xtoa@d+3,w
  6667  1A5B  00CE               	movwf	xtoa@n+3
  6668  1A5C  0836               	movf	xtoa@d+4,w
  6669  1A5D  00CF               	movwf	xtoa@n+4
  6670  1A5E  0837               	movf	xtoa@d+5,w
  6671  1A5F  00D0               	movwf	xtoa@n+5
  6672  1A60  0838               	movf	xtoa@d+6,w
  6673  1A61  00D1               	movwf	xtoa@n+6
  6674  1A62  0839               	movf	xtoa@d+7,w
  6675  1A63  00D2               	movwf	xtoa@n+7
  6676                           
  6677                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  6678  1A64  301F               	movlw	31
  6679  1A65  00D3               	movwf	xtoa@i
  6680  1A66  3000               	movlw	0
  6681  1A67  00D4               	movwf	xtoa@i+1
  6682                           
  6683                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  6684  1A68  0024               	movlb	4	; select bank4
  6685  1A69  01BF               	clrf	(_dbuf^(0+512)+31)
  6686                           
  6687                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6688  1A6A  2B15               	goto	l6726
  6689  1A6B                     l6698:	
  6690                           
  6691                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  6692  1A6B  30FF               	movlw	255
  6693  1A6C  0020               	movlb	0	; select bank0
  6694  1A6D  07D3               	addwf	xtoa@i,f
  6695  1A6E  30FF               	movlw	255
  6696  1A6F  3DD4               	addwfc	xtoa@i+1,f
  6697                           
  6698                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  6699  1A70  300F               	movlw	15
  6700  1A71  054B               	andwf	xtoa@n,w
  6701  1A72  00D5               	movwf	xtoa@c
  6702  1A73  3000               	movlw	0
  6703  1A74  054C               	andwf	xtoa@n+1,w
  6704  1A75  00D6               	movwf	xtoa@c+1
  6705                           
  6706                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  6707  1A76  0856               	movf	xtoa@c+1,w
  6708  1A77  3A80               	xorlw	128
  6709  1A78  00BB               	movwf	??_xtoa
  6710  1A79  3080               	movlw	128
  6711  1A7A  023B               	subwf	??_xtoa,w
  6712  1A7B  1D03               	skipz
  6713  1A7C  2A7F               	goto	u8745
  6714  1A7D  300A               	movlw	10
  6715  1A7E  0255               	subwf	xtoa@c,w
  6716  1A7F                     u8745:	
  6717  1A7F  1C03               	skipc
  6718  1A80  2A85               	goto	l6702
  6719  1A81  0020               	movlb	0	; select bank0
  6720  1A82  0855               	movf	xtoa@c,w
  6721  1A83  3E57               	addlw	87
  6722  1A84  2A88               	goto	L1
  6723  1A85                     l6702:	
  6724  1A85  0020               	movlb	0	; select bank0
  6725  1A86  0855               	movf	xtoa@c,w
  6726  1A87  3E30               	addlw	48
  6727  1A88                     L1:	
  6728  1A88  00D5               	movwf	xtoa@c
  6729  1A89  3000               	movlw	0
  6730  1A8A  3D56               	addwfc	xtoa@c+1,w
  6731  1A8B  00D6               	movwf	xtoa@c+1
  6732  1A8C  083A               	movf	xtoa@x,w
  6733  1A8D  3EBF               	addlw	191
  6734  1A8E  00BB               	movwf	??_xtoa
  6735  1A8F  30FF               	movlw	255
  6736  1A90  1803               	skipnc
  6737  1A91  3000               	movlw	0
  6738  1A92  00BC               	movwf	??_xtoa+1
  6739  1A93  3000               	movlw	0
  6740  1A94  023C               	subwf	??_xtoa+1,w
  6741  1A95  301A               	movlw	26
  6742  1A96  1903               	skipnz
  6743  1A97  023B               	subwf	??_xtoa,w
  6744  1A98  1803               	btfsc	3,0
  6745  1A99  2A9C               	goto	u8750
  6746  1A9A  3001               	movlw	1
  6747  1A9B  2A9D               	goto	u8760
  6748  1A9C                     u8750:	
  6749  1A9C  3000               	movlw	0
  6750  1A9D                     u8760:	
  6751  1A9D  00BD               	movwf	??_xtoa+2
  6752  1A9E  01BE               	clrf	??_xtoa+3
  6753  1A9F  083D               	movf	??_xtoa+2,w
  6754  1AA0  00C3               	movwf	_xtoa$1237
  6755  1AA1  083E               	movf	??_xtoa+3,w
  6756  1AA2  00C4               	movwf	_xtoa$1237+1
  6757  1AA3  0843               	movf	_xtoa$1237,w
  6758  1AA4  0444               	iorwf	_xtoa$1237+1,w
  6759  1AA5  1903               	btfsc	3,2
  6760  1AA6  2AD3               	goto	l6718
  6761  1AA7  3020               	movlw	32
  6762  1AA8  0455               	iorwf	xtoa@c,w
  6763  1AA9  00BB               	movwf	??_xtoa
  6764  1AAA  3000               	movlw	0
  6765  1AAB  0456               	iorwf	xtoa@c+1,w
  6766  1AAC  00BC               	movwf	??_xtoa+1
  6767  1AAD  083B               	movf	??_xtoa,w
  6768  1AAE  3E9F               	addlw	159
  6769  1AAF  00BD               	movwf	??_xtoa+2
  6770  1AB0  30FF               	movlw	255
  6771  1AB1  3D3C               	addwfc	??_xtoa+1,w
  6772  1AB2  00BE               	movwf	??_xtoa+3
  6773  1AB3  3000               	movlw	0
  6774  1AB4  023E               	subwf	??_xtoa+3,w
  6775  1AB5  301A               	movlw	26
  6776  1AB6  1903               	skipnz
  6777  1AB7  023D               	subwf	??_xtoa+2,w
  6778  1AB8  1803               	btfsc	3,0
  6779  1AB9  2ABC               	goto	u8780
  6780  1ABA  3001               	movlw	1
  6781  1ABB  2ABD               	goto	u8790
  6782  1ABC                     u8780:	
  6783  1ABC  3000               	movlw	0
  6784  1ABD                     u8790:	
  6785  1ABD  00BF               	movwf	??_xtoa+4
  6786  1ABE  01C0               	clrf	??_xtoa+5
  6787  1ABF  083F               	movf	??_xtoa+4,w
  6788  1AC0  00C5               	movwf	_xtoa$1238
  6789  1AC1  0840               	movf	??_xtoa+5,w
  6790  1AC2  00C6               	movwf	_xtoa$1238+1
  6791  1AC3  0845               	movf	_xtoa$1238,w
  6792  1AC4  0446               	iorwf	_xtoa$1238+1,w
  6793  1AC5  1903               	btfsc	3,2
  6794  1AC6  2AD3               	goto	l6718
  6795                           
  6796                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  6797  1AC7  0856               	movf	xtoa@c+1,w
  6798  1AC8  00F8               	movwf	toupper@c+1
  6799  1AC9  0855               	movf	xtoa@c,w
  6800  1ACA  00F7               	movwf	toupper@c
  6801  1ACB  3190  2001  319A   	fcall	_toupper
  6802  1ACE  0878               	movf	?_toupper+1,w
  6803  1ACF  0020               	movlb	0	; select bank0
  6804  1AD0  00D6               	movwf	xtoa@c+1
  6805  1AD1  0877               	movf	?_toupper,w
  6806  1AD2  00D5               	movwf	xtoa@c
  6807  1AD3                     l6718:	
  6808                           
  6809                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  6810  1AD3  0855               	movf	xtoa@c,w
  6811  1AD4  00BB               	movwf	??_xtoa
  6812  1AD5  0853               	movf	xtoa@i,w
  6813  1AD6  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6814  1AD7  0086               	movwf	6
  6815  1AD8  3002               	movlw	2	; select bank4/5
  6816  1AD9  0087               	movwf	7
  6817  1ADA  083B               	movf	??_xtoa,w
  6818  1ADB  0081               	movwf	1
  6819                           
  6820                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  6821  1ADC  30FF               	movlw	255
  6822  1ADD  07C7               	addwf	xtoa@p,f
  6823  1ADE  30FF               	movlw	255
  6824  1ADF  3DC8               	addwfc	xtoa@p+1,f
  6825                           
  6826                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  6827  1AE0  30FF               	movlw	255
  6828  1AE1  07C9               	addwf	xtoa@w,f
  6829  1AE2  30FF               	movlw	255
  6830  1AE3  3DCA               	addwfc	xtoa@w+1,f
  6831                           
  6832                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  6833  1AE4  304B               	movlw	low xtoa@n
  6834  1AE5  0086               	movwf	6
  6835  1AE6  3000               	movlw	high xtoa@n
  6836  1AE7  0087               	movwf	7
  6837  1AE8  3F40               	moviw [0]fsr1
  6838  1AE9  00BB               	movwf	??_xtoa
  6839  1AEA  3F41               	moviw [1]fsr1
  6840  1AEB  00BC               	movwf	??_xtoa+1
  6841  1AEC  3F42               	moviw [2]fsr1
  6842  1AED  00BD               	movwf	??_xtoa+2
  6843  1AEE  3F43               	moviw [3]fsr1
  6844  1AEF  00BE               	movwf	??_xtoa+3
  6845  1AF0  3F44               	moviw [4]fsr1
  6846  1AF1  00BF               	movwf	??_xtoa+4
  6847  1AF2  3F45               	moviw [5]fsr1
  6848  1AF3  00C0               	movwf	??_xtoa+5
  6849  1AF4  3F46               	moviw [6]fsr1
  6850  1AF5  00C1               	movwf	??_xtoa+6
  6851  1AF6  3F47               	moviw [7]fsr1
  6852  1AF7  00C2               	movwf	??_xtoa+7
  6853  1AF8  3004               	movlw	4
  6854  1AF9                     u8815:	
  6855  1AF9  0020               	movlb	0	; select bank0
  6856  1AFA  36C2               	lsrf	??_xtoa+7,f
  6857  1AFB  0CC1               	rrf	??_xtoa+6,f
  6858  1AFC  0CC0               	rrf	??_xtoa+5,f
  6859  1AFD  0CBF               	rrf	??_xtoa+4,f
  6860  1AFE  0CBE               	rrf	??_xtoa+3,f
  6861  1AFF  0CBD               	rrf	??_xtoa+2,f
  6862  1B00  0CBC               	rrf	??_xtoa+1,f
  6863  1B01  0CBB               	rrf	??_xtoa,f
  6864  1B02  0B89               	decfsz	9,f
  6865  1B03  2AF9               	goto	u8815
  6866  1B04  0020               	movlb	0	; select bank0
  6867  1B05  0842               	movf	??_xtoa+7,w
  6868  1B06  00D2               	movwf	xtoa@n+7
  6869  1B07  0841               	movf	??_xtoa+6,w
  6870  1B08  00D1               	movwf	xtoa@n+6
  6871  1B09  0840               	movf	??_xtoa+5,w
  6872  1B0A  00D0               	movwf	xtoa@n+5
  6873  1B0B  083F               	movf	??_xtoa+4,w
  6874  1B0C  00CF               	movwf	xtoa@n+4
  6875  1B0D  083E               	movf	??_xtoa+3,w
  6876  1B0E  00CE               	movwf	xtoa@n+3
  6877  1B0F  083D               	movf	??_xtoa+2,w
  6878  1B10  00CD               	movwf	xtoa@n+2
  6879  1B11  083C               	movf	??_xtoa+1,w
  6880  1B12  00CC               	movwf	xtoa@n+1
  6881  1B13  083B               	movf	??_xtoa,w
  6882  1B14  00CB               	movwf	xtoa@n
  6883  1B15                     l6726:	
  6884                           
  6885                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6886  1B15  0020               	movlb	0	; select bank0
  6887  1B16  0854               	movf	xtoa@i+1,w
  6888  1B17  3A80               	xorlw	128
  6889  1B18  00BB               	movwf	??_xtoa
  6890  1B19  3080               	movlw	128
  6891  1B1A  023B               	subwf	??_xtoa,w
  6892  1B1B  1D03               	skipz
  6893  1B1C  2B1F               	goto	u8825
  6894  1B1D  3002               	movlw	2
  6895  1B1E  0253               	subwf	xtoa@i,w
  6896  1B1F                     u8825:	
  6897  1B1F  1C03               	skipc
  6898  1B20  2B46               	goto	l759
  6899  1B21  0020               	movlb	0	; select bank0
  6900  1B22  084B               	movf	xtoa@n,w
  6901  1B23  044C               	iorwf	xtoa@n+1,w
  6902  1B24  044D               	iorwf	xtoa@n+2,w
  6903  1B25  044E               	iorwf	xtoa@n+3,w
  6904  1B26  044F               	iorwf	xtoa@n+4,w
  6905  1B27  0450               	iorwf	xtoa@n+5,w
  6906  1B28  0451               	iorwf	xtoa@n+6,w
  6907  1B29  0452               	iorwf	xtoa@n+7,w
  6908  1B2A  1D03               	skipz
  6909  1B2B  2A6B               	goto	l6698
  6910  1B2C  0848               	movf	xtoa@p+1,w
  6911  1B2D  3A80               	xorlw	128
  6912  1B2E  00BB               	movwf	??_xtoa
  6913  1B2F  3080               	movlw	128
  6914  1B30  023B               	subwf	??_xtoa,w
  6915  1B31  1D03               	skipz
  6916  1B32  2B35               	goto	u8845
  6917  1B33  3001               	movlw	1
  6918  1B34  0247               	subwf	xtoa@p,w
  6919  1B35                     u8845:	
  6920  1B35  1803               	skipnc
  6921  1B36  2A6B               	goto	l6698
  6922  1B37  0020               	movlb	0	; select bank0
  6923  1B38  084A               	movf	xtoa@w+1,w
  6924  1B39  3A80               	xorlw	128
  6925  1B3A  00BB               	movwf	??_xtoa
  6926  1B3B  3080               	movlw	128
  6927  1B3C  023B               	subwf	??_xtoa,w
  6928  1B3D  1D03               	skipz
  6929  1B3E  2B41               	goto	u8855
  6930  1B3F  3001               	movlw	1
  6931  1B40  0249               	subwf	xtoa@w,w
  6932  1B41                     u8855:	
  6933  1B41  1C03               	skipc
  6934  1B42  2B46               	goto	l759
  6935  1B43  0022               	movlb	2	; select bank2
  6936  1B44  18E9               	btfsc	_flags^(0+256),1
  6937  1B45  2A6B               	goto	l6698
  6938  1B46                     l759:	
  6939                           
  6940                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  6941  1B46  0022               	movlb	2	; select bank2
  6942  1B47  1E69               	btfss	_flags^(0+256),4
  6943  1B48  2B64               	goto	l6742
  6944                           
  6945                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  6946  1B49  30FF               	movlw	255
  6947  1B4A  0020               	movlb	0	; select bank0
  6948  1B4B  07D3               	addwf	xtoa@i,f
  6949  1B4C  30FF               	movlw	255
  6950  1B4D  3DD4               	addwfc	xtoa@i+1,f
  6951                           
  6952                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  6953  1B4E  083A               	movf	xtoa@x,w
  6954  1B4F  00BB               	movwf	??_xtoa
  6955  1B50  0853               	movf	xtoa@i,w
  6956  1B51  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6957  1B52  0086               	movwf	6
  6958  1B53  3002               	movlw	2	; select bank4/5
  6959  1B54  0087               	movwf	7
  6960  1B55  083B               	movf	??_xtoa,w
  6961  1B56  0081               	movwf	1
  6962                           
  6963                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  6964  1B57  30FF               	movlw	255
  6965  1B58  07D3               	addwf	xtoa@i,f
  6966  1B59  30FF               	movlw	255
  6967  1B5A  3DD4               	addwfc	xtoa@i+1,f
  6968                           
  6969                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  6970  1B5B  3030               	movlw	48
  6971  1B5C  00BB               	movwf	??_xtoa
  6972  1B5D  0853               	movf	xtoa@i,w
  6973  1B5E  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6974  1B5F  0086               	movwf	6
  6975  1B60  3002               	movlw	2	; select bank4/5
  6976  1B61  0087               	movwf	7
  6977  1B62  083B               	movf	??_xtoa,w
  6978  1B63  0081               	movwf	1
  6979  1B64                     l6742:	
  6980                           
  6981                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  6982  1B64  0020               	movlb	0	; select bank0
  6983  1B65  0831               	movf	xtoa@fp+1,w
  6984  1B66  00A7               	movwf	pad@fp+1
  6985  1B67  0830               	movf	xtoa@fp,w
  6986  1B68  00A6               	movwf	pad@fp
  6987  1B69  0853               	movf	xtoa@i,w
  6988  1B6A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6989  1B6B  00BB               	movwf	??_xtoa
  6990  1B6C  083B               	movf	??_xtoa,w
  6991  1B6D  00A8               	movwf	pad@buf
  6992  1B6E  084A               	movf	xtoa@w+1,w
  6993  1B6F  00AA               	movwf	pad@p+1
  6994  1B70  0849               	movf	xtoa@w,w
  6995  1B71  00A9               	movwf	pad@p
  6996  1B72  31B7  275D         	fcall	_pad
  6997  1B74  0020               	movlb	0	; select bank0
  6998  1B75  0827               	movf	?_pad+1,w
  6999  1B76  00B1               	movwf	?_xtoa+1
  7000  1B77  0826               	movf	?_pad,w
  7001  1B78  00B0               	movwf	?_xtoa
  7002  1B79  0008               	return
  7003  1B7A                     __end_of_xtoa:	
  7004                           
  7005                           	psect	text9
  7006  1001                     __ptext9:	
  7007 ;; *************** function _toupper *****************
  7008 ;; Defined at:
  7009 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  7010 ;; Parameters:    Size  Location     Type
  7011 ;;  c               2    7[COMMON] int 
  7012 ;; Auto vars:     Size  Location     Type
  7013 ;;		None
  7014 ;; Return value:  Size  Location     Type
  7015 ;;                  2    7[COMMON] int 
  7016 ;; Registers used:
  7017 ;;		wreg, status,2, status,0
  7018 ;; Tracked objects:
  7019 ;;		On entry : 0/0
  7020 ;;		On exit  : 0/0
  7021 ;;		Unchanged: 0/0
  7022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7023 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7024 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7025 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7026 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7027 ;;Total ram usage:        8 bytes
  7028 ;; Hardware stack levels used:    1
  7029 ;; Hardware stack levels required when called:    2
  7030 ;; This function calls:
  7031 ;;		_islower
  7032 ;; This function is called by:
  7033 ;;		_xtoa
  7034 ;; This function uses a non-reentrant model
  7035 ;;
  7036                           
  7037                           
  7038                           ;psect for function _toupper
  7039  1001                     _toupper:	
  7040                           
  7041                           ;incstack = 0
  7042                           ; Regs used in _toupper: [wreg+status,2+status,0]
  7043  1001  0877               	movf	toupper@c,w
  7044  1002  3E9F               	addlw	159
  7045  1003  0020               	movlb	0	; select bank0
  7046  1004  00A0               	movwf	??_toupper
  7047  1005  30FF               	movlw	255
  7048  1006  3D78               	addwfc	toupper@c+1,w
  7049  1007  00A1               	movwf	??_toupper+1
  7050  1008  3000               	movlw	0
  7051  1009  0221               	subwf	??_toupper+1,w
  7052  100A  301A               	movlw	26
  7053  100B  1903               	skipnz
  7054  100C  0220               	subwf	??_toupper,w
  7055  100D  1803               	btfsc	3,0
  7056  100E  2811               	goto	u7870
  7057  100F  3001               	movlw	1
  7058  1010  2812               	goto	u7880
  7059  1011                     u7870:	
  7060  1011  3000               	movlw	0
  7061  1012                     u7880:	
  7062  1012  00A2               	movwf	??_toupper+2
  7063  1013  01A3               	clrf	??_toupper+3
  7064  1014  0822               	movf	??_toupper+2,w
  7065  1015  00F9               	movwf	_toupper$1787
  7066  1016  0823               	movf	??_toupper+3,w
  7067  1017  00FA               	movwf	_toupper$1787+1
  7068  1018  0879               	movf	_toupper$1787,w
  7069  1019  047A               	iorwf	_toupper$1787+1,w
  7070  101A  1903               	btfsc	3,2
  7071  101B  0008               	return
  7072  101C  305F               	movlw	95
  7073  101D  0577               	andwf	toupper@c,w
  7074  101E  00F7               	movwf	?_toupper
  7075  101F  3000               	movlw	0
  7076  1020  0578               	andwf	toupper@c+1,w
  7077  1021  00F8               	movwf	?_toupper+1
  7078  1022  0008               	return
  7079  1023                     __end_of_toupper:	
  7080                           
  7081                           	psect	text10
  7082  345D                     __ptext10:	
  7083 ;; *************** function _islower *****************
  7084 ;; Defined at:
  7085 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  7086 ;; Parameters:    Size  Location     Type
  7087 ;;  c               2    1[COMMON] int 
  7088 ;; Auto vars:     Size  Location     Type
  7089 ;;		None
  7090 ;; Return value:  Size  Location     Type
  7091 ;;                  2    1[COMMON] int 
  7092 ;; Registers used:
  7093 ;;		wreg, status,2, status,0
  7094 ;; Tracked objects:
  7095 ;;		On entry : 0/0
  7096 ;;		On exit  : 0/0
  7097 ;;		Unchanged: 0/0
  7098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7099 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7101 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7102 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7103 ;;Total ram usage:        6 bytes
  7104 ;; Hardware stack levels used:    1
  7105 ;; Hardware stack levels required when called:    1
  7106 ;; This function calls:
  7107 ;;		Nothing
  7108 ;; This function is called by:
  7109 ;;		_toupper
  7110 ;; This function uses a non-reentrant model
  7111 ;;
  7112                           
  7113                           
  7114                           ;psect for function _islower
  7115  345D                     _islower:	
  7116                           
  7117                           ;incstack = 0
  7118                           ; Regs used in _islower: [wreg+status,2+status,0]
  7119  345D  0871               	movf	islower@c,w
  7120  345E  3E9F               	addlw	159
  7121  345F  00F3               	movwf	??_islower
  7122  3460  30FF               	movlw	255
  7123  3461  3D72               	addwfc	islower@c+1,w
  7124  3462  00F4               	movwf	??_islower+1
  7125  3463  3000               	movlw	0
  7126  3464  0274               	subwf	??_islower+1,w
  7127  3465  301A               	movlw	26
  7128  3466  1903               	skipnz
  7129  3467  0273               	subwf	??_islower,w
  7130  3468  1803               	btfsc	3,0
  7131  3469  2C6C               	goto	u7760
  7132  346A  3001               	movlw	1
  7133  346B  2C6D               	goto	u7770
  7134  346C                     u7760:	
  7135  346C  3000               	movlw	0
  7136  346D                     u7770:	
  7137  346D  00F5               	movwf	??_islower+2
  7138  346E  01F6               	clrf	??_islower+3
  7139  346F  0875               	movf	??_islower+2,w
  7140  3470  00F1               	movwf	?_islower
  7141  3471  0876               	movf	??_islower+3,w
  7142  3472  00F2               	movwf	?_islower+1
  7143  3473  0008               	return
  7144  3474                     __end_of_islower:	
  7145                           
  7146                           	psect	text11
  7147  3446                     __ptext11:	
  7148 ;; *************** function _isupper *****************
  7149 ;; Defined at:
  7150 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  7151 ;; Parameters:    Size  Location     Type
  7152 ;;  c               2    1[COMMON] int 
  7153 ;; Auto vars:     Size  Location     Type
  7154 ;;		None
  7155 ;; Return value:  Size  Location     Type
  7156 ;;                  2    1[COMMON] int 
  7157 ;; Registers used:
  7158 ;;		wreg, status,2, status,0
  7159 ;; Tracked objects:
  7160 ;;		On entry : 0/0
  7161 ;;		On exit  : 0/0
  7162 ;;		Unchanged: 0/0
  7163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7164 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7166 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7167 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7168 ;;Total ram usage:        6 bytes
  7169 ;; Hardware stack levels used:    1
  7170 ;; Hardware stack levels required when called:    1
  7171 ;; This function calls:
  7172 ;;		Nothing
  7173 ;; This function is called by:
  7174 ;;		_xtoa
  7175 ;; This function uses a non-reentrant model
  7176 ;;
  7177                           
  7178                           
  7179                           ;psect for function _isupper
  7180  3446                     _isupper:	
  7181                           
  7182                           ;incstack = 0
  7183                           ; Regs used in _isupper: [wreg+status,2+status,0]
  7184  3446  0871               	movf	isupper@c,w
  7185  3447  3EBF               	addlw	191
  7186  3448  00F3               	movwf	??_isupper
  7187  3449  30FF               	movlw	255
  7188  344A  3D72               	addwfc	isupper@c+1,w
  7189  344B  00F4               	movwf	??_isupper+1
  7190  344C  3000               	movlw	0
  7191  344D  0274               	subwf	??_isupper+1,w
  7192  344E  301A               	movlw	26
  7193  344F  1903               	skipnz
  7194  3450  0273               	subwf	??_isupper,w
  7195  3451  1803               	btfsc	3,0
  7196  3452  2C55               	goto	u7830
  7197  3453  3001               	movlw	1
  7198  3454  2C56               	goto	u7840
  7199  3455                     u7830:	
  7200  3455  3000               	movlw	0
  7201  3456                     u7840:	
  7202  3456  00F5               	movwf	??_isupper+2
  7203  3457  01F6               	clrf	??_isupper+3
  7204  3458  0875               	movf	??_isupper+2,w
  7205  3459  00F1               	movwf	?_isupper
  7206  345A  0876               	movf	??_isupper+3,w
  7207  345B  00F2               	movwf	?_isupper+1
  7208  345C  0008               	return
  7209  345D                     __end_of_isupper:	
  7210                           
  7211                           	psect	text12
  7212  3514                     __ptext12:	
  7213 ;; *************** function _isalpha *****************
  7214 ;; Defined at:
  7215 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  7216 ;; Parameters:    Size  Location     Type
  7217 ;;  c               2    1[COMMON] int 
  7218 ;; Auto vars:     Size  Location     Type
  7219 ;;		None
  7220 ;; Return value:  Size  Location     Type
  7221 ;;                  2    1[COMMON] int 
  7222 ;; Registers used:
  7223 ;;		wreg, status,2, status,0
  7224 ;; Tracked objects:
  7225 ;;		On entry : 0/0
  7226 ;;		On exit  : 0/0
  7227 ;;		Unchanged: 0/0
  7228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7229 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7231 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7232 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7233 ;;Total ram usage:        8 bytes
  7234 ;; Hardware stack levels used:    1
  7235 ;; Hardware stack levels required when called:    1
  7236 ;; This function calls:
  7237 ;;		Nothing
  7238 ;; This function is called by:
  7239 ;;		_xtoa
  7240 ;; This function uses a non-reentrant model
  7241 ;;
  7242                           
  7243                           
  7244                           ;psect for function _isalpha
  7245  3514                     _isalpha:	
  7246                           
  7247                           ;incstack = 0
  7248                           ; Regs used in _isalpha: [wreg+status,2+status,0]
  7249  3514  3020               	movlw	32
  7250  3515  0471               	iorwf	isalpha@c,w
  7251  3516  00F3               	movwf	??_isalpha
  7252  3517  3000               	movlw	0
  7253  3518  0472               	iorwf	isalpha@c+1,w
  7254  3519  00F4               	movwf	??_isalpha+1
  7255  351A  0873               	movf	??_isalpha,w
  7256  351B  3E9F               	addlw	159
  7257  351C  00F5               	movwf	??_isalpha+2
  7258  351D  30FF               	movlw	255
  7259  351E  3D74               	addwfc	??_isalpha+1,w
  7260  351F  00F6               	movwf	??_isalpha+3
  7261  3520  3000               	movlw	0
  7262  3521  0276               	subwf	??_isalpha+3,w
  7263  3522  301A               	movlw	26
  7264  3523  1903               	skipnz
  7265  3524  0275               	subwf	??_isalpha+2,w
  7266  3525  1803               	btfsc	3,0
  7267  3526  2D29               	goto	u7850
  7268  3527  3001               	movlw	1
  7269  3528  2D2A               	goto	u7860
  7270  3529                     u7850:	
  7271  3529  3000               	movlw	0
  7272  352A                     u7860:	
  7273  352A  00F7               	movwf	??_isalpha+4
  7274  352B  01F8               	clrf	??_isalpha+5
  7275  352C  0877               	movf	??_isalpha+4,w
  7276  352D  00F1               	movwf	?_isalpha
  7277  352E  0878               	movf	??_isalpha+5,w
  7278  352F  00F2               	movwf	?_isalpha+1
  7279  3530  0008               	return
  7280  3531                     __end_of_isalpha:	
  7281                           
  7282                           	psect	text13
  7283  2214                     __ptext13:	
  7284 ;; *************** function _utoa *****************
  7285 ;; Defined at:
  7286 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7287 ;; Parameters:    Size  Location     Type
  7288 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  7289 ;;		 -> vsnprintf@f(6), 
  7290 ;;  d               8   18[BANK0 ] unsigned long long 
  7291 ;; Auto vars:     Size  Location     Type
  7292 ;;  n               8   31[BANK0 ] unsigned long long 
  7293 ;;  i               2   39[BANK0 ] int 
  7294 ;;  w               2   29[BANK0 ] int 
  7295 ;;  p               2   27[BANK0 ] int 
  7296 ;; Return value:  Size  Location     Type
  7297 ;;                  2   16[BANK0 ] int 
  7298 ;; Registers used:
  7299 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7300 ;; Tracked objects:
  7301 ;;		On entry : 0/0
  7302 ;;		On exit  : 0/0
  7303 ;;		Unchanged: 0/0
  7304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7305 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7306 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7307 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7308 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7309 ;;Total ram usage:       25 bytes
  7310 ;; Hardware stack levels used:    1
  7311 ;; Hardware stack levels required when called:    5
  7312 ;; This function calls:
  7313 ;;		___lodiv
  7314 ;;		___lomod
  7315 ;;		_pad
  7316 ;; This function is called by:
  7317 ;;		_vfpfcnvrt
  7318 ;; This function uses a non-reentrant model
  7319 ;;
  7320                           
  7321                           
  7322                           ;psect for function _utoa
  7323  2214                     _utoa:	
  7324                           
  7325                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  7326                           
  7327                           ;incstack = 0
  7328                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7329  2214  0022               	movlb	2	; select bank2
  7330  2215  1BE8               	btfsc	(_prec+1)^(0+256),7
  7331  2216  2A1B               	goto	l719
  7332                           
  7333                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  7334  2217  30FD               	movlw	253
  7335  2218  05E9               	andwf	_flags^(0+256),f
  7336  2219  30FF               	movlw	255
  7337  221A  05EA               	andwf	(_flags+1)^(0+256),f
  7338  221B                     l719:	
  7339                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 601:     }
  7340                           
  7341                           
  7342                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  7343  221B  0868               	movf	(_prec+1)^(0+256),w
  7344  221C  3A80               	xorlw	128
  7345  221D  0020               	movlb	0	; select bank0
  7346  221E  00BA               	movwf	??_utoa
  7347  221F  3080               	movlw	128
  7348  2220  023A               	subwf	??_utoa,w
  7349  2221  1D03               	skipz
  7350  2222  2A26               	goto	u8655
  7351  2223  3001               	movlw	1
  7352  2224  0022               	movlb	2	; select bank2
  7353  2225  0267               	subwf	_prec^(0+256),w
  7354  2226                     u8655:	
  7355  2226  1803               	skipnc
  7356  2227  2A2E               	goto	l6652
  7357  2228  3001               	movlw	1
  7358  2229  0020               	movlb	0	; select bank0
  7359  222A  00BB               	movwf	utoa@p
  7360  222B  3000               	movlw	0
  7361  222C  00BC               	movwf	utoa@p+1
  7362  222D  2A36               	goto	l723
  7363  222E                     l6652:	
  7364  222E  0022               	movlb	2	; select bank2
  7365  222F  0868               	movf	(_prec+1)^(0+256),w
  7366  2230  0020               	movlb	0	; select bank0
  7367  2231  00BC               	movwf	utoa@p+1
  7368  2232  0022               	movlb	2	; select bank2
  7369  2233  0867               	movf	_prec^(0+256),w
  7370  2234  0020               	movlb	0	; select bank0
  7371  2235  00BB               	movwf	utoa@p
  7372  2236                     l723:	
  7373                           
  7374                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  7375  2236  0022               	movlb	2	; select bank2
  7376  2237  0866               	movf	(_width+1)^(0+256),w
  7377  2238  0020               	movlb	0	; select bank0
  7378  2239  00BE               	movwf	utoa@w+1
  7379  223A  0022               	movlb	2	; select bank2
  7380  223B  0865               	movf	_width^(0+256),w
  7381  223C  0020               	movlb	0	; select bank0
  7382  223D  00BD               	movwf	utoa@w
  7383                           
  7384                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  7385  223E  0832               	movf	utoa@d,w
  7386  223F  00BF               	movwf	utoa@n
  7387  2240  0833               	movf	utoa@d+1,w
  7388  2241  00C0               	movwf	utoa@n+1
  7389  2242  0834               	movf	utoa@d+2,w
  7390  2243  00C1               	movwf	utoa@n+2
  7391  2244  0835               	movf	utoa@d+3,w
  7392  2245  00C2               	movwf	utoa@n+3
  7393  2246  0836               	movf	utoa@d+4,w
  7394  2247  00C3               	movwf	utoa@n+4
  7395  2248  0837               	movf	utoa@d+5,w
  7396  2249  00C4               	movwf	utoa@n+5
  7397  224A  0838               	movf	utoa@d+6,w
  7398  224B  00C5               	movwf	utoa@n+6
  7399  224C  0839               	movf	utoa@d+7,w
  7400  224D  00C6               	movwf	utoa@n+7
  7401                           
  7402                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  7403  224E  301F               	movlw	31
  7404  224F  00C7               	movwf	utoa@i
  7405  2250  3000               	movlw	0
  7406  2251  00C8               	movwf	utoa@i+1
  7407                           
  7408                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  7409  2252  0024               	movlb	4	; select bank4
  7410  2253  01BF               	clrf	(_dbuf^(0+512)+31)
  7411                           
  7412                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7413  2254  2ADA               	goto	l6668
  7414  2255                     l6670:	
  7415  2255  083F               	movf	utoa@n,w
  7416  2256  0440               	iorwf	utoa@n+1,w
  7417  2257  0441               	iorwf	utoa@n+2,w
  7418  2258  0442               	iorwf	utoa@n+3,w
  7419  2259  0443               	iorwf	utoa@n+4,w
  7420  225A  0444               	iorwf	utoa@n+5,w
  7421  225B  0445               	iorwf	utoa@n+6,w
  7422  225C  0446               	iorwf	utoa@n+7,w
  7423  225D  1D03               	skipz
  7424  225E  2A79               	goto	l6658
  7425  225F  083C               	movf	utoa@p+1,w
  7426  2260  3A80               	xorlw	128
  7427  2261  00BA               	movwf	??_utoa
  7428  2262  3080               	movlw	128
  7429  2263  023A               	subwf	??_utoa,w
  7430  2264  1D03               	skipz
  7431  2265  2A68               	goto	u8685
  7432  2266  3001               	movlw	1
  7433  2267  023B               	subwf	utoa@p,w
  7434  2268                     u8685:	
  7435  2268  1803               	skipnc
  7436  2269  2A79               	goto	l6658
  7437  226A  0020               	movlb	0	; select bank0
  7438  226B  083E               	movf	utoa@w+1,w
  7439  226C  3A80               	xorlw	128
  7440  226D  00BA               	movwf	??_utoa
  7441  226E  3080               	movlw	128
  7442  226F  023A               	subwf	??_utoa,w
  7443  2270  1D03               	skipz
  7444  2271  2A74               	goto	u8695
  7445  2272  3001               	movlw	1
  7446  2273  023D               	subwf	utoa@w,w
  7447  2274                     u8695:	
  7448  2274  1C03               	skipc
  7449  2275  2ADF               	goto	l6678
  7450  2276  0022               	movlb	2	; select bank2
  7451  2277  1CE9               	btfss	_flags^(0+256),1
  7452  2278  2ADF               	goto	l6678
  7453  2279                     l6658:	
  7454                           
  7455                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  7456  2279  30FF               	movlw	255
  7457  227A  0020               	movlb	0	; select bank0
  7458  227B  07C7               	addwf	utoa@i,f
  7459  227C  30FF               	movlw	255
  7460  227D  3DC8               	addwfc	utoa@i+1,f
  7461                           
  7462                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  7463  227E  300A               	movlw	10
  7464  227F  00A0               	movwf	___lomod@divisor
  7465  2280  01A1               	clrf	___lomod@divisor+1
  7466  2281  01A2               	clrf	___lomod@divisor+2
  7467  2282  01A3               	clrf	___lomod@divisor+3
  7468  2283  01A4               	clrf	___lomod@divisor+4
  7469  2284  01A5               	clrf	___lomod@divisor+5
  7470  2285  01A6               	clrf	___lomod@divisor+6
  7471  2286  01A7               	clrf	___lomod@divisor+7
  7472  2287  083F               	movf	utoa@n,w
  7473  2288  00A8               	movwf	___lomod@dividend
  7474  2289  0840               	movf	utoa@n+1,w
  7475  228A  00A9               	movwf	___lomod@dividend+1
  7476  228B  0841               	movf	utoa@n+2,w
  7477  228C  00AA               	movwf	___lomod@dividend+2
  7478  228D  0842               	movf	utoa@n+3,w
  7479  228E  00AB               	movwf	___lomod@dividend+3
  7480  228F  0843               	movf	utoa@n+4,w
  7481  2290  00AC               	movwf	___lomod@dividend+4
  7482  2291  0844               	movf	utoa@n+5,w
  7483  2292  00AD               	movwf	___lomod@dividend+5
  7484  2293  0845               	movf	utoa@n+6,w
  7485  2294  00AE               	movwf	___lomod@dividend+6
  7486  2295  0846               	movf	utoa@n+7,w
  7487  2296  00AF               	movwf	___lomod@dividend+7
  7488  2297  31A8  20FB  31A2   	fcall	___lomod
  7489  229A  0020               	movlb	0	; select bank0
  7490  229B  0820               	movf	?___lomod,w
  7491  229C  3E30               	addlw	48
  7492  229D  00BA               	movwf	??_utoa
  7493  229E  0847               	movf	utoa@i,w
  7494  229F  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7495  22A0  0086               	movwf	6
  7496  22A1  3002               	movlw	2	; select bank4/5
  7497  22A2  0087               	movwf	7
  7498  22A3  083A               	movf	??_utoa,w
  7499  22A4  0081               	movwf	1
  7500                           
  7501                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  7502  22A5  30FF               	movlw	255
  7503  22A6  07BB               	addwf	utoa@p,f
  7504  22A7  30FF               	movlw	255
  7505  22A8  3DBC               	addwfc	utoa@p+1,f
  7506                           
  7507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  7508  22A9  30FF               	movlw	255
  7509  22AA  07BD               	addwf	utoa@w,f
  7510  22AB  30FF               	movlw	255
  7511  22AC  3DBE               	addwfc	utoa@w+1,f
  7512                           
  7513                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  7514  22AD  300A               	movlw	10
  7515  22AE  00A0               	movwf	___lodiv@divisor
  7516  22AF  01A1               	clrf	___lodiv@divisor+1
  7517  22B0  01A2               	clrf	___lodiv@divisor+2
  7518  22B1  01A3               	clrf	___lodiv@divisor+3
  7519  22B2  01A4               	clrf	___lodiv@divisor+4
  7520  22B3  01A5               	clrf	___lodiv@divisor+5
  7521  22B4  01A6               	clrf	___lodiv@divisor+6
  7522  22B5  01A7               	clrf	___lodiv@divisor+7
  7523  22B6  083F               	movf	utoa@n,w
  7524  22B7  00A8               	movwf	___lodiv@dividend
  7525  22B8  0840               	movf	utoa@n+1,w
  7526  22B9  00A9               	movwf	___lodiv@dividend+1
  7527  22BA  0841               	movf	utoa@n+2,w
  7528  22BB  00AA               	movwf	___lodiv@dividend+2
  7529  22BC  0842               	movf	utoa@n+3,w
  7530  22BD  00AB               	movwf	___lodiv@dividend+3
  7531  22BE  0843               	movf	utoa@n+4,w
  7532  22BF  00AC               	movwf	___lodiv@dividend+4
  7533  22C0  0844               	movf	utoa@n+5,w
  7534  22C1  00AD               	movwf	___lodiv@dividend+5
  7535  22C2  0845               	movf	utoa@n+6,w
  7536  22C3  00AE               	movwf	___lodiv@dividend+6
  7537  22C4  0846               	movf	utoa@n+7,w
  7538  22C5  00AF               	movwf	___lodiv@dividend+7
  7539  22C6  31AA  2258  31A2   	fcall	___lodiv
  7540  22C9  0020               	movlb	0	; select bank0
  7541  22CA  0820               	movf	?___lodiv,w
  7542  22CB  00BF               	movwf	utoa@n
  7543  22CC  0821               	movf	?___lodiv+1,w
  7544  22CD  00C0               	movwf	utoa@n+1
  7545  22CE  0822               	movf	?___lodiv+2,w
  7546  22CF  00C1               	movwf	utoa@n+2
  7547  22D0  0823               	movf	?___lodiv+3,w
  7548  22D1  00C2               	movwf	utoa@n+3
  7549  22D2  0824               	movf	?___lodiv+4,w
  7550  22D3  00C3               	movwf	utoa@n+4
  7551  22D4  0825               	movf	?___lodiv+5,w
  7552  22D5  00C4               	movwf	utoa@n+5
  7553  22D6  0826               	movf	?___lodiv+6,w
  7554  22D7  00C5               	movwf	utoa@n+6
  7555  22D8  0827               	movf	?___lodiv+7,w
  7556  22D9  00C6               	movwf	utoa@n+7
  7557  22DA                     l6668:	
  7558                           
  7559                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7560  22DA  0020               	movlb	0	; select bank0
  7561  22DB  0847               	movf	utoa@i,w
  7562  22DC  0448               	iorwf	utoa@i+1,w
  7563  22DD  1D03               	btfss	3,2
  7564  22DE  2A55               	goto	l6670
  7565  22DF                     l6678:	
  7566                           
  7567                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  7568  22DF  0020               	movlb	0	; select bank0
  7569  22E0  0831               	movf	utoa@fp+1,w
  7570  22E1  00A7               	movwf	pad@fp+1
  7571  22E2  0830               	movf	utoa@fp,w
  7572  22E3  00A6               	movwf	pad@fp
  7573  22E4  0847               	movf	utoa@i,w
  7574  22E5  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7575  22E6  00BA               	movwf	??_utoa
  7576  22E7  083A               	movf	??_utoa,w
  7577  22E8  00A8               	movwf	pad@buf
  7578  22E9  083E               	movf	utoa@w+1,w
  7579  22EA  00AA               	movwf	pad@p+1
  7580  22EB  083D               	movf	utoa@w,w
  7581  22EC  00A9               	movwf	pad@p
  7582  22ED  31B7  275D         	fcall	_pad
  7583  22EF  0020               	movlb	0	; select bank0
  7584  22F0  0827               	movf	?_pad+1,w
  7585  22F1  00B1               	movwf	?_utoa+1
  7586  22F2  0826               	movf	?_pad,w
  7587  22F3  00B0               	movwf	?_utoa
  7588  22F4  0008               	return
  7589  22F5                     __end_of_utoa:	
  7590                           
  7591                           	psect	text14
  7592  28FB                     __ptext14:	
  7593 ;; *************** function ___lomod *****************
  7594 ;; Defined at:
  7595 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  7596 ;; Parameters:    Size  Location     Type
  7597 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7598 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7599 ;; Auto vars:     Size  Location     Type
  7600 ;;  counter         1    2[COMMON] unsigned char 
  7601 ;; Return value:  Size  Location     Type
  7602 ;;                  8    0[BANK0 ] unsigned long long 
  7603 ;; Registers used:
  7604 ;;		wreg, status,2, status,0
  7605 ;; Tracked objects:
  7606 ;;		On entry : 0/0
  7607 ;;		On exit  : 0/0
  7608 ;;		Unchanged: 0/0
  7609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7610 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7611 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7612 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7613 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7614 ;;Total ram usage:       18 bytes
  7615 ;; Hardware stack levels used:    1
  7616 ;; Hardware stack levels required when called:    1
  7617 ;; This function calls:
  7618 ;;		Nothing
  7619 ;; This function is called by:
  7620 ;;		_utoa
  7621 ;; This function uses a non-reentrant model
  7622 ;;
  7623                           
  7624                           
  7625                           ;psect for function ___lomod
  7626  28FB                     ___lomod:	
  7627                           
  7628                           ;incstack = 0
  7629                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  7630  28FB  0020               	movlb	0	; select bank0
  7631  28FC  0820               	movf	___lomod@divisor,w
  7632  28FD  0421               	iorwf	___lomod@divisor+1,w
  7633  28FE  0422               	iorwf	___lomod@divisor+2,w
  7634  28FF  0423               	iorwf	___lomod@divisor+3,w
  7635  2900  0424               	iorwf	___lomod@divisor+4,w
  7636  2901  0425               	iorwf	___lomod@divisor+5,w
  7637  2902  0426               	iorwf	___lomod@divisor+6,w
  7638  2903  0427               	iorwf	___lomod@divisor+7,w
  7639  2904  1903               	skipnz
  7640  2905  2953               	goto	l1090
  7641  2906  01F2               	clrf	___lomod@counter
  7642  2907  0AF2               	incf	___lomod@counter,f
  7643  2908                     l6460:	
  7644  2908  1BA7               	btfsc	___lomod@divisor+7,7
  7645  2909  2917               	goto	l6462
  7646  290A  35A0               	lslf	___lomod@divisor,f
  7647  290B  0DA1               	rlf	___lomod@divisor+1,f
  7648  290C  0DA2               	rlf	___lomod@divisor+2,f
  7649  290D  0DA3               	rlf	___lomod@divisor+3,f
  7650  290E  0DA4               	rlf	___lomod@divisor+4,f
  7651  290F  0DA5               	rlf	___lomod@divisor+5,f
  7652  2910  0DA6               	rlf	___lomod@divisor+6,f
  7653  2911  0DA7               	rlf	___lomod@divisor+7,f
  7654  2912  3001               	movlw	1
  7655  2913  00F1               	movwf	??___lomod
  7656  2914  0871               	movf	??___lomod,w
  7657  2915  07F2               	addwf	___lomod@counter,f
  7658  2916  2908               	goto	l6460
  7659  2917                     l6462:	
  7660  2917  0827               	movf	___lomod@divisor+7,w
  7661  2918  022F               	subwf	___lomod@dividend+7,w
  7662  2919  1D03               	skipz
  7663  291A  2935               	goto	u8245
  7664  291B  0826               	movf	___lomod@divisor+6,w
  7665  291C  022E               	subwf	___lomod@dividend+6,w
  7666  291D  1D03               	skipz
  7667  291E  2935               	goto	u8245
  7668  291F  0825               	movf	___lomod@divisor+5,w
  7669  2920  022D               	subwf	___lomod@dividend+5,w
  7670  2921  1D03               	skipz
  7671  2922  2935               	goto	u8245
  7672  2923  0824               	movf	___lomod@divisor+4,w
  7673  2924  022C               	subwf	___lomod@dividend+4,w
  7674  2925  1D03               	skipz
  7675  2926  2935               	goto	u8245
  7676  2927  0823               	movf	___lomod@divisor+3,w
  7677  2928  022B               	subwf	___lomod@dividend+3,w
  7678  2929  1D03               	skipz
  7679  292A  2935               	goto	u8245
  7680  292B  0822               	movf	___lomod@divisor+2,w
  7681  292C  022A               	subwf	___lomod@dividend+2,w
  7682  292D  1D03               	skipz
  7683  292E  2935               	goto	u8245
  7684  292F  0821               	movf	___lomod@divisor+1,w
  7685  2930  0229               	subwf	___lomod@dividend+1,w
  7686  2931  1D03               	skipz
  7687  2932  2935               	goto	u8245
  7688  2933  0820               	movf	___lomod@divisor,w
  7689  2934  0228               	subwf	___lomod@dividend,w
  7690  2935                     u8245:	
  7691  2935  1C03               	skipc
  7692  2936  2947               	goto	l6466
  7693  2937  0820               	movf	___lomod@divisor,w
  7694  2938  02A8               	subwf	___lomod@dividend,f
  7695  2939  0821               	movf	___lomod@divisor+1,w
  7696  293A  3BA9               	subwfb	___lomod@dividend+1,f
  7697  293B  0822               	movf	___lomod@divisor+2,w
  7698  293C  3BAA               	subwfb	___lomod@dividend+2,f
  7699  293D  0823               	movf	___lomod@divisor+3,w
  7700  293E  3BAB               	subwfb	___lomod@dividend+3,f
  7701  293F  0824               	movf	___lomod@divisor+4,w
  7702  2940  3BAC               	subwfb	___lomod@dividend+4,f
  7703  2941  0825               	movf	___lomod@divisor+5,w
  7704  2942  3BAD               	subwfb	___lomod@dividend+5,f
  7705  2943  0826               	movf	___lomod@divisor+6,w
  7706  2944  3BAE               	subwfb	___lomod@dividend+6,f
  7707  2945  0827               	movf	___lomod@divisor+7,w
  7708  2946  3BAF               	subwfb	___lomod@dividend+7,f
  7709  2947                     l6466:	
  7710  2947  36A7               	lsrf	___lomod@divisor+7,f
  7711  2948  0CA6               	rrf	___lomod@divisor+6,f
  7712  2949  0CA5               	rrf	___lomod@divisor+5,f
  7713  294A  0CA4               	rrf	___lomod@divisor+4,f
  7714  294B  0CA3               	rrf	___lomod@divisor+3,f
  7715  294C  0CA2               	rrf	___lomod@divisor+2,f
  7716  294D  0CA1               	rrf	___lomod@divisor+1,f
  7717  294E  0CA0               	rrf	___lomod@divisor,f
  7718  294F  3001               	movlw	1
  7719  2950  02F2               	subwf	___lomod@counter,f
  7720  2951  1D03               	btfss	3,2
  7721  2952  2917               	goto	l6462
  7722  2953                     l1090:	
  7723  2953  0828               	movf	___lomod@dividend,w
  7724  2954  00A0               	movwf	?___lomod
  7725  2955  0829               	movf	___lomod@dividend+1,w
  7726  2956  00A1               	movwf	?___lomod+1
  7727  2957  082A               	movf	___lomod@dividend+2,w
  7728  2958  00A2               	movwf	?___lomod+2
  7729  2959  082B               	movf	___lomod@dividend+3,w
  7730  295A  00A3               	movwf	?___lomod+3
  7731  295B  082C               	movf	___lomod@dividend+4,w
  7732  295C  00A4               	movwf	?___lomod+4
  7733  295D  082D               	movf	___lomod@dividend+5,w
  7734  295E  00A5               	movwf	?___lomod+5
  7735  295F  082E               	movf	___lomod@dividend+6,w
  7736  2960  00A6               	movwf	?___lomod+6
  7737  2961  082F               	movf	___lomod@dividend+7,w
  7738  2962  00A7               	movwf	?___lomod+7
  7739  2963  0008               	return
  7740  2964                     __end_of___lomod:	
  7741                           
  7742                           	psect	text15
  7743  2A58                     __ptext15:	
  7744 ;; *************** function ___lodiv *****************
  7745 ;; Defined at:
  7746 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  7747 ;; Parameters:    Size  Location     Type
  7748 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7749 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7750 ;; Auto vars:     Size  Location     Type
  7751 ;;  quotient        8    2[COMMON] unsigned long long 
  7752 ;;  counter         1   10[COMMON] unsigned char 
  7753 ;; Return value:  Size  Location     Type
  7754 ;;                  8    0[BANK0 ] unsigned long long 
  7755 ;; Registers used:
  7756 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7757 ;; Tracked objects:
  7758 ;;		On entry : 0/0
  7759 ;;		On exit  : 0/0
  7760 ;;		Unchanged: 0/0
  7761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7762 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7763 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7764 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7765 ;;      Totals:        10      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7766 ;;Total ram usage:       26 bytes
  7767 ;; Hardware stack levels used:    1
  7768 ;; Hardware stack levels required when called:    1
  7769 ;; This function calls:
  7770 ;;		Nothing
  7771 ;; This function is called by:
  7772 ;;		_utoa
  7773 ;; This function uses a non-reentrant model
  7774 ;;
  7775                           
  7776                           
  7777                           ;psect for function ___lodiv
  7778  2A58                     ___lodiv:	
  7779                           
  7780                           ;incstack = 0
  7781                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  7782  2A58  3072               	movlw	low ___lodiv@quotient
  7783  2A59  0086               	movwf	6
  7784  2A5A  3000               	movlw	high ___lodiv@quotient
  7785  2A5B  0087               	movwf	7
  7786  2A5C  3008               	movlw	8
  7787  2A5D  00F1               	movwf	??___lodiv
  7788  2A5E  3000               	movlw	0
  7789  2A5F                     u8170:	
  7790  2A5F  001E               	movwi fsr1++
  7791  2A60  0BF1               	decfsz	??___lodiv,f
  7792  2A61  2A5F               	goto	u8170
  7793  2A62  0020               	movlb	0	; select bank0
  7794  2A63  0820               	movf	___lodiv@divisor,w
  7795  2A64  0421               	iorwf	___lodiv@divisor+1,w
  7796  2A65  0422               	iorwf	___lodiv@divisor+2,w
  7797  2A66  0423               	iorwf	___lodiv@divisor+3,w
  7798  2A67  0424               	iorwf	___lodiv@divisor+4,w
  7799  2A68  0425               	iorwf	___lodiv@divisor+5,w
  7800  2A69  0426               	iorwf	___lodiv@divisor+6,w
  7801  2A6A  0427               	iorwf	___lodiv@divisor+7,w
  7802  2A6B  1903               	skipnz
  7803  2A6C  2AC3               	goto	l1080
  7804  2A6D  01FA               	clrf	___lodiv@counter
  7805  2A6E  0AFA               	incf	___lodiv@counter,f
  7806  2A6F                     l6440:	
  7807  2A6F  1BA7               	btfsc	___lodiv@divisor+7,7
  7808  2A70  2A7E               	goto	l6442
  7809  2A71  35A0               	lslf	___lodiv@divisor,f
  7810  2A72  0DA1               	rlf	___lodiv@divisor+1,f
  7811  2A73  0DA2               	rlf	___lodiv@divisor+2,f
  7812  2A74  0DA3               	rlf	___lodiv@divisor+3,f
  7813  2A75  0DA4               	rlf	___lodiv@divisor+4,f
  7814  2A76  0DA5               	rlf	___lodiv@divisor+5,f
  7815  2A77  0DA6               	rlf	___lodiv@divisor+6,f
  7816  2A78  0DA7               	rlf	___lodiv@divisor+7,f
  7817  2A79  3001               	movlw	1
  7818  2A7A  00F1               	movwf	??___lodiv
  7819  2A7B  0871               	movf	??___lodiv,w
  7820  2A7C  07FA               	addwf	___lodiv@counter,f
  7821  2A7D  2A6F               	goto	l6440
  7822  2A7E                     l6442:	
  7823  2A7E  35F2               	lslf	___lodiv@quotient,f
  7824  2A7F  0DF3               	rlf	___lodiv@quotient+1,f
  7825  2A80  0DF4               	rlf	___lodiv@quotient+2,f
  7826  2A81  0DF5               	rlf	___lodiv@quotient+3,f
  7827  2A82  0DF6               	rlf	___lodiv@quotient+4,f
  7828  2A83  0DF7               	rlf	___lodiv@quotient+5,f
  7829  2A84  0DF8               	rlf	___lodiv@quotient+6,f
  7830  2A85  0DF9               	rlf	___lodiv@quotient+7,f
  7831  2A86  0827               	movf	___lodiv@divisor+7,w
  7832  2A87  022F               	subwf	___lodiv@dividend+7,w
  7833  2A88  1D03               	skipz
  7834  2A89  2AA4               	goto	u8205
  7835  2A8A  0826               	movf	___lodiv@divisor+6,w
  7836  2A8B  022E               	subwf	___lodiv@dividend+6,w
  7837  2A8C  1D03               	skipz
  7838  2A8D  2AA4               	goto	u8205
  7839  2A8E  0825               	movf	___lodiv@divisor+5,w
  7840  2A8F  022D               	subwf	___lodiv@dividend+5,w
  7841  2A90  1D03               	skipz
  7842  2A91  2AA4               	goto	u8205
  7843  2A92  0824               	movf	___lodiv@divisor+4,w
  7844  2A93  022C               	subwf	___lodiv@dividend+4,w
  7845  2A94  1D03               	skipz
  7846  2A95  2AA4               	goto	u8205
  7847  2A96  0823               	movf	___lodiv@divisor+3,w
  7848  2A97  022B               	subwf	___lodiv@dividend+3,w
  7849  2A98  1D03               	skipz
  7850  2A99  2AA4               	goto	u8205
  7851  2A9A  0822               	movf	___lodiv@divisor+2,w
  7852  2A9B  022A               	subwf	___lodiv@dividend+2,w
  7853  2A9C  1D03               	skipz
  7854  2A9D  2AA4               	goto	u8205
  7855  2A9E  0821               	movf	___lodiv@divisor+1,w
  7856  2A9F  0229               	subwf	___lodiv@dividend+1,w
  7857  2AA0  1D03               	skipz
  7858  2AA1  2AA4               	goto	u8205
  7859  2AA2  0820               	movf	___lodiv@divisor,w
  7860  2AA3  0228               	subwf	___lodiv@dividend,w
  7861  2AA4                     u8205:	
  7862  2AA4  1C03               	skipc
  7863  2AA5  2AB7               	goto	l6450
  7864  2AA6  0820               	movf	___lodiv@divisor,w
  7865  2AA7  02A8               	subwf	___lodiv@dividend,f
  7866  2AA8  0821               	movf	___lodiv@divisor+1,w
  7867  2AA9  3BA9               	subwfb	___lodiv@dividend+1,f
  7868  2AAA  0822               	movf	___lodiv@divisor+2,w
  7869  2AAB  3BAA               	subwfb	___lodiv@dividend+2,f
  7870  2AAC  0823               	movf	___lodiv@divisor+3,w
  7871  2AAD  3BAB               	subwfb	___lodiv@dividend+3,f
  7872  2AAE  0824               	movf	___lodiv@divisor+4,w
  7873  2AAF  3BAC               	subwfb	___lodiv@dividend+4,f
  7874  2AB0  0825               	movf	___lodiv@divisor+5,w
  7875  2AB1  3BAD               	subwfb	___lodiv@dividend+5,f
  7876  2AB2  0826               	movf	___lodiv@divisor+6,w
  7877  2AB3  3BAE               	subwfb	___lodiv@dividend+6,f
  7878  2AB4  0827               	movf	___lodiv@divisor+7,w
  7879  2AB5  3BAF               	subwfb	___lodiv@dividend+7,f
  7880  2AB6  1472               	bsf	___lodiv@quotient,0
  7881  2AB7                     l6450:	
  7882  2AB7  36A7               	lsrf	___lodiv@divisor+7,f
  7883  2AB8  0CA6               	rrf	___lodiv@divisor+6,f
  7884  2AB9  0CA5               	rrf	___lodiv@divisor+5,f
  7885  2ABA  0CA4               	rrf	___lodiv@divisor+4,f
  7886  2ABB  0CA3               	rrf	___lodiv@divisor+3,f
  7887  2ABC  0CA2               	rrf	___lodiv@divisor+2,f
  7888  2ABD  0CA1               	rrf	___lodiv@divisor+1,f
  7889  2ABE  0CA0               	rrf	___lodiv@divisor,f
  7890  2ABF  3001               	movlw	1
  7891  2AC0  02FA               	subwf	___lodiv@counter,f
  7892  2AC1  1D03               	btfss	3,2
  7893  2AC2  2A7E               	goto	l6442
  7894  2AC3                     l1080:	
  7895  2AC3  0872               	movf	___lodiv@quotient,w
  7896  2AC4  00A0               	movwf	?___lodiv
  7897  2AC5  0873               	movf	___lodiv@quotient+1,w
  7898  2AC6  00A1               	movwf	?___lodiv+1
  7899  2AC7  0874               	movf	___lodiv@quotient+2,w
  7900  2AC8  00A2               	movwf	?___lodiv+2
  7901  2AC9  0875               	movf	___lodiv@quotient+3,w
  7902  2ACA  00A3               	movwf	?___lodiv+3
  7903  2ACB  0876               	movf	___lodiv@quotient+4,w
  7904  2ACC  00A4               	movwf	?___lodiv+4
  7905  2ACD  0877               	movf	___lodiv@quotient+5,w
  7906  2ACE  00A5               	movwf	?___lodiv+5
  7907  2ACF  0878               	movf	___lodiv@quotient+6,w
  7908  2AD0  00A6               	movwf	?___lodiv+6
  7909  2AD1  0879               	movf	___lodiv@quotient+7,w
  7910  2AD2  00A7               	movwf	?___lodiv+7
  7911  2AD3  0008               	return
  7912  2AD4                     __end_of___lodiv:	
  7913                           
  7914                           	psect	text16
  7915  37AE                     __ptext16:	
  7916 ;; *************** function _strncmp *****************
  7917 ;; Defined at:
  7918 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  7919 ;; Parameters:    Size  Location     Type
  7920 ;;  _l              2    1[COMMON] PTR const unsigned char 
  7921 ;;		 -> STR_22(18), STR_21(18), STR_20(19), STR_19(20), 
  7922 ;;		 -> STR_18(20), STR_17(21), STR_16(21), STR_15(21), 
  7923 ;;		 -> STR_14(22), STR_13(22), STR_12(21), STR_11(21), 
  7924 ;;		 -> STR_8(15), STR_7(15), STR_6(21), STR_5(21), 
  7925 ;;		 -> STR_4(21), STR_3(22), STR_2(71), STR_1(40), 
  7926 ;;  _r              2    3[COMMON] PTR const unsigned char 
  7927 ;;		 -> STR_120(3), STR_116(3), STR_111(3), STR_107(3), 
  7928 ;;		 -> STR_102(4), STR_98(4), STR_93(3), STR_88(3), 
  7929 ;;		 -> STR_83(4), STR_78(3), STR_73(3), STR_68(4), 
  7930 ;;		 -> STR_63(3), STR_58(3), STR_53(4), STR_48(3), 
  7931 ;;		 -> STR_44(3), STR_39(3), STR_35(3), STR_30(4), 
  7932 ;;		 -> STR_26(4), 
  7933 ;;  n               2    5[COMMON] unsigned int 
  7934 ;; Auto vars:     Size  Location     Type
  7935 ;;  r               2   10[COMMON] PTR const unsigned char 
  7936 ;;		 -> STR_120(3), STR_116(3), STR_111(3), STR_107(3), 
  7937 ;;		 -> STR_102(4), STR_98(4), STR_93(3), STR_88(3), 
  7938 ;;		 -> STR_83(4), STR_78(3), STR_73(3), STR_68(4), 
  7939 ;;		 -> STR_63(3), STR_58(3), STR_53(4), STR_48(3), 
  7940 ;;		 -> STR_44(3), STR_39(3), STR_35(3), STR_30(4), 
  7941 ;;		 -> STR_26(4), 
  7942 ;;  l               2    8[COMMON] PTR const unsigned char 
  7943 ;;		 -> STR_22(18), STR_21(18), STR_20(19), STR_19(20), 
  7944 ;;		 -> STR_18(20), STR_17(21), STR_16(21), STR_15(21), 
  7945 ;;		 -> STR_14(22), STR_13(22), STR_12(21), STR_11(21), 
  7946 ;;		 -> STR_8(15), STR_7(15), STR_6(21), STR_5(21), 
  7947 ;;		 -> STR_4(21), STR_3(22), STR_2(71), STR_1(40), 
  7948 ;; Return value:  Size  Location     Type
  7949 ;;                  2    1[COMMON] int 
  7950 ;; Registers used:
  7951 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7952 ;; Tracked objects:
  7953 ;;		On entry : 0/0
  7954 ;;		On exit  : 0/0
  7955 ;;		Unchanged: 0/0
  7956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7957 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7958 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7959 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7960 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7961 ;;Total ram usage:       11 bytes
  7962 ;; Hardware stack levels used:    1
  7963 ;; Hardware stack levels required when called:    1
  7964 ;; This function calls:
  7965 ;;		Nothing
  7966 ;; This function is called by:
  7967 ;;		_vfpfcnvrt
  7968 ;; This function uses a non-reentrant model
  7969 ;;
  7970                           
  7971                           
  7972                           ;psect for function _strncmp
  7973  37AE                     _strncmp:	
  7974                           
  7975                           ;incstack = 0
  7976                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  7977  37AE  0872               	movf	strncmp@_l+1,w
  7978  37AF  00F9               	movwf	strncmp@l+1
  7979  37B0  0871               	movf	strncmp@_l,w
  7980  37B1  00F8               	movwf	strncmp@l
  7981  37B2  0874               	movf	strncmp@_r+1,w
  7982  37B3  00FB               	movwf	strncmp@r+1
  7983  37B4  0873               	movf	strncmp@_r,w
  7984  37B5  00FA               	movwf	strncmp@r
  7985  37B6  3001               	movlw	1
  7986  37B7  02F5               	subwf	strncmp@n,f
  7987  37B8  3000               	movlw	0
  7988  37B9  3BF6               	subwfb	strncmp@n+1,f
  7989  37BA  0A75               	incf	strncmp@n,w
  7990  37BB  1D03               	skipz
  7991  37BC  2FE8               	goto	l6802
  7992  37BD  0A76               	incf	strncmp@n+1,w
  7993  37BE  1D03               	btfss	3,2
  7994  37BF  2FE8               	goto	l6802
  7995  37C0  01F1               	clrf	?_strncmp
  7996  37C1  01F2               	clrf	?_strncmp+1
  7997  37C2  0008               	return
  7998  37C3                     l6804:	
  7999  37C3  087A               	movf	strncmp@r,w
  8000  37C4  0084               	movwf	4
  8001  37C5  087B               	movf	strncmp@r+1,w
  8002  37C6  0085               	movwf	5
  8003  37C7  0012               	moviw fsr0++
  8004  37C8  1903               	btfsc	3,2
  8005  37C9  2FEF               	goto	l6810
  8006  37CA  0875               	movf	strncmp@n,w
  8007  37CB  0476               	iorwf	strncmp@n+1,w
  8008  37CC  1903               	btfsc	3,2
  8009  37CD  2FEF               	goto	l6810
  8010  37CE  087A               	movf	strncmp@r,w
  8011  37CF  0084               	movwf	4
  8012  37D0  087B               	movf	strncmp@r+1,w
  8013  37D1  0085               	movwf	5
  8014  37D2  0800               	movf	0,w	;code access
  8015  37D3  00F7               	movwf	??_strncmp
  8016  37D4  0878               	movf	strncmp@l,w
  8017  37D5  0084               	movwf	4
  8018  37D6  0879               	movf	strncmp@l+1,w
  8019  37D7  0085               	movwf	5
  8020  37D8  0800               	movf	0,w	;code access
  8021  37D9  0677               	xorwf	??_strncmp,w
  8022  37DA  1D03               	btfss	3,2
  8023  37DB  2FEF               	goto	l6810
  8024  37DC  3001               	movlw	1
  8025  37DD  07F8               	addwf	strncmp@l,f
  8026  37DE  3000               	movlw	0
  8027  37DF  3DF9               	addwfc	strncmp@l+1,f
  8028  37E0  3001               	movlw	1
  8029  37E1  07FA               	addwf	strncmp@r,f
  8030  37E2  3000               	movlw	0
  8031  37E3  3DFB               	addwfc	strncmp@r+1,f
  8032  37E4  3001               	movlw	1
  8033  37E5  02F5               	subwf	strncmp@n,f
  8034  37E6  3000               	movlw	0
  8035  37E7  3BF6               	subwfb	strncmp@n+1,f
  8036  37E8                     l6802:	
  8037  37E8  0878               	movf	strncmp@l,w
  8038  37E9  0084               	movwf	4
  8039  37EA  0879               	movf	strncmp@l+1,w
  8040  37EB  0085               	movwf	5
  8041  37EC  0012               	moviw fsr0++
  8042  37ED  1D03               	btfss	3,2
  8043  37EE  2FC3               	goto	l6804
  8044  37EF                     l6810:	
  8045  37EF  0878               	movf	strncmp@l,w
  8046  37F0  0084               	movwf	4
  8047  37F1  0879               	movf	strncmp@l+1,w
  8048  37F2  0085               	movwf	5
  8049  37F3  0800               	movf	0,w	;code access
  8050  37F4  00F7               	movwf	??_strncmp
  8051  37F5  087A               	movf	strncmp@r,w
  8052  37F6  0084               	movwf	4
  8053  37F7  087B               	movf	strncmp@r+1,w
  8054  37F8  0085               	movwf	5
  8055  37F9  0800               	movf	0,w	;code access
  8056  37FA  0277               	subwf	??_strncmp,w
  8057  37FB  00F1               	movwf	?_strncmp
  8058  37FC  01F2               	clrf	?_strncmp+1
  8059  37FD  1C03               	skipc
  8060  37FE  03F2               	decf	?_strncmp+1,f
  8061  37FF  0008               	return
  8062  3800                     __end_of_strncmp:	
  8063                           
  8064                           	psect	text17
  8065  1809                     __ptext17:	
  8066 ;; *************** function _stoa *****************
  8067 ;; Defined at:
  8068 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8069 ;; Parameters:    Size  Location     Type
  8070 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  8071 ;;		 -> vsnprintf@f(6), 
  8072 ;;  s               2    2[BANK0 ] PTR unsigned char 
  8073 ;;		 -> ?_snprintf(2), sp__logf(4), adcGain(2), 
  8074 ;; Auto vars:     Size  Location     Type
  8075 ;;  nuls            7    4[BANK0 ] unsigned char [7]
  8076 ;;  l               2   19[BANK0 ] int 
  8077 ;;  p               2   17[BANK0 ] int 
  8078 ;;  cp              2   15[BANK0 ] PTR unsigned char 
  8079 ;;		 -> ?_snprintf(2), stoa@nuls(7), sp__logf(4), adcGain(2), 
  8080 ;;  w               2   13[BANK0 ] int 
  8081 ;;  i               2   11[BANK0 ] int 
  8082 ;; Return value:  Size  Location     Type
  8083 ;;                  2    0[BANK0 ] int 
  8084 ;; Registers used:
  8085 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8086 ;; Tracked objects:
  8087 ;;		On entry : 0/0
  8088 ;;		On exit  : 0/0
  8089 ;;		Unchanged: 0/0
  8090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8091 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8092 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8093 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8094 ;;      Totals:         2      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8095 ;;Total ram usage:       23 bytes
  8096 ;; Hardware stack levels used:    1
  8097 ;; Hardware stack levels required when called:    3
  8098 ;; This function calls:
  8099 ;;		_fputc
  8100 ;;		_strlen
  8101 ;; This function is called by:
  8102 ;;		_vfpfcnvrt
  8103 ;; This function uses a non-reentrant model
  8104 ;;
  8105                           
  8106                           
  8107                           ;psect for function _stoa
  8108  1809                     _stoa:	
  8109                           
  8110                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8111                           
  8112                           ;incstack = 0
  8113                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8114  1809  30DA               	movlw	low stoa@F1152
  8115  180A  0086               	movwf	6
  8116  180B  3001               	movlw	high stoa@F1152
  8117  180C  0087               	movwf	7
  8118  180D  3024               	movlw	low stoa@nuls
  8119  180E  0084               	movwf	4
  8120  180F  3000               	movlw	high stoa@nuls
  8121  1810  0085               	movwf	5
  8122  1811  3007               	movlw	7
  8123  1812  00FA               	movwf	??_stoa
  8124  1813                     u8550:	
  8125  1813  0016               	moviw fsr1++
  8126  1814  001A               	movwi fsr0++
  8127  1815  0BFA               	decfsz	??_stoa,f
  8128  1816  2813               	goto	u8550
  8129                           
  8130                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  8131  1817  0020               	movlb	0	; select bank0
  8132  1818  0823               	movf	stoa@s+1,w
  8133  1819  00B0               	movwf	stoa@cp+1
  8134  181A  0822               	movf	stoa@s,w
  8135  181B  00AF               	movwf	stoa@cp
  8136                           
  8137                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  8138  181C  082F               	movf	stoa@cp,w
  8139  181D  0430               	iorwf	stoa@cp+1,w
  8140  181E  1D03               	btfss	3,2
  8141  181F  2824               	goto	l6604
  8142                           
  8143                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  8144  1820  3024               	movlw	low stoa@nuls
  8145  1821  00AF               	movwf	stoa@cp
  8146  1822  3000               	movlw	high stoa@nuls
  8147  1823  00B0               	movwf	stoa@cp+1
  8148  1824                     l6604:	
  8149                           
  8150                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  8151  1824  0830               	movf	stoa@cp+1,w
  8152  1825  00F2               	movwf	strlen@s+1
  8153  1826  082F               	movf	stoa@cp,w
  8154  1827  00F1               	movwf	strlen@s
  8155  1828  31B4  2418  3198   	fcall	_strlen
  8156  182B  0872               	movf	?_strlen+1,w
  8157  182C  0020               	movlb	0	; select bank0
  8158  182D  00B4               	movwf	stoa@l+1
  8159  182E  0871               	movf	?_strlen,w
  8160  182F  00B3               	movwf	stoa@l
  8161                           
  8162                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  8163  1830  0022               	movlb	2	; select bank2
  8164  1831  0868               	movf	(_prec+1)^(0+256),w
  8165  1832  0020               	movlb	0	; select bank0
  8166  1833  00B2               	movwf	stoa@p+1
  8167  1834  0022               	movlb	2	; select bank2
  8168  1835  0867               	movf	_prec^(0+256),w
  8169  1836  0020               	movlb	0	; select bank0
  8170  1837  00B1               	movwf	stoa@p
  8171                           
  8172                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  8173  1838  1BB2               	btfsc	stoa@p+1,7
  8174  1839  284B               	goto	l702
  8175  183A  0832               	movf	stoa@p+1,w
  8176  183B  3A80               	xorlw	128
  8177  183C  00FA               	movwf	??_stoa
  8178  183D  0834               	movf	stoa@l+1,w
  8179  183E  3A80               	xorlw	128
  8180  183F  027A               	subwf	??_stoa,w
  8181  1840  1D03               	skipz
  8182  1841  2844               	goto	u8585
  8183  1842  0833               	movf	stoa@l,w
  8184  1843  0231               	subwf	stoa@p,w
  8185  1844                     u8585:	
  8186  1844  1803               	btfsc	3,0
  8187  1845  284B               	goto	l702
  8188  1846  0020               	movlb	0	; select bank0
  8189  1847  0832               	movf	stoa@p+1,w
  8190  1848  00B4               	movwf	stoa@l+1
  8191  1849  0831               	movf	stoa@p,w
  8192  184A  00B3               	movwf	stoa@l
  8193  184B                     l702:	
  8194                           
  8195                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  8196  184B  0020               	movlb	0	; select bank0
  8197  184C  0834               	movf	stoa@l+1,w
  8198  184D  00B2               	movwf	stoa@p+1
  8199  184E  0833               	movf	stoa@l,w
  8200  184F  00B1               	movwf	stoa@p
  8201                           
  8202                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  8203  1850  0022               	movlb	2	; select bank2
  8204  1851  0866               	movf	(_width+1)^(0+256),w
  8205  1852  0020               	movlb	0	; select bank0
  8206  1853  00AE               	movwf	stoa@w+1
  8207  1854  0022               	movlb	2	; select bank2
  8208  1855  0865               	movf	_width^(0+256),w
  8209  1856  0020               	movlb	0	; select bank0
  8210  1857  00AD               	movwf	stoa@w
  8211                           
  8212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  8213  1858  0022               	movlb	2	; select bank2
  8214  1859  1C69               	btfss	_flags^(0+256),0
  8215  185A  286D               	goto	l6622
  8216  185B  287A               	goto	l6624
  8217  185C                     l6618:	
  8218                           
  8219                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  8220  185C  3020               	movlw	32
  8221  185D  00F1               	movwf	fputc@c
  8222  185E  3000               	movlw	0
  8223  185F  00F2               	movwf	fputc@c+1
  8224  1860  0020               	movlb	0	; select bank0
  8225  1861  0821               	movf	stoa@fp+1,w
  8226  1862  00F4               	movwf	fputc@fp+1
  8227  1863  0820               	movf	stoa@fp,w
  8228  1864  00F3               	movwf	fputc@fp
  8229  1865  31A8  2041  3198   	fcall	_fputc
  8230                           
  8231                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  8232  1868  3001               	movlw	1
  8233  1869  0020               	movlb	0	; select bank0
  8234  186A  07B3               	addwf	stoa@l,f
  8235  186B  3000               	movlw	0
  8236  186C  3DB4               	addwfc	stoa@l+1,f
  8237  186D                     l6622:	
  8238                           
  8239                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  8240  186D  0020               	movlb	0	; select bank0
  8241  186E  0834               	movf	stoa@l+1,w
  8242  186F  3A80               	xorlw	128
  8243  1870  00FA               	movwf	??_stoa
  8244  1871  082E               	movf	stoa@w+1,w
  8245  1872  3A80               	xorlw	128
  8246  1873  027A               	subwf	??_stoa,w
  8247  1874  1D03               	skipz
  8248  1875  2878               	goto	u8605
  8249  1876  082D               	movf	stoa@w,w
  8250  1877  0233               	subwf	stoa@l,w
  8251  1878                     u8605:	
  8252  1878  1C03               	skipc
  8253  1879  285C               	goto	l6618
  8254  187A                     l6624:	
  8255                           
  8256                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  8257  187A  0020               	movlb	0	; select bank0
  8258  187B  01AB               	clrf	stoa@i
  8259  187C  01AC               	clrf	stoa@i+1
  8260  187D                     l6632:	
  8261                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8262                           
  8263                           
  8264                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8265  187D  082C               	movf	stoa@i+1,w
  8266  187E  3A80               	xorlw	128
  8267  187F  00FA               	movwf	??_stoa
  8268  1880  0832               	movf	stoa@p+1,w
  8269  1881  3A80               	xorlw	128
  8270  1882  027A               	subwf	??_stoa,w
  8271  1883  1D03               	skipz
  8272  1884  2887               	goto	u8615
  8273  1885  0831               	movf	stoa@p,w
  8274  1886  022B               	subwf	stoa@i,w
  8275  1887                     u8615:	
  8276  1887  1803               	btfsc	3,0
  8277  1888  28A6               	goto	l711
  8278                           
  8279                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  8280  1889  0020               	movlb	0	; select bank0
  8281  188A  082F               	movf	stoa@cp,w
  8282  188B  0086               	movwf	6
  8283  188C  0830               	movf	stoa@cp+1,w
  8284  188D  0087               	movwf	7
  8285  188E  0801               	movf	1,w
  8286  188F  00FA               	movwf	??_stoa
  8287  1890  01FB               	clrf	??_stoa+1
  8288  1891  087A               	movf	??_stoa,w
  8289  1892  00F1               	movwf	fputc@c
  8290  1893  087B               	movf	??_stoa+1,w
  8291  1894  00F2               	movwf	fputc@c+1
  8292  1895  0821               	movf	stoa@fp+1,w
  8293  1896  00F4               	movwf	fputc@fp+1
  8294  1897  0820               	movf	stoa@fp,w
  8295  1898  00F3               	movwf	fputc@fp
  8296  1899  31A8  2041  3198   	fcall	_fputc
  8297                           
  8298                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  8299  189C  3001               	movlw	1
  8300  189D  0020               	movlb	0	; select bank0
  8301  189E  07AF               	addwf	stoa@cp,f
  8302  189F  3000               	movlw	0
  8303  18A0  3DB0               	addwfc	stoa@cp+1,f
  8304                           
  8305                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  8306  18A1  3001               	movlw	1
  8307  18A2  07AB               	addwf	stoa@i,f
  8308  18A3  3000               	movlw	0
  8309  18A4  3DAC               	addwfc	stoa@i+1,f
  8310  18A5  287D               	goto	l6632
  8311  18A6                     l711:	
  8312                           
  8313                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  8314  18A6  0022               	movlb	2	; select bank2
  8315  18A7  1869               	btfsc	_flags^(0+256),0
  8316  18A8  28BB               	goto	l6640
  8317  18A9  28C8               	goto	l6642
  8318  18AA                     l6636:	
  8319                           
  8320                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  8321  18AA  3020               	movlw	32
  8322  18AB  00F1               	movwf	fputc@c
  8323  18AC  3000               	movlw	0
  8324  18AD  00F2               	movwf	fputc@c+1
  8325  18AE  0020               	movlb	0	; select bank0
  8326  18AF  0821               	movf	stoa@fp+1,w
  8327  18B0  00F4               	movwf	fputc@fp+1
  8328  18B1  0820               	movf	stoa@fp,w
  8329  18B2  00F3               	movwf	fputc@fp
  8330  18B3  31A8  2041  3198   	fcall	_fputc
  8331                           
  8332                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  8333  18B6  3001               	movlw	1
  8334  18B7  0020               	movlb	0	; select bank0
  8335  18B8  07B3               	addwf	stoa@l,f
  8336  18B9  3000               	movlw	0
  8337  18BA  3DB4               	addwfc	stoa@l+1,f
  8338  18BB                     l6640:	
  8339                           
  8340                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  8341  18BB  0020               	movlb	0	; select bank0
  8342  18BC  0834               	movf	stoa@l+1,w
  8343  18BD  3A80               	xorlw	128
  8344  18BE  00FA               	movwf	??_stoa
  8345  18BF  082E               	movf	stoa@w+1,w
  8346  18C0  3A80               	xorlw	128
  8347  18C1  027A               	subwf	??_stoa,w
  8348  18C2  1D03               	skipz
  8349  18C3  28C6               	goto	u8635
  8350  18C4  082D               	movf	stoa@w,w
  8351  18C5  0233               	subwf	stoa@l,w
  8352  18C6                     u8635:	
  8353  18C6  1C03               	skipc
  8354  18C7  28AA               	goto	l6636
  8355  18C8                     l6642:	
  8356                           
  8357                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  8358  18C8  0020               	movlb	0	; select bank0
  8359  18C9  0834               	movf	stoa@l+1,w
  8360  18CA  00A1               	movwf	?_stoa+1
  8361  18CB  0833               	movf	stoa@l,w
  8362  18CC  00A0               	movwf	?_stoa
  8363  18CD  0008               	return
  8364  18CE                     __end_of_stoa:	
  8365                           
  8366                           	psect	text18
  8367  22F5                     __ptext18:	
  8368 ;; *************** function _otoa *****************
  8369 ;; Defined at:
  8370 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8371 ;; Parameters:    Size  Location     Type
  8372 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  8373 ;;		 -> vsnprintf@f(6), 
  8374 ;;  d               8   18[BANK0 ] unsigned long long 
  8375 ;; Auto vars:     Size  Location     Type
  8376 ;;  n               8   40[BANK0 ] unsigned long long 
  8377 ;;  i               2   48[BANK0 ] int 
  8378 ;;  w               2   38[BANK0 ] int 
  8379 ;;  t               2   36[BANK0 ] int 
  8380 ;;  p               2   34[BANK0 ] int 
  8381 ;; Return value:  Size  Location     Type
  8382 ;;                  2   16[BANK0 ] int 
  8383 ;; Registers used:
  8384 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8385 ;; Tracked objects:
  8386 ;;		On entry : 0/0
  8387 ;;		On exit  : 0/0
  8388 ;;		Unchanged: 0/0
  8389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8390 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8391 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8392 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8393 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8394 ;;Total ram usage:       34 bytes
  8395 ;; Hardware stack levels used:    1
  8396 ;; Hardware stack levels required when called:    5
  8397 ;; This function calls:
  8398 ;;		_pad
  8399 ;; This function is called by:
  8400 ;;		_vfpfcnvrt
  8401 ;; This function uses a non-reentrant model
  8402 ;;
  8403                           
  8404                           
  8405                           ;psect for function _otoa
  8406  22F5                     _otoa:	
  8407                           
  8408                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  8409                           
  8410                           ;incstack = 0
  8411                           ; Regs used in _otoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8412  22F5  0022               	movlb	2	; select bank2
  8413  22F6  1BE8               	btfsc	(_prec+1)^(0+256),7
  8414  22F7  2AFC               	goto	l680
  8415                           
  8416                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  8417  22F8  30FD               	movlw	253
  8418  22F9  05E9               	andwf	_flags^(0+256),f
  8419  22FA  30FF               	movlw	255
  8420  22FB  05EA               	andwf	(_flags+1)^(0+256),f
  8421  22FC                     l680:	
  8422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 515:     }
  8423                           
  8424                           
  8425                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  8426  22FC  0868               	movf	(_prec+1)^(0+256),w
  8427  22FD  3A80               	xorlw	128
  8428  22FE  0020               	movlb	0	; select bank0
  8429  22FF  00BA               	movwf	??_otoa
  8430  2300  3080               	movlw	128
  8431  2301  023A               	subwf	??_otoa,w
  8432  2302  1D03               	skipz
  8433  2303  2B07               	goto	u8465
  8434  2304  3001               	movlw	1
  8435  2305  0022               	movlb	2	; select bank2
  8436  2306  0267               	subwf	_prec^(0+256),w
  8437  2307                     u8465:	
  8438  2307  1803               	skipnc
  8439  2308  2B0F               	goto	l6558
  8440  2309  3001               	movlw	1
  8441  230A  0020               	movlb	0	; select bank0
  8442  230B  00C2               	movwf	otoa@p
  8443  230C  3000               	movlw	0
  8444  230D  00C3               	movwf	otoa@p+1
  8445  230E  2B17               	goto	l684
  8446  230F                     l6558:	
  8447  230F  0022               	movlb	2	; select bank2
  8448  2310  0868               	movf	(_prec+1)^(0+256),w
  8449  2311  0020               	movlb	0	; select bank0
  8450  2312  00C3               	movwf	otoa@p+1
  8451  2313  0022               	movlb	2	; select bank2
  8452  2314  0867               	movf	_prec^(0+256),w
  8453  2315  0020               	movlb	0	; select bank0
  8454  2316  00C2               	movwf	otoa@p
  8455  2317                     l684:	
  8456                           
  8457                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  8458  2317  0022               	movlb	2	; select bank2
  8459  2318  0866               	movf	(_width+1)^(0+256),w
  8460  2319  0020               	movlb	0	; select bank0
  8461  231A  00C7               	movwf	otoa@w+1
  8462  231B  0022               	movlb	2	; select bank2
  8463  231C  0865               	movf	_width^(0+256),w
  8464  231D  0020               	movlb	0	; select bank0
  8465  231E  00C6               	movwf	otoa@w
  8466                           
  8467                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  8468  231F  0832               	movf	otoa@d,w
  8469  2320  00C8               	movwf	otoa@n
  8470  2321  0833               	movf	otoa@d+1,w
  8471  2322  00C9               	movwf	otoa@n+1
  8472  2323  0834               	movf	otoa@d+2,w
  8473  2324  00CA               	movwf	otoa@n+2
  8474  2325  0835               	movf	otoa@d+3,w
  8475  2326  00CB               	movwf	otoa@n+3
  8476  2327  0836               	movf	otoa@d+4,w
  8477  2328  00CC               	movwf	otoa@n+4
  8478  2329  0837               	movf	otoa@d+5,w
  8479  232A  00CD               	movwf	otoa@n+5
  8480  232B  0838               	movf	otoa@d+6,w
  8481  232C  00CE               	movwf	otoa@n+6
  8482  232D  0839               	movf	otoa@d+7,w
  8483  232E  00CF               	movwf	otoa@n+7
  8484                           
  8485                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  8486  232F  301F               	movlw	31
  8487  2330  00D0               	movwf	otoa@i
  8488  2331  3000               	movlw	0
  8489  2332  00D1               	movwf	otoa@i+1
  8490                           
  8491                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  8492  2333  0024               	movlb	4	; select bank4
  8493  2334  01BF               	clrf	(_dbuf^(0+512)+31)
  8494                           
  8495                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  8496  2335  0020               	movlb	0	; select bank0
  8497  2336  01C4               	clrf	otoa@t
  8498  2337  01C5               	clrf	otoa@t+1
  8499                           
  8500                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8501  2338  2BAC               	goto	l685
  8502  2339                     l6576:	
  8503  2339  0020               	movlb	0	; select bank0
  8504  233A  0848               	movf	otoa@n,w
  8505  233B  0449               	iorwf	otoa@n+1,w
  8506  233C  044A               	iorwf	otoa@n+2,w
  8507  233D  044B               	iorwf	otoa@n+3,w
  8508  233E  044C               	iorwf	otoa@n+4,w
  8509  233F  044D               	iorwf	otoa@n+5,w
  8510  2340  044E               	iorwf	otoa@n+6,w
  8511  2341  044F               	iorwf	otoa@n+7,w
  8512  2342  1D03               	skipz
  8513  2343  2B5E               	goto	l6566
  8514  2344  0843               	movf	otoa@p+1,w
  8515  2345  3A80               	xorlw	128
  8516  2346  00BA               	movwf	??_otoa
  8517  2347  3080               	movlw	128
  8518  2348  023A               	subwf	??_otoa,w
  8519  2349  1D03               	skipz
  8520  234A  2B4D               	goto	u8505
  8521  234B  3001               	movlw	1
  8522  234C  0242               	subwf	otoa@p,w
  8523  234D                     u8505:	
  8524  234D  1803               	skipnc
  8525  234E  2B5E               	goto	l6566
  8526  234F  0020               	movlb	0	; select bank0
  8527  2350  0847               	movf	otoa@w+1,w
  8528  2351  3A80               	xorlw	128
  8529  2352  00BA               	movwf	??_otoa
  8530  2353  3080               	movlw	128
  8531  2354  023A               	subwf	??_otoa,w
  8532  2355  1D03               	skipz
  8533  2356  2B59               	goto	u8515
  8534  2357  3001               	movlw	1
  8535  2358  0246               	subwf	otoa@w,w
  8536  2359                     u8515:	
  8537  2359  1C03               	skipc
  8538  235A  2BB7               	goto	l691
  8539  235B  0022               	movlb	2	; select bank2
  8540  235C  1CE9               	btfss	_flags^(0+256),1
  8541  235D  2BB7               	goto	l691
  8542  235E                     l6566:	
  8543                           
  8544                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  8545  235E  30FF               	movlw	255
  8546  235F  0020               	movlb	0	; select bank0
  8547  2360  07D0               	addwf	otoa@i,f
  8548  2361  30FF               	movlw	255
  8549  2362  3DD1               	addwfc	otoa@i+1,f
  8550                           
  8551                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  8552  2363  3007               	movlw	7
  8553  2364  0548               	andwf	otoa@n,w
  8554  2365  00C4               	movwf	otoa@t
  8555  2366  3000               	movlw	0
  8556  2367  0549               	andwf	otoa@n+1,w
  8557  2368  00C5               	movwf	otoa@t+1
  8558                           
  8559                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  8560  2369  0844               	movf	otoa@t,w
  8561  236A  3E30               	addlw	48
  8562  236B  00BA               	movwf	??_otoa
  8563  236C  0850               	movf	otoa@i,w
  8564  236D  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8565  236E  0086               	movwf	6
  8566  236F  3002               	movlw	2	; select bank4/5
  8567  2370  0087               	movwf	7
  8568  2371  083A               	movf	??_otoa,w
  8569  2372  0081               	movwf	1
  8570                           
  8571                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  8572  2373  30FF               	movlw	255
  8573  2374  07C2               	addwf	otoa@p,f
  8574  2375  30FF               	movlw	255
  8575  2376  3DC3               	addwfc	otoa@p+1,f
  8576                           
  8577                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  8578  2377  30FF               	movlw	255
  8579  2378  07C6               	addwf	otoa@w,f
  8580  2379  30FF               	movlw	255
  8581  237A  3DC7               	addwfc	otoa@w+1,f
  8582                           
  8583                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  8584  237B  3048               	movlw	low otoa@n
  8585  237C  0086               	movwf	6
  8586  237D  3000               	movlw	high otoa@n
  8587  237E  0087               	movwf	7
  8588  237F  3F40               	moviw [0]fsr1
  8589  2380  00BA               	movwf	??_otoa
  8590  2381  3F41               	moviw [1]fsr1
  8591  2382  00BB               	movwf	??_otoa+1
  8592  2383  3F42               	moviw [2]fsr1
  8593  2384  00BC               	movwf	??_otoa+2
  8594  2385  3F43               	moviw [3]fsr1
  8595  2386  00BD               	movwf	??_otoa+3
  8596  2387  3F44               	moviw [4]fsr1
  8597  2388  00BE               	movwf	??_otoa+4
  8598  2389  3F45               	moviw [5]fsr1
  8599  238A  00BF               	movwf	??_otoa+5
  8600  238B  3F46               	moviw [6]fsr1
  8601  238C  00C0               	movwf	??_otoa+6
  8602  238D  3F47               	moviw [7]fsr1
  8603  238E  00C1               	movwf	??_otoa+7
  8604  238F  3003               	movlw	3
  8605  2390                     u8475:	
  8606  2390  0020               	movlb	0	; select bank0
  8607  2391  36C1               	lsrf	??_otoa+7,f
  8608  2392  0CC0               	rrf	??_otoa+6,f
  8609  2393  0CBF               	rrf	??_otoa+5,f
  8610  2394  0CBE               	rrf	??_otoa+4,f
  8611  2395  0CBD               	rrf	??_otoa+3,f
  8612  2396  0CBC               	rrf	??_otoa+2,f
  8613  2397  0CBB               	rrf	??_otoa+1,f
  8614  2398  0CBA               	rrf	??_otoa,f
  8615  2399  0B89               	decfsz	9,f
  8616  239A  2B90               	goto	u8475
  8617  239B  0020               	movlb	0	; select bank0
  8618  239C  0841               	movf	??_otoa+7,w
  8619  239D  00CF               	movwf	otoa@n+7
  8620  239E  0840               	movf	??_otoa+6,w
  8621  239F  00CE               	movwf	otoa@n+6
  8622  23A0  083F               	movf	??_otoa+5,w
  8623  23A1  00CD               	movwf	otoa@n+5
  8624  23A2  083E               	movf	??_otoa+4,w
  8625  23A3  00CC               	movwf	otoa@n+4
  8626  23A4  083D               	movf	??_otoa+3,w
  8627  23A5  00CB               	movwf	otoa@n+3
  8628  23A6  083C               	movf	??_otoa+2,w
  8629  23A7  00CA               	movwf	otoa@n+2
  8630  23A8  083B               	movf	??_otoa+1,w
  8631  23A9  00C9               	movwf	otoa@n+1
  8632  23AA  083A               	movf	??_otoa,w
  8633  23AB  00C8               	movwf	otoa@n
  8634  23AC                     l685:	
  8635                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 531:     }
  8636                           
  8637                           
  8638                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8639  23AC  0851               	movf	otoa@i+1,w
  8640  23AD  3A80               	xorlw	128
  8641  23AE  00BA               	movwf	??_otoa
  8642  23AF  3080               	movlw	128
  8643  23B0  023A               	subwf	??_otoa,w
  8644  23B1  1D03               	skipz
  8645  23B2  2BB5               	goto	u8485
  8646  23B3  3001               	movlw	1
  8647  23B4  0250               	subwf	otoa@i,w
  8648  23B5                     u8485:	
  8649  23B5  1803               	btfsc	3,0
  8650  23B6  2B39               	goto	l6576
  8651  23B7                     l691:	
  8652                           
  8653                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  8654  23B7  0022               	movlb	2	; select bank2
  8655  23B8  1E69               	btfss	_flags^(0+256),4
  8656  23B9  2BD0               	goto	l6592
  8657  23BA  0020               	movlb	0	; select bank0
  8658  23BB  0844               	movf	otoa@t,w
  8659  23BC  0445               	iorwf	otoa@t+1,w
  8660  23BD  1903               	btfsc	3,2
  8661  23BE  2BD0               	goto	l6592
  8662                           
  8663                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  8664  23BF  30FF               	movlw	255
  8665  23C0  07D0               	addwf	otoa@i,f
  8666  23C1  30FF               	movlw	255
  8667  23C2  3DD1               	addwfc	otoa@i+1,f
  8668                           
  8669                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  8670  23C3  3030               	movlw	48
  8671  23C4  00BA               	movwf	??_otoa
  8672  23C5  0850               	movf	otoa@i,w
  8673  23C6  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8674  23C7  0086               	movwf	6
  8675  23C8  3002               	movlw	2	; select bank4/5
  8676  23C9  0087               	movwf	7
  8677  23CA  083A               	movf	??_otoa,w
  8678  23CB  0081               	movwf	1
  8679                           
  8680                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  8681  23CC  30FF               	movlw	255
  8682  23CD  07C6               	addwf	otoa@w,f
  8683  23CE  30FF               	movlw	255
  8684  23CF  3DC7               	addwfc	otoa@w+1,f
  8685  23D0                     l6592:	
  8686                           
  8687                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  8688  23D0  0020               	movlb	0	; select bank0
  8689  23D1  0831               	movf	otoa@fp+1,w
  8690  23D2  00A7               	movwf	pad@fp+1
  8691  23D3  0830               	movf	otoa@fp,w
  8692  23D4  00A6               	movwf	pad@fp
  8693  23D5  0850               	movf	otoa@i,w
  8694  23D6  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8695  23D7  00BA               	movwf	??_otoa
  8696  23D8  083A               	movf	??_otoa,w
  8697  23D9  00A8               	movwf	pad@buf
  8698  23DA  0847               	movf	otoa@w+1,w
  8699  23DB  00AA               	movwf	pad@p+1
  8700  23DC  0846               	movf	otoa@w,w
  8701  23DD  00A9               	movwf	pad@p
  8702  23DE  31B7  275D         	fcall	_pad
  8703  23E0  0020               	movlb	0	; select bank0
  8704  23E1  0827               	movf	?_pad+1,w
  8705  23E2  00B1               	movwf	?_otoa+1
  8706  23E3  0826               	movf	?_pad,w
  8707  23E4  00B0               	movwf	?_otoa
  8708  23E5  0008               	return
  8709  23E6                     __end_of_otoa:	
  8710                           
  8711                           	psect	text19
  8712  18CE                     __ptext19:	
  8713 ;; *************** function _dtoa *****************
  8714 ;; Defined at:
  8715 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8716 ;; Parameters:    Size  Location     Type
  8717 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  8718 ;;		 -> vsnprintf@f(6), 
  8719 ;;  d               8   18[BANK0 ] long long 
  8720 ;; Auto vars:     Size  Location     Type
  8721 ;;  n               8   37[BANK0 ] long long 
  8722 ;;  i               2   45[BANK0 ] int 
  8723 ;;  s               2   35[BANK0 ] int 
  8724 ;;  w               2   33[BANK0 ] int 
  8725 ;;  p               2   31[BANK0 ] int 
  8726 ;; Return value:  Size  Location     Type
  8727 ;;                  2   16[BANK0 ] int 
  8728 ;; Registers used:
  8729 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8730 ;; Tracked objects:
  8731 ;;		On entry : 0/0
  8732 ;;		On exit  : 0/0
  8733 ;;		Unchanged: 0/0
  8734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8735 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8736 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8737 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8738 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8739 ;;Total ram usage:       31 bytes
  8740 ;; Hardware stack levels used:    1
  8741 ;; Hardware stack levels required when called:    5
  8742 ;; This function calls:
  8743 ;;		___aodiv
  8744 ;;		___aomod
  8745 ;;		_abs
  8746 ;;		_pad
  8747 ;; This function is called by:
  8748 ;;		_vfpfcnvrt
  8749 ;; This function uses a non-reentrant model
  8750 ;;
  8751                           
  8752                           
  8753                           ;psect for function _dtoa
  8754  18CE                     _dtoa:	
  8755                           
  8756                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  8757                           
  8758                           ;incstack = 0
  8759                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8760  18CE  0020               	movlb	0	; select bank0
  8761  18CF  0832               	movf	dtoa@d,w
  8762  18D0  00C5               	movwf	dtoa@n
  8763  18D1  0833               	movf	dtoa@d+1,w
  8764  18D2  00C6               	movwf	dtoa@n+1
  8765  18D3  0834               	movf	dtoa@d+2,w
  8766  18D4  00C7               	movwf	dtoa@n+2
  8767  18D5  0835               	movf	dtoa@d+3,w
  8768  18D6  00C8               	movwf	dtoa@n+3
  8769  18D7  0836               	movf	dtoa@d+4,w
  8770  18D8  00C9               	movwf	dtoa@n+4
  8771  18D9  0837               	movf	dtoa@d+5,w
  8772  18DA  00CA               	movwf	dtoa@n+5
  8773  18DB  0838               	movf	dtoa@d+6,w
  8774  18DC  00CB               	movwf	dtoa@n+6
  8775  18DD  0839               	movf	dtoa@d+7,w
  8776  18DE  00CC               	movwf	dtoa@n+7
  8777                           
  8778                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  8779  18DF  3045               	movlw	low dtoa@n
  8780  18E0  0086               	movwf	6
  8781  18E1  3000               	movlw	high dtoa@n
  8782  18E2  0087               	movwf	7
  8783  18E3  3F47               	moviw [7]fsr1
  8784  18E4  00BA               	movwf	??_dtoa
  8785  18E5  1FBA               	btfss	??_dtoa,7
  8786  18E6  28E9               	goto	u8290
  8787  18E7  3001               	movlw	1
  8788  18E8  28EA               	goto	u8300
  8789  18E9                     u8290:	
  8790  18E9  3000               	movlw	0
  8791  18EA                     u8300:	
  8792  18EA  0020               	movlb	0	; select bank0
  8793  18EB  00BB               	movwf	??_dtoa+1
  8794  18EC  01BC               	clrf	??_dtoa+2
  8795  18ED  083B               	movf	??_dtoa+1,w
  8796  18EE  00C3               	movwf	dtoa@s
  8797  18EF  083C               	movf	??_dtoa+2,w
  8798  18F0  00C4               	movwf	dtoa@s+1
  8799                           
  8800                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  8801  18F1  0843               	movf	dtoa@s,w
  8802  18F2  0444               	iorwf	dtoa@s+1,w
  8803  18F3  1903               	btfsc	3,2
  8804  18F4  2913               	goto	l654
  8805                           
  8806                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  8807  18F5  09C5               	comf	dtoa@n,f
  8808  18F6  09C6               	comf	dtoa@n+1,f
  8809  18F7  09C7               	comf	dtoa@n+2,f
  8810  18F8  09C8               	comf	dtoa@n+3,f
  8811  18F9  09C9               	comf	dtoa@n+4,f
  8812  18FA  09CA               	comf	dtoa@n+5,f
  8813  18FB  09CB               	comf	dtoa@n+6,f
  8814  18FC  09CC               	comf	dtoa@n+7,f
  8815  18FD  0AC5               	incf	dtoa@n,f
  8816  18FE  1D03               	skipz
  8817  18FF  2913               	goto	l654
  8818  1900  0AC6               	incf	dtoa@n+1,f
  8819  1901  1D03               	skipz
  8820  1902  2913               	goto	l654
  8821  1903  0AC7               	incf	dtoa@n+2,f
  8822  1904  1D03               	skipz
  8823  1905  2913               	goto	l654
  8824  1906  0AC8               	incf	dtoa@n+3,f
  8825  1907  1D03               	skipz
  8826  1908  2913               	goto	l654
  8827  1909  0AC9               	incf	dtoa@n+4,f
  8828  190A  1D03               	skipz
  8829  190B  2913               	goto	l654
  8830  190C  0ACA               	incf	dtoa@n+5,f
  8831  190D  1D03               	skipz
  8832  190E  2913               	goto	l654
  8833  190F  0ACB               	incf	dtoa@n+6,f
  8834  1910  1D03               	skipz
  8835  1911  2913               	goto	l654
  8836  1912  0ACC               	incf	dtoa@n+7,f
  8837  1913                     l654:	
  8838                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
  8839                           
  8840                           
  8841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  8842  1913  0022               	movlb	2	; select bank2
  8843  1914  1BE8               	btfsc	(_prec+1)^(0+256),7
  8844  1915  291A               	goto	l655
  8845                           
  8846                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  8847  1916  30FD               	movlw	253
  8848  1917  05E9               	andwf	_flags^(0+256),f
  8849  1918  30FF               	movlw	255
  8850  1919  05EA               	andwf	(_flags+1)^(0+256),f
  8851  191A                     l655:	
  8852                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
  8853                           
  8854                           
  8855                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  8856  191A  0868               	movf	(_prec+1)^(0+256),w
  8857  191B  3A80               	xorlw	128
  8858  191C  0020               	movlb	0	; select bank0
  8859  191D  00BA               	movwf	??_dtoa
  8860  191E  3080               	movlw	128
  8861  191F  023A               	subwf	??_dtoa,w
  8862  1920  1D03               	skipz
  8863  1921  2925               	goto	u8345
  8864  1922  3001               	movlw	1
  8865  1923  0022               	movlb	2	; select bank2
  8866  1924  0267               	subwf	_prec^(0+256),w
  8867  1925                     u8345:	
  8868  1925  1803               	skipnc
  8869  1926  292D               	goto	l6506
  8870  1927  3001               	movlw	1
  8871  1928  0020               	movlb	0	; select bank0
  8872  1929  00BF               	movwf	dtoa@p
  8873  192A  3000               	movlw	0
  8874  192B  00C0               	movwf	dtoa@p+1
  8875  192C  2935               	goto	l659
  8876  192D                     l6506:	
  8877  192D  0022               	movlb	2	; select bank2
  8878  192E  0868               	movf	(_prec+1)^(0+256),w
  8879  192F  0020               	movlb	0	; select bank0
  8880  1930  00C0               	movwf	dtoa@p+1
  8881  1931  0022               	movlb	2	; select bank2
  8882  1932  0867               	movf	_prec^(0+256),w
  8883  1933  0020               	movlb	0	; select bank0
  8884  1934  00BF               	movwf	dtoa@p
  8885  1935                     l659:	
  8886                           
  8887                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  8888  1935  0022               	movlb	2	; select bank2
  8889  1936  0866               	movf	(_width+1)^(0+256),w
  8890  1937  0020               	movlb	0	; select bank0
  8891  1938  00C2               	movwf	dtoa@w+1
  8892  1939  0022               	movlb	2	; select bank2
  8893  193A  0865               	movf	_width^(0+256),w
  8894  193B  0020               	movlb	0	; select bank0
  8895  193C  00C1               	movwf	dtoa@w
  8896                           
  8897                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  8898  193D  0843               	movf	dtoa@s,w
  8899  193E  0444               	iorwf	dtoa@s+1,w
  8900  193F  1D03               	btfss	3,2
  8901  1940  2944               	goto	l6512
  8902  1941  0022               	movlb	2	; select bank2
  8903  1942  1D69               	btfss	_flags^(0+256),2
  8904  1943  2949               	goto	l660
  8905  1944                     l6512:	
  8906                           
  8907                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  8908  1944  30FF               	movlw	255
  8909  1945  0020               	movlb	0	; select bank0
  8910  1946  07C1               	addwf	dtoa@w,f
  8911  1947  30FF               	movlw	255
  8912  1948  3DC2               	addwfc	dtoa@w+1,f
  8913  1949                     l660:	
  8914                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
  8915                           
  8916                           
  8917                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  8918  1949  301F               	movlw	31
  8919  194A  0020               	movlb	0	; select bank0
  8920  194B  00CD               	movwf	dtoa@i
  8921  194C  3000               	movlw	0
  8922  194D  00CE               	movwf	dtoa@i+1
  8923                           
  8924                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  8925  194E  0024               	movlb	4	; select bank4
  8926  194F  01BF               	clrf	(_dbuf^(0+512)+31)
  8927                           
  8928                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8929  1950  29DF               	goto	l663
  8930  1951                     l6526:	
  8931  1951  0020               	movlb	0	; select bank0
  8932  1952  0845               	movf	dtoa@n,w
  8933  1953  0446               	iorwf	dtoa@n+1,w
  8934  1954  0447               	iorwf	dtoa@n+2,w
  8935  1955  0448               	iorwf	dtoa@n+3,w
  8936  1956  0449               	iorwf	dtoa@n+4,w
  8937  1957  044A               	iorwf	dtoa@n+5,w
  8938  1958  044B               	iorwf	dtoa@n+6,w
  8939  1959  044C               	iorwf	dtoa@n+7,w
  8940  195A  1D03               	skipz
  8941  195B  2976               	goto	l6516
  8942  195C  0840               	movf	dtoa@p+1,w
  8943  195D  3A80               	xorlw	128
  8944  195E  00BA               	movwf	??_dtoa
  8945  195F  3080               	movlw	128
  8946  1960  023A               	subwf	??_dtoa,w
  8947  1961  1D03               	skipz
  8948  1962  2965               	goto	u8395
  8949  1963  3001               	movlw	1
  8950  1964  023F               	subwf	dtoa@p,w
  8951  1965                     u8395:	
  8952  1965  1803               	skipnc
  8953  1966  2976               	goto	l6516
  8954  1967  0020               	movlb	0	; select bank0
  8955  1968  0842               	movf	dtoa@w+1,w
  8956  1969  3A80               	xorlw	128
  8957  196A  00BA               	movwf	??_dtoa
  8958  196B  3080               	movlw	128
  8959  196C  023A               	subwf	??_dtoa,w
  8960  196D  1D03               	skipz
  8961  196E  2971               	goto	u8405
  8962  196F  3001               	movlw	1
  8963  1970  0241               	subwf	dtoa@w,w
  8964  1971                     u8405:	
  8965  1971  1C03               	skipc
  8966  1972  29EB               	goto	l6534
  8967  1973  0022               	movlb	2	; select bank2
  8968  1974  1CE9               	btfss	_flags^(0+256),1
  8969  1975  29EB               	goto	l6534
  8970  1976                     l6516:	
  8971                           
  8972                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  8973  1976  30FF               	movlw	255
  8974  1977  0020               	movlb	0	; select bank0
  8975  1978  07CD               	addwf	dtoa@i,f
  8976  1979  30FF               	movlw	255
  8977  197A  3DCE               	addwfc	dtoa@i+1,f
  8978                           
  8979                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  8980  197B  300A               	movlw	10
  8981  197C  00A0               	movwf	___aomod@divisor
  8982  197D  01A1               	clrf	___aomod@divisor+1
  8983  197E  01A2               	clrf	___aomod@divisor+2
  8984  197F  01A3               	clrf	___aomod@divisor+3
  8985  1980  01A4               	clrf	___aomod@divisor+4
  8986  1981  01A5               	clrf	___aomod@divisor+5
  8987  1982  01A6               	clrf	___aomod@divisor+6
  8988  1983  01A7               	clrf	___aomod@divisor+7
  8989  1984  0845               	movf	dtoa@n,w
  8990  1985  00A8               	movwf	___aomod@dividend
  8991  1986  0846               	movf	dtoa@n+1,w
  8992  1987  00A9               	movwf	___aomod@dividend+1
  8993  1988  0847               	movf	dtoa@n+2,w
  8994  1989  00AA               	movwf	___aomod@dividend+2
  8995  198A  0848               	movf	dtoa@n+3,w
  8996  198B  00AB               	movwf	___aomod@dividend+3
  8997  198C  0849               	movf	dtoa@n+4,w
  8998  198D  00AC               	movwf	___aomod@dividend+4
  8999  198E  084A               	movf	dtoa@n+5,w
  9000  198F  00AD               	movwf	___aomod@dividend+5
  9001  1990  084B               	movf	dtoa@n+6,w
  9002  1991  00AE               	movwf	___aomod@dividend+6
  9003  1992  084C               	movf	dtoa@n+7,w
  9004  1993  00AF               	movwf	___aomod@dividend+7
  9005  1994  31A1  2138  3198   	fcall	___aomod
  9006  1997  0020               	movlb	0	; select bank0
  9007  1998  0821               	movf	?___aomod+1,w
  9008  1999  00F5               	movwf	abs@a+1
  9009  199A  0820               	movf	?___aomod,w
  9010  199B  00F4               	movwf	abs@a
  9011  199C  31B4  242F  3198   	fcall	_abs
  9012  199F  0874               	movf	?_abs,w
  9013  19A0  3E30               	addlw	48
  9014  19A1  0020               	movlb	0	; select bank0
  9015  19A2  00BA               	movwf	??_dtoa
  9016  19A3  084D               	movf	dtoa@i,w
  9017  19A4  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9018  19A5  0086               	movwf	6
  9019  19A6  3002               	movlw	2	; select bank4/5
  9020  19A7  0087               	movwf	7
  9021  19A8  083A               	movf	??_dtoa,w
  9022  19A9  0081               	movwf	1
  9023                           
  9024                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  9025  19AA  30FF               	movlw	255
  9026  19AB  07BF               	addwf	dtoa@p,f
  9027  19AC  30FF               	movlw	255
  9028  19AD  3DC0               	addwfc	dtoa@p+1,f
  9029                           
  9030                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  9031  19AE  30FF               	movlw	255
  9032  19AF  07C1               	addwf	dtoa@w,f
  9033  19B0  30FF               	movlw	255
  9034  19B1  3DC2               	addwfc	dtoa@w+1,f
  9035                           
  9036                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  9037  19B2  300A               	movlw	10
  9038  19B3  00A0               	movwf	___aodiv@divisor
  9039  19B4  01A1               	clrf	___aodiv@divisor+1
  9040  19B5  01A2               	clrf	___aodiv@divisor+2
  9041  19B6  01A3               	clrf	___aodiv@divisor+3
  9042  19B7  01A4               	clrf	___aodiv@divisor+4
  9043  19B8  01A5               	clrf	___aodiv@divisor+5
  9044  19B9  01A6               	clrf	___aodiv@divisor+6
  9045  19BA  01A7               	clrf	___aodiv@divisor+7
  9046  19BB  0845               	movf	dtoa@n,w
  9047  19BC  00A8               	movwf	___aodiv@dividend
  9048  19BD  0846               	movf	dtoa@n+1,w
  9049  19BE  00A9               	movwf	___aodiv@dividend+1
  9050  19BF  0847               	movf	dtoa@n+2,w
  9051  19C0  00AA               	movwf	___aodiv@dividend+2
  9052  19C1  0848               	movf	dtoa@n+3,w
  9053  19C2  00AB               	movwf	___aodiv@dividend+3
  9054  19C3  0849               	movf	dtoa@n+4,w
  9055  19C4  00AC               	movwf	___aodiv@dividend+4
  9056  19C5  084A               	movf	dtoa@n+5,w
  9057  19C6  00AD               	movwf	___aodiv@dividend+5
  9058  19C7  084B               	movf	dtoa@n+6,w
  9059  19C8  00AE               	movwf	___aodiv@dividend+6
  9060  19C9  084C               	movf	dtoa@n+7,w
  9061  19CA  00AF               	movwf	___aodiv@dividend+7
  9062  19CB  31A3  23E6  3198   	fcall	___aodiv
  9063  19CE  0020               	movlb	0	; select bank0
  9064  19CF  0820               	movf	?___aodiv,w
  9065  19D0  00C5               	movwf	dtoa@n
  9066  19D1  0821               	movf	?___aodiv+1,w
  9067  19D2  00C6               	movwf	dtoa@n+1
  9068  19D3  0822               	movf	?___aodiv+2,w
  9069  19D4  00C7               	movwf	dtoa@n+2
  9070  19D5  0823               	movf	?___aodiv+3,w
  9071  19D6  00C8               	movwf	dtoa@n+3
  9072  19D7  0824               	movf	?___aodiv+4,w
  9073  19D8  00C9               	movwf	dtoa@n+4
  9074  19D9  0825               	movf	?___aodiv+5,w
  9075  19DA  00CA               	movwf	dtoa@n+5
  9076  19DB  0826               	movf	?___aodiv+6,w
  9077  19DC  00CB               	movwf	dtoa@n+6
  9078  19DD  0827               	movf	?___aodiv+7,w
  9079  19DE  00CC               	movwf	dtoa@n+7
  9080  19DF                     l663:	
  9081                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
  9082                           
  9083                           
  9084                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9085  19DF  0020               	movlb	0	; select bank0
  9086  19E0  084E               	movf	dtoa@i+1,w
  9087  19E1  3A80               	xorlw	128
  9088  19E2  00BA               	movwf	??_dtoa
  9089  19E3  3080               	movlw	128
  9090  19E4  023A               	subwf	??_dtoa,w
  9091  19E5  1D03               	skipz
  9092  19E6  29E9               	goto	u8375
  9093  19E7  3001               	movlw	1
  9094  19E8  024D               	subwf	dtoa@i,w
  9095  19E9                     u8375:	
  9096  19E9  1803               	btfsc	3,0
  9097  19EA  2951               	goto	l6526
  9098  19EB                     l6534:	
  9099                           
  9100                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  9101  19EB  0020               	movlb	0	; select bank0
  9102  19EC  0843               	movf	dtoa@s,w
  9103  19ED  0444               	iorwf	dtoa@s+1,w
  9104  19EE  1D03               	btfss	3,2
  9105  19EF  29F3               	goto	l6538
  9106  19F0  0022               	movlb	2	; select bank2
  9107  19F1  1D69               	btfss	_flags^(0+256),2
  9108  19F2  2A0B               	goto	l6548
  9109  19F3                     l6538:	
  9110                           
  9111                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  9112  19F3  30FF               	movlw	255
  9113  19F4  0020               	movlb	0	; select bank0
  9114  19F5  07CD               	addwf	dtoa@i,f
  9115  19F6  30FF               	movlw	255
  9116  19F7  3DCE               	addwfc	dtoa@i+1,f
  9117                           
  9118                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  9119  19F8  0843               	movf	dtoa@s,w
  9120  19F9  0444               	iorwf	dtoa@s+1,w
  9121  19FA  1D03               	btfss	3,2
  9122  19FB  29FE               	goto	l6544
  9123  19FC  302B               	movlw	43
  9124  19FD  29FF               	goto	L2
  9125  19FE                     l6544:	
  9126  19FE  302D               	movlw	45
  9127  19FF                     L2:	
  9128  19FF  00BD               	movwf	_dtoa$1201
  9129  1A00  3000               	movlw	0
  9130  1A01  00BE               	movwf	_dtoa$1201+1
  9131  1A02  083D               	movf	_dtoa$1201,w
  9132  1A03  00BA               	movwf	??_dtoa
  9133  1A04  084D               	movf	dtoa@i,w
  9134  1A05  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9135  1A06  0086               	movwf	6
  9136  1A07  3002               	movlw	2	; select bank4/5
  9137  1A08  0087               	movwf	7
  9138  1A09  083A               	movf	??_dtoa,w
  9139  1A0A  0081               	movwf	1
  9140  1A0B                     l6548:	
  9141                           
  9142                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  9143  1A0B  0020               	movlb	0	; select bank0
  9144  1A0C  0831               	movf	dtoa@fp+1,w
  9145  1A0D  00A7               	movwf	pad@fp+1
  9146  1A0E  0830               	movf	dtoa@fp,w
  9147  1A0F  00A6               	movwf	pad@fp
  9148  1A10  084D               	movf	dtoa@i,w
  9149  1A11  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9150  1A12  00BA               	movwf	??_dtoa
  9151  1A13  083A               	movf	??_dtoa,w
  9152  1A14  00A8               	movwf	pad@buf
  9153  1A15  0842               	movf	dtoa@w+1,w
  9154  1A16  00AA               	movwf	pad@p+1
  9155  1A17  0841               	movf	dtoa@w,w
  9156  1A18  00A9               	movwf	pad@p
  9157  1A19  31B7  275D         	fcall	_pad
  9158  1A1B  0020               	movlb	0	; select bank0
  9159  1A1C  0827               	movf	?_pad+1,w
  9160  1A1D  00B1               	movwf	?_dtoa+1
  9161  1A1E  0826               	movf	?_pad,w
  9162  1A1F  00B0               	movwf	?_dtoa
  9163  1A20  0008               	return
  9164  1A21                     __end_of_dtoa:	
  9165                           
  9166                           	psect	text20
  9167  342F                     __ptext20:	
  9168 ;; *************** function _abs *****************
  9169 ;; Defined at:
  9170 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  9171 ;; Parameters:    Size  Location     Type
  9172 ;;  a               2    4[COMMON] int 
  9173 ;; Auto vars:     Size  Location     Type
  9174 ;;		None
  9175 ;; Return value:  Size  Location     Type
  9176 ;;                  2    4[COMMON] int 
  9177 ;; Registers used:
  9178 ;;		wreg, status,2, status,0
  9179 ;; Tracked objects:
  9180 ;;		On entry : 0/0
  9181 ;;		On exit  : 0/0
  9182 ;;		Unchanged: 0/0
  9183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9184 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9186 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9187 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9188 ;;Total ram usage:        4 bytes
  9189 ;; Hardware stack levels used:    1
  9190 ;; Hardware stack levels required when called:    1
  9191 ;; This function calls:
  9192 ;;		Nothing
  9193 ;; This function is called by:
  9194 ;;		_dtoa
  9195 ;; This function uses a non-reentrant model
  9196 ;;
  9197                           
  9198                           
  9199                           ;psect for function _abs
  9200  342F                     _abs:	
  9201                           
  9202                           ;incstack = 0
  9203                           ; Regs used in _abs: [wreg+status,2+status,0]
  9204  342F  0875               	movf	abs@a+1,w
  9205  3430  3A80               	xorlw	128
  9206  3431  00F6               	movwf	??_abs
  9207  3432  3080               	movlw	128
  9208  3433  0276               	subwf	??_abs,w
  9209  3434  1D03               	skipz
  9210  3435  2C38               	goto	u7825
  9211  3436  3001               	movlw	1
  9212  3437  0274               	subwf	abs@a,w
  9213  3438                     u7825:	
  9214  3438  1803               	skipnc
  9215  3439  0008               	return
  9216  343A  0974               	comf	abs@a,w
  9217  343B  00F6               	movwf	??_abs
  9218  343C  0975               	comf	abs@a+1,w
  9219  343D  00F7               	movwf	??_abs+1
  9220  343E  0AF6               	incf	??_abs,f
  9221  343F  1903               	skipnz
  9222  3440  0AF7               	incf	??_abs+1,f
  9223  3441  0876               	movf	??_abs,w
  9224  3442  00F4               	movwf	?_abs
  9225  3443  0877               	movf	??_abs+1,w
  9226  3444  00F5               	movwf	?_abs+1
  9227  3445  0008               	return
  9228  3446                     __end_of_abs:	
  9229                           
  9230                           	psect	text21
  9231  2138                     __ptext21:	
  9232 ;; *************** function ___aomod *****************
  9233 ;; Defined at:
  9234 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  9235 ;; Parameters:    Size  Location     Type
  9236 ;;  divisor         8    0[BANK0 ] long long 
  9237 ;;  dividend        8    8[BANK0 ] long long 
  9238 ;; Auto vars:     Size  Location     Type
  9239 ;;  sign            1    3[COMMON] unsigned char 
  9240 ;;  counter         1    2[COMMON] unsigned char 
  9241 ;; Return value:  Size  Location     Type
  9242 ;;                  8    0[BANK0 ] long long 
  9243 ;; Registers used:
  9244 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9245 ;; Tracked objects:
  9246 ;;		On entry : 0/0
  9247 ;;		On exit  : 0/0
  9248 ;;		Unchanged: 0/0
  9249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9250 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9251 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9252 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9253 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9254 ;;Total ram usage:       19 bytes
  9255 ;; Hardware stack levels used:    1
  9256 ;; Hardware stack levels required when called:    1
  9257 ;; This function calls:
  9258 ;;		Nothing
  9259 ;; This function is called by:
  9260 ;;		_dtoa
  9261 ;; This function uses a non-reentrant model
  9262 ;;
  9263                           
  9264                           
  9265                           ;psect for function ___aomod
  9266  2138                     ___aomod:	
  9267                           
  9268                           ;incstack = 0
  9269                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  9270  2138  01F3               	clrf	___aomod@sign
  9271  2139  3028               	movlw	low ___aomod@dividend
  9272  213A  0086               	movwf	6
  9273  213B  3000               	movlw	high ___aomod@dividend
  9274  213C  0087               	movwf	7
  9275  213D  3F47               	moviw [7]fsr1
  9276  213E  00F1               	movwf	??___aomod
  9277  213F  1FF1               	btfss	??___aomod,7
  9278  2140  2962               	goto	l6406
  9279  2141  0020               	movlb	0	; select bank0
  9280  2142  09A8               	comf	___aomod@dividend,f
  9281  2143  09A9               	comf	___aomod@dividend+1,f
  9282  2144  09AA               	comf	___aomod@dividend+2,f
  9283  2145  09AB               	comf	___aomod@dividend+3,f
  9284  2146  09AC               	comf	___aomod@dividend+4,f
  9285  2147  09AD               	comf	___aomod@dividend+5,f
  9286  2148  09AE               	comf	___aomod@dividend+6,f
  9287  2149  09AF               	comf	___aomod@dividend+7,f
  9288  214A  0AA8               	incf	___aomod@dividend,f
  9289  214B  1D03               	skipz
  9290  214C  2960               	goto	u808lld
  9291  214D  0AA9               	incf	___aomod@dividend+1,f
  9292  214E  1D03               	skipz
  9293  214F  2960               	goto	u808lld
  9294  2150  0AAA               	incf	___aomod@dividend+2,f
  9295  2151  1D03               	skipz
  9296  2152  2960               	goto	u808lld
  9297  2153  0AAB               	incf	___aomod@dividend+3,f
  9298  2154  1D03               	skipz
  9299  2155  2960               	goto	u808lld
  9300  2156  0AAC               	incf	___aomod@dividend+4,f
  9301  2157  1D03               	skipz
  9302  2158  2960               	goto	u808lld
  9303  2159  0AAD               	incf	___aomod@dividend+5,f
  9304  215A  1D03               	skipz
  9305  215B  2960               	goto	u808lld
  9306  215C  0AAE               	incf	___aomod@dividend+6,f
  9307  215D  1D03               	skipz
  9308  215E  2960               	goto	u808lld
  9309  215F  0AAF               	incf	___aomod@dividend+7,f
  9310  2160                     u808lld:	
  9311  2160  01F3               	clrf	___aomod@sign
  9312  2161  0AF3               	incf	___aomod@sign,f
  9313  2162                     l6406:	
  9314  2162  3020               	movlw	low ___aomod@divisor
  9315  2163  0086               	movwf	6
  9316  2164  3000               	movlw	high ___aomod@divisor
  9317  2165  0087               	movwf	7
  9318  2166  3F47               	moviw [7]fsr1
  9319  2167  00F1               	movwf	??___aomod
  9320  2168  1FF1               	btfss	??___aomod,7
  9321  2169  2989               	goto	l6410
  9322  216A  0020               	movlb	0	; select bank0
  9323  216B  09A0               	comf	___aomod@divisor,f
  9324  216C  09A1               	comf	___aomod@divisor+1,f
  9325  216D  09A2               	comf	___aomod@divisor+2,f
  9326  216E  09A3               	comf	___aomod@divisor+3,f
  9327  216F  09A4               	comf	___aomod@divisor+4,f
  9328  2170  09A5               	comf	___aomod@divisor+5,f
  9329  2171  09A6               	comf	___aomod@divisor+6,f
  9330  2172  09A7               	comf	___aomod@divisor+7,f
  9331  2173  0AA0               	incf	___aomod@divisor,f
  9332  2174  1D03               	skipz
  9333  2175  2989               	goto	l6410
  9334  2176  0AA1               	incf	___aomod@divisor+1,f
  9335  2177  1D03               	skipz
  9336  2178  2989               	goto	l6410
  9337  2179  0AA2               	incf	___aomod@divisor+2,f
  9338  217A  1D03               	skipz
  9339  217B  2989               	goto	l6410
  9340  217C  0AA3               	incf	___aomod@divisor+3,f
  9341  217D  1D03               	skipz
  9342  217E  2989               	goto	l6410
  9343  217F  0AA4               	incf	___aomod@divisor+4,f
  9344  2180  1D03               	skipz
  9345  2181  2989               	goto	l6410
  9346  2182  0AA5               	incf	___aomod@divisor+5,f
  9347  2183  1D03               	skipz
  9348  2184  2989               	goto	l6410
  9349  2185  0AA6               	incf	___aomod@divisor+6,f
  9350  2186  1D03               	skipz
  9351  2187  2989               	goto	l6410
  9352  2188  0AA7               	incf	___aomod@divisor+7,f
  9353  2189                     l6410:	
  9354  2189  0020               	movlb	0	; select bank0
  9355  218A  0820               	movf	___aomod@divisor,w
  9356  218B  0421               	iorwf	___aomod@divisor+1,w
  9357  218C  0422               	iorwf	___aomod@divisor+2,w
  9358  218D  0423               	iorwf	___aomod@divisor+3,w
  9359  218E  0424               	iorwf	___aomod@divisor+4,w
  9360  218F  0425               	iorwf	___aomod@divisor+5,w
  9361  2190  0426               	iorwf	___aomod@divisor+6,w
  9362  2191  0427               	iorwf	___aomod@divisor+7,w
  9363  2192  1903               	skipnz
  9364  2193  29E1               	goto	l6426
  9365  2194  01F2               	clrf	___aomod@counter
  9366  2195  0AF2               	incf	___aomod@counter,f
  9367  2196                     l6418:	
  9368  2196  1BA7               	btfsc	___aomod@divisor+7,7
  9369  2197  29A5               	goto	l6420
  9370  2198  35A0               	lslf	___aomod@divisor,f
  9371  2199  0DA1               	rlf	___aomod@divisor+1,f
  9372  219A  0DA2               	rlf	___aomod@divisor+2,f
  9373  219B  0DA3               	rlf	___aomod@divisor+3,f
  9374  219C  0DA4               	rlf	___aomod@divisor+4,f
  9375  219D  0DA5               	rlf	___aomod@divisor+5,f
  9376  219E  0DA6               	rlf	___aomod@divisor+6,f
  9377  219F  0DA7               	rlf	___aomod@divisor+7,f
  9378  21A0  3001               	movlw	1
  9379  21A1  00F1               	movwf	??___aomod
  9380  21A2  0871               	movf	??___aomod,w
  9381  21A3  07F2               	addwf	___aomod@counter,f
  9382  21A4  2996               	goto	l6418
  9383  21A5                     l6420:	
  9384  21A5  0827               	movf	___aomod@divisor+7,w
  9385  21A6  022F               	subwf	___aomod@dividend+7,w
  9386  21A7  1D03               	skipz
  9387  21A8  29C3               	goto	u8135
  9388  21A9  0826               	movf	___aomod@divisor+6,w
  9389  21AA  022E               	subwf	___aomod@dividend+6,w
  9390  21AB  1D03               	skipz
  9391  21AC  29C3               	goto	u8135
  9392  21AD  0825               	movf	___aomod@divisor+5,w
  9393  21AE  022D               	subwf	___aomod@dividend+5,w
  9394  21AF  1D03               	skipz
  9395  21B0  29C3               	goto	u8135
  9396  21B1  0824               	movf	___aomod@divisor+4,w
  9397  21B2  022C               	subwf	___aomod@dividend+4,w
  9398  21B3  1D03               	skipz
  9399  21B4  29C3               	goto	u8135
  9400  21B5  0823               	movf	___aomod@divisor+3,w
  9401  21B6  022B               	subwf	___aomod@dividend+3,w
  9402  21B7  1D03               	skipz
  9403  21B8  29C3               	goto	u8135
  9404  21B9  0822               	movf	___aomod@divisor+2,w
  9405  21BA  022A               	subwf	___aomod@dividend+2,w
  9406  21BB  1D03               	skipz
  9407  21BC  29C3               	goto	u8135
  9408  21BD  0821               	movf	___aomod@divisor+1,w
  9409  21BE  0229               	subwf	___aomod@dividend+1,w
  9410  21BF  1D03               	skipz
  9411  21C0  29C3               	goto	u8135
  9412  21C1  0820               	movf	___aomod@divisor,w
  9413  21C2  0228               	subwf	___aomod@dividend,w
  9414  21C3                     u8135:	
  9415  21C3  1C03               	skipc
  9416  21C4  29D5               	goto	l6424
  9417  21C5  0820               	movf	___aomod@divisor,w
  9418  21C6  02A8               	subwf	___aomod@dividend,f
  9419  21C7  0821               	movf	___aomod@divisor+1,w
  9420  21C8  3BA9               	subwfb	___aomod@dividend+1,f
  9421  21C9  0822               	movf	___aomod@divisor+2,w
  9422  21CA  3BAA               	subwfb	___aomod@dividend+2,f
  9423  21CB  0823               	movf	___aomod@divisor+3,w
  9424  21CC  3BAB               	subwfb	___aomod@dividend+3,f
  9425  21CD  0824               	movf	___aomod@divisor+4,w
  9426  21CE  3BAC               	subwfb	___aomod@dividend+4,f
  9427  21CF  0825               	movf	___aomod@divisor+5,w
  9428  21D0  3BAD               	subwfb	___aomod@dividend+5,f
  9429  21D1  0826               	movf	___aomod@divisor+6,w
  9430  21D2  3BAE               	subwfb	___aomod@dividend+6,f
  9431  21D3  0827               	movf	___aomod@divisor+7,w
  9432  21D4  3BAF               	subwfb	___aomod@dividend+7,f
  9433  21D5                     l6424:	
  9434  21D5  36A7               	lsrf	___aomod@divisor+7,f
  9435  21D6  0CA6               	rrf	___aomod@divisor+6,f
  9436  21D7  0CA5               	rrf	___aomod@divisor+5,f
  9437  21D8  0CA4               	rrf	___aomod@divisor+4,f
  9438  21D9  0CA3               	rrf	___aomod@divisor+3,f
  9439  21DA  0CA2               	rrf	___aomod@divisor+2,f
  9440  21DB  0CA1               	rrf	___aomod@divisor+1,f
  9441  21DC  0CA0               	rrf	___aomod@divisor,f
  9442  21DD  3001               	movlw	1
  9443  21DE  02F2               	subwf	___aomod@counter,f
  9444  21DF  1D03               	btfss	3,2
  9445  21E0  29A5               	goto	l6420
  9446  21E1                     l6426:	
  9447  21E1  0873               	movf	___aomod@sign,w
  9448  21E2  1903               	btfsc	3,2
  9449  21E3  2A02               	goto	l960
  9450  21E4  09A8               	comf	___aomod@dividend,f
  9451  21E5  09A9               	comf	___aomod@dividend+1,f
  9452  21E6  09AA               	comf	___aomod@dividend+2,f
  9453  21E7  09AB               	comf	___aomod@dividend+3,f
  9454  21E8  09AC               	comf	___aomod@dividend+4,f
  9455  21E9  09AD               	comf	___aomod@dividend+5,f
  9456  21EA  09AE               	comf	___aomod@dividend+6,f
  9457  21EB  09AF               	comf	___aomod@dividend+7,f
  9458  21EC  0AA8               	incf	___aomod@dividend,f
  9459  21ED  1D03               	skipz
  9460  21EE  2A02               	goto	l960
  9461  21EF  0AA9               	incf	___aomod@dividend+1,f
  9462  21F0  1D03               	skipz
  9463  21F1  2A02               	goto	l960
  9464  21F2  0AAA               	incf	___aomod@dividend+2,f
  9465  21F3  1D03               	skipz
  9466  21F4  2A02               	goto	l960
  9467  21F5  0AAB               	incf	___aomod@dividend+3,f
  9468  21F6  1D03               	skipz
  9469  21F7  2A02               	goto	l960
  9470  21F8  0AAC               	incf	___aomod@dividend+4,f
  9471  21F9  1D03               	skipz
  9472  21FA  2A02               	goto	l960
  9473  21FB  0AAD               	incf	___aomod@dividend+5,f
  9474  21FC  1D03               	skipz
  9475  21FD  2A02               	goto	l960
  9476  21FE  0AAE               	incf	___aomod@dividend+6,f
  9477  21FF  1D03               	skipz
  9478  2200  2A02               	goto	l960
  9479  2201  0AAF               	incf	___aomod@dividend+7,f
  9480  2202                     l960:	
  9481  2202  0020               	movlb	0	; select bank0
  9482  2203  0828               	movf	___aomod@dividend,w
  9483  2204  00A0               	movwf	?___aomod
  9484  2205  0829               	movf	___aomod@dividend+1,w
  9485  2206  00A1               	movwf	?___aomod+1
  9486  2207  082A               	movf	___aomod@dividend+2,w
  9487  2208  00A2               	movwf	?___aomod+2
  9488  2209  082B               	movf	___aomod@dividend+3,w
  9489  220A  00A3               	movwf	?___aomod+3
  9490  220B  082C               	movf	___aomod@dividend+4,w
  9491  220C  00A4               	movwf	?___aomod+4
  9492  220D  082D               	movf	___aomod@dividend+5,w
  9493  220E  00A5               	movwf	?___aomod+5
  9494  220F  082E               	movf	___aomod@dividend+6,w
  9495  2210  00A6               	movwf	?___aomod+6
  9496  2211  082F               	movf	___aomod@dividend+7,w
  9497  2212  00A7               	movwf	?___aomod+7
  9498  2213  0008               	return
  9499  2214                     __end_of___aomod:	
  9500                           
  9501                           	psect	text22
  9502  23E6                     __ptext22:	
  9503 ;; *************** function ___aodiv *****************
  9504 ;; Defined at:
  9505 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  9506 ;; Parameters:    Size  Location     Type
  9507 ;;  divisor         8    0[BANK0 ] long long 
  9508 ;;  dividend        8    8[BANK0 ] long long 
  9509 ;; Auto vars:     Size  Location     Type
  9510 ;;  quotient        8    4[COMMON] long long 
  9511 ;;  sign            1    3[COMMON] unsigned char 
  9512 ;;  counter         1    2[COMMON] unsigned char 
  9513 ;; Return value:  Size  Location     Type
  9514 ;;                  8    0[BANK0 ] long long 
  9515 ;; Registers used:
  9516 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9517 ;; Tracked objects:
  9518 ;;		On entry : 0/0
  9519 ;;		On exit  : 0/0
  9520 ;;		Unchanged: 0/0
  9521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9522 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9523 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9524 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9525 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9526 ;;Total ram usage:       27 bytes
  9527 ;; Hardware stack levels used:    1
  9528 ;; Hardware stack levels required when called:    1
  9529 ;; This function calls:
  9530 ;;		Nothing
  9531 ;; This function is called by:
  9532 ;;		_dtoa
  9533 ;; This function uses a non-reentrant model
  9534 ;;
  9535                           
  9536                           
  9537                           ;psect for function ___aodiv
  9538  23E6                     ___aodiv:	
  9539                           
  9540                           ;incstack = 0
  9541                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  9542  23E6  01F3               	clrf	___aodiv@sign
  9543  23E7  3020               	movlw	low ___aodiv@divisor
  9544  23E8  0086               	movwf	6
  9545  23E9  3000               	movlw	high ___aodiv@divisor
  9546  23EA  0087               	movwf	7
  9547  23EB  3F47               	moviw [7]fsr1
  9548  23EC  00F1               	movwf	??___aodiv
  9549  23ED  1FF1               	btfss	??___aodiv,7
  9550  23EE  2C10               	goto	l6368
  9551  23EF  0020               	movlb	0	; select bank0
  9552  23F0  09A0               	comf	___aodiv@divisor,f
  9553  23F1  09A1               	comf	___aodiv@divisor+1,f
  9554  23F2  09A2               	comf	___aodiv@divisor+2,f
  9555  23F3  09A3               	comf	___aodiv@divisor+3,f
  9556  23F4  09A4               	comf	___aodiv@divisor+4,f
  9557  23F5  09A5               	comf	___aodiv@divisor+5,f
  9558  23F6  09A6               	comf	___aodiv@divisor+6,f
  9559  23F7  09A7               	comf	___aodiv@divisor+7,f
  9560  23F8  0AA0               	incf	___aodiv@divisor,f
  9561  23F9  1D03               	skipz
  9562  23FA  2C0E               	goto	u797lld
  9563  23FB  0AA1               	incf	___aodiv@divisor+1,f
  9564  23FC  1D03               	skipz
  9565  23FD  2C0E               	goto	u797lld
  9566  23FE  0AA2               	incf	___aodiv@divisor+2,f
  9567  23FF  1D03               	skipz
  9568  2400  2C0E               	goto	u797lld
  9569  2401  0AA3               	incf	___aodiv@divisor+3,f
  9570  2402  1D03               	skipz
  9571  2403  2C0E               	goto	u797lld
  9572  2404  0AA4               	incf	___aodiv@divisor+4,f
  9573  2405  1D03               	skipz
  9574  2406  2C0E               	goto	u797lld
  9575  2407  0AA5               	incf	___aodiv@divisor+5,f
  9576  2408  1D03               	skipz
  9577  2409  2C0E               	goto	u797lld
  9578  240A  0AA6               	incf	___aodiv@divisor+6,f
  9579  240B  1D03               	skipz
  9580  240C  2C0E               	goto	u797lld
  9581  240D  0AA7               	incf	___aodiv@divisor+7,f
  9582  240E                     u797lld:	
  9583  240E  01F3               	clrf	___aodiv@sign
  9584  240F  0AF3               	incf	___aodiv@sign,f
  9585  2410                     l6368:	
  9586  2410  3028               	movlw	low ___aodiv@dividend
  9587  2411  0086               	movwf	6
  9588  2412  3000               	movlw	high ___aodiv@dividend
  9589  2413  0087               	movwf	7
  9590  2414  3F47               	moviw [7]fsr1
  9591  2415  00F1               	movwf	??___aodiv
  9592  2416  1FF1               	btfss	??___aodiv,7
  9593  2417  2C3B               	goto	l6374
  9594  2418  0020               	movlb	0	; select bank0
  9595  2419  09A8               	comf	___aodiv@dividend,f
  9596  241A  09A9               	comf	___aodiv@dividend+1,f
  9597  241B  09AA               	comf	___aodiv@dividend+2,f
  9598  241C  09AB               	comf	___aodiv@dividend+3,f
  9599  241D  09AC               	comf	___aodiv@dividend+4,f
  9600  241E  09AD               	comf	___aodiv@dividend+5,f
  9601  241F  09AE               	comf	___aodiv@dividend+6,f
  9602  2420  09AF               	comf	___aodiv@dividend+7,f
  9603  2421  0AA8               	incf	___aodiv@dividend,f
  9604  2422  1D03               	skipz
  9605  2423  2C37               	goto	l6372
  9606  2424  0AA9               	incf	___aodiv@dividend+1,f
  9607  2425  1D03               	skipz
  9608  2426  2C37               	goto	l6372
  9609  2427  0AAA               	incf	___aodiv@dividend+2,f
  9610  2428  1D03               	skipz
  9611  2429  2C37               	goto	l6372
  9612  242A  0AAB               	incf	___aodiv@dividend+3,f
  9613  242B  1D03               	skipz
  9614  242C  2C37               	goto	l6372
  9615  242D  0AAC               	incf	___aodiv@dividend+4,f
  9616  242E  1D03               	skipz
  9617  242F  2C37               	goto	l6372
  9618  2430  0AAD               	incf	___aodiv@dividend+5,f
  9619  2431  1D03               	skipz
  9620  2432  2C37               	goto	l6372
  9621  2433  0AAE               	incf	___aodiv@dividend+6,f
  9622  2434  1D03               	skipz
  9623  2435  2C37               	goto	l6372
  9624  2436  0AAF               	incf	___aodiv@dividend+7,f
  9625  2437                     l6372:	
  9626  2437  3001               	movlw	1
  9627  2438  00F1               	movwf	??___aodiv
  9628  2439  0871               	movf	??___aodiv,w
  9629  243A  06F3               	xorwf	___aodiv@sign,f
  9630  243B                     l6374:	
  9631  243B  3074               	movlw	low ___aodiv@quotient
  9632  243C  0086               	movwf	6
  9633  243D  3000               	movlw	high ___aodiv@quotient
  9634  243E  0087               	movwf	7
  9635  243F  3008               	movlw	8
  9636  2440  00F1               	movwf	??___aodiv
  9637  2441  3000               	movlw	0
  9638  2442                     u8000:	
  9639  2442  001E               	movwi fsr1++
  9640  2443  0BF1               	decfsz	??___aodiv,f
  9641  2444  2C42               	goto	u8000
  9642  2445  0020               	movlb	0	; select bank0
  9643  2446  0820               	movf	___aodiv@divisor,w
  9644  2447  0421               	iorwf	___aodiv@divisor+1,w
  9645  2448  0422               	iorwf	___aodiv@divisor+2,w
  9646  2449  0423               	iorwf	___aodiv@divisor+3,w
  9647  244A  0424               	iorwf	___aodiv@divisor+4,w
  9648  244B  0425               	iorwf	___aodiv@divisor+5,w
  9649  244C  0426               	iorwf	___aodiv@divisor+6,w
  9650  244D  0427               	iorwf	___aodiv@divisor+7,w
  9651  244E  1903               	skipnz
  9652  244F  2CA6               	goto	l6396
  9653  2450  01F2               	clrf	___aodiv@counter
  9654  2451  0AF2               	incf	___aodiv@counter,f
  9655  2452                     l6384:	
  9656  2452  1BA7               	btfsc	___aodiv@divisor+7,7
  9657  2453  2C61               	goto	l6386
  9658  2454  35A0               	lslf	___aodiv@divisor,f
  9659  2455  0DA1               	rlf	___aodiv@divisor+1,f
  9660  2456  0DA2               	rlf	___aodiv@divisor+2,f
  9661  2457  0DA3               	rlf	___aodiv@divisor+3,f
  9662  2458  0DA4               	rlf	___aodiv@divisor+4,f
  9663  2459  0DA5               	rlf	___aodiv@divisor+5,f
  9664  245A  0DA6               	rlf	___aodiv@divisor+6,f
  9665  245B  0DA7               	rlf	___aodiv@divisor+7,f
  9666  245C  3001               	movlw	1
  9667  245D  00F1               	movwf	??___aodiv
  9668  245E  0871               	movf	??___aodiv,w
  9669  245F  07F2               	addwf	___aodiv@counter,f
  9670  2460  2C52               	goto	l6384
  9671  2461                     l6386:	
  9672  2461  35F4               	lslf	___aodiv@quotient,f
  9673  2462  0DF5               	rlf	___aodiv@quotient+1,f
  9674  2463  0DF6               	rlf	___aodiv@quotient+2,f
  9675  2464  0DF7               	rlf	___aodiv@quotient+3,f
  9676  2465  0DF8               	rlf	___aodiv@quotient+4,f
  9677  2466  0DF9               	rlf	___aodiv@quotient+5,f
  9678  2467  0DFA               	rlf	___aodiv@quotient+6,f
  9679  2468  0DFB               	rlf	___aodiv@quotient+7,f
  9680  2469  0827               	movf	___aodiv@divisor+7,w
  9681  246A  022F               	subwf	___aodiv@dividend+7,w
  9682  246B  1D03               	skipz
  9683  246C  2C87               	goto	u8035
  9684  246D  0826               	movf	___aodiv@divisor+6,w
  9685  246E  022E               	subwf	___aodiv@dividend+6,w
  9686  246F  1D03               	skipz
  9687  2470  2C87               	goto	u8035
  9688  2471  0825               	movf	___aodiv@divisor+5,w
  9689  2472  022D               	subwf	___aodiv@dividend+5,w
  9690  2473  1D03               	skipz
  9691  2474  2C87               	goto	u8035
  9692  2475  0824               	movf	___aodiv@divisor+4,w
  9693  2476  022C               	subwf	___aodiv@dividend+4,w
  9694  2477  1D03               	skipz
  9695  2478  2C87               	goto	u8035
  9696  2479  0823               	movf	___aodiv@divisor+3,w
  9697  247A  022B               	subwf	___aodiv@dividend+3,w
  9698  247B  1D03               	skipz
  9699  247C  2C87               	goto	u8035
  9700  247D  0822               	movf	___aodiv@divisor+2,w
  9701  247E  022A               	subwf	___aodiv@dividend+2,w
  9702  247F  1D03               	skipz
  9703  2480  2C87               	goto	u8035
  9704  2481  0821               	movf	___aodiv@divisor+1,w
  9705  2482  0229               	subwf	___aodiv@dividend+1,w
  9706  2483  1D03               	skipz
  9707  2484  2C87               	goto	u8035
  9708  2485  0820               	movf	___aodiv@divisor,w
  9709  2486  0228               	subwf	___aodiv@dividend,w
  9710  2487                     u8035:	
  9711  2487  1C03               	skipc
  9712  2488  2C9A               	goto	l6394
  9713  2489  0820               	movf	___aodiv@divisor,w
  9714  248A  02A8               	subwf	___aodiv@dividend,f
  9715  248B  0821               	movf	___aodiv@divisor+1,w
  9716  248C  3BA9               	subwfb	___aodiv@dividend+1,f
  9717  248D  0822               	movf	___aodiv@divisor+2,w
  9718  248E  3BAA               	subwfb	___aodiv@dividend+2,f
  9719  248F  0823               	movf	___aodiv@divisor+3,w
  9720  2490  3BAB               	subwfb	___aodiv@dividend+3,f
  9721  2491  0824               	movf	___aodiv@divisor+4,w
  9722  2492  3BAC               	subwfb	___aodiv@dividend+4,f
  9723  2493  0825               	movf	___aodiv@divisor+5,w
  9724  2494  3BAD               	subwfb	___aodiv@dividend+5,f
  9725  2495  0826               	movf	___aodiv@divisor+6,w
  9726  2496  3BAE               	subwfb	___aodiv@dividend+6,f
  9727  2497  0827               	movf	___aodiv@divisor+7,w
  9728  2498  3BAF               	subwfb	___aodiv@dividend+7,f
  9729  2499  1474               	bsf	___aodiv@quotient,0
  9730  249A                     l6394:	
  9731  249A  36A7               	lsrf	___aodiv@divisor+7,f
  9732  249B  0CA6               	rrf	___aodiv@divisor+6,f
  9733  249C  0CA5               	rrf	___aodiv@divisor+5,f
  9734  249D  0CA4               	rrf	___aodiv@divisor+4,f
  9735  249E  0CA3               	rrf	___aodiv@divisor+3,f
  9736  249F  0CA2               	rrf	___aodiv@divisor+2,f
  9737  24A0  0CA1               	rrf	___aodiv@divisor+1,f
  9738  24A1  0CA0               	rrf	___aodiv@divisor,f
  9739  24A2  3001               	movlw	1
  9740  24A3  02F2               	subwf	___aodiv@counter,f
  9741  24A4  1D03               	btfss	3,2
  9742  24A5  2C61               	goto	l6386
  9743  24A6                     l6396:	
  9744  24A6  0873               	movf	___aodiv@sign,w
  9745  24A7  1903               	btfsc	3,2
  9746  24A8  2CC7               	goto	l947
  9747  24A9  09F4               	comf	___aodiv@quotient,f
  9748  24AA  09F5               	comf	___aodiv@quotient+1,f
  9749  24AB  09F6               	comf	___aodiv@quotient+2,f
  9750  24AC  09F7               	comf	___aodiv@quotient+3,f
  9751  24AD  09F8               	comf	___aodiv@quotient+4,f
  9752  24AE  09F9               	comf	___aodiv@quotient+5,f
  9753  24AF  09FA               	comf	___aodiv@quotient+6,f
  9754  24B0  09FB               	comf	___aodiv@quotient+7,f
  9755  24B1  0AF4               	incf	___aodiv@quotient,f
  9756  24B2  1D03               	skipz
  9757  24B3  2CC7               	goto	l947
  9758  24B4  0AF5               	incf	___aodiv@quotient+1,f
  9759  24B5  1D03               	skipz
  9760  24B6  2CC7               	goto	l947
  9761  24B7  0AF6               	incf	___aodiv@quotient+2,f
  9762  24B8  1D03               	skipz
  9763  24B9  2CC7               	goto	l947
  9764  24BA  0AF7               	incf	___aodiv@quotient+3,f
  9765  24BB  1D03               	skipz
  9766  24BC  2CC7               	goto	l947
  9767  24BD  0AF8               	incf	___aodiv@quotient+4,f
  9768  24BE  1D03               	skipz
  9769  24BF  2CC7               	goto	l947
  9770  24C0  0AF9               	incf	___aodiv@quotient+5,f
  9771  24C1  1D03               	skipz
  9772  24C2  2CC7               	goto	l947
  9773  24C3  0AFA               	incf	___aodiv@quotient+6,f
  9774  24C4  1D03               	skipz
  9775  24C5  2CC7               	goto	l947
  9776  24C6  0AFB               	incf	___aodiv@quotient+7,f
  9777  24C7                     l947:	
  9778  24C7  0874               	movf	___aodiv@quotient,w
  9779  24C8  0020               	movlb	0	; select bank0
  9780  24C9  00A0               	movwf	?___aodiv
  9781  24CA  0875               	movf	___aodiv@quotient+1,w
  9782  24CB  00A1               	movwf	?___aodiv+1
  9783  24CC  0876               	movf	___aodiv@quotient+2,w
  9784  24CD  00A2               	movwf	?___aodiv+2
  9785  24CE  0877               	movf	___aodiv@quotient+3,w
  9786  24CF  00A3               	movwf	?___aodiv+3
  9787  24D0  0878               	movf	___aodiv@quotient+4,w
  9788  24D1  00A4               	movwf	?___aodiv+4
  9789  24D2  0879               	movf	___aodiv@quotient+5,w
  9790  24D3  00A5               	movwf	?___aodiv+5
  9791  24D4  087A               	movf	___aodiv@quotient+6,w
  9792  24D5  00A6               	movwf	?___aodiv+6
  9793  24D6  087B               	movf	___aodiv@quotient+7,w
  9794  24D7  00A7               	movwf	?___aodiv+7
  9795  24D8  0008               	return
  9796  24D9                     __end_of___aodiv:	
  9797                           
  9798                           	psect	text23
  9799  35B1                     __ptext23:	
  9800 ;; *************** function _ctoa *****************
  9801 ;; Defined at:
  9802 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9803 ;; Parameters:    Size  Location     Type
  9804 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  9805 ;;		 -> vsnprintf@f(6), 
  9806 ;;  c               1   18[BANK0 ] unsigned char 
  9807 ;; Auto vars:     Size  Location     Type
  9808 ;;  w               2   20[BANK0 ] int 
  9809 ;;  l               2    0        int 
  9810 ;; Return value:  Size  Location     Type
  9811 ;;                  2   16[BANK0 ] int 
  9812 ;; Registers used:
  9813 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9814 ;; Tracked objects:
  9815 ;;		On entry : 0/0
  9816 ;;		On exit  : 0/0
  9817 ;;		Unchanged: 0/0
  9818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9819 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9820 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9821 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9822 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9823 ;;Total ram usage:        6 bytes
  9824 ;; Hardware stack levels used:    1
  9825 ;; Hardware stack levels required when called:    5
  9826 ;; This function calls:
  9827 ;;		_pad
  9828 ;; This function is called by:
  9829 ;;		_vfpfcnvrt
  9830 ;; This function uses a non-reentrant model
  9831 ;;
  9832                           
  9833                           
  9834                           ;psect for function _ctoa
  9835  35B1                     _ctoa:	
  9836                           
  9837                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  9838                           
  9839                           ;incstack = 0
  9840                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9841  35B1  0022               	movlb	2	; select bank2
  9842  35B2  0865               	movf	_width^(0+256),w
  9843  35B3  0466               	iorwf	(_width+1)^(0+256),w
  9844  35B4  1D03               	btfss	3,2
  9845  35B5  2DBE               	goto	l6484
  9846  35B6  0866               	movf	(_width+1)^(0+256),w
  9847  35B7  0020               	movlb	0	; select bank0
  9848  35B8  00B5               	movwf	ctoa@w+1
  9849  35B9  0022               	movlb	2	; select bank2
  9850  35BA  0865               	movf	_width^(0+256),w
  9851  35BB  0020               	movlb	0	; select bank0
  9852  35BC  00B4               	movwf	ctoa@w
  9853  35BD  2DC7               	goto	l6486
  9854  35BE                     l6484:	
  9855  35BE  0865               	movf	_width^(0+256),w
  9856  35BF  3EFF               	addlw	255
  9857  35C0  0020               	movlb	0	; select bank0
  9858  35C1  00B4               	movwf	ctoa@w
  9859  35C2  30FF               	movlw	255
  9860  35C3  0022               	movlb	2	; select bank2
  9861  35C4  3D66               	addwfc	(_width+1)^(0+256),w
  9862  35C5  0020               	movlb	0	; select bank0
  9863  35C6  00B5               	movwf	ctoa@w+1
  9864  35C7                     l6486:	
  9865                           
  9866                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  9867  35C7  0832               	movf	ctoa@c,w
  9868  35C8  00B3               	movwf	??_ctoa
  9869  35C9  0833               	movf	??_ctoa,w
  9870  35CA  0024               	movlb	4	; select bank4
  9871  35CB  00A0               	movwf	_dbuf^(0+512)
  9872                           
  9873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  9874  35CC  01A1               	clrf	(_dbuf^(0+512)+1)
  9875                           
  9876                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  9877  35CD  0020               	movlb	0	; select bank0
  9878  35CE  0831               	movf	ctoa@fp+1,w
  9879  35CF  00A7               	movwf	pad@fp+1
  9880  35D0  0830               	movf	ctoa@fp,w
  9881  35D1  00A6               	movwf	pad@fp
  9882  35D2  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  9883  35D3  00B3               	movwf	??_ctoa
  9884  35D4  0833               	movf	??_ctoa,w
  9885  35D5  00A8               	movwf	pad@buf
  9886  35D6  0835               	movf	ctoa@w+1,w
  9887  35D7  00AA               	movwf	pad@p+1
  9888  35D8  0834               	movf	ctoa@w,w
  9889  35D9  00A9               	movwf	pad@p
  9890  35DA  31B7  275D         	fcall	_pad
  9891  35DC  0020               	movlb	0	; select bank0
  9892  35DD  0827               	movf	?_pad+1,w
  9893  35DE  00B1               	movwf	?_ctoa+1
  9894  35DF  0826               	movf	?_pad,w
  9895  35E0  00B0               	movwf	?_ctoa
  9896  35E1  0008               	return
  9897  35E2                     __end_of_ctoa:	
  9898                           
  9899                           	psect	text24
  9900  375D                     __ptext24:	
  9901 ;; *************** function _pad *****************
  9902 ;; Defined at:
  9903 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9904 ;; Parameters:    Size  Location     Type
  9905 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
  9906 ;;		 -> vsnprintf@f(6), 
  9907 ;;  buf             1    8[BANK0 ] PTR unsigned char 
  9908 ;;		 -> dbuf(32), 
  9909 ;;  p               2    9[BANK0 ] int 
  9910 ;; Auto vars:     Size  Location     Type
  9911 ;;  w               2   14[BANK0 ] int 
  9912 ;;  i               2   12[BANK0 ] int 
  9913 ;; Return value:  Size  Location     Type
  9914 ;;                  2    6[BANK0 ] int 
  9915 ;; Registers used:
  9916 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9917 ;; Tracked objects:
  9918 ;;		On entry : 0/0
  9919 ;;		On exit  : 0/0
  9920 ;;		Unchanged: 0/0
  9921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9922 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9923 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9924 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9925 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9926 ;;Total ram usage:       10 bytes
  9927 ;; Hardware stack levels used:    1
  9928 ;; Hardware stack levels required when called:    4
  9929 ;; This function calls:
  9930 ;;		_fputc
  9931 ;;		_fputs
  9932 ;;		_strlen
  9933 ;; This function is called by:
  9934 ;;		_ctoa
  9935 ;;		_dtoa
  9936 ;;		_otoa
  9937 ;;		_utoa
  9938 ;;		_xtoa
  9939 ;; This function uses a non-reentrant model
  9940 ;;
  9941                           
  9942                           
  9943                           ;psect for function _pad
  9944  375D                     _pad:	
  9945                           
  9946                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  9947                           
  9948                           ;incstack = 0
  9949                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9950  375D  0022               	movlb	2	; select bank2
  9951  375E  1C69               	btfss	_flags^(0+256),0
  9952  375F  2F69               	goto	l6304
  9953                           
  9954                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  9955  3760  0020               	movlb	0	; select bank0
  9956  3761  0827               	movf	pad@fp+1,w
  9957  3762  00FB               	movwf	fputs@fp+1
  9958  3763  0826               	movf	pad@fp,w
  9959  3764  00FA               	movwf	fputs@fp
  9960  3765  0828               	movf	pad@buf,w
  9961  3766  3187  27D7  31B7   	fcall	_fputs
  9962  3769                     l6304:	
  9963                           
  9964                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  9965  3769  0020               	movlb	0	; select bank0
  9966  376A  1BAA               	btfsc	pad@p+1,7
  9967  376B  2F71               	goto	l6308
  9968  376C  082A               	movf	pad@p+1,w
  9969  376D  00AF               	movwf	pad@w+1
  9970  376E  0829               	movf	pad@p,w
  9971  376F  00AE               	movwf	pad@w
  9972  3770  2F73               	goto	l639
  9973  3771                     l6308:	
  9974  3771  01AE               	clrf	pad@w
  9975  3772  01AF               	clrf	pad@w+1
  9976  3773                     l639:	
  9977                           
  9978                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  9979  3773  01AC               	clrf	pad@i
  9980  3774  01AD               	clrf	pad@i+1
  9981  3775                     l6314:	
  9982                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9983                           
  9984                           
  9985                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9986  3775  082D               	movf	pad@i+1,w
  9987  3776  3A80               	xorlw	128
  9988  3777  00AB               	movwf	??_pad
  9989  3778  082F               	movf	pad@w+1,w
  9990  3779  3A80               	xorlw	128
  9991  377A  022B               	subwf	??_pad,w
  9992  377B  1D03               	skipz
  9993  377C  2F7F               	goto	u7805
  9994  377D  082E               	movf	pad@w,w
  9995  377E  022C               	subwf	pad@i,w
  9996  377F                     u7805:	
  9997  377F  1803               	btfsc	3,0
  9998  3780  2F93               	goto	l642
  9999                           
 10000                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 10001  3781  3020               	movlw	32
 10002  3782  00F1               	movwf	fputc@c
 10003  3783  3000               	movlw	0
 10004  3784  00F2               	movwf	fputc@c+1
 10005  3785  0020               	movlb	0	; select bank0
 10006  3786  0827               	movf	pad@fp+1,w
 10007  3787  00F4               	movwf	fputc@fp+1
 10008  3788  0826               	movf	pad@fp,w
 10009  3789  00F3               	movwf	fputc@fp
 10010  378A  31A8  2041  31B7   	fcall	_fputc
 10011                           
 10012                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 10013  378D  3001               	movlw	1
 10014  378E  0020               	movlb	0	; select bank0
 10015  378F  07AC               	addwf	pad@i,f
 10016  3790  3000               	movlw	0
 10017  3791  3DAD               	addwfc	pad@i+1,f
 10018  3792  2F75               	goto	l6314
 10019  3793                     l642:	
 10020                           
 10021                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 10022  3793  0022               	movlb	2	; select bank2
 10023  3794  1869               	btfsc	_flags^(0+256),0
 10024  3795  2F9F               	goto	l6318
 10025                           
 10026                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 10027  3796  0020               	movlb	0	; select bank0
 10028  3797  0827               	movf	pad@fp+1,w
 10029  3798  00FB               	movwf	fputs@fp+1
 10030  3799  0826               	movf	pad@fp,w
 10031  379A  00FA               	movwf	fputs@fp
 10032  379B  0828               	movf	pad@buf,w
 10033  379C  3187  27D7  31B7   	fcall	_fputs
 10034  379F                     l6318:	
 10035                           
 10036                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 10037  379F  0020               	movlb	0	; select bank0
 10038  37A0  0828               	movf	pad@buf,w
 10039  37A1  00F1               	movwf	strlen@s
 10040  37A2  3002               	movlw	2
 10041  37A3  00F2               	movwf	strlen@s+1
 10042  37A4  31B4  2418         	fcall	_strlen
 10043  37A6  0020               	movlb	0	; select bank0
 10044  37A7  082E               	movf	pad@w,w
 10045  37A8  0771               	addwf	?_strlen,w
 10046  37A9  00A6               	movwf	?_pad
 10047  37AA  082F               	movf	pad@w+1,w
 10048  37AB  3D72               	addwfc	?_strlen+1,w
 10049  37AC  00A7               	movwf	?_pad+1
 10050  37AD  0008               	return
 10051  37AE                     __end_of_pad:	
 10052                           
 10053                           	psect	text25
 10054  3418                     __ptext25:	
 10055 ;; *************** function _strlen *****************
 10056 ;; Defined at:
 10057 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 10058 ;; Parameters:    Size  Location     Type
 10059 ;;  s               2    1[COMMON] PTR const unsigned char 
 10060 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), sp__logf(4), 
 10061 ;;		 -> adcGain(2), 
 10062 ;; Auto vars:     Size  Location     Type
 10063 ;;  a               2    3[COMMON] PTR const unsigned char 
 10064 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), sp__logf(4), 
 10065 ;;		 -> adcGain(2), 
 10066 ;; Return value:  Size  Location     Type
 10067 ;;                  2    1[COMMON] unsigned int 
 10068 ;; Registers used:
 10069 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10070 ;; Tracked objects:
 10071 ;;		On entry : 0/0
 10072 ;;		On exit  : 0/0
 10073 ;;		Unchanged: 0/0
 10074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10075 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10076 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10078 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10079 ;;Total ram usage:        4 bytes
 10080 ;; Hardware stack levels used:    1
 10081 ;; Hardware stack levels required when called:    1
 10082 ;; This function calls:
 10083 ;;		Nothing
 10084 ;; This function is called by:
 10085 ;;		_pad
 10086 ;;		_stoa
 10087 ;; This function uses a non-reentrant model
 10088 ;;
 10089                           
 10090                           
 10091                           ;psect for function _strlen
 10092  3418                     _strlen:	
 10093                           
 10094                           ;incstack = 0
 10095                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 10096  3418  0872               	movf	strlen@s+1,w
 10097  3419  00F4               	movwf	strlen@a+1
 10098  341A  0871               	movf	strlen@s,w
 10099  341B  00F3               	movwf	strlen@a
 10100  341C                     l6290:	
 10101  341C  0871               	movf	strlen@s,w
 10102  341D  0086               	movwf	6
 10103  341E  0872               	movf	strlen@s+1,w
 10104  341F  0087               	movwf	7
 10105  3420  0801               	movf	1,w
 10106  3421  1903               	btfsc	3,2
 10107  3422  2C28               	goto	l6292
 10108  3423  3001               	movlw	1
 10109  3424  07F1               	addwf	strlen@s,f
 10110  3425  3000               	movlw	0
 10111  3426  3DF2               	addwfc	strlen@s+1,f
 10112  3427  2C1C               	goto	l6290
 10113  3428                     l6292:	
 10114  3428  0873               	movf	strlen@a,w
 10115  3429  0271               	subwf	strlen@s,w
 10116  342A  00F1               	movwf	?_strlen
 10117  342B  0874               	movf	strlen@a+1,w
 10118  342C  3B72               	subwfb	strlen@s+1,w
 10119  342D  00F2               	movwf	?_strlen+1
 10120  342E  0008               	return
 10121  342F                     __end_of_strlen:	
 10122                           
 10123                           	psect	text26
 10124  07D7                     __ptext26:	
 10125 ;; *************** function _fputs *****************
 10126 ;; Defined at:
 10127 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 10128 ;; Parameters:    Size  Location     Type
 10129 ;;  s               1    wreg     PTR const unsigned char 
 10130 ;;		 -> dbuf(32), 
 10131 ;;  fp              2   10[COMMON] PTR struct _IO_FILE
 10132 ;;		 -> vsnprintf@f(6), 
 10133 ;; Auto vars:     Size  Location     Type
 10134 ;;  s               1    5[BANK0 ] PTR const unsigned char 
 10135 ;;		 -> dbuf(32), 
 10136 ;;  i               2    3[BANK0 ] int 
 10137 ;;  c               1    2[BANK0 ] unsigned char 
 10138 ;; Return value:  Size  Location     Type
 10139 ;;                  2   10[COMMON] int 
 10140 ;; Registers used:
 10141 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10142 ;; Tracked objects:
 10143 ;;		On entry : 0/0
 10144 ;;		On exit  : 0/0
 10145 ;;		Unchanged: 0/0
 10146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10147 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10148 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10149 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10150 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10151 ;;Total ram usage:        8 bytes
 10152 ;; Hardware stack levels used:    1
 10153 ;; Hardware stack levels required when called:    3
 10154 ;; This function calls:
 10155 ;;		_fputc
 10156 ;; This function is called by:
 10157 ;;		_pad
 10158 ;; This function uses a non-reentrant model
 10159 ;;
 10160                           
 10161                           
 10162                           ;psect for function _fputs
 10163  07D7                     _fputs:	
 10164                           
 10165                           ;incstack = 0
 10166                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10167                           ;fputs@s stored from wreg
 10168  07D7  0020               	movlb	0	; select bank0
 10169  07D8  00A5               	movwf	fputs@s
 10170  07D9  01A3               	clrf	fputs@i
 10171  07DA  01A4               	clrf	fputs@i+1
 10172  07DB                     l6284:	
 10173  07DB  0823               	movf	fputs@i,w
 10174  07DC  0725               	addwf	fputs@s,w
 10175  07DD  00A0               	movwf	??_fputs
 10176  07DE  0820               	movf	??_fputs,w
 10177  07DF  0086               	movwf	6
 10178  07E0  3002               	movlw	2	; select bank4/5
 10179  07E1  0087               	movwf	7
 10180  07E2  0801               	movf	1,w
 10181  07E3  00A1               	movwf	??_fputs+1
 10182  07E4  0821               	movf	??_fputs+1,w
 10183  07E5  00A2               	movwf	fputs@c
 10184  07E6  0822               	movf	fputs@c,w
 10185  07E7  1903               	btfsc	3,2
 10186  07E8  0008               	return
 10187  07E9  0822               	movf	fputs@c,w
 10188  07EA  00A0               	movwf	??_fputs
 10189  07EB  01A1               	clrf	??_fputs+1
 10190  07EC  0820               	movf	??_fputs,w
 10191  07ED  00F1               	movwf	fputc@c
 10192  07EE  0821               	movf	??_fputs+1,w
 10193  07EF  00F2               	movwf	fputc@c+1
 10194  07F0  087B               	movf	fputs@fp+1,w
 10195  07F1  00F4               	movwf	fputc@fp+1
 10196  07F2  087A               	movf	fputs@fp,w
 10197  07F3  00F3               	movwf	fputc@fp
 10198  07F4  31A8  2041  3187   	fcall	_fputc
 10199  07F7  3001               	movlw	1
 10200  07F8  0020               	movlb	0	; select bank0
 10201  07F9  07A3               	addwf	fputs@i,f
 10202  07FA  3000               	movlw	0
 10203  07FB  3DA4               	addwfc	fputs@i+1,f
 10204  07FC  2FDB               	goto	l6284
 10205  07FD                     __end_of_fputs:	
 10206                           
 10207                           	psect	text27
 10208  2841                     __ptext27:	
 10209 ;; *************** function _fputc *****************
 10210 ;; Defined at:
 10211 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 10212 ;; Parameters:    Size  Location     Type
 10213 ;;  c               2    1[COMMON] int 
 10214 ;;  fp              2    3[COMMON] PTR struct _IO_FILE
 10215 ;;		 -> vsnprintf@f(6), 
 10216 ;; Auto vars:     Size  Location     Type
 10217 ;;		None
 10218 ;; Return value:  Size  Location     Type
 10219 ;;                  2    1[COMMON] int 
 10220 ;; Registers used:
 10221 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10222 ;; Tracked objects:
 10223 ;;		On entry : 0/0
 10224 ;;		On exit  : 0/0
 10225 ;;		Unchanged: 0/0
 10226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10227 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10229 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10230 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10231 ;;Total ram usage:        9 bytes
 10232 ;; Hardware stack levels used:    1
 10233 ;; Hardware stack levels required when called:    2
 10234 ;; This function calls:
 10235 ;;		_putch
 10236 ;; This function is called by:
 10237 ;;		_pad
 10238 ;;		_stoa
 10239 ;;		_vfpfcnvrt
 10240 ;;		_fputs
 10241 ;; This function uses a non-reentrant model
 10242 ;;
 10243                           
 10244                           
 10245                           ;psect for function _fputc
 10246  2841                     _fputc:	
 10247                           
 10248                           ;incstack = 0
 10249                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10250  2841  0873               	movf	fputc@fp,w
 10251  2842  0474               	iorwf	fputc@fp+1,w
 10252  2843  1903               	btfsc	3,2
 10253  2844  2849               	goto	l6266
 10254  2845  0873               	movf	fputc@fp,w
 10255  2846  0474               	iorwf	fputc@fp+1,w
 10256  2847  1D03               	btfss	3,2
 10257  2848  284D               	goto	l6268
 10258  2849                     l6266:	
 10259  2849  0871               	movf	fputc@c,w
 10260  284A  3180  2003         	fcall	_putch
 10261  284C  0008               	return
 10262  284D                     l6268:	
 10263  284D  0873               	movf	fputc@fp,w
 10264  284E  0086               	movwf	6
 10265  284F  0874               	movf	fputc@fp+1,w
 10266  2850  0087               	movwf	7
 10267  2851  3144               	addfsr 1,4
 10268  2852  0016               	moviw fsr1++
 10269  2853  0401               	iorwf	1,w
 10270  2854  1903               	btfsc	3,2
 10271  2855  2874               	goto	l6272
 10272  2856  0873               	movf	fputc@fp,w
 10273  2857  0086               	movwf	6
 10274  2858  0874               	movf	fputc@fp+1,w
 10275  2859  0087               	movwf	7
 10276  285A  3144               	addfsr 1,4
 10277  285B  3F40               	moviw [0]fsr1
 10278  285C  00F5               	movwf	??_fputc
 10279  285D  3F41               	moviw [1]fsr1
 10280  285E  00F6               	movwf	??_fputc+1
 10281  285F  0873               	movf	fputc@fp,w
 10282  2860  0086               	movwf	6
 10283  2861  0874               	movf	fputc@fp+1,w
 10284  2862  0087               	movwf	7
 10285  2863  3142               	addfsr 1,2
 10286  2864  3F40               	moviw [0]fsr1
 10287  2865  00F7               	movwf	??_fputc+2
 10288  2866  3F41               	moviw [1]fsr1
 10289  2867  00F8               	movwf	??_fputc+3
 10290  2868  0878               	movf	??_fputc+3,w
 10291  2869  3A80               	xorlw	128
 10292  286A  00F9               	movwf	??_fputc+4
 10293  286B  0876               	movf	??_fputc+1,w
 10294  286C  3A80               	xorlw	128
 10295  286D  0279               	subwf	??_fputc+4,w
 10296  286E  1D03               	skipz
 10297  286F  2872               	goto	u7735
 10298  2870  0875               	movf	??_fputc,w
 10299  2871  0277               	subwf	??_fputc+2,w
 10300  2872                     u7735:	
 10301  2872  1803               	skipnc
 10302  2873  0008               	return
 10303  2874                     l6272:	
 10304  2874  0873               	movf	fputc@fp,w
 10305  2875  0086               	movwf	6
 10306  2876  0874               	movf	fputc@fp+1,w
 10307  2877  0087               	movwf	7
 10308  2878  3142               	addfsr 1,2
 10309  2879  0873               	movf	fputc@fp,w
 10310  287A  0084               	movwf	4
 10311  287B  0874               	movf	fputc@fp+1,w
 10312  287C  0085               	movwf	5
 10313  287D  3F40               	moviw [0]fsr1
 10314  287E  0700               	addwf	0,w
 10315  287F  00F5               	movwf	??_fputc
 10316  2880  3101               	addfsr 0,1
 10317  2881  3F41               	moviw [1]fsr1
 10318  2882  3D00               	addwfc	0,w
 10319  2883  00F6               	movwf	??_fputc+1
 10320  2884  0875               	movf	??_fputc,w
 10321  2885  0086               	movwf	6
 10322  2886  0876               	movf	??_fputc+1,w
 10323  2887  0087               	movwf	7
 10324  2888  0871               	movf	fputc@c,w
 10325  2889  0081               	movwf	1
 10326  288A  0873               	movf	fputc@fp,w
 10327  288B  0086               	movwf	6
 10328  288C  0874               	movf	fputc@fp+1,w
 10329  288D  0087               	movwf	7
 10330  288E  3142               	addfsr 1,2
 10331  288F  3001               	movlw	1
 10332  2890  0781               	addwf	1,f
 10333  2891  3141               	addfsr 1,1
 10334  2892  1803               	skipnc
 10335  2893  0A81               	incf	1,f
 10336  2894  0008               	return
 10337  2895                     __end_of_fputc:	
 10338                           
 10339                           	psect	text28
 10340  0003                     __ptext28:	
 10341 ;; *************** function _putch *****************
 10342 ;; Defined at:
 10343 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
 10344 ;; Parameters:    Size  Location     Type
 10345 ;;  c               1    wreg     unsigned char 
 10346 ;; Auto vars:     Size  Location     Type
 10347 ;;  c               1    0[COMMON] unsigned char 
 10348 ;; Return value:  Size  Location     Type
 10349 ;;                  1    wreg      void 
 10350 ;; Registers used:
 10351 ;;		wreg
 10352 ;; Tracked objects:
 10353 ;;		On entry : 0/0
 10354 ;;		On exit  : 0/0
 10355 ;;		Unchanged: 0/0
 10356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10361 ;;Total ram usage:        0 bytes
 10362 ;; Hardware stack levels used:    1
 10363 ;; Hardware stack levels required when called:    1
 10364 ;; This function calls:
 10365 ;;		Nothing
 10366 ;; This function is called by:
 10367 ;;		_fputc
 10368 ;; This function uses a non-reentrant model
 10369 ;;
 10370                           
 10371                           
 10372                           ;psect for function _putch
 10373  0003                     _putch:	
 10374                           
 10375                           ;incstack = 0
 10376                           ; Regs used in _putch: [wreg]
 10377  0003  0008               	return
 10378  0004                     __end_of_putch:	
 10379                           
 10380                           	psect	text29
 10381  2C69                     __ptext29:	
 10382 ;; *************** function _atoi *****************
 10383 ;; Defined at:
 10384 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 10385 ;; Parameters:    Size  Location     Type
 10386 ;;  s               2    7[COMMON] PTR const unsigned char 
 10387 ;;		 -> STR_22(18), STR_21(18), STR_20(19), STR_19(20), 
 10388 ;;		 -> STR_18(20), STR_17(21), STR_16(21), STR_15(21), 
 10389 ;;		 -> STR_14(22), STR_13(22), STR_12(21), STR_11(21), 
 10390 ;;		 -> STR_8(15), STR_7(15), STR_6(21), STR_5(21), 
 10391 ;;		 -> STR_4(21), STR_3(22), STR_2(71), STR_1(40), 
 10392 ;; Auto vars:     Size  Location     Type
 10393 ;;  n               2   11[BANK0 ] int 
 10394 ;;  neg             2    4[BANK0 ] int 
 10395 ;; Return value:  Size  Location     Type
 10396 ;;                  2    7[COMMON] int 
 10397 ;; Registers used:
 10398 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10399 ;; Tracked objects:
 10400 ;;		On entry : 0/0
 10401 ;;		On exit  : 0/0
 10402 ;;		Unchanged: 0/0
 10403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10404 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10405 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10406 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10407 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10408 ;;Total ram usage:       15 bytes
 10409 ;; Hardware stack levels used:    1
 10410 ;; Hardware stack levels required when called:    2
 10411 ;; This function calls:
 10412 ;;		___wmul
 10413 ;;		_isdigit
 10414 ;;		_isspace
 10415 ;; This function is called by:
 10416 ;;		_vfpfcnvrt
 10417 ;; This function uses a non-reentrant model
 10418 ;;
 10419                           
 10420                           
 10421                           ;psect for function _atoi
 10422  2C69                     _atoi:	
 10423                           
 10424                           ;incstack = 0
 10425                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10426  2C69  0020               	movlb	0	; select bank0
 10427  2C6A  01AB               	clrf	atoi@n
 10428  2C6B  01AC               	clrf	atoi@n+1
 10429  2C6C  01A4               	clrf	atoi@neg
 10430  2C6D  01A5               	clrf	atoi@neg+1
 10431  2C6E                     l6750:	
 10432  2C6E  01AA               	clrf	_atoi$1653
 10433  2C6F  0AAA               	incf	_atoi$1653,f
 10434  2C70  0877               	movf	atoi@s,w
 10435  2C71  0084               	movwf	4
 10436  2C72  0878               	movf	atoi@s+1,w
 10437  2C73  0085               	movwf	5
 10438  2C74  0012               	moviw fsr0++
 10439  2C75  3A20               	xorlw	32
 10440  2C76  1903               	btfsc	3,2
 10441  2C77  2C8A               	goto	l6758
 10442  2C78  0877               	movf	atoi@s,w
 10443  2C79  0084               	movwf	4
 10444  2C7A  0878               	movf	atoi@s+1,w
 10445  2C7B  0085               	movwf	5
 10446  2C7C  0800               	movf	0,w	;code access
 10447  2C7D  3EF7               	addlw	247
 10448  2C7E  00A0               	movwf	??_atoi
 10449  2C7F  30FF               	movlw	255
 10450  2C80  1803               	skipnc
 10451  2C81  3000               	movlw	0
 10452  2C82  00A1               	movwf	??_atoi+1
 10453  2C83  3000               	movlw	0
 10454  2C84  0221               	subwf	??_atoi+1,w
 10455  2C85  3005               	movlw	5
 10456  2C86  1903               	skipnz
 10457  2C87  0220               	subwf	??_atoi,w
 10458  2C88  1803               	btfsc	3,0
 10459  2C89  01AA               	clrf	_atoi$1653
 10460  2C8A                     l6758:	
 10461  2C8A  082A               	movf	_atoi$1653,w
 10462  2C8B  00A0               	movwf	??_atoi
 10463  2C8C  01A1               	clrf	??_atoi+1
 10464  2C8D  0820               	movf	??_atoi,w
 10465  2C8E  00A6               	movwf	_atoi$1652
 10466  2C8F  0821               	movf	??_atoi+1,w
 10467  2C90  00A7               	movwf	_atoi$1652+1
 10468  2C91  0826               	movf	_atoi$1652,w
 10469  2C92  0427               	iorwf	_atoi$1652+1,w
 10470  2C93  1903               	btfsc	3,2
 10471  2C94  2C9F               	goto	l6766
 10472  2C95  3001               	movlw	1
 10473  2C96  07F7               	addwf	atoi@s,f
 10474  2C97  3000               	movlw	0
 10475  2C98  3DF8               	addwfc	atoi@s+1,f
 10476  2C99  2C6E               	goto	l6750
 10477  2C9A                     l6764:	
 10478  2C9A  3001               	movlw	1
 10479  2C9B  00A4               	movwf	atoi@neg
 10480  2C9C  3000               	movlw	0
 10481  2C9D  00A5               	movwf	atoi@neg+1
 10482  2C9E  2CD2               	goto	l1322
 10483  2C9F                     l6766:	
 10484  2C9F  0877               	movf	atoi@s,w
 10485  2CA0  0084               	movwf	4
 10486  2CA1  0878               	movf	atoi@s+1,w
 10487  2CA2  0085               	movwf	5
 10488  2CA3  0800               	movf	0,w	;code access
 10489  2CA4  00A0               	movwf	??_atoi
 10490  2CA5  01A1               	clrf	??_atoi+1
 10491                           
 10492                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10493                           ; Switch size 1, requested type "simple"
 10494                           ; Number of cases is 1, Range of values is 0 to 0
 10495                           ; switch strategies available:
 10496                           ; Name         Instructions Cycles
 10497                           ; simple_byte            4     3 (average)
 10498                           ; direct_byte            8     6 (fixed)
 10499                           ; jumptable            260     6 (fixed)
 10500                           ;	Chosen strategy is simple_byte
 10501  2CA6  0821               	movf	??_atoi+1,w
 10502  2CA7  3A00               	xorlw	0	; case 0
 10503  2CA8  1903               	skipnz
 10504  2CA9  2CAB               	goto	l8608
 10505  2CAA  2CD6               	goto	l6772
 10506  2CAB                     l8608:	
 10507                           
 10508                           ; Switch size 1, requested type "simple"
 10509                           ; Number of cases is 2, Range of values is 43 to 45
 10510                           ; switch strategies available:
 10511                           ; Name         Instructions Cycles
 10512                           ; simple_byte            7     4 (average)
 10513                           ; direct_byte           15     9 (fixed)
 10514                           ; jumptable            263     9 (fixed)
 10515                           ;	Chosen strategy is simple_byte
 10516  2CAB  0820               	movf	??_atoi,w
 10517  2CAC  3A2B               	xorlw	43	; case 43
 10518  2CAD  1903               	skipnz
 10519  2CAE  2CD2               	goto	l1322
 10520  2CAF  3A06               	xorlw	6	; case 45
 10521  2CB0  1903               	skipnz
 10522  2CB1  2C9A               	goto	l6764
 10523  2CB2  2CD6               	goto	l6772
 10524  2CB3                     l6768:	
 10525  2CB3  0877               	movf	atoi@s,w
 10526  2CB4  0084               	movwf	4
 10527  2CB5  0878               	movf	atoi@s+1,w
 10528  2CB6  0085               	movwf	5
 10529  2CB7  0800               	movf	0,w	;code access
 10530  2CB8  00A0               	movwf	??_atoi
 10531  2CB9  082C               	movf	atoi@n+1,w
 10532  2CBA  00F2               	movwf	___wmul@multiplier+1
 10533  2CBB  082B               	movf	atoi@n,w
 10534  2CBC  00F1               	movwf	___wmul@multiplier
 10535  2CBD  300A               	movlw	10
 10536  2CBE  00F3               	movwf	___wmul@multiplicand
 10537  2CBF  3000               	movlw	0
 10538  2CC0  00F4               	movwf	___wmul@multiplicand+1
 10539  2CC1  31B4  24A7  31AC   	fcall	___wmul
 10540  2CC4  0872               	movf	?___wmul+1,w
 10541  2CC5  0020               	movlb	0	; select bank0
 10542  2CC6  00A2               	movwf	??_atoi+2
 10543  2CC7  0820               	movf	??_atoi,w
 10544  2CC8  0271               	subwf	?___wmul,w
 10545  2CC9  00A1               	movwf	??_atoi+1
 10546  2CCA  1C03               	skipc
 10547  2CCB  03A2               	decf	??_atoi+2,f
 10548  2CCC  0821               	movf	??_atoi+1,w
 10549  2CCD  3E30               	addlw	48
 10550  2CCE  00AB               	movwf	atoi@n
 10551  2CCF  3000               	movlw	0
 10552  2CD0  3D22               	addwfc	??_atoi+2,w
 10553  2CD1  00AC               	movwf	atoi@n+1
 10554  2CD2                     l1322:	
 10555  2CD2  3001               	movlw	1
 10556  2CD3  07F7               	addwf	atoi@s,f
 10557  2CD4  3000               	movlw	0
 10558  2CD5  3DF8               	addwfc	atoi@s+1,f
 10559  2CD6                     l6772:	
 10560  2CD6  0877               	movf	atoi@s,w
 10561  2CD7  0084               	movwf	4
 10562  2CD8  0878               	movf	atoi@s+1,w
 10563  2CD9  0085               	movwf	5
 10564  2CDA  0800               	movf	0,w	;code access
 10565  2CDB  3ED0               	addlw	208
 10566  2CDC  00A0               	movwf	??_atoi
 10567  2CDD  30FF               	movlw	255
 10568  2CDE  1803               	skipnc
 10569  2CDF  3000               	movlw	0
 10570  2CE0  00A1               	movwf	??_atoi+1
 10571  2CE1  3000               	movlw	0
 10572  2CE2  0221               	subwf	??_atoi+1,w
 10573  2CE3  300A               	movlw	10
 10574  2CE4  1903               	skipnz
 10575  2CE5  0220               	subwf	??_atoi,w
 10576  2CE6  1803               	btfsc	3,0
 10577  2CE7  2CEA               	goto	u8910
 10578  2CE8  3001               	movlw	1
 10579  2CE9  2CEB               	goto	u8920
 10580  2CEA                     u8910:	
 10581  2CEA  3000               	movlw	0
 10582  2CEB                     u8920:	
 10583  2CEB  00A2               	movwf	??_atoi+2
 10584  2CEC  01A3               	clrf	??_atoi+3
 10585  2CED  0822               	movf	??_atoi+2,w
 10586  2CEE  00A8               	movwf	_atoi$1654
 10587  2CEF  0823               	movf	??_atoi+3,w
 10588  2CF0  00A9               	movwf	_atoi$1654+1
 10589  2CF1  0828               	movf	_atoi$1654,w
 10590  2CF2  0429               	iorwf	_atoi$1654+1,w
 10591  2CF3  1D03               	btfss	3,2
 10592  2CF4  2CB3               	goto	l6768
 10593  2CF5  0824               	movf	atoi@neg,w
 10594  2CF6  0425               	iorwf	atoi@neg+1,w
 10595  2CF7  1D03               	btfss	3,2
 10596  2CF8  2D05               	goto	l6782
 10597  2CF9  092B               	comf	atoi@n,w
 10598  2CFA  00A0               	movwf	??_atoi
 10599  2CFB  092C               	comf	atoi@n+1,w
 10600  2CFC  00A1               	movwf	??_atoi+1
 10601  2CFD  0AA0               	incf	??_atoi,f
 10602  2CFE  1903               	skipnz
 10603  2CFF  0AA1               	incf	??_atoi+1,f
 10604  2D00  0820               	movf	??_atoi,w
 10605  2D01  00F7               	movwf	?_atoi
 10606  2D02  0821               	movf	??_atoi+1,w
 10607  2D03  00F8               	movwf	?_atoi+1
 10608  2D04  0008               	return
 10609  2D05                     l6782:	
 10610  2D05  082C               	movf	atoi@n+1,w
 10611  2D06  00F8               	movwf	?_atoi+1
 10612  2D07  082B               	movf	atoi@n,w
 10613  2D08  00F7               	movwf	?_atoi
 10614  2D09  0008               	return
 10615  2D0A                     __end_of_atoi:	
 10616                           
 10617                           	psect	text30
 10618  34F8                     __ptext30:	
 10619 ;; *************** function _isspace *****************
 10620 ;; Defined at:
 10621 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 10622 ;; Parameters:    Size  Location     Type
 10623 ;;  c               2    1[COMMON] int 
 10624 ;; Auto vars:     Size  Location     Type
 10625 ;;		None
 10626 ;; Return value:  Size  Location     Type
 10627 ;;                  2    1[COMMON] int 
 10628 ;; Registers used:
 10629 ;;		wreg, status,2, status,0
 10630 ;; Tracked objects:
 10631 ;;		On entry : 0/0
 10632 ;;		On exit  : 0/0
 10633 ;;		Unchanged: 0/0
 10634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10635 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10636 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10637 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10638 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10639 ;;Total ram usage:        5 bytes
 10640 ;; Hardware stack levels used:    1
 10641 ;; Hardware stack levels required when called:    1
 10642 ;; This function calls:
 10643 ;;		Nothing
 10644 ;; This function is called by:
 10645 ;;		_atoi
 10646 ;; This function uses a non-reentrant model
 10647 ;;
 10648                           
 10649                           
 10650                           ;psect for function _isspace
 10651  34F8                     _isspace:	
 10652                           
 10653                           ;incstack = 0
 10654                           ; Regs used in _isspace: [wreg+status,2+status,0]
 10655  34F8  01F5               	clrf	_isspace$1679
 10656  34F9  0AF5               	incf	_isspace$1679,f
 10657  34FA  3020               	movlw	32
 10658  34FB  0671               	xorwf	isspace@c,w
 10659  34FC  0472               	iorwf	isspace@c+1,w
 10660  34FD  1903               	btfsc	3,2
 10661  34FE  2D0C               	goto	l6476
 10662  34FF  0871               	movf	isspace@c,w
 10663  3500  3EF7               	addlw	247
 10664  3501  00F3               	movwf	??_isspace
 10665  3502  30FF               	movlw	255
 10666  3503  3D72               	addwfc	isspace@c+1,w
 10667  3504  00F4               	movwf	??_isspace+1
 10668  3505  3000               	movlw	0
 10669  3506  0274               	subwf	??_isspace+1,w
 10670  3507  3005               	movlw	5
 10671  3508  1903               	skipnz
 10672  3509  0273               	subwf	??_isspace,w
 10673  350A  1803               	btfsc	3,0
 10674  350B  01F5               	clrf	_isspace$1679
 10675  350C                     l6476:	
 10676  350C  0875               	movf	_isspace$1679,w
 10677  350D  00F3               	movwf	??_isspace
 10678  350E  01F4               	clrf	??_isspace+1
 10679  350F  0873               	movf	??_isspace,w
 10680  3510  00F1               	movwf	?_isspace
 10681  3511  0874               	movf	??_isspace+1,w
 10682  3512  00F2               	movwf	?_isspace+1
 10683  3513  0008               	return
 10684  3514                     __end_of_isspace:	
 10685                           
 10686                           	psect	text31
 10687  3401                     __ptext31:	
 10688 ;; *************** function _isdigit *****************
 10689 ;; Defined at:
 10690 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 10691 ;; Parameters:    Size  Location     Type
 10692 ;;  c               2    1[COMMON] int 
 10693 ;; Auto vars:     Size  Location     Type
 10694 ;;		None
 10695 ;; Return value:  Size  Location     Type
 10696 ;;                  2    1[COMMON] int 
 10697 ;; Registers used:
 10698 ;;		wreg, status,2, status,0
 10699 ;; Tracked objects:
 10700 ;;		On entry : 0/0
 10701 ;;		On exit  : 0/0
 10702 ;;		Unchanged: 0/0
 10703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10704 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10706 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10707 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10708 ;;Total ram usage:        6 bytes
 10709 ;; Hardware stack levels used:    1
 10710 ;; Hardware stack levels required when called:    1
 10711 ;; This function calls:
 10712 ;;		Nothing
 10713 ;; This function is called by:
 10714 ;;		_vfpfcnvrt
 10715 ;;		_atoi
 10716 ;; This function uses a non-reentrant model
 10717 ;;
 10718                           
 10719                           
 10720                           ;psect for function _isdigit
 10721  3401                     _isdigit:	
 10722                           
 10723                           ;incstack = 0
 10724                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 10725  3401  0871               	movf	isdigit@c,w
 10726  3402  3ED0               	addlw	208
 10727  3403  00F3               	movwf	??_isdigit
 10728  3404  30FF               	movlw	255
 10729  3405  3D72               	addwfc	isdigit@c+1,w
 10730  3406  00F4               	movwf	??_isdigit+1
 10731  3407  3000               	movlw	0
 10732  3408  0274               	subwf	??_isdigit+1,w
 10733  3409  300A               	movlw	10
 10734  340A  1903               	skipnz
 10735  340B  0273               	subwf	??_isdigit,w
 10736  340C  1803               	btfsc	3,0
 10737  340D  2C10               	goto	u7900
 10738  340E  3001               	movlw	1
 10739  340F  2C11               	goto	u7910
 10740  3410                     u7900:	
 10741  3410  3000               	movlw	0
 10742  3411                     u7910:	
 10743  3411  00F5               	movwf	??_isdigit+2
 10744  3412  01F6               	clrf	??_isdigit+3
 10745  3413  0875               	movf	??_isdigit+2,w
 10746  3414  00F1               	movwf	?_isdigit
 10747  3415  0876               	movf	??_isdigit+3,w
 10748  3416  00F2               	movwf	?_isdigit+1
 10749  3417  0008               	return
 10750  3418                     __end_of_isdigit:	
 10751                           
 10752                           	psect	text32
 10753  348D                     __ptext32:	
 10754 ;; *************** function _EUSART_Write_Text *****************
 10755 ;; Defined at:
 10756 ;;		line 75 in file "EUSART.c"
 10757 ;; Parameters:    Size  Location     Type
 10758 ;;  text            2    2[COMMON] PTR unsigned char 
 10759 ;;		 -> STR_23(3), STR_10(3), STR_9(38), messageBuffer(127), 
 10760 ;; Auto vars:     Size  Location     Type
 10761 ;;  i               2    5[COMMON] int 
 10762 ;; Return value:  Size  Location     Type
 10763 ;;                  1    wreg      void 
 10764 ;; Registers used:
 10765 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10766 ;; Tracked objects:
 10767 ;;		On entry : 0/0
 10768 ;;		On exit  : 0/0
 10769 ;;		Unchanged: 0/0
 10770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10771 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10772 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10773 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10774 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10775 ;;Total ram usage:        5 bytes
 10776 ;; Hardware stack levels used:    1
 10777 ;; Hardware stack levels required when called:    2
 10778 ;; This function calls:
 10779 ;;		_EUSART_Write
 10780 ;; This function is called by:
 10781 ;;		_statemachine
 10782 ;;		_printcellParameters
 10783 ;;		_printotAFERegisters
 10784 ;; This function uses a non-reentrant model
 10785 ;;
 10786                           
 10787                           
 10788                           ;psect for function _EUSART_Write_Text
 10789  348D                     _EUSART_Write_Text:	
 10790                           
 10791                           ;EUSART.c: 75: void EUSART_Write_Text(char *text);EUSART.c: 76: {;EUSART.c: 77:   int i;
      +                          ;EUSART.c: 78:   for(i=0;text[i]!='\0';i++)
 10792                           
 10793                           ;incstack = 0
 10794                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10795  348D  01F5               	clrf	EUSART_Write_Text@i
 10796  348E  01F6               	clrf	EUSART_Write_Text@i+1
 10797  348F                     l8038:	
 10798  348F  0872               	movf	EUSART_Write_Text@text,w
 10799  3490  0775               	addwf	EUSART_Write_Text@i,w
 10800  3491  0084               	movwf	4
 10801  3492  0873               	movf	EUSART_Write_Text@text+1,w
 10802  3493  3D76               	addwfc	EUSART_Write_Text@i+1,w
 10803  3494  0085               	movwf	5
 10804  3495  0012               	moviw fsr0++
 10805  3496  1903               	btfsc	3,2
 10806  3497  0008               	return
 10807                           
 10808                           ;EUSART.c: 79:    EUSART_Write(text[i]);
 10809  3498  0872               	movf	EUSART_Write_Text@text,w
 10810  3499  0775               	addwf	EUSART_Write_Text@i,w
 10811  349A  0084               	movwf	4
 10812  349B  0873               	movf	EUSART_Write_Text@text+1,w
 10813  349C  3D76               	addwfc	EUSART_Write_Text@i+1,w
 10814  349D  0085               	movwf	5
 10815  349E  0800               	movf	0,w	;code access
 10816  349F  3188  2000  31B4   	fcall	_EUSART_Write
 10817  34A2  3001               	movlw	1
 10818  34A3  07F5               	addwf	EUSART_Write_Text@i,f
 10819  34A4  3000               	movlw	0
 10820  34A5  3DF6               	addwfc	EUSART_Write_Text@i+1,f
 10821  34A6  2C8F               	goto	l8038
 10822  34A7                     __end_of_EUSART_Write_Text:	
 10823                           
 10824                           	psect	text33
 10825  0800                     __ptext33:	
 10826 ;; *************** function _EUSART_Write *****************
 10827 ;; Defined at:
 10828 ;;		line 56 in file "EUSART.c"
 10829 ;; Parameters:    Size  Location     Type
 10830 ;;  txData          1    wreg     unsigned char 
 10831 ;; Auto vars:     Size  Location     Type
 10832 ;;  txData          1    1[COMMON] unsigned char 
 10833 ;; Return value:  Size  Location     Type
 10834 ;;                  1    wreg      void 
 10835 ;; Registers used:
 10836 ;;		wreg
 10837 ;; Tracked objects:
 10838 ;;		On entry : 0/0
 10839 ;;		On exit  : 0/0
 10840 ;;		Unchanged: 0/0
 10841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10843 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10845 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10846 ;;Total ram usage:        1 bytes
 10847 ;; Hardware stack levels used:    1
 10848 ;; Hardware stack levels required when called:    1
 10849 ;; This function calls:
 10850 ;;		Nothing
 10851 ;; This function is called by:
 10852 ;;		_EUSART_Write_Text
 10853 ;; This function uses a non-reentrant model
 10854 ;;
 10855                           
 10856                           
 10857                           ;psect for function _EUSART_Write
 10858  0800                     _EUSART_Write:	
 10859                           
 10860                           ;incstack = 0
 10861                           ; Regs used in _EUSART_Write: [wreg]
 10862                           ;EUSART_Write@txData stored from wreg
 10863  0800  00F1               	movwf	EUSART_Write@txData
 10864  0801                     l243:	
 10865                           ;EUSART.c: 59:     {;EUSART.c: 60:     }
 10866                           
 10867                           
 10868                           ;EUSART.c: 58:     while(0 == PIR1bits.TXIF)
 10869  0801  0020               	movlb	0	; select bank0
 10870  0802  1E11               	btfss	17,4	;volatile
 10871  0803  2801               	goto	l243
 10872                           
 10873                           ;EUSART.c: 62:     TX1REG = txData;
 10874  0804  0871               	movf	EUSART_Write@txData,w
 10875  0805  0023               	movlb	3	; select bank3
 10876  0806  009A               	movwf	26	;volatile
 10877  0807  0008               	return
 10878  0808                     __end_of_EUSART_Write:	
 10879                           
 10880                           	psect	text34
 10881  2006                     __ptext34:	
 10882 ;; *************** function _init_AFE *****************
 10883 ;; Defined at:
 10884 ;;		line 3 in file "BQ76920.c"
 10885 ;; Parameters:    Size  Location     Type
 10886 ;;		None
 10887 ;; Auto vars:     Size  Location     Type
 10888 ;;		None
 10889 ;; Return value:  Size  Location     Type
 10890 ;;                  1    wreg      void 
 10891 ;; Registers used:
 10892 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10893 ;; Tracked objects:
 10894 ;;		On entry : 0/0
 10895 ;;		On exit  : 0/0
 10896 ;;		Unchanged: 0/0
 10897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10902 ;;Total ram usage:        0 bytes
 10903 ;; Hardware stack levels used:    1
 10904 ;; Hardware stack levels required when called:    4
 10905 ;; This function calls:
 10906 ;;		_setCellOvervoltageProtection
 10907 ;;		_setCellUndervoltageProtection
 10908 ;;		_setOverCurrentDischargeProtection
 10909 ;;		_setShortCircuitProtection
 10910 ;;		_setShuntResistorValue
 10911 ;;		_setTemperatureLimitsint
 10912 ;; This function is called by:
 10913 ;;		_statemachine
 10914 ;; This function uses a non-reentrant model
 10915 ;;
 10916                           
 10917                           
 10918                           ;psect for function _init_AFE
 10919  2006                     _init_AFE:	
 10920                           
 10921                           ;BQ76920.c: 5:     setTemperatureLimitsint(-20, 45, 0, 45);
 10922                           
 10923                           ;incstack = 0
 10924                           ; Regs used in _init_AFE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10925  2006  30EC               	movlw	236
 10926  2007  0020               	movlb	0	; select bank0
 10927  2008  00A0               	movwf	setTemperatureLimitsint@minDischarge_degC
 10928  2009  30FF               	movlw	255
 10929  200A  00A1               	movwf	setTemperatureLimitsint@minDischarge_degC+1
 10930  200B  302D               	movlw	45
 10931  200C  00A2               	movwf	setTemperatureLimitsint@maxDischarge_degC
 10932  200D  3000               	movlw	0
 10933  200E  00A3               	movwf	setTemperatureLimitsint@maxDischarge_degC+1
 10934  200F  3000               	movlw	0
 10935  2010  00A4               	movwf	setTemperatureLimitsint@minCharge_degC
 10936  2011  00A5               	movwf	setTemperatureLimitsint@minCharge_degC+1
 10937  2012  302D               	movlw	45
 10938  2013  00A6               	movwf	setTemperatureLimitsint@maxCharge_degC
 10939  2014  3000               	movlw	0
 10940  2015  00A7               	movwf	setTemperatureLimitsint@maxCharge_degC+1
 10941  2016  31B7  2719  31A0   	fcall	_setTemperatureLimitsint
 10942                           
 10943                           ;BQ76920.c: 6:     setShuntResistorValue(0.02);
 10944  2019  303C               	movlw	60
 10945  201A  00F4               	movwf	setShuntResistorValue@res_mOhm+3
 10946  201B  30A3               	movlw	163
 10947  201C  00F3               	movwf	setShuntResistorValue@res_mOhm+2
 10948  201D  30D7               	movlw	215
 10949  201E  00F2               	movwf	setShuntResistorValue@res_mOhm+1
 10950  201F  300A               	movlw	10
 10951  2020  00F1               	movwf	setShuntResistorValue@res_mOhm
 10952  2021  31A8  2000  31A0   	fcall	_setShuntResistorValue
 10953                           
 10954                           ;BQ76920.c: 9:     setShortCircuitProtection(500, 200);
 10955  2024  3000               	movlw	0
 10956  2025  0020               	movlb	0	; select bank0
 10957  2026  00E9               	movwf	setShortCircuitProtection@current_mA+3
 10958  2027  3000               	movlw	0
 10959  2028  00E8               	movwf	setShortCircuitProtection@current_mA+2
 10960  2029  3001               	movlw	1
 10961  202A  00E7               	movwf	setShortCircuitProtection@current_mA+1
 10962  202B  30F4               	movlw	244
 10963  202C  00E6               	movwf	setShortCircuitProtection@current_mA
 10964  202D  30C8               	movlw	200
 10965  202E  00EA               	movwf	setShortCircuitProtection@delay_us
 10966  202F  3000               	movlw	0
 10967  2030  00EB               	movwf	setShortCircuitProtection@delay_us+1
 10968  2031  31A6  26E8  31A0   	fcall	_setShortCircuitProtection
 10969                           
 10970                           ;BQ76920.c: 14:     setOverCurrentDischargeProtection(10, 320);
 10971  2034  3000               	movlw	0
 10972  2035  0020               	movlb	0	; select bank0
 10973  2036  00E9               	movwf	setOverCurrentDischargeProtection@current_mA+3
 10974  2037  3000               	movlw	0
 10975  2038  00E8               	movwf	setOverCurrentDischargeProtection@current_mA+2
 10976  2039  3000               	movlw	0
 10977  203A  00E7               	movwf	setOverCurrentDischargeProtection@current_mA+1
 10978  203B  300A               	movlw	10
 10979  203C  00E6               	movwf	setOverCurrentDischargeProtection@current_mA
 10980  203D  3040               	movlw	64
 10981  203E  00EA               	movwf	setOverCurrentDischargeProtection@delay_ms
 10982  203F  3001               	movlw	1
 10983  2040  00EB               	movwf	setOverCurrentDischargeProtection@delay_ms+1
 10984  2041  31A5  25D3  31A0   	fcall	_setOverCurrentDischargeProtection
 10985                           
 10986                           ;BQ76920.c: 15:     setCellUndervoltageProtection(2900, 2);
 10987  2044  3054               	movlw	84
 10988  2045  0020               	movlb	0	; select bank0
 10989  2046  00B2               	movwf	setCellUndervoltageProtection@voltage_mV
 10990  2047  300B               	movlw	11
 10991  2048  00B3               	movwf	setCellUndervoltageProtection@voltage_mV+1
 10992  2049  3002               	movlw	2
 10993  204A  00B4               	movwf	setCellUndervoltageProtection@delay_s
 10994  204B  3000               	movlw	0
 10995  204C  00B5               	movwf	setCellUndervoltageProtection@delay_s+1
 10996  204D  31A0  205C  31A0   	fcall	_setCellUndervoltageProtection
 10997                           
 10998                           ;BQ76920.c: 16:     setCellOvervoltageProtection(4100,2);
 10999  2050  3004               	movlw	4
 11000  2051  0020               	movlb	0	; select bank0
 11001  2052  00B2               	movwf	setCellOvervoltageProtection@voltage_mV
 11002  2053  3010               	movlw	16
 11003  2054  00B3               	movwf	setCellOvervoltageProtection@voltage_mV+1
 11004  2055  3002               	movlw	2
 11005  2056  00B4               	movwf	setCellOvervoltageProtection@delay_s
 11006  2057  3000               	movlw	0
 11007  2058  00B5               	movwf	setCellOvervoltageProtection@delay_s+1
 11008  2059  31AF  272B         	fcall	_setCellOvervoltageProtection
 11009  205B  0008               	return
 11010  205C                     __end_of_init_AFE:	
 11011                           
 11012                           	psect	text35
 11013  3719                     __ptext35:	
 11014 ;; *************** function _setTemperatureLimitsint *****************
 11015 ;; Defined at:
 11016 ;;		line 61 in file "BQ76920.c"
 11017 ;; Parameters:    Size  Location     Type
 11018 ;;  minDischarge    2    0[BANK0 ] int 
 11019 ;;  maxDischarge    2    2[BANK0 ] int 
 11020 ;;  minCharge_de    2    4[BANK0 ] int 
 11021 ;;  maxCharge_de    2    6[BANK0 ] int 
 11022 ;; Auto vars:     Size  Location     Type
 11023 ;;		None
 11024 ;; Return value:  Size  Location     Type
 11025 ;;                  1    wreg      void 
 11026 ;; Registers used:
 11027 ;;		wreg, status,2, status,0, pclath, cstack
 11028 ;; Tracked objects:
 11029 ;;		On entry : 0/0
 11030 ;;		On exit  : 0/0
 11031 ;;		Unchanged: 0/0
 11032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11033 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11036 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11037 ;;Total ram usage:        8 bytes
 11038 ;; Hardware stack levels used:    1
 11039 ;; Hardware stack levels required when called:    2
 11040 ;; This function calls:
 11041 ;;		___wmul
 11042 ;; This function is called by:
 11043 ;;		_init_AFE
 11044 ;; This function uses a non-reentrant model
 11045 ;;
 11046                           
 11047                           
 11048                           ;psect for function _setTemperatureLimitsint
 11049  3719                     _setTemperatureLimitsint:	
 11050                           
 11051                           ;BQ76920.c: 63:     minCellTempDischarge = minDischarge_degC * 10;
 11052                           
 11053                           ;incstack = 0
 11054                           ; Regs used in _setTemperatureLimitsint: [wreg+status,2+status,0+pclath+cstack]
 11055  3719  0020               	movlb	0	; select bank0
 11056  371A  0821               	movf	setTemperatureLimitsint@minDischarge_degC+1,w
 11057  371B  00F2               	movwf	___wmul@multiplier+1
 11058  371C  0820               	movf	setTemperatureLimitsint@minDischarge_degC,w
 11059  371D  00F1               	movwf	___wmul@multiplier
 11060  371E  300A               	movlw	10
 11061  371F  00F3               	movwf	___wmul@multiplicand
 11062  3720  3000               	movlw	0
 11063  3721  00F4               	movwf	___wmul@multiplicand+1
 11064  3722  31B4  24A7  31B7   	fcall	___wmul
 11065  3725  0872               	movf	?___wmul+1,w
 11066  3726  0023               	movlb	3	; select bank3
 11067  3727  00CF               	movwf	(_minCellTempDischarge+1)^(0+384)
 11068  3728  0871               	movf	?___wmul,w
 11069  3729  00CE               	movwf	_minCellTempDischarge^(0+384)
 11070                           
 11071                           ;BQ76920.c: 64:     maxCellTempDischarge = maxDischarge_degC * 10;
 11072  372A  0020               	movlb	0	; select bank0
 11073  372B  0823               	movf	setTemperatureLimitsint@maxDischarge_degC+1,w
 11074  372C  00F2               	movwf	___wmul@multiplier+1
 11075  372D  0822               	movf	setTemperatureLimitsint@maxDischarge_degC,w
 11076  372E  00F1               	movwf	___wmul@multiplier
 11077  372F  300A               	movlw	10
 11078  3730  00F3               	movwf	___wmul@multiplicand
 11079  3731  3000               	movlw	0
 11080  3732  00F4               	movwf	___wmul@multiplicand+1
 11081  3733  31B4  24A7  31B7   	fcall	___wmul
 11082  3736  0872               	movf	?___wmul+1,w
 11083  3737  0023               	movlb	3	; select bank3
 11084  3738  00CB               	movwf	(_maxCellTempDischarge+1)^(0+384)
 11085  3739  0871               	movf	?___wmul,w
 11086  373A  00CA               	movwf	_maxCellTempDischarge^(0+384)
 11087                           
 11088                           ;BQ76920.c: 65:     minCellTempCharge = minCharge_degC * 10;
 11089  373B  0020               	movlb	0	; select bank0
 11090  373C  0825               	movf	setTemperatureLimitsint@minCharge_degC+1,w
 11091  373D  00F2               	movwf	___wmul@multiplier+1
 11092  373E  0824               	movf	setTemperatureLimitsint@minCharge_degC,w
 11093  373F  00F1               	movwf	___wmul@multiplier
 11094  3740  300A               	movlw	10
 11095  3741  00F3               	movwf	___wmul@multiplicand
 11096  3742  3000               	movlw	0
 11097  3743  00F4               	movwf	___wmul@multiplicand+1
 11098  3744  31B4  24A7  31B7   	fcall	___wmul
 11099  3747  0872               	movf	?___wmul+1,w
 11100  3748  0023               	movlb	3	; select bank3
 11101  3749  00D1               	movwf	(_minCellTempCharge+1)^(0+384)
 11102  374A  0871               	movf	?___wmul,w
 11103  374B  00D0               	movwf	_minCellTempCharge^(0+384)
 11104                           
 11105                           ;BQ76920.c: 66:     maxCellTempCharge = maxCharge_degC * 10;
 11106  374C  0020               	movlb	0	; select bank0
 11107  374D  0827               	movf	setTemperatureLimitsint@maxCharge_degC+1,w
 11108  374E  00F2               	movwf	___wmul@multiplier+1
 11109  374F  0826               	movf	setTemperatureLimitsint@maxCharge_degC,w
 11110  3750  00F1               	movwf	___wmul@multiplier
 11111  3751  300A               	movlw	10
 11112  3752  00F3               	movwf	___wmul@multiplicand
 11113  3753  3000               	movlw	0
 11114  3754  00F4               	movwf	___wmul@multiplicand+1
 11115  3755  31B4  24A7         	fcall	___wmul
 11116  3757  0872               	movf	?___wmul+1,w
 11117  3758  0023               	movlb	3	; select bank3
 11118  3759  00CD               	movwf	(_maxCellTempCharge+1)^(0+384)
 11119  375A  0871               	movf	?___wmul,w
 11120  375B  00CC               	movwf	_maxCellTempCharge^(0+384)
 11121  375C  0008               	return
 11122  375D                     __end_of_setTemperatureLimitsint:	
 11123                           
 11124                           	psect	text36
 11125  34A7                     __ptext36:	
 11126 ;; *************** function ___wmul *****************
 11127 ;; Defined at:
 11128 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 11129 ;; Parameters:    Size  Location     Type
 11130 ;;  multiplier      2    1[COMMON] unsigned int 
 11131 ;;  multiplicand    2    3[COMMON] unsigned int 
 11132 ;; Auto vars:     Size  Location     Type
 11133 ;;  product         2    5[COMMON] unsigned int 
 11134 ;; Return value:  Size  Location     Type
 11135 ;;                  2    1[COMMON] unsigned int 
 11136 ;; Registers used:
 11137 ;;		wreg, status,2, status,0
 11138 ;; Tracked objects:
 11139 ;;		On entry : 0/0
 11140 ;;		On exit  : 0/0
 11141 ;;		Unchanged: 0/0
 11142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11143 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11144 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11146 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11147 ;;Total ram usage:        6 bytes
 11148 ;; Hardware stack levels used:    1
 11149 ;; Hardware stack levels required when called:    1
 11150 ;; This function calls:
 11151 ;;		Nothing
 11152 ;; This function is called by:
 11153 ;;		_setTemperatureLimitsint
 11154 ;;		_atoi
 11155 ;; This function uses a non-reentrant model
 11156 ;;
 11157                           
 11158                           
 11159                           ;psect for function ___wmul
 11160  34A7                     ___wmul:	
 11161                           
 11162                           ;incstack = 0
 11163                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11164  34A7  01F5               	clrf	___wmul@product
 11165  34A8  01F6               	clrf	___wmul@product+1
 11166  34A9                     l6350:	
 11167  34A9  1C71               	btfss	___wmul@multiplier,0
 11168  34AA  2CAF               	goto	l847
 11169  34AB  0873               	movf	___wmul@multiplicand,w
 11170  34AC  07F5               	addwf	___wmul@product,f
 11171  34AD  0874               	movf	___wmul@multiplicand+1,w
 11172  34AE  3DF6               	addwfc	___wmul@product+1,f
 11173  34AF                     l847:	
 11174  34AF  3001               	movlw	1
 11175  34B0                     u7935:	
 11176  34B0  35F3               	lslf	___wmul@multiplicand,f
 11177  34B1  0DF4               	rlf	___wmul@multiplicand+1,f
 11178  34B2  0B89               	decfsz	9,f
 11179  34B3  2CB0               	goto	u7935
 11180  34B4  3001               	movlw	1
 11181  34B5                     u7945:	
 11182  34B5  36F2               	lsrf	___wmul@multiplier+1,f
 11183  34B6  0CF1               	rrf	___wmul@multiplier,f
 11184  34B7  0B89               	decfsz	9,f
 11185  34B8  2CB5               	goto	u7945
 11186  34B9  0871               	movf	___wmul@multiplier,w
 11187  34BA  0472               	iorwf	___wmul@multiplier+1,w
 11188  34BB  1D03               	btfss	3,2
 11189  34BC  2CA9               	goto	l6350
 11190  34BD  0876               	movf	___wmul@product+1,w
 11191  34BE  00F2               	movwf	?___wmul+1
 11192  34BF  0875               	movf	___wmul@product,w
 11193  34C0  00F1               	movwf	?___wmul
 11194  34C1  0008               	return
 11195  34C2                     __end_of___wmul:	
 11196                           
 11197                           	psect	text37
 11198  2800                     __ptext37:	
 11199 ;; *************** function _setShuntResistorValue *****************
 11200 ;; Defined at:
 11201 ;;		line 73 in file "BQ76920.c"
 11202 ;; Parameters:    Size  Location     Type
 11203 ;;  res_mOhm        4    1[COMMON] float 
 11204 ;; Auto vars:     Size  Location     Type
 11205 ;;		None
 11206 ;; Return value:  Size  Location     Type
 11207 ;;                  1    wreg      void 
 11208 ;; Registers used:
 11209 ;;		wreg
 11210 ;; Tracked objects:
 11211 ;;		On entry : 0/0
 11212 ;;		On exit  : 0/0
 11213 ;;		Unchanged: 0/0
 11214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11215 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11218 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11219 ;;Total ram usage:        4 bytes
 11220 ;; Hardware stack levels used:    1
 11221 ;; Hardware stack levels required when called:    1
 11222 ;; This function calls:
 11223 ;;		Nothing
 11224 ;; This function is called by:
 11225 ;;		_init_AFE
 11226 ;; This function uses a non-reentrant model
 11227 ;;
 11228                           
 11229                           
 11230                           ;psect for function _setShuntResistorValue
 11231  2800                     _setShuntResistorValue:	
 11232                           
 11233                           ;BQ76920.c: 74:     shuntResistorValue_mOhm = res_mOhm;
 11234                           
 11235                           ;incstack = 0
 11236                           ; Regs used in _setShuntResistorValue: [wreg]
 11237  2800  0874               	movf	setShuntResistorValue@res_mOhm+3,w
 11238  2801  0023               	movlb	3	; select bank3
 11239  2802  00B1               	movwf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384)
 11240  2803  0873               	movf	setShuntResistorValue@res_mOhm+2,w
 11241  2804  00B0               	movwf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384)
 11242  2805  0872               	movf	setShuntResistorValue@res_mOhm+1,w
 11243  2806  00AF               	movwf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384)
 11244  2807  0871               	movf	setShuntResistorValue@res_mOhm,w
 11245  2808  00AE               	movwf	BQ76920@shuntResistorValue_mOhm^(0+384)
 11246  2809  0008               	return
 11247  280A                     __end_of_setShuntResistorValue:	
 11248                           
 11249                           	psect	text38
 11250  26E8                     __ptext38:	
 11251 ;; *************** function _setShortCircuitProtection *****************
 11252 ;; Defined at:
 11253 ;;		line 81 in file "BQ76920.c"
 11254 ;; Parameters:    Size  Location     Type
 11255 ;;  current_mA      4   70[BANK0 ] long 
 11256 ;;  delay_us        2   74[BANK0 ] int 
 11257 ;; Auto vars:     Size  Location     Type
 11258 ;;  i               2   10[BANK1 ] int 
 11259 ;;  i               2    8[BANK1 ] int 
 11260 ;;  scaler          4    0[BANK1 ] float 
 11261 ;; Return value:  Size  Location     Type
 11262 ;;                  1    wreg      void 
 11263 ;; Registers used:
 11264 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11265 ;; Tracked objects:
 11266 ;;		On entry : 0/0
 11267 ;;		On exit  : 0/0
 11268 ;;		Unchanged: 0/0
 11269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11270 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11271 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11272 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11273 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11274 ;;Total ram usage:       21 bytes
 11275 ;; Hardware stack levels used:    1
 11276 ;; Hardware stack levels required when called:    3
 11277 ;; This function calls:
 11278 ;;		_I2C_writeRegister
 11279 ;;		___fldiv
 11280 ;;		___flge
 11281 ;;		___flmul
 11282 ;;		___xxtofl
 11283 ;; This function is called by:
 11284 ;;		_init_AFE
 11285 ;; This function uses a non-reentrant model
 11286 ;;
 11287                           
 11288                           
 11289                           ;psect for function _setShortCircuitProtection
 11290  26E8                     _setShortCircuitProtection:	
 11291                           
 11292                           ;BQ76920.c: 86:     float scaler = 1000.0;
 11293                           
 11294                           ;incstack = 0
 11295                           ; Regs used in _setShortCircuitProtection: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11296  26E8  3044               	movlw	68
 11297  26E9  0021               	movlb	1	; select bank1
 11298  26EA  00A3               	movwf	(setShortCircuitProtection@scaler+3)^(0+128)
 11299  26EB  307A               	movlw	122
 11300  26EC  00A2               	movwf	(setShortCircuitProtection@scaler+2)^(0+128)
 11301  26ED  3000               	movlw	0
 11302  26EE  00A1               	movwf	(setShortCircuitProtection@scaler+1)^(0+128)
 11303  26EF  3000               	movlw	0
 11304  26F0  00A0               	movwf	setShortCircuitProtection@scaler^(0+128)
 11305                           
 11306                           ;BQ76920.c: 87:     protect1.bits.SCD_THRESH = 0;
 11307  26F1  30F8               	movlw	-8
 11308  26F2  0023               	movlb	3	; select bank3
 11309  26F3  05D4               	andwf	BQ76920@protect1^(0+384),f
 11310                           
 11311                           ;BQ76920.c: 88:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 11312  26F4  0021               	movlb	1	; select bank1
 11313  26F5  01A8               	clrf	setShortCircuitProtection@i^(0+128)
 11314  26F6  01A9               	clrf	(setShortCircuitProtection@i+1)^(0+128)
 11315  26F7                     l8054:	
 11316                           
 11317                           ;BQ76920.c: 89:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 11318  26F7  0023               	movlb	3	; select bank3
 11319  26F8  0831               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 11320  26F9  0020               	movlb	0	; select bank0
 11321  26FA  00A9               	movwf	___flmul@b+3
 11322  26FB  0023               	movlb	3	; select bank3
 11323  26FC  0830               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 11324  26FD  0020               	movlb	0	; select bank0
 11325  26FE  00A8               	movwf	___flmul@b+2
 11326  26FF  0023               	movlb	3	; select bank3
 11327  2700  082F               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 11328  2701  0020               	movlb	0	; select bank0
 11329  2702  00A7               	movwf	___flmul@b+1
 11330  2703  0023               	movlb	3	; select bank3
 11331  2704  082E               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 11332  2705  0020               	movlb	0	; select bank0
 11333  2706  00A6               	movwf	___flmul@b
 11334  2707  0869               	movf	setShortCircuitProtection@current_mA+3,w
 11335  2708  00F4               	movwf	___xxtofl@val+3
 11336  2709  0868               	movf	setShortCircuitProtection@current_mA+2,w
 11337  270A  00F3               	movwf	___xxtofl@val+2
 11338  270B  0867               	movf	setShortCircuitProtection@current_mA+1,w
 11339  270C  00F2               	movwf	___xxtofl@val+1
 11340  270D  0866               	movf	setShortCircuitProtection@current_mA,w
 11341  270E  00F1               	movwf	___xxtofl@val
 11342  270F  3001               	movlw	1
 11343  2710  31AB  23D3  31A6   	fcall	___xxtofl
 11344  2713  0874               	movf	?___xxtofl+3,w
 11345  2714  0020               	movlb	0	; select bank0
 11346  2715  00AD               	movwf	___flmul@a+3
 11347  2716  0873               	movf	?___xxtofl+2,w
 11348  2717  00AC               	movwf	___flmul@a+2
 11349  2718  0872               	movf	?___xxtofl+1,w
 11350  2719  00AB               	movwf	___flmul@a+1
 11351  271A  0871               	movf	?___xxtofl,w
 11352  271B  00AA               	movwf	___flmul@a
 11353  271C  3190  2023  31A6   	fcall	___flmul
 11354  271F  0020               	movlb	0	; select bank0
 11355  2720  0829               	movf	?___flmul+3,w
 11356  2721  0021               	movlb	1	; select bank1
 11357  2722  00A7               	movwf	(_setShortCircuitProtection$2028+3)^(0+128)
 11358  2723  0020               	movlb	0	; select bank0
 11359  2724  0828               	movf	?___flmul+2,w
 11360  2725  0021               	movlb	1	; select bank1
 11361  2726  00A6               	movwf	(_setShortCircuitProtection$2028+2)^(0+128)
 11362  2727  0020               	movlb	0	; select bank0
 11363  2728  0827               	movf	?___flmul+1,w
 11364  2729  0021               	movlb	1	; select bank1
 11365  272A  00A5               	movwf	(_setShortCircuitProtection$2028+1)^(0+128)
 11366  272B  0020               	movlb	0	; select bank0
 11367  272C  0826               	movf	?___flmul,w
 11368  272D  0021               	movlb	1	; select bank1
 11369  272E  00A4               	movwf	_setShortCircuitProtection$2028^(0+128)
 11370                           
 11371                           ;BQ76920.c: 89:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 11372  272F  3044               	movlw	68
 11373  2730  0020               	movlb	0	; select bank0
 11374  2731  00C3               	movwf	___fldiv@a+3
 11375  2732  307A               	movlw	122
 11376  2733  00C2               	movwf	___fldiv@a+2
 11377  2734  3000               	movlw	0
 11378  2735  00C1               	movwf	___fldiv@a+1
 11379  2736  3000               	movlw	0
 11380  2737  00C0               	movwf	___fldiv@a
 11381  2738  0021               	movlb	1	; select bank1
 11382  2739  0823               	movf	(setShortCircuitProtection@scaler+3)^(0+128),w
 11383  273A  0020               	movlb	0	; select bank0
 11384  273B  00A9               	movwf	___flmul@b+3
 11385  273C  0021               	movlb	1	; select bank1
 11386  273D  0822               	movf	(setShortCircuitProtection@scaler+2)^(0+128),w
 11387  273E  0020               	movlb	0	; select bank0
 11388  273F  00A8               	movwf	___flmul@b+2
 11389  2740  0021               	movlb	1	; select bank1
 11390  2741  0821               	movf	(setShortCircuitProtection@scaler+1)^(0+128),w
 11391  2742  0020               	movlb	0	; select bank0
 11392  2743  00A7               	movwf	___flmul@b+1
 11393  2744  0021               	movlb	1	; select bank1
 11394  2745  0820               	movf	setShortCircuitProtection@scaler^(0+128),w
 11395  2746  0020               	movlb	0	; select bank0
 11396  2747  00A6               	movwf	___flmul@b
 11397  2748  0021               	movlb	1	; select bank1
 11398  2749  0827               	movf	(_setShortCircuitProtection$2028+3)^(0+128),w
 11399  274A  0020               	movlb	0	; select bank0
 11400  274B  00AD               	movwf	___flmul@a+3
 11401  274C  0021               	movlb	1	; select bank1
 11402  274D  0826               	movf	(_setShortCircuitProtection$2028+2)^(0+128),w
 11403  274E  0020               	movlb	0	; select bank0
 11404  274F  00AC               	movwf	___flmul@a+2
 11405  2750  0021               	movlb	1	; select bank1
 11406  2751  0825               	movf	(_setShortCircuitProtection$2028+1)^(0+128),w
 11407  2752  0020               	movlb	0	; select bank0
 11408  2753  00AB               	movwf	___flmul@a+1
 11409  2754  0021               	movlb	1	; select bank1
 11410  2755  0824               	movf	_setShortCircuitProtection$2028^(0+128),w
 11411  2756  0020               	movlb	0	; select bank0
 11412  2757  00AA               	movwf	___flmul@a
 11413  2758  3190  2023  31A6   	fcall	___flmul
 11414  275B  0020               	movlb	0	; select bank0
 11415  275C  0829               	movf	?___flmul+3,w
 11416  275D  00C7               	movwf	___fldiv@b+3
 11417  275E  0828               	movf	?___flmul+2,w
 11418  275F  00C6               	movwf	___fldiv@b+2
 11419  2760  0827               	movf	?___flmul+1,w
 11420  2761  00C5               	movwf	___fldiv@b+1
 11421  2762  0826               	movf	?___flmul,w
 11422  2763  00C4               	movwf	___fldiv@b
 11423  2764  319C  24E2  31A6   	fcall	___fldiv
 11424  2767  0020               	movlb	0	; select bank0
 11425  2768  0843               	movf	?___fldiv+3,w
 11426  2769  00DD               	movwf	___flge@ff1+3
 11427  276A  0842               	movf	?___fldiv+2,w
 11428  276B  00DC               	movwf	___flge@ff1+2
 11429  276C  0841               	movf	?___fldiv+1,w
 11430  276D  00DB               	movwf	___flge@ff1+1
 11431  276E  0840               	movf	?___fldiv,w
 11432  276F  00DA               	movwf	___flge@ff1
 11433  2770  0021               	movlb	1	; select bank1
 11434  2771  0829               	movf	(setShortCircuitProtection@i+1)^(0+128),w
 11435  2772  0085               	movwf	5
 11436  2773  0828               	movf	setShortCircuitProtection@i^(0+128),w
 11437  2774  0084               	movwf	4
 11438  2775  3584               	lslf	4,f
 11439  2776  0D85               	rlf	5,f
 11440  2777  30BB               	movlw	low (_SCD_threshold_setting| (0+32768))
 11441  2778  0784               	addwf	4,f
 11442  2779  30B9               	movlw	high (_SCD_threshold_setting| (0+32768))
 11443  277A  3D85               	addwfc	5,f
 11444  277B  3F00               	moviw [0]fsr0
 11445  277C  0020               	movlb	0	; select bank0
 11446  277D  00EC               	movwf	??_setShortCircuitProtection
 11447  277E  3F01               	moviw [1]fsr0
 11448  277F  00ED               	movwf	??_setShortCircuitProtection+1
 11449  2780  086C               	movf	??_setShortCircuitProtection,w
 11450  2781  00F1               	movwf	___xxtofl@val
 11451  2782  086D               	movf	??_setShortCircuitProtection+1,w
 11452  2783  00F2               	movwf	___xxtofl@val+1
 11453  2784  0D89               	rlf	9,f
 11454  2785  3B89               	subwfb	9,f
 11455  2786  0989               	comf	9,f
 11456  2787  00F3               	movwf	___xxtofl@val+2
 11457  2788  00F4               	movwf	___xxtofl@val+3
 11458  2789  3001               	movlw	1
 11459  278A  31AB  23D3  31A6   	fcall	___xxtofl
 11460  278D  0874               	movf	?___xxtofl+3,w
 11461  278E  0020               	movlb	0	; select bank0
 11462  278F  00E1               	movwf	___flge@ff2+3
 11463  2790  0873               	movf	?___xxtofl+2,w
 11464  2791  00E0               	movwf	___flge@ff2+2
 11465  2792  0872               	movf	?___xxtofl+1,w
 11466  2793  00DF               	movwf	___flge@ff2+1
 11467  2794  0871               	movf	?___xxtofl,w
 11468  2795  00DE               	movwf	___flge@ff2
 11469  2796  31A9  21DC  31A6   	fcall	___flge
 11470  2799  1C03               	btfss	3,0
 11471  279A  2FA3               	goto	l8060
 11472                           
 11473                           ;BQ76920.c: 90:             protect1.bits.SCD_THRESH = i;
 11474  279B  0023               	movlb	3	; select bank3
 11475  279C  0854               	movf	BQ76920@protect1^(0+384),w
 11476  279D  0021               	movlb	1	; select bank1
 11477  279E  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 11478  279F  39F8               	andlw	-8
 11479  27A0  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 11480  27A1  0023               	movlb	3	; select bank3
 11481  27A2  00D4               	movwf	BQ76920@protect1^(0+384)
 11482  27A3                     l8060:	
 11483                           
 11484                           ;BQ76920.c: 92:     }
 11485  27A3  3001               	movlw	1
 11486  27A4  0021               	movlb	1	; select bank1
 11487  27A5  07A8               	addwf	setShortCircuitProtection@i^(0+128),f
 11488  27A6  3000               	movlw	0
 11489  27A7  3DA9               	addwfc	(setShortCircuitProtection@i+1)^(0+128),f
 11490  27A8  3000               	movlw	0
 11491  27A9  0229               	subwf	(setShortCircuitProtection@i+1)^(0+128),w
 11492  27AA  3007               	movlw	7
 11493  27AB  1903               	skipnz
 11494  27AC  0228               	subwf	setShortCircuitProtection@i^(0+128),w
 11495  27AD  1C03               	skipc
 11496  27AE  2EF7               	goto	l8054
 11497                           
 11498                           ;BQ76920.c: 94:     protect1.bits.SCD_DELAY = 0;
 11499  27AF  30E7               	movlw	-25
 11500  27B0  0023               	movlb	3	; select bank3
 11501  27B1  05D4               	andwf	BQ76920@protect1^(0+384),f
 11502                           
 11503                           ;BQ76920.c: 95:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 11504  27B2  0021               	movlb	1	; select bank1
 11505  27B3  01AA               	clrf	setShortCircuitProtection@i_972^(0+128)
 11506  27B4  01AB               	clrf	(setShortCircuitProtection@i_972+1)^(0+128)
 11507  27B5                     l8072:	
 11508                           
 11509                           ;BQ76920.c: 96:         if (delay_us >= SCD_delay_setting[i]) {
 11510  27B5  082B               	movf	(setShortCircuitProtection@i_972+1)^(0+128),w
 11511  27B6  0085               	movwf	5
 11512  27B7  082A               	movf	setShortCircuitProtection@i_972^(0+128),w
 11513  27B8  0084               	movwf	4
 11514  27B9  3584               	lslf	4,f
 11515  27BA  0D85               	rlf	5,f
 11516  27BB  30F9               	movlw	low (_SCD_delay_setting| (0+32768))
 11517  27BC  0784               	addwf	4,f
 11518  27BD  30B9               	movlw	high (_SCD_delay_setting| (0+32768))
 11519  27BE  3D85               	addwfc	5,f
 11520  27BF  3F00               	moviw [0]fsr0
 11521  27C0  0020               	movlb	0	; select bank0
 11522  27C1  00EC               	movwf	??_setShortCircuitProtection
 11523  27C2  3F01               	moviw [1]fsr0
 11524  27C3  00ED               	movwf	??_setShortCircuitProtection+1
 11525  27C4  086B               	movf	setShortCircuitProtection@delay_us+1,w
 11526  27C5  3A80               	xorlw	128
 11527  27C6  00EE               	movwf	??_setShortCircuitProtection+2
 11528  27C7  086D               	movf	??_setShortCircuitProtection+1,w
 11529  27C8  3A80               	xorlw	128
 11530  27C9  026E               	subwf	??_setShortCircuitProtection+2,w
 11531  27CA  1D03               	skipz
 11532  27CB  2FCE               	goto	u11165
 11533  27CC  086C               	movf	??_setShortCircuitProtection,w
 11534  27CD  026A               	subwf	setShortCircuitProtection@delay_us,w
 11535  27CE                     u11165:	
 11536  27CE  1C03               	skipc
 11537  27CF  2FDF               	goto	l8076
 11538                           
 11539                           ;BQ76920.c: 97:             protect1.bits.SCD_DELAY = i;
 11540  27D0  0021               	movlb	1	; select bank1
 11541  27D1  082A               	movf	setShortCircuitProtection@i_972^(0+128),w
 11542  27D2  0020               	movlb	0	; select bank0
 11543  27D3  00EC               	movwf	??_setShortCircuitProtection
 11544  27D4  0DEC               	rlf	??_setShortCircuitProtection,f
 11545  27D5  0DEC               	rlf	??_setShortCircuitProtection,f
 11546  27D6  0DEC               	rlf	??_setShortCircuitProtection,f
 11547  27D7  0023               	movlb	3	; select bank3
 11548  27D8  0854               	movf	BQ76920@protect1^(0+384),w
 11549  27D9  0020               	movlb	0	; select bank0
 11550  27DA  066C               	xorwf	??_setShortCircuitProtection,w
 11551  27DB  39E7               	andlw	-25
 11552  27DC  066C               	xorwf	??_setShortCircuitProtection,w
 11553  27DD  0023               	movlb	3	; select bank3
 11554  27DE  00D4               	movwf	BQ76920@protect1^(0+384)
 11555  27DF                     l8076:	
 11556                           
 11557                           ;BQ76920.c: 99:     }
 11558  27DF  3001               	movlw	1
 11559  27E0  0021               	movlb	1	; select bank1
 11560  27E1  07AA               	addwf	setShortCircuitProtection@i_972^(0+128),f
 11561  27E2  3000               	movlw	0
 11562  27E3  3DAB               	addwfc	(setShortCircuitProtection@i_972+1)^(0+128),f
 11563  27E4  3000               	movlw	0
 11564  27E5  022B               	subwf	(setShortCircuitProtection@i_972+1)^(0+128),w
 11565  27E6  3007               	movlw	7
 11566  27E7  1903               	skipnz
 11567  27E8  022A               	subwf	setShortCircuitProtection@i_972^(0+128),w
 11568  27E9  1C03               	skipc
 11569  27EA  2FB5               	goto	l8072
 11570                           
 11571                           ;BQ76920.c: 100:     protect1.bits.RSNS = 0;
 11572  27EB  0023               	movlb	3	; select bank3
 11573  27EC  13D4               	bcf	BQ76920@protect1^(0+384),7
 11574                           
 11575                           ;BQ76920.c: 102:     I2C_writeRegister(0x18, 0x06, protect1.regByte);
 11576  27ED  3018               	movlw	24
 11577  27EE  00F5               	movwf	I2C_writeRegister@slaveAddress
 11578  27EF  3000               	movlw	0
 11579  27F0  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 11580  27F1  3006               	movlw	6
 11581  27F2  00F7               	movwf	I2C_writeRegister@regAddress
 11582  27F3  3000               	movlw	0
 11583  27F4  00F8               	movwf	I2C_writeRegister@regAddress+1
 11584  27F5  0854               	movf	BQ76920@protect1^(0+384),w
 11585  27F6  0020               	movlb	0	; select bank0
 11586  27F7  00EC               	movwf	??_setShortCircuitProtection
 11587  27F8  01ED               	clrf	??_setShortCircuitProtection+1
 11588  27F9  086C               	movf	??_setShortCircuitProtection,w
 11589  27FA  00F9               	movwf	I2C_writeRegister@data
 11590  27FB  086D               	movf	??_setShortCircuitProtection+1,w
 11591  27FC  00FA               	movwf	I2C_writeRegister@data+1
 11592  27FD  31B5  2531         	fcall	_I2C_writeRegister
 11593  27FF  0008               	return
 11594  2800                     __end_of_setShortCircuitProtection:	
 11595                           
 11596                           	psect	text39
 11597  25D3                     __ptext39:	
 11598 ;; *************** function _setOverCurrentDischargeProtection *****************
 11599 ;; Defined at:
 11600 ;;		line 109 in file "BQ76920.c"
 11601 ;; Parameters:    Size  Location     Type
 11602 ;;  current_mA      4   70[BANK0 ] long 
 11603 ;;  delay_ms        2   74[BANK0 ] int 
 11604 ;; Auto vars:     Size  Location     Type
 11605 ;;  i               2   10[BANK1 ] int 
 11606 ;;  i               2    8[BANK1 ] int 
 11607 ;;  scaler          4    0[BANK1 ] float 
 11608 ;; Return value:  Size  Location     Type
 11609 ;;                  1    wreg      void 
 11610 ;; Registers used:
 11611 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11612 ;; Tracked objects:
 11613 ;;		On entry : 0/0
 11614 ;;		On exit  : 0/0
 11615 ;;		Unchanged: 0/0
 11616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11617 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11618 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11619 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11620 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11621 ;;Total ram usage:       21 bytes
 11622 ;; Hardware stack levels used:    1
 11623 ;; Hardware stack levels required when called:    3
 11624 ;; This function calls:
 11625 ;;		_I2C_writeRegister
 11626 ;;		___fldiv
 11627 ;;		___flge
 11628 ;;		___flmul
 11629 ;;		___xxtofl
 11630 ;; This function is called by:
 11631 ;;		_init_AFE
 11632 ;; This function uses a non-reentrant model
 11633 ;;
 11634                           
 11635                           
 11636                           ;psect for function _setOverCurrentDischargeProtection
 11637  25D3                     _setOverCurrentDischargeProtection:	
 11638                           
 11639                           ;BQ76920.c: 112:     float scaler = 1000.0;
 11640                           
 11641                           ;incstack = 0
 11642                           ; Regs used in _setOverCurrentDischargeProtection: [wreg-fsr0h+status,2+status,0+pclath+
      +                          cstack]
 11643  25D3  3044               	movlw	68
 11644  25D4  0021               	movlb	1	; select bank1
 11645  25D5  00A3               	movwf	(setOverCurrentDischargeProtection@scaler+3)^(0+128)
 11646  25D6  307A               	movlw	122
 11647  25D7  00A2               	movwf	(setOverCurrentDischargeProtection@scaler+2)^(0+128)
 11648  25D8  3000               	movlw	0
 11649  25D9  00A1               	movwf	(setOverCurrentDischargeProtection@scaler+1)^(0+128)
 11650  25DA  3000               	movlw	0
 11651  25DB  00A0               	movwf	setOverCurrentDischargeProtection@scaler^(0+128)
 11652                           
 11653                           ;BQ76920.c: 113:     protect2.bits.OCD_THRESH = 0;
 11654  25DC  30F0               	movlw	-16
 11655  25DD  0023               	movlb	3	; select bank3
 11656  25DE  05D3               	andwf	BQ76920@protect2^(0+384),f
 11657                           
 11658                           ;BQ76920.c: 114:     for (int i = 0; i < (sizeof(OCD_threshold_setting) / sizeof((OCD_th
      +                          reshold_setting)[0])) - 1; i++) {
 11659  25DF  0021               	movlb	1	; select bank1
 11660  25E0  01A8               	clrf	setOverCurrentDischargeProtection@i^(0+128)
 11661  25E1  01A9               	clrf	(setOverCurrentDischargeProtection@i+1)^(0+128)
 11662  25E2                     l8092:	
 11663                           
 11664                           ;BQ76920.c: 115:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 11665  25E2  0023               	movlb	3	; select bank3
 11666  25E3  0831               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 11667  25E4  0020               	movlb	0	; select bank0
 11668  25E5  00A9               	movwf	___flmul@b+3
 11669  25E6  0023               	movlb	3	; select bank3
 11670  25E7  0830               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 11671  25E8  0020               	movlb	0	; select bank0
 11672  25E9  00A8               	movwf	___flmul@b+2
 11673  25EA  0023               	movlb	3	; select bank3
 11674  25EB  082F               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 11675  25EC  0020               	movlb	0	; select bank0
 11676  25ED  00A7               	movwf	___flmul@b+1
 11677  25EE  0023               	movlb	3	; select bank3
 11678  25EF  082E               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 11679  25F0  0020               	movlb	0	; select bank0
 11680  25F1  00A6               	movwf	___flmul@b
 11681  25F2  0869               	movf	setOverCurrentDischargeProtection@current_mA+3,w
 11682  25F3  00F4               	movwf	___xxtofl@val+3
 11683  25F4  0868               	movf	setOverCurrentDischargeProtection@current_mA+2,w
 11684  25F5  00F3               	movwf	___xxtofl@val+2
 11685  25F6  0867               	movf	setOverCurrentDischargeProtection@current_mA+1,w
 11686  25F7  00F2               	movwf	___xxtofl@val+1
 11687  25F8  0866               	movf	setOverCurrentDischargeProtection@current_mA,w
 11688  25F9  00F1               	movwf	___xxtofl@val
 11689  25FA  3001               	movlw	1
 11690  25FB  31AB  23D3  31A5   	fcall	___xxtofl
 11691  25FE  0874               	movf	?___xxtofl+3,w
 11692  25FF  0020               	movlb	0	; select bank0
 11693  2600  00AD               	movwf	___flmul@a+3
 11694  2601  0873               	movf	?___xxtofl+2,w
 11695  2602  00AC               	movwf	___flmul@a+2
 11696  2603  0872               	movf	?___xxtofl+1,w
 11697  2604  00AB               	movwf	___flmul@a+1
 11698  2605  0871               	movf	?___xxtofl,w
 11699  2606  00AA               	movwf	___flmul@a
 11700  2607  3190  2023  31A5   	fcall	___flmul
 11701  260A  0020               	movlb	0	; select bank0
 11702  260B  0829               	movf	?___flmul+3,w
 11703  260C  0021               	movlb	1	; select bank1
 11704  260D  00A7               	movwf	(_setOverCurrentDischargeProtection$2029+3)^(0+128)
 11705  260E  0020               	movlb	0	; select bank0
 11706  260F  0828               	movf	?___flmul+2,w
 11707  2610  0021               	movlb	1	; select bank1
 11708  2611  00A6               	movwf	(_setOverCurrentDischargeProtection$2029+2)^(0+128)
 11709  2612  0020               	movlb	0	; select bank0
 11710  2613  0827               	movf	?___flmul+1,w
 11711  2614  0021               	movlb	1	; select bank1
 11712  2615  00A5               	movwf	(_setOverCurrentDischargeProtection$2029+1)^(0+128)
 11713  2616  0020               	movlb	0	; select bank0
 11714  2617  0826               	movf	?___flmul,w
 11715  2618  0021               	movlb	1	; select bank1
 11716  2619  00A4               	movwf	_setOverCurrentDischargeProtection$2029^(0+128)
 11717                           
 11718                           ;BQ76920.c: 115:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 11719  261A  3044               	movlw	68
 11720  261B  0020               	movlb	0	; select bank0
 11721  261C  00C3               	movwf	___fldiv@a+3
 11722  261D  307A               	movlw	122
 11723  261E  00C2               	movwf	___fldiv@a+2
 11724  261F  3000               	movlw	0
 11725  2620  00C1               	movwf	___fldiv@a+1
 11726  2621  3000               	movlw	0
 11727  2622  00C0               	movwf	___fldiv@a
 11728  2623  0021               	movlb	1	; select bank1
 11729  2624  0823               	movf	(setOverCurrentDischargeProtection@scaler+3)^(0+128),w
 11730  2625  0020               	movlb	0	; select bank0
 11731  2626  00A9               	movwf	___flmul@b+3
 11732  2627  0021               	movlb	1	; select bank1
 11733  2628  0822               	movf	(setOverCurrentDischargeProtection@scaler+2)^(0+128),w
 11734  2629  0020               	movlb	0	; select bank0
 11735  262A  00A8               	movwf	___flmul@b+2
 11736  262B  0021               	movlb	1	; select bank1
 11737  262C  0821               	movf	(setOverCurrentDischargeProtection@scaler+1)^(0+128),w
 11738  262D  0020               	movlb	0	; select bank0
 11739  262E  00A7               	movwf	___flmul@b+1
 11740  262F  0021               	movlb	1	; select bank1
 11741  2630  0820               	movf	setOverCurrentDischargeProtection@scaler^(0+128),w
 11742  2631  0020               	movlb	0	; select bank0
 11743  2632  00A6               	movwf	___flmul@b
 11744  2633  0021               	movlb	1	; select bank1
 11745  2634  0827               	movf	(_setOverCurrentDischargeProtection$2029+3)^(0+128),w
 11746  2635  0020               	movlb	0	; select bank0
 11747  2636  00AD               	movwf	___flmul@a+3
 11748  2637  0021               	movlb	1	; select bank1
 11749  2638  0826               	movf	(_setOverCurrentDischargeProtection$2029+2)^(0+128),w
 11750  2639  0020               	movlb	0	; select bank0
 11751  263A  00AC               	movwf	___flmul@a+2
 11752  263B  0021               	movlb	1	; select bank1
 11753  263C  0825               	movf	(_setOverCurrentDischargeProtection$2029+1)^(0+128),w
 11754  263D  0020               	movlb	0	; select bank0
 11755  263E  00AB               	movwf	___flmul@a+1
 11756  263F  0021               	movlb	1	; select bank1
 11757  2640  0824               	movf	_setOverCurrentDischargeProtection$2029^(0+128),w
 11758  2641  0020               	movlb	0	; select bank0
 11759  2642  00AA               	movwf	___flmul@a
 11760  2643  3190  2023  31A5   	fcall	___flmul
 11761  2646  0020               	movlb	0	; select bank0
 11762  2647  0829               	movf	?___flmul+3,w
 11763  2648  00C7               	movwf	___fldiv@b+3
 11764  2649  0828               	movf	?___flmul+2,w
 11765  264A  00C6               	movwf	___fldiv@b+2
 11766  264B  0827               	movf	?___flmul+1,w
 11767  264C  00C5               	movwf	___fldiv@b+1
 11768  264D  0826               	movf	?___flmul,w
 11769  264E  00C4               	movwf	___fldiv@b
 11770  264F  319C  24E2  31A5   	fcall	___fldiv
 11771  2652  0020               	movlb	0	; select bank0
 11772  2653  0843               	movf	?___fldiv+3,w
 11773  2654  00DD               	movwf	___flge@ff1+3
 11774  2655  0842               	movf	?___fldiv+2,w
 11775  2656  00DC               	movwf	___flge@ff1+2
 11776  2657  0841               	movf	?___fldiv+1,w
 11777  2658  00DB               	movwf	___flge@ff1+1
 11778  2659  0840               	movf	?___fldiv,w
 11779  265A  00DA               	movwf	___flge@ff1
 11780  265B  0021               	movlb	1	; select bank1
 11781  265C  0829               	movf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 11782  265D  0085               	movwf	5
 11783  265E  0828               	movf	setOverCurrentDischargeProtection@i^(0+128),w
 11784  265F  0084               	movwf	4
 11785  2660  3584               	lslf	4,f
 11786  2661  0D85               	rlf	5,f
 11787  2662  3097               	movlw	low (_OCD_threshold_setting| (0+32768))
 11788  2663  0784               	addwf	4,f
 11789  2664  30B8               	movlw	high (_OCD_threshold_setting| (0+32768))
 11790  2665  3D85               	addwfc	5,f
 11791  2666  3F00               	moviw [0]fsr0
 11792  2667  0020               	movlb	0	; select bank0
 11793  2668  00EC               	movwf	??_setOverCurrentDischargeProtection
 11794  2669  3F01               	moviw [1]fsr0
 11795  266A  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 11796  266B  086C               	movf	??_setOverCurrentDischargeProtection,w
 11797  266C  00F1               	movwf	___xxtofl@val
 11798  266D  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 11799  266E  00F2               	movwf	___xxtofl@val+1
 11800  266F  0D89               	rlf	9,f
 11801  2670  3B89               	subwfb	9,f
 11802  2671  0989               	comf	9,f
 11803  2672  00F3               	movwf	___xxtofl@val+2
 11804  2673  00F4               	movwf	___xxtofl@val+3
 11805  2674  3001               	movlw	1
 11806  2675  31AB  23D3  31A5   	fcall	___xxtofl
 11807  2678  0874               	movf	?___xxtofl+3,w
 11808  2679  0020               	movlb	0	; select bank0
 11809  267A  00E1               	movwf	___flge@ff2+3
 11810  267B  0873               	movf	?___xxtofl+2,w
 11811  267C  00E0               	movwf	___flge@ff2+2
 11812  267D  0872               	movf	?___xxtofl+1,w
 11813  267E  00DF               	movwf	___flge@ff2+1
 11814  267F  0871               	movf	?___xxtofl,w
 11815  2680  00DE               	movwf	___flge@ff2
 11816  2681  31A9  21DC  31A5   	fcall	___flge
 11817  2684  1C03               	btfss	3,0
 11818  2685  2E8E               	goto	l8098
 11819                           
 11820                           ;BQ76920.c: 116:             protect2.bits.OCD_THRESH = i;
 11821  2686  0023               	movlb	3	; select bank3
 11822  2687  0853               	movf	BQ76920@protect2^(0+384),w
 11823  2688  0021               	movlb	1	; select bank1
 11824  2689  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 11825  268A  39F0               	andlw	-16
 11826  268B  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 11827  268C  0023               	movlb	3	; select bank3
 11828  268D  00D3               	movwf	BQ76920@protect2^(0+384)
 11829  268E                     l8098:	
 11830                           
 11831                           ;BQ76920.c: 118:     }
 11832  268E  3001               	movlw	1
 11833  268F  0021               	movlb	1	; select bank1
 11834  2690  07A8               	addwf	setOverCurrentDischargeProtection@i^(0+128),f
 11835  2691  3000               	movlw	0
 11836  2692  3DA9               	addwfc	(setOverCurrentDischargeProtection@i+1)^(0+128),f
 11837  2693  3000               	movlw	0
 11838  2694  0229               	subwf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 11839  2695  300F               	movlw	15
 11840  2696  1903               	skipnz
 11841  2697  0228               	subwf	setOverCurrentDischargeProtection@i^(0+128),w
 11842  2698  1C03               	skipc
 11843  2699  2DE2               	goto	l8092
 11844                           
 11845                           ;BQ76920.c: 120:     protect2.bits.OCD_DELAY = 0;
 11846  269A  308F               	movlw	-113
 11847  269B  0023               	movlb	3	; select bank3
 11848  269C  05D3               	andwf	BQ76920@protect2^(0+384),f
 11849                           
 11850                           ;BQ76920.c: 121:     for (int i = 0; i < (sizeof(OCD_delay_setting) / sizeof((OCD_delay_
      +                          setting)[0])) - 1; i++) {
 11851  269D  0021               	movlb	1	; select bank1
 11852  269E  01AA               	clrf	setOverCurrentDischargeProtection@i_981^(0+128)
 11853  269F  01AB               	clrf	(setOverCurrentDischargeProtection@i_981+1)^(0+128)
 11854  26A0                     l8110:	
 11855                           
 11856                           ;BQ76920.c: 122:         if (delay_ms >= OCD_delay_setting[i]) {
 11857  26A0  082B               	movf	(setOverCurrentDischargeProtection@i_981+1)^(0+128),w
 11858  26A1  0085               	movwf	5
 11859  26A2  082A               	movf	setOverCurrentDischargeProtection@i_981^(0+128),w
 11860  26A3  0084               	movwf	4
 11861  26A4  3584               	lslf	4,f
 11862  26A5  0D85               	rlf	5,f
 11863  26A6  30AB               	movlw	low (_OCD_delay_setting| (0+32768))
 11864  26A7  0784               	addwf	4,f
 11865  26A8  30B9               	movlw	high (_OCD_delay_setting| (0+32768))
 11866  26A9  3D85               	addwfc	5,f
 11867  26AA  3F00               	moviw [0]fsr0
 11868  26AB  0020               	movlb	0	; select bank0
 11869  26AC  00EC               	movwf	??_setOverCurrentDischargeProtection
 11870  26AD  3F01               	moviw [1]fsr0
 11871  26AE  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 11872  26AF  086B               	movf	setOverCurrentDischargeProtection@delay_ms+1,w
 11873  26B0  3A80               	xorlw	128
 11874  26B1  00EE               	movwf	??_setOverCurrentDischargeProtection+2
 11875  26B2  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 11876  26B3  3A80               	xorlw	128
 11877  26B4  026E               	subwf	??_setOverCurrentDischargeProtection+2,w
 11878  26B5  1D03               	skipz
 11879  26B6  2EB9               	goto	u11205
 11880  26B7  086C               	movf	??_setOverCurrentDischargeProtection,w
 11881  26B8  026A               	subwf	setOverCurrentDischargeProtection@delay_ms,w
 11882  26B9                     u11205:	
 11883  26B9  1C03               	skipc
 11884  26BA  2EC8               	goto	l8114
 11885                           
 11886                           ;BQ76920.c: 123:             protect2.bits.OCD_DELAY = i;
 11887  26BB  0021               	movlb	1	; select bank1
 11888  26BC  082A               	movf	setOverCurrentDischargeProtection@i_981^(0+128),w
 11889  26BD  0020               	movlb	0	; select bank0
 11890  26BE  00EC               	movwf	??_setOverCurrentDischargeProtection
 11891  26BF  0EEC               	swapf	??_setOverCurrentDischargeProtection,f
 11892  26C0  0023               	movlb	3	; select bank3
 11893  26C1  0853               	movf	BQ76920@protect2^(0+384),w
 11894  26C2  0020               	movlb	0	; select bank0
 11895  26C3  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 11896  26C4  398F               	andlw	-113
 11897  26C5  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 11898  26C6  0023               	movlb	3	; select bank3
 11899  26C7  00D3               	movwf	BQ76920@protect2^(0+384)
 11900  26C8                     l8114:	
 11901                           
 11902                           ;BQ76920.c: 125:     }
 11903  26C8  3001               	movlw	1
 11904  26C9  0021               	movlb	1	; select bank1
 11905  26CA  07AA               	addwf	setOverCurrentDischargeProtection@i_981^(0+128),f
 11906  26CB  3000               	movlw	0
 11907  26CC  3DAB               	addwfc	(setOverCurrentDischargeProtection@i_981+1)^(0+128),f
 11908  26CD  3000               	movlw	0
 11909  26CE  022B               	subwf	(setOverCurrentDischargeProtection@i_981+1)^(0+128),w
 11910  26CF  3007               	movlw	7
 11911  26D0  1903               	skipnz
 11912  26D1  022A               	subwf	setOverCurrentDischargeProtection@i_981^(0+128),w
 11913  26D2  1C03               	skipc
 11914  26D3  2EA0               	goto	l8110
 11915                           
 11916                           ;BQ76920.c: 127:     I2C_writeRegister(0x18, 0x07, protect2.regByte);
 11917  26D4  3018               	movlw	24
 11918  26D5  00F5               	movwf	I2C_writeRegister@slaveAddress
 11919  26D6  3000               	movlw	0
 11920  26D7  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 11921  26D8  3007               	movlw	7
 11922  26D9  00F7               	movwf	I2C_writeRegister@regAddress
 11923  26DA  3000               	movlw	0
 11924  26DB  00F8               	movwf	I2C_writeRegister@regAddress+1
 11925  26DC  0023               	movlb	3	; select bank3
 11926  26DD  0853               	movf	BQ76920@protect2^(0+384),w
 11927  26DE  0020               	movlb	0	; select bank0
 11928  26DF  00EC               	movwf	??_setOverCurrentDischargeProtection
 11929  26E0  01ED               	clrf	??_setOverCurrentDischargeProtection+1
 11930  26E1  086C               	movf	??_setOverCurrentDischargeProtection,w
 11931  26E2  00F9               	movwf	I2C_writeRegister@data
 11932  26E3  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 11933  26E4  00FA               	movwf	I2C_writeRegister@data+1
 11934  26E5  31B5  2531         	fcall	_I2C_writeRegister
 11935  26E7  0008               	return
 11936  26E8                     __end_of_setOverCurrentDischargeProtection:	
 11937                           
 11938                           	psect	text40
 11939  29DC                     __ptext40:	
 11940 ;; *************** function ___flge *****************
 11941 ;; Defined at:
 11942 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 11943 ;; Parameters:    Size  Location     Type
 11944 ;;  ff1             4   58[BANK0 ] void 
 11945 ;;  ff2             4   62[BANK0 ] void 
 11946 ;; Auto vars:     Size  Location     Type
 11947 ;;		None
 11948 ;; Return value:  Size  Location     Type
 11949 ;;		None               void
 11950 ;; Registers used:
 11951 ;;		wreg, status,2, status,0
 11952 ;; Tracked objects:
 11953 ;;		On entry : 0/0
 11954 ;;		On exit  : 0/0
 11955 ;;		Unchanged: 0/0
 11956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11957 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11959 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11960 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11961 ;;Total ram usage:       12 bytes
 11962 ;; Hardware stack levels used:    1
 11963 ;; Hardware stack levels required when called:    1
 11964 ;; This function calls:
 11965 ;;		Nothing
 11966 ;; This function is called by:
 11967 ;;		_setShortCircuitProtection
 11968 ;;		_setOverCurrentDischargeProtection
 11969 ;; This function uses a non-reentrant model
 11970 ;;
 11971                           
 11972                           
 11973                           ;psect for function ___flge
 11974  29DC                     ___flge:	
 11975                           
 11976                           ;incstack = 0
 11977                           ; Regs used in ___flge: [wreg+status,2+status,0]
 11978  29DC  3000               	movlw	0
 11979  29DD  0020               	movlb	0	; select bank0
 11980  29DE  055A               	andwf	___flge@ff1,w
 11981  29DF  00E2               	movwf	??___flge
 11982  29E0  3000               	movlw	0
 11983  29E1  055B               	andwf	___flge@ff1+1,w
 11984  29E2  00E3               	movwf	??___flge+1
 11985  29E3  3080               	movlw	128
 11986  29E4  055C               	andwf	___flge@ff1+2,w
 11987  29E5  00E4               	movwf	??___flge+2
 11988  29E6  307F               	movlw	127
 11989  29E7  055D               	andwf	___flge@ff1+3,w
 11990  29E8  00E5               	movwf	??___flge+3
 11991  29E9  0865               	movf	??___flge+3,w
 11992  29EA  0464               	iorwf	??___flge+2,w
 11993  29EB  0463               	iorwf	??___flge+1,w
 11994  29EC  0462               	iorwf	??___flge,w
 11995  29ED  1D03               	skipz
 11996  29EE  29F7               	goto	l1025
 11997  29EF  3000               	movlw	0
 11998  29F0  00DD               	movwf	___flge@ff1+3
 11999  29F1  3000               	movlw	0
 12000  29F2  00DC               	movwf	___flge@ff1+2
 12001  29F3  3000               	movlw	0
 12002  29F4  00DB               	movwf	___flge@ff1+1
 12003  29F5  3000               	movlw	0
 12004  29F6  00DA               	movwf	___flge@ff1
 12005  29F7                     l1025:	
 12006  29F7  3000               	movlw	0
 12007  29F8  055E               	andwf	___flge@ff2,w
 12008  29F9  00E2               	movwf	??___flge
 12009  29FA  3000               	movlw	0
 12010  29FB  055F               	andwf	___flge@ff2+1,w
 12011  29FC  00E3               	movwf	??___flge+1
 12012  29FD  3080               	movlw	128
 12013  29FE  0560               	andwf	___flge@ff2+2,w
 12014  29FF  00E4               	movwf	??___flge+2
 12015  2A00  307F               	movlw	127
 12016  2A01  0561               	andwf	___flge@ff2+3,w
 12017  2A02  00E5               	movwf	??___flge+3
 12018  2A03  0865               	movf	??___flge+3,w
 12019  2A04  0464               	iorwf	??___flge+2,w
 12020  2A05  0463               	iorwf	??___flge+1,w
 12021  2A06  0462               	iorwf	??___flge,w
 12022  2A07  1D03               	skipz
 12023  2A08  2A11               	goto	l7926
 12024  2A09  3000               	movlw	0
 12025  2A0A  00E1               	movwf	___flge@ff2+3
 12026  2A0B  3000               	movlw	0
 12027  2A0C  00E0               	movwf	___flge@ff2+2
 12028  2A0D  3000               	movlw	0
 12029  2A0E  00DF               	movwf	___flge@ff2+1
 12030  2A0F  3000               	movlw	0
 12031  2A10  00DE               	movwf	___flge@ff2
 12032  2A11                     l7926:	
 12033  2A11  1FDD               	btfss	___flge@ff1+3,7
 12034  2A12  2A2B               	goto	l7930
 12035  2A13  3000               	movlw	0
 12036  2A14  00E2               	movwf	??___flge
 12037  2A15  3000               	movlw	0
 12038  2A16  00E3               	movwf	??___flge+1
 12039  2A17  3000               	movlw	0
 12040  2A18  00E4               	movwf	??___flge+2
 12041  2A19  3080               	movlw	128
 12042  2A1A  00E5               	movwf	??___flge+3
 12043  2A1B  085A               	movf	___flge@ff1,w
 12044  2A1C  02E2               	subwf	??___flge,f
 12045  2A1D  085B               	movf	___flge@ff1+1,w
 12046  2A1E  3BE3               	subwfb	??___flge+1,f
 12047  2A1F  085C               	movf	___flge@ff1+2,w
 12048  2A20  3BE4               	subwfb	??___flge+2,f
 12049  2A21  085D               	movf	___flge@ff1+3,w
 12050  2A22  3BE5               	subwfb	??___flge+3,f
 12051  2A23  0865               	movf	??___flge+3,w
 12052  2A24  00DD               	movwf	___flge@ff1+3
 12053  2A25  0864               	movf	??___flge+2,w
 12054  2A26  00DC               	movwf	___flge@ff1+2
 12055  2A27  0863               	movf	??___flge+1,w
 12056  2A28  00DB               	movwf	___flge@ff1+1
 12057  2A29  0862               	movf	??___flge,w
 12058  2A2A  00DA               	movwf	___flge@ff1
 12059  2A2B                     l7930:	
 12060  2A2B  1FE1               	btfss	___flge@ff2+3,7
 12061  2A2C  2A45               	goto	l1028
 12062  2A2D  3000               	movlw	0
 12063  2A2E  00E2               	movwf	??___flge
 12064  2A2F  3000               	movlw	0
 12065  2A30  00E3               	movwf	??___flge+1
 12066  2A31  3000               	movlw	0
 12067  2A32  00E4               	movwf	??___flge+2
 12068  2A33  3080               	movlw	128
 12069  2A34  00E5               	movwf	??___flge+3
 12070  2A35  085E               	movf	___flge@ff2,w
 12071  2A36  02E2               	subwf	??___flge,f
 12072  2A37  085F               	movf	___flge@ff2+1,w
 12073  2A38  3BE3               	subwfb	??___flge+1,f
 12074  2A39  0860               	movf	___flge@ff2+2,w
 12075  2A3A  3BE4               	subwfb	??___flge+2,f
 12076  2A3B  0861               	movf	___flge@ff2+3,w
 12077  2A3C  3BE5               	subwfb	??___flge+3,f
 12078  2A3D  0865               	movf	??___flge+3,w
 12079  2A3E  00E1               	movwf	___flge@ff2+3
 12080  2A3F  0864               	movf	??___flge+2,w
 12081  2A40  00E0               	movwf	___flge@ff2+2
 12082  2A41  0863               	movf	??___flge+1,w
 12083  2A42  00DF               	movwf	___flge@ff2+1
 12084  2A43  0862               	movf	??___flge,w
 12085  2A44  00DE               	movwf	___flge@ff2
 12086  2A45                     l1028:	
 12087  2A45  3080               	movlw	128
 12088  2A46  06DD               	xorwf	___flge@ff1+3,f
 12089  2A47  3080               	movlw	128
 12090  2A48  06E1               	xorwf	___flge@ff2+3,f
 12091  2A49  0861               	movf	___flge@ff2+3,w
 12092  2A4A  025D               	subwf	___flge@ff1+3,w
 12093  2A4B  1D03               	skipz
 12094  2A4C  0008               	return
 12095  2A4D  0860               	movf	___flge@ff2+2,w
 12096  2A4E  025C               	subwf	___flge@ff1+2,w
 12097  2A4F  1D03               	skipz
 12098  2A50  0008               	return
 12099  2A51  085F               	movf	___flge@ff2+1,w
 12100  2A52  025B               	subwf	___flge@ff1+1,w
 12101  2A53  1D03               	skipz
 12102  2A54  0008               	return
 12103  2A55  085E               	movf	___flge@ff2,w
 12104  2A56  025A               	subwf	___flge@ff1,w
 12105  2A57  0008               	return
 12106  2A58                     __end_of___flge:	
 12107                           
 12108                           	psect	text41
 12109  205C                     __ptext41:	
 12110 ;; *************** function _setCellUndervoltageProtection *****************
 12111 ;; Defined at:
 12112 ;;		line 133 in file "BQ76920.c"
 12113 ;; Parameters:    Size  Location     Type
 12114 ;;  voltage_mV      2   18[BANK0 ] int 
 12115 ;;  delay_s         2   20[BANK0 ] int 
 12116 ;; Auto vars:     Size  Location     Type
 12117 ;;  i               2   37[BANK0 ] int 
 12118 ;;  uv_trip         1   36[BANK0 ] unsigned char 
 12119 ;; Return value:  Size  Location     Type
 12120 ;;                  1    wreg      void 
 12121 ;; Registers used:
 12122 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12123 ;; Tracked objects:
 12124 ;;		On entry : 0/0
 12125 ;;		On exit  : 0/0
 12126 ;;		Unchanged: 0/0
 12127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12128 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12129 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12130 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12131 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12132 ;;Total ram usage:       21 bytes
 12133 ;; Hardware stack levels used:    1
 12134 ;; Hardware stack levels required when called:    3
 12135 ;; This function calls:
 12136 ;;		_I2C_writeRegister
 12137 ;;		___aldiv
 12138 ;;		___lmul
 12139 ;;		_readRegister
 12140 ;; This function is called by:
 12141 ;;		_init_AFE
 12142 ;; This function uses a non-reentrant model
 12143 ;;
 12144                           
 12145                           
 12146                           ;psect for function _setCellUndervoltageProtection
 12147  205C                     _setCellUndervoltageProtection:	
 12148                           
 12149                           ;BQ76920.c: 135:     minCellVoltage = voltage_mV;
 12150                           
 12151                           ;incstack = 0
 12152                           ; Regs used in _setCellUndervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+csta
      +                          ck]
 12153  205C  0020               	movlb	0	; select bank0
 12154  205D  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 12155  205E  0023               	movlb	3	; select bank3
 12156  205F  00C7               	movwf	(_minCellVoltage+1)^(0+384)
 12157  2060  0020               	movlb	0	; select bank0
 12158  2061  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 12159  2062  0023               	movlb	3	; select bank3
 12160  2063  00C6               	movwf	_minCellVoltage^(0+384)
 12161                           
 12162                           ;BQ76920.c: 137:     protect3.regByte = readRegister(0x18, 0x08);
 12163  2064  3018               	movlw	24
 12164  2065  00F5               	movwf	readRegister@slaveAddress
 12165  2066  3000               	movlw	0
 12166  2067  00F6               	movwf	readRegister@slaveAddress+1
 12167  2068  3008               	movlw	8
 12168  2069  00F7               	movwf	readRegister@regAddress
 12169  206A  3000               	movlw	0
 12170  206B  00F8               	movwf	readRegister@regAddress+1
 12171  206C  31B6  26AC  31A0   	fcall	_readRegister
 12172  206F  0875               	movf	?_readRegister,w
 12173  2070  0020               	movlb	0	; select bank0
 12174  2071  00B6               	movwf	??_setCellUndervoltageProtection
 12175  2072  0836               	movf	??_setCellUndervoltageProtection,w
 12176  2073  0023               	movlb	3	; select bank3
 12177  2074  00D2               	movwf	BQ76920@protect3^(0+384)
 12178                           
 12179                           ;BQ76920.c: 138:     uv_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 12180  2075  0022               	movlb	2	; select bank2
 12181  2076  086D               	movf	_adcGain^(0+256),w
 12182  2077  0020               	movlb	0	; select bank0
 12183  2078  00A4               	movwf	___aldiv@divisor
 12184  2079  0022               	movlb	2	; select bank2
 12185  207A  086E               	movf	(_adcGain+1)^(0+256),w
 12186  207B  0020               	movlb	0	; select bank0
 12187  207C  00A5               	movwf	___aldiv@divisor+1
 12188  207D  0D89               	rlf	9,f
 12189  207E  3B89               	subwfb	9,f
 12190  207F  0989               	comf	9,f
 12191  2080  00A6               	movwf	___aldiv@divisor+2
 12192  2081  00A7               	movwf	___aldiv@divisor+3
 12193  2082  0022               	movlb	2	; select bank2
 12194  2083  086B               	movf	_adcOffset^(0+256),w
 12195  2084  0020               	movlb	0	; select bank0
 12196  2085  00B6               	movwf	??_setCellUndervoltageProtection
 12197  2086  0022               	movlb	2	; select bank2
 12198  2087  086C               	movf	(_adcOffset+1)^(0+256),w
 12199  2088  0020               	movlb	0	; select bank0
 12200  2089  00B7               	movwf	??_setCellUndervoltageProtection+1
 12201  208A  3000               	movlw	0
 12202  208B  1BB7               	btfsc	??_setCellUndervoltageProtection+1,7
 12203  208C  30FF               	movlw	255
 12204  208D  00B8               	movwf	??_setCellUndervoltageProtection+2
 12205  208E  00B9               	movwf	??_setCellUndervoltageProtection+3
 12206  208F  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 12207  2090  00BA               	movwf	??_setCellUndervoltageProtection+4
 12208  2091  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 12209  2092  00BB               	movwf	??_setCellUndervoltageProtection+5
 12210  2093  3000               	movlw	0
 12211  2094  1BBB               	btfsc	??_setCellUndervoltageProtection+5,7
 12212  2095  30FF               	movlw	255
 12213  2096  00BC               	movwf	??_setCellUndervoltageProtection+6
 12214  2097  00BD               	movwf	??_setCellUndervoltageProtection+7
 12215  2098  0836               	movf	??_setCellUndervoltageProtection,w
 12216  2099  02BA               	subwf	??_setCellUndervoltageProtection+4,f
 12217  209A  0837               	movf	??_setCellUndervoltageProtection+1,w
 12218  209B  3BBB               	subwfb	??_setCellUndervoltageProtection+5,f
 12219  209C  0838               	movf	??_setCellUndervoltageProtection+2,w
 12220  209D  3BBC               	subwfb	??_setCellUndervoltageProtection+6,f
 12221  209E  0839               	movf	??_setCellUndervoltageProtection+3,w
 12222  209F  3BBD               	subwfb	??_setCellUndervoltageProtection+7,f
 12223  20A0  083D               	movf	??_setCellUndervoltageProtection+7,w
 12224  20A1  00F4               	movwf	___lmul@multiplier+3
 12225  20A2  083C               	movf	??_setCellUndervoltageProtection+6,w
 12226  20A3  00F3               	movwf	___lmul@multiplier+2
 12227  20A4  083B               	movf	??_setCellUndervoltageProtection+5,w
 12228  20A5  00F2               	movwf	___lmul@multiplier+1
 12229  20A6  083A               	movf	??_setCellUndervoltageProtection+4,w
 12230  20A7  00F1               	movwf	___lmul@multiplier
 12231  20A8  3000               	movlw	0
 12232  20A9  00F8               	movwf	___lmul@multiplicand+3
 12233  20AA  3000               	movlw	0
 12234  20AB  00F7               	movwf	___lmul@multiplicand+2
 12235  20AC  3003               	movlw	3
 12236  20AD  00F6               	movwf	___lmul@multiplicand+1
 12237  20AE  30E8               	movlw	232
 12238  20AF  00F5               	movwf	___lmul@multiplicand
 12239  20B0  31B6  2613  31A0   	fcall	___lmul
 12240  20B3  0874               	movf	?___lmul+3,w
 12241  20B4  0020               	movlb	0	; select bank0
 12242  20B5  00AB               	movwf	___aldiv@dividend+3
 12243  20B6  0873               	movf	?___lmul+2,w
 12244  20B7  00AA               	movwf	___aldiv@dividend+2
 12245  20B8  0872               	movf	?___lmul+1,w
 12246  20B9  00A9               	movwf	___aldiv@dividend+1
 12247  20BA  0871               	movf	?___lmul,w
 12248  20BB  00A8               	movwf	___aldiv@dividend
 12249  20BC  31AB  2351  31A0   	fcall	___aldiv
 12250  20BF  0020               	movlb	0	; select bank0
 12251  20C0  0824               	movf	?___aldiv,w
 12252  20C1  00BE               	movwf	??_setCellUndervoltageProtection+8
 12253  20C2  0825               	movf	?___aldiv+1,w
 12254  20C3  00BF               	movwf	??_setCellUndervoltageProtection+9
 12255  20C4  0826               	movf	?___aldiv+2,w
 12256  20C5  00C0               	movwf	??_setCellUndervoltageProtection+10
 12257  20C6  0827               	movf	?___aldiv+3,w
 12258  20C7  00C1               	movwf	??_setCellUndervoltageProtection+11
 12259  20C8  3004               	movlw	4
 12260  20C9  00C2               	movwf	??_setCellUndervoltageProtection+12
 12261  20CA                     u11225:	
 12262  20CA  37C1               	asrf	??_setCellUndervoltageProtection+11,f
 12263  20CB  0CC0               	rrf	??_setCellUndervoltageProtection+10,f
 12264  20CC  0CBF               	rrf	??_setCellUndervoltageProtection+9,f
 12265  20CD  0CBE               	rrf	??_setCellUndervoltageProtection+8,f
 12266  20CE  0BC2               	decfsz	??_setCellUndervoltageProtection+12,f
 12267  20CF  28CA               	goto	u11225
 12268  20D0  083E               	movf	??_setCellUndervoltageProtection+8,w
 12269  20D1  00C3               	movwf	??_setCellUndervoltageProtection+13
 12270  20D2  0843               	movf	??_setCellUndervoltageProtection+13,w
 12271  20D3  00C4               	movwf	setCellUndervoltageProtection@uv_trip
 12272                           
 12273                           ;BQ76920.c: 139:     uv_trip += 1;
 12274  20D4  3001               	movlw	1
 12275  20D5  00B6               	movwf	??_setCellUndervoltageProtection
 12276  20D6  0836               	movf	??_setCellUndervoltageProtection,w
 12277  20D7  07C4               	addwf	setCellUndervoltageProtection@uv_trip,f
 12278                           
 12279                           ;BQ76920.c: 140:     I2C_writeRegister(0x18, 0x0A, uv_trip);
 12280  20D8  3018               	movlw	24
 12281  20D9  00F5               	movwf	I2C_writeRegister@slaveAddress
 12282  20DA  3000               	movlw	0
 12283  20DB  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12284  20DC  300A               	movlw	10
 12285  20DD  00F7               	movwf	I2C_writeRegister@regAddress
 12286  20DE  3000               	movlw	0
 12287  20DF  00F8               	movwf	I2C_writeRegister@regAddress+1
 12288  20E0  0844               	movf	setCellUndervoltageProtection@uv_trip,w
 12289  20E1  00B6               	movwf	??_setCellUndervoltageProtection
 12290  20E2  01B7               	clrf	??_setCellUndervoltageProtection+1
 12291  20E3  0836               	movf	??_setCellUndervoltageProtection,w
 12292  20E4  00F9               	movwf	I2C_writeRegister@data
 12293  20E5  0837               	movf	??_setCellUndervoltageProtection+1,w
 12294  20E6  00FA               	movwf	I2C_writeRegister@data+1
 12295  20E7  31B5  2531  31A0   	fcall	_I2C_writeRegister
 12296                           
 12297                           ;BQ76920.c: 142:     protect3.bits.UV_DELAY = 0;
 12298  20EA  303F               	movlw	-193
 12299  20EB  0023               	movlb	3	; select bank3
 12300  20EC  05D2               	andwf	BQ76920@protect3^(0+384),f
 12301                           
 12302                           ;BQ76920.c: 143:     for (int i = 0; i < (sizeof(UV_delay_setting) / sizeof((UV_delay_se
      +                          tting)[0])) - 1; i++) {
 12303  20ED  0020               	movlb	0	; select bank0
 12304  20EE  01C5               	clrf	setCellUndervoltageProtection@i
 12305  20EF  01C6               	clrf	setCellUndervoltageProtection@i+1
 12306  20F0                     l8140:	
 12307                           
 12308                           ;BQ76920.c: 144:         if (delay_s >= UV_delay_setting[i]) {
 12309  20F0  0846               	movf	setCellUndervoltageProtection@i+1,w
 12310  20F1  0085               	movwf	5
 12311  20F2  0845               	movf	setCellUndervoltageProtection@i,w
 12312  20F3  0084               	movwf	4
 12313  20F4  3584               	lslf	4,f
 12314  20F5  0D85               	rlf	5,f
 12315  20F6  30F1               	movlw	low (_UV_delay_setting| (0+32768))
 12316  20F7  0784               	addwf	4,f
 12317  20F8  30B9               	movlw	high (_UV_delay_setting| (0+32768))
 12318  20F9  3D85               	addwfc	5,f
 12319  20FA  3F00               	moviw [0]fsr0
 12320  20FB  00B6               	movwf	??_setCellUndervoltageProtection
 12321  20FC  3F01               	moviw [1]fsr0
 12322  20FD  00B7               	movwf	??_setCellUndervoltageProtection+1
 12323  20FE  0835               	movf	setCellUndervoltageProtection@delay_s+1,w
 12324  20FF  3A80               	xorlw	128
 12325  2100  00B8               	movwf	??_setCellUndervoltageProtection+2
 12326  2101  0837               	movf	??_setCellUndervoltageProtection+1,w
 12327  2102  3A80               	xorlw	128
 12328  2103  0238               	subwf	??_setCellUndervoltageProtection+2,w
 12329  2104  1D03               	skipz
 12330  2105  2908               	goto	u11235
 12331  2106  0836               	movf	??_setCellUndervoltageProtection,w
 12332  2107  0234               	subwf	setCellUndervoltageProtection@delay_s,w
 12333  2108                     u11235:	
 12334  2108  1C03               	skipc
 12335  2109  2918               	goto	l8144
 12336                           
 12337                           ;BQ76920.c: 145:             protect3.bits.UV_DELAY = i;
 12338  210A  0020               	movlb	0	; select bank0
 12339  210B  0845               	movf	setCellUndervoltageProtection@i,w
 12340  210C  00B6               	movwf	??_setCellUndervoltageProtection
 12341  210D  0EB6               	swapf	??_setCellUndervoltageProtection,f
 12342  210E  0DB6               	rlf	??_setCellUndervoltageProtection,f
 12343  210F  0DB6               	rlf	??_setCellUndervoltageProtection,f
 12344  2110  0023               	movlb	3	; select bank3
 12345  2111  0852               	movf	BQ76920@protect3^(0+384),w
 12346  2112  0020               	movlb	0	; select bank0
 12347  2113  0636               	xorwf	??_setCellUndervoltageProtection,w
 12348  2114  393F               	andlw	-193
 12349  2115  0636               	xorwf	??_setCellUndervoltageProtection,w
 12350  2116  0023               	movlb	3	; select bank3
 12351  2117  00D2               	movwf	BQ76920@protect3^(0+384)
 12352  2118                     l8144:	
 12353                           
 12354                           ;BQ76920.c: 147:     }
 12355  2118  3001               	movlw	1
 12356  2119  0020               	movlb	0	; select bank0
 12357  211A  07C5               	addwf	setCellUndervoltageProtection@i,f
 12358  211B  3000               	movlw	0
 12359  211C  3DC6               	addwfc	setCellUndervoltageProtection@i+1,f
 12360  211D  3000               	movlw	0
 12361  211E  0246               	subwf	setCellUndervoltageProtection@i+1,w
 12362  211F  3003               	movlw	3
 12363  2120  1903               	skipnz
 12364  2121  0245               	subwf	setCellUndervoltageProtection@i,w
 12365  2122  1C03               	skipc
 12366  2123  28F0               	goto	l8140
 12367                           
 12368                           ;BQ76920.c: 148:     I2C_writeRegister(0x18, 0x08, protect3.regByte);
 12369  2124  3018               	movlw	24
 12370  2125  00F5               	movwf	I2C_writeRegister@slaveAddress
 12371  2126  3000               	movlw	0
 12372  2127  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12373  2128  3008               	movlw	8
 12374  2129  00F7               	movwf	I2C_writeRegister@regAddress
 12375  212A  3000               	movlw	0
 12376  212B  00F8               	movwf	I2C_writeRegister@regAddress+1
 12377  212C  0023               	movlb	3	; select bank3
 12378  212D  0852               	movf	BQ76920@protect3^(0+384),w
 12379  212E  0020               	movlb	0	; select bank0
 12380  212F  00B6               	movwf	??_setCellUndervoltageProtection
 12381  2130  01B7               	clrf	??_setCellUndervoltageProtection+1
 12382  2131  0836               	movf	??_setCellUndervoltageProtection,w
 12383  2132  00F9               	movwf	I2C_writeRegister@data
 12384  2133  0837               	movf	??_setCellUndervoltageProtection+1,w
 12385  2134  00FA               	movwf	I2C_writeRegister@data+1
 12386  2135  31B5  2531         	fcall	_I2C_writeRegister
 12387  2137  0008               	return
 12388  2138                     __end_of_setCellUndervoltageProtection:	
 12389                           
 12390                           	psect	text42
 12391  2F2B                     __ptext42:	
 12392 ;; *************** function _setCellOvervoltageProtection *****************
 12393 ;; Defined at:
 12394 ;;		line 154 in file "BQ76920.c"
 12395 ;; Parameters:    Size  Location     Type
 12396 ;;  voltage_mV      2   18[BANK0 ] int 
 12397 ;;  delay_s         2   20[BANK0 ] int 
 12398 ;; Auto vars:     Size  Location     Type
 12399 ;;  i               2   37[BANK0 ] int 
 12400 ;;  ov_trip         1   36[BANK0 ] unsigned char 
 12401 ;; Return value:  Size  Location     Type
 12402 ;;                  1    wreg      void 
 12403 ;; Registers used:
 12404 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12405 ;; Tracked objects:
 12406 ;;		On entry : 0/0
 12407 ;;		On exit  : 0/0
 12408 ;;		Unchanged: 0/0
 12409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12410 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12411 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12412 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12413 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12414 ;;Total ram usage:       21 bytes
 12415 ;; Hardware stack levels used:    1
 12416 ;; Hardware stack levels required when called:    3
 12417 ;; This function calls:
 12418 ;;		_I2C_writeRegister
 12419 ;;		___aldiv
 12420 ;;		___lmul
 12421 ;;		_readRegister
 12422 ;; This function is called by:
 12423 ;;		_init_AFE
 12424 ;; This function uses a non-reentrant model
 12425 ;;
 12426                           
 12427                           
 12428                           ;psect for function _setCellOvervoltageProtection
 12429  2F2B                     _setCellOvervoltageProtection:	
 12430                           
 12431                           ;BQ76920.c: 156:     maxCellVoltage = voltage_mV;
 12432                           
 12433                           ;incstack = 0
 12434                           ; Regs used in _setCellOvervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+cstac
      +                          k]
 12435  2F2B  0020               	movlb	0	; select bank0
 12436  2F2C  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 12437  2F2D  0023               	movlb	3	; select bank3
 12438  2F2E  00C9               	movwf	(_maxCellVoltage+1)^(0+384)
 12439  2F2F  0020               	movlb	0	; select bank0
 12440  2F30  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 12441  2F31  0023               	movlb	3	; select bank3
 12442  2F32  00C8               	movwf	_maxCellVoltage^(0+384)
 12443                           
 12444                           ;BQ76920.c: 157:     protect3.regByte = readRegister(0x18, 0x08);
 12445  2F33  3018               	movlw	24
 12446  2F34  00F5               	movwf	readRegister@slaveAddress
 12447  2F35  3000               	movlw	0
 12448  2F36  00F6               	movwf	readRegister@slaveAddress+1
 12449  2F37  3008               	movlw	8
 12450  2F38  00F7               	movwf	readRegister@regAddress
 12451  2F39  3000               	movlw	0
 12452  2F3A  00F8               	movwf	readRegister@regAddress+1
 12453  2F3B  31B6  26AC  31AF   	fcall	_readRegister
 12454  2F3E  0875               	movf	?_readRegister,w
 12455  2F3F  0020               	movlb	0	; select bank0
 12456  2F40  00B6               	movwf	??_setCellOvervoltageProtection
 12457  2F41  0836               	movf	??_setCellOvervoltageProtection,w
 12458  2F42  0023               	movlb	3	; select bank3
 12459  2F43  00D2               	movwf	BQ76920@protect3^(0+384)
 12460                           
 12461                           ;BQ76920.c: 158:     ov_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 12462  2F44  0022               	movlb	2	; select bank2
 12463  2F45  086D               	movf	_adcGain^(0+256),w
 12464  2F46  0020               	movlb	0	; select bank0
 12465  2F47  00A4               	movwf	___aldiv@divisor
 12466  2F48  0022               	movlb	2	; select bank2
 12467  2F49  086E               	movf	(_adcGain+1)^(0+256),w
 12468  2F4A  0020               	movlb	0	; select bank0
 12469  2F4B  00A5               	movwf	___aldiv@divisor+1
 12470  2F4C  0D89               	rlf	9,f
 12471  2F4D  3B89               	subwfb	9,f
 12472  2F4E  0989               	comf	9,f
 12473  2F4F  00A6               	movwf	___aldiv@divisor+2
 12474  2F50  00A7               	movwf	___aldiv@divisor+3
 12475  2F51  0022               	movlb	2	; select bank2
 12476  2F52  086B               	movf	_adcOffset^(0+256),w
 12477  2F53  0020               	movlb	0	; select bank0
 12478  2F54  00B6               	movwf	??_setCellOvervoltageProtection
 12479  2F55  0022               	movlb	2	; select bank2
 12480  2F56  086C               	movf	(_adcOffset+1)^(0+256),w
 12481  2F57  0020               	movlb	0	; select bank0
 12482  2F58  00B7               	movwf	??_setCellOvervoltageProtection+1
 12483  2F59  3000               	movlw	0
 12484  2F5A  1BB7               	btfsc	??_setCellOvervoltageProtection+1,7
 12485  2F5B  30FF               	movlw	255
 12486  2F5C  00B8               	movwf	??_setCellOvervoltageProtection+2
 12487  2F5D  00B9               	movwf	??_setCellOvervoltageProtection+3
 12488  2F5E  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 12489  2F5F  00BA               	movwf	??_setCellOvervoltageProtection+4
 12490  2F60  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 12491  2F61  00BB               	movwf	??_setCellOvervoltageProtection+5
 12492  2F62  3000               	movlw	0
 12493  2F63  1BBB               	btfsc	??_setCellOvervoltageProtection+5,7
 12494  2F64  30FF               	movlw	255
 12495  2F65  00BC               	movwf	??_setCellOvervoltageProtection+6
 12496  2F66  00BD               	movwf	??_setCellOvervoltageProtection+7
 12497  2F67  0836               	movf	??_setCellOvervoltageProtection,w
 12498  2F68  02BA               	subwf	??_setCellOvervoltageProtection+4,f
 12499  2F69  0837               	movf	??_setCellOvervoltageProtection+1,w
 12500  2F6A  3BBB               	subwfb	??_setCellOvervoltageProtection+5,f
 12501  2F6B  0838               	movf	??_setCellOvervoltageProtection+2,w
 12502  2F6C  3BBC               	subwfb	??_setCellOvervoltageProtection+6,f
 12503  2F6D  0839               	movf	??_setCellOvervoltageProtection+3,w
 12504  2F6E  3BBD               	subwfb	??_setCellOvervoltageProtection+7,f
 12505  2F6F  083D               	movf	??_setCellOvervoltageProtection+7,w
 12506  2F70  00F4               	movwf	___lmul@multiplier+3
 12507  2F71  083C               	movf	??_setCellOvervoltageProtection+6,w
 12508  2F72  00F3               	movwf	___lmul@multiplier+2
 12509  2F73  083B               	movf	??_setCellOvervoltageProtection+5,w
 12510  2F74  00F2               	movwf	___lmul@multiplier+1
 12511  2F75  083A               	movf	??_setCellOvervoltageProtection+4,w
 12512  2F76  00F1               	movwf	___lmul@multiplier
 12513  2F77  3000               	movlw	0
 12514  2F78  00F8               	movwf	___lmul@multiplicand+3
 12515  2F79  3000               	movlw	0
 12516  2F7A  00F7               	movwf	___lmul@multiplicand+2
 12517  2F7B  3003               	movlw	3
 12518  2F7C  00F6               	movwf	___lmul@multiplicand+1
 12519  2F7D  30E8               	movlw	232
 12520  2F7E  00F5               	movwf	___lmul@multiplicand
 12521  2F7F  31B6  2613  31AF   	fcall	___lmul
 12522  2F82  0874               	movf	?___lmul+3,w
 12523  2F83  0020               	movlb	0	; select bank0
 12524  2F84  00AB               	movwf	___aldiv@dividend+3
 12525  2F85  0873               	movf	?___lmul+2,w
 12526  2F86  00AA               	movwf	___aldiv@dividend+2
 12527  2F87  0872               	movf	?___lmul+1,w
 12528  2F88  00A9               	movwf	___aldiv@dividend+1
 12529  2F89  0871               	movf	?___lmul,w
 12530  2F8A  00A8               	movwf	___aldiv@dividend
 12531  2F8B  31AB  2351  31AF   	fcall	___aldiv
 12532  2F8E  0020               	movlb	0	; select bank0
 12533  2F8F  0824               	movf	?___aldiv,w
 12534  2F90  00BE               	movwf	??_setCellOvervoltageProtection+8
 12535  2F91  0825               	movf	?___aldiv+1,w
 12536  2F92  00BF               	movwf	??_setCellOvervoltageProtection+9
 12537  2F93  0826               	movf	?___aldiv+2,w
 12538  2F94  00C0               	movwf	??_setCellOvervoltageProtection+10
 12539  2F95  0827               	movf	?___aldiv+3,w
 12540  2F96  00C1               	movwf	??_setCellOvervoltageProtection+11
 12541  2F97  3004               	movlw	4
 12542  2F98  00C2               	movwf	??_setCellOvervoltageProtection+12
 12543  2F99                     u11255:	
 12544  2F99  37C1               	asrf	??_setCellOvervoltageProtection+11,f
 12545  2F9A  0CC0               	rrf	??_setCellOvervoltageProtection+10,f
 12546  2F9B  0CBF               	rrf	??_setCellOvervoltageProtection+9,f
 12547  2F9C  0CBE               	rrf	??_setCellOvervoltageProtection+8,f
 12548  2F9D  0BC2               	decfsz	??_setCellOvervoltageProtection+12,f
 12549  2F9E  2F99               	goto	u11255
 12550  2F9F  083E               	movf	??_setCellOvervoltageProtection+8,w
 12551  2FA0  00C3               	movwf	??_setCellOvervoltageProtection+13
 12552  2FA1  0843               	movf	??_setCellOvervoltageProtection+13,w
 12553  2FA2  00C4               	movwf	setCellOvervoltageProtection@ov_trip
 12554                           
 12555                           ;BQ76920.c: 159:     I2C_writeRegister(0x18, 0x09, ov_trip);
 12556  2FA3  3018               	movlw	24
 12557  2FA4  00F5               	movwf	I2C_writeRegister@slaveAddress
 12558  2FA5  3000               	movlw	0
 12559  2FA6  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12560  2FA7  3009               	movlw	9
 12561  2FA8  00F7               	movwf	I2C_writeRegister@regAddress
 12562  2FA9  3000               	movlw	0
 12563  2FAA  00F8               	movwf	I2C_writeRegister@regAddress+1
 12564  2FAB  0844               	movf	setCellOvervoltageProtection@ov_trip,w
 12565  2FAC  00B6               	movwf	??_setCellOvervoltageProtection
 12566  2FAD  01B7               	clrf	??_setCellOvervoltageProtection+1
 12567  2FAE  0836               	movf	??_setCellOvervoltageProtection,w
 12568  2FAF  00F9               	movwf	I2C_writeRegister@data
 12569  2FB0  0837               	movf	??_setCellOvervoltageProtection+1,w
 12570  2FB1  00FA               	movwf	I2C_writeRegister@data+1
 12571  2FB2  31B5  2531  31AF   	fcall	_I2C_writeRegister
 12572                           
 12573                           ;BQ76920.c: 161:     for (int i = 0; i < (sizeof(OV_delay_setting) / sizeof((OV_delay_se
      +                          tting)[0])) - 1; i++) {
 12574  2FB5  0020               	movlb	0	; select bank0
 12575  2FB6  01C5               	clrf	setCellOvervoltageProtection@i
 12576  2FB7  01C6               	clrf	setCellOvervoltageProtection@i+1
 12577  2FB8                     l8166:	
 12578                           
 12579                           ;BQ76920.c: 162:         if (delay_s >= OV_delay_setting[i]) {
 12580  2FB8  0846               	movf	setCellOvervoltageProtection@i+1,w
 12581  2FB9  0085               	movwf	5
 12582  2FBA  0845               	movf	setCellOvervoltageProtection@i,w
 12583  2FBB  0084               	movwf	4
 12584  2FBC  3584               	lslf	4,f
 12585  2FBD  0D85               	rlf	5,f
 12586  2FBE  30E9               	movlw	low (_OV_delay_setting| (0+32768))
 12587  2FBF  0784               	addwf	4,f
 12588  2FC0  30B9               	movlw	high (_OV_delay_setting| (0+32768))
 12589  2FC1  3D85               	addwfc	5,f
 12590  2FC2  3F00               	moviw [0]fsr0
 12591  2FC3  00B6               	movwf	??_setCellOvervoltageProtection
 12592  2FC4  3F01               	moviw [1]fsr0
 12593  2FC5  00B7               	movwf	??_setCellOvervoltageProtection+1
 12594  2FC6  0835               	movf	setCellOvervoltageProtection@delay_s+1,w
 12595  2FC7  3A80               	xorlw	128
 12596  2FC8  00B8               	movwf	??_setCellOvervoltageProtection+2
 12597  2FC9  0837               	movf	??_setCellOvervoltageProtection+1,w
 12598  2FCA  3A80               	xorlw	128
 12599  2FCB  0238               	subwf	??_setCellOvervoltageProtection+2,w
 12600  2FCC  1D03               	skipz
 12601  2FCD  2FD0               	goto	u11265
 12602  2FCE  0836               	movf	??_setCellOvervoltageProtection,w
 12603  2FCF  0234               	subwf	setCellOvervoltageProtection@delay_s,w
 12604  2FD0                     u11265:	
 12605  2FD0  1C03               	skipc
 12606  2FD1  2FE0               	goto	l8170
 12607                           
 12608                           ;BQ76920.c: 163:             protect3.bits.UV_DELAY = i;
 12609  2FD2  0020               	movlb	0	; select bank0
 12610  2FD3  0845               	movf	setCellOvervoltageProtection@i,w
 12611  2FD4  00B6               	movwf	??_setCellOvervoltageProtection
 12612  2FD5  0EB6               	swapf	??_setCellOvervoltageProtection,f
 12613  2FD6  0DB6               	rlf	??_setCellOvervoltageProtection,f
 12614  2FD7  0DB6               	rlf	??_setCellOvervoltageProtection,f
 12615  2FD8  0023               	movlb	3	; select bank3
 12616  2FD9  0852               	movf	BQ76920@protect3^(0+384),w
 12617  2FDA  0020               	movlb	0	; select bank0
 12618  2FDB  0636               	xorwf	??_setCellOvervoltageProtection,w
 12619  2FDC  393F               	andlw	-193
 12620  2FDD  0636               	xorwf	??_setCellOvervoltageProtection,w
 12621  2FDE  0023               	movlb	3	; select bank3
 12622  2FDF  00D2               	movwf	BQ76920@protect3^(0+384)
 12623  2FE0                     l8170:	
 12624                           
 12625                           ;BQ76920.c: 165:     }
 12626  2FE0  3001               	movlw	1
 12627  2FE1  0020               	movlb	0	; select bank0
 12628  2FE2  07C5               	addwf	setCellOvervoltageProtection@i,f
 12629  2FE3  3000               	movlw	0
 12630  2FE4  3DC6               	addwfc	setCellOvervoltageProtection@i+1,f
 12631  2FE5  3000               	movlw	0
 12632  2FE6  0246               	subwf	setCellOvervoltageProtection@i+1,w
 12633  2FE7  3003               	movlw	3
 12634  2FE8  1903               	skipnz
 12635  2FE9  0245               	subwf	setCellOvervoltageProtection@i,w
 12636  2FEA  1C03               	skipc
 12637  2FEB  2FB8               	goto	l8166
 12638                           
 12639                           ;BQ76920.c: 166:     I2C_writeRegister(0x18,0x08, protect3.regByte);
 12640  2FEC  3018               	movlw	24
 12641  2FED  00F5               	movwf	I2C_writeRegister@slaveAddress
 12642  2FEE  3000               	movlw	0
 12643  2FEF  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12644  2FF0  3008               	movlw	8
 12645  2FF1  00F7               	movwf	I2C_writeRegister@regAddress
 12646  2FF2  3000               	movlw	0
 12647  2FF3  00F8               	movwf	I2C_writeRegister@regAddress+1
 12648  2FF4  0023               	movlb	3	; select bank3
 12649  2FF5  0852               	movf	BQ76920@protect3^(0+384),w
 12650  2FF6  0020               	movlb	0	; select bank0
 12651  2FF7  00B6               	movwf	??_setCellOvervoltageProtection
 12652  2FF8  01B7               	clrf	??_setCellOvervoltageProtection+1
 12653  2FF9  0836               	movf	??_setCellOvervoltageProtection,w
 12654  2FFA  00F9               	movwf	I2C_writeRegister@data
 12655  2FFB  0837               	movf	??_setCellOvervoltageProtection+1,w
 12656  2FFC  00FA               	movwf	I2C_writeRegister@data+1
 12657  2FFD  31B5  2531         	fcall	_I2C_writeRegister
 12658  2FFF  0008               	return
 12659  3000                     __end_of_setCellOvervoltageProtection:	
 12660                           
 12661                           	psect	text43
 12662  2DB3                     __ptext43:	
 12663 ;; *************** function _beginAFEcommunication *****************
 12664 ;; Defined at:
 12665 ;;		line 28 in file "BQ76920.c"
 12666 ;; Parameters:    Size  Location     Type
 12667 ;;		None
 12668 ;; Auto vars:     Size  Location     Type
 12669 ;;  i               2   13[BANK0 ] int 
 12670 ;;  commSuccess     2   11[BANK0 ] int 
 12671 ;; Return value:  Size  Location     Type
 12672 ;;                  2    0[BANK0 ] int 
 12673 ;; Registers used:
 12674 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12675 ;; Tracked objects:
 12676 ;;		On entry : 0/0
 12677 ;;		On exit  : 0/0
 12678 ;;		Unchanged: 0/0
 12679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12680 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12681 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12682 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12683 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12684 ;;Total ram usage:       15 bytes
 12685 ;; Hardware stack levels used:    1
 12686 ;; Hardware stack levels required when called:    3
 12687 ;; This function calls:
 12688 ;;		_I2C_writeRegister
 12689 ;;		_readRegister
 12690 ;; This function is called by:
 12691 ;;		_statemachine
 12692 ;; This function uses a non-reentrant model
 12693 ;;
 12694                           
 12695                           
 12696                           ;psect for function _beginAFEcommunication
 12697  2DB3                     _beginAFEcommunication:	
 12698                           
 12699                           ;BQ76920.c: 30:     int commSuccess = 0;
 12700                           
 12701                           ;incstack = 0
 12702                           ; Regs used in _beginAFEcommunication: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 12703  2DB3  0020               	movlb	0	; select bank0
 12704  2DB4  01AB               	clrf	beginAFEcommunication@commSuccess
 12705  2DB5  01AC               	clrf	beginAFEcommunication@commSuccess+1
 12706                           
 12707                           ;BQ76920.c: 33:     for (int i = 0; i < 4; i++) {
 12708  2DB6  01AD               	clrf	beginAFEcommunication@i
 12709  2DB7  01AE               	clrf	beginAFEcommunication@i+1
 12710  2DB8                     l8290:	
 12711                           
 12712                           ;BQ76920.c: 34:         cellVoltages[i] = 0;
 12713  2DB8  0020               	movlb	0	; select bank0
 12714  2DB9  352D               	lslf	beginAFEcommunication@i,w
 12715  2DBA  3EA0               	addlw	(low (_cellVoltages| (0+256)))& (0+255)
 12716  2DBB  0086               	movwf	6
 12717  2DBC  3001               	movlw	1	; select bank3/4
 12718  2DBD  0087               	movwf	7
 12719  2DBE  3000               	movlw	0
 12720  2DBF  3FC0               	movwi [0]fsr1
 12721  2DC0  3FC1               	movwi [1]fsr1
 12722                           
 12723                           ;BQ76920.c: 35:     }
 12724  2DC1  3001               	movlw	1
 12725  2DC2  07AD               	addwf	beginAFEcommunication@i,f
 12726  2DC3  3000               	movlw	0
 12727  2DC4  3DAE               	addwfc	beginAFEcommunication@i+1,f
 12728  2DC5  082E               	movf	beginAFEcommunication@i+1,w
 12729  2DC6  3A80               	xorlw	128
 12730  2DC7  00A2               	movwf	??_beginAFEcommunication
 12731  2DC8  3080               	movlw	128
 12732  2DC9  0222               	subwf	??_beginAFEcommunication,w
 12733  2DCA  1D03               	skipz
 12734  2DCB  2DCE               	goto	u11375
 12735  2DCC  3004               	movlw	4
 12736  2DCD  022D               	subwf	beginAFEcommunication@i,w
 12737  2DCE                     u11375:	
 12738  2DCE  1C03               	skipc
 12739  2DCF  2DB8               	goto	l8290
 12740                           
 12741                           ;BQ76920.c: 38:     I2C_writeRegister(0x18, 0x0B, 0x19);
 12742  2DD0  3018               	movlw	24
 12743  2DD1  00F5               	movwf	I2C_writeRegister@slaveAddress
 12744  2DD2  3000               	movlw	0
 12745  2DD3  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12746  2DD4  300B               	movlw	11
 12747  2DD5  00F7               	movwf	I2C_writeRegister@regAddress
 12748  2DD6  3000               	movlw	0
 12749  2DD7  00F8               	movwf	I2C_writeRegister@regAddress+1
 12750  2DD8  3019               	movlw	25
 12751  2DD9  00F9               	movwf	I2C_writeRegister@data
 12752  2DDA  3000               	movlw	0
 12753  2DDB  00FA               	movwf	I2C_writeRegister@data+1
 12754  2DDC  31B5  2531  31AD   	fcall	_I2C_writeRegister
 12755                           
 12756                           ;BQ76920.c: 40:     if (readRegister(0x18, 0x0B) == 0x19) {
 12757  2DDF  3018               	movlw	24
 12758  2DE0  00F5               	movwf	readRegister@slaveAddress
 12759  2DE1  3000               	movlw	0
 12760  2DE2  00F6               	movwf	readRegister@slaveAddress+1
 12761  2DE3  300B               	movlw	11
 12762  2DE4  00F7               	movwf	readRegister@regAddress
 12763  2DE5  3000               	movlw	0
 12764  2DE6  00F8               	movwf	readRegister@regAddress+1
 12765  2DE7  31B6  26AC  31AD   	fcall	_readRegister
 12766  2DEA  3019               	movlw	25
 12767  2DEB  0675               	xorwf	?_readRegister,w
 12768  2DEC  0476               	iorwf	?_readRegister+1,w
 12769  2DED  1D03               	btfss	3,2
 12770  2DEE  2E61               	goto	l447
 12771                           
 12772                           ;BQ76920.c: 41:         commSuccess = 1;
 12773  2DEF  3001               	movlw	1
 12774  2DF0  0020               	movlb	0	; select bank0
 12775  2DF1  00AB               	movwf	beginAFEcommunication@commSuccess
 12776  2DF2  3000               	movlw	0
 12777  2DF3  00AC               	movwf	beginAFEcommunication@commSuccess+1
 12778                           
 12779                           ;BQ76920.c: 45:         I2C_writeRegister(0x18, 0x04, 0x18);
 12780  2DF4  3018               	movlw	24
 12781  2DF5  00F5               	movwf	I2C_writeRegister@slaveAddress
 12782  2DF6  3000               	movlw	0
 12783  2DF7  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12784  2DF8  3004               	movlw	4
 12785  2DF9  00F7               	movwf	I2C_writeRegister@regAddress
 12786  2DFA  3000               	movlw	0
 12787  2DFB  00F8               	movwf	I2C_writeRegister@regAddress+1
 12788  2DFC  3018               	movlw	24
 12789  2DFD  00F9               	movwf	I2C_writeRegister@data
 12790  2DFE  3000               	movlw	0
 12791  2DFF  00FA               	movwf	I2C_writeRegister@data+1
 12792  2E00  31B5  2531  31AD   	fcall	_I2C_writeRegister
 12793                           
 12794                           ;BQ76920.c: 46:         I2C_writeRegister(0x18, 0x05, 0x40);
 12795  2E03  3018               	movlw	24
 12796  2E04  00F5               	movwf	I2C_writeRegister@slaveAddress
 12797  2E05  3000               	movlw	0
 12798  2E06  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12799  2E07  3005               	movlw	5
 12800  2E08  00F7               	movwf	I2C_writeRegister@regAddress
 12801  2E09  3000               	movlw	0
 12802  2E0A  00F8               	movwf	I2C_writeRegister@regAddress+1
 12803  2E0B  3040               	movlw	64
 12804  2E0C  00F9               	movwf	I2C_writeRegister@data
 12805  2E0D  3000               	movlw	0
 12806  2E0E  00FA               	movwf	I2C_writeRegister@data+1
 12807  2E0F  31B5  2531  31AD   	fcall	_I2C_writeRegister
 12808                           
 12809                           ;BQ76920.c: 49:         adcOffset = (signed int) readRegister(0x18, 0x51);
 12810  2E12  3018               	movlw	24
 12811  2E13  00F5               	movwf	readRegister@slaveAddress
 12812  2E14  3000               	movlw	0
 12813  2E15  00F6               	movwf	readRegister@slaveAddress+1
 12814  2E16  3051               	movlw	81
 12815  2E17  00F7               	movwf	readRegister@regAddress
 12816  2E18  3000               	movlw	0
 12817  2E19  00F8               	movwf	readRegister@regAddress+1
 12818  2E1A  31B6  26AC  31AD   	fcall	_readRegister
 12819  2E1D  0876               	movf	?_readRegister+1,w
 12820  2E1E  0022               	movlb	2	; select bank2
 12821  2E1F  00EC               	movwf	(_adcOffset+1)^(0+256)
 12822  2E20  0875               	movf	?_readRegister,w
 12823  2E21  00EB               	movwf	_adcOffset^(0+256)
 12824                           
 12825                           ;BQ76920.c: 50:         adcGain = 365 + (((readRegister(0x18, 0x50) & 0x0C) << 1) |
 12826  2E22  3018               	movlw	24
 12827  2E23  00F5               	movwf	readRegister@slaveAddress
 12828  2E24  3000               	movlw	0
 12829  2E25  00F6               	movwf	readRegister@slaveAddress+1
 12830  2E26  3059               	movlw	89
 12831  2E27  00F7               	movwf	readRegister@regAddress
 12832  2E28  3000               	movlw	0
 12833  2E29  00F8               	movwf	readRegister@regAddress+1
 12834  2E2A  31B6  26AC  31AD   	fcall	_readRegister
 12835  2E2D  0875               	movf	?_readRegister,w
 12836  2E2E  0020               	movlb	0	; select bank0
 12837  2E2F  00A2               	movwf	??_beginAFEcommunication
 12838  2E30  0876               	movf	?_readRegister+1,w
 12839  2E31  00A3               	movwf	??_beginAFEcommunication+1
 12840  2E32  3005               	movlw	5
 12841  2E33  00A4               	movwf	??_beginAFEcommunication+2
 12842  2E34                     u11395:	
 12843  2E34  0D23               	rlf	??_beginAFEcommunication+1,w
 12844  2E35  0CA3               	rrf	??_beginAFEcommunication+1,f
 12845  2E36  0CA2               	rrf	??_beginAFEcommunication,f
 12846  2E37  0BA4               	decfsz	??_beginAFEcommunication+2,f
 12847  2E38  2E34               	goto	u11395
 12848  2E39  3007               	movlw	7
 12849  2E3A  0522               	andwf	??_beginAFEcommunication,w
 12850  2E3B  00A5               	movwf	??_beginAFEcommunication+3
 12851  2E3C  3000               	movlw	0
 12852  2E3D  0523               	andwf	??_beginAFEcommunication+1,w
 12853  2E3E  00A6               	movwf	??_beginAFEcommunication+4
 12854  2E3F  3018               	movlw	24
 12855  2E40  00F5               	movwf	readRegister@slaveAddress
 12856  2E41  3000               	movlw	0
 12857  2E42  00F6               	movwf	readRegister@slaveAddress+1
 12858  2E43  3050               	movlw	80
 12859  2E44  00F7               	movwf	readRegister@regAddress
 12860  2E45  3000               	movlw	0
 12861  2E46  00F8               	movwf	readRegister@regAddress+1
 12862  2E47  31B6  26AC         	fcall	_readRegister
 12863  2E49  300C               	movlw	12
 12864  2E4A  0575               	andwf	?_readRegister,w
 12865  2E4B  0020               	movlb	0	; select bank0
 12866  2E4C  00A7               	movwf	??_beginAFEcommunication+5
 12867  2E4D  3000               	movlw	0
 12868  2E4E  0576               	andwf	?_readRegister+1,w
 12869  2E4F  00A8               	movwf	??_beginAFEcommunication+6
 12870  2E50  35A7               	lslf	??_beginAFEcommunication+5,f
 12871  2E51  0DA8               	rlf	??_beginAFEcommunication+6,f
 12872  2E52  0825               	movf	??_beginAFEcommunication+3,w
 12873  2E53  0427               	iorwf	??_beginAFEcommunication+5,w
 12874  2E54  00A9               	movwf	??_beginAFEcommunication+7
 12875  2E55  0826               	movf	??_beginAFEcommunication+4,w
 12876  2E56  0428               	iorwf	??_beginAFEcommunication+6,w
 12877  2E57  00AA               	movwf	??_beginAFEcommunication+8
 12878  2E58  0829               	movf	??_beginAFEcommunication+7,w
 12879  2E59  3E6D               	addlw	109
 12880  2E5A  0022               	movlb	2	; select bank2
 12881  2E5B  00ED               	movwf	_adcGain^(0+256)
 12882  2E5C  3001               	movlw	1
 12883  2E5D  0020               	movlb	0	; select bank0
 12884  2E5E  3D2A               	addwfc	??_beginAFEcommunication+8,w
 12885  2E5F  0022               	movlb	2	; select bank2
 12886  2E60  00EE               	movwf	(_adcGain+1)^(0+256)
 12887  2E61                     l447:	
 12888                           ;BQ76920.c: 53:     }
 12889                           
 12890                           
 12891                           ;BQ76920.c: 54:     return commSuccess;
 12892  2E61  0020               	movlb	0	; select bank0
 12893  2E62  082C               	movf	beginAFEcommunication@commSuccess+1,w
 12894  2E63  00A1               	movwf	?_beginAFEcommunication+1
 12895  2E64  082B               	movf	beginAFEcommunication@commSuccess,w
 12896  2E65  00A0               	movwf	?_beginAFEcommunication
 12897  2E66  0008               	return
 12898  2E67                     __end_of_beginAFEcommunication:	
 12899                           
 12900                           	psect	text44
 12901  358F                     __ptext44:	
 12902 ;; *************** function _RGB_AWAIT_AFE_CONN *****************
 12903 ;; Defined at:
 12904 ;;		line 43 in file "RGB.c"
 12905 ;; Parameters:    Size  Location     Type
 12906 ;;		None
 12907 ;; Auto vars:     Size  Location     Type
 12908 ;;		None
 12909 ;; Return value:  Size  Location     Type
 12910 ;;                  1    wreg      void 
 12911 ;; Registers used:
 12912 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12913 ;; Tracked objects:
 12914 ;;		On entry : 0/0
 12915 ;;		On exit  : 0/0
 12916 ;;		Unchanged: 0/0
 12917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12920 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12921 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12922 ;;Total ram usage:        1 bytes
 12923 ;; Hardware stack levels used:    1
 12924 ;; Hardware stack levels required when called:    2
 12925 ;; This function calls:
 12926 ;;		_RGB_color
 12927 ;; This function is called by:
 12928 ;;		_statemachine
 12929 ;; This function uses a non-reentrant model
 12930 ;;
 12931                           
 12932                           
 12933                           ;psect for function _RGB_AWAIT_AFE_CONN
 12934  358F                     _RGB_AWAIT_AFE_CONN:	
 12935                           
 12936                           ;RGB.c: 45:     if (toggleColor) {
 12937                           
 12938                           ;incstack = 0
 12939                           ; Regs used in _RGB_AWAIT_AFE_CONN: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12940  358F  087C               	movf	_toggleColor,w
 12941  3590  1903               	btfsc	3,2
 12942  3591  2DA1               	goto	l8280
 12943                           
 12944                           ;RGB.c: 46:         toggleColor = !toggleColor;
 12945  3592  087C               	movf	_toggleColor,w
 12946  3593  1D03               	btfss	3,2
 12947  3594  2D97               	goto	u11330
 12948  3595  3001               	movlw	1
 12949  3596  2D98               	goto	u11340
 12950  3597                     u11330:	
 12951  3597  3000               	movlw	0
 12952  3598                     u11340:	
 12953  3598  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 12954  3599  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 12955  359A  00FC               	movwf	_toggleColor
 12956                           
 12957                           ;RGB.c: 47:         RGB_color(0);
 12958  359B  3000               	movlw	0
 12959  359C  00F1               	movwf	RGB_color@color
 12960  359D  00F2               	movwf	RGB_color@color+1
 12961  359E  31B5  256E         	fcall	_RGB_color
 12962                           
 12963                           ;RGB.c: 48:     } else {
 12964  35A0  0008               	return
 12965  35A1                     l8280:	
 12966                           
 12967                           ;RGB.c: 49:         toggleColor = !toggleColor;
 12968  35A1  087C               	movf	_toggleColor,w
 12969  35A2  1D03               	btfss	3,2
 12970  35A3  2DA6               	goto	u11350
 12971  35A4  3001               	movlw	1
 12972  35A5  2DA7               	goto	u11360
 12973  35A6                     u11350:	
 12974  35A6  3000               	movlw	0
 12975  35A7                     u11360:	
 12976  35A7  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 12977  35A8  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 12978  35A9  00FC               	movwf	_toggleColor
 12979                           
 12980                           ;RGB.c: 50:         RGB_color(1);
 12981  35AA  3001               	movlw	1
 12982  35AB  00F1               	movwf	RGB_color@color
 12983  35AC  3000               	movlw	0
 12984  35AD  00F2               	movwf	RGB_color@color+1
 12985  35AE  31B5  256E         	fcall	_RGB_color
 12986  35B0  0008               	return
 12987  35B1                     __end_of_RGB_AWAIT_AFE_CONN:	
 12988                           
 12989                           	psect	text45
 12990  356E                     __ptext45:	
 12991 ;; *************** function _RGB_color *****************
 12992 ;; Defined at:
 12993 ;;		line 17 in file "RGB.c"
 12994 ;; Parameters:    Size  Location     Type
 12995 ;;  color           2    1[COMMON] int 
 12996 ;; Auto vars:     Size  Location     Type
 12997 ;;		None
 12998 ;; Return value:  Size  Location     Type
 12999 ;;                  1    wreg      void 
 13000 ;; Registers used:
 13001 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13002 ;; Tracked objects:
 13003 ;;		On entry : 0/0
 13004 ;;		On exit  : 0/0
 13005 ;;		Unchanged: 0/0
 13006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13007 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13010 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13011 ;;Total ram usage:        2 bytes
 13012 ;; Hardware stack levels used:    1
 13013 ;; Hardware stack levels required when called:    1
 13014 ;; This function calls:
 13015 ;;		Nothing
 13016 ;; This function is called by:
 13017 ;;		_statemachine
 13018 ;;		_RGB_AWAIT_AFE_CONN
 13019 ;;		_watchdog_timeout_shutdown
 13020 ;; This function uses a non-reentrant model
 13021 ;;
 13022                           
 13023                           
 13024                           ;psect for function _RGB_color
 13025  356E                     _RGB_color:	
 13026                           
 13027                           ;RGB.c: 19:     switch (color) {
 13028                           
 13029                           ;incstack = 0
 13030                           ; Regs used in _RGB_color: [wreg-fsr0h+status,2+status,0]
 13031  356E  2D7E               	goto	l8020
 13032  356F                     l342:	
 13033                           ;RGB.c: 20:         case 0:
 13034                           
 13035                           
 13036                           ;RGB.c: 21:             LATAbits.LATA4 = 0;
 13037  356F  0022               	movlb	2	; select bank2
 13038  3570  120C               	bcf	12,4	;volatile
 13039                           
 13040                           ;RGB.c: 22:             LATAbits.LATA5 = 1;
 13041  3571  168C               	bsf	12,5	;volatile
 13042                           
 13043                           ;RGB.c: 23:             LATEbits.LATE0 = 1;
 13044  3572  1410               	bsf	16,0	;volatile
 13045                           
 13046                           ;RGB.c: 24:             break;
 13047  3573  0008               	return
 13048  3574                     l344:	
 13049                           ;RGB.c: 25:         case 1:
 13050                           
 13051                           
 13052                           ;RGB.c: 26:             LATAbits.LATA4 = 1;
 13053  3574  0022               	movlb	2	; select bank2
 13054  3575  160C               	bsf	12,4	;volatile
 13055                           
 13056                           ;RGB.c: 27:             LATAbits.LATA5 = 0;
 13057  3576  128C               	bcf	12,5	;volatile
 13058                           
 13059                           ;RGB.c: 28:             LATEbits.LATE0 = 1;
 13060  3577  1410               	bsf	16,0	;volatile
 13061                           
 13062                           ;RGB.c: 29:             break;
 13063  3578  0008               	return
 13064  3579                     l345:	
 13065                           ;RGB.c: 30:         case 2:
 13066                           
 13067                           
 13068                           ;RGB.c: 31:             LATAbits.LATA4 = 1;
 13069  3579  0022               	movlb	2	; select bank2
 13070  357A  160C               	bsf	12,4	;volatile
 13071                           
 13072                           ;RGB.c: 32:             LATAbits.LATA5 = 1;
 13073  357B  168C               	bsf	12,5	;volatile
 13074                           
 13075                           ;RGB.c: 33:             LATEbits.LATE0 = 0;
 13076  357C  1010               	bcf	16,0	;volatile
 13077                           
 13078                           ;RGB.c: 34:             break;
 13079  357D  0008               	return
 13080  357E                     l8020:	
 13081                           
 13082                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13083                           ; Switch size 1, requested type "simple"
 13084                           ; Number of cases is 1, Range of values is 0 to 0
 13085                           ; switch strategies available:
 13086                           ; Name         Instructions Cycles
 13087                           ; simple_byte            4     3 (average)
 13088                           ; direct_byte            8     6 (fixed)
 13089                           ; jumptable            260     6 (fixed)
 13090                           ;	Chosen strategy is simple_byte
 13091  357E  0872               	movf	RGB_color@color+1,w
 13092  357F  3A00               	xorlw	0	; case 0
 13093  3580  1903               	skipnz
 13094  3581  2D83               	goto	l8610
 13095  3582  2D8E               	goto	l346
 13096  3583                     l8610:	
 13097                           
 13098                           ; Switch size 1, requested type "simple"
 13099                           ; Number of cases is 3, Range of values is 0 to 2
 13100                           ; switch strategies available:
 13101                           ; Name         Instructions Cycles
 13102                           ; simple_byte           10     6 (average)
 13103                           ; direct_byte           12     6 (fixed)
 13104                           ; jumptable            260     6 (fixed)
 13105                           ;	Chosen strategy is simple_byte
 13106  3583  0871               	movf	RGB_color@color,w
 13107  3584  3A00               	xorlw	0	; case 0
 13108  3585  1903               	skipnz
 13109  3586  2D6F               	goto	l342
 13110  3587  3A01               	xorlw	1	; case 1
 13111  3588  1903               	skipnz
 13112  3589  2D74               	goto	l344
 13113  358A  3A03               	xorlw	3	; case 2
 13114  358B  1903               	skipnz
 13115  358C  2D79               	goto	l345
 13116  358D  2D8E               	goto	l346
 13117  358E                     l346:	
 13118  358E  0008               	return
 13119  358F                     __end_of_RGB_color:	
 13120                           
 13121                           	psect	text46
 13122  3474                     __ptext46:	
 13123 ;; *************** function _AFE_UPDATE *****************
 13124 ;; Defined at:
 13125 ;;		line 172 in file "BQ76920.c"
 13126 ;; Parameters:    Size  Location     Type
 13127 ;;		None
 13128 ;; Auto vars:     Size  Location     Type
 13129 ;;		None
 13130 ;; Return value:  Size  Location     Type
 13131 ;;                  1    wreg      void 
 13132 ;; Registers used:
 13133 ;;		wreg, status,2, status,0, pclath, cstack
 13134 ;; Tracked objects:
 13135 ;;		On entry : 0/0
 13136 ;;		On exit  : 0/0
 13137 ;;		Unchanged: 0/0
 13138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13143 ;;Total ram usage:        0 bytes
 13144 ;; Hardware stack levels used:    1
 13145 ;; Hardware stack levels required when called:    5
 13146 ;; This function calls:
 13147 ;;		_enableCharging
 13148 ;;		_enableDischarging
 13149 ;;		_updateCurrent
 13150 ;;		_updateTemperatures
 13151 ;;		_updateVoltages
 13152 ;; This function is called by:
 13153 ;;		_statemachine
 13154 ;; This function uses a non-reentrant model
 13155 ;;
 13156                           
 13157                           
 13158                           ;psect for function _AFE_UPDATE
 13159  3474                     _AFE_UPDATE:	
 13160                           
 13161                           ;BQ76920.c: 173:     updateCurrent();
 13162                           
 13163                           ;incstack = 0
 13164                           ; Regs used in _AFE_UPDATE: [wreg+status,2+status,0+pclath+cstack]
 13165  3474  31AE  2667  31B4   	fcall	_updateCurrent
 13166                           
 13167                           ;BQ76920.c: 174:     updateVoltages();
 13168  3477  3192  224F  31B4   	fcall	_updateVoltages
 13169                           
 13170                           ;BQ76920.c: 175:     updateTemperatures();
 13171  347A  3195  2527  31B4   	fcall	_updateTemperatures
 13172                           
 13173                           ;BQ76920.c: 178:     enableDischarging(1);
 13174  347D  3001               	movlw	1
 13175  347E  0020               	movlb	0	; select bank0
 13176  347F  00A0               	movwf	enableDischarging@enable
 13177  3480  3000               	movlw	0
 13178  3481  00A1               	movwf	enableDischarging@enable+1
 13179  3482  31A8  200A  31B4   	fcall	_enableDischarging
 13180                           
 13181                           ;BQ76920.c: 179:     enableCharging(1);
 13182  3485  3001               	movlw	1
 13183  3486  0020               	movlb	0	; select bank0
 13184  3487  00A0               	movwf	enableCharging@enable
 13185  3488  3000               	movlw	0
 13186  3489  00A1               	movwf	enableCharging@enable+1
 13187  348A  31B6  26E2         	fcall	_enableCharging
 13188  348C  0008               	return
 13189  348D                     __end_of_AFE_UPDATE:	
 13190                           
 13191                           	psect	text47
 13192  124F                     __ptext47:	
 13193 ;; *************** function _updateVoltages *****************
 13194 ;; Defined at:
 13195 ;;		line 209 in file "BQ76920.c"
 13196 ;; Parameters:    Size  Location     Type
 13197 ;;		None
 13198 ;; Auto vars:     Size  Location     Type
 13199 ;;  adcVal          4   24[BANK1 ] long 
 13200 ;; Return value:  Size  Location     Type
 13201 ;;                  1    wreg      void 
 13202 ;; Registers used:
 13203 ;;		wreg, status,2, status,0, pclath, cstack
 13204 ;; Tracked objects:
 13205 ;;		On entry : 0/0
 13206 ;;		On exit  : 0/0
 13207 ;;		Unchanged: 0/0
 13208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13210 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13211 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13212 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13213 ;;Total ram usage:       11 bytes
 13214 ;; Hardware stack levels used:    1
 13215 ;; Hardware stack levels required when called:    3
 13216 ;; This function calls:
 13217 ;;		___aldiv
 13218 ;;		___fladd
 13219 ;;		___fldiv
 13220 ;;		___flmul
 13221 ;;		___fltol
 13222 ;;		___lmul
 13223 ;;		___xxtofl
 13224 ;;		_readRegister
 13225 ;; This function is called by:
 13226 ;;		_AFE_UPDATE
 13227 ;; This function uses a non-reentrant model
 13228 ;;
 13229                           
 13230                           
 13231                           ;psect for function _updateVoltages
 13232  124F                     _updateVoltages:	
 13233                           
 13234                           ;BQ76920.c: 213:   adcVal = (readRegister(0x18, 0x2A) << 8) | readRegister(0x18, 0x2B);
 13235                           
 13236                           ;incstack = 0
 13237                           ; Regs used in _updateVoltages: [wreg+status,2+status,0+pclath+cstack]
 13238  124F  3018               	movlw	24
 13239  1250  00F5               	movwf	readRegister@slaveAddress
 13240  1251  3000               	movlw	0
 13241  1252  00F6               	movwf	readRegister@slaveAddress+1
 13242  1253  302A               	movlw	42
 13243  1254  00F7               	movwf	readRegister@regAddress
 13244  1255  3000               	movlw	0
 13245  1256  00F8               	movwf	readRegister@regAddress+1
 13246  1257  31B6  26AC  3192   	fcall	_readRegister
 13247  125A  0875               	movf	?_readRegister,w
 13248  125B  0021               	movlb	1	; select bank1
 13249  125C  00B1               	movwf	??_updateVoltages^(0+128)
 13250  125D  0876               	movf	?_readRegister+1,w
 13251  125E  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13252  125F  0831               	movf	??_updateVoltages^(0+128),w
 13253  1260  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13254  1261  01B1               	clrf	??_updateVoltages^(0+128)
 13255  1262  3018               	movlw	24
 13256  1263  00F5               	movwf	readRegister@slaveAddress
 13257  1264  3000               	movlw	0
 13258  1265  00F6               	movwf	readRegister@slaveAddress+1
 13259  1266  302B               	movlw	43
 13260  1267  00F7               	movwf	readRegister@regAddress
 13261  1268  3000               	movlw	0
 13262  1269  00F8               	movwf	readRegister@regAddress+1
 13263  126A  31B6  26AC  3192   	fcall	_readRegister
 13264  126D  0875               	movf	?_readRegister,w
 13265  126E  0021               	movlb	1	; select bank1
 13266  126F  0431               	iorwf	??_updateVoltages^(0+128),w
 13267  1270  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13268  1271  0876               	movf	?_readRegister+1,w
 13269  1272  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13270  1273  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13271  1274  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13272  1275  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13273  1276  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13274  1277  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13275  1278  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13276                           
 13277                           ;BQ76920.c: 214:   batVoltage = 4.0 * adcGain * adcVal / 1000.0 + 4 * adcOffset;
 13278  1279  0022               	movlb	2	; select bank2
 13279  127A  086D               	movf	_adcGain^(0+256),w
 13280  127B  00F1               	movwf	___xxtofl@val
 13281  127C  086E               	movf	(_adcGain+1)^(0+256),w
 13282  127D  00F2               	movwf	___xxtofl@val+1
 13283  127E  0D89               	rlf	9,f
 13284  127F  3B89               	subwfb	9,f
 13285  1280  0989               	comf	9,f
 13286  1281  00F3               	movwf	___xxtofl@val+2
 13287  1282  00F4               	movwf	___xxtofl@val+3
 13288  1283  3001               	movlw	1
 13289  1284  31AB  23D3  3192   	fcall	___xxtofl
 13290  1287  0874               	movf	?___xxtofl+3,w
 13291  1288  0020               	movlb	0	; select bank0
 13292  1289  00AD               	movwf	___flmul@a+3
 13293  128A  0873               	movf	?___xxtofl+2,w
 13294  128B  00AC               	movwf	___flmul@a+2
 13295  128C  0872               	movf	?___xxtofl+1,w
 13296  128D  00AB               	movwf	___flmul@a+1
 13297  128E  0871               	movf	?___xxtofl,w
 13298  128F  00AA               	movwf	___flmul@a
 13299  1290  3040               	movlw	64
 13300  1291  00A9               	movwf	___flmul@b+3
 13301  1292  3080               	movlw	128
 13302  1293  00A8               	movwf	___flmul@b+2
 13303  1294  3000               	movlw	0
 13304  1295  00A7               	movwf	___flmul@b+1
 13305  1296  3000               	movlw	0
 13306  1297  00A6               	movwf	___flmul@b
 13307  1298  3190  2023  3192   	fcall	___flmul
 13308  129B  0020               	movlb	0	; select bank0
 13309  129C  0829               	movf	?___flmul+3,w
 13310  129D  0021               	movlb	1	; select bank1
 13311  129E  00B7               	movwf	(_updateVoltages$2030+3)^(0+128)
 13312  129F  0020               	movlb	0	; select bank0
 13313  12A0  0828               	movf	?___flmul+2,w
 13314  12A1  0021               	movlb	1	; select bank1
 13315  12A2  00B6               	movwf	(_updateVoltages$2030+2)^(0+128)
 13316  12A3  0020               	movlb	0	; select bank0
 13317  12A4  0827               	movf	?___flmul+1,w
 13318  12A5  0021               	movlb	1	; select bank1
 13319  12A6  00B5               	movwf	(_updateVoltages$2030+1)^(0+128)
 13320  12A7  0020               	movlb	0	; select bank0
 13321  12A8  0826               	movf	?___flmul,w
 13322  12A9  0021               	movlb	1	; select bank1
 13323  12AA  00B4               	movwf	_updateVoltages$2030^(0+128)
 13324                           
 13325                           ;BQ76920.c: 214:   batVoltage = 4.0 * adcGain * adcVal / 1000.0 + 4 * adcOffset;
 13326  12AB  0837               	movf	(_updateVoltages$2030+3)^(0+128),w
 13327  12AC  0020               	movlb	0	; select bank0
 13328  12AD  00AD               	movwf	___flmul@a+3
 13329  12AE  0021               	movlb	1	; select bank1
 13330  12AF  0836               	movf	(_updateVoltages$2030+2)^(0+128),w
 13331  12B0  0020               	movlb	0	; select bank0
 13332  12B1  00AC               	movwf	___flmul@a+2
 13333  12B2  0021               	movlb	1	; select bank1
 13334  12B3  0835               	movf	(_updateVoltages$2030+1)^(0+128),w
 13335  12B4  0020               	movlb	0	; select bank0
 13336  12B5  00AB               	movwf	___flmul@a+1
 13337  12B6  0021               	movlb	1	; select bank1
 13338  12B7  0834               	movf	_updateVoltages$2030^(0+128),w
 13339  12B8  0020               	movlb	0	; select bank0
 13340  12B9  00AA               	movwf	___flmul@a
 13341  12BA  0021               	movlb	1	; select bank1
 13342  12BB  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13343  12BC  00F4               	movwf	___xxtofl@val+3
 13344  12BD  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13345  12BE  00F3               	movwf	___xxtofl@val+2
 13346  12BF  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13347  12C0  00F2               	movwf	___xxtofl@val+1
 13348  12C1  0838               	movf	updateVoltages@adcVal^(0+128),w
 13349  12C2  00F1               	movwf	___xxtofl@val
 13350  12C3  3001               	movlw	1
 13351  12C4  31AB  23D3  3192   	fcall	___xxtofl
 13352  12C7  0874               	movf	?___xxtofl+3,w
 13353  12C8  0020               	movlb	0	; select bank0
 13354  12C9  00A9               	movwf	___flmul@b+3
 13355  12CA  0873               	movf	?___xxtofl+2,w
 13356  12CB  00A8               	movwf	___flmul@b+2
 13357  12CC  0872               	movf	?___xxtofl+1,w
 13358  12CD  00A7               	movwf	___flmul@b+1
 13359  12CE  0871               	movf	?___xxtofl,w
 13360  12CF  00A6               	movwf	___flmul@b
 13361  12D0  3190  2023  3192   	fcall	___flmul
 13362  12D3  0020               	movlb	0	; select bank0
 13363  12D4  0829               	movf	?___flmul+3,w
 13364  12D5  00C7               	movwf	___fldiv@b+3
 13365  12D6  0828               	movf	?___flmul+2,w
 13366  12D7  00C6               	movwf	___fldiv@b+2
 13367  12D8  0827               	movf	?___flmul+1,w
 13368  12D9  00C5               	movwf	___fldiv@b+1
 13369  12DA  0826               	movf	?___flmul,w
 13370  12DB  00C4               	movwf	___fldiv@b
 13371  12DC  3044               	movlw	68
 13372  12DD  00C3               	movwf	___fldiv@a+3
 13373  12DE  307A               	movlw	122
 13374  12DF  00C2               	movwf	___fldiv@a+2
 13375  12E0  3000               	movlw	0
 13376  12E1  00C1               	movwf	___fldiv@a+1
 13377  12E2  3000               	movlw	0
 13378  12E3  00C0               	movwf	___fldiv@a
 13379  12E4  319C  24E2  3192   	fcall	___fldiv
 13380  12E7  0020               	movlb	0	; select bank0
 13381  12E8  0843               	movf	?___fldiv+3,w
 13382  12E9  00E1               	movwf	___fladd@a+3
 13383  12EA  0842               	movf	?___fldiv+2,w
 13384  12EB  00E0               	movwf	___fladd@a+2
 13385  12EC  0841               	movf	?___fldiv+1,w
 13386  12ED  00DF               	movwf	___fladd@a+1
 13387  12EE  0840               	movf	?___fldiv,w
 13388  12EF  00DE               	movwf	___fladd@a
 13389  12F0  0022               	movlb	2	; select bank2
 13390  12F1  086C               	movf	(_adcOffset+1)^(0+256),w
 13391  12F2  0021               	movlb	1	; select bank1
 13392  12F3  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13393  12F4  0022               	movlb	2	; select bank2
 13394  12F5  086B               	movf	_adcOffset^(0+256),w
 13395  12F6  0021               	movlb	1	; select bank1
 13396  12F7  00B1               	movwf	??_updateVoltages^(0+128)
 13397  12F8  35B1               	lslf	??_updateVoltages^(0+128),f
 13398  12F9  0DB2               	rlf	(??_updateVoltages^(0+128)+1),f
 13399  12FA  35B1               	lslf	??_updateVoltages^(0+128),f
 13400  12FB  0DB2               	rlf	(??_updateVoltages^(0+128)+1),f
 13401  12FC  0831               	movf	??_updateVoltages^(0+128),w
 13402  12FD  00F1               	movwf	___xxtofl@val
 13403  12FE  0832               	movf	(??_updateVoltages+1)^(0+128),w
 13404  12FF  00F2               	movwf	___xxtofl@val+1
 13405  1300  0D89               	rlf	9,f
 13406  1301  3B89               	subwfb	9,f
 13407  1302  0989               	comf	9,f
 13408  1303  00F3               	movwf	___xxtofl@val+2
 13409  1304  00F4               	movwf	___xxtofl@val+3
 13410  1305  3001               	movlw	1
 13411  1306  31AB  23D3  3192   	fcall	___xxtofl
 13412  1309  0874               	movf	?___xxtofl+3,w
 13413  130A  0020               	movlb	0	; select bank0
 13414  130B  00DD               	movwf	___fladd@b+3
 13415  130C  0873               	movf	?___xxtofl+2,w
 13416  130D  00DC               	movwf	___fladd@b+2
 13417  130E  0872               	movf	?___xxtofl+1,w
 13418  130F  00DB               	movwf	___fladd@b+1
 13419  1310  0871               	movf	?___xxtofl,w
 13420  1311  00DA               	movwf	___fladd@b
 13421  1312  3185  25F5  3192   	fcall	___fladd
 13422  1315  0020               	movlb	0	; select bank0
 13423  1316  085D               	movf	?___fladd+3,w
 13424  1317  0021               	movlb	1	; select bank1
 13425  1318  00AB               	movwf	(___fltol@f1+3)^(0+128)
 13426  1319  0020               	movlb	0	; select bank0
 13427  131A  085C               	movf	?___fladd+2,w
 13428  131B  0021               	movlb	1	; select bank1
 13429  131C  00AA               	movwf	(___fltol@f1+2)^(0+128)
 13430  131D  0020               	movlb	0	; select bank0
 13431  131E  085B               	movf	?___fladd+1,w
 13432  131F  0021               	movlb	1	; select bank1
 13433  1320  00A9               	movwf	(___fltol@f1+1)^(0+128)
 13434  1321  0020               	movlb	0	; select bank0
 13435  1322  085A               	movf	?___fladd,w
 13436  1323  0021               	movlb	1	; select bank1
 13437  1324  00A8               	movwf	___fltol@f1^(0+128)
 13438  1325  31A8  2095  3192   	fcall	___fltol
 13439  1328  0021               	movlb	1	; select bank1
 13440  1329  082B               	movf	(?___fltol+3)^(0+128),w
 13441  132A  0023               	movlb	3	; select bank3
 13442  132B  00C1               	movwf	(_batVoltage+3)^(0+384)
 13443  132C  0021               	movlb	1	; select bank1
 13444  132D  082A               	movf	(?___fltol+2)^(0+128),w
 13445  132E  0023               	movlb	3	; select bank3
 13446  132F  00C0               	movwf	(_batVoltage+2)^(0+384)
 13447  1330  0021               	movlb	1	; select bank1
 13448  1331  0829               	movf	(?___fltol+1)^(0+128),w
 13449  1332  0023               	movlb	3	; select bank3
 13450  1333  00BF               	movwf	(_batVoltage+1)^(0+384)
 13451  1334  0021               	movlb	1	; select bank1
 13452  1335  0828               	movf	?___fltol^(0+128),w
 13453  1336  0023               	movlb	3	; select bank3
 13454  1337  00BE               	movwf	_batVoltage^(0+384)
 13455                           
 13456                           ;BQ76920.c: 237:     adcVal = ((readRegister(0x18, 0x0C) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x0D);
 13457  1338  3018               	movlw	24
 13458  1339  00F5               	movwf	readRegister@slaveAddress
 13459  133A  3000               	movlw	0
 13460  133B  00F6               	movwf	readRegister@slaveAddress+1
 13461  133C  300C               	movlw	12
 13462  133D  00F7               	movwf	readRegister@regAddress
 13463  133E  3000               	movlw	0
 13464  133F  00F8               	movwf	readRegister@regAddress+1
 13465  1340  31B6  26AC  3192   	fcall	_readRegister
 13466  1343  303F               	movlw	63
 13467  1344  0575               	andwf	?_readRegister,w
 13468  1345  0021               	movlb	1	; select bank1
 13469  1346  00B1               	movwf	??_updateVoltages^(0+128)
 13470  1347  3000               	movlw	0
 13471  1348  0576               	andwf	?_readRegister+1,w
 13472  1349  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13473  134A  0831               	movf	??_updateVoltages^(0+128),w
 13474  134B  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13475  134C  01B1               	clrf	??_updateVoltages^(0+128)
 13476  134D  3018               	movlw	24
 13477  134E  00F5               	movwf	readRegister@slaveAddress
 13478  134F  3000               	movlw	0
 13479  1350  00F6               	movwf	readRegister@slaveAddress+1
 13480  1351  300D               	movlw	13
 13481  1352  00F7               	movwf	readRegister@regAddress
 13482  1353  3000               	movlw	0
 13483  1354  00F8               	movwf	readRegister@regAddress+1
 13484  1355  31B6  26AC  3192   	fcall	_readRegister
 13485  1358  0875               	movf	?_readRegister,w
 13486  1359  0021               	movlb	1	; select bank1
 13487  135A  0431               	iorwf	??_updateVoltages^(0+128),w
 13488  135B  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13489  135C  0876               	movf	?_readRegister+1,w
 13490  135D  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13491  135E  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13492  135F  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13493  1360  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13494  1361  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13495  1362  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13496  1363  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13497                           
 13498                           ;BQ76920.c: 238:     cellVoltages[0] = (adcVal * adcGain / 1000) + adcOffset;
 13499  1364  3000               	movlw	0
 13500  1365  0020               	movlb	0	; select bank0
 13501  1366  00A7               	movwf	___aldiv@divisor+3
 13502  1367  3000               	movlw	0
 13503  1368  00A6               	movwf	___aldiv@divisor+2
 13504  1369  3003               	movlw	3
 13505  136A  00A5               	movwf	___aldiv@divisor+1
 13506  136B  30E8               	movlw	232
 13507  136C  00A4               	movwf	___aldiv@divisor
 13508  136D  0022               	movlb	2	; select bank2
 13509  136E  086D               	movf	_adcGain^(0+256),w
 13510  136F  00F1               	movwf	___lmul@multiplier
 13511  1370  086E               	movf	(_adcGain+1)^(0+256),w
 13512  1371  00F2               	movwf	___lmul@multiplier+1
 13513  1372  0D89               	rlf	9,f
 13514  1373  3B89               	subwfb	9,f
 13515  1374  0989               	comf	9,f
 13516  1375  00F3               	movwf	___lmul@multiplier+2
 13517  1376  00F4               	movwf	___lmul@multiplier+3
 13518  1377  0021               	movlb	1	; select bank1
 13519  1378  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13520  1379  00F8               	movwf	___lmul@multiplicand+3
 13521  137A  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13522  137B  00F7               	movwf	___lmul@multiplicand+2
 13523  137C  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13524  137D  00F6               	movwf	___lmul@multiplicand+1
 13525  137E  0838               	movf	updateVoltages@adcVal^(0+128),w
 13526  137F  00F5               	movwf	___lmul@multiplicand
 13527  1380  31B6  2613  3192   	fcall	___lmul
 13528  1383  0874               	movf	?___lmul+3,w
 13529  1384  0020               	movlb	0	; select bank0
 13530  1385  00AB               	movwf	___aldiv@dividend+3
 13531  1386  0873               	movf	?___lmul+2,w
 13532  1387  00AA               	movwf	___aldiv@dividend+2
 13533  1388  0872               	movf	?___lmul+1,w
 13534  1389  00A9               	movwf	___aldiv@dividend+1
 13535  138A  0871               	movf	?___lmul,w
 13536  138B  00A8               	movwf	___aldiv@dividend
 13537  138C  31AB  2351  3192   	fcall	___aldiv
 13538  138F  0022               	movlb	2	; select bank2
 13539  1390  086B               	movf	_adcOffset^(0+256),w
 13540  1391  0020               	movlb	0	; select bank0
 13541  1392  0724               	addwf	?___aldiv,w
 13542  1393  0023               	movlb	3	; select bank3
 13543  1394  00A0               	movwf	_cellVoltages^(0+384)
 13544  1395  0022               	movlb	2	; select bank2
 13545  1396  086C               	movf	(_adcOffset+1)^(0+256),w
 13546  1397  0020               	movlb	0	; select bank0
 13547  1398  3D25               	addwfc	?___aldiv+1,w
 13548  1399  0023               	movlb	3	; select bank3
 13549  139A  00A1               	movwf	(_cellVoltages+1)^(0+384)
 13550                           
 13551                           ;BQ76920.c: 239:     adcVal = ((readRegister(0x18, 0x0E) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x0F);
 13552  139B  3018               	movlw	24
 13553  139C  00F5               	movwf	readRegister@slaveAddress
 13554  139D  3000               	movlw	0
 13555  139E  00F6               	movwf	readRegister@slaveAddress+1
 13556  139F  300E               	movlw	14
 13557  13A0  00F7               	movwf	readRegister@regAddress
 13558  13A1  3000               	movlw	0
 13559  13A2  00F8               	movwf	readRegister@regAddress+1
 13560  13A3  31B6  26AC  3192   	fcall	_readRegister
 13561  13A6  303F               	movlw	63
 13562  13A7  0575               	andwf	?_readRegister,w
 13563  13A8  0021               	movlb	1	; select bank1
 13564  13A9  00B1               	movwf	??_updateVoltages^(0+128)
 13565  13AA  3000               	movlw	0
 13566  13AB  0576               	andwf	?_readRegister+1,w
 13567  13AC  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13568  13AD  0831               	movf	??_updateVoltages^(0+128),w
 13569  13AE  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13570  13AF  01B1               	clrf	??_updateVoltages^(0+128)
 13571  13B0  3018               	movlw	24
 13572  13B1  00F5               	movwf	readRegister@slaveAddress
 13573  13B2  3000               	movlw	0
 13574  13B3  00F6               	movwf	readRegister@slaveAddress+1
 13575  13B4  300F               	movlw	15
 13576  13B5  00F7               	movwf	readRegister@regAddress
 13577  13B6  3000               	movlw	0
 13578  13B7  00F8               	movwf	readRegister@regAddress+1
 13579  13B8  31B6  26AC  3192   	fcall	_readRegister
 13580  13BB  0875               	movf	?_readRegister,w
 13581  13BC  0021               	movlb	1	; select bank1
 13582  13BD  0431               	iorwf	??_updateVoltages^(0+128),w
 13583  13BE  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13584  13BF  0876               	movf	?_readRegister+1,w
 13585  13C0  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13586  13C1  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13587  13C2  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13588  13C3  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13589  13C4  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13590  13C5  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13591  13C6  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13592                           
 13593                           ;BQ76920.c: 240:     cellVoltages[1] = (adcVal * adcGain / 1000) + adcOffset;
 13594  13C7  3000               	movlw	0
 13595  13C8  0020               	movlb	0	; select bank0
 13596  13C9  00A7               	movwf	___aldiv@divisor+3
 13597  13CA  3000               	movlw	0
 13598  13CB  00A6               	movwf	___aldiv@divisor+2
 13599  13CC  3003               	movlw	3
 13600  13CD  00A5               	movwf	___aldiv@divisor+1
 13601  13CE  30E8               	movlw	232
 13602  13CF  00A4               	movwf	___aldiv@divisor
 13603  13D0  0022               	movlb	2	; select bank2
 13604  13D1  086D               	movf	_adcGain^(0+256),w
 13605  13D2  00F1               	movwf	___lmul@multiplier
 13606  13D3  086E               	movf	(_adcGain+1)^(0+256),w
 13607  13D4  00F2               	movwf	___lmul@multiplier+1
 13608  13D5  0D89               	rlf	9,f
 13609  13D6  3B89               	subwfb	9,f
 13610  13D7  0989               	comf	9,f
 13611  13D8  00F3               	movwf	___lmul@multiplier+2
 13612  13D9  00F4               	movwf	___lmul@multiplier+3
 13613  13DA  0021               	movlb	1	; select bank1
 13614  13DB  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13615  13DC  00F8               	movwf	___lmul@multiplicand+3
 13616  13DD  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13617  13DE  00F7               	movwf	___lmul@multiplicand+2
 13618  13DF  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13619  13E0  00F6               	movwf	___lmul@multiplicand+1
 13620  13E1  0838               	movf	updateVoltages@adcVal^(0+128),w
 13621  13E2  00F5               	movwf	___lmul@multiplicand
 13622  13E3  31B6  2613  3192   	fcall	___lmul
 13623  13E6  0874               	movf	?___lmul+3,w
 13624  13E7  0020               	movlb	0	; select bank0
 13625  13E8  00AB               	movwf	___aldiv@dividend+3
 13626  13E9  0873               	movf	?___lmul+2,w
 13627  13EA  00AA               	movwf	___aldiv@dividend+2
 13628  13EB  0872               	movf	?___lmul+1,w
 13629  13EC  00A9               	movwf	___aldiv@dividend+1
 13630  13ED  0871               	movf	?___lmul,w
 13631  13EE  00A8               	movwf	___aldiv@dividend
 13632  13EF  31AB  2351  3192   	fcall	___aldiv
 13633  13F2  0022               	movlb	2	; select bank2
 13634  13F3  086B               	movf	_adcOffset^(0+256),w
 13635  13F4  0020               	movlb	0	; select bank0
 13636  13F5  0724               	addwf	?___aldiv,w
 13637  13F6  0023               	movlb	3	; select bank3
 13638  13F7  00A2               	movwf	(_cellVoltages^(0+384)+2)
 13639  13F8  0022               	movlb	2	; select bank2
 13640  13F9  086C               	movf	(_adcOffset+1)^(0+256),w
 13641  13FA  0020               	movlb	0	; select bank0
 13642  13FB  3D25               	addwfc	?___aldiv+1,w
 13643  13FC  0023               	movlb	3	; select bank3
 13644  13FD  00A3               	movwf	((_cellVoltages+1)^(0+384)+2)
 13645                           
 13646                           ;BQ76920.c: 241:     adcVal = ((readRegister(0x18, 0x10) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x11);
 13647  13FE  3018               	movlw	24
 13648  13FF  00F5               	movwf	readRegister@slaveAddress
 13649  1400  3000               	movlw	0
 13650  1401  00F6               	movwf	readRegister@slaveAddress+1
 13651  1402  3010               	movlw	16
 13652  1403  00F7               	movwf	readRegister@regAddress
 13653  1404  3000               	movlw	0
 13654  1405  00F8               	movwf	readRegister@regAddress+1
 13655  1406  31B6  26AC  3192   	fcall	_readRegister
 13656  1409  303F               	movlw	63
 13657  140A  0575               	andwf	?_readRegister,w
 13658  140B  0021               	movlb	1	; select bank1
 13659  140C  00B1               	movwf	??_updateVoltages^(0+128)
 13660  140D  3000               	movlw	0
 13661  140E  0576               	andwf	?_readRegister+1,w
 13662  140F  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13663  1410  0831               	movf	??_updateVoltages^(0+128),w
 13664  1411  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13665  1412  01B1               	clrf	??_updateVoltages^(0+128)
 13666  1413  3018               	movlw	24
 13667  1414  00F5               	movwf	readRegister@slaveAddress
 13668  1415  3000               	movlw	0
 13669  1416  00F6               	movwf	readRegister@slaveAddress+1
 13670  1417  3011               	movlw	17
 13671  1418  00F7               	movwf	readRegister@regAddress
 13672  1419  3000               	movlw	0
 13673  141A  00F8               	movwf	readRegister@regAddress+1
 13674  141B  31B6  26AC  3192   	fcall	_readRegister
 13675  141E  0875               	movf	?_readRegister,w
 13676  141F  0021               	movlb	1	; select bank1
 13677  1420  0431               	iorwf	??_updateVoltages^(0+128),w
 13678  1421  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13679  1422  0876               	movf	?_readRegister+1,w
 13680  1423  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13681  1424  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13682  1425  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13683  1426  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13684  1427  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13685  1428  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13686  1429  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13687                           
 13688                           ;BQ76920.c: 242:     cellVoltages[2] = (adcVal * adcGain / 1000) + adcOffset;
 13689  142A  3000               	movlw	0
 13690  142B  0020               	movlb	0	; select bank0
 13691  142C  00A7               	movwf	___aldiv@divisor+3
 13692  142D  3000               	movlw	0
 13693  142E  00A6               	movwf	___aldiv@divisor+2
 13694  142F  3003               	movlw	3
 13695  1430  00A5               	movwf	___aldiv@divisor+1
 13696  1431  30E8               	movlw	232
 13697  1432  00A4               	movwf	___aldiv@divisor
 13698  1433  0022               	movlb	2	; select bank2
 13699  1434  086D               	movf	_adcGain^(0+256),w
 13700  1435  00F1               	movwf	___lmul@multiplier
 13701  1436  086E               	movf	(_adcGain+1)^(0+256),w
 13702  1437  00F2               	movwf	___lmul@multiplier+1
 13703  1438  0D89               	rlf	9,f
 13704  1439  3B89               	subwfb	9,f
 13705  143A  0989               	comf	9,f
 13706  143B  00F3               	movwf	___lmul@multiplier+2
 13707  143C  00F4               	movwf	___lmul@multiplier+3
 13708  143D  0021               	movlb	1	; select bank1
 13709  143E  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13710  143F  00F8               	movwf	___lmul@multiplicand+3
 13711  1440  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13712  1441  00F7               	movwf	___lmul@multiplicand+2
 13713  1442  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13714  1443  00F6               	movwf	___lmul@multiplicand+1
 13715  1444  0838               	movf	updateVoltages@adcVal^(0+128),w
 13716  1445  00F5               	movwf	___lmul@multiplicand
 13717  1446  31B6  2613  3192   	fcall	___lmul
 13718  1449  0874               	movf	?___lmul+3,w
 13719  144A  0020               	movlb	0	; select bank0
 13720  144B  00AB               	movwf	___aldiv@dividend+3
 13721  144C  0873               	movf	?___lmul+2,w
 13722  144D  00AA               	movwf	___aldiv@dividend+2
 13723  144E  0872               	movf	?___lmul+1,w
 13724  144F  00A9               	movwf	___aldiv@dividend+1
 13725  1450  0871               	movf	?___lmul,w
 13726  1451  00A8               	movwf	___aldiv@dividend
 13727  1452  31AB  2351  3192   	fcall	___aldiv
 13728  1455  0022               	movlb	2	; select bank2
 13729  1456  086B               	movf	_adcOffset^(0+256),w
 13730  1457  0020               	movlb	0	; select bank0
 13731  1458  0724               	addwf	?___aldiv,w
 13732  1459  0023               	movlb	3	; select bank3
 13733  145A  00A4               	movwf	(_cellVoltages^(0+384)+4)
 13734  145B  0022               	movlb	2	; select bank2
 13735  145C  086C               	movf	(_adcOffset+1)^(0+256),w
 13736  145D  0020               	movlb	0	; select bank0
 13737  145E  3D25               	addwfc	?___aldiv+1,w
 13738  145F  0023               	movlb	3	; select bank3
 13739  1460  00A5               	movwf	((_cellVoltages+1)^(0+384)+4)
 13740                           
 13741                           ;BQ76920.c: 243:     adcVal = ((readRegister(0x18, 0x12) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x13);
 13742  1461  3018               	movlw	24
 13743  1462  00F5               	movwf	readRegister@slaveAddress
 13744  1463  3000               	movlw	0
 13745  1464  00F6               	movwf	readRegister@slaveAddress+1
 13746  1465  3012               	movlw	18
 13747  1466  00F7               	movwf	readRegister@regAddress
 13748  1467  3000               	movlw	0
 13749  1468  00F8               	movwf	readRegister@regAddress+1
 13750  1469  31B6  26AC  3192   	fcall	_readRegister
 13751  146C  303F               	movlw	63
 13752  146D  0575               	andwf	?_readRegister,w
 13753  146E  0021               	movlb	1	; select bank1
 13754  146F  00B1               	movwf	??_updateVoltages^(0+128)
 13755  1470  3000               	movlw	0
 13756  1471  0576               	andwf	?_readRegister+1,w
 13757  1472  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13758  1473  0831               	movf	??_updateVoltages^(0+128),w
 13759  1474  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13760  1475  01B1               	clrf	??_updateVoltages^(0+128)
 13761  1476  3018               	movlw	24
 13762  1477  00F5               	movwf	readRegister@slaveAddress
 13763  1478  3000               	movlw	0
 13764  1479  00F6               	movwf	readRegister@slaveAddress+1
 13765  147A  3013               	movlw	19
 13766  147B  00F7               	movwf	readRegister@regAddress
 13767  147C  3000               	movlw	0
 13768  147D  00F8               	movwf	readRegister@regAddress+1
 13769  147E  31B6  26AC  3192   	fcall	_readRegister
 13770  1481  0875               	movf	?_readRegister,w
 13771  1482  0021               	movlb	1	; select bank1
 13772  1483  0431               	iorwf	??_updateVoltages^(0+128),w
 13773  1484  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13774  1485  0876               	movf	?_readRegister+1,w
 13775  1486  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13776  1487  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13777  1488  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13778  1489  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13779  148A  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13780  148B  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13781  148C  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13782                           
 13783                           ;BQ76920.c: 244:     cellVoltages[3] = (adcVal * adcGain / 1000) + adcOffset;
 13784  148D  3000               	movlw	0
 13785  148E  0020               	movlb	0	; select bank0
 13786  148F  00A7               	movwf	___aldiv@divisor+3
 13787  1490  3000               	movlw	0
 13788  1491  00A6               	movwf	___aldiv@divisor+2
 13789  1492  3003               	movlw	3
 13790  1493  00A5               	movwf	___aldiv@divisor+1
 13791  1494  30E8               	movlw	232
 13792  1495  00A4               	movwf	___aldiv@divisor
 13793  1496  0022               	movlb	2	; select bank2
 13794  1497  086D               	movf	_adcGain^(0+256),w
 13795  1498  00F1               	movwf	___lmul@multiplier
 13796  1499  086E               	movf	(_adcGain+1)^(0+256),w
 13797  149A  00F2               	movwf	___lmul@multiplier+1
 13798  149B  0D89               	rlf	9,f
 13799  149C  3B89               	subwfb	9,f
 13800  149D  0989               	comf	9,f
 13801  149E  00F3               	movwf	___lmul@multiplier+2
 13802  149F  00F4               	movwf	___lmul@multiplier+3
 13803  14A0  0021               	movlb	1	; select bank1
 13804  14A1  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13805  14A2  00F8               	movwf	___lmul@multiplicand+3
 13806  14A3  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13807  14A4  00F7               	movwf	___lmul@multiplicand+2
 13808  14A5  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13809  14A6  00F6               	movwf	___lmul@multiplicand+1
 13810  14A7  0838               	movf	updateVoltages@adcVal^(0+128),w
 13811  14A8  00F5               	movwf	___lmul@multiplicand
 13812  14A9  31B6  2613  3192   	fcall	___lmul
 13813  14AC  0874               	movf	?___lmul+3,w
 13814  14AD  0020               	movlb	0	; select bank0
 13815  14AE  00AB               	movwf	___aldiv@dividend+3
 13816  14AF  0873               	movf	?___lmul+2,w
 13817  14B0  00AA               	movwf	___aldiv@dividend+2
 13818  14B1  0872               	movf	?___lmul+1,w
 13819  14B2  00A9               	movwf	___aldiv@dividend+1
 13820  14B3  0871               	movf	?___lmul,w
 13821  14B4  00A8               	movwf	___aldiv@dividend
 13822  14B5  31AB  2351  3192   	fcall	___aldiv
 13823  14B8  0022               	movlb	2	; select bank2
 13824  14B9  086B               	movf	_adcOffset^(0+256),w
 13825  14BA  0020               	movlb	0	; select bank0
 13826  14BB  0724               	addwf	?___aldiv,w
 13827  14BC  0023               	movlb	3	; select bank3
 13828  14BD  00A6               	movwf	(_cellVoltages^(0+384)+6)
 13829  14BE  0022               	movlb	2	; select bank2
 13830  14BF  086C               	movf	(_adcOffset+1)^(0+256),w
 13831  14C0  0020               	movlb	0	; select bank0
 13832  14C1  3D25               	addwfc	?___aldiv+1,w
 13833  14C2  0023               	movlb	3	; select bank3
 13834  14C3  00A7               	movwf	((_cellVoltages+1)^(0+384)+6)
 13835                           
 13836                           ;BQ76920.c: 245:     adcVal = ((readRegister(0x18, 0x14) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x15);
 13837  14C4  3018               	movlw	24
 13838  14C5  00F5               	movwf	readRegister@slaveAddress
 13839  14C6  3000               	movlw	0
 13840  14C7  00F6               	movwf	readRegister@slaveAddress+1
 13841  14C8  3014               	movlw	20
 13842  14C9  00F7               	movwf	readRegister@regAddress
 13843  14CA  3000               	movlw	0
 13844  14CB  00F8               	movwf	readRegister@regAddress+1
 13845  14CC  31B6  26AC  3192   	fcall	_readRegister
 13846  14CF  303F               	movlw	63
 13847  14D0  0575               	andwf	?_readRegister,w
 13848  14D1  0021               	movlb	1	; select bank1
 13849  14D2  00B1               	movwf	??_updateVoltages^(0+128)
 13850  14D3  3000               	movlw	0
 13851  14D4  0576               	andwf	?_readRegister+1,w
 13852  14D5  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13853  14D6  0831               	movf	??_updateVoltages^(0+128),w
 13854  14D7  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13855  14D8  01B1               	clrf	??_updateVoltages^(0+128)
 13856  14D9  3018               	movlw	24
 13857  14DA  00F5               	movwf	readRegister@slaveAddress
 13858  14DB  3000               	movlw	0
 13859  14DC  00F6               	movwf	readRegister@slaveAddress+1
 13860  14DD  3015               	movlw	21
 13861  14DE  00F7               	movwf	readRegister@regAddress
 13862  14DF  3000               	movlw	0
 13863  14E0  00F8               	movwf	readRegister@regAddress+1
 13864  14E1  31B6  26AC  3192   	fcall	_readRegister
 13865  14E4  0875               	movf	?_readRegister,w
 13866  14E5  0021               	movlb	1	; select bank1
 13867  14E6  0431               	iorwf	??_updateVoltages^(0+128),w
 13868  14E7  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13869  14E8  0876               	movf	?_readRegister+1,w
 13870  14E9  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13871  14EA  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13872  14EB  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13873  14EC  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13874  14ED  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13875  14EE  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13876  14EF  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13877                           
 13878                           ;BQ76920.c: 246:     cellVoltages[4] = (adcVal * adcGain / 1000) + adcOffset;
 13879  14F0  3000               	movlw	0
 13880  14F1  0020               	movlb	0	; select bank0
 13881  14F2  00A7               	movwf	___aldiv@divisor+3
 13882  14F3  3000               	movlw	0
 13883  14F4  00A6               	movwf	___aldiv@divisor+2
 13884  14F5  3003               	movlw	3
 13885  14F6  00A5               	movwf	___aldiv@divisor+1
 13886  14F7  30E8               	movlw	232
 13887  14F8  00A4               	movwf	___aldiv@divisor
 13888  14F9  0022               	movlb	2	; select bank2
 13889  14FA  086D               	movf	_adcGain^(0+256),w
 13890  14FB  00F1               	movwf	___lmul@multiplier
 13891  14FC  086E               	movf	(_adcGain+1)^(0+256),w
 13892  14FD  00F2               	movwf	___lmul@multiplier+1
 13893  14FE  0D89               	rlf	9,f
 13894  14FF  3B89               	subwfb	9,f
 13895  1500  0989               	comf	9,f
 13896  1501  00F3               	movwf	___lmul@multiplier+2
 13897  1502  00F4               	movwf	___lmul@multiplier+3
 13898  1503  0021               	movlb	1	; select bank1
 13899  1504  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13900  1505  00F8               	movwf	___lmul@multiplicand+3
 13901  1506  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13902  1507  00F7               	movwf	___lmul@multiplicand+2
 13903  1508  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13904  1509  00F6               	movwf	___lmul@multiplicand+1
 13905  150A  0838               	movf	updateVoltages@adcVal^(0+128),w
 13906  150B  00F5               	movwf	___lmul@multiplicand
 13907  150C  31B6  2613  3192   	fcall	___lmul
 13908  150F  0874               	movf	?___lmul+3,w
 13909  1510  0020               	movlb	0	; select bank0
 13910  1511  00AB               	movwf	___aldiv@dividend+3
 13911  1512  0873               	movf	?___lmul+2,w
 13912  1513  00AA               	movwf	___aldiv@dividend+2
 13913  1514  0872               	movf	?___lmul+1,w
 13914  1515  00A9               	movwf	___aldiv@dividend+1
 13915  1516  0871               	movf	?___lmul,w
 13916  1517  00A8               	movwf	___aldiv@dividend
 13917  1518  31AB  2351         	fcall	___aldiv
 13918  151A  0022               	movlb	2	; select bank2
 13919  151B  086B               	movf	_adcOffset^(0+256),w
 13920  151C  0020               	movlb	0	; select bank0
 13921  151D  0724               	addwf	?___aldiv,w
 13922  151E  0023               	movlb	3	; select bank3
 13923  151F  00A8               	movwf	(_cellVoltages^(0+384)+8)
 13924  1520  0022               	movlb	2	; select bank2
 13925  1521  086C               	movf	(_adcOffset+1)^(0+256),w
 13926  1522  0020               	movlb	0	; select bank0
 13927  1523  3D25               	addwfc	?___aldiv+1,w
 13928  1524  0023               	movlb	3	; select bank3
 13929  1525  00A9               	movwf	((_cellVoltages+1)^(0+384)+8)
 13930  1526  0008               	return
 13931  1527                     __end_of_updateVoltages:	
 13932                           
 13933                           	psect	text48
 13934  3613                     __ptext48:	
 13935 ;; *************** function ___lmul *****************
 13936 ;; Defined at:
 13937 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
 13938 ;; Parameters:    Size  Location     Type
 13939 ;;  multiplier      4    1[COMMON] unsigned long 
 13940 ;;  multiplicand    4    5[COMMON] unsigned long 
 13941 ;; Auto vars:     Size  Location     Type
 13942 ;;  product         4    0[BANK0 ] unsigned long 
 13943 ;; Return value:  Size  Location     Type
 13944 ;;                  4    1[COMMON] unsigned long 
 13945 ;; Registers used:
 13946 ;;		wreg, status,2, status,0
 13947 ;; Tracked objects:
 13948 ;;		On entry : 0/0
 13949 ;;		On exit  : 0/0
 13950 ;;		Unchanged: 0/0
 13951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13952 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13953 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13955 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13956 ;;Total ram usage:       12 bytes
 13957 ;; Hardware stack levels used:    1
 13958 ;; Hardware stack levels required when called:    1
 13959 ;; This function calls:
 13960 ;;		Nothing
 13961 ;; This function is called by:
 13962 ;;		_setCellUndervoltageProtection
 13963 ;;		_setCellOvervoltageProtection
 13964 ;;		_updateVoltages
 13965 ;; This function uses a non-reentrant model
 13966 ;;
 13967                           
 13968                           
 13969                           ;psect for function ___lmul
 13970  3613                     ___lmul:	
 13971                           
 13972                           ;incstack = 0
 13973                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 13974  3613  3000               	movlw	0
 13975  3614  0020               	movlb	0	; select bank0
 13976  3615  00A3               	movwf	___lmul@product+3
 13977  3616  3000               	movlw	0
 13978  3617  00A2               	movwf	___lmul@product+2
 13979  3618  3000               	movlw	0
 13980  3619  00A1               	movwf	___lmul@product+1
 13981  361A  3000               	movlw	0
 13982  361B  00A0               	movwf	___lmul@product
 13983  361C                     l7868:	
 13984  361C  1C71               	btfss	___lmul@multiplier,0
 13985  361D  2E27               	goto	l7872
 13986  361E  0875               	movf	___lmul@multiplicand,w
 13987  361F  0020               	movlb	0	; select bank0
 13988  3620  07A0               	addwf	___lmul@product,f
 13989  3621  0876               	movf	___lmul@multiplicand+1,w
 13990  3622  3DA1               	addwfc	___lmul@product+1,f
 13991  3623  0877               	movf	___lmul@multiplicand+2,w
 13992  3624  3DA2               	addwfc	___lmul@product+2,f
 13993  3625  0878               	movf	___lmul@multiplicand+3,w
 13994  3626  3DA3               	addwfc	___lmul@product+3,f
 13995  3627                     l7872:	
 13996  3627  3001               	movlw	1
 13997  3628                     u10795:	
 13998  3628  35F5               	lslf	___lmul@multiplicand,f
 13999  3629  0DF6               	rlf	___lmul@multiplicand+1,f
 14000  362A  0DF7               	rlf	___lmul@multiplicand+2,f
 14001  362B  0DF8               	rlf	___lmul@multiplicand+3,f
 14002  362C  0B89               	decfsz	9,f
 14003  362D  2E28               	goto	u10795
 14004  362E  3001               	movlw	1
 14005  362F                     u10805:	
 14006  362F  36F4               	lsrf	___lmul@multiplier+3,f
 14007  3630  0CF3               	rrf	___lmul@multiplier+2,f
 14008  3631  0CF2               	rrf	___lmul@multiplier+1,f
 14009  3632  0CF1               	rrf	___lmul@multiplier,f
 14010  3633  0B89               	decfsz	9,f
 14011  3634  2E2F               	goto	u10805
 14012  3635  0874               	movf	___lmul@multiplier+3,w
 14013  3636  0473               	iorwf	___lmul@multiplier+2,w
 14014  3637  0472               	iorwf	___lmul@multiplier+1,w
 14015  3638  0471               	iorwf	___lmul@multiplier,w
 14016  3639  1D03               	skipz
 14017  363A  2E1C               	goto	l7868
 14018  363B  0020               	movlb	0	; select bank0
 14019  363C  0823               	movf	___lmul@product+3,w
 14020  363D  00F4               	movwf	?___lmul+3
 14021  363E  0822               	movf	___lmul@product+2,w
 14022  363F  00F3               	movwf	?___lmul+2
 14023  3640  0821               	movf	___lmul@product+1,w
 14024  3641  00F2               	movwf	?___lmul+1
 14025  3642  0820               	movf	___lmul@product,w
 14026  3643  00F1               	movwf	?___lmul
 14027  3644  0008               	return
 14028  3645                     __end_of___lmul:	
 14029                           
 14030                           	psect	text49
 14031  1527                     __ptext49:	
 14032 ;; *************** function _updateTemperatures *****************
 14033 ;; Defined at:
 14034 ;;		line 253 in file "BQ76920.c"
 14035 ;; Parameters:    Size  Location     Type
 14036 ;;		None
 14037 ;; Auto vars:     Size  Location     Type
 14038 ;;  rts             4   75[BANK1 ] unsigned long 
 14039 ;;  tmp             4   67[BANK1 ] float 
 14040 ;;  vtsx            2   73[BANK1 ] int 
 14041 ;;  adcVal          2   71[BANK1 ] int 
 14042 ;; Return value:  Size  Location     Type
 14043 ;;                  1    wreg      void 
 14044 ;; Registers used:
 14045 ;;		wreg, status,2, status,0, pclath, cstack
 14046 ;; Tracked objects:
 14047 ;;		On entry : 0/0
 14048 ;;		On exit  : 0/0
 14049 ;;		Unchanged: 0/0
 14050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14052 ;;      Locals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14053 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14054 ;;      Totals:         0       0      59       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14055 ;;Total ram usage:       59 bytes
 14056 ;; Hardware stack levels used:    1
 14057 ;; Hardware stack levels required when called:    4
 14058 ;; This function calls:
 14059 ;;		___fladd
 14060 ;;		___fldiv
 14061 ;;		___flmul
 14062 ;;		___flsub
 14063 ;;		___fltol
 14064 ;;		___xxtofl
 14065 ;;		_logf
 14066 ;;		_readRegister
 14067 ;; This function is called by:
 14068 ;;		_AFE_UPDATE
 14069 ;; This function uses a non-reentrant model
 14070 ;;
 14071                           
 14072                           
 14073                           ;psect for function _updateTemperatures
 14074  1527                     _updateTemperatures:	
 14075                           
 14076                           ;BQ76920.c: 257:      unsigned long rts = 0;
 14077                           
 14078                           ;incstack = 0
 14079                           ; Regs used in _updateTemperatures: [wreg+status,2+status,0+pclath+cstack]
 14080  1527  3000               	movlw	0
 14081  1528  0021               	movlb	1	; select bank1
 14082  1529  00EE               	movwf	(updateTemperatures@rts+3)^(0+128)
 14083  152A  3000               	movlw	0
 14084  152B  00ED               	movwf	(updateTemperatures@rts+2)^(0+128)
 14085  152C  3000               	movlw	0
 14086  152D  00EC               	movwf	(updateTemperatures@rts+1)^(0+128)
 14087  152E  3000               	movlw	0
 14088  152F  00EB               	movwf	updateTemperatures@rts^(0+128)
 14089                           
 14090                           ;BQ76920.c: 259:      adcVal = ((readRegister(0x18, 0x2C) & 0x3F) << 8) | readRegister(0
      +                          x18, 0x2D);
 14091  1530  3018               	movlw	24
 14092  1531  00F5               	movwf	readRegister@slaveAddress
 14093  1532  3000               	movlw	0
 14094  1533  00F6               	movwf	readRegister@slaveAddress+1
 14095  1534  302C               	movlw	44
 14096  1535  00F7               	movwf	readRegister@regAddress
 14097  1536  3000               	movlw	0
 14098  1537  00F8               	movwf	readRegister@regAddress+1
 14099  1538  31B6  26AC  3195   	fcall	_readRegister
 14100  153B  303F               	movlw	63
 14101  153C  0575               	andwf	?_readRegister,w
 14102  153D  0021               	movlb	1	; select bank1
 14103  153E  00B4               	movwf	??_updateTemperatures^(0+128)
 14104  153F  3000               	movlw	0
 14105  1540  0576               	andwf	?_readRegister+1,w
 14106  1541  00B5               	movwf	(??_updateTemperatures+1)^(0+128)
 14107  1542  0834               	movf	??_updateTemperatures^(0+128),w
 14108  1543  00B5               	movwf	(??_updateTemperatures^(0+128)+1)
 14109  1544  01B4               	clrf	??_updateTemperatures^(0+128)
 14110  1545  3018               	movlw	24
 14111  1546  00F5               	movwf	readRegister@slaveAddress
 14112  1547  3000               	movlw	0
 14113  1548  00F6               	movwf	readRegister@slaveAddress+1
 14114  1549  302D               	movlw	45
 14115  154A  00F7               	movwf	readRegister@regAddress
 14116  154B  3000               	movlw	0
 14117  154C  00F8               	movwf	readRegister@regAddress+1
 14118  154D  31B6  26AC  3195   	fcall	_readRegister
 14119  1550  0875               	movf	?_readRegister,w
 14120  1551  0021               	movlb	1	; select bank1
 14121  1552  0434               	iorwf	??_updateTemperatures^(0+128),w
 14122  1553  00E7               	movwf	updateTemperatures@adcVal^(0+128)
 14123  1554  0876               	movf	?_readRegister+1,w
 14124  1555  0435               	iorwf	(??_updateTemperatures+1)^(0+128),w
 14125  1556  00E8               	movwf	(updateTemperatures@adcVal+1)^(0+128)
 14126                           
 14127                           ;BQ76920.c: 260:      vtsx = adcVal * 0.382;
 14128  1557  0867               	movf	updateTemperatures@adcVal^(0+128),w
 14129  1558  00F1               	movwf	___xxtofl@val
 14130  1559  0868               	movf	(updateTemperatures@adcVal+1)^(0+128),w
 14131  155A  00F2               	movwf	___xxtofl@val+1
 14132  155B  0D89               	rlf	9,f
 14133  155C  3B89               	subwfb	9,f
 14134  155D  0989               	comf	9,f
 14135  155E  00F3               	movwf	___xxtofl@val+2
 14136  155F  00F4               	movwf	___xxtofl@val+3
 14137  1560  3001               	movlw	1
 14138  1561  31AB  23D3  3195   	fcall	___xxtofl
 14139  1564  0874               	movf	?___xxtofl+3,w
 14140  1565  0020               	movlb	0	; select bank0
 14141  1566  00AD               	movwf	___flmul@a+3
 14142  1567  0873               	movf	?___xxtofl+2,w
 14143  1568  00AC               	movwf	___flmul@a+2
 14144  1569  0872               	movf	?___xxtofl+1,w
 14145  156A  00AB               	movwf	___flmul@a+1
 14146  156B  0871               	movf	?___xxtofl,w
 14147  156C  00AA               	movwf	___flmul@a
 14148  156D  303E               	movlw	62
 14149  156E  00A9               	movwf	___flmul@b+3
 14150  156F  30C3               	movlw	195
 14151  1570  00A8               	movwf	___flmul@b+2
 14152  1571  3095               	movlw	149
 14153  1572  00A7               	movwf	___flmul@b+1
 14154  1573  3081               	movlw	129
 14155  1574  00A6               	movwf	___flmul@b
 14156  1575  3190  2023  3195   	fcall	___flmul
 14157  1578  0020               	movlb	0	; select bank0
 14158  1579  0829               	movf	?___flmul+3,w
 14159  157A  0021               	movlb	1	; select bank1
 14160  157B  00AB               	movwf	(___fltol@f1+3)^(0+128)
 14161  157C  0020               	movlb	0	; select bank0
 14162  157D  0828               	movf	?___flmul+2,w
 14163  157E  0021               	movlb	1	; select bank1
 14164  157F  00AA               	movwf	(___fltol@f1+2)^(0+128)
 14165  1580  0020               	movlb	0	; select bank0
 14166  1581  0827               	movf	?___flmul+1,w
 14167  1582  0021               	movlb	1	; select bank1
 14168  1583  00A9               	movwf	(___fltol@f1+1)^(0+128)
 14169  1584  0020               	movlb	0	; select bank0
 14170  1585  0826               	movf	?___flmul,w
 14171  1586  0021               	movlb	1	; select bank1
 14172  1587  00A8               	movwf	___fltol@f1^(0+128)
 14173  1588  31A8  2095  3195   	fcall	___fltol
 14174  158B  0021               	movlb	1	; select bank1
 14175  158C  0829               	movf	(?___fltol+1)^(0+128),w
 14176  158D  00EA               	movwf	(updateTemperatures@vtsx+1)^(0+128)
 14177  158E  0828               	movf	?___fltol^(0+128),w
 14178  158F  00E9               	movwf	updateTemperatures@vtsx^(0+128)
 14179                           
 14180                           ;BQ76920.c: 261:      rts = 10000.0 * vtsx / (3300.0 - vtsx);
 14181  1590  0869               	movf	updateTemperatures@vtsx^(0+128),w
 14182  1591  00F1               	movwf	___xxtofl@val
 14183  1592  086A               	movf	(updateTemperatures@vtsx+1)^(0+128),w
 14184  1593  00F2               	movwf	___xxtofl@val+1
 14185  1594  0D89               	rlf	9,f
 14186  1595  3B89               	subwfb	9,f
 14187  1596  0989               	comf	9,f
 14188  1597  00F3               	movwf	___xxtofl@val+2
 14189  1598  00F4               	movwf	___xxtofl@val+3
 14190  1599  3001               	movlw	1
 14191  159A  31AB  23D3  3195   	fcall	___xxtofl
 14192  159D  0874               	movf	?___xxtofl+3,w
 14193  159E  0020               	movlb	0	; select bank0
 14194  159F  00AD               	movwf	___flmul@a+3
 14195  15A0  0873               	movf	?___xxtofl+2,w
 14196  15A1  00AC               	movwf	___flmul@a+2
 14197  15A2  0872               	movf	?___xxtofl+1,w
 14198  15A3  00AB               	movwf	___flmul@a+1
 14199  15A4  0871               	movf	?___xxtofl,w
 14200  15A5  00AA               	movwf	___flmul@a
 14201  15A6  3046               	movlw	70
 14202  15A7  00A9               	movwf	___flmul@b+3
 14203  15A8  301C               	movlw	28
 14204  15A9  00A8               	movwf	___flmul@b+2
 14205  15AA  3040               	movlw	64
 14206  15AB  00A7               	movwf	___flmul@b+1
 14207  15AC  3000               	movlw	0
 14208  15AD  00A6               	movwf	___flmul@b
 14209  15AE  3190  2023  3195   	fcall	___flmul
 14210  15B1  0020               	movlb	0	; select bank0
 14211  15B2  0829               	movf	?___flmul+3,w
 14212  15B3  00C7               	movwf	___fldiv@b+3
 14213  15B4  0828               	movf	?___flmul+2,w
 14214  15B5  00C6               	movwf	___fldiv@b+2
 14215  15B6  0827               	movf	?___flmul+1,w
 14216  15B7  00C5               	movwf	___fldiv@b+1
 14217  15B8  0826               	movf	?___flmul,w
 14218  15B9  00C4               	movwf	___fldiv@b
 14219  15BA  3045               	movlw	69
 14220  15BB  0021               	movlb	1	; select bank1
 14221  15BC  00A7               	movwf	(___flsub@b+3)^(0+128)
 14222  15BD  304E               	movlw	78
 14223  15BE  00A6               	movwf	(___flsub@b+2)^(0+128)
 14224  15BF  3040               	movlw	64
 14225  15C0  00A5               	movwf	(___flsub@b+1)^(0+128)
 14226  15C1  3000               	movlw	0
 14227  15C2  00A4               	movwf	___flsub@b^(0+128)
 14228  15C3  0869               	movf	updateTemperatures@vtsx^(0+128),w
 14229  15C4  00F1               	movwf	___xxtofl@val
 14230  15C5  086A               	movf	(updateTemperatures@vtsx+1)^(0+128),w
 14231  15C6  00F2               	movwf	___xxtofl@val+1
 14232  15C7  0D89               	rlf	9,f
 14233  15C8  3B89               	subwfb	9,f
 14234  15C9  0989               	comf	9,f
 14235  15CA  00F3               	movwf	___xxtofl@val+2
 14236  15CB  00F4               	movwf	___xxtofl@val+3
 14237  15CC  3001               	movlw	1
 14238  15CD  31AB  23D3  3195   	fcall	___xxtofl
 14239  15D0  0874               	movf	?___xxtofl+3,w
 14240  15D1  0021               	movlb	1	; select bank1
 14241  15D2  00A3               	movwf	(___flsub@a+3)^(0+128)
 14242  15D3  0873               	movf	?___xxtofl+2,w
 14243  15D4  00A2               	movwf	(___flsub@a+2)^(0+128)
 14244  15D5  0872               	movf	?___xxtofl+1,w
 14245  15D6  00A1               	movwf	(___flsub@a+1)^(0+128)
 14246  15D7  0871               	movf	?___xxtofl,w
 14247  15D8  00A0               	movwf	___flsub@a^(0+128)
 14248  15D9  31B6  2677  3195   	fcall	___flsub
 14249  15DC  0021               	movlb	1	; select bank1
 14250  15DD  0823               	movf	(?___flsub+3)^(0+128),w
 14251  15DE  0020               	movlb	0	; select bank0
 14252  15DF  00C3               	movwf	___fldiv@a+3
 14253  15E0  0021               	movlb	1	; select bank1
 14254  15E1  0822               	movf	(?___flsub+2)^(0+128),w
 14255  15E2  0020               	movlb	0	; select bank0
 14256  15E3  00C2               	movwf	___fldiv@a+2
 14257  15E4  0021               	movlb	1	; select bank1
 14258  15E5  0821               	movf	(?___flsub+1)^(0+128),w
 14259  15E6  0020               	movlb	0	; select bank0
 14260  15E7  00C1               	movwf	___fldiv@a+1
 14261  15E8  0021               	movlb	1	; select bank1
 14262  15E9  0820               	movf	?___flsub^(0+128),w
 14263  15EA  0020               	movlb	0	; select bank0
 14264  15EB  00C0               	movwf	___fldiv@a
 14265  15EC  319C  24E2  3195   	fcall	___fldiv
 14266  15EF  0020               	movlb	0	; select bank0
 14267  15F0  0843               	movf	?___fldiv+3,w
 14268  15F1  0021               	movlb	1	; select bank1
 14269  15F2  00AB               	movwf	(___fltol@f1+3)^(0+128)
 14270  15F3  0020               	movlb	0	; select bank0
 14271  15F4  0842               	movf	?___fldiv+2,w
 14272  15F5  0021               	movlb	1	; select bank1
 14273  15F6  00AA               	movwf	(___fltol@f1+2)^(0+128)
 14274  15F7  0020               	movlb	0	; select bank0
 14275  15F8  0841               	movf	?___fldiv+1,w
 14276  15F9  0021               	movlb	1	; select bank1
 14277  15FA  00A9               	movwf	(___fltol@f1+1)^(0+128)
 14278  15FB  0020               	movlb	0	; select bank0
 14279  15FC  0840               	movf	?___fldiv,w
 14280  15FD  0021               	movlb	1	; select bank1
 14281  15FE  00A8               	movwf	___fltol@f1^(0+128)
 14282  15FF  31A8  2095  3195   	fcall	___fltol
 14283  1602  0021               	movlb	1	; select bank1
 14284  1603  082B               	movf	(?___fltol+3)^(0+128),w
 14285  1604  00EE               	movwf	(updateTemperatures@rts+3)^(0+128)
 14286  1605  082A               	movf	(?___fltol+2)^(0+128),w
 14287  1606  00ED               	movwf	(updateTemperatures@rts+2)^(0+128)
 14288  1607  0829               	movf	(?___fltol+1)^(0+128),w
 14289  1608  00EC               	movwf	(updateTemperatures@rts+1)^(0+128)
 14290  1609  0828               	movf	?___fltol^(0+128),w
 14291  160A  00EB               	movwf	updateTemperatures@rts^(0+128)
 14292                           
 14293                           ;BQ76920.c: 268:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14294  160B  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14295  160C  00F4               	movwf	___xxtofl@val+3
 14296  160D  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14297  160E  00F3               	movwf	___xxtofl@val+2
 14298  160F  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14299  1610  00F2               	movwf	___xxtofl@val+1
 14300  1611  086B               	movf	updateTemperatures@rts^(0+128),w
 14301  1612  00F1               	movwf	___xxtofl@val
 14302  1613  3000               	movlw	0
 14303  1614  31AB  23D3  3195   	fcall	___xxtofl
 14304  1617  0874               	movf	?___xxtofl+3,w
 14305  1618  0021               	movlb	1	; select bank1
 14306  1619  00BA               	movwf	(_updateTemperatures$2031+3)^(0+128)
 14307  161A  0873               	movf	?___xxtofl+2,w
 14308  161B  00B9               	movwf	(_updateTemperatures$2031+2)^(0+128)
 14309  161C  0872               	movf	?___xxtofl+1,w
 14310  161D  00B8               	movwf	(_updateTemperatures$2031+1)^(0+128)
 14311  161E  0871               	movf	?___xxtofl,w
 14312  161F  00B7               	movwf	_updateTemperatures$2031^(0+128)
 14313                           
 14314                           ;BQ76920.c: 268:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14315  1620  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14316  1621  00F4               	movwf	___xxtofl@val+3
 14317  1622  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14318  1623  00F3               	movwf	___xxtofl@val+2
 14319  1624  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14320  1625  00F2               	movwf	___xxtofl@val+1
 14321  1626  086B               	movf	updateTemperatures@rts^(0+128),w
 14322  1627  00F1               	movwf	___xxtofl@val
 14323  1628  3000               	movlw	0
 14324  1629  31AB  23D3  3195   	fcall	___xxtofl
 14325  162C  0874               	movf	?___xxtofl+3,w
 14326  162D  0021               	movlb	1	; select bank1
 14327  162E  00BE               	movwf	(_updateTemperatures$2032+3)^(0+128)
 14328  162F  0873               	movf	?___xxtofl+2,w
 14329  1630  00BD               	movwf	(_updateTemperatures$2032+2)^(0+128)
 14330  1631  0872               	movf	?___xxtofl+1,w
 14331  1632  00BC               	movwf	(_updateTemperatures$2032+1)^(0+128)
 14332  1633  0871               	movf	?___xxtofl,w
 14333  1634  00BB               	movwf	_updateTemperatures$2032^(0+128)
 14334                           
 14335                           ;BQ76920.c: 268:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14336  1635  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14337  1636  00F4               	movwf	___xxtofl@val+3
 14338  1637  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14339  1638  00F3               	movwf	___xxtofl@val+2
 14340  1639  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14341  163A  00F2               	movwf	___xxtofl@val+1
 14342  163B  086B               	movf	updateTemperatures@rts^(0+128),w
 14343  163C  00F1               	movwf	___xxtofl@val
 14344  163D  3000               	movlw	0
 14345  163E  31AB  23D3  3195   	fcall	___xxtofl
 14346  1641  0874               	movf	?___xxtofl+3,w
 14347  1642  0021               	movlb	1	; select bank1
 14348  1643  00C2               	movwf	(_updateTemperatures$2033+3)^(0+128)
 14349  1644  0873               	movf	?___xxtofl+2,w
 14350  1645  00C1               	movwf	(_updateTemperatures$2033+2)^(0+128)
 14351  1646  0872               	movf	?___xxtofl+1,w
 14352  1647  00C0               	movwf	(_updateTemperatures$2033+1)^(0+128)
 14353  1648  0871               	movf	?___xxtofl,w
 14354  1649  00BF               	movwf	_updateTemperatures$2033^(0+128)
 14355                           
 14356                           ;BQ76920.c: 268:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14357  164A  083E               	movf	(_updateTemperatures$2032+3)^(0+128),w
 14358  164B  00AB               	movwf	(logf@x+3)^(0+128)
 14359  164C  083D               	movf	(_updateTemperatures$2032+2)^(0+128),w
 14360  164D  00AA               	movwf	(logf@x+2)^(0+128)
 14361  164E  083C               	movf	(_updateTemperatures$2032+1)^(0+128),w
 14362  164F  00A9               	movwf	(logf@x+1)^(0+128)
 14363  1650  083B               	movf	_updateTemperatures$2032^(0+128),w
 14364  1651  00A8               	movwf	logf@x^(0+128)
 14365  1652  3180  206B  3195   	fcall	_logf
 14366  1655  0021               	movlb	1	; select bank1
 14367  1656  082B               	movf	(?_logf+3)^(0+128),w
 14368  1657  00C6               	movwf	(_updateTemperatures$2034+3)^(0+128)
 14369  1658  082A               	movf	(?_logf+2)^(0+128),w
 14370  1659  00C5               	movwf	(_updateTemperatures$2034+2)^(0+128)
 14371  165A  0829               	movf	(?_logf+1)^(0+128),w
 14372  165B  00C4               	movwf	(_updateTemperatures$2034+1)^(0+128)
 14373  165C  0828               	movf	?_logf^(0+128),w
 14374  165D  00C3               	movwf	_updateTemperatures$2034^(0+128)
 14375                           
 14376                           ;BQ76920.c: 268:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14377  165E  0842               	movf	(_updateTemperatures$2033+3)^(0+128),w
 14378  165F  00AB               	movwf	(logf@x+3)^(0+128)
 14379  1660  0841               	movf	(_updateTemperatures$2033+2)^(0+128),w
 14380  1661  00AA               	movwf	(logf@x+2)^(0+128)
 14381  1662  0840               	movf	(_updateTemperatures$2033+1)^(0+128),w
 14382  1663  00A9               	movwf	(logf@x+1)^(0+128)
 14383  1664  083F               	movf	_updateTemperatures$2033^(0+128),w
 14384  1665  00A8               	movwf	logf@x^(0+128)
 14385  1666  3180  206B  3195   	fcall	_logf
 14386  1669  0021               	movlb	1	; select bank1
 14387  166A  082B               	movf	(?_logf+3)^(0+128),w
 14388  166B  00CA               	movwf	(_updateTemperatures$2035+3)^(0+128)
 14389  166C  082A               	movf	(?_logf+2)^(0+128),w
 14390  166D  00C9               	movwf	(_updateTemperatures$2035+2)^(0+128)
 14391  166E  0829               	movf	(?_logf+1)^(0+128),w
 14392  166F  00C8               	movwf	(_updateTemperatures$2035+1)^(0+128)
 14393  1670  0828               	movf	?_logf^(0+128),w
 14394  1671  00C7               	movwf	_updateTemperatures$2035^(0+128)
 14395                           
 14396                           ;BQ76920.c: 268:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14397  1672  083A               	movf	(_updateTemperatures$2031+3)^(0+128),w
 14398  1673  00AB               	movwf	(logf@x+3)^(0+128)
 14399  1674  0839               	movf	(_updateTemperatures$2031+2)^(0+128),w
 14400  1675  00AA               	movwf	(logf@x+2)^(0+128)
 14401  1676  0838               	movf	(_updateTemperatures$2031+1)^(0+128),w
 14402  1677  00A9               	movwf	(logf@x+1)^(0+128)
 14403  1678  0837               	movf	_updateTemperatures$2031^(0+128),w
 14404  1679  00A8               	movwf	logf@x^(0+128)
 14405  167A  3180  206B  3195   	fcall	_logf
 14406  167D  0021               	movlb	1	; select bank1
 14407  167E  082B               	movf	(?_logf+3)^(0+128),w
 14408  167F  00CE               	movwf	(_updateTemperatures$2036+3)^(0+128)
 14409  1680  082A               	movf	(?_logf+2)^(0+128),w
 14410  1681  00CD               	movwf	(_updateTemperatures$2036+2)^(0+128)
 14411  1682  0829               	movf	(?_logf+1)^(0+128),w
 14412  1683  00CC               	movwf	(_updateTemperatures$2036+1)^(0+128)
 14413  1684  0828               	movf	?_logf^(0+128),w
 14414  1685  00CB               	movwf	_updateTemperatures$2036^(0+128)
 14415                           
 14416                           ;BQ76920.c: 268:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14417  1686  0846               	movf	(_updateTemperatures$2034+3)^(0+128),w
 14418  1687  0020               	movlb	0	; select bank0
 14419  1688  00A9               	movwf	___flmul@b+3
 14420  1689  0021               	movlb	1	; select bank1
 14421  168A  0845               	movf	(_updateTemperatures$2034+2)^(0+128),w
 14422  168B  0020               	movlb	0	; select bank0
 14423  168C  00A8               	movwf	___flmul@b+2
 14424  168D  0021               	movlb	1	; select bank1
 14425  168E  0844               	movf	(_updateTemperatures$2034+1)^(0+128),w
 14426  168F  0020               	movlb	0	; select bank0
 14427  1690  00A7               	movwf	___flmul@b+1
 14428  1691  0021               	movlb	1	; select bank1
 14429  1692  0843               	movf	_updateTemperatures$2034^(0+128),w
 14430  1693  0020               	movlb	0	; select bank0
 14431  1694  00A6               	movwf	___flmul@b
 14432  1695  0021               	movlb	1	; select bank1
 14433  1696  084A               	movf	(_updateTemperatures$2035+3)^(0+128),w
 14434  1697  0020               	movlb	0	; select bank0
 14435  1698  00AD               	movwf	___flmul@a+3
 14436  1699  0021               	movlb	1	; select bank1
 14437  169A  0849               	movf	(_updateTemperatures$2035+2)^(0+128),w
 14438  169B  0020               	movlb	0	; select bank0
 14439  169C  00AC               	movwf	___flmul@a+2
 14440  169D  0021               	movlb	1	; select bank1
 14441  169E  0848               	movf	(_updateTemperatures$2035+1)^(0+128),w
 14442  169F  0020               	movlb	0	; select bank0
 14443  16A0  00AB               	movwf	___flmul@a+1
 14444  16A1  0021               	movlb	1	; select bank1
 14445  16A2  0847               	movf	_updateTemperatures$2035^(0+128),w
 14446  16A3  0020               	movlb	0	; select bank0
 14447  16A4  00AA               	movwf	___flmul@a
 14448  16A5  3190  2023  3195   	fcall	___flmul
 14449  16A8  0020               	movlb	0	; select bank0
 14450  16A9  0829               	movf	?___flmul+3,w
 14451  16AA  0021               	movlb	1	; select bank1
 14452  16AB  00D2               	movwf	(_updateTemperatures$2037+3)^(0+128)
 14453  16AC  0020               	movlb	0	; select bank0
 14454  16AD  0828               	movf	?___flmul+2,w
 14455  16AE  0021               	movlb	1	; select bank1
 14456  16AF  00D1               	movwf	(_updateTemperatures$2037+2)^(0+128)
 14457  16B0  0020               	movlb	0	; select bank0
 14458  16B1  0827               	movf	?___flmul+1,w
 14459  16B2  0021               	movlb	1	; select bank1
 14460  16B3  00D0               	movwf	(_updateTemperatures$2037+1)^(0+128)
 14461  16B4  0020               	movlb	0	; select bank0
 14462  16B5  0826               	movf	?___flmul,w
 14463  16B6  0021               	movlb	1	; select bank1
 14464  16B7  00CF               	movwf	_updateTemperatures$2037^(0+128)
 14465                           
 14466                           ;BQ76920.c: 268:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14467  16B8  084E               	movf	(_updateTemperatures$2036+3)^(0+128),w
 14468  16B9  0020               	movlb	0	; select bank0
 14469  16BA  00A9               	movwf	___flmul@b+3
 14470  16BB  0021               	movlb	1	; select bank1
 14471  16BC  084D               	movf	(_updateTemperatures$2036+2)^(0+128),w
 14472  16BD  0020               	movlb	0	; select bank0
 14473  16BE  00A8               	movwf	___flmul@b+2
 14474  16BF  0021               	movlb	1	; select bank1
 14475  16C0  084C               	movf	(_updateTemperatures$2036+1)^(0+128),w
 14476  16C1  0020               	movlb	0	; select bank0
 14477  16C2  00A7               	movwf	___flmul@b+1
 14478  16C3  0021               	movlb	1	; select bank1
 14479  16C4  084B               	movf	_updateTemperatures$2036^(0+128),w
 14480  16C5  0020               	movlb	0	; select bank0
 14481  16C6  00A6               	movwf	___flmul@b
 14482  16C7  0021               	movlb	1	; select bank1
 14483  16C8  0852               	movf	(_updateTemperatures$2037+3)^(0+128),w
 14484  16C9  0020               	movlb	0	; select bank0
 14485  16CA  00AD               	movwf	___flmul@a+3
 14486  16CB  0021               	movlb	1	; select bank1
 14487  16CC  0851               	movf	(_updateTemperatures$2037+2)^(0+128),w
 14488  16CD  0020               	movlb	0	; select bank0
 14489  16CE  00AC               	movwf	___flmul@a+2
 14490  16CF  0021               	movlb	1	; select bank1
 14491  16D0  0850               	movf	(_updateTemperatures$2037+1)^(0+128),w
 14492  16D1  0020               	movlb	0	; select bank0
 14493  16D2  00AB               	movwf	___flmul@a+1
 14494  16D3  0021               	movlb	1	; select bank1
 14495  16D4  084F               	movf	_updateTemperatures$2037^(0+128),w
 14496  16D5  0020               	movlb	0	; select bank0
 14497  16D6  00AA               	movwf	___flmul@a
 14498  16D7  3190  2023  3195   	fcall	___flmul
 14499  16DA  0020               	movlb	0	; select bank0
 14500  16DB  0829               	movf	?___flmul+3,w
 14501  16DC  0021               	movlb	1	; select bank1
 14502  16DD  00D6               	movwf	(_updateTemperatures$2038+3)^(0+128)
 14503  16DE  0020               	movlb	0	; select bank0
 14504  16DF  0828               	movf	?___flmul+2,w
 14505  16E0  0021               	movlb	1	; select bank1
 14506  16E1  00D5               	movwf	(_updateTemperatures$2038+2)^(0+128)
 14507  16E2  0020               	movlb	0	; select bank0
 14508  16E3  0827               	movf	?___flmul+1,w
 14509  16E4  0021               	movlb	1	; select bank1
 14510  16E5  00D4               	movwf	(_updateTemperatures$2038+1)^(0+128)
 14511  16E6  0020               	movlb	0	; select bank0
 14512  16E7  0826               	movf	?___flmul,w
 14513  16E8  0021               	movlb	1	; select bank1
 14514  16E9  00D3               	movwf	_updateTemperatures$2038^(0+128)
 14515                           
 14516                           ;BQ76920.c: 268:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14517  16EA  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14518  16EB  00F4               	movwf	___xxtofl@val+3
 14519  16EC  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14520  16ED  00F3               	movwf	___xxtofl@val+2
 14521  16EE  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14522  16EF  00F2               	movwf	___xxtofl@val+1
 14523  16F0  086B               	movf	updateTemperatures@rts^(0+128),w
 14524  16F1  00F1               	movwf	___xxtofl@val
 14525  16F2  3000               	movlw	0
 14526  16F3  31AB  23D3  3195   	fcall	___xxtofl
 14527  16F6  0874               	movf	?___xxtofl+3,w
 14528  16F7  0021               	movlb	1	; select bank1
 14529  16F8  00DA               	movwf	(_updateTemperatures$2039+3)^(0+128)
 14530  16F9  0873               	movf	?___xxtofl+2,w
 14531  16FA  00D9               	movwf	(_updateTemperatures$2039+2)^(0+128)
 14532  16FB  0872               	movf	?___xxtofl+1,w
 14533  16FC  00D8               	movwf	(_updateTemperatures$2039+1)^(0+128)
 14534  16FD  0871               	movf	?___xxtofl,w
 14535  16FE  00D7               	movwf	_updateTemperatures$2039^(0+128)
 14536                           
 14537                           ;BQ76920.c: 268:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14538  16FF  085A               	movf	(_updateTemperatures$2039+3)^(0+128),w
 14539  1700  00AB               	movwf	(logf@x+3)^(0+128)
 14540  1701  0859               	movf	(_updateTemperatures$2039+2)^(0+128),w
 14541  1702  00AA               	movwf	(logf@x+2)^(0+128)
 14542  1703  0858               	movf	(_updateTemperatures$2039+1)^(0+128),w
 14543  1704  00A9               	movwf	(logf@x+1)^(0+128)
 14544  1705  0857               	movf	_updateTemperatures$2039^(0+128),w
 14545  1706  00A8               	movwf	logf@x^(0+128)
 14546  1707  3180  206B  3195   	fcall	_logf
 14547  170A  0021               	movlb	1	; select bank1
 14548  170B  082B               	movf	(?_logf+3)^(0+128),w
 14549  170C  00DE               	movwf	(_updateTemperatures$2040+3)^(0+128)
 14550  170D  082A               	movf	(?_logf+2)^(0+128),w
 14551  170E  00DD               	movwf	(_updateTemperatures$2040+2)^(0+128)
 14552  170F  0829               	movf	(?_logf+1)^(0+128),w
 14553  1710  00DC               	movwf	(_updateTemperatures$2040+1)^(0+128)
 14554  1711  0828               	movf	?_logf^(0+128),w
 14555  1712  00DB               	movwf	_updateTemperatures$2040^(0+128)
 14556                           
 14557                           ;BQ76920.c: 268:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14558  1713  30BC               	movlw	188
 14559  1714  0020               	movlb	0	; select bank0
 14560  1715  00DD               	movwf	___fladd@b+3
 14561  1716  308E               	movlw	142
 14562  1717  00DC               	movwf	___fladd@b+2
 14563  1718  30C5               	movlw	197
 14564  1719  00DB               	movwf	___fladd@b+1
 14565  171A  3072               	movlw	114
 14566  171B  00DA               	movwf	___fladd@b
 14567  171C  303B               	movlw	59
 14568  171D  00A9               	movwf	___flmul@b+3
 14569  171E  304D               	movlw	77
 14570  171F  00A8               	movwf	___flmul@b+2
 14571  1720  3098               	movlw	152
 14572  1721  00A7               	movwf	___flmul@b+1
 14573  1722  3025               	movlw	37
 14574  1723  00A6               	movwf	___flmul@b
 14575  1724  0021               	movlb	1	; select bank1
 14576  1725  085E               	movf	(_updateTemperatures$2040+3)^(0+128),w
 14577  1726  0020               	movlb	0	; select bank0
 14578  1727  00AD               	movwf	___flmul@a+3
 14579  1728  0021               	movlb	1	; select bank1
 14580  1729  085D               	movf	(_updateTemperatures$2040+2)^(0+128),w
 14581  172A  0020               	movlb	0	; select bank0
 14582  172B  00AC               	movwf	___flmul@a+2
 14583  172C  0021               	movlb	1	; select bank1
 14584  172D  085C               	movf	(_updateTemperatures$2040+1)^(0+128),w
 14585  172E  0020               	movlb	0	; select bank0
 14586  172F  00AB               	movwf	___flmul@a+1
 14587  1730  0021               	movlb	1	; select bank1
 14588  1731  085B               	movf	_updateTemperatures$2040^(0+128),w
 14589  1732  0020               	movlb	0	; select bank0
 14590  1733  00AA               	movwf	___flmul@a
 14591  1734  3190  2023  3195   	fcall	___flmul
 14592  1737  0020               	movlb	0	; select bank0
 14593  1738  0829               	movf	?___flmul+3,w
 14594  1739  00E1               	movwf	___fladd@a+3
 14595  173A  0828               	movf	?___flmul+2,w
 14596  173B  00E0               	movwf	___fladd@a+2
 14597  173C  0827               	movf	?___flmul+1,w
 14598  173D  00DF               	movwf	___fladd@a+1
 14599  173E  0826               	movf	?___flmul,w
 14600  173F  00DE               	movwf	___fladd@a
 14601  1740  3185  25F5  3195   	fcall	___fladd
 14602  1743  0020               	movlb	0	; select bank0
 14603  1744  085D               	movf	?___fladd+3,w
 14604  1745  0021               	movlb	1	; select bank1
 14605  1746  00E2               	movwf	(_updateTemperatures$2041+3)^(0+128)
 14606  1747  0020               	movlb	0	; select bank0
 14607  1748  085C               	movf	?___fladd+2,w
 14608  1749  0021               	movlb	1	; select bank1
 14609  174A  00E1               	movwf	(_updateTemperatures$2041+2)^(0+128)
 14610  174B  0020               	movlb	0	; select bank0
 14611  174C  085B               	movf	?___fladd+1,w
 14612  174D  0021               	movlb	1	; select bank1
 14613  174E  00E0               	movwf	(_updateTemperatures$2041+1)^(0+128)
 14614  174F  0020               	movlb	0	; select bank0
 14615  1750  085A               	movf	?___fladd,w
 14616  1751  0021               	movlb	1	; select bank1
 14617  1752  00DF               	movwf	_updateTemperatures$2041^(0+128)
 14618                           
 14619                           ;BQ76920.c: 268:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14620  1753  30B7               	movlw	183
 14621  1754  0020               	movlb	0	; select bank0
 14622  1755  00A9               	movwf	___flmul@b+3
 14623  1756  302E               	movlw	46
 14624  1757  00A8               	movwf	___flmul@b+2
 14625  1758  302F               	movlw	47
 14626  1759  00A7               	movwf	___flmul@b+1
 14627  175A  3045               	movlw	69
 14628  175B  00A6               	movwf	___flmul@b
 14629  175C  0021               	movlb	1	; select bank1
 14630  175D  0856               	movf	(_updateTemperatures$2038+3)^(0+128),w
 14631  175E  0020               	movlb	0	; select bank0
 14632  175F  00AD               	movwf	___flmul@a+3
 14633  1760  0021               	movlb	1	; select bank1
 14634  1761  0855               	movf	(_updateTemperatures$2038+2)^(0+128),w
 14635  1762  0020               	movlb	0	; select bank0
 14636  1763  00AC               	movwf	___flmul@a+2
 14637  1764  0021               	movlb	1	; select bank1
 14638  1765  0854               	movf	(_updateTemperatures$2038+1)^(0+128),w
 14639  1766  0020               	movlb	0	; select bank0
 14640  1767  00AB               	movwf	___flmul@a+1
 14641  1768  0021               	movlb	1	; select bank1
 14642  1769  0853               	movf	_updateTemperatures$2038^(0+128),w
 14643  176A  0020               	movlb	0	; select bank0
 14644  176B  00AA               	movwf	___flmul@a
 14645  176C  3190  2023  3195   	fcall	___flmul
 14646  176F  0020               	movlb	0	; select bank0
 14647  1770  0829               	movf	?___flmul+3,w
 14648  1771  00DD               	movwf	___fladd@b+3
 14649  1772  0828               	movf	?___flmul+2,w
 14650  1773  00DC               	movwf	___fladd@b+2
 14651  1774  0827               	movf	?___flmul+1,w
 14652  1775  00DB               	movwf	___fladd@b+1
 14653  1776  0826               	movf	?___flmul,w
 14654  1777  00DA               	movwf	___fladd@b
 14655  1778  0021               	movlb	1	; select bank1
 14656  1779  0862               	movf	(_updateTemperatures$2041+3)^(0+128),w
 14657  177A  0020               	movlb	0	; select bank0
 14658  177B  00E1               	movwf	___fladd@a+3
 14659  177C  0021               	movlb	1	; select bank1
 14660  177D  0861               	movf	(_updateTemperatures$2041+2)^(0+128),w
 14661  177E  0020               	movlb	0	; select bank0
 14662  177F  00E0               	movwf	___fladd@a+2
 14663  1780  0021               	movlb	1	; select bank1
 14664  1781  0860               	movf	(_updateTemperatures$2041+1)^(0+128),w
 14665  1782  0020               	movlb	0	; select bank0
 14666  1783  00DF               	movwf	___fladd@a+1
 14667  1784  0021               	movlb	1	; select bank1
 14668  1785  085F               	movf	_updateTemperatures$2041^(0+128),w
 14669  1786  0020               	movlb	0	; select bank0
 14670  1787  00DE               	movwf	___fladd@a
 14671  1788  3185  25F5  3195   	fcall	___fladd
 14672  178B  0020               	movlb	0	; select bank0
 14673  178C  085D               	movf	?___fladd+3,w
 14674  178D  00C3               	movwf	___fldiv@a+3
 14675  178E  085C               	movf	?___fladd+2,w
 14676  178F  00C2               	movwf	___fldiv@a+2
 14677  1790  085B               	movf	?___fladd+1,w
 14678  1791  00C1               	movwf	___fldiv@a+1
 14679  1792  085A               	movf	?___fladd,w
 14680  1793  00C0               	movwf	___fldiv@a
 14681  1794  303F               	movlw	63
 14682  1795  00C7               	movwf	___fldiv@b+3
 14683  1796  3080               	movlw	128
 14684  1797  00C6               	movwf	___fldiv@b+2
 14685  1798  3000               	movlw	0
 14686  1799  00C5               	movwf	___fldiv@b+1
 14687  179A  3000               	movlw	0
 14688  179B  00C4               	movwf	___fldiv@b
 14689  179C  319C  24E2  3195   	fcall	___fldiv
 14690  179F  0020               	movlb	0	; select bank0
 14691  17A0  0843               	movf	?___fldiv+3,w
 14692  17A1  0021               	movlb	1	; select bank1
 14693  17A2  00E6               	movwf	(updateTemperatures@tmp+3)^(0+128)
 14694  17A3  0020               	movlb	0	; select bank0
 14695  17A4  0842               	movf	?___fldiv+2,w
 14696  17A5  0021               	movlb	1	; select bank1
 14697  17A6  00E5               	movwf	(updateTemperatures@tmp+2)^(0+128)
 14698  17A7  0020               	movlb	0	; select bank0
 14699  17A8  0841               	movf	?___fldiv+1,w
 14700  17A9  0021               	movlb	1	; select bank1
 14701  17AA  00E4               	movwf	(updateTemperatures@tmp+1)^(0+128)
 14702  17AB  0020               	movlb	0	; select bank0
 14703  17AC  0840               	movf	?___fldiv,w
 14704  17AD  0021               	movlb	1	; select bank1
 14705  17AE  00E3               	movwf	updateTemperatures@tmp^(0+128)
 14706                           
 14707                           ;BQ76920.c: 270:      temperatureThermistor = (tmp - 273.15)*100;
 14708  17AF  0866               	movf	(updateTemperatures@tmp+3)^(0+128),w
 14709  17B0  0020               	movlb	0	; select bank0
 14710  17B1  00E1               	movwf	___fladd@a+3
 14711  17B2  0021               	movlb	1	; select bank1
 14712  17B3  0865               	movf	(updateTemperatures@tmp+2)^(0+128),w
 14713  17B4  0020               	movlb	0	; select bank0
 14714  17B5  00E0               	movwf	___fladd@a+2
 14715  17B6  0021               	movlb	1	; select bank1
 14716  17B7  0864               	movf	(updateTemperatures@tmp+1)^(0+128),w
 14717  17B8  0020               	movlb	0	; select bank0
 14718  17B9  00DF               	movwf	___fladd@a+1
 14719  17BA  0021               	movlb	1	; select bank1
 14720  17BB  0863               	movf	updateTemperatures@tmp^(0+128),w
 14721  17BC  0020               	movlb	0	; select bank0
 14722  17BD  00DE               	movwf	___fladd@a
 14723  17BE  30C3               	movlw	195
 14724  17BF  00DD               	movwf	___fladd@b+3
 14725  17C0  3088               	movlw	136
 14726  17C1  00DC               	movwf	___fladd@b+2
 14727  17C2  3093               	movlw	147
 14728  17C3  00DB               	movwf	___fladd@b+1
 14729  17C4  3033               	movlw	51
 14730  17C5  00DA               	movwf	___fladd@b
 14731  17C6  3185  25F5  3195   	fcall	___fladd
 14732  17C9  0020               	movlb	0	; select bank0
 14733  17CA  085D               	movf	?___fladd+3,w
 14734  17CB  00AD               	movwf	___flmul@a+3
 14735  17CC  085C               	movf	?___fladd+2,w
 14736  17CD  00AC               	movwf	___flmul@a+2
 14737  17CE  085B               	movf	?___fladd+1,w
 14738  17CF  00AB               	movwf	___flmul@a+1
 14739  17D0  085A               	movf	?___fladd,w
 14740  17D1  00AA               	movwf	___flmul@a
 14741  17D2  3042               	movlw	66
 14742  17D3  00A9               	movwf	___flmul@b+3
 14743  17D4  30C8               	movlw	200
 14744  17D5  00A8               	movwf	___flmul@b+2
 14745  17D6  3000               	movlw	0
 14746  17D7  00A7               	movwf	___flmul@b+1
 14747  17D8  3000               	movlw	0
 14748  17D9  00A6               	movwf	___flmul@b
 14749  17DA  3190  2023  3195   	fcall	___flmul
 14750  17DD  0020               	movlb	0	; select bank0
 14751  17DE  0829               	movf	?___flmul+3,w
 14752  17DF  0021               	movlb	1	; select bank1
 14753  17E0  00AB               	movwf	(___fltol@f1+3)^(0+128)
 14754  17E1  0020               	movlb	0	; select bank0
 14755  17E2  0828               	movf	?___flmul+2,w
 14756  17E3  0021               	movlb	1	; select bank1
 14757  17E4  00AA               	movwf	(___fltol@f1+2)^(0+128)
 14758  17E5  0020               	movlb	0	; select bank0
 14759  17E6  0827               	movf	?___flmul+1,w
 14760  17E7  0021               	movlb	1	; select bank1
 14761  17E8  00A9               	movwf	(___fltol@f1+1)^(0+128)
 14762  17E9  0020               	movlb	0	; select bank0
 14763  17EA  0826               	movf	?___flmul,w
 14764  17EB  0021               	movlb	1	; select bank1
 14765  17EC  00A8               	movwf	___fltol@f1^(0+128)
 14766  17ED  31A8  2095         	fcall	___fltol
 14767  17EF  0021               	movlb	1	; select bank1
 14768  17F0  082B               	movf	(?___fltol+3)^(0+128),w
 14769  17F1  0023               	movlb	3	; select bank3
 14770  17F2  00B9               	movwf	(_temperatureThermistor+3)^(0+384)
 14771  17F3  0021               	movlb	1	; select bank1
 14772  17F4  082A               	movf	(?___fltol+2)^(0+128),w
 14773  17F5  0023               	movlb	3	; select bank3
 14774  17F6  00B8               	movwf	(_temperatureThermistor+2)^(0+384)
 14775  17F7  0021               	movlb	1	; select bank1
 14776  17F8  0829               	movf	(?___fltol+1)^(0+128),w
 14777  17F9  0023               	movlb	3	; select bank3
 14778  17FA  00B7               	movwf	(_temperatureThermistor+1)^(0+384)
 14779  17FB  0021               	movlb	1	; select bank1
 14780  17FC  0828               	movf	?___fltol^(0+128),w
 14781  17FD  0023               	movlb	3	; select bank3
 14782  17FE  00B6               	movwf	_temperatureThermistor^(0+384)
 14783  17FF  0008               	return
 14784  1800                     __end_of_updateTemperatures:	
 14785                           
 14786                           	psect	text50
 14787  006B                     __ptext50:	
 14788 ;; *************** function _logf *****************
 14789 ;; Defined at:
 14790 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\logf.c"
 14791 ;; Parameters:    Size  Location     Type
 14792 ;;  x               4    8[BANK1 ] float 
 14793 ;; Auto vars:     Size  Location     Type
 14794 ;;  ix              4   62[BANK2 ] unsigned long 
 14795 ;;  f               4   58[BANK2 ] float 
 14796 ;;  u               4   54[BANK2 ] struct .
 14797 ;;  w               4   46[BANK2 ] float 
 14798 ;;  z               4   42[BANK2 ] float 
 14799 ;;  s               4   38[BANK2 ] float 
 14800 ;;  dk              4   34[BANK2 ] float 
 14801 ;;  hfsq            4   30[BANK2 ] float 
 14802 ;;  t2              4    8[BANK2 ] float 
 14803 ;;  t1              4    4[BANK2 ] float 
 14804 ;;  R               4    0[BANK2 ] float 
 14805 ;;  k               2   28[BANK2 ] int 
 14806 ;; Return value:  Size  Location     Type
 14807 ;;                  4    8[BANK1 ] float 
 14808 ;; Registers used:
 14809 ;;		wreg, status,2, status,0, pclath, cstack
 14810 ;; Tracked objects:
 14811 ;;		On entry : 0/0
 14812 ;;		On exit  : 0/0
 14813 ;;		Unchanged: 0/0
 14814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14815 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14816 ;;      Locals:         0       0       0      66       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14817 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14818 ;;      Totals:         0       0      12      66       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14819 ;;Total ram usage:       78 bytes
 14820 ;; Hardware stack levels used:    1
 14821 ;; Hardware stack levels required when called:    3
 14822 ;; This function calls:
 14823 ;;		___fladd
 14824 ;;		___fldiv
 14825 ;;		___flmul
 14826 ;;		___flsub
 14827 ;;		___xxtofl
 14828 ;; This function is called by:
 14829 ;;		_updateTemperatures
 14830 ;; This function uses a non-reentrant model
 14831 ;;
 14832                           
 14833                           
 14834                           ;psect for function _logf
 14835  006B                     _logf:	
 14836                           
 14837                           ;incstack = 0
 14838                           ; Regs used in _logf: [wreg+status,2+status,0+pclath+cstack]
 14839  006B  0023               	movlb	3	; select bank3
 14840  006C  082D               	movf	(logf@F469+3)^(0+384),w
 14841  006D  0022               	movlb	2	; select bank2
 14842  006E  00D9               	movwf	(logf@u+3)^(0+256)
 14843  006F  0023               	movlb	3	; select bank3
 14844  0070  082C               	movf	(logf@F469+2)^(0+384),w
 14845  0071  0022               	movlb	2	; select bank2
 14846  0072  00D8               	movwf	(logf@u+2)^(0+256)
 14847  0073  0023               	movlb	3	; select bank3
 14848  0074  082B               	movf	(logf@F469+1)^(0+384),w
 14849  0075  0022               	movlb	2	; select bank2
 14850  0076  00D7               	movwf	(logf@u+1)^(0+256)
 14851  0077  0023               	movlb	3	; select bank3
 14852  0078  082A               	movf	logf@F469^(0+384),w
 14853  0079  0022               	movlb	2	; select bank2
 14854  007A  00D6               	movwf	logf@u^(0+256)
 14855  007B  0021               	movlb	1	; select bank1
 14856  007C  082B               	movf	(logf@x+3)^(0+128),w
 14857  007D  0022               	movlb	2	; select bank2
 14858  007E  00D9               	movwf	(logf@u+3)^(0+256)
 14859  007F  0021               	movlb	1	; select bank1
 14860  0080  082A               	movf	(logf@x+2)^(0+128),w
 14861  0081  0022               	movlb	2	; select bank2
 14862  0082  00D8               	movwf	(logf@u+2)^(0+256)
 14863  0083  0021               	movlb	1	; select bank1
 14864  0084  0829               	movf	(logf@x+1)^(0+128),w
 14865  0085  0022               	movlb	2	; select bank2
 14866  0086  00D7               	movwf	(logf@u+1)^(0+256)
 14867  0087  0021               	movlb	1	; select bank1
 14868  0088  0828               	movf	logf@x^(0+128),w
 14869  0089  0022               	movlb	2	; select bank2
 14870  008A  00D6               	movwf	logf@u^(0+256)
 14871  008B  0859               	movf	(logf@u+3)^(0+256),w
 14872  008C  00E1               	movwf	(logf@ix+3)^(0+256)
 14873  008D  0858               	movf	(logf@u+2)^(0+256),w
 14874  008E  00E0               	movwf	(logf@ix+2)^(0+256)
 14875  008F  0857               	movf	(logf@u+1)^(0+256),w
 14876  0090  00DF               	movwf	(logf@ix+1)^(0+256)
 14877  0091  0856               	movf	logf@u^(0+256),w
 14878  0092  00DE               	movwf	logf@ix^(0+256)
 14879  0093  01BC               	clrf	logf@k^(0+256)
 14880  0094  01BD               	clrf	(logf@k+1)^(0+256)
 14881  0095  0861               	movf	(logf@ix+3)^(0+256),w
 14882  0096  1D03               	btfss	3,2
 14883  0097  289C               	goto	l7786
 14884  0098  3080               	movlw	128
 14885  0099  0260               	subwf	(logf@ix+2)^(0+256),w
 14886  009A  1C03               	btfss	3,0
 14887  009B  28B8               	goto	l7788
 14888  009C                     l7786:	
 14889  009C  085E               	movf	logf@ix^(0+256),w
 14890  009D  0021               	movlb	1	; select bank1
 14891  009E  00AC               	movwf	??_logf^(0+128)
 14892  009F  0022               	movlb	2	; select bank2
 14893  00A0  085F               	movf	(logf@ix+1)^(0+256),w
 14894  00A1  0021               	movlb	1	; select bank1
 14895  00A2  00AD               	movwf	(??_logf^(0+128)+1)
 14896  00A3  0022               	movlb	2	; select bank2
 14897  00A4  0860               	movf	(logf@ix+2)^(0+256),w
 14898  00A5  0021               	movlb	1	; select bank1
 14899  00A6  00AE               	movwf	(??_logf^(0+128)+2)
 14900  00A7  0022               	movlb	2	; select bank2
 14901  00A8  0861               	movf	(logf@ix+3)^(0+256),w
 14902  00A9  0021               	movlb	1	; select bank1
 14903  00AA  00AF               	movwf	(??_logf^(0+128)+3)
 14904  00AB  301F               	movlw	31
 14905  00AC                     u10695:	
 14906  00AC  36AF               	lsrf	(??_logf^(0+128)+3),f
 14907  00AD  0CAE               	rrf	(??_logf^(0+128)+2),f
 14908  00AE  0CAD               	rrf	(??_logf^(0+128)+1),f
 14909  00AF  0CAC               	rrf	??_logf^(0+128),f
 14910  00B0  0B89               	decfsz	9,f
 14911  00B1  28AC               	goto	u10695
 14912  00B2  082F               	movf	(??_logf+3)^(0+128),w
 14913  00B3  042E               	iorwf	(??_logf+2)^(0+128),w
 14914  00B4  042D               	iorwf	(??_logf+1)^(0+128),w
 14915  00B5  042C               	iorwf	??_logf^(0+128),w
 14916  00B6  1903               	skipnz
 14917  00B7  29C1               	goto	l7808
 14918  00B8                     l7788:	
 14919  00B8  0022               	movlb	2	; select bank2
 14920  00B9  085E               	movf	logf@ix^(0+256),w
 14921  00BA  0021               	movlb	1	; select bank1
 14922  00BB  00AC               	movwf	??_logf^(0+128)
 14923  00BC  0022               	movlb	2	; select bank2
 14924  00BD  085F               	movf	(logf@ix+1)^(0+256),w
 14925  00BE  0021               	movlb	1	; select bank1
 14926  00BF  00AD               	movwf	(??_logf^(0+128)+1)
 14927  00C0  0022               	movlb	2	; select bank2
 14928  00C1  0860               	movf	(logf@ix+2)^(0+256),w
 14929  00C2  0021               	movlb	1	; select bank1
 14930  00C3  00AE               	movwf	(??_logf^(0+128)+2)
 14931  00C4  0022               	movlb	2	; select bank2
 14932  00C5  0861               	movf	(logf@ix+3)^(0+256),w
 14933  00C6  0021               	movlb	1	; select bank1
 14934  00C7  00AF               	movwf	(??_logf^(0+128)+3)
 14935  00C8  3001               	movlw	1
 14936  00C9                     u10715:	
 14937  00C9  35AC               	lslf	??_logf^(0+128),f
 14938  00CA  0DAD               	rlf	(??_logf^(0+128)+1),f
 14939  00CB  0DAE               	rlf	(??_logf^(0+128)+2),f
 14940  00CC  0DAF               	rlf	(??_logf^(0+128)+3),f
 14941  00CD  0B89               	decfsz	9,f
 14942  00CE  28C9               	goto	u10715
 14943  00CF  082F               	movf	(??_logf+3)^(0+128),w
 14944  00D0  042E               	iorwf	(??_logf+2)^(0+128),w
 14945  00D1  042D               	iorwf	(??_logf+1)^(0+128),w
 14946  00D2  042C               	iorwf	??_logf^(0+128),w
 14947  00D3  1D03               	skipz
 14948  00D4  291B               	goto	l7794
 14949  00D5  082B               	movf	(logf@x+3)^(0+128),w
 14950  00D6  0020               	movlb	0	; select bank0
 14951  00D7  00A9               	movwf	___flmul@b+3
 14952  00D8  0021               	movlb	1	; select bank1
 14953  00D9  082A               	movf	(logf@x+2)^(0+128),w
 14954  00DA  0020               	movlb	0	; select bank0
 14955  00DB  00A8               	movwf	___flmul@b+2
 14956  00DC  0021               	movlb	1	; select bank1
 14957  00DD  0829               	movf	(logf@x+1)^(0+128),w
 14958  00DE  0020               	movlb	0	; select bank0
 14959  00DF  00A7               	movwf	___flmul@b+1
 14960  00E0  0021               	movlb	1	; select bank1
 14961  00E1  0828               	movf	logf@x^(0+128),w
 14962  00E2  0020               	movlb	0	; select bank0
 14963  00E3  00A6               	movwf	___flmul@b
 14964  00E4  0021               	movlb	1	; select bank1
 14965  00E5  082B               	movf	(logf@x+3)^(0+128),w
 14966  00E6  0020               	movlb	0	; select bank0
 14967  00E7  00AD               	movwf	___flmul@a+3
 14968  00E8  0021               	movlb	1	; select bank1
 14969  00E9  082A               	movf	(logf@x+2)^(0+128),w
 14970  00EA  0020               	movlb	0	; select bank0
 14971  00EB  00AC               	movwf	___flmul@a+2
 14972  00EC  0021               	movlb	1	; select bank1
 14973  00ED  0829               	movf	(logf@x+1)^(0+128),w
 14974  00EE  0020               	movlb	0	; select bank0
 14975  00EF  00AB               	movwf	___flmul@a+1
 14976  00F0  0021               	movlb	1	; select bank1
 14977  00F1  0828               	movf	logf@x^(0+128),w
 14978  00F2  0020               	movlb	0	; select bank0
 14979  00F3  00AA               	movwf	___flmul@a
 14980  00F4  3190  2023  3180   	fcall	___flmul
 14981  00F7  0020               	movlb	0	; select bank0
 14982  00F8  0829               	movf	?___flmul+3,w
 14983  00F9  00C3               	movwf	___fldiv@a+3
 14984  00FA  0828               	movf	?___flmul+2,w
 14985  00FB  00C2               	movwf	___fldiv@a+2
 14986  00FC  0827               	movf	?___flmul+1,w
 14987  00FD  00C1               	movwf	___fldiv@a+1
 14988  00FE  0826               	movf	?___flmul,w
 14989  00FF  00C0               	movwf	___fldiv@a
 14990  0100  30BF               	movlw	191
 14991  0101  00C7               	movwf	___fldiv@b+3
 14992  0102  3080               	movlw	128
 14993  0103  00C6               	movwf	___fldiv@b+2
 14994  0104  3000               	movlw	0
 14995  0105  00C5               	movwf	___fldiv@b+1
 14996  0106  3000               	movlw	0
 14997  0107  00C4               	movwf	___fldiv@b
 14998  0108  319C  24E2         	fcall	___fldiv
 14999  010A  0020               	movlb	0	; select bank0
 15000  010B  0843               	movf	?___fldiv+3,w
 15001  010C  0021               	movlb	1	; select bank1
 15002  010D  00AB               	movwf	(?_logf+3)^(0+128)
 15003  010E  0020               	movlb	0	; select bank0
 15004  010F  0842               	movf	?___fldiv+2,w
 15005  0110  0021               	movlb	1	; select bank1
 15006  0111  00AA               	movwf	(?_logf+2)^(0+128)
 15007  0112  0020               	movlb	0	; select bank0
 15008  0113  0841               	movf	?___fldiv+1,w
 15009  0114  0021               	movlb	1	; select bank1
 15010  0115  00A9               	movwf	(?_logf+1)^(0+128)
 15011  0116  0020               	movlb	0	; select bank0
 15012  0117  0840               	movf	?___fldiv,w
 15013  0118  0021               	movlb	1	; select bank1
 15014  0119  00A8               	movwf	?_logf^(0+128)
 15015  011A  0008               	return
 15016  011B                     l7794:	
 15017  011B  0022               	movlb	2	; select bank2
 15018  011C  085E               	movf	logf@ix^(0+256),w
 15019  011D  0021               	movlb	1	; select bank1
 15020  011E  00AC               	movwf	??_logf^(0+128)
 15021  011F  0022               	movlb	2	; select bank2
 15022  0120  085F               	movf	(logf@ix+1)^(0+256),w
 15023  0121  0021               	movlb	1	; select bank1
 15024  0122  00AD               	movwf	(??_logf^(0+128)+1)
 15025  0123  0022               	movlb	2	; select bank2
 15026  0124  0860               	movf	(logf@ix+2)^(0+256),w
 15027  0125  0021               	movlb	1	; select bank1
 15028  0126  00AE               	movwf	(??_logf^(0+128)+2)
 15029  0127  0022               	movlb	2	; select bank2
 15030  0128  0861               	movf	(logf@ix+3)^(0+256),w
 15031  0129  0021               	movlb	1	; select bank1
 15032  012A  00AF               	movwf	(??_logf^(0+128)+3)
 15033  012B  301F               	movlw	31
 15034  012C                     u10735:	
 15035  012C  36AF               	lsrf	(??_logf^(0+128)+3),f
 15036  012D  0CAE               	rrf	(??_logf^(0+128)+2),f
 15037  012E  0CAD               	rrf	(??_logf^(0+128)+1),f
 15038  012F  0CAC               	rrf	??_logf^(0+128),f
 15039  0130  0B89               	decfsz	9,f
 15040  0131  292C               	goto	u10735
 15041  0132  082F               	movf	(??_logf+3)^(0+128),w
 15042  0133  042E               	iorwf	(??_logf+2)^(0+128),w
 15043  0134  042D               	iorwf	(??_logf+1)^(0+128),w
 15044  0135  042C               	iorwf	??_logf^(0+128),w
 15045  0136  1903               	skipnz
 15046  0137  2978               	goto	l7800
 15047  0138  3000               	movlw	0
 15048  0139  0020               	movlb	0	; select bank0
 15049  013A  00C3               	movwf	___fldiv@a+3
 15050  013B  3000               	movlw	0
 15051  013C  00C2               	movwf	___fldiv@a+2
 15052  013D  3000               	movlw	0
 15053  013E  00C1               	movwf	___fldiv@a+1
 15054  013F  3000               	movlw	0
 15055  0140  00C0               	movwf	___fldiv@a
 15056  0141  0021               	movlb	1	; select bank1
 15057  0142  082B               	movf	(logf@x+3)^(0+128),w
 15058  0143  00A3               	movwf	(___flsub@a+3)^(0+128)
 15059  0144  082A               	movf	(logf@x+2)^(0+128),w
 15060  0145  00A2               	movwf	(___flsub@a+2)^(0+128)
 15061  0146  0829               	movf	(logf@x+1)^(0+128),w
 15062  0147  00A1               	movwf	(___flsub@a+1)^(0+128)
 15063  0148  0828               	movf	logf@x^(0+128),w
 15064  0149  00A0               	movwf	___flsub@a^(0+128)
 15065  014A  082B               	movf	(logf@x+3)^(0+128),w
 15066  014B  00A7               	movwf	(___flsub@b+3)^(0+128)
 15067  014C  082A               	movf	(logf@x+2)^(0+128),w
 15068  014D  00A6               	movwf	(___flsub@b+2)^(0+128)
 15069  014E  0829               	movf	(logf@x+1)^(0+128),w
 15070  014F  00A5               	movwf	(___flsub@b+1)^(0+128)
 15071  0150  0828               	movf	logf@x^(0+128),w
 15072  0151  00A4               	movwf	___flsub@b^(0+128)
 15073  0152  31B6  2677  3180   	fcall	___flsub
 15074  0155  0021               	movlb	1	; select bank1
 15075  0156  0823               	movf	(?___flsub+3)^(0+128),w
 15076  0157  0020               	movlb	0	; select bank0
 15077  0158  00C7               	movwf	___fldiv@b+3
 15078  0159  0021               	movlb	1	; select bank1
 15079  015A  0822               	movf	(?___flsub+2)^(0+128),w
 15080  015B  0020               	movlb	0	; select bank0
 15081  015C  00C6               	movwf	___fldiv@b+2
 15082  015D  0021               	movlb	1	; select bank1
 15083  015E  0821               	movf	(?___flsub+1)^(0+128),w
 15084  015F  0020               	movlb	0	; select bank0
 15085  0160  00C5               	movwf	___fldiv@b+1
 15086  0161  0021               	movlb	1	; select bank1
 15087  0162  0820               	movf	?___flsub^(0+128),w
 15088  0163  0020               	movlb	0	; select bank0
 15089  0164  00C4               	movwf	___fldiv@b
 15090  0165  319C  24E2         	fcall	___fldiv
 15091  0167  0020               	movlb	0	; select bank0
 15092  0168  0843               	movf	?___fldiv+3,w
 15093  0169  0021               	movlb	1	; select bank1
 15094  016A  00AB               	movwf	(?_logf+3)^(0+128)
 15095  016B  0020               	movlb	0	; select bank0
 15096  016C  0842               	movf	?___fldiv+2,w
 15097  016D  0021               	movlb	1	; select bank1
 15098  016E  00AA               	movwf	(?_logf+2)^(0+128)
 15099  016F  0020               	movlb	0	; select bank0
 15100  0170  0841               	movf	?___fldiv+1,w
 15101  0171  0021               	movlb	1	; select bank1
 15102  0172  00A9               	movwf	(?_logf+1)^(0+128)
 15103  0173  0020               	movlb	0	; select bank0
 15104  0174  0840               	movf	?___fldiv,w
 15105  0175  0021               	movlb	1	; select bank1
 15106  0176  00A8               	movwf	?_logf^(0+128)
 15107  0177  0008               	return
 15108  0178                     l7800:	
 15109  0178  30E7               	movlw	231
 15110  0179  0022               	movlb	2	; select bank2
 15111  017A  07BC               	addwf	logf@k^(0+256),f
 15112  017B  30FF               	movlw	255
 15113  017C  3DBD               	addwfc	(logf@k+1)^(0+256),f
 15114  017D  304C               	movlw	76
 15115  017E  0020               	movlb	0	; select bank0
 15116  017F  00A9               	movwf	___flmul@b+3
 15117  0180  3000               	movlw	0
 15118  0181  00A8               	movwf	___flmul@b+2
 15119  0182  3000               	movlw	0
 15120  0183  00A7               	movwf	___flmul@b+1
 15121  0184  3000               	movlw	0
 15122  0185  00A6               	movwf	___flmul@b
 15123  0186  0021               	movlb	1	; select bank1
 15124  0187  082B               	movf	(logf@x+3)^(0+128),w
 15125  0188  0020               	movlb	0	; select bank0
 15126  0189  00AD               	movwf	___flmul@a+3
 15127  018A  0021               	movlb	1	; select bank1
 15128  018B  082A               	movf	(logf@x+2)^(0+128),w
 15129  018C  0020               	movlb	0	; select bank0
 15130  018D  00AC               	movwf	___flmul@a+2
 15131  018E  0021               	movlb	1	; select bank1
 15132  018F  0829               	movf	(logf@x+1)^(0+128),w
 15133  0190  0020               	movlb	0	; select bank0
 15134  0191  00AB               	movwf	___flmul@a+1
 15135  0192  0021               	movlb	1	; select bank1
 15136  0193  0828               	movf	logf@x^(0+128),w
 15137  0194  0020               	movlb	0	; select bank0
 15138  0195  00AA               	movwf	___flmul@a
 15139  0196  3190  2023  3180   	fcall	___flmul
 15140  0199  0020               	movlb	0	; select bank0
 15141  019A  0829               	movf	?___flmul+3,w
 15142  019B  0021               	movlb	1	; select bank1
 15143  019C  00AB               	movwf	(logf@x+3)^(0+128)
 15144  019D  0020               	movlb	0	; select bank0
 15145  019E  0828               	movf	?___flmul+2,w
 15146  019F  0021               	movlb	1	; select bank1
 15147  01A0  00AA               	movwf	(logf@x+2)^(0+128)
 15148  01A1  0020               	movlb	0	; select bank0
 15149  01A2  0827               	movf	?___flmul+1,w
 15150  01A3  0021               	movlb	1	; select bank1
 15151  01A4  00A9               	movwf	(logf@x+1)^(0+128)
 15152  01A5  0020               	movlb	0	; select bank0
 15153  01A6  0826               	movf	?___flmul,w
 15154  01A7  0021               	movlb	1	; select bank1
 15155  01A8  00A8               	movwf	logf@x^(0+128)
 15156  01A9  082B               	movf	(logf@x+3)^(0+128),w
 15157  01AA  0022               	movlb	2	; select bank2
 15158  01AB  00D9               	movwf	(logf@u+3)^(0+256)
 15159  01AC  0021               	movlb	1	; select bank1
 15160  01AD  082A               	movf	(logf@x+2)^(0+128),w
 15161  01AE  0022               	movlb	2	; select bank2
 15162  01AF  00D8               	movwf	(logf@u+2)^(0+256)
 15163  01B0  0021               	movlb	1	; select bank1
 15164  01B1  0829               	movf	(logf@x+1)^(0+128),w
 15165  01B2  0022               	movlb	2	; select bank2
 15166  01B3  00D7               	movwf	(logf@u+1)^(0+256)
 15167  01B4  0021               	movlb	1	; select bank1
 15168  01B5  0828               	movf	logf@x^(0+128),w
 15169  01B6  0022               	movlb	2	; select bank2
 15170  01B7  00D6               	movwf	logf@u^(0+256)
 15171  01B8  0859               	movf	(logf@u+3)^(0+256),w
 15172  01B9  00E1               	movwf	(logf@ix+3)^(0+256)
 15173  01BA  0858               	movf	(logf@u+2)^(0+256),w
 15174  01BB  00E0               	movwf	(logf@ix+2)^(0+256)
 15175  01BC  0857               	movf	(logf@u+1)^(0+256),w
 15176  01BD  00DF               	movwf	(logf@ix+1)^(0+256)
 15177  01BE  0856               	movf	logf@u^(0+256),w
 15178  01BF  00DE               	movwf	logf@ix^(0+256)
 15179  01C0  29DB               	goto	l7820
 15180  01C1                     l7808:	
 15181  01C1  3080               	movlw	128
 15182  01C2  0022               	movlb	2	; select bank2
 15183  01C3  0260               	subwf	(logf@ix+2)^(0+256),w
 15184  01C4  307F               	movlw	127
 15185  01C5  3B61               	subwfb	(logf@ix+3)^(0+256),w
 15186  01C6  1803               	btfsc	3,0
 15187  01C7  0008               	return
 15188  01C8  3080               	movlw	128
 15189  01C9  0660               	xorwf	(logf@ix+2)^(0+256),w
 15190  01CA  303F               	movlw	63
 15191  01CB  1903               	skipnz
 15192  01CC  0661               	xorwf	(logf@ix+3)^(0+256),w
 15193  01CD  045E               	iorwf	logf@ix^(0+256),w
 15194  01CE  045F               	iorwf	(logf@ix+1)^(0+256),w
 15195  01CF  1D03               	btfss	3,2
 15196  01D0  29DB               	goto	l7820
 15197  01D1  3000               	movlw	0
 15198  01D2  0021               	movlb	1	; select bank1
 15199  01D3  00AB               	movwf	(?_logf+3)^(0+128)
 15200  01D4  3000               	movlw	0
 15201  01D5  00AA               	movwf	(?_logf+2)^(0+128)
 15202  01D6  3000               	movlw	0
 15203  01D7  00A9               	movwf	(?_logf+1)^(0+128)
 15204  01D8  3000               	movlw	0
 15205  01D9  00A8               	movwf	?_logf^(0+128)
 15206  01DA  0008               	return
 15207  01DB                     l7820:	
 15208  01DB  300D               	movlw	13
 15209  01DC  07DE               	addwf	logf@ix^(0+256),f
 15210  01DD  30FB               	movlw	251
 15211  01DE  3DDF               	addwfc	(logf@ix+1)^(0+256),f
 15212  01DF  304A               	movlw	74
 15213  01E0  3DE0               	addwfc	(logf@ix+2)^(0+256),f
 15214  01E1  3000               	movlw	0
 15215  01E2  3DE1               	addwfc	(logf@ix+3)^(0+256),f
 15216  01E3  085E               	movf	logf@ix^(0+256),w
 15217  01E4  0021               	movlb	1	; select bank1
 15218  01E5  00AC               	movwf	??_logf^(0+128)
 15219  01E6  0022               	movlb	2	; select bank2
 15220  01E7  085F               	movf	(logf@ix+1)^(0+256),w
 15221  01E8  0021               	movlb	1	; select bank1
 15222  01E9  00AD               	movwf	(??_logf^(0+128)+1)
 15223  01EA  0022               	movlb	2	; select bank2
 15224  01EB  0860               	movf	(logf@ix+2)^(0+256),w
 15225  01EC  0021               	movlb	1	; select bank1
 15226  01ED  00AE               	movwf	(??_logf^(0+128)+2)
 15227  01EE  0022               	movlb	2	; select bank2
 15228  01EF  0861               	movf	(logf@ix+3)^(0+256),w
 15229  01F0  0021               	movlb	1	; select bank1
 15230  01F1  00AF               	movwf	(??_logf^(0+128)+3)
 15231  01F2  3017               	movlw	23
 15232  01F3                     u10775:	
 15233  01F3  36AF               	lsrf	(??_logf^(0+128)+3),f
 15234  01F4  0CAE               	rrf	(??_logf^(0+128)+2),f
 15235  01F5  0CAD               	rrf	(??_logf^(0+128)+1),f
 15236  01F6  0CAC               	rrf	??_logf^(0+128),f
 15237  01F7  0B89               	decfsz	9,f
 15238  01F8  29F3               	goto	u10775
 15239  01F9  082C               	movf	??_logf^(0+128),w
 15240  01FA  3E81               	addlw	129
 15241  01FB  00B0               	movwf	(??_logf+4)^(0+128)
 15242  01FC  30FF               	movlw	255
 15243  01FD  3D2D               	addwfc	(??_logf+1)^(0+128),w
 15244  01FE  00B1               	movwf	(??_logf+5)^(0+128)
 15245  01FF  0830               	movf	(??_logf+4)^(0+128),w
 15246  0200  0022               	movlb	2	; select bank2
 15247  0201  07BC               	addwf	logf@k^(0+256),f
 15248  0202  0021               	movlb	1	; select bank1
 15249  0203  0831               	movf	(??_logf+5)^(0+128),w
 15250  0204  0022               	movlb	2	; select bank2
 15251  0205  3DBD               	addwfc	(logf@k+1)^(0+256),f
 15252  0206  30F3               	movlw	243
 15253  0207  0021               	movlb	1	; select bank1
 15254  0208  00AC               	movwf	??_logf^(0+128)
 15255  0209  3004               	movlw	4
 15256  020A  00AD               	movwf	(??_logf^(0+128)+1)
 15257  020B  3035               	movlw	53
 15258  020C  00AE               	movwf	(??_logf^(0+128)+2)
 15259  020D  303F               	movlw	63
 15260  020E  00AF               	movwf	(??_logf^(0+128)+3)
 15261  020F  30FF               	movlw	255
 15262  0210  0022               	movlb	2	; select bank2
 15263  0211  055E               	andwf	logf@ix^(0+256),w
 15264  0212  0021               	movlb	1	; select bank1
 15265  0213  00B0               	movwf	(??_logf+4)^(0+128)
 15266  0214  30FF               	movlw	255
 15267  0215  0022               	movlb	2	; select bank2
 15268  0216  055F               	andwf	(logf@ix+1)^(0+256),w
 15269  0217  0021               	movlb	1	; select bank1
 15270  0218  00B1               	movwf	((??_logf+4)^(0+128)+1)
 15271  0219  307F               	movlw	127
 15272  021A  0022               	movlb	2	; select bank2
 15273  021B  0560               	andwf	(logf@ix+2)^(0+256),w
 15274  021C  0021               	movlb	1	; select bank1
 15275  021D  00B2               	movwf	((??_logf+4)^(0+128)+2)
 15276  021E  3000               	movlw	0
 15277  021F  0022               	movlb	2	; select bank2
 15278  0220  0561               	andwf	(logf@ix+3)^(0+256),w
 15279  0221  0021               	movlb	1	; select bank1
 15280  0222  00B3               	movwf	((??_logf+4)^(0+128)+3)
 15281  0223  0830               	movf	(??_logf+4)^(0+128),w
 15282  0224  07AC               	addwf	??_logf^(0+128),f
 15283  0225  0831               	movf	(??_logf+5)^(0+128),w
 15284  0226  3DAD               	addwfc	(??_logf^(0+128)+1),f
 15285  0227  0832               	movf	(??_logf+6)^(0+128),w
 15286  0228  3DAE               	addwfc	(??_logf^(0+128)+2),f
 15287  0229  0833               	movf	(??_logf+7)^(0+128),w
 15288  022A  3DAF               	addwfc	(??_logf^(0+128)+3),f
 15289  022B  082F               	movf	(??_logf+3)^(0+128),w
 15290  022C  0022               	movlb	2	; select bank2
 15291  022D  00E1               	movwf	(logf@ix+3)^(0+256)
 15292  022E  0021               	movlb	1	; select bank1
 15293  022F  082E               	movf	(??_logf+2)^(0+128),w
 15294  0230  0022               	movlb	2	; select bank2
 15295  0231  00E0               	movwf	(logf@ix+2)^(0+256)
 15296  0232  0021               	movlb	1	; select bank1
 15297  0233  082D               	movf	(??_logf+1)^(0+128),w
 15298  0234  0022               	movlb	2	; select bank2
 15299  0235  00DF               	movwf	(logf@ix+1)^(0+256)
 15300  0236  0021               	movlb	1	; select bank1
 15301  0237  082C               	movf	??_logf^(0+128),w
 15302  0238  0022               	movlb	2	; select bank2
 15303  0239  00DE               	movwf	logf@ix^(0+256)
 15304  023A  0861               	movf	(logf@ix+3)^(0+256),w
 15305  023B  00D9               	movwf	(logf@u+3)^(0+256)
 15306  023C  0860               	movf	(logf@ix+2)^(0+256),w
 15307  023D  00D8               	movwf	(logf@u+2)^(0+256)
 15308  023E  085F               	movf	(logf@ix+1)^(0+256),w
 15309  023F  00D7               	movwf	(logf@u+1)^(0+256)
 15310  0240  085E               	movf	logf@ix^(0+256),w
 15311  0241  00D6               	movwf	logf@u^(0+256)
 15312  0242  0859               	movf	(logf@u+3)^(0+256),w
 15313  0243  0021               	movlb	1	; select bank1
 15314  0244  00AB               	movwf	(logf@x+3)^(0+128)
 15315  0245  0022               	movlb	2	; select bank2
 15316  0246  0858               	movf	(logf@u+2)^(0+256),w
 15317  0247  0021               	movlb	1	; select bank1
 15318  0248  00AA               	movwf	(logf@x+2)^(0+128)
 15319  0249  0022               	movlb	2	; select bank2
 15320  024A  0857               	movf	(logf@u+1)^(0+256),w
 15321  024B  0021               	movlb	1	; select bank1
 15322  024C  00A9               	movwf	(logf@x+1)^(0+128)
 15323  024D  0022               	movlb	2	; select bank2
 15324  024E  0856               	movf	logf@u^(0+256),w
 15325  024F  0021               	movlb	1	; select bank1
 15326  0250  00A8               	movwf	logf@x^(0+128)
 15327  0251  30BF               	movlw	191
 15328  0252  0020               	movlb	0	; select bank0
 15329  0253  00DD               	movwf	___fladd@b+3
 15330  0254  3080               	movlw	128
 15331  0255  00DC               	movwf	___fladd@b+2
 15332  0256  3000               	movlw	0
 15333  0257  00DB               	movwf	___fladd@b+1
 15334  0258  3000               	movlw	0
 15335  0259  00DA               	movwf	___fladd@b
 15336  025A  0021               	movlb	1	; select bank1
 15337  025B  082B               	movf	(logf@x+3)^(0+128),w
 15338  025C  0020               	movlb	0	; select bank0
 15339  025D  00E1               	movwf	___fladd@a+3
 15340  025E  0021               	movlb	1	; select bank1
 15341  025F  082A               	movf	(logf@x+2)^(0+128),w
 15342  0260  0020               	movlb	0	; select bank0
 15343  0261  00E0               	movwf	___fladd@a+2
 15344  0262  0021               	movlb	1	; select bank1
 15345  0263  0829               	movf	(logf@x+1)^(0+128),w
 15346  0264  0020               	movlb	0	; select bank0
 15347  0265  00DF               	movwf	___fladd@a+1
 15348  0266  0021               	movlb	1	; select bank1
 15349  0267  0828               	movf	logf@x^(0+128),w
 15350  0268  0020               	movlb	0	; select bank0
 15351  0269  00DE               	movwf	___fladd@a
 15352  026A  3185  25F5  3180   	fcall	___fladd
 15353  026D  0020               	movlb	0	; select bank0
 15354  026E  085D               	movf	?___fladd+3,w
 15355  026F  0022               	movlb	2	; select bank2
 15356  0270  00DD               	movwf	(logf@f+3)^(0+256)
 15357  0271  0020               	movlb	0	; select bank0
 15358  0272  085C               	movf	?___fladd+2,w
 15359  0273  0022               	movlb	2	; select bank2
 15360  0274  00DC               	movwf	(logf@f+2)^(0+256)
 15361  0275  0020               	movlb	0	; select bank0
 15362  0276  085B               	movf	?___fladd+1,w
 15363  0277  0022               	movlb	2	; select bank2
 15364  0278  00DB               	movwf	(logf@f+1)^(0+256)
 15365  0279  0020               	movlb	0	; select bank0
 15366  027A  085A               	movf	?___fladd,w
 15367  027B  0022               	movlb	2	; select bank2
 15368  027C  00DA               	movwf	logf@f^(0+256)
 15369  027D  3040               	movlw	64
 15370  027E  0020               	movlb	0	; select bank0
 15371  027F  00DD               	movwf	___fladd@b+3
 15372  0280  3000               	movlw	0
 15373  0281  00DC               	movwf	___fladd@b+2
 15374  0282  3000               	movlw	0
 15375  0283  00DB               	movwf	___fladd@b+1
 15376  0284  3000               	movlw	0
 15377  0285  00DA               	movwf	___fladd@b
 15378  0286  0022               	movlb	2	; select bank2
 15379  0287  085D               	movf	(logf@f+3)^(0+256),w
 15380  0288  0020               	movlb	0	; select bank0
 15381  0289  00E1               	movwf	___fladd@a+3
 15382  028A  0022               	movlb	2	; select bank2
 15383  028B  085C               	movf	(logf@f+2)^(0+256),w
 15384  028C  0020               	movlb	0	; select bank0
 15385  028D  00E0               	movwf	___fladd@a+2
 15386  028E  0022               	movlb	2	; select bank2
 15387  028F  085B               	movf	(logf@f+1)^(0+256),w
 15388  0290  0020               	movlb	0	; select bank0
 15389  0291  00DF               	movwf	___fladd@a+1
 15390  0292  0022               	movlb	2	; select bank2
 15391  0293  085A               	movf	logf@f^(0+256),w
 15392  0294  0020               	movlb	0	; select bank0
 15393  0295  00DE               	movwf	___fladd@a
 15394  0296  3185  25F5  3180   	fcall	___fladd
 15395  0299  0020               	movlb	0	; select bank0
 15396  029A  085D               	movf	?___fladd+3,w
 15397  029B  00C3               	movwf	___fldiv@a+3
 15398  029C  085C               	movf	?___fladd+2,w
 15399  029D  00C2               	movwf	___fldiv@a+2
 15400  029E  085B               	movf	?___fladd+1,w
 15401  029F  00C1               	movwf	___fldiv@a+1
 15402  02A0  085A               	movf	?___fladd,w
 15403  02A1  00C0               	movwf	___fldiv@a
 15404  02A2  0022               	movlb	2	; select bank2
 15405  02A3  085D               	movf	(logf@f+3)^(0+256),w
 15406  02A4  0020               	movlb	0	; select bank0
 15407  02A5  00C7               	movwf	___fldiv@b+3
 15408  02A6  0022               	movlb	2	; select bank2
 15409  02A7  085C               	movf	(logf@f+2)^(0+256),w
 15410  02A8  0020               	movlb	0	; select bank0
 15411  02A9  00C6               	movwf	___fldiv@b+2
 15412  02AA  0022               	movlb	2	; select bank2
 15413  02AB  085B               	movf	(logf@f+1)^(0+256),w
 15414  02AC  0020               	movlb	0	; select bank0
 15415  02AD  00C5               	movwf	___fldiv@b+1
 15416  02AE  0022               	movlb	2	; select bank2
 15417  02AF  085A               	movf	logf@f^(0+256),w
 15418  02B0  0020               	movlb	0	; select bank0
 15419  02B1  00C4               	movwf	___fldiv@b
 15420  02B2  319C  24E2  3180   	fcall	___fldiv
 15421  02B5  0020               	movlb	0	; select bank0
 15422  02B6  0843               	movf	?___fldiv+3,w
 15423  02B7  0022               	movlb	2	; select bank2
 15424  02B8  00C9               	movwf	(logf@s+3)^(0+256)
 15425  02B9  0020               	movlb	0	; select bank0
 15426  02BA  0842               	movf	?___fldiv+2,w
 15427  02BB  0022               	movlb	2	; select bank2
 15428  02BC  00C8               	movwf	(logf@s+2)^(0+256)
 15429  02BD  0020               	movlb	0	; select bank0
 15430  02BE  0841               	movf	?___fldiv+1,w
 15431  02BF  0022               	movlb	2	; select bank2
 15432  02C0  00C7               	movwf	(logf@s+1)^(0+256)
 15433  02C1  0020               	movlb	0	; select bank0
 15434  02C2  0840               	movf	?___fldiv,w
 15435  02C3  0022               	movlb	2	; select bank2
 15436  02C4  00C6               	movwf	logf@s^(0+256)
 15437  02C5  0849               	movf	(logf@s+3)^(0+256),w
 15438  02C6  0020               	movlb	0	; select bank0
 15439  02C7  00A9               	movwf	___flmul@b+3
 15440  02C8  0022               	movlb	2	; select bank2
 15441  02C9  0848               	movf	(logf@s+2)^(0+256),w
 15442  02CA  0020               	movlb	0	; select bank0
 15443  02CB  00A8               	movwf	___flmul@b+2
 15444  02CC  0022               	movlb	2	; select bank2
 15445  02CD  0847               	movf	(logf@s+1)^(0+256),w
 15446  02CE  0020               	movlb	0	; select bank0
 15447  02CF  00A7               	movwf	___flmul@b+1
 15448  02D0  0022               	movlb	2	; select bank2
 15449  02D1  0846               	movf	logf@s^(0+256),w
 15450  02D2  0020               	movlb	0	; select bank0
 15451  02D3  00A6               	movwf	___flmul@b
 15452  02D4  0022               	movlb	2	; select bank2
 15453  02D5  0849               	movf	(logf@s+3)^(0+256),w
 15454  02D6  0020               	movlb	0	; select bank0
 15455  02D7  00AD               	movwf	___flmul@a+3
 15456  02D8  0022               	movlb	2	; select bank2
 15457  02D9  0848               	movf	(logf@s+2)^(0+256),w
 15458  02DA  0020               	movlb	0	; select bank0
 15459  02DB  00AC               	movwf	___flmul@a+2
 15460  02DC  0022               	movlb	2	; select bank2
 15461  02DD  0847               	movf	(logf@s+1)^(0+256),w
 15462  02DE  0020               	movlb	0	; select bank0
 15463  02DF  00AB               	movwf	___flmul@a+1
 15464  02E0  0022               	movlb	2	; select bank2
 15465  02E1  0846               	movf	logf@s^(0+256),w
 15466  02E2  0020               	movlb	0	; select bank0
 15467  02E3  00AA               	movwf	___flmul@a
 15468  02E4  3190  2023  3180   	fcall	___flmul
 15469  02E7  0020               	movlb	0	; select bank0
 15470  02E8  0829               	movf	?___flmul+3,w
 15471  02E9  0022               	movlb	2	; select bank2
 15472  02EA  00CD               	movwf	(logf@z+3)^(0+256)
 15473  02EB  0020               	movlb	0	; select bank0
 15474  02EC  0828               	movf	?___flmul+2,w
 15475  02ED  0022               	movlb	2	; select bank2
 15476  02EE  00CC               	movwf	(logf@z+2)^(0+256)
 15477  02EF  0020               	movlb	0	; select bank0
 15478  02F0  0827               	movf	?___flmul+1,w
 15479  02F1  0022               	movlb	2	; select bank2
 15480  02F2  00CB               	movwf	(logf@z+1)^(0+256)
 15481  02F3  0020               	movlb	0	; select bank0
 15482  02F4  0826               	movf	?___flmul,w
 15483  02F5  0022               	movlb	2	; select bank2
 15484  02F6  00CA               	movwf	logf@z^(0+256)
 15485  02F7  084D               	movf	(logf@z+3)^(0+256),w
 15486  02F8  0020               	movlb	0	; select bank0
 15487  02F9  00A9               	movwf	___flmul@b+3
 15488  02FA  0022               	movlb	2	; select bank2
 15489  02FB  084C               	movf	(logf@z+2)^(0+256),w
 15490  02FC  0020               	movlb	0	; select bank0
 15491  02FD  00A8               	movwf	___flmul@b+2
 15492  02FE  0022               	movlb	2	; select bank2
 15493  02FF  084B               	movf	(logf@z+1)^(0+256),w
 15494  0300  0020               	movlb	0	; select bank0
 15495  0301  00A7               	movwf	___flmul@b+1
 15496  0302  0022               	movlb	2	; select bank2
 15497  0303  084A               	movf	logf@z^(0+256),w
 15498  0304  0020               	movlb	0	; select bank0
 15499  0305  00A6               	movwf	___flmul@b
 15500  0306  0022               	movlb	2	; select bank2
 15501  0307  084D               	movf	(logf@z+3)^(0+256),w
 15502  0308  0020               	movlb	0	; select bank0
 15503  0309  00AD               	movwf	___flmul@a+3
 15504  030A  0022               	movlb	2	; select bank2
 15505  030B  084C               	movf	(logf@z+2)^(0+256),w
 15506  030C  0020               	movlb	0	; select bank0
 15507  030D  00AC               	movwf	___flmul@a+2
 15508  030E  0022               	movlb	2	; select bank2
 15509  030F  084B               	movf	(logf@z+1)^(0+256),w
 15510  0310  0020               	movlb	0	; select bank0
 15511  0311  00AB               	movwf	___flmul@a+1
 15512  0312  0022               	movlb	2	; select bank2
 15513  0313  084A               	movf	logf@z^(0+256),w
 15514  0314  0020               	movlb	0	; select bank0
 15515  0315  00AA               	movwf	___flmul@a
 15516  0316  3190  2023  3180   	fcall	___flmul
 15517  0319  0020               	movlb	0	; select bank0
 15518  031A  0829               	movf	?___flmul+3,w
 15519  031B  0022               	movlb	2	; select bank2
 15520  031C  00D1               	movwf	(logf@w+3)^(0+256)
 15521  031D  0020               	movlb	0	; select bank0
 15522  031E  0828               	movf	?___flmul+2,w
 15523  031F  0022               	movlb	2	; select bank2
 15524  0320  00D0               	movwf	(logf@w+2)^(0+256)
 15525  0321  0020               	movlb	0	; select bank0
 15526  0322  0827               	movf	?___flmul+1,w
 15527  0323  0022               	movlb	2	; select bank2
 15528  0324  00CF               	movwf	(logf@w+1)^(0+256)
 15529  0325  0020               	movlb	0	; select bank0
 15530  0326  0826               	movf	?___flmul,w
 15531  0327  0022               	movlb	2	; select bank2
 15532  0328  00CE               	movwf	logf@w^(0+256)
 15533  0329  303E               	movlw	62
 15534  032A  0020               	movlb	0	; select bank0
 15535  032B  00DD               	movwf	___fladd@b+3
 15536  032C  30CC               	movlw	204
 15537  032D  00DC               	movwf	___fladd@b+2
 15538  032E  30CE               	movlw	206
 15539  032F  00DB               	movwf	___fladd@b+1
 15540  0330  3013               	movlw	19
 15541  0331  00DA               	movwf	___fladd@b
 15542  0332  303E               	movlw	62
 15543  0333  00A9               	movwf	___flmul@b+3
 15544  0334  3078               	movlw	120
 15545  0335  00A8               	movwf	___flmul@b+2
 15546  0336  309E               	movlw	158
 15547  0337  00A7               	movwf	___flmul@b+1
 15548  0338  3026               	movlw	38
 15549  0339  00A6               	movwf	___flmul@b
 15550  033A  0022               	movlb	2	; select bank2
 15551  033B  0851               	movf	(logf@w+3)^(0+256),w
 15552  033C  0020               	movlb	0	; select bank0
 15553  033D  00AD               	movwf	___flmul@a+3
 15554  033E  0022               	movlb	2	; select bank2
 15555  033F  0850               	movf	(logf@w+2)^(0+256),w
 15556  0340  0020               	movlb	0	; select bank0
 15557  0341  00AC               	movwf	___flmul@a+2
 15558  0342  0022               	movlb	2	; select bank2
 15559  0343  084F               	movf	(logf@w+1)^(0+256),w
 15560  0344  0020               	movlb	0	; select bank0
 15561  0345  00AB               	movwf	___flmul@a+1
 15562  0346  0022               	movlb	2	; select bank2
 15563  0347  084E               	movf	logf@w^(0+256),w
 15564  0348  0020               	movlb	0	; select bank0
 15565  0349  00AA               	movwf	___flmul@a
 15566  034A  3190  2023  3180   	fcall	___flmul
 15567  034D  0020               	movlb	0	; select bank0
 15568  034E  0829               	movf	?___flmul+3,w
 15569  034F  00E1               	movwf	___fladd@a+3
 15570  0350  0828               	movf	?___flmul+2,w
 15571  0351  00E0               	movwf	___fladd@a+2
 15572  0352  0827               	movf	?___flmul+1,w
 15573  0353  00DF               	movwf	___fladd@a+1
 15574  0354  0826               	movf	?___flmul,w
 15575  0355  00DE               	movwf	___fladd@a
 15576  0356  3185  25F5  3180   	fcall	___fladd
 15577  0359  0020               	movlb	0	; select bank0
 15578  035A  085D               	movf	?___fladd+3,w
 15579  035B  0022               	movlb	2	; select bank2
 15580  035C  00D5               	movwf	(_logf$2042+3)^(0+256)
 15581  035D  0020               	movlb	0	; select bank0
 15582  035E  085C               	movf	?___fladd+2,w
 15583  035F  0022               	movlb	2	; select bank2
 15584  0360  00D4               	movwf	(_logf$2042+2)^(0+256)
 15585  0361  0020               	movlb	0	; select bank0
 15586  0362  085B               	movf	?___fladd+1,w
 15587  0363  0022               	movlb	2	; select bank2
 15588  0364  00D3               	movwf	(_logf$2042+1)^(0+256)
 15589  0365  0020               	movlb	0	; select bank0
 15590  0366  085A               	movf	?___fladd,w
 15591  0367  0022               	movlb	2	; select bank2
 15592  0368  00D2               	movwf	_logf$2042^(0+256)
 15593  0369  0851               	movf	(logf@w+3)^(0+256),w
 15594  036A  0020               	movlb	0	; select bank0
 15595  036B  00A9               	movwf	___flmul@b+3
 15596  036C  0022               	movlb	2	; select bank2
 15597  036D  0850               	movf	(logf@w+2)^(0+256),w
 15598  036E  0020               	movlb	0	; select bank0
 15599  036F  00A8               	movwf	___flmul@b+2
 15600  0370  0022               	movlb	2	; select bank2
 15601  0371  084F               	movf	(logf@w+1)^(0+256),w
 15602  0372  0020               	movlb	0	; select bank0
 15603  0373  00A7               	movwf	___flmul@b+1
 15604  0374  0022               	movlb	2	; select bank2
 15605  0375  084E               	movf	logf@w^(0+256),w
 15606  0376  0020               	movlb	0	; select bank0
 15607  0377  00A6               	movwf	___flmul@b
 15608  0378  0022               	movlb	2	; select bank2
 15609  0379  0855               	movf	(_logf$2042+3)^(0+256),w
 15610  037A  0020               	movlb	0	; select bank0
 15611  037B  00AD               	movwf	___flmul@a+3
 15612  037C  0022               	movlb	2	; select bank2
 15613  037D  0854               	movf	(_logf$2042+2)^(0+256),w
 15614  037E  0020               	movlb	0	; select bank0
 15615  037F  00AC               	movwf	___flmul@a+2
 15616  0380  0022               	movlb	2	; select bank2
 15617  0381  0853               	movf	(_logf$2042+1)^(0+256),w
 15618  0382  0020               	movlb	0	; select bank0
 15619  0383  00AB               	movwf	___flmul@a+1
 15620  0384  0022               	movlb	2	; select bank2
 15621  0385  0852               	movf	_logf$2042^(0+256),w
 15622  0386  0020               	movlb	0	; select bank0
 15623  0387  00AA               	movwf	___flmul@a
 15624  0388  3190  2023  3180   	fcall	___flmul
 15625  038B  0020               	movlb	0	; select bank0
 15626  038C  0829               	movf	?___flmul+3,w
 15627  038D  0022               	movlb	2	; select bank2
 15628  038E  00A7               	movwf	(logf@t1+3)^(0+256)
 15629  038F  0020               	movlb	0	; select bank0
 15630  0390  0828               	movf	?___flmul+2,w
 15631  0391  0022               	movlb	2	; select bank2
 15632  0392  00A6               	movwf	(logf@t1+2)^(0+256)
 15633  0393  0020               	movlb	0	; select bank0
 15634  0394  0827               	movf	?___flmul+1,w
 15635  0395  0022               	movlb	2	; select bank2
 15636  0396  00A5               	movwf	(logf@t1+1)^(0+256)
 15637  0397  0020               	movlb	0	; select bank0
 15638  0398  0826               	movf	?___flmul,w
 15639  0399  0022               	movlb	2	; select bank2
 15640  039A  00A4               	movwf	logf@t1^(0+256)
 15641  039B  303F               	movlw	63
 15642  039C  0020               	movlb	0	; select bank0
 15643  039D  00DD               	movwf	___fladd@b+3
 15644  039E  302A               	movlw	42
 15645  039F  00DC               	movwf	___fladd@b+2
 15646  03A0  30AA               	movlw	170
 15647  03A1  00DB               	movwf	___fladd@b+1
 15648  03A2  30AA               	movlw	170
 15649  03A3  00DA               	movwf	___fladd@b
 15650  03A4  303E               	movlw	62
 15651  03A5  00A9               	movwf	___flmul@b+3
 15652  03A6  3091               	movlw	145
 15653  03A7  00A8               	movwf	___flmul@b+2
 15654  03A8  30E9               	movlw	233
 15655  03A9  00A7               	movwf	___flmul@b+1
 15656  03AA  30EE               	movlw	238
 15657  03AB  00A6               	movwf	___flmul@b
 15658  03AC  0022               	movlb	2	; select bank2
 15659  03AD  0851               	movf	(logf@w+3)^(0+256),w
 15660  03AE  0020               	movlb	0	; select bank0
 15661  03AF  00AD               	movwf	___flmul@a+3
 15662  03B0  0022               	movlb	2	; select bank2
 15663  03B1  0850               	movf	(logf@w+2)^(0+256),w
 15664  03B2  0020               	movlb	0	; select bank0
 15665  03B3  00AC               	movwf	___flmul@a+2
 15666  03B4  0022               	movlb	2	; select bank2
 15667  03B5  084F               	movf	(logf@w+1)^(0+256),w
 15668  03B6  0020               	movlb	0	; select bank0
 15669  03B7  00AB               	movwf	___flmul@a+1
 15670  03B8  0022               	movlb	2	; select bank2
 15671  03B9  084E               	movf	logf@w^(0+256),w
 15672  03BA  0020               	movlb	0	; select bank0
 15673  03BB  00AA               	movwf	___flmul@a
 15674  03BC  3190  2023  3180   	fcall	___flmul
 15675  03BF  0020               	movlb	0	; select bank0
 15676  03C0  0829               	movf	?___flmul+3,w
 15677  03C1  00E1               	movwf	___fladd@a+3
 15678  03C2  0828               	movf	?___flmul+2,w
 15679  03C3  00E0               	movwf	___fladd@a+2
 15680  03C4  0827               	movf	?___flmul+1,w
 15681  03C5  00DF               	movwf	___fladd@a+1
 15682  03C6  0826               	movf	?___flmul,w
 15683  03C7  00DE               	movwf	___fladd@a
 15684  03C8  3185  25F5  3180   	fcall	___fladd
 15685  03CB  0020               	movlb	0	; select bank0
 15686  03CC  085D               	movf	?___fladd+3,w
 15687  03CD  0022               	movlb	2	; select bank2
 15688  03CE  00D5               	movwf	(_logf$2042+3)^(0+256)
 15689  03CF  0020               	movlb	0	; select bank0
 15690  03D0  085C               	movf	?___fladd+2,w
 15691  03D1  0022               	movlb	2	; select bank2
 15692  03D2  00D4               	movwf	(_logf$2042+2)^(0+256)
 15693  03D3  0020               	movlb	0	; select bank0
 15694  03D4  085B               	movf	?___fladd+1,w
 15695  03D5  0022               	movlb	2	; select bank2
 15696  03D6  00D3               	movwf	(_logf$2042+1)^(0+256)
 15697  03D7  0020               	movlb	0	; select bank0
 15698  03D8  085A               	movf	?___fladd,w
 15699  03D9  0022               	movlb	2	; select bank2
 15700  03DA  00D2               	movwf	_logf$2042^(0+256)
 15701  03DB  084D               	movf	(logf@z+3)^(0+256),w
 15702  03DC  0020               	movlb	0	; select bank0
 15703  03DD  00A9               	movwf	___flmul@b+3
 15704  03DE  0022               	movlb	2	; select bank2
 15705  03DF  084C               	movf	(logf@z+2)^(0+256),w
 15706  03E0  0020               	movlb	0	; select bank0
 15707  03E1  00A8               	movwf	___flmul@b+2
 15708  03E2  0022               	movlb	2	; select bank2
 15709  03E3  084B               	movf	(logf@z+1)^(0+256),w
 15710  03E4  0020               	movlb	0	; select bank0
 15711  03E5  00A7               	movwf	___flmul@b+1
 15712  03E6  0022               	movlb	2	; select bank2
 15713  03E7  084A               	movf	logf@z^(0+256),w
 15714  03E8  0020               	movlb	0	; select bank0
 15715  03E9  00A6               	movwf	___flmul@b
 15716  03EA  0022               	movlb	2	; select bank2
 15717  03EB  0855               	movf	(_logf$2042+3)^(0+256),w
 15718  03EC  0020               	movlb	0	; select bank0
 15719  03ED  00AD               	movwf	___flmul@a+3
 15720  03EE  0022               	movlb	2	; select bank2
 15721  03EF  0854               	movf	(_logf$2042+2)^(0+256),w
 15722  03F0  0020               	movlb	0	; select bank0
 15723  03F1  00AC               	movwf	___flmul@a+2
 15724  03F2  0022               	movlb	2	; select bank2
 15725  03F3  0853               	movf	(_logf$2042+1)^(0+256),w
 15726  03F4  0020               	movlb	0	; select bank0
 15727  03F5  00AB               	movwf	___flmul@a+1
 15728  03F6  0022               	movlb	2	; select bank2
 15729  03F7  0852               	movf	_logf$2042^(0+256),w
 15730  03F8  0020               	movlb	0	; select bank0
 15731  03F9  00AA               	movwf	___flmul@a
 15732  03FA  3190  2023  3180   	fcall	___flmul
 15733  03FD  0020               	movlb	0	; select bank0
 15734  03FE  0829               	movf	?___flmul+3,w
 15735  03FF  0022               	movlb	2	; select bank2
 15736  0400  00AB               	movwf	(logf@t2+3)^(0+256)
 15737  0401  0020               	movlb	0	; select bank0
 15738  0402  0828               	movf	?___flmul+2,w
 15739  0403  0022               	movlb	2	; select bank2
 15740  0404  00AA               	movwf	(logf@t2+2)^(0+256)
 15741  0405  0020               	movlb	0	; select bank0
 15742  0406  0827               	movf	?___flmul+1,w
 15743  0407  0022               	movlb	2	; select bank2
 15744  0408  00A9               	movwf	(logf@t2+1)^(0+256)
 15745  0409  0020               	movlb	0	; select bank0
 15746  040A  0826               	movf	?___flmul,w
 15747  040B  0022               	movlb	2	; select bank2
 15748  040C  00A8               	movwf	logf@t2^(0+256)
 15749  040D  0827               	movf	(logf@t1+3)^(0+256),w
 15750  040E  0020               	movlb	0	; select bank0
 15751  040F  00DD               	movwf	___fladd@b+3
 15752  0410  0022               	movlb	2	; select bank2
 15753  0411  0826               	movf	(logf@t1+2)^(0+256),w
 15754  0412  0020               	movlb	0	; select bank0
 15755  0413  00DC               	movwf	___fladd@b+2
 15756  0414  0022               	movlb	2	; select bank2
 15757  0415  0825               	movf	(logf@t1+1)^(0+256),w
 15758  0416  0020               	movlb	0	; select bank0
 15759  0417  00DB               	movwf	___fladd@b+1
 15760  0418  0022               	movlb	2	; select bank2
 15761  0419  0824               	movf	logf@t1^(0+256),w
 15762  041A  0020               	movlb	0	; select bank0
 15763  041B  00DA               	movwf	___fladd@b
 15764  041C  0022               	movlb	2	; select bank2
 15765  041D  082B               	movf	(logf@t2+3)^(0+256),w
 15766  041E  0020               	movlb	0	; select bank0
 15767  041F  00E1               	movwf	___fladd@a+3
 15768  0420  0022               	movlb	2	; select bank2
 15769  0421  082A               	movf	(logf@t2+2)^(0+256),w
 15770  0422  0020               	movlb	0	; select bank0
 15771  0423  00E0               	movwf	___fladd@a+2
 15772  0424  0022               	movlb	2	; select bank2
 15773  0425  0829               	movf	(logf@t2+1)^(0+256),w
 15774  0426  0020               	movlb	0	; select bank0
 15775  0427  00DF               	movwf	___fladd@a+1
 15776  0428  0022               	movlb	2	; select bank2
 15777  0429  0828               	movf	logf@t2^(0+256),w
 15778  042A  0020               	movlb	0	; select bank0
 15779  042B  00DE               	movwf	___fladd@a
 15780  042C  3185  25F5  3180   	fcall	___fladd
 15781  042F  0020               	movlb	0	; select bank0
 15782  0430  085D               	movf	?___fladd+3,w
 15783  0431  0022               	movlb	2	; select bank2
 15784  0432  00A3               	movwf	(logf@R+3)^(0+256)
 15785  0433  0020               	movlb	0	; select bank0
 15786  0434  085C               	movf	?___fladd+2,w
 15787  0435  0022               	movlb	2	; select bank2
 15788  0436  00A2               	movwf	(logf@R+2)^(0+256)
 15789  0437  0020               	movlb	0	; select bank0
 15790  0438  085B               	movf	?___fladd+1,w
 15791  0439  0022               	movlb	2	; select bank2
 15792  043A  00A1               	movwf	(logf@R+1)^(0+256)
 15793  043B  0020               	movlb	0	; select bank0
 15794  043C  085A               	movf	?___fladd,w
 15795  043D  0022               	movlb	2	; select bank2
 15796  043E  00A0               	movwf	logf@R^(0+256)
 15797  043F  303F               	movlw	63
 15798  0440  0020               	movlb	0	; select bank0
 15799  0441  00A9               	movwf	___flmul@b+3
 15800  0442  3000               	movlw	0
 15801  0443  00A8               	movwf	___flmul@b+2
 15802  0444  3000               	movlw	0
 15803  0445  00A7               	movwf	___flmul@b+1
 15804  0446  3000               	movlw	0
 15805  0447  00A6               	movwf	___flmul@b
 15806  0448  0022               	movlb	2	; select bank2
 15807  0449  085D               	movf	(logf@f+3)^(0+256),w
 15808  044A  0020               	movlb	0	; select bank0
 15809  044B  00AD               	movwf	___flmul@a+3
 15810  044C  0022               	movlb	2	; select bank2
 15811  044D  085C               	movf	(logf@f+2)^(0+256),w
 15812  044E  0020               	movlb	0	; select bank0
 15813  044F  00AC               	movwf	___flmul@a+2
 15814  0450  0022               	movlb	2	; select bank2
 15815  0451  085B               	movf	(logf@f+1)^(0+256),w
 15816  0452  0020               	movlb	0	; select bank0
 15817  0453  00AB               	movwf	___flmul@a+1
 15818  0454  0022               	movlb	2	; select bank2
 15819  0455  085A               	movf	logf@f^(0+256),w
 15820  0456  0020               	movlb	0	; select bank0
 15821  0457  00AA               	movwf	___flmul@a
 15822  0458  3190  2023  3180   	fcall	___flmul
 15823  045B  0020               	movlb	0	; select bank0
 15824  045C  0829               	movf	?___flmul+3,w
 15825  045D  0022               	movlb	2	; select bank2
 15826  045E  00D5               	movwf	(_logf$2042+3)^(0+256)
 15827  045F  0020               	movlb	0	; select bank0
 15828  0460  0828               	movf	?___flmul+2,w
 15829  0461  0022               	movlb	2	; select bank2
 15830  0462  00D4               	movwf	(_logf$2042+2)^(0+256)
 15831  0463  0020               	movlb	0	; select bank0
 15832  0464  0827               	movf	?___flmul+1,w
 15833  0465  0022               	movlb	2	; select bank2
 15834  0466  00D3               	movwf	(_logf$2042+1)^(0+256)
 15835  0467  0020               	movlb	0	; select bank0
 15836  0468  0826               	movf	?___flmul,w
 15837  0469  0022               	movlb	2	; select bank2
 15838  046A  00D2               	movwf	_logf$2042^(0+256)
 15839  046B  085D               	movf	(logf@f+3)^(0+256),w
 15840  046C  0020               	movlb	0	; select bank0
 15841  046D  00A9               	movwf	___flmul@b+3
 15842  046E  0022               	movlb	2	; select bank2
 15843  046F  085C               	movf	(logf@f+2)^(0+256),w
 15844  0470  0020               	movlb	0	; select bank0
 15845  0471  00A8               	movwf	___flmul@b+2
 15846  0472  0022               	movlb	2	; select bank2
 15847  0473  085B               	movf	(logf@f+1)^(0+256),w
 15848  0474  0020               	movlb	0	; select bank0
 15849  0475  00A7               	movwf	___flmul@b+1
 15850  0476  0022               	movlb	2	; select bank2
 15851  0477  085A               	movf	logf@f^(0+256),w
 15852  0478  0020               	movlb	0	; select bank0
 15853  0479  00A6               	movwf	___flmul@b
 15854  047A  0022               	movlb	2	; select bank2
 15855  047B  0855               	movf	(_logf$2042+3)^(0+256),w
 15856  047C  0020               	movlb	0	; select bank0
 15857  047D  00AD               	movwf	___flmul@a+3
 15858  047E  0022               	movlb	2	; select bank2
 15859  047F  0854               	movf	(_logf$2042+2)^(0+256),w
 15860  0480  0020               	movlb	0	; select bank0
 15861  0481  00AC               	movwf	___flmul@a+2
 15862  0482  0022               	movlb	2	; select bank2
 15863  0483  0853               	movf	(_logf$2042+1)^(0+256),w
 15864  0484  0020               	movlb	0	; select bank0
 15865  0485  00AB               	movwf	___flmul@a+1
 15866  0486  0022               	movlb	2	; select bank2
 15867  0487  0852               	movf	_logf$2042^(0+256),w
 15868  0488  0020               	movlb	0	; select bank0
 15869  0489  00AA               	movwf	___flmul@a
 15870  048A  3190  2023  3180   	fcall	___flmul
 15871  048D  0020               	movlb	0	; select bank0
 15872  048E  0829               	movf	?___flmul+3,w
 15873  048F  0022               	movlb	2	; select bank2
 15874  0490  00C1               	movwf	(logf@hfsq+3)^(0+256)
 15875  0491  0020               	movlb	0	; select bank0
 15876  0492  0828               	movf	?___flmul+2,w
 15877  0493  0022               	movlb	2	; select bank2
 15878  0494  00C0               	movwf	(logf@hfsq+2)^(0+256)
 15879  0495  0020               	movlb	0	; select bank0
 15880  0496  0827               	movf	?___flmul+1,w
 15881  0497  0022               	movlb	2	; select bank2
 15882  0498  00BF               	movwf	(logf@hfsq+1)^(0+256)
 15883  0499  0020               	movlb	0	; select bank0
 15884  049A  0826               	movf	?___flmul,w
 15885  049B  0022               	movlb	2	; select bank2
 15886  049C  00BE               	movwf	logf@hfsq^(0+256)
 15887  049D  083C               	movf	logf@k^(0+256),w
 15888  049E  00F1               	movwf	___xxtofl@val
 15889  049F  083D               	movf	(logf@k+1)^(0+256),w
 15890  04A0  00F2               	movwf	___xxtofl@val+1
 15891  04A1  0D89               	rlf	9,f
 15892  04A2  3B89               	subwfb	9,f
 15893  04A3  0989               	comf	9,f
 15894  04A4  00F3               	movwf	___xxtofl@val+2
 15895  04A5  00F4               	movwf	___xxtofl@val+3
 15896  04A6  3001               	movlw	1
 15897  04A7  31AB  23D3  3180   	fcall	___xxtofl
 15898  04AA  0874               	movf	?___xxtofl+3,w
 15899  04AB  0022               	movlb	2	; select bank2
 15900  04AC  00C5               	movwf	(logf@dk+3)^(0+256)
 15901  04AD  0873               	movf	?___xxtofl+2,w
 15902  04AE  00C4               	movwf	(logf@dk+2)^(0+256)
 15903  04AF  0872               	movf	?___xxtofl+1,w
 15904  04B0  00C3               	movwf	(logf@dk+1)^(0+256)
 15905  04B1  0871               	movf	?___xxtofl,w
 15906  04B2  00C2               	movwf	logf@dk^(0+256)
 15907  04B3  0849               	movf	(logf@s+3)^(0+256),w
 15908  04B4  0020               	movlb	0	; select bank0
 15909  04B5  00A9               	movwf	___flmul@b+3
 15910  04B6  0022               	movlb	2	; select bank2
 15911  04B7  0848               	movf	(logf@s+2)^(0+256),w
 15912  04B8  0020               	movlb	0	; select bank0
 15913  04B9  00A8               	movwf	___flmul@b+2
 15914  04BA  0022               	movlb	2	; select bank2
 15915  04BB  0847               	movf	(logf@s+1)^(0+256),w
 15916  04BC  0020               	movlb	0	; select bank0
 15917  04BD  00A7               	movwf	___flmul@b+1
 15918  04BE  0022               	movlb	2	; select bank2
 15919  04BF  0846               	movf	logf@s^(0+256),w
 15920  04C0  0020               	movlb	0	; select bank0
 15921  04C1  00A6               	movwf	___flmul@b
 15922  04C2  0022               	movlb	2	; select bank2
 15923  04C3  0823               	movf	(logf@R+3)^(0+256),w
 15924  04C4  0020               	movlb	0	; select bank0
 15925  04C5  00DD               	movwf	___fladd@b+3
 15926  04C6  0022               	movlb	2	; select bank2
 15927  04C7  0822               	movf	(logf@R+2)^(0+256),w
 15928  04C8  0020               	movlb	0	; select bank0
 15929  04C9  00DC               	movwf	___fladd@b+2
 15930  04CA  0022               	movlb	2	; select bank2
 15931  04CB  0821               	movf	(logf@R+1)^(0+256),w
 15932  04CC  0020               	movlb	0	; select bank0
 15933  04CD  00DB               	movwf	___fladd@b+1
 15934  04CE  0022               	movlb	2	; select bank2
 15935  04CF  0820               	movf	logf@R^(0+256),w
 15936  04D0  0020               	movlb	0	; select bank0
 15937  04D1  00DA               	movwf	___fladd@b
 15938  04D2  0022               	movlb	2	; select bank2
 15939  04D3  0841               	movf	(logf@hfsq+3)^(0+256),w
 15940  04D4  0020               	movlb	0	; select bank0
 15941  04D5  00E1               	movwf	___fladd@a+3
 15942  04D6  0022               	movlb	2	; select bank2
 15943  04D7  0840               	movf	(logf@hfsq+2)^(0+256),w
 15944  04D8  0020               	movlb	0	; select bank0
 15945  04D9  00E0               	movwf	___fladd@a+2
 15946  04DA  0022               	movlb	2	; select bank2
 15947  04DB  083F               	movf	(logf@hfsq+1)^(0+256),w
 15948  04DC  0020               	movlb	0	; select bank0
 15949  04DD  00DF               	movwf	___fladd@a+1
 15950  04DE  0022               	movlb	2	; select bank2
 15951  04DF  083E               	movf	logf@hfsq^(0+256),w
 15952  04E0  0020               	movlb	0	; select bank0
 15953  04E1  00DE               	movwf	___fladd@a
 15954  04E2  3185  25F5  3180   	fcall	___fladd
 15955  04E5  0020               	movlb	0	; select bank0
 15956  04E6  085D               	movf	?___fladd+3,w
 15957  04E7  00AD               	movwf	___flmul@a+3
 15958  04E8  085C               	movf	?___fladd+2,w
 15959  04E9  00AC               	movwf	___flmul@a+2
 15960  04EA  085B               	movf	?___fladd+1,w
 15961  04EB  00AB               	movwf	___flmul@a+1
 15962  04EC  085A               	movf	?___fladd,w
 15963  04ED  00AA               	movwf	___flmul@a
 15964  04EE  3190  2023  3180   	fcall	___flmul
 15965  04F1  0020               	movlb	0	; select bank0
 15966  04F2  0829               	movf	?___flmul+3,w
 15967  04F3  0022               	movlb	2	; select bank2
 15968  04F4  00AF               	movwf	(_logf$2043+3)^(0+256)
 15969  04F5  0020               	movlb	0	; select bank0
 15970  04F6  0828               	movf	?___flmul+2,w
 15971  04F7  0022               	movlb	2	; select bank2
 15972  04F8  00AE               	movwf	(_logf$2043+2)^(0+256)
 15973  04F9  0020               	movlb	0	; select bank0
 15974  04FA  0827               	movf	?___flmul+1,w
 15975  04FB  0022               	movlb	2	; select bank2
 15976  04FC  00AD               	movwf	(_logf$2043+1)^(0+256)
 15977  04FD  0020               	movlb	0	; select bank0
 15978  04FE  0826               	movf	?___flmul,w
 15979  04FF  0022               	movlb	2	; select bank2
 15980  0500  00AC               	movwf	_logf$2043^(0+256)
 15981  0501  3037               	movlw	55
 15982  0502  0020               	movlb	0	; select bank0
 15983  0503  00A9               	movwf	___flmul@b+3
 15984  0504  3017               	movlw	23
 15985  0505  00A8               	movwf	___flmul@b+2
 15986  0506  30F7               	movlw	247
 15987  0507  00A7               	movwf	___flmul@b+1
 15988  0508  30D1               	movlw	209
 15989  0509  00A6               	movwf	___flmul@b
 15990  050A  0022               	movlb	2	; select bank2
 15991  050B  0845               	movf	(logf@dk+3)^(0+256),w
 15992  050C  0020               	movlb	0	; select bank0
 15993  050D  00AD               	movwf	___flmul@a+3
 15994  050E  0022               	movlb	2	; select bank2
 15995  050F  0844               	movf	(logf@dk+2)^(0+256),w
 15996  0510  0020               	movlb	0	; select bank0
 15997  0511  00AC               	movwf	___flmul@a+2
 15998  0512  0022               	movlb	2	; select bank2
 15999  0513  0843               	movf	(logf@dk+1)^(0+256),w
 16000  0514  0020               	movlb	0	; select bank0
 16001  0515  00AB               	movwf	___flmul@a+1
 16002  0516  0022               	movlb	2	; select bank2
 16003  0517  0842               	movf	logf@dk^(0+256),w
 16004  0518  0020               	movlb	0	; select bank0
 16005  0519  00AA               	movwf	___flmul@a
 16006  051A  3190  2023  3180   	fcall	___flmul
 16007  051D  0020               	movlb	0	; select bank0
 16008  051E  0829               	movf	?___flmul+3,w
 16009  051F  00DD               	movwf	___fladd@b+3
 16010  0520  0828               	movf	?___flmul+2,w
 16011  0521  00DC               	movwf	___fladd@b+2
 16012  0522  0827               	movf	?___flmul+1,w
 16013  0523  00DB               	movwf	___fladd@b+1
 16014  0524  0826               	movf	?___flmul,w
 16015  0525  00DA               	movwf	___fladd@b
 16016  0526  0022               	movlb	2	; select bank2
 16017  0527  082F               	movf	(_logf$2043+3)^(0+256),w
 16018  0528  0020               	movlb	0	; select bank0
 16019  0529  00E1               	movwf	___fladd@a+3
 16020  052A  0022               	movlb	2	; select bank2
 16021  052B  082E               	movf	(_logf$2043+2)^(0+256),w
 16022  052C  0020               	movlb	0	; select bank0
 16023  052D  00E0               	movwf	___fladd@a+2
 16024  052E  0022               	movlb	2	; select bank2
 16025  052F  082D               	movf	(_logf$2043+1)^(0+256),w
 16026  0530  0020               	movlb	0	; select bank0
 16027  0531  00DF               	movwf	___fladd@a+1
 16028  0532  0022               	movlb	2	; select bank2
 16029  0533  082C               	movf	_logf$2043^(0+256),w
 16030  0534  0020               	movlb	0	; select bank0
 16031  0535  00DE               	movwf	___fladd@a
 16032  0536  3185  25F5  3180   	fcall	___fladd
 16033  0539  0020               	movlb	0	; select bank0
 16034  053A  085D               	movf	?___fladd+3,w
 16035  053B  0022               	movlb	2	; select bank2
 16036  053C  00B3               	movwf	(_logf$2044+3)^(0+256)
 16037  053D  0020               	movlb	0	; select bank0
 16038  053E  085C               	movf	?___fladd+2,w
 16039  053F  0022               	movlb	2	; select bank2
 16040  0540  00B2               	movwf	(_logf$2044+2)^(0+256)
 16041  0541  0020               	movlb	0	; select bank0
 16042  0542  085B               	movf	?___fladd+1,w
 16043  0543  0022               	movlb	2	; select bank2
 16044  0544  00B1               	movwf	(_logf$2044+1)^(0+256)
 16045  0545  0020               	movlb	0	; select bank0
 16046  0546  085A               	movf	?___fladd,w
 16047  0547  0022               	movlb	2	; select bank2
 16048  0548  00B0               	movwf	_logf$2044^(0+256)
 16049  0549  0841               	movf	(logf@hfsq+3)^(0+256),w
 16050  054A  0021               	movlb	1	; select bank1
 16051  054B  00A3               	movwf	(___flsub@a+3)^(0+128)
 16052  054C  0022               	movlb	2	; select bank2
 16053  054D  0840               	movf	(logf@hfsq+2)^(0+256),w
 16054  054E  0021               	movlb	1	; select bank1
 16055  054F  00A2               	movwf	(___flsub@a+2)^(0+128)
 16056  0550  0022               	movlb	2	; select bank2
 16057  0551  083F               	movf	(logf@hfsq+1)^(0+256),w
 16058  0552  0021               	movlb	1	; select bank1
 16059  0553  00A1               	movwf	(___flsub@a+1)^(0+128)
 16060  0554  0022               	movlb	2	; select bank2
 16061  0555  083E               	movf	logf@hfsq^(0+256),w
 16062  0556  0021               	movlb	1	; select bank1
 16063  0557  00A0               	movwf	___flsub@a^(0+128)
 16064  0558  0022               	movlb	2	; select bank2
 16065  0559  0833               	movf	(_logf$2044+3)^(0+256),w
 16066  055A  0021               	movlb	1	; select bank1
 16067  055B  00A7               	movwf	(___flsub@b+3)^(0+128)
 16068  055C  0022               	movlb	2	; select bank2
 16069  055D  0832               	movf	(_logf$2044+2)^(0+256),w
 16070  055E  0021               	movlb	1	; select bank1
 16071  055F  00A6               	movwf	(___flsub@b+2)^(0+128)
 16072  0560  0022               	movlb	2	; select bank2
 16073  0561  0831               	movf	(_logf$2044+1)^(0+256),w
 16074  0562  0021               	movlb	1	; select bank1
 16075  0563  00A5               	movwf	(___flsub@b+1)^(0+128)
 16076  0564  0022               	movlb	2	; select bank2
 16077  0565  0830               	movf	_logf$2044^(0+256),w
 16078  0566  0021               	movlb	1	; select bank1
 16079  0567  00A4               	movwf	___flsub@b^(0+128)
 16080  0568  31B6  2677  3180   	fcall	___flsub
 16081  056B  0021               	movlb	1	; select bank1
 16082  056C  0823               	movf	(?___flsub+3)^(0+128),w
 16083  056D  0022               	movlb	2	; select bank2
 16084  056E  00B7               	movwf	(_logf$2045+3)^(0+256)
 16085  056F  0021               	movlb	1	; select bank1
 16086  0570  0822               	movf	(?___flsub+2)^(0+128),w
 16087  0571  0022               	movlb	2	; select bank2
 16088  0572  00B6               	movwf	(_logf$2045+2)^(0+256)
 16089  0573  0021               	movlb	1	; select bank1
 16090  0574  0821               	movf	(?___flsub+1)^(0+128),w
 16091  0575  0022               	movlb	2	; select bank2
 16092  0576  00B5               	movwf	(_logf$2045+1)^(0+256)
 16093  0577  0021               	movlb	1	; select bank1
 16094  0578  0820               	movf	?___flsub^(0+128),w
 16095  0579  0022               	movlb	2	; select bank2
 16096  057A  00B4               	movwf	_logf$2045^(0+256)
 16097  057B  085D               	movf	(logf@f+3)^(0+256),w
 16098  057C  0020               	movlb	0	; select bank0
 16099  057D  00DD               	movwf	___fladd@b+3
 16100  057E  0022               	movlb	2	; select bank2
 16101  057F  085C               	movf	(logf@f+2)^(0+256),w
 16102  0580  0020               	movlb	0	; select bank0
 16103  0581  00DC               	movwf	___fladd@b+2
 16104  0582  0022               	movlb	2	; select bank2
 16105  0583  085B               	movf	(logf@f+1)^(0+256),w
 16106  0584  0020               	movlb	0	; select bank0
 16107  0585  00DB               	movwf	___fladd@b+1
 16108  0586  0022               	movlb	2	; select bank2
 16109  0587  085A               	movf	logf@f^(0+256),w
 16110  0588  0020               	movlb	0	; select bank0
 16111  0589  00DA               	movwf	___fladd@b
 16112  058A  0022               	movlb	2	; select bank2
 16113  058B  0837               	movf	(_logf$2045+3)^(0+256),w
 16114  058C  0020               	movlb	0	; select bank0
 16115  058D  00E1               	movwf	___fladd@a+3
 16116  058E  0022               	movlb	2	; select bank2
 16117  058F  0836               	movf	(_logf$2045+2)^(0+256),w
 16118  0590  0020               	movlb	0	; select bank0
 16119  0591  00E0               	movwf	___fladd@a+2
 16120  0592  0022               	movlb	2	; select bank2
 16121  0593  0835               	movf	(_logf$2045+1)^(0+256),w
 16122  0594  0020               	movlb	0	; select bank0
 16123  0595  00DF               	movwf	___fladd@a+1
 16124  0596  0022               	movlb	2	; select bank2
 16125  0597  0834               	movf	_logf$2045^(0+256),w
 16126  0598  0020               	movlb	0	; select bank0
 16127  0599  00DE               	movwf	___fladd@a
 16128  059A  3185  25F5  3180   	fcall	___fladd
 16129  059D  0020               	movlb	0	; select bank0
 16130  059E  085D               	movf	?___fladd+3,w
 16131  059F  0022               	movlb	2	; select bank2
 16132  05A0  00BB               	movwf	(_logf$2046+3)^(0+256)
 16133  05A1  0020               	movlb	0	; select bank0
 16134  05A2  085C               	movf	?___fladd+2,w
 16135  05A3  0022               	movlb	2	; select bank2
 16136  05A4  00BA               	movwf	(_logf$2046+2)^(0+256)
 16137  05A5  0020               	movlb	0	; select bank0
 16138  05A6  085B               	movf	?___fladd+1,w
 16139  05A7  0022               	movlb	2	; select bank2
 16140  05A8  00B9               	movwf	(_logf$2046+1)^(0+256)
 16141  05A9  0020               	movlb	0	; select bank0
 16142  05AA  085A               	movf	?___fladd,w
 16143  05AB  0022               	movlb	2	; select bank2
 16144  05AC  00B8               	movwf	_logf$2046^(0+256)
 16145  05AD  303F               	movlw	63
 16146  05AE  0020               	movlb	0	; select bank0
 16147  05AF  00A9               	movwf	___flmul@b+3
 16148  05B0  3031               	movlw	49
 16149  05B1  00A8               	movwf	___flmul@b+2
 16150  05B2  3071               	movlw	113
 16151  05B3  00A7               	movwf	___flmul@b+1
 16152  05B4  3080               	movlw	128
 16153  05B5  00A6               	movwf	___flmul@b
 16154  05B6  0022               	movlb	2	; select bank2
 16155  05B7  0845               	movf	(logf@dk+3)^(0+256),w
 16156  05B8  0020               	movlb	0	; select bank0
 16157  05B9  00AD               	movwf	___flmul@a+3
 16158  05BA  0022               	movlb	2	; select bank2
 16159  05BB  0844               	movf	(logf@dk+2)^(0+256),w
 16160  05BC  0020               	movlb	0	; select bank0
 16161  05BD  00AC               	movwf	___flmul@a+2
 16162  05BE  0022               	movlb	2	; select bank2
 16163  05BF  0843               	movf	(logf@dk+1)^(0+256),w
 16164  05C0  0020               	movlb	0	; select bank0
 16165  05C1  00AB               	movwf	___flmul@a+1
 16166  05C2  0022               	movlb	2	; select bank2
 16167  05C3  0842               	movf	logf@dk^(0+256),w
 16168  05C4  0020               	movlb	0	; select bank0
 16169  05C5  00AA               	movwf	___flmul@a
 16170  05C6  3190  2023  3180   	fcall	___flmul
 16171  05C9  0020               	movlb	0	; select bank0
 16172  05CA  0829               	movf	?___flmul+3,w
 16173  05CB  00DD               	movwf	___fladd@b+3
 16174  05CC  0828               	movf	?___flmul+2,w
 16175  05CD  00DC               	movwf	___fladd@b+2
 16176  05CE  0827               	movf	?___flmul+1,w
 16177  05CF  00DB               	movwf	___fladd@b+1
 16178  05D0  0826               	movf	?___flmul,w
 16179  05D1  00DA               	movwf	___fladd@b
 16180  05D2  0022               	movlb	2	; select bank2
 16181  05D3  083B               	movf	(_logf$2046+3)^(0+256),w
 16182  05D4  0020               	movlb	0	; select bank0
 16183  05D5  00E1               	movwf	___fladd@a+3
 16184  05D6  0022               	movlb	2	; select bank2
 16185  05D7  083A               	movf	(_logf$2046+2)^(0+256),w
 16186  05D8  0020               	movlb	0	; select bank0
 16187  05D9  00E0               	movwf	___fladd@a+2
 16188  05DA  0022               	movlb	2	; select bank2
 16189  05DB  0839               	movf	(_logf$2046+1)^(0+256),w
 16190  05DC  0020               	movlb	0	; select bank0
 16191  05DD  00DF               	movwf	___fladd@a+1
 16192  05DE  0022               	movlb	2	; select bank2
 16193  05DF  0838               	movf	_logf$2046^(0+256),w
 16194  05E0  0020               	movlb	0	; select bank0
 16195  05E1  00DE               	movwf	___fladd@a
 16196  05E2  3185  25F5         	fcall	___fladd
 16197  05E4  0020               	movlb	0	; select bank0
 16198  05E5  085D               	movf	?___fladd+3,w
 16199  05E6  0021               	movlb	1	; select bank1
 16200  05E7  00AB               	movwf	(?_logf+3)^(0+128)
 16201  05E8  0020               	movlb	0	; select bank0
 16202  05E9  085C               	movf	?___fladd+2,w
 16203  05EA  0021               	movlb	1	; select bank1
 16204  05EB  00AA               	movwf	(?_logf+2)^(0+128)
 16205  05EC  0020               	movlb	0	; select bank0
 16206  05ED  085B               	movf	?___fladd+1,w
 16207  05EE  0021               	movlb	1	; select bank1
 16208  05EF  00A9               	movwf	(?_logf+1)^(0+128)
 16209  05F0  0020               	movlb	0	; select bank0
 16210  05F1  085A               	movf	?___fladd,w
 16211  05F2  0021               	movlb	1	; select bank1
 16212  05F3  00A8               	movwf	?_logf^(0+128)
 16213  05F4  0008               	return
 16214  05F5                     __end_of_logf:	
 16215                           
 16216                           	psect	text51
 16217  3677                     __ptext51:	
 16218 ;; *************** function ___flsub *****************
 16219 ;; Defined at:
 16220 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 16221 ;; Parameters:    Size  Location     Type
 16222 ;;  a               4    0[BANK1 ] float 
 16223 ;;  b               4    4[BANK1 ] float 
 16224 ;; Auto vars:     Size  Location     Type
 16225 ;;		None
 16226 ;; Return value:  Size  Location     Type
 16227 ;;                  4    0[BANK1 ] float 
 16228 ;; Registers used:
 16229 ;;		wreg, status,2, status,0, pclath, cstack
 16230 ;; Tracked objects:
 16231 ;;		On entry : 0/0
 16232 ;;		On exit  : 0/0
 16233 ;;		Unchanged: 0/0
 16234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16235 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16238 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16239 ;;Total ram usage:        8 bytes
 16240 ;; Hardware stack levels used:    1
 16241 ;; Hardware stack levels required when called:    2
 16242 ;; This function calls:
 16243 ;;		___fladd
 16244 ;; This function is called by:
 16245 ;;		_updateTemperatures
 16246 ;;		_logf
 16247 ;; This function uses a non-reentrant model
 16248 ;;
 16249                           
 16250                           
 16251                           ;psect for function ___flsub
 16252  3677                     ___flsub:	
 16253                           
 16254                           ;incstack = 0
 16255                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 16256  3677  3080               	movlw	128
 16257  3678  0021               	movlb	1	; select bank1
 16258  3679  06A3               	xorwf	(___flsub@a+3)^(0+128),f
 16259  367A  0827               	movf	(___flsub@b+3)^(0+128),w
 16260  367B  0020               	movlb	0	; select bank0
 16261  367C  00DD               	movwf	___fladd@b+3
 16262  367D  0021               	movlb	1	; select bank1
 16263  367E  0826               	movf	(___flsub@b+2)^(0+128),w
 16264  367F  0020               	movlb	0	; select bank0
 16265  3680  00DC               	movwf	___fladd@b+2
 16266  3681  0021               	movlb	1	; select bank1
 16267  3682  0825               	movf	(___flsub@b+1)^(0+128),w
 16268  3683  0020               	movlb	0	; select bank0
 16269  3684  00DB               	movwf	___fladd@b+1
 16270  3685  0021               	movlb	1	; select bank1
 16271  3686  0824               	movf	___flsub@b^(0+128),w
 16272  3687  0020               	movlb	0	; select bank0
 16273  3688  00DA               	movwf	___fladd@b
 16274  3689  0021               	movlb	1	; select bank1
 16275  368A  0823               	movf	(___flsub@a+3)^(0+128),w
 16276  368B  0020               	movlb	0	; select bank0
 16277  368C  00E1               	movwf	___fladd@a+3
 16278  368D  0021               	movlb	1	; select bank1
 16279  368E  0822               	movf	(___flsub@a+2)^(0+128),w
 16280  368F  0020               	movlb	0	; select bank0
 16281  3690  00E0               	movwf	___fladd@a+2
 16282  3691  0021               	movlb	1	; select bank1
 16283  3692  0821               	movf	(___flsub@a+1)^(0+128),w
 16284  3693  0020               	movlb	0	; select bank0
 16285  3694  00DF               	movwf	___fladd@a+1
 16286  3695  0021               	movlb	1	; select bank1
 16287  3696  0820               	movf	___flsub@a^(0+128),w
 16288  3697  0020               	movlb	0	; select bank0
 16289  3698  00DE               	movwf	___fladd@a
 16290  3699  3185  25F5         	fcall	___fladd
 16291  369B  0020               	movlb	0	; select bank0
 16292  369C  085D               	movf	?___fladd+3,w
 16293  369D  0021               	movlb	1	; select bank1
 16294  369E  00A3               	movwf	(?___flsub+3)^(0+128)
 16295  369F  0020               	movlb	0	; select bank0
 16296  36A0  085C               	movf	?___fladd+2,w
 16297  36A1  0021               	movlb	1	; select bank1
 16298  36A2  00A2               	movwf	(?___flsub+2)^(0+128)
 16299  36A3  0020               	movlb	0	; select bank0
 16300  36A4  085B               	movf	?___fladd+1,w
 16301  36A5  0021               	movlb	1	; select bank1
 16302  36A6  00A1               	movwf	(?___flsub+1)^(0+128)
 16303  36A7  0020               	movlb	0	; select bank0
 16304  36A8  085A               	movf	?___fladd,w
 16305  36A9  0021               	movlb	1	; select bank1
 16306  36AA  00A0               	movwf	?___flsub^(0+128)
 16307  36AB  0008               	return
 16308  36AC                     __end_of___flsub:	
 16309                           
 16310                           	psect	text52
 16311  05F5                     __ptext52:	
 16312 ;; *************** function ___fladd *****************
 16313 ;; Defined at:
 16314 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 16315 ;; Parameters:    Size  Location     Type
 16316 ;;  b               4   58[BANK0 ] float 
 16317 ;;  a               4   62[BANK0 ] float 
 16318 ;; Auto vars:     Size  Location     Type
 16319 ;;  grs             1   77[BANK0 ] unsigned char 
 16320 ;;  bexp            1   76[BANK0 ] unsigned char 
 16321 ;;  aexp            1   75[BANK0 ] unsigned char 
 16322 ;;  signs           1   74[BANK0 ] unsigned char 
 16323 ;; Return value:  Size  Location     Type
 16324 ;;                  4   58[BANK0 ] unsigned char 
 16325 ;; Registers used:
 16326 ;;		wreg, status,2, status,0
 16327 ;; Tracked objects:
 16328 ;;		On entry : 0/0
 16329 ;;		On exit  : 0/0
 16330 ;;		Unchanged: 0/0
 16331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16332 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16333 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16334 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16335 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16336 ;;Total ram usage:       20 bytes
 16337 ;; Hardware stack levels used:    1
 16338 ;; Hardware stack levels required when called:    1
 16339 ;; This function calls:
 16340 ;;		Nothing
 16341 ;; This function is called by:
 16342 ;;		_updateVoltages
 16343 ;;		_updateTemperatures
 16344 ;;		___flsub
 16345 ;;		_logf
 16346 ;; This function uses a non-reentrant model
 16347 ;;
 16348                           
 16349                           
 16350                           ;psect for function ___fladd
 16351  05F5                     ___fladd:	
 16352                           
 16353                           ;incstack = 0
 16354                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 16355  05F5  0020               	movlb	0	; select bank0
 16356  05F6  085D               	movf	___fladd@b+3,w
 16357  05F7  3980               	andlw	128
 16358  05F8  00E2               	movwf	??___fladd
 16359  05F9  0862               	movf	??___fladd,w
 16360  05FA  00EA               	movwf	___fladd@signs
 16361  05FB  355D               	lslf	___fladd@b+3,w
 16362  05FC  00E2               	movwf	??___fladd
 16363  05FD  0862               	movf	??___fladd,w
 16364  05FE  00EC               	movwf	___fladd@bexp
 16365  05FF  1BDC               	btfsc	___fladd@b+2,7
 16366  0600  146C               	bsf	___fladd@bexp,0
 16367  0601  086C               	movf	___fladd@bexp,w
 16368  0602  1903               	btfsc	3,2
 16369  0603  2E12               	goto	l7196
 16370  0604  0A6C               	incf	___fladd@bexp,w
 16371  0605  1D03               	btfss	3,2
 16372  0606  2E0F               	goto	l7192
 16373  0607  3000               	movlw	0
 16374  0608  00DD               	movwf	___fladd@b+3
 16375  0609  3000               	movlw	0
 16376  060A  00DC               	movwf	___fladd@b+2
 16377  060B  3000               	movlw	0
 16378  060C  00DB               	movwf	___fladd@b+1
 16379  060D  3000               	movlw	0
 16380  060E  00DA               	movwf	___fladd@b
 16381  060F                     l7192:	
 16382  060F  17DC               	bsf	___fladd@b+2,7
 16383  0610  01DD               	clrf	___fladd@b+3
 16384  0611  2E1A               	goto	l7198
 16385  0612                     l7196:	
 16386  0612  3000               	movlw	0
 16387  0613  00DD               	movwf	___fladd@b+3
 16388  0614  3000               	movlw	0
 16389  0615  00DC               	movwf	___fladd@b+2
 16390  0616  3000               	movlw	0
 16391  0617  00DB               	movwf	___fladd@b+1
 16392  0618  3000               	movlw	0
 16393  0619  00DA               	movwf	___fladd@b
 16394  061A                     l7198:	
 16395  061A  0861               	movf	___fladd@a+3,w
 16396  061B  3980               	andlw	128
 16397  061C  00E2               	movwf	??___fladd
 16398  061D  0862               	movf	??___fladd,w
 16399  061E  00EB               	movwf	___fladd@aexp
 16400  061F  086B               	movf	___fladd@aexp,w
 16401  0620  066A               	xorwf	___fladd@signs,w
 16402  0621  1D03               	btfss	3,2
 16403  0622  176A               	bsf	___fladd@signs,6
 16404  0623  3561               	lslf	___fladd@a+3,w
 16405  0624  00E2               	movwf	??___fladd
 16406  0625  0862               	movf	??___fladd,w
 16407  0626  00EB               	movwf	___fladd@aexp
 16408  0627  1BE0               	btfsc	___fladd@a+2,7
 16409  0628  146B               	bsf	___fladd@aexp,0
 16410  0629  086B               	movf	___fladd@aexp,w
 16411  062A  1903               	btfsc	3,2
 16412  062B  2E3A               	goto	l7220
 16413  062C  0A6B               	incf	___fladd@aexp,w
 16414  062D  1D03               	btfss	3,2
 16415  062E  2E37               	goto	l7216
 16416  062F  3000               	movlw	0
 16417  0630  00E1               	movwf	___fladd@a+3
 16418  0631  3000               	movlw	0
 16419  0632  00E0               	movwf	___fladd@a+2
 16420  0633  3000               	movlw	0
 16421  0634  00DF               	movwf	___fladd@a+1
 16422  0635  3000               	movlw	0
 16423  0636  00DE               	movwf	___fladd@a
 16424  0637                     l7216:	
 16425  0637  17E0               	bsf	___fladd@a+2,7
 16426  0638  01E1               	clrf	___fladd@a+3
 16427  0639  2E42               	goto	l1148
 16428  063A                     l7220:	
 16429  063A  3000               	movlw	0
 16430  063B  00E1               	movwf	___fladd@a+3
 16431  063C  3000               	movlw	0
 16432  063D  00E0               	movwf	___fladd@a+2
 16433  063E  3000               	movlw	0
 16434  063F  00DF               	movwf	___fladd@a+1
 16435  0640  3000               	movlw	0
 16436  0641  00DE               	movwf	___fladd@a
 16437  0642                     l1148:	
 16438  0642  086C               	movf	___fladd@bexp,w
 16439  0643  026B               	subwf	___fladd@aexp,w
 16440  0644  1803               	skipnc
 16441  0645  2E88               	goto	l7256
 16442  0646  1F6A               	btfss	___fladd@signs,6
 16443  0647  2E4C               	goto	l7226
 16444  0648  3080               	movlw	128
 16445  0649  00E2               	movwf	??___fladd
 16446  064A  0862               	movf	??___fladd,w
 16447  064B  06EA               	xorwf	___fladd@signs,f
 16448  064C                     l7226:	
 16449  064C  086C               	movf	___fladd@bexp,w
 16450  064D  00E2               	movwf	??___fladd
 16451  064E  0862               	movf	??___fladd,w
 16452  064F  00ED               	movwf	___fladd@grs
 16453  0650  086B               	movf	___fladd@aexp,w
 16454  0651  00E2               	movwf	??___fladd
 16455  0652  0862               	movf	??___fladd,w
 16456  0653  00EC               	movwf	___fladd@bexp
 16457  0654  086D               	movf	___fladd@grs,w
 16458  0655  00E2               	movwf	??___fladd
 16459  0656  0862               	movf	??___fladd,w
 16460  0657  00EB               	movwf	___fladd@aexp
 16461  0658  085A               	movf	___fladd@b,w
 16462  0659  00E2               	movwf	??___fladd
 16463  065A  0862               	movf	??___fladd,w
 16464  065B  00ED               	movwf	___fladd@grs
 16465  065C  085E               	movf	___fladd@a,w
 16466  065D  00E2               	movwf	??___fladd
 16467  065E  0862               	movf	??___fladd,w
 16468  065F  00DA               	movwf	___fladd@b
 16469  0660  086D               	movf	___fladd@grs,w
 16470  0661  00E2               	movwf	??___fladd
 16471  0662  0862               	movf	??___fladd,w
 16472  0663  00DE               	movwf	___fladd@a
 16473  0664  085B               	movf	___fladd@b+1,w
 16474  0665  00E2               	movwf	??___fladd
 16475  0666  0862               	movf	??___fladd,w
 16476  0667  00ED               	movwf	___fladd@grs
 16477  0668  085F               	movf	___fladd@a+1,w
 16478  0669  00E2               	movwf	??___fladd
 16479  066A  0862               	movf	??___fladd,w
 16480  066B  00DB               	movwf	___fladd@b+1
 16481  066C  086D               	movf	___fladd@grs,w
 16482  066D  00E2               	movwf	??___fladd
 16483  066E  0862               	movf	??___fladd,w
 16484  066F  00DF               	movwf	___fladd@a+1
 16485  0670  085C               	movf	___fladd@b+2,w
 16486  0671  00E2               	movwf	??___fladd
 16487  0672  0862               	movf	??___fladd,w
 16488  0673  00ED               	movwf	___fladd@grs
 16489  0674  0860               	movf	___fladd@a+2,w
 16490  0675  00E2               	movwf	??___fladd
 16491  0676  0862               	movf	??___fladd,w
 16492  0677  00DC               	movwf	___fladd@b+2
 16493  0678  086D               	movf	___fladd@grs,w
 16494  0679  00E2               	movwf	??___fladd
 16495  067A  0862               	movf	??___fladd,w
 16496  067B  00E0               	movwf	___fladd@a+2
 16497  067C  085D               	movf	___fladd@b+3,w
 16498  067D  00E2               	movwf	??___fladd
 16499  067E  0862               	movf	??___fladd,w
 16500  067F  00ED               	movwf	___fladd@grs
 16501  0680  0861               	movf	___fladd@a+3,w
 16502  0681  00E2               	movwf	??___fladd
 16503  0682  0862               	movf	??___fladd,w
 16504  0683  00DD               	movwf	___fladd@b+3
 16505  0684  086D               	movf	___fladd@grs,w
 16506  0685  00E2               	movwf	??___fladd
 16507  0686  0862               	movf	??___fladd,w
 16508  0687  00E1               	movwf	___fladd@a+3
 16509  0688                     l7256:	
 16510  0688  01ED               	clrf	___fladd@grs
 16511  0689  086B               	movf	___fladd@aexp,w
 16512  068A  00E2               	movwf	??___fladd
 16513  068B  01E3               	clrf	??___fladd+1
 16514  068C  0863               	movf	??___fladd+1,w
 16515  068D  00E5               	movwf	??___fladd+3
 16516  068E  086C               	movf	___fladd@bexp,w
 16517  068F  0262               	subwf	??___fladd,w
 16518  0690  00E4               	movwf	??___fladd+2
 16519  0691  1C03               	skipc
 16520  0692  03E5               	decf	??___fladd+3,f
 16521  0693  0865               	movf	??___fladd+3,w
 16522  0694  3A80               	xorlw	128
 16523  0695  00E6               	movwf	??___fladd+4
 16524  0696  3080               	movlw	128
 16525  0697  0266               	subwf	??___fladd+4,w
 16526  0698  1D03               	skipz
 16527  0699  2E9C               	goto	u9545
 16528  069A  301A               	movlw	26
 16529  069B  0264               	subwf	??___fladd+2,w
 16530  069C                     u9545:	
 16531  069C  1C03               	skipc
 16532  069D  2ED0               	goto	l7274
 16533  069E  0020               	movlb	0	; select bank0
 16534  069F  085D               	movf	___fladd@b+3,w
 16535  06A0  045C               	iorwf	___fladd@b+2,w
 16536  06A1  045B               	iorwf	___fladd@b+1,w
 16537  06A2  045A               	iorwf	___fladd@b,w
 16538  06A3  1903               	btfsc	3,2
 16539  06A4  2EA7               	goto	u9550
 16540  06A5  3001               	movlw	1
 16541  06A6  2EA8               	goto	u9560
 16542  06A7                     u9550:	
 16543  06A7  3000               	movlw	0
 16544  06A8                     u9560:	
 16545  06A8  00E2               	movwf	??___fladd
 16546  06A9  0862               	movf	??___fladd,w
 16547  06AA  00ED               	movwf	___fladd@grs
 16548  06AB  3000               	movlw	0
 16549  06AC  00DD               	movwf	___fladd@b+3
 16550  06AD  3000               	movlw	0
 16551  06AE  00DC               	movwf	___fladd@b+2
 16552  06AF  3000               	movlw	0
 16553  06B0  00DB               	movwf	___fladd@b+1
 16554  06B1  3000               	movlw	0
 16555  06B2  00DA               	movwf	___fladd@b
 16556  06B3  086B               	movf	___fladd@aexp,w
 16557  06B4  00E2               	movwf	??___fladd
 16558  06B5  0862               	movf	??___fladd,w
 16559  06B6  00EC               	movwf	___fladd@bexp
 16560  06B7  2ED5               	goto	l1152
 16561  06B8                     l1154:	
 16562  06B8  1C6D               	btfss	___fladd@grs,0
 16563  06B9  2EC0               	goto	l7264
 16564  06BA  366D               	lsrf	___fladd@grs,w
 16565  06BB  3801               	iorlw	1
 16566  06BC  00E2               	movwf	??___fladd
 16567  06BD  0862               	movf	??___fladd,w
 16568  06BE  00ED               	movwf	___fladd@grs
 16569  06BF  2EC2               	goto	l7266
 16570  06C0                     l7264:	
 16571  06C0  1003               	clrc
 16572  06C1  0CED               	rrf	___fladd@grs,f
 16573  06C2                     l7266:	
 16574  06C2  185A               	btfsc	___fladd@b,0
 16575  06C3  17ED               	bsf	___fladd@grs,7
 16576  06C4  3001               	movlw	1
 16577  06C5  00E2               	movwf	??___fladd
 16578  06C6                     u9595:	
 16579  06C6  37DD               	asrf	___fladd@b+3,f
 16580  06C7  0CDC               	rrf	___fladd@b+2,f
 16581  06C8  0CDB               	rrf	___fladd@b+1,f
 16582  06C9  0CDA               	rrf	___fladd@b,f
 16583  06CA  0BE2               	decfsz	??___fladd& (0+127),f
 16584  06CB  2EC6               	goto	u9595
 16585  06CC  3001               	movlw	1
 16586  06CD  00E2               	movwf	??___fladd
 16587  06CE  0862               	movf	??___fladd,w
 16588  06CF  07EC               	addwf	___fladd@bexp,f
 16589  06D0                     l7274:	
 16590  06D0  0020               	movlb	0	; select bank0
 16591  06D1  086B               	movf	___fladd@aexp,w
 16592  06D2  026C               	subwf	___fladd@bexp,w
 16593  06D3  1C03               	skipc
 16594  06D4  2EB8               	goto	l1154
 16595  06D5                     l1152:	
 16596  06D5  1B6A               	btfsc	___fladd@signs,6
 16597  06D6  2F06               	goto	l7300
 16598  06D7  086C               	movf	___fladd@bexp,w
 16599  06D8  1D03               	btfss	3,2
 16600  06D9  2EE3               	goto	l7282
 16601  06DA  3000               	movlw	0
 16602  06DB  00DD               	movwf	?___fladd+3
 16603  06DC  3000               	movlw	0
 16604  06DD  00DC               	movwf	?___fladd+2
 16605  06DE  3000               	movlw	0
 16606  06DF  00DB               	movwf	?___fladd+1
 16607  06E0  3000               	movlw	0
 16608  06E1  00DA               	movwf	?___fladd
 16609  06E2  0008               	return
 16610  06E3                     l7282:	
 16611  06E3  085E               	movf	___fladd@a,w
 16612  06E4  07DA               	addwf	___fladd@b,f
 16613  06E5  085F               	movf	___fladd@a+1,w
 16614  06E6  3DDB               	addwfc	___fladd@b+1,f
 16615  06E7  0860               	movf	___fladd@a+2,w
 16616  06E8  3DDC               	addwfc	___fladd@b+2,f
 16617  06E9  0861               	movf	___fladd@a+3,w
 16618  06EA  3DDD               	addwfc	___fladd@b+3,f
 16619  06EB  1C5D               	btfss	___fladd@b+3,0
 16620  06EC  2F80               	goto	l7334
 16621  06ED  1C6D               	btfss	___fladd@grs,0
 16622  06EE  2EF5               	goto	l7290
 16623  06EF  366D               	lsrf	___fladd@grs,w
 16624  06F0  3801               	iorlw	1
 16625  06F1  00E2               	movwf	??___fladd
 16626  06F2  0862               	movf	??___fladd,w
 16627  06F3  00ED               	movwf	___fladd@grs
 16628  06F4  2EF7               	goto	l7292
 16629  06F5                     l7290:	
 16630  06F5  1003               	clrc
 16631  06F6  0CED               	rrf	___fladd@grs,f
 16632  06F7                     l7292:	
 16633  06F7  185A               	btfsc	___fladd@b,0
 16634  06F8  17ED               	bsf	___fladd@grs,7
 16635  06F9  3001               	movlw	1
 16636  06FA  00E2               	movwf	??___fladd
 16637  06FB                     u9665:	
 16638  06FB  37DD               	asrf	___fladd@b+3,f
 16639  06FC  0CDC               	rrf	___fladd@b+2,f
 16640  06FD  0CDB               	rrf	___fladd@b+1,f
 16641  06FE  0CDA               	rrf	___fladd@b,f
 16642  06FF  0BE2               	decfsz	??___fladd& (0+127),f
 16643  0700  2EFB               	goto	u9665
 16644  0701  3001               	movlw	1
 16645  0702  00E2               	movwf	??___fladd
 16646  0703  0862               	movf	??___fladd,w
 16647  0704  07EC               	addwf	___fladd@bexp,f
 16648  0705  2F80               	goto	l7334
 16649  0706                     l7300:	
 16650  0706  085D               	movf	___fladd@b+3,w
 16651  0707  3A80               	xorlw	128
 16652  0708  00E2               	movwf	??___fladd
 16653  0709  0861               	movf	___fladd@a+3,w
 16654  070A  3A80               	xorlw	128
 16655  070B  0262               	subwf	??___fladd,w
 16656  070C  1D03               	skipz
 16657  070D  2F18               	goto	u9673
 16658  070E  0860               	movf	___fladd@a+2,w
 16659  070F  025C               	subwf	___fladd@b+2,w
 16660  0710  1D03               	skipz
 16661  0711  2F18               	goto	u9673
 16662  0712  085F               	movf	___fladd@a+1,w
 16663  0713  025B               	subwf	___fladd@b+1,w
 16664  0714  1D03               	skipz
 16665  0715  2F18               	goto	u9673
 16666  0716  085E               	movf	___fladd@a,w
 16667  0717  025A               	subwf	___fladd@b,w
 16668  0718                     u9673:	
 16669  0718  1803               	skipnc
 16670  0719  2F50               	goto	l7310
 16671  071A  30FF               	movlw	255
 16672  071B  00E2               	movwf	??___fladd
 16673  071C  30FF               	movlw	255
 16674  071D  00E3               	movwf	??___fladd+1
 16675  071E  30FF               	movlw	255
 16676  071F  00E4               	movwf	??___fladd+2
 16677  0720  30FF               	movlw	255
 16678  0721  00E5               	movwf	??___fladd+3
 16679  0722  085A               	movf	___fladd@b,w
 16680  0723  025E               	subwf	___fladd@a,w
 16681  0724  00E6               	movwf	??___fladd+4
 16682  0725  085B               	movf	___fladd@b+1,w
 16683  0726  3B5F               	subwfb	___fladd@a+1,w
 16684  0727  00E7               	movwf	??___fladd+5
 16685  0728  085C               	movf	___fladd@b+2,w
 16686  0729  3B60               	subwfb	___fladd@a+2,w
 16687  072A  00E8               	movwf	??___fladd+6
 16688  072B  085D               	movf	___fladd@b+3,w
 16689  072C  3B61               	subwfb	___fladd@a+3,w
 16690  072D  00E9               	movwf	??___fladd+7
 16691  072E  0866               	movf	??___fladd+4,w
 16692  072F  07E2               	addwf	??___fladd,f
 16693  0730  0867               	movf	??___fladd+5,w
 16694  0731  3DE3               	addwfc	??___fladd+1,f
 16695  0732  0868               	movf	??___fladd+6,w
 16696  0733  3DE4               	addwfc	??___fladd+2,f
 16697  0734  0869               	movf	??___fladd+7,w
 16698  0735  3DE5               	addwfc	??___fladd+3,f
 16699  0736  0865               	movf	??___fladd+3,w
 16700  0737  00DD               	movwf	___fladd@b+3
 16701  0738  0864               	movf	??___fladd+2,w
 16702  0739  00DC               	movwf	___fladd@b+2
 16703  073A  0863               	movf	??___fladd+1,w
 16704  073B  00DB               	movwf	___fladd@b+1
 16705  073C  0862               	movf	??___fladd,w
 16706  073D  00DA               	movwf	___fladd@b
 16707  073E  3080               	movlw	128
 16708  073F  00E2               	movwf	??___fladd
 16709  0740  0862               	movf	??___fladd,w
 16710  0741  06EA               	xorwf	___fladd@signs,f
 16711  0742  09ED               	comf	___fladd@grs,f
 16712  0743  0AED               	incf	___fladd@grs,f
 16713  0744  086D               	movf	___fladd@grs,w
 16714  0745  1D03               	btfss	3,2
 16715  0746  2F58               	goto	l1169
 16716  0747  3001               	movlw	1
 16717  0748  07DA               	addwf	___fladd@b,f
 16718  0749  3000               	movlw	0
 16719  074A  3DDB               	addwfc	___fladd@b+1,f
 16720  074B  3000               	movlw	0
 16721  074C  3DDC               	addwfc	___fladd@b+2,f
 16722  074D  3000               	movlw	0
 16723  074E  3DDD               	addwfc	___fladd@b+3,f
 16724  074F  2F58               	goto	l1169
 16725  0750                     l7310:	
 16726  0750  085E               	movf	___fladd@a,w
 16727  0751  02DA               	subwf	___fladd@b,f
 16728  0752  085F               	movf	___fladd@a+1,w
 16729  0753  3BDB               	subwfb	___fladd@b+1,f
 16730  0754  0860               	movf	___fladd@a+2,w
 16731  0755  3BDC               	subwfb	___fladd@b+2,f
 16732  0756  0861               	movf	___fladd@a+3,w
 16733  0757  3BDD               	subwfb	___fladd@b+3,f
 16734  0758                     l1169:	
 16735  0758  085D               	movf	___fladd@b+3,w
 16736  0759  045C               	iorwf	___fladd@b+2,w
 16737  075A  045B               	iorwf	___fladd@b+1,w
 16738  075B  045A               	iorwf	___fladd@b,w
 16739  075C  1D03               	skipz
 16740  075D  2F7E               	goto	l7332
 16741  075E  086D               	movf	___fladd@grs,w
 16742  075F  1D03               	btfss	3,2
 16743  0760  2F7E               	goto	l7332
 16744  0761  3000               	movlw	0
 16745  0762  00DD               	movwf	?___fladd+3
 16746  0763  3000               	movlw	0
 16747  0764  00DC               	movwf	?___fladd+2
 16748  0765  3000               	movlw	0
 16749  0766  00DB               	movwf	?___fladd+1
 16750  0767  3000               	movlw	0
 16751  0768  00DA               	movwf	?___fladd
 16752  0769  0008               	return
 16753  076A                     l7318:	
 16754  076A  3001               	movlw	1
 16755  076B                     u9715:	
 16756  076B  35DA               	lslf	___fladd@b,f
 16757  076C  0DDB               	rlf	___fladd@b+1,f
 16758  076D  0DDC               	rlf	___fladd@b+2,f
 16759  076E  0DDD               	rlf	___fladd@b+3,f
 16760  076F  0B89               	decfsz	9,f
 16761  0770  2F6B               	goto	u9715
 16762  0771  1BED               	btfsc	___fladd@grs,7
 16763  0772  145A               	bsf	___fladd@b,0
 16764  0773  1C6D               	btfss	___fladd@grs,0
 16765  0774  2F77               	goto	l7326
 16766  0775  1403               	setc
 16767  0776  2F78               	goto	L4
 16768  0777                     l7326:	
 16769  0777  1003               	clrc
 16770  0778                     L4:	
 16771  0778  0DED               	rlf	___fladd@grs,f
 16772  0779  086C               	movf	___fladd@bexp,w
 16773  077A  1903               	btfsc	3,2
 16774  077B  2F7E               	goto	l7332
 16775  077C  3001               	movlw	1
 16776  077D  02EC               	subwf	___fladd@bexp,f
 16777  077E                     l7332:	
 16778  077E  1FDC               	btfss	___fladd@b+2,7
 16779  077F  2F6A               	goto	l7318
 16780  0780                     l7334:	
 16781  0780  01EB               	clrf	___fladd@aexp
 16782  0781  1FED               	btfss	___fladd@grs,7
 16783  0782  2F8B               	goto	l7344
 16784  0783  086D               	movf	___fladd@grs,w
 16785  0784  397F               	andlw	127
 16786  0785  1903               	btfsc	3,2
 16787  0786  185A               	btfsc	___fladd@b,0
 16788  0787  2F89               	goto	l7340
 16789  0788  2F8B               	goto	l7344
 16790  0789                     l7340:	
 16791  0789  01EB               	clrf	___fladd@aexp
 16792  078A  0AEB               	incf	___fladd@aexp,f
 16793  078B                     l7344:	
 16794  078B  086B               	movf	___fladd@aexp,w
 16795  078C  1903               	btfsc	3,2
 16796  078D  2FB7               	goto	l1182
 16797  078E  3001               	movlw	1
 16798  078F  07DA               	addwf	___fladd@b,f
 16799  0790  3000               	movlw	0
 16800  0791  3DDB               	addwfc	___fladd@b+1,f
 16801  0792  3000               	movlw	0
 16802  0793  3DDC               	addwfc	___fladd@b+2,f
 16803  0794  3000               	movlw	0
 16804  0795  3DDD               	addwfc	___fladd@b+3,f
 16805  0796  1C5D               	btfss	___fladd@b+3,0
 16806  0797  2FB7               	goto	l1182
 16807  0798  085A               	movf	___fladd@b,w
 16808  0799  00E2               	movwf	??___fladd
 16809  079A  085B               	movf	___fladd@b+1,w
 16810  079B  00E3               	movwf	??___fladd+1
 16811  079C  085C               	movf	___fladd@b+2,w
 16812  079D  00E4               	movwf	??___fladd+2
 16813  079E  085D               	movf	___fladd@b+3,w
 16814  079F  00E5               	movwf	??___fladd+3
 16815  07A0  3001               	movlw	1
 16816  07A1  00E6               	movwf	??___fladd+4
 16817  07A2                     u9815:	
 16818  07A2  37E5               	asrf	??___fladd+3,f
 16819  07A3  0CE4               	rrf	??___fladd+2,f
 16820  07A4  0CE3               	rrf	??___fladd+1,f
 16821  07A5  0CE2               	rrf	??___fladd,f
 16822  07A6  0BE6               	decfsz	??___fladd+4,f
 16823  07A7  2FA2               	goto	u9815
 16824  07A8  0865               	movf	??___fladd+3,w
 16825  07A9  00DD               	movwf	___fladd@b+3
 16826  07AA  0864               	movf	??___fladd+2,w
 16827  07AB  00DC               	movwf	___fladd@b+2
 16828  07AC  0863               	movf	??___fladd+1,w
 16829  07AD  00DB               	movwf	___fladd@b+1
 16830  07AE  0862               	movf	??___fladd,w
 16831  07AF  00DA               	movwf	___fladd@b
 16832  07B0  0A6C               	incf	___fladd@bexp,w
 16833  07B1  1903               	btfsc	3,2
 16834  07B2  2FB7               	goto	l1182
 16835  07B3  3001               	movlw	1
 16836  07B4  00E2               	movwf	??___fladd
 16837  07B5  0862               	movf	??___fladd,w
 16838  07B6  07EC               	addwf	___fladd@bexp,f
 16839  07B7                     l1182:	
 16840  07B7  0A6C               	incf	___fladd@bexp,w
 16841  07B8  1D03               	btfss	3,2
 16842  07B9  086C               	movf	___fladd@bexp,w
 16843  07BA  1D03               	btfss	3,2
 16844  07BB  2FC7               	goto	l7362
 16845  07BC  3000               	movlw	0
 16846  07BD  00DD               	movwf	___fladd@b+3
 16847  07BE  3000               	movlw	0
 16848  07BF  00DC               	movwf	___fladd@b+2
 16849  07C0  3000               	movlw	0
 16850  07C1  00DB               	movwf	___fladd@b+1
 16851  07C2  3000               	movlw	0
 16852  07C3  00DA               	movwf	___fladd@b
 16853  07C4  086C               	movf	___fladd@bexp,w
 16854  07C5  1903               	btfsc	3,2
 16855  07C6  01EA               	clrf	___fladd@signs
 16856  07C7                     l7362:	
 16857  07C7  1C6C               	btfss	___fladd@bexp,0
 16858  07C8  2FCB               	goto	l7366
 16859  07C9  17DC               	bsf	___fladd@b+2,7
 16860  07CA  2FCF               	goto	l1190
 16861  07CB                     l7366:	
 16862  07CB  307F               	movlw	127
 16863  07CC  00E2               	movwf	??___fladd
 16864  07CD  0862               	movf	??___fladd,w
 16865  07CE  05DC               	andwf	___fladd@b+2,f
 16866  07CF                     l1190:	
 16867  07CF  366C               	lsrf	___fladd@bexp,w
 16868  07D0  00E2               	movwf	??___fladd
 16869  07D1  0862               	movf	??___fladd,w
 16870  07D2  00DD               	movwf	___fladd@b+3
 16871  07D3  1FEA               	btfss	___fladd@signs,7
 16872  07D4  0008               	return
 16873  07D5  17DD               	bsf	___fladd@b+3,7
 16874  07D6  0008               	return
 16875  07D7                     __end_of___fladd:	
 16876                           
 16877                           	psect	text53
 16878  2E67                     __ptext53:	
 16879 ;; *************** function _updateCurrent *****************
 16880 ;; Defined at:
 16881 ;;		line 186 in file "BQ76920.c"
 16882 ;; Parameters:    Size  Location     Type
 16883 ;;		None
 16884 ;; Auto vars:     Size  Location     Type
 16885 ;;  adcVal          2   21[BANK1 ] int 
 16886 ;;  sys_stat        1    0        struct regSYS_STAT
 16887 ;; Return value:  Size  Location     Type
 16888 ;;                  1    wreg      void 
 16889 ;; Registers used:
 16890 ;;		wreg, status,2, status,0, pclath, cstack
 16891 ;; Tracked objects:
 16892 ;;		On entry : 0/0
 16893 ;;		On exit  : 0/0
 16894 ;;		Unchanged: 0/0
 16895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16897 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16898 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16899 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16900 ;;Total ram usage:        6 bytes
 16901 ;; Hardware stack levels used:    1
 16902 ;; Hardware stack levels required when called:    3
 16903 ;; This function calls:
 16904 ;;		_I2C_writeRegister
 16905 ;;		___fldiv
 16906 ;;		___flmul
 16907 ;;		___flneg
 16908 ;;		___fltol
 16909 ;;		___xxtofl
 16910 ;;		_readRegister
 16911 ;; This function is called by:
 16912 ;;		_AFE_UPDATE
 16913 ;; This function uses a non-reentrant model
 16914 ;;
 16915                           
 16916                           
 16917                           ;psect for function _updateCurrent
 16918  2E67                     _updateCurrent:	
 16919                           
 16920                           ;incstack = 0
 16921                           ; Regs used in _updateCurrent: [wreg+status,2+status,0+pclath+cstack]
 16922  2E67  3018               	movlw	24
 16923  2E68  00F5               	movwf	readRegister@slaveAddress
 16924  2E69  3000               	movlw	0
 16925  2E6A  00F6               	movwf	readRegister@slaveAddress+1
 16926  2E6B  3000               	movlw	0
 16927  2E6C  00F7               	movwf	readRegister@regAddress
 16928  2E6D  00F8               	movwf	readRegister@regAddress+1
 16929  2E6E  31B6  26AC  31AE   	fcall	_readRegister
 16930                           
 16931                           ;BQ76920.c: 193:     adcVal = (readRegister(0x18, 0x32) << 8)| readRegister(0x18, 0x33);
 16932  2E71  3018               	movlw	24
 16933  2E72  00F5               	movwf	readRegister@slaveAddress
 16934  2E73  3000               	movlw	0
 16935  2E74  00F6               	movwf	readRegister@slaveAddress+1
 16936  2E75  3032               	movlw	50
 16937  2E76  00F7               	movwf	readRegister@regAddress
 16938  2E77  3000               	movlw	0
 16939  2E78  00F8               	movwf	readRegister@regAddress+1
 16940  2E79  31B6  26AC  31AE   	fcall	_readRegister
 16941  2E7C  0875               	movf	?_readRegister,w
 16942  2E7D  0021               	movlb	1	; select bank1
 16943  2E7E  00B1               	movwf	??_updateCurrent^(0+128)
 16944  2E7F  0876               	movf	?_readRegister+1,w
 16945  2E80  00B2               	movwf	(??_updateCurrent^(0+128)+1)
 16946  2E81  0831               	movf	??_updateCurrent^(0+128),w
 16947  2E82  00B2               	movwf	(??_updateCurrent^(0+128)+1)
 16948  2E83  01B1               	clrf	??_updateCurrent^(0+128)
 16949  2E84  3018               	movlw	24
 16950  2E85  00F5               	movwf	readRegister@slaveAddress
 16951  2E86  3000               	movlw	0
 16952  2E87  00F6               	movwf	readRegister@slaveAddress+1
 16953  2E88  3033               	movlw	51
 16954  2E89  00F7               	movwf	readRegister@regAddress
 16955  2E8A  3000               	movlw	0
 16956  2E8B  00F8               	movwf	readRegister@regAddress+1
 16957  2E8C  31B6  26AC  31AE   	fcall	_readRegister
 16958  2E8F  0875               	movf	?_readRegister,w
 16959  2E90  0021               	movlb	1	; select bank1
 16960  2E91  0431               	iorwf	??_updateCurrent^(0+128),w
 16961  2E92  00B5               	movwf	updateCurrent@adcVal^(0+128)
 16962  2E93  0876               	movf	?_readRegister+1,w
 16963  2E94  0432               	iorwf	(??_updateCurrent+1)^(0+128),w
 16964  2E95  00B6               	movwf	(updateCurrent@adcVal+1)^(0+128)
 16965                           
 16966                           ;BQ76920.c: 194:     batCurrent = -(adcVal * 8.44 / 5.0);
 16967  2E96  0835               	movf	updateCurrent@adcVal^(0+128),w
 16968  2E97  00F1               	movwf	___xxtofl@val
 16969  2E98  0836               	movf	(updateCurrent@adcVal+1)^(0+128),w
 16970  2E99  00F2               	movwf	___xxtofl@val+1
 16971  2E9A  0D89               	rlf	9,f
 16972  2E9B  3B89               	subwfb	9,f
 16973  2E9C  0989               	comf	9,f
 16974  2E9D  00F3               	movwf	___xxtofl@val+2
 16975  2E9E  00F4               	movwf	___xxtofl@val+3
 16976  2E9F  3001               	movlw	1
 16977  2EA0  31AB  23D3  31AE   	fcall	___xxtofl
 16978  2EA3  0874               	movf	?___xxtofl+3,w
 16979  2EA4  0020               	movlb	0	; select bank0
 16980  2EA5  00AD               	movwf	___flmul@a+3
 16981  2EA6  0873               	movf	?___xxtofl+2,w
 16982  2EA7  00AC               	movwf	___flmul@a+2
 16983  2EA8  0872               	movf	?___xxtofl+1,w
 16984  2EA9  00AB               	movwf	___flmul@a+1
 16985  2EAA  0871               	movf	?___xxtofl,w
 16986  2EAB  00AA               	movwf	___flmul@a
 16987  2EAC  3041               	movlw	65
 16988  2EAD  00A9               	movwf	___flmul@b+3
 16989  2EAE  3007               	movlw	7
 16990  2EAF  00A8               	movwf	___flmul@b+2
 16991  2EB0  300A               	movlw	10
 16992  2EB1  00A7               	movwf	___flmul@b+1
 16993  2EB2  303D               	movlw	61
 16994  2EB3  00A6               	movwf	___flmul@b
 16995  2EB4  3190  2023  31AE   	fcall	___flmul
 16996  2EB7  0020               	movlb	0	; select bank0
 16997  2EB8  0829               	movf	?___flmul+3,w
 16998  2EB9  00C7               	movwf	___fldiv@b+3
 16999  2EBA  0828               	movf	?___flmul+2,w
 17000  2EBB  00C6               	movwf	___fldiv@b+2
 17001  2EBC  0827               	movf	?___flmul+1,w
 17002  2EBD  00C5               	movwf	___fldiv@b+1
 17003  2EBE  0826               	movf	?___flmul,w
 17004  2EBF  00C4               	movwf	___fldiv@b
 17005  2EC0  3040               	movlw	64
 17006  2EC1  00C3               	movwf	___fldiv@a+3
 17007  2EC2  30A0               	movlw	160
 17008  2EC3  00C2               	movwf	___fldiv@a+2
 17009  2EC4  3000               	movlw	0
 17010  2EC5  00C1               	movwf	___fldiv@a+1
 17011  2EC6  3000               	movlw	0
 17012  2EC7  00C0               	movwf	___fldiv@a
 17013  2EC8  319C  24E2  31AE   	fcall	___fldiv
 17014  2ECB  0020               	movlb	0	; select bank0
 17015  2ECC  0843               	movf	?___fldiv+3,w
 17016  2ECD  00DD               	movwf	___flneg@f1+3
 17017  2ECE  0842               	movf	?___fldiv+2,w
 17018  2ECF  00DC               	movwf	___flneg@f1+2
 17019  2ED0  0841               	movf	?___fldiv+1,w
 17020  2ED1  00DB               	movwf	___flneg@f1+1
 17021  2ED2  0840               	movf	?___fldiv,w
 17022  2ED3  00DA               	movwf	___flneg@f1
 17023  2ED4  31B3  23C0  31AE   	fcall	___flneg
 17024  2ED7  0020               	movlb	0	; select bank0
 17025  2ED8  085D               	movf	?___flneg+3,w
 17026  2ED9  0021               	movlb	1	; select bank1
 17027  2EDA  00AB               	movwf	(___fltol@f1+3)^(0+128)
 17028  2EDB  0020               	movlb	0	; select bank0
 17029  2EDC  085C               	movf	?___flneg+2,w
 17030  2EDD  0021               	movlb	1	; select bank1
 17031  2EDE  00AA               	movwf	(___fltol@f1+2)^(0+128)
 17032  2EDF  0020               	movlb	0	; select bank0
 17033  2EE0  085B               	movf	?___flneg+1,w
 17034  2EE1  0021               	movlb	1	; select bank1
 17035  2EE2  00A9               	movwf	(___fltol@f1+1)^(0+128)
 17036  2EE3  0020               	movlb	0	; select bank0
 17037  2EE4  085A               	movf	?___flneg,w
 17038  2EE5  0021               	movlb	1	; select bank1
 17039  2EE6  00A8               	movwf	___fltol@f1^(0+128)
 17040  2EE7  31A8  2095  31AE   	fcall	___fltol
 17041  2EEA  0021               	movlb	1	; select bank1
 17042  2EEB  082B               	movf	(?___fltol+3)^(0+128),w
 17043  2EEC  0023               	movlb	3	; select bank3
 17044  2EED  00BD               	movwf	(_batCurrent+3)^(0+384)
 17045  2EEE  0021               	movlb	1	; select bank1
 17046  2EEF  082A               	movf	(?___fltol+2)^(0+128),w
 17047  2EF0  0023               	movlb	3	; select bank3
 17048  2EF1  00BC               	movwf	(_batCurrent+2)^(0+384)
 17049  2EF2  0021               	movlb	1	; select bank1
 17050  2EF3  0829               	movf	(?___fltol+1)^(0+128),w
 17051  2EF4  0023               	movlb	3	; select bank3
 17052  2EF5  00BB               	movwf	(_batCurrent+1)^(0+384)
 17053  2EF6  0021               	movlb	1	; select bank1
 17054  2EF7  0828               	movf	?___fltol^(0+128),w
 17055  2EF8  0023               	movlb	3	; select bank3
 17056  2EF9  00BA               	movwf	_batCurrent^(0+384)
 17057                           
 17058                           ;BQ76920.c: 196:     if (batCurrent > -10 && batCurrent < 10)
 17059  2EFA  1FBD               	btfss	(_batCurrent+3)^(0+384),7
 17060  2EFB  2F06               	goto	l8186
 17061  2EFC  30F7               	movlw	247
 17062  2EFD  023A               	subwf	_batCurrent^(0+384),w
 17063  2EFE  30FF               	movlw	255
 17064  2EFF  3B3B               	subwfb	(_batCurrent+1)^(0+384),w
 17065  2F00  30FF               	movlw	255
 17066  2F01  3B3C               	subwfb	(_batCurrent+2)^(0+384),w
 17067  2F02  30FF               	movlw	255
 17068  2F03  3B3D               	subwfb	(_batCurrent+3)^(0+384),w
 17069  2F04  1C03               	btfss	3,0
 17070  2F05  2F1D               	goto	l8190
 17071  2F06                     l8186:	
 17072  2F06  1BBD               	btfsc	(_batCurrent+3)^(0+384),7
 17073  2F07  2F15               	goto	l8188
 17074  2F08  083D               	movf	(_batCurrent+3)^(0+384),w
 17075  2F09  1D03               	btfss	3,2
 17076  2F0A  2F1D               	goto	l8190
 17077  2F0B  083C               	movf	(_batCurrent+2)^(0+384),w
 17078  2F0C  1D03               	btfss	3,2
 17079  2F0D  2F1D               	goto	l8190
 17080  2F0E  083B               	movf	(_batCurrent+1)^(0+384),w
 17081  2F0F  1D03               	btfss	3,2
 17082  2F10  2F1D               	goto	l8190
 17083  2F11  300A               	movlw	10
 17084  2F12  023A               	subwf	_batCurrent^(0+384),w
 17085  2F13  1803               	btfsc	3,0
 17086  2F14  2F1D               	goto	l8190
 17087  2F15                     l8188:	
 17088                           
 17089                           ;BQ76920.c: 197:     {;BQ76920.c: 198:       batCurrent = 0;
 17090  2F15  3000               	movlw	0
 17091  2F16  00BD               	movwf	(_batCurrent+3)^(0+384)
 17092  2F17  3000               	movlw	0
 17093  2F18  00BC               	movwf	(_batCurrent+2)^(0+384)
 17094  2F19  3000               	movlw	0
 17095  2F1A  00BB               	movwf	(_batCurrent+1)^(0+384)
 17096  2F1B  3000               	movlw	0
 17097  2F1C  00BA               	movwf	_batCurrent^(0+384)
 17098  2F1D                     l8190:	
 17099                           
 17100                           ;BQ76920.c: 201:     I2C_writeRegister(0x18, 0x00, 0x80);
 17101  2F1D  3018               	movlw	24
 17102  2F1E  00F5               	movwf	I2C_writeRegister@slaveAddress
 17103  2F1F  3000               	movlw	0
 17104  2F20  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 17105  2F21  3000               	movlw	0
 17106  2F22  00F7               	movwf	I2C_writeRegister@regAddress
 17107  2F23  00F8               	movwf	I2C_writeRegister@regAddress+1
 17108  2F24  3080               	movlw	128
 17109  2F25  00F9               	movwf	I2C_writeRegister@data
 17110  2F26  3000               	movlw	0
 17111  2F27  00FA               	movwf	I2C_writeRegister@data+1
 17112  2F28  31B5  2531         	fcall	_I2C_writeRegister
 17113  2F2A  0008               	return
 17114  2F2B                     __end_of_updateCurrent:	
 17115                           
 17116                           	psect	text54
 17117  2BD3                     __ptext54:	
 17118 ;; *************** function ___xxtofl *****************
 17119 ;; Defined at:
 17120 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 17121 ;; Parameters:    Size  Location     Type
 17122 ;;  sign            1    wreg     unsigned char 
 17123 ;;  val             4    1[COMMON] long 
 17124 ;; Auto vars:     Size  Location     Type
 17125 ;;  sign            1    0[BANK0 ] unsigned char 
 17126 ;;  arg             4    2[BANK0 ] unsigned long 
 17127 ;;  exp             1    1[BANK0 ] unsigned char 
 17128 ;; Return value:  Size  Location     Type
 17129 ;;                  4    1[COMMON] unsigned char 
 17130 ;; Registers used:
 17131 ;;		wreg, status,2, status,0
 17132 ;; Tracked objects:
 17133 ;;		On entry : 0/0
 17134 ;;		On exit  : 0/0
 17135 ;;		Unchanged: 0/0
 17136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17137 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17138 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17139 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17140 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17141 ;;Total ram usage:       14 bytes
 17142 ;; Hardware stack levels used:    1
 17143 ;; Hardware stack levels required when called:    1
 17144 ;; This function calls:
 17145 ;;		Nothing
 17146 ;; This function is called by:
 17147 ;;		_setShortCircuitProtection
 17148 ;;		_setOverCurrentDischargeProtection
 17149 ;;		_updateCurrent
 17150 ;;		_updateVoltages
 17151 ;;		_updateTemperatures
 17152 ;;		_logf
 17153 ;;		_AFE_getSetShortCircuitCurrent
 17154 ;;		_AFE_getOverCurrentDischargeCurrent
 17155 ;; This function uses a non-reentrant model
 17156 ;;
 17157                           
 17158                           
 17159                           ;psect for function ___xxtofl
 17160  2BD3                     ___xxtofl:	
 17161                           
 17162                           ;incstack = 0
 17163                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 17164                           ;___xxtofl@sign stored from wreg
 17165  2BD3  0020               	movlb	0	; select bank0
 17166  2BD4  00A0               	movwf	___xxtofl@sign
 17167  2BD5  0820               	movf	___xxtofl@sign,w
 17168  2BD6  1D03               	btfss	3,2
 17169  2BD7  1FF4               	btfss	___xxtofl@val+3,7
 17170  2BD8  2BE9               	goto	l7710
 17171  2BD9  0971               	comf	___xxtofl@val,w
 17172  2BDA  00A2               	movwf	___xxtofl@arg
 17173  2BDB  0972               	comf	___xxtofl@val+1,w
 17174  2BDC  00A3               	movwf	___xxtofl@arg+1
 17175  2BDD  0973               	comf	___xxtofl@val+2,w
 17176  2BDE  00A4               	movwf	___xxtofl@arg+2
 17177  2BDF  0974               	comf	___xxtofl@val+3,w
 17178  2BE0  00A5               	movwf	___xxtofl@arg+3
 17179  2BE1  0AA2               	incf	___xxtofl@arg,f
 17180  2BE2  1903               	skipnz
 17181  2BE3  0AA3               	incf	___xxtofl@arg+1,f
 17182  2BE4  1903               	skipnz
 17183  2BE5  0AA4               	incf	___xxtofl@arg+2,f
 17184  2BE6  1903               	skipnz
 17185  2BE7  0AA5               	incf	___xxtofl@arg+3,f
 17186  2BE8  2BF1               	goto	l1282
 17187  2BE9                     l7710:	
 17188  2BE9  0874               	movf	___xxtofl@val+3,w
 17189  2BEA  00A5               	movwf	___xxtofl@arg+3
 17190  2BEB  0873               	movf	___xxtofl@val+2,w
 17191  2BEC  00A4               	movwf	___xxtofl@arg+2
 17192  2BED  0872               	movf	___xxtofl@val+1,w
 17193  2BEE  00A3               	movwf	___xxtofl@arg+1
 17194  2BEF  0871               	movf	___xxtofl@val,w
 17195  2BF0  00A2               	movwf	___xxtofl@arg
 17196  2BF1                     l1282:	
 17197  2BF1  0874               	movf	___xxtofl@val+3,w
 17198  2BF2  0473               	iorwf	___xxtofl@val+2,w
 17199  2BF3  0472               	iorwf	___xxtofl@val+1,w
 17200  2BF4  0471               	iorwf	___xxtofl@val,w
 17201  2BF5  1D03               	skipz
 17202  2BF6  2C00               	goto	l7716
 17203  2BF7  3000               	movlw	0
 17204  2BF8  00F4               	movwf	?___xxtofl+3
 17205  2BF9  3000               	movlw	0
 17206  2BFA  00F3               	movwf	?___xxtofl+2
 17207  2BFB  3000               	movlw	0
 17208  2BFC  00F2               	movwf	?___xxtofl+1
 17209  2BFD  3000               	movlw	0
 17210  2BFE  00F1               	movwf	?___xxtofl
 17211  2BFF  0008               	return
 17212  2C00                     l7716:	
 17213  2C00  3096               	movlw	150
 17214  2C01  00F5               	movwf	??___xxtofl
 17215  2C02  0875               	movf	??___xxtofl,w
 17216  2C03  00A1               	movwf	___xxtofl@exp
 17217  2C04                     l7720:	
 17218  2C04  30FE               	movlw	254
 17219  2C05  0525               	andwf	___xxtofl@arg+3,w
 17220  2C06  1903               	btfsc	3,2
 17221  2C07  2C27               	goto	l1288
 17222  2C08  3001               	movlw	1
 17223  2C09  00F5               	movwf	??___xxtofl
 17224  2C0A  0875               	movf	??___xxtofl,w
 17225  2C0B  07A1               	addwf	___xxtofl@exp,f
 17226  2C0C  3001               	movlw	1
 17227  2C0D                     u10565:	
 17228  2C0D  36A5               	lsrf	___xxtofl@arg+3,f
 17229  2C0E  0CA4               	rrf	___xxtofl@arg+2,f
 17230  2C0F  0CA3               	rrf	___xxtofl@arg+1,f
 17231  2C10  0CA2               	rrf	___xxtofl@arg,f
 17232  2C11  0B89               	decfsz	9,f
 17233  2C12  2C0D               	goto	u10565
 17234  2C13  2C04               	goto	l7720
 17235  2C14                     l7722:	
 17236  2C14  3001               	movlw	1
 17237  2C15  00F5               	movwf	??___xxtofl
 17238  2C16  0875               	movf	??___xxtofl,w
 17239  2C17  07A1               	addwf	___xxtofl@exp,f
 17240  2C18  3001               	movlw	1
 17241  2C19  07A2               	addwf	___xxtofl@arg,f
 17242  2C1A  3000               	movlw	0
 17243  2C1B  3DA3               	addwfc	___xxtofl@arg+1,f
 17244  2C1C  3000               	movlw	0
 17245  2C1D  3DA4               	addwfc	___xxtofl@arg+2,f
 17246  2C1E  3000               	movlw	0
 17247  2C1F  3DA5               	addwfc	___xxtofl@arg+3,f
 17248  2C20  3001               	movlw	1
 17249  2C21                     u10585:	
 17250  2C21  36A5               	lsrf	___xxtofl@arg+3,f
 17251  2C22  0CA4               	rrf	___xxtofl@arg+2,f
 17252  2C23  0CA3               	rrf	___xxtofl@arg+1,f
 17253  2C24  0CA2               	rrf	___xxtofl@arg,f
 17254  2C25  0B89               	decfsz	9,f
 17255  2C26  2C21               	goto	u10585
 17256  2C27                     l1288:	
 17257  2C27  30FF               	movlw	255
 17258  2C28  0525               	andwf	___xxtofl@arg+3,w
 17259  2C29  1903               	btfsc	3,2
 17260  2C2A  2C39               	goto	l7730
 17261  2C2B  2C14               	goto	l7722
 17262  2C2C                     l7732:	
 17263  2C2C  3002               	movlw	2
 17264  2C2D  0221               	subwf	___xxtofl@exp,w
 17265  2C2E  1C03               	btfss	3,0
 17266  2C2F  2C3B               	goto	l1295
 17267  2C30  3001               	movlw	1
 17268  2C31  02A1               	subwf	___xxtofl@exp,f
 17269  2C32  3001               	movlw	1
 17270  2C33                     u10605:	
 17271  2C33  35A2               	lslf	___xxtofl@arg,f
 17272  2C34  0DA3               	rlf	___xxtofl@arg+1,f
 17273  2C35  0DA4               	rlf	___xxtofl@arg+2,f
 17274  2C36  0DA5               	rlf	___xxtofl@arg+3,f
 17275  2C37  0B89               	decfsz	9,f
 17276  2C38  2C33               	goto	u10605
 17277  2C39                     l7730:	
 17278  2C39  1FA4               	btfss	___xxtofl@arg+2,7
 17279  2C3A  2C2C               	goto	l7732
 17280  2C3B                     l1295:	
 17281  2C3B  1821               	btfsc	___xxtofl@exp,0
 17282  2C3C  2C45               	goto	l1296
 17283  2C3D  30FF               	movlw	255
 17284  2C3E  05A2               	andwf	___xxtofl@arg,f
 17285  2C3F  30FF               	movlw	255
 17286  2C40  05A3               	andwf	___xxtofl@arg+1,f
 17287  2C41  307F               	movlw	127
 17288  2C42  05A4               	andwf	___xxtofl@arg+2,f
 17289  2C43  30FF               	movlw	255
 17290  2C44  05A5               	andwf	___xxtofl@arg+3,f
 17291  2C45                     l1296:	
 17292  2C45  1003               	clrc
 17293  2C46  0CA1               	rrf	___xxtofl@exp,f
 17294  2C47  0821               	movf	___xxtofl@exp,w
 17295  2C48  00F5               	movwf	??___xxtofl
 17296  2C49  01F6               	clrf	??___xxtofl+1
 17297  2C4A  01F7               	clrf	??___xxtofl+2
 17298  2C4B  01F8               	clrf	??___xxtofl+3
 17299  2C4C  3018               	movlw	24
 17300  2C4D                     u10645:	
 17301  2C4D  35F5               	lslf	??___xxtofl,f
 17302  2C4E  0DF6               	rlf	??___xxtofl+1,f
 17303  2C4F  0DF7               	rlf	??___xxtofl+2,f
 17304  2C50  0DF8               	rlf	??___xxtofl+3,f
 17305  2C51  0B89               	decfsz	9,f
 17306  2C52  2C4D               	goto	u10645
 17307  2C53  0875               	movf	??___xxtofl,w
 17308  2C54  04A2               	iorwf	___xxtofl@arg,f
 17309  2C55  0876               	movf	??___xxtofl+1,w
 17310  2C56  04A3               	iorwf	___xxtofl@arg+1,f
 17311  2C57  0877               	movf	??___xxtofl+2,w
 17312  2C58  04A4               	iorwf	___xxtofl@arg+2,f
 17313  2C59  0878               	movf	??___xxtofl+3,w
 17314  2C5A  04A5               	iorwf	___xxtofl@arg+3,f
 17315  2C5B  0820               	movf	___xxtofl@sign,w
 17316  2C5C  1D03               	btfss	3,2
 17317  2C5D  1FF4               	btfss	___xxtofl@val+3,7
 17318  2C5E  2C60               	goto	l7744
 17319  2C5F  17A5               	bsf	___xxtofl@arg+3,7
 17320  2C60                     l7744:	
 17321  2C60  0825               	movf	___xxtofl@arg+3,w
 17322  2C61  00F4               	movwf	?___xxtofl+3
 17323  2C62  0824               	movf	___xxtofl@arg+2,w
 17324  2C63  00F3               	movwf	?___xxtofl+2
 17325  2C64  0823               	movf	___xxtofl@arg+1,w
 17326  2C65  00F2               	movwf	?___xxtofl+1
 17327  2C66  0822               	movf	___xxtofl@arg,w
 17328  2C67  00F1               	movwf	?___xxtofl
 17329  2C68  0008               	return
 17330  2C69                     __end_of___xxtofl:	
 17331                           
 17332                           	psect	text55
 17333  2895                     __ptext55:	
 17334 ;; *************** function ___fltol *****************
 17335 ;; Defined at:
 17336 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 17337 ;; Parameters:    Size  Location     Type
 17338 ;;  f1              4    8[BANK1 ] unsigned char 
 17339 ;; Auto vars:     Size  Location     Type
 17340 ;;  exp1            1   11[COMMON] unsigned char 
 17341 ;;  sign1           1   10[COMMON] unsigned char 
 17342 ;; Return value:  Size  Location     Type
 17343 ;;                  4    8[BANK1 ] long 
 17344 ;; Registers used:
 17345 ;;		wreg, status,2, status,0
 17346 ;; Tracked objects:
 17347 ;;		On entry : 0/0
 17348 ;;		On exit  : 0/0
 17349 ;;		Unchanged: 0/0
 17350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17351 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17352 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17353 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17354 ;;      Totals:         2       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17355 ;;Total ram usage:       11 bytes
 17356 ;; Hardware stack levels used:    1
 17357 ;; Hardware stack levels required when called:    1
 17358 ;; This function calls:
 17359 ;;		Nothing
 17360 ;; This function is called by:
 17361 ;;		_updateCurrent
 17362 ;;		_updateVoltages
 17363 ;;		_updateTemperatures
 17364 ;;		_AFE_getSetShortCircuitCurrent
 17365 ;;		_AFE_getOverCurrentDischargeCurrent
 17366 ;; This function uses a non-reentrant model
 17367 ;;
 17368                           
 17369                           
 17370                           ;psect for function ___fltol
 17371  2895                     ___fltol:	
 17372                           
 17373                           ;incstack = 0
 17374                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 17375  2895  1003               	clrc
 17376  2896  0021               	movlb	1	; select bank1
 17377  2897  0D2A               	rlf	(___fltol@f1+2)^(0+128),w
 17378  2898  0D2B               	rlf	(___fltol@f1+3)^(0+128),w
 17379  2899  00AC               	movwf	??___fltol^(0+128)
 17380  289A  082C               	movf	??___fltol^(0+128),w
 17381  289B  00FB               	movwf	___fltol@exp1
 17382  289C  087B               	movf	___fltol@exp1,w
 17383  289D  1D03               	btfss	3,2
 17384  289E  28A8               	goto	l7954
 17385  289F                     l7950:	
 17386  289F  3000               	movlw	0
 17387  28A0  00AB               	movwf	(?___fltol+3)^(0+128)
 17388  28A1  3000               	movlw	0
 17389  28A2  00AA               	movwf	(?___fltol+2)^(0+128)
 17390  28A3  3000               	movlw	0
 17391  28A4  00A9               	movwf	(?___fltol+1)^(0+128)
 17392  28A5  3000               	movlw	0
 17393  28A6  00A8               	movwf	?___fltol^(0+128)
 17394  28A7  0008               	return
 17395  28A8                     l7954:	
 17396  28A8  0828               	movf	___fltol@f1^(0+128),w
 17397  28A9  00AC               	movwf	??___fltol^(0+128)
 17398  28AA  0829               	movf	(___fltol@f1+1)^(0+128),w
 17399  28AB  00AD               	movwf	(??___fltol^(0+128)+1)
 17400  28AC  082A               	movf	(___fltol@f1+2)^(0+128),w
 17401  28AD  00AE               	movwf	(??___fltol^(0+128)+2)
 17402  28AE  082B               	movf	(___fltol@f1+3)^(0+128),w
 17403  28AF  00AF               	movwf	(??___fltol^(0+128)+3)
 17404  28B0  301F               	movlw	31
 17405  28B1                     u10995:	
 17406  28B1  36AF               	lsrf	(??___fltol^(0+128)+3),f
 17407  28B2  0CAE               	rrf	(??___fltol^(0+128)+2),f
 17408  28B3  0CAD               	rrf	(??___fltol^(0+128)+1),f
 17409  28B4  0CAC               	rrf	??___fltol^(0+128),f
 17410  28B5  0B89               	decfsz	9,f
 17411  28B6  28B1               	goto	u10995
 17412  28B7  082C               	movf	??___fltol^(0+128),w
 17413  28B8  00B0               	movwf	(??___fltol+4)^(0+128)
 17414  28B9  0830               	movf	(??___fltol+4)^(0+128),w
 17415  28BA  00FA               	movwf	___fltol@sign1
 17416  28BB  17AA               	bsf	(___fltol@f1^(0+128)+2),7
 17417  28BC  30FF               	movlw	255
 17418  28BD  05A8               	andwf	___fltol@f1^(0+128),f
 17419  28BE  30FF               	movlw	255
 17420  28BF  05A9               	andwf	(___fltol@f1+1)^(0+128),f
 17421  28C0  30FF               	movlw	255
 17422  28C1  05AA               	andwf	(___fltol@f1+2)^(0+128),f
 17423  28C2  3000               	movlw	0
 17424  28C3  05AB               	andwf	(___fltol@f1+3)^(0+128),f
 17425  28C4  3096               	movlw	150
 17426  28C5  02FB               	subwf	___fltol@exp1,f
 17427  28C6  1FFB               	btfss	___fltol@exp1,7
 17428  28C7  28DB               	goto	l7972
 17429  28C8  087B               	movf	___fltol@exp1,w
 17430  28C9  3A80               	xorlw	128
 17431  28CA  3E97               	addlw	151
 17432  28CB  1C03               	btfss	3,0
 17433  28CC  289F               	goto	l7950
 17434  28CD                     l7970:	
 17435  28CD  3001               	movlw	1
 17436  28CE                     u11025:	
 17437  28CE  36AB               	lsrf	(___fltol@f1+3)^(0+128),f
 17438  28CF  0CAA               	rrf	(___fltol@f1+2)^(0+128),f
 17439  28D0  0CA9               	rrf	(___fltol@f1+1)^(0+128),f
 17440  28D1  0CA8               	rrf	___fltol@f1^(0+128),f
 17441  28D2  0B89               	decfsz	9,f
 17442  28D3  28CE               	goto	u11025
 17443  28D4  3001               	movlw	1
 17444  28D5  00AC               	movwf	??___fltol^(0+128)
 17445  28D6  082C               	movf	??___fltol^(0+128),w
 17446  28D7  07FB               	addwf	___fltol@exp1,f
 17447  28D8  1903               	btfsc	3,2
 17448  28D9  28EC               	goto	l7980
 17449  28DA  28CD               	goto	l7970
 17450  28DB                     l7972:	
 17451  28DB  3020               	movlw	32
 17452  28DC  027B               	subwf	___fltol@exp1,w
 17453  28DD  1803               	btfsc	3,0
 17454  28DE  289F               	goto	l7950
 17455  28DF                     l1048:	
 17456  28DF  087B               	movf	___fltol@exp1,w
 17457  28E0  1903               	btfsc	3,2
 17458  28E1  28EC               	goto	l7980
 17459  28E2  3001               	movlw	1
 17460  28E3                     u11055:	
 17461  28E3  35A8               	lslf	___fltol@f1^(0+128),f
 17462  28E4  0DA9               	rlf	(___fltol@f1+1)^(0+128),f
 17463  28E5  0DAA               	rlf	(___fltol@f1+2)^(0+128),f
 17464  28E6  0DAB               	rlf	(___fltol@f1+3)^(0+128),f
 17465  28E7  0B89               	decfsz	9,f
 17466  28E8  28E3               	goto	u11055
 17467  28E9  3001               	movlw	1
 17468  28EA  02FB               	subwf	___fltol@exp1,f
 17469  28EB  28DF               	goto	l1048
 17470  28EC                     l7980:	
 17471  28EC  087A               	movf	___fltol@sign1,w
 17472  28ED  1903               	btfsc	3,2
 17473  28EE  0008               	return
 17474  28EF  09A8               	comf	___fltol@f1^(0+128),f
 17475  28F0  09A9               	comf	(___fltol@f1+1)^(0+128),f
 17476  28F1  09AA               	comf	(___fltol@f1+2)^(0+128),f
 17477  28F2  09AB               	comf	(___fltol@f1+3)^(0+128),f
 17478  28F3  0AA8               	incf	___fltol@f1^(0+128),f
 17479  28F4  1903               	skipnz
 17480  28F5  0AA9               	incf	(___fltol@f1+1)^(0+128),f
 17481  28F6  1903               	skipnz
 17482  28F7  0AAA               	incf	(___fltol@f1+2)^(0+128),f
 17483  28F8  1903               	skipnz
 17484  28F9  0AAB               	incf	(___fltol@f1+3)^(0+128),f
 17485  28FA  0008               	return
 17486  28FB                     __end_of___fltol:	
 17487                           
 17488                           	psect	text56
 17489  33C0                     __ptext56:	
 17490 ;; *************** function ___flneg *****************
 17491 ;; Defined at:
 17492 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
 17493 ;; Parameters:    Size  Location     Type
 17494 ;;  f1              4   58[BANK0 ] long 
 17495 ;; Auto vars:     Size  Location     Type
 17496 ;;		None
 17497 ;; Return value:  Size  Location     Type
 17498 ;;                  4   58[BANK0 ] long 
 17499 ;; Registers used:
 17500 ;;		wreg
 17501 ;; Tracked objects:
 17502 ;;		On entry : 0/0
 17503 ;;		On exit  : 0/0
 17504 ;;		Unchanged: 0/0
 17505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17506 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17509 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17510 ;;Total ram usage:        4 bytes
 17511 ;; Hardware stack levels used:    1
 17512 ;; Hardware stack levels required when called:    1
 17513 ;; This function calls:
 17514 ;;		Nothing
 17515 ;; This function is called by:
 17516 ;;		_updateCurrent
 17517 ;; This function uses a non-reentrant model
 17518 ;;
 17519                           
 17520                           
 17521                           ;psect for function ___flneg
 17522  33C0                     ___flneg:	
 17523                           
 17524                           ;incstack = 0
 17525                           ; Regs used in ___flneg: [wreg]
 17526  33C0  0020               	movlb	0	; select bank0
 17527  33C1  085D               	movf	___flneg@f1+3,w
 17528  33C2  045C               	iorwf	___flneg@f1+2,w
 17529  33C3  045B               	iorwf	___flneg@f1+1,w
 17530  33C4  045A               	iorwf	___flneg@f1,w
 17531  33C5  1903               	skipnz
 17532  33C6  0008               	return
 17533  33C7  3080               	movlw	128
 17534  33C8  06DD               	xorwf	___flneg@f1+3,f
 17535  33C9  0008               	return
 17536  33CA                     __end_of___flneg:	
 17537                           
 17538                           	psect	text57
 17539  1023                     __ptext57:	
 17540 ;; *************** function ___flmul *****************
 17541 ;; Defined at:
 17542 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 17543 ;; Parameters:    Size  Location     Type
 17544 ;;  b               4    6[BANK0 ] long 
 17545 ;;  a               4   10[BANK0 ] long 
 17546 ;; Auto vars:     Size  Location     Type
 17547 ;;  prod            4   26[BANK0 ] struct .
 17548 ;;  grs             4   21[BANK0 ] unsigned long 
 17549 ;;  temp            2   30[BANK0 ] struct .
 17550 ;;  bexp            1   25[BANK0 ] unsigned char 
 17551 ;;  aexp            1   20[BANK0 ] unsigned char 
 17552 ;;  sign            1   19[BANK0 ] unsigned char 
 17553 ;; Return value:  Size  Location     Type
 17554 ;;                  4    6[BANK0 ] unsigned char 
 17555 ;; Registers used:
 17556 ;;		wreg, status,2, status,0, pclath, cstack
 17557 ;; Tracked objects:
 17558 ;;		On entry : 0/0
 17559 ;;		On exit  : 0/0
 17560 ;;		Unchanged: 0/0
 17561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17562 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17563 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17564 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17565 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17566 ;;Total ram usage:       26 bytes
 17567 ;; Hardware stack levels used:    1
 17568 ;; Hardware stack levels required when called:    2
 17569 ;; This function calls:
 17570 ;;		__Umul8_16
 17571 ;; This function is called by:
 17572 ;;		_setShortCircuitProtection
 17573 ;;		_setOverCurrentDischargeProtection
 17574 ;;		_updateCurrent
 17575 ;;		_updateVoltages
 17576 ;;		_updateTemperatures
 17577 ;;		_logf
 17578 ;; This function uses a non-reentrant model
 17579 ;;
 17580                           
 17581                           
 17582                           ;psect for function ___flmul
 17583  1023                     ___flmul:	
 17584                           
 17585                           ;incstack = 0
 17586                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 17587  1023  0020               	movlb	0	; select bank0
 17588  1024  0829               	movf	___flmul@b+3,w
 17589  1025  3980               	andlw	128
 17590  1026  00AE               	movwf	??___flmul
 17591  1027  082E               	movf	??___flmul,w
 17592  1028  00B3               	movwf	___flmul@sign
 17593  1029  3529               	lslf	___flmul@b+3,w
 17594  102A  00AE               	movwf	??___flmul
 17595  102B  082E               	movf	??___flmul,w
 17596  102C  00B9               	movwf	___flmul@bexp
 17597  102D  1BA8               	btfsc	___flmul@b+2,7
 17598  102E  1439               	bsf	___flmul@bexp,0
 17599  102F  0839               	movf	___flmul@bexp,w
 17600  1030  1903               	btfsc	3,2
 17601  1031  283F               	goto	l7580
 17602  1032  0A39               	incf	___flmul@bexp,w
 17603  1033  1D03               	btfss	3,2
 17604  1034  283D               	goto	l7578
 17605  1035  3000               	movlw	0
 17606  1036  00A9               	movwf	___flmul@b+3
 17607  1037  3000               	movlw	0
 17608  1038  00A8               	movwf	___flmul@b+2
 17609  1039  3000               	movlw	0
 17610  103A  00A7               	movwf	___flmul@b+1
 17611  103B  3000               	movlw	0
 17612  103C  00A6               	movwf	___flmul@b
 17613  103D                     l7578:	
 17614  103D  17A8               	bsf	___flmul@b+2,7
 17615  103E  2847               	goto	l7582
 17616  103F                     l7580:	
 17617  103F  3000               	movlw	0
 17618  1040  00A9               	movwf	___flmul@b+3
 17619  1041  3000               	movlw	0
 17620  1042  00A8               	movwf	___flmul@b+2
 17621  1043  3000               	movlw	0
 17622  1044  00A7               	movwf	___flmul@b+1
 17623  1045  3000               	movlw	0
 17624  1046  00A6               	movwf	___flmul@b
 17625  1047                     l7582:	
 17626  1047  082D               	movf	___flmul@a+3,w
 17627  1048  3980               	andlw	128
 17628  1049  00AE               	movwf	??___flmul
 17629  104A  082E               	movf	??___flmul,w
 17630  104B  06B3               	xorwf	___flmul@sign,f
 17631  104C  352D               	lslf	___flmul@a+3,w
 17632  104D  00AE               	movwf	??___flmul
 17633  104E  082E               	movf	??___flmul,w
 17634  104F  00B4               	movwf	___flmul@aexp
 17635  1050  1BAC               	btfsc	___flmul@a+2,7
 17636  1051  1434               	bsf	___flmul@aexp,0
 17637  1052  0834               	movf	___flmul@aexp,w
 17638  1053  1903               	btfsc	3,2
 17639  1054  2862               	goto	l7598
 17640  1055  0A34               	incf	___flmul@aexp,w
 17641  1056  1D03               	btfss	3,2
 17642  1057  2860               	goto	l7596
 17643  1058  3000               	movlw	0
 17644  1059  00AD               	movwf	___flmul@a+3
 17645  105A  3000               	movlw	0
 17646  105B  00AC               	movwf	___flmul@a+2
 17647  105C  3000               	movlw	0
 17648  105D  00AB               	movwf	___flmul@a+1
 17649  105E  3000               	movlw	0
 17650  105F  00AA               	movwf	___flmul@a
 17651  1060                     l7596:	
 17652  1060  17AC               	bsf	___flmul@a+2,7
 17653  1061  286A               	goto	l7600
 17654  1062                     l7598:	
 17655  1062  3000               	movlw	0
 17656  1063  00AD               	movwf	___flmul@a+3
 17657  1064  3000               	movlw	0
 17658  1065  00AC               	movwf	___flmul@a+2
 17659  1066  3000               	movlw	0
 17660  1067  00AB               	movwf	___flmul@a+1
 17661  1068  3000               	movlw	0
 17662  1069  00AA               	movwf	___flmul@a
 17663  106A                     l7600:	
 17664  106A  0834               	movf	___flmul@aexp,w
 17665  106B  1D03               	btfss	3,2
 17666  106C  0839               	movf	___flmul@bexp,w
 17667  106D  1D03               	btfss	3,2
 17668  106E  2878               	goto	l7608
 17669  106F  3000               	movlw	0
 17670  1070  00A9               	movwf	?___flmul+3
 17671  1071  3000               	movlw	0
 17672  1072  00A8               	movwf	?___flmul+2
 17673  1073  3000               	movlw	0
 17674  1074  00A7               	movwf	?___flmul+1
 17675  1075  3000               	movlw	0
 17676  1076  00A6               	movwf	?___flmul
 17677  1077  0008               	return
 17678  1078                     l7608:	
 17679  1078  0826               	movf	___flmul@b,w
 17680  1079  00AE               	movwf	??___flmul
 17681  107A  082E               	movf	??___flmul,w
 17682  107B  00F1               	movwf	__Umul8_16@multiplicand
 17683  107C  082C               	movf	___flmul@a+2,w
 17684  107D  31B5  254F  3190   	fcall	__Umul8_16
 17685  1080  0872               	movf	?__Umul8_16+1,w
 17686  1081  0020               	movlb	0	; select bank0
 17687  1082  00BF               	movwf	___flmul@temp+1
 17688  1083  0871               	movf	?__Umul8_16,w
 17689  1084  00BE               	movwf	___flmul@temp
 17690  1085  083E               	movf	___flmul@temp,w
 17691  1086  00AE               	movwf	??___flmul
 17692  1087  01AF               	clrf	??___flmul+1
 17693  1088  01B0               	clrf	??___flmul+2
 17694  1089  01B1               	clrf	??___flmul+3
 17695  108A  0831               	movf	??___flmul+3,w
 17696  108B  00B8               	movwf	___flmul@grs+3
 17697  108C  0830               	movf	??___flmul+2,w
 17698  108D  00B7               	movwf	___flmul@grs+2
 17699  108E  082F               	movf	??___flmul+1,w
 17700  108F  00B6               	movwf	___flmul@grs+1
 17701  1090  082E               	movf	??___flmul,w
 17702  1091  00B5               	movwf	___flmul@grs
 17703  1092  083F               	movf	___flmul@temp+1,w
 17704  1093  00AE               	movwf	??___flmul
 17705  1094  01AF               	clrf	??___flmul+1
 17706  1095  01B0               	clrf	??___flmul+2
 17707  1096  01B1               	clrf	??___flmul+3
 17708  1097  0831               	movf	??___flmul+3,w
 17709  1098  00BD               	movwf	___flmul@prod+3
 17710  1099  0830               	movf	??___flmul+2,w
 17711  109A  00BC               	movwf	___flmul@prod+2
 17712  109B  082F               	movf	??___flmul+1,w
 17713  109C  00BB               	movwf	___flmul@prod+1
 17714  109D  082E               	movf	??___flmul,w
 17715  109E  00BA               	movwf	___flmul@prod
 17716  109F  0827               	movf	___flmul@b+1,w
 17717  10A0  00AE               	movwf	??___flmul
 17718  10A1  082E               	movf	??___flmul,w
 17719  10A2  00F1               	movwf	__Umul8_16@multiplicand
 17720  10A3  082B               	movf	___flmul@a+1,w
 17721  10A4  31B5  254F  3190   	fcall	__Umul8_16
 17722  10A7  0872               	movf	?__Umul8_16+1,w
 17723  10A8  0020               	movlb	0	; select bank0
 17724  10A9  00BF               	movwf	___flmul@temp+1
 17725  10AA  0871               	movf	?__Umul8_16,w
 17726  10AB  00BE               	movwf	___flmul@temp
 17727  10AC  083E               	movf	___flmul@temp,w
 17728  10AD  00AE               	movwf	??___flmul
 17729  10AE  01AF               	clrf	??___flmul+1
 17730  10AF  01B0               	clrf	??___flmul+2
 17731  10B0  01B1               	clrf	??___flmul+3
 17732  10B1  082E               	movf	??___flmul,w
 17733  10B2  07B5               	addwf	___flmul@grs,f
 17734  10B3  082F               	movf	??___flmul+1,w
 17735  10B4  3DB6               	addwfc	___flmul@grs+1,f
 17736  10B5  0830               	movf	??___flmul+2,w
 17737  10B6  3DB7               	addwfc	___flmul@grs+2,f
 17738  10B7  0831               	movf	??___flmul+3,w
 17739  10B8  3DB8               	addwfc	___flmul@grs+3,f
 17740  10B9  083F               	movf	___flmul@temp+1,w
 17741  10BA  00AE               	movwf	??___flmul
 17742  10BB  01AF               	clrf	??___flmul+1
 17743  10BC  01B0               	clrf	??___flmul+2
 17744  10BD  01B1               	clrf	??___flmul+3
 17745  10BE  082E               	movf	??___flmul,w
 17746  10BF  07BA               	addwf	___flmul@prod,f
 17747  10C0  082F               	movf	??___flmul+1,w
 17748  10C1  3DBB               	addwfc	___flmul@prod+1,f
 17749  10C2  0830               	movf	??___flmul+2,w
 17750  10C3  3DBC               	addwfc	___flmul@prod+2,f
 17751  10C4  0831               	movf	??___flmul+3,w
 17752  10C5  3DBD               	addwfc	___flmul@prod+3,f
 17753  10C6  0828               	movf	___flmul@b+2,w
 17754  10C7  00AE               	movwf	??___flmul
 17755  10C8  082E               	movf	??___flmul,w
 17756  10C9  00F1               	movwf	__Umul8_16@multiplicand
 17757  10CA  082A               	movf	___flmul@a,w
 17758  10CB  31B5  254F  3190   	fcall	__Umul8_16
 17759  10CE  0872               	movf	?__Umul8_16+1,w
 17760  10CF  0020               	movlb	0	; select bank0
 17761  10D0  00BF               	movwf	___flmul@temp+1
 17762  10D1  0871               	movf	?__Umul8_16,w
 17763  10D2  00BE               	movwf	___flmul@temp
 17764  10D3  083E               	movf	___flmul@temp,w
 17765  10D4  00AE               	movwf	??___flmul
 17766  10D5  01AF               	clrf	??___flmul+1
 17767  10D6  01B0               	clrf	??___flmul+2
 17768  10D7  01B1               	clrf	??___flmul+3
 17769  10D8  082E               	movf	??___flmul,w
 17770  10D9  07B5               	addwf	___flmul@grs,f
 17771  10DA  082F               	movf	??___flmul+1,w
 17772  10DB  3DB6               	addwfc	___flmul@grs+1,f
 17773  10DC  0830               	movf	??___flmul+2,w
 17774  10DD  3DB7               	addwfc	___flmul@grs+2,f
 17775  10DE  0831               	movf	??___flmul+3,w
 17776  10DF  3DB8               	addwfc	___flmul@grs+3,f
 17777  10E0  083F               	movf	___flmul@temp+1,w
 17778  10E1  00AE               	movwf	??___flmul
 17779  10E2  01AF               	clrf	??___flmul+1
 17780  10E3  01B0               	clrf	??___flmul+2
 17781  10E4  01B1               	clrf	??___flmul+3
 17782  10E5  082E               	movf	??___flmul,w
 17783  10E6  07BA               	addwf	___flmul@prod,f
 17784  10E7  082F               	movf	??___flmul+1,w
 17785  10E8  3DBB               	addwfc	___flmul@prod+1,f
 17786  10E9  0830               	movf	??___flmul+2,w
 17787  10EA  3DBC               	addwfc	___flmul@prod+2,f
 17788  10EB  0831               	movf	??___flmul+3,w
 17789  10EC  3DBD               	addwfc	___flmul@prod+3,f
 17790  10ED  3008               	movlw	8
 17791  10EE                     u10355:	
 17792  10EE  35B5               	lslf	___flmul@grs,f
 17793  10EF  0DB6               	rlf	___flmul@grs+1,f
 17794  10F0  0DB7               	rlf	___flmul@grs+2,f
 17795  10F1  0DB8               	rlf	___flmul@grs+3,f
 17796  10F2  0B89               	decfsz	9,f
 17797  10F3  28EE               	goto	u10355
 17798  10F4  0827               	movf	___flmul@b+1,w
 17799  10F5  00AE               	movwf	??___flmul
 17800  10F6  082E               	movf	??___flmul,w
 17801  10F7  00F1               	movwf	__Umul8_16@multiplicand
 17802  10F8  082A               	movf	___flmul@a,w
 17803  10F9  31B5  254F  3190   	fcall	__Umul8_16
 17804  10FC  0872               	movf	?__Umul8_16+1,w
 17805  10FD  0020               	movlb	0	; select bank0
 17806  10FE  00BF               	movwf	___flmul@temp+1
 17807  10FF  0871               	movf	?__Umul8_16,w
 17808  1100  00BE               	movwf	___flmul@temp
 17809  1101  083E               	movf	___flmul@temp,w
 17810  1102  07B5               	addwf	___flmul@grs,f
 17811  1103  083F               	movf	___flmul@temp+1,w
 17812  1104  3DB6               	addwfc	___flmul@grs+1,f
 17813  1105  3000               	movlw	0
 17814  1106  3DB7               	addwfc	___flmul@grs+2,f
 17815  1107  3DB8               	addwfc	___flmul@grs+3,f
 17816  1108  0826               	movf	___flmul@b,w
 17817  1109  00AE               	movwf	??___flmul
 17818  110A  082E               	movf	??___flmul,w
 17819  110B  00F1               	movwf	__Umul8_16@multiplicand
 17820  110C  082B               	movf	___flmul@a+1,w
 17821  110D  31B5  254F  3190   	fcall	__Umul8_16
 17822  1110  0872               	movf	?__Umul8_16+1,w
 17823  1111  0020               	movlb	0	; select bank0
 17824  1112  00BF               	movwf	___flmul@temp+1
 17825  1113  0871               	movf	?__Umul8_16,w
 17826  1114  00BE               	movwf	___flmul@temp
 17827  1115  083E               	movf	___flmul@temp,w
 17828  1116  07B5               	addwf	___flmul@grs,f
 17829  1117  083F               	movf	___flmul@temp+1,w
 17830  1118  3DB6               	addwfc	___flmul@grs+1,f
 17831  1119  3000               	movlw	0
 17832  111A  3DB7               	addwfc	___flmul@grs+2,f
 17833  111B  3DB8               	addwfc	___flmul@grs+3,f
 17834  111C  3008               	movlw	8
 17835  111D                     u10365:	
 17836  111D  35B5               	lslf	___flmul@grs,f
 17837  111E  0DB6               	rlf	___flmul@grs+1,f
 17838  111F  0DB7               	rlf	___flmul@grs+2,f
 17839  1120  0DB8               	rlf	___flmul@grs+3,f
 17840  1121  0B89               	decfsz	9,f
 17841  1122  291D               	goto	u10365
 17842  1123  0826               	movf	___flmul@b,w
 17843  1124  00AE               	movwf	??___flmul
 17844  1125  082E               	movf	??___flmul,w
 17845  1126  00F1               	movwf	__Umul8_16@multiplicand
 17846  1127  082A               	movf	___flmul@a,w
 17847  1128  31B5  254F  3190   	fcall	__Umul8_16
 17848  112B  0872               	movf	?__Umul8_16+1,w
 17849  112C  0020               	movlb	0	; select bank0
 17850  112D  00BF               	movwf	___flmul@temp+1
 17851  112E  0871               	movf	?__Umul8_16,w
 17852  112F  00BE               	movwf	___flmul@temp
 17853  1130  083E               	movf	___flmul@temp,w
 17854  1131  07B5               	addwf	___flmul@grs,f
 17855  1132  083F               	movf	___flmul@temp+1,w
 17856  1133  3DB6               	addwfc	___flmul@grs+1,f
 17857  1134  3000               	movlw	0
 17858  1135  3DB7               	addwfc	___flmul@grs+2,f
 17859  1136  3DB8               	addwfc	___flmul@grs+3,f
 17860  1137  0827               	movf	___flmul@b+1,w
 17861  1138  00AE               	movwf	??___flmul
 17862  1139  082E               	movf	??___flmul,w
 17863  113A  00F1               	movwf	__Umul8_16@multiplicand
 17864  113B  082C               	movf	___flmul@a+2,w
 17865  113C  31B5  254F  3190   	fcall	__Umul8_16
 17866  113F  0872               	movf	?__Umul8_16+1,w
 17867  1140  0020               	movlb	0	; select bank0
 17868  1141  00BF               	movwf	___flmul@temp+1
 17869  1142  0871               	movf	?__Umul8_16,w
 17870  1143  00BE               	movwf	___flmul@temp
 17871  1144  083E               	movf	___flmul@temp,w
 17872  1145  07BA               	addwf	___flmul@prod,f
 17873  1146  083F               	movf	___flmul@temp+1,w
 17874  1147  3DBB               	addwfc	___flmul@prod+1,f
 17875  1148  3000               	movlw	0
 17876  1149  3DBC               	addwfc	___flmul@prod+2,f
 17877  114A  3DBD               	addwfc	___flmul@prod+3,f
 17878  114B  0828               	movf	___flmul@b+2,w
 17879  114C  00AE               	movwf	??___flmul
 17880  114D  082E               	movf	??___flmul,w
 17881  114E  00F1               	movwf	__Umul8_16@multiplicand
 17882  114F  082B               	movf	___flmul@a+1,w
 17883  1150  31B5  254F  3190   	fcall	__Umul8_16
 17884  1153  0872               	movf	?__Umul8_16+1,w
 17885  1154  0020               	movlb	0	; select bank0
 17886  1155  00BF               	movwf	___flmul@temp+1
 17887  1156  0871               	movf	?__Umul8_16,w
 17888  1157  00BE               	movwf	___flmul@temp
 17889  1158  083E               	movf	___flmul@temp,w
 17890  1159  07BA               	addwf	___flmul@prod,f
 17891  115A  083F               	movf	___flmul@temp+1,w
 17892  115B  3DBB               	addwfc	___flmul@prod+1,f
 17893  115C  3000               	movlw	0
 17894  115D  3DBC               	addwfc	___flmul@prod+2,f
 17895  115E  3DBD               	addwfc	___flmul@prod+3,f
 17896  115F  0828               	movf	___flmul@b+2,w
 17897  1160  00AE               	movwf	??___flmul
 17898  1161  082E               	movf	??___flmul,w
 17899  1162  00F1               	movwf	__Umul8_16@multiplicand
 17900  1163  082C               	movf	___flmul@a+2,w
 17901  1164  31B5  254F  3190   	fcall	__Umul8_16
 17902  1167  0872               	movf	?__Umul8_16+1,w
 17903  1168  0020               	movlb	0	; select bank0
 17904  1169  00BF               	movwf	___flmul@temp+1
 17905  116A  0871               	movf	?__Umul8_16,w
 17906  116B  00BE               	movwf	___flmul@temp
 17907  116C  083E               	movf	___flmul@temp,w
 17908  116D  00AE               	movwf	??___flmul
 17909  116E  083F               	movf	___flmul@temp+1,w
 17910  116F  00AF               	movwf	??___flmul+1
 17911  1170  01B0               	clrf	??___flmul+2
 17912  1171  01B1               	clrf	??___flmul+3
 17913  1172  3008               	movlw	8
 17914  1173                     u10375:	
 17915  1173  35AE               	lslf	??___flmul,f
 17916  1174  0DAF               	rlf	??___flmul+1,f
 17917  1175  0DB0               	rlf	??___flmul+2,f
 17918  1176  0DB1               	rlf	??___flmul+3,f
 17919  1177  0B89               	decfsz	9,f
 17920  1178  2973               	goto	u10375
 17921  1179  082E               	movf	??___flmul,w
 17922  117A  07BA               	addwf	___flmul@prod,f
 17923  117B  082F               	movf	??___flmul+1,w
 17924  117C  3DBB               	addwfc	___flmul@prod+1,f
 17925  117D  0830               	movf	??___flmul+2,w
 17926  117E  3DBC               	addwfc	___flmul@prod+2,f
 17927  117F  0831               	movf	??___flmul+3,w
 17928  1180  3DBD               	addwfc	___flmul@prod+3,f
 17929  1181  0835               	movf	___flmul@grs,w
 17930  1182  00AE               	movwf	??___flmul
 17931  1183  0836               	movf	___flmul@grs+1,w
 17932  1184  00AF               	movwf	??___flmul+1
 17933  1185  0837               	movf	___flmul@grs+2,w
 17934  1186  00B0               	movwf	??___flmul+2
 17935  1187  0838               	movf	___flmul@grs+3,w
 17936  1188  00B1               	movwf	??___flmul+3
 17937  1189  3018               	movlw	24
 17938  118A                     u10385:	
 17939  118A  36B1               	lsrf	??___flmul+3,f
 17940  118B  0CB0               	rrf	??___flmul+2,f
 17941  118C  0CAF               	rrf	??___flmul+1,f
 17942  118D  0CAE               	rrf	??___flmul,f
 17943  118E  0B89               	decfsz	9,f
 17944  118F  298A               	goto	u10385
 17945  1190  082E               	movf	??___flmul,w
 17946  1191  07BA               	addwf	___flmul@prod,f
 17947  1192  082F               	movf	??___flmul+1,w
 17948  1193  3DBB               	addwfc	___flmul@prod+1,f
 17949  1194  0830               	movf	??___flmul+2,w
 17950  1195  3DBC               	addwfc	___flmul@prod+2,f
 17951  1196  0831               	movf	??___flmul+3,w
 17952  1197  3DBD               	addwfc	___flmul@prod+3,f
 17953  1198  3008               	movlw	8
 17954  1199                     u10395:	
 17955  1199  35B5               	lslf	___flmul@grs,f
 17956  119A  0DB6               	rlf	___flmul@grs+1,f
 17957  119B  0DB7               	rlf	___flmul@grs+2,f
 17958  119C  0DB8               	rlf	___flmul@grs+3,f
 17959  119D  0B89               	decfsz	9,f
 17960  119E  2999               	goto	u10395
 17961  119F  0839               	movf	___flmul@bexp,w
 17962  11A0  0734               	addwf	___flmul@aexp,w
 17963  11A1  00AE               	movwf	??___flmul
 17964  11A2  01AF               	clrf	??___flmul+1
 17965  11A3  0DAF               	rlf	??___flmul+1,f
 17966  11A4  082E               	movf	??___flmul,w
 17967  11A5  3E82               	addlw	130
 17968  11A6  00BE               	movwf	___flmul@temp
 17969  11A7  30FF               	movlw	255
 17970  11A8  3D2F               	addwfc	??___flmul+1,w
 17971  11A9  00BF               	movwf	___flmul@temp+1
 17972  11AA                     l7660:	
 17973  11AA  1BBC               	btfsc	___flmul@prod+2,7
 17974  11AB  29C1               	goto	l7662
 17975  11AC  3001               	movlw	1
 17976  11AD                     u10405:	
 17977  11AD  35BA               	lslf	___flmul@prod,f
 17978  11AE  0DBB               	rlf	___flmul@prod+1,f
 17979  11AF  0DBC               	rlf	___flmul@prod+2,f
 17980  11B0  0DBD               	rlf	___flmul@prod+3,f
 17981  11B1  0B89               	decfsz	9,f
 17982  11B2  29AD               	goto	u10405
 17983  11B3  1BB8               	btfsc	___flmul@grs+3,7
 17984  11B4  143A               	bsf	___flmul@prod,0
 17985  11B5  3001               	movlw	1
 17986  11B6                     u10425:	
 17987  11B6  35B5               	lslf	___flmul@grs,f
 17988  11B7  0DB6               	rlf	___flmul@grs+1,f
 17989  11B8  0DB7               	rlf	___flmul@grs+2,f
 17990  11B9  0DB8               	rlf	___flmul@grs+3,f
 17991  11BA  0B89               	decfsz	9,f
 17992  11BB  29B6               	goto	u10425
 17993  11BC  30FF               	movlw	255
 17994  11BD  07BE               	addwf	___flmul@temp,f
 17995  11BE  30FF               	movlw	255
 17996  11BF  3DBF               	addwfc	___flmul@temp+1,f
 17997  11C0  29AA               	goto	l7660
 17998  11C1                     l7662:	
 17999  11C1  01B4               	clrf	___flmul@aexp
 18000  11C2  1FB8               	btfss	___flmul@grs+3,7
 18001  11C3  29DA               	goto	l7672
 18002  11C4  30FF               	movlw	255
 18003  11C5  0535               	andwf	___flmul@grs,w
 18004  11C6  00AE               	movwf	??___flmul
 18005  11C7  30FF               	movlw	255
 18006  11C8  0536               	andwf	___flmul@grs+1,w
 18007  11C9  00AF               	movwf	??___flmul+1
 18008  11CA  30FF               	movlw	255
 18009  11CB  0537               	andwf	___flmul@grs+2,w
 18010  11CC  00B0               	movwf	??___flmul+2
 18011  11CD  307F               	movlw	127
 18012  11CE  0538               	andwf	___flmul@grs+3,w
 18013  11CF  00B1               	movwf	??___flmul+3
 18014  11D0  0831               	movf	??___flmul+3,w
 18015  11D1  0430               	iorwf	??___flmul+2,w
 18016  11D2  042F               	iorwf	??___flmul+1,w
 18017  11D3  042E               	iorwf	??___flmul,w
 18018  11D4  1903               	skipnz
 18019  11D5  183A               	btfsc	___flmul@prod,0
 18020  11D6  29D8               	goto	l7668
 18021  11D7  29DA               	goto	l7672
 18022  11D8                     l7668:	
 18023  11D8  01B4               	clrf	___flmul@aexp
 18024  11D9  0AB4               	incf	___flmul@aexp,f
 18025  11DA                     l7672:	
 18026  11DA  0834               	movf	___flmul@aexp,w
 18027  11DB  1903               	btfsc	3,2
 18028  11DC  2A03               	goto	l7682
 18029  11DD  3001               	movlw	1
 18030  11DE  07BA               	addwf	___flmul@prod,f
 18031  11DF  3000               	movlw	0
 18032  11E0  3DBB               	addwfc	___flmul@prod+1,f
 18033  11E1  3000               	movlw	0
 18034  11E2  3DBC               	addwfc	___flmul@prod+2,f
 18035  11E3  3000               	movlw	0
 18036  11E4  3DBD               	addwfc	___flmul@prod+3,f
 18037  11E5  1C3D               	btfss	___flmul@prod+3,0
 18038  11E6  2A03               	goto	l7682
 18039  11E7  083A               	movf	___flmul@prod,w
 18040  11E8  00AE               	movwf	??___flmul
 18041  11E9  083B               	movf	___flmul@prod+1,w
 18042  11EA  00AF               	movwf	??___flmul+1
 18043  11EB  083C               	movf	___flmul@prod+2,w
 18044  11EC  00B0               	movwf	??___flmul+2
 18045  11ED  083D               	movf	___flmul@prod+3,w
 18046  11EE  00B1               	movwf	??___flmul+3
 18047  11EF  3001               	movlw	1
 18048  11F0  00B2               	movwf	??___flmul+4
 18049  11F1                     u10495:	
 18050  11F1  37B1               	asrf	??___flmul+3,f
 18051  11F2  0CB0               	rrf	??___flmul+2,f
 18052  11F3  0CAF               	rrf	??___flmul+1,f
 18053  11F4  0CAE               	rrf	??___flmul,f
 18054  11F5  0BB2               	decfsz	??___flmul+4,f
 18055  11F6  29F1               	goto	u10495
 18056  11F7  0831               	movf	??___flmul+3,w
 18057  11F8  00BD               	movwf	___flmul@prod+3
 18058  11F9  0830               	movf	??___flmul+2,w
 18059  11FA  00BC               	movwf	___flmul@prod+2
 18060  11FB  082F               	movf	??___flmul+1,w
 18061  11FC  00BB               	movwf	___flmul@prod+1
 18062  11FD  082E               	movf	??___flmul,w
 18063  11FE  00BA               	movwf	___flmul@prod
 18064  11FF  3001               	movlw	1
 18065  1200  07BE               	addwf	___flmul@temp,f
 18066  1201  3000               	movlw	0
 18067  1202  3DBF               	addwfc	___flmul@temp+1,f
 18068  1203                     l7682:	
 18069  1203  083F               	movf	___flmul@temp+1,w
 18070  1204  3A80               	xorlw	128
 18071  1205  00AE               	movwf	??___flmul
 18072  1206  3080               	movlw	128
 18073  1207  022E               	subwf	??___flmul,w
 18074  1208  1D03               	skipz
 18075  1209  2A0C               	goto	u10505
 18076  120A  30FF               	movlw	255
 18077  120B  023E               	subwf	___flmul@temp,w
 18078  120C                     u10505:	
 18079  120C  1C03               	skipc
 18080  120D  2A18               	goto	l7686
 18081  120E  307F               	movlw	127
 18082  120F  0020               	movlb	0	; select bank0
 18083  1210  00BD               	movwf	___flmul@prod+3
 18084  1211  3080               	movlw	128
 18085  1212  00BC               	movwf	___flmul@prod+2
 18086  1213  3000               	movlw	0
 18087  1214  00BB               	movwf	___flmul@prod+1
 18088  1215  3000               	movlw	0
 18089  1216  00BA               	movwf	___flmul@prod
 18090  1217  2A42               	goto	l1256
 18091  1218                     l7686:	
 18092  1218  0020               	movlb	0	; select bank0
 18093  1219  083F               	movf	___flmul@temp+1,w
 18094  121A  3A80               	xorlw	128
 18095  121B  00AE               	movwf	??___flmul
 18096  121C  3080               	movlw	128
 18097  121D  022E               	subwf	??___flmul,w
 18098  121E  1D03               	skipz
 18099  121F  2A22               	goto	u10515
 18100  1220  3001               	movlw	1
 18101  1221  023E               	subwf	___flmul@temp,w
 18102  1222                     u10515:	
 18103  1222  1803               	skipnc
 18104  1223  2A2F               	goto	l7692
 18105  1224  3000               	movlw	0
 18106  1225  0020               	movlb	0	; select bank0
 18107  1226  00BD               	movwf	___flmul@prod+3
 18108  1227  3000               	movlw	0
 18109  1228  00BC               	movwf	___flmul@prod+2
 18110  1229  3000               	movlw	0
 18111  122A  00BB               	movwf	___flmul@prod+1
 18112  122B  3000               	movlw	0
 18113  122C  00BA               	movwf	___flmul@prod
 18114  122D  01B3               	clrf	___flmul@sign
 18115  122E  2A42               	goto	l1256
 18116  122F                     l7692:	
 18117  122F  0020               	movlb	0	; select bank0
 18118  1230  083E               	movf	___flmul@temp,w
 18119  1231  00AE               	movwf	??___flmul
 18120  1232  082E               	movf	??___flmul,w
 18121  1233  00B9               	movwf	___flmul@bexp
 18122  1234  30FF               	movlw	255
 18123  1235  05BA               	andwf	___flmul@prod,f
 18124  1236  30FF               	movlw	255
 18125  1237  05BB               	andwf	___flmul@prod+1,f
 18126  1238  307F               	movlw	127
 18127  1239  05BC               	andwf	___flmul@prod+2,f
 18128  123A  3000               	movlw	0
 18129  123B  05BD               	andwf	___flmul@prod+3,f
 18130  123C  1839               	btfsc	___flmul@bexp,0
 18131  123D  17BC               	bsf	___flmul@prod+2,7
 18132  123E  3639               	lsrf	___flmul@bexp,w
 18133  123F  00AE               	movwf	??___flmul
 18134  1240  082E               	movf	??___flmul,w
 18135  1241  00BD               	movwf	___flmul@prod+3
 18136  1242                     l1256:	
 18137  1242  0833               	movf	___flmul@sign,w
 18138  1243  00AE               	movwf	??___flmul
 18139  1244  082E               	movf	??___flmul,w
 18140  1245  04BD               	iorwf	___flmul@prod+3,f
 18141  1246  083D               	movf	___flmul@prod+3,w
 18142  1247  00A9               	movwf	?___flmul+3
 18143  1248  083C               	movf	___flmul@prod+2,w
 18144  1249  00A8               	movwf	?___flmul+2
 18145  124A  083B               	movf	___flmul@prod+1,w
 18146  124B  00A7               	movwf	?___flmul+1
 18147  124C  083A               	movf	___flmul@prod,w
 18148  124D  00A6               	movwf	?___flmul
 18149  124E  0008               	return
 18150  124F                     __end_of___flmul:	
 18151                           
 18152                           	psect	text58
 18153  354F                     __ptext58:	
 18154 ;; *************** function __Umul8_16 *****************
 18155 ;; Defined at:
 18156 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 18157 ;; Parameters:    Size  Location     Type
 18158 ;;  multiplier      1    wreg     unsigned char 
 18159 ;;  multiplicand    1    1[COMMON] unsigned char 
 18160 ;; Auto vars:     Size  Location     Type
 18161 ;;  multiplier      1    9[COMMON] unsigned char 
 18162 ;;  word_mpld       2    7[COMMON] unsigned int 
 18163 ;;  product         2    5[COMMON] unsigned int 
 18164 ;; Return value:  Size  Location     Type
 18165 ;;                  2    1[COMMON] unsigned int 
 18166 ;; Registers used:
 18167 ;;		wreg, status,2, status,0
 18168 ;; Tracked objects:
 18169 ;;		On entry : 0/0
 18170 ;;		On exit  : 0/0
 18171 ;;		Unchanged: 0/0
 18172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18173 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18174 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18175 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18176 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18177 ;;Total ram usage:        9 bytes
 18178 ;; Hardware stack levels used:    1
 18179 ;; Hardware stack levels required when called:    1
 18180 ;; This function calls:
 18181 ;;		Nothing
 18182 ;; This function is called by:
 18183 ;;		___flmul
 18184 ;; This function uses a non-reentrant model
 18185 ;;
 18186                           
 18187                           
 18188                           ;psect for function __Umul8_16
 18189  354F                     __Umul8_16:	
 18190                           
 18191                           ;incstack = 0
 18192                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 18193                           ;__Umul8_16@multiplier stored from wreg
 18194  354F  00F9               	movwf	__Umul8_16@multiplier
 18195  3550  01F5               	clrf	__Umul8_16@product
 18196  3551  01F6               	clrf	__Umul8_16@product+1
 18197  3552  0871               	movf	__Umul8_16@multiplicand,w
 18198  3553  00F3               	movwf	??__Umul8_16
 18199  3554  01F4               	clrf	??__Umul8_16+1
 18200  3555  0873               	movf	??__Umul8_16,w
 18201  3556  00F7               	movwf	__Umul8_16@word_mpld
 18202  3557  0874               	movf	??__Umul8_16+1,w
 18203  3558  00F8               	movwf	__Umul8_16@word_mpld+1
 18204  3559                     l7376:	
 18205  3559  1C79               	btfss	__Umul8_16@multiplier,0
 18206  355A  2D5F               	goto	l1449
 18207  355B  0877               	movf	__Umul8_16@word_mpld,w
 18208  355C  07F5               	addwf	__Umul8_16@product,f
 18209  355D  0878               	movf	__Umul8_16@word_mpld+1,w
 18210  355E  3DF6               	addwfc	__Umul8_16@product+1,f
 18211  355F                     l1449:	
 18212  355F  3001               	movlw	1
 18213  3560                     u9895:	
 18214  3560  35F7               	lslf	__Umul8_16@word_mpld,f
 18215  3561  0DF8               	rlf	__Umul8_16@word_mpld+1,f
 18216  3562  0B89               	decfsz	9,f
 18217  3563  2D60               	goto	u9895
 18218  3564  1003               	clrc
 18219  3565  0CF9               	rrf	__Umul8_16@multiplier,f
 18220  3566  0879               	movf	__Umul8_16@multiplier,w
 18221  3567  1D03               	btfss	3,2
 18222  3568  2D59               	goto	l7376
 18223  3569  0876               	movf	__Umul8_16@product+1,w
 18224  356A  00F2               	movwf	?__Umul8_16+1
 18225  356B  0875               	movf	__Umul8_16@product,w
 18226  356C  00F1               	movwf	?__Umul8_16
 18227  356D  0008               	return
 18228  356E                     __end_of__Umul8_16:	
 18229                           
 18230                           	psect	text59
 18231  1CE2                     __ptext59:	
 18232 ;; *************** function ___fldiv *****************
 18233 ;; Defined at:
 18234 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 18235 ;; Parameters:    Size  Location     Type
 18236 ;;  a               4   32[BANK0 ] unsigned int 
 18237 ;;  b               4   36[BANK0 ] unsigned int 
 18238 ;; Auto vars:     Size  Location     Type
 18239 ;;  grs             4   52[BANK0 ] unsigned long 
 18240 ;;  rem             4   45[BANK0 ] unsigned long 
 18241 ;;  new_exp         2   50[BANK0 ] int 
 18242 ;;  aexp            1   57[BANK0 ] unsigned char 
 18243 ;;  bexp            1   56[BANK0 ] unsigned char 
 18244 ;;  sign            1   49[BANK0 ] unsigned char 
 18245 ;; Return value:  Size  Location     Type
 18246 ;;                  4   32[BANK0 ] unsigned char 
 18247 ;; Registers used:
 18248 ;;		wreg, status,2, status,0
 18249 ;; Tracked objects:
 18250 ;;		On entry : 0/0
 18251 ;;		On exit  : 0/0
 18252 ;;		Unchanged: 0/0
 18253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18254 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18255 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18256 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18257 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18258 ;;Total ram usage:       26 bytes
 18259 ;; Hardware stack levels used:    1
 18260 ;; Hardware stack levels required when called:    1
 18261 ;; This function calls:
 18262 ;;		Nothing
 18263 ;; This function is called by:
 18264 ;;		_setShortCircuitProtection
 18265 ;;		_setOverCurrentDischargeProtection
 18266 ;;		_updateCurrent
 18267 ;;		_updateVoltages
 18268 ;;		_updateTemperatures
 18269 ;;		_logf
 18270 ;;		_AFE_getSetShortCircuitCurrent
 18271 ;;		_AFE_getOverCurrentDischargeCurrent
 18272 ;; This function uses a non-reentrant model
 18273 ;;
 18274                           
 18275                           
 18276                           ;psect for function ___fldiv
 18277  1CE2                     ___fldiv:	
 18278                           
 18279                           ;incstack = 0
 18280                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 18281  1CE2  0020               	movlb	0	; select bank0
 18282  1CE3  0847               	movf	___fldiv@b+3,w
 18283  1CE4  3980               	andlw	128
 18284  1CE5  00C8               	movwf	??___fldiv
 18285  1CE6  0848               	movf	??___fldiv,w
 18286  1CE7  00D1               	movwf	___fldiv@sign
 18287  1CE8  3547               	lslf	___fldiv@b+3,w
 18288  1CE9  00C8               	movwf	??___fldiv
 18289  1CEA  0848               	movf	??___fldiv,w
 18290  1CEB  00D8               	movwf	___fldiv@bexp
 18291  1CEC  1BC6               	btfsc	___fldiv@b+2,7
 18292  1CED  1458               	bsf	___fldiv@bexp,0
 18293  1CEE  0858               	movf	___fldiv@bexp,w
 18294  1CEF  1903               	btfsc	3,2
 18295  1CF0  2CFF               	goto	l7442
 18296  1CF1  0A58               	incf	___fldiv@bexp,w
 18297  1CF2  1D03               	btfss	3,2
 18298  1CF3  2CFC               	goto	l7438
 18299  1CF4  3000               	movlw	0
 18300  1CF5  00C7               	movwf	___fldiv@b+3
 18301  1CF6  3000               	movlw	0
 18302  1CF7  00C6               	movwf	___fldiv@b+2
 18303  1CF8  3000               	movlw	0
 18304  1CF9  00C5               	movwf	___fldiv@b+1
 18305  1CFA  3000               	movlw	0
 18306  1CFB  00C4               	movwf	___fldiv@b
 18307  1CFC                     l7438:	
 18308  1CFC  17C6               	bsf	___fldiv@b+2,7
 18309  1CFD  01C7               	clrf	___fldiv@b+3
 18310  1CFE  2D07               	goto	l7444
 18311  1CFF                     l7442:	
 18312  1CFF  3000               	movlw	0
 18313  1D00  00C7               	movwf	___fldiv@b+3
 18314  1D01  3000               	movlw	0
 18315  1D02  00C6               	movwf	___fldiv@b+2
 18316  1D03  3000               	movlw	0
 18317  1D04  00C5               	movwf	___fldiv@b+1
 18318  1D05  3000               	movlw	0
 18319  1D06  00C4               	movwf	___fldiv@b
 18320  1D07                     l7444:	
 18321  1D07  0843               	movf	___fldiv@a+3,w
 18322  1D08  3980               	andlw	128
 18323  1D09  00C8               	movwf	??___fldiv
 18324  1D0A  0848               	movf	??___fldiv,w
 18325  1D0B  06D1               	xorwf	___fldiv@sign,f
 18326  1D0C  3543               	lslf	___fldiv@a+3,w
 18327  1D0D  00C8               	movwf	??___fldiv
 18328  1D0E  0848               	movf	??___fldiv,w
 18329  1D0F  00D9               	movwf	___fldiv@aexp
 18330  1D10  1BC2               	btfsc	___fldiv@a+2,7
 18331  1D11  1459               	bsf	___fldiv@aexp,0
 18332  1D12  0859               	movf	___fldiv@aexp,w
 18333  1D13  1903               	btfsc	3,2
 18334  1D14  2D23               	goto	l7462
 18335  1D15  0A59               	incf	___fldiv@aexp,w
 18336  1D16  1D03               	btfss	3,2
 18337  1D17  2D20               	goto	l7458
 18338  1D18  3000               	movlw	0
 18339  1D19  00C3               	movwf	___fldiv@a+3
 18340  1D1A  3000               	movlw	0
 18341  1D1B  00C2               	movwf	___fldiv@a+2
 18342  1D1C  3000               	movlw	0
 18343  1D1D  00C1               	movwf	___fldiv@a+1
 18344  1D1E  3000               	movlw	0
 18345  1D1F  00C0               	movwf	___fldiv@a
 18346  1D20                     l7458:	
 18347  1D20  17C2               	bsf	___fldiv@a+2,7
 18348  1D21  01C3               	clrf	___fldiv@a+3
 18349  1D22  2D2B               	goto	l1204
 18350  1D23                     l7462:	
 18351  1D23  3000               	movlw	0
 18352  1D24  00C3               	movwf	___fldiv@a+3
 18353  1D25  3000               	movlw	0
 18354  1D26  00C2               	movwf	___fldiv@a+2
 18355  1D27  3000               	movlw	0
 18356  1D28  00C1               	movwf	___fldiv@a+1
 18357  1D29  3000               	movlw	0
 18358  1D2A  00C0               	movwf	___fldiv@a
 18359  1D2B                     l1204:	
 18360  1D2B  0843               	movf	___fldiv@a+3,w
 18361  1D2C  0442               	iorwf	___fldiv@a+2,w
 18362  1D2D  0441               	iorwf	___fldiv@a+1,w
 18363  1D2E  0440               	iorwf	___fldiv@a,w
 18364  1D2F  1D03               	skipz
 18365  1D30  2D4A               	goto	l7472
 18366  1D31  3000               	movlw	0
 18367  1D32  00C7               	movwf	___fldiv@b+3
 18368  1D33  3000               	movlw	0
 18369  1D34  00C6               	movwf	___fldiv@b+2
 18370  1D35  3000               	movlw	0
 18371  1D36  00C5               	movwf	___fldiv@b+1
 18372  1D37  3000               	movlw	0
 18373  1D38  00C4               	movwf	___fldiv@b
 18374  1D39  3080               	movlw	128
 18375  1D3A  04C6               	iorwf	___fldiv@b+2,f
 18376  1D3B  307F               	movlw	127
 18377  1D3C  04C7               	iorwf	___fldiv@b+3,f
 18378  1D3D                     L5:	
 18379  1D3D  0851               	movf	___fldiv@sign,w
 18380  1D3E  00C8               	movwf	??___fldiv
 18381  1D3F  0848               	movf	??___fldiv,w
 18382  1D40  04C7               	iorwf	___fldiv@b+3,f
 18383  1D41  0847               	movf	___fldiv@b+3,w
 18384  1D42  00C3               	movwf	?___fldiv+3
 18385  1D43  0846               	movf	___fldiv@b+2,w
 18386  1D44  00C2               	movwf	?___fldiv+2
 18387  1D45  0845               	movf	___fldiv@b+1,w
 18388  1D46  00C1               	movwf	?___fldiv+1
 18389  1D47  0844               	movf	___fldiv@b,w
 18390  1D48  00C0               	movwf	?___fldiv
 18391  1D49  0008               	return
 18392  1D4A                     l7472:	
 18393  1D4A  0858               	movf	___fldiv@bexp,w
 18394  1D4B  1D03               	btfss	3,2
 18395  1D4C  2D56               	goto	l7478
 18396  1D4D  3000               	movlw	0
 18397  1D4E  00C3               	movwf	?___fldiv+3
 18398  1D4F  3000               	movlw	0
 18399  1D50  00C2               	movwf	?___fldiv+2
 18400  1D51  3000               	movlw	0
 18401  1D52  00C1               	movwf	?___fldiv+1
 18402  1D53  3000               	movlw	0
 18403  1D54  00C0               	movwf	?___fldiv
 18404  1D55  0008               	return
 18405  1D56                     l7478:	
 18406  1D56  0858               	movf	___fldiv@bexp,w
 18407  1D57  00C8               	movwf	??___fldiv
 18408  1D58  01C9               	clrf	??___fldiv+1
 18409  1D59  0849               	movf	??___fldiv+1,w
 18410  1D5A  00CB               	movwf	??___fldiv+3
 18411  1D5B  0859               	movf	___fldiv@aexp,w
 18412  1D5C  0248               	subwf	??___fldiv,w
 18413  1D5D  00CA               	movwf	??___fldiv+2
 18414  1D5E  1C03               	skipc
 18415  1D5F  03CB               	decf	??___fldiv+3,f
 18416  1D60  084A               	movf	??___fldiv+2,w
 18417  1D61  3E7F               	addlw	127
 18418  1D62  00D2               	movwf	___fldiv@new_exp
 18419  1D63  3000               	movlw	0
 18420  1D64  3D4B               	addwfc	??___fldiv+3,w
 18421  1D65  00D3               	movwf	___fldiv@new_exp+1
 18422  1D66  0847               	movf	___fldiv@b+3,w
 18423  1D67  00D0               	movwf	___fldiv@rem+3
 18424  1D68  0846               	movf	___fldiv@b+2,w
 18425  1D69  00CF               	movwf	___fldiv@rem+2
 18426  1D6A  0845               	movf	___fldiv@b+1,w
 18427  1D6B  00CE               	movwf	___fldiv@rem+1
 18428  1D6C  0844               	movf	___fldiv@b,w
 18429  1D6D  00CD               	movwf	___fldiv@rem
 18430  1D6E  3000               	movlw	0
 18431  1D6F  00C7               	movwf	___fldiv@b+3
 18432  1D70  3000               	movlw	0
 18433  1D71  00C6               	movwf	___fldiv@b+2
 18434  1D72  3000               	movlw	0
 18435  1D73  00C5               	movwf	___fldiv@b+1
 18436  1D74  3000               	movlw	0
 18437  1D75  00C4               	movwf	___fldiv@b
 18438  1D76  3000               	movlw	0
 18439  1D77  00D7               	movwf	___fldiv@grs+3
 18440  1D78  3000               	movlw	0
 18441  1D79  00D6               	movwf	___fldiv@grs+2
 18442  1D7A  3000               	movlw	0
 18443  1D7B  00D5               	movwf	___fldiv@grs+1
 18444  1D7C  3000               	movlw	0
 18445  1D7D  00D4               	movwf	___fldiv@grs
 18446  1D7E  01D9               	clrf	___fldiv@aexp
 18447  1D7F                     l7506:	
 18448  1D7F  301A               	movlw	26
 18449  1D80  0259               	subwf	___fldiv@aexp,w
 18450  1D81  1803               	btfsc	3,0
 18451  1D82  2DBB               	goto	l7508
 18452  1D83  0859               	movf	___fldiv@aexp,w
 18453  1D84  1903               	btfsc	3,2
 18454  1D85  2D9D               	goto	l7498
 18455  1D86  3001               	movlw	1
 18456  1D87                     u10075:	
 18457  1D87  35CD               	lslf	___fldiv@rem,f
 18458  1D88  0DCE               	rlf	___fldiv@rem+1,f
 18459  1D89  0DCF               	rlf	___fldiv@rem+2,f
 18460  1D8A  0DD0               	rlf	___fldiv@rem+3,f
 18461  1D8B  0B89               	decfsz	9,f
 18462  1D8C  2D87               	goto	u10075
 18463  1D8D  3001               	movlw	1
 18464  1D8E                     u10085:	
 18465  1D8E  35C4               	lslf	___fldiv@b,f
 18466  1D8F  0DC5               	rlf	___fldiv@b+1,f
 18467  1D90  0DC6               	rlf	___fldiv@b+2,f
 18468  1D91  0DC7               	rlf	___fldiv@b+3,f
 18469  1D92  0B89               	decfsz	9,f
 18470  1D93  2D8E               	goto	u10085
 18471  1D94  1BD7               	btfsc	___fldiv@grs+3,7
 18472  1D95  1444               	bsf	___fldiv@b,0
 18473  1D96  3001               	movlw	1
 18474  1D97                     u10105:	
 18475  1D97  35D4               	lslf	___fldiv@grs,f
 18476  1D98  0DD5               	rlf	___fldiv@grs+1,f
 18477  1D99  0DD6               	rlf	___fldiv@grs+2,f
 18478  1D9A  0DD7               	rlf	___fldiv@grs+3,f
 18479  1D9B  0B89               	decfsz	9,f
 18480  1D9C  2D97               	goto	u10105
 18481  1D9D                     l7498:	
 18482  1D9D  0843               	movf	___fldiv@a+3,w
 18483  1D9E  0250               	subwf	___fldiv@rem+3,w
 18484  1D9F  1D03               	skipz
 18485  1DA0  2DAB               	goto	u10115
 18486  1DA1  0842               	movf	___fldiv@a+2,w
 18487  1DA2  024F               	subwf	___fldiv@rem+2,w
 18488  1DA3  1D03               	skipz
 18489  1DA4  2DAB               	goto	u10115
 18490  1DA5  0841               	movf	___fldiv@a+1,w
 18491  1DA6  024E               	subwf	___fldiv@rem+1,w
 18492  1DA7  1D03               	skipz
 18493  1DA8  2DAB               	goto	u10115
 18494  1DA9  0840               	movf	___fldiv@a,w
 18495  1DAA  024D               	subwf	___fldiv@rem,w
 18496  1DAB                     u10115:	
 18497  1DAB  1C03               	skipc
 18498  1DAC  2DB6               	goto	l7504
 18499  1DAD  1757               	bsf	___fldiv@grs+3,6
 18500  1DAE  0840               	movf	___fldiv@a,w
 18501  1DAF  02CD               	subwf	___fldiv@rem,f
 18502  1DB0  0841               	movf	___fldiv@a+1,w
 18503  1DB1  3BCE               	subwfb	___fldiv@rem+1,f
 18504  1DB2  0842               	movf	___fldiv@a+2,w
 18505  1DB3  3BCF               	subwfb	___fldiv@rem+2,f
 18506  1DB4  0843               	movf	___fldiv@a+3,w
 18507  1DB5  3BD0               	subwfb	___fldiv@rem+3,f
 18508  1DB6                     l7504:	
 18509  1DB6  3001               	movlw	1
 18510  1DB7  00C8               	movwf	??___fldiv
 18511  1DB8  0848               	movf	??___fldiv,w
 18512  1DB9  07D9               	addwf	___fldiv@aexp,f
 18513  1DBA  2D7F               	goto	l7506
 18514  1DBB                     l7508:	
 18515  1DBB  0850               	movf	___fldiv@rem+3,w
 18516  1DBC  044F               	iorwf	___fldiv@rem+2,w
 18517  1DBD  044E               	iorwf	___fldiv@rem+1,w
 18518  1DBE  044D               	iorwf	___fldiv@rem,w
 18519  1DBF  1D03               	btfss	3,2
 18520  1DC0  1454               	bsf	___fldiv@grs,0
 18521  1DC1                     l7522:	
 18522  1DC1  1BC6               	btfsc	___fldiv@b+2,7
 18523  1DC2  2DD8               	goto	l7524
 18524  1DC3  3001               	movlw	1
 18525  1DC4                     u10145:	
 18526  1DC4  35C4               	lslf	___fldiv@b,f
 18527  1DC5  0DC5               	rlf	___fldiv@b+1,f
 18528  1DC6  0DC6               	rlf	___fldiv@b+2,f
 18529  1DC7  0DC7               	rlf	___fldiv@b+3,f
 18530  1DC8  0B89               	decfsz	9,f
 18531  1DC9  2DC4               	goto	u10145
 18532  1DCA  1BD7               	btfsc	___fldiv@grs+3,7
 18533  1DCB  1444               	bsf	___fldiv@b,0
 18534  1DCC  3001               	movlw	1
 18535  1DCD                     u10165:	
 18536  1DCD  35D4               	lslf	___fldiv@grs,f
 18537  1DCE  0DD5               	rlf	___fldiv@grs+1,f
 18538  1DCF  0DD6               	rlf	___fldiv@grs+2,f
 18539  1DD0  0DD7               	rlf	___fldiv@grs+3,f
 18540  1DD1  0B89               	decfsz	9,f
 18541  1DD2  2DCD               	goto	u10165
 18542  1DD3  30FF               	movlw	255
 18543  1DD4  07D2               	addwf	___fldiv@new_exp,f
 18544  1DD5  30FF               	movlw	255
 18545  1DD6  3DD3               	addwfc	___fldiv@new_exp+1,f
 18546  1DD7  2DC1               	goto	l7522
 18547  1DD8                     l7524:	
 18548  1DD8  01D9               	clrf	___fldiv@aexp
 18549  1DD9  1FD7               	btfss	___fldiv@grs+3,7
 18550  1DDA  2DF1               	goto	l7534
 18551  1DDB  30FF               	movlw	255
 18552  1DDC  0554               	andwf	___fldiv@grs,w
 18553  1DDD  00C8               	movwf	??___fldiv
 18554  1DDE  30FF               	movlw	255
 18555  1DDF  0555               	andwf	___fldiv@grs+1,w
 18556  1DE0  00C9               	movwf	??___fldiv+1
 18557  1DE1  30FF               	movlw	255
 18558  1DE2  0556               	andwf	___fldiv@grs+2,w
 18559  1DE3  00CA               	movwf	??___fldiv+2
 18560  1DE4  307F               	movlw	127
 18561  1DE5  0557               	andwf	___fldiv@grs+3,w
 18562  1DE6  00CB               	movwf	??___fldiv+3
 18563  1DE7  084B               	movf	??___fldiv+3,w
 18564  1DE8  044A               	iorwf	??___fldiv+2,w
 18565  1DE9  0449               	iorwf	??___fldiv+1,w
 18566  1DEA  0448               	iorwf	??___fldiv,w
 18567  1DEB  1903               	skipnz
 18568  1DEC  1844               	btfsc	___fldiv@b,0
 18569  1DED  2DEF               	goto	l7530
 18570  1DEE  2DF1               	goto	l7534
 18571  1DEF                     l7530:	
 18572  1DEF  01D9               	clrf	___fldiv@aexp
 18573  1DF0  0AD9               	incf	___fldiv@aexp,f
 18574  1DF1                     l7534:	
 18575  1DF1  0859               	movf	___fldiv@aexp,w
 18576  1DF2  1903               	btfsc	3,2
 18577  1DF3  2E1A               	goto	l7544
 18578  1DF4  3001               	movlw	1
 18579  1DF5  07C4               	addwf	___fldiv@b,f
 18580  1DF6  3000               	movlw	0
 18581  1DF7  3DC5               	addwfc	___fldiv@b+1,f
 18582  1DF8  3000               	movlw	0
 18583  1DF9  3DC6               	addwfc	___fldiv@b+2,f
 18584  1DFA  3000               	movlw	0
 18585  1DFB  3DC7               	addwfc	___fldiv@b+3,f
 18586  1DFC  1C47               	btfss	___fldiv@b+3,0
 18587  1DFD  2E1A               	goto	l7544
 18588  1DFE  0844               	movf	___fldiv@b,w
 18589  1DFF  00C8               	movwf	??___fldiv
 18590  1E00  0845               	movf	___fldiv@b+1,w
 18591  1E01  00C9               	movwf	??___fldiv+1
 18592  1E02  0846               	movf	___fldiv@b+2,w
 18593  1E03  00CA               	movwf	??___fldiv+2
 18594  1E04  0847               	movf	___fldiv@b+3,w
 18595  1E05  00CB               	movwf	??___fldiv+3
 18596  1E06  3001               	movlw	1
 18597  1E07  00CC               	movwf	??___fldiv+4
 18598  1E08                     u10235:	
 18599  1E08  37CB               	asrf	??___fldiv+3,f
 18600  1E09  0CCA               	rrf	??___fldiv+2,f
 18601  1E0A  0CC9               	rrf	??___fldiv+1,f
 18602  1E0B  0CC8               	rrf	??___fldiv,f
 18603  1E0C  0BCC               	decfsz	??___fldiv+4,f
 18604  1E0D  2E08               	goto	u10235
 18605  1E0E  084B               	movf	??___fldiv+3,w
 18606  1E0F  00C7               	movwf	___fldiv@b+3
 18607  1E10  084A               	movf	??___fldiv+2,w
 18608  1E11  00C6               	movwf	___fldiv@b+2
 18609  1E12  0849               	movf	??___fldiv+1,w
 18610  1E13  00C5               	movwf	___fldiv@b+1
 18611  1E14  0848               	movf	??___fldiv,w
 18612  1E15  00C4               	movwf	___fldiv@b
 18613  1E16  3001               	movlw	1
 18614  1E17  07D2               	addwf	___fldiv@new_exp,f
 18615  1E18  3000               	movlw	0
 18616  1E19  3DD3               	addwfc	___fldiv@new_exp+1,f
 18617  1E1A                     l7544:	
 18618  1E1A  0853               	movf	___fldiv@new_exp+1,w
 18619  1E1B  3A80               	xorlw	128
 18620  1E1C  00C8               	movwf	??___fldiv
 18621  1E1D  3080               	movlw	128
 18622  1E1E  0248               	subwf	??___fldiv,w
 18623  1E1F  1D03               	skipz
 18624  1E20  2E23               	goto	u10245
 18625  1E21  30FF               	movlw	255
 18626  1E22  0252               	subwf	___fldiv@new_exp,w
 18627  1E23                     u10245:	
 18628  1E23  1C03               	skipc
 18629  1E24  2E32               	goto	l1225
 18630  1E25  30FF               	movlw	255
 18631  1E26  0020               	movlb	0	; select bank0
 18632  1E27  00D2               	movwf	___fldiv@new_exp
 18633  1E28  3000               	movlw	0
 18634  1E29  00D3               	movwf	___fldiv@new_exp+1
 18635  1E2A  3000               	movlw	0
 18636  1E2B  00C7               	movwf	___fldiv@b+3
 18637  1E2C  3000               	movlw	0
 18638  1E2D  00C6               	movwf	___fldiv@b+2
 18639  1E2E  3000               	movlw	0
 18640  1E2F  00C5               	movwf	___fldiv@b+1
 18641  1E30  3000               	movlw	0
 18642  1E31  00C4               	movwf	___fldiv@b
 18643  1E32                     l1225:	
 18644  1E32  0020               	movlb	0	; select bank0
 18645  1E33  0853               	movf	___fldiv@new_exp+1,w
 18646  1E34  3A80               	xorlw	128
 18647  1E35  00C8               	movwf	??___fldiv
 18648  1E36  3080               	movlw	128
 18649  1E37  0248               	subwf	??___fldiv,w
 18650  1E38  1D03               	skipz
 18651  1E39  2E3C               	goto	u10255
 18652  1E3A  3001               	movlw	1
 18653  1E3B  0252               	subwf	___fldiv@new_exp,w
 18654  1E3C                     u10255:	
 18655  1E3C  1803               	skipnc
 18656  1E3D  2E4A               	goto	l1226
 18657  1E3E  0020               	movlb	0	; select bank0
 18658  1E3F  01D2               	clrf	___fldiv@new_exp
 18659  1E40  01D3               	clrf	___fldiv@new_exp+1
 18660  1E41  3000               	movlw	0
 18661  1E42  00C7               	movwf	___fldiv@b+3
 18662  1E43  3000               	movlw	0
 18663  1E44  00C6               	movwf	___fldiv@b+2
 18664  1E45  3000               	movlw	0
 18665  1E46  00C5               	movwf	___fldiv@b+1
 18666  1E47  3000               	movlw	0
 18667  1E48  00C4               	movwf	___fldiv@b
 18668  1E49  01D1               	clrf	___fldiv@sign
 18669  1E4A                     l1226:	
 18670  1E4A  0020               	movlb	0	; select bank0
 18671  1E4B  0852               	movf	___fldiv@new_exp,w
 18672  1E4C  00C8               	movwf	??___fldiv
 18673  1E4D  0848               	movf	??___fldiv,w
 18674  1E4E  00D8               	movwf	___fldiv@bexp
 18675  1E4F  1C58               	btfss	___fldiv@bexp,0
 18676  1E50  2E53               	goto	l7558
 18677  1E51  17C6               	bsf	___fldiv@b+2,7
 18678  1E52  2E57               	goto	l1228
 18679  1E53                     l7558:	
 18680  1E53  307F               	movlw	127
 18681  1E54  00C8               	movwf	??___fldiv
 18682  1E55  0848               	movf	??___fldiv,w
 18683  1E56  05C6               	andwf	___fldiv@b+2,f
 18684  1E57                     l1228:	
 18685  1E57  3658               	lsrf	___fldiv@bexp,w
 18686  1E58  00C8               	movwf	??___fldiv
 18687  1E59  0848               	movf	??___fldiv,w
 18688  1E5A  00C7               	movwf	___fldiv@b+3
 18689  1E5B  2D3D               	goto	L5
 18690  1E5C                     __end_of___fldiv:	
 18691                           
 18692                           	psect	text60
 18693  280A                     __ptext60:	
 18694 ;; *************** function _enableDischarging *****************
 18695 ;; Defined at:
 18696 ;;		line 277 in file "BQ76920.c"
 18697 ;; Parameters:    Size  Location     Type
 18698 ;;  enable          2    0[BANK0 ] unsigned int 
 18699 ;; Auto vars:     Size  Location     Type
 18700 ;;  sys_ctrl2       1   11[COMMON] unsigned char 
 18701 ;; Return value:  Size  Location     Type
 18702 ;;                  1    wreg      void 
 18703 ;; Registers used:
 18704 ;;		wreg, status,2, status,0, pclath, cstack
 18705 ;; Tracked objects:
 18706 ;;		On entry : 0/0
 18707 ;;		On exit  : 0/0
 18708 ;;		Unchanged: 0/0
 18709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18710 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18711 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18712 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18713 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18714 ;;Total ram usage:        5 bytes
 18715 ;; Hardware stack levels used:    1
 18716 ;; Hardware stack levels required when called:    3
 18717 ;; This function calls:
 18718 ;;		_I2C_writeRegister
 18719 ;;		_readRegister
 18720 ;; This function is called by:
 18721 ;;		_AFE_UPDATE
 18722 ;; This function uses a non-reentrant model
 18723 ;;
 18724                           
 18725                           
 18726                           ;psect for function _enableDischarging
 18727  280A                     _enableDischarging:	
 18728                           
 18729                           ;BQ76920.c: 278:     uint8_t sys_ctrl2;;BQ76920.c: 279:     sys_ctrl2 = readRegister(0x1
      +                          8, 0x05);
 18730                           
 18731                           ;incstack = 0
 18732                           ; Regs used in _enableDischarging: [wreg+status,2+status,0+pclath+cstack]
 18733  280A  3018               	movlw	24
 18734  280B  00F5               	movwf	readRegister@slaveAddress
 18735  280C  3000               	movlw	0
 18736  280D  00F6               	movwf	readRegister@slaveAddress+1
 18737  280E  3005               	movlw	5
 18738  280F  00F7               	movwf	readRegister@regAddress
 18739  2810  3000               	movlw	0
 18740  2811  00F8               	movwf	readRegister@regAddress+1
 18741  2812  31B6  26AC  31A8   	fcall	_readRegister
 18742  2815  0875               	movf	?_readRegister,w
 18743  2816  0020               	movlb	0	; select bank0
 18744  2817  00A2               	movwf	??_enableDischarging
 18745  2818  0822               	movf	??_enableDischarging,w
 18746  2819  00FB               	movwf	enableDischarging@sys_ctrl2
 18747                           
 18748                           ;BQ76920.c: 280:     if(enable){
 18749  281A  0820               	movf	enableDischarging@enable,w
 18750  281B  0421               	iorwf	enableDischarging@enable+1,w
 18751  281C  1903               	btfsc	3,2
 18752  281D  282E               	goto	l8264
 18753                           
 18754                           ;BQ76920.c: 281:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 | 0x02);
 18755  281E  3018               	movlw	24
 18756  281F  00F5               	movwf	I2C_writeRegister@slaveAddress
 18757  2820  3000               	movlw	0
 18758  2821  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 18759  2822  3005               	movlw	5
 18760  2823  00F7               	movwf	I2C_writeRegister@regAddress
 18761  2824  3000               	movlw	0
 18762  2825  00F8               	movwf	I2C_writeRegister@regAddress+1
 18763  2826  3002               	movlw	2
 18764  2827  047B               	iorwf	enableDischarging@sys_ctrl2,w
 18765  2828  00F9               	movwf	I2C_writeRegister@data
 18766  2829  3000               	movlw	0
 18767  282A  00FA               	movwf	I2C_writeRegister@data+1
 18768  282B  31B5  2531         	fcall	_I2C_writeRegister
 18769                           
 18770                           ;BQ76920.c: 282:     }else{
 18771  282D  0008               	return
 18772  282E                     l8264:	
 18773                           
 18774                           ;BQ76920.c: 283:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 & ~(0x02));
 18775  282E  3018               	movlw	24
 18776  282F  00F5               	movwf	I2C_writeRegister@slaveAddress
 18777  2830  3000               	movlw	0
 18778  2831  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 18779  2832  3005               	movlw	5
 18780  2833  00F7               	movwf	I2C_writeRegister@regAddress
 18781  2834  3000               	movlw	0
 18782  2835  00F8               	movwf	I2C_writeRegister@regAddress+1
 18783  2836  087B               	movf	enableDischarging@sys_ctrl2,w
 18784  2837  39FD               	andlw	253
 18785  2838  00A2               	movwf	??_enableDischarging
 18786  2839  01A3               	clrf	??_enableDischarging+1
 18787  283A  0822               	movf	??_enableDischarging,w
 18788  283B  00F9               	movwf	I2C_writeRegister@data
 18789  283C  0823               	movf	??_enableDischarging+1,w
 18790  283D  00FA               	movwf	I2C_writeRegister@data+1
 18791  283E  31B5  2531         	fcall	_I2C_writeRegister
 18792  2840  0008               	return
 18793  2841                     __end_of_enableDischarging:	
 18794                           
 18795                           	psect	text61
 18796  36E2                     __ptext61:	
 18797 ;; *************** function _enableCharging *****************
 18798 ;; Defined at:
 18799 ;;		line 287 in file "BQ76920.c"
 18800 ;; Parameters:    Size  Location     Type
 18801 ;;  enable          2    0[BANK0 ] unsigned int 
 18802 ;; Auto vars:     Size  Location     Type
 18803 ;;  sys_ctrl2       1   11[COMMON] unsigned char 
 18804 ;; Return value:  Size  Location     Type
 18805 ;;                  1    wreg      void 
 18806 ;; Registers used:
 18807 ;;		wreg, status,2, status,0, pclath, cstack
 18808 ;; Tracked objects:
 18809 ;;		On entry : 0/0
 18810 ;;		On exit  : 0/0
 18811 ;;		Unchanged: 0/0
 18812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18813 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18814 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18815 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18816 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18817 ;;Total ram usage:        5 bytes
 18818 ;; Hardware stack levels used:    1
 18819 ;; Hardware stack levels required when called:    3
 18820 ;; This function calls:
 18821 ;;		_I2C_writeRegister
 18822 ;;		_readRegister
 18823 ;; This function is called by:
 18824 ;;		_AFE_UPDATE
 18825 ;; This function uses a non-reentrant model
 18826 ;;
 18827                           
 18828                           
 18829                           ;psect for function _enableCharging
 18830  36E2                     _enableCharging:	
 18831                           
 18832                           ;BQ76920.c: 288:     uint8_t sys_ctrl2;;BQ76920.c: 289:     sys_ctrl2 = readRegister(0x1
      +                          8, 0x05);
 18833                           
 18834                           ;incstack = 0
 18835                           ; Regs used in _enableCharging: [wreg+status,2+status,0+pclath+cstack]
 18836  36E2  3018               	movlw	24
 18837  36E3  00F5               	movwf	readRegister@slaveAddress
 18838  36E4  3000               	movlw	0
 18839  36E5  00F6               	movwf	readRegister@slaveAddress+1
 18840  36E6  3005               	movlw	5
 18841  36E7  00F7               	movwf	readRegister@regAddress
 18842  36E8  3000               	movlw	0
 18843  36E9  00F8               	movwf	readRegister@regAddress+1
 18844  36EA  31B6  26AC  31B6   	fcall	_readRegister
 18845  36ED  0875               	movf	?_readRegister,w
 18846  36EE  0020               	movlb	0	; select bank0
 18847  36EF  00A2               	movwf	??_enableCharging
 18848  36F0  0822               	movf	??_enableCharging,w
 18849  36F1  00FB               	movwf	enableCharging@sys_ctrl2
 18850                           
 18851                           ;BQ76920.c: 290:     if(enable){
 18852  36F2  0820               	movf	enableCharging@enable,w
 18853  36F3  0421               	iorwf	enableCharging@enable+1,w
 18854  36F4  1903               	btfsc	3,2
 18855  36F5  2F06               	goto	l8272
 18856                           
 18857                           ;BQ76920.c: 291:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 | 0x01);
 18858  36F6  3018               	movlw	24
 18859  36F7  00F5               	movwf	I2C_writeRegister@slaveAddress
 18860  36F8  3000               	movlw	0
 18861  36F9  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 18862  36FA  3005               	movlw	5
 18863  36FB  00F7               	movwf	I2C_writeRegister@regAddress
 18864  36FC  3000               	movlw	0
 18865  36FD  00F8               	movwf	I2C_writeRegister@regAddress+1
 18866  36FE  3001               	movlw	1
 18867  36FF  047B               	iorwf	enableCharging@sys_ctrl2,w
 18868  3700  00F9               	movwf	I2C_writeRegister@data
 18869  3701  3000               	movlw	0
 18870  3702  00FA               	movwf	I2C_writeRegister@data+1
 18871  3703  31B5  2531         	fcall	_I2C_writeRegister
 18872                           
 18873                           ;BQ76920.c: 292:     }else{
 18874  3705  0008               	return
 18875  3706                     l8272:	
 18876                           
 18877                           ;BQ76920.c: 293:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 & ~(0x01));
 18878  3706  3018               	movlw	24
 18879  3707  00F5               	movwf	I2C_writeRegister@slaveAddress
 18880  3708  3000               	movlw	0
 18881  3709  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 18882  370A  3005               	movlw	5
 18883  370B  00F7               	movwf	I2C_writeRegister@regAddress
 18884  370C  3000               	movlw	0
 18885  370D  00F8               	movwf	I2C_writeRegister@regAddress+1
 18886  370E  087B               	movf	enableCharging@sys_ctrl2,w
 18887  370F  39FE               	andlw	254
 18888  3710  00A2               	movwf	??_enableCharging
 18889  3711  01A3               	clrf	??_enableCharging+1
 18890  3712  0822               	movf	??_enableCharging,w
 18891  3713  00F9               	movwf	I2C_writeRegister@data
 18892  3714  0823               	movf	??_enableCharging+1,w
 18893  3715  00FA               	movwf	I2C_writeRegister@data+1
 18894  3716  31B5  2531         	fcall	_I2C_writeRegister
 18895  3718  0008               	return
 18896  3719                     __end_of_enableCharging:	
 18897                           
 18898                           	psect	text62
 18899  36AC                     __ptext62:	
 18900 ;; *************** function _readRegister *****************
 18901 ;; Defined at:
 18902 ;;		line 115 in file "I2C.c"
 18903 ;; Parameters:    Size  Location     Type
 18904 ;;  slaveAddress    2    5[COMMON] int 
 18905 ;;  regAddress      2    7[COMMON] int 
 18906 ;; Auto vars:     Size  Location     Type
 18907 ;;  recievedData    2    9[COMMON] int 
 18908 ;; Return value:  Size  Location     Type
 18909 ;;                  2    5[COMMON] int 
 18910 ;; Registers used:
 18911 ;;		wreg, status,2, status,0, pclath, cstack
 18912 ;; Tracked objects:
 18913 ;;		On entry : 0/0
 18914 ;;		On exit  : 0/0
 18915 ;;		Unchanged: 0/0
 18916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18917 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18918 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18920 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18921 ;;Total ram usage:        6 bytes
 18922 ;; Hardware stack levels used:    1
 18923 ;; Hardware stack levels required when called:    2
 18924 ;; This function calls:
 18925 ;;		_read_I2C_data
 18926 ;;		_send_I2C_NACK
 18927 ;;		_send_I2C_controlByte
 18928 ;;		_send_I2C_data
 18929 ;;		_send_I2C_startBit
 18930 ;;		_send_I2C_stopBit
 18931 ;; This function is called by:
 18932 ;;		_beginAFEcommunication
 18933 ;;		_setCellUndervoltageProtection
 18934 ;;		_setCellOvervoltageProtection
 18935 ;;		_updateCurrent
 18936 ;;		_updateVoltages
 18937 ;;		_updateTemperatures
 18938 ;;		_enableDischarging
 18939 ;;		_enableCharging
 18940 ;;		_printcellParameters
 18941 ;;		_printotAFERegisters
 18942 ;; This function uses a non-reentrant model
 18943 ;;
 18944                           
 18945                           
 18946                           ;psect for function _readRegister
 18947  36AC                     _readRegister:	
 18948                           
 18949                           ;I2C.c: 116:     int recievedData;;I2C.c: 117:     send_I2C_startBit();
 18950                           
 18951                           ;incstack = 0
 18952                           ; Regs used in _readRegister: [wreg+status,2+status,0+pclath+cstack]
 18953  36AC  31B3  238B  31B6   	fcall	_send_I2C_startBit
 18954                           
 18955                           ;I2C.c: 118:     send_I2C_controlByte(slaveAddress, 0);
 18956  36AF  0876               	movf	readRegister@slaveAddress+1,w
 18957  36B0  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 18958  36B1  0875               	movf	readRegister@slaveAddress,w
 18959  36B2  00F1               	movwf	send_I2C_controlByte@BlockAddress
 18960  36B3  3000               	movlw	0
 18961  36B4  00F3               	movwf	send_I2C_controlByte@RW_bit
 18962  36B5  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 18963  36B6  31B3  23B6  31B6   	fcall	_send_I2C_controlByte
 18964                           
 18965                           ;I2C.c: 119:     send_I2C_data(regAddress);
 18966  36B9  0878               	movf	readRegister@regAddress+1,w
 18967  36BA  00F2               	movwf	send_I2C_data@databyte+1
 18968  36BB  0877               	movf	readRegister@regAddress,w
 18969  36BC  00F1               	movwf	send_I2C_data@databyte
 18970  36BD  31B3  23A4  31B6   	fcall	_send_I2C_data
 18971                           
 18972                           ;I2C.c: 120:     send_I2C_stopBit();
 18973  36C0  31B3  2393  31B6   	fcall	_send_I2C_stopBit
 18974                           
 18975                           ;I2C.c: 121:     send_I2C_startBit();
 18976  36C3  31B3  238B  31B6   	fcall	_send_I2C_startBit
 18977                           
 18978                           ;I2C.c: 122:     send_I2C_controlByte(slaveAddress, 1);
 18979  36C6  0876               	movf	readRegister@slaveAddress+1,w
 18980  36C7  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 18981  36C8  0875               	movf	readRegister@slaveAddress,w
 18982  36C9  00F1               	movwf	send_I2C_controlByte@BlockAddress
 18983  36CA  3001               	movlw	1
 18984  36CB  00F3               	movwf	send_I2C_controlByte@RW_bit
 18985  36CC  3000               	movlw	0
 18986  36CD  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 18987  36CE  31B3  23B6  31B6   	fcall	_send_I2C_controlByte
 18988                           
 18989                           ;I2C.c: 123:     recievedData = read_I2C_data();
 18990  36D1  31B3  23F1  31B6   	fcall	_read_I2C_data
 18991  36D4  0872               	movf	?_read_I2C_data+1,w
 18992  36D5  00FA               	movwf	readRegister@recievedData+1
 18993  36D6  0871               	movf	?_read_I2C_data,w
 18994  36D7  00F9               	movwf	readRegister@recievedData
 18995                           
 18996                           ;I2C.c: 124:     send_I2C_NACK();
 18997  36D8  31B3  23AD  31B6   	fcall	_send_I2C_NACK
 18998                           
 18999                           ;I2C.c: 125:     send_I2C_stopBit();
 19000  36DB  31B3  2393         	fcall	_send_I2C_stopBit
 19001                           
 19002                           ;I2C.c: 126:     return recievedData;
 19003  36DD  087A               	movf	readRegister@recievedData+1,w
 19004  36DE  00F6               	movwf	?_readRegister+1
 19005  36DF  0879               	movf	readRegister@recievedData,w
 19006  36E0  00F5               	movwf	?_readRegister
 19007  36E1  0008               	return
 19008  36E2                     __end_of_readRegister:	
 19009                           
 19010                           	psect	text63
 19011  33AD                     __ptext63:	
 19012 ;; *************** function _send_I2C_NACK *****************
 19013 ;; Defined at:
 19014 ;;		line 91 in file "I2C.c"
 19015 ;; Parameters:    Size  Location     Type
 19016 ;;		None
 19017 ;; Auto vars:     Size  Location     Type
 19018 ;;		None
 19019 ;; Return value:  Size  Location     Type
 19020 ;;                  1    wreg      void 
 19021 ;; Registers used:
 19022 ;;		None
 19023 ;; Tracked objects:
 19024 ;;		On entry : 0/0
 19025 ;;		On exit  : 0/0
 19026 ;;		Unchanged: 0/0
 19027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19032 ;;Total ram usage:        0 bytes
 19033 ;; Hardware stack levels used:    1
 19034 ;; Hardware stack levels required when called:    1
 19035 ;; This function calls:
 19036 ;;		Nothing
 19037 ;; This function is called by:
 19038 ;;		_readRegister
 19039 ;; This function uses a non-reentrant model
 19040 ;;
 19041                           
 19042                           
 19043                           ;psect for function _send_I2C_NACK
 19044  33AD                     _send_I2C_NACK:	
 19045                           
 19046                           ;I2C.c: 92:     PIR1bits.SSP1IF = 0;
 19047                           
 19048                           ;incstack = 0
 19049                           ; Regs used in _send_I2C_NACK: []
 19050  33AD  0020               	movlb	0	; select bank0
 19051  33AE  1191               	bcf	17,3	;volatile
 19052                           
 19053                           ;I2C.c: 93:     SSPCON2bits.ACKDT = 1;
 19054  33AF  0024               	movlb	4	; select bank4
 19055  33B0  1696               	bsf	22,5	;volatile
 19056                           
 19057                           ;I2C.c: 94:     SSPCON2bits.ACKEN = 1;
 19058  33B1  1616               	bsf	22,4	;volatile
 19059  33B2                     l320:	
 19060                           ;I2C.c: 95:     while (!PIR1bits.SSP1IF);
 19061                           
 19062  33B2  0020               	movlb	0	; select bank0
 19063  33B3  1991               	btfsc	17,3	;volatile
 19064  33B4  0008               	return
 19065  33B5  2BB2               	goto	l320
 19066  33B6                     __end_of_send_I2C_NACK:	
 19067                           
 19068                           	psect	text64
 19069  33F1                     __ptext64:	
 19070 ;; *************** function _read_I2C_data *****************
 19071 ;; Defined at:
 19072 ;;		line 43 in file "I2C.c"
 19073 ;; Parameters:    Size  Location     Type
 19074 ;;		None
 19075 ;; Auto vars:     Size  Location     Type
 19076 ;;		None
 19077 ;; Return value:  Size  Location     Type
 19078 ;;                  2    1[COMMON] unsigned int 
 19079 ;; Registers used:
 19080 ;;		wreg
 19081 ;; Tracked objects:
 19082 ;;		On entry : 0/0
 19083 ;;		On exit  : 0/0
 19084 ;;		Unchanged: 0/0
 19085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19086 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19088 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19089 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19090 ;;Total ram usage:        4 bytes
 19091 ;; Hardware stack levels used:    1
 19092 ;; Hardware stack levels required when called:    1
 19093 ;; This function calls:
 19094 ;;		Nothing
 19095 ;; This function is called by:
 19096 ;;		_readRegister
 19097 ;; This function uses a non-reentrant model
 19098 ;;
 19099                           
 19100                           
 19101                           ;psect for function _read_I2C_data
 19102  33F1                     _read_I2C_data:	
 19103                           
 19104                           ;I2C.c: 44:     PIR1bits.SSP1IF = 0;
 19105                           
 19106                           ;incstack = 0
 19107                           ; Regs used in _read_I2C_data: [wreg]
 19108  33F1  0020               	movlb	0	; select bank0
 19109  33F2  1191               	bcf	17,3	;volatile
 19110                           
 19111                           ;I2C.c: 45:     SSPCON2bits.RCEN = 1;
 19112  33F3  0024               	movlb	4	; select bank4
 19113  33F4  1596               	bsf	22,3	;volatile
 19114  33F5                     l284:	
 19115                           ;I2C.c: 46:     while (!PIR1bits.SSP1IF);
 19116                           
 19117  33F5  0020               	movlb	0	; select bank0
 19118  33F6  1D91               	btfss	17,3	;volatile
 19119  33F7  2BF5               	goto	l284
 19120                           
 19121                           ;I2C.c: 47:     return (SSPBUF);
 19122  33F8  0024               	movlb	4	; select bank4
 19123  33F9  0811               	movf	17,w	;volatile
 19124  33FA  00F3               	movwf	??_read_I2C_data
 19125  33FB  01F4               	clrf	??_read_I2C_data+1
 19126  33FC  0873               	movf	??_read_I2C_data,w
 19127  33FD  00F1               	movwf	?_read_I2C_data
 19128  33FE  0874               	movf	??_read_I2C_data+1,w
 19129  33FF  00F2               	movwf	?_read_I2C_data+1
 19130  3400  0008               	return
 19131  3401                     __end_of_read_I2C_data:	
 19132                           
 19133                           	psect	text65
 19134  3531                     __ptext65:	
 19135 ;; *************** function _I2C_writeRegister *****************
 19136 ;; Defined at:
 19137 ;;		line 104 in file "I2C.c"
 19138 ;; Parameters:    Size  Location     Type
 19139 ;;  slaveAddress    2    5[COMMON] int 
 19140 ;;  regAddress      2    7[COMMON] int 
 19141 ;;  data            2    9[COMMON] int 
 19142 ;; Auto vars:     Size  Location     Type
 19143 ;;		None
 19144 ;; Return value:  Size  Location     Type
 19145 ;;                  1    wreg      void 
 19146 ;; Registers used:
 19147 ;;		wreg, status,2, status,0, pclath, cstack
 19148 ;; Tracked objects:
 19149 ;;		On entry : 0/0
 19150 ;;		On exit  : 0/0
 19151 ;;		Unchanged: 0/0
 19152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19153 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19156 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19157 ;;Total ram usage:        6 bytes
 19158 ;; Hardware stack levels used:    1
 19159 ;; Hardware stack levels required when called:    2
 19160 ;; This function calls:
 19161 ;;		_send_I2C_controlByte
 19162 ;;		_send_I2C_data
 19163 ;;		_send_I2C_startBit
 19164 ;;		_send_I2C_stopBit
 19165 ;; This function is called by:
 19166 ;;		_beginAFEcommunication
 19167 ;;		_setShortCircuitProtection
 19168 ;;		_setOverCurrentDischargeProtection
 19169 ;;		_setCellUndervoltageProtection
 19170 ;;		_setCellOvervoltageProtection
 19171 ;;		_updateCurrent
 19172 ;;		_enableDischarging
 19173 ;;		_enableCharging
 19174 ;; This function uses a non-reentrant model
 19175 ;;
 19176                           
 19177                           
 19178                           ;psect for function _I2C_writeRegister
 19179  3531                     _I2C_writeRegister:	
 19180                           
 19181                           ;I2C.c: 105:     send_I2C_startBit();
 19182                           
 19183                           ;incstack = 0
 19184                           ; Regs used in _I2C_writeRegister: [wreg+status,2+status,0+pclath+cstack]
 19185  3531  31B3  238B  31B5   	fcall	_send_I2C_startBit
 19186                           
 19187                           ;I2C.c: 106:     send_I2C_controlByte(slaveAddress, 0);
 19188  3534  0876               	movf	I2C_writeRegister@slaveAddress+1,w
 19189  3535  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 19190  3536  0875               	movf	I2C_writeRegister@slaveAddress,w
 19191  3537  00F1               	movwf	send_I2C_controlByte@BlockAddress
 19192  3538  3000               	movlw	0
 19193  3539  00F3               	movwf	send_I2C_controlByte@RW_bit
 19194  353A  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 19195  353B  31B3  23B6  31B5   	fcall	_send_I2C_controlByte
 19196                           
 19197                           ;I2C.c: 107:     send_I2C_data(regAddress);
 19198  353E  0878               	movf	I2C_writeRegister@regAddress+1,w
 19199  353F  00F2               	movwf	send_I2C_data@databyte+1
 19200  3540  0877               	movf	I2C_writeRegister@regAddress,w
 19201  3541  00F1               	movwf	send_I2C_data@databyte
 19202  3542  31B3  23A4  31B5   	fcall	_send_I2C_data
 19203                           
 19204                           ;I2C.c: 108:     send_I2C_data(data);
 19205  3545  087A               	movf	I2C_writeRegister@data+1,w
 19206  3546  00F2               	movwf	send_I2C_data@databyte+1
 19207  3547  0879               	movf	I2C_writeRegister@data,w
 19208  3548  00F1               	movwf	send_I2C_data@databyte
 19209  3549  31B3  23A4  31B5   	fcall	_send_I2C_data
 19210                           
 19211                           ;I2C.c: 109:     send_I2C_stopBit();
 19212  354C  31B3  2393         	fcall	_send_I2C_stopBit
 19213  354E  0008               	return
 19214  354F                     __end_of_I2C_writeRegister:	
 19215                           
 19216                           	psect	text66
 19217  3393                     __ptext66:	
 19218 ;; *************** function _send_I2C_stopBit *****************
 19219 ;; Defined at:
 19220 ;;		line 78 in file "I2C.c"
 19221 ;; Parameters:    Size  Location     Type
 19222 ;;		None
 19223 ;; Auto vars:     Size  Location     Type
 19224 ;;		None
 19225 ;; Return value:  Size  Location     Type
 19226 ;;                  1    wreg      void 
 19227 ;; Registers used:
 19228 ;;		None
 19229 ;; Tracked objects:
 19230 ;;		On entry : 0/0
 19231 ;;		On exit  : 0/0
 19232 ;;		Unchanged: 0/0
 19233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19238 ;;Total ram usage:        0 bytes
 19239 ;; Hardware stack levels used:    1
 19240 ;; Hardware stack levels required when called:    1
 19241 ;; This function calls:
 19242 ;;		Nothing
 19243 ;; This function is called by:
 19244 ;;		_I2C_writeRegister
 19245 ;;		_readRegister
 19246 ;; This function uses a non-reentrant model
 19247 ;;
 19248                           
 19249                           
 19250                           ;psect for function _send_I2C_stopBit
 19251  3393                     _send_I2C_stopBit:	
 19252                           
 19253                           ;I2C.c: 79:     PIR1bits.SSP1IF = 0;
 19254                           
 19255                           ;incstack = 0
 19256                           ; Regs used in _send_I2C_stopBit: []
 19257  3393  0020               	movlb	0	; select bank0
 19258  3394  1191               	bcf	17,3	;volatile
 19259                           
 19260                           ;I2C.c: 80:     SSPCON2bits.PEN = 1;
 19261  3395  0024               	movlb	4	; select bank4
 19262  3396  1516               	bsf	22,2	;volatile
 19263  3397                     l308:	
 19264                           ;I2C.c: 81:     while (!PIR1bits.SSP1IF);
 19265                           
 19266  3397  0020               	movlb	0	; select bank0
 19267  3398  1991               	btfsc	17,3	;volatile
 19268  3399  0008               	return
 19269  339A  2B97               	goto	l308
 19270  339B                     __end_of_send_I2C_stopBit:	
 19271                           
 19272                           	psect	text67
 19273  338B                     __ptext67:	
 19274 ;; *************** function _send_I2C_startBit *****************
 19275 ;; Defined at:
 19276 ;;		line 65 in file "I2C.c"
 19277 ;; Parameters:    Size  Location     Type
 19278 ;;		None
 19279 ;; Auto vars:     Size  Location     Type
 19280 ;;		None
 19281 ;; Return value:  Size  Location     Type
 19282 ;;                  1    wreg      void 
 19283 ;; Registers used:
 19284 ;;		None
 19285 ;; Tracked objects:
 19286 ;;		On entry : 0/0
 19287 ;;		On exit  : 0/0
 19288 ;;		Unchanged: 0/0
 19289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19294 ;;Total ram usage:        0 bytes
 19295 ;; Hardware stack levels used:    1
 19296 ;; Hardware stack levels required when called:    1
 19297 ;; This function calls:
 19298 ;;		Nothing
 19299 ;; This function is called by:
 19300 ;;		_I2C_writeRegister
 19301 ;;		_readRegister
 19302 ;; This function uses a non-reentrant model
 19303 ;;
 19304                           
 19305                           
 19306                           ;psect for function _send_I2C_startBit
 19307  338B                     _send_I2C_startBit:	
 19308                           
 19309                           ;I2C.c: 66:     PIR1bits.SSP1IF = 0;
 19310                           
 19311                           ;incstack = 0
 19312                           ; Regs used in _send_I2C_startBit: []
 19313  338B  0020               	movlb	0	; select bank0
 19314  338C  1191               	bcf	17,3	;volatile
 19315                           
 19316                           ;I2C.c: 67:     SSPCON2bits.SEN = 1;
 19317  338D  0024               	movlb	4	; select bank4
 19318  338E  1416               	bsf	22,0	;volatile
 19319  338F                     l296:	
 19320                           ;I2C.c: 68:     while (!PIR1bits.SSP1IF);
 19321                           
 19322  338F  0020               	movlb	0	; select bank0
 19323  3390  1991               	btfsc	17,3	;volatile
 19324  3391  0008               	return
 19325  3392  2B8F               	goto	l296
 19326  3393                     __end_of_send_I2C_startBit:	
 19327                           
 19328                           	psect	text68
 19329  33A4                     __ptext68:	
 19330 ;; *************** function _send_I2C_data *****************
 19331 ;; Defined at:
 19332 ;;		line 33 in file "I2C.c"
 19333 ;; Parameters:    Size  Location     Type
 19334 ;;  databyte        2    1[COMMON] unsigned int 
 19335 ;; Auto vars:     Size  Location     Type
 19336 ;;		None
 19337 ;; Return value:  Size  Location     Type
 19338 ;;                  1    wreg      void 
 19339 ;; Registers used:
 19340 ;;		wreg
 19341 ;; Tracked objects:
 19342 ;;		On entry : 0/0
 19343 ;;		On exit  : 0/0
 19344 ;;		Unchanged: 0/0
 19345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19346 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19349 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19350 ;;Total ram usage:        2 bytes
 19351 ;; Hardware stack levels used:    1
 19352 ;; Hardware stack levels required when called:    1
 19353 ;; This function calls:
 19354 ;;		Nothing
 19355 ;; This function is called by:
 19356 ;;		_I2C_writeRegister
 19357 ;;		_readRegister
 19358 ;; This function uses a non-reentrant model
 19359 ;;
 19360                           
 19361                           
 19362                           ;psect for function _send_I2C_data
 19363  33A4                     _send_I2C_data:	
 19364                           
 19365                           ;I2C.c: 34:     PIR1bits.SSP1IF = 0;
 19366                           
 19367                           ;incstack = 0
 19368                           ; Regs used in _send_I2C_data: [wreg]
 19369  33A4  0020               	movlb	0	; select bank0
 19370  33A5  1191               	bcf	17,3	;volatile
 19371                           
 19372                           ;I2C.c: 35:     SSPBUF = databyte;
 19373  33A6  0871               	movf	send_I2C_data@databyte,w
 19374  33A7  0024               	movlb	4	; select bank4
 19375  33A8  0091               	movwf	17	;volatile
 19376  33A9                     l278:	
 19377                           ;I2C.c: 37:     while (!PIR1bits.SSP1IF);
 19378                           
 19379  33A9  0020               	movlb	0	; select bank0
 19380  33AA  1991               	btfsc	17,3	;volatile
 19381  33AB  0008               	return
 19382  33AC  2BA9               	goto	l278
 19383  33AD                     __end_of_send_I2C_data:	
 19384                           
 19385                           	psect	text69
 19386  33B6                     __ptext69:	
 19387 ;; *************** function _send_I2C_controlByte *****************
 19388 ;; Defined at:
 19389 ;;		line 53 in file "I2C.c"
 19390 ;; Parameters:    Size  Location     Type
 19391 ;;  BlockAddress    2    1[COMMON] unsigned int 
 19392 ;;  RW_bit          2    3[COMMON] unsigned int 
 19393 ;; Auto vars:     Size  Location     Type
 19394 ;;		None
 19395 ;; Return value:  Size  Location     Type
 19396 ;;                  1    wreg      void 
 19397 ;; Registers used:
 19398 ;;		wreg, status,2, status,0
 19399 ;; Tracked objects:
 19400 ;;		On entry : 0/0
 19401 ;;		On exit  : 0/0
 19402 ;;		Unchanged: 0/0
 19403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19404 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19407 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19408 ;;Total ram usage:        4 bytes
 19409 ;; Hardware stack levels used:    1
 19410 ;; Hardware stack levels required when called:    1
 19411 ;; This function calls:
 19412 ;;		Nothing
 19413 ;; This function is called by:
 19414 ;;		_I2C_writeRegister
 19415 ;;		_readRegister
 19416 ;; This function uses a non-reentrant model
 19417 ;;
 19418                           
 19419                           
 19420                           ;psect for function _send_I2C_controlByte
 19421  33B6                     _send_I2C_controlByte:	
 19422                           
 19423                           ;I2C.c: 54:     PIR1bits.SSP1IF = 0;
 19424                           
 19425                           ;incstack = 0
 19426                           ; Regs used in _send_I2C_controlByte: [wreg+status,2+status,0]
 19427  33B6  0020               	movlb	0	; select bank0
 19428  33B7  1191               	bcf	17,3	;volatile
 19429                           
 19430                           ;I2C.c: 60:     SSPBUF = (((0b0000 << 4) | (BlockAddress << 1)) + RW_bit);
 19431  33B8  3571               	lslf	send_I2C_controlByte@BlockAddress,w
 19432  33B9  0773               	addwf	send_I2C_controlByte@RW_bit,w
 19433  33BA  0024               	movlb	4	; select bank4
 19434  33BB  0091               	movwf	17	;volatile
 19435  33BC                     l290:	
 19436                           ;I2C.c: 62:     while (!PIR1bits.SSP1IF);
 19437                           
 19438  33BC  0020               	movlb	0	; select bank0
 19439  33BD  1991               	btfsc	17,3	;volatile
 19440  33BE  0008               	return
 19441  33BF  2BBC               	goto	l290
 19442  33C0                     __end_of_send_I2C_controlByte:	
 19443                           
 19444                           	psect	text70
 19445  33CA                     __ptext70:	
 19446 ;; *************** function _init_TMR1 *****************
 19447 ;; Defined at:
 19448 ;;		line 189 in file "main.c"
 19449 ;; Parameters:    Size  Location     Type
 19450 ;;		None
 19451 ;; Auto vars:     Size  Location     Type
 19452 ;;		None
 19453 ;; Return value:  Size  Location     Type
 19454 ;;                  1    wreg      void 
 19455 ;; Registers used:
 19456 ;;		wreg, status,2, status,0
 19457 ;; Tracked objects:
 19458 ;;		On entry : 0/0
 19459 ;;		On exit  : 0/0
 19460 ;;		Unchanged: 0/0
 19461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19466 ;;Total ram usage:        0 bytes
 19467 ;; Hardware stack levels used:    1
 19468 ;; Hardware stack levels required when called:    1
 19469 ;; This function calls:
 19470 ;;		Nothing
 19471 ;; This function is called by:
 19472 ;;		_main
 19473 ;; This function uses a non-reentrant model
 19474 ;;
 19475                           
 19476                           
 19477                           ;psect for function _init_TMR1
 19478  33CA                     _init_TMR1:	
 19479                           
 19480                           ;main.c: 192:     T1CONbits.T1CKPS = 0b00;
 19481                           
 19482                           ;incstack = 0
 19483                           ; Regs used in _init_TMR1: [wreg+status,2+status,0]
 19484  33CA  30CF               	movlw	-49
 19485  33CB  0020               	movlb	0	; select bank0
 19486  33CC  0598               	andwf	24,f	;volatile
 19487                           
 19488                           ;main.c: 194:     TMR1 = 0;
 19489  33CD  0196               	clrf	22	;volatile
 19490  33CE  0197               	clrf	23	;volatile
 19491                           
 19492                           ;main.c: 196:     T1CONbits.TMR1ON = 1;
 19493  33CF  1418               	bsf	24,0	;volatile
 19494                           
 19495                           ;main.c: 198:     PIE1bits.TMR1IE = 1;
 19496  33D0  0021               	movlb	1	; select bank1
 19497  33D1  1411               	bsf	17,0	;volatile
 19498                           
 19499                           ;main.c: 200:     INTCONbits.PEIE = 1;
 19500  33D2  170B               	bsf	11,6	;volatile
 19501                           
 19502                           ;main.c: 202:     (INTCONbits.GIE = 1);
 19503  33D3  178B               	bsf	11,7	;volatile
 19504  33D4  0008               	return
 19505  33D5                     __end_of_init_TMR1:	
 19506                           
 19507                           	psect	text71
 19508  3386                     __ptext71:	
 19509 ;; *************** function _init_RGB *****************
 19510 ;; Defined at:
 19511 ;;		line 6 in file "RGB.c"
 19512 ;; Parameters:    Size  Location     Type
 19513 ;;		None
 19514 ;; Auto vars:     Size  Location     Type
 19515 ;;		None
 19516 ;; Return value:  Size  Location     Type
 19517 ;;                  1    wreg      void 
 19518 ;; Registers used:
 19519 ;;		None
 19520 ;; Tracked objects:
 19521 ;;		On entry : 0/0
 19522 ;;		On exit  : 0/0
 19523 ;;		Unchanged: 0/0
 19524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19529 ;;Total ram usage:        0 bytes
 19530 ;; Hardware stack levels used:    1
 19531 ;; Hardware stack levels required when called:    1
 19532 ;; This function calls:
 19533 ;;		Nothing
 19534 ;; This function is called by:
 19535 ;;		_main
 19536 ;; This function uses a non-reentrant model
 19537 ;;
 19538                           
 19539                           
 19540                           ;psect for function _init_RGB
 19541  3386                     _init_RGB:	
 19542                           
 19543                           ;RGB.c: 8:     LATAbits.LATA4 = 1;
 19544                           
 19545                           ;incstack = 0
 19546                           ; Regs used in _init_RGB: []
 19547  3386  0022               	movlb	2	; select bank2
 19548  3387  160C               	bsf	12,4	;volatile
 19549                           
 19550                           ;RGB.c: 9:     LATAbits.LATA5 = 1;
 19551  3388  168C               	bsf	12,5	;volatile
 19552                           
 19553                           ;RGB.c: 10:     LATEbits.LATE0 = 1;
 19554  3389  1410               	bsf	16,0	;volatile
 19555  338A  0008               	return
 19556  338B                     __end_of_init_RGB:	
 19557                           
 19558                           	psect	text72
 19559  33E1                     __ptext72:	
 19560 ;; *************** function _init_I2C *****************
 19561 ;; Defined at:
 19562 ;;		line 10 in file "I2C.c"
 19563 ;; Parameters:    Size  Location     Type
 19564 ;;		None
 19565 ;; Auto vars:     Size  Location     Type
 19566 ;;		None
 19567 ;; Return value:  Size  Location     Type
 19568 ;;                  1    wreg      void 
 19569 ;; Registers used:
 19570 ;;		wreg, status,2, status,0
 19571 ;; Tracked objects:
 19572 ;;		On entry : 0/0
 19573 ;;		On exit  : 0/0
 19574 ;;		Unchanged: 0/0
 19575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19578 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19579 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19580 ;;Total ram usage:        1 bytes
 19581 ;; Hardware stack levels used:    1
 19582 ;; Hardware stack levels required when called:    1
 19583 ;; This function calls:
 19584 ;;		Nothing
 19585 ;; This function is called by:
 19586 ;;		_main
 19587 ;; This function uses a non-reentrant model
 19588 ;;
 19589                           
 19590                           
 19591                           ;psect for function _init_I2C
 19592  33E1                     _init_I2C:	
 19593                           
 19594                           ;I2C.c: 14:     SSPCONbits.SSPM = 0x08;
 19595                           
 19596                           ;incstack = 0
 19597                           ; Regs used in _init_I2C: [wreg+status,2+status,0]
 19598  33E1  0024               	movlb	4	; select bank4
 19599  33E2  0815               	movf	21,w	;volatile
 19600  33E3  39F0               	andlw	-16
 19601  33E4  3808               	iorlw	8
 19602  33E5  0095               	movwf	21	;volatile
 19603                           
 19604                           ;I2C.c: 15:     SSPCONbits.SSPEN = 1;
 19605  33E6  1695               	bsf	21,5	;volatile
 19606                           
 19607                           ;I2C.c: 24:     SSPADD = 39;
 19608  33E7  3027               	movlw	39
 19609  33E8  0092               	movwf	18	;volatile
 19610                           
 19611                           ;I2C.c: 27:     _delay((unsigned long)((10)*(16000000/4000.0)));
 19612  33E9  3034               	movlw	52
 19613  33EA  00F1               	movwf	??_init_I2C
 19614  33EB  30F2               	movlw	242
 19615  33EC                     u11527:	
 19616  33EC  0B89               	decfsz	9,f
 19617  33ED  2BEC               	goto	u11527
 19618  33EE  0BF1               	decfsz	??_init_I2C,f
 19619  33EF  2BEC               	goto	u11527
 19620  33F0  0008               	return
 19621  33F1                     __end_of_init_I2C:	
 19622                           
 19623                           	psect	text73
 19624  0808                     __ptext73:	
 19625 ;; *************** function _init_GPIO *****************
 19626 ;; Defined at:
 19627 ;;		line 206 in file "main.c"
 19628 ;; Parameters:    Size  Location     Type
 19629 ;;		None
 19630 ;; Auto vars:     Size  Location     Type
 19631 ;;		None
 19632 ;; Return value:  Size  Location     Type
 19633 ;;                  1    wreg      void 
 19634 ;; Registers used:
 19635 ;;		wreg, status,2, status,0
 19636 ;; Tracked objects:
 19637 ;;		On entry : 0/0
 19638 ;;		On exit  : 0/0
 19639 ;;		Unchanged: 0/0
 19640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19645 ;;Total ram usage:        0 bytes
 19646 ;; Hardware stack levels used:    1
 19647 ;; Hardware stack levels required when called:    1
 19648 ;; This function calls:
 19649 ;;		Nothing
 19650 ;; This function is called by:
 19651 ;;		_main
 19652 ;; This function uses a non-reentrant model
 19653 ;;
 19654                           
 19655                           
 19656                           ;psect for function _init_GPIO
 19657  0808                     _init_GPIO:	
 19658                           
 19659                           ;main.c: 212:     TRISBbits.TRISB2 = 0;
 19660                           
 19661                           ;incstack = 0
 19662                           ; Regs used in _init_GPIO: [wreg+status,2+status,0]
 19663  0808  0021               	movlb	1	; select bank1
 19664  0809  110D               	bcf	13,2	;volatile
 19665                           
 19666                           ;main.c: 213:     ANSELBbits.ANSB2 = 0;
 19667  080A  0023               	movlb	3	; select bank3
 19668  080B  110D               	bcf	13,2	;volatile
 19669                           
 19670                           ;main.c: 214:     TRISBbits.TRISB3 = 1;
 19671  080C  0021               	movlb	1	; select bank1
 19672  080D  158D               	bsf	13,3	;volatile
 19673                           
 19674                           ;main.c: 215:     ANSELBbits.ANSB3 = 0;
 19675  080E  0023               	movlb	3	; select bank3
 19676  080F  118D               	bcf	13,3	;volatile
 19677                           
 19678                           ;main.c: 220:     ANSELCbits.ANSC4 = 0;
 19679  0810  120E               	bcf	14,4	;volatile
 19680                           
 19681                           ;main.c: 221:     ANSELCbits.ANSC5 = 0;
 19682  0811  128E               	bcf	14,5	;volatile
 19683                           
 19684                           ;main.c: 222:     TRISCbits.TRISC4 = 1;
 19685  0812  0021               	movlb	1	; select bank1
 19686  0813  160E               	bsf	14,4	;volatile
 19687                           
 19688                           ;main.c: 223:     TRISCbits.TRISC5 = 1;
 19689  0814  168E               	bsf	14,5	;volatile
 19690                           
 19691                           ;main.c: 232:     TRISAbits.TRISA4 = 0;
 19692  0815  120C               	bcf	12,4	;volatile
 19693                           
 19694                           ;main.c: 233:     TRISAbits.TRISA5 = 0;
 19695  0816  128C               	bcf	12,5	;volatile
 19696                           
 19697                           ;main.c: 234:     TRISEbits.TRISE0 = 0;
 19698  0817  1010               	bcf	16,0	;volatile
 19699                           
 19700                           ;main.c: 239:     TRISAbits.TRISA3 = 0;
 19701  0818  118C               	bcf	12,3	;volatile
 19702                           
 19703                           ;main.c: 240:     LATAbits.LATA3 = 0;
 19704  0819  0022               	movlb	2	; select bank2
 19705  081A  118C               	bcf	12,3	;volatile
 19706                           
 19707                           ;main.c: 246:     PPSLOCK = 0x55;
 19708  081B  3055               	movlw	85
 19709  081C  003C               	movlb	28	; select bank28
 19710  081D  008F               	movwf	15	;volsfr
 19711                           
 19712                           ;main.c: 247:     PPSLOCK = 0xAA;
 19713  081E  30AA               	movlw	170
 19714  081F  008F               	movwf	15	;volsfr
 19715                           
 19716                           ;main.c: 248:     PPSLOCKbits.PPSLOCKED = 0x00;
 19717  0820  100F               	bcf	15,0	;volsfr
 19718                           
 19719                           ;main.c: 252:     RC4PPSbits.RC4PPS = 0x0011;
 19720  0821  003D               	movlb	29	; select bank29
 19721  0822  0824               	movf	36,w	;volatile
 19722  0823  39E0               	andlw	-32
 19723  0824  3811               	iorlw	17
 19724  0825  00A4               	movwf	36	;volatile
 19725                           
 19726                           ;main.c: 253:     SSPDATPPSbits.SSPDATPPS = 0x0014;
 19727  0826  003C               	movlb	28	; select bank28
 19728  0827  0821               	movf	33,w	;volatile
 19729  0828  39E0               	andlw	-32
 19730  0829  3814               	iorlw	20
 19731  082A  00A1               	movwf	33	;volatile
 19732                           
 19733                           ;main.c: 254:     SSPCLKPPSbits.SSPCLKPPS = 0x0015;
 19734  082B  0820               	movf	32,w	;volatile
 19735  082C  39E0               	andlw	-32
 19736  082D  3815               	iorlw	21
 19737  082E  00A0               	movwf	32	;volatile
 19738                           
 19739                           ;main.c: 255:     RC5PPSbits.RC5PPS = 0x0010;
 19740  082F  003D               	movlb	29	; select bank29
 19741  0830  0825               	movf	37,w	;volatile
 19742  0831  39E0               	andlw	-32
 19743  0832  3810               	iorlw	16
 19744  0833  00A5               	movwf	37	;volatile
 19745                           
 19746                           ;main.c: 258:     RB2PPSbits.RB2PPS = 0x14;
 19747  0834  081A               	movf	26,w	;volatile
 19748  0835  39E0               	andlw	-32
 19749  0836  3814               	iorlw	20
 19750  0837  009A               	movwf	26	;volatile
 19751                           
 19752                           ;main.c: 259:     RXPPSbits.RXPPS = 0x0B;
 19753  0838  003C               	movlb	28	; select bank28
 19754  0839  0824               	movf	36,w	;volatile
 19755  083A  39E0               	andlw	-32
 19756  083B  380B               	iorlw	11
 19757  083C  00A4               	movwf	36	;volatile
 19758                           
 19759                           ;main.c: 261:     PPSLOCK = 0x55;
 19760  083D  3055               	movlw	85
 19761  083E  008F               	movwf	15	;volsfr
 19762                           
 19763                           ;main.c: 262:     PPSLOCK = 0xAA;
 19764  083F  30AA               	movlw	170
 19765  0840  008F               	movwf	15	;volsfr
 19766                           
 19767                           ;main.c: 263:     PPSLOCKbits.PPSLOCKED = 0x01;
 19768  0841  140F               	bsf	15,0	;volsfr
 19769  0842  0008               	return
 19770  0843                     __end_of_init_GPIO:	
 19771                           
 19772                           	psect	text74
 19773  2000                     __ptext74:	
 19774 ;; *************** function _initWDT *****************
 19775 ;; Defined at:
 19776 ;;		line 267 in file "main.c"
 19777 ;; Parameters:    Size  Location     Type
 19778 ;;		None
 19779 ;; Auto vars:     Size  Location     Type
 19780 ;;		None
 19781 ;; Return value:  Size  Location     Type
 19782 ;;                  1    wreg      void 
 19783 ;; Registers used:
 19784 ;;		wreg, status,2, status,0
 19785 ;; Tracked objects:
 19786 ;;		On entry : 0/0
 19787 ;;		On exit  : 0/0
 19788 ;;		Unchanged: 0/0
 19789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19794 ;;Total ram usage:        0 bytes
 19795 ;; Hardware stack levels used:    1
 19796 ;; Hardware stack levels required when called:    1
 19797 ;; This function calls:
 19798 ;;		Nothing
 19799 ;; This function is called by:
 19800 ;;		_main
 19801 ;; This function uses a non-reentrant model
 19802 ;;
 19803                           
 19804                           
 19805                           ;psect for function _initWDT
 19806  2000                     _initWDT:	
 19807                           
 19808                           ;main.c: 269:     WDTCONbits.WDTPS = 0b01101;
 19809                           
 19810                           ;incstack = 0
 19811                           ; Regs used in _initWDT: [wreg+status,2+status,0]
 19812  2000  0021               	movlb	1	; select bank1
 19813  2001  0817               	movf	23,w	;volatile
 19814  2002  39C1               	andlw	-63
 19815  2003  381A               	iorlw	26
 19816  2004  0097               	movwf	23	;volatile
 19817  2005  0008               	return
 19818  2006                     __end_of_initWDT:	
 19819                           
 19820                           	psect	text75
 19821  07FD                     __ptext75:	
 19822 ;; *************** function _initClock *****************
 19823 ;; Defined at:
 19824 ;;		line 180 in file "main.c"
 19825 ;; Parameters:    Size  Location     Type
 19826 ;;		None
 19827 ;; Auto vars:     Size  Location     Type
 19828 ;;		None
 19829 ;; Return value:  Size  Location     Type
 19830 ;;                  1    wreg      void 
 19831 ;; Registers used:
 19832 ;;		status,2, status,0, pclath, cstack
 19833 ;; Tracked objects:
 19834 ;;		On entry : 0/0
 19835 ;;		On exit  : 0/0
 19836 ;;		Unchanged: 0/0
 19837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19842 ;;Total ram usage:        0 bytes
 19843 ;; Hardware stack levels used:    1
 19844 ;; Hardware stack levels required when called:    2
 19845 ;; This function calls:
 19846 ;;		_internal_16
 19847 ;; This function is called by:
 19848 ;;		_main
 19849 ;; This function uses a non-reentrant model
 19850 ;;
 19851                           
 19852                           
 19853                           ;psect for function _initClock
 19854  07FD                     _initClock:	
 19855                           
 19856                           ;main.c: 182:     internal_16();
 19857                           
 19858                           ;incstack = 0
 19859                           ; Regs used in _initClock: [status,2+status,0+pclath+cstack]
 19860  07FD  31B3  239B         	fcall	_internal_16
 19861  07FF  0008               	return
 19862  0800                     __end_of_initClock:	
 19863                           
 19864                           	psect	text76
 19865  339B                     __ptext76:	
 19866 ;; *************** function _internal_16 *****************
 19867 ;; Defined at:
 19868 ;;		line 26 in file "pic16f1719_internals.c"
 19869 ;; Parameters:    Size  Location     Type
 19870 ;;		None
 19871 ;; Auto vars:     Size  Location     Type
 19872 ;;		None
 19873 ;; Return value:  Size  Location     Type
 19874 ;;                  1    wreg      void 
 19875 ;; Registers used:
 19876 ;;		None
 19877 ;; Tracked objects:
 19878 ;;		On entry : 0/0
 19879 ;;		On exit  : 0/0
 19880 ;;		Unchanged: 0/0
 19881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19886 ;;Total ram usage:        0 bytes
 19887 ;; Hardware stack levels used:    1
 19888 ;; Hardware stack levels required when called:    1
 19889 ;; This function calls:
 19890 ;;		Nothing
 19891 ;; This function is called by:
 19892 ;;		_initClock
 19893 ;; This function uses a non-reentrant model
 19894 ;;
 19895                           
 19896                           
 19897                           ;psect for function _internal_16
 19898  339B                     _internal_16:	
 19899                           
 19900                           ;pic16f1719_internals.c: 28: SCS0 = 0;
 19901                           
 19902                           ;incstack = 0
 19903                           ; Regs used in _internal_16: []
 19904  339B  0021               	movlb	1	; select bank1
 19905  339C  1019               	bcf	25,0	;volatile
 19906                           
 19907                           ;pic16f1719_internals.c: 29: SCS1 = 0;
 19908  339D  1099               	bcf	25,1	;volatile
 19909                           
 19910                           ;pic16f1719_internals.c: 31: IRCF0 = 1;
 19911  339E  1599               	bsf	25,3	;volatile
 19912                           
 19913                           ;pic16f1719_internals.c: 32: IRCF1 = 1;
 19914  339F  1619               	bsf	25,4	;volatile
 19915                           
 19916                           ;pic16f1719_internals.c: 33: IRCF2 = 1;
 19917  33A0  1699               	bsf	25,5	;volatile
 19918                           
 19919                           ;pic16f1719_internals.c: 34: IRCF3 = 1;
 19920  33A1  1719               	bsf	25,6	;volatile
 19921                           
 19922                           ;pic16f1719_internals.c: 36: SPLLEN = 0;
 19923  33A2  1399               	bcf	25,7	;volatile
 19924  33A3  0008               	return
 19925  33A4                     __end_of_internal_16:	
 19926                           
 19927                           	psect	text77
 19928  2D0A                     __ptext77:	
 19929 ;; *************** function _EUSART_Initialize *****************
 19930 ;; Defined at:
 19931 ;;		line 6 in file "EUSART.c"
 19932 ;; Parameters:    Size  Location     Type
 19933 ;;  baudrate        4   18[BANK0 ] const long 
 19934 ;; Auto vars:     Size  Location     Type
 19935 ;;  x               2   10[COMMON] unsigned int 
 19936 ;; Return value:  Size  Location     Type
 19937 ;;                  1    wreg      unsigned char 
 19938 ;; Registers used:
 19939 ;;		wreg, status,2, status,0, pclath, cstack
 19940 ;; Tracked objects:
 19941 ;;		On entry : 0/0
 19942 ;;		On exit  : 0/0
 19943 ;;		Unchanged: 0/0
 19944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19945 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19946 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19947 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19948 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19949 ;;Total ram usage:       18 bytes
 19950 ;; Hardware stack levels used:    1
 19951 ;; Hardware stack levels required when called:    2
 19952 ;; This function calls:
 19953 ;;		___aldiv
 19954 ;; This function is called by:
 19955 ;;		_main
 19956 ;; This function uses a non-reentrant model
 19957 ;;
 19958                           
 19959                           
 19960                           ;psect for function _EUSART_Initialize
 19961  2D0A                     _EUSART_Initialize:	
 19962                           
 19963                           ;EUSART.c: 6: char EUSART_Initialize(const long int baudrate);EUSART.c: 7: {;EUSART.c: 8
      +                          :  unsigned int x;;EUSART.c: 9:  x = (16000000 - baudrate*64)/(baudrate*64);
 19964                           
 19965                           ;incstack = 0
 19966                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 19967  2D0A  0020               	movlb	0	; select bank0
 19968  2D0B  0832               	movf	EUSART_Initialize@baudrate,w
 19969  2D0C  00B6               	movwf	??_EUSART_Initialize
 19970  2D0D  0833               	movf	EUSART_Initialize@baudrate+1,w
 19971  2D0E  00B7               	movwf	??_EUSART_Initialize+1
 19972  2D0F  0834               	movf	EUSART_Initialize@baudrate+2,w
 19973  2D10  00B8               	movwf	??_EUSART_Initialize+2
 19974  2D11  0835               	movf	EUSART_Initialize@baudrate+3,w
 19975  2D12  00B9               	movwf	??_EUSART_Initialize+3
 19976  2D13  3006               	movlw	6
 19977  2D14                     u11405:	
 19978  2D14  35B6               	lslf	??_EUSART_Initialize,f
 19979  2D15  0DB7               	rlf	??_EUSART_Initialize+1,f
 19980  2D16  0DB8               	rlf	??_EUSART_Initialize+2,f
 19981  2D17  0DB9               	rlf	??_EUSART_Initialize+3,f
 19982  2D18  0B89               	decfsz	9,f
 19983  2D19  2D14               	goto	u11405
 19984  2D1A  0839               	movf	??_EUSART_Initialize+3,w
 19985  2D1B  00A7               	movwf	___aldiv@divisor+3
 19986  2D1C  0838               	movf	??_EUSART_Initialize+2,w
 19987  2D1D  00A6               	movwf	___aldiv@divisor+2
 19988  2D1E  0837               	movf	??_EUSART_Initialize+1,w
 19989  2D1F  00A5               	movwf	___aldiv@divisor+1
 19990  2D20  0836               	movf	??_EUSART_Initialize,w
 19991  2D21  00A4               	movwf	___aldiv@divisor
 19992  2D22  0832               	movf	EUSART_Initialize@baudrate,w
 19993  2D23  00BA               	movwf	??_EUSART_Initialize+4
 19994  2D24  0833               	movf	EUSART_Initialize@baudrate+1,w
 19995  2D25  00BB               	movwf	??_EUSART_Initialize+5
 19996  2D26  0834               	movf	EUSART_Initialize@baudrate+2,w
 19997  2D27  00BC               	movwf	??_EUSART_Initialize+6
 19998  2D28  0835               	movf	EUSART_Initialize@baudrate+3,w
 19999  2D29  00BD               	movwf	??_EUSART_Initialize+7
 20000  2D2A  3006               	movlw	6
 20001  2D2B                     u11415:	
 20002  2D2B  35BA               	lslf	??_EUSART_Initialize+4,f
 20003  2D2C  0DBB               	rlf	??_EUSART_Initialize+5,f
 20004  2D2D  0DBC               	rlf	??_EUSART_Initialize+6,f
 20005  2D2E  0DBD               	rlf	??_EUSART_Initialize+7,f
 20006  2D2F  0B89               	decfsz	9,f
 20007  2D30  2D2B               	goto	u11415
 20008  2D31  3000               	movlw	0
 20009  2D32  00BE               	movwf	??_EUSART_Initialize+8
 20010  2D33  3024               	movlw	36
 20011  2D34  00BF               	movwf	??_EUSART_Initialize+9
 20012  2D35  30F4               	movlw	244
 20013  2D36  00C0               	movwf	??_EUSART_Initialize+10
 20014  2D37  3000               	movlw	0
 20015  2D38  00C1               	movwf	??_EUSART_Initialize+11
 20016  2D39  083A               	movf	??_EUSART_Initialize+4,w
 20017  2D3A  02BE               	subwf	??_EUSART_Initialize+8,f
 20018  2D3B  083B               	movf	??_EUSART_Initialize+5,w
 20019  2D3C  3BBF               	subwfb	??_EUSART_Initialize+9,f
 20020  2D3D  083C               	movf	??_EUSART_Initialize+6,w
 20021  2D3E  3BC0               	subwfb	??_EUSART_Initialize+10,f
 20022  2D3F  083D               	movf	??_EUSART_Initialize+7,w
 20023  2D40  3BC1               	subwfb	??_EUSART_Initialize+11,f
 20024  2D41  0841               	movf	??_EUSART_Initialize+11,w
 20025  2D42  00AB               	movwf	___aldiv@dividend+3
 20026  2D43  0840               	movf	??_EUSART_Initialize+10,w
 20027  2D44  00AA               	movwf	___aldiv@dividend+2
 20028  2D45  083F               	movf	??_EUSART_Initialize+9,w
 20029  2D46  00A9               	movwf	___aldiv@dividend+1
 20030  2D47  083E               	movf	??_EUSART_Initialize+8,w
 20031  2D48  00A8               	movwf	___aldiv@dividend
 20032  2D49  31AB  2351  31AD   	fcall	___aldiv
 20033  2D4C  0020               	movlb	0	; select bank0
 20034  2D4D  0825               	movf	?___aldiv+1,w
 20035  2D4E  00FB               	movwf	EUSART_Initialize@x+1
 20036  2D4F  0824               	movf	?___aldiv,w
 20037  2D50  00FA               	movwf	EUSART_Initialize@x
 20038                           
 20039                           ;EUSART.c: 10:  if(x>255)
 20040  2D51  3001               	movlw	1
 20041  2D52  027B               	subwf	EUSART_Initialize@x+1,w
 20042  2D53  3000               	movlw	0
 20043  2D54  1903               	skipnz
 20044  2D55  027A               	subwf	EUSART_Initialize@x,w
 20045  2D56  1C03               	skipc
 20046  2D57  2DA0               	goto	l8350
 20047                           
 20048                           ;EUSART.c: 11:  {;EUSART.c: 12:   x = (16000000 - baudrate*16)/(baudrate*16);
 20049  2D58  0832               	movf	EUSART_Initialize@baudrate,w
 20050  2D59  00B6               	movwf	??_EUSART_Initialize
 20051  2D5A  0833               	movf	EUSART_Initialize@baudrate+1,w
 20052  2D5B  00B7               	movwf	??_EUSART_Initialize+1
 20053  2D5C  0834               	movf	EUSART_Initialize@baudrate+2,w
 20054  2D5D  00B8               	movwf	??_EUSART_Initialize+2
 20055  2D5E  0835               	movf	EUSART_Initialize@baudrate+3,w
 20056  2D5F  00B9               	movwf	??_EUSART_Initialize+3
 20057  2D60  3004               	movlw	4
 20058  2D61                     u11435:	
 20059  2D61  35B6               	lslf	??_EUSART_Initialize,f
 20060  2D62  0DB7               	rlf	??_EUSART_Initialize+1,f
 20061  2D63  0DB8               	rlf	??_EUSART_Initialize+2,f
 20062  2D64  0DB9               	rlf	??_EUSART_Initialize+3,f
 20063  2D65  0B89               	decfsz	9,f
 20064  2D66  2D61               	goto	u11435
 20065  2D67  0839               	movf	??_EUSART_Initialize+3,w
 20066  2D68  00A7               	movwf	___aldiv@divisor+3
 20067  2D69  0838               	movf	??_EUSART_Initialize+2,w
 20068  2D6A  00A6               	movwf	___aldiv@divisor+2
 20069  2D6B  0837               	movf	??_EUSART_Initialize+1,w
 20070  2D6C  00A5               	movwf	___aldiv@divisor+1
 20071  2D6D  0836               	movf	??_EUSART_Initialize,w
 20072  2D6E  00A4               	movwf	___aldiv@divisor
 20073  2D6F  0832               	movf	EUSART_Initialize@baudrate,w
 20074  2D70  00BA               	movwf	??_EUSART_Initialize+4
 20075  2D71  0833               	movf	EUSART_Initialize@baudrate+1,w
 20076  2D72  00BB               	movwf	??_EUSART_Initialize+5
 20077  2D73  0834               	movf	EUSART_Initialize@baudrate+2,w
 20078  2D74  00BC               	movwf	??_EUSART_Initialize+6
 20079  2D75  0835               	movf	EUSART_Initialize@baudrate+3,w
 20080  2D76  00BD               	movwf	??_EUSART_Initialize+7
 20081  2D77  3004               	movlw	4
 20082  2D78                     u11445:	
 20083  2D78  35BA               	lslf	??_EUSART_Initialize+4,f
 20084  2D79  0DBB               	rlf	??_EUSART_Initialize+5,f
 20085  2D7A  0DBC               	rlf	??_EUSART_Initialize+6,f
 20086  2D7B  0DBD               	rlf	??_EUSART_Initialize+7,f
 20087  2D7C  0B89               	decfsz	9,f
 20088  2D7D  2D78               	goto	u11445
 20089  2D7E  3000               	movlw	0
 20090  2D7F  00BE               	movwf	??_EUSART_Initialize+8
 20091  2D80  3024               	movlw	36
 20092  2D81  00BF               	movwf	??_EUSART_Initialize+9
 20093  2D82  30F4               	movlw	244
 20094  2D83  00C0               	movwf	??_EUSART_Initialize+10
 20095  2D84  3000               	movlw	0
 20096  2D85  00C1               	movwf	??_EUSART_Initialize+11
 20097  2D86  083A               	movf	??_EUSART_Initialize+4,w
 20098  2D87  02BE               	subwf	??_EUSART_Initialize+8,f
 20099  2D88  083B               	movf	??_EUSART_Initialize+5,w
 20100  2D89  3BBF               	subwfb	??_EUSART_Initialize+9,f
 20101  2D8A  083C               	movf	??_EUSART_Initialize+6,w
 20102  2D8B  3BC0               	subwfb	??_EUSART_Initialize+10,f
 20103  2D8C  083D               	movf	??_EUSART_Initialize+7,w
 20104  2D8D  3BC1               	subwfb	??_EUSART_Initialize+11,f
 20105  2D8E  0841               	movf	??_EUSART_Initialize+11,w
 20106  2D8F  00AB               	movwf	___aldiv@dividend+3
 20107  2D90  0840               	movf	??_EUSART_Initialize+10,w
 20108  2D91  00AA               	movwf	___aldiv@dividend+2
 20109  2D92  083F               	movf	??_EUSART_Initialize+9,w
 20110  2D93  00A9               	movwf	___aldiv@dividend+1
 20111  2D94  083E               	movf	??_EUSART_Initialize+8,w
 20112  2D95  00A8               	movwf	___aldiv@dividend
 20113  2D96  31AB  2351  31AD   	fcall	___aldiv
 20114  2D99  0020               	movlb	0	; select bank0
 20115  2D9A  0825               	movf	?___aldiv+1,w
 20116  2D9B  00FB               	movwf	EUSART_Initialize@x+1
 20117  2D9C  0824               	movf	?___aldiv,w
 20118  2D9D  00FA               	movwf	EUSART_Initialize@x
 20119                           
 20120                           ;EUSART.c: 13:   BRGH = 1;
 20121  2D9E  0023               	movlb	3	; select bank3
 20122  2D9F  151E               	bsf	30,2	;volatile
 20123  2DA0                     l8350:	
 20124                           
 20125                           ;EUSART.c: 15:  if(x<256)
 20126  2DA0  3001               	movlw	1
 20127  2DA1  027B               	subwf	EUSART_Initialize@x+1,w
 20128  2DA2  3000               	movlw	0
 20129  2DA3  1903               	skipnz
 20130  2DA4  027A               	subwf	EUSART_Initialize@x,w
 20131  2DA5  1803               	skipnc
 20132  2DA6  0008               	return
 20133                           
 20134                           ;EUSART.c: 16:  {;EUSART.c: 17:    SPBRG = x;
 20135  2DA7  087A               	movf	EUSART_Initialize@x,w
 20136  2DA8  0023               	movlb	3	; select bank3
 20137  2DA9  009B               	movwf	27	;volatile
 20138                           
 20139                           ;EUSART.c: 18:    SYNC = 0;
 20140  2DAA  121E               	bcf	30,4	;volatile
 20141                           
 20142                           ;EUSART.c: 19:    SPEN = 1;
 20143  2DAB  179D               	bsf	29,7	;volatile
 20144                           
 20145                           ;EUSART.c: 20:           TRISC7 = 1;
 20146  2DAC  0021               	movlb	1	; select bank1
 20147  2DAD  178E               	bsf	14,7	;volatile
 20148                           
 20149                           ;EUSART.c: 21:           TRISC6 = 1;
 20150  2DAE  170E               	bsf	14,6	;volatile
 20151                           
 20152                           ;EUSART.c: 22:           CREN = 1;
 20153  2DAF  0023               	movlb	3	; select bank3
 20154  2DB0  161D               	bsf	29,4	;volatile
 20155                           
 20156                           ;EUSART.c: 23:           TXEN = 1;
 20157  2DB1  169E               	bsf	30,5	;volatile
 20158  2DB2  0008               	return
 20159  2DB3                     __end_of_EUSART_Initialize:	
 20160                           
 20161                           	psect	text78
 20162  2B51                     __ptext78:	
 20163 ;; *************** function ___aldiv *****************
 20164 ;; Defined at:
 20165 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
 20166 ;; Parameters:    Size  Location     Type
 20167 ;;  divisor         4    4[BANK0 ] long 
 20168 ;;  dividend        4    8[BANK0 ] long 
 20169 ;; Auto vars:     Size  Location     Type
 20170 ;;  quotient        4   14[BANK0 ] long 
 20171 ;;  sign            1   13[BANK0 ] unsigned char 
 20172 ;;  counter         1   12[BANK0 ] unsigned char 
 20173 ;; Return value:  Size  Location     Type
 20174 ;;                  4    4[BANK0 ] long 
 20175 ;; Registers used:
 20176 ;;		wreg, status,2, status,0
 20177 ;; Tracked objects:
 20178 ;;		On entry : 0/0
 20179 ;;		On exit  : 0/0
 20180 ;;		Unchanged: 0/0
 20181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20182 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20183 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20184 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20185 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20186 ;;Total ram usage:       15 bytes
 20187 ;; Hardware stack levels used:    1
 20188 ;; Hardware stack levels required when called:    1
 20189 ;; This function calls:
 20190 ;;		Nothing
 20191 ;; This function is called by:
 20192 ;;		_EUSART_Initialize
 20193 ;;		_setCellUndervoltageProtection
 20194 ;;		_setCellOvervoltageProtection
 20195 ;;		_updateVoltages
 20196 ;; This function uses a non-reentrant model
 20197 ;;
 20198                           
 20199                           
 20200                           ;psect for function ___aldiv
 20201  2B51                     ___aldiv:	
 20202                           
 20203                           ;incstack = 0
 20204                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 20205  2B51  0020               	movlb	0	; select bank0
 20206  2B52  01AD               	clrf	___aldiv@sign
 20207  2B53  1FA7               	btfss	___aldiv@divisor+3,7
 20208  2B54  2B62               	goto	l912
 20209  2B55  09A4               	comf	___aldiv@divisor,f
 20210  2B56  09A5               	comf	___aldiv@divisor+1,f
 20211  2B57  09A6               	comf	___aldiv@divisor+2,f
 20212  2B58  09A7               	comf	___aldiv@divisor+3,f
 20213  2B59  0AA4               	incf	___aldiv@divisor,f
 20214  2B5A  1903               	skipnz
 20215  2B5B  0AA5               	incf	___aldiv@divisor+1,f
 20216  2B5C  1903               	skipnz
 20217  2B5D  0AA6               	incf	___aldiv@divisor+2,f
 20218  2B5E  1903               	skipnz
 20219  2B5F  0AA7               	incf	___aldiv@divisor+3,f
 20220  2B60  01AD               	clrf	___aldiv@sign
 20221  2B61  0AAD               	incf	___aldiv@sign,f
 20222  2B62                     l912:	
 20223  2B62  1FAB               	btfss	___aldiv@dividend+3,7
 20224  2B63  2B73               	goto	l7890
 20225  2B64  09A8               	comf	___aldiv@dividend,f
 20226  2B65  09A9               	comf	___aldiv@dividend+1,f
 20227  2B66  09AA               	comf	___aldiv@dividend+2,f
 20228  2B67  09AB               	comf	___aldiv@dividend+3,f
 20229  2B68  0AA8               	incf	___aldiv@dividend,f
 20230  2B69  1903               	skipnz
 20231  2B6A  0AA9               	incf	___aldiv@dividend+1,f
 20232  2B6B  1903               	skipnz
 20233  2B6C  0AAA               	incf	___aldiv@dividend+2,f
 20234  2B6D  1903               	skipnz
 20235  2B6E  0AAB               	incf	___aldiv@dividend+3,f
 20236  2B6F  3001               	movlw	1
 20237  2B70  00F9               	movwf	??___aldiv
 20238  2B71  0879               	movf	??___aldiv,w
 20239  2B72  06AD               	xorwf	___aldiv@sign,f
 20240  2B73                     l7890:	
 20241  2B73  3000               	movlw	0
 20242  2B74  00B1               	movwf	___aldiv@quotient+3
 20243  2B75  3000               	movlw	0
 20244  2B76  00B0               	movwf	___aldiv@quotient+2
 20245  2B77  3000               	movlw	0
 20246  2B78  00AF               	movwf	___aldiv@quotient+1
 20247  2B79  3000               	movlw	0
 20248  2B7A  00AE               	movwf	___aldiv@quotient
 20249  2B7B  0827               	movf	___aldiv@divisor+3,w
 20250  2B7C  0426               	iorwf	___aldiv@divisor+2,w
 20251  2B7D  0425               	iorwf	___aldiv@divisor+1,w
 20252  2B7E  0424               	iorwf	___aldiv@divisor,w
 20253  2B7F  1903               	skipnz
 20254  2B80  2BBC               	goto	l7912
 20255  2B81  01AC               	clrf	___aldiv@counter
 20256  2B82  0AAC               	incf	___aldiv@counter,f
 20257  2B83                     l7898:	
 20258  2B83  1BA7               	btfsc	___aldiv@divisor+3,7
 20259  2B84  2B91               	goto	l7900
 20260  2B85  3001               	movlw	1
 20261  2B86                     u10855:	
 20262  2B86  35A4               	lslf	___aldiv@divisor,f
 20263  2B87  0DA5               	rlf	___aldiv@divisor+1,f
 20264  2B88  0DA6               	rlf	___aldiv@divisor+2,f
 20265  2B89  0DA7               	rlf	___aldiv@divisor+3,f
 20266  2B8A  0B89               	decfsz	9,f
 20267  2B8B  2B86               	goto	u10855
 20268  2B8C  3001               	movlw	1
 20269  2B8D  00F9               	movwf	??___aldiv
 20270  2B8E  0879               	movf	??___aldiv,w
 20271  2B8F  07AC               	addwf	___aldiv@counter,f
 20272  2B90  2B83               	goto	l7898
 20273  2B91                     l7900:	
 20274  2B91  3001               	movlw	1
 20275  2B92                     u10875:	
 20276  2B92  35AE               	lslf	___aldiv@quotient,f
 20277  2B93  0DAF               	rlf	___aldiv@quotient+1,f
 20278  2B94  0DB0               	rlf	___aldiv@quotient+2,f
 20279  2B95  0DB1               	rlf	___aldiv@quotient+3,f
 20280  2B96  0B89               	decfsz	9,f
 20281  2B97  2B92               	goto	u10875
 20282  2B98  0827               	movf	___aldiv@divisor+3,w
 20283  2B99  022B               	subwf	___aldiv@dividend+3,w
 20284  2B9A  1D03               	skipz
 20285  2B9B  2BA6               	goto	u10885
 20286  2B9C  0826               	movf	___aldiv@divisor+2,w
 20287  2B9D  022A               	subwf	___aldiv@dividend+2,w
 20288  2B9E  1D03               	skipz
 20289  2B9F  2BA6               	goto	u10885
 20290  2BA0  0825               	movf	___aldiv@divisor+1,w
 20291  2BA1  0229               	subwf	___aldiv@dividend+1,w
 20292  2BA2  1D03               	skipz
 20293  2BA3  2BA6               	goto	u10885
 20294  2BA4  0824               	movf	___aldiv@divisor,w
 20295  2BA5  0228               	subwf	___aldiv@dividend,w
 20296  2BA6                     u10885:	
 20297  2BA6  1C03               	skipc
 20298  2BA7  2BB1               	goto	l7908
 20299  2BA8  0824               	movf	___aldiv@divisor,w
 20300  2BA9  02A8               	subwf	___aldiv@dividend,f
 20301  2BAA  0825               	movf	___aldiv@divisor+1,w
 20302  2BAB  3BA9               	subwfb	___aldiv@dividend+1,f
 20303  2BAC  0826               	movf	___aldiv@divisor+2,w
 20304  2BAD  3BAA               	subwfb	___aldiv@dividend+2,f
 20305  2BAE  0827               	movf	___aldiv@divisor+3,w
 20306  2BAF  3BAB               	subwfb	___aldiv@dividend+3,f
 20307  2BB0  142E               	bsf	___aldiv@quotient,0
 20308  2BB1                     l7908:	
 20309  2BB1  3001               	movlw	1
 20310  2BB2                     u10895:	
 20311  2BB2  36A7               	lsrf	___aldiv@divisor+3,f
 20312  2BB3  0CA6               	rrf	___aldiv@divisor+2,f
 20313  2BB4  0CA5               	rrf	___aldiv@divisor+1,f
 20314  2BB5  0CA4               	rrf	___aldiv@divisor,f
 20315  2BB6  0B89               	decfsz	9,f
 20316  2BB7  2BB2               	goto	u10895
 20317  2BB8  3001               	movlw	1
 20318  2BB9  02AC               	subwf	___aldiv@counter,f
 20319  2BBA  1D03               	btfss	3,2
 20320  2BBB  2B91               	goto	l7900
 20321  2BBC                     l7912:	
 20322  2BBC  082D               	movf	___aldiv@sign,w
 20323  2BBD  1903               	btfsc	3,2
 20324  2BBE  2BCA               	goto	l7916
 20325  2BBF  09AE               	comf	___aldiv@quotient,f
 20326  2BC0  09AF               	comf	___aldiv@quotient+1,f
 20327  2BC1  09B0               	comf	___aldiv@quotient+2,f
 20328  2BC2  09B1               	comf	___aldiv@quotient+3,f
 20329  2BC3  0AAE               	incf	___aldiv@quotient,f
 20330  2BC4  1903               	skipnz
 20331  2BC5  0AAF               	incf	___aldiv@quotient+1,f
 20332  2BC6  1903               	skipnz
 20333  2BC7  0AB0               	incf	___aldiv@quotient+2,f
 20334  2BC8  1903               	skipnz
 20335  2BC9  0AB1               	incf	___aldiv@quotient+3,f
 20336  2BCA                     l7916:	
 20337  2BCA  0831               	movf	___aldiv@quotient+3,w
 20338  2BCB  00A7               	movwf	?___aldiv+3
 20339  2BCC  0830               	movf	___aldiv@quotient+2,w
 20340  2BCD  00A6               	movwf	?___aldiv+2
 20341  2BCE  082F               	movf	___aldiv@quotient+1,w
 20342  2BCF  00A5               	movwf	?___aldiv+1
 20343  2BD0  082E               	movf	___aldiv@quotient,w
 20344  2BD1  00A4               	movwf	?___aldiv
 20345  2BD2  0008               	return
 20346  2BD3                     __end_of___aldiv:	
 20347                           
 20348                           	psect	intentry
 20349  0004                     __pintentry:	
 20350 ;; *************** function _myIsr *****************
 20351 ;; Defined at:
 20352 ;;		line 54 in file "main.c"
 20353 ;; Parameters:    Size  Location     Type
 20354 ;;		None
 20355 ;; Auto vars:     Size  Location     Type
 20356 ;;		None
 20357 ;; Return value:  Size  Location     Type
 20358 ;;                  1    wreg      void 
 20359 ;; Registers used:
 20360 ;;		wreg, status,2, status,0
 20361 ;; Tracked objects:
 20362 ;;		On entry : 0/0
 20363 ;;		On exit  : 0/0
 20364 ;;		Unchanged: 0/0
 20365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20368 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20369 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20370 ;;Total ram usage:        1 bytes
 20371 ;; Hardware stack levels used:    1
 20372 ;; This function calls:
 20373 ;;		Nothing
 20374 ;; This function is called by:
 20375 ;;		Interrupt level 1
 20376 ;; This function uses a non-reentrant model
 20377 ;;
 20378                           
 20379  0004                     _myIsr:	
 20380                           
 20381                           ;incstack = 0
 20382  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 20383                           
 20384                           ; Regs used in _myIsr: [wreg+status,2+status,0]
 20385  0005  3180               	pagesel	$
 20386                           
 20387                           ;main.c: 56:     static uint8_t count = 0;;main.c: 58:     if (PIR1bits.TMR1IF && PIE1bi
      +                          ts.TMR1IE) {
 20388  0006  0020               	movlb	0	; select bank0
 20389  0007  1C11               	btfss	17,0	;volatile
 20390  0008  281E               	goto	i1l145
 20391  0009  0021               	movlb	1	; select bank1
 20392  000A  1C11               	btfss	17,0	;volatile
 20393  000B  281E               	goto	i1l145
 20394                           
 20395                           ;main.c: 59:         PIR1bits.TMR1IF = 0;
 20396  000C  0020               	movlb	0	; select bank0
 20397  000D  1011               	bcf	17,0	;volatile
 20398                           
 20399                           ;main.c: 60:         count++;
 20400  000E  3001               	movlw	1
 20401  000F  00F0               	movwf	??_myIsr
 20402  0010  0870               	movf	??_myIsr,w
 20403  0011  0023               	movlb	3	; select bank3
 20404  0012  07D5               	addwf	myIsr@count^(0+384),f
 20405                           
 20406                           ;main.c: 63:         if (count == 61) {
 20407  0013  303D               	movlw	61
 20408  0014  0655               	xorwf	myIsr@count^(0+384),w
 20409  0015  1D03               	btfss	3,2
 20410  0016  281E               	goto	i1l145
 20411                           
 20412                           ;main.c: 64:             tmr1_flag = 1;
 20413  0017  3001               	movlw	1
 20414  0018  00F0               	movwf	??_myIsr
 20415  0019  0870               	movf	??_myIsr,w
 20416  001A  0021               	movlb	1	; select bank1
 20417  001B  00EF               	movwf	_tmr1_flag^(0+128)	;volatile
 20418                           
 20419                           ;main.c: 65:             count = 0;
 20420  001C  0023               	movlb	3	; select bank3
 20421  001D  01D5               	clrf	myIsr@count^(0+384)
 20422  001E                     i1l145:	
 20423  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 20424  001F  0009               	retfie
 20425  0020                     __end_of_myIsr:	
 20426  007E                     btemp	set	126	;btemp
 20427  007E                     int$flags	set	126
 20428  007E                     wtemp0	set	126
 20429  2771                     
 20430                           	psect	text7_split_1
 20431  24D9                     l6898:	
 20432                           
 20433                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
 20434  24D9  0859               	movf	vfpfcnvrt@fmt,w
 20435  24DA  0086               	movwf	6
 20436  24DB  0187               	clrf	7
 20437  24DC  3F40               	moviw [0]fsr1
 20438  24DD  00F1               	movwf	strncmp@_l
 20439  24DE  3F41               	moviw [1]fsr1
 20440  24DF  00F2               	movwf	strncmp@_l+1
 20441  24E0  301D               	movlw	low (STR_24| (0+32768))
 20442  24E1  00F3               	movwf	strncmp@_r
 20443  24E2  30BA               	movlw	high (STR_24| (0+32768))
 20444  24E3  00F4               	movwf	strncmp@_r+1
 20445  24E4  3003               	movlw	3
 20446  24E5  00F5               	movwf	strncmp@n
 20447  24E6  3000               	movlw	0
 20448  24E7  00F6               	movwf	strncmp@n+1
 20449  24E8  31B7  27AE  31A4   	fcall	_strncmp
 20450  24EB  0871               	movf	?_strncmp,w
 20451  24EC  0472               	iorwf	?_strncmp+1,w
 20452  24ED  1903               	btfsc	3,2
 20453  24EE  2D06               	goto	l6902
 20454  24EF  0020               	movlb	0	; select bank0
 20455  24F0  0859               	movf	vfpfcnvrt@fmt,w
 20456  24F1  0086               	movwf	6
 20457  24F2  0187               	clrf	7
 20458  24F3  3F40               	moviw [0]fsr1
 20459  24F4  00F1               	movwf	strncmp@_l
 20460  24F5  3F41               	moviw [1]fsr1
 20461  24F6  00F2               	movwf	strncmp@_l+1
 20462  24F7  3021               	movlw	low (STR_28| (0+32768))
 20463  24F8  00F3               	movwf	strncmp@_r
 20464  24F9  30BA               	movlw	high (STR_28| (0+32768))
 20465  24FA  00F4               	movwf	strncmp@_r+1
 20466  24FB  3003               	movlw	3
 20467  24FC  00F5               	movwf	strncmp@n
 20468  24FD  3000               	movlw	0
 20469  24FE  00F6               	movwf	strncmp@n+1
 20470  24FF  31B7  27AE  31A4   	fcall	_strncmp
 20471  2502  0871               	movf	?_strncmp,w
 20472  2503  0472               	iorwf	?_strncmp+1,w
 20473  2504  1D03               	btfss	3,2
 20474  2505  2D51               	goto	l6910
 20475  2506                     l6902:	
 20476                           
 20477                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
 20478  2506  0020               	movlb	0	; select bank0
 20479  2507  0859               	movf	vfpfcnvrt@fmt,w
 20480  2508  0086               	movwf	6
 20481  2509  0187               	clrf	7
 20482  250A  3003               	movlw	3
 20483  250B  0781               	addwf	1,f
 20484  250C  3141               	addfsr 1,1
 20485  250D  1803               	skipnc
 20486  250E  0A81               	incf	1,f
 20487                           
 20488                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 20489  250F  085A               	movf	vfpfcnvrt@ap,w
 20490  2510  0086               	movwf	6
 20491  2511  0187               	clrf	7
 20492  2512  0801               	movf	1,w
 20493  2513  0084               	movwf	4
 20494  2514  0185               	clrf	5
 20495  2515  3002               	movlw	2
 20496  2516  0781               	addwf	1,f
 20497  2517  0800               	movf	0,w
 20498  2518  0021               	movlb	1	; select bank1
 20499  2519  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 20500  251A  3980               	andlw	128
 20501  251B  1D03               	skipz
 20502  251C  30FF               	movlw	255
 20503  251D  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 20504  251E  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 20505  251F  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 20506  2520  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 20507  2521  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 20508  2522  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 20509  2523  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 20510                           
 20511                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
 20512  2524  0020               	movlb	0	; select bank0
 20513  2525  0858               	movf	vfpfcnvrt@fp+1,w
 20514  2526  00B1               	movwf	dtoa@fp+1
 20515  2527  0857               	movf	vfpfcnvrt@fp,w
 20516  2528  00B0               	movwf	dtoa@fp
 20517  2529  0021               	movlb	1	; select bank1
 20518  252A  0828               	movf	vfpfcnvrt@ll^(0+128),w
 20519  252B  0020               	movlb	0	; select bank0
 20520  252C  00B2               	movwf	dtoa@d
 20521  252D  0021               	movlb	1	; select bank1
 20522  252E  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 20523  252F  0020               	movlb	0	; select bank0
 20524  2530  00B3               	movwf	dtoa@d+1
 20525  2531  0021               	movlb	1	; select bank1
 20526  2532  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 20527  2533  0020               	movlb	0	; select bank0
 20528  2534  00B4               	movwf	dtoa@d+2
 20529  2535  0021               	movlb	1	; select bank1
 20530  2536  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 20531  2537  0020               	movlb	0	; select bank0
 20532  2538  00B5               	movwf	dtoa@d+3
 20533  2539  0021               	movlb	1	; select bank1
 20534  253A  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 20535  253B  0020               	movlb	0	; select bank0
 20536  253C  00B6               	movwf	dtoa@d+4
 20537  253D  0021               	movlb	1	; select bank1
 20538  253E  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 20539  253F  0020               	movlb	0	; select bank0
 20540  2540  00B7               	movwf	dtoa@d+5
 20541  2541  0021               	movlb	1	; select bank1
 20542  2542  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 20543  2543  0020               	movlb	0	; select bank0
 20544  2544  00B8               	movwf	dtoa@d+6
 20545  2545  0021               	movlb	1	; select bank1
 20546  2546  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 20547  2547  0020               	movlb	0	; select bank0
 20548  2548  00B9               	movwf	dtoa@d+7
 20549  2549  3198  20CE         	fcall	_dtoa
 20550  254B  0020               	movlb	0	; select bank0
 20551  254C  0831               	movf	?_dtoa+1,w
 20552  254D  00D8               	movwf	?_vfpfcnvrt+1
 20553  254E  0830               	movf	?_dtoa,w
 20554  254F  00D7               	movwf	?_vfpfcnvrt
 20555  2550  0008               	return
 20556  2551                     l6910:	
 20557                           
 20558                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
 20559  2551  0020               	movlb	0	; select bank0
 20560  2552  0859               	movf	vfpfcnvrt@fmt,w
 20561  2553  0086               	movwf	6
 20562  2554  0187               	clrf	7
 20563  2555  3F40               	moviw [0]fsr1
 20564  2556  00F1               	movwf	strncmp@_l
 20565  2557  3F41               	moviw [1]fsr1
 20566  2558  00F2               	movwf	strncmp@_l+1
 20567  2559  301E               	movlw	low ((STR_24+1)| (0+32768))
 20568  255A  00F3               	movwf	strncmp@_r
 20569  255B  30BA               	movlw	high ((STR_24+1)| (0+32768))
 20570  255C  00F4               	movwf	strncmp@_r+1
 20571  255D  3002               	movlw	2
 20572  255E  00F5               	movwf	strncmp@n
 20573  255F  3000               	movlw	0
 20574  2560  00F6               	movwf	strncmp@n+1
 20575  2561  31B7  27AE  31A4   	fcall	_strncmp
 20576  2564  0871               	movf	?_strncmp,w
 20577  2565  0472               	iorwf	?_strncmp+1,w
 20578  2566  1903               	btfsc	3,2
 20579  2567  2D7F               	goto	l6914
 20580  2568  0020               	movlb	0	; select bank0
 20581  2569  0859               	movf	vfpfcnvrt@fmt,w
 20582  256A  0086               	movwf	6
 20583  256B  0187               	clrf	7
 20584  256C  3F40               	moviw [0]fsr1
 20585  256D  00F1               	movwf	strncmp@_l
 20586  256E  3F41               	moviw [1]fsr1
 20587  256F  00F2               	movwf	strncmp@_l+1
 20588  2570  3022               	movlw	low ((STR_28+1)| (0+32768))
 20589  2571  00F3               	movwf	strncmp@_r
 20590  2572  30BA               	movlw	high ((STR_28+1)| (0+32768))
 20591  2573  00F4               	movwf	strncmp@_r+1
 20592  2574  3002               	movlw	2
 20593  2575  00F5               	movwf	strncmp@n
 20594  2576  3000               	movlw	0
 20595  2577  00F6               	movwf	strncmp@n+1
 20596  2578  31B7  27AE  31A4   	fcall	_strncmp
 20597  257B  0871               	movf	?_strncmp,w
 20598  257C  0472               	iorwf	?_strncmp+1,w
 20599  257D  1D03               	btfss	3,2
 20600  257E  2DD1               	goto	L9
 20601  257F                     l6914:	
 20602                           
 20603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
 20604  257F  0020               	movlb	0	; select bank0
 20605  2580  0859               	movf	vfpfcnvrt@fmt,w
 20606  2581  0086               	movwf	6
 20607  2582  0187               	clrf	7
 20608  2583  3002               	movlw	2
 20609  2584  0781               	addwf	1,f
 20610  2585  3141               	addfsr 1,1
 20611  2586  1803               	skipnc
 20612  2587  0A81               	incf	1,f
 20613                           
 20614                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
 20615  2588  085A               	movf	vfpfcnvrt@ap,w
 20616  2589  0086               	movwf	6
 20617  258A  0187               	clrf	7
 20618  258B  0801               	movf	1,w
 20619  258C  0084               	movwf	4
 20620  258D  0185               	clrf	5
 20621  258E  3002               	movlw	2
 20622  258F  0781               	addwf	1,f
 20623  2590  3F00               	moviw [0]fsr0
 20624  2591  00DB               	movwf	??_vfpfcnvrt
 20625  2592  3F01               	moviw [1]fsr0
 20626  2593  00DC               	movwf	??_vfpfcnvrt+1
 20627  2594  085B               	movf	??_vfpfcnvrt,w
 20628  2595  0021               	movlb	1	; select bank1
 20629  2596  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 20630  2597  0020               	movlb	0	; select bank0
 20631  2598  085C               	movf	??_vfpfcnvrt+1,w
 20632  2599  0021               	movlb	1	; select bank1
 20633  259A  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 20634  259B  0D89               	rlf	9,f
 20635  259C  3B89               	subwfb	9,f
 20636  259D  0989               	comf	9,f
 20637  259E  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 20638  259F  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 20639  25A0  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 20640  25A1  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 20641  25A2  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 20642  25A3  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 20643                           
 20644                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 820:       
      +                                return dtoa(fp, ll);
 20645  25A4  0020               	movlb	0	; select bank0
 20646  25A5  0858               	movf	vfpfcnvrt@fp+1,w
 20647  25A6  00B1               	movwf	dtoa@fp+1
 20648  25A7  0857               	movf	vfpfcnvrt@fp,w
 20649  25A8  00B0               	movwf	dtoa@fp
 20650  25A9  0021               	movlb	1	; select bank1
 20651  25AA  0828               	movf	vfpfcnvrt@ll^(0+128),w
 20652  25AB  0020               	movlb	0	; select bank0
 20653  25AC  00B2               	movwf	dtoa@d
 20654  25AD  0021               	movlb	1	; select bank1
 20655  25AE  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 20656  25AF  0020               	movlb	0	; select bank0
 20657  25B0  00B3               	movwf	dtoa@d+1
 20658  25B1  0021               	movlb	1	; select bank1
 20659  25B2  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 20660  25B3  0020               	movlb	0	; select bank0
 20661  25B4  00B4               	movwf	dtoa@d+2
 20662  25B5  0021               	movlb	1	; select bank1
 20663  25B6  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 20664  25B7  0020               	movlb	0	; select bank0
 20665  25B8  00B5               	movwf	dtoa@d+3
 20666  25B9  0021               	movlb	1	; select bank1
 20667  25BA  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 20668  25BB  0020               	movlb	0	; select bank0
 20669  25BC  00B6               	movwf	dtoa@d+4
 20670  25BD  0021               	movlb	1	; select bank1
 20671  25BE  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 20672  25BF  0020               	movlb	0	; select bank0
 20673  25C0  00B7               	movwf	dtoa@d+5
 20674  25C1  0021               	movlb	1	; select bank1
 20675  25C2  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 20676  25C3  0020               	movlb	0	; select bank0
 20677  25C4  00B8               	movwf	dtoa@d+6
 20678  25C5  0021               	movlb	1	; select bank1
 20679  25C6  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 20680  25C7  0020               	movlb	0	; select bank0
 20681  25C8  00B9               	movwf	dtoa@d+7
 20682  25C9  3198  20CE         	fcall	_dtoa
 20683  25CB  0020               	movlb	0	; select bank0
 20684  25CC  0831               	movf	?_dtoa+1,w
 20685  25CD  00D8               	movwf	?_vfpfcnvrt+1
 20686  25CE  0830               	movf	?_dtoa,w
 20687  25CF  00D7               	movwf	?_vfpfcnvrt
 20688  25D0  0008               	return
 20689  25D1                     L9:	
 20690  25D1                     L8:	
 20691  25D1  3188  2843         	ljmp	l6922
 20692                           
 20693                           	psect	text7_split_2
 20694  0843                     l6922:	
 20695                           
 20696                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 20697  0843  0020               	movlb	0	; select bank0
 20698  0844  0859               	movf	vfpfcnvrt@fmt,w
 20699  0845  0086               	movwf	6
 20700  0846  0187               	clrf	7
 20701  0847  3F40               	moviw [0]fsr1
 20702  0848  00DB               	movwf	??_vfpfcnvrt
 20703  0849  3F41               	moviw [1]fsr1
 20704  084A  00DC               	movwf	??_vfpfcnvrt+1
 20705  084B  085B               	movf	??_vfpfcnvrt,w
 20706  084C  0084               	movwf	4
 20707  084D  085C               	movf	??_vfpfcnvrt+1,w
 20708  084E  0085               	movwf	5
 20709  084F  0012               	moviw fsr0++
 20710  0850  3A64               	xorlw	100
 20711  0851  1903               	btfsc	3,2
 20712  0852  2862               	goto	l6926
 20713  0853  0859               	movf	vfpfcnvrt@fmt,w
 20714  0854  0086               	movwf	6
 20715  0855  0187               	clrf	7
 20716  0856  3F40               	moviw [0]fsr1
 20717  0857  00DB               	movwf	??_vfpfcnvrt
 20718  0858  3F41               	moviw [1]fsr1
 20719  0859  00DC               	movwf	??_vfpfcnvrt+1
 20720  085A  085B               	movf	??_vfpfcnvrt,w
 20721  085B  0084               	movwf	4
 20722  085C  085C               	movf	??_vfpfcnvrt+1,w
 20723  085D  0085               	movwf	5
 20724  085E  0012               	moviw fsr0++
 20725  085F  3A69               	xorlw	105
 20726  0860  1D03               	btfss	3,2
 20727  0861  28B3               	goto	l6934
 20728  0862                     l6926:	
 20729                           
 20730                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 20731  0862  0859               	movf	vfpfcnvrt@fmt,w
 20732  0863  0086               	movwf	6
 20733  0864  0187               	clrf	7
 20734  0865  3001               	movlw	1
 20735  0866  0781               	addwf	1,f
 20736  0867  3141               	addfsr 1,1
 20737  0868  1803               	skipnc
 20738  0869  0A81               	incf	1,f
 20739                           
 20740                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 20741  086A  085A               	movf	vfpfcnvrt@ap,w
 20742  086B  0086               	movwf	6
 20743  086C  0187               	clrf	7
 20744  086D  0801               	movf	1,w
 20745  086E  0084               	movwf	4
 20746  086F  0185               	clrf	5
 20747  0870  3002               	movlw	2
 20748  0871  0781               	addwf	1,f
 20749  0872  3F00               	moviw [0]fsr0
 20750  0873  00DB               	movwf	??_vfpfcnvrt
 20751  0874  3F01               	moviw [1]fsr0
 20752  0875  00DC               	movwf	??_vfpfcnvrt+1
 20753  0876  085B               	movf	??_vfpfcnvrt,w
 20754  0877  0021               	movlb	1	; select bank1
 20755  0878  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 20756  0879  0020               	movlb	0	; select bank0
 20757  087A  085C               	movf	??_vfpfcnvrt+1,w
 20758  087B  0021               	movlb	1	; select bank1
 20759  087C  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 20760  087D  0D89               	rlf	9,f
 20761  087E  3B89               	subwfb	9,f
 20762  087F  0989               	comf	9,f
 20763  0880  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 20764  0881  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 20765  0882  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 20766  0883  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 20767  0884  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 20768  0885  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 20769                           
 20770                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 20771  0886  0020               	movlb	0	; select bank0
 20772  0887  0858               	movf	vfpfcnvrt@fp+1,w
 20773  0888  00B1               	movwf	dtoa@fp+1
 20774  0889  0857               	movf	vfpfcnvrt@fp,w
 20775  088A  00B0               	movwf	dtoa@fp
 20776  088B  0021               	movlb	1	; select bank1
 20777  088C  0828               	movf	vfpfcnvrt@ll^(0+128),w
 20778  088D  0020               	movlb	0	; select bank0
 20779  088E  00B2               	movwf	dtoa@d
 20780  088F  0021               	movlb	1	; select bank1
 20781  0890  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 20782  0891  0020               	movlb	0	; select bank0
 20783  0892  00B3               	movwf	dtoa@d+1
 20784  0893  0021               	movlb	1	; select bank1
 20785  0894  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 20786  0895  0020               	movlb	0	; select bank0
 20787  0896  00B4               	movwf	dtoa@d+2
 20788  0897  0021               	movlb	1	; select bank1
 20789  0898  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 20790  0899  0020               	movlb	0	; select bank0
 20791  089A  00B5               	movwf	dtoa@d+3
 20792  089B  0021               	movlb	1	; select bank1
 20793  089C  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 20794  089D  0020               	movlb	0	; select bank0
 20795  089E  00B6               	movwf	dtoa@d+4
 20796  089F  0021               	movlb	1	; select bank1
 20797  08A0  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 20798  08A1  0020               	movlb	0	; select bank0
 20799  08A2  00B7               	movwf	dtoa@d+5
 20800  08A3  0021               	movlb	1	; select bank1
 20801  08A4  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 20802  08A5  0020               	movlb	0	; select bank0
 20803  08A6  00B8               	movwf	dtoa@d+6
 20804  08A7  0021               	movlb	1	; select bank1
 20805  08A8  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 20806  08A9  0020               	movlb	0	; select bank0
 20807  08AA  00B9               	movwf	dtoa@d+7
 20808  08AB  3198  20CE         	fcall	_dtoa
 20809  08AD  0020               	movlb	0	; select bank0
 20810  08AE  0831               	movf	?_dtoa+1,w
 20811  08AF  00D8               	movwf	?_vfpfcnvrt+1
 20812  08B0  0830               	movf	?_dtoa,w
 20813  08B1  00D7               	movwf	?_vfpfcnvrt
 20814  08B2  0008               	return
 20815  08B3                     l6934:	
 20816                           
 20817                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
 20818  08B3  0859               	movf	vfpfcnvrt@fmt,w
 20819  08B4  0086               	movwf	6
 20820  08B5  0187               	clrf	7
 20821  08B6  3F40               	moviw [0]fsr1
 20822  08B7  00F1               	movwf	strncmp@_l
 20823  08B8  3F41               	moviw [1]fsr1
 20824  08B9  00F2               	movwf	strncmp@_l+1
 20825  08BA  3038               	movlw	low (STR_42| (0+32768))
 20826  08BB  00F3               	movwf	strncmp@_r
 20827  08BC  30BA               	movlw	high (STR_42| (0+32768))
 20828  08BD  00F4               	movwf	strncmp@_r+1
 20829  08BE  3002               	movlw	2
 20830  08BF  00F5               	movwf	strncmp@n
 20831  08C0  3000               	movlw	0
 20832  08C1  00F6               	movwf	strncmp@n+1
 20833  08C2  31B7  27AE  3188   	fcall	_strncmp
 20834  08C5  0871               	movf	?_strncmp,w
 20835  08C6  0472               	iorwf	?_strncmp+1,w
 20836  08C7  1903               	btfsc	3,2
 20837  08C8  28E0               	goto	l6938
 20838  08C9  0020               	movlb	0	; select bank0
 20839  08CA  0859               	movf	vfpfcnvrt@fmt,w
 20840  08CB  0086               	movwf	6
 20841  08CC  0187               	clrf	7
 20842  08CD  3F40               	moviw [0]fsr1
 20843  08CE  00F1               	movwf	strncmp@_l
 20844  08CF  3F41               	moviw [1]fsr1
 20845  08D0  00F2               	movwf	strncmp@_l+1
 20846  08D1  303B               	movlw	low (STR_46| (0+32768))
 20847  08D2  00F3               	movwf	strncmp@_r
 20848  08D3  30BA               	movlw	high (STR_46| (0+32768))
 20849  08D4  00F4               	movwf	strncmp@_r+1
 20850  08D5  3002               	movlw	2
 20851  08D6  00F5               	movwf	strncmp@n
 20852  08D7  3000               	movlw	0
 20853  08D8  00F6               	movwf	strncmp@n+1
 20854  08D9  31B7  27AE  3188   	fcall	_strncmp
 20855  08DC  0871               	movf	?_strncmp,w
 20856  08DD  0472               	iorwf	?_strncmp+1,w
 20857  08DE  1D03               	btfss	3,2
 20858  08DF  2929               	goto	l6946
 20859  08E0                     l6938:	
 20860                           
 20861                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
 20862  08E0  0020               	movlb	0	; select bank0
 20863  08E1  0859               	movf	vfpfcnvrt@fmt,w
 20864  08E2  0086               	movwf	6
 20865  08E3  0187               	clrf	7
 20866  08E4  3002               	movlw	2
 20867  08E5  0781               	addwf	1,f
 20868  08E6  3141               	addfsr 1,1
 20869  08E7  1803               	skipnc
 20870  08E8  0A81               	incf	1,f
 20871                           
 20872                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 20873  08E9  085A               	movf	vfpfcnvrt@ap,w
 20874  08EA  0086               	movwf	6
 20875  08EB  0187               	clrf	7
 20876  08EC  0801               	movf	1,w
 20877  08ED  0084               	movwf	4
 20878  08EE  0185               	clrf	5
 20879  08EF  3002               	movlw	2
 20880  08F0  0781               	addwf	1,f
 20881  08F1  3F00               	moviw [0]fsr0
 20882  08F2  0021               	movlb	1	; select bank1
 20883  08F3  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 20884  08F4  3F01               	moviw [1]fsr0
 20885  08F5  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 20886  08F6  01AA               	clrf	(vfpfcnvrt@ll+2)^(0+128)
 20887  08F7  01AB               	clrf	(vfpfcnvrt@ll+3)^(0+128)
 20888  08F8  01AC               	clrf	(vfpfcnvrt@ll+4)^(0+128)
 20889  08F9  01AD               	clrf	(vfpfcnvrt@ll+5)^(0+128)
 20890  08FA  01AE               	clrf	(vfpfcnvrt@ll+6)^(0+128)
 20891  08FB  01AF               	clrf	(vfpfcnvrt@ll+7)^(0+128)
 20892                           
 20893                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 889:       
      +                                return dtoa(fp, ll);
 20894  08FC  0020               	movlb	0	; select bank0
 20895  08FD  0858               	movf	vfpfcnvrt@fp+1,w
 20896  08FE  00B1               	movwf	dtoa@fp+1
 20897  08FF  0857               	movf	vfpfcnvrt@fp,w
 20898  0900  00B0               	movwf	dtoa@fp
 20899  0901  0021               	movlb	1	; select bank1
 20900  0902  0828               	movf	vfpfcnvrt@ll^(0+128),w
 20901  0903  0020               	movlb	0	; select bank0
 20902  0904  00B2               	movwf	dtoa@d
 20903  0905  0021               	movlb	1	; select bank1
 20904  0906  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 20905  0907  0020               	movlb	0	; select bank0
 20906  0908  00B3               	movwf	dtoa@d+1
 20907  0909  0021               	movlb	1	; select bank1
 20908  090A  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 20909  090B  0020               	movlb	0	; select bank0
 20910  090C  00B4               	movwf	dtoa@d+2
 20911  090D  0021               	movlb	1	; select bank1
 20912  090E  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 20913  090F  0020               	movlb	0	; select bank0
 20914  0910  00B5               	movwf	dtoa@d+3
 20915  0911  0021               	movlb	1	; select bank1
 20916  0912  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 20917  0913  0020               	movlb	0	; select bank0
 20918  0914  00B6               	movwf	dtoa@d+4
 20919  0915  0021               	movlb	1	; select bank1
 20920  0916  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 20921  0917  0020               	movlb	0	; select bank0
 20922  0918  00B7               	movwf	dtoa@d+5
 20923  0919  0021               	movlb	1	; select bank1
 20924  091A  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 20925  091B  0020               	movlb	0	; select bank0
 20926  091C  00B8               	movwf	dtoa@d+6
 20927  091D  0021               	movlb	1	; select bank1
 20928  091E  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 20929  091F  0020               	movlb	0	; select bank0
 20930  0920  00B9               	movwf	dtoa@d+7
 20931  0921  3198  20CE         	fcall	_dtoa
 20932  0923  0020               	movlb	0	; select bank0
 20933  0924  0831               	movf	?_dtoa+1,w
 20934  0925  00D8               	movwf	?_vfpfcnvrt+1
 20935  0926  0830               	movf	?_dtoa,w
 20936  0927  00D7               	movwf	?_vfpfcnvrt
 20937  0928  0008               	return
 20938  0929                     l6946:	
 20939                           
 20940                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
 20941  0929  0020               	movlb	0	; select bank0
 20942  092A  0859               	movf	vfpfcnvrt@fmt,w
 20943  092B  0086               	movwf	6
 20944  092C  0187               	clrf	7
 20945  092D  3F40               	moviw [0]fsr1
 20946  092E  00F1               	movwf	strncmp@_l
 20947  092F  3F41               	moviw [1]fsr1
 20948  0930  00F2               	movwf	strncmp@_l+1
 20949  0931  3029               	movlw	low (STR_51| (0+32768))
 20950  0932  00F3               	movwf	strncmp@_r
 20951  0933  30BA               	movlw	high (STR_51| (0+32768))
 20952  0934  00F4               	movwf	strncmp@_r+1
 20953  0935  3003               	movlw	3
 20954  0936  00F5               	movwf	strncmp@n
 20955  0937  3000               	movlw	0
 20956  0938  00F6               	movwf	strncmp@n+1
 20957  0939  31B7  27AE  3188   	fcall	_strncmp
 20958  093C  0871               	movf	?_strncmp,w
 20959  093D  0472               	iorwf	?_strncmp+1,w
 20960  093E  1D03               	btfss	3,2
 20961  093F  2988               	goto	l6956
 20962                           
 20963                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
 20964  0940  0020               	movlb	0	; select bank0
 20965  0941  0859               	movf	vfpfcnvrt@fmt,w
 20966  0942  0086               	movwf	6
 20967  0943  0187               	clrf	7
 20968  0944  3003               	movlw	3
 20969  0945  0781               	addwf	1,f
 20970  0946  3141               	addfsr 1,1
 20971  0947  1803               	skipnc
 20972  0948  0A81               	incf	1,f
 20973                           
 20974                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 20975  0949  085A               	movf	vfpfcnvrt@ap,w
 20976  094A  0086               	movwf	6
 20977  094B  0187               	clrf	7
 20978  094C  0801               	movf	1,w
 20979  094D  0084               	movwf	4
 20980  094E  0185               	clrf	5
 20981  094F  3002               	movlw	2
 20982  0950  0781               	addwf	1,f
 20983  0951  0800               	movf	0,w
 20984  0952  0021               	movlb	1	; select bank1
 20985  0953  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 20986  0954  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 20987  0955  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 20988  0956  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 20989  0957  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 20990  0958  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 20991  0959  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 20992  095A  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 20993                           
 20994                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
 20995  095B  0020               	movlb	0	; select bank0
 20996  095C  0858               	movf	vfpfcnvrt@fp+1,w
 20997  095D  00B1               	movwf	otoa@fp+1
 20998  095E  0857               	movf	vfpfcnvrt@fp,w
 20999  095F  00B0               	movwf	otoa@fp
 21000  0960  0021               	movlb	1	; select bank1
 21001  0961  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21002  0962  0020               	movlb	0	; select bank0
 21003  0963  00B2               	movwf	otoa@d
 21004  0964  0021               	movlb	1	; select bank1
 21005  0965  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21006  0966  0020               	movlb	0	; select bank0
 21007  0967  00B3               	movwf	otoa@d+1
 21008  0968  0021               	movlb	1	; select bank1
 21009  0969  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21010  096A  0020               	movlb	0	; select bank0
 21011  096B  00B4               	movwf	otoa@d+2
 21012  096C  0021               	movlb	1	; select bank1
 21013  096D  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21014  096E  0020               	movlb	0	; select bank0
 21015  096F  00B5               	movwf	otoa@d+3
 21016  0970  0021               	movlb	1	; select bank1
 21017  0971  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21018  0972  0020               	movlb	0	; select bank0
 21019  0973  00B6               	movwf	otoa@d+4
 21020  0974  0021               	movlb	1	; select bank1
 21021  0975  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21022  0976  0020               	movlb	0	; select bank0
 21023  0977  00B7               	movwf	otoa@d+5
 21024  0978  0021               	movlb	1	; select bank1
 21025  0979  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21026  097A  0020               	movlb	0	; select bank0
 21027  097B  00B8               	movwf	otoa@d+6
 21028  097C  0021               	movlb	1	; select bank1
 21029  097D  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21030  097E  0020               	movlb	0	; select bank0
 21031  097F  00B9               	movwf	otoa@d+7
 21032  0980  31A2  22F5         	fcall	_otoa
 21033  0982  0020               	movlb	0	; select bank0
 21034  0983  0831               	movf	?_otoa+1,w
 21035  0984  00D8               	movwf	?_vfpfcnvrt+1
 21036  0985  0830               	movf	?_otoa,w
 21037  0986  00D7               	movwf	?_vfpfcnvrt
 21038  0987  0008               	return
 21039  0988                     l6956:	
 21040                           
 21041                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
 21042  0988  0020               	movlb	0	; select bank0
 21043  0989  0859               	movf	vfpfcnvrt@fmt,w
 21044  098A  0086               	movwf	6
 21045  098B  0187               	clrf	7
 21046  098C  3F40               	moviw [0]fsr1
 21047  098D  00F1               	movwf	strncmp@_l
 21048  098E  3F41               	moviw [1]fsr1
 21049  098F  00F2               	movwf	strncmp@_l+1
 21050  0990  302A               	movlw	low ((STR_51+1)| (0+32768))
 21051  0991  00F3               	movwf	strncmp@_r
 21052  0992  30BA               	movlw	high ((STR_51+1)| (0+32768))
 21053  0993  00F4               	movwf	strncmp@_r+1
 21054  0994  3002               	movlw	2
 21055  0995  00F5               	movwf	strncmp@n
 21056  0996  3000               	movlw	0
 21057  0997  00F6               	movwf	strncmp@n+1
 21058  0998  31B7  27AE  3188   	fcall	_strncmp
 21059  099B  0871               	movf	?_strncmp,w
 21060  099C  0472               	iorwf	?_strncmp+1,w
 21061  099D  1D03               	btfss	3,2
 21062  099E  29E8               	goto	l6966
 21063                           
 21064                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
 21065  099F  0020               	movlb	0	; select bank0
 21066  09A0  0859               	movf	vfpfcnvrt@fmt,w
 21067  09A1  0086               	movwf	6
 21068  09A2  0187               	clrf	7
 21069  09A3  3002               	movlw	2
 21070  09A4  0781               	addwf	1,f
 21071  09A5  3141               	addfsr 1,1
 21072  09A6  1803               	skipnc
 21073  09A7  0A81               	incf	1,f
 21074                           
 21075                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
 21076  09A8  085A               	movf	vfpfcnvrt@ap,w
 21077  09A9  0086               	movwf	6
 21078  09AA  0187               	clrf	7
 21079  09AB  0801               	movf	1,w
 21080  09AC  0084               	movwf	4
 21081  09AD  0185               	clrf	5
 21082  09AE  3002               	movlw	2
 21083  09AF  0781               	addwf	1,f
 21084  09B0  3F00               	moviw [0]fsr0
 21085  09B1  0021               	movlb	1	; select bank1
 21086  09B2  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21087  09B3  3F01               	moviw [1]fsr0
 21088  09B4  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21089  09B5  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21090  09B6  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21091  09B7  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21092  09B8  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21093  09B9  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21094  09BA  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21095                           
 21096                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 985:       
      +                                return otoa(fp, llu);
 21097  09BB  0020               	movlb	0	; select bank0
 21098  09BC  0858               	movf	vfpfcnvrt@fp+1,w
 21099  09BD  00B1               	movwf	otoa@fp+1
 21100  09BE  0857               	movf	vfpfcnvrt@fp,w
 21101  09BF  00B0               	movwf	otoa@fp
 21102  09C0  0021               	movlb	1	; select bank1
 21103  09C1  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21104  09C2  0020               	movlb	0	; select bank0
 21105  09C3  00B2               	movwf	otoa@d
 21106  09C4  0021               	movlb	1	; select bank1
 21107  09C5  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21108  09C6  0020               	movlb	0	; select bank0
 21109  09C7  00B3               	movwf	otoa@d+1
 21110  09C8  0021               	movlb	1	; select bank1
 21111  09C9  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21112  09CA  0020               	movlb	0	; select bank0
 21113  09CB  00B4               	movwf	otoa@d+2
 21114  09CC  0021               	movlb	1	; select bank1
 21115  09CD  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21116  09CE  0020               	movlb	0	; select bank0
 21117  09CF  00B5               	movwf	otoa@d+3
 21118  09D0  0021               	movlb	1	; select bank1
 21119  09D1  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21120  09D2  0020               	movlb	0	; select bank0
 21121  09D3  00B6               	movwf	otoa@d+4
 21122  09D4  0021               	movlb	1	; select bank1
 21123  09D5  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21124  09D6  0020               	movlb	0	; select bank0
 21125  09D7  00B7               	movwf	otoa@d+5
 21126  09D8  0021               	movlb	1	; select bank1
 21127  09D9  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21128  09DA  0020               	movlb	0	; select bank0
 21129  09DB  00B8               	movwf	otoa@d+6
 21130  09DC  0021               	movlb	1	; select bank1
 21131  09DD  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21132  09DE  0020               	movlb	0	; select bank0
 21133  09DF  00B9               	movwf	otoa@d+7
 21134  09E0  31A2  22F5         	fcall	_otoa
 21135  09E2  0020               	movlb	0	; select bank0
 21136  09E3  0831               	movf	?_otoa+1,w
 21137  09E4  00D8               	movwf	?_vfpfcnvrt+1
 21138  09E5  0830               	movf	?_otoa,w
 21139  09E6  00D7               	movwf	?_vfpfcnvrt
 21140  09E7  0008               	return
 21141  09E8                     l6966:	
 21142                           
 21143                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
 21144  09E8  0020               	movlb	0	; select bank0
 21145  09E9  0859               	movf	vfpfcnvrt@fmt,w
 21146  09EA  0086               	movwf	6
 21147  09EB  0187               	clrf	7
 21148  09EC  3F40               	moviw [0]fsr1
 21149  09ED  00DB               	movwf	??_vfpfcnvrt
 21150  09EE  3F41               	moviw [1]fsr1
 21151  09EF  00DC               	movwf	??_vfpfcnvrt+1
 21152  09F0  085B               	movf	??_vfpfcnvrt,w
 21153  09F1  0084               	movwf	4
 21154  09F2  085C               	movf	??_vfpfcnvrt+1,w
 21155  09F3  0085               	movwf	5
 21156  09F4  0012               	moviw fsr0++
 21157  09F5  3A6F               	xorlw	111
 21158  09F6  1D03               	btfss	3,2
 21159  09F7  2A40               	goto	l6976
 21160                           
 21161                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
 21162  09F8  0859               	movf	vfpfcnvrt@fmt,w
 21163  09F9  0086               	movwf	6
 21164  09FA  0187               	clrf	7
 21165  09FB  3001               	movlw	1
 21166  09FC  0781               	addwf	1,f
 21167  09FD  3141               	addfsr 1,1
 21168  09FE  1803               	skipnc
 21169  09FF  0A81               	incf	1,f
 21170                           
 21171                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
 21172  0A00  085A               	movf	vfpfcnvrt@ap,w
 21173  0A01  0086               	movwf	6
 21174  0A02  0187               	clrf	7
 21175  0A03  0801               	movf	1,w
 21176  0A04  0084               	movwf	4
 21177  0A05  0185               	clrf	5
 21178  0A06  3002               	movlw	2
 21179  0A07  0781               	addwf	1,f
 21180  0A08  3F00               	moviw [0]fsr0
 21181  0A09  0021               	movlb	1	; select bank1
 21182  0A0A  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21183  0A0B  3F01               	moviw [1]fsr0
 21184  0A0C  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21185  0A0D  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21186  0A0E  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21187  0A0F  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21188  0A10  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21189  0A11  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21190  0A12  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21191                           
 21192                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 995:       
      +                                return otoa(fp, llu);
 21193  0A13  0020               	movlb	0	; select bank0
 21194  0A14  0858               	movf	vfpfcnvrt@fp+1,w
 21195  0A15  00B1               	movwf	otoa@fp+1
 21196  0A16  0857               	movf	vfpfcnvrt@fp,w
 21197  0A17  00B0               	movwf	otoa@fp
 21198  0A18  0021               	movlb	1	; select bank1
 21199  0A19  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21200  0A1A  0020               	movlb	0	; select bank0
 21201  0A1B  00B2               	movwf	otoa@d
 21202  0A1C  0021               	movlb	1	; select bank1
 21203  0A1D  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21204  0A1E  0020               	movlb	0	; select bank0
 21205  0A1F  00B3               	movwf	otoa@d+1
 21206  0A20  0021               	movlb	1	; select bank1
 21207  0A21  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21208  0A22  0020               	movlb	0	; select bank0
 21209  0A23  00B4               	movwf	otoa@d+2
 21210  0A24  0021               	movlb	1	; select bank1
 21211  0A25  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21212  0A26  0020               	movlb	0	; select bank0
 21213  0A27  00B5               	movwf	otoa@d+3
 21214  0A28  0021               	movlb	1	; select bank1
 21215  0A29  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21216  0A2A  0020               	movlb	0	; select bank0
 21217  0A2B  00B6               	movwf	otoa@d+4
 21218  0A2C  0021               	movlb	1	; select bank1
 21219  0A2D  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21220  0A2E  0020               	movlb	0	; select bank0
 21221  0A2F  00B7               	movwf	otoa@d+5
 21222  0A30  0021               	movlb	1	; select bank1
 21223  0A31  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21224  0A32  0020               	movlb	0	; select bank0
 21225  0A33  00B8               	movwf	otoa@d+6
 21226  0A34  0021               	movlb	1	; select bank1
 21227  0A35  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21228  0A36  0020               	movlb	0	; select bank0
 21229  0A37  00B9               	movwf	otoa@d+7
 21230  0A38  31A2  22F5         	fcall	_otoa
 21231  0A3A  0020               	movlb	0	; select bank0
 21232  0A3B  0831               	movf	?_otoa+1,w
 21233  0A3C  00D8               	movwf	?_vfpfcnvrt+1
 21234  0A3D  0830               	movf	?_otoa,w
 21235  0A3E  00D7               	movwf	?_vfpfcnvrt
 21236  0A3F  0008               	return
 21237  0A40                     l6976:	
 21238                           
 21239                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
 21240  0A40  0859               	movf	vfpfcnvrt@fmt,w
 21241  0A41  0086               	movwf	6
 21242  0A42  0187               	clrf	7
 21243  0A43  3F40               	moviw [0]fsr1
 21244  0A44  00F1               	movwf	strncmp@_l
 21245  0A45  3F41               	moviw [1]fsr1
 21246  0A46  00F2               	movwf	strncmp@_l+1
 21247  0A47  3041               	movlw	low (STR_61| (0+32768))
 21248  0A48  00F3               	movwf	strncmp@_r
 21249  0A49  30BA               	movlw	high (STR_61| (0+32768))
 21250  0A4A  00F4               	movwf	strncmp@_r+1
 21251  0A4B  3002               	movlw	2
 21252  0A4C  00F5               	movwf	strncmp@n
 21253  0A4D  3000               	movlw	0
 21254  0A4E  00F6               	movwf	strncmp@n+1
 21255  0A4F  31B7  27AE  3188   	fcall	_strncmp
 21256  0A52  0871               	movf	?_strncmp,w
 21257  0A53  0472               	iorwf	?_strncmp+1,w
 21258  0A54  1D03               	btfss	3,2
 21259  0A55  2A9F               	goto	l6986
 21260                           
 21261                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
 21262  0A56  0020               	movlb	0	; select bank0
 21263  0A57  0859               	movf	vfpfcnvrt@fmt,w
 21264  0A58  0086               	movwf	6
 21265  0A59  0187               	clrf	7
 21266  0A5A  3002               	movlw	2
 21267  0A5B  0781               	addwf	1,f
 21268  0A5C  3141               	addfsr 1,1
 21269  0A5D  1803               	skipnc
 21270  0A5E  0A81               	incf	1,f
 21271                           
 21272                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 21273  0A5F  085A               	movf	vfpfcnvrt@ap,w
 21274  0A60  0086               	movwf	6
 21275  0A61  0187               	clrf	7
 21276  0A62  0801               	movf	1,w
 21277  0A63  0084               	movwf	4
 21278  0A64  0185               	clrf	5
 21279  0A65  3002               	movlw	2
 21280  0A66  0781               	addwf	1,f
 21281  0A67  3F00               	moviw [0]fsr0
 21282  0A68  0021               	movlb	1	; select bank1
 21283  0A69  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21284  0A6A  3F01               	moviw [1]fsr0
 21285  0A6B  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21286  0A6C  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21287  0A6D  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21288  0A6E  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21289  0A6F  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21290  0A70  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21291  0A71  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21292                           
 21293                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1049:      
      +                                 return otoa(fp, llu);
 21294  0A72  0020               	movlb	0	; select bank0
 21295  0A73  0858               	movf	vfpfcnvrt@fp+1,w
 21296  0A74  00B1               	movwf	otoa@fp+1
 21297  0A75  0857               	movf	vfpfcnvrt@fp,w
 21298  0A76  00B0               	movwf	otoa@fp
 21299  0A77  0021               	movlb	1	; select bank1
 21300  0A78  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21301  0A79  0020               	movlb	0	; select bank0
 21302  0A7A  00B2               	movwf	otoa@d
 21303  0A7B  0021               	movlb	1	; select bank1
 21304  0A7C  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21305  0A7D  0020               	movlb	0	; select bank0
 21306  0A7E  00B3               	movwf	otoa@d+1
 21307  0A7F  0021               	movlb	1	; select bank1
 21308  0A80  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21309  0A81  0020               	movlb	0	; select bank0
 21310  0A82  00B4               	movwf	otoa@d+2
 21311  0A83  0021               	movlb	1	; select bank1
 21312  0A84  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21313  0A85  0020               	movlb	0	; select bank0
 21314  0A86  00B5               	movwf	otoa@d+3
 21315  0A87  0021               	movlb	1	; select bank1
 21316  0A88  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21317  0A89  0020               	movlb	0	; select bank0
 21318  0A8A  00B6               	movwf	otoa@d+4
 21319  0A8B  0021               	movlb	1	; select bank1
 21320  0A8C  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21321  0A8D  0020               	movlb	0	; select bank0
 21322  0A8E  00B7               	movwf	otoa@d+5
 21323  0A8F  0021               	movlb	1	; select bank1
 21324  0A90  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21325  0A91  0020               	movlb	0	; select bank0
 21326  0A92  00B8               	movwf	otoa@d+6
 21327  0A93  0021               	movlb	1	; select bank1
 21328  0A94  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21329  0A95  0020               	movlb	0	; select bank0
 21330  0A96  00B9               	movwf	otoa@d+7
 21331  0A97  31A2  22F5         	fcall	_otoa
 21332  0A99  0020               	movlb	0	; select bank0
 21333  0A9A  0831               	movf	?_otoa+1,w
 21334  0A9B  00D8               	movwf	?_vfpfcnvrt+1
 21335  0A9C  0830               	movf	?_otoa,w
 21336  0A9D  00D7               	movwf	?_vfpfcnvrt
 21337  0A9E  0008               	return
 21338  0A9F                     l6986:	
 21339                           
 21340                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
 21341  0A9F  0020               	movlb	0	; select bank0
 21342  0AA0  0859               	movf	vfpfcnvrt@fmt,w
 21343  0AA1  0086               	movwf	6
 21344  0AA2  0187               	clrf	7
 21345  0AA3  3F40               	moviw [0]fsr1
 21346  0AA4  00F1               	movwf	strncmp@_l
 21347  0AA5  3F41               	moviw [1]fsr1
 21348  0AA6  00F2               	movwf	strncmp@_l+1
 21349  0AA7  3025               	movlw	low (STR_66| (0+32768))
 21350  0AA8  00F3               	movwf	strncmp@_r
 21351  0AA9  30BA               	movlw	high (STR_66| (0+32768))
 21352  0AAA  00F4               	movwf	strncmp@_r+1
 21353  0AAB  3003               	movlw	3
 21354  0AAC  00F5               	movwf	strncmp@n
 21355  0AAD  3000               	movlw	0
 21356  0AAE  00F6               	movwf	strncmp@n+1
 21357  0AAF  31B7  27AE  3188   	fcall	_strncmp
 21358  0AB2  0871               	movf	?_strncmp,w
 21359  0AB3  0472               	iorwf	?_strncmp+1,w
 21360  0AB4  1D03               	btfss	3,2
 21361  0AB5  2B36               	goto	l6998
 21362                           
 21363                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
 21364  0AB6  0020               	movlb	0	; select bank0
 21365  0AB7  0859               	movf	vfpfcnvrt@fmt,w
 21366  0AB8  0086               	movwf	6
 21367  0AB9  0187               	clrf	7
 21368  0ABA  3003               	movlw	3
 21369  0ABB  0781               	addwf	1,f
 21370  0ABC  3141               	addfsr 1,1
 21371  0ABD  1803               	skipnc
 21372  0ABE  0A81               	incf	1,f
 21373                           
 21374                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
 21375  0ABF  085A               	movf	vfpfcnvrt@ap,w
 21376  0AC0  0086               	movwf	6
 21377  0AC1  0187               	clrf	7
 21378  0AC2  0801               	movf	1,w
 21379  0AC3  0084               	movwf	4
 21380  0AC4  0185               	clrf	5
 21381  0AC5  3002               	movlw	2
 21382  0AC6  0781               	addwf	1,f
 21383  0AC7  3F00               	moviw [0]fsr0
 21384  0AC8  0021               	movlb	1	; select bank1
 21385  0AC9  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 21386  0ACA  3F01               	moviw [1]fsr0
 21387  0ACB  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 21388                           
 21389                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
 21390  0ACC  0830               	movf	vfpfcnvrt@vp^(0+128),w
 21391  0ACD  0086               	movwf	6
 21392  0ACE  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 21393  0ACF  0087               	movwf	7
 21394  0AD0  0023               	movlb	3	; select bank3
 21395  0AD1  0844               	movf	_nout^(0+384),w
 21396  0AD2  0081               	movwf	1
 21397  0AD3  2B32               	goto	l6994
 21398  0AD4                     l7000:	
 21399                           
 21400                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
 21401  0AD4  0020               	movlb	0	; select bank0
 21402  0AD5  0859               	movf	vfpfcnvrt@fmt,w
 21403  0AD6  0086               	movwf	6
 21404  0AD7  0187               	clrf	7
 21405  0AD8  3002               	movlw	2
 21406  0AD9  0781               	addwf	1,f
 21407  0ADA  3141               	addfsr 1,1
 21408  0ADB  1803               	skipnc
 21409  0ADC  0A81               	incf	1,f
 21410                           
 21411                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
 21412  0ADD  085A               	movf	vfpfcnvrt@ap,w
 21413  0ADE  0086               	movwf	6
 21414  0ADF  0187               	clrf	7
 21415  0AE0  0801               	movf	1,w
 21416  0AE1  0084               	movwf	4
 21417  0AE2  0185               	clrf	5
 21418  0AE3  3002               	movlw	2
 21419  0AE4  0781               	addwf	1,f
 21420  0AE5  3F00               	moviw [0]fsr0
 21421  0AE6  0021               	movlb	1	; select bank1
 21422  0AE7  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 21423  0AE8  3F01               	moviw [1]fsr0
 21424  0AE9  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 21425                           
 21426                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
 21427  0AEA  0830               	movf	vfpfcnvrt@vp^(0+128),w
 21428  0AEB  0086               	movwf	6
 21429  0AEC  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 21430  0AED  0087               	movwf	7
 21431  0AEE  0023               	movlb	3	; select bank3
 21432  0AEF  0844               	movf	_nout^(0+384),w
 21433  0AF0  3FC0               	movwi [0]fsr1
 21434  0AF1  0845               	movf	(_nout+1)^(0+384),w
 21435  0AF2  3FC1               	movwi [1]fsr1
 21436  0AF3  2B32               	goto	l6994
 21437  0AF4                     l7012:	
 21438                           
 21439                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
 21440  0AF4  0859               	movf	vfpfcnvrt@fmt,w
 21441  0AF5  0086               	movwf	6
 21442  0AF6  0187               	clrf	7
 21443  0AF7  3001               	movlw	1
 21444  0AF8  0781               	addwf	1,f
 21445  0AF9  3141               	addfsr 1,1
 21446  0AFA  1803               	skipnc
 21447  0AFB  0A81               	incf	1,f
 21448                           
 21449                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
 21450  0AFC  085A               	movf	vfpfcnvrt@ap,w
 21451  0AFD  0086               	movwf	6
 21452  0AFE  0187               	clrf	7
 21453  0AFF  0801               	movf	1,w
 21454  0B00  0084               	movwf	4
 21455  0B01  0185               	clrf	5
 21456  0B02  3002               	movlw	2
 21457  0B03  0781               	addwf	1,f
 21458  0B04  3F00               	moviw [0]fsr0
 21459  0B05  0021               	movlb	1	; select bank1
 21460  0B06  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 21461  0B07  3F01               	moviw [1]fsr0
 21462  0B08  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 21463                           
 21464                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
 21465  0B09  0830               	movf	vfpfcnvrt@vp^(0+128),w
 21466  0B0A  0086               	movwf	6
 21467  0B0B  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 21468  0B0C  0087               	movwf	7
 21469  0B0D  0023               	movlb	3	; select bank3
 21470  0B0E  0844               	movf	_nout^(0+384),w
 21471  0B0F  3FC0               	movwi [0]fsr1
 21472  0B10  0845               	movf	(_nout+1)^(0+384),w
 21473  0B11  3FC1               	movwi [1]fsr1
 21474  0B12  2B32               	goto	l6994
 21475  0B13                     l7024:	
 21476                           
 21477                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
 21478  0B13  0020               	movlb	0	; select bank0
 21479  0B14  0859               	movf	vfpfcnvrt@fmt,w
 21480  0B15  0086               	movwf	6
 21481  0B16  0187               	clrf	7
 21482  0B17  3002               	movlw	2
 21483  0B18  0781               	addwf	1,f
 21484  0B19  3141               	addfsr 1,1
 21485  0B1A  1803               	skipnc
 21486  0B1B  0A81               	incf	1,f
 21487                           
 21488                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
 21489  0B1C  085A               	movf	vfpfcnvrt@ap,w
 21490  0B1D  0086               	movwf	6
 21491  0B1E  0187               	clrf	7
 21492  0B1F  0801               	movf	1,w
 21493  0B20  0084               	movwf	4
 21494  0B21  0185               	clrf	5
 21495  0B22  3002               	movlw	2
 21496  0B23  0781               	addwf	1,f
 21497  0B24  3F00               	moviw [0]fsr0
 21498  0B25  0021               	movlb	1	; select bank1
 21499  0B26  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 21500  0B27  3F01               	moviw [1]fsr0
 21501  0B28  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 21502                           
 21503                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
 21504  0B29  0830               	movf	vfpfcnvrt@vp^(0+128),w
 21505  0B2A  0086               	movwf	6
 21506  0B2B  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 21507  0B2C  0087               	movwf	7
 21508  0B2D  0023               	movlb	3	; select bank3
 21509  0B2E  0844               	movf	_nout^(0+384),w
 21510  0B2F  3FC0               	movwi [0]fsr1
 21511  0B30  0845               	movf	(_nout+1)^(0+384),w
 21512  0B31  3FC1               	movwi [1]fsr1
 21513  0B32                     l6994:	
 21514                           
 21515                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
 21516  0B32  0020               	movlb	0	; select bank0
 21517  0B33  01D7               	clrf	?_vfpfcnvrt
 21518  0B34  01D8               	clrf	?_vfpfcnvrt+1
 21519  0B35  0008               	return
 21520  0B36                     l6998:	
 21521                           
 21522                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
 21523  0B36  0020               	movlb	0	; select bank0
 21524  0B37  0859               	movf	vfpfcnvrt@fmt,w
 21525  0B38  0086               	movwf	6
 21526  0B39  0187               	clrf	7
 21527  0B3A  3F40               	moviw [0]fsr1
 21528  0B3B  00F1               	movwf	strncmp@_l
 21529  0B3C  3F41               	moviw [1]fsr1
 21530  0B3D  00F2               	movwf	strncmp@_l+1
 21531  0B3E  3026               	movlw	low ((STR_66+1)| (0+32768))
 21532  0B3F  00F3               	movwf	strncmp@_r
 21533  0B40  30BA               	movlw	high ((STR_66+1)| (0+32768))
 21534  0B41  00F4               	movwf	strncmp@_r+1
 21535  0B42  3002               	movlw	2
 21536  0B43  00F5               	movwf	strncmp@n
 21537  0B44  3000               	movlw	0
 21538  0B45  00F6               	movwf	strncmp@n+1
 21539  0B46  31B7  27AE  3188   	fcall	_strncmp
 21540  0B49  0871               	movf	?_strncmp,w
 21541  0B4A  0472               	iorwf	?_strncmp+1,w
 21542  0B4B  1903               	btfsc	3,2
 21543  0B4C  2AD4               	goto	l7000
 21544                           
 21545                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
 21546  0B4D  0020               	movlb	0	; select bank0
 21547  0B4E  0859               	movf	vfpfcnvrt@fmt,w
 21548  0B4F  0086               	movwf	6
 21549  0B50  0187               	clrf	7
 21550  0B51  3F40               	moviw [0]fsr1
 21551  0B52  00DB               	movwf	??_vfpfcnvrt
 21552  0B53  3F41               	moviw [1]fsr1
 21553  0B54  00DC               	movwf	??_vfpfcnvrt+1
 21554  0B55  085B               	movf	??_vfpfcnvrt,w
 21555  0B56  0084               	movwf	4
 21556  0B57  085C               	movf	??_vfpfcnvrt+1,w
 21557  0B58  0085               	movwf	5
 21558  0B59  0012               	moviw fsr0++
 21559  0B5A  3A6E               	xorlw	110
 21560  0B5B  1903               	btfsc	3,2
 21561  0B5C  2AF4               	goto	l7012
 21562                           
 21563                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
 21564  0B5D  0859               	movf	vfpfcnvrt@fmt,w
 21565  0B5E  0086               	movwf	6
 21566  0B5F  0187               	clrf	7
 21567  0B60  3F40               	moviw [0]fsr1
 21568  0B61  00F1               	movwf	strncmp@_l
 21569  0B62  3F41               	moviw [1]fsr1
 21570  0B63  00F2               	movwf	strncmp@_l+1
 21571  0B64  303E               	movlw	low (STR_76| (0+32768))
 21572  0B65  00F3               	movwf	strncmp@_r
 21573  0B66  30BA               	movlw	high (STR_76| (0+32768))
 21574  0B67  00F4               	movwf	strncmp@_r+1
 21575  0B68  3002               	movlw	2
 21576  0B69  00F5               	movwf	strncmp@n
 21577  0B6A  3000               	movlw	0
 21578  0B6B  00F6               	movwf	strncmp@n+1
 21579  0B6C  31B7  27AE  3188   	fcall	_strncmp
 21580  0B6F  0871               	movf	?_strncmp,w
 21581  0B70  0472               	iorwf	?_strncmp+1,w
 21582  0B71  1903               	btfsc	3,2
 21583  0B72  2B13               	goto	l7024
 21584                           
 21585                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
 21586  0B73  0020               	movlb	0	; select bank0
 21587  0B74  0859               	movf	vfpfcnvrt@fmt,w
 21588  0B75  0086               	movwf	6
 21589  0B76  0187               	clrf	7
 21590  0B77  3F40               	moviw [0]fsr1
 21591  0B78  00DB               	movwf	??_vfpfcnvrt
 21592  0B79  3F41               	moviw [1]fsr1
 21593  0B7A  00DC               	movwf	??_vfpfcnvrt+1
 21594  0B7B  085B               	movf	??_vfpfcnvrt,w
 21595  0B7C  0084               	movwf	4
 21596  0B7D  085C               	movf	??_vfpfcnvrt+1,w
 21597  0B7E  0085               	movwf	5
 21598  0B7F  0012               	moviw fsr0++
 21599  0B80  3A70               	xorlw	112
 21600  0B81  1D03               	btfss	3,2
 21601  0B82  2BCF               	goto	l7044
 21602                           
 21603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
 21604  0B83  0859               	movf	vfpfcnvrt@fmt,w
 21605  0B84  0086               	movwf	6
 21606  0B85  0187               	clrf	7
 21607  0B86  3001               	movlw	1
 21608  0B87  0781               	addwf	1,f
 21609  0B88  3141               	addfsr 1,1
 21610  0B89  1803               	skipnc
 21611  0B8A  0A81               	incf	1,f
 21612                           
 21613                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
 21614  0B8B  085A               	movf	vfpfcnvrt@ap,w
 21615  0B8C  0086               	movwf	6
 21616  0B8D  0187               	clrf	7
 21617  0B8E  0801               	movf	1,w
 21618  0B8F  0084               	movwf	4
 21619  0B90  0185               	clrf	5
 21620  0B91  3002               	movlw	2
 21621  0B92  0781               	addwf	1,f
 21622  0B93  3F00               	moviw [0]fsr0
 21623  0B94  0021               	movlb	1	; select bank1
 21624  0B95  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21625  0B96  3F01               	moviw [1]fsr0
 21626  0B97  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21627  0B98  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21628  0B99  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21629  0B9A  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21630  0B9B  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21631  0B9C  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21632  0B9D  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21633                           
 21634                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
 21635  0B9E  0020               	movlb	0	; select bank0
 21636  0B9F  0858               	movf	vfpfcnvrt@fp+1,w
 21637  0BA0  00B1               	movwf	xtoa@fp+1
 21638  0BA1  0857               	movf	vfpfcnvrt@fp,w
 21639  0BA2  00B0               	movwf	xtoa@fp
 21640  0BA3  0021               	movlb	1	; select bank1
 21641  0BA4  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21642  0BA5  0020               	movlb	0	; select bank0
 21643  0BA6  00B2               	movwf	xtoa@d
 21644  0BA7  0021               	movlb	1	; select bank1
 21645  0BA8  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21646  0BA9  0020               	movlb	0	; select bank0
 21647  0BAA  00B3               	movwf	xtoa@d+1
 21648  0BAB  0021               	movlb	1	; select bank1
 21649  0BAC  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21650  0BAD  0020               	movlb	0	; select bank0
 21651  0BAE  00B4               	movwf	xtoa@d+2
 21652  0BAF  0021               	movlb	1	; select bank1
 21653  0BB0  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21654  0BB1  0020               	movlb	0	; select bank0
 21655  0BB2  00B5               	movwf	xtoa@d+3
 21656  0BB3  0021               	movlb	1	; select bank1
 21657  0BB4  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21658  0BB5  0020               	movlb	0	; select bank0
 21659  0BB6  00B6               	movwf	xtoa@d+4
 21660  0BB7  0021               	movlb	1	; select bank1
 21661  0BB8  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21662  0BB9  0020               	movlb	0	; select bank0
 21663  0BBA  00B7               	movwf	xtoa@d+5
 21664  0BBB  0021               	movlb	1	; select bank1
 21665  0BBC  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21666  0BBD  0020               	movlb	0	; select bank0
 21667  0BBE  00B8               	movwf	xtoa@d+6
 21668  0BBF  0021               	movlb	1	; select bank1
 21669  0BC0  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21670  0BC1  0020               	movlb	0	; select bank0
 21671  0BC2  00B9               	movwf	xtoa@d+7
 21672  0BC3  3078               	movlw	120
 21673  0BC4  00DB               	movwf	??_vfpfcnvrt
 21674  0BC5  085B               	movf	??_vfpfcnvrt,w
 21675  0BC6  00BA               	movwf	xtoa@x
 21676  0BC7  319A  2221         	fcall	_xtoa
 21677  0BC9  0020               	movlb	0	; select bank0
 21678  0BCA  0831               	movf	?_xtoa+1,w
 21679  0BCB  00D8               	movwf	?_vfpfcnvrt+1
 21680  0BCC  0830               	movf	?_xtoa,w
 21681  0BCD  00D7               	movwf	?_vfpfcnvrt
 21682  0BCE  0008               	return
 21683  0BCF                     l7044:	
 21684                           
 21685                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 21686  0BCF  0859               	movf	vfpfcnvrt@fmt,w
 21687  0BD0  0086               	movwf	6
 21688  0BD1  0187               	clrf	7
 21689  0BD2  3F40               	moviw [0]fsr1
 21690  0BD3  00DB               	movwf	??_vfpfcnvrt
 21691  0BD4  3F41               	moviw [1]fsr1
 21692  0BD5  00DC               	movwf	??_vfpfcnvrt+1
 21693  0BD6  085B               	movf	??_vfpfcnvrt,w
 21694  0BD7  0084               	movwf	4
 21695  0BD8  085C               	movf	??_vfpfcnvrt+1,w
 21696  0BD9  0085               	movwf	5
 21697  0BDA  0012               	moviw fsr0++
 21698  0BDB  3A73               	xorlw	115
 21699  0BDC  1D03               	btfss	3,2
 21700  0BDD  2C08               	goto	l7054
 21701                           
 21702                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 21703  0BDE  0859               	movf	vfpfcnvrt@fmt,w
 21704  0BDF  0086               	movwf	6
 21705  0BE0  0187               	clrf	7
 21706  0BE1  3001               	movlw	1
 21707  0BE2  0781               	addwf	1,f
 21708  0BE3  3141               	addfsr 1,1
 21709  0BE4  1803               	skipnc
 21710  0BE5  0A81               	incf	1,f
 21711                           
 21712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 21713  0BE6  085A               	movf	vfpfcnvrt@ap,w
 21714  0BE7  0086               	movwf	6
 21715  0BE8  0187               	clrf	7
 21716  0BE9  0801               	movf	1,w
 21717  0BEA  0084               	movwf	4
 21718  0BEB  0185               	clrf	5
 21719  0BEC  3002               	movlw	2
 21720  0BED  0781               	addwf	1,f
 21721  0BEE  3F00               	moviw [0]fsr0
 21722  0BEF  0021               	movlb	1	; select bank1
 21723  0BF0  00A0               	movwf	vfpfcnvrt@cp^(0+128)
 21724  0BF1  3F01               	moviw [1]fsr0
 21725  0BF2  00A1               	movwf	(vfpfcnvrt@cp+1)^(0+128)
 21726                           
 21727                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 21728  0BF3  0020               	movlb	0	; select bank0
 21729  0BF4  0858               	movf	vfpfcnvrt@fp+1,w
 21730  0BF5  00A1               	movwf	stoa@fp+1
 21731  0BF6  0857               	movf	vfpfcnvrt@fp,w
 21732  0BF7  00A0               	movwf	stoa@fp
 21733  0BF8  0021               	movlb	1	; select bank1
 21734  0BF9  0821               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 21735  0BFA  0020               	movlb	0	; select bank0
 21736  0BFB  00A3               	movwf	stoa@s+1
 21737  0BFC  0021               	movlb	1	; select bank1
 21738  0BFD  0820               	movf	vfpfcnvrt@cp^(0+128),w
 21739  0BFE  0020               	movlb	0	; select bank0
 21740  0BFF  00A2               	movwf	stoa@s
 21741  0C00  3198  2009         	fcall	_stoa
 21742  0C02  0020               	movlb	0	; select bank0
 21743  0C03  0821               	movf	?_stoa+1,w
 21744  0C04  00D8               	movwf	?_vfpfcnvrt+1
 21745  0C05  0820               	movf	?_stoa,w
 21746  0C06  00D7               	movwf	?_vfpfcnvrt
 21747  0C07  0008               	return
 21748  0C08                     l7054:	
 21749                           
 21750                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
 21751  0C08  0859               	movf	vfpfcnvrt@fmt,w
 21752  0C09  0086               	movwf	6
 21753  0C0A  0187               	clrf	7
 21754  0C0B  3F40               	moviw [0]fsr1
 21755  0C0C  00F1               	movwf	strncmp@_l
 21756  0C0D  3F41               	moviw [1]fsr1
 21757  0C0E  00F2               	movwf	strncmp@_l+1
 21758  0C0F  302D               	movlw	low (STR_81| (0+32768))
 21759  0C10  00F3               	movwf	strncmp@_r
 21760  0C11  30BA               	movlw	high (STR_81| (0+32768))
 21761  0C12  00F4               	movwf	strncmp@_r+1
 21762  0C13  3003               	movlw	3
 21763  0C14  00F5               	movwf	strncmp@n
 21764  0C15  3000               	movlw	0
 21765  0C16  00F6               	movwf	strncmp@n+1
 21766  0C17  31B7  27AE  3188   	fcall	_strncmp
 21767  0C1A  0871               	movf	?_strncmp,w
 21768  0C1B  0472               	iorwf	?_strncmp+1,w
 21769  0C1C  1D03               	btfss	3,2
 21770  0C1D  2C66               	goto	l7064
 21771                           
 21772                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
 21773  0C1E  0020               	movlb	0	; select bank0
 21774  0C1F  0859               	movf	vfpfcnvrt@fmt,w
 21775  0C20  0086               	movwf	6
 21776  0C21  0187               	clrf	7
 21777  0C22  3003               	movlw	3
 21778  0C23  0781               	addwf	1,f
 21779  0C24  3141               	addfsr 1,1
 21780  0C25  1803               	skipnc
 21781  0C26  0A81               	incf	1,f
 21782                           
 21783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 21784  0C27  085A               	movf	vfpfcnvrt@ap,w
 21785  0C28  0086               	movwf	6
 21786  0C29  0187               	clrf	7
 21787  0C2A  0801               	movf	1,w
 21788  0C2B  0084               	movwf	4
 21789  0C2C  0185               	clrf	5
 21790  0C2D  3002               	movlw	2
 21791  0C2E  0781               	addwf	1,f
 21792  0C2F  0800               	movf	0,w
 21793  0C30  0021               	movlb	1	; select bank1
 21794  0C31  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21795  0C32  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 21796  0C33  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21797  0C34  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21798  0C35  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21799  0C36  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21800  0C37  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21801  0C38  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21802                           
 21803                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
 21804  0C39  0020               	movlb	0	; select bank0
 21805  0C3A  0858               	movf	vfpfcnvrt@fp+1,w
 21806  0C3B  00B1               	movwf	utoa@fp+1
 21807  0C3C  0857               	movf	vfpfcnvrt@fp,w
 21808  0C3D  00B0               	movwf	utoa@fp
 21809  0C3E  0021               	movlb	1	; select bank1
 21810  0C3F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21811  0C40  0020               	movlb	0	; select bank0
 21812  0C41  00B2               	movwf	utoa@d
 21813  0C42  0021               	movlb	1	; select bank1
 21814  0C43  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21815  0C44  0020               	movlb	0	; select bank0
 21816  0C45  00B3               	movwf	utoa@d+1
 21817  0C46  0021               	movlb	1	; select bank1
 21818  0C47  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21819  0C48  0020               	movlb	0	; select bank0
 21820  0C49  00B4               	movwf	utoa@d+2
 21821  0C4A  0021               	movlb	1	; select bank1
 21822  0C4B  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21823  0C4C  0020               	movlb	0	; select bank0
 21824  0C4D  00B5               	movwf	utoa@d+3
 21825  0C4E  0021               	movlb	1	; select bank1
 21826  0C4F  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21827  0C50  0020               	movlb	0	; select bank0
 21828  0C51  00B6               	movwf	utoa@d+4
 21829  0C52  0021               	movlb	1	; select bank1
 21830  0C53  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21831  0C54  0020               	movlb	0	; select bank0
 21832  0C55  00B7               	movwf	utoa@d+5
 21833  0C56  0021               	movlb	1	; select bank1
 21834  0C57  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21835  0C58  0020               	movlb	0	; select bank0
 21836  0C59  00B8               	movwf	utoa@d+6
 21837  0C5A  0021               	movlb	1	; select bank1
 21838  0C5B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21839  0C5C  0020               	movlb	0	; select bank0
 21840  0C5D  00B9               	movwf	utoa@d+7
 21841  0C5E  31A2  2214         	fcall	_utoa
 21842  0C60  0020               	movlb	0	; select bank0
 21843  0C61  0831               	movf	?_utoa+1,w
 21844  0C62  00D8               	movwf	?_vfpfcnvrt+1
 21845  0C63  0830               	movf	?_utoa,w
 21846  0C64  00D7               	movwf	?_vfpfcnvrt
 21847  0C65  0008               	return
 21848  0C66                     l7064:	
 21849                           
 21850                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
 21851  0C66  0020               	movlb	0	; select bank0
 21852  0C67  0859               	movf	vfpfcnvrt@fmt,w
 21853  0C68  0086               	movwf	6
 21854  0C69  0187               	clrf	7
 21855  0C6A  3F40               	moviw [0]fsr1
 21856  0C6B  00F1               	movwf	strncmp@_l
 21857  0C6C  3F41               	moviw [1]fsr1
 21858  0C6D  00F2               	movwf	strncmp@_l+1
 21859  0C6E  302E               	movlw	low ((STR_81+1)| (0+32768))
 21860  0C6F  00F3               	movwf	strncmp@_r
 21861  0C70  30BA               	movlw	high ((STR_81+1)| (0+32768))
 21862  0C71  00F4               	movwf	strncmp@_r+1
 21863  0C72  3002               	movlw	2
 21864  0C73  00F5               	movwf	strncmp@n
 21865  0C74  3000               	movlw	0
 21866  0C75  00F6               	movwf	strncmp@n+1
 21867  0C76  31B7  27AE  3188   	fcall	_strncmp
 21868  0C79  0871               	movf	?_strncmp,w
 21869  0C7A  0472               	iorwf	?_strncmp+1,w
 21870  0C7B  1D03               	btfss	3,2
 21871  0C7C  2CC6               	goto	l7074
 21872                           
 21873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
 21874  0C7D  0020               	movlb	0	; select bank0
 21875  0C7E  0859               	movf	vfpfcnvrt@fmt,w
 21876  0C7F  0086               	movwf	6
 21877  0C80  0187               	clrf	7
 21878  0C81  3002               	movlw	2
 21879  0C82  0781               	addwf	1,f
 21880  0C83  3141               	addfsr 1,1
 21881  0C84  1803               	skipnc
 21882  0C85  0A81               	incf	1,f
 21883                           
 21884                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 21885  0C86  085A               	movf	vfpfcnvrt@ap,w
 21886  0C87  0086               	movwf	6
 21887  0C88  0187               	clrf	7
 21888  0C89  0801               	movf	1,w
 21889  0C8A  0084               	movwf	4
 21890  0C8B  0185               	clrf	5
 21891  0C8C  3002               	movlw	2
 21892  0C8D  0781               	addwf	1,f
 21893  0C8E  3F00               	moviw [0]fsr0
 21894  0C8F  0021               	movlb	1	; select bank1
 21895  0C90  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21896  0C91  3F01               	moviw [1]fsr0
 21897  0C92  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21898  0C93  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21899  0C94  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21900  0C95  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21901  0C96  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21902  0C97  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21903  0C98  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21904                           
 21905                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1177:      
      +                                 return utoa(fp, llu);
 21906  0C99  0020               	movlb	0	; select bank0
 21907  0C9A  0858               	movf	vfpfcnvrt@fp+1,w
 21908  0C9B  00B1               	movwf	utoa@fp+1
 21909  0C9C  0857               	movf	vfpfcnvrt@fp,w
 21910  0C9D  00B0               	movwf	utoa@fp
 21911  0C9E  0021               	movlb	1	; select bank1
 21912  0C9F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21913  0CA0  0020               	movlb	0	; select bank0
 21914  0CA1  00B2               	movwf	utoa@d
 21915  0CA2  0021               	movlb	1	; select bank1
 21916  0CA3  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21917  0CA4  0020               	movlb	0	; select bank0
 21918  0CA5  00B3               	movwf	utoa@d+1
 21919  0CA6  0021               	movlb	1	; select bank1
 21920  0CA7  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21921  0CA8  0020               	movlb	0	; select bank0
 21922  0CA9  00B4               	movwf	utoa@d+2
 21923  0CAA  0021               	movlb	1	; select bank1
 21924  0CAB  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21925  0CAC  0020               	movlb	0	; select bank0
 21926  0CAD  00B5               	movwf	utoa@d+3
 21927  0CAE  0021               	movlb	1	; select bank1
 21928  0CAF  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21929  0CB0  0020               	movlb	0	; select bank0
 21930  0CB1  00B6               	movwf	utoa@d+4
 21931  0CB2  0021               	movlb	1	; select bank1
 21932  0CB3  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21933  0CB4  0020               	movlb	0	; select bank0
 21934  0CB5  00B7               	movwf	utoa@d+5
 21935  0CB6  0021               	movlb	1	; select bank1
 21936  0CB7  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21937  0CB8  0020               	movlb	0	; select bank0
 21938  0CB9  00B8               	movwf	utoa@d+6
 21939  0CBA  0021               	movlb	1	; select bank1
 21940  0CBB  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21941  0CBC  0020               	movlb	0	; select bank0
 21942  0CBD  00B9               	movwf	utoa@d+7
 21943  0CBE  31A2  2214         	fcall	_utoa
 21944  0CC0  0020               	movlb	0	; select bank0
 21945  0CC1  0831               	movf	?_utoa+1,w
 21946  0CC2  00D8               	movwf	?_vfpfcnvrt+1
 21947  0CC3  0830               	movf	?_utoa,w
 21948  0CC4  00D7               	movwf	?_vfpfcnvrt
 21949  0CC5  0008               	return
 21950  0CC6                     l7074:	
 21951                           
 21952                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 21953  0CC6  0020               	movlb	0	; select bank0
 21954  0CC7  0859               	movf	vfpfcnvrt@fmt,w
 21955  0CC8  0086               	movwf	6
 21956  0CC9  0187               	clrf	7
 21957  0CCA  3F40               	moviw [0]fsr1
 21958  0CCB  00DB               	movwf	??_vfpfcnvrt
 21959  0CCC  3F41               	moviw [1]fsr1
 21960  0CCD  00DC               	movwf	??_vfpfcnvrt+1
 21961  0CCE  085B               	movf	??_vfpfcnvrt,w
 21962  0CCF  0084               	movwf	4
 21963  0CD0  085C               	movf	??_vfpfcnvrt+1,w
 21964  0CD1  0085               	movwf	5
 21965  0CD2  0012               	moviw fsr0++
 21966  0CD3  3A75               	xorlw	117
 21967  0CD4  1D03               	btfss	3,2
 21968  0CD5  2D1E               	goto	l7084
 21969                           
 21970                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 21971  0CD6  0859               	movf	vfpfcnvrt@fmt,w
 21972  0CD7  0086               	movwf	6
 21973  0CD8  0187               	clrf	7
 21974  0CD9  3001               	movlw	1
 21975  0CDA  0781               	addwf	1,f
 21976  0CDB  3141               	addfsr 1,1
 21977  0CDC  1803               	skipnc
 21978  0CDD  0A81               	incf	1,f
 21979                           
 21980                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 21981  0CDE  085A               	movf	vfpfcnvrt@ap,w
 21982  0CDF  0086               	movwf	6
 21983  0CE0  0187               	clrf	7
 21984  0CE1  0801               	movf	1,w
 21985  0CE2  0084               	movwf	4
 21986  0CE3  0185               	clrf	5
 21987  0CE4  3002               	movlw	2
 21988  0CE5  0781               	addwf	1,f
 21989  0CE6  3F00               	moviw [0]fsr0
 21990  0CE7  0021               	movlb	1	; select bank1
 21991  0CE8  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21992  0CE9  3F01               	moviw [1]fsr0
 21993  0CEA  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21994  0CEB  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21995  0CEC  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21996  0CED  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21997  0CEE  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21998  0CEF  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21999  0CF0  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22000                           
 22001                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 22002  0CF1  0020               	movlb	0	; select bank0
 22003  0CF2  0858               	movf	vfpfcnvrt@fp+1,w
 22004  0CF3  00B1               	movwf	utoa@fp+1
 22005  0CF4  0857               	movf	vfpfcnvrt@fp,w
 22006  0CF5  00B0               	movwf	utoa@fp
 22007  0CF6  0021               	movlb	1	; select bank1
 22008  0CF7  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22009  0CF8  0020               	movlb	0	; select bank0
 22010  0CF9  00B2               	movwf	utoa@d
 22011  0CFA  0021               	movlb	1	; select bank1
 22012  0CFB  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22013  0CFC  0020               	movlb	0	; select bank0
 22014  0CFD  00B3               	movwf	utoa@d+1
 22015  0CFE  0021               	movlb	1	; select bank1
 22016  0CFF  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22017  0D00  0020               	movlb	0	; select bank0
 22018  0D01  00B4               	movwf	utoa@d+2
 22019  0D02  0021               	movlb	1	; select bank1
 22020  0D03  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22021  0D04  0020               	movlb	0	; select bank0
 22022  0D05  00B5               	movwf	utoa@d+3
 22023  0D06  0021               	movlb	1	; select bank1
 22024  0D07  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22025  0D08  0020               	movlb	0	; select bank0
 22026  0D09  00B6               	movwf	utoa@d+4
 22027  0D0A  0021               	movlb	1	; select bank1
 22028  0D0B  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22029  0D0C  0020               	movlb	0	; select bank0
 22030  0D0D  00B7               	movwf	utoa@d+5
 22031  0D0E  0021               	movlb	1	; select bank1
 22032  0D0F  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22033  0D10  0020               	movlb	0	; select bank0
 22034  0D11  00B8               	movwf	utoa@d+6
 22035  0D12  0021               	movlb	1	; select bank1
 22036  0D13  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22037  0D14  0020               	movlb	0	; select bank0
 22038  0D15  00B9               	movwf	utoa@d+7
 22039  0D16  31A2  2214         	fcall	_utoa
 22040  0D18  0020               	movlb	0	; select bank0
 22041  0D19  0831               	movf	?_utoa+1,w
 22042  0D1A  00D8               	movwf	?_vfpfcnvrt+1
 22043  0D1B  0830               	movf	?_utoa,w
 22044  0D1C  00D7               	movwf	?_vfpfcnvrt
 22045  0D1D  0008               	return
 22046  0D1E                     l7084:	
 22047                           
 22048                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
 22049  0D1E  0859               	movf	vfpfcnvrt@fmt,w
 22050  0D1F  0086               	movwf	6
 22051  0D20  0187               	clrf	7
 22052  0D21  3F40               	moviw [0]fsr1
 22053  0D22  00F1               	movwf	strncmp@_l
 22054  0D23  3F41               	moviw [1]fsr1
 22055  0D24  00F2               	movwf	strncmp@_l+1
 22056  0D25  3044               	movlw	low (STR_91| (0+32768))
 22057  0D26  00F3               	movwf	strncmp@_r
 22058  0D27  30BA               	movlw	high (STR_91| (0+32768))
 22059  0D28  00F4               	movwf	strncmp@_r+1
 22060  0D29  3002               	movlw	2
 22061  0D2A  00F5               	movwf	strncmp@n
 22062  0D2B  3000               	movlw	0
 22063  0D2C  00F6               	movwf	strncmp@n+1
 22064  0D2D  31B7  27AE  3188   	fcall	_strncmp
 22065  0D30  0871               	movf	?_strncmp,w
 22066  0D31  0472               	iorwf	?_strncmp+1,w
 22067  0D32  1D03               	btfss	3,2
 22068  0D33  2D7D               	goto	l7094
 22069                           
 22070                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
 22071  0D34  0020               	movlb	0	; select bank0
 22072  0D35  0859               	movf	vfpfcnvrt@fmt,w
 22073  0D36  0086               	movwf	6
 22074  0D37  0187               	clrf	7
 22075  0D38  3002               	movlw	2
 22076  0D39  0781               	addwf	1,f
 22077  0D3A  3141               	addfsr 1,1
 22078  0D3B  1803               	skipnc
 22079  0D3C  0A81               	incf	1,f
 22080                           
 22081                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 22082  0D3D  085A               	movf	vfpfcnvrt@ap,w
 22083  0D3E  0086               	movwf	6
 22084  0D3F  0187               	clrf	7
 22085  0D40  0801               	movf	1,w
 22086  0D41  0084               	movwf	4
 22087  0D42  0185               	clrf	5
 22088  0D43  3002               	movlw	2
 22089  0D44  0781               	addwf	1,f
 22090  0D45  3F00               	moviw [0]fsr0
 22091  0D46  0021               	movlb	1	; select bank1
 22092  0D47  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22093  0D48  3F01               	moviw [1]fsr0
 22094  0D49  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22095  0D4A  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22096  0D4B  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22097  0D4C  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22098  0D4D  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22099  0D4E  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22100  0D4F  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22101                           
 22102                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1241:      
      +                                 return utoa(fp, llu);
 22103  0D50  0020               	movlb	0	; select bank0
 22104  0D51  0858               	movf	vfpfcnvrt@fp+1,w
 22105  0D52  00B1               	movwf	utoa@fp+1
 22106  0D53  0857               	movf	vfpfcnvrt@fp,w
 22107  0D54  00B0               	movwf	utoa@fp
 22108  0D55  0021               	movlb	1	; select bank1
 22109  0D56  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22110  0D57  0020               	movlb	0	; select bank0
 22111  0D58  00B2               	movwf	utoa@d
 22112  0D59  0021               	movlb	1	; select bank1
 22113  0D5A  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22114  0D5B  0020               	movlb	0	; select bank0
 22115  0D5C  00B3               	movwf	utoa@d+1
 22116  0D5D  0021               	movlb	1	; select bank1
 22117  0D5E  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22118  0D5F  0020               	movlb	0	; select bank0
 22119  0D60  00B4               	movwf	utoa@d+2
 22120  0D61  0021               	movlb	1	; select bank1
 22121  0D62  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22122  0D63  0020               	movlb	0	; select bank0
 22123  0D64  00B5               	movwf	utoa@d+3
 22124  0D65  0021               	movlb	1	; select bank1
 22125  0D66  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22126  0D67  0020               	movlb	0	; select bank0
 22127  0D68  00B6               	movwf	utoa@d+4
 22128  0D69  0021               	movlb	1	; select bank1
 22129  0D6A  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22130  0D6B  0020               	movlb	0	; select bank0
 22131  0D6C  00B7               	movwf	utoa@d+5
 22132  0D6D  0021               	movlb	1	; select bank1
 22133  0D6E  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22134  0D6F  0020               	movlb	0	; select bank0
 22135  0D70  00B8               	movwf	utoa@d+6
 22136  0D71  0021               	movlb	1	; select bank1
 22137  0D72  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22138  0D73  0020               	movlb	0	; select bank0
 22139  0D74  00B9               	movwf	utoa@d+7
 22140  0D75  31A2  2214         	fcall	_utoa
 22141  0D77  0020               	movlb	0	; select bank0
 22142  0D78  0831               	movf	?_utoa+1,w
 22143  0D79  00D8               	movwf	?_vfpfcnvrt+1
 22144  0D7A  0830               	movf	?_utoa,w
 22145  0D7B  00D7               	movwf	?_vfpfcnvrt
 22146  0D7C  0008               	return
 22147  0D7D                     l7094:	
 22148                           
 22149                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
 22150  0D7D  0020               	movlb	0	; select bank0
 22151  0D7E  0859               	movf	vfpfcnvrt@fmt,w
 22152  0D7F  0086               	movwf	6
 22153  0D80  0187               	clrf	7
 22154  0D81  3F40               	moviw [0]fsr1
 22155  0D82  00F1               	movwf	strncmp@_l
 22156  0D83  3F41               	moviw [1]fsr1
 22157  0D84  00F2               	movwf	strncmp@_l+1
 22158  0D85  3031               	movlw	low (STR_96| (0+32768))
 22159  0D86  00F3               	movwf	strncmp@_r
 22160  0D87  30BA               	movlw	high (STR_96| (0+32768))
 22161  0D88  00F4               	movwf	strncmp@_r+1
 22162  0D89  3003               	movlw	3
 22163  0D8A  00F5               	movwf	strncmp@n
 22164  0D8B  3000               	movlw	0
 22165  0D8C  00F6               	movwf	strncmp@n+1
 22166  0D8D  31B7  27AE  3188   	fcall	_strncmp
 22167  0D90  0871               	movf	?_strncmp,w
 22168  0D91  0472               	iorwf	?_strncmp+1,w
 22169  0D92  1903               	btfsc	3,2
 22170  0D93  2DAB               	goto	l7098
 22171  0D94  0020               	movlb	0	; select bank0
 22172  0D95  0859               	movf	vfpfcnvrt@fmt,w
 22173  0D96  0086               	movwf	6
 22174  0D97  0187               	clrf	7
 22175  0D98  3F40               	moviw [0]fsr1
 22176  0D99  00F1               	movwf	strncmp@_l
 22177  0D9A  3F41               	moviw [1]fsr1
 22178  0D9B  00F2               	movwf	strncmp@_l+1
 22179  0D9C  3019               	movlw	low (STR_100| (0+32768))
 22180  0D9D  00F3               	movwf	strncmp@_r
 22181  0D9E  30BA               	movlw	high (STR_100| (0+32768))
 22182  0D9F  00F4               	movwf	strncmp@_r+1
 22183  0DA0  3003               	movlw	3
 22184  0DA1  00F5               	movwf	strncmp@n
 22185  0DA2  3000               	movlw	0
 22186  0DA3  00F6               	movwf	strncmp@n+1
 22187  0DA4  31B7  27AE  3188   	fcall	_strncmp
 22188  0DA7  0871               	movf	?_strncmp,w
 22189  0DA8  0472               	iorwf	?_strncmp+1,w
 22190  0DA9  1D03               	btfss	3,2
 22191  0DAA  2E0D               	goto	l7108
 22192  0DAB                     l7098:	
 22193                           
 22194                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
 22195  0DAB  0020               	movlb	0	; select bank0
 22196  0DAC  0859               	movf	vfpfcnvrt@fmt,w
 22197  0DAD  0086               	movwf	6
 22198  0DAE  0187               	clrf	7
 22199  0DAF  3F40               	moviw [0]fsr1
 22200  0DB0  00DB               	movwf	??_vfpfcnvrt
 22201  0DB1  3F41               	moviw [1]fsr1
 22202  0DB2  00DC               	movwf	??_vfpfcnvrt+1
 22203  0DB3  3002               	movlw	2
 22204  0DB4  075B               	addwf	??_vfpfcnvrt,w
 22205  0DB5  0084               	movwf	4
 22206  0DB6  085C               	movf	??_vfpfcnvrt+1,w
 22207  0DB7  1803               	skipnc
 22208  0DB8  0A5C               	incf	??_vfpfcnvrt+1,w
 22209  0DB9  0085               	movwf	5
 22210  0DBA  0800               	movf	0,w	;code access
 22211  0DBB  00DD               	movwf	??_vfpfcnvrt+2
 22212  0DBC  085D               	movf	??_vfpfcnvrt+2,w
 22213  0DBD  0021               	movlb	1	; select bank1
 22214  0DBE  00B2               	movwf	vfpfcnvrt@c^(0+128)
 22215                           
 22216                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
 22217  0DBF  0020               	movlb	0	; select bank0
 22218  0DC0  0859               	movf	vfpfcnvrt@fmt,w
 22219  0DC1  0086               	movwf	6
 22220  0DC2  0187               	clrf	7
 22221  0DC3  3003               	movlw	3
 22222  0DC4  0781               	addwf	1,f
 22223  0DC5  3141               	addfsr 1,1
 22224  0DC6  1803               	skipnc
 22225  0DC7  0A81               	incf	1,f
 22226                           
 22227                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 22228  0DC8  085A               	movf	vfpfcnvrt@ap,w
 22229  0DC9  0086               	movwf	6
 22230  0DCA  0187               	clrf	7
 22231  0DCB  0801               	movf	1,w
 22232  0DCC  0084               	movwf	4
 22233  0DCD  0185               	clrf	5
 22234  0DCE  3002               	movlw	2
 22235  0DCF  0781               	addwf	1,f
 22236  0DD0  0800               	movf	0,w
 22237  0DD1  0021               	movlb	1	; select bank1
 22238  0DD2  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22239  0DD3  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 22240  0DD4  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22241  0DD5  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22242  0DD6  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22243  0DD7  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22244  0DD8  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22245  0DD9  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22246                           
 22247                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
 22248  0DDA  0020               	movlb	0	; select bank0
 22249  0DDB  0858               	movf	vfpfcnvrt@fp+1,w
 22250  0DDC  00B1               	movwf	xtoa@fp+1
 22251  0DDD  0857               	movf	vfpfcnvrt@fp,w
 22252  0DDE  00B0               	movwf	xtoa@fp
 22253  0DDF  0021               	movlb	1	; select bank1
 22254  0DE0  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22255  0DE1  0020               	movlb	0	; select bank0
 22256  0DE2  00B2               	movwf	xtoa@d
 22257  0DE3  0021               	movlb	1	; select bank1
 22258  0DE4  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22259  0DE5  0020               	movlb	0	; select bank0
 22260  0DE6  00B3               	movwf	xtoa@d+1
 22261  0DE7  0021               	movlb	1	; select bank1
 22262  0DE8  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22263  0DE9  0020               	movlb	0	; select bank0
 22264  0DEA  00B4               	movwf	xtoa@d+2
 22265  0DEB  0021               	movlb	1	; select bank1
 22266  0DEC  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22267  0DED  0020               	movlb	0	; select bank0
 22268  0DEE  00B5               	movwf	xtoa@d+3
 22269  0DEF  0021               	movlb	1	; select bank1
 22270  0DF0  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22271  0DF1  0020               	movlb	0	; select bank0
 22272  0DF2  00B6               	movwf	xtoa@d+4
 22273  0DF3  0021               	movlb	1	; select bank1
 22274  0DF4  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22275  0DF5  0020               	movlb	0	; select bank0
 22276  0DF6  00B7               	movwf	xtoa@d+5
 22277  0DF7  0021               	movlb	1	; select bank1
 22278  0DF8  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22279  0DF9  0020               	movlb	0	; select bank0
 22280  0DFA  00B8               	movwf	xtoa@d+6
 22281  0DFB  0021               	movlb	1	; select bank1
 22282  0DFC  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22283  0DFD  0020               	movlb	0	; select bank0
 22284  0DFE  00B9               	movwf	xtoa@d+7
 22285  0DFF  0021               	movlb	1	; select bank1
 22286  0E00  0832               	movf	vfpfcnvrt@c^(0+128),w
 22287  0E01  0020               	movlb	0	; select bank0
 22288  0E02  00DB               	movwf	??_vfpfcnvrt
 22289  0E03  085B               	movf	??_vfpfcnvrt,w
 22290  0E04  00BA               	movwf	xtoa@x
 22291  0E05  319A  2221         	fcall	_xtoa
 22292  0E07  0020               	movlb	0	; select bank0
 22293  0E08  0831               	movf	?_xtoa+1,w
 22294  0E09  00D8               	movwf	?_vfpfcnvrt+1
 22295  0E0A  0830               	movf	?_xtoa,w
 22296  0E0B  00D7               	movwf	?_vfpfcnvrt
 22297  0E0C  0008               	return
 22298  0E0D                     l7108:	
 22299                           
 22300                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
 22301  0E0D  0020               	movlb	0	; select bank0
 22302  0E0E  0859               	movf	vfpfcnvrt@fmt,w
 22303  0E0F  0086               	movwf	6
 22304  0E10  0187               	clrf	7
 22305  0E11  3F40               	moviw [0]fsr1
 22306  0E12  00F1               	movwf	strncmp@_l
 22307  0E13  3F41               	moviw [1]fsr1
 22308  0E14  00F2               	movwf	strncmp@_l+1
 22309  0E15  3032               	movlw	low ((STR_96+1)| (0+32768))
 22310  0E16  00F3               	movwf	strncmp@_r
 22311  0E17  30BA               	movlw	high ((STR_96+1)| (0+32768))
 22312  0E18  00F4               	movwf	strncmp@_r+1
 22313  0E19  3002               	movlw	2
 22314  0E1A  00F5               	movwf	strncmp@n
 22315  0E1B  3000               	movlw	0
 22316  0E1C  00F6               	movwf	strncmp@n+1
 22317  0E1D  31B7  27AE  3188   	fcall	_strncmp
 22318  0E20  0871               	movf	?_strncmp,w
 22319  0E21  0472               	iorwf	?_strncmp+1,w
 22320  0E22  1903               	btfsc	3,2
 22321  0E23  2E3B               	goto	l7112
 22322  0E24  0020               	movlb	0	; select bank0
 22323  0E25  0859               	movf	vfpfcnvrt@fmt,w
 22324  0E26  0086               	movwf	6
 22325  0E27  0187               	clrf	7
 22326  0E28  3F40               	moviw [0]fsr1
 22327  0E29  00F1               	movwf	strncmp@_l
 22328  0E2A  3F41               	moviw [1]fsr1
 22329  0E2B  00F2               	movwf	strncmp@_l+1
 22330  0E2C  301A               	movlw	low ((STR_100+1)| (0+32768))
 22331  0E2D  00F3               	movwf	strncmp@_r
 22332  0E2E  30BA               	movlw	high ((STR_100+1)| (0+32768))
 22333  0E2F  00F4               	movwf	strncmp@_r+1
 22334  0E30  3002               	movlw	2
 22335  0E31  00F5               	movwf	strncmp@n
 22336  0E32  3000               	movlw	0
 22337  0E33  00F6               	movwf	strncmp@n+1
 22338  0E34  31B7  27AE  3188   	fcall	_strncmp
 22339  0E37  0871               	movf	?_strncmp,w
 22340  0E38  0472               	iorwf	?_strncmp+1,w
 22341  0E39  1D03               	btfss	3,2
 22342  0E3A  2E9E               	goto	l7122
 22343  0E3B                     l7112:	
 22344                           
 22345                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
 22346  0E3B  0020               	movlb	0	; select bank0
 22347  0E3C  0859               	movf	vfpfcnvrt@fmt,w
 22348  0E3D  0086               	movwf	6
 22349  0E3E  0187               	clrf	7
 22350  0E3F  3F40               	moviw [0]fsr1
 22351  0E40  00DB               	movwf	??_vfpfcnvrt
 22352  0E41  3F41               	moviw [1]fsr1
 22353  0E42  00DC               	movwf	??_vfpfcnvrt+1
 22354  0E43  3001               	movlw	1
 22355  0E44  075B               	addwf	??_vfpfcnvrt,w
 22356  0E45  0084               	movwf	4
 22357  0E46  085C               	movf	??_vfpfcnvrt+1,w
 22358  0E47  1803               	skipnc
 22359  0E48  0A5C               	incf	??_vfpfcnvrt+1,w
 22360  0E49  0085               	movwf	5
 22361  0E4A  0800               	movf	0,w	;code access
 22362  0E4B  00DD               	movwf	??_vfpfcnvrt+2
 22363  0E4C  085D               	movf	??_vfpfcnvrt+2,w
 22364  0E4D  0021               	movlb	1	; select bank1
 22365  0E4E  00B2               	movwf	vfpfcnvrt@c^(0+128)
 22366                           
 22367                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
 22368  0E4F  0020               	movlb	0	; select bank0
 22369  0E50  0859               	movf	vfpfcnvrt@fmt,w
 22370  0E51  0086               	movwf	6
 22371  0E52  0187               	clrf	7
 22372  0E53  3002               	movlw	2
 22373  0E54  0781               	addwf	1,f
 22374  0E55  3141               	addfsr 1,1
 22375  0E56  1803               	skipnc
 22376  0E57  0A81               	incf	1,f
 22377                           
 22378                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 22379  0E58  085A               	movf	vfpfcnvrt@ap,w
 22380  0E59  0086               	movwf	6
 22381  0E5A  0187               	clrf	7
 22382  0E5B  0801               	movf	1,w
 22383  0E5C  0084               	movwf	4
 22384  0E5D  0185               	clrf	5
 22385  0E5E  3002               	movlw	2
 22386  0E5F  0781               	addwf	1,f
 22387  0E60  3F00               	moviw [0]fsr0
 22388  0E61  0021               	movlb	1	; select bank1
 22389  0E62  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22390  0E63  3F01               	moviw [1]fsr0
 22391  0E64  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22392  0E65  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22393  0E66  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22394  0E67  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22395  0E68  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22396  0E69  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22397  0E6A  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22398                           
 22399                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1269:      
      +                                 return xtoa(fp, llu, c);
 22400  0E6B  0020               	movlb	0	; select bank0
 22401  0E6C  0858               	movf	vfpfcnvrt@fp+1,w
 22402  0E6D  00B1               	movwf	xtoa@fp+1
 22403  0E6E  0857               	movf	vfpfcnvrt@fp,w
 22404  0E6F  00B0               	movwf	xtoa@fp
 22405  0E70  0021               	movlb	1	; select bank1
 22406  0E71  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22407  0E72  0020               	movlb	0	; select bank0
 22408  0E73  00B2               	movwf	xtoa@d
 22409  0E74  0021               	movlb	1	; select bank1
 22410  0E75  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22411  0E76  0020               	movlb	0	; select bank0
 22412  0E77  00B3               	movwf	xtoa@d+1
 22413  0E78  0021               	movlb	1	; select bank1
 22414  0E79  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22415  0E7A  0020               	movlb	0	; select bank0
 22416  0E7B  00B4               	movwf	xtoa@d+2
 22417  0E7C  0021               	movlb	1	; select bank1
 22418  0E7D  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22419  0E7E  0020               	movlb	0	; select bank0
 22420  0E7F  00B5               	movwf	xtoa@d+3
 22421  0E80  0021               	movlb	1	; select bank1
 22422  0E81  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22423  0E82  0020               	movlb	0	; select bank0
 22424  0E83  00B6               	movwf	xtoa@d+4
 22425  0E84  0021               	movlb	1	; select bank1
 22426  0E85  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22427  0E86  0020               	movlb	0	; select bank0
 22428  0E87  00B7               	movwf	xtoa@d+5
 22429  0E88  0021               	movlb	1	; select bank1
 22430  0E89  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22431  0E8A  0020               	movlb	0	; select bank0
 22432  0E8B  00B8               	movwf	xtoa@d+6
 22433  0E8C  0021               	movlb	1	; select bank1
 22434  0E8D  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22435  0E8E  0020               	movlb	0	; select bank0
 22436  0E8F  00B9               	movwf	xtoa@d+7
 22437  0E90  0021               	movlb	1	; select bank1
 22438  0E91  0832               	movf	vfpfcnvrt@c^(0+128),w
 22439  0E92  0020               	movlb	0	; select bank0
 22440  0E93  00DB               	movwf	??_vfpfcnvrt
 22441  0E94  085B               	movf	??_vfpfcnvrt,w
 22442  0E95  00BA               	movwf	xtoa@x
 22443  0E96  319A  2221         	fcall	_xtoa
 22444  0E98  0020               	movlb	0	; select bank0
 22445  0E99  0831               	movf	?_xtoa+1,w
 22446  0E9A  00D8               	movwf	?_vfpfcnvrt+1
 22447  0E9B  0830               	movf	?_xtoa,w
 22448  0E9C  00D7               	movwf	?_vfpfcnvrt
 22449  0E9D  0008               	return
 22450  0E9E                     l7122:	
 22451                           
 22452                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 22453  0E9E  0020               	movlb	0	; select bank0
 22454  0E9F  0859               	movf	vfpfcnvrt@fmt,w
 22455  0EA0  0086               	movwf	6
 22456  0EA1  0187               	clrf	7
 22457  0EA2  3F40               	moviw [0]fsr1
 22458  0EA3  00DB               	movwf	??_vfpfcnvrt
 22459  0EA4  3F41               	moviw [1]fsr1
 22460  0EA5  00DC               	movwf	??_vfpfcnvrt+1
 22461  0EA6  085B               	movf	??_vfpfcnvrt,w
 22462  0EA7  0084               	movwf	4
 22463  0EA8  085C               	movf	??_vfpfcnvrt+1,w
 22464  0EA9  0085               	movwf	5
 22465  0EAA  0012               	moviw fsr0++
 22466  0EAB  3A78               	xorlw	120
 22467  0EAC  1903               	btfsc	3,2
 22468  0EAD  2EBD               	goto	l7126
 22469  0EAE  0859               	movf	vfpfcnvrt@fmt,w
 22470  0EAF  0086               	movwf	6
 22471  0EB0  0187               	clrf	7
 22472  0EB1  3F40               	moviw [0]fsr1
 22473  0EB2  00DB               	movwf	??_vfpfcnvrt
 22474  0EB3  3F41               	moviw [1]fsr1
 22475  0EB4  00DC               	movwf	??_vfpfcnvrt+1
 22476  0EB5  085B               	movf	??_vfpfcnvrt,w
 22477  0EB6  0084               	movwf	4
 22478  0EB7  085C               	movf	??_vfpfcnvrt+1,w
 22479  0EB8  0085               	movwf	5
 22480  0EB9  0012               	moviw fsr0++
 22481  0EBA  3A58               	xorlw	88
 22482  0EBB  1D03               	btfss	3,2
 22483  0EBC  2F1C               	goto	l7136
 22484  0EBD                     l7126:	
 22485                           
 22486                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 22487  0EBD  0859               	movf	vfpfcnvrt@fmt,w
 22488  0EBE  0086               	movwf	6
 22489  0EBF  0187               	clrf	7
 22490  0EC0  3F40               	moviw [0]fsr1
 22491  0EC1  00DB               	movwf	??_vfpfcnvrt
 22492  0EC2  3F41               	moviw [1]fsr1
 22493  0EC3  00DC               	movwf	??_vfpfcnvrt+1
 22494  0EC4  085B               	movf	??_vfpfcnvrt,w
 22495  0EC5  0084               	movwf	4
 22496  0EC6  085C               	movf	??_vfpfcnvrt+1,w
 22497  0EC7  0085               	movwf	5
 22498  0EC8  0800               	movf	0,w	;code access
 22499  0EC9  00DD               	movwf	??_vfpfcnvrt+2
 22500  0ECA  085D               	movf	??_vfpfcnvrt+2,w
 22501  0ECB  0021               	movlb	1	; select bank1
 22502  0ECC  00B2               	movwf	vfpfcnvrt@c^(0+128)
 22503                           
 22504                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 22505  0ECD  0020               	movlb	0	; select bank0
 22506  0ECE  0859               	movf	vfpfcnvrt@fmt,w
 22507  0ECF  0086               	movwf	6
 22508  0ED0  0187               	clrf	7
 22509  0ED1  3001               	movlw	1
 22510  0ED2  0781               	addwf	1,f
 22511  0ED3  3141               	addfsr 1,1
 22512  0ED4  1803               	skipnc
 22513  0ED5  0A81               	incf	1,f
 22514                           
 22515                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 22516  0ED6  085A               	movf	vfpfcnvrt@ap,w
 22517  0ED7  0086               	movwf	6
 22518  0ED8  0187               	clrf	7
 22519  0ED9  0801               	movf	1,w
 22520  0EDA  0084               	movwf	4
 22521  0EDB  0185               	clrf	5
 22522  0EDC  3002               	movlw	2
 22523  0EDD  0781               	addwf	1,f
 22524  0EDE  3F00               	moviw [0]fsr0
 22525  0EDF  0021               	movlb	1	; select bank1
 22526  0EE0  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22527  0EE1  3F01               	moviw [1]fsr0
 22528  0EE2  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22529  0EE3  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22530  0EE4  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22531  0EE5  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22532  0EE6  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22533  0EE7  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22534  0EE8  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22535                           
 22536                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 22537  0EE9  0020               	movlb	0	; select bank0
 22538  0EEA  0858               	movf	vfpfcnvrt@fp+1,w
 22539  0EEB  00B1               	movwf	xtoa@fp+1
 22540  0EEC  0857               	movf	vfpfcnvrt@fp,w
 22541  0EED  00B0               	movwf	xtoa@fp
 22542  0EEE  0021               	movlb	1	; select bank1
 22543  0EEF  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22544  0EF0  0020               	movlb	0	; select bank0
 22545  0EF1  00B2               	movwf	xtoa@d
 22546  0EF2  0021               	movlb	1	; select bank1
 22547  0EF3  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22548  0EF4  0020               	movlb	0	; select bank0
 22549  0EF5  00B3               	movwf	xtoa@d+1
 22550  0EF6  0021               	movlb	1	; select bank1
 22551  0EF7  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22552  0EF8  0020               	movlb	0	; select bank0
 22553  0EF9  00B4               	movwf	xtoa@d+2
 22554  0EFA  0021               	movlb	1	; select bank1
 22555  0EFB  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22556  0EFC  0020               	movlb	0	; select bank0
 22557  0EFD  00B5               	movwf	xtoa@d+3
 22558  0EFE  0021               	movlb	1	; select bank1
 22559  0EFF  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22560  0F00  0020               	movlb	0	; select bank0
 22561  0F01  00B6               	movwf	xtoa@d+4
 22562  0F02  0021               	movlb	1	; select bank1
 22563  0F03  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22564  0F04  0020               	movlb	0	; select bank0
 22565  0F05  00B7               	movwf	xtoa@d+5
 22566  0F06  0021               	movlb	1	; select bank1
 22567  0F07  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22568  0F08  0020               	movlb	0	; select bank0
 22569  0F09  00B8               	movwf	xtoa@d+6
 22570  0F0A  0021               	movlb	1	; select bank1
 22571  0F0B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22572  0F0C  0020               	movlb	0	; select bank0
 22573  0F0D  00B9               	movwf	xtoa@d+7
 22574  0F0E  0021               	movlb	1	; select bank1
 22575  0F0F  0832               	movf	vfpfcnvrt@c^(0+128),w
 22576  0F10  0020               	movlb	0	; select bank0
 22577  0F11  00DB               	movwf	??_vfpfcnvrt
 22578  0F12  085B               	movf	??_vfpfcnvrt,w
 22579  0F13  00BA               	movwf	xtoa@x
 22580  0F14  319A  2221         	fcall	_xtoa
 22581  0F16  0020               	movlb	0	; select bank0
 22582  0F17  0831               	movf	?_xtoa+1,w
 22583  0F18  00D8               	movwf	?_vfpfcnvrt+1
 22584  0F19  0830               	movf	?_xtoa,w
 22585  0F1A  00D7               	movwf	?_vfpfcnvrt
 22586  0F1B  0008               	return
 22587  0F1C                     l7136:	
 22588                           
 22589                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
 22590  0F1C  0859               	movf	vfpfcnvrt@fmt,w
 22591  0F1D  0086               	movwf	6
 22592  0F1E  0187               	clrf	7
 22593  0F1F  3F40               	moviw [0]fsr1
 22594  0F20  00F1               	movwf	strncmp@_l
 22595  0F21  3F41               	moviw [1]fsr1
 22596  0F22  00F2               	movwf	strncmp@_l+1
 22597  0F23  3047               	movlw	low (STR_114| (0+32768))
 22598  0F24  00F3               	movwf	strncmp@_r
 22599  0F25  30BA               	movlw	high (STR_114| (0+32768))
 22600  0F26  00F4               	movwf	strncmp@_r+1
 22601  0F27  3002               	movlw	2
 22602  0F28  00F5               	movwf	strncmp@n
 22603  0F29  3000               	movlw	0
 22604  0F2A  00F6               	movwf	strncmp@n+1
 22605  0F2B  31B7  27AE  3188   	fcall	_strncmp
 22606  0F2E  0871               	movf	?_strncmp,w
 22607  0F2F  0472               	iorwf	?_strncmp+1,w
 22608  0F30  1903               	btfsc	3,2
 22609  0F31  2F49               	goto	l7140
 22610  0F32  0020               	movlb	0	; select bank0
 22611  0F33  0859               	movf	vfpfcnvrt@fmt,w
 22612  0F34  0086               	movwf	6
 22613  0F35  0187               	clrf	7
 22614  0F36  3F40               	moviw [0]fsr1
 22615  0F37  00F1               	movwf	strncmp@_l
 22616  0F38  3F41               	moviw [1]fsr1
 22617  0F39  00F2               	movwf	strncmp@_l+1
 22618  0F3A  3035               	movlw	low (STR_118| (0+32768))
 22619  0F3B  00F3               	movwf	strncmp@_r
 22620  0F3C  30BA               	movlw	high (STR_118| (0+32768))
 22621  0F3D  00F4               	movwf	strncmp@_r+1
 22622  0F3E  3002               	movlw	2
 22623  0F3F  00F5               	movwf	strncmp@n
 22624  0F40  3000               	movlw	0
 22625  0F41  00F6               	movwf	strncmp@n+1
 22626  0F42  31B7  27AE  3188   	fcall	_strncmp
 22627  0F45  0871               	movf	?_strncmp,w
 22628  0F46  0472               	iorwf	?_strncmp+1,w
 22629  0F47  1D03               	btfss	3,2
 22630  0F48  2FAC               	goto	l7150
 22631  0F49                     l7140:	
 22632                           
 22633                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
 22634  0F49  0020               	movlb	0	; select bank0
 22635  0F4A  0859               	movf	vfpfcnvrt@fmt,w
 22636  0F4B  0086               	movwf	6
 22637  0F4C  0187               	clrf	7
 22638  0F4D  3F40               	moviw [0]fsr1
 22639  0F4E  00DB               	movwf	??_vfpfcnvrt
 22640  0F4F  3F41               	moviw [1]fsr1
 22641  0F50  00DC               	movwf	??_vfpfcnvrt+1
 22642  0F51  3001               	movlw	1
 22643  0F52  075B               	addwf	??_vfpfcnvrt,w
 22644  0F53  0084               	movwf	4
 22645  0F54  085C               	movf	??_vfpfcnvrt+1,w
 22646  0F55  1803               	skipnc
 22647  0F56  0A5C               	incf	??_vfpfcnvrt+1,w
 22648  0F57  0085               	movwf	5
 22649  0F58  0800               	movf	0,w	;code access
 22650  0F59  00DD               	movwf	??_vfpfcnvrt+2
 22651  0F5A  085D               	movf	??_vfpfcnvrt+2,w
 22652  0F5B  0021               	movlb	1	; select bank1
 22653  0F5C  00B2               	movwf	vfpfcnvrt@c^(0+128)
 22654                           
 22655                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
 22656  0F5D  0020               	movlb	0	; select bank0
 22657  0F5E  0859               	movf	vfpfcnvrt@fmt,w
 22658  0F5F  0086               	movwf	6
 22659  0F60  0187               	clrf	7
 22660  0F61  3002               	movlw	2
 22661  0F62  0781               	addwf	1,f
 22662  0F63  3141               	addfsr 1,1
 22663  0F64  1803               	skipnc
 22664  0F65  0A81               	incf	1,f
 22665                           
 22666                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 22667  0F66  085A               	movf	vfpfcnvrt@ap,w
 22668  0F67  0086               	movwf	6
 22669  0F68  0187               	clrf	7
 22670  0F69  0801               	movf	1,w
 22671  0F6A  0084               	movwf	4
 22672  0F6B  0185               	clrf	5
 22673  0F6C  3002               	movlw	2
 22674  0F6D  0781               	addwf	1,f
 22675  0F6E  3F00               	moviw [0]fsr0
 22676  0F6F  0021               	movlb	1	; select bank1
 22677  0F70  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22678  0F71  3F01               	moviw [1]fsr0
 22679  0F72  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22680  0F73  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22681  0F74  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22682  0F75  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22683  0F76  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22684  0F77  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22685  0F78  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22686                           
 22687                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1344:      
      +                                 return xtoa(fp, llu, c);
 22688  0F79  0020               	movlb	0	; select bank0
 22689  0F7A  0858               	movf	vfpfcnvrt@fp+1,w
 22690  0F7B  00B1               	movwf	xtoa@fp+1
 22691  0F7C  0857               	movf	vfpfcnvrt@fp,w
 22692  0F7D  00B0               	movwf	xtoa@fp
 22693  0F7E  0021               	movlb	1	; select bank1
 22694  0F7F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22695  0F80  0020               	movlb	0	; select bank0
 22696  0F81  00B2               	movwf	xtoa@d
 22697  0F82  0021               	movlb	1	; select bank1
 22698  0F83  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22699  0F84  0020               	movlb	0	; select bank0
 22700  0F85  00B3               	movwf	xtoa@d+1
 22701  0F86  0021               	movlb	1	; select bank1
 22702  0F87  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22703  0F88  0020               	movlb	0	; select bank0
 22704  0F89  00B4               	movwf	xtoa@d+2
 22705  0F8A  0021               	movlb	1	; select bank1
 22706  0F8B  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22707  0F8C  0020               	movlb	0	; select bank0
 22708  0F8D  00B5               	movwf	xtoa@d+3
 22709  0F8E  0021               	movlb	1	; select bank1
 22710  0F8F  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22711  0F90  0020               	movlb	0	; select bank0
 22712  0F91  00B6               	movwf	xtoa@d+4
 22713  0F92  0021               	movlb	1	; select bank1
 22714  0F93  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22715  0F94  0020               	movlb	0	; select bank0
 22716  0F95  00B7               	movwf	xtoa@d+5
 22717  0F96  0021               	movlb	1	; select bank1
 22718  0F97  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22719  0F98  0020               	movlb	0	; select bank0
 22720  0F99  00B8               	movwf	xtoa@d+6
 22721  0F9A  0021               	movlb	1	; select bank1
 22722  0F9B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22723  0F9C  0020               	movlb	0	; select bank0
 22724  0F9D  00B9               	movwf	xtoa@d+7
 22725  0F9E  0021               	movlb	1	; select bank1
 22726  0F9F  0832               	movf	vfpfcnvrt@c^(0+128),w
 22727  0FA0  0020               	movlb	0	; select bank0
 22728  0FA1  00DB               	movwf	??_vfpfcnvrt
 22729  0FA2  085B               	movf	??_vfpfcnvrt,w
 22730  0FA3  00BA               	movwf	xtoa@x
 22731  0FA4  319A  2221         	fcall	_xtoa
 22732  0FA6  0020               	movlb	0	; select bank0
 22733  0FA7  0831               	movf	?_xtoa+1,w
 22734  0FA8  00D8               	movwf	?_vfpfcnvrt+1
 22735  0FA9  0830               	movf	?_xtoa,w
 22736  0FAA  00D7               	movwf	?_vfpfcnvrt
 22737  0FAB  0008               	return
 22738  0FAC                     l7150:	
 22739                           
 22740                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 22741  0FAC  0020               	movlb	0	; select bank0
 22742  0FAD  0859               	movf	vfpfcnvrt@fmt,w
 22743  0FAE  0086               	movwf	6
 22744  0FAF  0187               	clrf	7
 22745  0FB0  3F40               	moviw [0]fsr1
 22746  0FB1  00DB               	movwf	??_vfpfcnvrt
 22747  0FB2  3F41               	moviw [1]fsr1
 22748  0FB3  00DC               	movwf	??_vfpfcnvrt+1
 22749  0FB4  085B               	movf	??_vfpfcnvrt,w
 22750  0FB5  0084               	movwf	4
 22751  0FB6  085C               	movf	??_vfpfcnvrt+1,w
 22752  0FB7  0085               	movwf	5
 22753  0FB8  0012               	moviw fsr0++
 22754  0FB9  3A25               	xorlw	37
 22755  0FBA  1D03               	btfss	3,2
 22756  0FBB  2FD4               	goto	l7160
 22757                           
 22758                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 22759  0FBC  0859               	movf	vfpfcnvrt@fmt,w
 22760  0FBD  0086               	movwf	6
 22761  0FBE  0187               	clrf	7
 22762  0FBF  3001               	movlw	1
 22763  0FC0  0781               	addwf	1,f
 22764  0FC1  3141               	addfsr 1,1
 22765  0FC2  1803               	skipnc
 22766  0FC3  0A81               	incf	1,f
 22767                           
 22768                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 22769  0FC4  3025               	movlw	37
 22770  0FC5  00F1               	movwf	fputc@c
 22771  0FC6  3000               	movlw	0
 22772  0FC7  00F2               	movwf	fputc@c+1
 22773  0FC8  0858               	movf	vfpfcnvrt@fp+1,w
 22774  0FC9  00F4               	movwf	fputc@fp+1
 22775  0FCA  0857               	movf	vfpfcnvrt@fp,w
 22776  0FCB  00F3               	movwf	fputc@fp
 22777  0FCC  31A8  2041         	fcall	_fputc
 22778  0FCE                     l7156:	
 22779                           
 22780                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 22781  0FCE  3001               	movlw	1
 22782  0FCF  0020               	movlb	0	; select bank0
 22783  0FD0  00D7               	movwf	?_vfpfcnvrt
 22784  0FD1  3000               	movlw	0
 22785  0FD2  00D8               	movwf	?_vfpfcnvrt+1
 22786  0FD3  0008               	return
 22787  0FD4                     l7160:	
 22788                           
 22789                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 22790  0FD4  0859               	movf	vfpfcnvrt@fmt,w
 22791  0FD5  0086               	movwf	6
 22792  0FD6  0187               	clrf	7
 22793  0FD7  3001               	movlw	1
 22794  0FD8  0781               	addwf	1,f
 22795  0FD9  3141               	addfsr 1,1
 22796  0FDA  1803               	skipnc
 22797  0FDB  0A81               	incf	1,f
 22798  0FDC  2B32               	goto	l6994
 22799  0FDD                     l7166:	
 22800                           
 22801                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 22802  0FDD  0859               	movf	vfpfcnvrt@fmt,w
 22803  0FDE  0086               	movwf	6
 22804  0FDF  0187               	clrf	7
 22805  0FE0  3F40               	moviw [0]fsr1
 22806  0FE1  00DB               	movwf	??_vfpfcnvrt
 22807  0FE2  3F41               	moviw [1]fsr1
 22808  0FE3  00DC               	movwf	??_vfpfcnvrt+1
 22809  0FE4  085B               	movf	??_vfpfcnvrt,w
 22810  0FE5  0084               	movwf	4
 22811  0FE6  085C               	movf	??_vfpfcnvrt+1,w
 22812  0FE7  0085               	movwf	5
 22813  0FE8  0800               	movf	0,w	;code access
 22814  0FE9  00DD               	movwf	??_vfpfcnvrt+2
 22815  0FEA  01DE               	clrf	??_vfpfcnvrt+3
 22816  0FEB  085D               	movf	??_vfpfcnvrt+2,w
 22817  0FEC  00F1               	movwf	fputc@c
 22818  0FED  085E               	movf	??_vfpfcnvrt+3,w
 22819  0FEE  00F2               	movwf	fputc@c+1
 22820  0FEF  0858               	movf	vfpfcnvrt@fp+1,w
 22821  0FF0  00F4               	movwf	fputc@fp+1
 22822  0FF1  0857               	movf	vfpfcnvrt@fp,w
 22823  0FF2  00F3               	movwf	fputc@fp
 22824  0FF3  31A8  2041  3188   	fcall	_fputc
 22825                           
 22826                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 22827  0FF6  0020               	movlb	0	; select bank0
 22828  0FF7  0859               	movf	vfpfcnvrt@fmt,w
 22829  0FF8  0086               	movwf	6
 22830  0FF9  0187               	clrf	7
 22831  0FFA  3001               	movlw	1
 22832  0FFB  0781               	addwf	1,f
 22833  0FFC  3141               	addfsr 1,1
 22834  0FFD  1803               	skipnc
 22835  0FFE  0A81               	incf	1,f
 22836  0FFF  2FCE               	goto	l7156
 22837  1000                     __end_of_vfpfcnvrt:	


Data Sizes:
    Strings     472
    Constant    114
    Data        9
    BSS         102
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80     79      80
    BANK2            80     69      79
    BANK3            80      2      69
    BANK4            80      0      32
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           65      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    vsnprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_22(CODE[18]), STR_21(CODE[18]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[20]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_8(CODE[15]), STR_7(CODE[15]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_3(CODE[22]), STR_2(CODE[71]), STR_1(CODE[40]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_120(CODE[3]), STR_116(CODE[3]), STR_111(CODE[3]), STR_107(CODE[3]), 
		 -> STR_102(CODE[4]), STR_98(CODE[4]), STR_93(CODE[3]), STR_88(CODE[3]), 
		 -> STR_83(CODE[4]), STR_78(CODE[3]), STR_73(CODE[3]), STR_68(CODE[4]), 
		 -> STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[4]), STR_48(CODE[3]), 
		 -> STR_44(CODE[3]), STR_39(CODE[3]), STR_35(CODE[3]), STR_30(CODE[4]), 
		 -> STR_26(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_120(CODE[3]), STR_116(CODE[3]), STR_111(CODE[3]), STR_107(CODE[3]), 
		 -> STR_102(CODE[4]), STR_98(CODE[4]), STR_93(CODE[3]), STR_88(CODE[3]), 
		 -> STR_83(CODE[4]), STR_78(CODE[3]), STR_73(CODE[3]), STR_68(CODE[4]), 
		 -> STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[4]), STR_48(CODE[3]), 
		 -> STR_44(CODE[3]), STR_39(CODE[3]), STR_35(CODE[3]), STR_30(CODE[4]), 
		 -> STR_26(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_22(CODE[18]), STR_21(CODE[18]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[20]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_8(CODE[15]), STR_7(CODE[15]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_3(CODE[22]), STR_2(CODE[71]), STR_1(CODE[40]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_22(CODE[18]), STR_21(CODE[18]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[20]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_8(CODE[15]), STR_7(CODE[15]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_3(CODE[22]), STR_2(CODE[71]), STR_1(CODE[40]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[32]), sp__logf(UNKNOWN), 
		 -> adcGain(BANK2[2]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[32]), sp__logf(UNKNOWN), 
		 -> adcGain(BANK2[2]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_22(CODE[18]), STR_21(CODE[18]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[20]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_8(CODE[15]), STR_7(CODE[15]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_3(CODE[22]), STR_2(CODE[71]), STR_1(CODE[40]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    snprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_snprintf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    S1720_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_22(CODE[18]), STR_21(CODE[18]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[20]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_8(CODE[15]), STR_7(CODE[15]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_3(CODE[22]), STR_2(CODE[71]), STR_1(CODE[40]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_22(CODE[18]), STR_21(CODE[18]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[20]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_8(CODE[15]), STR_7(CODE[15]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_3(CODE[22]), STR_2(CODE[71]), STR_1(CODE[40]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 71
		 -> STR_22(CODE[18]), STR_21(CODE[18]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[20]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_8(CODE[15]), STR_7(CODE[15]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_3(CODE[22]), STR_2(CODE[71]), STR_1(CODE[40]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 4
		 -> ?_snprintf(BANK1[2]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 4
		 -> ?_snprintf(BANK1[2]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 4
		 -> ?_snprintf(BANK1[2]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 127
		 -> STR_23(CODE[3]), STR_10(CODE[3]), STR_9(CODE[38]), messageBuffer(BIGRAM[127]), 


Critical Paths under _main in COMMON

    _main->_EUSART_Initialize
    _watchdog_timeout_shutdown->_RGB_color
    _vfpfcnvrt->_stoa
    _vfpfcnvrt->_strncmp
    _toupper->_islower
    _stoa->_fputc
    _dtoa->___aodiv
    _abs->___aomod
    _pad->_fputs
    _fputs->_fputc
    _atoi->___wmul
    _atoi->_isdigit
    _EUSART_Write_Text->_EUSART_Write
    _setTemperatureLimitsint->___wmul
    _setShortCircuitProtection->_I2C_writeRegister
    _setOverCurrentDischargeProtection->_I2C_writeRegister
    _setCellUndervoltageProtection->_I2C_writeRegister
    _setCellUndervoltageProtection->_readRegister
    _setCellOvervoltageProtection->_I2C_writeRegister
    _setCellOvervoltageProtection->_readRegister
    _beginAFEcommunication->_I2C_writeRegister
    _beginAFEcommunication->_readRegister
    _RGB_AWAIT_AFE_CONN->_RGB_color
    _AFE_UPDATE->_enableCharging
    _AFE_UPDATE->_enableDischarging
    _updateVoltages->___fltol
    _updateTemperatures->___fltol
    _updateCurrent->___fltol
    ___flmul->__Umul8_16
    _enableDischarging->_I2C_writeRegister
    _enableDischarging->_readRegister
    _enableCharging->_I2C_writeRegister
    _enableCharging->_readRegister
    _readRegister->_read_I2C_data
    _readRegister->_send_I2C_controlByte
    _I2C_writeRegister->_send_I2C_controlByte
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _statemachine->_snprintf
    _printcellParameters->_snprintf
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _utoa->___lodiv
    _utoa->___lomod
    _utoa->_pad
    _otoa->_pad
    _dtoa->___aodiv
    _dtoa->___aomod
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _setShortCircuitProtection->___flge
    _setOverCurrentDischargeProtection->___flge
    ___flge->___fldiv
    _setCellUndervoltageProtection->___aldiv
    _setCellOvervoltageProtection->___aldiv
    _updateVoltages->___fladd
    _updateTemperatures->___fladd
    _logf->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___fltol->___fladd
    ___flneg->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _printcellParameters->_snprintf
    _snprintf->_vsnprintf
    _vfprintf->_vfpfcnvrt
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _AFE_UPDATE->_updateTemperatures
    _updateVoltages->___fltol
    _updateTemperatures->_logf
    _logf->___flsub
    _updateCurrent->___fltol
    ___fltol->___flsub

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_statemachine
    _updateTemperatures->_logf

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _myIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _myIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _myIsr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _myIsr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _myIsr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _myIsr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _myIsr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _myIsr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _myIsr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _myIsr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _myIsr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _myIsr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _myIsr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  380420
                                              0 BANK3      2     2      0
                  _EUSART_Initialize
                          _initClock
                            _initWDT
                          _init_GPIO
                           _init_I2C
                           _init_RGB
                          _init_TMR1
                       _statemachine
          _watchdog_timeout_shutdown
 ---------------------------------------------------------------------------------
 (1) _watchdog_timeout_shutdown                            2     2      0     481
                                              3 COMMON     2     2      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (1) _statemachine                                         3     3      0  377561
                                             66 BANK2      3     3      0
                         _AFE_UPDATE
                  _EUSART_Write_Text
                 _RGB_AWAIT_AFE_CONN
                          _RGB_color
              _beginAFEcommunication
                           _init_AFE
                _printcellParameters
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _printcellParameters                                  0     0      0   72584
                  _EUSART_Write_Text
                       _readRegister
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _snprintf                                            34     4     30   61763
                                             76 BANK0      4     4      0
                                             44 BANK1     30     0     30
                       _readRegister (ARG)
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (3) _vsnprintf                                           19    12      7   56076
                                             74 BANK0      2     2      0
                                             27 BANK1     17    10      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             9     4      5   55039
                                             65 BANK0      9     4      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    42      4   54264
                                             55 BANK0     10     6      4
                                              0 BANK1     27    27      0
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    8411
                                             16 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     512
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              8     6      2     191
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _utoa                                                25    15     10    7272
                                             16 BANK0     25    15     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             18     2     16     412
                                              1 COMMON     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             26    10     16     421
                                              1 COMMON    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6    5995
                                              1 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                23    19      4    2652
                                             10 COMMON     2     2      0
                                              0 BANK0     21    17      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _otoa                                                34    24     10    6544
                                             16 BANK0     34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                31    21     10    8126
                                             16 BANK0     31    21     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                              4 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             19     3     16     613
                                              1 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             27    11     16     625
                                              1 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 8     5      3    5656
                                             16 BANK0      6     3      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 10     5      5    5396
                                              6 BANK0     10     5      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     242
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     6      2    1969
                                             10 COMMON     2     0      2
                                              0 BANK0      6     6      0
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1577
                                              1 COMMON     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    2319
                                              7 COMMON     2     0      2
                                              0 BANK0     13    13      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              5     3      2     259
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     371
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write_Text                                    5     3      2    2231
                                              2 COMMON     5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_AFE                                             0     0      0   75706
       _setCellOvervoltageProtection
      _setCellUndervoltageProtection
  _setOverCurrentDischargeProtection
          _setShortCircuitProtection
              _setShuntResistorValue
            _setTemperatureLimitsint
 ---------------------------------------------------------------------------------
 (3) _setTemperatureLimitsint                              8     0      8    1520
                                              0 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    1036
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _setShuntResistorValue                                4     0      4     121
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) _setShortCircuitProtection                           21    15      6   19764
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _setOverCurrentDischargeProtection                   21    15      6   19764
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     626
                                             58 BANK0     12     4      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _setCellUndervoltageProtection                       21    17      4   17270
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _setCellOvervoltageProtection                        21    17      4   17267
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _beginAFEcommunication                               15    13      2   13502
                                              0 BANK0     15    13      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _RGB_AWAIT_AFE_CONN                                   1     1      0     481
                                              3 COMMON     1     1      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (2) _RGB_color                                            2     0      2     481
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _AFE_UPDATE                                           0     0      0  150779
                     _enableCharging
                  _enableDischarging
                      _updateCurrent
                 _updateTemperatures
                     _updateVoltages
 ---------------------------------------------------------------------------------
 (3) _updateVoltages                                      11    11      0   32513
                                             17 BANK1     11    11      0
                            ___aldiv
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                             ___lmul
                           ___xxtofl
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8    1396
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _updateTemperatures                                  59    59      0   62842
                                             20 BANK1     59    59      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                               _logf
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) _logf                                                78    74      4   27318
                                              8 BANK1     12     8      4
                                              0 BANK2     66    66      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    6067
                                              0 BANK1      8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    5462
                                             58 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _updateCurrent                                        6     6      0   28320
                                             17 BANK1      6     6      0
                  _I2C_writeRegister
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    2096
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     967
                                             10 COMMON     2     2      0
                                              8 BANK1      9     5      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     155
                                             58 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    8033
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     980
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    3663
                                             32 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _enableDischarging                                    5     3      2   13552
                                             11 COMMON     1     1      0
                                              0 BANK0      4     2      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _enableCharging                                       5     3      2   13552
                                             11 COMMON     1     1      0
                                              0 BANK0      4     2      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _readRegister                                         6     2      4    8590
                                              5 COMMON     6     2      4
                      _read_I2C_data
                      _send_I2C_NACK
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _read_I2C_data                                        4     2      2       0
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) _I2C_writeRegister                                    6     0      6    4776
                                              5 COMMON     6     0      6
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_stopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_startBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_data                                        2     0      2     301
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _send_I2C_controlByte                                 4     0      4     602
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_RGB                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_GPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initWDT                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initClock                                            0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   18    14      4    2378
                                             10 COMMON     2     2      0
                                             18 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8    2065
                                              9 COMMON     1     1      0
                                              4 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _myIsr                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     ___aldiv
       ___lmul (ARG)
   _initClock
     _internal_16
   _initWDT
   _init_GPIO
   _init_I2C
   _init_RGB
   _init_TMR1
   _statemachine
     _AFE_UPDATE
       _enableCharging
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _enableDischarging
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateCurrent
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___flneg
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateTemperatures
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _logf
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateVoltages
         ___aldiv
           ___lmul (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___lmul
         ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
     _EUSART_Write_Text
       _EUSART_Write
     _RGB_AWAIT_AFE_CONN
       _RGB_color
     _RGB_color
     _beginAFEcommunication
       _I2C_writeRegister
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
     _init_AFE
       _setCellOvervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setCellUndervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setOverCurrentDischargeProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShortCircuitProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShuntResistorValue
       _setTemperatureLimitsint
         ___wmul
     _printcellParameters
       _EUSART_Write_Text
         _EUSART_Write
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _snprintf
         _readRegister (ARG)
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _vsnprintf (ARG)
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
     _snprintf
       _readRegister (ARG)
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _vsnprintf (ARG)
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
   _watchdog_timeout_shutdown
     _RGB_color

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4F      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     45      4F       9       98.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      2      45      11       86.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      20      13       40.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     161      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     161      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              41      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Mar 12 12:01:42 2020

          __end_of_setShortCircuitProtection 2800                               _maxCellVoltage 01C8  
                      __end_of_send_I2C_data 33AD                                 ___fldiv@aexp 0059  
                               ___fldiv@bexp 0058                               _updateVoltages 124F  
                               ___fldiv@sign 0051                                  __CFG_CP$OFF 0000  
                        ___wmul@multiplicand 0073                        _setShuntResistorValue 2800  
                        __Umul8_16@word_mpld 0077                                          l320 33B2  
                                        l243 0801                                          l308 3397  
                                        l164 29DB                                          l342 356F  
                    enableDischarging@enable 0020                                          l344 3574  
                                        l345 3579                                          l290 33BC  
                                        l346 358E                                          l284 33F5  
                                        l278 33A9                                          l702 184B  
                                        l447 2E61                                          l711 18A6  
                                        l296 338F                                          l642 3793  
                                        l723 2236                                          l660 1949  
                                        l654 1913                                          l734 1A28  
                                        l639 3773                                          l663 19DF  
                                        l655 191A                                          l719 221B  
                                        l912 2B62                                          l680 22FC  
                                        l738 1A43                                          l770 1E8D  
                                        l659 1935                                          l691 23B7  
                                        l771 1E90                                          l684 2317  
                                        l772 1E93                                          l685 23AC  
                                        l773 1E96                                          l847 34AF  
                                        l759 1B46                                          l775 1EC9  
                                        l960 2202                                          l768 1E81  
                                        l947 24C7                                          _Lg1 3A0D  
                                        _Lg2 3A09                                          _Lg3 3A05  
                                        _Lg4 3A01                          __size_of_AFE_UPDATE 0019  
                                        _abs 342F                               RGB_color@color 0071  
                                        _pad 375D                                 __CFG_BORV$LO 0000  
                                        wreg 0009                                 __CFG_IESO$ON 0000  
                               ___flmul@aexp 0034                                 ___flmul@bexp 0039  
     setCellOvervoltageProtection@voltage_mV 0032      setCellUndervoltageProtection@voltage_mV 0032  
                               ___flmul@sign 0033                                 ___flmul@temp 003E  
                               ___flmul@prod 003A                                 _statemachine 2964  
                               __CFG_LVP$OFF 0000                                 ___fltol@exp1 007B  
                                       l1025 29F7                                         ?_abs 0074  
                                       l1204 1D2B                                         l1028 2A45  
                                       l1048 28DF                                         l1152 06D5  
                                       l1080 2AC3                                         l1225 1E32  
                                       l1226 1E4A                                         l1154 06B8  
                                       l1322 2CD2                                         l1090 2953  
                                       l1228 1E57                                         l1148 0642  
                                       l1190 07CF                                         l1182 07B7  
                                       l1256 1242                                         l1169 0758  
                                       l1282 2BF1                                         l1295 2C3B  
                                       l1296 2C45                                         l1288 2C27  
                                       l1449 355F                                         l7000 0AD4  
                                       l7012 0AF4                                         ?_pad 0026  
                                       l6304 3769                                         l7112 0E3B  
                                       l7024 0B13                                         l6314 3775  
                                       l6410 2189                                         l7122 0E9E  
                                       l8010 2B45                                         l7300 0706  
                                       l7220 063A                                         l8020 357E  
                                       l6308 3771                                         l6420 21A5  
                                       l7140 0F49                                         l7108 0E0D  
                                       l7044 0BCF                                         l8012 2B4C  
                                       l7310 0750                                         l8110 26A0  
                                       l6350 34A9                                         l6318 379F  
                                       l6406 2162                                         l7150 0FAC  
                                       l7126 0EBD                                         l7054 0C08  
                                       l7216 0637                                         l6272 2874  
                                       l6424 21D5                                         l6512 1944  
                                       l6440 2A6F                                         l7160 0FD4  
                                       l7136 0F1C                                         l7064 0C66  
                                       l8008 2B41                                         l7226 064C  
                                       l8114 26C8                                         l6266 2849  
                                       l6290 341C                                         l6418 2196  
                                       l6426 21E1                                         l6506 192D  
                                       l6450 2AB7                                         l6442 2A7E  
                                       l7074 0CC6                                         l7340 0789  
                                       l7332 077E                                         l8140 20F0  
                                       l8060 27A3                                         l6268 284D  
                                       l6284 07DB                                         l6292 3428  
                                       l6372 2437                                         l6516 1976  
                                       l6604 1824                                         l6460 2908  
                                       l7156 0FCE                                         l7084 0D1E  
                                       l7412 35EA                                         l7326 0777  
                                       l7318 076A                                         l7334 0780  
                                       l8054 26F7                                         l8038 348F  
                                       l6374 243B                                         l6526 1951  
                                       l6534 19EB                                         l6622 186D  
                                       l6462 2917                                         l6702 1A85  
                                       l7094 0D7D                                         l7166 0FDD  
                                       l7414 360A                                         l7504 1DB6  
                                       l7600 106A                                         l7344 078B  
                                       l7264 06C0                                         l7256 0688  
                                       l7192 060F                                         l8144 2118  
                                       l8072 27B5                                         l6384 2452  
                                       l6368 2410                                         l6544 19FE  
                                       l6640 18BB                                         l6632 187D  
                                       l6624 187A                                         l8400 2998  
                                       l7530 1DEF                                         l7522 1DC1  
                                       l7506 1D7F                                         l7442 1CFF  
                                       l7362 07C7                                         l7290 06F5  
                                       l7282 06E3                                         l7266 06C2  
                                       l7274 06D0                                         l8170 2FE0  
                                       l6394 249A                                         l6386 2461  
                                       l6538 19F3                                         l6642 18C8  
                                       l6618 185C                                         l6810 37EF  
                                       l6802 37E8                                         l6466 2947  
                                       l7098 0DAB                                         l7524 1DD8  
                                       l7508 1DBB                                         l7444 1D07  
                                       l7292 06F7                                         l7196 0612  
                                       l8092 25E2                                         l8076 27DF  
                                       l6476 350C                                         l6484 35BE  
                                       l6396 24A6                                         l6548 1A0B  
                                       l6636 18AA                                         l6804 37C3  
                                       l6652 222E                                         l8412 29C3  
                                       l8350 2DA0                                         l7534 1DF1  
                                       l7462 1D23                                         l7438 1CFC  
                                       l7710 2BE9                                         l8190 2F1D  
                                       l7366 07CB                                         l7198 061A  
                                       l8166 2FB8                                         l6750 2C6E  
                                       l6486 35C7                                         l6566 235E  
                                       l6558 230F                                         l6670 2255  
                                       l6742 1B64                                         l6718 1AD3  
                                       l6726 1B15                                         l6910 2551  
                                       l6902 2506                                         l8406 29AC  
                                       l8272 3706                                         l8264 282E  
                                       l7544 1E1A                                         l7472 1D4A  
                                       l7376 3559                                         l7608 1078  
                                       l7720 2C04                                         l7800 0178  
                                       l8280 35A1                                         l6592 23D0  
                                       l6576 2339                                         l6824 1E83  
                                       l6840 1E9E                                         l7458 1D20  
                                       l7730 2C39                                         l7722 2C14  
                                       l8186 2F06                                         l8610 3583  
                                       l8290 2DB8                                         l8098 268E  
                                       l6658 2279                                         l6922 0843  
                                       l6914 257F                                         l6834 1E99  
                                       l7900 2B91                                         l7660 11AA  
                                       l7580 103F                                         l7732 2C2C  
                                       l7716 2C00                                         l8188 2F15  
                                       l7820 01DB                                         l6772 2CD6  
                                       l6764 2C9A                                         l6668 22DA  
                                       l6860 1F17                                         l6844 1ED0  
                                       l8604 29CD                                         l8436 3666  
                                       l7558 1E53                                         l7478 1D56  
                                       l7662 11C1                                         l7582 1047  
                                       l6782 2D05                                         l6766 2C9F  
                                       l6758 2C8A                                         l6678 22DF  
                                       l6694 1A53                                         l6934 08B3  
                                       l6926 0862                                         l8606 1EB7  
                                       l7912 2BBC                                         l7672 11DA  
                                       l7744 2C60                                         l7808 01C1  
                                       l6768 2CB3                                         l8608 2CAB  
                                       l6688 1A3B                                         l6880 1F92  
                                       l6856 1EFE                                         l7498 1D9D  
                                       l7682 1203                                         l7578 103D  
                                       l7930 2A2B                                         l6698 1A6B  
                                       l6946 0929                                         l6938 08E0  
                                       l6882 1F9B                                         l6858 1F0E  
                                       l6866 1F41                                         l8378 2965  
                                       l7916 2BCA                                         l7908 2BB1  
                                       l7692 122F                                         l7668 11D8  
                                       l7596 1060                                         l6956 0988  
                                       l8396 2988                                         l7686 1218  
                                       l7598 1062                                         l7950 289F  
                                       l7926 2A11                                         l6966 09E8  
                                       l6878 1F82                                         l7872 3627  
                                       l6976 0A40                                         l6888 1FC5  
                                       l7890 2B73                                         l7970 28CD  
                                       l7954 28A8                                         l7794 011B  
                                       l7786 009C                                         l6994 0B32  
                                       l6986 0A9F                                         l6898 24D9  
                                       l7980 28EC                                         l7972 28DB  
                                       l7788 00B8                                         l7868 361C  
                                       l6998 0B36                                         l7990 2AE7  
                                       l7898 2B83                                         l7996 2AFB  
                                       l7998 2B03                                         STR_1 3849  
                               __CFG_WDTE$ON 0000                                         STR_2 3802  
                                       STR_3 38CD                                         STR_4 3937  
                                       STR_5 38F8                                         STR_6 390D  
                                       STR_7 39CB                                         STR_8 39DA  
                                       STR_9 3871                                         _BRGH 0CF2  
                                       _CREN 0CEC                                         u8000 2442  
                 enableDischarging@sys_ctrl2 007B                                         _SCS0 04C8  
                                       u8035 2487                                         _SCS1 04C9  
                                       u8300 18EA                                         u9100 1FB7  
                                       u8205 2AA4                                         u9110 1FB8  
                                       u8135 21C3                                         u8170 2A5F  
                                       u9050 1F33                                         u9060 1F34  
                                       u8405 1971                                         u8245 2935  
                                       u8345 1925                                         u8505 234D  
                                       u8290 18E9                                         u8515 2359  
                                       u7900 3410                                         u7805 377F  
                                       u8605 1878                                         u7910 3411  
                                       u8550 1813                                         u7830 3455  
                                       u7735 2872                                         u8375 19E9  
                                       u8615 1887                                         u7840 3456  
                                       u7760 346C                                         u7825 3438  
                                       u8465 2307                                         u7850 3529  
                                       u7770 346D                                         u8395 1965  
                                       u8475 2390                                         u8635 18C6  
                                       u7860 352A                                         u8485 23B5  
                                       u8725 1A33                                         u9550 06A7  
                                       u8910 2CEA                                         u7870 1011  
                                       u8750 1A9C                                         u7935 34B0  
                                       u8655 2226                                         u8815 1AF9  
                                       u9560 06A8                                         u8920 2CEB  
                                       u7880 1012                                         u8760 1A9D  
                                       u9545 069C                                         u7945 34B5  
                                       u8585 1844                                         u8825 1B1F  
                                       u8745 1A7F                                         u9715 076B  
                                       u8780 1ABC                                         u8685 2268  
                                       u8845 1B35                                         u8790 1ABD  
                                       u9815 07A2                                         u8695 2274  
                                       u8855 1B41                                         u9673 0718  
                                       u9665 06FB                                         u9595 06C6  
                                       _TMR1 0016                                         u9895 3560  
                                       _SPEN 0CEF                                         _TXEN 0CF5  
                                       _SYNC 0CF4                  ??_watchdog_timeout_shutdown 0073  
                               __CFG_WRT$OFF 0000                                         abs@a 0074  
                                       _dbuf 0220                               ?_updateCurrent 0070  
                                       _atoi 2C69                                         _ctoa 35B1  
                                       _main 3645                                         _dtoa 18CE  
                                       _logf 006B                                         _prec 0167  
                                       _otoa 22F5                                         _nout 01C4  
                                       pad@i 002C                                         pad@p 0029  
                                       fsr0h 0005                                         fsr1h 0007  
                                       indf0 0000                                         fsr0l 0004  
                                       indf1 0001                                         fsr1l 0006  
                                       pad@w 002E                                         _stoa 1809  
                                       btemp 007E                                         _utoa 2214  
                                       _xtoa 1A21                                         start 0020  
                            ___fldiv@new_exp 0052                       __end_of_updateVoltages 1527  
                   __end_of_send_I2C_stopBit 339B                            _enableDischarging 280A  
                                      ??_abs 0076                                        ??_pad 002B  
                       _send_I2C_controlByte 33B6                                ?_EUSART_Write 0070  
                         ?_enableDischarging 0020                                ___fltol@sign1 007A  
                            __end_of___aldiv 2BD3                              __end_of___aodiv 24D9  
                                      ?_atoi 0077                                        ?_ctoa 0030  
                            __end_of___fladd 07D7                                        ?_main 0070  
                                      ?_dtoa 0030                              __end_of___aomod 2214  
              I2C_writeRegister@slaveAddress 0075                                        ?_logf 00A8  
                            __end_of___fldiv 1E5C                              __end_of___flneg 33CA  
                                      STR_20 3974                                        STR_12 38E3  
                                      STR_21 3987                                        STR_13 38B7  
                                      STR_30 3A21                                        STR_22 3999  
                                      STR_24 3A1D                                        STR_17 3922  
                                      STR_26 3A1D                                        STR_42 3A38  
                                      STR_18 394C                                        STR_35 3A1E  
                                      STR_51 3A29                                        STR_19 3960  
                                      STR_44 3A38                                        STR_28 3A21  
                                      STR_53 3A29                                        STR_61 3A41  
                                      STR_46 3A3B                                        STR_39 3A22  
                                      STR_63 3A41                                        STR_48 3A3B  
                                      STR_73 3A26                                        STR_81 3A2D  
                                      STR_58 3A2A                                        STR_66 3A25  
                                      STR_83 3A2D                                        STR_91 3A44  
                                      STR_68 3A25                                        STR_76 3A3E  
                                      STR_93 3A44                                        STR_78 3A3E  
                                      STR_88 3A2E                                        STR_96 3A31  
                            __end_of___flmul 124F                                        STR_98 3A31  
                                      ?_otoa 0030                              __end_of___flsub 36AC  
                            __end_of___fltol 28FB                                        ?_stoa 0020  
                                      ?_utoa 0030                                        u10105 1D97  
                                      u10115 1DAB                                        u10145 1DC4  
                                      u11025 28CE                                        u10235 1E08  
                                      u10075 1D87                                        u10245 1E23  
                                      u10165 1DCD                                        u10085 1D8E  
                                      u10405 11AD                                        u11205 26B9  
                                      u11125 2B38                                        u10255 1E3C  
                                      u11055 28E3                                        u10505 120C  
                                      u10425 11B6                                        u11225 20CA  
                                      u11330 3597                                        u10515 1222  
                                      u10355 10EE                                        u11235 2108  
                            __end_of___lodiv 2AD4                                        u11340 3598  
                                      u11405 2D14                                        u10365 111D  
                                      u10605 2C33                                        u11165 27CE  
                                      u11350 35A6                                        u11415 2D2B  
                                      u10375 1173                                        u11255 2F99  
                                      ?_xtoa 0030                                        u11360 35A7  
                                      u10385 118A                                        u11265 2FD0  
                                      u11435 2D61                                        u10395 1199  
                                      u10715 00C9                                        u11507 34EB  
                                      u11445 2D78                                        u10645 2C4D  
                                      u10565 2C0D                                        u10805 362F  
                                      u11517 29A5                                        u11527 33EC  
                                      u10495 11F1                                        u10735 012C  
                                      u11375 2DCE                                        u10585 2C21  
                                      u11395 2E34                                        u10855 2B86  
                                      u10775 01F3                                        u10695 00AC  
                                      u11497 366F                                        u10875 2B92  
                                      u10795 3628                                        u10885 2BA6  
                                      u10895 2BB2                              __end_of___lomod 2964  
                                      u10995 28B1                                        _IRCF0 04CB  
                                      _IRCF1 04CC                                        _IRCF2 04CD  
                                      _IRCF3 04CE                       __size_of_read_I2C_data 0010  
                                      i1l145 001E                                 vfpfcnvrt@fmt 0059  
                               vfpfcnvrt@llu 00B3                                        _SPBRG 019B  
                         __size_of_RGB_color 0021                          ___lmul@multiplicand 0075  
                        ??_enableDischarging 0022                               __CFG_FCMEN$OFF 0000  
                            __end_of_initWDT 2006                                        _flags 0169  
                                      _errno 01C2                                        _fputc 2841  
                            __end_of_isalpha 3531                                        _fputs 07D7  
                                      _myIsr 0004                              __end_of_isdigit 3418  
                                      atoi@n 002B                                        pad@fp 0026  
                                      atoi@s 0077                                        _width 0165  
                                      ctoa@c 0032                                        _putch 0003  
                                      ctoa@w 0034                                        dtoa@d 0032  
                                      dtoa@i 004D                                        dtoa@n 0045  
                                      dtoa@p 003F                                        dtoa@s 0043  
                                      dtoa@w 0041                              __end_of_islower 3474  
                            __end_of_isspace 3514                                        logf@R 0120  
                                      logf@f 015A                                        logf@k 013C  
                                      logf@s 0146                                        logf@u 0156  
                                      logf@w 014E                                        logf@x 00A8  
                                      logf@z 014A                               __CFG_BOREN$OFF 0000  
                            __end_of_isupper 345D                                        otoa@d 0032  
                                      otoa@i 0050                                        otoa@n 0048  
                                      otoa@p 0042                                        otoa@t 0044  
                                      otoa@w 0046                      enableCharging@sys_ctrl2 007B  
                                      stoa@i 002B                                        stoa@l 0033  
                                      stoa@p 0031                                        stoa@s 0022  
                                      stoa@w 002D                                        utoa@d 0032  
                                      utoa@i 0047                                        utoa@n 003F  
                                      utoa@p 003B                                        utoa@w 003D  
                                      status 0003                                        wtemp0 007E  
                                      xtoa@c 0055                                        xtoa@d 0032  
                                      xtoa@i 0053                                        xtoa@n 004B  
                                      xtoa@p 0047                                        xtoa@w 0049  
                                      xtoa@x 003A                            _SCD_delay_setting 39F9  
                            __end_of_strncmp 3800                              __end_of_toupper 1023  
                           ___lodiv@dividend 0028                                 ?_internal_16 0070  
                               _toupper$1787 0079                               __CFG_MCLRE$OFF 0000  
                  __end_of_enableDischarging 2841                              __initialization 0022  
                            ?_updateVoltages 0070                     updateTemperatures@adcVal 00E7  
      setTemperatureLimitsint@maxCharge_degC 0026                                 __end_of_atoi 2D0A  
                               __end_of_ctoa 35E2                                 __end_of_main 3677  
                               __end_of_dtoa 1A21                                 __end_of_logf 05F5  
                               __end_of_otoa 23E6                                 __end_of_stoa 18CE  
                               __end_of_utoa 22F5                                 __end_of_xtoa 1B7A  
                   __end_of_UV_delay_setting 39F9                       ?_setShuntResistorValue 0071  
                     beginAFEcommunication@i 002D                        ?_send_I2C_controlByte 0071  
                             ??_EUSART_Write 0071                    _watchdog_timeout_shutdown 34DD  
                             __CFG_LPBOR$OFF 0000                            _ATmega328_address 3800  
                                     ??_atoi 0020                                       ??_ctoa 0033  
                                     ??_main 01E3                                       ??_dtoa 003A  
                                     ??_logf 00AC                                       ??_otoa 003A  
                                     ??_stoa 007A                                       ??_utoa 003A  
                                     ??_xtoa 003B                  __end_of_printcellParameters 1CE2  
                             __CFG_PLLEN$OFF 0000                             ___lodiv@quotient 0072  
                              ?_readRegister 0075                                       ?_fputc 0071  
                                     STR_100 3A19                                       STR_102 3A19  
                                     ?_fputs 007A                                       STR_111 3A1A  
                                     STR_120 3A35                                       STR_114 3A47  
                                     STR_107 3A32                                       ?_myIsr 0070  
                                     STR_116 3A47                                       STR_118 3A35  
                             __CFG_ZCDDIS$ON 0000                                       ?_putch 0070  
              __end_of_OCD_threshold_setting 38B7                              ??_updateCurrent 00B1  
                                     _RC1REG 0199                    __end_of_SCD_delay_setting 3A01  
                              vfpfcnvrt@done 00A2                                 ??_AFE_UPDATE 007C  
                                     _TX1REG 019A                                       _SPLLEN 04CF  
     setOverCurrentDischargeProtection@i_981 00AA                                       _SSPADD 0212  
                                     _TRISC6 0476                                       _TRISC7 0477  
                                     _SSPBUF 0211                                       u808lld 2160  
                              _read_I2C_data 33F1                             __end_of___xxtofl 2C69  
                                     u797lld 240E                               __CFG_PWRTE$OFF 0000  
                          __end_of_RGB_color 358F                                 vfprintf@cfmt 0068  
                                     ___flge 29DC                                       ___lmul 3613  
                                  ??___aldiv 0079                                    ??___aodiv 0071  
                             _minCellVoltage 01C6                                    ??___fladd 0062  
                                  ??___aomod 0071                                       ___wmul 34A7  
                                     _ln2_hi 3A15                                    ??___fldiv 0048  
                                     _ln2_lo 3A11                                    ??___flneg 007A  
                             __CFG_STVREN$ON 0000                                    ??___flmul 002E  
                                  ??___flsub 007A                                    ??___fltol 00AC  
                                  ??___lodiv 0071                             __end_of_init_I2C 33F1  
                                  ??___lomod 0071                             __end_of_init_AFE 205C  
                           __end_of_init_RGB 338B                    __end_of_ATmega328_address 3802  
                      _beginAFEcommunication 2DB3                                       pad@buf 0028  
                                     ctoa@fp 0030                                       dtoa@fp 0030  
                                     _strlen 3418                                       logf@t1 0124  
                                     logf@t2 0128                                    ??_initWDT 0071  
                                     logf@dk 0142                                       logf@ix 015E  
                                     fputc@c 0071                                       fputs@c 0022  
                                     fputs@i 0023                                       fputs@s 0025  
                                  ??_isalpha 0073                                    ??_isdigit 0073  
                         __end_of_AFE_UPDATE 348D                           __size_of__Umul8_16 001F  
                                  ??_islower 0073                                    ??_isspace 0073  
                        _updateVoltages$2030 00B4                                       otoa@fp 0030  
                             ??_readRegister 0079                                    ??_isupper 0073  
                                     stoa@cp 002F                                       stoa@fp 0020  
                                     putch@c 0070                             __end_of_vfprintf 3613  
                                     utoa@fp 0030              ??_setCellUndervoltageProtection 0036  
                           __end_of_snprintf 34DD                                       xtoa@fp 0030  
                                  ??_strncmp 0077                                    ??_toupper 0020  
                                 ___flge@ff1 005A                                   ___flge@ff2 005E  
                               ___xxtofl@arg 0022                                 ___xxtofl@exp 0021  
                               ___xxtofl@val 0071                      __end_of__initialization 0067  
                             ?_read_I2C_data 0071                                   ___flneg@f1 005A  
                                 ___fltol@f1 00A8                     ?_setTemperatureLimitsint 0020  
                 __size_of_enableDischarging 0037     setTemperatureLimitsint@minDischarge_degC 0020  
                             __pcstackCOMMON 0070                       ??_send_I2C_controlByte 0075  
                               __pidataBANK3 1800                                __end_of_fputc 2895  
                              __end_of_fputs 07FD                                __end_of_myIsr 0020  
                               _cellVoltages 01A0                                __end_of_putch 0004  
                                 _batCurrent 01BA                           _RGB_AWAIT_AFE_CONN 358F  
                     updateTemperatures@vtsx 00E9                  __size_of_updateTemperatures 02D9  
                                 _batVoltage 01BE                          ?_RGB_AWAIT_AFE_CONN 0070  
                    __size_of_enableCharging 0037                                      ??_fputc 0075  
                                    ??_fputs 0020                                      ??_myIsr 0070  
                                    ??_putch 0071            setShortCircuitProtection@delay_us 006A  
                                 __pbssBANK1 00EF                                   __pbssBANK2 0165  
                                 __pbssBANK3 01A0                                   __pbssBANK4 0220  
                       __end_of_EUSART_Write 0808                           __size_of_init_GPIO 003B  
                         __size_of_initClock 0003                           __size_of_init_TMR1 000B  
                        statemachine@success 0164                            __end_of__Umul8_16 356E  
                                 __pmaintext 3645                         ??_RGB_AWAIT_AFE_CONN 0073  
                       __size_of_internal_16 0009              setShortCircuitProtection@scaler 00A0  
                                    ?___flge 005A                            ?_send_I2C_stopBit 0070  
                                    ?___lmul 0071                                      ?___wmul 0071  
      setTemperatureLimitsint@minCharge_degC 0024                              __CFG_PPS1WAY$ON 0000  
                 ?_setShortCircuitProtection 0066                                   __pintentry 0004  
                     ?_beginAFEcommunication 0020                           ??_send_I2C_stopBit 0071  
                             ___lmul@product 0020                                      ?_strlen 0071  
                    _shuntResistorValue_mOhm 01B2                                    ?___xxtofl 0071  
             setShortCircuitProtection@i_972 00AA                           __size_of_vfpfcnvrt F1A4  
         __size_of_watchdog_timeout_shutdown 001B                                      _PPSLOCK 0E0F  
                     __size_of_send_I2C_NACK 0009                             ___lomod@dividend 0028  
                            ??_read_I2C_data 0073                       __size_of_send_I2C_data 0009  
                                  ?_init_I2C 0070                                    ?_init_AFE 0070  
                                  ?_init_RGB 0070         __end_of_setCellOvervoltageProtection 3000  
      __size_of_setCellOvervoltageProtection 00D5                 _setCellOvervoltageProtection 2F2B  
                           ??_updateVoltages 00B1        __end_of_setCellUndervoltageProtection 2138  
     __size_of_setCellUndervoltageProtection 00DC                _setCellUndervoltageProtection 205C  
                   readRegister@recievedData 0079                      ??_setShuntResistorValue 0075  
                         __size_of_vsnprintf 007D                         __end_of_readRegister 36E2  
                                    ___aldiv 2B51                                      _adcGain 016D  
                            __size_of___flge 007C                                      ___aodiv 23E6  
                                    ___fladd 05F5                                      ___aomod 2138  
                                    ___fldiv 1CE2                                      ___flneg 33C0  
                            __size_of___lmul 0032                                      ___flmul 1023  
                                    ___flsub 3677                                      ___fltol 2895  
                            __size_of___wmul 001B                                      ___lodiv 2A58  
                                    ___lomod 28FB                                    ?_vfprintf 0061  
                                  ?_snprintf 00CC                                _messageBuffer 2771  
                                    __ptext1 34DD                                      __ptext2 2964  
                                    __ptext3 1B7A                                      __ptext4 34C2  
                                    __ptext5 2AD4                                      __ptext6 35E2  
                                    __ptext7 1E5C                                      __ptext8 1A21  
                                    __ptext9 1001                            __end_of_init_GPIO 0843  
                          __end_of_initClock 0800                            __end_of_init_TMR1 33D5  
                            __size_of_strlen 0017                                    _T1CONbits 0018  
                                    _initWDT 2000                                 __size_of_abs 0017  
                               __size_of_pad 0051                                      _isalpha 3514  
                                    _isdigit 3401                                   ??___xxtofl 0075  
                           ___aldiv@dividend 0028                                      _islower 345D  
                                    _isspace 34F8    __end_of_setOverCurrentDischargeProtection 26E8  
 __size_of_setOverCurrentDischargeProtection 0115          ??_setOverCurrentDischargeProtection 006C  
         ?_setOverCurrentDischargeProtection 0066            _setOverCurrentDischargeProtection 25D3  
                                    _isupper 3446                                      atoi@neg 0024  
                                    clrloop0 33D6            __end_of_watchdog_timeout_shutdown 34F8  
                                    _strncmp 37AE                                      _toupper 1001  
                       end_of_initialization 0067                                   ??_init_I2C 0071  
                                 ??_init_AFE 007B                                   ??_init_RGB 0071  
                                    fputc@fp 0073                                      fputs@fp 007A  
              ?_setCellOvervoltageProtection 0032                            _EUSART_Initialize 2D0A  
                         ?_EUSART_Initialize 0032                            __end_of_vfpfcnvrt 1000  
                              _send_I2C_NACK 33AD                             ___aldiv@quotient 002E  
                 send_I2C_controlByte@RW_bit 0073                                      psplit$0 43008C  
                                    psplit$1 8C008D                                _send_I2C_data 33A4  
                                  _RGB_color 356E                                   ??_vfprintf 0066  
                         EUSART_Initialize@x 007A                                   ??_snprintf 006C  
                                    strlen@a 0073                                      strlen@s 0071  
                        ??_EUSART_Initialize 0036                                  ___fladd@grs 006D  
                           __CFG_FOSC$INTOSC 0000                                ___xxtofl@sign 0020  
                                  _TRISAbits 008C                                    _TRISBbits 008D  
                                  _TRISCbits 008E                                    _TRISEbits 0090  
                      __size_of_EUSART_Write 0008                               _enableCharging 36E2  
                          __end_of_vsnprintf 2B51                                  ___fldiv@grs 0054  
                                ___fldiv@rem 004D                 __size_of_printcellParameters 0168  
              __end_of_SCD_threshold_setting 39CB                                    _RXPPSbits 0E24  
                          _I2C_writeRegister 3531                                  ___flmul@grs 0035  
                  __end_of_EUSART_Initialize 2DB3                        __end_of_updateCurrent 2F2B  
                      _OCD_threshold_setting 3897                           ?_I2C_writeRegister 0075  
           beginAFEcommunication@commSuccess 002B                               ?_send_I2C_NACK 0070  
                   readRegister@slaveAddress 0075               ?_setCellUndervoltageProtection 0032  
                             ?_send_I2C_data 0071                          ??_I2C_writeRegister 007B  
                                 ?_RGB_color 0071                               __end_of___flge 2A58  
                             __end_of___lmul 3645                                  vfpfcnvrt@ap 005A  
                                vfpfcnvrt@cp 00A0                                  vfpfcnvrt@fp 0057  
                                vfpfcnvrt@ll 00A8                               __end_of___wmul 34C2  
                                vfpfcnvrt@vp 00B0                               __end_of_ln2_hi 3A19  
                             __end_of_ln2_lo 3A15                                 _EUSART_Write 0800  
                I2C_writeRegister@regAddress 0077                setShuntResistorValue@res_mOhm 0071  
                     __end_of_enableCharging 3719             __size_of_setTemperatureLimitsint 0044  
                             __end_of_strlen 342F                          start_initialization 0022  
                            ___lodiv@divisor 0020                              ___lodiv@counter 007A  
                        _thermistorBetaValue 01E1                                  __end_of_Lg1 3A11  
                                __end_of_Lg2 3A0D                                  __end_of_Lg3 3A09  
                                __end_of_Lg4 3A05                                ?_statemachine 0070  
                                __end_of_abs 3446                                  __end_of_pad 37AE  
                          _minCellTempCharge 01D0                setCellOvervoltageProtection@i 0045  
                       _maxCellTempDischarge 01CA                         updateVoltages@adcVal 00B8  
                       _minCellTempDischarge 01CE                            pnum$text7_split_1 008C  
                          pnum$text7_split_2 008D                    __end_of_I2C_writeRegister 354F  
     _setOverCurrentDischargeProtection$2029 00A4          setCellOvervoltageProtection@delay_s 0034  
       setCellUndervoltageProtection@delay_s 0034                            _EUSART_Write_Text 348D  
                      __size_of_readRegister 0036                           ?_EUSART_Write_Text 0072  
                    ??_beginAFEcommunication 0022                                  vfprintf@fmt 0063  
                                   ??___flge 0062                                     ??___lmul 0079  
                                   ??___wmul 0075               ??_setCellOvervoltageProtection 0036  
        setCellOvervoltageProtection@ov_trip 0044                                    __Umul8_16 354F  
                ??_setShortCircuitProtection 006C                                  __pdataBANK3 01DA  
                        ??_EUSART_Write_Text 0074                __size_of_send_I2C_controlByte 000A  
       setCellUndervoltageProtection@uv_trip 0044                   __end_of_updateTemperatures 1800  
                                   ??_strlen 0073                                    ___fladd@a 005E  
                                  ___fladd@b 005A                                 vsnprintf@cnt 00C4  
                               vsnprintf@fmt 00BF                                    ___fldiv@a 0040  
                                  ___fldiv@b 0044                                  __pbssBIGRAM 2771  
                            ?_enableCharging 0020                         enableCharging@enable 0020  
                                  _adcOffset 016B                                    ___flmul@a 002A  
                                  ___flmul@b 0026                                  __pbssCOMMON 007C  
                                  ___flsub@a 00A0                                    ___flsub@b 00A4  
                             ??_statemachine 0162                                    ___latbits 0003  
           send_I2C_controlByte@BlockAddress 0071                                   myIsr@count 01D5  
                              __pcstackBANK0 0020                                __pcstackBANK1 00A0  
                              __pcstackBANK2 0120                                __pcstackBANK3 01E3  
                           ___aodiv@dividend 0028                    __size_of_send_I2C_stopBit 0008  
                                snprintf@fmt 00D0                            __size_of___xxtofl 0096  
                               _readRegister 36AC     setTemperatureLimitsint@maxDischarge_degC 0022  
                      updateTemperatures@tmp 00E3                        updateTemperatures@rts 00EB  
                  __end_of_EUSART_Write_Text 34A7                   __size_of_EUSART_Initialize 00A9  
                              ??_internal_16 0071                                    _atoi$1652 0026  
                                  _atoi$1653 002A                                    _atoi$1654 0028  
                           _OV_delay_setting 39E9                            __size_of_init_I2C 0010  
                      I2C_writeRegister@data 0079                              ??_send_I2C_NACK 0071  
                          __size_of_init_AFE 0056                            __size_of_init_RGB 0005  
                          _send_I2C_startBit 338B                                    _dtoa$1201 003D  
                            ??_send_I2C_data 0073                  __size_of_RGB_AWAIT_AFE_CONN 0022  
             __size_of_setShuntResistorValue 000A                                     ?___aldiv 0024  
                                   ?___aodiv 0020                           ?_send_I2C_startBit 0070  
                                   ?___fladd 005A                __end_of_setShuntResistorValue 280A  
                                   ?___aomod 0020                                     ?___fldiv 0040  
                                   ?___flneg 005A                             ___aodiv@quotient 0074  
                                   ?___flmul 0026                                     ?___flsub 00A0  
                                   ?___fltol 00A8                                     ?___lodiv 0020  
                                   ?___lomod 0020                                  ??_RGB_color 0073  
                                 ?__Umul8_16 0071                    EUSART_Initialize@baudrate 0032  
                                  _logf$2042 0152                                    _logf$2043 012C  
                                  _logf$2044 0130                                    _logf$2045 0134  
                                  _logf$2046 0138                            __size_of_vfprintf 0031  
                        ??_send_I2C_startBit 0071                            __size_of_snprintf 001B  
             BQ76920@shuntResistorValue_mOhm 01AE                              ___lomod@divisor 0020  
                                   ?_initWDT 0070                              ___lomod@counter 0072  
                                   ?_isalpha 0071                                     ?_isdigit 0071  
                                   ?_islower 0071                                     ?_isspace 0071  
                                  _init_GPIO 0808                                     ?_isupper 0071  
                                  _initClock 07FD                                    _init_TMR1 33CA  
                                  _currState 01D9                    _setShortCircuitProtection 26E8  
                 __size_of_I2C_writeRegister 001E                               __size_of_fputc 0054  
                             __size_of_fputs 0026                               __size_of_myIsr 001C  
                                   ?_strncmp 0071                                     ?_toupper 0077  
                             __size_of_putch 0001                              ___aldiv@divisor 0024  
                      __end_of_read_I2C_data 3401                              ___aldiv@counter 002C  
                             ___wmul@product 0075                              BQ76920@protect1 01D4  
                            BQ76920@protect2 01D3                              BQ76920@protect3 01D2  
                                   _LATAbits 010C                                     _LATEbits 0110  
                  __end_of_send_I2C_startBit 3393                                    clear_ram0 33D5  
                                  _tmr1_flag 00EF                                     _PIE1bits 0091  
         setOverCurrentDischargeProtection@i 00A8                                     _PIR1bits 0011  
                 setShortCircuitProtection@i 00A8                          __end_of_internal_16 33A4  
                        _printcellParameters 1B7A                                    _vfpfcnvrt 1E5C  
                                  _xtoa$1237 0043                                    _xtoa$1238 0045  
                          ___wmul@multiplier 0071                      _setTemperatureLimitsint 3719  
                                 ?_init_GPIO 0070                                   ?_initClock 0070  
                                 ?_init_TMR1 0070                        send_I2C_data@databyte 0071  
                               _isspace$1679 0075                                   vfpfcnvrt@c 00B2  
                          ___lmul@multiplier 0071                         ?_printcellParameters 0070  
                      _temperatureThermistor 01B6                   __size_of_EUSART_Write_Text 001A  
                 ?_watchdog_timeout_shutdown 0070                                    _vsnprintf 2AD4  
                                 _AFE_UPDATE 3474                            _OCD_delay_setting 39AB  
                       __end_of_statemachine 29DC                                   vfprintf@ap 0065  
                                 vfprintf@fp 0061                                  ??__Umul8_16 0073  
                           __size_of___aldiv 0082                             __size_of___aodiv 00F3  
                           __size_of___fladd 01E2                      __size_of_updateVoltages 02D8  
                           __size_of___aomod 00DC                             __size_of___fldiv 017A  
             _setShortCircuitProtection$2028 00A4                             __size_of___flneg 000A  
                                vsnprintf@ap 00C1                             __size_of___flmul 022C  
                           __size_of___flsub 0035                             __size_of___fltol 0066  
                     readRegister@regAddress 0077                             __size_of___lodiv 007C  
                           __size_of___lomod 0069                                   ?_vfpfcnvrt 0057  
                                 snprintf@ap 006F                              ___aodiv@divisor 0020  
                            ___aodiv@counter 0072                                   _ANSELBbits 018D  
                                 _ANSELCbits 018E                                     ___xxtofl 2BD3  
setOverCurrentDischargeProtection@current_mA 0066                             __size_of_initWDT 0006  
                           __size_of_isalpha 001D                             __size_of_isdigit 0017  
                           _send_I2C_stopBit 3393                             __size_of_islower 0017  
                           __size_of_isspace 001C                                     __ptext10 345D  
                                   __ptext11 3446                                     __ptext20 342F  
                                   __ptext12 3514                                     __ptext21 2138  
                                   __ptext13 2214                                     __ptext30 34F8  
                                   __ptext22 23E6                                     __ptext14 28FB  
                                   __ptext31 3401                                     __ptext23 35B1  
                                   __ptext15 2A58                                     __ptext40 29DC  
                                   __ptext32 348D                                     __ptext24 375D  
                                   __ptext16 37AE                                     __ptext41 205C  
                                   __ptext33 0800                                     __ptext25 3418  
                                   __ptext17 1809                                     __ptext50 006B  
                                   __ptext42 2F2B                                     __ptext34 2006  
                                   __ptext26 07D7                                     __ptext18 22F5  
                                   __ptext51 3677                                     __ptext43 2DB3  
                                   __ptext35 3719                                     __ptext27 2841  
                                   __ptext19 18CE                                     __ptext60 280A  
                                   __ptext52 05F5                                     __ptext44 358F  
                                   __ptext36 34A7                                     __ptext28 0003  
                                   __ptext61 36E2                                     __ptext53 2E67  
                                   __ptext45 356E                                     __ptext37 2800  
                                   __ptext29 2C69                                     __ptext70 33CA  
                                   __ptext62 36AC                                     __ptext54 2BD3  
                                   __ptext46 3474                                     __ptext38 26E8  
                                   __ptext71 3386                                     __ptext63 33AD  
                                   __ptext55 2895                                     __ptext47 124F  
                                   __ptext39 25D3                                     __ptext72 33E1  
                                   __ptext64 33F1                                     __ptext56 33C0  
                                   __ptext48 3613                                     __ptext73 0808  
                                   __ptext65 3531                                     __ptext57 1023  
                                   __ptext49 1527                                     __ptext74 2000  
                                   __ptext66 3393                                     __ptext58 354F  
                                   __ptext75 07FD                                     __ptext67 338B  
                                   __ptext59 1CE2                                     __ptext76 339B  
                                   __ptext68 33A4                                     __ptext77 2D0A  
                                   __ptext69 33B6                                     __ptext78 2B51  
                           __size_of_isupper 0017                        ??_printcellParameters 007C  
             setCellUndervoltageProtection@i 0045                    __end_of_OCD_delay_setting 39BB  
                           __size_of_strncmp 0052                             __size_of_toupper 0022  
                                 ?_vsnprintf 00BB                          updateCurrent@adcVal 00B5  
                                   _init_I2C 33E1                                     _init_AFE 2006  
                                   _init_RGB 3386                                __size_of_atoi 00A1  
                              __size_of_ctoa 0031                                __size_of_main 0032  
                              __size_of_dtoa 0153                                _SSPDATPPSbits 0E21  
                                  pnum$text7 0043                                __size_of_logf 058A  
                              __size_of_otoa 00F1                        _SCD_threshold_setting 39BB  
                              __size_of_stoa 00C5                                __size_of_utoa 00E1  
                 __size_of_send_I2C_startBit 0008                                __size_of_xtoa 0159  
                                _internal_16 339B                                   _RB2PPSbits 0E9A  
                                 _RC1STAbits 019D                                    stoa@F1152 01DA  
                                 _RC4PPSbits 0EA4               __size_of_beginAFEcommunication 00B4  
                              _SSPCLKPPSbits 0E20                __end_of_beginAFEcommunication 2E67  
                                   int$flags 007E                                   _RC5PPSbits 0EA5  
                                   _protect1 01D8                                     _protect2 01D7  
                                   _protect3 01D6                    ??_setTemperatureLimitsint 0077  
                                   _vfprintf 35E2                             ??_enableCharging 0022  
                                   _snprintf 34C2                             ___aomod@dividend 0028  
                                   logf@F469 01AA                       __size_of_updateCurrent 00C4  
  setOverCurrentDischargeProtection@delay_ms 006A                     __end_of_OV_delay_setting 39F1  
                             _vfpfcnvrt$1252 00A4                               _vfpfcnvrt$1253 00A6  
                                 _INTCONbits 000B                                  ??_init_GPIO 0071  
                                ??_initClock 0071                                  ??_init_TMR1 0071  
                                   logf@hfsq 013E                               __pstringtext10 3A0D  
                             __pstringtext11 3A11                               __pstringtext20 390D  
                             __pstringtext12 3A15                               __pstringtext21 3922  
                             __pstringtext13 3800                               __pstringtext30 3A19  
                             __pstringtext22 3937                               __pstringtext14 3849  
                             __pstringtext31 3A1D                               __pstringtext23 394C  
                             __pstringtext15 3871                               __pstringtext40 3A3E  
                             __pstringtext32 3A21                               __pstringtext24 3960  
                             __pstringtext16 38B7                               __pstringtext41 3A41  
                             __pstringtext33 3A25                               __pstringtext25 3974  
                             __pstringtext17 38CD                               __pstringtext42 3A44  
                             __pstringtext34 3A29                               __pstringtext26 3987  
                             __pstringtext18 38E3                               __pstringtext43 3A47  
                             __pstringtext35 3A2D                               __pstringtext27 3999  
                             __pstringtext19 38F8                               __pstringtext44 0000  
                             __pstringtext36 3A31                               __pstringtext28 39CB  
                             __pstringtext37 3A35                               __pstringtext29 39DA  
                             __pstringtext38 3A38                               __pstringtext39 3A3B  
                                   isalpha@c 0071                                     isdigit@c 0071  
                                 vsnprintf@f 00C6                                   vsnprintf@n 00BD  
                                 vsnprintf@s 00BB                           _updateTemperatures 1527  
                           _UV_delay_setting 39F1                                    snprintf@n 00CE  
                                  snprintf@s 00CC                 __end_of_send_I2C_controlByte 33C0  
                                   intlevel1 0000          setShortCircuitProtection@current_mA 0066  
                                   islower@c 0071                                  ?_AFE_UPDATE 0070  
                                   isspace@c 0071                          ?_updateTemperatures 0070  
                          __CFG_CLKOUTEN$OFF 0000                                  _PPSLOCKbits 0E0F  
                                   isupper@c 0071           __size_of_setShortCircuitProtection 0118  
                                  strncmp@_l 0071                                    strncmp@_r 0073  
                          _maxCellTempCharge 01CC                              ___aomod@divisor 0020  
                                ??_vfpfcnvrt 005B                                     stoa@nuls 0024  
                            ___aomod@counter 0072                                __pstringtext1 3897  
                              __pstringtext2 39AB                                __pstringtext3 39BB  
                              __pstringtext4 39E9                                __pstringtext5 39F1  
                              __pstringtext6 39F9                                __pstringtext7 3A01  
                              __pstringtext8 3A05                                __pstringtext9 3A09  
                       ??_updateTemperatures 00B4                       __Umul8_16@multiplicand 0071  
                             _vsnprintf$1824 00C2                                     strncmp@l 0078  
                                   strncmp@n 0075                                     strncmp@r 007A  
                                   toupper@c 0077                        EUSART_Write_Text@text 0072  
                               ___aldiv@sign 002D                                  _SSPCON2bits 0216  
                                 _WDTCONbits 0097                                ___fladd@signs 006A  
            __end_of_setTemperatureLimitsint 375D                           EUSART_Write@txData 0071  
                               ___aodiv@sign 0073      setOverCurrentDischargeProtection@scaler 00A0  
                                ??_vsnprintf 006A                      _updateTemperatures$2031 00B7  
                    _updateTemperatures$2040 00DB                      _updateTemperatures$2032 00BB  
                    _updateTemperatures$2041 00DF                      _updateTemperatures$2033 00BF  
                    _updateTemperatures$2034 00C3                      _updateTemperatures$2035 00C7  
                    _updateTemperatures$2036 00CB                      _updateTemperatures$2037 00CF  
                    _updateTemperatures$2038 00D3                      _updateTemperatures$2039 00D7  
                               ___fladd@aexp 006B                                 ___fladd@bexp 006C  
                      __size_of_statemachine 0078                                   _STATUSbits 0003  
                                _toggleColor 007C                         __Umul8_16@multiplier 0079  
                              _updateCurrent 2E67                                   _SSPCONbits 0215  
                 __end_of_RGB_AWAIT_AFE_CONN 35B1                                 ___aomod@sign 0073  
                         EUSART_Write_Text@i 0075                        __end_of_send_I2C_NACK 33B6  
                          __Umul8_16@product 0075  
