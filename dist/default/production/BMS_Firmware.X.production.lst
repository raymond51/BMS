

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Dec 24 01:47:37 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1719
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	stringtext14,global,class=STRCODE,delta=2
    19                           	psect	stringtext15,global,class=STRCODE,delta=2
    20                           	psect	stringtext16,global,class=STRCODE,delta=2
    21                           	psect	stringtext17,global,class=STRCODE,delta=2
    22                           	psect	stringtext18,global,class=STRCODE,delta=2
    23                           	psect	stringtext19,global,class=STRCODE,delta=2
    24                           	psect	stringtext20,global,class=STRCODE,delta=2
    25                           	psect	stringtext21,global,class=STRCODE,delta=2
    26                           	psect	stringtext22,global,class=STRCODE,delta=2
    27                           	psect	stringtext23,global,class=STRCODE,delta=2
    28                           	psect	stringtext24,global,class=STRCODE,delta=2
    29                           	psect	stringtext25,global,class=STRCODE,delta=2
    30                           	psect	stringtext26,global,class=STRCODE,delta=2
    31                           	psect	stringtext27,global,class=STRCODE,delta=2
    32                           	psect	stringtext28,global,class=STRCODE,delta=2
    33                           	psect	stringtext29,global,class=STRCODE,delta=2
    34                           	psect	stringtext30,global,class=STRCODE,delta=2
    35                           	psect	stringtext31,global,class=STRCODE,delta=2
    36                           	psect	stringtext32,global,class=STRCODE,delta=2
    37                           	psect	stringtext33,global,class=STRCODE,delta=2
    38                           	psect	stringtext34,global,class=STRCODE,delta=2
    39                           	psect	stringtext35,global,class=STRCODE,delta=2
    40                           	psect	cinit,global,class=CODE,merge=1,delta=2
    41                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    42                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    43                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    44                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    45                           	psect	clrtext,global,class=CODE,delta=2
    46                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    47                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    48                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    49                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    50                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    51                           	psect	text1,local,class=CODE,merge=1,delta=2
    52                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	text4,local,class=CODE,merge=1,delta=2
    55                           	psect	text5,local,class=CODE,merge=1,delta=2
    56                           	psect	text6,local,class=CODE,merge=1,delta=2
    57                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text11,local,class=CODE,merge=1,delta=2
    62                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    63                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    64                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text15,local,class=CODE,merge=1,delta=2
    66                           	psect	text16,local,class=CODE,merge=1,delta=2
    67                           	psect	text17,local,class=CODE,merge=1,delta=2
    68                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    69                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    70                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    71                           	psect	text21,local,class=CODE,merge=1,delta=2
    72                           	psect	text22,local,class=CODE,merge=1,delta=2
    73                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    74                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    75                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    76                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    77                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    78                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    79                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    80                           	psect	text30,local,class=CODE,merge=1,delta=2
    81                           	psect	text31,local,class=CODE,merge=1,delta=2
    82                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    83                           	psect	text33,local,class=CODE,merge=1,delta=2
    84                           	psect	text34,local,class=CODE,merge=1,delta=2
    85                           	psect	text35,local,class=CODE,merge=1,delta=2
    86                           	psect	text36,local,class=CODE,merge=1,delta=2
    87                           	psect	text37,local,class=CODE,merge=1,delta=2
    88                           	psect	text38,local,class=CODE,merge=1,delta=2
    89                           	psect	text39,local,class=CODE,merge=1,delta=2
    90                           	psect	text40,local,class=CODE,merge=1,delta=2
    91                           	psect	text41,local,class=CODE,merge=1,delta=2
    92                           	psect	text42,local,class=CODE,merge=1,delta=2
    93                           	psect	text43,local,class=CODE,merge=1,delta=2
    94                           	psect	text44,local,class=CODE,merge=1,delta=2
    95                           	psect	text45,local,class=CODE,merge=1,delta=2
    96                           	psect	text46,local,class=CODE,merge=1,delta=2
    97                           	psect	text47,local,class=CODE,merge=1,delta=2
    98                           	psect	text48,local,class=CODE,merge=1,delta=2
    99                           	psect	text49,local,class=CODE,merge=1,delta=2,group=1
   100                           	psect	text50,local,class=CODE,merge=1,delta=2
   101                           	psect	text51,local,class=CODE,merge=1,delta=2
   102                           	psect	text52,local,class=CODE,merge=1,delta=2
   103                           	psect	text53,local,class=CODE,merge=1,delta=2
   104                           	psect	text54,local,class=CODE,merge=1,delta=2
   105                           	psect	text55,local,class=CODE,merge=1,delta=2
   106                           	psect	text56,local,class=CODE,merge=1,delta=2
   107                           	psect	text57,local,class=CODE,merge=1,delta=2,group=1
   108                           	psect	intentry,global,class=CODE,delta=2
   109                           	psect	text5_split_1,local,class=CODE,merge=1,delta=2
   110                           	psect	text5_split_2,local,class=CODE,merge=1,delta=2
   111                           	psect	text5_split_3,local,class=CODE,merge=1,delta=2
   112                           	psect	text5_split_4,local,class=CODE,merge=1,delta=2
   113                           	psect	text5_split_5,local,class=CODE,merge=1,delta=2
   114                           	dabs	1,0xCA0,32
   115                           	dabs	1,0xC20,80
   116                           	dabs	1,0xBE1,15
   117                           	dabs	1,0x2771,0,_messageBuffer
   118                           	dabs	1,0x7E,2
   119  0000                     
   120                           ; Version 2.05
   121                           ; Generated 20/12/2018 GMT
   122                           ; 
   123                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   124                           ; All rights reserved.
   125                           ; 
   126                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   127                           ; 
   128                           ; Redistribution and use in source and binary forms, with or without modification, are
   129                           ; permitted provided that the following conditions are met:
   130                           ; 
   131                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   132                           ;        conditions and the following disclaimer.
   133                           ; 
   134                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   135                           ;        of conditions and the following disclaimer in the documentation and/or other
   136                           ;        materials provided with the distribution.
   137                           ; 
   138                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   139                           ;        software without specific prior written permission.
   140                           ; 
   141                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   142                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   143                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   144                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   145                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   146                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   147                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   148                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   149                           ; 
   150                           ; 
   151                           ; Code-generator required, PIC16F1719 Definitions
   152                           ; 
   153                           ; SFR Addresses
   154  0000                     	;# 
   155  0001                     	;# 
   156  0002                     	;# 
   157  0003                     	;# 
   158  0004                     	;# 
   159  0005                     	;# 
   160  0006                     	;# 
   161  0007                     	;# 
   162  0008                     	;# 
   163  0009                     	;# 
   164  000A                     	;# 
   165  000B                     	;# 
   166  000C                     	;# 
   167  000D                     	;# 
   168  000E                     	;# 
   169  000F                     	;# 
   170  0010                     	;# 
   171  0011                     	;# 
   172  0012                     	;# 
   173  0013                     	;# 
   174  0015                     	;# 
   175  0016                     	;# 
   176  0016                     	;# 
   177  0017                     	;# 
   178  0018                     	;# 
   179  0019                     	;# 
   180  001A                     	;# 
   181  001B                     	;# 
   182  001C                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009B                     	;# 
   199  009C                     	;# 
   200  009D                     	;# 
   201  009E                     	;# 
   202  009F                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0110                     	;# 
   208  0111                     	;# 
   209  0112                     	;# 
   210  0113                     	;# 
   211  0114                     	;# 
   212  0115                     	;# 
   213  0116                     	;# 
   214  0117                     	;# 
   215  0118                     	;# 
   216  0119                     	;# 
   217  011A                     	;# 
   218  011B                     	;# 
   219  011B                     	;# 
   220  011C                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  018E                     	;# 
   224  018F                     	;# 
   225  0190                     	;# 
   226  0191                     	;# 
   227  0191                     	;# 
   228  0192                     	;# 
   229  0193                     	;# 
   230  0193                     	;# 
   231  0194                     	;# 
   232  0195                     	;# 
   233  0196                     	;# 
   234  0197                     	;# 
   235  0199                     	;# 
   236  0199                     	;# 
   237  0199                     	;# 
   238  019A                     	;# 
   239  019A                     	;# 
   240  019A                     	;# 
   241  019B                     	;# 
   242  019B                     	;# 
   243  019B                     	;# 
   244  019B                     	;# 
   245  019B                     	;# 
   246  019C                     	;# 
   247  019C                     	;# 
   248  019C                     	;# 
   249  019D                     	;# 
   250  019D                     	;# 
   251  019D                     	;# 
   252  019E                     	;# 
   253  019E                     	;# 
   254  019E                     	;# 
   255  019F                     	;# 
   256  019F                     	;# 
   257  019F                     	;# 
   258  019F                     	;# 
   259  019F                     	;# 
   260  020C                     	;# 
   261  020D                     	;# 
   262  020E                     	;# 
   263  020F                     	;# 
   264  0210                     	;# 
   265  0211                     	;# 
   266  0211                     	;# 
   267  0212                     	;# 
   268  0212                     	;# 
   269  0213                     	;# 
   270  0213                     	;# 
   271  0214                     	;# 
   272  0214                     	;# 
   273  0215                     	;# 
   274  0215                     	;# 
   275  0215                     	;# 
   276  0215                     	;# 
   277  0216                     	;# 
   278  0216                     	;# 
   279  0217                     	;# 
   280  0217                     	;# 
   281  028C                     	;# 
   282  028D                     	;# 
   283  028E                     	;# 
   284  028F                     	;# 
   285  0290                     	;# 
   286  0291                     	;# 
   287  0291                     	;# 
   288  0292                     	;# 
   289  0293                     	;# 
   290  0293                     	;# 
   291  0298                     	;# 
   292  0298                     	;# 
   293  0299                     	;# 
   294  029A                     	;# 
   295  029A                     	;# 
   296  029E                     	;# 
   297  030C                     	;# 
   298  030D                     	;# 
   299  030E                     	;# 
   300  030F                     	;# 
   301  0310                     	;# 
   302  038C                     	;# 
   303  038D                     	;# 
   304  038E                     	;# 
   305  038F                     	;# 
   306  0390                     	;# 
   307  0391                     	;# 
   308  0392                     	;# 
   309  0393                     	;# 
   310  0394                     	;# 
   311  0395                     	;# 
   312  0396                     	;# 
   313  0397                     	;# 
   314  0398                     	;# 
   315  0399                     	;# 
   316  039D                     	;# 
   317  039E                     	;# 
   318  039F                     	;# 
   319  0415                     	;# 
   320  0416                     	;# 
   321  0417                     	;# 
   322  041C                     	;# 
   323  041D                     	;# 
   324  041E                     	;# 
   325  0498                     	;# 
   326  0498                     	;# 
   327  0499                     	;# 
   328  049A                     	;# 
   329  049B                     	;# 
   330  049B                     	;# 
   331  049C                     	;# 
   332  049D                     	;# 
   333  049E                     	;# 
   334  049F                     	;# 
   335  0511                     	;# 
   336  0515                     	;# 
   337  0617                     	;# 
   338  0618                     	;# 
   339  0619                     	;# 
   340  0619                     	;# 
   341  061A                     	;# 
   342  061B                     	;# 
   343  061C                     	;# 
   344  061C                     	;# 
   345  0691                     	;# 
   346  0692                     	;# 
   347  0693                     	;# 
   348  0694                     	;# 
   349  0695                     	;# 
   350  0696                     	;# 
   351  0697                     	;# 
   352  0698                     	;# 
   353  0699                     	;# 
   354  069A                     	;# 
   355  069B                     	;# 
   356  069C                     	;# 
   357  069D                     	;# 
   358  069E                     	;# 
   359  069F                     	;# 
   360  0E0F                     	;# 
   361  0E10                     	;# 
   362  0E11                     	;# 
   363  0E12                     	;# 
   364  0E13                     	;# 
   365  0E14                     	;# 
   366  0E15                     	;# 
   367  0E17                     	;# 
   368  0E20                     	;# 
   369  0E21                     	;# 
   370  0E22                     	;# 
   371  0E24                     	;# 
   372  0E25                     	;# 
   373  0E28                     	;# 
   374  0E29                     	;# 
   375  0E2A                     	;# 
   376  0E2B                     	;# 
   377  0E90                     	;# 
   378  0E91                     	;# 
   379  0E92                     	;# 
   380  0E93                     	;# 
   381  0E94                     	;# 
   382  0E95                     	;# 
   383  0E96                     	;# 
   384  0E97                     	;# 
   385  0E98                     	;# 
   386  0E99                     	;# 
   387  0E9A                     	;# 
   388  0E9B                     	;# 
   389  0E9C                     	;# 
   390  0E9D                     	;# 
   391  0E9E                     	;# 
   392  0E9F                     	;# 
   393  0EA0                     	;# 
   394  0EA1                     	;# 
   395  0EA2                     	;# 
   396  0EA3                     	;# 
   397  0EA4                     	;# 
   398  0EA5                     	;# 
   399  0EA6                     	;# 
   400  0EA7                     	;# 
   401  0EA8                     	;# 
   402  0EA9                     	;# 
   403  0EAA                     	;# 
   404  0EAB                     	;# 
   405  0EAC                     	;# 
   406  0EAD                     	;# 
   407  0EAE                     	;# 
   408  0EAF                     	;# 
   409  0EB0                     	;# 
   410  0EB1                     	;# 
   411  0EB2                     	;# 
   412  0F0F                     	;# 
   413  0F10                     	;# 
   414  0F11                     	;# 
   415  0F12                     	;# 
   416  0F13                     	;# 
   417  0F14                     	;# 
   418  0F15                     	;# 
   419  0F16                     	;# 
   420  0F17                     	;# 
   421  0F18                     	;# 
   422  0F19                     	;# 
   423  0F1A                     	;# 
   424  0F1B                     	;# 
   425  0F1C                     	;# 
   426  0F1D                     	;# 
   427  0F1E                     	;# 
   428  0F1F                     	;# 
   429  0F20                     	;# 
   430  0F21                     	;# 
   431  0F22                     	;# 
   432  0F23                     	;# 
   433  0F24                     	;# 
   434  0F25                     	;# 
   435  0F26                     	;# 
   436  0F27                     	;# 
   437  0F28                     	;# 
   438  0F29                     	;# 
   439  0F2A                     	;# 
   440  0F2B                     	;# 
   441  0F2C                     	;# 
   442  0F2D                     	;# 
   443  0F2E                     	;# 
   444  0F2F                     	;# 
   445  0F30                     	;# 
   446  0F31                     	;# 
   447  0F32                     	;# 
   448  0F33                     	;# 
   449  0F34                     	;# 
   450  0F35                     	;# 
   451  0F36                     	;# 
   452  0F37                     	;# 
   453  0FE4                     	;# 
   454  0FE5                     	;# 
   455  0FE6                     	;# 
   456  0FE7                     	;# 
   457  0FE8                     	;# 
   458  0FE9                     	;# 
   459  0FEA                     	;# 
   460  0FEB                     	;# 
   461  0FED                     	;# 
   462  0FEE                     	;# 
   463  0FEF                     	;# 
   464  0000                     	;# 
   465  0001                     	;# 
   466  0002                     	;# 
   467  0003                     	;# 
   468  0004                     	;# 
   469  0005                     	;# 
   470  0006                     	;# 
   471  0007                     	;# 
   472  0008                     	;# 
   473  0009                     	;# 
   474  000A                     	;# 
   475  000B                     	;# 
   476  000C                     	;# 
   477  000D                     	;# 
   478  000E                     	;# 
   479  000F                     	;# 
   480  0010                     	;# 
   481  0011                     	;# 
   482  0012                     	;# 
   483  0013                     	;# 
   484  0015                     	;# 
   485  0016                     	;# 
   486  0016                     	;# 
   487  0017                     	;# 
   488  0018                     	;# 
   489  0019                     	;# 
   490  001A                     	;# 
   491  001B                     	;# 
   492  001C                     	;# 
   493  008C                     	;# 
   494  008D                     	;# 
   495  008E                     	;# 
   496  008F                     	;# 
   497  0090                     	;# 
   498  0091                     	;# 
   499  0092                     	;# 
   500  0093                     	;# 
   501  0095                     	;# 
   502  0096                     	;# 
   503  0097                     	;# 
   504  0098                     	;# 
   505  0099                     	;# 
   506  009A                     	;# 
   507  009B                     	;# 
   508  009B                     	;# 
   509  009C                     	;# 
   510  009D                     	;# 
   511  009E                     	;# 
   512  009F                     	;# 
   513  010C                     	;# 
   514  010D                     	;# 
   515  010E                     	;# 
   516  010F                     	;# 
   517  0110                     	;# 
   518  0111                     	;# 
   519  0112                     	;# 
   520  0113                     	;# 
   521  0114                     	;# 
   522  0115                     	;# 
   523  0116                     	;# 
   524  0117                     	;# 
   525  0118                     	;# 
   526  0119                     	;# 
   527  011A                     	;# 
   528  011B                     	;# 
   529  011B                     	;# 
   530  011C                     	;# 
   531  018C                     	;# 
   532  018D                     	;# 
   533  018E                     	;# 
   534  018F                     	;# 
   535  0190                     	;# 
   536  0191                     	;# 
   537  0191                     	;# 
   538  0192                     	;# 
   539  0193                     	;# 
   540  0193                     	;# 
   541  0194                     	;# 
   542  0195                     	;# 
   543  0196                     	;# 
   544  0197                     	;# 
   545  0199                     	;# 
   546  0199                     	;# 
   547  0199                     	;# 
   548  019A                     	;# 
   549  019A                     	;# 
   550  019A                     	;# 
   551  019B                     	;# 
   552  019B                     	;# 
   553  019B                     	;# 
   554  019B                     	;# 
   555  019B                     	;# 
   556  019C                     	;# 
   557  019C                     	;# 
   558  019C                     	;# 
   559  019D                     	;# 
   560  019D                     	;# 
   561  019D                     	;# 
   562  019E                     	;# 
   563  019E                     	;# 
   564  019E                     	;# 
   565  019F                     	;# 
   566  019F                     	;# 
   567  019F                     	;# 
   568  019F                     	;# 
   569  019F                     	;# 
   570  020C                     	;# 
   571  020D                     	;# 
   572  020E                     	;# 
   573  020F                     	;# 
   574  0210                     	;# 
   575  0211                     	;# 
   576  0211                     	;# 
   577  0212                     	;# 
   578  0212                     	;# 
   579  0213                     	;# 
   580  0213                     	;# 
   581  0214                     	;# 
   582  0214                     	;# 
   583  0215                     	;# 
   584  0215                     	;# 
   585  0215                     	;# 
   586  0215                     	;# 
   587  0216                     	;# 
   588  0216                     	;# 
   589  0217                     	;# 
   590  0217                     	;# 
   591  028C                     	;# 
   592  028D                     	;# 
   593  028E                     	;# 
   594  028F                     	;# 
   595  0290                     	;# 
   596  0291                     	;# 
   597  0291                     	;# 
   598  0292                     	;# 
   599  0293                     	;# 
   600  0293                     	;# 
   601  0298                     	;# 
   602  0298                     	;# 
   603  0299                     	;# 
   604  029A                     	;# 
   605  029A                     	;# 
   606  029E                     	;# 
   607  030C                     	;# 
   608  030D                     	;# 
   609  030E                     	;# 
   610  030F                     	;# 
   611  0310                     	;# 
   612  038C                     	;# 
   613  038D                     	;# 
   614  038E                     	;# 
   615  038F                     	;# 
   616  0390                     	;# 
   617  0391                     	;# 
   618  0392                     	;# 
   619  0393                     	;# 
   620  0394                     	;# 
   621  0395                     	;# 
   622  0396                     	;# 
   623  0397                     	;# 
   624  0398                     	;# 
   625  0399                     	;# 
   626  039D                     	;# 
   627  039E                     	;# 
   628  039F                     	;# 
   629  0415                     	;# 
   630  0416                     	;# 
   631  0417                     	;# 
   632  041C                     	;# 
   633  041D                     	;# 
   634  041E                     	;# 
   635  0498                     	;# 
   636  0498                     	;# 
   637  0499                     	;# 
   638  049A                     	;# 
   639  049B                     	;# 
   640  049B                     	;# 
   641  049C                     	;# 
   642  049D                     	;# 
   643  049E                     	;# 
   644  049F                     	;# 
   645  0511                     	;# 
   646  0515                     	;# 
   647  0617                     	;# 
   648  0618                     	;# 
   649  0619                     	;# 
   650  0619                     	;# 
   651  061A                     	;# 
   652  061B                     	;# 
   653  061C                     	;# 
   654  061C                     	;# 
   655  0691                     	;# 
   656  0692                     	;# 
   657  0693                     	;# 
   658  0694                     	;# 
   659  0695                     	;# 
   660  0696                     	;# 
   661  0697                     	;# 
   662  0698                     	;# 
   663  0699                     	;# 
   664  069A                     	;# 
   665  069B                     	;# 
   666  069C                     	;# 
   667  069D                     	;# 
   668  069E                     	;# 
   669  069F                     	;# 
   670  0E0F                     	;# 
   671  0E10                     	;# 
   672  0E11                     	;# 
   673  0E12                     	;# 
   674  0E13                     	;# 
   675  0E14                     	;# 
   676  0E15                     	;# 
   677  0E17                     	;# 
   678  0E20                     	;# 
   679  0E21                     	;# 
   680  0E22                     	;# 
   681  0E24                     	;# 
   682  0E25                     	;# 
   683  0E28                     	;# 
   684  0E29                     	;# 
   685  0E2A                     	;# 
   686  0E2B                     	;# 
   687  0E90                     	;# 
   688  0E91                     	;# 
   689  0E92                     	;# 
   690  0E93                     	;# 
   691  0E94                     	;# 
   692  0E95                     	;# 
   693  0E96                     	;# 
   694  0E97                     	;# 
   695  0E98                     	;# 
   696  0E99                     	;# 
   697  0E9A                     	;# 
   698  0E9B                     	;# 
   699  0E9C                     	;# 
   700  0E9D                     	;# 
   701  0E9E                     	;# 
   702  0E9F                     	;# 
   703  0EA0                     	;# 
   704  0EA1                     	;# 
   705  0EA2                     	;# 
   706  0EA3                     	;# 
   707  0EA4                     	;# 
   708  0EA5                     	;# 
   709  0EA6                     	;# 
   710  0EA7                     	;# 
   711  0EA8                     	;# 
   712  0EA9                     	;# 
   713  0EAA                     	;# 
   714  0EAB                     	;# 
   715  0EAC                     	;# 
   716  0EAD                     	;# 
   717  0EAE                     	;# 
   718  0EAF                     	;# 
   719  0EB0                     	;# 
   720  0EB1                     	;# 
   721  0EB2                     	;# 
   722  0F0F                     	;# 
   723  0F10                     	;# 
   724  0F11                     	;# 
   725  0F12                     	;# 
   726  0F13                     	;# 
   727  0F14                     	;# 
   728  0F15                     	;# 
   729  0F16                     	;# 
   730  0F17                     	;# 
   731  0F18                     	;# 
   732  0F19                     	;# 
   733  0F1A                     	;# 
   734  0F1B                     	;# 
   735  0F1C                     	;# 
   736  0F1D                     	;# 
   737  0F1E                     	;# 
   738  0F1F                     	;# 
   739  0F20                     	;# 
   740  0F21                     	;# 
   741  0F22                     	;# 
   742  0F23                     	;# 
   743  0F24                     	;# 
   744  0F25                     	;# 
   745  0F26                     	;# 
   746  0F27                     	;# 
   747  0F28                     	;# 
   748  0F29                     	;# 
   749  0F2A                     	;# 
   750  0F2B                     	;# 
   751  0F2C                     	;# 
   752  0F2D                     	;# 
   753  0F2E                     	;# 
   754  0F2F                     	;# 
   755  0F30                     	;# 
   756  0F31                     	;# 
   757  0F32                     	;# 
   758  0F33                     	;# 
   759  0F34                     	;# 
   760  0F35                     	;# 
   761  0F36                     	;# 
   762  0F37                     	;# 
   763  0FE4                     	;# 
   764  0FE5                     	;# 
   765  0FE6                     	;# 
   766  0FE7                     	;# 
   767  0FE8                     	;# 
   768  0FE9                     	;# 
   769  0FEA                     	;# 
   770  0FEB                     	;# 
   771  0FED                     	;# 
   772  0FEE                     	;# 
   773  0FEF                     	;# 
   774  0000                     	;# 
   775  0001                     	;# 
   776  0002                     	;# 
   777  0003                     	;# 
   778  0004                     	;# 
   779  0005                     	;# 
   780  0006                     	;# 
   781  0007                     	;# 
   782  0008                     	;# 
   783  0009                     	;# 
   784  000A                     	;# 
   785  000B                     	;# 
   786  000C                     	;# 
   787  000D                     	;# 
   788  000E                     	;# 
   789  000F                     	;# 
   790  0010                     	;# 
   791  0011                     	;# 
   792  0012                     	;# 
   793  0013                     	;# 
   794  0015                     	;# 
   795  0016                     	;# 
   796  0016                     	;# 
   797  0017                     	;# 
   798  0018                     	;# 
   799  0019                     	;# 
   800  001A                     	;# 
   801  001B                     	;# 
   802  001C                     	;# 
   803  008C                     	;# 
   804  008D                     	;# 
   805  008E                     	;# 
   806  008F                     	;# 
   807  0090                     	;# 
   808  0091                     	;# 
   809  0092                     	;# 
   810  0093                     	;# 
   811  0095                     	;# 
   812  0096                     	;# 
   813  0097                     	;# 
   814  0098                     	;# 
   815  0099                     	;# 
   816  009A                     	;# 
   817  009B                     	;# 
   818  009B                     	;# 
   819  009C                     	;# 
   820  009D                     	;# 
   821  009E                     	;# 
   822  009F                     	;# 
   823  010C                     	;# 
   824  010D                     	;# 
   825  010E                     	;# 
   826  010F                     	;# 
   827  0110                     	;# 
   828  0111                     	;# 
   829  0112                     	;# 
   830  0113                     	;# 
   831  0114                     	;# 
   832  0115                     	;# 
   833  0116                     	;# 
   834  0117                     	;# 
   835  0118                     	;# 
   836  0119                     	;# 
   837  011A                     	;# 
   838  011B                     	;# 
   839  011B                     	;# 
   840  011C                     	;# 
   841  018C                     	;# 
   842  018D                     	;# 
   843  018E                     	;# 
   844  018F                     	;# 
   845  0190                     	;# 
   846  0191                     	;# 
   847  0191                     	;# 
   848  0192                     	;# 
   849  0193                     	;# 
   850  0193                     	;# 
   851  0194                     	;# 
   852  0195                     	;# 
   853  0196                     	;# 
   854  0197                     	;# 
   855  0199                     	;# 
   856  0199                     	;# 
   857  0199                     	;# 
   858  019A                     	;# 
   859  019A                     	;# 
   860  019A                     	;# 
   861  019B                     	;# 
   862  019B                     	;# 
   863  019B                     	;# 
   864  019B                     	;# 
   865  019B                     	;# 
   866  019C                     	;# 
   867  019C                     	;# 
   868  019C                     	;# 
   869  019D                     	;# 
   870  019D                     	;# 
   871  019D                     	;# 
   872  019E                     	;# 
   873  019E                     	;# 
   874  019E                     	;# 
   875  019F                     	;# 
   876  019F                     	;# 
   877  019F                     	;# 
   878  019F                     	;# 
   879  019F                     	;# 
   880  020C                     	;# 
   881  020D                     	;# 
   882  020E                     	;# 
   883  020F                     	;# 
   884  0210                     	;# 
   885  0211                     	;# 
   886  0211                     	;# 
   887  0212                     	;# 
   888  0212                     	;# 
   889  0213                     	;# 
   890  0213                     	;# 
   891  0214                     	;# 
   892  0214                     	;# 
   893  0215                     	;# 
   894  0215                     	;# 
   895  0215                     	;# 
   896  0215                     	;# 
   897  0216                     	;# 
   898  0216                     	;# 
   899  0217                     	;# 
   900  0217                     	;# 
   901  028C                     	;# 
   902  028D                     	;# 
   903  028E                     	;# 
   904  028F                     	;# 
   905  0290                     	;# 
   906  0291                     	;# 
   907  0291                     	;# 
   908  0292                     	;# 
   909  0293                     	;# 
   910  0293                     	;# 
   911  0298                     	;# 
   912  0298                     	;# 
   913  0299                     	;# 
   914  029A                     	;# 
   915  029A                     	;# 
   916  029E                     	;# 
   917  030C                     	;# 
   918  030D                     	;# 
   919  030E                     	;# 
   920  030F                     	;# 
   921  0310                     	;# 
   922  038C                     	;# 
   923  038D                     	;# 
   924  038E                     	;# 
   925  038F                     	;# 
   926  0390                     	;# 
   927  0391                     	;# 
   928  0392                     	;# 
   929  0393                     	;# 
   930  0394                     	;# 
   931  0395                     	;# 
   932  0396                     	;# 
   933  0397                     	;# 
   934  0398                     	;# 
   935  0399                     	;# 
   936  039D                     	;# 
   937  039E                     	;# 
   938  039F                     	;# 
   939  0415                     	;# 
   940  0416                     	;# 
   941  0417                     	;# 
   942  041C                     	;# 
   943  041D                     	;# 
   944  041E                     	;# 
   945  0498                     	;# 
   946  0498                     	;# 
   947  0499                     	;# 
   948  049A                     	;# 
   949  049B                     	;# 
   950  049B                     	;# 
   951  049C                     	;# 
   952  049D                     	;# 
   953  049E                     	;# 
   954  049F                     	;# 
   955  0511                     	;# 
   956  0515                     	;# 
   957  0617                     	;# 
   958  0618                     	;# 
   959  0619                     	;# 
   960  0619                     	;# 
   961  061A                     	;# 
   962  061B                     	;# 
   963  061C                     	;# 
   964  061C                     	;# 
   965  0691                     	;# 
   966  0692                     	;# 
   967  0693                     	;# 
   968  0694                     	;# 
   969  0695                     	;# 
   970  0696                     	;# 
   971  0697                     	;# 
   972  0698                     	;# 
   973  0699                     	;# 
   974  069A                     	;# 
   975  069B                     	;# 
   976  069C                     	;# 
   977  069D                     	;# 
   978  069E                     	;# 
   979  069F                     	;# 
   980  0E0F                     	;# 
   981  0E10                     	;# 
   982  0E11                     	;# 
   983  0E12                     	;# 
   984  0E13                     	;# 
   985  0E14                     	;# 
   986  0E15                     	;# 
   987  0E17                     	;# 
   988  0E20                     	;# 
   989  0E21                     	;# 
   990  0E22                     	;# 
   991  0E24                     	;# 
   992  0E25                     	;# 
   993  0E28                     	;# 
   994  0E29                     	;# 
   995  0E2A                     	;# 
   996  0E2B                     	;# 
   997  0E90                     	;# 
   998  0E91                     	;# 
   999  0E92                     	;# 
  1000  0E93                     	;# 
  1001  0E94                     	;# 
  1002  0E95                     	;# 
  1003  0E96                     	;# 
  1004  0E97                     	;# 
  1005  0E98                     	;# 
  1006  0E99                     	;# 
  1007  0E9A                     	;# 
  1008  0E9B                     	;# 
  1009  0E9C                     	;# 
  1010  0E9D                     	;# 
  1011  0E9E                     	;# 
  1012  0E9F                     	;# 
  1013  0EA0                     	;# 
  1014  0EA1                     	;# 
  1015  0EA2                     	;# 
  1016  0EA3                     	;# 
  1017  0EA4                     	;# 
  1018  0EA5                     	;# 
  1019  0EA6                     	;# 
  1020  0EA7                     	;# 
  1021  0EA8                     	;# 
  1022  0EA9                     	;# 
  1023  0EAA                     	;# 
  1024  0EAB                     	;# 
  1025  0EAC                     	;# 
  1026  0EAD                     	;# 
  1027  0EAE                     	;# 
  1028  0EAF                     	;# 
  1029  0EB0                     	;# 
  1030  0EB1                     	;# 
  1031  0EB2                     	;# 
  1032  0F0F                     	;# 
  1033  0F10                     	;# 
  1034  0F11                     	;# 
  1035  0F12                     	;# 
  1036  0F13                     	;# 
  1037  0F14                     	;# 
  1038  0F15                     	;# 
  1039  0F16                     	;# 
  1040  0F17                     	;# 
  1041  0F18                     	;# 
  1042  0F19                     	;# 
  1043  0F1A                     	;# 
  1044  0F1B                     	;# 
  1045  0F1C                     	;# 
  1046  0F1D                     	;# 
  1047  0F1E                     	;# 
  1048  0F1F                     	;# 
  1049  0F20                     	;# 
  1050  0F21                     	;# 
  1051  0F22                     	;# 
  1052  0F23                     	;# 
  1053  0F24                     	;# 
  1054  0F25                     	;# 
  1055  0F26                     	;# 
  1056  0F27                     	;# 
  1057  0F28                     	;# 
  1058  0F29                     	;# 
  1059  0F2A                     	;# 
  1060  0F2B                     	;# 
  1061  0F2C                     	;# 
  1062  0F2D                     	;# 
  1063  0F2E                     	;# 
  1064  0F2F                     	;# 
  1065  0F30                     	;# 
  1066  0F31                     	;# 
  1067  0F32                     	;# 
  1068  0F33                     	;# 
  1069  0F34                     	;# 
  1070  0F35                     	;# 
  1071  0F36                     	;# 
  1072  0F37                     	;# 
  1073  0FE4                     	;# 
  1074  0FE5                     	;# 
  1075  0FE6                     	;# 
  1076  0FE7                     	;# 
  1077  0FE8                     	;# 
  1078  0FE9                     	;# 
  1079  0FEA                     	;# 
  1080  0FEB                     	;# 
  1081  0FED                     	;# 
  1082  0FEE                     	;# 
  1083  0FEF                     	;# 
  1084  0000                     	;# 
  1085  0001                     	;# 
  1086  0002                     	;# 
  1087  0003                     	;# 
  1088  0004                     	;# 
  1089  0005                     	;# 
  1090  0006                     	;# 
  1091  0007                     	;# 
  1092  0008                     	;# 
  1093  0009                     	;# 
  1094  000A                     	;# 
  1095  000B                     	;# 
  1096  000C                     	;# 
  1097  000D                     	;# 
  1098  000E                     	;# 
  1099  000F                     	;# 
  1100  0010                     	;# 
  1101  0011                     	;# 
  1102  0012                     	;# 
  1103  0013                     	;# 
  1104  0015                     	;# 
  1105  0016                     	;# 
  1106  0016                     	;# 
  1107  0017                     	;# 
  1108  0018                     	;# 
  1109  0019                     	;# 
  1110  001A                     	;# 
  1111  001B                     	;# 
  1112  001C                     	;# 
  1113  008C                     	;# 
  1114  008D                     	;# 
  1115  008E                     	;# 
  1116  008F                     	;# 
  1117  0090                     	;# 
  1118  0091                     	;# 
  1119  0092                     	;# 
  1120  0093                     	;# 
  1121  0095                     	;# 
  1122  0096                     	;# 
  1123  0097                     	;# 
  1124  0098                     	;# 
  1125  0099                     	;# 
  1126  009A                     	;# 
  1127  009B                     	;# 
  1128  009B                     	;# 
  1129  009C                     	;# 
  1130  009D                     	;# 
  1131  009E                     	;# 
  1132  009F                     	;# 
  1133  010C                     	;# 
  1134  010D                     	;# 
  1135  010E                     	;# 
  1136  010F                     	;# 
  1137  0110                     	;# 
  1138  0111                     	;# 
  1139  0112                     	;# 
  1140  0113                     	;# 
  1141  0114                     	;# 
  1142  0115                     	;# 
  1143  0116                     	;# 
  1144  0117                     	;# 
  1145  0118                     	;# 
  1146  0119                     	;# 
  1147  011A                     	;# 
  1148  011B                     	;# 
  1149  011B                     	;# 
  1150  011C                     	;# 
  1151  018C                     	;# 
  1152  018D                     	;# 
  1153  018E                     	;# 
  1154  018F                     	;# 
  1155  0190                     	;# 
  1156  0191                     	;# 
  1157  0191                     	;# 
  1158  0192                     	;# 
  1159  0193                     	;# 
  1160  0193                     	;# 
  1161  0194                     	;# 
  1162  0195                     	;# 
  1163  0196                     	;# 
  1164  0197                     	;# 
  1165  0199                     	;# 
  1166  0199                     	;# 
  1167  0199                     	;# 
  1168  019A                     	;# 
  1169  019A                     	;# 
  1170  019A                     	;# 
  1171  019B                     	;# 
  1172  019B                     	;# 
  1173  019B                     	;# 
  1174  019B                     	;# 
  1175  019B                     	;# 
  1176  019C                     	;# 
  1177  019C                     	;# 
  1178  019C                     	;# 
  1179  019D                     	;# 
  1180  019D                     	;# 
  1181  019D                     	;# 
  1182  019E                     	;# 
  1183  019E                     	;# 
  1184  019E                     	;# 
  1185  019F                     	;# 
  1186  019F                     	;# 
  1187  019F                     	;# 
  1188  019F                     	;# 
  1189  019F                     	;# 
  1190  020C                     	;# 
  1191  020D                     	;# 
  1192  020E                     	;# 
  1193  020F                     	;# 
  1194  0210                     	;# 
  1195  0211                     	;# 
  1196  0211                     	;# 
  1197  0212                     	;# 
  1198  0212                     	;# 
  1199  0213                     	;# 
  1200  0213                     	;# 
  1201  0214                     	;# 
  1202  0214                     	;# 
  1203  0215                     	;# 
  1204  0215                     	;# 
  1205  0215                     	;# 
  1206  0215                     	;# 
  1207  0216                     	;# 
  1208  0216                     	;# 
  1209  0217                     	;# 
  1210  0217                     	;# 
  1211  028C                     	;# 
  1212  028D                     	;# 
  1213  028E                     	;# 
  1214  028F                     	;# 
  1215  0290                     	;# 
  1216  0291                     	;# 
  1217  0291                     	;# 
  1218  0292                     	;# 
  1219  0293                     	;# 
  1220  0293                     	;# 
  1221  0298                     	;# 
  1222  0298                     	;# 
  1223  0299                     	;# 
  1224  029A                     	;# 
  1225  029A                     	;# 
  1226  029E                     	;# 
  1227  030C                     	;# 
  1228  030D                     	;# 
  1229  030E                     	;# 
  1230  030F                     	;# 
  1231  0310                     	;# 
  1232  038C                     	;# 
  1233  038D                     	;# 
  1234  038E                     	;# 
  1235  038F                     	;# 
  1236  0390                     	;# 
  1237  0391                     	;# 
  1238  0392                     	;# 
  1239  0393                     	;# 
  1240  0394                     	;# 
  1241  0395                     	;# 
  1242  0396                     	;# 
  1243  0397                     	;# 
  1244  0398                     	;# 
  1245  0399                     	;# 
  1246  039D                     	;# 
  1247  039E                     	;# 
  1248  039F                     	;# 
  1249  0415                     	;# 
  1250  0416                     	;# 
  1251  0417                     	;# 
  1252  041C                     	;# 
  1253  041D                     	;# 
  1254  041E                     	;# 
  1255  0498                     	;# 
  1256  0498                     	;# 
  1257  0499                     	;# 
  1258  049A                     	;# 
  1259  049B                     	;# 
  1260  049B                     	;# 
  1261  049C                     	;# 
  1262  049D                     	;# 
  1263  049E                     	;# 
  1264  049F                     	;# 
  1265  0511                     	;# 
  1266  0515                     	;# 
  1267  0617                     	;# 
  1268  0618                     	;# 
  1269  0619                     	;# 
  1270  0619                     	;# 
  1271  061A                     	;# 
  1272  061B                     	;# 
  1273  061C                     	;# 
  1274  061C                     	;# 
  1275  0691                     	;# 
  1276  0692                     	;# 
  1277  0693                     	;# 
  1278  0694                     	;# 
  1279  0695                     	;# 
  1280  0696                     	;# 
  1281  0697                     	;# 
  1282  0698                     	;# 
  1283  0699                     	;# 
  1284  069A                     	;# 
  1285  069B                     	;# 
  1286  069C                     	;# 
  1287  069D                     	;# 
  1288  069E                     	;# 
  1289  069F                     	;# 
  1290  0E0F                     	;# 
  1291  0E10                     	;# 
  1292  0E11                     	;# 
  1293  0E12                     	;# 
  1294  0E13                     	;# 
  1295  0E14                     	;# 
  1296  0E15                     	;# 
  1297  0E17                     	;# 
  1298  0E20                     	;# 
  1299  0E21                     	;# 
  1300  0E22                     	;# 
  1301  0E24                     	;# 
  1302  0E25                     	;# 
  1303  0E28                     	;# 
  1304  0E29                     	;# 
  1305  0E2A                     	;# 
  1306  0E2B                     	;# 
  1307  0E90                     	;# 
  1308  0E91                     	;# 
  1309  0E92                     	;# 
  1310  0E93                     	;# 
  1311  0E94                     	;# 
  1312  0E95                     	;# 
  1313  0E96                     	;# 
  1314  0E97                     	;# 
  1315  0E98                     	;# 
  1316  0E99                     	;# 
  1317  0E9A                     	;# 
  1318  0E9B                     	;# 
  1319  0E9C                     	;# 
  1320  0E9D                     	;# 
  1321  0E9E                     	;# 
  1322  0E9F                     	;# 
  1323  0EA0                     	;# 
  1324  0EA1                     	;# 
  1325  0EA2                     	;# 
  1326  0EA3                     	;# 
  1327  0EA4                     	;# 
  1328  0EA5                     	;# 
  1329  0EA6                     	;# 
  1330  0EA7                     	;# 
  1331  0EA8                     	;# 
  1332  0EA9                     	;# 
  1333  0EAA                     	;# 
  1334  0EAB                     	;# 
  1335  0EAC                     	;# 
  1336  0EAD                     	;# 
  1337  0EAE                     	;# 
  1338  0EAF                     	;# 
  1339  0EB0                     	;# 
  1340  0EB1                     	;# 
  1341  0EB2                     	;# 
  1342  0F0F                     	;# 
  1343  0F10                     	;# 
  1344  0F11                     	;# 
  1345  0F12                     	;# 
  1346  0F13                     	;# 
  1347  0F14                     	;# 
  1348  0F15                     	;# 
  1349  0F16                     	;# 
  1350  0F17                     	;# 
  1351  0F18                     	;# 
  1352  0F19                     	;# 
  1353  0F1A                     	;# 
  1354  0F1B                     	;# 
  1355  0F1C                     	;# 
  1356  0F1D                     	;# 
  1357  0F1E                     	;# 
  1358  0F1F                     	;# 
  1359  0F20                     	;# 
  1360  0F21                     	;# 
  1361  0F22                     	;# 
  1362  0F23                     	;# 
  1363  0F24                     	;# 
  1364  0F25                     	;# 
  1365  0F26                     	;# 
  1366  0F27                     	;# 
  1367  0F28                     	;# 
  1368  0F29                     	;# 
  1369  0F2A                     	;# 
  1370  0F2B                     	;# 
  1371  0F2C                     	;# 
  1372  0F2D                     	;# 
  1373  0F2E                     	;# 
  1374  0F2F                     	;# 
  1375  0F30                     	;# 
  1376  0F31                     	;# 
  1377  0F32                     	;# 
  1378  0F33                     	;# 
  1379  0F34                     	;# 
  1380  0F35                     	;# 
  1381  0F36                     	;# 
  1382  0F37                     	;# 
  1383  0FE4                     	;# 
  1384  0FE5                     	;# 
  1385  0FE6                     	;# 
  1386  0FE7                     	;# 
  1387  0FE8                     	;# 
  1388  0FE9                     	;# 
  1389  0FEA                     	;# 
  1390  0FEB                     	;# 
  1391  0FED                     	;# 
  1392  0FEE                     	;# 
  1393  0FEF                     	;# 
  1394  0000                     	;# 
  1395  0001                     	;# 
  1396  0002                     	;# 
  1397  0003                     	;# 
  1398  0004                     	;# 
  1399  0005                     	;# 
  1400  0006                     	;# 
  1401  0007                     	;# 
  1402  0008                     	;# 
  1403  0009                     	;# 
  1404  000A                     	;# 
  1405  000B                     	;# 
  1406  000C                     	;# 
  1407  000D                     	;# 
  1408  000E                     	;# 
  1409  000F                     	;# 
  1410  0010                     	;# 
  1411  0011                     	;# 
  1412  0012                     	;# 
  1413  0013                     	;# 
  1414  0015                     	;# 
  1415  0016                     	;# 
  1416  0016                     	;# 
  1417  0017                     	;# 
  1418  0018                     	;# 
  1419  0019                     	;# 
  1420  001A                     	;# 
  1421  001B                     	;# 
  1422  001C                     	;# 
  1423  008C                     	;# 
  1424  008D                     	;# 
  1425  008E                     	;# 
  1426  008F                     	;# 
  1427  0090                     	;# 
  1428  0091                     	;# 
  1429  0092                     	;# 
  1430  0093                     	;# 
  1431  0095                     	;# 
  1432  0096                     	;# 
  1433  0097                     	;# 
  1434  0098                     	;# 
  1435  0099                     	;# 
  1436  009A                     	;# 
  1437  009B                     	;# 
  1438  009B                     	;# 
  1439  009C                     	;# 
  1440  009D                     	;# 
  1441  009E                     	;# 
  1442  009F                     	;# 
  1443  010C                     	;# 
  1444  010D                     	;# 
  1445  010E                     	;# 
  1446  010F                     	;# 
  1447  0110                     	;# 
  1448  0111                     	;# 
  1449  0112                     	;# 
  1450  0113                     	;# 
  1451  0114                     	;# 
  1452  0115                     	;# 
  1453  0116                     	;# 
  1454  0117                     	;# 
  1455  0118                     	;# 
  1456  0119                     	;# 
  1457  011A                     	;# 
  1458  011B                     	;# 
  1459  011B                     	;# 
  1460  011C                     	;# 
  1461  018C                     	;# 
  1462  018D                     	;# 
  1463  018E                     	;# 
  1464  018F                     	;# 
  1465  0190                     	;# 
  1466  0191                     	;# 
  1467  0191                     	;# 
  1468  0192                     	;# 
  1469  0193                     	;# 
  1470  0193                     	;# 
  1471  0194                     	;# 
  1472  0195                     	;# 
  1473  0196                     	;# 
  1474  0197                     	;# 
  1475  0199                     	;# 
  1476  0199                     	;# 
  1477  0199                     	;# 
  1478  019A                     	;# 
  1479  019A                     	;# 
  1480  019A                     	;# 
  1481  019B                     	;# 
  1482  019B                     	;# 
  1483  019B                     	;# 
  1484  019B                     	;# 
  1485  019B                     	;# 
  1486  019C                     	;# 
  1487  019C                     	;# 
  1488  019C                     	;# 
  1489  019D                     	;# 
  1490  019D                     	;# 
  1491  019D                     	;# 
  1492  019E                     	;# 
  1493  019E                     	;# 
  1494  019E                     	;# 
  1495  019F                     	;# 
  1496  019F                     	;# 
  1497  019F                     	;# 
  1498  019F                     	;# 
  1499  019F                     	;# 
  1500  020C                     	;# 
  1501  020D                     	;# 
  1502  020E                     	;# 
  1503  020F                     	;# 
  1504  0210                     	;# 
  1505  0211                     	;# 
  1506  0211                     	;# 
  1507  0212                     	;# 
  1508  0212                     	;# 
  1509  0213                     	;# 
  1510  0213                     	;# 
  1511  0214                     	;# 
  1512  0214                     	;# 
  1513  0215                     	;# 
  1514  0215                     	;# 
  1515  0215                     	;# 
  1516  0215                     	;# 
  1517  0216                     	;# 
  1518  0216                     	;# 
  1519  0217                     	;# 
  1520  0217                     	;# 
  1521  028C                     	;# 
  1522  028D                     	;# 
  1523  028E                     	;# 
  1524  028F                     	;# 
  1525  0290                     	;# 
  1526  0291                     	;# 
  1527  0291                     	;# 
  1528  0292                     	;# 
  1529  0293                     	;# 
  1530  0293                     	;# 
  1531  0298                     	;# 
  1532  0298                     	;# 
  1533  0299                     	;# 
  1534  029A                     	;# 
  1535  029A                     	;# 
  1536  029E                     	;# 
  1537  030C                     	;# 
  1538  030D                     	;# 
  1539  030E                     	;# 
  1540  030F                     	;# 
  1541  0310                     	;# 
  1542  038C                     	;# 
  1543  038D                     	;# 
  1544  038E                     	;# 
  1545  038F                     	;# 
  1546  0390                     	;# 
  1547  0391                     	;# 
  1548  0392                     	;# 
  1549  0393                     	;# 
  1550  0394                     	;# 
  1551  0395                     	;# 
  1552  0396                     	;# 
  1553  0397                     	;# 
  1554  0398                     	;# 
  1555  0399                     	;# 
  1556  039D                     	;# 
  1557  039E                     	;# 
  1558  039F                     	;# 
  1559  0415                     	;# 
  1560  0416                     	;# 
  1561  0417                     	;# 
  1562  041C                     	;# 
  1563  041D                     	;# 
  1564  041E                     	;# 
  1565  0498                     	;# 
  1566  0498                     	;# 
  1567  0499                     	;# 
  1568  049A                     	;# 
  1569  049B                     	;# 
  1570  049B                     	;# 
  1571  049C                     	;# 
  1572  049D                     	;# 
  1573  049E                     	;# 
  1574  049F                     	;# 
  1575  0511                     	;# 
  1576  0515                     	;# 
  1577  0617                     	;# 
  1578  0618                     	;# 
  1579  0619                     	;# 
  1580  0619                     	;# 
  1581  061A                     	;# 
  1582  061B                     	;# 
  1583  061C                     	;# 
  1584  061C                     	;# 
  1585  0691                     	;# 
  1586  0692                     	;# 
  1587  0693                     	;# 
  1588  0694                     	;# 
  1589  0695                     	;# 
  1590  0696                     	;# 
  1591  0697                     	;# 
  1592  0698                     	;# 
  1593  0699                     	;# 
  1594  069A                     	;# 
  1595  069B                     	;# 
  1596  069C                     	;# 
  1597  069D                     	;# 
  1598  069E                     	;# 
  1599  069F                     	;# 
  1600  0E0F                     	;# 
  1601  0E10                     	;# 
  1602  0E11                     	;# 
  1603  0E12                     	;# 
  1604  0E13                     	;# 
  1605  0E14                     	;# 
  1606  0E15                     	;# 
  1607  0E17                     	;# 
  1608  0E20                     	;# 
  1609  0E21                     	;# 
  1610  0E22                     	;# 
  1611  0E24                     	;# 
  1612  0E25                     	;# 
  1613  0E28                     	;# 
  1614  0E29                     	;# 
  1615  0E2A                     	;# 
  1616  0E2B                     	;# 
  1617  0E90                     	;# 
  1618  0E91                     	;# 
  1619  0E92                     	;# 
  1620  0E93                     	;# 
  1621  0E94                     	;# 
  1622  0E95                     	;# 
  1623  0E96                     	;# 
  1624  0E97                     	;# 
  1625  0E98                     	;# 
  1626  0E99                     	;# 
  1627  0E9A                     	;# 
  1628  0E9B                     	;# 
  1629  0E9C                     	;# 
  1630  0E9D                     	;# 
  1631  0E9E                     	;# 
  1632  0E9F                     	;# 
  1633  0EA0                     	;# 
  1634  0EA1                     	;# 
  1635  0EA2                     	;# 
  1636  0EA3                     	;# 
  1637  0EA4                     	;# 
  1638  0EA5                     	;# 
  1639  0EA6                     	;# 
  1640  0EA7                     	;# 
  1641  0EA8                     	;# 
  1642  0EA9                     	;# 
  1643  0EAA                     	;# 
  1644  0EAB                     	;# 
  1645  0EAC                     	;# 
  1646  0EAD                     	;# 
  1647  0EAE                     	;# 
  1648  0EAF                     	;# 
  1649  0EB0                     	;# 
  1650  0EB1                     	;# 
  1651  0EB2                     	;# 
  1652  0F0F                     	;# 
  1653  0F10                     	;# 
  1654  0F11                     	;# 
  1655  0F12                     	;# 
  1656  0F13                     	;# 
  1657  0F14                     	;# 
  1658  0F15                     	;# 
  1659  0F16                     	;# 
  1660  0F17                     	;# 
  1661  0F18                     	;# 
  1662  0F19                     	;# 
  1663  0F1A                     	;# 
  1664  0F1B                     	;# 
  1665  0F1C                     	;# 
  1666  0F1D                     	;# 
  1667  0F1E                     	;# 
  1668  0F1F                     	;# 
  1669  0F20                     	;# 
  1670  0F21                     	;# 
  1671  0F22                     	;# 
  1672  0F23                     	;# 
  1673  0F24                     	;# 
  1674  0F25                     	;# 
  1675  0F26                     	;# 
  1676  0F27                     	;# 
  1677  0F28                     	;# 
  1678  0F29                     	;# 
  1679  0F2A                     	;# 
  1680  0F2B                     	;# 
  1681  0F2C                     	;# 
  1682  0F2D                     	;# 
  1683  0F2E                     	;# 
  1684  0F2F                     	;# 
  1685  0F30                     	;# 
  1686  0F31                     	;# 
  1687  0F32                     	;# 
  1688  0F33                     	;# 
  1689  0F34                     	;# 
  1690  0F35                     	;# 
  1691  0F36                     	;# 
  1692  0F37                     	;# 
  1693  0FE4                     	;# 
  1694  0FE5                     	;# 
  1695  0FE6                     	;# 
  1696  0FE7                     	;# 
  1697  0FE8                     	;# 
  1698  0FE9                     	;# 
  1699  0FEA                     	;# 
  1700  0FEB                     	;# 
  1701  0FED                     	;# 
  1702  0FEE                     	;# 
  1703  0FEF                     	;# 
  1704  0000                     	;# 
  1705  0001                     	;# 
  1706  0002                     	;# 
  1707  0003                     	;# 
  1708  0004                     	;# 
  1709  0005                     	;# 
  1710  0006                     	;# 
  1711  0007                     	;# 
  1712  0008                     	;# 
  1713  0009                     	;# 
  1714  000A                     	;# 
  1715  000B                     	;# 
  1716  000C                     	;# 
  1717  000D                     	;# 
  1718  000E                     	;# 
  1719  000F                     	;# 
  1720  0010                     	;# 
  1721  0011                     	;# 
  1722  0012                     	;# 
  1723  0013                     	;# 
  1724  0015                     	;# 
  1725  0016                     	;# 
  1726  0016                     	;# 
  1727  0017                     	;# 
  1728  0018                     	;# 
  1729  0019                     	;# 
  1730  001A                     	;# 
  1731  001B                     	;# 
  1732  001C                     	;# 
  1733  008C                     	;# 
  1734  008D                     	;# 
  1735  008E                     	;# 
  1736  008F                     	;# 
  1737  0090                     	;# 
  1738  0091                     	;# 
  1739  0092                     	;# 
  1740  0093                     	;# 
  1741  0095                     	;# 
  1742  0096                     	;# 
  1743  0097                     	;# 
  1744  0098                     	;# 
  1745  0099                     	;# 
  1746  009A                     	;# 
  1747  009B                     	;# 
  1748  009B                     	;# 
  1749  009C                     	;# 
  1750  009D                     	;# 
  1751  009E                     	;# 
  1752  009F                     	;# 
  1753  010C                     	;# 
  1754  010D                     	;# 
  1755  010E                     	;# 
  1756  010F                     	;# 
  1757  0110                     	;# 
  1758  0111                     	;# 
  1759  0112                     	;# 
  1760  0113                     	;# 
  1761  0114                     	;# 
  1762  0115                     	;# 
  1763  0116                     	;# 
  1764  0117                     	;# 
  1765  0118                     	;# 
  1766  0119                     	;# 
  1767  011A                     	;# 
  1768  011B                     	;# 
  1769  011B                     	;# 
  1770  011C                     	;# 
  1771  018C                     	;# 
  1772  018D                     	;# 
  1773  018E                     	;# 
  1774  018F                     	;# 
  1775  0190                     	;# 
  1776  0191                     	;# 
  1777  0191                     	;# 
  1778  0192                     	;# 
  1779  0193                     	;# 
  1780  0193                     	;# 
  1781  0194                     	;# 
  1782  0195                     	;# 
  1783  0196                     	;# 
  1784  0197                     	;# 
  1785  0199                     	;# 
  1786  0199                     	;# 
  1787  0199                     	;# 
  1788  019A                     	;# 
  1789  019A                     	;# 
  1790  019A                     	;# 
  1791  019B                     	;# 
  1792  019B                     	;# 
  1793  019B                     	;# 
  1794  019B                     	;# 
  1795  019B                     	;# 
  1796  019C                     	;# 
  1797  019C                     	;# 
  1798  019C                     	;# 
  1799  019D                     	;# 
  1800  019D                     	;# 
  1801  019D                     	;# 
  1802  019E                     	;# 
  1803  019E                     	;# 
  1804  019E                     	;# 
  1805  019F                     	;# 
  1806  019F                     	;# 
  1807  019F                     	;# 
  1808  019F                     	;# 
  1809  019F                     	;# 
  1810  020C                     	;# 
  1811  020D                     	;# 
  1812  020E                     	;# 
  1813  020F                     	;# 
  1814  0210                     	;# 
  1815  0211                     	;# 
  1816  0211                     	;# 
  1817  0212                     	;# 
  1818  0212                     	;# 
  1819  0213                     	;# 
  1820  0213                     	;# 
  1821  0214                     	;# 
  1822  0214                     	;# 
  1823  0215                     	;# 
  1824  0215                     	;# 
  1825  0215                     	;# 
  1826  0215                     	;# 
  1827  0216                     	;# 
  1828  0216                     	;# 
  1829  0217                     	;# 
  1830  0217                     	;# 
  1831  028C                     	;# 
  1832  028D                     	;# 
  1833  028E                     	;# 
  1834  028F                     	;# 
  1835  0290                     	;# 
  1836  0291                     	;# 
  1837  0291                     	;# 
  1838  0292                     	;# 
  1839  0293                     	;# 
  1840  0293                     	;# 
  1841  0298                     	;# 
  1842  0298                     	;# 
  1843  0299                     	;# 
  1844  029A                     	;# 
  1845  029A                     	;# 
  1846  029E                     	;# 
  1847  030C                     	;# 
  1848  030D                     	;# 
  1849  030E                     	;# 
  1850  030F                     	;# 
  1851  0310                     	;# 
  1852  038C                     	;# 
  1853  038D                     	;# 
  1854  038E                     	;# 
  1855  038F                     	;# 
  1856  0390                     	;# 
  1857  0391                     	;# 
  1858  0392                     	;# 
  1859  0393                     	;# 
  1860  0394                     	;# 
  1861  0395                     	;# 
  1862  0396                     	;# 
  1863  0397                     	;# 
  1864  0398                     	;# 
  1865  0399                     	;# 
  1866  039D                     	;# 
  1867  039E                     	;# 
  1868  039F                     	;# 
  1869  0415                     	;# 
  1870  0416                     	;# 
  1871  0417                     	;# 
  1872  041C                     	;# 
  1873  041D                     	;# 
  1874  041E                     	;# 
  1875  0498                     	;# 
  1876  0498                     	;# 
  1877  0499                     	;# 
  1878  049A                     	;# 
  1879  049B                     	;# 
  1880  049B                     	;# 
  1881  049C                     	;# 
  1882  049D                     	;# 
  1883  049E                     	;# 
  1884  049F                     	;# 
  1885  0511                     	;# 
  1886  0515                     	;# 
  1887  0617                     	;# 
  1888  0618                     	;# 
  1889  0619                     	;# 
  1890  0619                     	;# 
  1891  061A                     	;# 
  1892  061B                     	;# 
  1893  061C                     	;# 
  1894  061C                     	;# 
  1895  0691                     	;# 
  1896  0692                     	;# 
  1897  0693                     	;# 
  1898  0694                     	;# 
  1899  0695                     	;# 
  1900  0696                     	;# 
  1901  0697                     	;# 
  1902  0698                     	;# 
  1903  0699                     	;# 
  1904  069A                     	;# 
  1905  069B                     	;# 
  1906  069C                     	;# 
  1907  069D                     	;# 
  1908  069E                     	;# 
  1909  069F                     	;# 
  1910  0E0F                     	;# 
  1911  0E10                     	;# 
  1912  0E11                     	;# 
  1913  0E12                     	;# 
  1914  0E13                     	;# 
  1915  0E14                     	;# 
  1916  0E15                     	;# 
  1917  0E17                     	;# 
  1918  0E20                     	;# 
  1919  0E21                     	;# 
  1920  0E22                     	;# 
  1921  0E24                     	;# 
  1922  0E25                     	;# 
  1923  0E28                     	;# 
  1924  0E29                     	;# 
  1925  0E2A                     	;# 
  1926  0E2B                     	;# 
  1927  0E90                     	;# 
  1928  0E91                     	;# 
  1929  0E92                     	;# 
  1930  0E93                     	;# 
  1931  0E94                     	;# 
  1932  0E95                     	;# 
  1933  0E96                     	;# 
  1934  0E97                     	;# 
  1935  0E98                     	;# 
  1936  0E99                     	;# 
  1937  0E9A                     	;# 
  1938  0E9B                     	;# 
  1939  0E9C                     	;# 
  1940  0E9D                     	;# 
  1941  0E9E                     	;# 
  1942  0E9F                     	;# 
  1943  0EA0                     	;# 
  1944  0EA1                     	;# 
  1945  0EA2                     	;# 
  1946  0EA3                     	;# 
  1947  0EA4                     	;# 
  1948  0EA5                     	;# 
  1949  0EA6                     	;# 
  1950  0EA7                     	;# 
  1951  0EA8                     	;# 
  1952  0EA9                     	;# 
  1953  0EAA                     	;# 
  1954  0EAB                     	;# 
  1955  0EAC                     	;# 
  1956  0EAD                     	;# 
  1957  0EAE                     	;# 
  1958  0EAF                     	;# 
  1959  0EB0                     	;# 
  1960  0EB1                     	;# 
  1961  0EB2                     	;# 
  1962  0F0F                     	;# 
  1963  0F10                     	;# 
  1964  0F11                     	;# 
  1965  0F12                     	;# 
  1966  0F13                     	;# 
  1967  0F14                     	;# 
  1968  0F15                     	;# 
  1969  0F16                     	;# 
  1970  0F17                     	;# 
  1971  0F18                     	;# 
  1972  0F19                     	;# 
  1973  0F1A                     	;# 
  1974  0F1B                     	;# 
  1975  0F1C                     	;# 
  1976  0F1D                     	;# 
  1977  0F1E                     	;# 
  1978  0F1F                     	;# 
  1979  0F20                     	;# 
  1980  0F21                     	;# 
  1981  0F22                     	;# 
  1982  0F23                     	;# 
  1983  0F24                     	;# 
  1984  0F25                     	;# 
  1985  0F26                     	;# 
  1986  0F27                     	;# 
  1987  0F28                     	;# 
  1988  0F29                     	;# 
  1989  0F2A                     	;# 
  1990  0F2B                     	;# 
  1991  0F2C                     	;# 
  1992  0F2D                     	;# 
  1993  0F2E                     	;# 
  1994  0F2F                     	;# 
  1995  0F30                     	;# 
  1996  0F31                     	;# 
  1997  0F32                     	;# 
  1998  0F33                     	;# 
  1999  0F34                     	;# 
  2000  0F35                     	;# 
  2001  0F36                     	;# 
  2002  0F37                     	;# 
  2003  0FE4                     	;# 
  2004  0FE5                     	;# 
  2005  0FE6                     	;# 
  2006  0FE7                     	;# 
  2007  0FE8                     	;# 
  2008  0FE9                     	;# 
  2009  0FEA                     	;# 
  2010  0FEB                     	;# 
  2011  0FED                     	;# 
  2012  0FEE                     	;# 
  2013  0FEF                     	;_messageBuffer
  2014                           
  2015                           	psect	idataBANK2
  2016  1937                     __pidataBANK2:	
  2017                           
  2018                           ;initializer for stoa@F1152
  2019  1937  3428               	retlw	40
  2020  1938  346E               	retlw	110
  2021  1939  3475               	retlw	117
  2022  193A  346C               	retlw	108
  2023  193B  346C               	retlw	108
  2024  193C  3429               	retlw	41
  2025  193D  3400               	retlw	0
  2026                           
  2027                           	psect	stringtext1
  2028  213A                     __pstringtext1:	
  2029  213A                     _OCD_threshold_setting:	
  2030  213A  3411               	retlw	17
  2031  213B  3400               	retlw	0
  2032  213C  3416               	retlw	22
  2033  213D  3400               	retlw	0
  2034  213E  341C               	retlw	28
  2035  213F  3400               	retlw	0
  2036  2140  3421               	retlw	33
  2037  2141  3400               	retlw	0
  2038  2142  3427               	retlw	39
  2039  2143  3400               	retlw	0
  2040  2144  342C               	retlw	44
  2041  2145  3400               	retlw	0
  2042  2146  3432               	retlw	50
  2043  2147  3400               	retlw	0
  2044  2148  3438               	retlw	56
  2045  2149  3400               	retlw	0
  2046  214A  343D               	retlw	61
  2047  214B  3400               	retlw	0
  2048  214C  3443               	retlw	67
  2049  214D  3400               	retlw	0
  2050  214E  3448               	retlw	72
  2051  214F  3400               	retlw	0
  2052  2150  344E               	retlw	78
  2053  2151  3400               	retlw	0
  2054  2152  3453               	retlw	83
  2055  2153  3400               	retlw	0
  2056  2154  3459               	retlw	89
  2057  2155  3400               	retlw	0
  2058  2156  345E               	retlw	94
  2059  2157  3400               	retlw	0
  2060  2158  3464               	retlw	100
  2061  2159  3400               	retlw	0
  2062  215A                     __end_of_OCD_threshold_setting:	
  2063                           
  2064                           	psect	stringtext2
  2065  215A                     __pstringtext2:	
  2066  215A                     _OCD_delay_setting:	
  2067  215A  3408               	retlw	8
  2068  215B  3400               	retlw	0
  2069  215C  3414               	retlw	20
  2070  215D  3400               	retlw	0
  2071  215E  3428               	retlw	40
  2072  215F  3400               	retlw	0
  2073  2160  3450               	retlw	80
  2074  2161  3400               	retlw	0
  2075  2162  34A0               	retlw	160
  2076  2163  3400               	retlw	0
  2077  2164  3440               	retlw	64
  2078  2165  3401               	retlw	1
  2079  2166  3480               	retlw	128
  2080  2167  3402               	retlw	2
  2081  2168  3400               	retlw	0
  2082  2169  3405               	retlw	5
  2083  216A                     __end_of_OCD_delay_setting:	
  2084                           
  2085                           	psect	stringtext3
  2086  216A                     __pstringtext3:	
  2087  216A                     _SCD_threshold_setting:	
  2088  216A  342C               	retlw	44
  2089  216B  3400               	retlw	0
  2090  216C  3443               	retlw	67
  2091  216D  3400               	retlw	0
  2092  216E  3459               	retlw	89
  2093  216F  3400               	retlw	0
  2094  2170  346F               	retlw	111
  2095  2171  3400               	retlw	0
  2096  2172  3485               	retlw	133
  2097  2173  3400               	retlw	0
  2098  2174  349B               	retlw	155
  2099  2175  3400               	retlw	0
  2100  2176  34B2               	retlw	178
  2101  2177  3400               	retlw	0
  2102  2178  34C8               	retlw	200
  2103  2179  3400               	retlw	0
  2104  217A                     __end_of_SCD_threshold_setting:	
  2105                           
  2106                           	psect	stringtext4
  2107  217A                     __pstringtext4:	
  2108  217A                     _OV_delay_setting:	
  2109  217A  3401               	retlw	1
  2110  217B  3400               	retlw	0
  2111  217C  3402               	retlw	2
  2112  217D  3400               	retlw	0
  2113  217E  3404               	retlw	4
  2114  217F  3400               	retlw	0
  2115  2180  3408               	retlw	8
  2116  2181  3400               	retlw	0
  2117  2182                     __end_of_OV_delay_setting:	
  2118                           
  2119                           	psect	stringtext5
  2120  2182                     __pstringtext5:	
  2121  2182                     _UV_delay_setting:	
  2122  2182  3401               	retlw	1
  2123  2183  3400               	retlw	0
  2124  2184  3404               	retlw	4
  2125  2185  3400               	retlw	0
  2126  2186  3408               	retlw	8
  2127  2187  3400               	retlw	0
  2128  2188  3410               	retlw	16
  2129  2189  3400               	retlw	0
  2130  218A                     __end_of_UV_delay_setting:	
  2131                           
  2132                           	psect	stringtext6
  2133  218A                     __pstringtext6:	
  2134  218A                     _SCD_delay_setting:	
  2135  218A  3446               	retlw	70
  2136  218B  3400               	retlw	0
  2137  218C  3464               	retlw	100
  2138  218D  3400               	retlw	0
  2139  218E  34C8               	retlw	200
  2140  218F  3400               	retlw	0
  2141  2190  3490               	retlw	144
  2142  2191  3401               	retlw	1
  2143  2192                     __end_of_SCD_delay_setting:	
  2144                           
  2145                           	psect	stringtext7
  2146  2000                     __pstringtext7:	
  2147  2000                     _ATmega328_address:	
  2148  2000  3402               	retlw	2
  2149  2001  3400               	retlw	0
  2150  2002                     __end_of_ATmega328_address:	
  2151  0016                     _TMR1	set	22
  2152  000B                     _INTCONbits	set	11
  2153  0018                     _T1CONbits	set	24
  2154  0011                     _PIR1bits	set	17
  2155  0090                     _TRISEbits	set	144
  2156  008C                     _TRISAbits	set	140
  2157  008E                     _TRISCbits	set	142
  2158  008D                     _TRISBbits	set	141
  2159  0091                     _PIE1bits	set	145
  2160  0476                     _TRISC6	set	1142
  2161  0477                     _TRISC7	set	1143
  2162  04CF                     _SPLLEN	set	1231
  2163  04CE                     _IRCF3	set	1230
  2164  04CD                     _IRCF2	set	1229
  2165  04CC                     _IRCF1	set	1228
  2166  04CB                     _IRCF0	set	1227
  2167  04C9                     _SCS1	set	1225
  2168  04C8                     _SCS0	set	1224
  2169  0110                     _LATEbits	set	272
  2170  010C                     _LATAbits	set	268
  2171  019A                     _TX1REG	set	410
  2172  0199                     _RC1REG	set	409
  2173  019D                     _RC1STAbits	set	413
  2174  019B                     _SPBRG	set	411
  2175  018E                     _ANSELCbits	set	398
  2176  018D                     _ANSELBbits	set	397
  2177  0CF5                     _TXEN	set	3317
  2178  0CEC                     _CREN	set	3308
  2179  0CEF                     _SPEN	set	3311
  2180  0CF4                     _SYNC	set	3316
  2181  0CF2                     _BRGH	set	3314
  2182  0216                     _SSPCON2bits	set	534
  2183  0211                     _SSPBUF	set	529
  2184  0212                     _SSPADD	set	530
  2185  0215                     _SSPCONbits	set	533
  2186  0E24                     _RXPPSbits	set	3620
  2187  0E20                     _SSPCLKPPSbits	set	3616
  2188  0E21                     _SSPDATPPSbits	set	3617
  2189  0E0F                     _PPSLOCKbits	set	3599
  2190  0E0F                     _PPSLOCK	set	3599
  2191  0E9A                     _RB2PPSbits	set	3738
  2192  0EA5                     _RC5PPSbits	set	3749
  2193  0EA4                     _RC4PPSbits	set	3748
  2194  2002                     STR_4:	
  2195  2002  3441               	retlw	65	;'A'
  2196  2003  3474               	retlw	116	;'t'
  2197  2004  3474               	retlw	116	;'t'
  2198  2005  3465               	retlw	101	;'e'
  2199  2006  346D               	retlw	109	;'m'
  2200  2007  3470               	retlw	112	;'p'
  2201  2008  3474               	retlw	116	;'t'
  2202  2009  3420               	retlw	32	;' '
  2203  200A  3474               	retlw	116	;'t'
  2204  200B  346F               	retlw	111	;'o'
  2205  200C  3420               	retlw	32	;' '
  2206  200D  3473               	retlw	115	;'s'
  2207  200E  3465               	retlw	101	;'e'
  2208  200F  3474               	retlw	116	;'t'
  2209  2010  3420               	retlw	32	;' '
  2210  2011  3469               	retlw	105	;'i'
  2211  2012  346E               	retlw	110	;'n'
  2212  2013  3469               	retlw	105	;'i'
  2213  2014  3474               	retlw	116	;'t'
  2214  2015  3469               	retlw	105	;'i'
  2215  2016  3461               	retlw	97	;'a'
  2216  2017  346C               	retlw	108	;'l'
  2217  2018  3420               	retlw	32	;' '
  2218  2019  3473               	retlw	115	;'s'
  2219  201A  3479               	retlw	121	;'y'
  2220  201B  3473               	retlw	115	;'s'
  2221  201C  3474               	retlw	116	;'t'
  2222  201D  3465               	retlw	101	;'e'
  2223  201E  346D               	retlw	109	;'m'
  2224  201F  3420               	retlw	32	;' '
  2225  2020  3470               	retlw	112	;'p'
  2226  2021  3461               	retlw	97	;'a'
  2227  2022  3472               	retlw	114	;'r'
  2228  2023  3461               	retlw	97	;'a'
  2229  2024  346D               	retlw	109	;'m'
  2230  2025  3465               	retlw	101	;'e'
  2231  2026  3474               	retlw	116	;'t'
  2232  2027  3465               	retlw	101	;'e'
  2233  2028  3472               	retlw	114	;'r'
  2234  2029  3473               	retlw	115	;'s'
  2235  202A  3420               	retlw	32	;' '
  2236  202B  3474               	retlw	116	;'t'
  2237  202C  346F               	retlw	111	;'o'
  2238  202D  3420               	retlw	32	;' '
  2239  202E  3441               	retlw	65	;'A'
  2240  202F  3446               	retlw	70	;'F'
  2241  2030  3445               	retlw	69	;'E'
  2242  2031  342E               	retlw	46	;'.'
  2243  2032  342E               	retlw	46	;'.'
  2244  2033  342E               	retlw	46	;'.'
  2245  2034  340A               	retlw	10
  2246  2035  340D               	retlw	13
  2247  2036  3400               	retlw	0
  2248                           
  2249                           	psect	stringtext8
  2250  2037                     __pstringtext8:	
  2251  2037                     STR_2:	
  2252  2037  3443               	retlw	67	;'C'
  2253  2038  346F               	retlw	111	;'o'
  2254  2039  346D               	retlw	109	;'m'
  2255  203A  346D               	retlw	109	;'m'
  2256  203B  3475               	retlw	117	;'u'
  2257  203C  346E               	retlw	110	;'n'
  2258  203D  3469               	retlw	105	;'i'
  2259  203E  3463               	retlw	99	;'c'
  2260  203F  3461               	retlw	97	;'a'
  2261  2040  3474               	retlw	116	;'t'
  2262  2041  3469               	retlw	105	;'i'
  2263  2042  346F               	retlw	111	;'o'
  2264  2043  346E               	retlw	110	;'n'
  2265  2044  3420               	retlw	32	;' '
  2266  2045  3477               	retlw	119	;'w'
  2267  2046  3469               	retlw	105	;'i'
  2268  2047  3474               	retlw	116	;'t'
  2269  2048  3468               	retlw	104	;'h'
  2270  2049  3420               	retlw	32	;' '
  2271  204A  3442               	retlw	66	;'B'
  2272  204B  3451               	retlw	81	;'Q'
  2273  204C  3437               	retlw	55	;'7'
  2274  204D  3436               	retlw	54	;'6'
  2275  204E  3439               	retlw	57	;'9'
  2276  204F  3432               	retlw	50	;'2'
  2277  2050  3430               	retlw	48	;'0'
  2278  2051  3420               	retlw	32	;' '
  2279  2052  3441               	retlw	65	;'A'
  2280  2053  3446               	retlw	70	;'F'
  2281  2054  3445               	retlw	69	;'E'
  2282  2055  3420               	retlw	32	;' '
  2283  2056  3465               	retlw	101	;'e'
  2284  2057  3473               	retlw	115	;'s'
  2285  2058  3474               	retlw	116	;'t'
  2286  2059  3461               	retlw	97	;'a'
  2287  205A  3462               	retlw	98	;'b'
  2288  205B  346C               	retlw	108	;'l'
  2289  205C  3469               	retlw	105	;'i'
  2290  205D  3473               	retlw	115	;'s'
  2291  205E  3468               	retlw	104	;'h'
  2292  205F  3465               	retlw	101	;'e'
  2293  2060  3464               	retlw	100	;'d'
  2294  2061  3421               	retlw	33	;'!'
  2295  2062  340A               	retlw	10
  2296  2063  340D               	retlw	13
  2297  2064  3400               	retlw	0
  2298                           
  2299                           	psect	stringtext9
  2300  2065                     __pstringtext9:	
  2301  2065                     STR_7:	
  2302  2065  344E               	retlw	78	;'N'
  2303  2066  346F               	retlw	111	;'o'
  2304  2067  3477               	retlw	119	;'w'
  2305  2068  3420               	retlw	32	;' '
  2306  2069  3472               	retlw	114	;'r'
  2307  206A  3465               	retlw	101	;'e'
  2308  206B  3461               	retlw	97	;'a'
  2309  206C  3464               	retlw	100	;'d'
  2310  206D  3469               	retlw	105	;'i'
  2311  206E  346E               	retlw	110	;'n'
  2312  206F  3467               	retlw	103	;'g'
  2313  2070  3420               	retlw	32	;' '
  2314  2071  3441               	retlw	65	;'A'
  2315  2072  3446               	retlw	70	;'F'
  2316  2073  3445               	retlw	69	;'E'
  2317  2074  3420               	retlw	32	;' '
  2318  2075  3464               	retlw	100	;'d'
  2319  2076  3461               	retlw	97	;'a'
  2320  2077  3474               	retlw	116	;'t'
  2321  2078  3461               	retlw	97	;'a'
  2322  2079  3420               	retlw	32	;' '
  2323  207A  3461               	retlw	97	;'a'
  2324  207B  3474               	retlw	116	;'t'
  2325  207C  3420               	retlw	32	;' '
  2326  207D  3472               	retlw	114	;'r'
  2327  207E  3465               	retlw	101	;'e'
  2328  207F  3467               	retlw	103	;'g'
  2329  2080  3475               	retlw	117	;'u'
  2330  2081  346C               	retlw	108	;'l'
  2331  2082  3461               	retlw	97	;'a'
  2332  2083  3472               	retlw	114	;'r'
  2333  2084  3420               	retlw	32	;' '
  2334  2085  3469               	retlw	105	;'i'
  2335  2086  346E               	retlw	110	;'n'
  2336  2087  3474               	retlw	116	;'t'
  2337  2088  3465               	retlw	101	;'e'
  2338  2089  3472               	retlw	114	;'r'
  2339  208A  3476               	retlw	118	;'v'
  2340  208B  3461               	retlw	97	;'a'
  2341  208C  346C               	retlw	108	;'l'
  2342  208D  3473               	retlw	115	;'s'
  2343  208E  342E               	retlw	46	;'.'
  2344  208F  340A               	retlw	10
  2345  2090  340D               	retlw	13
  2346  2091  3400               	retlw	0
  2347                           
  2348                           	psect	stringtext10
  2349  2092                     __pstringtext10:	
  2350  2092                     STR_5:	
  2351  2092  3453               	retlw	83	;'S'
  2352  2093  3465               	retlw	101	;'e'
  2353  2094  3474               	retlw	116	;'t'
  2354  2095  3420               	retlw	32	;' '
  2355  2096  3473               	retlw	115	;'s'
  2356  2097  3468               	retlw	104	;'h'
  2357  2098  346F               	retlw	111	;'o'
  2358  2099  3472               	retlw	114	;'r'
  2359  209A  3474               	retlw	116	;'t'
  2360  209B  3420               	retlw	32	;' '
  2361  209C  3463               	retlw	99	;'c'
  2362  209D  3469               	retlw	105	;'i'
  2363  209E  3472               	retlw	114	;'r'
  2364  209F  3463               	retlw	99	;'c'
  2365  20A0  3475               	retlw	117	;'u'
  2366  20A1  3469               	retlw	105	;'i'
  2367  20A2  3474               	retlw	116	;'t'
  2368  20A3  3420               	retlw	32	;' '
  2369  20A4  3463               	retlw	99	;'c'
  2370  20A5  3475               	retlw	117	;'u'
  2371  20A6  3472               	retlw	114	;'r'
  2372  20A7  3472               	retlw	114	;'r'
  2373  20A8  3465               	retlw	101	;'e'
  2374  20A9  346E               	retlw	110	;'n'
  2375  20AA  3474               	retlw	116	;'t'
  2376  20AB  3420               	retlw	32	;' '
  2377  20AC  3466               	retlw	102	;'f'
  2378  20AD  346F               	retlw	111	;'o'
  2379  20AE  3472               	retlw	114	;'r'
  2380  20AF  3420               	retlw	32	;' '
  2381  20B0  3441               	retlw	65	;'A'
  2382  20B1  3446               	retlw	70	;'F'
  2383  20B2  3445               	retlw	69	;'E'
  2384  20B3  343A               	retlw	58	;':'
  2385  20B4  3420               	retlw	32	;' '
  2386  20B5  3425               	retlw	37	;'%'
  2387  20B6  346C               	retlw	108	;'l'
  2388  20B7  3475               	retlw	117	;'u'
  2389  20B8  3420               	retlw	32	;' '
  2390  20B9  3421               	retlw	33	;'!'
  2391  20BA  340A               	retlw	10
  2392  20BB  340D               	retlw	13
  2393  20BC  3400               	retlw	0
  2394                           
  2395                           	psect	stringtext11
  2396  20BD                     __pstringtext11:	
  2397  20BD                     STR_3:	
  2398  20BD  344F               	retlw	79	;'O'
  2399  20BE  3462               	retlw	98	;'b'
  2400  20BF  3474               	retlw	116	;'t'
  2401  20C0  3461               	retlw	97	;'a'
  2402  20C1  3469               	retlw	105	;'i'
  2403  20C2  346E               	retlw	110	;'n'
  2404  20C3  3465               	retlw	101	;'e'
  2405  20C4  3464               	retlw	100	;'d'
  2406  20C5  3420               	retlw	32	;' '
  2407  20C6  3461               	retlw	97	;'a'
  2408  20C7  3464               	retlw	100	;'d'
  2409  20C8  3463               	retlw	99	;'c'
  2410  20C9  344F               	retlw	79	;'O'
  2411  20CA  3466               	retlw	102	;'f'
  2412  20CB  3466               	retlw	102	;'f'
  2413  20CC  3473               	retlw	115	;'s'
  2414  20CD  3465               	retlw	101	;'e'
  2415  20CE  3474               	retlw	116	;'t'
  2416  20CF  3420               	retlw	32	;' '
  2417  20D0  343D               	retlw	61	;'='
  2418  20D1  3420               	retlw	32	;' '
  2419  20D2  3425               	retlw	37	;'%'
  2420  20D3  3469               	retlw	105	;'i'
  2421  20D4  3420               	retlw	32	;' '
  2422  20D5  3461               	retlw	97	;'a'
  2423  20D6  346E               	retlw	110	;'n'
  2424  20D7  3464               	retlw	100	;'d'
  2425  20D8  3420               	retlw	32	;' '
  2426  20D9  3461               	retlw	97	;'a'
  2427  20DA  3464               	retlw	100	;'d'
  2428  20DB  3463               	retlw	99	;'c'
  2429  20DC  3447               	retlw	71	;'G'
  2430  20DD  3461               	retlw	97	;'a'
  2431  20DE  3469               	retlw	105	;'i'
  2432  20DF  346E               	retlw	110	;'n'
  2433  20E0  3420               	retlw	32	;' '
  2434  20E1  343D               	retlw	61	;'='
  2435  20E2  3420               	retlw	32	;' '
  2436  20E3  3425               	retlw	37	;'%'
  2437  20E4  3469               	retlw	105	;'i'
  2438  20E5  340A               	retlw	10
  2439  20E6  340D               	retlw	13
  2440  20E7  3400               	retlw	0
  2441                           
  2442                           	psect	stringtext12
  2443  20E8                     __pstringtext12:	
  2444  20E8                     STR_6:	
  2445  20E8  3449               	retlw	73	;'I'
  2446  20E9  346E               	retlw	110	;'n'
  2447  20EA  3469               	retlw	105	;'i'
  2448  20EB  3474               	retlw	116	;'t'
  2449  20EC  3469               	retlw	105	;'i'
  2450  20ED  3461               	retlw	97	;'a'
  2451  20EE  346C               	retlw	108	;'l'
  2452  20EF  3420               	retlw	32	;' '
  2453  20F0  3470               	retlw	112	;'p'
  2454  20F1  3461               	retlw	97	;'a'
  2455  20F2  3472               	retlw	114	;'r'
  2456  20F3  3461               	retlw	97	;'a'
  2457  20F4  346D               	retlw	109	;'m'
  2458  20F5  3465               	retlw	101	;'e'
  2459  20F6  3474               	retlw	116	;'t'
  2460  20F7  3465               	retlw	101	;'e'
  2461  20F8  3472               	retlw	114	;'r'
  2462  20F9  3473               	retlw	115	;'s'
  2463  20FA  3420               	retlw	32	;' '
  2464  20FB  3466               	retlw	102	;'f'
  2465  20FC  346F               	retlw	111	;'o'
  2466  20FD  3472               	retlw	114	;'r'
  2467  20FE  3420               	retlw	32	;' '
  2468  20FF  3442               	retlw	66	;'B'
  2469  2100  3451               	retlw	81	;'Q'
  2470  2101  3437               	retlw	55	;'7'
  2471  2102  3436               	retlw	54	;'6'
  2472  2103  3439               	retlw	57	;'9'
  2473  2104  3432               	retlw	50	;'2'
  2474  2105  3430               	retlw	48	;'0'
  2475  2106  3420               	retlw	32	;' '
  2476  2107  3441               	retlw	65	;'A'
  2477  2108  3446               	retlw	70	;'F'
  2478  2109  3445               	retlw	69	;'E'
  2479  210A  3420               	retlw	32	;' '
  2480  210B  3473               	retlw	115	;'s'
  2481  210C  3465               	retlw	101	;'e'
  2482  210D  3474               	retlw	116	;'t'
  2483  210E  3421               	retlw	33	;'!'
  2484  210F  340A               	retlw	10
  2485  2110  340D               	retlw	13
  2486  2111  3400               	retlw	0
  2487                           
  2488                           	psect	stringtext13
  2489  2112                     __pstringtext13:	
  2490  2112                     STR_1:	
  2491  2112  3441               	retlw	65	;'A'
  2492  2113  3474               	retlw	116	;'t'
  2493  2114  3474               	retlw	116	;'t'
  2494  2115  3465               	retlw	101	;'e'
  2495  2116  346D               	retlw	109	;'m'
  2496  2117  3470               	retlw	112	;'p'
  2497  2118  3474               	retlw	116	;'t'
  2498  2119  3469               	retlw	105	;'i'
  2499  211A  346E               	retlw	110	;'n'
  2500  211B  3467               	retlw	103	;'g'
  2501  211C  3420               	retlw	32	;' '
  2502  211D  3474               	retlw	116	;'t'
  2503  211E  346F               	retlw	111	;'o'
  2504  211F  3420               	retlw	32	;' '
  2505  2120  3463               	retlw	99	;'c'
  2506  2121  346F               	retlw	111	;'o'
  2507  2122  346D               	retlw	109	;'m'
  2508  2123  346D               	retlw	109	;'m'
  2509  2124  3475               	retlw	117	;'u'
  2510  2125  346E               	retlw	110	;'n'
  2511  2126  3469               	retlw	105	;'i'
  2512  2127  3463               	retlw	99	;'c'
  2513  2128  3461               	retlw	97	;'a'
  2514  2129  3474               	retlw	116	;'t'
  2515  212A  3465               	retlw	101	;'e'
  2516  212B  3420               	retlw	32	;' '
  2517  212C  3477               	retlw	119	;'w'
  2518  212D  3469               	retlw	105	;'i'
  2519  212E  3474               	retlw	116	;'t'
  2520  212F  3468               	retlw	104	;'h'
  2521  2130  3420               	retlw	32	;' '
  2522  2131  3441               	retlw	65	;'A'
  2523  2132  3446               	retlw	70	;'F'
  2524  2133  3445               	retlw	69	;'E'
  2525  2134  342E               	retlw	46	;'.'
  2526  2135  342E               	retlw	46	;'.'
  2527  2136  342E               	retlw	46	;'.'
  2528  2137  340A               	retlw	10
  2529  2138  340D               	retlw	13
  2530  2139  3400               	retlw	0
  2531                           
  2532                           	psect	stringtext14
  2533  2192                     __pstringtext14:	
  2534  2192                     STR_108:	
  2535  2192  3468               	retlw	104	;'h'
  2536  2193  3468               	retlw	104	;'h'
  2537  2194  3458               	retlw	88	;'X'
  2538  2195  3400               	retlw	0
  2539                           
  2540                           	psect	stringtext15
  2541  2196                     __pstringtext15:	
  2542  2196                     STR_8:	
  2543  2196  3468               	retlw	104	;'h'
  2544  2197  3468               	retlw	104	;'h'
  2545  2198  3464               	retlw	100	;'d'
  2546  2199  3400               	retlw	0
  2547                           
  2548                           	psect	stringtext16
  2549  219A                     __pstringtext16:	
  2550  219A                     STR_12:	
  2551  219A  3468               	retlw	104	;'h'
  2552  219B  3468               	retlw	104	;'h'
  2553  219C  3469               	retlw	105	;'i'
  2554  219D  3400               	retlw	0
  2555                           
  2556                           	psect	stringtext17
  2557  219E                     __pstringtext17:	
  2558  219E                     STR_64:	
  2559  219E  3468               	retlw	104	;'h'
  2560  219F  3468               	retlw	104	;'h'
  2561  21A0  346E               	retlw	110	;'n'
  2562  21A1  3400               	retlw	0
  2563                           
  2564                           	psect	stringtext18
  2565  21A2                     __pstringtext18:	
  2566  21A2                     STR_44:	
  2567  21A2  3468               	retlw	104	;'h'
  2568  21A3  3468               	retlw	104	;'h'
  2569  21A4  346F               	retlw	111	;'o'
  2570  21A5  3400               	retlw	0
  2571                           
  2572                           	psect	stringtext19
  2573  21A6                     __pstringtext19:	
  2574  21A6                     STR_84:	
  2575  21A6  3468               	retlw	104	;'h'
  2576  21A7  3468               	retlw	104	;'h'
  2577  21A8  3475               	retlw	117	;'u'
  2578  21A9  3400               	retlw	0
  2579                           
  2580                           	psect	stringtext20
  2581  21AA                     __pstringtext20:	
  2582  21AA                     STR_104:	
  2583  21AA  3468               	retlw	104	;'h'
  2584  21AB  3468               	retlw	104	;'h'
  2585  21AC  3478               	retlw	120	;'x'
  2586  21AD  3400               	retlw	0
  2587                           
  2588                           	psect	stringtext21
  2589  21AE                     __pstringtext21:	
  2590  21AE                     STR_126:	
  2591  21AE  346C               	retlw	108	;'l'
  2592  21AF  3458               	retlw	88	;'X'
  2593  21B0  3400               	retlw	0
  2594                           
  2595                           	psect	stringtext22
  2596  21B1                     __pstringtext22:	
  2597  21B1                     STR_135:	
  2598  21B1  347A               	retlw	122	;'z'
  2599  21B2  3458               	retlw	88	;'X'
  2600  21B3  3400               	retlw	0
  2601                           
  2602                           	psect	stringtext23
  2603  21B4                     __pstringtext23:	
  2604  21B4                     STR_26:	
  2605  21B4  346C               	retlw	108	;'l'
  2606  21B5  3464               	retlw	100	;'d'
  2607  21B6  3400               	retlw	0
  2608                           
  2609                           	psect	stringtext24
  2610  21B7                     __pstringtext24:	
  2611  21B7                     STR_35:	
  2612  21B7  347A               	retlw	122	;'z'
  2613  21B8  3464               	retlw	100	;'d'
  2614  21B9  3400               	retlw	0
  2615                           
  2616                           	psect	stringtext25
  2617  21BA                     __pstringtext25:	
  2618  21BA                     STR_30:	
  2619  21BA  346C               	retlw	108	;'l'
  2620  21BB  3469               	retlw	105	;'i'
  2621  21BC  3400               	retlw	0
  2622                           
  2623                           	psect	stringtext26
  2624  21BD                     __pstringtext26:	
  2625  21BD                     STR_39:	
  2626  21BD  347A               	retlw	122	;'z'
  2627  21BE  3469               	retlw	105	;'i'
  2628  21BF  3400               	retlw	0
  2629                           
  2630                           	psect	stringtext27
  2631  21C0                     __pstringtext27:	
  2632  21C0                     STR_74:	
  2633  21C0  346C               	retlw	108	;'l'
  2634  21C1  346E               	retlw	110	;'n'
  2635  21C2  3400               	retlw	0
  2636                           
  2637                           	psect	stringtext28
  2638  21C3                     __pstringtext28:	
  2639  21C3                     STR_79:	
  2640  21C3  347A               	retlw	122	;'z'
  2641  21C4  346E               	retlw	110	;'n'
  2642  21C5  3400               	retlw	0
  2643                           
  2644                           	psect	stringtext29
  2645  21C6                     __pstringtext29:	
  2646  21C6                     STR_54:	
  2647  21C6  346C               	retlw	108	;'l'
  2648  21C7  346F               	retlw	111	;'o'
  2649  21C8  3400               	retlw	0
  2650                           
  2651                           	psect	stringtext30
  2652  21C9                     __pstringtext30:	
  2653  21C9                     STR_59:	
  2654  21C9  347A               	retlw	122	;'z'
  2655  21CA  346F               	retlw	111	;'o'
  2656  21CB  3400               	retlw	0
  2657                           
  2658                           	psect	stringtext31
  2659  21CC                     __pstringtext31:	
  2660  21CC                     STR_94:	
  2661  21CC  346C               	retlw	108	;'l'
  2662  21CD  3475               	retlw	117	;'u'
  2663  21CE  3400               	retlw	0
  2664                           
  2665                           	psect	stringtext32
  2666  21CF                     __pstringtext32:	
  2667  21CF                     STR_99:	
  2668  21CF  347A               	retlw	122	;'z'
  2669  21D0  3475               	retlw	117	;'u'
  2670  21D1  3400               	retlw	0
  2671                           
  2672                           	psect	stringtext33
  2673  21D2                     __pstringtext33:	
  2674  21D2                     STR_122:	
  2675  21D2  346C               	retlw	108	;'l'
  2676  21D3  3478               	retlw	120	;'x'
  2677  21D4  3400               	retlw	0
  2678                           
  2679                           	psect	stringtext34
  2680  21D5                     __pstringtext34:	
  2681  21D5                     STR_131:	
  2682  21D5  347A               	retlw	122	;'z'
  2683  21D6  3478               	retlw	120	;'x'
  2684  21D7  3400               	retlw	0
  2685                           
  2686                           	psect	stringtext35
  2687  0000                     __pstringtext35:	
  2688  2193                     
  2689                           ; #config settings
  2690  0000                     
  2691                           	psect	cinit
  2692  0020                     start_initialization:	
  2693  0020                     __initialization:		;BIGRAM
  2694                           
  2695                           ; Initialize objects allocated to BANK2
  2696  0020  3037               	movlw	low __pidataBANK2
  2697  0021  0084               	movwf	4
  2698  0022  3099               	movlw	(high __pidataBANK2)| (0+128)
  2699  0023  0085               	movwf	5
  2700  0024  0022               	movlb	2	; select bank2
  2701  0025  0012               	moviw fsr0++
  2702  0026  00D2               	movwf	__pdataBANK2& (0+127)
  2703  0027  0012               	moviw fsr0++
  2704  0028  00D3               	movwf	(__pdataBANK2+1)& (0+127)
  2705  0029  0012               	moviw fsr0++
  2706  002A  00D4               	movwf	(__pdataBANK2+2)& (0+127)
  2707  002B  0012               	moviw fsr0++
  2708  002C  00D5               	movwf	(__pdataBANK2+3)& (0+127)
  2709  002D  0012               	moviw fsr0++
  2710  002E  00D6               	movwf	(__pdataBANK2+4)& (0+127)
  2711  002F  0012               	moviw fsr0++
  2712  0030  00D7               	movwf	(__pdataBANK2+5)& (0+127)
  2713  0031  0012               	moviw fsr0++
  2714  0032  00D8               	movwf	(__pdataBANK2+6)& (0+127)
  2715                           
  2716                           ; Clear objects allocated to BIGRAM
  2717  0033  3071               	movlw	low (0+10097)
  2718  0034  0084               	movwf	4
  2719  0035  3027               	movlw	high (0+10097)
  2720  0036  0085               	movwf	5
  2721  0037  307F               	movlw	127
  2722  0038  00FE               	movwf	btemp
  2723  0039  3000               	movlw	0
  2724  003A  00FF               	movwf	btemp+1
  2725  003B  3199  217D  3180   	fcall	clear_ram0
  2726                           
  2727                           ; Clear objects allocated to COMMON
  2728  003E  01FC               	clrf	__pbssCOMMON& (0+127)
  2729                           
  2730                           ; Clear objects allocated to BANK1
  2731  003F  30DD               	movlw	low __pbssBANK1
  2732  0040  0084               	movwf	4
  2733  0041  3000               	movlw	high __pbssBANK1
  2734  0042  0085               	movwf	5
  2735  0043  3013               	movlw	19
  2736  0044  00FE               	movwf	btemp
  2737  0045  3000               	movlw	0
  2738  0046  00FF               	movwf	btemp+1
  2739  0047  3199  217D  3180   	fcall	clear_ram0
  2740                           
  2741                           ; Clear objects allocated to BANK2
  2742  004A  3020               	movlw	low __pbssBANK2
  2743  004B  0084               	movwf	4
  2744  004C  3001               	movlw	high __pbssBANK2
  2745  004D  0085               	movwf	5
  2746  004E  3032               	movlw	50
  2747  004F  00FE               	movwf	btemp
  2748  0050  3000               	movlw	0
  2749  0051  00FF               	movwf	btemp+1
  2750  0052  3199  217D         	fcall	clear_ram0
  2751  0054                     end_of_initialization:	
  2752                           ;End of C runtime variable initialization code
  2753                           
  2754  0054                     __end_of__initialization:	
  2755  0054  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2756  0055  0020               	movlb	0
  2757  0056  319B  2B11         	ljmp	_main	;jump to C main() function
  2758                           
  2759                           	psect	bssCOMMON
  2760  007C                     __pbssCOMMON:	
  2761  007C                     _toggleColor:	
  2762  007C                     	ds	1
  2763                           
  2764                           	psect	bssBANK1
  2765  00DD                     __pbssBANK1:	
  2766  00DD                     _nout:	
  2767  00DD                     	ds	2
  2768  00DF                     _width:	
  2769  00DF                     	ds	2
  2770  00E1                     _prec:	
  2771  00E1                     	ds	2
  2772  00E3                     _flags:	
  2773  00E3                     	ds	2
  2774  00E5                     _minCellTempCharge:	
  2775  00E5                     	ds	2
  2776  00E7                     _adcOffset:	
  2777  00E7                     	ds	2
  2778  00E9                     _adcGain:	
  2779  00E9                     	ds	2
  2780  00EB                     _protect1:	
  2781  00EB                     	ds	1
  2782  00EC                     myIsr@count:	
  2783  00EC                     	ds	1
  2784  00ED                     _tmr1_flag:	
  2785  00ED                     	ds	1
  2786  00EE                     _currState:	
  2787  00EE                     	ds	1
  2788  00EF                     _shuntResistorValue_mOhm:	
  2789  00EF                     	ds	1
  2790                           
  2791                           	psect	bssBANK2
  2792  0120                     __pbssBANK2:	
  2793  0120                     _cellVoltages:	
  2794  0120                     	ds	10
  2795  012A                     _errno:	
  2796  012A                     	ds	2
  2797  012C                     _maxCellTempDischarge:	
  2798  012C                     	ds	2
  2799  012E                     _maxCellTempCharge:	
  2800  012E                     	ds	2
  2801  0130                     _minCellTempDischarge:	
  2802  0130                     	ds	2
  2803  0132                     _dbuf:	
  2804  0132                     	ds	32
  2805                           
  2806                           	psect	dataBANK2
  2807  0152                     __pdataBANK2:	
  2808  0152                     stoa@F1152:	
  2809  0152                     	ds	7
  2810                           
  2811                           	psect	clrtext
  2812  197D                     clear_ram0:	
  2813                           ;	Called with FSR0 containing the base address, and
  2814                           ;	btemp/btemp+1 has the size to clear
  2815                           
  2816  197D  0064               	clrwdt	;clear the watchdog before getting into this loop
  2817  197E                     clrloop0:	
  2818  197E  0180               	clrf	0	;clear RAM location pointed to by FSR
  2819  197F  3101               	addfsr 0,1
  2820  1980  3001               	movlw	1
  2821  1981  02FE               	subwf	126,f
  2822  1982  3000               	movlw	0
  2823  1983  3BFF               	subwfb	127,f
  2824  1984  087F               	movf	127,w
  2825  1985  047E               	iorwf	126,w
  2826  1986  1903               	btfsc	3,2
  2827  1987  3400               	retlw	0	;all done for this memory range, return
  2828  1988  297E               	goto	clrloop0	;have we reached the end yet?
  2829                           
  2830                           	psect	cstackBANK2
  2831  0159                     __pcstackBANK2:	
  2832  0159                     ??_main:	
  2833                           
  2834                           ; 1 bytes @ 0x0
  2835  0159                     	ds	1
  2836                           
  2837                           	psect	cstackBANK1
  2838  00A0                     __pcstackBANK1:	
  2839  00A0                     vfpfcnvrt@cp:	
  2840                           
  2841                           ; 1 bytes @ 0x0
  2842  00A0                     	ds	1
  2843  00A1                     vfpfcnvrt@done:	
  2844                           
  2845                           ; 2 bytes @ 0x1
  2846  00A1                     	ds	2
  2847  00A3                     _vfpfcnvrt$953:	
  2848                           
  2849                           ; 2 bytes @ 0x3
  2850  00A3                     	ds	2
  2851  00A5                     _vfpfcnvrt$954:	
  2852                           
  2853                           ; 2 bytes @ 0x5
  2854  00A5                     	ds	2
  2855  00A7                     vfpfcnvrt@ll:	
  2856                           
  2857                           ; 8 bytes @ 0x7
  2858  00A7                     	ds	8
  2859  00AF                     vfpfcnvrt@vp:	
  2860                           
  2861                           ; 1 bytes @ 0xF
  2862  00AF                     	ds	1
  2863  00B0                     vfpfcnvrt@c:	
  2864                           
  2865                           ; 1 bytes @ 0x10
  2866  00B0                     	ds	1
  2867  00B1                     vfpfcnvrt@llu:	
  2868                           
  2869                           ; 8 bytes @ 0x11
  2870  00B1                     	ds	8
  2871  00B9                     ?_vsnprintf:	
  2872  00B9                     vsnprintf@s:	
  2873                           ; 2 bytes @ 0x19
  2874                           
  2875                           
  2876                           ; 2 bytes @ 0x19
  2877  00B9                     	ds	2
  2878  00BB                     vsnprintf@n:	
  2879                           
  2880                           ; 2 bytes @ 0x1B
  2881  00BB                     	ds	2
  2882  00BD                     vsnprintf@fmt:	
  2883                           
  2884                           ; 2 bytes @ 0x1D
  2885  00BD                     	ds	2
  2886  00BF                     vsnprintf@ap:	
  2887                           
  2888                           ; 1 bytes @ 0x1F
  2889  00BF                     	ds	1
  2890  00C0                     ??_vsnprintf:	
  2891                           
  2892                           ; 1 bytes @ 0x20
  2893  00C0                     	ds	2
  2894  00C2                     _vsnprintf$1530:	
  2895                           
  2896                           ; 2 bytes @ 0x22
  2897  00C2                     	ds	2
  2898  00C4                     vsnprintf@cnt:	
  2899                           
  2900                           ; 2 bytes @ 0x24
  2901  00C4                     	ds	2
  2902  00C6                     vsnprintf@f:	
  2903                           
  2904                           ; 6 bytes @ 0x26
  2905  00C6                     	ds	6
  2906  00CC                     ?_snprintf:	
  2907  00CC                     snprintf@s:	
  2908                           ; 2 bytes @ 0x2C
  2909                           
  2910                           
  2911                           ; 2 bytes @ 0x2C
  2912  00CC                     	ds	2
  2913  00CE                     snprintf@n:	
  2914                           
  2915                           ; 2 bytes @ 0x2E
  2916  00CE                     	ds	2
  2917  00D0                     snprintf@fmt:	
  2918                           
  2919                           ; 2 bytes @ 0x30
  2920  00D0                     	ds	6
  2921  00D6                     ??_snprintf:	
  2922                           
  2923                           ; 1 bytes @ 0x36
  2924  00D6                     	ds	3
  2925  00D9                     snprintf@ap:	
  2926                           
  2927                           ; 1 bytes @ 0x39
  2928  00D9                     	ds	1
  2929  00DA                     ??_statemachine:	
  2930                           
  2931                           ; 1 bytes @ 0x3A
  2932  00DA                     	ds	2
  2933  00DC                     statemachine@success:	
  2934                           
  2935                           ; 1 bytes @ 0x3C
  2936  00DC                     	ds	1
  2937                           
  2938                           	psect	cstackCOMMON
  2939  0070                     __pcstackCOMMON:	
  2940  0070                     ?_initClock:	
  2941  0070                     ?_init_GPIO:	
  2942                           ; 1 bytes @ 0x0
  2943                           
  2944  0070                     ?_init_I2C:	
  2945                           ; 1 bytes @ 0x0
  2946                           
  2947  0070                     ?_init_TMR1:	
  2948                           ; 1 bytes @ 0x0
  2949                           
  2950  0070                     ?_init_RGB:	
  2951                           ; 1 bytes @ 0x0
  2952                           
  2953  0070                     ?_statemachine:	
  2954                           ; 1 bytes @ 0x0
  2955                           
  2956  0070                     ?_RGB_AWAIT_AFE_CONN:	
  2957                           ; 1 bytes @ 0x0
  2958                           
  2959  0070                     ?_init_AFE:	
  2960                           ; 1 bytes @ 0x0
  2961                           
  2962  0070                     ?_internal_16:	
  2963                           ; 1 bytes @ 0x0
  2964                           
  2965  0070                     ?_putch:	
  2966                           ; 1 bytes @ 0x0
  2967                           
  2968  0070                     ?_myIsr:	
  2969                           ; 1 bytes @ 0x0
  2970                           
  2971  0070                     ??_myIsr:	
  2972                           ; 1 bytes @ 0x0
  2973                           
  2974  0070                     ?_main:	
  2975                           ; 1 bytes @ 0x0
  2976                           
  2977  0070                     ?_EUSART_Write:	
  2978                           ; 1 bytes @ 0x0
  2979                           
  2980  0070                     ?_send_I2C_startBit:	
  2981                           ; 1 bytes @ 0x0
  2982                           
  2983  0070                     ?_send_I2C_stopBit:	
  2984                           ; 1 bytes @ 0x0
  2985                           
  2986  0070                     ?_send_I2C_NACK:	
  2987                           ; 1 bytes @ 0x0
  2988                           
  2989  0070                     putch@c:	
  2990                           ; 1 bytes @ 0x0
  2991                           
  2992                           
  2993                           ; 1 bytes @ 0x0
  2994  0070                     	ds	1
  2995  0071                     ??_initClock:	
  2996  0071                     ??_init_GPIO:	
  2997                           ; 1 bytes @ 0x1
  2998                           
  2999  0071                     ??_init_I2C:	
  3000                           ; 1 bytes @ 0x1
  3001                           
  3002  0071                     ??_init_TMR1:	
  3003                           ; 1 bytes @ 0x1
  3004                           
  3005  0071                     ??_init_RGB:	
  3006                           ; 1 bytes @ 0x1
  3007                           
  3008  0071                     ?_RGB_color:	
  3009                           ; 1 bytes @ 0x1
  3010                           
  3011  0071                     ??_internal_16:	
  3012                           ; 1 bytes @ 0x1
  3013                           
  3014  0071                     ?_setShuntResistorValue:	
  3015                           ; 1 bytes @ 0x1
  3016                           
  3017  0071                     ??_putch:	
  3018                           ; 1 bytes @ 0x1
  3019                           
  3020  0071                     ??_EUSART_Write:	
  3021                           ; 1 bytes @ 0x1
  3022                           
  3023  0071                     ?_send_I2C_data:	
  3024                           ; 1 bytes @ 0x1
  3025                           
  3026  0071                     ?_send_I2C_controlByte:	
  3027                           ; 1 bytes @ 0x1
  3028                           
  3029  0071                     ??_send_I2C_startBit:	
  3030                           ; 1 bytes @ 0x1
  3031                           
  3032  0071                     ??_send_I2C_stopBit:	
  3033                           ; 1 bytes @ 0x1
  3034                           
  3035  0071                     ??_send_I2C_NACK:	
  3036                           ; 1 bytes @ 0x1
  3037                           
  3038  0071                     ??___aodiv:	
  3039                           ; 1 bytes @ 0x1
  3040                           
  3041  0071                     ??___aomod:	
  3042                           ; 1 bytes @ 0x1
  3043                           
  3044  0071                     ??___lodiv:	
  3045                           ; 1 bytes @ 0x1
  3046                           
  3047  0071                     ??___lomod:	
  3048                           ; 1 bytes @ 0x1
  3049                           
  3050  0071                     ?_fputc:	
  3051                           ; 1 bytes @ 0x1
  3052                           
  3053  0071                     ?_strlen:	
  3054                           ; 2 bytes @ 0x1
  3055                           
  3056  0071                     ?_isupper:	
  3057                           ; 2 bytes @ 0x1
  3058                           
  3059  0071                     ?_isalpha:	
  3060                           ; 2 bytes @ 0x1
  3061                           
  3062  0071                     ?_isdigit:	
  3063                           ; 2 bytes @ 0x1
  3064                           
  3065  0071                     ?_strncmp:	
  3066                           ; 2 bytes @ 0x1
  3067                           
  3068  0071                     ?_isspace:	
  3069                           ; 2 bytes @ 0x1
  3070                           
  3071  0071                     ?_islower:	
  3072                           ; 2 bytes @ 0x1
  3073                           
  3074  0071                     ?_read_I2C_data:	
  3075                           ; 2 bytes @ 0x1
  3076                           
  3077  0071                     ?___wmul:	
  3078                           ; 2 bytes @ 0x1
  3079                           
  3080  0071                     ?___lmul:	
  3081                           ; 2 bytes @ 0x1
  3082                           
  3083  0071                     EUSART_Write@txData:	
  3084                           ; 4 bytes @ 0x1
  3085                           
  3086  0071                     send_I2C_data@databyte:	
  3087                           ; 1 bytes @ 0x1
  3088                           
  3089  0071                     send_I2C_controlByte@BlockAddress:	
  3090                           ; 2 bytes @ 0x1
  3091                           
  3092  0071                     RGB_color@color:	
  3093                           ; 2 bytes @ 0x1
  3094                           
  3095  0071                     setShuntResistorValue@res_mOhm:	
  3096                           ; 2 bytes @ 0x1
  3097                           
  3098  0071                     ___wmul@multiplier:	
  3099                           ; 2 bytes @ 0x1
  3100                           
  3101  0071                     isalpha@c:	
  3102                           ; 2 bytes @ 0x1
  3103                           
  3104  0071                     isdigit@c:	
  3105                           ; 2 bytes @ 0x1
  3106                           
  3107  0071                     isspace@c:	
  3108                           ; 2 bytes @ 0x1
  3109                           
  3110  0071                     isupper@c:	
  3111                           ; 2 bytes @ 0x1
  3112                           
  3113  0071                     fputc@c:	
  3114                           ; 2 bytes @ 0x1
  3115                           
  3116  0071                     strlen@s:	
  3117                           ; 2 bytes @ 0x1
  3118                           
  3119  0071                     strncmp@_l:	
  3120                           ; 2 bytes @ 0x1
  3121                           
  3122  0071                     islower@c:	
  3123                           ; 2 bytes @ 0x1
  3124                           
  3125  0071                     ___lmul@multiplier:	
  3126                           ; 2 bytes @ 0x1
  3127                           
  3128                           
  3129                           ; 4 bytes @ 0x1
  3130  0071                     	ds	1
  3131  0072                     ?_EUSART_Write_Text:	
  3132  0072                     ___aodiv@counter:	
  3133                           ; 1 bytes @ 0x2
  3134                           
  3135  0072                     ___aomod@counter:	
  3136                           ; 1 bytes @ 0x2
  3137                           
  3138  0072                     ___lomod@counter:	
  3139                           ; 1 bytes @ 0x2
  3140                           
  3141  0072                     EUSART_Write_Text@text:	
  3142                           ; 1 bytes @ 0x2
  3143                           
  3144  0072                     ___lodiv@quotient:	
  3145                           ; 2 bytes @ 0x2
  3146                           
  3147                           
  3148                           ; 8 bytes @ 0x2
  3149  0072                     	ds	1
  3150  0073                     ??_RGB_AWAIT_AFE_CONN:	
  3151  0073                     ??_RGB_color:	
  3152                           ; 1 bytes @ 0x3
  3153                           
  3154  0073                     ??_setShuntResistorValue:	
  3155                           ; 1 bytes @ 0x3
  3156                           
  3157  0073                     ??_strlen:	
  3158                           ; 1 bytes @ 0x3
  3159                           
  3160  0073                     ??_isupper:	
  3161                           ; 1 bytes @ 0x3
  3162                           
  3163  0073                     ??_isalpha:	
  3164                           ; 1 bytes @ 0x3
  3165                           
  3166  0073                     ??_isdigit:	
  3167                           ; 1 bytes @ 0x3
  3168                           
  3169  0073                     ??_isspace:	
  3170                           ; 1 bytes @ 0x3
  3171                           
  3172  0073                     ??_islower:	
  3173                           ; 1 bytes @ 0x3
  3174                           
  3175  0073                     ??_send_I2C_data:	
  3176                           ; 1 bytes @ 0x3
  3177                           
  3178  0073                     ??_read_I2C_data:	
  3179                           ; 1 bytes @ 0x3
  3180                           
  3181  0073                     ___aodiv@sign:	
  3182                           ; 1 bytes @ 0x3
  3183                           
  3184  0073                     ___aomod@sign:	
  3185                           ; 1 bytes @ 0x3
  3186                           
  3187  0073                     send_I2C_controlByte@RW_bit:	
  3188                           ; 1 bytes @ 0x3
  3189                           
  3190  0073                     ___wmul@multiplicand:	
  3191                           ; 2 bytes @ 0x3
  3192                           
  3193  0073                     fputc@fp:	
  3194                           ; 2 bytes @ 0x3
  3195                           
  3196  0073                     strlen@a:	
  3197                           ; 2 bytes @ 0x3
  3198                           
  3199  0073                     strncmp@_r:	
  3200                           ; 2 bytes @ 0x3
  3201                           
  3202                           
  3203                           ; 2 bytes @ 0x3
  3204  0073                     	ds	1
  3205  0074                     ??_EUSART_Write_Text:	
  3206  0074                     ?_abs:	
  3207                           ; 1 bytes @ 0x4
  3208                           
  3209  0074                     abs@a:	
  3210                           ; 2 bytes @ 0x4
  3211                           
  3212  0074                     ___aodiv@quotient:	
  3213                           ; 2 bytes @ 0x4
  3214                           
  3215                           
  3216                           ; 8 bytes @ 0x4
  3217  0074                     	ds	1
  3218  0075                     ??_fputc:	
  3219  0075                     ??_send_I2C_controlByte:	
  3220                           ; 1 bytes @ 0x5
  3221                           
  3222  0075                     ?_I2C_writeRegister:	
  3223                           ; 1 bytes @ 0x5
  3224                           
  3225  0075                     ??___wmul:	
  3226                           ; 1 bytes @ 0x5
  3227                           
  3228  0075                     ?_readRegister:	
  3229                           ; 1 bytes @ 0x5
  3230                           
  3231  0075                     _isspace$1413:	
  3232                           ; 2 bytes @ 0x5
  3233                           
  3234  0075                     EUSART_Write_Text@i:	
  3235                           ; 1 bytes @ 0x5
  3236                           
  3237  0075                     I2C_writeRegister@slaveAddress:	
  3238                           ; 2 bytes @ 0x5
  3239                           
  3240  0075                     readRegister@slaveAddress:	
  3241                           ; 2 bytes @ 0x5
  3242                           
  3243  0075                     ___wmul@product:	
  3244                           ; 2 bytes @ 0x5
  3245                           
  3246  0075                     strncmp@n:	
  3247                           ; 2 bytes @ 0x5
  3248                           
  3249  0075                     ___lmul@multiplicand:	
  3250                           ; 2 bytes @ 0x5
  3251                           
  3252                           
  3253                           ; 4 bytes @ 0x5
  3254  0075                     	ds	1
  3255  0076                     ??_abs:	
  3256                           
  3257                           ; 1 bytes @ 0x6
  3258  0076                     	ds	1
  3259  0077                     ??_setTemperatureLimitsint:	
  3260  0077                     ??_strncmp:	
  3261                           ; 1 bytes @ 0x7
  3262                           
  3263  0077                     ?_toupper:	
  3264                           ; 1 bytes @ 0x7
  3265                           
  3266  0077                     ?_atoi:	
  3267                           ; 2 bytes @ 0x7
  3268                           
  3269  0077                     I2C_writeRegister@regAddress:	
  3270                           ; 2 bytes @ 0x7
  3271                           
  3272  0077                     readRegister@regAddress:	
  3273                           ; 2 bytes @ 0x7
  3274                           
  3275  0077                     atoi@s:	
  3276                           ; 2 bytes @ 0x7
  3277                           
  3278  0077                     toupper@c:	
  3279                           ; 2 bytes @ 0x7
  3280                           
  3281                           
  3282                           ; 2 bytes @ 0x7
  3283  0077                     	ds	1
  3284  0078                     strncmp@l:	
  3285                           
  3286                           ; 2 bytes @ 0x8
  3287  0078                     	ds	1
  3288  0079                     ??_readRegister:	
  3289  0079                     ??___lmul:	
  3290                           ; 1 bytes @ 0x9
  3291                           
  3292  0079                     ??___aldiv:	
  3293                           ; 1 bytes @ 0x9
  3294                           
  3295  0079                     I2C_writeRegister@data:	
  3296                           ; 1 bytes @ 0x9
  3297                           
  3298  0079                     readRegister@recievedData:	
  3299                           ; 2 bytes @ 0x9
  3300                           
  3301  0079                     _toupper$1493:	
  3302                           ; 2 bytes @ 0x9
  3303                           
  3304                           
  3305                           ; 2 bytes @ 0x9
  3306  0079                     	ds	1
  3307  007A                     ??_init_AFE:	
  3308  007A                     ??_stoa:	
  3309                           ; 1 bytes @ 0xA
  3310                           
  3311  007A                     ?_fputs:	
  3312                           ; 1 bytes @ 0xA
  3313                           
  3314  007A                     ___lodiv@counter:	
  3315                           ; 2 bytes @ 0xA
  3316                           
  3317  007A                     EUSART_Initialize@x:	
  3318                           ; 1 bytes @ 0xA
  3319                           
  3320  007A                     fputs@fp:	
  3321                           ; 2 bytes @ 0xA
  3322                           
  3323  007A                     strncmp@r:	
  3324                           ; 2 bytes @ 0xA
  3325                           
  3326                           
  3327                           ; 2 bytes @ 0xA
  3328  007A                     	ds	1
  3329  007B                     ??_I2C_writeRegister:	
  3330                           
  3331                           ; 1 bytes @ 0xB
  3332  007B                     	ds	1
  3333                           
  3334                           	psect	cstackBANK0
  3335  0020                     __pcstackBANK0:	
  3336  0020                     ?_setTemperatureLimitsint:	
  3337  0020                     ??_fputs:	
  3338                           ; 1 bytes @ 0x0
  3339                           
  3340  0020                     ??_toupper:	
  3341                           ; 1 bytes @ 0x0
  3342                           
  3343  0020                     ??_atoi:	
  3344                           ; 1 bytes @ 0x0
  3345                           
  3346  0020                     ?_beginAFEcommunication:	
  3347                           ; 1 bytes @ 0x0
  3348                           
  3349  0020                     ?_stoa:	
  3350                           ; 2 bytes @ 0x0
  3351                           
  3352  0020                     ?___aodiv:	
  3353                           ; 2 bytes @ 0x0
  3354                           
  3355  0020                     ?___aomod:	
  3356                           ; 8 bytes @ 0x0
  3357                           
  3358  0020                     ?___lodiv:	
  3359                           ; 8 bytes @ 0x0
  3360                           
  3361  0020                     ?___lomod:	
  3362                           ; 8 bytes @ 0x0
  3363                           
  3364  0020                     setTemperatureLimitsint@minDischarge_degC:	
  3365                           ; 8 bytes @ 0x0
  3366                           
  3367  0020                     stoa@fp:	
  3368                           ; 2 bytes @ 0x0
  3369                           
  3370  0020                     ___lmul@product:	
  3371                           ; 2 bytes @ 0x0
  3372                           
  3373  0020                     ___aodiv@divisor:	
  3374                           ; 4 bytes @ 0x0
  3375                           
  3376  0020                     ___aomod@divisor:	
  3377                           ; 8 bytes @ 0x0
  3378                           
  3379  0020                     ___lodiv@divisor:	
  3380                           ; 8 bytes @ 0x0
  3381                           
  3382  0020                     ___lomod@divisor:	
  3383                           ; 8 bytes @ 0x0
  3384                           
  3385                           
  3386                           ; 8 bytes @ 0x0
  3387  0020                     	ds	2
  3388  0022                     ??_beginAFEcommunication:	
  3389  0022                     stoa@s:	
  3390                           ; 1 bytes @ 0x2
  3391                           
  3392  0022                     fputs@c:	
  3393                           ; 1 bytes @ 0x2
  3394                           
  3395  0022                     setTemperatureLimitsint@maxDischarge_degC:	
  3396                           ; 1 bytes @ 0x2
  3397                           
  3398                           
  3399                           ; 2 bytes @ 0x2
  3400  0022                     	ds	1
  3401  0023                     fputs@i:	
  3402  0023                     stoa@nuls:	
  3403                           ; 2 bytes @ 0x3
  3404                           
  3405                           
  3406                           ; 7 bytes @ 0x3
  3407  0023                     	ds	1
  3408  0024                     ?___aldiv:	
  3409  0024                     setTemperatureLimitsint@minCharge_degC:	
  3410                           ; 4 bytes @ 0x4
  3411                           
  3412  0024                     atoi@neg:	
  3413                           ; 2 bytes @ 0x4
  3414                           
  3415  0024                     ___aldiv@divisor:	
  3416                           ; 2 bytes @ 0x4
  3417                           
  3418                           
  3419                           ; 4 bytes @ 0x4
  3420  0024                     	ds	1
  3421  0025                     fputs@s:	
  3422                           
  3423                           ; 1 bytes @ 0x5
  3424  0025                     	ds	1
  3425  0026                     ?_pad:	
  3426  0026                     setTemperatureLimitsint@maxCharge_degC:	
  3427                           ; 2 bytes @ 0x6
  3428                           
  3429  0026                     pad@fp:	
  3430                           ; 2 bytes @ 0x6
  3431                           
  3432  0026                     _atoi$1386:	
  3433                           ; 2 bytes @ 0x6
  3434                           
  3435                           
  3436                           ; 2 bytes @ 0x6
  3437  0026                     	ds	2
  3438  0028                     pad@buf:	
  3439  0028                     _atoi$1388:	
  3440                           ; 1 bytes @ 0x8
  3441                           
  3442  0028                     ___aldiv@dividend:	
  3443                           ; 2 bytes @ 0x8
  3444                           
  3445  0028                     ___aodiv@dividend:	
  3446                           ; 4 bytes @ 0x8
  3447                           
  3448  0028                     ___aomod@dividend:	
  3449                           ; 8 bytes @ 0x8
  3450                           
  3451  0028                     ___lodiv@dividend:	
  3452                           ; 8 bytes @ 0x8
  3453                           
  3454  0028                     ___lomod@dividend:	
  3455                           ; 8 bytes @ 0x8
  3456                           
  3457                           
  3458                           ; 8 bytes @ 0x8
  3459  0028                     	ds	1
  3460  0029                     pad@p:	
  3461                           
  3462                           ; 2 bytes @ 0x9
  3463  0029                     	ds	1
  3464  002A                     _atoi$1387:	
  3465  002A                     stoa@i:	
  3466                           ; 1 bytes @ 0xA
  3467                           
  3468                           
  3469                           ; 2 bytes @ 0xA
  3470  002A                     	ds	1
  3471  002B                     ??_pad:	
  3472  002B                     beginAFEcommunication@commSuccess:	
  3473                           ; 1 bytes @ 0xB
  3474                           
  3475  002B                     atoi@n:	
  3476                           ; 2 bytes @ 0xB
  3477                           
  3478                           
  3479                           ; 2 bytes @ 0xB
  3480  002B                     	ds	1
  3481  002C                     ___aldiv@counter:	
  3482  002C                     pad@i:	
  3483                           ; 1 bytes @ 0xC
  3484                           
  3485  002C                     stoa@w:	
  3486                           ; 2 bytes @ 0xC
  3487                           
  3488                           
  3489                           ; 2 bytes @ 0xC
  3490  002C                     	ds	1
  3491  002D                     ___aldiv@sign:	
  3492  002D                     beginAFEcommunication@i:	
  3493                           ; 1 bytes @ 0xD
  3494                           
  3495                           
  3496                           ; 2 bytes @ 0xD
  3497  002D                     	ds	1
  3498  002E                     stoa@cp:	
  3499  002E                     pad@w:	
  3500                           ; 1 bytes @ 0xE
  3501                           
  3502  002E                     ___aldiv@quotient:	
  3503                           ; 2 bytes @ 0xE
  3504                           
  3505                           
  3506                           ; 4 bytes @ 0xE
  3507  002E                     	ds	1
  3508  002F                     stoa@p:	
  3509                           
  3510                           ; 2 bytes @ 0xF
  3511  002F                     	ds	1
  3512  0030                     ?_ctoa:	
  3513  0030                     ?_dtoa:	
  3514                           ; 2 bytes @ 0x10
  3515                           
  3516  0030                     ?_otoa:	
  3517                           ; 2 bytes @ 0x10
  3518                           
  3519  0030                     ?_utoa:	
  3520                           ; 2 bytes @ 0x10
  3521                           
  3522  0030                     ?_xtoa:	
  3523                           ; 2 bytes @ 0x10
  3524                           
  3525  0030                     ctoa@fp:	
  3526                           ; 2 bytes @ 0x10
  3527                           
  3528  0030                     dtoa@fp:	
  3529                           ; 2 bytes @ 0x10
  3530                           
  3531  0030                     otoa@fp:	
  3532                           ; 2 bytes @ 0x10
  3533                           
  3534  0030                     utoa@fp:	
  3535                           ; 2 bytes @ 0x10
  3536                           
  3537  0030                     xtoa@fp:	
  3538                           ; 2 bytes @ 0x10
  3539                           
  3540                           
  3541                           ; 2 bytes @ 0x10
  3542  0030                     	ds	1
  3543  0031                     stoa@l:	
  3544                           
  3545                           ; 2 bytes @ 0x11
  3546  0031                     	ds	1
  3547  0032                     ?_EUSART_Initialize:	
  3548  0032                     ?_setShortCircuitProtection:	
  3549                           ; 1 bytes @ 0x12
  3550                           
  3551  0032                     ?_AFE_getSetShortCircuitCurrent:	
  3552                           ; 1 bytes @ 0x12
  3553                           
  3554  0032                     ctoa@c:	
  3555                           ; 4 bytes @ 0x12
  3556                           
  3557  0032                     EUSART_Initialize@baudrate:	
  3558                           ; 1 bytes @ 0x12
  3559                           
  3560  0032                     setShortCircuitProtection@current_mA:	
  3561                           ; 4 bytes @ 0x12
  3562                           
  3563  0032                     dtoa@d:	
  3564                           ; 4 bytes @ 0x12
  3565                           
  3566  0032                     otoa@d:	
  3567                           ; 8 bytes @ 0x12
  3568                           
  3569  0032                     utoa@d:	
  3570                           ; 8 bytes @ 0x12
  3571                           
  3572  0032                     xtoa@d:	
  3573                           ; 8 bytes @ 0x12
  3574                           
  3575                           
  3576                           ; 8 bytes @ 0x12
  3577  0032                     	ds	1
  3578  0033                     ??_ctoa:	
  3579                           
  3580                           ; 1 bytes @ 0x13
  3581  0033                     	ds	1
  3582  0034                     ctoa@w:	
  3583                           
  3584                           ; 2 bytes @ 0x14
  3585  0034                     	ds	2
  3586  0036                     ??_EUSART_Initialize:	
  3587  0036                     ??_AFE_getSetShortCircuitCurrent:	
  3588                           ; 1 bytes @ 0x16
  3589                           
  3590  0036                     setShortCircuitProtection@delay_us:	
  3591                           ; 1 bytes @ 0x16
  3592                           
  3593                           
  3594                           ; 2 bytes @ 0x16
  3595  0036                     	ds	2
  3596  0038                     ??_setShortCircuitProtection:	
  3597                           
  3598                           ; 1 bytes @ 0x18
  3599  0038                     	ds	2
  3600  003A                     ??_dtoa:	
  3601  003A                     ??_otoa:	
  3602                           ; 1 bytes @ 0x1A
  3603                           
  3604  003A                     ??_utoa:	
  3605                           ; 1 bytes @ 0x1A
  3606                           
  3607  003A                     xtoa@x:	
  3608                           ; 1 bytes @ 0x1A
  3609                           
  3610                           
  3611                           ; 1 bytes @ 0x1A
  3612  003A                     	ds	1
  3613  003B                     ??_xtoa:	
  3614  003B                     utoa@p:	
  3615                           ; 1 bytes @ 0x1B
  3616                           
  3617                           
  3618                           ; 2 bytes @ 0x1B
  3619  003B                     	ds	2
  3620  003D                     _dtoa$902:	
  3621  003D                     utoa@w:	
  3622                           ; 2 bytes @ 0x1D
  3623                           
  3624                           
  3625                           ; 2 bytes @ 0x1D
  3626  003D                     	ds	2
  3627  003F                     dtoa@p:	
  3628  003F                     utoa@n:	
  3629                           ; 2 bytes @ 0x1F
  3630                           
  3631                           
  3632                           ; 8 bytes @ 0x1F
  3633  003F                     	ds	2
  3634  0041                     dtoa@w:	
  3635                           
  3636                           ; 2 bytes @ 0x21
  3637  0041                     	ds	1
  3638  0042                     otoa@p:	
  3639                           
  3640                           ; 2 bytes @ 0x22
  3641  0042                     	ds	1
  3642  0043                     setShortCircuitProtection@i:	
  3643  0043                     dtoa@s:	
  3644                           ; 2 bytes @ 0x23
  3645                           
  3646  0043                     _xtoa$938:	
  3647                           ; 2 bytes @ 0x23
  3648                           
  3649                           
  3650                           ; 2 bytes @ 0x23
  3651  0043                     	ds	1
  3652  0044                     otoa@t:	
  3653                           
  3654                           ; 2 bytes @ 0x24
  3655  0044                     	ds	1
  3656  0045                     setShortCircuitProtection@i_783:	
  3657  0045                     _xtoa$939:	
  3658                           ; 2 bytes @ 0x25
  3659                           
  3660  0045                     dtoa@n:	
  3661                           ; 2 bytes @ 0x25
  3662                           
  3663                           
  3664                           ; 8 bytes @ 0x25
  3665  0045                     	ds	1
  3666  0046                     otoa@w:	
  3667                           
  3668                           ; 2 bytes @ 0x26
  3669  0046                     	ds	1
  3670  0047                     utoa@i:	
  3671  0047                     xtoa@p:	
  3672                           ; 2 bytes @ 0x27
  3673                           
  3674                           
  3675                           ; 2 bytes @ 0x27
  3676  0047                     	ds	1
  3677  0048                     otoa@n:	
  3678                           
  3679                           ; 8 bytes @ 0x28
  3680  0048                     	ds	1
  3681  0049                     xtoa@w:	
  3682                           
  3683                           ; 2 bytes @ 0x29
  3684  0049                     	ds	2
  3685  004B                     xtoa@n:	
  3686                           
  3687                           ; 8 bytes @ 0x2B
  3688  004B                     	ds	2
  3689  004D                     dtoa@i:	
  3690                           
  3691                           ; 2 bytes @ 0x2D
  3692  004D                     	ds	3
  3693  0050                     otoa@i:	
  3694                           
  3695                           ; 2 bytes @ 0x30
  3696  0050                     	ds	3
  3697  0053                     xtoa@i:	
  3698                           
  3699                           ; 2 bytes @ 0x33
  3700  0053                     	ds	2
  3701  0055                     xtoa@c:	
  3702                           
  3703                           ; 2 bytes @ 0x35
  3704  0055                     	ds	2
  3705  0057                     ?_vfpfcnvrt:	
  3706  0057                     vfpfcnvrt@fp:	
  3707                           ; 2 bytes @ 0x37
  3708                           
  3709                           
  3710                           ; 2 bytes @ 0x37
  3711  0057                     	ds	2
  3712  0059                     vfpfcnvrt@fmt:	
  3713                           
  3714                           ; 1 bytes @ 0x39
  3715  0059                     	ds	1
  3716  005A                     vfpfcnvrt@ap:	
  3717                           
  3718                           ; 1 bytes @ 0x3A
  3719  005A                     	ds	1
  3720  005B                     ??_vfpfcnvrt:	
  3721                           
  3722                           ; 1 bytes @ 0x3B
  3723  005B                     	ds	12
  3724  0067                     ?_vfprintf:	
  3725  0067                     vfprintf@fp:	
  3726                           ; 2 bytes @ 0x47
  3727                           
  3728                           
  3729                           ; 2 bytes @ 0x47
  3730  0067                     	ds	2
  3731  0069                     vfprintf@fmt:	
  3732                           
  3733                           ; 2 bytes @ 0x49
  3734  0069                     	ds	2
  3735  006B                     vfprintf@ap:	
  3736                           
  3737                           ; 1 bytes @ 0x4B
  3738  006B                     	ds	1
  3739  006C                     ??_vfprintf:	
  3740                           
  3741                           ; 1 bytes @ 0x4C
  3742  006C                     	ds	2
  3743  006E                     vfprintf@cfmt:	
  3744                           
  3745                           ; 2 bytes @ 0x4E
  3746  006E                     	ds	2
  3747                           
  3748                           	psect	maintext
  3749  1B11                     __pmaintext:	
  3750 ;;
  3751 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3752 ;;
  3753 ;; *************** function _main *****************
  3754 ;; Defined at:
  3755 ;;		line 75 in file "main.c"
  3756 ;; Parameters:    Size  Location     Type
  3757 ;;		None
  3758 ;; Auto vars:     Size  Location     Type
  3759 ;;		None
  3760 ;; Return value:  Size  Location     Type
  3761 ;;                  1    wreg      void 
  3762 ;; Registers used:
  3763 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3764 ;; Tracked objects:
  3765 ;;		On entry : B1F/0
  3766 ;;		On exit  : 0/0
  3767 ;;		Unchanged: 0/0
  3768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3771 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3772 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3773 ;;Total ram usage:        1 bytes
  3774 ;; Hardware stack levels required when called:   11
  3775 ;; This function calls:
  3776 ;;		_EUSART_Initialize
  3777 ;;		_initClock
  3778 ;;		_init_GPIO
  3779 ;;		_init_I2C
  3780 ;;		_init_RGB
  3781 ;;		_init_TMR1
  3782 ;;		_statemachine
  3783 ;; This function is called by:
  3784 ;;		Startup code after reset
  3785 ;; This function uses a non-reentrant model
  3786 ;;
  3787                           
  3788                           
  3789                           ;psect for function _main
  3790  1B11                     _main:	
  3791                           
  3792                           ;main.c: 78:     initClock();
  3793                           
  3794                           ;incstack = 0
  3795                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3796  1B11  3199  2129  319B   	fcall	_initClock
  3797                           
  3798                           ;main.c: 79:     init_GPIO();
  3799  1B14  319C  242D  319B   	fcall	_init_GPIO
  3800                           
  3801                           ;main.c: 80:     init_I2C();
  3802  1B17  3199  2189  319B   	fcall	_init_I2C
  3803                           
  3804                           ;main.c: 81:     EUSART_Initialize(9600);
  3805  1B1A  3000               	movlw	0
  3806  1B1B  0020               	movlb	0	; select bank0
  3807  1B1C  00B5               	movwf	EUSART_Initialize@baudrate+3
  3808  1B1D  3000               	movlw	0
  3809  1B1E  00B4               	movwf	EUSART_Initialize@baudrate+2
  3810  1B1F  3025               	movlw	37
  3811  1B20  00B3               	movwf	EUSART_Initialize@baudrate+1
  3812  1B21  3080               	movlw	128
  3813  1B22  00B2               	movwf	EUSART_Initialize@baudrate
  3814  1B23  3190  201C  319B   	fcall	_EUSART_Initialize
  3815                           
  3816                           ;main.c: 82:     init_TMR1();
  3817  1B26  3199  2172  319B   	fcall	_init_TMR1
  3818                           
  3819                           ;main.c: 83:     init_RGB();
  3820  1B29  3199  212C  319B   	fcall	_init_RGB
  3821  1B2C                     l5300:	
  3822                           
  3823                           ;main.c: 87:         statemachine();
  3824  1B2C  3193  23B4  319B   	fcall	_statemachine
  3825                           
  3826                           ;main.c: 89:         _delay((unsigned long)((10)*(16000000/4000.0)));
  3827  1B2F  3034               	movlw	52
  3828  1B30  0022               	movlb	2	; select bank2
  3829  1B31  00D9               	movwf	??_main^(0+256)
  3830  1B32  30F1               	movlw	241
  3831  1B33                     u6357:	
  3832  1B33  0B89               	decfsz	9,f
  3833  1B34  2B33               	goto	u6357
  3834  1B35  0BD9               	decfsz	??_main^(0+256),f
  3835  1B36  2B33               	goto	u6357
  3836  1B37  3200               	nop2
  3837  1B38  2B2C               	goto	l5300
  3838  1B39                     __end_of_main:	
  3839                           
  3840                           	psect	text1
  3841  13B4                     __ptext1:	
  3842 ;; *************** function _statemachine *****************
  3843 ;; Defined at:
  3844 ;;		line 95 in file "main.c"
  3845 ;; Parameters:    Size  Location     Type
  3846 ;;		None
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;  success         1   60[BANK1 ] unsigned char 
  3849 ;; Return value:  Size  Location     Type
  3850 ;;                  1    wreg      void 
  3851 ;; Registers used:
  3852 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3853 ;; Tracked objects:
  3854 ;;		On entry : 0/0
  3855 ;;		On exit  : 0/0
  3856 ;;		Unchanged: 0/0
  3857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3859 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3860 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3861 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3862 ;;Total ram usage:        3 bytes
  3863 ;; Hardware stack levels used:    1
  3864 ;; Hardware stack levels required when called:   10
  3865 ;; This function calls:
  3866 ;;		_AFE_getSetShortCircuitCurrent
  3867 ;;		_EUSART_Write_Text
  3868 ;;		_RGB_AWAIT_AFE_CONN
  3869 ;;		_RGB_color
  3870 ;;		_beginAFEcommunication
  3871 ;;		_init_AFE
  3872 ;;		_snprintf
  3873 ;; This function is called by:
  3874 ;;		_main
  3875 ;; This function uses a non-reentrant model
  3876 ;;
  3877                           
  3878                           
  3879                           ;psect for function _statemachine
  3880  13B4                     _statemachine:	
  3881                           
  3882                           ;main.c: 97:     switch (currState) {
  3883                           
  3884                           ;incstack = 0
  3885                           ; Regs used in _statemachine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3886  13B4  2C65               	goto	l5282
  3887  13B5                     l5234:	
  3888                           
  3889                           ;main.c: 100:             if (tmr1_flag) {
  3890  13B5  086D               	movf	_tmr1_flag^(0+128),w	;volatile
  3891  13B6  1903               	btfsc	3,2
  3892  13B7  0008               	return
  3893                           
  3894                           ;main.c: 101:                 tmr1_flag = 0;
  3895  13B8  01ED               	clrf	_tmr1_flag^(0+128)	;volatile
  3896                           
  3897                           ;main.c: 102:                 RGB_AWAIT_AFE_CONN();
  3898  13B9  319A  22A7  3193   	fcall	_RGB_AWAIT_AFE_CONN
  3899                           
  3900                           ;main.c: 103:                 uint8_t success = beginAFEcommunication();
  3901  13BC  3190  20C5  3193   	fcall	_beginAFEcommunication
  3902  13BF  0020               	movlb	0	; select bank0
  3903  13C0  0820               	movf	?_beginAFEcommunication,w
  3904  13C1  0021               	movlb	1	; select bank1
  3905  13C2  00DA               	movwf	??_statemachine^(0+128)
  3906  13C3  085A               	movf	??_statemachine^(0+128),w
  3907  13C4  00DC               	movwf	statemachine@success^(0+128)
  3908                           
  3909                           ;main.c: 106:                 EUSART_Write_Text("Attempting to communicate with AFE...\n
      +                          \r");
  3910  13C5  3012               	movlw	low (STR_1| (0+32768))
  3911  13C6  00F2               	movwf	EUSART_Write_Text@text
  3912  13C7  30A1               	movlw	high (STR_1| (0+32768))
  3913  13C8  00F3               	movwf	EUSART_Write_Text@text+1
  3914  13C9  319A  2234  3193   	fcall	_EUSART_Write_Text
  3915                           
  3916                           ;main.c: 108:                 if (success) {
  3917  13CC  0021               	movlb	1	; select bank1
  3918  13CD  085C               	movf	statemachine@success^(0+128),w
  3919  13CE  1903               	btfsc	3,2
  3920  13CF  0008               	return
  3921                           
  3922                           ;main.c: 109:                     T1CONbits.TMR1ON = 0;
  3923  13D0  0020               	movlb	0	; select bank0
  3924  13D1  1018               	bcf	24,0	;volatile
  3925                           
  3926                           ;main.c: 110:                     PIE1bits.TMR1IE = 0;
  3927  13D2  0021               	movlb	1	; select bank1
  3928  13D3  1011               	bcf	17,0	;volatile
  3929                           
  3930                           ;main.c: 111:                     RGB_color(0);
  3931  13D4  3000               	movlw	0
  3932  13D5  00F1               	movwf	RGB_color@color
  3933  13D6  00F2               	movwf	RGB_color@color+1
  3934  13D7  319A  2286  3193   	fcall	_RGB_color
  3935                           
  3936                           ;main.c: 112:                     tmr1_flag = 0;
  3937  13DA  0021               	movlb	1	; select bank1
  3938  13DB  01ED               	clrf	_tmr1_flag^(0+128)	;volatile
  3939                           
  3940                           ;main.c: 115:                     _delay((unsigned long)((5)*(16000000/4000.0)));
  3941  13DC  301A               	movlw	26
  3942  13DD  0021               	movlb	1	; select bank1
  3943  13DE  00DA               	movwf	??_statemachine^(0+128)
  3944  13DF  30F8               	movlw	248
  3945  13E0                     u6367:	
  3946  13E0  0B89               	decfsz	9,f
  3947  13E1  2BE0               	goto	u6367
  3948  13E2  0BDA               	decfsz	??_statemachine^(0+128),f
  3949  13E3  2BE0               	goto	u6367
  3950  13E4  0000               	nop
  3951                           
  3952                           ;main.c: 116:                     EUSART_Write_Text("Communication with BQ76920 AFE esta
      +                          blished!\n\r");
  3953  13E5  3037               	movlw	low (STR_2| (0+32768))
  3954  13E6  00F2               	movwf	EUSART_Write_Text@text
  3955  13E7  30A0               	movlw	high (STR_2| (0+32768))
  3956  13E8  00F3               	movwf	EUSART_Write_Text@text+1
  3957  13E9  319A  2234  3193   	fcall	_EUSART_Write_Text
  3958                           
  3959                           ;main.c: 117:                     snprintf(messageBuffer, 127, "Obtained adcOffset = %i 
      +                          and adcGain = %i\n\r", adcOffset, adcGain);
  3960  13EC  3071               	movlw	113
  3961  13ED  0021               	movlb	1	; select bank1
  3962  13EE  00CC               	movwf	snprintf@s^(0+128)
  3963  13EF  3027               	movlw	39
  3964  13F0  00CD               	movwf	(snprintf@s^(0+128)+1)
  3965  13F1  307F               	movlw	127
  3966  13F2  00CE               	movwf	snprintf@n^(0+128)
  3967  13F3  3000               	movlw	0
  3968  13F4  00CF               	movwf	(snprintf@n^(0+128)+1)
  3969  13F5  30BD               	movlw	low (STR_3| (0+32768))
  3970  13F6  00D0               	movwf	snprintf@fmt^(0+128)
  3971  13F7  30A0               	movlw	high (STR_3| (0+32768))
  3972  13F8  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  3973  13F9  0868               	movf	(_adcOffset+1)^(0+128),w
  3974  13FA  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  3975  13FB  0867               	movf	_adcOffset^(0+128),w
  3976  13FC  00D2               	movwf	(?_snprintf^(0+128)+6)
  3977  13FD  086A               	movf	(_adcGain+1)^(0+128),w
  3978  13FE  00D5               	movwf	((?_snprintf+1)^(0+128)+8)
  3979  13FF  0869               	movf	_adcGain^(0+128),w
  3980  1400  00D4               	movwf	(?_snprintf^(0+128)+8)
  3981  1401  319A  221C  3193   	fcall	_snprintf
  3982                           
  3983                           ;main.c: 118:                     EUSART_Write_Text(messageBuffer);
  3984  1404  3071               	movlw	113
  3985  1405  00F2               	movwf	EUSART_Write_Text@text
  3986  1406  3027               	movlw	39
  3987  1407  00F3               	movwf	EUSART_Write_Text@text+1
  3988  1408  319A  2234  3193   	fcall	_EUSART_Write_Text
  3989                           
  3990                           ;main.c: 119:                     EUSART_Write_Text("Attempt to set initial system param
      +                          eters to AFE...\n\r");
  3991  140B  3002               	movlw	low (STR_4| (0+32768))
  3992  140C  00F2               	movwf	EUSART_Write_Text@text
  3993  140D  30A0               	movlw	high (STR_4| (0+32768))
  3994  140E  00F3               	movwf	EUSART_Write_Text@text+1
  3995  140F  319A  2234         	fcall	_EUSART_Write_Text
  3996                           
  3997                           ;main.c: 121:                     currState = 1;
  3998  1411  0021               	movlb	1	; select bank1
  3999  1412  01EE               	clrf	_currState^(0+128)
  4000  1413  0AEE               	incf	_currState^(0+128),f
  4001  1414  0008               	return
  4002  1415                     l5264:	
  4003                           
  4004                           ;main.c: 130:             init_AFE();
  4005  1415  319B  2339  3193   	fcall	_init_AFE
  4006                           
  4007                           ;main.c: 133:             _delay((unsigned long)((5)*(16000000/4000.0)));
  4008  1418  301A               	movlw	26
  4009  1419  0021               	movlb	1	; select bank1
  4010  141A  00DA               	movwf	??_statemachine^(0+128)
  4011  141B  30F8               	movlw	248
  4012  141C                     u6377:	
  4013  141C  0B89               	decfsz	9,f
  4014  141D  2C1C               	goto	u6377
  4015  141E  0BDA               	decfsz	??_statemachine^(0+128),f
  4016  141F  2C1C               	goto	u6377
  4017  1420  0000               	nop
  4018                           
  4019                           ;main.c: 134:             snprintf(messageBuffer, 127, "Set short circuit current for AF
      +                          E: %lu !\n\r", AFE_getSetShortCircuitCurrent());
  4020  1421  3071               	movlw	113
  4021  1422  0021               	movlb	1	; select bank1
  4022  1423  00CC               	movwf	snprintf@s^(0+128)
  4023  1424  3027               	movlw	39
  4024  1425  00CD               	movwf	(snprintf@s^(0+128)+1)
  4025  1426  307F               	movlw	127
  4026  1427  00CE               	movwf	snprintf@n^(0+128)
  4027  1428  3000               	movlw	0
  4028  1429  00CF               	movwf	(snprintf@n^(0+128)+1)
  4029  142A  3092               	movlw	low (STR_5| (0+32768))
  4030  142B  00D0               	movwf	snprintf@fmt^(0+128)
  4031  142C  30A0               	movlw	high (STR_5| (0+32768))
  4032  142D  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  4033  142E  319C  24A9  3193   	fcall	_AFE_getSetShortCircuitCurrent
  4034  1431  0020               	movlb	0	; select bank0
  4035  1432  0835               	movf	?_AFE_getSetShortCircuitCurrent+3,w
  4036  1433  0021               	movlb	1	; select bank1
  4037  1434  00D5               	movwf	((?_snprintf+3)^(0+128)+6)
  4038  1435  0020               	movlb	0	; select bank0
  4039  1436  0834               	movf	?_AFE_getSetShortCircuitCurrent+2,w
  4040  1437  0021               	movlb	1	; select bank1
  4041  1438  00D4               	movwf	((?_snprintf+2)^(0+128)+6)
  4042  1439  0020               	movlb	0	; select bank0
  4043  143A  0833               	movf	?_AFE_getSetShortCircuitCurrent+1,w
  4044  143B  0021               	movlb	1	; select bank1
  4045  143C  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  4046  143D  0020               	movlb	0	; select bank0
  4047  143E  0832               	movf	?_AFE_getSetShortCircuitCurrent,w
  4048  143F  0021               	movlb	1	; select bank1
  4049  1440  00D2               	movwf	(?_snprintf^(0+128)+6)
  4050  1441  319A  221C  3193   	fcall	_snprintf
  4051                           
  4052                           ;main.c: 135:             EUSART_Write_Text(messageBuffer);
  4053  1444  3071               	movlw	113
  4054  1445  00F2               	movwf	EUSART_Write_Text@text
  4055  1446  3027               	movlw	39
  4056  1447  00F3               	movwf	EUSART_Write_Text@text+1
  4057  1448  319A  2234  3193   	fcall	_EUSART_Write_Text
  4058                           
  4059                           ;main.c: 136:             EUSART_Write_Text("Initial parameters for BQ76920 AFE set!\n\r
      +                          ");
  4060  144B  30E8               	movlw	low (STR_6| (0+32768))
  4061  144C  00F2               	movwf	EUSART_Write_Text@text
  4062  144D  30A0               	movlw	high (STR_6| (0+32768))
  4063  144E  00F3               	movwf	EUSART_Write_Text@text+1
  4064  144F  319A  2234  3193   	fcall	_EUSART_Write_Text
  4065                           
  4066                           ;main.c: 137:             EUSART_Write_Text("Now reading AFE data at regular intervals.\
      +                          n\r");
  4067  1452  3065               	movlw	low (STR_7| (0+32768))
  4068  1453  00F2               	movwf	EUSART_Write_Text@text
  4069  1454  30A0               	movlw	high (STR_7| (0+32768))
  4070  1455  00F3               	movwf	EUSART_Write_Text@text+1
  4071  1456  319A  2234  3193   	fcall	_EUSART_Write_Text
  4072                           
  4073                           ;main.c: 139:             RGB_color(1);
  4074  1459  3001               	movlw	1
  4075  145A  00F1               	movwf	RGB_color@color
  4076  145B  3000               	movlw	0
  4077  145C  00F2               	movwf	RGB_color@color+1
  4078  145D  319A  2286         	fcall	_RGB_color
  4079                           
  4080                           ;main.c: 140:             currState = 2;
  4081  145F  3002               	movlw	2
  4082  1460  0021               	movlb	1	; select bank1
  4083  1461  00DA               	movwf	??_statemachine^(0+128)
  4084  1462  085A               	movf	??_statemachine^(0+128),w
  4085  1463  00EE               	movwf	_currState^(0+128)
  4086                           
  4087                           ;main.c: 141:             break;
  4088  1464  0008               	return
  4089  1465                     l5282:	
  4090  1465  0021               	movlb	1	; select bank1
  4091  1466  086E               	movf	_currState^(0+128),w
  4092  1467  00DA               	movwf	??_statemachine^(0+128)
  4093  1468  01DB               	clrf	(??_statemachine^(0+128)+1)
  4094                           
  4095                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4096                           ; Switch size 1, requested type "simple"
  4097                           ; Number of cases is 1, Range of values is 0 to 0
  4098                           ; switch strategies available:
  4099                           ; Name         Instructions Cycles
  4100                           ; simple_byte            4     3 (average)
  4101                           ; direct_byte            8     6 (fixed)
  4102                           ; jumptable            260     6 (fixed)
  4103                           ;	Chosen strategy is simple_byte
  4104  1469  085B               	movf	(??_statemachine+1)^(0+128),w
  4105  146A  3A00               	xorlw	0	; case 0
  4106  146B  1903               	skipnz
  4107  146C  2C6E               	goto	l5404
  4108  146D  2C79               	goto	l135
  4109  146E                     l5404:	
  4110                           
  4111                           ; Switch size 1, requested type "simple"
  4112                           ; Number of cases is 3, Range of values is 0 to 2
  4113                           ; switch strategies available:
  4114                           ; Name         Instructions Cycles
  4115                           ; simple_byte           10     6 (average)
  4116                           ; direct_byte           12     6 (fixed)
  4117                           ; jumptable            260     6 (fixed)
  4118                           ;	Chosen strategy is simple_byte
  4119  146E  085A               	movf	??_statemachine^(0+128),w
  4120  146F  3A00               	xorlw	0	; case 0
  4121  1470  1903               	skipnz
  4122  1471  2BB5               	goto	l5234
  4123  1472  3A01               	xorlw	1	; case 1
  4124  1473  1903               	skipnz
  4125  1474  2C15               	goto	l5264
  4126  1475  3A03               	xorlw	3	; case 2
  4127  1476  1903               	skipnz
  4128  1477  2C79               	goto	l135
  4129  1478  2C79               	goto	l135
  4130  1479                     l135:	
  4131  1479  0008               	return
  4132  147A                     __end_of_statemachine:	
  4133                           
  4134                           	psect	text2
  4135  1A1C                     __ptext2:	
  4136 ;; *************** function _snprintf *****************
  4137 ;; Defined at:
  4138 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\snprintf.c"
  4139 ;; Parameters:    Size  Location     Type
  4140 ;;  s               2   44[BANK1 ] PTR unsigned char 
  4141 ;;		 -> messageBuffer(127), 
  4142 ;;  n               2   46[BANK1 ] unsigned int 
  4143 ;;  fmt             2   48[BANK1 ] PTR const unsigned char 
  4144 ;;		 -> STR_5(43), STR_3(43), 
  4145 ;; Auto vars:     Size  Location     Type
  4146 ;;  ret             2    0        int 
  4147 ;;  ap              1   57[BANK1 ] PTR void [1]
  4148 ;;		 -> ?_snprintf(2), 
  4149 ;; Return value:  Size  Location     Type
  4150 ;;                  2   44[BANK1 ] int 
  4151 ;; Registers used:
  4152 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4153 ;; Tracked objects:
  4154 ;;		On entry : 0/0
  4155 ;;		On exit  : 0/0
  4156 ;;		Unchanged: 0/0
  4157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4158 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4159 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4160 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4161 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4162 ;;Total ram usage:       14 bytes
  4163 ;; Hardware stack levels used:    1
  4164 ;; Hardware stack levels required when called:    9
  4165 ;; This function calls:
  4166 ;;		_vsnprintf
  4167 ;; This function is called by:
  4168 ;;		_statemachine
  4169 ;; This function uses a non-reentrant model
  4170 ;;
  4171                           
  4172                           
  4173                           ;psect for function _snprintf
  4174  1A1C                     _snprintf:	
  4175                           
  4176                           ;incstack = 0
  4177                           ; Regs used in _snprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4178  1A1C  30D2               	movlw	(low ((?_snprintf| 0+6)))& (0+255)
  4179  1A1D  0021               	movlb	1	; select bank1
  4180  1A1E  00D6               	movwf	??_snprintf^(0+128)
  4181  1A1F  0856               	movf	??_snprintf^(0+128),w
  4182  1A20  00D9               	movwf	snprintf@ap^(0+128)
  4183  1A21  084D               	movf	(snprintf@s+1)^(0+128),w
  4184  1A22  00BA               	movwf	(vsnprintf@s+1)^(0+128)
  4185  1A23  084C               	movf	snprintf@s^(0+128),w
  4186  1A24  00B9               	movwf	vsnprintf@s^(0+128)
  4187  1A25  084F               	movf	(snprintf@n+1)^(0+128),w
  4188  1A26  00BC               	movwf	(vsnprintf@n+1)^(0+128)
  4189  1A27  084E               	movf	snprintf@n^(0+128),w
  4190  1A28  00BB               	movwf	vsnprintf@n^(0+128)
  4191  1A29  0851               	movf	(snprintf@fmt+1)^(0+128),w
  4192  1A2A  00BE               	movwf	(vsnprintf@fmt+1)^(0+128)
  4193  1A2B  0850               	movf	snprintf@fmt^(0+128),w
  4194  1A2C  00BD               	movwf	vsnprintf@fmt^(0+128)
  4195  1A2D  30D9               	movlw	(low (snprintf@ap| 0))& (0+255)
  4196  1A2E  00D6               	movwf	??_snprintf^(0+128)
  4197  1A2F  0856               	movf	??_snprintf^(0+128),w
  4198  1A30  00BF               	movwf	vsnprintf@ap^(0+128)
  4199  1A31  319D  25EA         	fcall	_vsnprintf
  4200  1A33  0008               	return
  4201  1A34                     __end_of_snprintf:	
  4202                           
  4203                           	psect	text3
  4204  1DEA                     __ptext3:	
  4205 ;; *************** function _vsnprintf *****************
  4206 ;; Defined at:
  4207 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_vsnprintf.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;  s               2   25[BANK1 ] PTR unsigned char 
  4210 ;;		 -> messageBuffer(127), 
  4211 ;;  n               2   27[BANK1 ] unsigned int 
  4212 ;;  fmt             2   29[BANK1 ] PTR const unsigned char 
  4213 ;;		 -> STR_5(43), STR_3(43), 
  4214 ;;  ap              1   31[BANK1 ] PTR PTR void 
  4215 ;;		 -> snprintf@ap(1), 
  4216 ;; Auto vars:     Size  Location     Type
  4217 ;;  f               6   38[BANK1 ] struct _IO_FILE
  4218 ;;  cnt             2   36[BANK1 ] int 
  4219 ;; Return value:  Size  Location     Type
  4220 ;;                  2   25[BANK1 ] int 
  4221 ;; Registers used:
  4222 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4223 ;; Tracked objects:
  4224 ;;		On entry : 0/0
  4225 ;;		On exit  : 0/0
  4226 ;;		Unchanged: 0/0
  4227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4228 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4229 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4230 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4231 ;;      Totals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4232 ;;Total ram usage:       19 bytes
  4233 ;; Hardware stack levels used:    1
  4234 ;; Hardware stack levels required when called:    8
  4235 ;; This function calls:
  4236 ;;		_vfprintf
  4237 ;; This function is called by:
  4238 ;;		_snprintf
  4239 ;; This function uses a non-reentrant model
  4240 ;;
  4241                           
  4242                           
  4243                           ;psect for function _vsnprintf
  4244  1DEA                     _vsnprintf:	
  4245                           
  4246                           ;incstack = 0
  4247                           ; Regs used in _vsnprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4248  1DEA  3080               	movlw	128
  4249  1DEB  0021               	movlb	1	; select bank1
  4250  1DEC  023C               	subwf	(vsnprintf@n+1)^(0+128),w
  4251  1DED  3000               	movlw	0
  4252  1DEE  1903               	skipnz
  4253  1DEF  023B               	subwf	vsnprintf@n^(0+128),w
  4254  1DF0  1C03               	skipc
  4255  1DF1  2DFD               	goto	l5140
  4256  1DF2  304B               	movlw	75
  4257  1DF3  0022               	movlb	2	; select bank2
  4258  1DF4  00AA               	movwf	_errno^(0+256)
  4259  1DF5  3000               	movlw	0
  4260  1DF6  00AB               	movwf	(_errno^(0+256)+1)
  4261  1DF7  30FF               	movlw	255
  4262  1DF8  0021               	movlb	1	; select bank1
  4263  1DF9  00B9               	movwf	?_vsnprintf^(0+128)
  4264  1DFA  30FF               	movlw	255
  4265  1DFB  00BA               	movwf	(?_vsnprintf^(0+128)+1)
  4266  1DFC  0008               	return
  4267  1DFD                     l5140:	
  4268  1DFD  083A               	movf	(vsnprintf@s+1)^(0+128),w
  4269  1DFE  00C7               	movwf	(vsnprintf@f+1)^(0+128)
  4270  1DFF  0839               	movf	vsnprintf@s^(0+128),w
  4271  1E00  00C6               	movwf	vsnprintf@f^(0+128)
  4272  1E01  3000               	movlw	0
  4273  1E02  023C               	subwf	(vsnprintf@n+1)^(0+128),w
  4274  1E03  3002               	movlw	2
  4275  1E04  1903               	skipnz
  4276  1E05  023B               	subwf	vsnprintf@n^(0+128),w
  4277  1E06  1C03               	skipc
  4278  1E07  2E11               	goto	l5146
  4279  1E08  083B               	movf	vsnprintf@n^(0+128),w
  4280  1E09  3EFF               	addlw	255
  4281  1E0A  00CA               	movwf	(vsnprintf@f^(0+128)+4)
  4282  1E0B  30FF               	movlw	255
  4283  1E0C  3D3C               	addwfc	(vsnprintf@n+1)^(0+128),w
  4284  1E0D  00CB               	movwf	((vsnprintf@f+1)^(0+128)+4)
  4285  1E0E  01C8               	clrf	(vsnprintf@f^(0+128)+2)
  4286  1E0F  01C9               	clrf	((vsnprintf@f+1)^(0+128)+2)
  4287  1E10  2E19               	goto	l5148
  4288  1E11                     l5146:	
  4289  1E11  3001               	movlw	1
  4290  1E12  00CA               	movwf	(vsnprintf@f^(0+128)+4)
  4291  1E13  3000               	movlw	0
  4292  1E14  00CB               	movwf	(vsnprintf@f^(0+128)+5)
  4293  1E15  3001               	movlw	1
  4294  1E16  00C8               	movwf	(vsnprintf@f^(0+128)+2)
  4295  1E17  3000               	movlw	0
  4296  1E18  00C9               	movwf	(vsnprintf@f^(0+128)+3)
  4297  1E19                     l5148:	
  4298  1E19  30C6               	movlw	low vsnprintf@f
  4299  1E1A  0020               	movlb	0	; select bank0
  4300  1E1B  00E7               	movwf	vfprintf@fp
  4301  1E1C  3000               	movlw	high vsnprintf@f
  4302  1E1D  00E8               	movwf	vfprintf@fp+1
  4303  1E1E  0021               	movlb	1	; select bank1
  4304  1E1F  083E               	movf	(vsnprintf@fmt+1)^(0+128),w
  4305  1E20  0020               	movlb	0	; select bank0
  4306  1E21  00EA               	movwf	vfprintf@fmt+1
  4307  1E22  0021               	movlb	1	; select bank1
  4308  1E23  083D               	movf	vsnprintf@fmt^(0+128),w
  4309  1E24  0020               	movlb	0	; select bank0
  4310  1E25  00E9               	movwf	vfprintf@fmt
  4311  1E26  0021               	movlb	1	; select bank1
  4312  1E27  083F               	movf	vsnprintf@ap^(0+128),w
  4313  1E28  00C0               	movwf	??_vsnprintf^(0+128)
  4314  1E29  0840               	movf	??_vsnprintf^(0+128),w
  4315  1E2A  0020               	movlb	0	; select bank0
  4316  1E2B  00EB               	movwf	vfprintf@ap
  4317  1E2C  319B  2394  319D   	fcall	_vfprintf
  4318  1E2F  0020               	movlb	0	; select bank0
  4319  1E30  0868               	movf	?_vfprintf+1,w
  4320  1E31  0021               	movlb	1	; select bank1
  4321  1E32  00C5               	movwf	(vsnprintf@cnt+1)^(0+128)
  4322  1E33  0020               	movlb	0	; select bank0
  4323  1E34  0867               	movf	?_vfprintf,w
  4324  1E35  0021               	movlb	1	; select bank1
  4325  1E36  00C4               	movwf	vsnprintf@cnt^(0+128)
  4326  1E37  083B               	movf	vsnprintf@n^(0+128),w
  4327  1E38  043C               	iorwf	(vsnprintf@n+1)^(0+128),w
  4328  1E39  1D03               	btfss	3,2
  4329  1E3A  1BC5               	btfsc	(vsnprintf@cnt+1)^(0+128),7
  4330  1E3B  2E5C               	goto	l5162
  4331  1E3C  083B               	movf	vsnprintf@n^(0+128),w
  4332  1E3D  3EFF               	addlw	255
  4333  1E3E  00C0               	movwf	??_vsnprintf^(0+128)
  4334  1E3F  30FF               	movlw	255
  4335  1E40  3D3C               	addwfc	(vsnprintf@n+1)^(0+128),w
  4336  1E41  00C1               	movwf	(??_vsnprintf+1)^(0+128)
  4337  1E42  0841               	movf	(??_vsnprintf+1)^(0+128),w
  4338  1E43  0245               	subwf	(vsnprintf@cnt+1)^(0+128),w
  4339  1E44  1D03               	skipz
  4340  1E45  2E48               	goto	u6235
  4341  1E46  0840               	movf	??_vsnprintf^(0+128),w
  4342  1E47  0244               	subwf	vsnprintf@cnt^(0+128),w
  4343  1E48                     u6235:	
  4344  1E48  1C03               	skipc
  4345  1E49  2E51               	goto	l5158
  4346  1E4A  083B               	movf	vsnprintf@n^(0+128),w
  4347  1E4B  3EFF               	addlw	255
  4348  1E4C  00C2               	movwf	_vsnprintf$1530^(0+128)
  4349  1E4D  30FF               	movlw	255
  4350  1E4E  3D3C               	addwfc	(vsnprintf@n+1)^(0+128),w
  4351  1E4F  00C3               	movwf	(_vsnprintf$1530+1)^(0+128)
  4352  1E50  2E55               	goto	l5160
  4353  1E51                     l5158:	
  4354  1E51  0845               	movf	(vsnprintf@cnt+1)^(0+128),w
  4355  1E52  00C3               	movwf	(_vsnprintf$1530+1)^(0+128)
  4356  1E53  0844               	movf	vsnprintf@cnt^(0+128),w
  4357  1E54  00C2               	movwf	_vsnprintf$1530^(0+128)
  4358  1E55                     l5160:	
  4359  1E55  0842               	movf	_vsnprintf$1530^(0+128),w
  4360  1E56  0739               	addwf	vsnprintf@s^(0+128),w
  4361  1E57  0086               	movwf	6
  4362  1E58  0843               	movf	(_vsnprintf$1530+1)^(0+128),w
  4363  1E59  3D3A               	addwfc	(vsnprintf@s+1)^(0+128),w
  4364  1E5A  0087               	movwf	7
  4365  1E5B  0181               	clrf	1
  4366  1E5C                     l5162:	
  4367  1E5C  0845               	movf	(vsnprintf@cnt+1)^(0+128),w
  4368  1E5D  00BA               	movwf	(?_vsnprintf+1)^(0+128)
  4369  1E5E  0844               	movf	vsnprintf@cnt^(0+128),w
  4370  1E5F  00B9               	movwf	?_vsnprintf^(0+128)
  4371  1E60  0008               	return
  4372  1E61                     __end_of_vsnprintf:	
  4373                           
  4374                           	psect	text4
  4375  1B94                     __ptext4:	
  4376 ;; *************** function _vfprintf *****************
  4377 ;; Defined at:
  4378 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4379 ;; Parameters:    Size  Location     Type
  4380 ;;  fp              2   71[BANK0 ] PTR struct _IO_FILE
  4381 ;;		 -> vsnprintf@f(6), 
  4382 ;;  fmt             2   73[BANK0 ] PTR const unsigned char 
  4383 ;;		 -> STR_5(43), STR_3(43), 
  4384 ;;  ap              1   75[BANK0 ] PTR PTR void 
  4385 ;;		 -> snprintf@ap(1), 
  4386 ;; Auto vars:     Size  Location     Type
  4387 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  4388 ;;		 -> STR_5(43), STR_3(43), 
  4389 ;; Return value:  Size  Location     Type
  4390 ;;                  2   71[BANK0 ] int 
  4391 ;; Registers used:
  4392 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4393 ;; Tracked objects:
  4394 ;;		On entry : 0/0
  4395 ;;		On exit  : 0/0
  4396 ;;		Unchanged: 0/0
  4397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4398 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4399 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4400 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4401 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4402 ;;Total ram usage:        9 bytes
  4403 ;; Hardware stack levels used:    1
  4404 ;; Hardware stack levels required when called:    7
  4405 ;; This function calls:
  4406 ;;		_vfpfcnvrt
  4407 ;; This function is called by:
  4408 ;;		_vsnprintf
  4409 ;; This function uses a non-reentrant model
  4410 ;;
  4411                           
  4412                           
  4413                           ;psect for function _vfprintf
  4414  1B94                     _vfprintf:	
  4415                           
  4416                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4417                           
  4418                           ;incstack = 0
  4419                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4420  1B94  0020               	movlb	0	; select bank0
  4421  1B95  086A               	movf	vfprintf@fmt+1,w
  4422  1B96  00EF               	movwf	vfprintf@cfmt+1
  4423  1B97  0869               	movf	vfprintf@fmt,w
  4424  1B98  00EE               	movwf	vfprintf@cfmt
  4425                           
  4426                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  4427  1B99  0021               	movlb	1	; select bank1
  4428  1B9A  01DD               	clrf	_nout^(0+128)
  4429  1B9B  01DE               	clrf	(_nout+1)^(0+128)
  4430  1B9C                     l5046:	
  4431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4432                           
  4433                           
  4434                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4435  1B9C  0020               	movlb	0	; select bank0
  4436  1B9D  086E               	movf	vfprintf@cfmt,w
  4437  1B9E  0084               	movwf	4
  4438  1B9F  086F               	movf	vfprintf@cfmt+1,w
  4439  1BA0  0085               	movwf	5
  4440  1BA1  0012               	moviw fsr0++
  4441  1BA2  1903               	btfsc	3,2
  4442  1BA3  2BBC               	goto	l5048
  4443                           
  4444                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  4445  1BA4  0868               	movf	vfprintf@fp+1,w
  4446  1BA5  00D8               	movwf	vfpfcnvrt@fp+1
  4447  1BA6  0867               	movf	vfprintf@fp,w
  4448  1BA7  00D7               	movwf	vfpfcnvrt@fp
  4449  1BA8  306E               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  4450  1BA9  00EC               	movwf	??_vfprintf
  4451  1BAA  086C               	movf	??_vfprintf,w
  4452  1BAB  00D9               	movwf	vfpfcnvrt@fmt
  4453  1BAC  086B               	movf	vfprintf@ap,w
  4454  1BAD  00ED               	movwf	??_vfprintf+1
  4455  1BAE  086D               	movf	??_vfprintf+1,w
  4456  1BAF  00DA               	movwf	vfpfcnvrt@ap
  4457  1BB0  3180  2058  319B   	fcall	_vfpfcnvrt
  4458  1BB3  0020               	movlb	0	; select bank0
  4459  1BB4  0857               	movf	?_vfpfcnvrt,w
  4460  1BB5  0021               	movlb	1	; select bank1
  4461  1BB6  07DD               	addwf	_nout^(0+128),f
  4462  1BB7  0020               	movlb	0	; select bank0
  4463  1BB8  0858               	movf	?_vfpfcnvrt+1,w
  4464  1BB9  0021               	movlb	1	; select bank1
  4465  1BBA  3DDE               	addwfc	(_nout+1)^(0+128),f
  4466  1BBB  2B9C               	goto	l5046
  4467  1BBC                     l5048:	
  4468                           
  4469                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  4470  1BBC  0021               	movlb	1	; select bank1
  4471  1BBD  085E               	movf	(_nout+1)^(0+128),w
  4472  1BBE  0020               	movlb	0	; select bank0
  4473  1BBF  00E8               	movwf	?_vfprintf+1
  4474  1BC0  0021               	movlb	1	; select bank1
  4475  1BC1  085D               	movf	_nout^(0+128),w
  4476  1BC2  0020               	movlb	0	; select bank0
  4477  1BC3  00E7               	movwf	?_vfprintf
  4478  1BC4  0008               	return
  4479  1BC5                     __end_of_vfprintf:	
  4480                           
  4481                           	psect	text5
  4482  0058                     __ptext5:	
  4483 ;; *************** function _vfpfcnvrt *****************
  4484 ;; Defined at:
  4485 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4486 ;; Parameters:    Size  Location     Type
  4487 ;;  fp              2   55[BANK0 ] PTR struct _IO_FILE
  4488 ;;		 -> vsnprintf@f(6), 
  4489 ;;  fmt             1   57[BANK0 ] PTR PTR unsigned char 
  4490 ;;		 -> vfprintf@cfmt(2), 
  4491 ;;  ap              1   58[BANK0 ] PTR PTR void 
  4492 ;;		 -> snprintf@ap(1), 
  4493 ;; Auto vars:     Size  Location     Type
  4494 ;;  llu             8   17[BANK1 ] unsigned long long 
  4495 ;;  ll              8    7[BANK1 ] long long 
  4496 ;;  f               4    0        long long 
  4497 ;;  ct              3    0        unsigned char [3]
  4498 ;;  done            2    1[BANK1 ] int 
  4499 ;;  i               2    0        int 
  4500 ;;  c               1   16[BANK1 ] unsigned char 
  4501 ;;  vp              1   15[BANK1 ] PTR void 
  4502 ;;		 -> ?_snprintf(2), 
  4503 ;;  cp              1    0[BANK1 ] PTR unsigned char 
  4504 ;;		 -> ?_snprintf(2), 
  4505 ;; Return value:  Size  Location     Type
  4506 ;;                  2   55[BANK0 ] int 
  4507 ;; Registers used:
  4508 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4509 ;; Tracked objects:
  4510 ;;		On entry : 0/0
  4511 ;;		On exit  : 0/0
  4512 ;;		Unchanged: 0/0
  4513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4514 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4515 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4516 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4517 ;;      Totals:         0      16      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4518 ;;Total ram usage:       41 bytes
  4519 ;; Hardware stack levels used:    1
  4520 ;; Hardware stack levels required when called:    6
  4521 ;; This function calls:
  4522 ;;		_atoi
  4523 ;;		_ctoa
  4524 ;;		_dtoa
  4525 ;;		_fputc
  4526 ;;		_isdigit
  4527 ;;		_otoa
  4528 ;;		_stoa
  4529 ;;		_strncmp
  4530 ;;		_utoa
  4531 ;;		_xtoa
  4532 ;; This function is called by:
  4533 ;;		_vfprintf
  4534 ;; This function uses a non-reentrant model
  4535 ;;
  4536                           
  4537                           
  4538                           ;psect for function _vfpfcnvrt
  4539  0058                     _vfpfcnvrt:	
  4540                           
  4541                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4542                           
  4543                           ;incstack = 0
  4544                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4545  0058  0020               	movlb	0	; select bank0
  4546  0059  0859               	movf	vfpfcnvrt@fmt,w
  4547  005A  0086               	movwf	6
  4548  005B  0187               	clrf	7
  4549  005C  3F40               	moviw [0]fsr1
  4550  005D  00DB               	movwf	??_vfpfcnvrt
  4551  005E  3F41               	moviw [1]fsr1
  4552  005F  00DC               	movwf	??_vfpfcnvrt+1
  4553  0060  085B               	movf	??_vfpfcnvrt,w
  4554  0061  0084               	movwf	4
  4555  0062  085C               	movf	??_vfpfcnvrt+1,w
  4556  0063  0085               	movwf	5
  4557  0064  0012               	moviw fsr0++
  4558  0065  3A25               	xorlw	37
  4559  0066  1D03               	btfss	3,2
  4560  0067  29F8               	goto	L4
  4561                           
  4562                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  4563  0068  0859               	movf	vfpfcnvrt@fmt,w
  4564  0069  0086               	movwf	6
  4565  006A  0187               	clrf	7
  4566  006B  3001               	movlw	1
  4567  006C  0781               	addwf	1,f
  4568  006D  3141               	addfsr 1,1
  4569  006E  1803               	skipnc
  4570  006F  0A81               	incf	1,f
  4571                           
  4572                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  4573  0070  0021               	movlb	1	; select bank1
  4574  0071  01DF               	clrf	_width^(0+128)
  4575  0072  01E0               	clrf	(_width+1)^(0+128)
  4576  0073  01E3               	clrf	_flags^(0+128)
  4577  0074  01E4               	clrf	(_flags+1)^(0+128)
  4578                           
  4579                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  4580  0075  30FF               	movlw	255
  4581  0076  00E1               	movwf	_prec^(0+128)
  4582  0077  30FF               	movlw	255
  4583  0078  00E2               	movwf	(_prec^(0+128)+1)
  4584                           
  4585                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  4586  0079  01A1               	clrf	vfpfcnvrt@done^(0+128)
  4587  007A  01A2               	clrf	(vfpfcnvrt@done+1)^(0+128)
  4588                           
  4589                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  4590  007B  2899               	goto	l4644
  4591  007C                     l617:	
  4592                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 691:       
      +                                    case '-' :
  4593                           
  4594                           
  4595                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  4596  007C  0021               	movlb	1	; select bank1
  4597  007D  1463               	bsf	_flags^(0+128),0
  4598  007E                     l4628:	
  4599                           
  4600                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  4601  007E  0020               	movlb	0	; select bank0
  4602  007F  0859               	movf	vfpfcnvrt@fmt,w
  4603  0080  0086               	movwf	6
  4604  0081  0187               	clrf	7
  4605  0082  3001               	movlw	1
  4606  0083  0781               	addwf	1,f
  4607  0084  3141               	addfsr 1,1
  4608  0085  1803               	skipnc
  4609  0086  0A81               	incf	1,f
  4610                           
  4611                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  4612  0087  2899               	goto	l4644
  4613  0088                     l619:	
  4614                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 695:       
      +                                    case '0' :
  4615                           
  4616                           
  4617                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  4618  0088  0021               	movlb	1	; select bank1
  4619  0089  14E3               	bsf	_flags^(0+128),1
  4620  008A  287E               	goto	l4628
  4621  008B                     l620:	
  4622                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 699:       
      +                                    case '+' :
  4623                           
  4624                           
  4625                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  4626  008B  0021               	movlb	1	; select bank1
  4627  008C  1563               	bsf	_flags^(0+128),2
  4628  008D  287E               	goto	l4628
  4629  008E                     l621:	
  4630                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 703:       
      +                                    case ' ' :
  4631                           
  4632                           
  4633                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  4634  008E  0021               	movlb	1	; select bank1
  4635  008F  15E3               	bsf	_flags^(0+128),3
  4636  0090  287E               	goto	l4628
  4637  0091                     l622:	
  4638                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 707:       
      +                                    case '#' :
  4639                           
  4640                           
  4641                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  4642  0091  0021               	movlb	1	; select bank1
  4643  0092  1663               	bsf	_flags^(0+128),4
  4644  0093  287E               	goto	l4628
  4645  0094                     l4638:	
  4646                           
  4647                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  4648  0094  3001               	movlw	1
  4649  0095  0021               	movlb	1	; select bank1
  4650  0096  00A1               	movwf	vfpfcnvrt@done^(0+128)
  4651  0097  3000               	movlw	0
  4652  0098  00A2               	movwf	(vfpfcnvrt@done^(0+128)+1)
  4653  0099                     l4644:	
  4654                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  4655                           
  4656                           
  4657                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  4658  0099  0021               	movlb	1	; select bank1
  4659  009A  0821               	movf	vfpfcnvrt@done^(0+128),w
  4660  009B  0422               	iorwf	(vfpfcnvrt@done+1)^(0+128),w
  4661  009C  1D03               	btfss	3,2
  4662  009D  28C4               	goto	l624
  4663  009E  0020               	movlb	0	; select bank0
  4664  009F  0859               	movf	vfpfcnvrt@fmt,w
  4665  00A0  0086               	movwf	6
  4666  00A1  0187               	clrf	7
  4667  00A2  3F40               	moviw [0]fsr1
  4668  00A3  00DB               	movwf	??_vfpfcnvrt
  4669  00A4  3F41               	moviw [1]fsr1
  4670  00A5  00DC               	movwf	??_vfpfcnvrt+1
  4671  00A6  085B               	movf	??_vfpfcnvrt,w
  4672  00A7  0084               	movwf	4
  4673  00A8  085C               	movf	??_vfpfcnvrt+1,w
  4674  00A9  0085               	movwf	5
  4675  00AA  0800               	movf	0,w	;code access
  4676  00AB  00DD               	movwf	??_vfpfcnvrt+2
  4677  00AC  01DE               	clrf	??_vfpfcnvrt+3
  4678                           
  4679                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4680                           ; Switch size 1, requested type "simple"
  4681                           ; Number of cases is 1, Range of values is 0 to 0
  4682                           ; switch strategies available:
  4683                           ; Name         Instructions Cycles
  4684                           ; simple_byte            4     3 (average)
  4685                           ; direct_byte            8     6 (fixed)
  4686                           ; jumptable            260     6 (fixed)
  4687                           ;	Chosen strategy is simple_byte
  4688  00AD  085E               	movf	??_vfpfcnvrt+3,w
  4689  00AE  3A00               	xorlw	0	; case 0
  4690  00AF  1903               	skipnz
  4691  00B0  28B2               	goto	l5406
  4692  00B1  2894               	goto	l4638
  4693  00B2                     l5406:	
  4694                           
  4695                           ; Switch size 1, requested type "simple"
  4696                           ; Number of cases is 5, Range of values is 32 to 48
  4697                           ; switch strategies available:
  4698                           ; Name         Instructions Cycles
  4699                           ; simple_byte           16     9 (average)
  4700                           ; direct_byte           43     9 (fixed)
  4701                           ; jumptable            263     9 (fixed)
  4702                           ;	Chosen strategy is simple_byte
  4703  00B2  085D               	movf	??_vfpfcnvrt+2,w
  4704  00B3  3A20               	xorlw	32	; case 32
  4705  00B4  1903               	skipnz
  4706  00B5  288E               	goto	l621
  4707  00B6  3A03               	xorlw	3	; case 35
  4708  00B7  1903               	skipnz
  4709  00B8  2891               	goto	l622
  4710  00B9  3A08               	xorlw	8	; case 43
  4711  00BA  1903               	skipnz
  4712  00BB  288B               	goto	l620
  4713  00BC  3A06               	xorlw	6	; case 45
  4714  00BD  1903               	skipnz
  4715  00BE  287C               	goto	l617
  4716  00BF  3A1D               	xorlw	29	; case 48
  4717  00C0  1903               	skipnz
  4718  00C1  2888               	goto	l619
  4719  00C2  2894               	goto	l4638
  4720  00C3  2899               	goto	l4644
  4721  00C4                     l624:	
  4722                           
  4723                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  4724  00C4  1C63               	btfss	_flags^(0+128),0
  4725  00C5  28CA               	goto	l4648
  4726                           
  4727                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  4728  00C6  30FD               	movlw	253
  4729  00C7  05E3               	andwf	_flags^(0+128),f
  4730  00C8  30FF               	movlw	255
  4731  00C9  05E4               	andwf	(_flags+1)^(0+128),f
  4732  00CA                     l4648:	
  4733                           
  4734                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  4735  00CA  0020               	movlb	0	; select bank0
  4736  00CB  0859               	movf	vfpfcnvrt@fmt,w
  4737  00CC  0086               	movwf	6
  4738  00CD  0187               	clrf	7
  4739  00CE  3F40               	moviw [0]fsr1
  4740  00CF  00DB               	movwf	??_vfpfcnvrt
  4741  00D0  3F41               	moviw [1]fsr1
  4742  00D1  00DC               	movwf	??_vfpfcnvrt+1
  4743  00D2  085B               	movf	??_vfpfcnvrt,w
  4744  00D3  0084               	movwf	4
  4745  00D4  085C               	movf	??_vfpfcnvrt+1,w
  4746  00D5  0085               	movwf	5
  4747  00D6  0012               	moviw fsr0++
  4748  00D7  3A2A               	xorlw	42
  4749  00D8  1D03               	btfss	3,2
  4750  00D9  28F8               	goto	l4660
  4751                           
  4752                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  4753  00DA  0859               	movf	vfpfcnvrt@fmt,w
  4754  00DB  0086               	movwf	6
  4755  00DC  0187               	clrf	7
  4756  00DD  3001               	movlw	1
  4757  00DE  0781               	addwf	1,f
  4758  00DF  3141               	addfsr 1,1
  4759  00E0  1803               	skipnc
  4760  00E1  0A81               	incf	1,f
  4761                           
  4762                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4763  00E2  085A               	movf	vfpfcnvrt@ap,w
  4764  00E3  0086               	movwf	6
  4765  00E4  0187               	clrf	7
  4766  00E5  0801               	movf	1,w
  4767  00E6  0084               	movwf	4
  4768  00E7  0185               	clrf	5
  4769  00E8  3002               	movlw	2
  4770  00E9  0781               	addwf	1,f
  4771  00EA  3F00               	moviw [0]fsr0
  4772  00EB  0021               	movlb	1	; select bank1
  4773  00EC  00DF               	movwf	_width^(0+128)
  4774  00ED  3F01               	moviw [1]fsr0
  4775  00EE  00E0               	movwf	(_width+1)^(0+128)
  4776                           
  4777                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  4778  00EF  1FE0               	btfss	(_width+1)^(0+128),7
  4779  00F0  293B               	goto	l4670
  4780                           
  4781                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  4782  00F1  1463               	bsf	_flags^(0+128),0
  4783                           
  4784                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  4785  00F2  09DF               	comf	_width^(0+128),f
  4786  00F3  09E0               	comf	(_width+1)^(0+128),f
  4787  00F4  0ADF               	incf	_width^(0+128),f
  4788  00F5  1903               	skipnz
  4789  00F6  0AE0               	incf	(_width+1)^(0+128),f
  4790  00F7  293B               	goto	l4670
  4791  00F8                     l4660:	
  4792                           
  4793                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  4794  00F8  0859               	movf	vfpfcnvrt@fmt,w
  4795  00F9  0086               	movwf	6
  4796  00FA  0187               	clrf	7
  4797  00FB  3F40               	moviw [0]fsr1
  4798  00FC  00F7               	movwf	atoi@s
  4799  00FD  3F41               	moviw [1]fsr1
  4800  00FE  00F8               	movwf	atoi@s+1
  4801  00FF  319F  275F  3180   	fcall	_atoi
  4802  0102  0878               	movf	?_atoi+1,w
  4803  0103  0021               	movlb	1	; select bank1
  4804  0104  00E0               	movwf	(_width+1)^(0+128)
  4805  0105  0877               	movf	?_atoi,w
  4806  0106  00DF               	movwf	_width^(0+128)
  4807                           
  4808                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4809  0107  2911               	goto	l4664
  4810  0108                     l4662:	
  4811                           
  4812                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  4813  0108  0020               	movlb	0	; select bank0
  4814  0109  0859               	movf	vfpfcnvrt@fmt,w
  4815  010A  0086               	movwf	6
  4816  010B  0187               	clrf	7
  4817  010C  3001               	movlw	1
  4818  010D  0781               	addwf	1,f
  4819  010E  3141               	addfsr 1,1
  4820  010F  1803               	skipnc
  4821  0110  0A81               	incf	1,f
  4822  0111                     l4664:	
  4823  0111  0020               	movlb	0	; select bank0
  4824  0112  0859               	movf	vfpfcnvrt@fmt,w
  4825  0113  0086               	movwf	6
  4826  0114  0187               	clrf	7
  4827  0115  3F40               	moviw [0]fsr1
  4828  0116  00DB               	movwf	??_vfpfcnvrt
  4829  0117  3F41               	moviw [1]fsr1
  4830  0118  00DC               	movwf	??_vfpfcnvrt+1
  4831  0119  085B               	movf	??_vfpfcnvrt,w
  4832  011A  0084               	movwf	4
  4833  011B  085C               	movf	??_vfpfcnvrt+1,w
  4834  011C  0085               	movwf	5
  4835  011D  0800               	movf	0,w	;code access
  4836  011E  3ED0               	addlw	208
  4837  011F  00DD               	movwf	??_vfpfcnvrt+2
  4838  0120  30FF               	movlw	255
  4839  0121  1803               	skipnc
  4840  0122  3000               	movlw	0
  4841  0123  00DE               	movwf	??_vfpfcnvrt+3
  4842  0124  3000               	movlw	0
  4843  0125  025E               	subwf	??_vfpfcnvrt+3,w
  4844  0126  300A               	movlw	10
  4845  0127  1903               	skipnz
  4846  0128  025D               	subwf	??_vfpfcnvrt+2,w
  4847  0129  1803               	btfsc	3,0
  4848  012A  292D               	goto	u5530
  4849  012B  3001               	movlw	1
  4850  012C  292E               	goto	u5540
  4851  012D                     u5530:	
  4852  012D  3000               	movlw	0
  4853  012E                     u5540:	
  4854  012E  00DF               	movwf	??_vfpfcnvrt+4
  4855  012F  01E0               	clrf	??_vfpfcnvrt+5
  4856  0130  085F               	movf	??_vfpfcnvrt+4,w
  4857  0131  0021               	movlb	1	; select bank1
  4858  0132  00A3               	movwf	_vfpfcnvrt$953^(0+128)
  4859  0133  0020               	movlb	0	; select bank0
  4860  0134  0860               	movf	??_vfpfcnvrt+5,w
  4861  0135  0021               	movlb	1	; select bank1
  4862  0136  00A4               	movwf	(_vfpfcnvrt$953+1)^(0+128)
  4863  0137  0823               	movf	_vfpfcnvrt$953^(0+128),w
  4864  0138  0424               	iorwf	(_vfpfcnvrt$953+1)^(0+128),w
  4865  0139  1D03               	btfss	3,2
  4866  013A  2908               	goto	l4662
  4867  013B                     l4670:	
  4868                           
  4869                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  4870  013B  0020               	movlb	0	; select bank0
  4871  013C  0859               	movf	vfpfcnvrt@fmt,w
  4872  013D  0086               	movwf	6
  4873  013E  0187               	clrf	7
  4874  013F  3F40               	moviw [0]fsr1
  4875  0140  00DB               	movwf	??_vfpfcnvrt
  4876  0141  3F41               	moviw [1]fsr1
  4877  0142  00DC               	movwf	??_vfpfcnvrt+1
  4878  0143  085B               	movf	??_vfpfcnvrt,w
  4879  0144  0084               	movwf	4
  4880  0145  085C               	movf	??_vfpfcnvrt+1,w
  4881  0146  0085               	movwf	5
  4882  0147  0012               	moviw fsr0++
  4883  0148  3A2E               	xorlw	46
  4884  0149  1D03               	btfss	3,2
  4885  014A  29BF               	goto	l4692
  4886                           
  4887                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  4888  014B  0021               	movlb	1	; select bank1
  4889  014C  01E1               	clrf	_prec^(0+128)
  4890  014D  01E2               	clrf	(_prec+1)^(0+128)
  4891                           
  4892                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  4893  014E  0020               	movlb	0	; select bank0
  4894  014F  0859               	movf	vfpfcnvrt@fmt,w
  4895  0150  0086               	movwf	6
  4896  0151  0187               	clrf	7
  4897  0152  3001               	movlw	1
  4898  0153  0781               	addwf	1,f
  4899  0154  3141               	addfsr 1,1
  4900  0155  1803               	skipnc
  4901  0156  0A81               	incf	1,f
  4902                           
  4903                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  4904  0157  0859               	movf	vfpfcnvrt@fmt,w
  4905  0158  0086               	movwf	6
  4906  0159  0187               	clrf	7
  4907  015A  3F40               	moviw [0]fsr1
  4908  015B  00DB               	movwf	??_vfpfcnvrt
  4909  015C  3F41               	moviw [1]fsr1
  4910  015D  00DC               	movwf	??_vfpfcnvrt+1
  4911  015E  085B               	movf	??_vfpfcnvrt,w
  4912  015F  0084               	movwf	4
  4913  0160  085C               	movf	??_vfpfcnvrt+1,w
  4914  0161  0085               	movwf	5
  4915  0162  0012               	moviw fsr0++
  4916  0163  3A2A               	xorlw	42
  4917  0164  1D03               	btfss	3,2
  4918  0165  297C               	goto	l4682
  4919                           
  4920                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  4921  0166  0859               	movf	vfpfcnvrt@fmt,w
  4922  0167  0086               	movwf	6
  4923  0168  0187               	clrf	7
  4924  0169  3001               	movlw	1
  4925  016A  0781               	addwf	1,f
  4926  016B  3141               	addfsr 1,1
  4927  016C  1803               	skipnc
  4928  016D  0A81               	incf	1,f
  4929                           
  4930                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4931  016E  085A               	movf	vfpfcnvrt@ap,w
  4932  016F  0086               	movwf	6
  4933  0170  0187               	clrf	7
  4934  0171  0801               	movf	1,w
  4935  0172  0084               	movwf	4
  4936  0173  0185               	clrf	5
  4937  0174  3002               	movlw	2
  4938  0175  0781               	addwf	1,f
  4939  0176  3F00               	moviw [0]fsr0
  4940  0177  0021               	movlb	1	; select bank1
  4941  0178  00E1               	movwf	_prec^(0+128)
  4942  0179  3F01               	moviw [1]fsr0
  4943  017A  00E2               	movwf	(_prec+1)^(0+128)
  4944                           
  4945                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  4946  017B  29BF               	goto	l4692
  4947  017C                     l4682:	
  4948                           
  4949                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  4950  017C  0859               	movf	vfpfcnvrt@fmt,w
  4951  017D  0086               	movwf	6
  4952  017E  0187               	clrf	7
  4953  017F  3F40               	moviw [0]fsr1
  4954  0180  00F7               	movwf	atoi@s
  4955  0181  3F41               	moviw [1]fsr1
  4956  0182  00F8               	movwf	atoi@s+1
  4957  0183  319F  275F  3180   	fcall	_atoi
  4958  0186  0878               	movf	?_atoi+1,w
  4959  0187  0021               	movlb	1	; select bank1
  4960  0188  00E2               	movwf	(_prec+1)^(0+128)
  4961  0189  0877               	movf	?_atoi,w
  4962  018A  00E1               	movwf	_prec^(0+128)
  4963                           
  4964                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4965  018B  2995               	goto	l4686
  4966  018C                     l4684:	
  4967                           
  4968                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  4969  018C  0020               	movlb	0	; select bank0
  4970  018D  0859               	movf	vfpfcnvrt@fmt,w
  4971  018E  0086               	movwf	6
  4972  018F  0187               	clrf	7
  4973  0190  3001               	movlw	1
  4974  0191  0781               	addwf	1,f
  4975  0192  3141               	addfsr 1,1
  4976  0193  1803               	skipnc
  4977  0194  0A81               	incf	1,f
  4978  0195                     l4686:	
  4979  0195  0020               	movlb	0	; select bank0
  4980  0196  0859               	movf	vfpfcnvrt@fmt,w
  4981  0197  0086               	movwf	6
  4982  0198  0187               	clrf	7
  4983  0199  3F40               	moviw [0]fsr1
  4984  019A  00DB               	movwf	??_vfpfcnvrt
  4985  019B  3F41               	moviw [1]fsr1
  4986  019C  00DC               	movwf	??_vfpfcnvrt+1
  4987  019D  085B               	movf	??_vfpfcnvrt,w
  4988  019E  0084               	movwf	4
  4989  019F  085C               	movf	??_vfpfcnvrt+1,w
  4990  01A0  0085               	movwf	5
  4991  01A1  0800               	movf	0,w	;code access
  4992  01A2  3ED0               	addlw	208
  4993  01A3  00DD               	movwf	??_vfpfcnvrt+2
  4994  01A4  30FF               	movlw	255
  4995  01A5  1803               	skipnc
  4996  01A6  3000               	movlw	0
  4997  01A7  00DE               	movwf	??_vfpfcnvrt+3
  4998  01A8  3000               	movlw	0
  4999  01A9  025E               	subwf	??_vfpfcnvrt+3,w
  5000  01AA  300A               	movlw	10
  5001  01AB  1903               	skipnz
  5002  01AC  025D               	subwf	??_vfpfcnvrt+2,w
  5003  01AD  1803               	btfsc	3,0
  5004  01AE  29B1               	goto	u5580
  5005  01AF  3001               	movlw	1
  5006  01B0  29B2               	goto	u5590
  5007  01B1                     u5580:	
  5008  01B1  3000               	movlw	0
  5009  01B2                     u5590:	
  5010  01B2  00DF               	movwf	??_vfpfcnvrt+4
  5011  01B3  01E0               	clrf	??_vfpfcnvrt+5
  5012  01B4  085F               	movf	??_vfpfcnvrt+4,w
  5013  01B5  0021               	movlb	1	; select bank1
  5014  01B6  00A5               	movwf	_vfpfcnvrt$954^(0+128)
  5015  01B7  0020               	movlb	0	; select bank0
  5016  01B8  0860               	movf	??_vfpfcnvrt+5,w
  5017  01B9  0021               	movlb	1	; select bank1
  5018  01BA  00A6               	movwf	(_vfpfcnvrt$954+1)^(0+128)
  5019  01BB  0825               	movf	_vfpfcnvrt$954^(0+128),w
  5020  01BC  0426               	iorwf	(_vfpfcnvrt$954+1)^(0+128),w
  5021  01BD  1D03               	btfss	3,2
  5022  01BE  298C               	goto	l4684
  5023  01BF                     l4692:	
  5024                           
  5025                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  5026  01BF  0020               	movlb	0	; select bank0
  5027  01C0  0859               	movf	vfpfcnvrt@fmt,w
  5028  01C1  0086               	movwf	6
  5029  01C2  0187               	clrf	7
  5030  01C3  3F40               	moviw [0]fsr1
  5031  01C4  00DB               	movwf	??_vfpfcnvrt
  5032  01C5  3F41               	moviw [1]fsr1
  5033  01C6  00DC               	movwf	??_vfpfcnvrt+1
  5034  01C7  085B               	movf	??_vfpfcnvrt,w
  5035  01C8  0084               	movwf	4
  5036  01C9  085C               	movf	??_vfpfcnvrt+1,w
  5037  01CA  0085               	movwf	5
  5038  01CB  0012               	moviw fsr0++
  5039  01CC  3A63               	xorlw	99
  5040  01CD  3185  1D03         	btfss	3,2
  5041  01CF  2DA1               	goto	l4702
  5042                           
  5043                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  5044  01D0  0859               	movf	vfpfcnvrt@fmt,w
  5045  01D1  0086               	movwf	6
  5046  01D2  0187               	clrf	7
  5047  01D3  3001               	movlw	1
  5048  01D4  0781               	addwf	1,f
  5049  01D5  3141               	addfsr 1,1
  5050  01D6  1803               	skipnc
  5051  01D7  0A81               	incf	1,f
  5052                           
  5053                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5054  01D8  085A               	movf	vfpfcnvrt@ap,w
  5055  01D9  0086               	movwf	6
  5056  01DA  0187               	clrf	7
  5057  01DB  0801               	movf	1,w
  5058  01DC  0084               	movwf	4
  5059  01DD  0185               	clrf	5
  5060  01DE  3002               	movlw	2
  5061  01DF  0781               	addwf	1,f
  5062  01E0  0800               	movf	0,w
  5063  01E1  00DB               	movwf	??_vfpfcnvrt
  5064  01E2  085B               	movf	??_vfpfcnvrt,w
  5065  01E3  0021               	movlb	1	; select bank1
  5066  01E4  00B0               	movwf	vfpfcnvrt@c^(0+128)
  5067                           
  5068                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  5069  01E5  0020               	movlb	0	; select bank0
  5070  01E6  0858               	movf	vfpfcnvrt@fp+1,w
  5071  01E7  00B1               	movwf	ctoa@fp+1
  5072  01E8  0857               	movf	vfpfcnvrt@fp,w
  5073  01E9  00B0               	movwf	ctoa@fp
  5074  01EA  0021               	movlb	1	; select bank1
  5075  01EB  0830               	movf	vfpfcnvrt@c^(0+128),w
  5076  01EC  0020               	movlb	0	; select bank0
  5077  01ED  00DB               	movwf	??_vfpfcnvrt
  5078  01EE  085B               	movf	??_vfpfcnvrt,w
  5079  01EF  00B2               	movwf	ctoa@c
  5080  01F0  319B  2363         	fcall	_ctoa
  5081  01F2  0020               	movlb	0	; select bank0
  5082  01F3  0831               	movf	?_ctoa+1,w
  5083  01F4  00D8               	movwf	?_vfpfcnvrt+1
  5084  01F5  0830               	movf	?_ctoa,w
  5085  01F6  00D7               	movwf	?_vfpfcnvrt
  5086  01F7  0008               	return
  5087  01F8                     L4:	
  5088  01F8                     L3:	
  5089  01F8  318F  2FDD         	ljmp	l5028
  5090                           
  5091                           	psect	text6
  5092  01FA                     __ptext6:	
  5093 ;; *************** function _xtoa *****************
  5094 ;; Defined at:
  5095 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5096 ;; Parameters:    Size  Location     Type
  5097 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  5098 ;;		 -> vsnprintf@f(6), 
  5099 ;;  d               8   18[BANK0 ] unsigned long long 
  5100 ;;  x               1   26[BANK0 ] unsigned char 
  5101 ;; Auto vars:     Size  Location     Type
  5102 ;;  n               8   43[BANK0 ] unsigned long long 
  5103 ;;  c               2   53[BANK0 ] int 
  5104 ;;  i               2   51[BANK0 ] int 
  5105 ;;  w               2   41[BANK0 ] int 
  5106 ;;  p               2   39[BANK0 ] int 
  5107 ;; Return value:  Size  Location     Type
  5108 ;;                  2   16[BANK0 ] int 
  5109 ;; Registers used:
  5110 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5111 ;; Tracked objects:
  5112 ;;		On entry : 0/0
  5113 ;;		On exit  : 0/0
  5114 ;;		Unchanged: 0/0
  5115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5116 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5117 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5118 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5119 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5120 ;;Total ram usage:       39 bytes
  5121 ;; Hardware stack levels used:    1
  5122 ;; Hardware stack levels required when called:    5
  5123 ;; This function calls:
  5124 ;;		_isalpha
  5125 ;;		_isupper
  5126 ;;		_pad
  5127 ;;		_toupper
  5128 ;; This function is called by:
  5129 ;;		_vfpfcnvrt
  5130 ;; This function uses a non-reentrant model
  5131 ;;
  5132                           
  5133                           
  5134                           ;psect for function _xtoa
  5135  01FA                     _xtoa:	
  5136                           
  5137                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  5138                           
  5139                           ;incstack = 0
  5140                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5141  01FA  0021               	movlb	1	; select bank1
  5142  01FB  1BE2               	btfsc	(_prec+1)^(0+128),7
  5143  01FC  2A01               	goto	l583
  5144                           
  5145                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  5146  01FD  30FD               	movlw	253
  5147  01FE  05E3               	andwf	_flags^(0+128),f
  5148  01FF  30FF               	movlw	255
  5149  0200  05E4               	andwf	(_flags+1)^(0+128),f
  5150  0201                     l583:	
  5151                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 631:     }
  5152                           
  5153                           
  5154                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  5155  0201  0862               	movf	(_prec+1)^(0+128),w
  5156  0202  3A80               	xorlw	128
  5157  0203  0020               	movlb	0	; select bank0
  5158  0204  00BB               	movwf	??_xtoa
  5159  0205  3080               	movlw	128
  5160  0206  023B               	subwf	??_xtoa,w
  5161  0207  1D03               	skipz
  5162  0208  2A0C               	goto	u5255
  5163  0209  3001               	movlw	1
  5164  020A  0021               	movlb	1	; select bank1
  5165  020B  0261               	subwf	_prec^(0+128),w
  5166  020C                     u5255:	
  5167  020C  1803               	skipnc
  5168  020D  2A14               	goto	l4514
  5169  020E  3001               	movlw	1
  5170  020F  0020               	movlb	0	; select bank0
  5171  0210  00C7               	movwf	xtoa@p
  5172  0211  3000               	movlw	0
  5173  0212  00C8               	movwf	xtoa@p+1
  5174  0213  2A1C               	goto	l587
  5175  0214                     l4514:	
  5176  0214  0021               	movlb	1	; select bank1
  5177  0215  0862               	movf	(_prec+1)^(0+128),w
  5178  0216  0020               	movlb	0	; select bank0
  5179  0217  00C8               	movwf	xtoa@p+1
  5180  0218  0021               	movlb	1	; select bank1
  5181  0219  0861               	movf	_prec^(0+128),w
  5182  021A  0020               	movlb	0	; select bank0
  5183  021B  00C7               	movwf	xtoa@p
  5184  021C                     l587:	
  5185                           
  5186                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  5187  021C  0021               	movlb	1	; select bank1
  5188  021D  0860               	movf	(_width+1)^(0+128),w
  5189  021E  0020               	movlb	0	; select bank0
  5190  021F  00CA               	movwf	xtoa@w+1
  5191  0220  0021               	movlb	1	; select bank1
  5192  0221  085F               	movf	_width^(0+128),w
  5193  0222  0020               	movlb	0	; select bank0
  5194  0223  00C9               	movwf	xtoa@w
  5195                           
  5196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  5197  0224  0021               	movlb	1	; select bank1
  5198  0225  1E63               	btfss	_flags^(0+128),4
  5199  0226  2A2C               	goto	l4520
  5200                           
  5201                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  5202  0227  30FE               	movlw	254
  5203  0228  0020               	movlb	0	; select bank0
  5204  0229  07C9               	addwf	xtoa@w,f
  5205  022A  30FF               	movlw	255
  5206  022B  3DCA               	addwfc	xtoa@w+1,f
  5207  022C                     l4520:	
  5208                           
  5209                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  5210  022C  0020               	movlb	0	; select bank0
  5211  022D  0832               	movf	xtoa@d,w
  5212  022E  00CB               	movwf	xtoa@n
  5213  022F  0833               	movf	xtoa@d+1,w
  5214  0230  00CC               	movwf	xtoa@n+1
  5215  0231  0834               	movf	xtoa@d+2,w
  5216  0232  00CD               	movwf	xtoa@n+2
  5217  0233  0835               	movf	xtoa@d+3,w
  5218  0234  00CE               	movwf	xtoa@n+3
  5219  0235  0836               	movf	xtoa@d+4,w
  5220  0236  00CF               	movwf	xtoa@n+4
  5221  0237  0837               	movf	xtoa@d+5,w
  5222  0238  00D0               	movwf	xtoa@n+5
  5223  0239  0838               	movf	xtoa@d+6,w
  5224  023A  00D1               	movwf	xtoa@n+6
  5225  023B  0839               	movf	xtoa@d+7,w
  5226  023C  00D2               	movwf	xtoa@n+7
  5227                           
  5228                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  5229  023D  301F               	movlw	31
  5230  023E  00D3               	movwf	xtoa@i
  5231  023F  3000               	movlw	0
  5232  0240  00D4               	movwf	xtoa@i+1
  5233                           
  5234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  5235  0241  0022               	movlb	2	; select bank2
  5236  0242  01D1               	clrf	(_dbuf^(0+256)+31)
  5237                           
  5238                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5239  0243  2AEE               	goto	l4552
  5240  0244                     l4524:	
  5241                           
  5242                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  5243  0244  30FF               	movlw	255
  5244  0245  0020               	movlb	0	; select bank0
  5245  0246  07D3               	addwf	xtoa@i,f
  5246  0247  30FF               	movlw	255
  5247  0248  3DD4               	addwfc	xtoa@i+1,f
  5248                           
  5249                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  5250  0249  300F               	movlw	15
  5251  024A  054B               	andwf	xtoa@n,w
  5252  024B  00D5               	movwf	xtoa@c
  5253  024C  3000               	movlw	0
  5254  024D  054C               	andwf	xtoa@n+1,w
  5255  024E  00D6               	movwf	xtoa@c+1
  5256                           
  5257                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  5258  024F  0856               	movf	xtoa@c+1,w
  5259  0250  3A80               	xorlw	128
  5260  0251  00BB               	movwf	??_xtoa
  5261  0252  3080               	movlw	128
  5262  0253  023B               	subwf	??_xtoa,w
  5263  0254  1D03               	skipz
  5264  0255  2A58               	goto	u5275
  5265  0256  300A               	movlw	10
  5266  0257  0255               	subwf	xtoa@c,w
  5267  0258                     u5275:	
  5268  0258  1C03               	skipc
  5269  0259  2A5E               	goto	l4528
  5270  025A  0020               	movlb	0	; select bank0
  5271  025B  0855               	movf	xtoa@c,w
  5272  025C  3E57               	addlw	87
  5273  025D  2A61               	goto	L1
  5274  025E                     l4528:	
  5275  025E  0020               	movlb	0	; select bank0
  5276  025F  0855               	movf	xtoa@c,w
  5277  0260  3E30               	addlw	48
  5278  0261                     L1:	
  5279  0261  00D5               	movwf	xtoa@c
  5280  0262  3000               	movlw	0
  5281  0263  3D56               	addwfc	xtoa@c+1,w
  5282  0264  00D6               	movwf	xtoa@c+1
  5283  0265  083A               	movf	xtoa@x,w
  5284  0266  3EBF               	addlw	191
  5285  0267  00BB               	movwf	??_xtoa
  5286  0268  30FF               	movlw	255
  5287  0269  1803               	skipnc
  5288  026A  3000               	movlw	0
  5289  026B  00BC               	movwf	??_xtoa+1
  5290  026C  3000               	movlw	0
  5291  026D  023C               	subwf	??_xtoa+1,w
  5292  026E  301A               	movlw	26
  5293  026F  1903               	skipnz
  5294  0270  023B               	subwf	??_xtoa,w
  5295  0271  1803               	btfsc	3,0
  5296  0272  2A75               	goto	u5280
  5297  0273  3001               	movlw	1
  5298  0274  2A76               	goto	u5290
  5299  0275                     u5280:	
  5300  0275  3000               	movlw	0
  5301  0276                     u5290:	
  5302  0276  00BD               	movwf	??_xtoa+2
  5303  0277  01BE               	clrf	??_xtoa+3
  5304  0278  083D               	movf	??_xtoa+2,w
  5305  0279  00C3               	movwf	_xtoa$938
  5306  027A  083E               	movf	??_xtoa+3,w
  5307  027B  00C4               	movwf	_xtoa$938+1
  5308  027C  0843               	movf	_xtoa$938,w
  5309  027D  0444               	iorwf	_xtoa$938+1,w
  5310  027E  1903               	btfsc	3,2
  5311  027F  2AAC               	goto	l4544
  5312  0280  3020               	movlw	32
  5313  0281  0455               	iorwf	xtoa@c,w
  5314  0282  00BB               	movwf	??_xtoa
  5315  0283  3000               	movlw	0
  5316  0284  0456               	iorwf	xtoa@c+1,w
  5317  0285  00BC               	movwf	??_xtoa+1
  5318  0286  083B               	movf	??_xtoa,w
  5319  0287  3E9F               	addlw	159
  5320  0288  00BD               	movwf	??_xtoa+2
  5321  0289  30FF               	movlw	255
  5322  028A  3D3C               	addwfc	??_xtoa+1,w
  5323  028B  00BE               	movwf	??_xtoa+3
  5324  028C  3000               	movlw	0
  5325  028D  023E               	subwf	??_xtoa+3,w
  5326  028E  301A               	movlw	26
  5327  028F  1903               	skipnz
  5328  0290  023D               	subwf	??_xtoa+2,w
  5329  0291  1803               	btfsc	3,0
  5330  0292  2A95               	goto	u5310
  5331  0293  3001               	movlw	1
  5332  0294  2A96               	goto	u5320
  5333  0295                     u5310:	
  5334  0295  3000               	movlw	0
  5335  0296                     u5320:	
  5336  0296  00BF               	movwf	??_xtoa+4
  5337  0297  01C0               	clrf	??_xtoa+5
  5338  0298  083F               	movf	??_xtoa+4,w
  5339  0299  00C5               	movwf	_xtoa$939
  5340  029A  0840               	movf	??_xtoa+5,w
  5341  029B  00C6               	movwf	_xtoa$939+1
  5342  029C  0845               	movf	_xtoa$939,w
  5343  029D  0446               	iorwf	_xtoa$939+1,w
  5344  029E  1903               	btfsc	3,2
  5345  029F  2AAC               	goto	l4544
  5346                           
  5347                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  5348  02A0  0856               	movf	xtoa@c+1,w
  5349  02A1  00F8               	movwf	toupper@c+1
  5350  02A2  0855               	movf	xtoa@c,w
  5351  02A3  00F7               	movwf	toupper@c
  5352  02A4  319A  22C9  3181   	fcall	_toupper
  5353  02A7  0878               	movf	?_toupper+1,w
  5354  02A8  0020               	movlb	0	; select bank0
  5355  02A9  00D6               	movwf	xtoa@c+1
  5356  02AA  0877               	movf	?_toupper,w
  5357  02AB  00D5               	movwf	xtoa@c
  5358  02AC                     l4544:	
  5359                           
  5360                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  5361  02AC  0855               	movf	xtoa@c,w
  5362  02AD  00BB               	movwf	??_xtoa
  5363  02AE  0853               	movf	xtoa@i,w
  5364  02AF  3E32               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5365  02B0  0086               	movwf	6
  5366  02B1  3001               	movlw	1	; select bank2/3
  5367  02B2  0087               	movwf	7
  5368  02B3  083B               	movf	??_xtoa,w
  5369  02B4  0081               	movwf	1
  5370                           
  5371                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  5372  02B5  30FF               	movlw	255
  5373  02B6  07C7               	addwf	xtoa@p,f
  5374  02B7  30FF               	movlw	255
  5375  02B8  3DC8               	addwfc	xtoa@p+1,f
  5376                           
  5377                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  5378  02B9  30FF               	movlw	255
  5379  02BA  07C9               	addwf	xtoa@w,f
  5380  02BB  30FF               	movlw	255
  5381  02BC  3DCA               	addwfc	xtoa@w+1,f
  5382                           
  5383                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  5384  02BD  304B               	movlw	low xtoa@n
  5385  02BE  0086               	movwf	6
  5386  02BF  3000               	movlw	high xtoa@n
  5387  02C0  0087               	movwf	7
  5388  02C1  3F40               	moviw [0]fsr1
  5389  02C2  00BB               	movwf	??_xtoa
  5390  02C3  3F41               	moviw [1]fsr1
  5391  02C4  00BC               	movwf	??_xtoa+1
  5392  02C5  3F42               	moviw [2]fsr1
  5393  02C6  00BD               	movwf	??_xtoa+2
  5394  02C7  3F43               	moviw [3]fsr1
  5395  02C8  00BE               	movwf	??_xtoa+3
  5396  02C9  3F44               	moviw [4]fsr1
  5397  02CA  00BF               	movwf	??_xtoa+4
  5398  02CB  3F45               	moviw [5]fsr1
  5399  02CC  00C0               	movwf	??_xtoa+5
  5400  02CD  3F46               	moviw [6]fsr1
  5401  02CE  00C1               	movwf	??_xtoa+6
  5402  02CF  3F47               	moviw [7]fsr1
  5403  02D0  00C2               	movwf	??_xtoa+7
  5404  02D1  3004               	movlw	4
  5405  02D2                     u5345:	
  5406  02D2  0020               	movlb	0	; select bank0
  5407  02D3  36C2               	lsrf	??_xtoa+7,f
  5408  02D4  0CC1               	rrf	??_xtoa+6,f
  5409  02D5  0CC0               	rrf	??_xtoa+5,f
  5410  02D6  0CBF               	rrf	??_xtoa+4,f
  5411  02D7  0CBE               	rrf	??_xtoa+3,f
  5412  02D8  0CBD               	rrf	??_xtoa+2,f
  5413  02D9  0CBC               	rrf	??_xtoa+1,f
  5414  02DA  0CBB               	rrf	??_xtoa,f
  5415  02DB  0B89               	decfsz	9,f
  5416  02DC  2AD2               	goto	u5345
  5417  02DD  0020               	movlb	0	; select bank0
  5418  02DE  0842               	movf	??_xtoa+7,w
  5419  02DF  00D2               	movwf	xtoa@n+7
  5420  02E0  0841               	movf	??_xtoa+6,w
  5421  02E1  00D1               	movwf	xtoa@n+6
  5422  02E2  0840               	movf	??_xtoa+5,w
  5423  02E3  00D0               	movwf	xtoa@n+5
  5424  02E4  083F               	movf	??_xtoa+4,w
  5425  02E5  00CF               	movwf	xtoa@n+4
  5426  02E6  083E               	movf	??_xtoa+3,w
  5427  02E7  00CE               	movwf	xtoa@n+3
  5428  02E8  083D               	movf	??_xtoa+2,w
  5429  02E9  00CD               	movwf	xtoa@n+2
  5430  02EA  083C               	movf	??_xtoa+1,w
  5431  02EB  00CC               	movwf	xtoa@n+1
  5432  02EC  083B               	movf	??_xtoa,w
  5433  02ED  00CB               	movwf	xtoa@n
  5434  02EE                     l4552:	
  5435                           
  5436                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5437  02EE  0020               	movlb	0	; select bank0
  5438  02EF  0854               	movf	xtoa@i+1,w
  5439  02F0  3A80               	xorlw	128
  5440  02F1  00BB               	movwf	??_xtoa
  5441  02F2  3080               	movlw	128
  5442  02F3  023B               	subwf	??_xtoa,w
  5443  02F4  1D03               	skipz
  5444  02F5  2AF8               	goto	u5355
  5445  02F6  3002               	movlw	2
  5446  02F7  0253               	subwf	xtoa@i,w
  5447  02F8                     u5355:	
  5448  02F8  1C03               	skipc
  5449  02F9  2B1F               	goto	l608
  5450  02FA  0020               	movlb	0	; select bank0
  5451  02FB  084B               	movf	xtoa@n,w
  5452  02FC  044C               	iorwf	xtoa@n+1,w
  5453  02FD  044D               	iorwf	xtoa@n+2,w
  5454  02FE  044E               	iorwf	xtoa@n+3,w
  5455  02FF  044F               	iorwf	xtoa@n+4,w
  5456  0300  0450               	iorwf	xtoa@n+5,w
  5457  0301  0451               	iorwf	xtoa@n+6,w
  5458  0302  0452               	iorwf	xtoa@n+7,w
  5459  0303  1D03               	skipz
  5460  0304  2A44               	goto	l4524
  5461  0305  0848               	movf	xtoa@p+1,w
  5462  0306  3A80               	xorlw	128
  5463  0307  00BB               	movwf	??_xtoa
  5464  0308  3080               	movlw	128
  5465  0309  023B               	subwf	??_xtoa,w
  5466  030A  1D03               	skipz
  5467  030B  2B0E               	goto	u5375
  5468  030C  3001               	movlw	1
  5469  030D  0247               	subwf	xtoa@p,w
  5470  030E                     u5375:	
  5471  030E  1803               	skipnc
  5472  030F  2A44               	goto	l4524
  5473  0310  0020               	movlb	0	; select bank0
  5474  0311  084A               	movf	xtoa@w+1,w
  5475  0312  3A80               	xorlw	128
  5476  0313  00BB               	movwf	??_xtoa
  5477  0314  3080               	movlw	128
  5478  0315  023B               	subwf	??_xtoa,w
  5479  0316  1D03               	skipz
  5480  0317  2B1A               	goto	u5385
  5481  0318  3001               	movlw	1
  5482  0319  0249               	subwf	xtoa@w,w
  5483  031A                     u5385:	
  5484  031A  1C03               	skipc
  5485  031B  2B1F               	goto	l608
  5486  031C  0021               	movlb	1	; select bank1
  5487  031D  18E3               	btfsc	_flags^(0+128),1
  5488  031E  2A44               	goto	l4524
  5489  031F                     l608:	
  5490                           
  5491                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  5492  031F  0021               	movlb	1	; select bank1
  5493  0320  1E63               	btfss	_flags^(0+128),4
  5494  0321  2B3D               	goto	l4568
  5495                           
  5496                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  5497  0322  30FF               	movlw	255
  5498  0323  0020               	movlb	0	; select bank0
  5499  0324  07D3               	addwf	xtoa@i,f
  5500  0325  30FF               	movlw	255
  5501  0326  3DD4               	addwfc	xtoa@i+1,f
  5502                           
  5503                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  5504  0327  083A               	movf	xtoa@x,w
  5505  0328  00BB               	movwf	??_xtoa
  5506  0329  0853               	movf	xtoa@i,w
  5507  032A  3E32               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5508  032B  0086               	movwf	6
  5509  032C  3001               	movlw	1	; select bank2/3
  5510  032D  0087               	movwf	7
  5511  032E  083B               	movf	??_xtoa,w
  5512  032F  0081               	movwf	1
  5513                           
  5514                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  5515  0330  30FF               	movlw	255
  5516  0331  07D3               	addwf	xtoa@i,f
  5517  0332  30FF               	movlw	255
  5518  0333  3DD4               	addwfc	xtoa@i+1,f
  5519                           
  5520                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  5521  0334  3030               	movlw	48
  5522  0335  00BB               	movwf	??_xtoa
  5523  0336  0853               	movf	xtoa@i,w
  5524  0337  3E32               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5525  0338  0086               	movwf	6
  5526  0339  3001               	movlw	1	; select bank2/3
  5527  033A  0087               	movwf	7
  5528  033B  083B               	movf	??_xtoa,w
  5529  033C  0081               	movwf	1
  5530  033D                     l4568:	
  5531                           
  5532                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  5533  033D  0020               	movlb	0	; select bank0
  5534  033E  0831               	movf	xtoa@fp+1,w
  5535  033F  00A7               	movwf	pad@fp+1
  5536  0340  0830               	movf	xtoa@fp,w
  5537  0341  00A6               	movwf	pad@fp
  5538  0342  0853               	movf	xtoa@i,w
  5539  0343  3E32               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5540  0344  00BB               	movwf	??_xtoa
  5541  0345  083B               	movf	??_xtoa,w
  5542  0346  00A8               	movwf	pad@buf
  5543  0347  084A               	movf	xtoa@w+1,w
  5544  0348  00AA               	movwf	pad@p+1
  5545  0349  0849               	movf	xtoa@w,w
  5546  034A  00A9               	movwf	pad@p
  5547  034B  319C  24F3         	fcall	_pad
  5548  034D  0020               	movlb	0	; select bank0
  5549  034E  0827               	movf	?_pad+1,w
  5550  034F  00B1               	movwf	?_xtoa+1
  5551  0350  0826               	movf	?_pad,w
  5552  0351  00B0               	movwf	?_xtoa
  5553  0352  0008               	return
  5554  0353                     __end_of_xtoa:	
  5555                           
  5556                           	psect	text7
  5557  1AC9                     __ptext7:	
  5558 ;; *************** function _toupper *****************
  5559 ;; Defined at:
  5560 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  5561 ;; Parameters:    Size  Location     Type
  5562 ;;  c               2    7[COMMON] int 
  5563 ;; Auto vars:     Size  Location     Type
  5564 ;;		None
  5565 ;; Return value:  Size  Location     Type
  5566 ;;                  2    7[COMMON] int 
  5567 ;; Registers used:
  5568 ;;		wreg, status,2, status,0
  5569 ;; Tracked objects:
  5570 ;;		On entry : 0/0
  5571 ;;		On exit  : 0/0
  5572 ;;		Unchanged: 0/0
  5573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5574 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5575 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5576 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5577 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5578 ;;Total ram usage:        8 bytes
  5579 ;; Hardware stack levels used:    1
  5580 ;; Hardware stack levels required when called:    2
  5581 ;; This function calls:
  5582 ;;		_islower
  5583 ;; This function is called by:
  5584 ;;		_xtoa
  5585 ;; This function uses a non-reentrant model
  5586 ;;
  5587                           
  5588                           
  5589                           ;psect for function _toupper
  5590  1AC9                     _toupper:	
  5591                           
  5592                           ;incstack = 0
  5593                           ; Regs used in _toupper: [wreg+status,2+status,0]
  5594  1AC9  0877               	movf	toupper@c,w
  5595  1ACA  3E9F               	addlw	159
  5596  1ACB  0020               	movlb	0	; select bank0
  5597  1ACC  00A0               	movwf	??_toupper
  5598  1ACD  30FF               	movlw	255
  5599  1ACE  3D78               	addwfc	toupper@c+1,w
  5600  1ACF  00A1               	movwf	??_toupper+1
  5601  1AD0  3000               	movlw	0
  5602  1AD1  0221               	subwf	??_toupper+1,w
  5603  1AD2  301A               	movlw	26
  5604  1AD3  1903               	skipnz
  5605  1AD4  0220               	subwf	??_toupper,w
  5606  1AD5  1803               	btfsc	3,0
  5607  1AD6  2AD9               	goto	u4780
  5608  1AD7  3001               	movlw	1
  5609  1AD8  2ADA               	goto	u4790
  5610  1AD9                     u4780:	
  5611  1AD9  3000               	movlw	0
  5612  1ADA                     u4790:	
  5613  1ADA  00A2               	movwf	??_toupper+2
  5614  1ADB  01A3               	clrf	??_toupper+3
  5615  1ADC  0822               	movf	??_toupper+2,w
  5616  1ADD  00F9               	movwf	_toupper$1493
  5617  1ADE  0823               	movf	??_toupper+3,w
  5618  1ADF  00FA               	movwf	_toupper$1493+1
  5619  1AE0  0879               	movf	_toupper$1493,w
  5620  1AE1  047A               	iorwf	_toupper$1493+1,w
  5621  1AE2  1903               	btfsc	3,2
  5622  1AE3  0008               	return
  5623  1AE4  305F               	movlw	95
  5624  1AE5  0577               	andwf	toupper@c,w
  5625  1AE6  00F7               	movwf	?_toupper
  5626  1AE7  3000               	movlw	0
  5627  1AE8  0578               	andwf	toupper@c+1,w
  5628  1AE9  00F8               	movwf	?_toupper+1
  5629  1AEA  0008               	return
  5630  1AEB                     __end_of_toupper:	
  5631                           
  5632                           	psect	text8
  5633  1A05                     __ptext8:	
  5634 ;; *************** function _islower *****************
  5635 ;; Defined at:
  5636 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  5637 ;; Parameters:    Size  Location     Type
  5638 ;;  c               2    1[COMMON] int 
  5639 ;; Auto vars:     Size  Location     Type
  5640 ;;		None
  5641 ;; Return value:  Size  Location     Type
  5642 ;;                  2    1[COMMON] int 
  5643 ;; Registers used:
  5644 ;;		wreg, status,2, status,0
  5645 ;; Tracked objects:
  5646 ;;		On entry : 0/0
  5647 ;;		On exit  : 0/0
  5648 ;;		Unchanged: 0/0
  5649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5650 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5652 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5653 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5654 ;;Total ram usage:        6 bytes
  5655 ;; Hardware stack levels used:    1
  5656 ;; Hardware stack levels required when called:    1
  5657 ;; This function calls:
  5658 ;;		Nothing
  5659 ;; This function is called by:
  5660 ;;		_toupper
  5661 ;; This function uses a non-reentrant model
  5662 ;;
  5663                           
  5664                           
  5665                           ;psect for function _islower
  5666  1A05                     _islower:	
  5667                           
  5668                           ;incstack = 0
  5669                           ; Regs used in _islower: [wreg+status,2+status,0]
  5670  1A05  0871               	movf	islower@c,w
  5671  1A06  3E9F               	addlw	159
  5672  1A07  00F3               	movwf	??_islower
  5673  1A08  30FF               	movlw	255
  5674  1A09  3D72               	addwfc	islower@c+1,w
  5675  1A0A  00F4               	movwf	??_islower+1
  5676  1A0B  3000               	movlw	0
  5677  1A0C  0274               	subwf	??_islower+1,w
  5678  1A0D  301A               	movlw	26
  5679  1A0E  1903               	skipnz
  5680  1A0F  0273               	subwf	??_islower,w
  5681  1A10  1803               	btfsc	3,0
  5682  1A11  2A14               	goto	u4720
  5683  1A12  3001               	movlw	1
  5684  1A13  2A15               	goto	u4730
  5685  1A14                     u4720:	
  5686  1A14  3000               	movlw	0
  5687  1A15                     u4730:	
  5688  1A15  00F5               	movwf	??_islower+2
  5689  1A16  01F6               	clrf	??_islower+3
  5690  1A17  0875               	movf	??_islower+2,w
  5691  1A18  00F1               	movwf	?_islower
  5692  1A19  0876               	movf	??_islower+3,w
  5693  1A1A  00F2               	movwf	?_islower+1
  5694  1A1B  0008               	return
  5695  1A1C                     __end_of_islower:	
  5696                           
  5697                           	psect	text9
  5698  19EE                     __ptext9:	
  5699 ;; *************** function _isupper *****************
  5700 ;; Defined at:
  5701 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  5702 ;; Parameters:    Size  Location     Type
  5703 ;;  c               2    1[COMMON] int 
  5704 ;; Auto vars:     Size  Location     Type
  5705 ;;		None
  5706 ;; Return value:  Size  Location     Type
  5707 ;;                  2    1[COMMON] int 
  5708 ;; Registers used:
  5709 ;;		wreg, status,2, status,0
  5710 ;; Tracked objects:
  5711 ;;		On entry : 0/0
  5712 ;;		On exit  : 0/0
  5713 ;;		Unchanged: 0/0
  5714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5715 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5717 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5718 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5719 ;;Total ram usage:        6 bytes
  5720 ;; Hardware stack levels used:    1
  5721 ;; Hardware stack levels required when called:    1
  5722 ;; This function calls:
  5723 ;;		Nothing
  5724 ;; This function is called by:
  5725 ;;		_xtoa
  5726 ;; This function uses a non-reentrant model
  5727 ;;
  5728                           
  5729                           
  5730                           ;psect for function _isupper
  5731  19EE                     _isupper:	
  5732                           
  5733                           ;incstack = 0
  5734                           ; Regs used in _isupper: [wreg+status,2+status,0]
  5735  19EE  0871               	movf	isupper@c,w
  5736  19EF  3EBF               	addlw	191
  5737  19F0  00F3               	movwf	??_isupper
  5738  19F1  30FF               	movlw	255
  5739  19F2  3D72               	addwfc	isupper@c+1,w
  5740  19F3  00F4               	movwf	??_isupper+1
  5741  19F4  3000               	movlw	0
  5742  19F5  0274               	subwf	??_isupper+1,w
  5743  19F6  301A               	movlw	26
  5744  19F7  1903               	skipnz
  5745  19F8  0273               	subwf	??_isupper,w
  5746  19F9  1803               	btfsc	3,0
  5747  19FA  29FD               	goto	u2510
  5748  19FB  3001               	movlw	1
  5749  19FC  29FE               	goto	u2520
  5750  19FD                     u2510:	
  5751  19FD  3000               	movlw	0
  5752  19FE                     u2520:	
  5753  19FE  00F5               	movwf	??_isupper+2
  5754  19FF  01F6               	clrf	??_isupper+3
  5755  1A00  0875               	movf	??_isupper+2,w
  5756  1A01  00F1               	movwf	?_isupper
  5757  1A02  0876               	movf	??_isupper+3,w
  5758  1A03  00F2               	movwf	?_isupper+1
  5759  1A04  0008               	return
  5760  1A05                     __end_of_isupper:	
  5761                           
  5762                           	psect	text10
  5763  1A69                     __ptext10:	
  5764 ;; *************** function _isalpha *****************
  5765 ;; Defined at:
  5766 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  5767 ;; Parameters:    Size  Location     Type
  5768 ;;  c               2    1[COMMON] int 
  5769 ;; Auto vars:     Size  Location     Type
  5770 ;;		None
  5771 ;; Return value:  Size  Location     Type
  5772 ;;                  2    1[COMMON] int 
  5773 ;; Registers used:
  5774 ;;		wreg, status,2, status,0
  5775 ;; Tracked objects:
  5776 ;;		On entry : 0/0
  5777 ;;		On exit  : 0/0
  5778 ;;		Unchanged: 0/0
  5779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5780 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5782 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5783 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5784 ;;Total ram usage:        8 bytes
  5785 ;; Hardware stack levels used:    1
  5786 ;; Hardware stack levels required when called:    1
  5787 ;; This function calls:
  5788 ;;		Nothing
  5789 ;; This function is called by:
  5790 ;;		_xtoa
  5791 ;; This function uses a non-reentrant model
  5792 ;;
  5793                           
  5794                           
  5795                           ;psect for function _isalpha
  5796  1A69                     _isalpha:	
  5797                           
  5798                           ;incstack = 0
  5799                           ; Regs used in _isalpha: [wreg+status,2+status,0]
  5800  1A69  3020               	movlw	32
  5801  1A6A  0471               	iorwf	isalpha@c,w
  5802  1A6B  00F3               	movwf	??_isalpha
  5803  1A6C  3000               	movlw	0
  5804  1A6D  0472               	iorwf	isalpha@c+1,w
  5805  1A6E  00F4               	movwf	??_isalpha+1
  5806  1A6F  0873               	movf	??_isalpha,w
  5807  1A70  3E9F               	addlw	159
  5808  1A71  00F5               	movwf	??_isalpha+2
  5809  1A72  30FF               	movlw	255
  5810  1A73  3D74               	addwfc	??_isalpha+1,w
  5811  1A74  00F6               	movwf	??_isalpha+3
  5812  1A75  3000               	movlw	0
  5813  1A76  0276               	subwf	??_isalpha+3,w
  5814  1A77  301A               	movlw	26
  5815  1A78  1903               	skipnz
  5816  1A79  0275               	subwf	??_isalpha+2,w
  5817  1A7A  1803               	btfsc	3,0
  5818  1A7B  2A7E               	goto	u2530
  5819  1A7C  3001               	movlw	1
  5820  1A7D  2A7F               	goto	u2540
  5821  1A7E                     u2530:	
  5822  1A7E  3000               	movlw	0
  5823  1A7F                     u2540:	
  5824  1A7F  00F7               	movwf	??_isalpha+4
  5825  1A80  01F8               	clrf	??_isalpha+5
  5826  1A81  0877               	movf	??_isalpha+4,w
  5827  1A82  00F1               	movwf	?_isalpha
  5828  1A83  0878               	movf	??_isalpha+5,w
  5829  1A84  00F2               	movwf	?_isalpha+1
  5830  1A85  0008               	return
  5831  1A86                     __end_of_isalpha:	
  5832                           
  5833                           	psect	text11
  5834  162E                     __ptext11:	
  5835 ;; *************** function _utoa *****************
  5836 ;; Defined at:
  5837 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5838 ;; Parameters:    Size  Location     Type
  5839 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  5840 ;;		 -> vsnprintf@f(6), 
  5841 ;;  d               8   18[BANK0 ] unsigned long long 
  5842 ;; Auto vars:     Size  Location     Type
  5843 ;;  n               8   31[BANK0 ] unsigned long long 
  5844 ;;  i               2   39[BANK0 ] int 
  5845 ;;  w               2   29[BANK0 ] int 
  5846 ;;  p               2   27[BANK0 ] int 
  5847 ;; Return value:  Size  Location     Type
  5848 ;;                  2   16[BANK0 ] int 
  5849 ;; Registers used:
  5850 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5851 ;; Tracked objects:
  5852 ;;		On entry : 0/0
  5853 ;;		On exit  : 0/0
  5854 ;;		Unchanged: 0/0
  5855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5856 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5857 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5858 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5859 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5860 ;;Total ram usage:       25 bytes
  5861 ;; Hardware stack levels used:    1
  5862 ;; Hardware stack levels required when called:    5
  5863 ;; This function calls:
  5864 ;;		___lodiv
  5865 ;;		___lomod
  5866 ;;		_pad
  5867 ;; This function is called by:
  5868 ;;		_vfpfcnvrt
  5869 ;; This function uses a non-reentrant model
  5870 ;;
  5871                           
  5872                           
  5873                           ;psect for function _utoa
  5874  162E                     _utoa:	
  5875                           
  5876                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  5877                           
  5878                           ;incstack = 0
  5879                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5880  162E  0021               	movlb	1	; select bank1
  5881  162F  1BE2               	btfsc	(_prec+1)^(0+128),7
  5882  1630  2E35               	goto	l568
  5883                           
  5884                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  5885  1631  30FD               	movlw	253
  5886  1632  05E3               	andwf	_flags^(0+128),f
  5887  1633  30FF               	movlw	255
  5888  1634  05E4               	andwf	(_flags+1)^(0+128),f
  5889  1635                     l568:	
  5890                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 601:     }
  5891                           
  5892                           
  5893                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  5894  1635  0862               	movf	(_prec+1)^(0+128),w
  5895  1636  3A80               	xorlw	128
  5896  1637  0020               	movlb	0	; select bank0
  5897  1638  00BA               	movwf	??_utoa
  5898  1639  3080               	movlw	128
  5899  163A  023A               	subwf	??_utoa,w
  5900  163B  1D03               	skipz
  5901  163C  2E40               	goto	u5185
  5902  163D  3001               	movlw	1
  5903  163E  0021               	movlb	1	; select bank1
  5904  163F  0261               	subwf	_prec^(0+128),w
  5905  1640                     u5185:	
  5906  1640  1803               	skipnc
  5907  1641  2E48               	goto	l4478
  5908  1642  3001               	movlw	1
  5909  1643  0020               	movlb	0	; select bank0
  5910  1644  00BB               	movwf	utoa@p
  5911  1645  3000               	movlw	0
  5912  1646  00BC               	movwf	utoa@p+1
  5913  1647  2E50               	goto	l572
  5914  1648                     l4478:	
  5915  1648  0021               	movlb	1	; select bank1
  5916  1649  0862               	movf	(_prec+1)^(0+128),w
  5917  164A  0020               	movlb	0	; select bank0
  5918  164B  00BC               	movwf	utoa@p+1
  5919  164C  0021               	movlb	1	; select bank1
  5920  164D  0861               	movf	_prec^(0+128),w
  5921  164E  0020               	movlb	0	; select bank0
  5922  164F  00BB               	movwf	utoa@p
  5923  1650                     l572:	
  5924                           
  5925                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  5926  1650  0021               	movlb	1	; select bank1
  5927  1651  0860               	movf	(_width+1)^(0+128),w
  5928  1652  0020               	movlb	0	; select bank0
  5929  1653  00BE               	movwf	utoa@w+1
  5930  1654  0021               	movlb	1	; select bank1
  5931  1655  085F               	movf	_width^(0+128),w
  5932  1656  0020               	movlb	0	; select bank0
  5933  1657  00BD               	movwf	utoa@w
  5934                           
  5935                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  5936  1658  0832               	movf	utoa@d,w
  5937  1659  00BF               	movwf	utoa@n
  5938  165A  0833               	movf	utoa@d+1,w
  5939  165B  00C0               	movwf	utoa@n+1
  5940  165C  0834               	movf	utoa@d+2,w
  5941  165D  00C1               	movwf	utoa@n+2
  5942  165E  0835               	movf	utoa@d+3,w
  5943  165F  00C2               	movwf	utoa@n+3
  5944  1660  0836               	movf	utoa@d+4,w
  5945  1661  00C3               	movwf	utoa@n+4
  5946  1662  0837               	movf	utoa@d+5,w
  5947  1663  00C4               	movwf	utoa@n+5
  5948  1664  0838               	movf	utoa@d+6,w
  5949  1665  00C5               	movwf	utoa@n+6
  5950  1666  0839               	movf	utoa@d+7,w
  5951  1667  00C6               	movwf	utoa@n+7
  5952                           
  5953                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  5954  1668  301F               	movlw	31
  5955  1669  00C7               	movwf	utoa@i
  5956  166A  3000               	movlw	0
  5957  166B  00C8               	movwf	utoa@i+1
  5958                           
  5959                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  5960  166C  0022               	movlb	2	; select bank2
  5961  166D  01D1               	clrf	(_dbuf^(0+256)+31)
  5962                           
  5963                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5964  166E  2EF4               	goto	l4494
  5965  166F                     l4496:	
  5966  166F  083F               	movf	utoa@n,w
  5967  1670  0440               	iorwf	utoa@n+1,w
  5968  1671  0441               	iorwf	utoa@n+2,w
  5969  1672  0442               	iorwf	utoa@n+3,w
  5970  1673  0443               	iorwf	utoa@n+4,w
  5971  1674  0444               	iorwf	utoa@n+5,w
  5972  1675  0445               	iorwf	utoa@n+6,w
  5973  1676  0446               	iorwf	utoa@n+7,w
  5974  1677  1D03               	skipz
  5975  1678  2E93               	goto	l4484
  5976  1679  083C               	movf	utoa@p+1,w
  5977  167A  3A80               	xorlw	128
  5978  167B  00BA               	movwf	??_utoa
  5979  167C  3080               	movlw	128
  5980  167D  023A               	subwf	??_utoa,w
  5981  167E  1D03               	skipz
  5982  167F  2E82               	goto	u5215
  5983  1680  3001               	movlw	1
  5984  1681  023B               	subwf	utoa@p,w
  5985  1682                     u5215:	
  5986  1682  1803               	skipnc
  5987  1683  2E93               	goto	l4484
  5988  1684  0020               	movlb	0	; select bank0
  5989  1685  083E               	movf	utoa@w+1,w
  5990  1686  3A80               	xorlw	128
  5991  1687  00BA               	movwf	??_utoa
  5992  1688  3080               	movlw	128
  5993  1689  023A               	subwf	??_utoa,w
  5994  168A  1D03               	skipz
  5995  168B  2E8E               	goto	u5225
  5996  168C  3001               	movlw	1
  5997  168D  023D               	subwf	utoa@w,w
  5998  168E                     u5225:	
  5999  168E  1C03               	skipc
  6000  168F  2EF9               	goto	l4504
  6001  1690  0021               	movlb	1	; select bank1
  6002  1691  1CE3               	btfss	_flags^(0+128),1
  6003  1692  2EF9               	goto	l4504
  6004  1693                     l4484:	
  6005                           
  6006                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  6007  1693  30FF               	movlw	255
  6008  1694  0020               	movlb	0	; select bank0
  6009  1695  07C7               	addwf	utoa@i,f
  6010  1696  30FF               	movlw	255
  6011  1697  3DC8               	addwfc	utoa@i+1,f
  6012                           
  6013                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  6014  1698  300A               	movlw	10
  6015  1699  00A0               	movwf	___lomod@divisor
  6016  169A  01A1               	clrf	___lomod@divisor+1
  6017  169B  01A2               	clrf	___lomod@divisor+2
  6018  169C  01A3               	clrf	___lomod@divisor+3
  6019  169D  01A4               	clrf	___lomod@divisor+4
  6020  169E  01A5               	clrf	___lomod@divisor+5
  6021  169F  01A6               	clrf	___lomod@divisor+6
  6022  16A0  01A7               	clrf	___lomod@divisor+7
  6023  16A1  083F               	movf	utoa@n,w
  6024  16A2  00A8               	movwf	___lomod@dividend
  6025  16A3  0840               	movf	utoa@n+1,w
  6026  16A4  00A9               	movwf	___lomod@dividend+1
  6027  16A5  0841               	movf	utoa@n+2,w
  6028  16A6  00AA               	movwf	___lomod@dividend+2
  6029  16A7  0842               	movf	utoa@n+3,w
  6030  16A8  00AB               	movwf	___lomod@dividend+3
  6031  16A9  0843               	movf	utoa@n+4,w
  6032  16AA  00AC               	movwf	___lomod@dividend+4
  6033  16AB  0844               	movf	utoa@n+5,w
  6034  16AC  00AD               	movwf	___lomod@dividend+5
  6035  16AD  0845               	movf	utoa@n+6,w
  6036  16AE  00AE               	movwf	___lomod@dividend+6
  6037  16AF  0846               	movf	utoa@n+7,w
  6038  16B0  00AF               	movwf	___lomod@dividend+7
  6039  16B1  3187  278E  3196   	fcall	___lomod
  6040  16B4  0020               	movlb	0	; select bank0
  6041  16B5  0820               	movf	?___lomod,w
  6042  16B6  3E30               	addlw	48
  6043  16B7  00BA               	movwf	??_utoa
  6044  16B8  0847               	movf	utoa@i,w
  6045  16B9  3E32               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6046  16BA  0086               	movwf	6
  6047  16BB  3001               	movlw	1	; select bank2/3
  6048  16BC  0087               	movwf	7
  6049  16BD  083A               	movf	??_utoa,w
  6050  16BE  0081               	movwf	1
  6051                           
  6052                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  6053  16BF  30FF               	movlw	255
  6054  16C0  07BB               	addwf	utoa@p,f
  6055  16C1  30FF               	movlw	255
  6056  16C2  3DBC               	addwfc	utoa@p+1,f
  6057                           
  6058                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  6059  16C3  30FF               	movlw	255
  6060  16C4  07BD               	addwf	utoa@w,f
  6061  16C5  30FF               	movlw	255
  6062  16C6  3DBE               	addwfc	utoa@w+1,f
  6063                           
  6064                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  6065  16C7  300A               	movlw	10
  6066  16C8  00A0               	movwf	___lodiv@divisor
  6067  16C9  01A1               	clrf	___lodiv@divisor+1
  6068  16CA  01A2               	clrf	___lodiv@divisor+2
  6069  16CB  01A3               	clrf	___lodiv@divisor+3
  6070  16CC  01A4               	clrf	___lodiv@divisor+4
  6071  16CD  01A5               	clrf	___lodiv@divisor+5
  6072  16CE  01A6               	clrf	___lodiv@divisor+6
  6073  16CF  01A7               	clrf	___lodiv@divisor+7
  6074  16D0  083F               	movf	utoa@n,w
  6075  16D1  00A8               	movwf	___lodiv@dividend
  6076  16D2  0840               	movf	utoa@n+1,w
  6077  16D3  00A9               	movwf	___lodiv@dividend+1
  6078  16D4  0841               	movf	utoa@n+2,w
  6079  16D5  00AA               	movwf	___lodiv@dividend+2
  6080  16D6  0842               	movf	utoa@n+3,w
  6081  16D7  00AB               	movwf	___lodiv@dividend+3
  6082  16D8  0843               	movf	utoa@n+4,w
  6083  16D9  00AC               	movwf	___lodiv@dividend+4
  6084  16DA  0844               	movf	utoa@n+5,w
  6085  16DB  00AD               	movwf	___lodiv@dividend+5
  6086  16DC  0845               	movf	utoa@n+6,w
  6087  16DD  00AE               	movwf	___lodiv@dividend+6
  6088  16DE  0846               	movf	utoa@n+7,w
  6089  16DF  00AF               	movwf	___lodiv@dividend+7
  6090  16E0  319E  2661  3196   	fcall	___lodiv
  6091  16E3  0020               	movlb	0	; select bank0
  6092  16E4  0820               	movf	?___lodiv,w
  6093  16E5  00BF               	movwf	utoa@n
  6094  16E6  0821               	movf	?___lodiv+1,w
  6095  16E7  00C0               	movwf	utoa@n+1
  6096  16E8  0822               	movf	?___lodiv+2,w
  6097  16E9  00C1               	movwf	utoa@n+2
  6098  16EA  0823               	movf	?___lodiv+3,w
  6099  16EB  00C2               	movwf	utoa@n+3
  6100  16EC  0824               	movf	?___lodiv+4,w
  6101  16ED  00C3               	movwf	utoa@n+4
  6102  16EE  0825               	movf	?___lodiv+5,w
  6103  16EF  00C4               	movwf	utoa@n+5
  6104  16F0  0826               	movf	?___lodiv+6,w
  6105  16F1  00C5               	movwf	utoa@n+6
  6106  16F2  0827               	movf	?___lodiv+7,w
  6107  16F3  00C6               	movwf	utoa@n+7
  6108  16F4                     l4494:	
  6109                           
  6110                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6111  16F4  0020               	movlb	0	; select bank0
  6112  16F5  0847               	movf	utoa@i,w
  6113  16F6  0448               	iorwf	utoa@i+1,w
  6114  16F7  1D03               	btfss	3,2
  6115  16F8  2E6F               	goto	l4496
  6116  16F9                     l4504:	
  6117                           
  6118                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  6119  16F9  0020               	movlb	0	; select bank0
  6120  16FA  0831               	movf	utoa@fp+1,w
  6121  16FB  00A7               	movwf	pad@fp+1
  6122  16FC  0830               	movf	utoa@fp,w
  6123  16FD  00A6               	movwf	pad@fp
  6124  16FE  0847               	movf	utoa@i,w
  6125  16FF  3E32               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6126  1700  00BA               	movwf	??_utoa
  6127  1701  083A               	movf	??_utoa,w
  6128  1702  00A8               	movwf	pad@buf
  6129  1703  083E               	movf	utoa@w+1,w
  6130  1704  00AA               	movwf	pad@p+1
  6131  1705  083D               	movf	utoa@w,w
  6132  1706  00A9               	movwf	pad@p
  6133  1707  319C  24F3         	fcall	_pad
  6134  1709  0020               	movlb	0	; select bank0
  6135  170A  0827               	movf	?_pad+1,w
  6136  170B  00B1               	movwf	?_utoa+1
  6137  170C  0826               	movf	?_pad,w
  6138  170D  00B0               	movwf	?_utoa
  6139  170E  0008               	return
  6140  170F                     __end_of_utoa:	
  6141                           
  6142                           	psect	text12
  6143  078E                     __ptext12:	
  6144 ;; *************** function ___lomod *****************
  6145 ;; Defined at:
  6146 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  6147 ;; Parameters:    Size  Location     Type
  6148 ;;  divisor         8    0[BANK0 ] unsigned long long 
  6149 ;;  dividend        8    8[BANK0 ] unsigned long long 
  6150 ;; Auto vars:     Size  Location     Type
  6151 ;;  counter         1    2[COMMON] unsigned char 
  6152 ;; Return value:  Size  Location     Type
  6153 ;;                  8    0[BANK0 ] unsigned long long 
  6154 ;; Registers used:
  6155 ;;		wreg, status,2, status,0
  6156 ;; Tracked objects:
  6157 ;;		On entry : 0/0
  6158 ;;		On exit  : 0/0
  6159 ;;		Unchanged: 0/0
  6160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6161 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6162 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6163 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6164 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6165 ;;Total ram usage:       18 bytes
  6166 ;; Hardware stack levels used:    1
  6167 ;; Hardware stack levels required when called:    1
  6168 ;; This function calls:
  6169 ;;		Nothing
  6170 ;; This function is called by:
  6171 ;;		_utoa
  6172 ;; This function uses a non-reentrant model
  6173 ;;
  6174                           
  6175                           
  6176                           ;psect for function ___lomod
  6177  078E                     ___lomod:	
  6178                           
  6179                           ;incstack = 0
  6180                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  6181  078E  0020               	movlb	0	; select bank0
  6182  078F  0820               	movf	___lomod@divisor,w
  6183  0790  0421               	iorwf	___lomod@divisor+1,w
  6184  0791  0422               	iorwf	___lomod@divisor+2,w
  6185  0792  0423               	iorwf	___lomod@divisor+3,w
  6186  0793  0424               	iorwf	___lomod@divisor+4,w
  6187  0794  0425               	iorwf	___lomod@divisor+5,w
  6188  0795  0426               	iorwf	___lomod@divisor+6,w
  6189  0796  0427               	iorwf	___lomod@divisor+7,w
  6190  0797  1903               	skipnz
  6191  0798  2FE6               	goto	l948
  6192  0799  01F2               	clrf	___lomod@counter
  6193  079A  0AF2               	incf	___lomod@counter,f
  6194  079B                     l3018:	
  6195  079B  1BA7               	btfsc	___lomod@divisor+7,7
  6196  079C  2FAA               	goto	l3020
  6197  079D  35A0               	lslf	___lomod@divisor,f
  6198  079E  0DA1               	rlf	___lomod@divisor+1,f
  6199  079F  0DA2               	rlf	___lomod@divisor+2,f
  6200  07A0  0DA3               	rlf	___lomod@divisor+3,f
  6201  07A1  0DA4               	rlf	___lomod@divisor+4,f
  6202  07A2  0DA5               	rlf	___lomod@divisor+5,f
  6203  07A3  0DA6               	rlf	___lomod@divisor+6,f
  6204  07A4  0DA7               	rlf	___lomod@divisor+7,f
  6205  07A5  3001               	movlw	1
  6206  07A6  00F1               	movwf	??___lomod
  6207  07A7  0871               	movf	??___lomod,w
  6208  07A8  07F2               	addwf	___lomod@counter,f
  6209  07A9  2F9B               	goto	l3018
  6210  07AA                     l3020:	
  6211  07AA  0827               	movf	___lomod@divisor+7,w
  6212  07AB  022F               	subwf	___lomod@dividend+7,w
  6213  07AC  1D03               	skipz
  6214  07AD  2FC8               	goto	u2925
  6215  07AE  0826               	movf	___lomod@divisor+6,w
  6216  07AF  022E               	subwf	___lomod@dividend+6,w
  6217  07B0  1D03               	skipz
  6218  07B1  2FC8               	goto	u2925
  6219  07B2  0825               	movf	___lomod@divisor+5,w
  6220  07B3  022D               	subwf	___lomod@dividend+5,w
  6221  07B4  1D03               	skipz
  6222  07B5  2FC8               	goto	u2925
  6223  07B6  0824               	movf	___lomod@divisor+4,w
  6224  07B7  022C               	subwf	___lomod@dividend+4,w
  6225  07B8  1D03               	skipz
  6226  07B9  2FC8               	goto	u2925
  6227  07BA  0823               	movf	___lomod@divisor+3,w
  6228  07BB  022B               	subwf	___lomod@dividend+3,w
  6229  07BC  1D03               	skipz
  6230  07BD  2FC8               	goto	u2925
  6231  07BE  0822               	movf	___lomod@divisor+2,w
  6232  07BF  022A               	subwf	___lomod@dividend+2,w
  6233  07C0  1D03               	skipz
  6234  07C1  2FC8               	goto	u2925
  6235  07C2  0821               	movf	___lomod@divisor+1,w
  6236  07C3  0229               	subwf	___lomod@dividend+1,w
  6237  07C4  1D03               	skipz
  6238  07C5  2FC8               	goto	u2925
  6239  07C6  0820               	movf	___lomod@divisor,w
  6240  07C7  0228               	subwf	___lomod@dividend,w
  6241  07C8                     u2925:	
  6242  07C8  1C03               	skipc
  6243  07C9  2FDA               	goto	l3024
  6244  07CA  0820               	movf	___lomod@divisor,w
  6245  07CB  02A8               	subwf	___lomod@dividend,f
  6246  07CC  0821               	movf	___lomod@divisor+1,w
  6247  07CD  3BA9               	subwfb	___lomod@dividend+1,f
  6248  07CE  0822               	movf	___lomod@divisor+2,w
  6249  07CF  3BAA               	subwfb	___lomod@dividend+2,f
  6250  07D0  0823               	movf	___lomod@divisor+3,w
  6251  07D1  3BAB               	subwfb	___lomod@dividend+3,f
  6252  07D2  0824               	movf	___lomod@divisor+4,w
  6253  07D3  3BAC               	subwfb	___lomod@dividend+4,f
  6254  07D4  0825               	movf	___lomod@divisor+5,w
  6255  07D5  3BAD               	subwfb	___lomod@dividend+5,f
  6256  07D6  0826               	movf	___lomod@divisor+6,w
  6257  07D7  3BAE               	subwfb	___lomod@dividend+6,f
  6258  07D8  0827               	movf	___lomod@divisor+7,w
  6259  07D9  3BAF               	subwfb	___lomod@dividend+7,f
  6260  07DA                     l3024:	
  6261  07DA  36A7               	lsrf	___lomod@divisor+7,f
  6262  07DB  0CA6               	rrf	___lomod@divisor+6,f
  6263  07DC  0CA5               	rrf	___lomod@divisor+5,f
  6264  07DD  0CA4               	rrf	___lomod@divisor+4,f
  6265  07DE  0CA3               	rrf	___lomod@divisor+3,f
  6266  07DF  0CA2               	rrf	___lomod@divisor+2,f
  6267  07E0  0CA1               	rrf	___lomod@divisor+1,f
  6268  07E1  0CA0               	rrf	___lomod@divisor,f
  6269  07E2  3001               	movlw	1
  6270  07E3  02F2               	subwf	___lomod@counter,f
  6271  07E4  1D03               	btfss	3,2
  6272  07E5  2FAA               	goto	l3020
  6273  07E6                     l948:	
  6274  07E6  0828               	movf	___lomod@dividend,w
  6275  07E7  00A0               	movwf	?___lomod
  6276  07E8  0829               	movf	___lomod@dividend+1,w
  6277  07E9  00A1               	movwf	?___lomod+1
  6278  07EA  082A               	movf	___lomod@dividend+2,w
  6279  07EB  00A2               	movwf	?___lomod+2
  6280  07EC  082B               	movf	___lomod@dividend+3,w
  6281  07ED  00A3               	movwf	?___lomod+3
  6282  07EE  082C               	movf	___lomod@dividend+4,w
  6283  07EF  00A4               	movwf	?___lomod+4
  6284  07F0  082D               	movf	___lomod@dividend+5,w
  6285  07F1  00A5               	movwf	?___lomod+5
  6286  07F2  082E               	movf	___lomod@dividend+6,w
  6287  07F3  00A6               	movwf	?___lomod+6
  6288  07F4  082F               	movf	___lomod@dividend+7,w
  6289  07F5  00A7               	movwf	?___lomod+7
  6290  07F6  0008               	return
  6291  07F7                     __end_of___lomod:	
  6292                           
  6293                           	psect	text13
  6294  1E61                     __ptext13:	
  6295 ;; *************** function ___lodiv *****************
  6296 ;; Defined at:
  6297 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  6298 ;; Parameters:    Size  Location     Type
  6299 ;;  divisor         8    0[BANK0 ] unsigned long long 
  6300 ;;  dividend        8    8[BANK0 ] unsigned long long 
  6301 ;; Auto vars:     Size  Location     Type
  6302 ;;  quotient        8    2[COMMON] unsigned long long 
  6303 ;;  counter         1   10[COMMON] unsigned char 
  6304 ;; Return value:  Size  Location     Type
  6305 ;;                  8    0[BANK0 ] unsigned long long 
  6306 ;; Registers used:
  6307 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6308 ;; Tracked objects:
  6309 ;;		On entry : 0/0
  6310 ;;		On exit  : 0/0
  6311 ;;		Unchanged: 0/0
  6312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6313 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6314 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6315 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6316 ;;      Totals:        10      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6317 ;;Total ram usage:       26 bytes
  6318 ;; Hardware stack levels used:    1
  6319 ;; Hardware stack levels required when called:    1
  6320 ;; This function calls:
  6321 ;;		Nothing
  6322 ;; This function is called by:
  6323 ;;		_utoa
  6324 ;; This function uses a non-reentrant model
  6325 ;;
  6326                           
  6327                           
  6328                           ;psect for function ___lodiv
  6329  1E61                     ___lodiv:	
  6330                           
  6331                           ;incstack = 0
  6332                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  6333  1E61  3072               	movlw	low ___lodiv@quotient
  6334  1E62  0086               	movwf	6
  6335  1E63  3000               	movlw	high ___lodiv@quotient
  6336  1E64  0087               	movwf	7
  6337  1E65  3008               	movlw	8
  6338  1E66  00F1               	movwf	??___lodiv
  6339  1E67  3000               	movlw	0
  6340  1E68                     u2850:	
  6341  1E68  001E               	movwi fsr1++
  6342  1E69  0BF1               	decfsz	??___lodiv,f
  6343  1E6A  2E68               	goto	u2850
  6344  1E6B  0020               	movlb	0	; select bank0
  6345  1E6C  0820               	movf	___lodiv@divisor,w
  6346  1E6D  0421               	iorwf	___lodiv@divisor+1,w
  6347  1E6E  0422               	iorwf	___lodiv@divisor+2,w
  6348  1E6F  0423               	iorwf	___lodiv@divisor+3,w
  6349  1E70  0424               	iorwf	___lodiv@divisor+4,w
  6350  1E71  0425               	iorwf	___lodiv@divisor+5,w
  6351  1E72  0426               	iorwf	___lodiv@divisor+6,w
  6352  1E73  0427               	iorwf	___lodiv@divisor+7,w
  6353  1E74  1903               	skipnz
  6354  1E75  2ECC               	goto	l938
  6355  1E76  01FA               	clrf	___lodiv@counter
  6356  1E77  0AFA               	incf	___lodiv@counter,f
  6357  1E78                     l2998:	
  6358  1E78  1BA7               	btfsc	___lodiv@divisor+7,7
  6359  1E79  2E87               	goto	l3000
  6360  1E7A  35A0               	lslf	___lodiv@divisor,f
  6361  1E7B  0DA1               	rlf	___lodiv@divisor+1,f
  6362  1E7C  0DA2               	rlf	___lodiv@divisor+2,f
  6363  1E7D  0DA3               	rlf	___lodiv@divisor+3,f
  6364  1E7E  0DA4               	rlf	___lodiv@divisor+4,f
  6365  1E7F  0DA5               	rlf	___lodiv@divisor+5,f
  6366  1E80  0DA6               	rlf	___lodiv@divisor+6,f
  6367  1E81  0DA7               	rlf	___lodiv@divisor+7,f
  6368  1E82  3001               	movlw	1
  6369  1E83  00F1               	movwf	??___lodiv
  6370  1E84  0871               	movf	??___lodiv,w
  6371  1E85  07FA               	addwf	___lodiv@counter,f
  6372  1E86  2E78               	goto	l2998
  6373  1E87                     l3000:	
  6374  1E87  35F2               	lslf	___lodiv@quotient,f
  6375  1E88  0DF3               	rlf	___lodiv@quotient+1,f
  6376  1E89  0DF4               	rlf	___lodiv@quotient+2,f
  6377  1E8A  0DF5               	rlf	___lodiv@quotient+3,f
  6378  1E8B  0DF6               	rlf	___lodiv@quotient+4,f
  6379  1E8C  0DF7               	rlf	___lodiv@quotient+5,f
  6380  1E8D  0DF8               	rlf	___lodiv@quotient+6,f
  6381  1E8E  0DF9               	rlf	___lodiv@quotient+7,f
  6382  1E8F  0827               	movf	___lodiv@divisor+7,w
  6383  1E90  022F               	subwf	___lodiv@dividend+7,w
  6384  1E91  1D03               	skipz
  6385  1E92  2EAD               	goto	u2885
  6386  1E93  0826               	movf	___lodiv@divisor+6,w
  6387  1E94  022E               	subwf	___lodiv@dividend+6,w
  6388  1E95  1D03               	skipz
  6389  1E96  2EAD               	goto	u2885
  6390  1E97  0825               	movf	___lodiv@divisor+5,w
  6391  1E98  022D               	subwf	___lodiv@dividend+5,w
  6392  1E99  1D03               	skipz
  6393  1E9A  2EAD               	goto	u2885
  6394  1E9B  0824               	movf	___lodiv@divisor+4,w
  6395  1E9C  022C               	subwf	___lodiv@dividend+4,w
  6396  1E9D  1D03               	skipz
  6397  1E9E  2EAD               	goto	u2885
  6398  1E9F  0823               	movf	___lodiv@divisor+3,w
  6399  1EA0  022B               	subwf	___lodiv@dividend+3,w
  6400  1EA1  1D03               	skipz
  6401  1EA2  2EAD               	goto	u2885
  6402  1EA3  0822               	movf	___lodiv@divisor+2,w
  6403  1EA4  022A               	subwf	___lodiv@dividend+2,w
  6404  1EA5  1D03               	skipz
  6405  1EA6  2EAD               	goto	u2885
  6406  1EA7  0821               	movf	___lodiv@divisor+1,w
  6407  1EA8  0229               	subwf	___lodiv@dividend+1,w
  6408  1EA9  1D03               	skipz
  6409  1EAA  2EAD               	goto	u2885
  6410  1EAB  0820               	movf	___lodiv@divisor,w
  6411  1EAC  0228               	subwf	___lodiv@dividend,w
  6412  1EAD                     u2885:	
  6413  1EAD  1C03               	skipc
  6414  1EAE  2EC0               	goto	l3008
  6415  1EAF  0820               	movf	___lodiv@divisor,w
  6416  1EB0  02A8               	subwf	___lodiv@dividend,f
  6417  1EB1  0821               	movf	___lodiv@divisor+1,w
  6418  1EB2  3BA9               	subwfb	___lodiv@dividend+1,f
  6419  1EB3  0822               	movf	___lodiv@divisor+2,w
  6420  1EB4  3BAA               	subwfb	___lodiv@dividend+2,f
  6421  1EB5  0823               	movf	___lodiv@divisor+3,w
  6422  1EB6  3BAB               	subwfb	___lodiv@dividend+3,f
  6423  1EB7  0824               	movf	___lodiv@divisor+4,w
  6424  1EB8  3BAC               	subwfb	___lodiv@dividend+4,f
  6425  1EB9  0825               	movf	___lodiv@divisor+5,w
  6426  1EBA  3BAD               	subwfb	___lodiv@dividend+5,f
  6427  1EBB  0826               	movf	___lodiv@divisor+6,w
  6428  1EBC  3BAE               	subwfb	___lodiv@dividend+6,f
  6429  1EBD  0827               	movf	___lodiv@divisor+7,w
  6430  1EBE  3BAF               	subwfb	___lodiv@dividend+7,f
  6431  1EBF  1472               	bsf	___lodiv@quotient,0
  6432  1EC0                     l3008:	
  6433  1EC0  36A7               	lsrf	___lodiv@divisor+7,f
  6434  1EC1  0CA6               	rrf	___lodiv@divisor+6,f
  6435  1EC2  0CA5               	rrf	___lodiv@divisor+5,f
  6436  1EC3  0CA4               	rrf	___lodiv@divisor+4,f
  6437  1EC4  0CA3               	rrf	___lodiv@divisor+3,f
  6438  1EC5  0CA2               	rrf	___lodiv@divisor+2,f
  6439  1EC6  0CA1               	rrf	___lodiv@divisor+1,f
  6440  1EC7  0CA0               	rrf	___lodiv@divisor,f
  6441  1EC8  3001               	movlw	1
  6442  1EC9  02FA               	subwf	___lodiv@counter,f
  6443  1ECA  1D03               	btfss	3,2
  6444  1ECB  2E87               	goto	l3000
  6445  1ECC                     l938:	
  6446  1ECC  0872               	movf	___lodiv@quotient,w
  6447  1ECD  00A0               	movwf	?___lodiv
  6448  1ECE  0873               	movf	___lodiv@quotient+1,w
  6449  1ECF  00A1               	movwf	?___lodiv+1
  6450  1ED0  0874               	movf	___lodiv@quotient+2,w
  6451  1ED1  00A2               	movwf	?___lodiv+2
  6452  1ED2  0875               	movf	___lodiv@quotient+3,w
  6453  1ED3  00A3               	movwf	?___lodiv+3
  6454  1ED4  0876               	movf	___lodiv@quotient+4,w
  6455  1ED5  00A4               	movwf	?___lodiv+4
  6456  1ED6  0877               	movf	___lodiv@quotient+5,w
  6457  1ED7  00A5               	movwf	?___lodiv+5
  6458  1ED8  0878               	movf	___lodiv@quotient+6,w
  6459  1ED9  00A6               	movwf	?___lodiv+6
  6460  1EDA  0879               	movf	___lodiv@quotient+7,w
  6461  1EDB  00A7               	movwf	?___lodiv+7
  6462  1EDC  0008               	return
  6463  1EDD                     __end_of___lodiv:	
  6464                           
  6465                           	psect	text14
  6466  1D44                     __ptext14:	
  6467 ;; *************** function _strncmp *****************
  6468 ;; Defined at:
  6469 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  6470 ;; Parameters:    Size  Location     Type
  6471 ;;  _l              2    1[COMMON] PTR const unsigned char 
  6472 ;;		 -> STR_5(43), STR_3(43), 
  6473 ;;  _r              2    3[COMMON] PTR const unsigned char 
  6474 ;;		 -> STR_137(3), STR_133(3), STR_128(3), STR_124(3), 
  6475 ;;		 -> STR_119(3), STR_115(3), STR_110(4), STR_106(4), 
  6476 ;;		 -> STR_101(3), STR_96(3), STR_91(3), STR_86(4), 
  6477 ;;		 -> STR_81(3), STR_76(3), STR_71(3), STR_66(4), 
  6478 ;;		 -> STR_61(3), STR_56(3), STR_51(3), STR_46(4), 
  6479 ;;		 -> STR_41(3), STR_37(3), STR_32(3), STR_28(3), 
  6480 ;;		 -> STR_23(3), STR_19(3), STR_14(4), STR_10(4), 
  6481 ;;  n               2    5[COMMON] unsigned int 
  6482 ;; Auto vars:     Size  Location     Type
  6483 ;;  r               2   10[COMMON] PTR const unsigned char 
  6484 ;;		 -> STR_137(3), STR_133(3), STR_128(3), STR_124(3), 
  6485 ;;		 -> STR_119(3), STR_115(3), STR_110(4), STR_106(4), 
  6486 ;;		 -> STR_101(3), STR_96(3), STR_91(3), STR_86(4), 
  6487 ;;		 -> STR_81(3), STR_76(3), STR_71(3), STR_66(4), 
  6488 ;;		 -> STR_61(3), STR_56(3), STR_51(3), STR_46(4), 
  6489 ;;		 -> STR_41(3), STR_37(3), STR_32(3), STR_28(3), 
  6490 ;;		 -> STR_23(3), STR_19(3), STR_14(4), STR_10(4), 
  6491 ;;  l               2    8[COMMON] PTR const unsigned char 
  6492 ;;		 -> STR_5(43), STR_3(43), 
  6493 ;; Return value:  Size  Location     Type
  6494 ;;                  2    1[COMMON] int 
  6495 ;; Registers used:
  6496 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6497 ;; Tracked objects:
  6498 ;;		On entry : 0/0
  6499 ;;		On exit  : 0/0
  6500 ;;		Unchanged: 0/0
  6501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6502 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6503 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6504 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6505 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6506 ;;Total ram usage:       11 bytes
  6507 ;; Hardware stack levels used:    1
  6508 ;; Hardware stack levels required when called:    1
  6509 ;; This function calls:
  6510 ;;		Nothing
  6511 ;; This function is called by:
  6512 ;;		_vfpfcnvrt
  6513 ;; This function uses a non-reentrant model
  6514 ;;
  6515                           
  6516                           
  6517                           ;psect for function _strncmp
  6518  1D44                     _strncmp:	
  6519                           
  6520                           ;incstack = 0
  6521                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  6522  1D44  0872               	movf	strncmp@_l+1,w
  6523  1D45  00F9               	movwf	strncmp@l+1
  6524  1D46  0871               	movf	strncmp@_l,w
  6525  1D47  00F8               	movwf	strncmp@l
  6526  1D48  0874               	movf	strncmp@_r+1,w
  6527  1D49  00FB               	movwf	strncmp@r+1
  6528  1D4A  0873               	movf	strncmp@_r,w
  6529  1D4B  00FA               	movwf	strncmp@r
  6530  1D4C  3001               	movlw	1
  6531  1D4D  02F5               	subwf	strncmp@n,f
  6532  1D4E  3000               	movlw	0
  6533  1D4F  3BF6               	subwfb	strncmp@n+1,f
  6534  1D50  0A75               	incf	strncmp@n,w
  6535  1D51  1D03               	skipz
  6536  1D52  2D7E               	goto	l3360
  6537  1D53  0A76               	incf	strncmp@n+1,w
  6538  1D54  1D03               	btfss	3,2
  6539  1D55  2D7E               	goto	l3360
  6540  1D56  01F1               	clrf	?_strncmp
  6541  1D57  01F2               	clrf	?_strncmp+1
  6542  1D58  0008               	return
  6543  1D59                     l3362:	
  6544  1D59  087A               	movf	strncmp@r,w
  6545  1D5A  0084               	movwf	4
  6546  1D5B  087B               	movf	strncmp@r+1,w
  6547  1D5C  0085               	movwf	5
  6548  1D5D  0012               	moviw fsr0++
  6549  1D5E  1903               	btfsc	3,2
  6550  1D5F  2D85               	goto	l3368
  6551  1D60  0875               	movf	strncmp@n,w
  6552  1D61  0476               	iorwf	strncmp@n+1,w
  6553  1D62  1903               	btfsc	3,2
  6554  1D63  2D85               	goto	l3368
  6555  1D64  087A               	movf	strncmp@r,w
  6556  1D65  0084               	movwf	4
  6557  1D66  087B               	movf	strncmp@r+1,w
  6558  1D67  0085               	movwf	5
  6559  1D68  0800               	movf	0,w	;code access
  6560  1D69  00F7               	movwf	??_strncmp
  6561  1D6A  0878               	movf	strncmp@l,w
  6562  1D6B  0084               	movwf	4
  6563  1D6C  0879               	movf	strncmp@l+1,w
  6564  1D6D  0085               	movwf	5
  6565  1D6E  0800               	movf	0,w	;code access
  6566  1D6F  0677               	xorwf	??_strncmp,w
  6567  1D70  1D03               	btfss	3,2
  6568  1D71  2D85               	goto	l3368
  6569  1D72  3001               	movlw	1
  6570  1D73  07F8               	addwf	strncmp@l,f
  6571  1D74  3000               	movlw	0
  6572  1D75  3DF9               	addwfc	strncmp@l+1,f
  6573  1D76  3001               	movlw	1
  6574  1D77  07FA               	addwf	strncmp@r,f
  6575  1D78  3000               	movlw	0
  6576  1D79  3DFB               	addwfc	strncmp@r+1,f
  6577  1D7A  3001               	movlw	1
  6578  1D7B  02F5               	subwf	strncmp@n,f
  6579  1D7C  3000               	movlw	0
  6580  1D7D  3BF6               	subwfb	strncmp@n+1,f
  6581  1D7E                     l3360:	
  6582  1D7E  0878               	movf	strncmp@l,w
  6583  1D7F  0084               	movwf	4
  6584  1D80  0879               	movf	strncmp@l+1,w
  6585  1D81  0085               	movwf	5
  6586  1D82  0012               	moviw fsr0++
  6587  1D83  1D03               	btfss	3,2
  6588  1D84  2D59               	goto	l3362
  6589  1D85                     l3368:	
  6590  1D85  0878               	movf	strncmp@l,w
  6591  1D86  0084               	movwf	4
  6592  1D87  0879               	movf	strncmp@l+1,w
  6593  1D88  0085               	movwf	5
  6594  1D89  0800               	movf	0,w	;code access
  6595  1D8A  00F7               	movwf	??_strncmp
  6596  1D8B  087A               	movf	strncmp@r,w
  6597  1D8C  0084               	movwf	4
  6598  1D8D  087B               	movf	strncmp@r+1,w
  6599  1D8E  0085               	movwf	5
  6600  1D8F  0800               	movf	0,w	;code access
  6601  1D90  0277               	subwf	??_strncmp,w
  6602  1D91  00F1               	movwf	?_strncmp
  6603  1D92  01F2               	clrf	?_strncmp+1
  6604  1D93  1C03               	skipc
  6605  1D94  03F2               	decf	?_strncmp+1,f
  6606  1D95  0008               	return
  6607  1D96                     __end_of_strncmp:	
  6608                           
  6609                           	psect	text15
  6610  12F1                     __ptext15:	
  6611 ;; *************** function _stoa *****************
  6612 ;; Defined at:
  6613 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6614 ;; Parameters:    Size  Location     Type
  6615 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  6616 ;;		 -> vsnprintf@f(6), 
  6617 ;;  s               1    2[BANK0 ] PTR unsigned char 
  6618 ;;		 -> ?_snprintf(2), 
  6619 ;; Auto vars:     Size  Location     Type
  6620 ;;  nuls            7    3[BANK0 ] unsigned char [7]
  6621 ;;  l               2   17[BANK0 ] int 
  6622 ;;  p               2   15[BANK0 ] int 
  6623 ;;  w               2   12[BANK0 ] int 
  6624 ;;  i               2   10[BANK0 ] int 
  6625 ;;  cp              1   14[BANK0 ] PTR unsigned char 
  6626 ;;		 -> ?_snprintf(2), stoa@nuls(7), 
  6627 ;; Return value:  Size  Location     Type
  6628 ;;                  2    0[BANK0 ] int 
  6629 ;; Registers used:
  6630 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6631 ;; Tracked objects:
  6632 ;;		On entry : 0/0
  6633 ;;		On exit  : 0/0
  6634 ;;		Unchanged: 0/0
  6635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6636 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6637 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6638 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6639 ;;      Totals:         2      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6640 ;;Total ram usage:       21 bytes
  6641 ;; Hardware stack levels used:    1
  6642 ;; Hardware stack levels required when called:    3
  6643 ;; This function calls:
  6644 ;;		_fputc
  6645 ;;		_strlen
  6646 ;; This function is called by:
  6647 ;;		_vfpfcnvrt
  6648 ;; This function uses a non-reentrant model
  6649 ;;
  6650                           
  6651                           
  6652                           ;psect for function _stoa
  6653  12F1                     _stoa:	
  6654                           
  6655                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  6656                           
  6657                           ;incstack = 0
  6658                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6659  12F1  3052               	movlw	low stoa@F1152
  6660  12F2  0086               	movwf	6
  6661  12F3  3001               	movlw	high stoa@F1152
  6662  12F4  0087               	movwf	7
  6663  12F5  3023               	movlw	low stoa@nuls
  6664  12F6  0084               	movwf	4
  6665  12F7  3000               	movlw	high stoa@nuls
  6666  12F8  0085               	movwf	5
  6667  12F9  3007               	movlw	7
  6668  12FA  00FA               	movwf	??_stoa
  6669  12FB                     u5080:	
  6670  12FB  0016               	moviw fsr1++
  6671  12FC  001A               	movwi fsr0++
  6672  12FD  0BFA               	decfsz	??_stoa,f
  6673  12FE  2AFB               	goto	u5080
  6674                           
  6675                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  6676  12FF  0020               	movlb	0	; select bank0
  6677  1300  0822               	movf	stoa@s,w
  6678  1301  00FA               	movwf	??_stoa
  6679  1302  087A               	movf	??_stoa,w
  6680  1303  00AE               	movwf	stoa@cp
  6681                           
  6682                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  6683  1304  082E               	movf	stoa@cp,w
  6684  1305  1D03               	btfss	3,2
  6685  1306  2B0B               	goto	l4430
  6686                           
  6687                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  6688  1307  3023               	movlw	(low (stoa@nuls| 0))& (0+255)
  6689  1308  00FA               	movwf	??_stoa
  6690  1309  087A               	movf	??_stoa,w
  6691  130A  00AE               	movwf	stoa@cp
  6692  130B                     l4430:	
  6693                           
  6694                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  6695  130B  082E               	movf	stoa@cp,w
  6696  130C  00F1               	movwf	strlen@s
  6697  130D  3000               	movlw	0
  6698  130E  00F2               	movwf	strlen@s+1
  6699  130F  3199  21C0  3192   	fcall	_strlen
  6700  1312  0872               	movf	?_strlen+1,w
  6701  1313  0020               	movlb	0	; select bank0
  6702  1314  00B2               	movwf	stoa@l+1
  6703  1315  0871               	movf	?_strlen,w
  6704  1316  00B1               	movwf	stoa@l
  6705                           
  6706                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  6707  1317  0021               	movlb	1	; select bank1
  6708  1318  0862               	movf	(_prec+1)^(0+128),w
  6709  1319  0020               	movlb	0	; select bank0
  6710  131A  00B0               	movwf	stoa@p+1
  6711  131B  0021               	movlb	1	; select bank1
  6712  131C  0861               	movf	_prec^(0+128),w
  6713  131D  0020               	movlb	0	; select bank0
  6714  131E  00AF               	movwf	stoa@p
  6715                           
  6716                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  6717  131F  1BB0               	btfsc	stoa@p+1,7
  6718  1320  2B32               	goto	l551
  6719  1321  0830               	movf	stoa@p+1,w
  6720  1322  3A80               	xorlw	128
  6721  1323  00FA               	movwf	??_stoa
  6722  1324  0832               	movf	stoa@l+1,w
  6723  1325  3A80               	xorlw	128
  6724  1326  027A               	subwf	??_stoa,w
  6725  1327  1D03               	skipz
  6726  1328  2B2B               	goto	u5115
  6727  1329  0831               	movf	stoa@l,w
  6728  132A  022F               	subwf	stoa@p,w
  6729  132B                     u5115:	
  6730  132B  1803               	btfsc	3,0
  6731  132C  2B32               	goto	l551
  6732  132D  0020               	movlb	0	; select bank0
  6733  132E  0830               	movf	stoa@p+1,w
  6734  132F  00B2               	movwf	stoa@l+1
  6735  1330  082F               	movf	stoa@p,w
  6736  1331  00B1               	movwf	stoa@l
  6737  1332                     l551:	
  6738                           
  6739                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  6740  1332  0020               	movlb	0	; select bank0
  6741  1333  0832               	movf	stoa@l+1,w
  6742  1334  00B0               	movwf	stoa@p+1
  6743  1335  0831               	movf	stoa@l,w
  6744  1336  00AF               	movwf	stoa@p
  6745                           
  6746                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  6747  1337  0021               	movlb	1	; select bank1
  6748  1338  0860               	movf	(_width+1)^(0+128),w
  6749  1339  0020               	movlb	0	; select bank0
  6750  133A  00AD               	movwf	stoa@w+1
  6751  133B  0021               	movlb	1	; select bank1
  6752  133C  085F               	movf	_width^(0+128),w
  6753  133D  0020               	movlb	0	; select bank0
  6754  133E  00AC               	movwf	stoa@w
  6755                           
  6756                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  6757  133F  0021               	movlb	1	; select bank1
  6758  1340  1C63               	btfss	_flags^(0+128),0
  6759  1341  2B54               	goto	l4448
  6760  1342  2B61               	goto	l4450
  6761  1343                     l4444:	
  6762                           
  6763                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  6764  1343  3020               	movlw	32
  6765  1344  00F1               	movwf	fputc@c
  6766  1345  3000               	movlw	0
  6767  1346  00F2               	movwf	fputc@c+1
  6768  1347  0020               	movlb	0	; select bank0
  6769  1348  0821               	movf	stoa@fp+1,w
  6770  1349  00F4               	movwf	fputc@fp+1
  6771  134A  0820               	movf	stoa@fp,w
  6772  134B  00F3               	movwf	fputc@fp
  6773  134C  319D  2596  3192   	fcall	_fputc
  6774                           
  6775                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  6776  134F  3001               	movlw	1
  6777  1350  0020               	movlb	0	; select bank0
  6778  1351  07B1               	addwf	stoa@l,f
  6779  1352  3000               	movlw	0
  6780  1353  3DB2               	addwfc	stoa@l+1,f
  6781  1354                     l4448:	
  6782                           
  6783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  6784  1354  0020               	movlb	0	; select bank0
  6785  1355  0832               	movf	stoa@l+1,w
  6786  1356  3A80               	xorlw	128
  6787  1357  00FA               	movwf	??_stoa
  6788  1358  082D               	movf	stoa@w+1,w
  6789  1359  3A80               	xorlw	128
  6790  135A  027A               	subwf	??_stoa,w
  6791  135B  1D03               	skipz
  6792  135C  2B5F               	goto	u5135
  6793  135D  082C               	movf	stoa@w,w
  6794  135E  0231               	subwf	stoa@l,w
  6795  135F                     u5135:	
  6796  135F  1C03               	skipc
  6797  1360  2B43               	goto	l4444
  6798  1361                     l4450:	
  6799                           
  6800                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  6801  1361  0020               	movlb	0	; select bank0
  6802  1362  01AA               	clrf	stoa@i
  6803  1363  01AB               	clrf	stoa@i+1
  6804  1364                     l4458:	
  6805                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  6806                           
  6807                           
  6808                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  6809  1364  082B               	movf	stoa@i+1,w
  6810  1365  3A80               	xorlw	128
  6811  1366  00FA               	movwf	??_stoa
  6812  1367  0830               	movf	stoa@p+1,w
  6813  1368  3A80               	xorlw	128
  6814  1369  027A               	subwf	??_stoa,w
  6815  136A  1D03               	skipz
  6816  136B  2B6E               	goto	u5145
  6817  136C  082F               	movf	stoa@p,w
  6818  136D  022A               	subwf	stoa@i,w
  6819  136E                     u5145:	
  6820  136E  1803               	btfsc	3,0
  6821  136F  2B8C               	goto	l560
  6822                           
  6823                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  6824  1370  0020               	movlb	0	; select bank0
  6825  1371  082E               	movf	stoa@cp,w
  6826  1372  0086               	movwf	6
  6827  1373  0187               	clrf	7
  6828  1374  0801               	movf	1,w
  6829  1375  00FA               	movwf	??_stoa
  6830  1376  01FB               	clrf	??_stoa+1
  6831  1377  087A               	movf	??_stoa,w
  6832  1378  00F1               	movwf	fputc@c
  6833  1379  087B               	movf	??_stoa+1,w
  6834  137A  00F2               	movwf	fputc@c+1
  6835  137B  0821               	movf	stoa@fp+1,w
  6836  137C  00F4               	movwf	fputc@fp+1
  6837  137D  0820               	movf	stoa@fp,w
  6838  137E  00F3               	movwf	fputc@fp
  6839  137F  319D  2596  3192   	fcall	_fputc
  6840                           
  6841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  6842  1382  3001               	movlw	1
  6843  1383  00FA               	movwf	??_stoa
  6844  1384  087A               	movf	??_stoa,w
  6845  1385  0020               	movlb	0	; select bank0
  6846  1386  07AE               	addwf	stoa@cp,f
  6847                           
  6848                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  6849  1387  3001               	movlw	1
  6850  1388  07AA               	addwf	stoa@i,f
  6851  1389  3000               	movlw	0
  6852  138A  3DAB               	addwfc	stoa@i+1,f
  6853  138B  2B64               	goto	l4458
  6854  138C                     l560:	
  6855                           
  6856                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  6857  138C  0021               	movlb	1	; select bank1
  6858  138D  1863               	btfsc	_flags^(0+128),0
  6859  138E  2BA1               	goto	l4466
  6860  138F  2BAE               	goto	l4468
  6861  1390                     l4462:	
  6862                           
  6863                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  6864  1390  3020               	movlw	32
  6865  1391  00F1               	movwf	fputc@c
  6866  1392  3000               	movlw	0
  6867  1393  00F2               	movwf	fputc@c+1
  6868  1394  0020               	movlb	0	; select bank0
  6869  1395  0821               	movf	stoa@fp+1,w
  6870  1396  00F4               	movwf	fputc@fp+1
  6871  1397  0820               	movf	stoa@fp,w
  6872  1398  00F3               	movwf	fputc@fp
  6873  1399  319D  2596  3192   	fcall	_fputc
  6874                           
  6875                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  6876  139C  3001               	movlw	1
  6877  139D  0020               	movlb	0	; select bank0
  6878  139E  07B1               	addwf	stoa@l,f
  6879  139F  3000               	movlw	0
  6880  13A0  3DB2               	addwfc	stoa@l+1,f
  6881  13A1                     l4466:	
  6882                           
  6883                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  6884  13A1  0020               	movlb	0	; select bank0
  6885  13A2  0832               	movf	stoa@l+1,w
  6886  13A3  3A80               	xorlw	128
  6887  13A4  00FA               	movwf	??_stoa
  6888  13A5  082D               	movf	stoa@w+1,w
  6889  13A6  3A80               	xorlw	128
  6890  13A7  027A               	subwf	??_stoa,w
  6891  13A8  1D03               	skipz
  6892  13A9  2BAC               	goto	u5165
  6893  13AA  082C               	movf	stoa@w,w
  6894  13AB  0231               	subwf	stoa@l,w
  6895  13AC                     u5165:	
  6896  13AC  1C03               	skipc
  6897  13AD  2B90               	goto	l4462
  6898  13AE                     l4468:	
  6899                           
  6900                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  6901  13AE  0020               	movlb	0	; select bank0
  6902  13AF  0832               	movf	stoa@l+1,w
  6903  13B0  00A1               	movwf	?_stoa+1
  6904  13B1  0831               	movf	stoa@l,w
  6905  13B2  00A0               	movwf	?_stoa
  6906  13B3  0008               	return
  6907  13B4                     __end_of_stoa:	
  6908                           
  6909                           	psect	text16
  6910  170F                     __ptext16:	
  6911 ;; *************** function _otoa *****************
  6912 ;; Defined at:
  6913 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6914 ;; Parameters:    Size  Location     Type
  6915 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  6916 ;;		 -> vsnprintf@f(6), 
  6917 ;;  d               8   18[BANK0 ] unsigned long long 
  6918 ;; Auto vars:     Size  Location     Type
  6919 ;;  n               8   40[BANK0 ] unsigned long long 
  6920 ;;  i               2   48[BANK0 ] int 
  6921 ;;  w               2   38[BANK0 ] int 
  6922 ;;  t               2   36[BANK0 ] int 
  6923 ;;  p               2   34[BANK0 ] int 
  6924 ;; Return value:  Size  Location     Type
  6925 ;;                  2   16[BANK0 ] int 
  6926 ;; Registers used:
  6927 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6928 ;; Tracked objects:
  6929 ;;		On entry : 0/0
  6930 ;;		On exit  : 0/0
  6931 ;;		Unchanged: 0/0
  6932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6933 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6934 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6935 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6936 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6937 ;;Total ram usage:       34 bytes
  6938 ;; Hardware stack levels used:    1
  6939 ;; Hardware stack levels required when called:    5
  6940 ;; This function calls:
  6941 ;;		_pad
  6942 ;; This function is called by:
  6943 ;;		_vfpfcnvrt
  6944 ;; This function uses a non-reentrant model
  6945 ;;
  6946                           
  6947                           
  6948                           ;psect for function _otoa
  6949  170F                     _otoa:	
  6950                           
  6951                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  6952                           
  6953                           ;incstack = 0
  6954                           ; Regs used in _otoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6955  170F  0021               	movlb	1	; select bank1
  6956  1710  1BE2               	btfsc	(_prec+1)^(0+128),7
  6957  1711  2F16               	goto	l529
  6958                           
  6959                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  6960  1712  30FD               	movlw	253
  6961  1713  05E3               	andwf	_flags^(0+128),f
  6962  1714  30FF               	movlw	255
  6963  1715  05E4               	andwf	(_flags+1)^(0+128),f
  6964  1716                     l529:	
  6965                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 515:     }
  6966                           
  6967                           
  6968                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  6969  1716  0862               	movf	(_prec+1)^(0+128),w
  6970  1717  3A80               	xorlw	128
  6971  1718  0020               	movlb	0	; select bank0
  6972  1719  00BA               	movwf	??_otoa
  6973  171A  3080               	movlw	128
  6974  171B  023A               	subwf	??_otoa,w
  6975  171C  1D03               	skipz
  6976  171D  2F21               	goto	u4995
  6977  171E  3001               	movlw	1
  6978  171F  0021               	movlb	1	; select bank1
  6979  1720  0261               	subwf	_prec^(0+128),w
  6980  1721                     u4995:	
  6981  1721  1803               	skipnc
  6982  1722  2F29               	goto	l4384
  6983  1723  3001               	movlw	1
  6984  1724  0020               	movlb	0	; select bank0
  6985  1725  00C2               	movwf	otoa@p
  6986  1726  3000               	movlw	0
  6987  1727  00C3               	movwf	otoa@p+1
  6988  1728  2F31               	goto	l533
  6989  1729                     l4384:	
  6990  1729  0021               	movlb	1	; select bank1
  6991  172A  0862               	movf	(_prec+1)^(0+128),w
  6992  172B  0020               	movlb	0	; select bank0
  6993  172C  00C3               	movwf	otoa@p+1
  6994  172D  0021               	movlb	1	; select bank1
  6995  172E  0861               	movf	_prec^(0+128),w
  6996  172F  0020               	movlb	0	; select bank0
  6997  1730  00C2               	movwf	otoa@p
  6998  1731                     l533:	
  6999                           
  7000                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  7001  1731  0021               	movlb	1	; select bank1
  7002  1732  0860               	movf	(_width+1)^(0+128),w
  7003  1733  0020               	movlb	0	; select bank0
  7004  1734  00C7               	movwf	otoa@w+1
  7005  1735  0021               	movlb	1	; select bank1
  7006  1736  085F               	movf	_width^(0+128),w
  7007  1737  0020               	movlb	0	; select bank0
  7008  1738  00C6               	movwf	otoa@w
  7009                           
  7010                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  7011  1739  0832               	movf	otoa@d,w
  7012  173A  00C8               	movwf	otoa@n
  7013  173B  0833               	movf	otoa@d+1,w
  7014  173C  00C9               	movwf	otoa@n+1
  7015  173D  0834               	movf	otoa@d+2,w
  7016  173E  00CA               	movwf	otoa@n+2
  7017  173F  0835               	movf	otoa@d+3,w
  7018  1740  00CB               	movwf	otoa@n+3
  7019  1741  0836               	movf	otoa@d+4,w
  7020  1742  00CC               	movwf	otoa@n+4
  7021  1743  0837               	movf	otoa@d+5,w
  7022  1744  00CD               	movwf	otoa@n+5
  7023  1745  0838               	movf	otoa@d+6,w
  7024  1746  00CE               	movwf	otoa@n+6
  7025  1747  0839               	movf	otoa@d+7,w
  7026  1748  00CF               	movwf	otoa@n+7
  7027                           
  7028                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  7029  1749  301F               	movlw	31
  7030  174A  00D0               	movwf	otoa@i
  7031  174B  3000               	movlw	0
  7032  174C  00D1               	movwf	otoa@i+1
  7033                           
  7034                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  7035  174D  0022               	movlb	2	; select bank2
  7036  174E  01D1               	clrf	(_dbuf^(0+256)+31)
  7037                           
  7038                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  7039  174F  0020               	movlb	0	; select bank0
  7040  1750  01C4               	clrf	otoa@t
  7041  1751  01C5               	clrf	otoa@t+1
  7042                           
  7043                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7044  1752  2FC6               	goto	l534
  7045  1753                     l4402:	
  7046  1753  0020               	movlb	0	; select bank0
  7047  1754  0848               	movf	otoa@n,w
  7048  1755  0449               	iorwf	otoa@n+1,w
  7049  1756  044A               	iorwf	otoa@n+2,w
  7050  1757  044B               	iorwf	otoa@n+3,w
  7051  1758  044C               	iorwf	otoa@n+4,w
  7052  1759  044D               	iorwf	otoa@n+5,w
  7053  175A  044E               	iorwf	otoa@n+6,w
  7054  175B  044F               	iorwf	otoa@n+7,w
  7055  175C  1D03               	skipz
  7056  175D  2F78               	goto	l4392
  7057  175E  0843               	movf	otoa@p+1,w
  7058  175F  3A80               	xorlw	128
  7059  1760  00BA               	movwf	??_otoa
  7060  1761  3080               	movlw	128
  7061  1762  023A               	subwf	??_otoa,w
  7062  1763  1D03               	skipz
  7063  1764  2F67               	goto	u5035
  7064  1765  3001               	movlw	1
  7065  1766  0242               	subwf	otoa@p,w
  7066  1767                     u5035:	
  7067  1767  1803               	skipnc
  7068  1768  2F78               	goto	l4392
  7069  1769  0020               	movlb	0	; select bank0
  7070  176A  0847               	movf	otoa@w+1,w
  7071  176B  3A80               	xorlw	128
  7072  176C  00BA               	movwf	??_otoa
  7073  176D  3080               	movlw	128
  7074  176E  023A               	subwf	??_otoa,w
  7075  176F  1D03               	skipz
  7076  1770  2F73               	goto	u5045
  7077  1771  3001               	movlw	1
  7078  1772  0246               	subwf	otoa@w,w
  7079  1773                     u5045:	
  7080  1773  1C03               	skipc
  7081  1774  2FD1               	goto	l540
  7082  1775  0021               	movlb	1	; select bank1
  7083  1776  1CE3               	btfss	_flags^(0+128),1
  7084  1777  2FD1               	goto	l540
  7085  1778                     l4392:	
  7086                           
  7087                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  7088  1778  30FF               	movlw	255
  7089  1779  0020               	movlb	0	; select bank0
  7090  177A  07D0               	addwf	otoa@i,f
  7091  177B  30FF               	movlw	255
  7092  177C  3DD1               	addwfc	otoa@i+1,f
  7093                           
  7094                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  7095  177D  3007               	movlw	7
  7096  177E  0548               	andwf	otoa@n,w
  7097  177F  00C4               	movwf	otoa@t
  7098  1780  3000               	movlw	0
  7099  1781  0549               	andwf	otoa@n+1,w
  7100  1782  00C5               	movwf	otoa@t+1
  7101                           
  7102                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  7103  1783  0844               	movf	otoa@t,w
  7104  1784  3E30               	addlw	48
  7105  1785  00BA               	movwf	??_otoa
  7106  1786  0850               	movf	otoa@i,w
  7107  1787  3E32               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7108  1788  0086               	movwf	6
  7109  1789  3001               	movlw	1	; select bank2/3
  7110  178A  0087               	movwf	7
  7111  178B  083A               	movf	??_otoa,w
  7112  178C  0081               	movwf	1
  7113                           
  7114                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  7115  178D  30FF               	movlw	255
  7116  178E  07C2               	addwf	otoa@p,f
  7117  178F  30FF               	movlw	255
  7118  1790  3DC3               	addwfc	otoa@p+1,f
  7119                           
  7120                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  7121  1791  30FF               	movlw	255
  7122  1792  07C6               	addwf	otoa@w,f
  7123  1793  30FF               	movlw	255
  7124  1794  3DC7               	addwfc	otoa@w+1,f
  7125                           
  7126                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  7127  1795  3048               	movlw	low otoa@n
  7128  1796  0086               	movwf	6
  7129  1797  3000               	movlw	high otoa@n
  7130  1798  0087               	movwf	7
  7131  1799  3F40               	moviw [0]fsr1
  7132  179A  00BA               	movwf	??_otoa
  7133  179B  3F41               	moviw [1]fsr1
  7134  179C  00BB               	movwf	??_otoa+1
  7135  179D  3F42               	moviw [2]fsr1
  7136  179E  00BC               	movwf	??_otoa+2
  7137  179F  3F43               	moviw [3]fsr1
  7138  17A0  00BD               	movwf	??_otoa+3
  7139  17A1  3F44               	moviw [4]fsr1
  7140  17A2  00BE               	movwf	??_otoa+4
  7141  17A3  3F45               	moviw [5]fsr1
  7142  17A4  00BF               	movwf	??_otoa+5
  7143  17A5  3F46               	moviw [6]fsr1
  7144  17A6  00C0               	movwf	??_otoa+6
  7145  17A7  3F47               	moviw [7]fsr1
  7146  17A8  00C1               	movwf	??_otoa+7
  7147  17A9  3003               	movlw	3
  7148  17AA                     u5005:	
  7149  17AA  0020               	movlb	0	; select bank0
  7150  17AB  36C1               	lsrf	??_otoa+7,f
  7151  17AC  0CC0               	rrf	??_otoa+6,f
  7152  17AD  0CBF               	rrf	??_otoa+5,f
  7153  17AE  0CBE               	rrf	??_otoa+4,f
  7154  17AF  0CBD               	rrf	??_otoa+3,f
  7155  17B0  0CBC               	rrf	??_otoa+2,f
  7156  17B1  0CBB               	rrf	??_otoa+1,f
  7157  17B2  0CBA               	rrf	??_otoa,f
  7158  17B3  0B89               	decfsz	9,f
  7159  17B4  2FAA               	goto	u5005
  7160  17B5  0020               	movlb	0	; select bank0
  7161  17B6  0841               	movf	??_otoa+7,w
  7162  17B7  00CF               	movwf	otoa@n+7
  7163  17B8  0840               	movf	??_otoa+6,w
  7164  17B9  00CE               	movwf	otoa@n+6
  7165  17BA  083F               	movf	??_otoa+5,w
  7166  17BB  00CD               	movwf	otoa@n+5
  7167  17BC  083E               	movf	??_otoa+4,w
  7168  17BD  00CC               	movwf	otoa@n+4
  7169  17BE  083D               	movf	??_otoa+3,w
  7170  17BF  00CB               	movwf	otoa@n+3
  7171  17C0  083C               	movf	??_otoa+2,w
  7172  17C1  00CA               	movwf	otoa@n+2
  7173  17C2  083B               	movf	??_otoa+1,w
  7174  17C3  00C9               	movwf	otoa@n+1
  7175  17C4  083A               	movf	??_otoa,w
  7176  17C5  00C8               	movwf	otoa@n
  7177  17C6                     l534:	
  7178                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 531:     }
  7179                           
  7180                           
  7181                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7182  17C6  0851               	movf	otoa@i+1,w
  7183  17C7  3A80               	xorlw	128
  7184  17C8  00BA               	movwf	??_otoa
  7185  17C9  3080               	movlw	128
  7186  17CA  023A               	subwf	??_otoa,w
  7187  17CB  1D03               	skipz
  7188  17CC  2FCF               	goto	u5015
  7189  17CD  3001               	movlw	1
  7190  17CE  0250               	subwf	otoa@i,w
  7191  17CF                     u5015:	
  7192  17CF  1803               	btfsc	3,0
  7193  17D0  2F53               	goto	l4402
  7194  17D1                     l540:	
  7195                           
  7196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  7197  17D1  0021               	movlb	1	; select bank1
  7198  17D2  1E63               	btfss	_flags^(0+128),4
  7199  17D3  2FEA               	goto	l4418
  7200  17D4  0020               	movlb	0	; select bank0
  7201  17D5  0844               	movf	otoa@t,w
  7202  17D6  0445               	iorwf	otoa@t+1,w
  7203  17D7  1903               	btfsc	3,2
  7204  17D8  2FEA               	goto	l4418
  7205                           
  7206                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  7207  17D9  30FF               	movlw	255
  7208  17DA  07D0               	addwf	otoa@i,f
  7209  17DB  30FF               	movlw	255
  7210  17DC  3DD1               	addwfc	otoa@i+1,f
  7211                           
  7212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  7213  17DD  3030               	movlw	48
  7214  17DE  00BA               	movwf	??_otoa
  7215  17DF  0850               	movf	otoa@i,w
  7216  17E0  3E32               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7217  17E1  0086               	movwf	6
  7218  17E2  3001               	movlw	1	; select bank2/3
  7219  17E3  0087               	movwf	7
  7220  17E4  083A               	movf	??_otoa,w
  7221  17E5  0081               	movwf	1
  7222                           
  7223                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  7224  17E6  30FF               	movlw	255
  7225  17E7  07C6               	addwf	otoa@w,f
  7226  17E8  30FF               	movlw	255
  7227  17E9  3DC7               	addwfc	otoa@w+1,f
  7228  17EA                     l4418:	
  7229                           
  7230                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  7231  17EA  0020               	movlb	0	; select bank0
  7232  17EB  0831               	movf	otoa@fp+1,w
  7233  17EC  00A7               	movwf	pad@fp+1
  7234  17ED  0830               	movf	otoa@fp,w
  7235  17EE  00A6               	movwf	pad@fp
  7236  17EF  0850               	movf	otoa@i,w
  7237  17F0  3E32               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7238  17F1  00BA               	movwf	??_otoa
  7239  17F2  083A               	movf	??_otoa,w
  7240  17F3  00A8               	movwf	pad@buf
  7241  17F4  0847               	movf	otoa@w+1,w
  7242  17F5  00AA               	movwf	pad@p+1
  7243  17F6  0846               	movf	otoa@w,w
  7244  17F7  00A9               	movwf	pad@p
  7245  17F8  319C  24F3         	fcall	_pad
  7246  17FA  0020               	movlb	0	; select bank0
  7247  17FB  0827               	movf	?_pad+1,w
  7248  17FC  00B1               	movwf	?_otoa+1
  7249  17FD  0826               	movf	?_pad,w
  7250  17FE  00B0               	movwf	?_otoa
  7251  17FF  0008               	return
  7252  1800                     __end_of_otoa:	
  7253                           
  7254                           	psect	text17
  7255  0353                     __ptext17:	
  7256 ;; *************** function _dtoa *****************
  7257 ;; Defined at:
  7258 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7259 ;; Parameters:    Size  Location     Type
  7260 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  7261 ;;		 -> vsnprintf@f(6), 
  7262 ;;  d               8   18[BANK0 ] long long 
  7263 ;; Auto vars:     Size  Location     Type
  7264 ;;  n               8   37[BANK0 ] long long 
  7265 ;;  i               2   45[BANK0 ] int 
  7266 ;;  s               2   35[BANK0 ] int 
  7267 ;;  w               2   33[BANK0 ] int 
  7268 ;;  p               2   31[BANK0 ] int 
  7269 ;; Return value:  Size  Location     Type
  7270 ;;                  2   16[BANK0 ] int 
  7271 ;; Registers used:
  7272 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7273 ;; Tracked objects:
  7274 ;;		On entry : 0/0
  7275 ;;		On exit  : 0/0
  7276 ;;		Unchanged: 0/0
  7277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7278 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7279 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7280 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7281 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7282 ;;Total ram usage:       31 bytes
  7283 ;; Hardware stack levels used:    1
  7284 ;; Hardware stack levels required when called:    5
  7285 ;; This function calls:
  7286 ;;		___aodiv
  7287 ;;		___aomod
  7288 ;;		_abs
  7289 ;;		_pad
  7290 ;; This function is called by:
  7291 ;;		_vfpfcnvrt
  7292 ;; This function uses a non-reentrant model
  7293 ;;
  7294                           
  7295                           
  7296                           ;psect for function _dtoa
  7297  0353                     _dtoa:	
  7298                           
  7299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  7300                           
  7301                           ;incstack = 0
  7302                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7303  0353  0020               	movlb	0	; select bank0
  7304  0354  0832               	movf	dtoa@d,w
  7305  0355  00C5               	movwf	dtoa@n
  7306  0356  0833               	movf	dtoa@d+1,w
  7307  0357  00C6               	movwf	dtoa@n+1
  7308  0358  0834               	movf	dtoa@d+2,w
  7309  0359  00C7               	movwf	dtoa@n+2
  7310  035A  0835               	movf	dtoa@d+3,w
  7311  035B  00C8               	movwf	dtoa@n+3
  7312  035C  0836               	movf	dtoa@d+4,w
  7313  035D  00C9               	movwf	dtoa@n+4
  7314  035E  0837               	movf	dtoa@d+5,w
  7315  035F  00CA               	movwf	dtoa@n+5
  7316  0360  0838               	movf	dtoa@d+6,w
  7317  0361  00CB               	movwf	dtoa@n+6
  7318  0362  0839               	movf	dtoa@d+7,w
  7319  0363  00CC               	movwf	dtoa@n+7
  7320                           
  7321                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  7322  0364  3045               	movlw	low dtoa@n
  7323  0365  0086               	movwf	6
  7324  0366  3000               	movlw	high dtoa@n
  7325  0367  0087               	movwf	7
  7326  0368  3F47               	moviw [7]fsr1
  7327  0369  00BA               	movwf	??_dtoa
  7328  036A  1FBA               	btfss	??_dtoa,7
  7329  036B  2B6E               	goto	u4820
  7330  036C  3001               	movlw	1
  7331  036D  2B6F               	goto	u4830
  7332  036E                     u4820:	
  7333  036E  3000               	movlw	0
  7334  036F                     u4830:	
  7335  036F  0020               	movlb	0	; select bank0
  7336  0370  00BB               	movwf	??_dtoa+1
  7337  0371  01BC               	clrf	??_dtoa+2
  7338  0372  083B               	movf	??_dtoa+1,w
  7339  0373  00C3               	movwf	dtoa@s
  7340  0374  083C               	movf	??_dtoa+2,w
  7341  0375  00C4               	movwf	dtoa@s+1
  7342                           
  7343                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  7344  0376  0843               	movf	dtoa@s,w
  7345  0377  0444               	iorwf	dtoa@s+1,w
  7346  0378  1903               	btfsc	3,2
  7347  0379  2B98               	goto	l503
  7348                           
  7349                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  7350  037A  09C5               	comf	dtoa@n,f
  7351  037B  09C6               	comf	dtoa@n+1,f
  7352  037C  09C7               	comf	dtoa@n+2,f
  7353  037D  09C8               	comf	dtoa@n+3,f
  7354  037E  09C9               	comf	dtoa@n+4,f
  7355  037F  09CA               	comf	dtoa@n+5,f
  7356  0380  09CB               	comf	dtoa@n+6,f
  7357  0381  09CC               	comf	dtoa@n+7,f
  7358  0382  0AC5               	incf	dtoa@n,f
  7359  0383  1D03               	skipz
  7360  0384  2B98               	goto	l503
  7361  0385  0AC6               	incf	dtoa@n+1,f
  7362  0386  1D03               	skipz
  7363  0387  2B98               	goto	l503
  7364  0388  0AC7               	incf	dtoa@n+2,f
  7365  0389  1D03               	skipz
  7366  038A  2B98               	goto	l503
  7367  038B  0AC8               	incf	dtoa@n+3,f
  7368  038C  1D03               	skipz
  7369  038D  2B98               	goto	l503
  7370  038E  0AC9               	incf	dtoa@n+4,f
  7371  038F  1D03               	skipz
  7372  0390  2B98               	goto	l503
  7373  0391  0ACA               	incf	dtoa@n+5,f
  7374  0392  1D03               	skipz
  7375  0393  2B98               	goto	l503
  7376  0394  0ACB               	incf	dtoa@n+6,f
  7377  0395  1D03               	skipz
  7378  0396  2B98               	goto	l503
  7379  0397  0ACC               	incf	dtoa@n+7,f
  7380  0398                     l503:	
  7381                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
  7382                           
  7383                           
  7384                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  7385  0398  0021               	movlb	1	; select bank1
  7386  0399  1BE2               	btfsc	(_prec+1)^(0+128),7
  7387  039A  2B9F               	goto	l504
  7388                           
  7389                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  7390  039B  30FD               	movlw	253
  7391  039C  05E3               	andwf	_flags^(0+128),f
  7392  039D  30FF               	movlw	255
  7393  039E  05E4               	andwf	(_flags+1)^(0+128),f
  7394  039F                     l504:	
  7395                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
  7396                           
  7397                           
  7398                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  7399  039F  0862               	movf	(_prec+1)^(0+128),w
  7400  03A0  3A80               	xorlw	128
  7401  03A1  0020               	movlb	0	; select bank0
  7402  03A2  00BA               	movwf	??_dtoa
  7403  03A3  3080               	movlw	128
  7404  03A4  023A               	subwf	??_dtoa,w
  7405  03A5  1D03               	skipz
  7406  03A6  2BAA               	goto	u4875
  7407  03A7  3001               	movlw	1
  7408  03A8  0021               	movlb	1	; select bank1
  7409  03A9  0261               	subwf	_prec^(0+128),w
  7410  03AA                     u4875:	
  7411  03AA  1803               	skipnc
  7412  03AB  2BB2               	goto	l4332
  7413  03AC  3001               	movlw	1
  7414  03AD  0020               	movlb	0	; select bank0
  7415  03AE  00BF               	movwf	dtoa@p
  7416  03AF  3000               	movlw	0
  7417  03B0  00C0               	movwf	dtoa@p+1
  7418  03B1  2BBA               	goto	l508
  7419  03B2                     l4332:	
  7420  03B2  0021               	movlb	1	; select bank1
  7421  03B3  0862               	movf	(_prec+1)^(0+128),w
  7422  03B4  0020               	movlb	0	; select bank0
  7423  03B5  00C0               	movwf	dtoa@p+1
  7424  03B6  0021               	movlb	1	; select bank1
  7425  03B7  0861               	movf	_prec^(0+128),w
  7426  03B8  0020               	movlb	0	; select bank0
  7427  03B9  00BF               	movwf	dtoa@p
  7428  03BA                     l508:	
  7429                           
  7430                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  7431  03BA  0021               	movlb	1	; select bank1
  7432  03BB  0860               	movf	(_width+1)^(0+128),w
  7433  03BC  0020               	movlb	0	; select bank0
  7434  03BD  00C2               	movwf	dtoa@w+1
  7435  03BE  0021               	movlb	1	; select bank1
  7436  03BF  085F               	movf	_width^(0+128),w
  7437  03C0  0020               	movlb	0	; select bank0
  7438  03C1  00C1               	movwf	dtoa@w
  7439                           
  7440                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  7441  03C2  0843               	movf	dtoa@s,w
  7442  03C3  0444               	iorwf	dtoa@s+1,w
  7443  03C4  1D03               	btfss	3,2
  7444  03C5  2BC9               	goto	l4338
  7445  03C6  0021               	movlb	1	; select bank1
  7446  03C7  1D63               	btfss	_flags^(0+128),2
  7447  03C8  2BCE               	goto	l509
  7448  03C9                     l4338:	
  7449                           
  7450                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  7451  03C9  30FF               	movlw	255
  7452  03CA  0020               	movlb	0	; select bank0
  7453  03CB  07C1               	addwf	dtoa@w,f
  7454  03CC  30FF               	movlw	255
  7455  03CD  3DC2               	addwfc	dtoa@w+1,f
  7456  03CE                     l509:	
  7457                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
  7458                           
  7459                           
  7460                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  7461  03CE  301F               	movlw	31
  7462  03CF  0020               	movlb	0	; select bank0
  7463  03D0  00CD               	movwf	dtoa@i
  7464  03D1  3000               	movlw	0
  7465  03D2  00CE               	movwf	dtoa@i+1
  7466                           
  7467                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  7468  03D3  0022               	movlb	2	; select bank2
  7469  03D4  01D1               	clrf	(_dbuf^(0+256)+31)
  7470                           
  7471                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7472  03D5  2C64               	goto	l512
  7473  03D6                     l4352:	
  7474  03D6  0020               	movlb	0	; select bank0
  7475  03D7  0845               	movf	dtoa@n,w
  7476  03D8  0446               	iorwf	dtoa@n+1,w
  7477  03D9  0447               	iorwf	dtoa@n+2,w
  7478  03DA  0448               	iorwf	dtoa@n+3,w
  7479  03DB  0449               	iorwf	dtoa@n+4,w
  7480  03DC  044A               	iorwf	dtoa@n+5,w
  7481  03DD  044B               	iorwf	dtoa@n+6,w
  7482  03DE  044C               	iorwf	dtoa@n+7,w
  7483  03DF  1D03               	skipz
  7484  03E0  2BFB               	goto	l4342
  7485  03E1  0840               	movf	dtoa@p+1,w
  7486  03E2  3A80               	xorlw	128
  7487  03E3  00BA               	movwf	??_dtoa
  7488  03E4  3080               	movlw	128
  7489  03E5  023A               	subwf	??_dtoa,w
  7490  03E6  1D03               	skipz
  7491  03E7  2BEA               	goto	u4925
  7492  03E8  3001               	movlw	1
  7493  03E9  023F               	subwf	dtoa@p,w
  7494  03EA                     u4925:	
  7495  03EA  1803               	skipnc
  7496  03EB  2BFB               	goto	l4342
  7497  03EC  0020               	movlb	0	; select bank0
  7498  03ED  0842               	movf	dtoa@w+1,w
  7499  03EE  3A80               	xorlw	128
  7500  03EF  00BA               	movwf	??_dtoa
  7501  03F0  3080               	movlw	128
  7502  03F1  023A               	subwf	??_dtoa,w
  7503  03F2  1D03               	skipz
  7504  03F3  2BF6               	goto	u4935
  7505  03F4  3001               	movlw	1
  7506  03F5  0241               	subwf	dtoa@w,w
  7507  03F6                     u4935:	
  7508  03F6  1C03               	skipc
  7509  03F7  2C70               	goto	l4360
  7510  03F8  0021               	movlb	1	; select bank1
  7511  03F9  1CE3               	btfss	_flags^(0+128),1
  7512  03FA  2C70               	goto	l4360
  7513  03FB                     l4342:	
  7514                           
  7515                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  7516  03FB  30FF               	movlw	255
  7517  03FC  0020               	movlb	0	; select bank0
  7518  03FD  07CD               	addwf	dtoa@i,f
  7519  03FE  30FF               	movlw	255
  7520  03FF  3DCE               	addwfc	dtoa@i+1,f
  7521                           
  7522                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  7523  0400  300A               	movlw	10
  7524  0401  00A0               	movwf	___aomod@divisor
  7525  0402  01A1               	clrf	___aomod@divisor+1
  7526  0403  01A2               	clrf	___aomod@divisor+2
  7527  0404  01A3               	clrf	___aomod@divisor+3
  7528  0405  01A4               	clrf	___aomod@divisor+4
  7529  0406  01A5               	clrf	___aomod@divisor+5
  7530  0407  01A6               	clrf	___aomod@divisor+6
  7531  0408  01A7               	clrf	___aomod@divisor+7
  7532  0409  0845               	movf	dtoa@n,w
  7533  040A  00A8               	movwf	___aomod@dividend
  7534  040B  0846               	movf	dtoa@n+1,w
  7535  040C  00A9               	movwf	___aomod@dividend+1
  7536  040D  0847               	movf	dtoa@n+2,w
  7537  040E  00AA               	movwf	___aomod@dividend+2
  7538  040F  0848               	movf	dtoa@n+3,w
  7539  0410  00AB               	movwf	___aomod@dividend+3
  7540  0411  0849               	movf	dtoa@n+4,w
  7541  0412  00AC               	movwf	___aomod@dividend+4
  7542  0413  084A               	movf	dtoa@n+5,w
  7543  0414  00AD               	movwf	___aomod@dividend+5
  7544  0415  084B               	movf	dtoa@n+6,w
  7545  0416  00AE               	movwf	___aomod@dividend+6
  7546  0417  084C               	movf	dtoa@n+7,w
  7547  0418  00AF               	movwf	___aomod@dividend+7
  7548  0419  3195  2552  3183   	fcall	___aomod
  7549  041C  0020               	movlb	0	; select bank0
  7550  041D  0821               	movf	?___aomod+1,w
  7551  041E  00F5               	movwf	abs@a+1
  7552  041F  0820               	movf	?___aomod,w
  7553  0420  00F4               	movwf	abs@a
  7554  0421  3199  21D7  3183   	fcall	_abs
  7555  0424  0874               	movf	?_abs,w
  7556  0425  3E30               	addlw	48
  7557  0426  0020               	movlb	0	; select bank0
  7558  0427  00BA               	movwf	??_dtoa
  7559  0428  084D               	movf	dtoa@i,w
  7560  0429  3E32               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7561  042A  0086               	movwf	6
  7562  042B  3001               	movlw	1	; select bank2/3
  7563  042C  0087               	movwf	7
  7564  042D  083A               	movf	??_dtoa,w
  7565  042E  0081               	movwf	1
  7566                           
  7567                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  7568  042F  30FF               	movlw	255
  7569  0430  07BF               	addwf	dtoa@p,f
  7570  0431  30FF               	movlw	255
  7571  0432  3DC0               	addwfc	dtoa@p+1,f
  7572                           
  7573                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  7574  0433  30FF               	movlw	255
  7575  0434  07C1               	addwf	dtoa@w,f
  7576  0435  30FF               	movlw	255
  7577  0436  3DC2               	addwfc	dtoa@w+1,f
  7578                           
  7579                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  7580  0437  300A               	movlw	10
  7581  0438  00A0               	movwf	___aodiv@divisor
  7582  0439  01A1               	clrf	___aodiv@divisor+1
  7583  043A  01A2               	clrf	___aodiv@divisor+2
  7584  043B  01A3               	clrf	___aodiv@divisor+3
  7585  043C  01A4               	clrf	___aodiv@divisor+4
  7586  043D  01A5               	clrf	___aodiv@divisor+5
  7587  043E  01A6               	clrf	___aodiv@divisor+6
  7588  043F  01A7               	clrf	___aodiv@divisor+7
  7589  0440  0845               	movf	dtoa@n,w
  7590  0441  00A8               	movwf	___aodiv@dividend
  7591  0442  0846               	movf	dtoa@n+1,w
  7592  0443  00A9               	movwf	___aodiv@dividend+1
  7593  0444  0847               	movf	dtoa@n+2,w
  7594  0445  00AA               	movwf	___aodiv@dividend+2
  7595  0446  0848               	movf	dtoa@n+3,w
  7596  0447  00AB               	movwf	___aodiv@dividend+3
  7597  0448  0849               	movf	dtoa@n+4,w
  7598  0449  00AC               	movwf	___aodiv@dividend+4
  7599  044A  084A               	movf	dtoa@n+5,w
  7600  044B  00AD               	movwf	___aodiv@dividend+5
  7601  044C  084B               	movf	dtoa@n+6,w
  7602  044D  00AE               	movwf	___aodiv@dividend+6
  7603  044E  084C               	movf	dtoa@n+7,w
  7604  044F  00AF               	movwf	___aodiv@dividend+7
  7605  0450  3186  269B  3183   	fcall	___aodiv
  7606  0453  0020               	movlb	0	; select bank0
  7607  0454  0820               	movf	?___aodiv,w
  7608  0455  00C5               	movwf	dtoa@n
  7609  0456  0821               	movf	?___aodiv+1,w
  7610  0457  00C6               	movwf	dtoa@n+1
  7611  0458  0822               	movf	?___aodiv+2,w
  7612  0459  00C7               	movwf	dtoa@n+2
  7613  045A  0823               	movf	?___aodiv+3,w
  7614  045B  00C8               	movwf	dtoa@n+3
  7615  045C  0824               	movf	?___aodiv+4,w
  7616  045D  00C9               	movwf	dtoa@n+4
  7617  045E  0825               	movf	?___aodiv+5,w
  7618  045F  00CA               	movwf	dtoa@n+5
  7619  0460  0826               	movf	?___aodiv+6,w
  7620  0461  00CB               	movwf	dtoa@n+6
  7621  0462  0827               	movf	?___aodiv+7,w
  7622  0463  00CC               	movwf	dtoa@n+7
  7623  0464                     l512:	
  7624                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
  7625                           
  7626                           
  7627                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7628  0464  0020               	movlb	0	; select bank0
  7629  0465  084E               	movf	dtoa@i+1,w
  7630  0466  3A80               	xorlw	128
  7631  0467  00BA               	movwf	??_dtoa
  7632  0468  3080               	movlw	128
  7633  0469  023A               	subwf	??_dtoa,w
  7634  046A  1D03               	skipz
  7635  046B  2C6E               	goto	u4905
  7636  046C  3001               	movlw	1
  7637  046D  024D               	subwf	dtoa@i,w
  7638  046E                     u4905:	
  7639  046E  1803               	btfsc	3,0
  7640  046F  2BD6               	goto	l4352
  7641  0470                     l4360:	
  7642                           
  7643                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  7644  0470  0020               	movlb	0	; select bank0
  7645  0471  0843               	movf	dtoa@s,w
  7646  0472  0444               	iorwf	dtoa@s+1,w
  7647  0473  1D03               	btfss	3,2
  7648  0474  2C78               	goto	l4364
  7649  0475  0021               	movlb	1	; select bank1
  7650  0476  1D63               	btfss	_flags^(0+128),2
  7651  0477  2C90               	goto	l4374
  7652  0478                     l4364:	
  7653                           
  7654                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  7655  0478  30FF               	movlw	255
  7656  0479  0020               	movlb	0	; select bank0
  7657  047A  07CD               	addwf	dtoa@i,f
  7658  047B  30FF               	movlw	255
  7659  047C  3DCE               	addwfc	dtoa@i+1,f
  7660                           
  7661                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  7662  047D  0843               	movf	dtoa@s,w
  7663  047E  0444               	iorwf	dtoa@s+1,w
  7664  047F  1D03               	btfss	3,2
  7665  0480  2C83               	goto	l4370
  7666  0481  302B               	movlw	43
  7667  0482  2C84               	goto	L2
  7668  0483                     l4370:	
  7669  0483  302D               	movlw	45
  7670  0484                     L2:	
  7671  0484  00BD               	movwf	_dtoa$902
  7672  0485  3000               	movlw	0
  7673  0486  00BE               	movwf	_dtoa$902+1
  7674  0487  083D               	movf	_dtoa$902,w
  7675  0488  00BA               	movwf	??_dtoa
  7676  0489  084D               	movf	dtoa@i,w
  7677  048A  3E32               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7678  048B  0086               	movwf	6
  7679  048C  3001               	movlw	1	; select bank2/3
  7680  048D  0087               	movwf	7
  7681  048E  083A               	movf	??_dtoa,w
  7682  048F  0081               	movwf	1
  7683  0490                     l4374:	
  7684                           
  7685                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  7686  0490  0020               	movlb	0	; select bank0
  7687  0491  0831               	movf	dtoa@fp+1,w
  7688  0492  00A7               	movwf	pad@fp+1
  7689  0493  0830               	movf	dtoa@fp,w
  7690  0494  00A6               	movwf	pad@fp
  7691  0495  084D               	movf	dtoa@i,w
  7692  0496  3E32               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7693  0497  00BA               	movwf	??_dtoa
  7694  0498  083A               	movf	??_dtoa,w
  7695  0499  00A8               	movwf	pad@buf
  7696  049A  0842               	movf	dtoa@w+1,w
  7697  049B  00AA               	movwf	pad@p+1
  7698  049C  0841               	movf	dtoa@w,w
  7699  049D  00A9               	movwf	pad@p
  7700  049E  319C  24F3         	fcall	_pad
  7701  04A0  0020               	movlb	0	; select bank0
  7702  04A1  0827               	movf	?_pad+1,w
  7703  04A2  00B1               	movwf	?_dtoa+1
  7704  04A3  0826               	movf	?_pad,w
  7705  04A4  00B0               	movwf	?_dtoa
  7706  04A5  0008               	return
  7707  04A6                     __end_of_dtoa:	
  7708                           
  7709                           	psect	text18
  7710  19D7                     __ptext18:	
  7711 ;; *************** function _abs *****************
  7712 ;; Defined at:
  7713 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  7714 ;; Parameters:    Size  Location     Type
  7715 ;;  a               2    4[COMMON] int 
  7716 ;; Auto vars:     Size  Location     Type
  7717 ;;		None
  7718 ;; Return value:  Size  Location     Type
  7719 ;;                  2    4[COMMON] int 
  7720 ;; Registers used:
  7721 ;;		wreg, status,2, status,0
  7722 ;; Tracked objects:
  7723 ;;		On entry : 0/0
  7724 ;;		On exit  : 0/0
  7725 ;;		Unchanged: 0/0
  7726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7727 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7729 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7730 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7731 ;;Total ram usage:        4 bytes
  7732 ;; Hardware stack levels used:    1
  7733 ;; Hardware stack levels required when called:    1
  7734 ;; This function calls:
  7735 ;;		Nothing
  7736 ;; This function is called by:
  7737 ;;		_dtoa
  7738 ;; This function uses a non-reentrant model
  7739 ;;
  7740                           
  7741                           
  7742                           ;psect for function _abs
  7743  19D7                     _abs:	
  7744                           
  7745                           ;incstack = 0
  7746                           ; Regs used in _abs: [wreg+status,2+status,0]
  7747  19D7  0875               	movf	abs@a+1,w
  7748  19D8  3A80               	xorlw	128
  7749  19D9  00F6               	movwf	??_abs
  7750  19DA  3080               	movlw	128
  7751  19DB  0276               	subwf	??_abs,w
  7752  19DC  1D03               	skipz
  7753  19DD  29E0               	goto	u2505
  7754  19DE  3001               	movlw	1
  7755  19DF  0274               	subwf	abs@a,w
  7756  19E0                     u2505:	
  7757  19E0  1803               	skipnc
  7758  19E1  0008               	return
  7759  19E2  0974               	comf	abs@a,w
  7760  19E3  00F6               	movwf	??_abs
  7761  19E4  0975               	comf	abs@a+1,w
  7762  19E5  00F7               	movwf	??_abs+1
  7763  19E6  0AF6               	incf	??_abs,f
  7764  19E7  1903               	skipnz
  7765  19E8  0AF7               	incf	??_abs+1,f
  7766  19E9  0876               	movf	??_abs,w
  7767  19EA  00F4               	movwf	?_abs
  7768  19EB  0877               	movf	??_abs+1,w
  7769  19EC  00F5               	movwf	?_abs+1
  7770  19ED  0008               	return
  7771  19EE                     __end_of_abs:	
  7772                           
  7773                           	psect	text19
  7774  1552                     __ptext19:	
  7775 ;; *************** function ___aomod *****************
  7776 ;; Defined at:
  7777 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  7778 ;; Parameters:    Size  Location     Type
  7779 ;;  divisor         8    0[BANK0 ] long long 
  7780 ;;  dividend        8    8[BANK0 ] long long 
  7781 ;; Auto vars:     Size  Location     Type
  7782 ;;  sign            1    3[COMMON] unsigned char 
  7783 ;;  counter         1    2[COMMON] unsigned char 
  7784 ;; Return value:  Size  Location     Type
  7785 ;;                  8    0[BANK0 ] long long 
  7786 ;; Registers used:
  7787 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7788 ;; Tracked objects:
  7789 ;;		On entry : 0/0
  7790 ;;		On exit  : 0/0
  7791 ;;		Unchanged: 0/0
  7792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7793 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7794 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7795 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7796 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7797 ;;Total ram usage:       19 bytes
  7798 ;; Hardware stack levels used:    1
  7799 ;; Hardware stack levels required when called:    1
  7800 ;; This function calls:
  7801 ;;		Nothing
  7802 ;; This function is called by:
  7803 ;;		_dtoa
  7804 ;; This function uses a non-reentrant model
  7805 ;;
  7806                           
  7807                           
  7808                           ;psect for function ___aomod
  7809  1552                     ___aomod:	
  7810                           
  7811                           ;incstack = 0
  7812                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  7813  1552  01F3               	clrf	___aomod@sign
  7814  1553  3028               	movlw	low ___aomod@dividend
  7815  1554  0086               	movwf	6
  7816  1555  3000               	movlw	high ___aomod@dividend
  7817  1556  0087               	movwf	7
  7818  1557  3F47               	moviw [7]fsr1
  7819  1558  00F1               	movwf	??___aomod
  7820  1559  1FF1               	btfss	??___aomod,7
  7821  155A  2D7C               	goto	l2964
  7822  155B  0020               	movlb	0	; select bank0
  7823  155C  09A8               	comf	___aomod@dividend,f
  7824  155D  09A9               	comf	___aomod@dividend+1,f
  7825  155E  09AA               	comf	___aomod@dividend+2,f
  7826  155F  09AB               	comf	___aomod@dividend+3,f
  7827  1560  09AC               	comf	___aomod@dividend+4,f
  7828  1561  09AD               	comf	___aomod@dividend+5,f
  7829  1562  09AE               	comf	___aomod@dividend+6,f
  7830  1563  09AF               	comf	___aomod@dividend+7,f
  7831  1564  0AA8               	incf	___aomod@dividend,f
  7832  1565  1D03               	skipz
  7833  1566  2D7A               	goto	u276lld
  7834  1567  0AA9               	incf	___aomod@dividend+1,f
  7835  1568  1D03               	skipz
  7836  1569  2D7A               	goto	u276lld
  7837  156A  0AAA               	incf	___aomod@dividend+2,f
  7838  156B  1D03               	skipz
  7839  156C  2D7A               	goto	u276lld
  7840  156D  0AAB               	incf	___aomod@dividend+3,f
  7841  156E  1D03               	skipz
  7842  156F  2D7A               	goto	u276lld
  7843  1570  0AAC               	incf	___aomod@dividend+4,f
  7844  1571  1D03               	skipz
  7845  1572  2D7A               	goto	u276lld
  7846  1573  0AAD               	incf	___aomod@dividend+5,f
  7847  1574  1D03               	skipz
  7848  1575  2D7A               	goto	u276lld
  7849  1576  0AAE               	incf	___aomod@dividend+6,f
  7850  1577  1D03               	skipz
  7851  1578  2D7A               	goto	u276lld
  7852  1579  0AAF               	incf	___aomod@dividend+7,f
  7853  157A                     u276lld:	
  7854  157A  01F3               	clrf	___aomod@sign
  7855  157B  0AF3               	incf	___aomod@sign,f
  7856  157C                     l2964:	
  7857  157C  3020               	movlw	low ___aomod@divisor
  7858  157D  0086               	movwf	6
  7859  157E  3000               	movlw	high ___aomod@divisor
  7860  157F  0087               	movwf	7
  7861  1580  3F47               	moviw [7]fsr1
  7862  1581  00F1               	movwf	??___aomod
  7863  1582  1FF1               	btfss	??___aomod,7
  7864  1583  2DA3               	goto	l2968
  7865  1584  0020               	movlb	0	; select bank0
  7866  1585  09A0               	comf	___aomod@divisor,f
  7867  1586  09A1               	comf	___aomod@divisor+1,f
  7868  1587  09A2               	comf	___aomod@divisor+2,f
  7869  1588  09A3               	comf	___aomod@divisor+3,f
  7870  1589  09A4               	comf	___aomod@divisor+4,f
  7871  158A  09A5               	comf	___aomod@divisor+5,f
  7872  158B  09A6               	comf	___aomod@divisor+6,f
  7873  158C  09A7               	comf	___aomod@divisor+7,f
  7874  158D  0AA0               	incf	___aomod@divisor,f
  7875  158E  1D03               	skipz
  7876  158F  2DA3               	goto	l2968
  7877  1590  0AA1               	incf	___aomod@divisor+1,f
  7878  1591  1D03               	skipz
  7879  1592  2DA3               	goto	l2968
  7880  1593  0AA2               	incf	___aomod@divisor+2,f
  7881  1594  1D03               	skipz
  7882  1595  2DA3               	goto	l2968
  7883  1596  0AA3               	incf	___aomod@divisor+3,f
  7884  1597  1D03               	skipz
  7885  1598  2DA3               	goto	l2968
  7886  1599  0AA4               	incf	___aomod@divisor+4,f
  7887  159A  1D03               	skipz
  7888  159B  2DA3               	goto	l2968
  7889  159C  0AA5               	incf	___aomod@divisor+5,f
  7890  159D  1D03               	skipz
  7891  159E  2DA3               	goto	l2968
  7892  159F  0AA6               	incf	___aomod@divisor+6,f
  7893  15A0  1D03               	skipz
  7894  15A1  2DA3               	goto	l2968
  7895  15A2  0AA7               	incf	___aomod@divisor+7,f
  7896  15A3                     l2968:	
  7897  15A3  0020               	movlb	0	; select bank0
  7898  15A4  0820               	movf	___aomod@divisor,w
  7899  15A5  0421               	iorwf	___aomod@divisor+1,w
  7900  15A6  0422               	iorwf	___aomod@divisor+2,w
  7901  15A7  0423               	iorwf	___aomod@divisor+3,w
  7902  15A8  0424               	iorwf	___aomod@divisor+4,w
  7903  15A9  0425               	iorwf	___aomod@divisor+5,w
  7904  15AA  0426               	iorwf	___aomod@divisor+6,w
  7905  15AB  0427               	iorwf	___aomod@divisor+7,w
  7906  15AC  1903               	skipnz
  7907  15AD  2DFB               	goto	l2984
  7908  15AE  01F2               	clrf	___aomod@counter
  7909  15AF  0AF2               	incf	___aomod@counter,f
  7910  15B0                     l2976:	
  7911  15B0  1BA7               	btfsc	___aomod@divisor+7,7
  7912  15B1  2DBF               	goto	l2978
  7913  15B2  35A0               	lslf	___aomod@divisor,f
  7914  15B3  0DA1               	rlf	___aomod@divisor+1,f
  7915  15B4  0DA2               	rlf	___aomod@divisor+2,f
  7916  15B5  0DA3               	rlf	___aomod@divisor+3,f
  7917  15B6  0DA4               	rlf	___aomod@divisor+4,f
  7918  15B7  0DA5               	rlf	___aomod@divisor+5,f
  7919  15B8  0DA6               	rlf	___aomod@divisor+6,f
  7920  15B9  0DA7               	rlf	___aomod@divisor+7,f
  7921  15BA  3001               	movlw	1
  7922  15BB  00F1               	movwf	??___aomod
  7923  15BC  0871               	movf	??___aomod,w
  7924  15BD  07F2               	addwf	___aomod@counter,f
  7925  15BE  2DB0               	goto	l2976
  7926  15BF                     l2978:	
  7927  15BF  0827               	movf	___aomod@divisor+7,w
  7928  15C0  022F               	subwf	___aomod@dividend+7,w
  7929  15C1  1D03               	skipz
  7930  15C2  2DDD               	goto	u2815
  7931  15C3  0826               	movf	___aomod@divisor+6,w
  7932  15C4  022E               	subwf	___aomod@dividend+6,w
  7933  15C5  1D03               	skipz
  7934  15C6  2DDD               	goto	u2815
  7935  15C7  0825               	movf	___aomod@divisor+5,w
  7936  15C8  022D               	subwf	___aomod@dividend+5,w
  7937  15C9  1D03               	skipz
  7938  15CA  2DDD               	goto	u2815
  7939  15CB  0824               	movf	___aomod@divisor+4,w
  7940  15CC  022C               	subwf	___aomod@dividend+4,w
  7941  15CD  1D03               	skipz
  7942  15CE  2DDD               	goto	u2815
  7943  15CF  0823               	movf	___aomod@divisor+3,w
  7944  15D0  022B               	subwf	___aomod@dividend+3,w
  7945  15D1  1D03               	skipz
  7946  15D2  2DDD               	goto	u2815
  7947  15D3  0822               	movf	___aomod@divisor+2,w
  7948  15D4  022A               	subwf	___aomod@dividend+2,w
  7949  15D5  1D03               	skipz
  7950  15D6  2DDD               	goto	u2815
  7951  15D7  0821               	movf	___aomod@divisor+1,w
  7952  15D8  0229               	subwf	___aomod@dividend+1,w
  7953  15D9  1D03               	skipz
  7954  15DA  2DDD               	goto	u2815
  7955  15DB  0820               	movf	___aomod@divisor,w
  7956  15DC  0228               	subwf	___aomod@dividend,w
  7957  15DD                     u2815:	
  7958  15DD  1C03               	skipc
  7959  15DE  2DEF               	goto	l2982
  7960  15DF  0820               	movf	___aomod@divisor,w
  7961  15E0  02A8               	subwf	___aomod@dividend,f
  7962  15E1  0821               	movf	___aomod@divisor+1,w
  7963  15E2  3BA9               	subwfb	___aomod@dividend+1,f
  7964  15E3  0822               	movf	___aomod@divisor+2,w
  7965  15E4  3BAA               	subwfb	___aomod@dividend+2,f
  7966  15E5  0823               	movf	___aomod@divisor+3,w
  7967  15E6  3BAB               	subwfb	___aomod@dividend+3,f
  7968  15E7  0824               	movf	___aomod@divisor+4,w
  7969  15E8  3BAC               	subwfb	___aomod@dividend+4,f
  7970  15E9  0825               	movf	___aomod@divisor+5,w
  7971  15EA  3BAD               	subwfb	___aomod@dividend+5,f
  7972  15EB  0826               	movf	___aomod@divisor+6,w
  7973  15EC  3BAE               	subwfb	___aomod@dividend+6,f
  7974  15ED  0827               	movf	___aomod@divisor+7,w
  7975  15EE  3BAF               	subwfb	___aomod@dividend+7,f
  7976  15EF                     l2982:	
  7977  15EF  36A7               	lsrf	___aomod@divisor+7,f
  7978  15F0  0CA6               	rrf	___aomod@divisor+6,f
  7979  15F1  0CA5               	rrf	___aomod@divisor+5,f
  7980  15F2  0CA4               	rrf	___aomod@divisor+4,f
  7981  15F3  0CA3               	rrf	___aomod@divisor+3,f
  7982  15F4  0CA2               	rrf	___aomod@divisor+2,f
  7983  15F5  0CA1               	rrf	___aomod@divisor+1,f
  7984  15F6  0CA0               	rrf	___aomod@divisor,f
  7985  15F7  3001               	movlw	1
  7986  15F8  02F2               	subwf	___aomod@counter,f
  7987  15F9  1D03               	btfss	3,2
  7988  15FA  2DBF               	goto	l2978
  7989  15FB                     l2984:	
  7990  15FB  0873               	movf	___aomod@sign,w
  7991  15FC  1903               	btfsc	3,2
  7992  15FD  2E1C               	goto	l818
  7993  15FE  09A8               	comf	___aomod@dividend,f
  7994  15FF  09A9               	comf	___aomod@dividend+1,f
  7995  1600  09AA               	comf	___aomod@dividend+2,f
  7996  1601  09AB               	comf	___aomod@dividend+3,f
  7997  1602  09AC               	comf	___aomod@dividend+4,f
  7998  1603  09AD               	comf	___aomod@dividend+5,f
  7999  1604  09AE               	comf	___aomod@dividend+6,f
  8000  1605  09AF               	comf	___aomod@dividend+7,f
  8001  1606  0AA8               	incf	___aomod@dividend,f
  8002  1607  1D03               	skipz
  8003  1608  2E1C               	goto	l818
  8004  1609  0AA9               	incf	___aomod@dividend+1,f
  8005  160A  1D03               	skipz
  8006  160B  2E1C               	goto	l818
  8007  160C  0AAA               	incf	___aomod@dividend+2,f
  8008  160D  1D03               	skipz
  8009  160E  2E1C               	goto	l818
  8010  160F  0AAB               	incf	___aomod@dividend+3,f
  8011  1610  1D03               	skipz
  8012  1611  2E1C               	goto	l818
  8013  1612  0AAC               	incf	___aomod@dividend+4,f
  8014  1613  1D03               	skipz
  8015  1614  2E1C               	goto	l818
  8016  1615  0AAD               	incf	___aomod@dividend+5,f
  8017  1616  1D03               	skipz
  8018  1617  2E1C               	goto	l818
  8019  1618  0AAE               	incf	___aomod@dividend+6,f
  8020  1619  1D03               	skipz
  8021  161A  2E1C               	goto	l818
  8022  161B  0AAF               	incf	___aomod@dividend+7,f
  8023  161C                     l818:	
  8024  161C  0020               	movlb	0	; select bank0
  8025  161D  0828               	movf	___aomod@dividend,w
  8026  161E  00A0               	movwf	?___aomod
  8027  161F  0829               	movf	___aomod@dividend+1,w
  8028  1620  00A1               	movwf	?___aomod+1
  8029  1621  082A               	movf	___aomod@dividend+2,w
  8030  1622  00A2               	movwf	?___aomod+2
  8031  1623  082B               	movf	___aomod@dividend+3,w
  8032  1624  00A3               	movwf	?___aomod+3
  8033  1625  082C               	movf	___aomod@dividend+4,w
  8034  1626  00A4               	movwf	?___aomod+4
  8035  1627  082D               	movf	___aomod@dividend+5,w
  8036  1628  00A5               	movwf	?___aomod+5
  8037  1629  082E               	movf	___aomod@dividend+6,w
  8038  162A  00A6               	movwf	?___aomod+6
  8039  162B  082F               	movf	___aomod@dividend+7,w
  8040  162C  00A7               	movwf	?___aomod+7
  8041  162D  0008               	return
  8042  162E                     __end_of___aomod:	
  8043                           
  8044                           	psect	text20
  8045  069B                     __ptext20:	
  8046 ;; *************** function ___aodiv *****************
  8047 ;; Defined at:
  8048 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  8049 ;; Parameters:    Size  Location     Type
  8050 ;;  divisor         8    0[BANK0 ] long long 
  8051 ;;  dividend        8    8[BANK0 ] long long 
  8052 ;; Auto vars:     Size  Location     Type
  8053 ;;  quotient        8    4[COMMON] long long 
  8054 ;;  sign            1    3[COMMON] unsigned char 
  8055 ;;  counter         1    2[COMMON] unsigned char 
  8056 ;; Return value:  Size  Location     Type
  8057 ;;                  8    0[BANK0 ] long long 
  8058 ;; Registers used:
  8059 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8060 ;; Tracked objects:
  8061 ;;		On entry : 0/0
  8062 ;;		On exit  : 0/0
  8063 ;;		Unchanged: 0/0
  8064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8065 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8066 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8067 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8068 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8069 ;;Total ram usage:       27 bytes
  8070 ;; Hardware stack levels used:    1
  8071 ;; Hardware stack levels required when called:    1
  8072 ;; This function calls:
  8073 ;;		Nothing
  8074 ;; This function is called by:
  8075 ;;		_dtoa
  8076 ;; This function uses a non-reentrant model
  8077 ;;
  8078                           
  8079                           
  8080                           ;psect for function ___aodiv
  8081  069B                     ___aodiv:	
  8082                           
  8083                           ;incstack = 0
  8084                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  8085  069B  01F3               	clrf	___aodiv@sign
  8086  069C  3020               	movlw	low ___aodiv@divisor
  8087  069D  0086               	movwf	6
  8088  069E  3000               	movlw	high ___aodiv@divisor
  8089  069F  0087               	movwf	7
  8090  06A0  3F47               	moviw [7]fsr1
  8091  06A1  00F1               	movwf	??___aodiv
  8092  06A2  1FF1               	btfss	??___aodiv,7
  8093  06A3  2EC5               	goto	l2926
  8094  06A4  0020               	movlb	0	; select bank0
  8095  06A5  09A0               	comf	___aodiv@divisor,f
  8096  06A6  09A1               	comf	___aodiv@divisor+1,f
  8097  06A7  09A2               	comf	___aodiv@divisor+2,f
  8098  06A8  09A3               	comf	___aodiv@divisor+3,f
  8099  06A9  09A4               	comf	___aodiv@divisor+4,f
  8100  06AA  09A5               	comf	___aodiv@divisor+5,f
  8101  06AB  09A6               	comf	___aodiv@divisor+6,f
  8102  06AC  09A7               	comf	___aodiv@divisor+7,f
  8103  06AD  0AA0               	incf	___aodiv@divisor,f
  8104  06AE  1D03               	skipz
  8105  06AF  2EC3               	goto	u265lld
  8106  06B0  0AA1               	incf	___aodiv@divisor+1,f
  8107  06B1  1D03               	skipz
  8108  06B2  2EC3               	goto	u265lld
  8109  06B3  0AA2               	incf	___aodiv@divisor+2,f
  8110  06B4  1D03               	skipz
  8111  06B5  2EC3               	goto	u265lld
  8112  06B6  0AA3               	incf	___aodiv@divisor+3,f
  8113  06B7  1D03               	skipz
  8114  06B8  2EC3               	goto	u265lld
  8115  06B9  0AA4               	incf	___aodiv@divisor+4,f
  8116  06BA  1D03               	skipz
  8117  06BB  2EC3               	goto	u265lld
  8118  06BC  0AA5               	incf	___aodiv@divisor+5,f
  8119  06BD  1D03               	skipz
  8120  06BE  2EC3               	goto	u265lld
  8121  06BF  0AA6               	incf	___aodiv@divisor+6,f
  8122  06C0  1D03               	skipz
  8123  06C1  2EC3               	goto	u265lld
  8124  06C2  0AA7               	incf	___aodiv@divisor+7,f
  8125  06C3                     u265lld:	
  8126  06C3  01F3               	clrf	___aodiv@sign
  8127  06C4  0AF3               	incf	___aodiv@sign,f
  8128  06C5                     l2926:	
  8129  06C5  3028               	movlw	low ___aodiv@dividend
  8130  06C6  0086               	movwf	6
  8131  06C7  3000               	movlw	high ___aodiv@dividend
  8132  06C8  0087               	movwf	7
  8133  06C9  3F47               	moviw [7]fsr1
  8134  06CA  00F1               	movwf	??___aodiv
  8135  06CB  1FF1               	btfss	??___aodiv,7
  8136  06CC  2EF0               	goto	l2932
  8137  06CD  0020               	movlb	0	; select bank0
  8138  06CE  09A8               	comf	___aodiv@dividend,f
  8139  06CF  09A9               	comf	___aodiv@dividend+1,f
  8140  06D0  09AA               	comf	___aodiv@dividend+2,f
  8141  06D1  09AB               	comf	___aodiv@dividend+3,f
  8142  06D2  09AC               	comf	___aodiv@dividend+4,f
  8143  06D3  09AD               	comf	___aodiv@dividend+5,f
  8144  06D4  09AE               	comf	___aodiv@dividend+6,f
  8145  06D5  09AF               	comf	___aodiv@dividend+7,f
  8146  06D6  0AA8               	incf	___aodiv@dividend,f
  8147  06D7  1D03               	skipz
  8148  06D8  2EEC               	goto	l2930
  8149  06D9  0AA9               	incf	___aodiv@dividend+1,f
  8150  06DA  1D03               	skipz
  8151  06DB  2EEC               	goto	l2930
  8152  06DC  0AAA               	incf	___aodiv@dividend+2,f
  8153  06DD  1D03               	skipz
  8154  06DE  2EEC               	goto	l2930
  8155  06DF  0AAB               	incf	___aodiv@dividend+3,f
  8156  06E0  1D03               	skipz
  8157  06E1  2EEC               	goto	l2930
  8158  06E2  0AAC               	incf	___aodiv@dividend+4,f
  8159  06E3  1D03               	skipz
  8160  06E4  2EEC               	goto	l2930
  8161  06E5  0AAD               	incf	___aodiv@dividend+5,f
  8162  06E6  1D03               	skipz
  8163  06E7  2EEC               	goto	l2930
  8164  06E8  0AAE               	incf	___aodiv@dividend+6,f
  8165  06E9  1D03               	skipz
  8166  06EA  2EEC               	goto	l2930
  8167  06EB  0AAF               	incf	___aodiv@dividend+7,f
  8168  06EC                     l2930:	
  8169  06EC  3001               	movlw	1
  8170  06ED  00F1               	movwf	??___aodiv
  8171  06EE  0871               	movf	??___aodiv,w
  8172  06EF  06F3               	xorwf	___aodiv@sign,f
  8173  06F0                     l2932:	
  8174  06F0  3074               	movlw	low ___aodiv@quotient
  8175  06F1  0086               	movwf	6
  8176  06F2  3000               	movlw	high ___aodiv@quotient
  8177  06F3  0087               	movwf	7
  8178  06F4  3008               	movlw	8
  8179  06F5  00F1               	movwf	??___aodiv
  8180  06F6  3000               	movlw	0
  8181  06F7                     u2680:	
  8182  06F7  001E               	movwi fsr1++
  8183  06F8  0BF1               	decfsz	??___aodiv,f
  8184  06F9  2EF7               	goto	u2680
  8185  06FA  0020               	movlb	0	; select bank0
  8186  06FB  0820               	movf	___aodiv@divisor,w
  8187  06FC  0421               	iorwf	___aodiv@divisor+1,w
  8188  06FD  0422               	iorwf	___aodiv@divisor+2,w
  8189  06FE  0423               	iorwf	___aodiv@divisor+3,w
  8190  06FF  0424               	iorwf	___aodiv@divisor+4,w
  8191  0700  0425               	iorwf	___aodiv@divisor+5,w
  8192  0701  0426               	iorwf	___aodiv@divisor+6,w
  8193  0702  0427               	iorwf	___aodiv@divisor+7,w
  8194  0703  1903               	skipnz
  8195  0704  2F5B               	goto	l2954
  8196  0705  01F2               	clrf	___aodiv@counter
  8197  0706  0AF2               	incf	___aodiv@counter,f
  8198  0707                     l2942:	
  8199  0707  1BA7               	btfsc	___aodiv@divisor+7,7
  8200  0708  2F16               	goto	l2944
  8201  0709  35A0               	lslf	___aodiv@divisor,f
  8202  070A  0DA1               	rlf	___aodiv@divisor+1,f
  8203  070B  0DA2               	rlf	___aodiv@divisor+2,f
  8204  070C  0DA3               	rlf	___aodiv@divisor+3,f
  8205  070D  0DA4               	rlf	___aodiv@divisor+4,f
  8206  070E  0DA5               	rlf	___aodiv@divisor+5,f
  8207  070F  0DA6               	rlf	___aodiv@divisor+6,f
  8208  0710  0DA7               	rlf	___aodiv@divisor+7,f
  8209  0711  3001               	movlw	1
  8210  0712  00F1               	movwf	??___aodiv
  8211  0713  0871               	movf	??___aodiv,w
  8212  0714  07F2               	addwf	___aodiv@counter,f
  8213  0715  2F07               	goto	l2942
  8214  0716                     l2944:	
  8215  0716  35F4               	lslf	___aodiv@quotient,f
  8216  0717  0DF5               	rlf	___aodiv@quotient+1,f
  8217  0718  0DF6               	rlf	___aodiv@quotient+2,f
  8218  0719  0DF7               	rlf	___aodiv@quotient+3,f
  8219  071A  0DF8               	rlf	___aodiv@quotient+4,f
  8220  071B  0DF9               	rlf	___aodiv@quotient+5,f
  8221  071C  0DFA               	rlf	___aodiv@quotient+6,f
  8222  071D  0DFB               	rlf	___aodiv@quotient+7,f
  8223  071E  0827               	movf	___aodiv@divisor+7,w
  8224  071F  022F               	subwf	___aodiv@dividend+7,w
  8225  0720  1D03               	skipz
  8226  0721  2F3C               	goto	u2715
  8227  0722  0826               	movf	___aodiv@divisor+6,w
  8228  0723  022E               	subwf	___aodiv@dividend+6,w
  8229  0724  1D03               	skipz
  8230  0725  2F3C               	goto	u2715
  8231  0726  0825               	movf	___aodiv@divisor+5,w
  8232  0727  022D               	subwf	___aodiv@dividend+5,w
  8233  0728  1D03               	skipz
  8234  0729  2F3C               	goto	u2715
  8235  072A  0824               	movf	___aodiv@divisor+4,w
  8236  072B  022C               	subwf	___aodiv@dividend+4,w
  8237  072C  1D03               	skipz
  8238  072D  2F3C               	goto	u2715
  8239  072E  0823               	movf	___aodiv@divisor+3,w
  8240  072F  022B               	subwf	___aodiv@dividend+3,w
  8241  0730  1D03               	skipz
  8242  0731  2F3C               	goto	u2715
  8243  0732  0822               	movf	___aodiv@divisor+2,w
  8244  0733  022A               	subwf	___aodiv@dividend+2,w
  8245  0734  1D03               	skipz
  8246  0735  2F3C               	goto	u2715
  8247  0736  0821               	movf	___aodiv@divisor+1,w
  8248  0737  0229               	subwf	___aodiv@dividend+1,w
  8249  0738  1D03               	skipz
  8250  0739  2F3C               	goto	u2715
  8251  073A  0820               	movf	___aodiv@divisor,w
  8252  073B  0228               	subwf	___aodiv@dividend,w
  8253  073C                     u2715:	
  8254  073C  1C03               	skipc
  8255  073D  2F4F               	goto	l2952
  8256  073E  0820               	movf	___aodiv@divisor,w
  8257  073F  02A8               	subwf	___aodiv@dividend,f
  8258  0740  0821               	movf	___aodiv@divisor+1,w
  8259  0741  3BA9               	subwfb	___aodiv@dividend+1,f
  8260  0742  0822               	movf	___aodiv@divisor+2,w
  8261  0743  3BAA               	subwfb	___aodiv@dividend+2,f
  8262  0744  0823               	movf	___aodiv@divisor+3,w
  8263  0745  3BAB               	subwfb	___aodiv@dividend+3,f
  8264  0746  0824               	movf	___aodiv@divisor+4,w
  8265  0747  3BAC               	subwfb	___aodiv@dividend+4,f
  8266  0748  0825               	movf	___aodiv@divisor+5,w
  8267  0749  3BAD               	subwfb	___aodiv@dividend+5,f
  8268  074A  0826               	movf	___aodiv@divisor+6,w
  8269  074B  3BAE               	subwfb	___aodiv@dividend+6,f
  8270  074C  0827               	movf	___aodiv@divisor+7,w
  8271  074D  3BAF               	subwfb	___aodiv@dividend+7,f
  8272  074E  1474               	bsf	___aodiv@quotient,0
  8273  074F                     l2952:	
  8274  074F  36A7               	lsrf	___aodiv@divisor+7,f
  8275  0750  0CA6               	rrf	___aodiv@divisor+6,f
  8276  0751  0CA5               	rrf	___aodiv@divisor+5,f
  8277  0752  0CA4               	rrf	___aodiv@divisor+4,f
  8278  0753  0CA3               	rrf	___aodiv@divisor+3,f
  8279  0754  0CA2               	rrf	___aodiv@divisor+2,f
  8280  0755  0CA1               	rrf	___aodiv@divisor+1,f
  8281  0756  0CA0               	rrf	___aodiv@divisor,f
  8282  0757  3001               	movlw	1
  8283  0758  02F2               	subwf	___aodiv@counter,f
  8284  0759  1D03               	btfss	3,2
  8285  075A  2F16               	goto	l2944
  8286  075B                     l2954:	
  8287  075B  0873               	movf	___aodiv@sign,w
  8288  075C  1903               	btfsc	3,2
  8289  075D  2F7C               	goto	l805
  8290  075E  09F4               	comf	___aodiv@quotient,f
  8291  075F  09F5               	comf	___aodiv@quotient+1,f
  8292  0760  09F6               	comf	___aodiv@quotient+2,f
  8293  0761  09F7               	comf	___aodiv@quotient+3,f
  8294  0762  09F8               	comf	___aodiv@quotient+4,f
  8295  0763  09F9               	comf	___aodiv@quotient+5,f
  8296  0764  09FA               	comf	___aodiv@quotient+6,f
  8297  0765  09FB               	comf	___aodiv@quotient+7,f
  8298  0766  0AF4               	incf	___aodiv@quotient,f
  8299  0767  1D03               	skipz
  8300  0768  2F7C               	goto	l805
  8301  0769  0AF5               	incf	___aodiv@quotient+1,f
  8302  076A  1D03               	skipz
  8303  076B  2F7C               	goto	l805
  8304  076C  0AF6               	incf	___aodiv@quotient+2,f
  8305  076D  1D03               	skipz
  8306  076E  2F7C               	goto	l805
  8307  076F  0AF7               	incf	___aodiv@quotient+3,f
  8308  0770  1D03               	skipz
  8309  0771  2F7C               	goto	l805
  8310  0772  0AF8               	incf	___aodiv@quotient+4,f
  8311  0773  1D03               	skipz
  8312  0774  2F7C               	goto	l805
  8313  0775  0AF9               	incf	___aodiv@quotient+5,f
  8314  0776  1D03               	skipz
  8315  0777  2F7C               	goto	l805
  8316  0778  0AFA               	incf	___aodiv@quotient+6,f
  8317  0779  1D03               	skipz
  8318  077A  2F7C               	goto	l805
  8319  077B  0AFB               	incf	___aodiv@quotient+7,f
  8320  077C                     l805:	
  8321  077C  0874               	movf	___aodiv@quotient,w
  8322  077D  0020               	movlb	0	; select bank0
  8323  077E  00A0               	movwf	?___aodiv
  8324  077F  0875               	movf	___aodiv@quotient+1,w
  8325  0780  00A1               	movwf	?___aodiv+1
  8326  0781  0876               	movf	___aodiv@quotient+2,w
  8327  0782  00A2               	movwf	?___aodiv+2
  8328  0783  0877               	movf	___aodiv@quotient+3,w
  8329  0784  00A3               	movwf	?___aodiv+3
  8330  0785  0878               	movf	___aodiv@quotient+4,w
  8331  0786  00A4               	movwf	?___aodiv+4
  8332  0787  0879               	movf	___aodiv@quotient+5,w
  8333  0788  00A5               	movwf	?___aodiv+5
  8334  0789  087A               	movf	___aodiv@quotient+6,w
  8335  078A  00A6               	movwf	?___aodiv+6
  8336  078B  087B               	movf	___aodiv@quotient+7,w
  8337  078C  00A7               	movwf	?___aodiv+7
  8338  078D  0008               	return
  8339  078E                     __end_of___aodiv:	
  8340                           
  8341                           	psect	text21
  8342  1B63                     __ptext21:	
  8343 ;; *************** function _ctoa *****************
  8344 ;; Defined at:
  8345 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8346 ;; Parameters:    Size  Location     Type
  8347 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  8348 ;;		 -> vsnprintf@f(6), 
  8349 ;;  c               1   18[BANK0 ] unsigned char 
  8350 ;; Auto vars:     Size  Location     Type
  8351 ;;  w               2   20[BANK0 ] int 
  8352 ;;  l               2    0        int 
  8353 ;; Return value:  Size  Location     Type
  8354 ;;                  2   16[BANK0 ] int 
  8355 ;; Registers used:
  8356 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8357 ;; Tracked objects:
  8358 ;;		On entry : 0/0
  8359 ;;		On exit  : 0/0
  8360 ;;		Unchanged: 0/0
  8361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8362 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8363 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8364 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8365 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8366 ;;Total ram usage:        6 bytes
  8367 ;; Hardware stack levels used:    1
  8368 ;; Hardware stack levels required when called:    5
  8369 ;; This function calls:
  8370 ;;		_pad
  8371 ;; This function is called by:
  8372 ;;		_vfpfcnvrt
  8373 ;; This function uses a non-reentrant model
  8374 ;;
  8375                           
  8376                           
  8377                           ;psect for function _ctoa
  8378  1B63                     _ctoa:	
  8379                           
  8380                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  8381                           
  8382                           ;incstack = 0
  8383                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8384  1B63  0021               	movlb	1	; select bank1
  8385  1B64  085F               	movf	_width^(0+128),w
  8386  1B65  0460               	iorwf	(_width+1)^(0+128),w
  8387  1B66  1D03               	btfss	3,2
  8388  1B67  2B70               	goto	l4310
  8389  1B68  0860               	movf	(_width+1)^(0+128),w
  8390  1B69  0020               	movlb	0	; select bank0
  8391  1B6A  00B5               	movwf	ctoa@w+1
  8392  1B6B  0021               	movlb	1	; select bank1
  8393  1B6C  085F               	movf	_width^(0+128),w
  8394  1B6D  0020               	movlb	0	; select bank0
  8395  1B6E  00B4               	movwf	ctoa@w
  8396  1B6F  2B79               	goto	l4312
  8397  1B70                     l4310:	
  8398  1B70  085F               	movf	_width^(0+128),w
  8399  1B71  3EFF               	addlw	255
  8400  1B72  0020               	movlb	0	; select bank0
  8401  1B73  00B4               	movwf	ctoa@w
  8402  1B74  30FF               	movlw	255
  8403  1B75  0021               	movlb	1	; select bank1
  8404  1B76  3D60               	addwfc	(_width+1)^(0+128),w
  8405  1B77  0020               	movlb	0	; select bank0
  8406  1B78  00B5               	movwf	ctoa@w+1
  8407  1B79                     l4312:	
  8408                           
  8409                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  8410  1B79  0832               	movf	ctoa@c,w
  8411  1B7A  00B3               	movwf	??_ctoa
  8412  1B7B  0833               	movf	??_ctoa,w
  8413  1B7C  0022               	movlb	2	; select bank2
  8414  1B7D  00B2               	movwf	_dbuf^(0+256)
  8415                           
  8416                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  8417  1B7E  01B3               	clrf	(_dbuf^(0+256)+1)
  8418                           
  8419                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  8420  1B7F  0020               	movlb	0	; select bank0
  8421  1B80  0831               	movf	ctoa@fp+1,w
  8422  1B81  00A7               	movwf	pad@fp+1
  8423  1B82  0830               	movf	ctoa@fp,w
  8424  1B83  00A6               	movwf	pad@fp
  8425  1B84  3032               	movlw	(low (_dbuf| (0+256)))& (0+255)
  8426  1B85  00B3               	movwf	??_ctoa
  8427  1B86  0833               	movf	??_ctoa,w
  8428  1B87  00A8               	movwf	pad@buf
  8429  1B88  0835               	movf	ctoa@w+1,w
  8430  1B89  00AA               	movwf	pad@p+1
  8431  1B8A  0834               	movf	ctoa@w,w
  8432  1B8B  00A9               	movwf	pad@p
  8433  1B8C  319C  24F3         	fcall	_pad
  8434  1B8E  0020               	movlb	0	; select bank0
  8435  1B8F  0827               	movf	?_pad+1,w
  8436  1B90  00B1               	movwf	?_ctoa+1
  8437  1B91  0826               	movf	?_pad,w
  8438  1B92  00B0               	movwf	?_ctoa
  8439  1B93  0008               	return
  8440  1B94                     __end_of_ctoa:	
  8441                           
  8442                           	psect	text22
  8443  1CF3                     __ptext22:	
  8444 ;; *************** function _pad *****************
  8445 ;; Defined at:
  8446 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8447 ;; Parameters:    Size  Location     Type
  8448 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
  8449 ;;		 -> vsnprintf@f(6), 
  8450 ;;  buf             1    8[BANK0 ] PTR unsigned char 
  8451 ;;		 -> dbuf(32), 
  8452 ;;  p               2    9[BANK0 ] int 
  8453 ;; Auto vars:     Size  Location     Type
  8454 ;;  w               2   14[BANK0 ] int 
  8455 ;;  i               2   12[BANK0 ] int 
  8456 ;; Return value:  Size  Location     Type
  8457 ;;                  2    6[BANK0 ] int 
  8458 ;; Registers used:
  8459 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8460 ;; Tracked objects:
  8461 ;;		On entry : 0/0
  8462 ;;		On exit  : 0/0
  8463 ;;		Unchanged: 0/0
  8464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8465 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8466 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8467 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8468 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8469 ;;Total ram usage:       10 bytes
  8470 ;; Hardware stack levels used:    1
  8471 ;; Hardware stack levels required when called:    4
  8472 ;; This function calls:
  8473 ;;		_fputc
  8474 ;;		_fputs
  8475 ;;		_strlen
  8476 ;; This function is called by:
  8477 ;;		_ctoa
  8478 ;;		_dtoa
  8479 ;;		_otoa
  8480 ;;		_utoa
  8481 ;;		_xtoa
  8482 ;; This function uses a non-reentrant model
  8483 ;;
  8484                           
  8485                           
  8486                           ;psect for function _pad
  8487  1CF3                     _pad:	
  8488                           
  8489                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  8490                           
  8491                           ;incstack = 0
  8492                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8493  1CF3  0021               	movlb	1	; select bank1
  8494  1CF4  1C63               	btfss	_flags^(0+128),0
  8495  1CF5  2CFF               	goto	l4278
  8496                           
  8497                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  8498  1CF6  0020               	movlb	0	; select bank0
  8499  1CF7  0827               	movf	pad@fp+1,w
  8500  1CF8  00FB               	movwf	fputs@fp+1
  8501  1CF9  0826               	movf	pad@fp,w
  8502  1CFA  00FA               	movwf	fputs@fp
  8503  1CFB  0828               	movf	pad@buf,w
  8504  1CFC  319A  22EB  319C   	fcall	_fputs
  8505  1CFF                     l4278:	
  8506                           
  8507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  8508  1CFF  0020               	movlb	0	; select bank0
  8509  1D00  1BAA               	btfsc	pad@p+1,7
  8510  1D01  2D07               	goto	l4282
  8511  1D02  082A               	movf	pad@p+1,w
  8512  1D03  00AF               	movwf	pad@w+1
  8513  1D04  0829               	movf	pad@p,w
  8514  1D05  00AE               	movwf	pad@w
  8515  1D06  2D09               	goto	l488
  8516  1D07                     l4282:	
  8517  1D07  01AE               	clrf	pad@w
  8518  1D08  01AF               	clrf	pad@w+1
  8519  1D09                     l488:	
  8520                           
  8521                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  8522  1D09  01AC               	clrf	pad@i
  8523  1D0A  01AD               	clrf	pad@i+1
  8524  1D0B                     l4288:	
  8525                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8526                           
  8527                           
  8528                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8529  1D0B  082D               	movf	pad@i+1,w
  8530  1D0C  3A80               	xorlw	128
  8531  1D0D  00AB               	movwf	??_pad
  8532  1D0E  082F               	movf	pad@w+1,w
  8533  1D0F  3A80               	xorlw	128
  8534  1D10  022B               	subwf	??_pad,w
  8535  1D11  1D03               	skipz
  8536  1D12  2D15               	goto	u4765
  8537  1D13  082E               	movf	pad@w,w
  8538  1D14  022C               	subwf	pad@i,w
  8539  1D15                     u4765:	
  8540  1D15  1803               	btfsc	3,0
  8541  1D16  2D29               	goto	l491
  8542                           
  8543                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  8544  1D17  3020               	movlw	32
  8545  1D18  00F1               	movwf	fputc@c
  8546  1D19  3000               	movlw	0
  8547  1D1A  00F2               	movwf	fputc@c+1
  8548  1D1B  0020               	movlb	0	; select bank0
  8549  1D1C  0827               	movf	pad@fp+1,w
  8550  1D1D  00F4               	movwf	fputc@fp+1
  8551  1D1E  0826               	movf	pad@fp,w
  8552  1D1F  00F3               	movwf	fputc@fp
  8553  1D20  319D  2596  319C   	fcall	_fputc
  8554                           
  8555                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  8556  1D23  3001               	movlw	1
  8557  1D24  0020               	movlb	0	; select bank0
  8558  1D25  07AC               	addwf	pad@i,f
  8559  1D26  3000               	movlw	0
  8560  1D27  3DAD               	addwfc	pad@i+1,f
  8561  1D28  2D0B               	goto	l4288
  8562  1D29                     l491:	
  8563                           
  8564                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  8565  1D29  0021               	movlb	1	; select bank1
  8566  1D2A  1863               	btfsc	_flags^(0+128),0
  8567  1D2B  2D35               	goto	l4292
  8568                           
  8569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  8570  1D2C  0020               	movlb	0	; select bank0
  8571  1D2D  0827               	movf	pad@fp+1,w
  8572  1D2E  00FB               	movwf	fputs@fp+1
  8573  1D2F  0826               	movf	pad@fp,w
  8574  1D30  00FA               	movwf	fputs@fp
  8575  1D31  0828               	movf	pad@buf,w
  8576  1D32  319A  22EB  319C   	fcall	_fputs
  8577  1D35                     l4292:	
  8578                           
  8579                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  8580  1D35  0020               	movlb	0	; select bank0
  8581  1D36  0828               	movf	pad@buf,w
  8582  1D37  00F1               	movwf	strlen@s
  8583  1D38  3001               	movlw	1
  8584  1D39  00F2               	movwf	strlen@s+1
  8585  1D3A  3199  21C0         	fcall	_strlen
  8586  1D3C  0020               	movlb	0	; select bank0
  8587  1D3D  082E               	movf	pad@w,w
  8588  1D3E  0771               	addwf	?_strlen,w
  8589  1D3F  00A6               	movwf	?_pad
  8590  1D40  082F               	movf	pad@w+1,w
  8591  1D41  3D72               	addwfc	?_strlen+1,w
  8592  1D42  00A7               	movwf	?_pad+1
  8593  1D43  0008               	return
  8594  1D44                     __end_of_pad:	
  8595                           
  8596                           	psect	text23
  8597  19C0                     __ptext23:	
  8598 ;; *************** function _strlen *****************
  8599 ;; Defined at:
  8600 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  8601 ;; Parameters:    Size  Location     Type
  8602 ;;  s               2    1[COMMON] PTR const unsigned char 
  8603 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), 
  8604 ;; Auto vars:     Size  Location     Type
  8605 ;;  a               2    3[COMMON] PTR const unsigned char 
  8606 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), 
  8607 ;; Return value:  Size  Location     Type
  8608 ;;                  2    1[COMMON] unsigned int 
  8609 ;; Registers used:
  8610 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8611 ;; Tracked objects:
  8612 ;;		On entry : 0/0
  8613 ;;		On exit  : 0/0
  8614 ;;		Unchanged: 0/0
  8615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8616 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8617 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8619 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8620 ;;Total ram usage:        4 bytes
  8621 ;; Hardware stack levels used:    1
  8622 ;; Hardware stack levels required when called:    1
  8623 ;; This function calls:
  8624 ;;		Nothing
  8625 ;; This function is called by:
  8626 ;;		_pad
  8627 ;;		_stoa
  8628 ;; This function uses a non-reentrant model
  8629 ;;
  8630                           
  8631                           
  8632                           ;psect for function _strlen
  8633  19C0                     _strlen:	
  8634                           
  8635                           ;incstack = 0
  8636                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  8637  19C0  0872               	movf	strlen@s+1,w
  8638  19C1  00F4               	movwf	strlen@a+1
  8639  19C2  0871               	movf	strlen@s,w
  8640  19C3  00F3               	movwf	strlen@a
  8641  19C4                     l4264:	
  8642  19C4  0871               	movf	strlen@s,w
  8643  19C5  0086               	movwf	6
  8644  19C6  0872               	movf	strlen@s+1,w
  8645  19C7  0087               	movwf	7
  8646  19C8  0801               	movf	1,w
  8647  19C9  1903               	btfsc	3,2
  8648  19CA  29D0               	goto	l4266
  8649  19CB  3001               	movlw	1
  8650  19CC  07F1               	addwf	strlen@s,f
  8651  19CD  3000               	movlw	0
  8652  19CE  3DF2               	addwfc	strlen@s+1,f
  8653  19CF  29C4               	goto	l4264
  8654  19D0                     l4266:	
  8655  19D0  0873               	movf	strlen@a,w
  8656  19D1  0271               	subwf	strlen@s,w
  8657  19D2  00F1               	movwf	?_strlen
  8658  19D3  0874               	movf	strlen@a+1,w
  8659  19D4  3B72               	subwfb	strlen@s+1,w
  8660  19D5  00F2               	movwf	?_strlen+1
  8661  19D6  0008               	return
  8662  19D7                     __end_of_strlen:	
  8663                           
  8664                           	psect	text24
  8665  1AEB                     __ptext24:	
  8666 ;; *************** function _fputs *****************
  8667 ;; Defined at:
  8668 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  8669 ;; Parameters:    Size  Location     Type
  8670 ;;  s               1    wreg     PTR const unsigned char 
  8671 ;;		 -> dbuf(32), 
  8672 ;;  fp              2   10[COMMON] PTR struct _IO_FILE
  8673 ;;		 -> vsnprintf@f(6), 
  8674 ;; Auto vars:     Size  Location     Type
  8675 ;;  s               1    5[BANK0 ] PTR const unsigned char 
  8676 ;;		 -> dbuf(32), 
  8677 ;;  i               2    3[BANK0 ] int 
  8678 ;;  c               1    2[BANK0 ] unsigned char 
  8679 ;; Return value:  Size  Location     Type
  8680 ;;                  2   10[COMMON] int 
  8681 ;; Registers used:
  8682 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8683 ;; Tracked objects:
  8684 ;;		On entry : 0/0
  8685 ;;		On exit  : 0/0
  8686 ;;		Unchanged: 0/0
  8687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8688 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8689 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8690 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8691 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8692 ;;Total ram usage:        8 bytes
  8693 ;; Hardware stack levels used:    1
  8694 ;; Hardware stack levels required when called:    3
  8695 ;; This function calls:
  8696 ;;		_fputc
  8697 ;; This function is called by:
  8698 ;;		_pad
  8699 ;; This function uses a non-reentrant model
  8700 ;;
  8701                           
  8702                           
  8703                           ;psect for function _fputs
  8704  1AEB                     _fputs:	
  8705                           
  8706                           ;incstack = 0
  8707                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8708                           ;fputs@s stored from wreg
  8709  1AEB  0020               	movlb	0	; select bank0
  8710  1AEC  00A5               	movwf	fputs@s
  8711  1AED  01A3               	clrf	fputs@i
  8712  1AEE  01A4               	clrf	fputs@i+1
  8713  1AEF                     l2842:	
  8714  1AEF  0823               	movf	fputs@i,w
  8715  1AF0  0725               	addwf	fputs@s,w
  8716  1AF1  00A0               	movwf	??_fputs
  8717  1AF2  0820               	movf	??_fputs,w
  8718  1AF3  0086               	movwf	6
  8719  1AF4  3001               	movlw	1	; select bank2/3
  8720  1AF5  0087               	movwf	7
  8721  1AF6  0801               	movf	1,w
  8722  1AF7  00A1               	movwf	??_fputs+1
  8723  1AF8  0821               	movf	??_fputs+1,w
  8724  1AF9  00A2               	movwf	fputs@c
  8725  1AFA  0822               	movf	fputs@c,w
  8726  1AFB  1903               	btfsc	3,2
  8727  1AFC  0008               	return
  8728  1AFD  0822               	movf	fputs@c,w
  8729  1AFE  00A0               	movwf	??_fputs
  8730  1AFF  01A1               	clrf	??_fputs+1
  8731  1B00  0820               	movf	??_fputs,w
  8732  1B01  00F1               	movwf	fputc@c
  8733  1B02  0821               	movf	??_fputs+1,w
  8734  1B03  00F2               	movwf	fputc@c+1
  8735  1B04  087B               	movf	fputs@fp+1,w
  8736  1B05  00F4               	movwf	fputc@fp+1
  8737  1B06  087A               	movf	fputs@fp,w
  8738  1B07  00F3               	movwf	fputc@fp
  8739  1B08  319D  2596  319A   	fcall	_fputc
  8740  1B0B  3001               	movlw	1
  8741  1B0C  0020               	movlb	0	; select bank0
  8742  1B0D  07A3               	addwf	fputs@i,f
  8743  1B0E  3000               	movlw	0
  8744  1B0F  3DA4               	addwfc	fputs@i+1,f
  8745  1B10  2AEF               	goto	l2842
  8746  1B11                     __end_of_fputs:	
  8747                           
  8748                           	psect	text25
  8749  1D96                     __ptext25:	
  8750 ;; *************** function _fputc *****************
  8751 ;; Defined at:
  8752 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  8753 ;; Parameters:    Size  Location     Type
  8754 ;;  c               2    1[COMMON] int 
  8755 ;;  fp              2    3[COMMON] PTR struct _IO_FILE
  8756 ;;		 -> vsnprintf@f(6), 
  8757 ;; Auto vars:     Size  Location     Type
  8758 ;;		None
  8759 ;; Return value:  Size  Location     Type
  8760 ;;                  2    1[COMMON] int 
  8761 ;; Registers used:
  8762 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8763 ;; Tracked objects:
  8764 ;;		On entry : 0/0
  8765 ;;		On exit  : 0/0
  8766 ;;		Unchanged: 0/0
  8767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8768 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8770 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8771 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8772 ;;Total ram usage:        9 bytes
  8773 ;; Hardware stack levels used:    1
  8774 ;; Hardware stack levels required when called:    2
  8775 ;; This function calls:
  8776 ;;		_putch
  8777 ;; This function is called by:
  8778 ;;		_pad
  8779 ;;		_stoa
  8780 ;;		_vfpfcnvrt
  8781 ;;		_fputs
  8782 ;; This function uses a non-reentrant model
  8783 ;;
  8784                           
  8785                           
  8786                           ;psect for function _fputc
  8787  1D96                     _fputc:	
  8788                           
  8789                           ;incstack = 0
  8790                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8791  1D96  0873               	movf	fputc@fp,w
  8792  1D97  0474               	iorwf	fputc@fp+1,w
  8793  1D98  1903               	btfsc	3,2
  8794  1D99  2D9E               	goto	l2824
  8795  1D9A  0873               	movf	fputc@fp,w
  8796  1D9B  0474               	iorwf	fputc@fp+1,w
  8797  1D9C  1D03               	btfss	3,2
  8798  1D9D  2DA2               	goto	l2826
  8799  1D9E                     l2824:	
  8800  1D9E  0871               	movf	fputc@c,w
  8801  1D9F  3180  2003         	fcall	_putch
  8802  1DA1  0008               	return
  8803  1DA2                     l2826:	
  8804  1DA2  0873               	movf	fputc@fp,w
  8805  1DA3  0086               	movwf	6
  8806  1DA4  0874               	movf	fputc@fp+1,w
  8807  1DA5  0087               	movwf	7
  8808  1DA6  3144               	addfsr 1,4
  8809  1DA7  0016               	moviw fsr1++
  8810  1DA8  0401               	iorwf	1,w
  8811  1DA9  1903               	btfsc	3,2
  8812  1DAA  2DC9               	goto	l2830
  8813  1DAB  0873               	movf	fputc@fp,w
  8814  1DAC  0086               	movwf	6
  8815  1DAD  0874               	movf	fputc@fp+1,w
  8816  1DAE  0087               	movwf	7
  8817  1DAF  3144               	addfsr 1,4
  8818  1DB0  3F40               	moviw [0]fsr1
  8819  1DB1  00F5               	movwf	??_fputc
  8820  1DB2  3F41               	moviw [1]fsr1
  8821  1DB3  00F6               	movwf	??_fputc+1
  8822  1DB4  0873               	movf	fputc@fp,w
  8823  1DB5  0086               	movwf	6
  8824  1DB6  0874               	movf	fputc@fp+1,w
  8825  1DB7  0087               	movwf	7
  8826  1DB8  3142               	addfsr 1,2
  8827  1DB9  3F40               	moviw [0]fsr1
  8828  1DBA  00F7               	movwf	??_fputc+2
  8829  1DBB  3F41               	moviw [1]fsr1
  8830  1DBC  00F8               	movwf	??_fputc+3
  8831  1DBD  0878               	movf	??_fputc+3,w
  8832  1DBE  3A80               	xorlw	128
  8833  1DBF  00F9               	movwf	??_fputc+4
  8834  1DC0  0876               	movf	??_fputc+1,w
  8835  1DC1  3A80               	xorlw	128
  8836  1DC2  0279               	subwf	??_fputc+4,w
  8837  1DC3  1D03               	skipz
  8838  1DC4  2DC7               	goto	u2415
  8839  1DC5  0875               	movf	??_fputc,w
  8840  1DC6  0277               	subwf	??_fputc+2,w
  8841  1DC7                     u2415:	
  8842  1DC7  1803               	skipnc
  8843  1DC8  0008               	return
  8844  1DC9                     l2830:	
  8845  1DC9  0873               	movf	fputc@fp,w
  8846  1DCA  0086               	movwf	6
  8847  1DCB  0874               	movf	fputc@fp+1,w
  8848  1DCC  0087               	movwf	7
  8849  1DCD  3142               	addfsr 1,2
  8850  1DCE  0873               	movf	fputc@fp,w
  8851  1DCF  0084               	movwf	4
  8852  1DD0  0874               	movf	fputc@fp+1,w
  8853  1DD1  0085               	movwf	5
  8854  1DD2  3F40               	moviw [0]fsr1
  8855  1DD3  0700               	addwf	0,w
  8856  1DD4  00F5               	movwf	??_fputc
  8857  1DD5  3101               	addfsr 0,1
  8858  1DD6  3F41               	moviw [1]fsr1
  8859  1DD7  3D00               	addwfc	0,w
  8860  1DD8  00F6               	movwf	??_fputc+1
  8861  1DD9  0875               	movf	??_fputc,w
  8862  1DDA  0086               	movwf	6
  8863  1DDB  0876               	movf	??_fputc+1,w
  8864  1DDC  0087               	movwf	7
  8865  1DDD  0871               	movf	fputc@c,w
  8866  1DDE  0081               	movwf	1
  8867  1DDF  0873               	movf	fputc@fp,w
  8868  1DE0  0086               	movwf	6
  8869  1DE1  0874               	movf	fputc@fp+1,w
  8870  1DE2  0087               	movwf	7
  8871  1DE3  3142               	addfsr 1,2
  8872  1DE4  3001               	movlw	1
  8873  1DE5  0781               	addwf	1,f
  8874  1DE6  3141               	addfsr 1,1
  8875  1DE7  1803               	skipnc
  8876  1DE8  0A81               	incf	1,f
  8877  1DE9  0008               	return
  8878  1DEA                     __end_of_fputc:	
  8879                           
  8880                           	psect	text26
  8881  0003                     __ptext26:	
  8882 ;; *************** function _putch *****************
  8883 ;; Defined at:
  8884 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  8885 ;; Parameters:    Size  Location     Type
  8886 ;;  c               1    wreg     unsigned char 
  8887 ;; Auto vars:     Size  Location     Type
  8888 ;;  c               1    0[COMMON] unsigned char 
  8889 ;; Return value:  Size  Location     Type
  8890 ;;                  1    wreg      void 
  8891 ;; Registers used:
  8892 ;;		wreg
  8893 ;; Tracked objects:
  8894 ;;		On entry : 0/0
  8895 ;;		On exit  : 0/0
  8896 ;;		Unchanged: 0/0
  8897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8902 ;;Total ram usage:        0 bytes
  8903 ;; Hardware stack levels used:    1
  8904 ;; Hardware stack levels required when called:    1
  8905 ;; This function calls:
  8906 ;;		Nothing
  8907 ;; This function is called by:
  8908 ;;		_fputc
  8909 ;; This function uses a non-reentrant model
  8910 ;;
  8911                           
  8912                           
  8913                           ;psect for function _putch
  8914  0003                     _putch:	
  8915                           
  8916                           ;incstack = 0
  8917                           ; Regs used in _putch: [wreg]
  8918  0003  0008               	return
  8919  0004                     __end_of_putch:	
  8920                           
  8921                           	psect	text27
  8922  1F5F                     __ptext27:	
  8923 ;; *************** function _atoi *****************
  8924 ;; Defined at:
  8925 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  8926 ;; Parameters:    Size  Location     Type
  8927 ;;  s               2    7[COMMON] PTR const unsigned char 
  8928 ;;		 -> STR_5(43), STR_3(43), 
  8929 ;; Auto vars:     Size  Location     Type
  8930 ;;  n               2   11[BANK0 ] int 
  8931 ;;  neg             2    4[BANK0 ] int 
  8932 ;; Return value:  Size  Location     Type
  8933 ;;                  2    7[COMMON] int 
  8934 ;; Registers used:
  8935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8936 ;; Tracked objects:
  8937 ;;		On entry : 0/0
  8938 ;;		On exit  : 0/0
  8939 ;;		Unchanged: 0/0
  8940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8941 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8942 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8943 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8944 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8945 ;;Total ram usage:       15 bytes
  8946 ;; Hardware stack levels used:    1
  8947 ;; Hardware stack levels required when called:    2
  8948 ;; This function calls:
  8949 ;;		___wmul
  8950 ;;		_isdigit
  8951 ;;		_isspace
  8952 ;; This function is called by:
  8953 ;;		_vfpfcnvrt
  8954 ;; This function uses a non-reentrant model
  8955 ;;
  8956                           
  8957                           
  8958                           ;psect for function _atoi
  8959  1F5F                     _atoi:	
  8960                           
  8961                           ;incstack = 0
  8962                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8963  1F5F  0020               	movlb	0	; select bank0
  8964  1F60  01AB               	clrf	atoi@n
  8965  1F61  01AC               	clrf	atoi@n+1
  8966  1F62  01A4               	clrf	atoi@neg
  8967  1F63  01A5               	clrf	atoi@neg+1
  8968  1F64                     l4576:	
  8969  1F64  01AA               	clrf	_atoi$1387
  8970  1F65  0AAA               	incf	_atoi$1387,f
  8971  1F66  0877               	movf	atoi@s,w
  8972  1F67  0084               	movwf	4
  8973  1F68  0878               	movf	atoi@s+1,w
  8974  1F69  0085               	movwf	5
  8975  1F6A  0012               	moviw fsr0++
  8976  1F6B  3A20               	xorlw	32
  8977  1F6C  1903               	btfsc	3,2
  8978  1F6D  2F80               	goto	l4584
  8979  1F6E  0877               	movf	atoi@s,w
  8980  1F6F  0084               	movwf	4
  8981  1F70  0878               	movf	atoi@s+1,w
  8982  1F71  0085               	movwf	5
  8983  1F72  0800               	movf	0,w	;code access
  8984  1F73  3EF7               	addlw	247
  8985  1F74  00A0               	movwf	??_atoi
  8986  1F75  30FF               	movlw	255
  8987  1F76  1803               	skipnc
  8988  1F77  3000               	movlw	0
  8989  1F78  00A1               	movwf	??_atoi+1
  8990  1F79  3000               	movlw	0
  8991  1F7A  0221               	subwf	??_atoi+1,w
  8992  1F7B  3005               	movlw	5
  8993  1F7C  1903               	skipnz
  8994  1F7D  0220               	subwf	??_atoi,w
  8995  1F7E  1803               	btfsc	3,0
  8996  1F7F  01AA               	clrf	_atoi$1387
  8997  1F80                     l4584:	
  8998  1F80  082A               	movf	_atoi$1387,w
  8999  1F81  00A0               	movwf	??_atoi
  9000  1F82  01A1               	clrf	??_atoi+1
  9001  1F83  0820               	movf	??_atoi,w
  9002  1F84  00A6               	movwf	_atoi$1386
  9003  1F85  0821               	movf	??_atoi+1,w
  9004  1F86  00A7               	movwf	_atoi$1386+1
  9005  1F87  0826               	movf	_atoi$1386,w
  9006  1F88  0427               	iorwf	_atoi$1386+1,w
  9007  1F89  1903               	btfsc	3,2
  9008  1F8A  2F95               	goto	l4592
  9009  1F8B  3001               	movlw	1
  9010  1F8C  07F7               	addwf	atoi@s,f
  9011  1F8D  3000               	movlw	0
  9012  1F8E  3DF8               	addwfc	atoi@s+1,f
  9013  1F8F  2F64               	goto	l4576
  9014  1F90                     l4590:	
  9015  1F90  3001               	movlw	1
  9016  1F91  00A4               	movwf	atoi@neg
  9017  1F92  3000               	movlw	0
  9018  1F93  00A5               	movwf	atoi@neg+1
  9019  1F94  2FC8               	goto	l1180
  9020  1F95                     l4592:	
  9021  1F95  0877               	movf	atoi@s,w
  9022  1F96  0084               	movwf	4
  9023  1F97  0878               	movf	atoi@s+1,w
  9024  1F98  0085               	movwf	5
  9025  1F99  0800               	movf	0,w	;code access
  9026  1F9A  00A0               	movwf	??_atoi
  9027  1F9B  01A1               	clrf	??_atoi+1
  9028                           
  9029                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9030                           ; Switch size 1, requested type "simple"
  9031                           ; Number of cases is 1, Range of values is 0 to 0
  9032                           ; switch strategies available:
  9033                           ; Name         Instructions Cycles
  9034                           ; simple_byte            4     3 (average)
  9035                           ; direct_byte            8     6 (fixed)
  9036                           ; jumptable            260     6 (fixed)
  9037                           ;	Chosen strategy is simple_byte
  9038  1F9C  0821               	movf	??_atoi+1,w
  9039  1F9D  3A00               	xorlw	0	; case 0
  9040  1F9E  1903               	skipnz
  9041  1F9F  2FA1               	goto	l5408
  9042  1FA0  2FCC               	goto	l4598
  9043  1FA1                     l5408:	
  9044                           
  9045                           ; Switch size 1, requested type "simple"
  9046                           ; Number of cases is 2, Range of values is 43 to 45
  9047                           ; switch strategies available:
  9048                           ; Name         Instructions Cycles
  9049                           ; simple_byte            7     4 (average)
  9050                           ; direct_byte           15     9 (fixed)
  9051                           ; jumptable            263     9 (fixed)
  9052                           ;	Chosen strategy is simple_byte
  9053  1FA1  0820               	movf	??_atoi,w
  9054  1FA2  3A2B               	xorlw	43	; case 43
  9055  1FA3  1903               	skipnz
  9056  1FA4  2FC8               	goto	l1180
  9057  1FA5  3A06               	xorlw	6	; case 45
  9058  1FA6  1903               	skipnz
  9059  1FA7  2F90               	goto	l4590
  9060  1FA8  2FCC               	goto	l4598
  9061  1FA9                     l4594:	
  9062  1FA9  0877               	movf	atoi@s,w
  9063  1FAA  0084               	movwf	4
  9064  1FAB  0878               	movf	atoi@s+1,w
  9065  1FAC  0085               	movwf	5
  9066  1FAD  0800               	movf	0,w	;code access
  9067  1FAE  00A0               	movwf	??_atoi
  9068  1FAF  082C               	movf	atoi@n+1,w
  9069  1FB0  00F2               	movwf	___wmul@multiplier+1
  9070  1FB1  082B               	movf	atoi@n,w
  9071  1FB2  00F1               	movwf	___wmul@multiplier
  9072  1FB3  300A               	movlw	10
  9073  1FB4  00F3               	movwf	___wmul@multiplicand
  9074  1FB5  3000               	movlw	0
  9075  1FB6  00F4               	movwf	___wmul@multiplicand+1
  9076  1FB7  319A  224E  319F   	fcall	___wmul
  9077  1FBA  0872               	movf	?___wmul+1,w
  9078  1FBB  0020               	movlb	0	; select bank0
  9079  1FBC  00A2               	movwf	??_atoi+2
  9080  1FBD  0820               	movf	??_atoi,w
  9081  1FBE  0271               	subwf	?___wmul,w
  9082  1FBF  00A1               	movwf	??_atoi+1
  9083  1FC0  1C03               	skipc
  9084  1FC1  03A2               	decf	??_atoi+2,f
  9085  1FC2  0821               	movf	??_atoi+1,w
  9086  1FC3  3E30               	addlw	48
  9087  1FC4  00AB               	movwf	atoi@n
  9088  1FC5  3000               	movlw	0
  9089  1FC6  3D22               	addwfc	??_atoi+2,w
  9090  1FC7  00AC               	movwf	atoi@n+1
  9091  1FC8                     l1180:	
  9092  1FC8  3001               	movlw	1
  9093  1FC9  07F7               	addwf	atoi@s,f
  9094  1FCA  3000               	movlw	0
  9095  1FCB  3DF8               	addwfc	atoi@s+1,f
  9096  1FCC                     l4598:	
  9097  1FCC  0877               	movf	atoi@s,w
  9098  1FCD  0084               	movwf	4
  9099  1FCE  0878               	movf	atoi@s+1,w
  9100  1FCF  0085               	movwf	5
  9101  1FD0  0800               	movf	0,w	;code access
  9102  1FD1  3ED0               	addlw	208
  9103  1FD2  00A0               	movwf	??_atoi
  9104  1FD3  30FF               	movlw	255
  9105  1FD4  1803               	skipnc
  9106  1FD5  3000               	movlw	0
  9107  1FD6  00A1               	movwf	??_atoi+1
  9108  1FD7  3000               	movlw	0
  9109  1FD8  0221               	subwf	??_atoi+1,w
  9110  1FD9  300A               	movlw	10
  9111  1FDA  1903               	skipnz
  9112  1FDB  0220               	subwf	??_atoi,w
  9113  1FDC  1803               	btfsc	3,0
  9114  1FDD  2FE0               	goto	u5440
  9115  1FDE  3001               	movlw	1
  9116  1FDF  2FE1               	goto	u5450
  9117  1FE0                     u5440:	
  9118  1FE0  3000               	movlw	0
  9119  1FE1                     u5450:	
  9120  1FE1  00A2               	movwf	??_atoi+2
  9121  1FE2  01A3               	clrf	??_atoi+3
  9122  1FE3  0822               	movf	??_atoi+2,w
  9123  1FE4  00A8               	movwf	_atoi$1388
  9124  1FE5  0823               	movf	??_atoi+3,w
  9125  1FE6  00A9               	movwf	_atoi$1388+1
  9126  1FE7  0828               	movf	_atoi$1388,w
  9127  1FE8  0429               	iorwf	_atoi$1388+1,w
  9128  1FE9  1D03               	btfss	3,2
  9129  1FEA  2FA9               	goto	l4594
  9130  1FEB  0824               	movf	atoi@neg,w
  9131  1FEC  0425               	iorwf	atoi@neg+1,w
  9132  1FED  1D03               	btfss	3,2
  9133  1FEE  2FFB               	goto	l4608
  9134  1FEF  092B               	comf	atoi@n,w
  9135  1FF0  00A0               	movwf	??_atoi
  9136  1FF1  092C               	comf	atoi@n+1,w
  9137  1FF2  00A1               	movwf	??_atoi+1
  9138  1FF3  0AA0               	incf	??_atoi,f
  9139  1FF4  1903               	skipnz
  9140  1FF5  0AA1               	incf	??_atoi+1,f
  9141  1FF6  0820               	movf	??_atoi,w
  9142  1FF7  00F7               	movwf	?_atoi
  9143  1FF8  0821               	movf	??_atoi+1,w
  9144  1FF9  00F8               	movwf	?_atoi+1
  9145  1FFA  0008               	return
  9146  1FFB                     l4608:	
  9147  1FFB  082C               	movf	atoi@n+1,w
  9148  1FFC  00F8               	movwf	?_atoi+1
  9149  1FFD  082B               	movf	atoi@n,w
  9150  1FFE  00F7               	movwf	?_atoi
  9151  1FFF  0008               	return
  9152  2000                     __end_of_atoi:	
  9153                           
  9154                           	psect	text28
  9155  1000                     __ptext28:	
  9156 ;; *************** function _isspace *****************
  9157 ;; Defined at:
  9158 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  9159 ;; Parameters:    Size  Location     Type
  9160 ;;  c               2    1[COMMON] int 
  9161 ;; Auto vars:     Size  Location     Type
  9162 ;;		None
  9163 ;; Return value:  Size  Location     Type
  9164 ;;                  2    1[COMMON] int 
  9165 ;; Registers used:
  9166 ;;		wreg, status,2, status,0
  9167 ;; Tracked objects:
  9168 ;;		On entry : 0/0
  9169 ;;		On exit  : 0/0
  9170 ;;		Unchanged: 0/0
  9171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9172 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9173 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9174 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9175 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9176 ;;Total ram usage:        5 bytes
  9177 ;; Hardware stack levels used:    1
  9178 ;; Hardware stack levels required when called:    1
  9179 ;; This function calls:
  9180 ;;		Nothing
  9181 ;; This function is called by:
  9182 ;;		_atoi
  9183 ;; This function uses a non-reentrant model
  9184 ;;
  9185                           
  9186                           
  9187                           ;psect for function _isspace
  9188  1000                     _isspace:	
  9189                           
  9190                           ;incstack = 0
  9191                           ; Regs used in _isspace: [wreg+status,2+status,0]
  9192  1000  01F5               	clrf	_isspace$1413
  9193  1001  0AF5               	incf	_isspace$1413,f
  9194  1002  3020               	movlw	32
  9195  1003  0671               	xorwf	isspace@c,w
  9196  1004  0472               	iorwf	isspace@c+1,w
  9197  1005  1903               	btfsc	3,2
  9198  1006  2814               	goto	l3034
  9199  1007  0871               	movf	isspace@c,w
  9200  1008  3EF7               	addlw	247
  9201  1009  00F3               	movwf	??_isspace
  9202  100A  30FF               	movlw	255
  9203  100B  3D72               	addwfc	isspace@c+1,w
  9204  100C  00F4               	movwf	??_isspace+1
  9205  100D  3000               	movlw	0
  9206  100E  0274               	subwf	??_isspace+1,w
  9207  100F  3005               	movlw	5
  9208  1010  1903               	skipnz
  9209  1011  0273               	subwf	??_isspace,w
  9210  1012  1803               	btfsc	3,0
  9211  1013  01F5               	clrf	_isspace$1413
  9212  1014                     l3034:	
  9213  1014  0875               	movf	_isspace$1413,w
  9214  1015  00F3               	movwf	??_isspace
  9215  1016  01F4               	clrf	??_isspace+1
  9216  1017  0873               	movf	??_isspace,w
  9217  1018  00F1               	movwf	?_isspace
  9218  1019  0874               	movf	??_isspace+1,w
  9219  101A  00F2               	movwf	?_isspace+1
  9220  101B  0008               	return
  9221  101C                     __end_of_isspace:	
  9222                           
  9223                           	psect	text29
  9224  19A9                     __ptext29:	
  9225 ;; *************** function _isdigit *****************
  9226 ;; Defined at:
  9227 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  9228 ;; Parameters:    Size  Location     Type
  9229 ;;  c               2    1[COMMON] int 
  9230 ;; Auto vars:     Size  Location     Type
  9231 ;;		None
  9232 ;; Return value:  Size  Location     Type
  9233 ;;                  2    1[COMMON] int 
  9234 ;; Registers used:
  9235 ;;		wreg, status,2, status,0
  9236 ;; Tracked objects:
  9237 ;;		On entry : 0/0
  9238 ;;		On exit  : 0/0
  9239 ;;		Unchanged: 0/0
  9240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9241 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9243 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9244 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9245 ;;Total ram usage:        6 bytes
  9246 ;; Hardware stack levels used:    1
  9247 ;; Hardware stack levels required when called:    1
  9248 ;; This function calls:
  9249 ;;		Nothing
  9250 ;; This function is called by:
  9251 ;;		_vfpfcnvrt
  9252 ;;		_atoi
  9253 ;; This function uses a non-reentrant model
  9254 ;;
  9255                           
  9256                           
  9257                           ;psect for function _isdigit
  9258  19A9                     _isdigit:	
  9259                           
  9260                           ;incstack = 0
  9261                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  9262  19A9  0871               	movf	isdigit@c,w
  9263  19AA  3ED0               	addlw	208
  9264  19AB  00F3               	movwf	??_isdigit
  9265  19AC  30FF               	movlw	255
  9266  19AD  3D72               	addwfc	isdigit@c+1,w
  9267  19AE  00F4               	movwf	??_isdigit+1
  9268  19AF  3000               	movlw	0
  9269  19B0  0274               	subwf	??_isdigit+1,w
  9270  19B1  300A               	movlw	10
  9271  19B2  1903               	skipnz
  9272  19B3  0273               	subwf	??_isdigit,w
  9273  19B4  1803               	btfsc	3,0
  9274  19B5  29B8               	goto	u2580
  9275  19B6  3001               	movlw	1
  9276  19B7  29B9               	goto	u2590
  9277  19B8                     u2580:	
  9278  19B8  3000               	movlw	0
  9279  19B9                     u2590:	
  9280  19B9  00F5               	movwf	??_isdigit+2
  9281  19BA  01F6               	clrf	??_isdigit+3
  9282  19BB  0875               	movf	??_isdigit+2,w
  9283  19BC  00F1               	movwf	?_isdigit
  9284  19BD  0876               	movf	??_isdigit+3,w
  9285  19BE  00F2               	movwf	?_isdigit+1
  9286  19BF  0008               	return
  9287  19C0                     __end_of_isdigit:	
  9288                           
  9289                           	psect	text30
  9290  1B39                     __ptext30:	
  9291 ;; *************** function _init_AFE *****************
  9292 ;; Defined at:
  9293 ;;		line 6 in file "BQ76920.c"
  9294 ;; Parameters:    Size  Location     Type
  9295 ;;		None
  9296 ;; Auto vars:     Size  Location     Type
  9297 ;;		None
  9298 ;; Return value:  Size  Location     Type
  9299 ;;                  1    wreg      void 
  9300 ;; Registers used:
  9301 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9302 ;; Tracked objects:
  9303 ;;		On entry : 0/0
  9304 ;;		On exit  : 0/0
  9305 ;;		Unchanged: 0/0
  9306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9311 ;;Total ram usage:        0 bytes
  9312 ;; Hardware stack levels used:    1
  9313 ;; Hardware stack levels required when called:    3
  9314 ;; This function calls:
  9315 ;;		_setShortCircuitProtection
  9316 ;;		_setShuntResistorValue
  9317 ;;		_setTemperatureLimitsint
  9318 ;; This function is called by:
  9319 ;;		_statemachine
  9320 ;; This function uses a non-reentrant model
  9321 ;;
  9322                           
  9323                           
  9324                           ;psect for function _init_AFE
  9325  1B39                     _init_AFE:	
  9326                           
  9327                           ;BQ76920.c: 8:     setTemperatureLimitsint(-20, 45, 0, 45);
  9328                           
  9329                           ;incstack = 0
  9330                           ; Regs used in _init_AFE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9331  1B39  30EC               	movlw	236
  9332  1B3A  0020               	movlb	0	; select bank0
  9333  1B3B  00A0               	movwf	setTemperatureLimitsint@minDischarge_degC
  9334  1B3C  30FF               	movlw	255
  9335  1B3D  00A1               	movwf	setTemperatureLimitsint@minDischarge_degC+1
  9336  1B3E  302D               	movlw	45
  9337  1B3F  00A2               	movwf	setTemperatureLimitsint@maxDischarge_degC
  9338  1B40  3000               	movlw	0
  9339  1B41  00A3               	movwf	setTemperatureLimitsint@maxDischarge_degC+1
  9340  1B42  3000               	movlw	0
  9341  1B43  00A4               	movwf	setTemperatureLimitsint@minCharge_degC
  9342  1B44  00A5               	movwf	setTemperatureLimitsint@minCharge_degC+1
  9343  1B45  302D               	movlw	45
  9344  1B46  00A6               	movwf	setTemperatureLimitsint@maxCharge_degC
  9345  1B47  3000               	movlw	0
  9346  1B48  00A7               	movwf	setTemperatureLimitsint@maxCharge_degC+1
  9347  1B49  319C  2465  319B   	fcall	_setTemperatureLimitsint
  9348                           
  9349                           ;BQ76920.c: 9:     setShuntResistorValue(1);
  9350  1B4C  3001               	movlw	1
  9351  1B4D  00F1               	movwf	setShuntResistorValue@res_mOhm
  9352  1B4E  3000               	movlw	0
  9353  1B4F  00F2               	movwf	setShuntResistorValue@res_mOhm+1
  9354  1B50  3199  2131  319B   	fcall	_setShuntResistorValue
  9355                           
  9356                           ;BQ76920.c: 10:     setShortCircuitProtection(22000, 200);
  9357  1B53  3000               	movlw	0
  9358  1B54  0020               	movlb	0	; select bank0
  9359  1B55  00B5               	movwf	setShortCircuitProtection@current_mA+3
  9360  1B56  3000               	movlw	0
  9361  1B57  00B4               	movwf	setShortCircuitProtection@current_mA+2
  9362  1B58  3055               	movlw	85
  9363  1B59  00B3               	movwf	setShortCircuitProtection@current_mA+1
  9364  1B5A  30F0               	movlw	240
  9365  1B5B  00B2               	movwf	setShortCircuitProtection@current_mA
  9366  1B5C  30C8               	movlw	200
  9367  1B5D  00B6               	movwf	setShortCircuitProtection@delay_us
  9368  1B5E  3000               	movlw	0
  9369  1B5F  00B7               	movwf	setShortCircuitProtection@delay_us+1
  9370  1B60  3192  2233         	fcall	_setShortCircuitProtection
  9371  1B62  0008               	return
  9372  1B63                     __end_of_init_AFE:	
  9373                           
  9374                           	psect	text31
  9375  1C65                     __ptext31:	
  9376 ;; *************** function _setTemperatureLimitsint *****************
  9377 ;; Defined at:
  9378 ;;		line 61 in file "BQ76920.c"
  9379 ;; Parameters:    Size  Location     Type
  9380 ;;  minDischarge    2    0[BANK0 ] int 
  9381 ;;  maxDischarge    2    2[BANK0 ] int 
  9382 ;;  minCharge_de    2    4[BANK0 ] int 
  9383 ;;  maxCharge_de    2    6[BANK0 ] int 
  9384 ;; Auto vars:     Size  Location     Type
  9385 ;;		None
  9386 ;; Return value:  Size  Location     Type
  9387 ;;                  1    wreg      void 
  9388 ;; Registers used:
  9389 ;;		wreg, status,2, status,0, pclath, cstack
  9390 ;; Tracked objects:
  9391 ;;		On entry : 0/0
  9392 ;;		On exit  : 0/0
  9393 ;;		Unchanged: 0/0
  9394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9395 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9398 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9399 ;;Total ram usage:        8 bytes
  9400 ;; Hardware stack levels used:    1
  9401 ;; Hardware stack levels required when called:    2
  9402 ;; This function calls:
  9403 ;;		___wmul
  9404 ;; This function is called by:
  9405 ;;		_init_AFE
  9406 ;; This function uses a non-reentrant model
  9407 ;;
  9408                           
  9409                           
  9410                           ;psect for function _setTemperatureLimitsint
  9411  1C65                     _setTemperatureLimitsint:	
  9412                           
  9413                           ;BQ76920.c: 63:     minCellTempDischarge = minDischarge_degC * 10;
  9414                           
  9415                           ;incstack = 0
  9416                           ; Regs used in _setTemperatureLimitsint: [wreg+status,2+status,0+pclath+cstack]
  9417  1C65  0020               	movlb	0	; select bank0
  9418  1C66  0821               	movf	setTemperatureLimitsint@minDischarge_degC+1,w
  9419  1C67  00F2               	movwf	___wmul@multiplier+1
  9420  1C68  0820               	movf	setTemperatureLimitsint@minDischarge_degC,w
  9421  1C69  00F1               	movwf	___wmul@multiplier
  9422  1C6A  300A               	movlw	10
  9423  1C6B  00F3               	movwf	___wmul@multiplicand
  9424  1C6C  3000               	movlw	0
  9425  1C6D  00F4               	movwf	___wmul@multiplicand+1
  9426  1C6E  319A  224E  319C   	fcall	___wmul
  9427  1C71  0872               	movf	?___wmul+1,w
  9428  1C72  0022               	movlb	2	; select bank2
  9429  1C73  00B1               	movwf	(_minCellTempDischarge+1)^(0+256)
  9430  1C74  0871               	movf	?___wmul,w
  9431  1C75  00B0               	movwf	_minCellTempDischarge^(0+256)
  9432                           
  9433                           ;BQ76920.c: 64:     maxCellTempDischarge = maxDischarge_degC * 10;
  9434  1C76  0020               	movlb	0	; select bank0
  9435  1C77  0823               	movf	setTemperatureLimitsint@maxDischarge_degC+1,w
  9436  1C78  00F2               	movwf	___wmul@multiplier+1
  9437  1C79  0822               	movf	setTemperatureLimitsint@maxDischarge_degC,w
  9438  1C7A  00F1               	movwf	___wmul@multiplier
  9439  1C7B  300A               	movlw	10
  9440  1C7C  00F3               	movwf	___wmul@multiplicand
  9441  1C7D  3000               	movlw	0
  9442  1C7E  00F4               	movwf	___wmul@multiplicand+1
  9443  1C7F  319A  224E  319C   	fcall	___wmul
  9444  1C82  0872               	movf	?___wmul+1,w
  9445  1C83  0022               	movlb	2	; select bank2
  9446  1C84  00AD               	movwf	(_maxCellTempDischarge+1)^(0+256)
  9447  1C85  0871               	movf	?___wmul,w
  9448  1C86  00AC               	movwf	_maxCellTempDischarge^(0+256)
  9449                           
  9450                           ;BQ76920.c: 65:     minCellTempCharge = minCharge_degC * 10;
  9451  1C87  0020               	movlb	0	; select bank0
  9452  1C88  0825               	movf	setTemperatureLimitsint@minCharge_degC+1,w
  9453  1C89  00F2               	movwf	___wmul@multiplier+1
  9454  1C8A  0824               	movf	setTemperatureLimitsint@minCharge_degC,w
  9455  1C8B  00F1               	movwf	___wmul@multiplier
  9456  1C8C  300A               	movlw	10
  9457  1C8D  00F3               	movwf	___wmul@multiplicand
  9458  1C8E  3000               	movlw	0
  9459  1C8F  00F4               	movwf	___wmul@multiplicand+1
  9460  1C90  319A  224E  319C   	fcall	___wmul
  9461  1C93  0872               	movf	?___wmul+1,w
  9462  1C94  0021               	movlb	1	; select bank1
  9463  1C95  00E6               	movwf	(_minCellTempCharge+1)^(0+128)
  9464  1C96  0871               	movf	?___wmul,w
  9465  1C97  00E5               	movwf	_minCellTempCharge^(0+128)
  9466                           
  9467                           ;BQ76920.c: 66:     maxCellTempCharge = maxCharge_degC * 10;
  9468  1C98  0020               	movlb	0	; select bank0
  9469  1C99  0827               	movf	setTemperatureLimitsint@maxCharge_degC+1,w
  9470  1C9A  00F2               	movwf	___wmul@multiplier+1
  9471  1C9B  0826               	movf	setTemperatureLimitsint@maxCharge_degC,w
  9472  1C9C  00F1               	movwf	___wmul@multiplier
  9473  1C9D  300A               	movlw	10
  9474  1C9E  00F3               	movwf	___wmul@multiplicand
  9475  1C9F  3000               	movlw	0
  9476  1CA0  00F4               	movwf	___wmul@multiplicand+1
  9477  1CA1  319A  224E         	fcall	___wmul
  9478  1CA3  0872               	movf	?___wmul+1,w
  9479  1CA4  0022               	movlb	2	; select bank2
  9480  1CA5  00AF               	movwf	(_maxCellTempCharge+1)^(0+256)
  9481  1CA6  0871               	movf	?___wmul,w
  9482  1CA7  00AE               	movwf	_maxCellTempCharge^(0+256)
  9483  1CA8  0008               	return
  9484  1CA9                     __end_of_setTemperatureLimitsint:	
  9485                           
  9486                           	psect	text32
  9487  1A4E                     __ptext32:	
  9488 ;; *************** function ___wmul *****************
  9489 ;; Defined at:
  9490 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  9491 ;; Parameters:    Size  Location     Type
  9492 ;;  multiplier      2    1[COMMON] unsigned int 
  9493 ;;  multiplicand    2    3[COMMON] unsigned int 
  9494 ;; Auto vars:     Size  Location     Type
  9495 ;;  product         2    5[COMMON] unsigned int 
  9496 ;; Return value:  Size  Location     Type
  9497 ;;                  2    1[COMMON] unsigned int 
  9498 ;; Registers used:
  9499 ;;		wreg, status,2, status,0
  9500 ;; Tracked objects:
  9501 ;;		On entry : 0/0
  9502 ;;		On exit  : 0/0
  9503 ;;		Unchanged: 0/0
  9504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9505 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9506 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9508 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9509 ;;Total ram usage:        6 bytes
  9510 ;; Hardware stack levels used:    1
  9511 ;; Hardware stack levels required when called:    1
  9512 ;; This function calls:
  9513 ;;		Nothing
  9514 ;; This function is called by:
  9515 ;;		_setTemperatureLimitsint
  9516 ;;		_atoi
  9517 ;; This function uses a non-reentrant model
  9518 ;;
  9519                           
  9520                           
  9521                           ;psect for function ___wmul
  9522  1A4E                     ___wmul:	
  9523                           
  9524                           ;incstack = 0
  9525                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9526  1A4E  01F5               	clrf	___wmul@product
  9527  1A4F  01F6               	clrf	___wmul@product+1
  9528  1A50                     l2908:	
  9529  1A50  1C71               	btfss	___wmul@multiplier,0
  9530  1A51  2A56               	goto	l705
  9531  1A52  0873               	movf	___wmul@multiplicand,w
  9532  1A53  07F5               	addwf	___wmul@product,f
  9533  1A54  0874               	movf	___wmul@multiplicand+1,w
  9534  1A55  3DF6               	addwfc	___wmul@product+1,f
  9535  1A56                     l705:	
  9536  1A56  3001               	movlw	1
  9537  1A57                     u2615:	
  9538  1A57  35F3               	lslf	___wmul@multiplicand,f
  9539  1A58  0DF4               	rlf	___wmul@multiplicand+1,f
  9540  1A59  0B89               	decfsz	9,f
  9541  1A5A  2A57               	goto	u2615
  9542  1A5B  3001               	movlw	1
  9543  1A5C                     u2625:	
  9544  1A5C  36F2               	lsrf	___wmul@multiplier+1,f
  9545  1A5D  0CF1               	rrf	___wmul@multiplier,f
  9546  1A5E  0B89               	decfsz	9,f
  9547  1A5F  2A5C               	goto	u2625
  9548  1A60  0871               	movf	___wmul@multiplier,w
  9549  1A61  0472               	iorwf	___wmul@multiplier+1,w
  9550  1A62  1D03               	btfss	3,2
  9551  1A63  2A50               	goto	l2908
  9552  1A64  0876               	movf	___wmul@product+1,w
  9553  1A65  00F2               	movwf	?___wmul+1
  9554  1A66  0875               	movf	___wmul@product,w
  9555  1A67  00F1               	movwf	?___wmul
  9556  1A68  0008               	return
  9557  1A69                     __end_of___wmul:	
  9558                           
  9559                           	psect	text33
  9560  1931                     __ptext33:	
  9561 ;; *************** function _setShuntResistorValue *****************
  9562 ;; Defined at:
  9563 ;;		line 73 in file "BQ76920.c"
  9564 ;; Parameters:    Size  Location     Type
  9565 ;;  res_mOhm        2    1[COMMON] int 
  9566 ;; Auto vars:     Size  Location     Type
  9567 ;;		None
  9568 ;; Return value:  Size  Location     Type
  9569 ;;                  1    wreg      void 
  9570 ;; Registers used:
  9571 ;;		wreg
  9572 ;; Tracked objects:
  9573 ;;		On entry : 0/0
  9574 ;;		On exit  : 0/0
  9575 ;;		Unchanged: 0/0
  9576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9577 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9579 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9580 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9581 ;;Total ram usage:        3 bytes
  9582 ;; Hardware stack levels used:    1
  9583 ;; Hardware stack levels required when called:    1
  9584 ;; This function calls:
  9585 ;;		Nothing
  9586 ;; This function is called by:
  9587 ;;		_init_AFE
  9588 ;; This function uses a non-reentrant model
  9589 ;;
  9590                           
  9591                           
  9592                           ;psect for function _setShuntResistorValue
  9593  1931                     _setShuntResistorValue:	
  9594                           
  9595                           ;BQ76920.c: 74:     shuntResistorValue_mOhm = res_mOhm;
  9596                           
  9597                           ;incstack = 0
  9598                           ; Regs used in _setShuntResistorValue: [wreg]
  9599  1931  0871               	movf	setShuntResistorValue@res_mOhm,w
  9600  1932  00F3               	movwf	??_setShuntResistorValue
  9601  1933  0873               	movf	??_setShuntResistorValue,w
  9602  1934  0021               	movlb	1	; select bank1
  9603  1935  00EF               	movwf	_shuntResistorValue_mOhm^(0+128)
  9604  1936  0008               	return
  9605  1937                     __end_of_setShuntResistorValue:	
  9606                           
  9607                           	psect	text34
  9608  1233                     __ptext34:	
  9609 ;; *************** function _setShortCircuitProtection *****************
  9610 ;; Defined at:
  9611 ;;		line 81 in file "BQ76920.c"
  9612 ;; Parameters:    Size  Location     Type
  9613 ;;  current_mA      4   18[BANK0 ] long 
  9614 ;;  delay_us        2   22[BANK0 ] int 
  9615 ;; Auto vars:     Size  Location     Type
  9616 ;;  i               2   37[BANK0 ] int 
  9617 ;;  i               2   35[BANK0 ] int 
  9618 ;; Return value:  Size  Location     Type
  9619 ;;                  1    wreg      void 
  9620 ;; Registers used:
  9621 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9622 ;; Tracked objects:
  9623 ;;		On entry : 0/0
  9624 ;;		On exit  : 0/0
  9625 ;;		Unchanged: 0/0
  9626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9627 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9628 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9629 ;;      Temps:          0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9630 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9631 ;;Total ram usage:       21 bytes
  9632 ;; Hardware stack levels used:    1
  9633 ;; Hardware stack levels required when called:    2
  9634 ;; This function calls:
  9635 ;;		___aldiv
  9636 ;;		___lmul
  9637 ;; This function is called by:
  9638 ;;		_init_AFE
  9639 ;; This function uses a non-reentrant model
  9640 ;;
  9641                           
  9642                           
  9643                           ;psect for function _setShortCircuitProtection
  9644  1233                     _setShortCircuitProtection:	
  9645                           
  9646                           ;BQ76920.c: 86:     protect1.bits.SCD_THRESH = 0;
  9647                           
  9648                           ;incstack = 0
  9649                           ; Regs used in _setShortCircuitProtection: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9650  1233  30F8               	movlw	-8
  9651  1234  0021               	movlb	1	; select bank1
  9652  1235  05EB               	andwf	_protect1^(0+128),f
  9653                           
  9654                           ;BQ76920.c: 87:     for (int i = sizeof (SCD_threshold_setting) - 1; i > 0; i--) {
  9655  1236  300F               	movlw	15
  9656  1237  0020               	movlb	0	; select bank0
  9657  1238  00C3               	movwf	setShortCircuitProtection@i
  9658  1239  3000               	movlw	0
  9659  123A  00C4               	movwf	setShortCircuitProtection@i+1
  9660  123B                     l5114:	
  9661                           
  9662                           ;BQ76920.c: 88:         if (current_mA * shuntResistorValue_mOhm / 1000 >= SCD_threshold
      +                          _setting[i]) {
  9663  123B  0020               	movlb	0	; select bank0
  9664  123C  0844               	movf	setShortCircuitProtection@i+1,w
  9665  123D  0085               	movwf	5
  9666  123E  0843               	movf	setShortCircuitProtection@i,w
  9667  123F  0084               	movwf	4
  9668  1240  3584               	lslf	4,f
  9669  1241  0D85               	rlf	5,f
  9670  1242  306A               	movlw	low (_SCD_threshold_setting| (0+32768))
  9671  1243  0784               	addwf	4,f
  9672  1244  30A1               	movlw	high (_SCD_threshold_setting| (0+32768))
  9673  1245  3D85               	addwfc	5,f
  9674  1246  3F00               	moviw [0]fsr0
  9675  1247  00B8               	movwf	??_setShortCircuitProtection
  9676  1248  3F01               	moviw [1]fsr0
  9677  1249  00B9               	movwf	??_setShortCircuitProtection+1
  9678  124A  0838               	movf	??_setShortCircuitProtection,w
  9679  124B  00BA               	movwf	??_setShortCircuitProtection+2
  9680  124C  0839               	movf	??_setShortCircuitProtection+1,w
  9681  124D  00BB               	movwf	??_setShortCircuitProtection+3
  9682  124E  3000               	movlw	0
  9683  124F  1BBB               	btfsc	??_setShortCircuitProtection+3,7
  9684  1250  30FF               	movlw	255
  9685  1251  00BC               	movwf	??_setShortCircuitProtection+4
  9686  1252  00BD               	movwf	??_setShortCircuitProtection+5
  9687  1253  3000               	movlw	0
  9688  1254  00A7               	movwf	___aldiv@divisor+3
  9689  1255  3000               	movlw	0
  9690  1256  00A6               	movwf	___aldiv@divisor+2
  9691  1257  3003               	movlw	3
  9692  1258  00A5               	movwf	___aldiv@divisor+1
  9693  1259  30E8               	movlw	232
  9694  125A  00A4               	movwf	___aldiv@divisor
  9695  125B  0021               	movlb	1	; select bank1
  9696  125C  086F               	movf	_shuntResistorValue_mOhm^(0+128),w
  9697  125D  0020               	movlb	0	; select bank0
  9698  125E  00BE               	movwf	??_setShortCircuitProtection+6
  9699  125F  01BF               	clrf	??_setShortCircuitProtection+7
  9700  1260  01C0               	clrf	??_setShortCircuitProtection+8
  9701  1261  01C1               	clrf	??_setShortCircuitProtection+9
  9702  1262  0841               	movf	??_setShortCircuitProtection+9,w
  9703  1263  00F4               	movwf	___lmul@multiplier+3
  9704  1264  0840               	movf	??_setShortCircuitProtection+8,w
  9705  1265  00F3               	movwf	___lmul@multiplier+2
  9706  1266  083F               	movf	??_setShortCircuitProtection+7,w
  9707  1267  00F2               	movwf	___lmul@multiplier+1
  9708  1268  083E               	movf	??_setShortCircuitProtection+6,w
  9709  1269  00F1               	movwf	___lmul@multiplier
  9710  126A  0835               	movf	setShortCircuitProtection@current_mA+3,w
  9711  126B  00F8               	movwf	___lmul@multiplicand+3
  9712  126C  0834               	movf	setShortCircuitProtection@current_mA+2,w
  9713  126D  00F7               	movwf	___lmul@multiplicand+2
  9714  126E  0833               	movf	setShortCircuitProtection@current_mA+1,w
  9715  126F  00F6               	movwf	___lmul@multiplicand+1
  9716  1270  0832               	movf	setShortCircuitProtection@current_mA,w
  9717  1271  00F5               	movwf	___lmul@multiplicand
  9718  1272  319B  23C5  3192   	fcall	___lmul
  9719  1275  0874               	movf	?___lmul+3,w
  9720  1276  0020               	movlb	0	; select bank0
  9721  1277  00AB               	movwf	___aldiv@dividend+3
  9722  1278  0873               	movf	?___lmul+2,w
  9723  1279  00AA               	movwf	___aldiv@dividend+2
  9724  127A  0872               	movf	?___lmul+1,w
  9725  127B  00A9               	movwf	___aldiv@dividend+1
  9726  127C  0871               	movf	?___lmul,w
  9727  127D  00A8               	movwf	___aldiv@dividend
  9728  127E  319E  26DD  3192   	fcall	___aldiv
  9729  1281  0020               	movlb	0	; select bank0
  9730  1282  0827               	movf	?___aldiv+3,w
  9731  1283  3A80               	xorlw	128
  9732  1284  00C2               	movwf	??_setShortCircuitProtection+10
  9733  1285  083D               	movf	??_setShortCircuitProtection+5,w
  9734  1286  3A80               	xorlw	128
  9735  1287  0242               	subwf	??_setShortCircuitProtection+10,w
  9736  1288  1D03               	skipz
  9737  1289  2A94               	goto	u6153
  9738  128A  083C               	movf	??_setShortCircuitProtection+4,w
  9739  128B  0226               	subwf	?___aldiv+2,w
  9740  128C  1D03               	skipz
  9741  128D  2A94               	goto	u6153
  9742  128E  083B               	movf	??_setShortCircuitProtection+3,w
  9743  128F  0225               	subwf	?___aldiv+1,w
  9744  1290  1D03               	skipz
  9745  1291  2A94               	goto	u6153
  9746  1292  083A               	movf	??_setShortCircuitProtection+2,w
  9747  1293  0224               	subwf	?___aldiv,w
  9748  1294                     u6153:	
  9749  1294  1C03               	skipc
  9750  1295  2A9F               	goto	l5118
  9751                           
  9752                           ;BQ76920.c: 89:             protect1.bits.SCD_THRESH = i;
  9753  1296  0021               	movlb	1	; select bank1
  9754  1297  086B               	movf	_protect1^(0+128),w
  9755  1298  0020               	movlb	0	; select bank0
  9756  1299  0643               	xorwf	setShortCircuitProtection@i,w
  9757  129A  39F8               	andlw	-8
  9758  129B  0643               	xorwf	setShortCircuitProtection@i,w
  9759  129C  0021               	movlb	1	; select bank1
  9760  129D  00EB               	movwf	_protect1^(0+128)
  9761                           
  9762                           ;BQ76920.c: 90:             break;
  9763  129E  2AAE               	goto	l5120
  9764  129F                     l5118:	
  9765                           
  9766                           ;BQ76920.c: 92:     }
  9767  129F  30FF               	movlw	255
  9768  12A0  07C3               	addwf	setShortCircuitProtection@i,f
  9769  12A1  30FF               	movlw	255
  9770  12A2  3DC4               	addwfc	setShortCircuitProtection@i+1,f
  9771  12A3  0844               	movf	setShortCircuitProtection@i+1,w
  9772  12A4  3A80               	xorlw	128
  9773  12A5  00B8               	movwf	??_setShortCircuitProtection
  9774  12A6  3080               	movlw	128
  9775  12A7  0238               	subwf	??_setShortCircuitProtection,w
  9776  12A8  1D03               	skipz
  9777  12A9  2AAC               	goto	u6165
  9778  12AA  3001               	movlw	1
  9779  12AB  0243               	subwf	setShortCircuitProtection@i,w
  9780  12AC                     u6165:	
  9781  12AC  1803               	skipnc
  9782  12AD  2A3B               	goto	l5114
  9783  12AE                     l5120:	
  9784                           
  9785                           ;BQ76920.c: 94:     protect1.bits.SCD_DELAY = 0;
  9786  12AE  30E7               	movlw	-25
  9787  12AF  0021               	movlb	1	; select bank1
  9788  12B0  05EB               	andwf	_protect1^(0+128),f
  9789                           
  9790                           ;BQ76920.c: 95:     for (int i = sizeof (SCD_delay_setting) - 1; i > 0; i--) {
  9791  12B1  3007               	movlw	7
  9792  12B2  0020               	movlb	0	; select bank0
  9793  12B3  00C5               	movwf	setShortCircuitProtection@i_783
  9794  12B4  3000               	movlw	0
  9795  12B5  00C6               	movwf	setShortCircuitProtection@i_783+1
  9796  12B6                     l5128:	
  9797                           
  9798                           ;BQ76920.c: 96:         if (delay_us >= SCD_delay_setting[i]) {
  9799  12B6  0020               	movlb	0	; select bank0
  9800  12B7  0846               	movf	setShortCircuitProtection@i_783+1,w
  9801  12B8  0085               	movwf	5
  9802  12B9  0845               	movf	setShortCircuitProtection@i_783,w
  9803  12BA  0084               	movwf	4
  9804  12BB  3584               	lslf	4,f
  9805  12BC  0D85               	rlf	5,f
  9806  12BD  308A               	movlw	low (_SCD_delay_setting| (0+32768))
  9807  12BE  0784               	addwf	4,f
  9808  12BF  30A1               	movlw	high (_SCD_delay_setting| (0+32768))
  9809  12C0  3D85               	addwfc	5,f
  9810  12C1  3F00               	moviw [0]fsr0
  9811  12C2  00B8               	movwf	??_setShortCircuitProtection
  9812  12C3  3F01               	moviw [1]fsr0
  9813  12C4  00B9               	movwf	??_setShortCircuitProtection+1
  9814  12C5  0837               	movf	setShortCircuitProtection@delay_us+1,w
  9815  12C6  3A80               	xorlw	128
  9816  12C7  00BA               	movwf	??_setShortCircuitProtection+2
  9817  12C8  0839               	movf	??_setShortCircuitProtection+1,w
  9818  12C9  3A80               	xorlw	128
  9819  12CA  023A               	subwf	??_setShortCircuitProtection+2,w
  9820  12CB  1D03               	skipz
  9821  12CC  2ACF               	goto	u6175
  9822  12CD  0838               	movf	??_setShortCircuitProtection,w
  9823  12CE  0236               	subwf	setShortCircuitProtection@delay_us,w
  9824  12CF                     u6175:	
  9825  12CF  1C03               	skipc
  9826  12D0  2AE0               	goto	l5132
  9827                           
  9828                           ;BQ76920.c: 97:             protect1.bits.SCD_DELAY = i;
  9829  12D1  0020               	movlb	0	; select bank0
  9830  12D2  0845               	movf	setShortCircuitProtection@i_783,w
  9831  12D3  00B8               	movwf	??_setShortCircuitProtection
  9832  12D4  0DB8               	rlf	??_setShortCircuitProtection,f
  9833  12D5  0DB8               	rlf	??_setShortCircuitProtection,f
  9834  12D6  0DB8               	rlf	??_setShortCircuitProtection,f
  9835  12D7  0021               	movlb	1	; select bank1
  9836  12D8  086B               	movf	_protect1^(0+128),w
  9837  12D9  0020               	movlb	0	; select bank0
  9838  12DA  0638               	xorwf	??_setShortCircuitProtection,w
  9839  12DB  39E7               	andlw	-25
  9840  12DC  0638               	xorwf	??_setShortCircuitProtection,w
  9841  12DD  0021               	movlb	1	; select bank1
  9842  12DE  00EB               	movwf	_protect1^(0+128)
  9843                           
  9844                           ;BQ76920.c: 98:             break;
  9845  12DF  0008               	return
  9846  12E0                     l5132:	
  9847                           
  9848                           ;BQ76920.c: 100:     }
  9849  12E0  30FF               	movlw	255
  9850  12E1  0020               	movlb	0	; select bank0
  9851  12E2  07C5               	addwf	setShortCircuitProtection@i_783,f
  9852  12E3  30FF               	movlw	255
  9853  12E4  3DC6               	addwfc	setShortCircuitProtection@i_783+1,f
  9854  12E5  0846               	movf	setShortCircuitProtection@i_783+1,w
  9855  12E6  3A80               	xorlw	128
  9856  12E7  00B8               	movwf	??_setShortCircuitProtection
  9857  12E8  3080               	movlw	128
  9858  12E9  0238               	subwf	??_setShortCircuitProtection,w
  9859  12EA  1D03               	skipz
  9860  12EB  2AEE               	goto	u6185
  9861  12EC  3001               	movlw	1
  9862  12ED  0245               	subwf	setShortCircuitProtection@i_783,w
  9863  12EE                     u6185:	
  9864  12EE  1C03               	btfss	3,0
  9865  12EF  0008               	return
  9866  12F0  2AB6               	goto	l5128
  9867  12F1                     __end_of_setShortCircuitProtection:	
  9868                           
  9869                           	psect	text35
  9870  10C5                     __ptext35:	
  9871 ;; *************** function _beginAFEcommunication *****************
  9872 ;; Defined at:
  9873 ;;		line 25 in file "BQ76920.c"
  9874 ;; Parameters:    Size  Location     Type
  9875 ;;		None
  9876 ;; Auto vars:     Size  Location     Type
  9877 ;;  i               2   13[BANK0 ] int 
  9878 ;;  commSuccess     2   11[BANK0 ] int 
  9879 ;; Return value:  Size  Location     Type
  9880 ;;                  2    0[BANK0 ] int 
  9881 ;; Registers used:
  9882 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9883 ;; Tracked objects:
  9884 ;;		On entry : 0/0
  9885 ;;		On exit  : 0/0
  9886 ;;		Unchanged: 0/0
  9887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9888 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9889 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9890 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9891 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9892 ;;Total ram usage:       15 bytes
  9893 ;; Hardware stack levels used:    1
  9894 ;; Hardware stack levels required when called:    3
  9895 ;; This function calls:
  9896 ;;		_I2C_writeRegister
  9897 ;;		_readRegister
  9898 ;; This function is called by:
  9899 ;;		_statemachine
  9900 ;; This function uses a non-reentrant model
  9901 ;;
  9902                           
  9903                           
  9904                           ;psect for function _beginAFEcommunication
  9905  10C5                     _beginAFEcommunication:	
  9906                           
  9907                           ;BQ76920.c: 27:     int commSuccess = 0;
  9908                           
  9909                           ;incstack = 0
  9910                           ; Regs used in _beginAFEcommunication: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  9911  10C5  0020               	movlb	0	; select bank0
  9912  10C6  01AB               	clrf	beginAFEcommunication@commSuccess
  9913  10C7  01AC               	clrf	beginAFEcommunication@commSuccess+1
  9914                           
  9915                           ;BQ76920.c: 30:     for (int i = 0; i < 4; i++) {
  9916  10C8  01AD               	clrf	beginAFEcommunication@i
  9917  10C9  01AE               	clrf	beginAFEcommunication@i+1
  9918  10CA                     l5172:	
  9919                           
  9920                           ;BQ76920.c: 31:         cellVoltages[i] = 0;
  9921  10CA  0020               	movlb	0	; select bank0
  9922  10CB  352D               	lslf	beginAFEcommunication@i,w
  9923  10CC  3E20               	addlw	(low (_cellVoltages| (0+256)))& (0+255)
  9924  10CD  0086               	movwf	6
  9925  10CE  3001               	movlw	1	; select bank2/3
  9926  10CF  0087               	movwf	7
  9927  10D0  3000               	movlw	0
  9928  10D1  3FC0               	movwi [0]fsr1
  9929  10D2  3FC1               	movwi [1]fsr1
  9930                           
  9931                           ;BQ76920.c: 32:     }
  9932  10D3  3001               	movlw	1
  9933  10D4  07AD               	addwf	beginAFEcommunication@i,f
  9934  10D5  3000               	movlw	0
  9935  10D6  3DAE               	addwfc	beginAFEcommunication@i+1,f
  9936  10D7  082E               	movf	beginAFEcommunication@i+1,w
  9937  10D8  3A80               	xorlw	128
  9938  10D9  00A2               	movwf	??_beginAFEcommunication
  9939  10DA  3080               	movlw	128
  9940  10DB  0222               	subwf	??_beginAFEcommunication,w
  9941  10DC  1D03               	skipz
  9942  10DD  28E0               	goto	u6245
  9943  10DE  3004               	movlw	4
  9944  10DF  022D               	subwf	beginAFEcommunication@i,w
  9945  10E0                     u6245:	
  9946  10E0  1C03               	skipc
  9947  10E1  28CA               	goto	l5172
  9948                           
  9949                           ;BQ76920.c: 35:     I2C_writeRegister(0x18, 0x0B, 0x19);
  9950  10E2  3018               	movlw	24
  9951  10E3  00F5               	movwf	I2C_writeRegister@slaveAddress
  9952  10E4  3000               	movlw	0
  9953  10E5  00F6               	movwf	I2C_writeRegister@slaveAddress+1
  9954  10E6  300B               	movlw	11
  9955  10E7  00F7               	movwf	I2C_writeRegister@regAddress
  9956  10E8  3000               	movlw	0
  9957  10E9  00F8               	movwf	I2C_writeRegister@regAddress+1
  9958  10EA  3019               	movlw	25
  9959  10EB  00F9               	movwf	I2C_writeRegister@data
  9960  10EC  3000               	movlw	0
  9961  10ED  00FA               	movwf	I2C_writeRegister@data+1
  9962  10EE  3188  2001  3190   	fcall	_I2C_writeRegister
  9963                           
  9964                           ;BQ76920.c: 37:     if (readRegister(0x18, 0x0B) == 0x19) {
  9965  10F1  3018               	movlw	24
  9966  10F2  00F5               	movwf	readRegister@slaveAddress
  9967  10F3  3000               	movlw	0
  9968  10F4  00F6               	movwf	readRegister@slaveAddress+1
  9969  10F5  300B               	movlw	11
  9970  10F6  00F7               	movwf	readRegister@regAddress
  9971  10F7  3000               	movlw	0
  9972  10F8  00F8               	movwf	readRegister@regAddress+1
  9973  10F9  319B  23F7  3190   	fcall	_readRegister
  9974  10FC  3019               	movlw	25
  9975  10FD  0675               	xorwf	?_readRegister,w
  9976  10FE  0476               	iorwf	?_readRegister+1,w
  9977  10FF  1D03               	btfss	3,2
  9978  1100  2973               	goto	l366
  9979                           
  9980                           ;BQ76920.c: 38:         commSuccess = 1;
  9981  1101  3001               	movlw	1
  9982  1102  0020               	movlb	0	; select bank0
  9983  1103  00AB               	movwf	beginAFEcommunication@commSuccess
  9984  1104  3000               	movlw	0
  9985  1105  00AC               	movwf	beginAFEcommunication@commSuccess+1
  9986                           
  9987                           ;BQ76920.c: 42:         I2C_writeRegister(0x18, 0x04, 0x18);
  9988  1106  3018               	movlw	24
  9989  1107  00F5               	movwf	I2C_writeRegister@slaveAddress
  9990  1108  3000               	movlw	0
  9991  1109  00F6               	movwf	I2C_writeRegister@slaveAddress+1
  9992  110A  3004               	movlw	4
  9993  110B  00F7               	movwf	I2C_writeRegister@regAddress
  9994  110C  3000               	movlw	0
  9995  110D  00F8               	movwf	I2C_writeRegister@regAddress+1
  9996  110E  3018               	movlw	24
  9997  110F  00F9               	movwf	I2C_writeRegister@data
  9998  1110  3000               	movlw	0
  9999  1111  00FA               	movwf	I2C_writeRegister@data+1
 10000  1112  3188  2001  3190   	fcall	_I2C_writeRegister
 10001                           
 10002                           ;BQ76920.c: 43:         I2C_writeRegister(0x18, 0x05, 0x40);
 10003  1115  3018               	movlw	24
 10004  1116  00F5               	movwf	I2C_writeRegister@slaveAddress
 10005  1117  3000               	movlw	0
 10006  1118  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 10007  1119  3005               	movlw	5
 10008  111A  00F7               	movwf	I2C_writeRegister@regAddress
 10009  111B  3000               	movlw	0
 10010  111C  00F8               	movwf	I2C_writeRegister@regAddress+1
 10011  111D  3040               	movlw	64
 10012  111E  00F9               	movwf	I2C_writeRegister@data
 10013  111F  3000               	movlw	0
 10014  1120  00FA               	movwf	I2C_writeRegister@data+1
 10015  1121  3188  2001  3190   	fcall	_I2C_writeRegister
 10016                           
 10017                           ;BQ76920.c: 46:         adcOffset = (signed int) readRegister(0x18, 0x51);
 10018  1124  3018               	movlw	24
 10019  1125  00F5               	movwf	readRegister@slaveAddress
 10020  1126  3000               	movlw	0
 10021  1127  00F6               	movwf	readRegister@slaveAddress+1
 10022  1128  3051               	movlw	81
 10023  1129  00F7               	movwf	readRegister@regAddress
 10024  112A  3000               	movlw	0
 10025  112B  00F8               	movwf	readRegister@regAddress+1
 10026  112C  319B  23F7  3190   	fcall	_readRegister
 10027  112F  0876               	movf	?_readRegister+1,w
 10028  1130  0021               	movlb	1	; select bank1
 10029  1131  00E8               	movwf	(_adcOffset+1)^(0+128)
 10030  1132  0875               	movf	?_readRegister,w
 10031  1133  00E7               	movwf	_adcOffset^(0+128)
 10032                           
 10033                           ;BQ76920.c: 47:         adcGain = 365 + (((readRegister(0x18, 0x50) & 0x0C) << 1) |
 10034  1134  3018               	movlw	24
 10035  1135  00F5               	movwf	readRegister@slaveAddress
 10036  1136  3000               	movlw	0
 10037  1137  00F6               	movwf	readRegister@slaveAddress+1
 10038  1138  3059               	movlw	89
 10039  1139  00F7               	movwf	readRegister@regAddress
 10040  113A  3000               	movlw	0
 10041  113B  00F8               	movwf	readRegister@regAddress+1
 10042  113C  319B  23F7  3190   	fcall	_readRegister
 10043  113F  0875               	movf	?_readRegister,w
 10044  1140  0020               	movlb	0	; select bank0
 10045  1141  00A2               	movwf	??_beginAFEcommunication
 10046  1142  0876               	movf	?_readRegister+1,w
 10047  1143  00A3               	movwf	??_beginAFEcommunication+1
 10048  1144  3005               	movlw	5
 10049  1145  00A4               	movwf	??_beginAFEcommunication+2
 10050  1146                     u6265:	
 10051  1146  0D23               	rlf	??_beginAFEcommunication+1,w
 10052  1147  0CA3               	rrf	??_beginAFEcommunication+1,f
 10053  1148  0CA2               	rrf	??_beginAFEcommunication,f
 10054  1149  0BA4               	decfsz	??_beginAFEcommunication+2,f
 10055  114A  2946               	goto	u6265
 10056  114B  3007               	movlw	7
 10057  114C  0522               	andwf	??_beginAFEcommunication,w
 10058  114D  00A5               	movwf	??_beginAFEcommunication+3
 10059  114E  3000               	movlw	0
 10060  114F  0523               	andwf	??_beginAFEcommunication+1,w
 10061  1150  00A6               	movwf	??_beginAFEcommunication+4
 10062  1151  3018               	movlw	24
 10063  1152  00F5               	movwf	readRegister@slaveAddress
 10064  1153  3000               	movlw	0
 10065  1154  00F6               	movwf	readRegister@slaveAddress+1
 10066  1155  3050               	movlw	80
 10067  1156  00F7               	movwf	readRegister@regAddress
 10068  1157  3000               	movlw	0
 10069  1158  00F8               	movwf	readRegister@regAddress+1
 10070  1159  319B  23F7         	fcall	_readRegister
 10071  115B  300C               	movlw	12
 10072  115C  0575               	andwf	?_readRegister,w
 10073  115D  0020               	movlb	0	; select bank0
 10074  115E  00A7               	movwf	??_beginAFEcommunication+5
 10075  115F  3000               	movlw	0
 10076  1160  0576               	andwf	?_readRegister+1,w
 10077  1161  00A8               	movwf	??_beginAFEcommunication+6
 10078  1162  35A7               	lslf	??_beginAFEcommunication+5,f
 10079  1163  0DA8               	rlf	??_beginAFEcommunication+6,f
 10080  1164  0825               	movf	??_beginAFEcommunication+3,w
 10081  1165  0427               	iorwf	??_beginAFEcommunication+5,w
 10082  1166  00A9               	movwf	??_beginAFEcommunication+7
 10083  1167  0826               	movf	??_beginAFEcommunication+4,w
 10084  1168  0428               	iorwf	??_beginAFEcommunication+6,w
 10085  1169  00AA               	movwf	??_beginAFEcommunication+8
 10086  116A  0829               	movf	??_beginAFEcommunication+7,w
 10087  116B  3E6D               	addlw	109
 10088  116C  0021               	movlb	1	; select bank1
 10089  116D  00E9               	movwf	_adcGain^(0+128)
 10090  116E  3001               	movlw	1
 10091  116F  0020               	movlb	0	; select bank0
 10092  1170  3D2A               	addwfc	??_beginAFEcommunication+8,w
 10093  1171  0021               	movlb	1	; select bank1
 10094  1172  00EA               	movwf	(_adcGain+1)^(0+128)
 10095  1173                     l366:	
 10096                           ;BQ76920.c: 50:     }
 10097                           
 10098                           
 10099                           ;BQ76920.c: 54:     return commSuccess;
 10100  1173  0020               	movlb	0	; select bank0
 10101  1174  082C               	movf	beginAFEcommunication@commSuccess+1,w
 10102  1175  00A1               	movwf	?_beginAFEcommunication+1
 10103  1176  082B               	movf	beginAFEcommunication@commSuccess,w
 10104  1177  00A0               	movwf	?_beginAFEcommunication
 10105  1178  0008               	return
 10106  1179                     __end_of_beginAFEcommunication:	
 10107                           
 10108                           	psect	text36
 10109  1BF7                     __ptext36:	
 10110 ;; *************** function _readRegister *****************
 10111 ;; Defined at:
 10112 ;;		line 129 in file "I2C.c"
 10113 ;; Parameters:    Size  Location     Type
 10114 ;;  slaveAddress    2    5[COMMON] int 
 10115 ;;  regAddress      2    7[COMMON] int 
 10116 ;; Auto vars:     Size  Location     Type
 10117 ;;  recievedData    2    9[COMMON] int 
 10118 ;; Return value:  Size  Location     Type
 10119 ;;                  2    5[COMMON] int 
 10120 ;; Registers used:
 10121 ;;		wreg, status,2, status,0, pclath, cstack
 10122 ;; Tracked objects:
 10123 ;;		On entry : 0/0
 10124 ;;		On exit  : 0/0
 10125 ;;		Unchanged: 0/0
 10126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10127 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10128 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10130 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10131 ;;Total ram usage:        6 bytes
 10132 ;; Hardware stack levels used:    1
 10133 ;; Hardware stack levels required when called:    2
 10134 ;; This function calls:
 10135 ;;		_read_I2C_data
 10136 ;;		_send_I2C_NACK
 10137 ;;		_send_I2C_controlByte
 10138 ;;		_send_I2C_data
 10139 ;;		_send_I2C_startBit
 10140 ;;		_send_I2C_stopBit
 10141 ;; This function is called by:
 10142 ;;		_beginAFEcommunication
 10143 ;; This function uses a non-reentrant model
 10144 ;;
 10145                           
 10146                           
 10147                           ;psect for function _readRegister
 10148  1BF7                     _readRegister:	
 10149                           
 10150                           ;I2C.c: 130:     int recievedData;;I2C.c: 131:     send_I2C_startBit();
 10151                           
 10152                           ;incstack = 0
 10153                           ; Regs used in _readRegister: [wreg+status,2+status,0+pclath+cstack]
 10154  1BF7  3199  2146  319B   	fcall	_send_I2C_startBit
 10155                           
 10156                           ;I2C.c: 132:     send_I2C_controlByte(slaveAddress, 0);
 10157  1BFA  0876               	movf	readRegister@slaveAddress+1,w
 10158  1BFB  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 10159  1BFC  0875               	movf	readRegister@slaveAddress,w
 10160  1BFD  00F1               	movwf	send_I2C_controlByte@BlockAddress
 10161  1BFE  3000               	movlw	0
 10162  1BFF  00F3               	movwf	send_I2C_controlByte@RW_bit
 10163  1C00  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 10164  1C01  3199  2168  319B   	fcall	_send_I2C_controlByte
 10165                           
 10166                           ;I2C.c: 133:     send_I2C_data(regAddress);
 10167  1C04  0878               	movf	readRegister@regAddress+1,w
 10168  1C05  00F2               	movwf	send_I2C_data@databyte+1
 10169  1C06  0877               	movf	readRegister@regAddress,w
 10170  1C07  00F1               	movwf	send_I2C_data@databyte
 10171  1C08  3199  215F  319B   	fcall	_send_I2C_data
 10172                           
 10173                           ;I2C.c: 134:     send_I2C_stopBit();
 10174  1C0B  3199  214E  319B   	fcall	_send_I2C_stopBit
 10175                           
 10176                           ;I2C.c: 135:     send_I2C_startBit();
 10177  1C0E  3199  2146  319B   	fcall	_send_I2C_startBit
 10178                           
 10179                           ;I2C.c: 136:     send_I2C_controlByte(slaveAddress, 1);
 10180  1C11  0876               	movf	readRegister@slaveAddress+1,w
 10181  1C12  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 10182  1C13  0875               	movf	readRegister@slaveAddress,w
 10183  1C14  00F1               	movwf	send_I2C_controlByte@BlockAddress
 10184  1C15  3001               	movlw	1
 10185  1C16  00F3               	movwf	send_I2C_controlByte@RW_bit
 10186  1C17  3000               	movlw	0
 10187  1C18  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 10188  1C19  3199  2168  319B   	fcall	_send_I2C_controlByte
 10189                           
 10190                           ;I2C.c: 137:     recievedData = read_I2C_data();
 10191  1C1C  3199  2199  319B   	fcall	_read_I2C_data
 10192  1C1F  0872               	movf	?_read_I2C_data+1,w
 10193  1C20  00FA               	movwf	readRegister@recievedData+1
 10194  1C21  0871               	movf	?_read_I2C_data,w
 10195  1C22  00F9               	movwf	readRegister@recievedData
 10196                           
 10197                           ;I2C.c: 138:     send_I2C_NACK();
 10198  1C23  3187  27F7  319B   	fcall	_send_I2C_NACK
 10199                           
 10200                           ;I2C.c: 139:     send_I2C_stopBit();
 10201  1C26  3199  214E         	fcall	_send_I2C_stopBit
 10202                           
 10203                           ;I2C.c: 140:     return recievedData;
 10204  1C28  087A               	movf	readRegister@recievedData+1,w
 10205  1C29  00F6               	movwf	?_readRegister+1
 10206  1C2A  0879               	movf	readRegister@recievedData,w
 10207  1C2B  00F5               	movwf	?_readRegister
 10208  1C2C  0008               	return
 10209  1C2D                     __end_of_readRegister:	
 10210                           
 10211                           	psect	text37
 10212  07F7                     __ptext37:	
 10213 ;; *************** function _send_I2C_NACK *****************
 10214 ;; Defined at:
 10215 ;;		line 83 in file "I2C.c"
 10216 ;; Parameters:    Size  Location     Type
 10217 ;;		None
 10218 ;; Auto vars:     Size  Location     Type
 10219 ;;		None
 10220 ;; Return value:  Size  Location     Type
 10221 ;;                  1    wreg      void 
 10222 ;; Registers used:
 10223 ;;		None
 10224 ;; Tracked objects:
 10225 ;;		On entry : 0/0
 10226 ;;		On exit  : 0/0
 10227 ;;		Unchanged: 0/0
 10228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10233 ;;Total ram usage:        0 bytes
 10234 ;; Hardware stack levels used:    1
 10235 ;; Hardware stack levels required when called:    1
 10236 ;; This function calls:
 10237 ;;		Nothing
 10238 ;; This function is called by:
 10239 ;;		_readRegister
 10240 ;; This function uses a non-reentrant model
 10241 ;;
 10242                           
 10243                           
 10244                           ;psect for function _send_I2C_NACK
 10245  07F7                     _send_I2C_NACK:	
 10246                           
 10247                           ;I2C.c: 84:     PIR1bits.SSP1IF = 0;
 10248                           
 10249                           ;incstack = 0
 10250                           ; Regs used in _send_I2C_NACK: []
 10251  07F7  0020               	movlb	0	; select bank0
 10252  07F8  1191               	bcf	17,3	;volatile
 10253                           
 10254                           ;I2C.c: 85:     SSPCON2bits.ACKDT = 1;
 10255  07F9  0024               	movlb	4	; select bank4
 10256  07FA  1696               	bsf	22,5	;volatile
 10257                           
 10258                           ;I2C.c: 86:     SSPCON2bits.ACKEN = 1;
 10259  07FB  1616               	bsf	22,4	;volatile
 10260  07FC                     l282:	
 10261                           ;I2C.c: 87:     while (!PIR1bits.SSP1IF);
 10262                           
 10263  07FC  0020               	movlb	0	; select bank0
 10264  07FD  1991               	btfsc	17,3	;volatile
 10265  07FE  0008               	return
 10266  07FF  2FFC               	goto	l282
 10267  0800                     __end_of_send_I2C_NACK:	
 10268                           
 10269                           	psect	text38
 10270  1999                     __ptext38:	
 10271 ;; *************** function _read_I2C_data *****************
 10272 ;; Defined at:
 10273 ;;		line 42 in file "I2C.c"
 10274 ;; Parameters:    Size  Location     Type
 10275 ;;		None
 10276 ;; Auto vars:     Size  Location     Type
 10277 ;;		None
 10278 ;; Return value:  Size  Location     Type
 10279 ;;                  2    1[COMMON] unsigned int 
 10280 ;; Registers used:
 10281 ;;		wreg
 10282 ;; Tracked objects:
 10283 ;;		On entry : 0/0
 10284 ;;		On exit  : 0/0
 10285 ;;		Unchanged: 0/0
 10286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10287 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10289 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10290 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10291 ;;Total ram usage:        4 bytes
 10292 ;; Hardware stack levels used:    1
 10293 ;; Hardware stack levels required when called:    1
 10294 ;; This function calls:
 10295 ;;		Nothing
 10296 ;; This function is called by:
 10297 ;;		_readRegister
 10298 ;; This function uses a non-reentrant model
 10299 ;;
 10300                           
 10301                           
 10302                           ;psect for function _read_I2C_data
 10303  1999                     _read_I2C_data:	
 10304                           
 10305                           ;I2C.c: 43:     PIR1bits.SSP1IF = 0;
 10306                           
 10307                           ;incstack = 0
 10308                           ; Regs used in _read_I2C_data: [wreg]
 10309  1999  0020               	movlb	0	; select bank0
 10310  199A  1191               	bcf	17,3	;volatile
 10311                           
 10312                           ;I2C.c: 44:     SSPCON2bits.RCEN = 1;
 10313  199B  0024               	movlb	4	; select bank4
 10314  199C  1596               	bsf	22,3	;volatile
 10315  199D                     l252:	
 10316                           ;I2C.c: 45:     while (!PIR1bits.SSP1IF);
 10317                           
 10318  199D  0020               	movlb	0	; select bank0
 10319  199E  1D91               	btfss	17,3	;volatile
 10320  199F  299D               	goto	l252
 10321                           
 10322                           ;I2C.c: 46:     return (SSPBUF);
 10323  19A0  0024               	movlb	4	; select bank4
 10324  19A1  0811               	movf	17,w	;volatile
 10325  19A2  00F3               	movwf	??_read_I2C_data
 10326  19A3  01F4               	clrf	??_read_I2C_data+1
 10327  19A4  0873               	movf	??_read_I2C_data,w
 10328  19A5  00F1               	movwf	?_read_I2C_data
 10329  19A6  0874               	movf	??_read_I2C_data+1,w
 10330  19A7  00F2               	movwf	?_read_I2C_data+1
 10331  19A8  0008               	return
 10332  19A9                     __end_of_read_I2C_data:	
 10333                           
 10334                           	psect	text39
 10335  0801                     __ptext39:	
 10336 ;; *************** function _I2C_writeRegister *****************
 10337 ;; Defined at:
 10338 ;;		line 118 in file "I2C.c"
 10339 ;; Parameters:    Size  Location     Type
 10340 ;;  slaveAddress    2    5[COMMON] int 
 10341 ;;  regAddress      2    7[COMMON] int 
 10342 ;;  data            2    9[COMMON] int 
 10343 ;; Auto vars:     Size  Location     Type
 10344 ;;		None
 10345 ;; Return value:  Size  Location     Type
 10346 ;;                  1    wreg      void 
 10347 ;; Registers used:
 10348 ;;		wreg, status,2, status,0, pclath, cstack
 10349 ;; Tracked objects:
 10350 ;;		On entry : 0/0
 10351 ;;		On exit  : 0/0
 10352 ;;		Unchanged: 0/0
 10353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10354 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10357 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10358 ;;Total ram usage:        6 bytes
 10359 ;; Hardware stack levels used:    1
 10360 ;; Hardware stack levels required when called:    2
 10361 ;; This function calls:
 10362 ;;		_send_I2C_controlByte
 10363 ;;		_send_I2C_data
 10364 ;;		_send_I2C_startBit
 10365 ;;		_send_I2C_stopBit
 10366 ;; This function is called by:
 10367 ;;		_beginAFEcommunication
 10368 ;; This function uses a non-reentrant model
 10369 ;;
 10370                           
 10371                           
 10372                           ;psect for function _I2C_writeRegister
 10373  0801                     _I2C_writeRegister:	
 10374                           
 10375                           ;I2C.c: 119:     send_I2C_startBit();
 10376                           
 10377                           ;incstack = 0
 10378                           ; Regs used in _I2C_writeRegister: [wreg+status,2+status,0+pclath+cstack]
 10379  0801  3199  2146  3188   	fcall	_send_I2C_startBit
 10380                           
 10381                           ;I2C.c: 120:     send_I2C_controlByte(slaveAddress, 0);
 10382  0804  0876               	movf	I2C_writeRegister@slaveAddress+1,w
 10383  0805  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 10384  0806  0875               	movf	I2C_writeRegister@slaveAddress,w
 10385  0807  00F1               	movwf	send_I2C_controlByte@BlockAddress
 10386  0808  3000               	movlw	0
 10387  0809  00F3               	movwf	send_I2C_controlByte@RW_bit
 10388  080A  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 10389  080B  3199  2168  3188   	fcall	_send_I2C_controlByte
 10390                           
 10391                           ;I2C.c: 121:     send_I2C_data(regAddress);
 10392  080E  0878               	movf	I2C_writeRegister@regAddress+1,w
 10393  080F  00F2               	movwf	send_I2C_data@databyte+1
 10394  0810  0877               	movf	I2C_writeRegister@regAddress,w
 10395  0811  00F1               	movwf	send_I2C_data@databyte
 10396  0812  3199  215F  3188   	fcall	_send_I2C_data
 10397                           
 10398                           ;I2C.c: 122:     send_I2C_data(data);
 10399  0815  087A               	movf	I2C_writeRegister@data+1,w
 10400  0816  00F2               	movwf	send_I2C_data@databyte+1
 10401  0817  0879               	movf	I2C_writeRegister@data,w
 10402  0818  00F1               	movwf	send_I2C_data@databyte
 10403  0819  3199  215F  3188   	fcall	_send_I2C_data
 10404                           
 10405                           ;I2C.c: 123:     send_I2C_stopBit();
 10406  081C  3199  214E         	fcall	_send_I2C_stopBit
 10407  081E  0008               	return
 10408  081F                     __end_of_I2C_writeRegister:	
 10409                           
 10410                           	psect	text40
 10411  194E                     __ptext40:	
 10412 ;; *************** function _send_I2C_stopBit *****************
 10413 ;; Defined at:
 10414 ;;		line 70 in file "I2C.c"
 10415 ;; Parameters:    Size  Location     Type
 10416 ;;		None
 10417 ;; Auto vars:     Size  Location     Type
 10418 ;;		None
 10419 ;; Return value:  Size  Location     Type
 10420 ;;                  1    wreg      void 
 10421 ;; Registers used:
 10422 ;;		None
 10423 ;; Tracked objects:
 10424 ;;		On entry : 0/0
 10425 ;;		On exit  : 0/0
 10426 ;;		Unchanged: 0/0
 10427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10432 ;;Total ram usage:        0 bytes
 10433 ;; Hardware stack levels used:    1
 10434 ;; Hardware stack levels required when called:    1
 10435 ;; This function calls:
 10436 ;;		Nothing
 10437 ;; This function is called by:
 10438 ;;		_I2C_writeRegister
 10439 ;;		_readRegister
 10440 ;;		_retrieve_data_ATmega328
 10441 ;; This function uses a non-reentrant model
 10442 ;;
 10443                           
 10444                           
 10445                           ;psect for function _send_I2C_stopBit
 10446  194E                     _send_I2C_stopBit:	
 10447                           
 10448                           ;I2C.c: 71:     PIR1bits.SSP1IF = 0;
 10449                           
 10450                           ;incstack = 0
 10451                           ; Regs used in _send_I2C_stopBit: []
 10452  194E  0020               	movlb	0	; select bank0
 10453  194F  1191               	bcf	17,3	;volatile
 10454                           
 10455                           ;I2C.c: 72:     SSPCON2bits.PEN = 1;
 10456  1950  0024               	movlb	4	; select bank4
 10457  1951  1516               	bsf	22,2	;volatile
 10458  1952                     l270:	
 10459                           ;I2C.c: 73:     while (!PIR1bits.SSP1IF);
 10460                           
 10461  1952  0020               	movlb	0	; select bank0
 10462  1953  1991               	btfsc	17,3	;volatile
 10463  1954  0008               	return
 10464  1955  2952               	goto	l270
 10465  1956                     __end_of_send_I2C_stopBit:	
 10466                           
 10467                           	psect	text41
 10468  1946                     __ptext41:	
 10469 ;; *************** function _send_I2C_startBit *****************
 10470 ;; Defined at:
 10471 ;;		line 64 in file "I2C.c"
 10472 ;; Parameters:    Size  Location     Type
 10473 ;;		None
 10474 ;; Auto vars:     Size  Location     Type
 10475 ;;		None
 10476 ;; Return value:  Size  Location     Type
 10477 ;;                  1    wreg      void 
 10478 ;; Registers used:
 10479 ;;		None
 10480 ;; Tracked objects:
 10481 ;;		On entry : 0/0
 10482 ;;		On exit  : 0/0
 10483 ;;		Unchanged: 0/0
 10484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10489 ;;Total ram usage:        0 bytes
 10490 ;; Hardware stack levels used:    1
 10491 ;; Hardware stack levels required when called:    1
 10492 ;; This function calls:
 10493 ;;		Nothing
 10494 ;; This function is called by:
 10495 ;;		_I2C_writeRegister
 10496 ;;		_readRegister
 10497 ;;		_retrieve_data_ATmega328
 10498 ;; This function uses a non-reentrant model
 10499 ;;
 10500                           
 10501                           
 10502                           ;psect for function _send_I2C_startBit
 10503  1946                     _send_I2C_startBit:	
 10504                           
 10505                           ;I2C.c: 65:     PIR1bits.SSP1IF = 0;
 10506                           
 10507                           ;incstack = 0
 10508                           ; Regs used in _send_I2C_startBit: []
 10509  1946  0020               	movlb	0	; select bank0
 10510  1947  1191               	bcf	17,3	;volatile
 10511                           
 10512                           ;I2C.c: 66:     SSPCON2bits.SEN = 1;
 10513  1948  0024               	movlb	4	; select bank4
 10514  1949  1416               	bsf	22,0	;volatile
 10515  194A                     l264:	
 10516                           ;I2C.c: 67:     while (!PIR1bits.SSP1IF);
 10517                           
 10518  194A  0020               	movlb	0	; select bank0
 10519  194B  1991               	btfsc	17,3	;volatile
 10520  194C  0008               	return
 10521  194D  294A               	goto	l264
 10522  194E                     __end_of_send_I2C_startBit:	
 10523                           
 10524                           	psect	text42
 10525  195F                     __ptext42:	
 10526 ;; *************** function _send_I2C_data *****************
 10527 ;; Defined at:
 10528 ;;		line 33 in file "I2C.c"
 10529 ;; Parameters:    Size  Location     Type
 10530 ;;  databyte        2    1[COMMON] unsigned int 
 10531 ;; Auto vars:     Size  Location     Type
 10532 ;;		None
 10533 ;; Return value:  Size  Location     Type
 10534 ;;                  1    wreg      void 
 10535 ;; Registers used:
 10536 ;;		wreg
 10537 ;; Tracked objects:
 10538 ;;		On entry : 0/0
 10539 ;;		On exit  : 0/0
 10540 ;;		Unchanged: 0/0
 10541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10542 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10545 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10546 ;;Total ram usage:        2 bytes
 10547 ;; Hardware stack levels used:    1
 10548 ;; Hardware stack levels required when called:    1
 10549 ;; This function calls:
 10550 ;;		Nothing
 10551 ;; This function is called by:
 10552 ;;		_I2C_writeRegister
 10553 ;;		_readRegister
 10554 ;; This function uses a non-reentrant model
 10555 ;;
 10556                           
 10557                           
 10558                           ;psect for function _send_I2C_data
 10559  195F                     _send_I2C_data:	
 10560                           
 10561                           ;I2C.c: 34:     PIR1bits.SSP1IF = 0;
 10562                           
 10563                           ;incstack = 0
 10564                           ; Regs used in _send_I2C_data: [wreg]
 10565  195F  0020               	movlb	0	; select bank0
 10566  1960  1191               	bcf	17,3	;volatile
 10567                           
 10568                           ;I2C.c: 35:     SSPBUF = databyte;
 10569  1961  0871               	movf	send_I2C_data@databyte,w
 10570  1962  0024               	movlb	4	; select bank4
 10571  1963  0091               	movwf	17	;volatile
 10572  1964                     l246:	
 10573                           ;I2C.c: 36:     while (!PIR1bits.SSP1IF);
 10574                           
 10575  1964  0020               	movlb	0	; select bank0
 10576  1965  1991               	btfsc	17,3	;volatile
 10577  1966  0008               	return
 10578  1967  2964               	goto	l246
 10579  1968                     __end_of_send_I2C_data:	
 10580                           
 10581                           	psect	text43
 10582  1968                     __ptext43:	
 10583 ;; *************** function _send_I2C_controlByte *****************
 10584 ;; Defined at:
 10585 ;;		line 52 in file "I2C.c"
 10586 ;; Parameters:    Size  Location     Type
 10587 ;;  BlockAddress    2    1[COMMON] unsigned int 
 10588 ;;  RW_bit          2    3[COMMON] unsigned int 
 10589 ;; Auto vars:     Size  Location     Type
 10590 ;;		None
 10591 ;; Return value:  Size  Location     Type
 10592 ;;                  1    wreg      void 
 10593 ;; Registers used:
 10594 ;;		wreg, status,2, status,0
 10595 ;; Tracked objects:
 10596 ;;		On entry : 0/0
 10597 ;;		On exit  : 0/0
 10598 ;;		Unchanged: 0/0
 10599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10600 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10603 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10604 ;;Total ram usage:        4 bytes
 10605 ;; Hardware stack levels used:    1
 10606 ;; Hardware stack levels required when called:    1
 10607 ;; This function calls:
 10608 ;;		Nothing
 10609 ;; This function is called by:
 10610 ;;		_I2C_writeRegister
 10611 ;;		_readRegister
 10612 ;;		_retrieve_data_ATmega328
 10613 ;; This function uses a non-reentrant model
 10614 ;;
 10615                           
 10616                           
 10617                           ;psect for function _send_I2C_controlByte
 10618  1968                     _send_I2C_controlByte:	
 10619                           
 10620                           ;I2C.c: 53:     PIR1bits.SSP1IF = 0;
 10621                           
 10622                           ;incstack = 0
 10623                           ; Regs used in _send_I2C_controlByte: [wreg+status,2+status,0]
 10624  1968  0020               	movlb	0	; select bank0
 10625  1969  1191               	bcf	17,3	;volatile
 10626                           
 10627                           ;I2C.c: 59:     SSPBUF = (((0b0000 << 4) | (BlockAddress << 1)) + RW_bit);
 10628  196A  3571               	lslf	send_I2C_controlByte@BlockAddress,w
 10629  196B  0773               	addwf	send_I2C_controlByte@RW_bit,w
 10630  196C  0024               	movlb	4	; select bank4
 10631  196D  0091               	movwf	17	;volatile
 10632  196E                     l258:	
 10633                           ;I2C.c: 61:     while (!PIR1bits.SSP1IF);
 10634                           
 10635  196E  0020               	movlb	0	; select bank0
 10636  196F  1991               	btfsc	17,3	;volatile
 10637  1970  0008               	return
 10638  1971  296E               	goto	l258
 10639  1972                     __end_of_send_I2C_controlByte:	
 10640                           
 10641                           	psect	text44
 10642  1AA7                     __ptext44:	
 10643 ;; *************** function _RGB_AWAIT_AFE_CONN *****************
 10644 ;; Defined at:
 10645 ;;		line 43 in file "RGB.c"
 10646 ;; Parameters:    Size  Location     Type
 10647 ;;		None
 10648 ;; Auto vars:     Size  Location     Type
 10649 ;;		None
 10650 ;; Return value:  Size  Location     Type
 10651 ;;                  1    wreg      void 
 10652 ;; Registers used:
 10653 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10654 ;; Tracked objects:
 10655 ;;		On entry : 0/0
 10656 ;;		On exit  : 0/0
 10657 ;;		Unchanged: 0/0
 10658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10661 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10662 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10663 ;;Total ram usage:        1 bytes
 10664 ;; Hardware stack levels used:    1
 10665 ;; Hardware stack levels required when called:    2
 10666 ;; This function calls:
 10667 ;;		_RGB_color
 10668 ;; This function is called by:
 10669 ;;		_statemachine
 10670 ;; This function uses a non-reentrant model
 10671 ;;
 10672                           
 10673                           
 10674                           ;psect for function _RGB_AWAIT_AFE_CONN
 10675  1AA7                     _RGB_AWAIT_AFE_CONN:	
 10676                           
 10677                           ;RGB.c: 45:     if (toggleColor) {
 10678                           
 10679                           ;incstack = 0
 10680                           ; Regs used in _RGB_AWAIT_AFE_CONN: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10681  1AA7  087C               	movf	_toggleColor,w
 10682  1AA8  1903               	btfsc	3,2
 10683  1AA9  2AB9               	goto	l3992
 10684                           
 10685                           ;RGB.c: 46:         toggleColor = !toggleColor;
 10686  1AAA  087C               	movf	_toggleColor,w
 10687  1AAB  1D03               	btfss	3,2
 10688  1AAC  2AAF               	goto	u4520
 10689  1AAD  3001               	movlw	1
 10690  1AAE  2AB0               	goto	u4530
 10691  1AAF                     u4520:	
 10692  1AAF  3000               	movlw	0
 10693  1AB0                     u4530:	
 10694  1AB0  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 10695  1AB1  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 10696  1AB2  00FC               	movwf	_toggleColor
 10697                           
 10698                           ;RGB.c: 47:         RGB_color(0);
 10699  1AB3  3000               	movlw	0
 10700  1AB4  00F1               	movwf	RGB_color@color
 10701  1AB5  00F2               	movwf	RGB_color@color+1
 10702  1AB6  319A  2286         	fcall	_RGB_color
 10703                           
 10704                           ;RGB.c: 48:     } else {
 10705  1AB8  0008               	return
 10706  1AB9                     l3992:	
 10707                           
 10708                           ;RGB.c: 49:         toggleColor = !toggleColor;
 10709  1AB9  087C               	movf	_toggleColor,w
 10710  1ABA  1D03               	btfss	3,2
 10711  1ABB  2ABE               	goto	u4540
 10712  1ABC  3001               	movlw	1
 10713  1ABD  2ABF               	goto	u4550
 10714  1ABE                     u4540:	
 10715  1ABE  3000               	movlw	0
 10716  1ABF                     u4550:	
 10717  1ABF  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 10718  1AC0  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 10719  1AC1  00FC               	movwf	_toggleColor
 10720                           
 10721                           ;RGB.c: 50:         RGB_color(1);
 10722  1AC2  3001               	movlw	1
 10723  1AC3  00F1               	movwf	RGB_color@color
 10724  1AC4  3000               	movlw	0
 10725  1AC5  00F2               	movwf	RGB_color@color+1
 10726  1AC6  319A  2286         	fcall	_RGB_color
 10727  1AC8  0008               	return
 10728  1AC9                     __end_of_RGB_AWAIT_AFE_CONN:	
 10729                           
 10730                           	psect	text45
 10731  1A86                     __ptext45:	
 10732 ;; *************** function _RGB_color *****************
 10733 ;; Defined at:
 10734 ;;		line 17 in file "RGB.c"
 10735 ;; Parameters:    Size  Location     Type
 10736 ;;  color           2    1[COMMON] int 
 10737 ;; Auto vars:     Size  Location     Type
 10738 ;;		None
 10739 ;; Return value:  Size  Location     Type
 10740 ;;                  1    wreg      void 
 10741 ;; Registers used:
 10742 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10743 ;; Tracked objects:
 10744 ;;		On entry : 0/0
 10745 ;;		On exit  : 0/0
 10746 ;;		Unchanged: 0/0
 10747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10748 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10751 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10752 ;;Total ram usage:        2 bytes
 10753 ;; Hardware stack levels used:    1
 10754 ;; Hardware stack levels required when called:    1
 10755 ;; This function calls:
 10756 ;;		Nothing
 10757 ;; This function is called by:
 10758 ;;		_statemachine
 10759 ;;		_RGB_AWAIT_AFE_CONN
 10760 ;; This function uses a non-reentrant model
 10761 ;;
 10762                           
 10763                           
 10764                           ;psect for function _RGB_color
 10765  1A86                     _RGB_color:	
 10766                           
 10767                           ;RGB.c: 19:     switch (color) {
 10768                           
 10769                           ;incstack = 0
 10770                           ; Regs used in _RGB_color: [wreg-fsr0h+status,2+status,0]
 10771  1A86  2A96               	goto	l3884
 10772  1A87                     l307:	
 10773                           ;RGB.c: 20:         case 0:
 10774                           
 10775                           
 10776                           ;RGB.c: 21:             LATAbits.LATA4 = 0;
 10777  1A87  0022               	movlb	2	; select bank2
 10778  1A88  120C               	bcf	12,4	;volatile
 10779                           
 10780                           ;RGB.c: 22:             LATAbits.LATA5 = 1;
 10781  1A89  168C               	bsf	12,5	;volatile
 10782                           
 10783                           ;RGB.c: 23:             LATEbits.LATE0 = 1;
 10784  1A8A  1410               	bsf	16,0	;volatile
 10785                           
 10786                           ;RGB.c: 24:             break;
 10787  1A8B  0008               	return
 10788  1A8C                     l309:	
 10789                           ;RGB.c: 25:         case 1:
 10790                           
 10791                           
 10792                           ;RGB.c: 26:             LATAbits.LATA4 = 1;
 10793  1A8C  0022               	movlb	2	; select bank2
 10794  1A8D  160C               	bsf	12,4	;volatile
 10795                           
 10796                           ;RGB.c: 27:             LATAbits.LATA5 = 0;
 10797  1A8E  128C               	bcf	12,5	;volatile
 10798                           
 10799                           ;RGB.c: 28:             LATEbits.LATE0 = 1;
 10800  1A8F  1410               	bsf	16,0	;volatile
 10801                           
 10802                           ;RGB.c: 29:             break;
 10803  1A90  0008               	return
 10804  1A91                     l310:	
 10805                           ;RGB.c: 30:         case 2:
 10806                           
 10807                           
 10808                           ;RGB.c: 31:             LATAbits.LATA4 = 1;
 10809  1A91  0022               	movlb	2	; select bank2
 10810  1A92  160C               	bsf	12,4	;volatile
 10811                           
 10812                           ;RGB.c: 32:             LATAbits.LATA5 = 1;
 10813  1A93  168C               	bsf	12,5	;volatile
 10814                           
 10815                           ;RGB.c: 33:             LATEbits.LATE0 = 0;
 10816  1A94  1010               	bcf	16,0	;volatile
 10817                           
 10818                           ;RGB.c: 34:             break;
 10819  1A95  0008               	return
 10820  1A96                     l3884:	
 10821                           
 10822                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10823                           ; Switch size 1, requested type "simple"
 10824                           ; Number of cases is 1, Range of values is 0 to 0
 10825                           ; switch strategies available:
 10826                           ; Name         Instructions Cycles
 10827                           ; simple_byte            4     3 (average)
 10828                           ; direct_byte            8     6 (fixed)
 10829                           ; jumptable            260     6 (fixed)
 10830                           ;	Chosen strategy is simple_byte
 10831  1A96  0872               	movf	RGB_color@color+1,w
 10832  1A97  3A00               	xorlw	0	; case 0
 10833  1A98  1903               	skipnz
 10834  1A99  2A9B               	goto	l5410
 10835  1A9A  2AA6               	goto	l311
 10836  1A9B                     l5410:	
 10837                           
 10838                           ; Switch size 1, requested type "simple"
 10839                           ; Number of cases is 3, Range of values is 0 to 2
 10840                           ; switch strategies available:
 10841                           ; Name         Instructions Cycles
 10842                           ; simple_byte           10     6 (average)
 10843                           ; direct_byte           12     6 (fixed)
 10844                           ; jumptable            260     6 (fixed)
 10845                           ;	Chosen strategy is simple_byte
 10846  1A9B  0871               	movf	RGB_color@color,w
 10847  1A9C  3A00               	xorlw	0	; case 0
 10848  1A9D  1903               	skipnz
 10849  1A9E  2A87               	goto	l307
 10850  1A9F  3A01               	xorlw	1	; case 1
 10851  1AA0  1903               	skipnz
 10852  1AA1  2A8C               	goto	l309
 10853  1AA2  3A03               	xorlw	3	; case 2
 10854  1AA3  1903               	skipnz
 10855  1AA4  2A91               	goto	l310
 10856  1AA5  2AA6               	goto	l311
 10857  1AA6                     l311:	
 10858  1AA6  0008               	return
 10859  1AA7                     __end_of_RGB_color:	
 10860                           
 10861                           	psect	text46
 10862  1A34                     __ptext46:	
 10863 ;; *************** function _EUSART_Write_Text *****************
 10864 ;; Defined at:
 10865 ;;		line 75 in file "EUSART.c"
 10866 ;; Parameters:    Size  Location     Type
 10867 ;;  text            2    2[COMMON] PTR unsigned char 
 10868 ;;		 -> STR_7(45), STR_6(42), STR_4(53), messageBuffer(127), 
 10869 ;;		 -> STR_2(46), STR_1(40), 
 10870 ;; Auto vars:     Size  Location     Type
 10871 ;;  i               2    5[COMMON] int 
 10872 ;; Return value:  Size  Location     Type
 10873 ;;                  1    wreg      void 
 10874 ;; Registers used:
 10875 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10876 ;; Tracked objects:
 10877 ;;		On entry : 0/0
 10878 ;;		On exit  : 0/0
 10879 ;;		Unchanged: 0/0
 10880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10881 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10882 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10883 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10884 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10885 ;;Total ram usage:        5 bytes
 10886 ;; Hardware stack levels used:    1
 10887 ;; Hardware stack levels required when called:    2
 10888 ;; This function calls:
 10889 ;;		_EUSART_Write
 10890 ;; This function is called by:
 10891 ;;		_statemachine
 10892 ;; This function uses a non-reentrant model
 10893 ;;
 10894                           
 10895                           
 10896                           ;psect for function _EUSART_Write_Text
 10897  1A34                     _EUSART_Write_Text:	
 10898                           
 10899                           ;EUSART.c: 75: void EUSART_Write_Text(char *text);EUSART.c: 76: {;EUSART.c: 77:   int i;
      +                          ;EUSART.c: 78:   for(i=0;text[i]!='\0';i++)
 10900                           
 10901                           ;incstack = 0
 10902                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10903  1A34  01F5               	clrf	EUSART_Write_Text@i
 10904  1A35  01F6               	clrf	EUSART_Write_Text@i+1
 10905  1A36                     l4028:	
 10906  1A36  0872               	movf	EUSART_Write_Text@text,w
 10907  1A37  0775               	addwf	EUSART_Write_Text@i,w
 10908  1A38  0084               	movwf	4
 10909  1A39  0873               	movf	EUSART_Write_Text@text+1,w
 10910  1A3A  3D76               	addwfc	EUSART_Write_Text@i+1,w
 10911  1A3B  0085               	movwf	5
 10912  1A3C  0012               	moviw fsr0++
 10913  1A3D  1903               	btfsc	3,2
 10914  1A3E  0008               	return
 10915                           
 10916                           ;EUSART.c: 79:    EUSART_Write(text[i]);
 10917  1A3F  0872               	movf	EUSART_Write_Text@text,w
 10918  1A40  0775               	addwf	EUSART_Write_Text@i,w
 10919  1A41  0084               	movwf	4
 10920  1A42  0873               	movf	EUSART_Write_Text@text+1,w
 10921  1A43  3D76               	addwfc	EUSART_Write_Text@i+1,w
 10922  1A44  0085               	movwf	5
 10923  1A45  0800               	movf	0,w	;code access
 10924  1A46  3199  213E  319A   	fcall	_EUSART_Write
 10925  1A49  3001               	movlw	1
 10926  1A4A  07F5               	addwf	EUSART_Write_Text@i,f
 10927  1A4B  3000               	movlw	0
 10928  1A4C  3DF6               	addwfc	EUSART_Write_Text@i+1,f
 10929  1A4D  2A36               	goto	l4028
 10930  1A4E                     __end_of_EUSART_Write_Text:	
 10931                           
 10932                           	psect	text47
 10933  193E                     __ptext47:	
 10934 ;; *************** function _EUSART_Write *****************
 10935 ;; Defined at:
 10936 ;;		line 56 in file "EUSART.c"
 10937 ;; Parameters:    Size  Location     Type
 10938 ;;  txData          1    wreg     unsigned char 
 10939 ;; Auto vars:     Size  Location     Type
 10940 ;;  txData          1    1[COMMON] unsigned char 
 10941 ;; Return value:  Size  Location     Type
 10942 ;;                  1    wreg      void 
 10943 ;; Registers used:
 10944 ;;		wreg
 10945 ;; Tracked objects:
 10946 ;;		On entry : 0/0
 10947 ;;		On exit  : 0/0
 10948 ;;		Unchanged: 0/0
 10949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10951 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10953 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10954 ;;Total ram usage:        1 bytes
 10955 ;; Hardware stack levels used:    1
 10956 ;; Hardware stack levels required when called:    1
 10957 ;; This function calls:
 10958 ;;		Nothing
 10959 ;; This function is called by:
 10960 ;;		_EUSART_Write_Text
 10961 ;; This function uses a non-reentrant model
 10962 ;;
 10963                           
 10964                           
 10965                           ;psect for function _EUSART_Write
 10966  193E                     _EUSART_Write:	
 10967                           
 10968                           ;incstack = 0
 10969                           ; Regs used in _EUSART_Write: [wreg]
 10970                           ;EUSART_Write@txData stored from wreg
 10971  193E  00F1               	movwf	EUSART_Write@txData
 10972  193F                     l211:	
 10973                           ;EUSART.c: 59:     {;EUSART.c: 60:     }
 10974                           
 10975                           
 10976                           ;EUSART.c: 58:     while(0 == PIR1bits.TXIF)
 10977  193F  0020               	movlb	0	; select bank0
 10978  1940  1E11               	btfss	17,4	;volatile
 10979  1941  293F               	goto	l211
 10980                           
 10981                           ;EUSART.c: 62:     TX1REG = txData;
 10982  1942  0871               	movf	EUSART_Write@txData,w
 10983  1943  0023               	movlb	3	; select bank3
 10984  1944  009A               	movwf	26	;volatile
 10985  1945  0008               	return
 10986  1946                     __end_of_EUSART_Write:	
 10987                           
 10988                           	psect	text48
 10989  1CA9                     __ptext48:	
 10990 ;; *************** function _AFE_getSetShortCircuitCurrent *****************
 10991 ;; Defined at:
 10992 ;;		line 109 in file "BQ76920.c"
 10993 ;; Parameters:    Size  Location     Type
 10994 ;;		None
 10995 ;; Auto vars:     Size  Location     Type
 10996 ;;		None
 10997 ;; Return value:  Size  Location     Type
 10998 ;;                  4   18[BANK0 ] long 
 10999 ;; Registers used:
 11000 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11001 ;; Tracked objects:
 11002 ;;		On entry : 0/0
 11003 ;;		On exit  : 0/0
 11004 ;;		Unchanged: 0/0
 11005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11006 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11008 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11009 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11010 ;;Total ram usage:       12 bytes
 11011 ;; Hardware stack levels used:    1
 11012 ;; Hardware stack levels required when called:    2
 11013 ;; This function calls:
 11014 ;;		___aldiv
 11015 ;;		___lmul
 11016 ;; This function is called by:
 11017 ;;		_statemachine
 11018 ;; This function uses a non-reentrant model
 11019 ;;
 11020                           
 11021                           
 11022                           ;psect for function _AFE_getSetShortCircuitCurrent
 11023  1CA9                     _AFE_getSetShortCircuitCurrent:	
 11024                           
 11025                           ;BQ76920.c: 110:     return (long) SCD_threshold_setting[protect1.bits.SCD_THRESH] * 100
      +                          0 / shuntResistorValue_mOhm;
 11026                           
 11027                           ;incstack = 0
 11028                           ; Regs used in _AFE_getSetShortCircuitCurrent: [wreg-fsr0h+status,2+status,0+pclath+csta
      +                          ck]
 11029  1CA9  0021               	movlb	1	; select bank1
 11030  1CAA  086F               	movf	_shuntResistorValue_mOhm^(0+128),w
 11031  1CAB  0020               	movlb	0	; select bank0
 11032  1CAC  00B6               	movwf	??_AFE_getSetShortCircuitCurrent
 11033  1CAD  01B7               	clrf	??_AFE_getSetShortCircuitCurrent+1
 11034  1CAE  01B8               	clrf	??_AFE_getSetShortCircuitCurrent+2
 11035  1CAF  01B9               	clrf	??_AFE_getSetShortCircuitCurrent+3
 11036  1CB0  0839               	movf	??_AFE_getSetShortCircuitCurrent+3,w
 11037  1CB1  00A7               	movwf	___aldiv@divisor+3
 11038  1CB2  0838               	movf	??_AFE_getSetShortCircuitCurrent+2,w
 11039  1CB3  00A6               	movwf	___aldiv@divisor+2
 11040  1CB4  0837               	movf	??_AFE_getSetShortCircuitCurrent+1,w
 11041  1CB5  00A5               	movwf	___aldiv@divisor+1
 11042  1CB6  0836               	movf	??_AFE_getSetShortCircuitCurrent,w
 11043  1CB7  00A4               	movwf	___aldiv@divisor
 11044  1CB8  0021               	movlb	1	; select bank1
 11045  1CB9  086B               	movf	_protect1^(0+128),w
 11046  1CBA  3907               	andlw	7
 11047  1CBB  0020               	movlb	0	; select bank0
 11048  1CBC  00BA               	movwf	??_AFE_getSetShortCircuitCurrent+4
 11049  1CBD  01BB               	clrf	??_AFE_getSetShortCircuitCurrent+5
 11050  1CBE  35BA               	lslf	??_AFE_getSetShortCircuitCurrent+4,f
 11051  1CBF  0DBB               	rlf	??_AFE_getSetShortCircuitCurrent+5,f
 11052  1CC0  306A               	movlw	low (_SCD_threshold_setting| (0+32768))
 11053  1CC1  073A               	addwf	??_AFE_getSetShortCircuitCurrent+4,w
 11054  1CC2  0084               	movwf	4
 11055  1CC3  30A1               	movlw	high (_SCD_threshold_setting| (0+32768))
 11056  1CC4  3D3B               	addwfc	??_AFE_getSetShortCircuitCurrent+5,w
 11057  1CC5  0085               	movwf	5
 11058  1CC6  3F00               	moviw [0]fsr0
 11059  1CC7  00BC               	movwf	??_AFE_getSetShortCircuitCurrent+6
 11060  1CC8  3F01               	moviw [1]fsr0
 11061  1CC9  00BD               	movwf	??_AFE_getSetShortCircuitCurrent+7
 11062  1CCA  083C               	movf	??_AFE_getSetShortCircuitCurrent+6,w
 11063  1CCB  00F1               	movwf	___lmul@multiplier
 11064  1CCC  083D               	movf	??_AFE_getSetShortCircuitCurrent+7,w
 11065  1CCD  00F2               	movwf	___lmul@multiplier+1
 11066  1CCE  0D89               	rlf	9,f
 11067  1CCF  3B89               	subwfb	9,f
 11068  1CD0  0989               	comf	9,f
 11069  1CD1  00F3               	movwf	___lmul@multiplier+2
 11070  1CD2  00F4               	movwf	___lmul@multiplier+3
 11071  1CD3  3000               	movlw	0
 11072  1CD4  00F8               	movwf	___lmul@multiplicand+3
 11073  1CD5  3000               	movlw	0
 11074  1CD6  00F7               	movwf	___lmul@multiplicand+2
 11075  1CD7  3003               	movlw	3
 11076  1CD8  00F6               	movwf	___lmul@multiplicand+1
 11077  1CD9  30E8               	movlw	232
 11078  1CDA  00F5               	movwf	___lmul@multiplicand
 11079  1CDB  319B  23C5  319C   	fcall	___lmul
 11080  1CDE  0874               	movf	?___lmul+3,w
 11081  1CDF  0020               	movlb	0	; select bank0
 11082  1CE0  00AB               	movwf	___aldiv@dividend+3
 11083  1CE1  0873               	movf	?___lmul+2,w
 11084  1CE2  00AA               	movwf	___aldiv@dividend+2
 11085  1CE3  0872               	movf	?___lmul+1,w
 11086  1CE4  00A9               	movwf	___aldiv@dividend+1
 11087  1CE5  0871               	movf	?___lmul,w
 11088  1CE6  00A8               	movwf	___aldiv@dividend
 11089  1CE7  319E  26DD         	fcall	___aldiv
 11090  1CE9  0020               	movlb	0	; select bank0
 11091  1CEA  0827               	movf	?___aldiv+3,w
 11092  1CEB  00B5               	movwf	?_AFE_getSetShortCircuitCurrent+3
 11093  1CEC  0826               	movf	?___aldiv+2,w
 11094  1CED  00B4               	movwf	?_AFE_getSetShortCircuitCurrent+2
 11095  1CEE  0825               	movf	?___aldiv+1,w
 11096  1CEF  00B3               	movwf	?_AFE_getSetShortCircuitCurrent+1
 11097  1CF0  0824               	movf	?___aldiv,w
 11098  1CF1  00B2               	movwf	?_AFE_getSetShortCircuitCurrent
 11099  1CF2  0008               	return
 11100  1CF3                     __end_of_AFE_getSetShortCircuitCurrent:	
 11101                           
 11102                           	psect	text49
 11103  1BC5                     __ptext49:	
 11104 ;; *************** function ___lmul *****************
 11105 ;; Defined at:
 11106 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
 11107 ;; Parameters:    Size  Location     Type
 11108 ;;  multiplier      4    1[COMMON] unsigned long 
 11109 ;;  multiplicand    4    5[COMMON] unsigned long 
 11110 ;; Auto vars:     Size  Location     Type
 11111 ;;  product         4    0[BANK0 ] unsigned long 
 11112 ;; Return value:  Size  Location     Type
 11113 ;;                  4    1[COMMON] unsigned long 
 11114 ;; Registers used:
 11115 ;;		wreg, status,2, status,0
 11116 ;; Tracked objects:
 11117 ;;		On entry : 0/0
 11118 ;;		On exit  : 0/0
 11119 ;;		Unchanged: 0/0
 11120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11121 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11122 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11124 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11125 ;;Total ram usage:       12 bytes
 11126 ;; Hardware stack levels used:    1
 11127 ;; Hardware stack levels required when called:    1
 11128 ;; This function calls:
 11129 ;;		Nothing
 11130 ;; This function is called by:
 11131 ;;		_setShortCircuitProtection
 11132 ;;		_AFE_getSetShortCircuitCurrent
 11133 ;; This function uses a non-reentrant model
 11134 ;;
 11135                           
 11136                           
 11137                           ;psect for function ___lmul
 11138  1BC5                     ___lmul:	
 11139                           
 11140                           ;incstack = 0
 11141                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 11142  1BC5  3000               	movlw	0
 11143  1BC6  0020               	movlb	0	; select bank0
 11144  1BC7  00A3               	movwf	___lmul@product+3
 11145  1BC8  3000               	movlw	0
 11146  1BC9  00A2               	movwf	___lmul@product+2
 11147  1BCA  3000               	movlw	0
 11148  1BCB  00A1               	movwf	___lmul@product+1
 11149  1BCC  3000               	movlw	0
 11150  1BCD  00A0               	movwf	___lmul@product
 11151  1BCE                     l5054:	
 11152  1BCE  1C71               	btfss	___lmul@multiplier,0
 11153  1BCF  2BD9               	goto	l5058
 11154  1BD0  0875               	movf	___lmul@multiplicand,w
 11155  1BD1  0020               	movlb	0	; select bank0
 11156  1BD2  07A0               	addwf	___lmul@product,f
 11157  1BD3  0876               	movf	___lmul@multiplicand+1,w
 11158  1BD4  3DA1               	addwfc	___lmul@product+1,f
 11159  1BD5  0877               	movf	___lmul@multiplicand+2,w
 11160  1BD6  3DA2               	addwfc	___lmul@product+2,f
 11161  1BD7  0878               	movf	___lmul@multiplicand+3,w
 11162  1BD8  3DA3               	addwfc	___lmul@product+3,f
 11163  1BD9                     l5058:	
 11164  1BD9  3001               	movlw	1
 11165  1BDA                     u6025:	
 11166  1BDA  35F5               	lslf	___lmul@multiplicand,f
 11167  1BDB  0DF6               	rlf	___lmul@multiplicand+1,f
 11168  1BDC  0DF7               	rlf	___lmul@multiplicand+2,f
 11169  1BDD  0DF8               	rlf	___lmul@multiplicand+3,f
 11170  1BDE  0B89               	decfsz	9,f
 11171  1BDF  2BDA               	goto	u6025
 11172  1BE0  3001               	movlw	1
 11173  1BE1                     u6035:	
 11174  1BE1  36F4               	lsrf	___lmul@multiplier+3,f
 11175  1BE2  0CF3               	rrf	___lmul@multiplier+2,f
 11176  1BE3  0CF2               	rrf	___lmul@multiplier+1,f
 11177  1BE4  0CF1               	rrf	___lmul@multiplier,f
 11178  1BE5  0B89               	decfsz	9,f
 11179  1BE6  2BE1               	goto	u6035
 11180  1BE7  0874               	movf	___lmul@multiplier+3,w
 11181  1BE8  0473               	iorwf	___lmul@multiplier+2,w
 11182  1BE9  0472               	iorwf	___lmul@multiplier+1,w
 11183  1BEA  0471               	iorwf	___lmul@multiplier,w
 11184  1BEB  1D03               	skipz
 11185  1BEC  2BCE               	goto	l5054
 11186  1BED  0020               	movlb	0	; select bank0
 11187  1BEE  0823               	movf	___lmul@product+3,w
 11188  1BEF  00F4               	movwf	?___lmul+3
 11189  1BF0  0822               	movf	___lmul@product+2,w
 11190  1BF1  00F3               	movwf	?___lmul+2
 11191  1BF2  0821               	movf	___lmul@product+1,w
 11192  1BF3  00F2               	movwf	?___lmul+1
 11193  1BF4  0820               	movf	___lmul@product,w
 11194  1BF5  00F1               	movwf	?___lmul
 11195  1BF6  0008               	return
 11196  1BF7                     __end_of___lmul:	
 11197                           
 11198                           	psect	text50
 11199  1972                     __ptext50:	
 11200 ;; *************** function _init_TMR1 *****************
 11201 ;; Defined at:
 11202 ;;		line 162 in file "main.c"
 11203 ;; Parameters:    Size  Location     Type
 11204 ;;		None
 11205 ;; Auto vars:     Size  Location     Type
 11206 ;;		None
 11207 ;; Return value:  Size  Location     Type
 11208 ;;                  1    wreg      void 
 11209 ;; Registers used:
 11210 ;;		wreg, status,2, status,0
 11211 ;; Tracked objects:
 11212 ;;		On entry : 0/0
 11213 ;;		On exit  : 0/0
 11214 ;;		Unchanged: 0/0
 11215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11220 ;;Total ram usage:        0 bytes
 11221 ;; Hardware stack levels used:    1
 11222 ;; Hardware stack levels required when called:    1
 11223 ;; This function calls:
 11224 ;;		Nothing
 11225 ;; This function is called by:
 11226 ;;		_main
 11227 ;; This function uses a non-reentrant model
 11228 ;;
 11229                           
 11230                           
 11231                           ;psect for function _init_TMR1
 11232  1972                     _init_TMR1:	
 11233                           
 11234                           ;main.c: 165:     T1CONbits.T1CKPS = 0b00;
 11235                           
 11236                           ;incstack = 0
 11237                           ; Regs used in _init_TMR1: [wreg+status,2+status,0]
 11238  1972  30CF               	movlw	-49
 11239  1973  0020               	movlb	0	; select bank0
 11240  1974  0598               	andwf	24,f	;volatile
 11241                           
 11242                           ;main.c: 167:     TMR1 = 0;
 11243  1975  0196               	clrf	22	;volatile
 11244  1976  0197               	clrf	23	;volatile
 11245                           
 11246                           ;main.c: 169:     T1CONbits.TMR1ON = 1;
 11247  1977  1418               	bsf	24,0	;volatile
 11248                           
 11249                           ;main.c: 171:     PIE1bits.TMR1IE = 1;
 11250  1978  0021               	movlb	1	; select bank1
 11251  1979  1411               	bsf	17,0	;volatile
 11252                           
 11253                           ;main.c: 173:     INTCONbits.PEIE = 1;
 11254  197A  170B               	bsf	11,6	;volatile
 11255                           
 11256                           ;main.c: 175:     (INTCONbits.GIE = 1);
 11257  197B  178B               	bsf	11,7	;volatile
 11258  197C  0008               	return
 11259  197D                     __end_of_init_TMR1:	
 11260                           
 11261                           	psect	text51
 11262  192C                     __ptext51:	
 11263 ;; *************** function _init_RGB *****************
 11264 ;; Defined at:
 11265 ;;		line 6 in file "RGB.c"
 11266 ;; Parameters:    Size  Location     Type
 11267 ;;		None
 11268 ;; Auto vars:     Size  Location     Type
 11269 ;;		None
 11270 ;; Return value:  Size  Location     Type
 11271 ;;                  1    wreg      void 
 11272 ;; Registers used:
 11273 ;;		None
 11274 ;; Tracked objects:
 11275 ;;		On entry : 0/0
 11276 ;;		On exit  : 0/0
 11277 ;;		Unchanged: 0/0
 11278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11283 ;;Total ram usage:        0 bytes
 11284 ;; Hardware stack levels used:    1
 11285 ;; Hardware stack levels required when called:    1
 11286 ;; This function calls:
 11287 ;;		Nothing
 11288 ;; This function is called by:
 11289 ;;		_main
 11290 ;; This function uses a non-reentrant model
 11291 ;;
 11292                           
 11293                           
 11294                           ;psect for function _init_RGB
 11295  192C                     _init_RGB:	
 11296                           
 11297                           ;RGB.c: 8:     LATAbits.LATA4 = 1;
 11298                           
 11299                           ;incstack = 0
 11300                           ; Regs used in _init_RGB: []
 11301  192C  0022               	movlb	2	; select bank2
 11302  192D  160C               	bsf	12,4	;volatile
 11303                           
 11304                           ;RGB.c: 9:     LATAbits.LATA5 = 1;
 11305  192E  168C               	bsf	12,5	;volatile
 11306                           
 11307                           ;RGB.c: 10:     LATEbits.LATE0 = 1;
 11308  192F  1410               	bsf	16,0	;volatile
 11309  1930  0008               	return
 11310  1931                     __end_of_init_RGB:	
 11311                           
 11312                           	psect	text52
 11313  1989                     __ptext52:	
 11314 ;; *************** function _init_I2C *****************
 11315 ;; Defined at:
 11316 ;;		line 10 in file "I2C.c"
 11317 ;; Parameters:    Size  Location     Type
 11318 ;;		None
 11319 ;; Auto vars:     Size  Location     Type
 11320 ;;		None
 11321 ;; Return value:  Size  Location     Type
 11322 ;;                  1    wreg      void 
 11323 ;; Registers used:
 11324 ;;		wreg, status,2, status,0
 11325 ;; Tracked objects:
 11326 ;;		On entry : 0/0
 11327 ;;		On exit  : 0/0
 11328 ;;		Unchanged: 0/0
 11329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11332 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11333 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11334 ;;Total ram usage:        1 bytes
 11335 ;; Hardware stack levels used:    1
 11336 ;; Hardware stack levels required when called:    1
 11337 ;; This function calls:
 11338 ;;		Nothing
 11339 ;; This function is called by:
 11340 ;;		_main
 11341 ;; This function uses a non-reentrant model
 11342 ;;
 11343                           
 11344                           
 11345                           ;psect for function _init_I2C
 11346  1989                     _init_I2C:	
 11347                           
 11348                           ;I2C.c: 14:     SSPCONbits.SSPM = 0x08;
 11349                           
 11350                           ;incstack = 0
 11351                           ; Regs used in _init_I2C: [wreg+status,2+status,0]
 11352  1989  0024               	movlb	4	; select bank4
 11353  198A  0815               	movf	21,w	;volatile
 11354  198B  39F0               	andlw	-16
 11355  198C  3808               	iorlw	8
 11356  198D  0095               	movwf	21	;volatile
 11357                           
 11358                           ;I2C.c: 15:     SSPCONbits.SSPEN = 1;
 11359  198E  1695               	bsf	21,5	;volatile
 11360                           
 11361                           ;I2C.c: 24:     SSPADD = 39;
 11362  198F  3027               	movlw	39
 11363  1990  0092               	movwf	18	;volatile
 11364                           
 11365                           ;I2C.c: 27:     _delay((unsigned long)((10)*(16000000/4000.0)));
 11366  1991  3034               	movlw	52
 11367  1992  00F1               	movwf	??_init_I2C
 11368  1993  30F2               	movlw	242
 11369  1994                     u6387:	
 11370  1994  0B89               	decfsz	9,f
 11371  1995  2994               	goto	u6387
 11372  1996  0BF1               	decfsz	??_init_I2C,f
 11373  1997  2994               	goto	u6387
 11374  1998  0008               	return
 11375  1999                     __end_of_init_I2C:	
 11376                           
 11377                           	psect	text53
 11378  1C2D                     __ptext53:	
 11379 ;; *************** function _init_GPIO *****************
 11380 ;; Defined at:
 11381 ;;		line 179 in file "main.c"
 11382 ;; Parameters:    Size  Location     Type
 11383 ;;		None
 11384 ;; Auto vars:     Size  Location     Type
 11385 ;;		None
 11386 ;; Return value:  Size  Location     Type
 11387 ;;                  1    wreg      void 
 11388 ;; Registers used:
 11389 ;;		wreg, status,2, status,0
 11390 ;; Tracked objects:
 11391 ;;		On entry : 0/0
 11392 ;;		On exit  : 0/0
 11393 ;;		Unchanged: 0/0
 11394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11399 ;;Total ram usage:        0 bytes
 11400 ;; Hardware stack levels used:    1
 11401 ;; Hardware stack levels required when called:    1
 11402 ;; This function calls:
 11403 ;;		Nothing
 11404 ;; This function is called by:
 11405 ;;		_main
 11406 ;; This function uses a non-reentrant model
 11407 ;;
 11408                           
 11409                           
 11410                           ;psect for function _init_GPIO
 11411  1C2D                     _init_GPIO:	
 11412                           
 11413                           ;main.c: 185:     TRISBbits.TRISB2 = 0;
 11414                           
 11415                           ;incstack = 0
 11416                           ; Regs used in _init_GPIO: [wreg+status,2+status,0]
 11417  1C2D  0021               	movlb	1	; select bank1
 11418  1C2E  110D               	bcf	13,2	;volatile
 11419                           
 11420                           ;main.c: 186:     ANSELBbits.ANSB2 = 0;
 11421  1C2F  0023               	movlb	3	; select bank3
 11422  1C30  110D               	bcf	13,2	;volatile
 11423                           
 11424                           ;main.c: 187:     TRISBbits.TRISB3 = 1;
 11425  1C31  0021               	movlb	1	; select bank1
 11426  1C32  158D               	bsf	13,3	;volatile
 11427                           
 11428                           ;main.c: 188:     ANSELBbits.ANSB3 = 0;
 11429  1C33  0023               	movlb	3	; select bank3
 11430  1C34  118D               	bcf	13,3	;volatile
 11431                           
 11432                           ;main.c: 193:     ANSELCbits.ANSC4 = 0;
 11433  1C35  120E               	bcf	14,4	;volatile
 11434                           
 11435                           ;main.c: 194:     ANSELCbits.ANSC5 = 0;
 11436  1C36  128E               	bcf	14,5	;volatile
 11437                           
 11438                           ;main.c: 195:     TRISCbits.TRISC4 = 1;
 11439  1C37  0021               	movlb	1	; select bank1
 11440  1C38  160E               	bsf	14,4	;volatile
 11441                           
 11442                           ;main.c: 196:     TRISCbits.TRISC5 = 1;
 11443  1C39  168E               	bsf	14,5	;volatile
 11444                           
 11445                           ;main.c: 205:     TRISAbits.TRISA4 = 0;
 11446  1C3A  120C               	bcf	12,4	;volatile
 11447                           
 11448                           ;main.c: 206:     TRISAbits.TRISA5 = 0;
 11449  1C3B  128C               	bcf	12,5	;volatile
 11450                           
 11451                           ;main.c: 207:     TRISEbits.TRISE0 = 0;
 11452  1C3C  1010               	bcf	16,0	;volatile
 11453                           
 11454                           ;main.c: 213:     PPSLOCK = 0x55;
 11455  1C3D  3055               	movlw	85
 11456  1C3E  003C               	movlb	28	; select bank28
 11457  1C3F  008F               	movwf	15	;volsfr
 11458                           
 11459                           ;main.c: 214:     PPSLOCK = 0xAA;
 11460  1C40  30AA               	movlw	170
 11461  1C41  008F               	movwf	15	;volsfr
 11462                           
 11463                           ;main.c: 215:     PPSLOCKbits.PPSLOCKED = 0x00;
 11464  1C42  100F               	bcf	15,0	;volsfr
 11465                           
 11466                           ;main.c: 219:     RC4PPSbits.RC4PPS = 0x0011;
 11467  1C43  003D               	movlb	29	; select bank29
 11468  1C44  0824               	movf	36,w	;volatile
 11469  1C45  39E0               	andlw	-32
 11470  1C46  3811               	iorlw	17
 11471  1C47  00A4               	movwf	36	;volatile
 11472                           
 11473                           ;main.c: 220:     SSPDATPPSbits.SSPDATPPS = 0x0014;
 11474  1C48  003C               	movlb	28	; select bank28
 11475  1C49  0821               	movf	33,w	;volatile
 11476  1C4A  39E0               	andlw	-32
 11477  1C4B  3814               	iorlw	20
 11478  1C4C  00A1               	movwf	33	;volatile
 11479                           
 11480                           ;main.c: 221:     SSPCLKPPSbits.SSPCLKPPS = 0x0015;
 11481  1C4D  0820               	movf	32,w	;volatile
 11482  1C4E  39E0               	andlw	-32
 11483  1C4F  3815               	iorlw	21
 11484  1C50  00A0               	movwf	32	;volatile
 11485                           
 11486                           ;main.c: 222:     RC5PPSbits.RC5PPS = 0x0010;
 11487  1C51  003D               	movlb	29	; select bank29
 11488  1C52  0825               	movf	37,w	;volatile
 11489  1C53  39E0               	andlw	-32
 11490  1C54  3810               	iorlw	16
 11491  1C55  00A5               	movwf	37	;volatile
 11492                           
 11493                           ;main.c: 225:     RB2PPSbits.RB2PPS = 0x14;
 11494  1C56  081A               	movf	26,w	;volatile
 11495  1C57  39E0               	andlw	-32
 11496  1C58  3814               	iorlw	20
 11497  1C59  009A               	movwf	26	;volatile
 11498                           
 11499                           ;main.c: 226:     RXPPSbits.RXPPS = 0x0B;
 11500  1C5A  003C               	movlb	28	; select bank28
 11501  1C5B  0824               	movf	36,w	;volatile
 11502  1C5C  39E0               	andlw	-32
 11503  1C5D  380B               	iorlw	11
 11504  1C5E  00A4               	movwf	36	;volatile
 11505                           
 11506                           ;main.c: 228:     PPSLOCK = 0x55;
 11507  1C5F  3055               	movlw	85
 11508  1C60  008F               	movwf	15	;volsfr
 11509                           
 11510                           ;main.c: 229:     PPSLOCK = 0xAA;
 11511  1C61  30AA               	movlw	170
 11512  1C62  008F               	movwf	15	;volsfr
 11513                           
 11514                           ;main.c: 230:     PPSLOCKbits.PPSLOCKED = 0x01;
 11515  1C63  140F               	bsf	15,0	;volsfr
 11516  1C64  0008               	return
 11517  1C65                     __end_of_init_GPIO:	
 11518                           
 11519                           	psect	text54
 11520  1929                     __ptext54:	
 11521 ;; *************** function _initClock *****************
 11522 ;; Defined at:
 11523 ;;		line 153 in file "main.c"
 11524 ;; Parameters:    Size  Location     Type
 11525 ;;		None
 11526 ;; Auto vars:     Size  Location     Type
 11527 ;;		None
 11528 ;; Return value:  Size  Location     Type
 11529 ;;                  1    wreg      void 
 11530 ;; Registers used:
 11531 ;;		status,2, status,0, pclath, cstack
 11532 ;; Tracked objects:
 11533 ;;		On entry : 0/0
 11534 ;;		On exit  : 0/0
 11535 ;;		Unchanged: 0/0
 11536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11541 ;;Total ram usage:        0 bytes
 11542 ;; Hardware stack levels used:    1
 11543 ;; Hardware stack levels required when called:    2
 11544 ;; This function calls:
 11545 ;;		_internal_16
 11546 ;; This function is called by:
 11547 ;;		_main
 11548 ;; This function uses a non-reentrant model
 11549 ;;
 11550                           
 11551                           
 11552                           ;psect for function _initClock
 11553  1929                     _initClock:	
 11554                           
 11555                           ;main.c: 155:     internal_16();
 11556                           
 11557                           ;incstack = 0
 11558                           ; Regs used in _initClock: [status,2+status,0+pclath+cstack]
 11559  1929  3199  2156         	fcall	_internal_16
 11560  192B  0008               	return
 11561  192C                     __end_of_initClock:	
 11562                           
 11563                           	psect	text55
 11564  1956                     __ptext55:	
 11565 ;; *************** function _internal_16 *****************
 11566 ;; Defined at:
 11567 ;;		line 26 in file "pic16f1719_internals.c"
 11568 ;; Parameters:    Size  Location     Type
 11569 ;;		None
 11570 ;; Auto vars:     Size  Location     Type
 11571 ;;		None
 11572 ;; Return value:  Size  Location     Type
 11573 ;;                  1    wreg      void 
 11574 ;; Registers used:
 11575 ;;		None
 11576 ;; Tracked objects:
 11577 ;;		On entry : 0/0
 11578 ;;		On exit  : 0/0
 11579 ;;		Unchanged: 0/0
 11580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11585 ;;Total ram usage:        0 bytes
 11586 ;; Hardware stack levels used:    1
 11587 ;; Hardware stack levels required when called:    1
 11588 ;; This function calls:
 11589 ;;		Nothing
 11590 ;; This function is called by:
 11591 ;;		_initClock
 11592 ;; This function uses a non-reentrant model
 11593 ;;
 11594                           
 11595                           
 11596                           ;psect for function _internal_16
 11597  1956                     _internal_16:	
 11598                           
 11599                           ;pic16f1719_internals.c: 28: SCS0 = 0;
 11600                           
 11601                           ;incstack = 0
 11602                           ; Regs used in _internal_16: []
 11603  1956  0021               	movlb	1	; select bank1
 11604  1957  1019               	bcf	25,0	;volatile
 11605                           
 11606                           ;pic16f1719_internals.c: 29: SCS1 = 0;
 11607  1958  1099               	bcf	25,1	;volatile
 11608                           
 11609                           ;pic16f1719_internals.c: 31: IRCF0 = 1;
 11610  1959  1599               	bsf	25,3	;volatile
 11611                           
 11612                           ;pic16f1719_internals.c: 32: IRCF1 = 1;
 11613  195A  1619               	bsf	25,4	;volatile
 11614                           
 11615                           ;pic16f1719_internals.c: 33: IRCF2 = 1;
 11616  195B  1699               	bsf	25,5	;volatile
 11617                           
 11618                           ;pic16f1719_internals.c: 34: IRCF3 = 1;
 11619  195C  1719               	bsf	25,6	;volatile
 11620                           
 11621                           ;pic16f1719_internals.c: 36: SPLLEN = 0;
 11622  195D  1399               	bcf	25,7	;volatile
 11623  195E  0008               	return
 11624  195F                     __end_of_internal_16:	
 11625                           
 11626                           	psect	text56
 11627  101C                     __ptext56:	
 11628 ;; *************** function _EUSART_Initialize *****************
 11629 ;; Defined at:
 11630 ;;		line 6 in file "EUSART.c"
 11631 ;; Parameters:    Size  Location     Type
 11632 ;;  baudrate        4   18[BANK0 ] const long 
 11633 ;; Auto vars:     Size  Location     Type
 11634 ;;  x               2   10[COMMON] unsigned int 
 11635 ;; Return value:  Size  Location     Type
 11636 ;;                  1    wreg      unsigned char 
 11637 ;; Registers used:
 11638 ;;		wreg, status,2, status,0, pclath, cstack
 11639 ;; Tracked objects:
 11640 ;;		On entry : 0/0
 11641 ;;		On exit  : 0/0
 11642 ;;		Unchanged: 0/0
 11643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11644 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11645 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11646 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11647 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11648 ;;Total ram usage:       18 bytes
 11649 ;; Hardware stack levels used:    1
 11650 ;; Hardware stack levels required when called:    2
 11651 ;; This function calls:
 11652 ;;		___aldiv
 11653 ;; This function is called by:
 11654 ;;		_main
 11655 ;; This function uses a non-reentrant model
 11656 ;;
 11657                           
 11658                           
 11659                           ;psect for function _EUSART_Initialize
 11660  101C                     _EUSART_Initialize:	
 11661                           
 11662                           ;EUSART.c: 6: char EUSART_Initialize(const long int baudrate);EUSART.c: 7: {;EUSART.c: 8
      +                          :  unsigned int x;;EUSART.c: 9:  x = (16000000 - baudrate*64)/(baudrate*64);
 11663                           
 11664                           ;incstack = 0
 11665                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11666  101C  0020               	movlb	0	; select bank0
 11667  101D  0832               	movf	EUSART_Initialize@baudrate,w
 11668  101E  00B6               	movwf	??_EUSART_Initialize
 11669  101F  0833               	movf	EUSART_Initialize@baudrate+1,w
 11670  1020  00B7               	movwf	??_EUSART_Initialize+1
 11671  1021  0834               	movf	EUSART_Initialize@baudrate+2,w
 11672  1022  00B8               	movwf	??_EUSART_Initialize+2
 11673  1023  0835               	movf	EUSART_Initialize@baudrate+3,w
 11674  1024  00B9               	movwf	??_EUSART_Initialize+3
 11675  1025  3006               	movlw	6
 11676  1026                     u6275:	
 11677  1026  35B6               	lslf	??_EUSART_Initialize,f
 11678  1027  0DB7               	rlf	??_EUSART_Initialize+1,f
 11679  1028  0DB8               	rlf	??_EUSART_Initialize+2,f
 11680  1029  0DB9               	rlf	??_EUSART_Initialize+3,f
 11681  102A  0B89               	decfsz	9,f
 11682  102B  2826               	goto	u6275
 11683  102C  0839               	movf	??_EUSART_Initialize+3,w
 11684  102D  00A7               	movwf	___aldiv@divisor+3
 11685  102E  0838               	movf	??_EUSART_Initialize+2,w
 11686  102F  00A6               	movwf	___aldiv@divisor+2
 11687  1030  0837               	movf	??_EUSART_Initialize+1,w
 11688  1031  00A5               	movwf	___aldiv@divisor+1
 11689  1032  0836               	movf	??_EUSART_Initialize,w
 11690  1033  00A4               	movwf	___aldiv@divisor
 11691  1034  0832               	movf	EUSART_Initialize@baudrate,w
 11692  1035  00BA               	movwf	??_EUSART_Initialize+4
 11693  1036  0833               	movf	EUSART_Initialize@baudrate+1,w
 11694  1037  00BB               	movwf	??_EUSART_Initialize+5
 11695  1038  0834               	movf	EUSART_Initialize@baudrate+2,w
 11696  1039  00BC               	movwf	??_EUSART_Initialize+6
 11697  103A  0835               	movf	EUSART_Initialize@baudrate+3,w
 11698  103B  00BD               	movwf	??_EUSART_Initialize+7
 11699  103C  3006               	movlw	6
 11700  103D                     u6285:	
 11701  103D  35BA               	lslf	??_EUSART_Initialize+4,f
 11702  103E  0DBB               	rlf	??_EUSART_Initialize+5,f
 11703  103F  0DBC               	rlf	??_EUSART_Initialize+6,f
 11704  1040  0DBD               	rlf	??_EUSART_Initialize+7,f
 11705  1041  0B89               	decfsz	9,f
 11706  1042  283D               	goto	u6285
 11707  1043  3000               	movlw	0
 11708  1044  00BE               	movwf	??_EUSART_Initialize+8
 11709  1045  3024               	movlw	36
 11710  1046  00BF               	movwf	??_EUSART_Initialize+9
 11711  1047  30F4               	movlw	244
 11712  1048  00C0               	movwf	??_EUSART_Initialize+10
 11713  1049  3000               	movlw	0
 11714  104A  00C1               	movwf	??_EUSART_Initialize+11
 11715  104B  083A               	movf	??_EUSART_Initialize+4,w
 11716  104C  02BE               	subwf	??_EUSART_Initialize+8,f
 11717  104D  083B               	movf	??_EUSART_Initialize+5,w
 11718  104E  3BBF               	subwfb	??_EUSART_Initialize+9,f
 11719  104F  083C               	movf	??_EUSART_Initialize+6,w
 11720  1050  3BC0               	subwfb	??_EUSART_Initialize+10,f
 11721  1051  083D               	movf	??_EUSART_Initialize+7,w
 11722  1052  3BC1               	subwfb	??_EUSART_Initialize+11,f
 11723  1053  0841               	movf	??_EUSART_Initialize+11,w
 11724  1054  00AB               	movwf	___aldiv@dividend+3
 11725  1055  0840               	movf	??_EUSART_Initialize+10,w
 11726  1056  00AA               	movwf	___aldiv@dividend+2
 11727  1057  083F               	movf	??_EUSART_Initialize+9,w
 11728  1058  00A9               	movwf	___aldiv@dividend+1
 11729  1059  083E               	movf	??_EUSART_Initialize+8,w
 11730  105A  00A8               	movwf	___aldiv@dividend
 11731  105B  319E  26DD  3190   	fcall	___aldiv
 11732  105E  0020               	movlb	0	; select bank0
 11733  105F  0825               	movf	?___aldiv+1,w
 11734  1060  00FB               	movwf	EUSART_Initialize@x+1
 11735  1061  0824               	movf	?___aldiv,w
 11736  1062  00FA               	movwf	EUSART_Initialize@x
 11737                           
 11738                           ;EUSART.c: 10:  if(x>255)
 11739  1063  3001               	movlw	1
 11740  1064  027B               	subwf	EUSART_Initialize@x+1,w
 11741  1065  3000               	movlw	0
 11742  1066  1903               	skipnz
 11743  1067  027A               	subwf	EUSART_Initialize@x,w
 11744  1068  1C03               	skipc
 11745  1069  28B2               	goto	l5214
 11746                           
 11747                           ;EUSART.c: 11:  {;EUSART.c: 12:   x = (16000000 - baudrate*16)/(baudrate*16);
 11748  106A  0832               	movf	EUSART_Initialize@baudrate,w
 11749  106B  00B6               	movwf	??_EUSART_Initialize
 11750  106C  0833               	movf	EUSART_Initialize@baudrate+1,w
 11751  106D  00B7               	movwf	??_EUSART_Initialize+1
 11752  106E  0834               	movf	EUSART_Initialize@baudrate+2,w
 11753  106F  00B8               	movwf	??_EUSART_Initialize+2
 11754  1070  0835               	movf	EUSART_Initialize@baudrate+3,w
 11755  1071  00B9               	movwf	??_EUSART_Initialize+3
 11756  1072  3004               	movlw	4
 11757  1073                     u6305:	
 11758  1073  35B6               	lslf	??_EUSART_Initialize,f
 11759  1074  0DB7               	rlf	??_EUSART_Initialize+1,f
 11760  1075  0DB8               	rlf	??_EUSART_Initialize+2,f
 11761  1076  0DB9               	rlf	??_EUSART_Initialize+3,f
 11762  1077  0B89               	decfsz	9,f
 11763  1078  2873               	goto	u6305
 11764  1079  0839               	movf	??_EUSART_Initialize+3,w
 11765  107A  00A7               	movwf	___aldiv@divisor+3
 11766  107B  0838               	movf	??_EUSART_Initialize+2,w
 11767  107C  00A6               	movwf	___aldiv@divisor+2
 11768  107D  0837               	movf	??_EUSART_Initialize+1,w
 11769  107E  00A5               	movwf	___aldiv@divisor+1
 11770  107F  0836               	movf	??_EUSART_Initialize,w
 11771  1080  00A4               	movwf	___aldiv@divisor
 11772  1081  0832               	movf	EUSART_Initialize@baudrate,w
 11773  1082  00BA               	movwf	??_EUSART_Initialize+4
 11774  1083  0833               	movf	EUSART_Initialize@baudrate+1,w
 11775  1084  00BB               	movwf	??_EUSART_Initialize+5
 11776  1085  0834               	movf	EUSART_Initialize@baudrate+2,w
 11777  1086  00BC               	movwf	??_EUSART_Initialize+6
 11778  1087  0835               	movf	EUSART_Initialize@baudrate+3,w
 11779  1088  00BD               	movwf	??_EUSART_Initialize+7
 11780  1089  3004               	movlw	4
 11781  108A                     u6315:	
 11782  108A  35BA               	lslf	??_EUSART_Initialize+4,f
 11783  108B  0DBB               	rlf	??_EUSART_Initialize+5,f
 11784  108C  0DBC               	rlf	??_EUSART_Initialize+6,f
 11785  108D  0DBD               	rlf	??_EUSART_Initialize+7,f
 11786  108E  0B89               	decfsz	9,f
 11787  108F  288A               	goto	u6315
 11788  1090  3000               	movlw	0
 11789  1091  00BE               	movwf	??_EUSART_Initialize+8
 11790  1092  3024               	movlw	36
 11791  1093  00BF               	movwf	??_EUSART_Initialize+9
 11792  1094  30F4               	movlw	244
 11793  1095  00C0               	movwf	??_EUSART_Initialize+10
 11794  1096  3000               	movlw	0
 11795  1097  00C1               	movwf	??_EUSART_Initialize+11
 11796  1098  083A               	movf	??_EUSART_Initialize+4,w
 11797  1099  02BE               	subwf	??_EUSART_Initialize+8,f
 11798  109A  083B               	movf	??_EUSART_Initialize+5,w
 11799  109B  3BBF               	subwfb	??_EUSART_Initialize+9,f
 11800  109C  083C               	movf	??_EUSART_Initialize+6,w
 11801  109D  3BC0               	subwfb	??_EUSART_Initialize+10,f
 11802  109E  083D               	movf	??_EUSART_Initialize+7,w
 11803  109F  3BC1               	subwfb	??_EUSART_Initialize+11,f
 11804  10A0  0841               	movf	??_EUSART_Initialize+11,w
 11805  10A1  00AB               	movwf	___aldiv@dividend+3
 11806  10A2  0840               	movf	??_EUSART_Initialize+10,w
 11807  10A3  00AA               	movwf	___aldiv@dividend+2
 11808  10A4  083F               	movf	??_EUSART_Initialize+9,w
 11809  10A5  00A9               	movwf	___aldiv@dividend+1
 11810  10A6  083E               	movf	??_EUSART_Initialize+8,w
 11811  10A7  00A8               	movwf	___aldiv@dividend
 11812  10A8  319E  26DD  3190   	fcall	___aldiv
 11813  10AB  0020               	movlb	0	; select bank0
 11814  10AC  0825               	movf	?___aldiv+1,w
 11815  10AD  00FB               	movwf	EUSART_Initialize@x+1
 11816  10AE  0824               	movf	?___aldiv,w
 11817  10AF  00FA               	movwf	EUSART_Initialize@x
 11818                           
 11819                           ;EUSART.c: 13:   BRGH = 1;
 11820  10B0  0023               	movlb	3	; select bank3
 11821  10B1  151E               	bsf	30,2	;volatile
 11822  10B2                     l5214:	
 11823                           
 11824                           ;EUSART.c: 15:  if(x<256)
 11825  10B2  3001               	movlw	1
 11826  10B3  027B               	subwf	EUSART_Initialize@x+1,w
 11827  10B4  3000               	movlw	0
 11828  10B5  1903               	skipnz
 11829  10B6  027A               	subwf	EUSART_Initialize@x,w
 11830  10B7  1803               	skipnc
 11831  10B8  0008               	return
 11832                           
 11833                           ;EUSART.c: 16:  {;EUSART.c: 17:    SPBRG = x;
 11834  10B9  087A               	movf	EUSART_Initialize@x,w
 11835  10BA  0023               	movlb	3	; select bank3
 11836  10BB  009B               	movwf	27	;volatile
 11837                           
 11838                           ;EUSART.c: 18:    SYNC = 0;
 11839  10BC  121E               	bcf	30,4	;volatile
 11840                           
 11841                           ;EUSART.c: 19:    SPEN = 1;
 11842  10BD  179D               	bsf	29,7	;volatile
 11843                           
 11844                           ;EUSART.c: 20:           TRISC7 = 1;
 11845  10BE  0021               	movlb	1	; select bank1
 11846  10BF  178E               	bsf	14,7	;volatile
 11847                           
 11848                           ;EUSART.c: 21:           TRISC6 = 1;
 11849  10C0  170E               	bsf	14,6	;volatile
 11850                           
 11851                           ;EUSART.c: 22:           CREN = 1;
 11852  10C1  0023               	movlb	3	; select bank3
 11853  10C2  161D               	bsf	29,4	;volatile
 11854                           
 11855                           ;EUSART.c: 23:           TXEN = 1;
 11856  10C3  169E               	bsf	30,5	;volatile
 11857  10C4  0008               	return
 11858  10C5                     __end_of_EUSART_Initialize:	
 11859                           
 11860                           	psect	text57
 11861  1EDD                     __ptext57:	
 11862 ;; *************** function ___aldiv *****************
 11863 ;; Defined at:
 11864 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
 11865 ;; Parameters:    Size  Location     Type
 11866 ;;  divisor         4    4[BANK0 ] long 
 11867 ;;  dividend        4    8[BANK0 ] long 
 11868 ;; Auto vars:     Size  Location     Type
 11869 ;;  quotient        4   14[BANK0 ] long 
 11870 ;;  sign            1   13[BANK0 ] unsigned char 
 11871 ;;  counter         1   12[BANK0 ] unsigned char 
 11872 ;; Return value:  Size  Location     Type
 11873 ;;                  4    4[BANK0 ] long 
 11874 ;; Registers used:
 11875 ;;		wreg, status,2, status,0
 11876 ;; Tracked objects:
 11877 ;;		On entry : 0/0
 11878 ;;		On exit  : 0/0
 11879 ;;		Unchanged: 0/0
 11880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11881 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11882 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11883 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11884 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11885 ;;Total ram usage:       15 bytes
 11886 ;; Hardware stack levels used:    1
 11887 ;; Hardware stack levels required when called:    1
 11888 ;; This function calls:
 11889 ;;		Nothing
 11890 ;; This function is called by:
 11891 ;;		_EUSART_Initialize
 11892 ;;		_setShortCircuitProtection
 11893 ;;		_AFE_getSetShortCircuitCurrent
 11894 ;; This function uses a non-reentrant model
 11895 ;;
 11896                           
 11897                           
 11898                           ;psect for function ___aldiv
 11899  1EDD                     ___aldiv:	
 11900                           
 11901                           ;incstack = 0
 11902                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 11903  1EDD  0020               	movlb	0	; select bank0
 11904  1EDE  01AD               	clrf	___aldiv@sign
 11905  1EDF  1FA7               	btfss	___aldiv@divisor+3,7
 11906  1EE0  2EEE               	goto	l770
 11907  1EE1  09A4               	comf	___aldiv@divisor,f
 11908  1EE2  09A5               	comf	___aldiv@divisor+1,f
 11909  1EE3  09A6               	comf	___aldiv@divisor+2,f
 11910  1EE4  09A7               	comf	___aldiv@divisor+3,f
 11911  1EE5  0AA4               	incf	___aldiv@divisor,f
 11912  1EE6  1903               	skipnz
 11913  1EE7  0AA5               	incf	___aldiv@divisor+1,f
 11914  1EE8  1903               	skipnz
 11915  1EE9  0AA6               	incf	___aldiv@divisor+2,f
 11916  1EEA  1903               	skipnz
 11917  1EEB  0AA7               	incf	___aldiv@divisor+3,f
 11918  1EEC  01AD               	clrf	___aldiv@sign
 11919  1EED  0AAD               	incf	___aldiv@sign,f
 11920  1EEE                     l770:	
 11921  1EEE  1FAB               	btfss	___aldiv@dividend+3,7
 11922  1EEF  2EFF               	goto	l5076
 11923  1EF0  09A8               	comf	___aldiv@dividend,f
 11924  1EF1  09A9               	comf	___aldiv@dividend+1,f
 11925  1EF2  09AA               	comf	___aldiv@dividend+2,f
 11926  1EF3  09AB               	comf	___aldiv@dividend+3,f
 11927  1EF4  0AA8               	incf	___aldiv@dividend,f
 11928  1EF5  1903               	skipnz
 11929  1EF6  0AA9               	incf	___aldiv@dividend+1,f
 11930  1EF7  1903               	skipnz
 11931  1EF8  0AAA               	incf	___aldiv@dividend+2,f
 11932  1EF9  1903               	skipnz
 11933  1EFA  0AAB               	incf	___aldiv@dividend+3,f
 11934  1EFB  3001               	movlw	1
 11935  1EFC  00F9               	movwf	??___aldiv
 11936  1EFD  0879               	movf	??___aldiv,w
 11937  1EFE  06AD               	xorwf	___aldiv@sign,f
 11938  1EFF                     l5076:	
 11939  1EFF  3000               	movlw	0
 11940  1F00  00B1               	movwf	___aldiv@quotient+3
 11941  1F01  3000               	movlw	0
 11942  1F02  00B0               	movwf	___aldiv@quotient+2
 11943  1F03  3000               	movlw	0
 11944  1F04  00AF               	movwf	___aldiv@quotient+1
 11945  1F05  3000               	movlw	0
 11946  1F06  00AE               	movwf	___aldiv@quotient
 11947  1F07  0827               	movf	___aldiv@divisor+3,w
 11948  1F08  0426               	iorwf	___aldiv@divisor+2,w
 11949  1F09  0425               	iorwf	___aldiv@divisor+1,w
 11950  1F0A  0424               	iorwf	___aldiv@divisor,w
 11951  1F0B  1903               	skipnz
 11952  1F0C  2F48               	goto	l5098
 11953  1F0D  01AC               	clrf	___aldiv@counter
 11954  1F0E  0AAC               	incf	___aldiv@counter,f
 11955  1F0F                     l5084:	
 11956  1F0F  1BA7               	btfsc	___aldiv@divisor+3,7
 11957  1F10  2F1D               	goto	l5086
 11958  1F11  3001               	movlw	1
 11959  1F12                     u6085:	
 11960  1F12  35A4               	lslf	___aldiv@divisor,f
 11961  1F13  0DA5               	rlf	___aldiv@divisor+1,f
 11962  1F14  0DA6               	rlf	___aldiv@divisor+2,f
 11963  1F15  0DA7               	rlf	___aldiv@divisor+3,f
 11964  1F16  0B89               	decfsz	9,f
 11965  1F17  2F12               	goto	u6085
 11966  1F18  3001               	movlw	1
 11967  1F19  00F9               	movwf	??___aldiv
 11968  1F1A  0879               	movf	??___aldiv,w
 11969  1F1B  07AC               	addwf	___aldiv@counter,f
 11970  1F1C  2F0F               	goto	l5084
 11971  1F1D                     l5086:	
 11972  1F1D  3001               	movlw	1
 11973  1F1E                     u6105:	
 11974  1F1E  35AE               	lslf	___aldiv@quotient,f
 11975  1F1F  0DAF               	rlf	___aldiv@quotient+1,f
 11976  1F20  0DB0               	rlf	___aldiv@quotient+2,f
 11977  1F21  0DB1               	rlf	___aldiv@quotient+3,f
 11978  1F22  0B89               	decfsz	9,f
 11979  1F23  2F1E               	goto	u6105
 11980  1F24  0827               	movf	___aldiv@divisor+3,w
 11981  1F25  022B               	subwf	___aldiv@dividend+3,w
 11982  1F26  1D03               	skipz
 11983  1F27  2F32               	goto	u6115
 11984  1F28  0826               	movf	___aldiv@divisor+2,w
 11985  1F29  022A               	subwf	___aldiv@dividend+2,w
 11986  1F2A  1D03               	skipz
 11987  1F2B  2F32               	goto	u6115
 11988  1F2C  0825               	movf	___aldiv@divisor+1,w
 11989  1F2D  0229               	subwf	___aldiv@dividend+1,w
 11990  1F2E  1D03               	skipz
 11991  1F2F  2F32               	goto	u6115
 11992  1F30  0824               	movf	___aldiv@divisor,w
 11993  1F31  0228               	subwf	___aldiv@dividend,w
 11994  1F32                     u6115:	
 11995  1F32  1C03               	skipc
 11996  1F33  2F3D               	goto	l5094
 11997  1F34  0824               	movf	___aldiv@divisor,w
 11998  1F35  02A8               	subwf	___aldiv@dividend,f
 11999  1F36  0825               	movf	___aldiv@divisor+1,w
 12000  1F37  3BA9               	subwfb	___aldiv@dividend+1,f
 12001  1F38  0826               	movf	___aldiv@divisor+2,w
 12002  1F39  3BAA               	subwfb	___aldiv@dividend+2,f
 12003  1F3A  0827               	movf	___aldiv@divisor+3,w
 12004  1F3B  3BAB               	subwfb	___aldiv@dividend+3,f
 12005  1F3C  142E               	bsf	___aldiv@quotient,0
 12006  1F3D                     l5094:	
 12007  1F3D  3001               	movlw	1
 12008  1F3E                     u6125:	
 12009  1F3E  36A7               	lsrf	___aldiv@divisor+3,f
 12010  1F3F  0CA6               	rrf	___aldiv@divisor+2,f
 12011  1F40  0CA5               	rrf	___aldiv@divisor+1,f
 12012  1F41  0CA4               	rrf	___aldiv@divisor,f
 12013  1F42  0B89               	decfsz	9,f
 12014  1F43  2F3E               	goto	u6125
 12015  1F44  3001               	movlw	1
 12016  1F45  02AC               	subwf	___aldiv@counter,f
 12017  1F46  1D03               	btfss	3,2
 12018  1F47  2F1D               	goto	l5086
 12019  1F48                     l5098:	
 12020  1F48  082D               	movf	___aldiv@sign,w
 12021  1F49  1903               	btfsc	3,2
 12022  1F4A  2F56               	goto	l5102
 12023  1F4B  09AE               	comf	___aldiv@quotient,f
 12024  1F4C  09AF               	comf	___aldiv@quotient+1,f
 12025  1F4D  09B0               	comf	___aldiv@quotient+2,f
 12026  1F4E  09B1               	comf	___aldiv@quotient+3,f
 12027  1F4F  0AAE               	incf	___aldiv@quotient,f
 12028  1F50  1903               	skipnz
 12029  1F51  0AAF               	incf	___aldiv@quotient+1,f
 12030  1F52  1903               	skipnz
 12031  1F53  0AB0               	incf	___aldiv@quotient+2,f
 12032  1F54  1903               	skipnz
 12033  1F55  0AB1               	incf	___aldiv@quotient+3,f
 12034  1F56                     l5102:	
 12035  1F56  0831               	movf	___aldiv@quotient+3,w
 12036  1F57  00A7               	movwf	?___aldiv+3
 12037  1F58  0830               	movf	___aldiv@quotient+2,w
 12038  1F59  00A6               	movwf	?___aldiv+2
 12039  1F5A  082F               	movf	___aldiv@quotient+1,w
 12040  1F5B  00A5               	movwf	?___aldiv+1
 12041  1F5C  082E               	movf	___aldiv@quotient,w
 12042  1F5D  00A4               	movwf	?___aldiv
 12043  1F5E  0008               	return
 12044  1F5F                     __end_of___aldiv:	
 12045                           
 12046                           	psect	intentry
 12047  0004                     __pintentry:	
 12048 ;; *************** function _myIsr *****************
 12049 ;; Defined at:
 12050 ;;		line 57 in file "main.c"
 12051 ;; Parameters:    Size  Location     Type
 12052 ;;		None
 12053 ;; Auto vars:     Size  Location     Type
 12054 ;;		None
 12055 ;; Return value:  Size  Location     Type
 12056 ;;                  1    wreg      void 
 12057 ;; Registers used:
 12058 ;;		wreg, status,2, status,0
 12059 ;; Tracked objects:
 12060 ;;		On entry : 0/0
 12061 ;;		On exit  : 0/0
 12062 ;;		Unchanged: 0/0
 12063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12066 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12067 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12068 ;;Total ram usage:        1 bytes
 12069 ;; Hardware stack levels used:    1
 12070 ;; This function calls:
 12071 ;;		Nothing
 12072 ;; This function is called by:
 12073 ;;		Interrupt level 1
 12074 ;; This function uses a non-reentrant model
 12075 ;;
 12076                           
 12077  0004                     _myIsr:	
 12078                           
 12079                           ;incstack = 0
 12080  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 12081                           
 12082                           ; Regs used in _myIsr: [wreg+status,2+status,0]
 12083  0005  3180               	pagesel	$
 12084                           
 12085                           ;main.c: 59:     static uint8_t count = 0;;main.c: 61:     if (PIR1bits.TMR1IF && PIE1bi
      +                          ts.TMR1IE) {
 12086  0006  0020               	movlb	0	; select bank0
 12087  0007  1C11               	btfss	17,0	;volatile
 12088  0008  281C               	goto	i1l117
 12089  0009  0021               	movlb	1	; select bank1
 12090  000A  1C11               	btfss	17,0	;volatile
 12091  000B  281C               	goto	i1l117
 12092                           
 12093                           ;main.c: 62:         PIR1bits.TMR1IF = 0;
 12094  000C  0020               	movlb	0	; select bank0
 12095  000D  1011               	bcf	17,0	;volatile
 12096                           
 12097                           ;main.c: 63:         count++;
 12098  000E  3001               	movlw	1
 12099  000F  00F0               	movwf	??_myIsr
 12100  0010  0870               	movf	??_myIsr,w
 12101  0011  0021               	movlb	1	; select bank1
 12102  0012  07EC               	addwf	myIsr@count^(0+128),f
 12103                           
 12104                           ;main.c: 66:         if (count == 61) {
 12105  0013  303D               	movlw	61
 12106  0014  066C               	xorwf	myIsr@count^(0+128),w
 12107  0015  1D03               	btfss	3,2
 12108  0016  281C               	goto	i1l117
 12109                           
 12110                           ;main.c: 67:             tmr1_flag = 1;
 12111  0017  3001               	movlw	1
 12112  0018  00F0               	movwf	??_myIsr
 12113  0019  0870               	movf	??_myIsr,w
 12114  001A  00ED               	movwf	_tmr1_flag^(0+128)	;volatile
 12115                           
 12116                           ;main.c: 68:             count = 0;
 12117  001B  01EC               	clrf	myIsr@count^(0+128)
 12118  001C                     i1l117:	
 12119  001C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 12120  001D  0009               	retfie
 12121  001E                     __end_of_myIsr:	
 12122  007E                     btemp	set	126	;btemp
 12123  007E                     int$flags	set	126
 12124  007E                     wtemp0	set	126
 12125  2771                     
 12126                           	psect	text5_split_1
 12127  05A1                     l4702:	
 12128                           
 12129                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
 12130  05A1  0859               	movf	vfpfcnvrt@fmt,w
 12131  05A2  0086               	movwf	6
 12132  05A3  0187               	clrf	7
 12133  05A4  3F40               	moviw [0]fsr1
 12134  05A5  00F1               	movwf	strncmp@_l
 12135  05A6  3F41               	moviw [1]fsr1
 12136  05A7  00F2               	movwf	strncmp@_l+1
 12137  05A8  3096               	movlw	low (STR_8| (0+32768))
 12138  05A9  00F3               	movwf	strncmp@_r
 12139  05AA  30A1               	movlw	high (STR_8| (0+32768))
 12140  05AB  00F4               	movwf	strncmp@_r+1
 12141  05AC  3003               	movlw	3
 12142  05AD  00F5               	movwf	strncmp@n
 12143  05AE  3000               	movlw	0
 12144  05AF  00F6               	movwf	strncmp@n+1
 12145  05B0  319D  2544  3185   	fcall	_strncmp
 12146  05B3  0871               	movf	?_strncmp,w
 12147  05B4  0472               	iorwf	?_strncmp+1,w
 12148  05B5  1903               	btfsc	3,2
 12149  05B6  2DCE               	goto	l4706
 12150  05B7  0020               	movlb	0	; select bank0
 12151  05B8  0859               	movf	vfpfcnvrt@fmt,w
 12152  05B9  0086               	movwf	6
 12153  05BA  0187               	clrf	7
 12154  05BB  3F40               	moviw [0]fsr1
 12155  05BC  00F1               	movwf	strncmp@_l
 12156  05BD  3F41               	moviw [1]fsr1
 12157  05BE  00F2               	movwf	strncmp@_l+1
 12158  05BF  309A               	movlw	low (STR_12| (0+32768))
 12159  05C0  00F3               	movwf	strncmp@_r
 12160  05C1  30A1               	movlw	high (STR_12| (0+32768))
 12161  05C2  00F4               	movwf	strncmp@_r+1
 12162  05C3  3003               	movlw	3
 12163  05C4  00F5               	movwf	strncmp@n
 12164  05C5  3000               	movlw	0
 12165  05C6  00F6               	movwf	strncmp@n+1
 12166  05C7  319D  2544  3185   	fcall	_strncmp
 12167  05CA  0871               	movf	?_strncmp,w
 12168  05CB  0472               	iorwf	?_strncmp+1,w
 12169  05CC  1D03               	btfss	3,2
 12170  05CD  2E19               	goto	l4714
 12171  05CE                     l4706:	
 12172                           
 12173                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
 12174  05CE  0020               	movlb	0	; select bank0
 12175  05CF  0859               	movf	vfpfcnvrt@fmt,w
 12176  05D0  0086               	movwf	6
 12177  05D1  0187               	clrf	7
 12178  05D2  3003               	movlw	3
 12179  05D3  0781               	addwf	1,f
 12180  05D4  3141               	addfsr 1,1
 12181  05D5  1803               	skipnc
 12182  05D6  0A81               	incf	1,f
 12183                           
 12184                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 12185  05D7  085A               	movf	vfpfcnvrt@ap,w
 12186  05D8  0086               	movwf	6
 12187  05D9  0187               	clrf	7
 12188  05DA  0801               	movf	1,w
 12189  05DB  0084               	movwf	4
 12190  05DC  0185               	clrf	5
 12191  05DD  3002               	movlw	2
 12192  05DE  0781               	addwf	1,f
 12193  05DF  0800               	movf	0,w
 12194  05E0  0021               	movlb	1	; select bank1
 12195  05E1  00A7               	movwf	vfpfcnvrt@ll^(0+128)
 12196  05E2  3980               	andlw	128
 12197  05E3  1D03               	skipz
 12198  05E4  30FF               	movlw	255
 12199  05E5  00A8               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 12200  05E6  00A9               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 12201  05E7  00AA               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 12202  05E8  00AB               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 12203  05E9  00AC               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 12204  05EA  00AD               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 12205  05EB  00AE               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 12206                           
 12207                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
 12208  05EC  0020               	movlb	0	; select bank0
 12209  05ED  0858               	movf	vfpfcnvrt@fp+1,w
 12210  05EE  00B1               	movwf	dtoa@fp+1
 12211  05EF  0857               	movf	vfpfcnvrt@fp,w
 12212  05F0  00B0               	movwf	dtoa@fp
 12213  05F1  0021               	movlb	1	; select bank1
 12214  05F2  0827               	movf	vfpfcnvrt@ll^(0+128),w
 12215  05F3  0020               	movlb	0	; select bank0
 12216  05F4  00B2               	movwf	dtoa@d
 12217  05F5  0021               	movlb	1	; select bank1
 12218  05F6  0828               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 12219  05F7  0020               	movlb	0	; select bank0
 12220  05F8  00B3               	movwf	dtoa@d+1
 12221  05F9  0021               	movlb	1	; select bank1
 12222  05FA  0829               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 12223  05FB  0020               	movlb	0	; select bank0
 12224  05FC  00B4               	movwf	dtoa@d+2
 12225  05FD  0021               	movlb	1	; select bank1
 12226  05FE  082A               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 12227  05FF  0020               	movlb	0	; select bank0
 12228  0600  00B5               	movwf	dtoa@d+3
 12229  0601  0021               	movlb	1	; select bank1
 12230  0602  082B               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 12231  0603  0020               	movlb	0	; select bank0
 12232  0604  00B6               	movwf	dtoa@d+4
 12233  0605  0021               	movlb	1	; select bank1
 12234  0606  082C               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 12235  0607  0020               	movlb	0	; select bank0
 12236  0608  00B7               	movwf	dtoa@d+5
 12237  0609  0021               	movlb	1	; select bank1
 12238  060A  082D               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 12239  060B  0020               	movlb	0	; select bank0
 12240  060C  00B8               	movwf	dtoa@d+6
 12241  060D  0021               	movlb	1	; select bank1
 12242  060E  082E               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 12243  060F  0020               	movlb	0	; select bank0
 12244  0610  00B9               	movwf	dtoa@d+7
 12245  0611  3183  2353         	fcall	_dtoa
 12246  0613  0020               	movlb	0	; select bank0
 12247  0614  0831               	movf	?_dtoa+1,w
 12248  0615  00D8               	movwf	?_vfpfcnvrt+1
 12249  0616  0830               	movf	?_dtoa,w
 12250  0617  00D7               	movwf	?_vfpfcnvrt
 12251  0618  0008               	return
 12252  0619                     l4714:	
 12253                           
 12254                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
 12255  0619  0020               	movlb	0	; select bank0
 12256  061A  0859               	movf	vfpfcnvrt@fmt,w
 12257  061B  0086               	movwf	6
 12258  061C  0187               	clrf	7
 12259  061D  3F40               	moviw [0]fsr1
 12260  061E  00F1               	movwf	strncmp@_l
 12261  061F  3F41               	moviw [1]fsr1
 12262  0620  00F2               	movwf	strncmp@_l+1
 12263  0621  3097               	movlw	low ((STR_8+1)| (0+32768))
 12264  0622  00F3               	movwf	strncmp@_r
 12265  0623  30A1               	movlw	high ((STR_8+1)| (0+32768))
 12266  0624  00F4               	movwf	strncmp@_r+1
 12267  0625  3002               	movlw	2
 12268  0626  00F5               	movwf	strncmp@n
 12269  0627  3000               	movlw	0
 12270  0628  00F6               	movwf	strncmp@n+1
 12271  0629  319D  2544  3185   	fcall	_strncmp
 12272  062C  0871               	movf	?_strncmp,w
 12273  062D  0472               	iorwf	?_strncmp+1,w
 12274  062E  1903               	btfsc	3,2
 12275  062F  2E47               	goto	l4718
 12276  0630  0020               	movlb	0	; select bank0
 12277  0631  0859               	movf	vfpfcnvrt@fmt,w
 12278  0632  0086               	movwf	6
 12279  0633  0187               	clrf	7
 12280  0634  3F40               	moviw [0]fsr1
 12281  0635  00F1               	movwf	strncmp@_l
 12282  0636  3F41               	moviw [1]fsr1
 12283  0637  00F2               	movwf	strncmp@_l+1
 12284  0638  309B               	movlw	low ((STR_12+1)| (0+32768))
 12285  0639  00F3               	movwf	strncmp@_r
 12286  063A  30A1               	movlw	high ((STR_12+1)| (0+32768))
 12287  063B  00F4               	movwf	strncmp@_r+1
 12288  063C  3002               	movlw	2
 12289  063D  00F5               	movwf	strncmp@n
 12290  063E  3000               	movlw	0
 12291  063F  00F6               	movwf	strncmp@n+1
 12292  0640  319D  2544  3185   	fcall	_strncmp
 12293  0643  0871               	movf	?_strncmp,w
 12294  0644  0472               	iorwf	?_strncmp+1,w
 12295  0645  1D03               	btfss	3,2
 12296  0646  2E99               	goto	L6
 12297  0647                     l4718:	
 12298                           
 12299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
 12300  0647  0020               	movlb	0	; select bank0
 12301  0648  0859               	movf	vfpfcnvrt@fmt,w
 12302  0649  0086               	movwf	6
 12303  064A  0187               	clrf	7
 12304  064B  3002               	movlw	2
 12305  064C  0781               	addwf	1,f
 12306  064D  3141               	addfsr 1,1
 12307  064E  1803               	skipnc
 12308  064F  0A81               	incf	1,f
 12309                           
 12310                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
 12311  0650  085A               	movf	vfpfcnvrt@ap,w
 12312  0651  0086               	movwf	6
 12313  0652  0187               	clrf	7
 12314  0653  0801               	movf	1,w
 12315  0654  0084               	movwf	4
 12316  0655  0185               	clrf	5
 12317  0656  3002               	movlw	2
 12318  0657  0781               	addwf	1,f
 12319  0658  3F00               	moviw [0]fsr0
 12320  0659  00DB               	movwf	??_vfpfcnvrt
 12321  065A  3F01               	moviw [1]fsr0
 12322  065B  00DC               	movwf	??_vfpfcnvrt+1
 12323  065C  085B               	movf	??_vfpfcnvrt,w
 12324  065D  0021               	movlb	1	; select bank1
 12325  065E  00A7               	movwf	vfpfcnvrt@ll^(0+128)
 12326  065F  0020               	movlb	0	; select bank0
 12327  0660  085C               	movf	??_vfpfcnvrt+1,w
 12328  0661  0021               	movlb	1	; select bank1
 12329  0662  00A8               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 12330  0663  0D89               	rlf	9,f
 12331  0664  3B89               	subwfb	9,f
 12332  0665  0989               	comf	9,f
 12333  0666  00A9               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 12334  0667  00AA               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 12335  0668  00AB               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 12336  0669  00AC               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 12337  066A  00AD               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 12338  066B  00AE               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 12339                           
 12340                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 820:       
      +                                return dtoa(fp, ll);
 12341  066C  0020               	movlb	0	; select bank0
 12342  066D  0858               	movf	vfpfcnvrt@fp+1,w
 12343  066E  00B1               	movwf	dtoa@fp+1
 12344  066F  0857               	movf	vfpfcnvrt@fp,w
 12345  0670  00B0               	movwf	dtoa@fp
 12346  0671  0021               	movlb	1	; select bank1
 12347  0672  0827               	movf	vfpfcnvrt@ll^(0+128),w
 12348  0673  0020               	movlb	0	; select bank0
 12349  0674  00B2               	movwf	dtoa@d
 12350  0675  0021               	movlb	1	; select bank1
 12351  0676  0828               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 12352  0677  0020               	movlb	0	; select bank0
 12353  0678  00B3               	movwf	dtoa@d+1
 12354  0679  0021               	movlb	1	; select bank1
 12355  067A  0829               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 12356  067B  0020               	movlb	0	; select bank0
 12357  067C  00B4               	movwf	dtoa@d+2
 12358  067D  0021               	movlb	1	; select bank1
 12359  067E  082A               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 12360  067F  0020               	movlb	0	; select bank0
 12361  0680  00B5               	movwf	dtoa@d+3
 12362  0681  0021               	movlb	1	; select bank1
 12363  0682  082B               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 12364  0683  0020               	movlb	0	; select bank0
 12365  0684  00B6               	movwf	dtoa@d+4
 12366  0685  0021               	movlb	1	; select bank1
 12367  0686  082C               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 12368  0687  0020               	movlb	0	; select bank0
 12369  0688  00B7               	movwf	dtoa@d+5
 12370  0689  0021               	movlb	1	; select bank1
 12371  068A  082D               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 12372  068B  0020               	movlb	0	; select bank0
 12373  068C  00B8               	movwf	dtoa@d+6
 12374  068D  0021               	movlb	1	; select bank1
 12375  068E  082E               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 12376  068F  0020               	movlb	0	; select bank0
 12377  0690  00B9               	movwf	dtoa@d+7
 12378  0691  3183  2353         	fcall	_dtoa
 12379  0693  0020               	movlb	0	; select bank0
 12380  0694  0831               	movf	?_dtoa+1,w
 12381  0695  00D8               	movwf	?_vfpfcnvrt+1
 12382  0696  0830               	movf	?_dtoa,w
 12383  0697  00D7               	movwf	?_vfpfcnvrt
 12384  0698  0008               	return
 12385  0699                     L6:	
 12386  0699                     L5:	
 12387  0699  3184  2CA6         	ljmp	l4726
 12388                           
 12389                           	psect	text5_split_2
 12390  04A6                     l4726:	
 12391                           
 12392                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 12393  04A6  0020               	movlb	0	; select bank0
 12394  04A7  0859               	movf	vfpfcnvrt@fmt,w
 12395  04A8  0086               	movwf	6
 12396  04A9  0187               	clrf	7
 12397  04AA  3F40               	moviw [0]fsr1
 12398  04AB  00DB               	movwf	??_vfpfcnvrt
 12399  04AC  3F41               	moviw [1]fsr1
 12400  04AD  00DC               	movwf	??_vfpfcnvrt+1
 12401  04AE  085B               	movf	??_vfpfcnvrt,w
 12402  04AF  0084               	movwf	4
 12403  04B0  085C               	movf	??_vfpfcnvrt+1,w
 12404  04B1  0085               	movwf	5
 12405  04B2  0012               	moviw fsr0++
 12406  04B3  3A64               	xorlw	100
 12407  04B4  1903               	btfsc	3,2
 12408  04B5  2CC5               	goto	l4730
 12409  04B6  0859               	movf	vfpfcnvrt@fmt,w
 12410  04B7  0086               	movwf	6
 12411  04B8  0187               	clrf	7
 12412  04B9  3F40               	moviw [0]fsr1
 12413  04BA  00DB               	movwf	??_vfpfcnvrt
 12414  04BB  3F41               	moviw [1]fsr1
 12415  04BC  00DC               	movwf	??_vfpfcnvrt+1
 12416  04BD  085B               	movf	??_vfpfcnvrt,w
 12417  04BE  0084               	movwf	4
 12418  04BF  085C               	movf	??_vfpfcnvrt+1,w
 12419  04C0  0085               	movwf	5
 12420  04C1  0012               	moviw fsr0++
 12421  04C2  3A69               	xorlw	105
 12422  04C3  1D03               	btfss	3,2
 12423  04C4  2D16               	goto	l4738
 12424  04C5                     l4730:	
 12425                           
 12426                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 12427  04C5  0859               	movf	vfpfcnvrt@fmt,w
 12428  04C6  0086               	movwf	6
 12429  04C7  0187               	clrf	7
 12430  04C8  3001               	movlw	1
 12431  04C9  0781               	addwf	1,f
 12432  04CA  3141               	addfsr 1,1
 12433  04CB  1803               	skipnc
 12434  04CC  0A81               	incf	1,f
 12435                           
 12436                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 12437  04CD  085A               	movf	vfpfcnvrt@ap,w
 12438  04CE  0086               	movwf	6
 12439  04CF  0187               	clrf	7
 12440  04D0  0801               	movf	1,w
 12441  04D1  0084               	movwf	4
 12442  04D2  0185               	clrf	5
 12443  04D3  3002               	movlw	2
 12444  04D4  0781               	addwf	1,f
 12445  04D5  3F00               	moviw [0]fsr0
 12446  04D6  00DB               	movwf	??_vfpfcnvrt
 12447  04D7  3F01               	moviw [1]fsr0
 12448  04D8  00DC               	movwf	??_vfpfcnvrt+1
 12449  04D9  085B               	movf	??_vfpfcnvrt,w
 12450  04DA  0021               	movlb	1	; select bank1
 12451  04DB  00A7               	movwf	vfpfcnvrt@ll^(0+128)
 12452  04DC  0020               	movlb	0	; select bank0
 12453  04DD  085C               	movf	??_vfpfcnvrt+1,w
 12454  04DE  0021               	movlb	1	; select bank1
 12455  04DF  00A8               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 12456  04E0  0D89               	rlf	9,f
 12457  04E1  3B89               	subwfb	9,f
 12458  04E2  0989               	comf	9,f
 12459  04E3  00A9               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 12460  04E4  00AA               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 12461  04E5  00AB               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 12462  04E6  00AC               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 12463  04E7  00AD               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 12464  04E8  00AE               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 12465                           
 12466                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 12467  04E9  0020               	movlb	0	; select bank0
 12468  04EA  0858               	movf	vfpfcnvrt@fp+1,w
 12469  04EB  00B1               	movwf	dtoa@fp+1
 12470  04EC  0857               	movf	vfpfcnvrt@fp,w
 12471  04ED  00B0               	movwf	dtoa@fp
 12472  04EE  0021               	movlb	1	; select bank1
 12473  04EF  0827               	movf	vfpfcnvrt@ll^(0+128),w
 12474  04F0  0020               	movlb	0	; select bank0
 12475  04F1  00B2               	movwf	dtoa@d
 12476  04F2  0021               	movlb	1	; select bank1
 12477  04F3  0828               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 12478  04F4  0020               	movlb	0	; select bank0
 12479  04F5  00B3               	movwf	dtoa@d+1
 12480  04F6  0021               	movlb	1	; select bank1
 12481  04F7  0829               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 12482  04F8  0020               	movlb	0	; select bank0
 12483  04F9  00B4               	movwf	dtoa@d+2
 12484  04FA  0021               	movlb	1	; select bank1
 12485  04FB  082A               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 12486  04FC  0020               	movlb	0	; select bank0
 12487  04FD  00B5               	movwf	dtoa@d+3
 12488  04FE  0021               	movlb	1	; select bank1
 12489  04FF  082B               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 12490  0500  0020               	movlb	0	; select bank0
 12491  0501  00B6               	movwf	dtoa@d+4
 12492  0502  0021               	movlb	1	; select bank1
 12493  0503  082C               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 12494  0504  0020               	movlb	0	; select bank0
 12495  0505  00B7               	movwf	dtoa@d+5
 12496  0506  0021               	movlb	1	; select bank1
 12497  0507  082D               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 12498  0508  0020               	movlb	0	; select bank0
 12499  0509  00B8               	movwf	dtoa@d+6
 12500  050A  0021               	movlb	1	; select bank1
 12501  050B  082E               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 12502  050C  0020               	movlb	0	; select bank0
 12503  050D  00B9               	movwf	dtoa@d+7
 12504  050E  3183  2353         	fcall	_dtoa
 12505  0510  0020               	movlb	0	; select bank0
 12506  0511  0831               	movf	?_dtoa+1,w
 12507  0512  00D8               	movwf	?_vfpfcnvrt+1
 12508  0513  0830               	movf	?_dtoa,w
 12509  0514  00D7               	movwf	?_vfpfcnvrt
 12510  0515  0008               	return
 12511  0516                     l4738:	
 12512                           
 12513                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 835:       
      +                            if (!strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", (
      +                          (sizeof("li")/sizeof("li"[0]))-1))) {
 12514  0516  0859               	movf	vfpfcnvrt@fmt,w
 12515  0517  0086               	movwf	6
 12516  0518  0187               	clrf	7
 12517  0519  3F40               	moviw [0]fsr1
 12518  051A  00F1               	movwf	strncmp@_l
 12519  051B  3F41               	moviw [1]fsr1
 12520  051C  00F2               	movwf	strncmp@_l+1
 12521  051D  30B4               	movlw	low (STR_26| (0+32768))
 12522  051E  00F3               	movwf	strncmp@_r
 12523  051F  30A1               	movlw	high (STR_26| (0+32768))
 12524  0520  00F4               	movwf	strncmp@_r+1
 12525  0521  3002               	movlw	2
 12526  0522  00F5               	movwf	strncmp@n
 12527  0523  3000               	movlw	0
 12528  0524  00F6               	movwf	strncmp@n+1
 12529  0525  319D  2544  3184   	fcall	_strncmp
 12530  0528  0871               	movf	?_strncmp,w
 12531  0529  0472               	iorwf	?_strncmp+1,w
 12532  052A  1903               	btfsc	3,2
 12533  052B  2D43               	goto	l4742
 12534  052C  0020               	movlb	0	; select bank0
 12535  052D  0859               	movf	vfpfcnvrt@fmt,w
 12536  052E  0086               	movwf	6
 12537  052F  0187               	clrf	7
 12538  0530  3F40               	moviw [0]fsr1
 12539  0531  00F1               	movwf	strncmp@_l
 12540  0532  3F41               	moviw [1]fsr1
 12541  0533  00F2               	movwf	strncmp@_l+1
 12542  0534  30BA               	movlw	low (STR_30| (0+32768))
 12543  0535  00F3               	movwf	strncmp@_r
 12544  0536  30A1               	movlw	high (STR_30| (0+32768))
 12545  0537  00F4               	movwf	strncmp@_r+1
 12546  0538  3002               	movlw	2
 12547  0539  00F5               	movwf	strncmp@n
 12548  053A  3000               	movlw	0
 12549  053B  00F6               	movwf	strncmp@n+1
 12550  053C  319D  2544  3184   	fcall	_strncmp
 12551  053F  0871               	movf	?_strncmp,w
 12552  0540  0472               	iorwf	?_strncmp+1,w
 12553  0541  1D03               	btfss	3,2
 12554  0542  2D9F               	goto	L8
 12555  0543                     l4742:	
 12556                           
 12557                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 836: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 838:             
      +                          *fmt += ((sizeof("ld")/sizeof("ld"[0]))-1);
 12558  0543  0020               	movlb	0	; select bank0
 12559  0544  0859               	movf	vfpfcnvrt@fmt,w
 12560  0545  0086               	movwf	6
 12561  0546  0187               	clrf	7
 12562  0547  3002               	movlw	2
 12563  0548  0781               	addwf	1,f
 12564  0549  3141               	addfsr 1,1
 12565  054A  1803               	skipnc
 12566  054B  0A81               	incf	1,f
 12567                           
 12568                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 839:       
      +                                ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
 12569  054C  085A               	movf	vfpfcnvrt@ap,w
 12570  054D  0086               	movwf	6
 12571  054E  0187               	clrf	7
 12572  054F  0801               	movf	1,w
 12573  0550  0084               	movwf	4
 12574  0551  0185               	clrf	5
 12575  0552  3004               	movlw	4
 12576  0553  0781               	addwf	1,f
 12577  0554  3F00               	moviw [0]fsr0
 12578  0555  00DB               	movwf	??_vfpfcnvrt
 12579  0556  3F01               	moviw [1]fsr0
 12580  0557  00DC               	movwf	??_vfpfcnvrt+1
 12581  0558  3F02               	moviw [2]fsr0
 12582  0559  00DD               	movwf	??_vfpfcnvrt+2
 12583  055A  3F03               	moviw [3]fsr0
 12584  055B  00DE               	movwf	??_vfpfcnvrt+3
 12585  055C  085B               	movf	??_vfpfcnvrt,w
 12586  055D  0021               	movlb	1	; select bank1
 12587  055E  00A7               	movwf	vfpfcnvrt@ll^(0+128)
 12588  055F  0020               	movlb	0	; select bank0
 12589  0560  085C               	movf	??_vfpfcnvrt+1,w
 12590  0561  0021               	movlb	1	; select bank1
 12591  0562  00A8               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 12592  0563  0020               	movlb	0	; select bank0
 12593  0564  085D               	movf	??_vfpfcnvrt+2,w
 12594  0565  0021               	movlb	1	; select bank1
 12595  0566  00A9               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 12596  0567  0020               	movlb	0	; select bank0
 12597  0568  085E               	movf	??_vfpfcnvrt+3,w
 12598  0569  0021               	movlb	1	; select bank1
 12599  056A  00AA               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 12600  056B  3000               	movlw	0
 12601  056C  1BAA               	btfsc	(vfpfcnvrt@ll+3)^(0+128),7
 12602  056D  30FF               	movlw	255
 12603  056E  00AB               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 12604  056F  00AC               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 12605  0570  00AD               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 12606  0571  00AE               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 12607                           
 12608                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 841:       
      +                                return dtoa(fp, ll);
 12609  0572  0020               	movlb	0	; select bank0
 12610  0573  0858               	movf	vfpfcnvrt@fp+1,w
 12611  0574  00B1               	movwf	dtoa@fp+1
 12612  0575  0857               	movf	vfpfcnvrt@fp,w
 12613  0576  00B0               	movwf	dtoa@fp
 12614  0577  0021               	movlb	1	; select bank1
 12615  0578  0827               	movf	vfpfcnvrt@ll^(0+128),w
 12616  0579  0020               	movlb	0	; select bank0
 12617  057A  00B2               	movwf	dtoa@d
 12618  057B  0021               	movlb	1	; select bank1
 12619  057C  0828               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 12620  057D  0020               	movlb	0	; select bank0
 12621  057E  00B3               	movwf	dtoa@d+1
 12622  057F  0021               	movlb	1	; select bank1
 12623  0580  0829               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 12624  0581  0020               	movlb	0	; select bank0
 12625  0582  00B4               	movwf	dtoa@d+2
 12626  0583  0021               	movlb	1	; select bank1
 12627  0584  082A               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 12628  0585  0020               	movlb	0	; select bank0
 12629  0586  00B5               	movwf	dtoa@d+3
 12630  0587  0021               	movlb	1	; select bank1
 12631  0588  082B               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 12632  0589  0020               	movlb	0	; select bank0
 12633  058A  00B6               	movwf	dtoa@d+4
 12634  058B  0021               	movlb	1	; select bank1
 12635  058C  082C               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 12636  058D  0020               	movlb	0	; select bank0
 12637  058E  00B7               	movwf	dtoa@d+5
 12638  058F  0021               	movlb	1	; select bank1
 12639  0590  082D               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 12640  0591  0020               	movlb	0	; select bank0
 12641  0592  00B8               	movwf	dtoa@d+6
 12642  0593  0021               	movlb	1	; select bank1
 12643  0594  082E               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 12644  0595  0020               	movlb	0	; select bank0
 12645  0596  00B9               	movwf	dtoa@d+7
 12646  0597  3183  2353         	fcall	_dtoa
 12647  0599  0020               	movlb	0	; select bank0
 12648  059A  0831               	movf	?_dtoa+1,w
 12649  059B  00D8               	movwf	?_vfpfcnvrt+1
 12650  059C  0830               	movf	?_dtoa,w
 12651  059D  00D7               	movwf	?_vfpfcnvrt
 12652  059E  0008               	return
 12653  059F                     L8:	
 12654  059F                     L7:	
 12655  059F  3194  2C7A         	ljmp	l4750
 12656                           
 12657                           	psect	text5_split_3
 12658  147A                     l4750:	
 12659                           
 12660                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
 12661  147A  0020               	movlb	0	; select bank0
 12662  147B  0859               	movf	vfpfcnvrt@fmt,w
 12663  147C  0086               	movwf	6
 12664  147D  0187               	clrf	7
 12665  147E  3F40               	moviw [0]fsr1
 12666  147F  00F1               	movwf	strncmp@_l
 12667  1480  3F41               	moviw [1]fsr1
 12668  1481  00F2               	movwf	strncmp@_l+1
 12669  1482  30B7               	movlw	low (STR_35| (0+32768))
 12670  1483  00F3               	movwf	strncmp@_r
 12671  1484  30A1               	movlw	high (STR_35| (0+32768))
 12672  1485  00F4               	movwf	strncmp@_r+1
 12673  1486  3002               	movlw	2
 12674  1487  00F5               	movwf	strncmp@n
 12675  1488  3000               	movlw	0
 12676  1489  00F6               	movwf	strncmp@n+1
 12677  148A  319D  2544  3194   	fcall	_strncmp
 12678  148D  0871               	movf	?_strncmp,w
 12679  148E  0472               	iorwf	?_strncmp+1,w
 12680  148F  1903               	btfsc	3,2
 12681  1490  2CA8               	goto	l4754
 12682  1491  0020               	movlb	0	; select bank0
 12683  1492  0859               	movf	vfpfcnvrt@fmt,w
 12684  1493  0086               	movwf	6
 12685  1494  0187               	clrf	7
 12686  1495  3F40               	moviw [0]fsr1
 12687  1496  00F1               	movwf	strncmp@_l
 12688  1497  3F41               	moviw [1]fsr1
 12689  1498  00F2               	movwf	strncmp@_l+1
 12690  1499  30BD               	movlw	low (STR_39| (0+32768))
 12691  149A  00F3               	movwf	strncmp@_r
 12692  149B  30A1               	movlw	high (STR_39| (0+32768))
 12693  149C  00F4               	movwf	strncmp@_r+1
 12694  149D  3002               	movlw	2
 12695  149E  00F5               	movwf	strncmp@n
 12696  149F  3000               	movlw	0
 12697  14A0  00F6               	movwf	strncmp@n+1
 12698  14A1  319D  2544  3194   	fcall	_strncmp
 12699  14A4  0871               	movf	?_strncmp,w
 12700  14A5  0472               	iorwf	?_strncmp+1,w
 12701  14A6  1D03               	btfss	3,2
 12702  14A7  2CF1               	goto	l4762
 12703  14A8                     l4754:	
 12704                           
 12705                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
 12706  14A8  0020               	movlb	0	; select bank0
 12707  14A9  0859               	movf	vfpfcnvrt@fmt,w
 12708  14AA  0086               	movwf	6
 12709  14AB  0187               	clrf	7
 12710  14AC  3002               	movlw	2
 12711  14AD  0781               	addwf	1,f
 12712  14AE  3141               	addfsr 1,1
 12713  14AF  1803               	skipnc
 12714  14B0  0A81               	incf	1,f
 12715                           
 12716                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 12717  14B1  085A               	movf	vfpfcnvrt@ap,w
 12718  14B2  0086               	movwf	6
 12719  14B3  0187               	clrf	7
 12720  14B4  0801               	movf	1,w
 12721  14B5  0084               	movwf	4
 12722  14B6  0185               	clrf	5
 12723  14B7  3002               	movlw	2
 12724  14B8  0781               	addwf	1,f
 12725  14B9  3F00               	moviw [0]fsr0
 12726  14BA  0021               	movlb	1	; select bank1
 12727  14BB  00A7               	movwf	vfpfcnvrt@ll^(0+128)
 12728  14BC  3F01               	moviw [1]fsr0
 12729  14BD  00A8               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 12730  14BE  01A9               	clrf	(vfpfcnvrt@ll+2)^(0+128)
 12731  14BF  01AA               	clrf	(vfpfcnvrt@ll+3)^(0+128)
 12732  14C0  01AB               	clrf	(vfpfcnvrt@ll+4)^(0+128)
 12733  14C1  01AC               	clrf	(vfpfcnvrt@ll+5)^(0+128)
 12734  14C2  01AD               	clrf	(vfpfcnvrt@ll+6)^(0+128)
 12735  14C3  01AE               	clrf	(vfpfcnvrt@ll+7)^(0+128)
 12736                           
 12737                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 889:       
      +                                return dtoa(fp, ll);
 12738  14C4  0020               	movlb	0	; select bank0
 12739  14C5  0858               	movf	vfpfcnvrt@fp+1,w
 12740  14C6  00B1               	movwf	dtoa@fp+1
 12741  14C7  0857               	movf	vfpfcnvrt@fp,w
 12742  14C8  00B0               	movwf	dtoa@fp
 12743  14C9  0021               	movlb	1	; select bank1
 12744  14CA  0827               	movf	vfpfcnvrt@ll^(0+128),w
 12745  14CB  0020               	movlb	0	; select bank0
 12746  14CC  00B2               	movwf	dtoa@d
 12747  14CD  0021               	movlb	1	; select bank1
 12748  14CE  0828               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 12749  14CF  0020               	movlb	0	; select bank0
 12750  14D0  00B3               	movwf	dtoa@d+1
 12751  14D1  0021               	movlb	1	; select bank1
 12752  14D2  0829               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 12753  14D3  0020               	movlb	0	; select bank0
 12754  14D4  00B4               	movwf	dtoa@d+2
 12755  14D5  0021               	movlb	1	; select bank1
 12756  14D6  082A               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 12757  14D7  0020               	movlb	0	; select bank0
 12758  14D8  00B5               	movwf	dtoa@d+3
 12759  14D9  0021               	movlb	1	; select bank1
 12760  14DA  082B               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 12761  14DB  0020               	movlb	0	; select bank0
 12762  14DC  00B6               	movwf	dtoa@d+4
 12763  14DD  0021               	movlb	1	; select bank1
 12764  14DE  082C               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 12765  14DF  0020               	movlb	0	; select bank0
 12766  14E0  00B7               	movwf	dtoa@d+5
 12767  14E1  0021               	movlb	1	; select bank1
 12768  14E2  082D               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 12769  14E3  0020               	movlb	0	; select bank0
 12770  14E4  00B8               	movwf	dtoa@d+6
 12771  14E5  0021               	movlb	1	; select bank1
 12772  14E6  082E               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 12773  14E7  0020               	movlb	0	; select bank0
 12774  14E8  00B9               	movwf	dtoa@d+7
 12775  14E9  3183  2353         	fcall	_dtoa
 12776  14EB  0020               	movlb	0	; select bank0
 12777  14EC  0831               	movf	?_dtoa+1,w
 12778  14ED  00D8               	movwf	?_vfpfcnvrt+1
 12779  14EE  0830               	movf	?_dtoa,w
 12780  14EF  00D7               	movwf	?_vfpfcnvrt
 12781  14F0  0008               	return
 12782  14F1                     l4762:	
 12783                           
 12784                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
 12785  14F1  0020               	movlb	0	; select bank0
 12786  14F2  0859               	movf	vfpfcnvrt@fmt,w
 12787  14F3  0086               	movwf	6
 12788  14F4  0187               	clrf	7
 12789  14F5  3F40               	moviw [0]fsr1
 12790  14F6  00F1               	movwf	strncmp@_l
 12791  14F7  3F41               	moviw [1]fsr1
 12792  14F8  00F2               	movwf	strncmp@_l+1
 12793  14F9  30A2               	movlw	low (STR_44| (0+32768))
 12794  14FA  00F3               	movwf	strncmp@_r
 12795  14FB  30A1               	movlw	high (STR_44| (0+32768))
 12796  14FC  00F4               	movwf	strncmp@_r+1
 12797  14FD  3003               	movlw	3
 12798  14FE  00F5               	movwf	strncmp@n
 12799  14FF  3000               	movlw	0
 12800  1500  00F6               	movwf	strncmp@n+1
 12801  1501  319D  2544  3194   	fcall	_strncmp
 12802  1504  0871               	movf	?_strncmp,w
 12803  1505  0472               	iorwf	?_strncmp+1,w
 12804  1506  1D03               	btfss	3,2
 12805  1507  2D50               	goto	L10
 12806                           
 12807                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
 12808  1508  0020               	movlb	0	; select bank0
 12809  1509  0859               	movf	vfpfcnvrt@fmt,w
 12810  150A  0086               	movwf	6
 12811  150B  0187               	clrf	7
 12812  150C  3003               	movlw	3
 12813  150D  0781               	addwf	1,f
 12814  150E  3141               	addfsr 1,1
 12815  150F  1803               	skipnc
 12816  1510  0A81               	incf	1,f
 12817                           
 12818                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 12819  1511  085A               	movf	vfpfcnvrt@ap,w
 12820  1512  0086               	movwf	6
 12821  1513  0187               	clrf	7
 12822  1514  0801               	movf	1,w
 12823  1515  0084               	movwf	4
 12824  1516  0185               	clrf	5
 12825  1517  3002               	movlw	2
 12826  1518  0781               	addwf	1,f
 12827  1519  0800               	movf	0,w
 12828  151A  0021               	movlb	1	; select bank1
 12829  151B  00B1               	movwf	vfpfcnvrt@llu^(0+128)
 12830  151C  01B2               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 12831  151D  01B3               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 12832  151E  01B4               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 12833  151F  01B5               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 12834  1520  01B6               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 12835  1521  01B7               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 12836  1522  01B8               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 12837                           
 12838                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
 12839  1523  0020               	movlb	0	; select bank0
 12840  1524  0858               	movf	vfpfcnvrt@fp+1,w
 12841  1525  00B1               	movwf	otoa@fp+1
 12842  1526  0857               	movf	vfpfcnvrt@fp,w
 12843  1527  00B0               	movwf	otoa@fp
 12844  1528  0021               	movlb	1	; select bank1
 12845  1529  0831               	movf	vfpfcnvrt@llu^(0+128),w
 12846  152A  0020               	movlb	0	; select bank0
 12847  152B  00B2               	movwf	otoa@d
 12848  152C  0021               	movlb	1	; select bank1
 12849  152D  0832               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 12850  152E  0020               	movlb	0	; select bank0
 12851  152F  00B3               	movwf	otoa@d+1
 12852  1530  0021               	movlb	1	; select bank1
 12853  1531  0833               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 12854  1532  0020               	movlb	0	; select bank0
 12855  1533  00B4               	movwf	otoa@d+2
 12856  1534  0021               	movlb	1	; select bank1
 12857  1535  0834               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 12858  1536  0020               	movlb	0	; select bank0
 12859  1537  00B5               	movwf	otoa@d+3
 12860  1538  0021               	movlb	1	; select bank1
 12861  1539  0835               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 12862  153A  0020               	movlb	0	; select bank0
 12863  153B  00B6               	movwf	otoa@d+4
 12864  153C  0021               	movlb	1	; select bank1
 12865  153D  0836               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 12866  153E  0020               	movlb	0	; select bank0
 12867  153F  00B7               	movwf	otoa@d+5
 12868  1540  0021               	movlb	1	; select bank1
 12869  1541  0837               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 12870  1542  0020               	movlb	0	; select bank0
 12871  1543  00B8               	movwf	otoa@d+6
 12872  1544  0021               	movlb	1	; select bank1
 12873  1545  0838               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 12874  1546  0020               	movlb	0	; select bank0
 12875  1547  00B9               	movwf	otoa@d+7
 12876  1548  3197  270F         	fcall	_otoa
 12877  154A  0020               	movlb	0	; select bank0
 12878  154B  0831               	movf	?_otoa+1,w
 12879  154C  00D8               	movwf	?_vfpfcnvrt+1
 12880  154D  0830               	movf	?_otoa,w
 12881  154E  00D7               	movwf	?_vfpfcnvrt
 12882  154F  0008               	return
 12883  1550                     L10:	
 12884  1550                     L9:	
 12885  1550  3191  2979         	ljmp	l4772
 12886                           
 12887                           	psect	text5_split_4
 12888  1179                     l4772:	
 12889                           
 12890                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
 12891  1179  0020               	movlb	0	; select bank0
 12892  117A  0859               	movf	vfpfcnvrt@fmt,w
 12893  117B  0086               	movwf	6
 12894  117C  0187               	clrf	7
 12895  117D  3F40               	moviw [0]fsr1
 12896  117E  00F1               	movwf	strncmp@_l
 12897  117F  3F41               	moviw [1]fsr1
 12898  1180  00F2               	movwf	strncmp@_l+1
 12899  1181  30A3               	movlw	low ((STR_44+1)| (0+32768))
 12900  1182  00F3               	movwf	strncmp@_r
 12901  1183  30A1               	movlw	high ((STR_44+1)| (0+32768))
 12902  1184  00F4               	movwf	strncmp@_r+1
 12903  1185  3002               	movlw	2
 12904  1186  00F5               	movwf	strncmp@n
 12905  1187  3000               	movlw	0
 12906  1188  00F6               	movwf	strncmp@n+1
 12907  1189  319D  2544  3191   	fcall	_strncmp
 12908  118C  0871               	movf	?_strncmp,w
 12909  118D  0472               	iorwf	?_strncmp+1,w
 12910  118E  1D03               	btfss	3,2
 12911  118F  29D9               	goto	l4782
 12912                           
 12913                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
 12914  1190  0020               	movlb	0	; select bank0
 12915  1191  0859               	movf	vfpfcnvrt@fmt,w
 12916  1192  0086               	movwf	6
 12917  1193  0187               	clrf	7
 12918  1194  3002               	movlw	2
 12919  1195  0781               	addwf	1,f
 12920  1196  3141               	addfsr 1,1
 12921  1197  1803               	skipnc
 12922  1198  0A81               	incf	1,f
 12923                           
 12924                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
 12925  1199  085A               	movf	vfpfcnvrt@ap,w
 12926  119A  0086               	movwf	6
 12927  119B  0187               	clrf	7
 12928  119C  0801               	movf	1,w
 12929  119D  0084               	movwf	4
 12930  119E  0185               	clrf	5
 12931  119F  3002               	movlw	2
 12932  11A0  0781               	addwf	1,f
 12933  11A1  3F00               	moviw [0]fsr0
 12934  11A2  0021               	movlb	1	; select bank1
 12935  11A3  00B1               	movwf	vfpfcnvrt@llu^(0+128)
 12936  11A4  3F01               	moviw [1]fsr0
 12937  11A5  00B2               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 12938  11A6  01B3               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 12939  11A7  01B4               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 12940  11A8  01B5               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 12941  11A9  01B6               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 12942  11AA  01B7               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 12943  11AB  01B8               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 12944                           
 12945                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 985:       
      +                                return otoa(fp, llu);
 12946  11AC  0020               	movlb	0	; select bank0
 12947  11AD  0858               	movf	vfpfcnvrt@fp+1,w
 12948  11AE  00B1               	movwf	otoa@fp+1
 12949  11AF  0857               	movf	vfpfcnvrt@fp,w
 12950  11B0  00B0               	movwf	otoa@fp
 12951  11B1  0021               	movlb	1	; select bank1
 12952  11B2  0831               	movf	vfpfcnvrt@llu^(0+128),w
 12953  11B3  0020               	movlb	0	; select bank0
 12954  11B4  00B2               	movwf	otoa@d
 12955  11B5  0021               	movlb	1	; select bank1
 12956  11B6  0832               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 12957  11B7  0020               	movlb	0	; select bank0
 12958  11B8  00B3               	movwf	otoa@d+1
 12959  11B9  0021               	movlb	1	; select bank1
 12960  11BA  0833               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 12961  11BB  0020               	movlb	0	; select bank0
 12962  11BC  00B4               	movwf	otoa@d+2
 12963  11BD  0021               	movlb	1	; select bank1
 12964  11BE  0834               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 12965  11BF  0020               	movlb	0	; select bank0
 12966  11C0  00B5               	movwf	otoa@d+3
 12967  11C1  0021               	movlb	1	; select bank1
 12968  11C2  0835               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 12969  11C3  0020               	movlb	0	; select bank0
 12970  11C4  00B6               	movwf	otoa@d+4
 12971  11C5  0021               	movlb	1	; select bank1
 12972  11C6  0836               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 12973  11C7  0020               	movlb	0	; select bank0
 12974  11C8  00B7               	movwf	otoa@d+5
 12975  11C9  0021               	movlb	1	; select bank1
 12976  11CA  0837               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 12977  11CB  0020               	movlb	0	; select bank0
 12978  11CC  00B8               	movwf	otoa@d+6
 12979  11CD  0021               	movlb	1	; select bank1
 12980  11CE  0838               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 12981  11CF  0020               	movlb	0	; select bank0
 12982  11D0  00B9               	movwf	otoa@d+7
 12983  11D1  3197  270F         	fcall	_otoa
 12984  11D3  0020               	movlb	0	; select bank0
 12985  11D4  0831               	movf	?_otoa+1,w
 12986  11D5  00D8               	movwf	?_vfpfcnvrt+1
 12987  11D6  0830               	movf	?_otoa,w
 12988  11D7  00D7               	movwf	?_vfpfcnvrt
 12989  11D8  0008               	return
 12990  11D9                     l4782:	
 12991                           
 12992                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
 12993  11D9  0020               	movlb	0	; select bank0
 12994  11DA  0859               	movf	vfpfcnvrt@fmt,w
 12995  11DB  0086               	movwf	6
 12996  11DC  0187               	clrf	7
 12997  11DD  3F40               	moviw [0]fsr1
 12998  11DE  00DB               	movwf	??_vfpfcnvrt
 12999  11DF  3F41               	moviw [1]fsr1
 13000  11E0  00DC               	movwf	??_vfpfcnvrt+1
 13001  11E1  085B               	movf	??_vfpfcnvrt,w
 13002  11E2  0084               	movwf	4
 13003  11E3  085C               	movf	??_vfpfcnvrt+1,w
 13004  11E4  0085               	movwf	5
 13005  11E5  0012               	moviw fsr0++
 13006  11E6  3A6F               	xorlw	111
 13007  11E7  1D03               	btfss	3,2
 13008  11E8  2A31               	goto	L12
 13009                           
 13010                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
 13011  11E9  0859               	movf	vfpfcnvrt@fmt,w
 13012  11EA  0086               	movwf	6
 13013  11EB  0187               	clrf	7
 13014  11EC  3001               	movlw	1
 13015  11ED  0781               	addwf	1,f
 13016  11EE  3141               	addfsr 1,1
 13017  11EF  1803               	skipnc
 13018  11F0  0A81               	incf	1,f
 13019                           
 13020                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
 13021  11F1  085A               	movf	vfpfcnvrt@ap,w
 13022  11F2  0086               	movwf	6
 13023  11F3  0187               	clrf	7
 13024  11F4  0801               	movf	1,w
 13025  11F5  0084               	movwf	4
 13026  11F6  0185               	clrf	5
 13027  11F7  3002               	movlw	2
 13028  11F8  0781               	addwf	1,f
 13029  11F9  3F00               	moviw [0]fsr0
 13030  11FA  0021               	movlb	1	; select bank1
 13031  11FB  00B1               	movwf	vfpfcnvrt@llu^(0+128)
 13032  11FC  3F01               	moviw [1]fsr0
 13033  11FD  00B2               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 13034  11FE  01B3               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 13035  11FF  01B4               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 13036  1200  01B5               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 13037  1201  01B6               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 13038  1202  01B7               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 13039  1203  01B8               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 13040                           
 13041                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 995:       
      +                                return otoa(fp, llu);
 13042  1204  0020               	movlb	0	; select bank0
 13043  1205  0858               	movf	vfpfcnvrt@fp+1,w
 13044  1206  00B1               	movwf	otoa@fp+1
 13045  1207  0857               	movf	vfpfcnvrt@fp,w
 13046  1208  00B0               	movwf	otoa@fp
 13047  1209  0021               	movlb	1	; select bank1
 13048  120A  0831               	movf	vfpfcnvrt@llu^(0+128),w
 13049  120B  0020               	movlb	0	; select bank0
 13050  120C  00B2               	movwf	otoa@d
 13051  120D  0021               	movlb	1	; select bank1
 13052  120E  0832               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 13053  120F  0020               	movlb	0	; select bank0
 13054  1210  00B3               	movwf	otoa@d+1
 13055  1211  0021               	movlb	1	; select bank1
 13056  1212  0833               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 13057  1213  0020               	movlb	0	; select bank0
 13058  1214  00B4               	movwf	otoa@d+2
 13059  1215  0021               	movlb	1	; select bank1
 13060  1216  0834               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 13061  1217  0020               	movlb	0	; select bank0
 13062  1218  00B5               	movwf	otoa@d+3
 13063  1219  0021               	movlb	1	; select bank1
 13064  121A  0835               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 13065  121B  0020               	movlb	0	; select bank0
 13066  121C  00B6               	movwf	otoa@d+4
 13067  121D  0021               	movlb	1	; select bank1
 13068  121E  0836               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 13069  121F  0020               	movlb	0	; select bank0
 13070  1220  00B7               	movwf	otoa@d+5
 13071  1221  0021               	movlb	1	; select bank1
 13072  1222  0837               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 13073  1223  0020               	movlb	0	; select bank0
 13074  1224  00B8               	movwf	otoa@d+6
 13075  1225  0021               	movlb	1	; select bank1
 13076  1226  0838               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 13077  1227  0020               	movlb	0	; select bank0
 13078  1228  00B9               	movwf	otoa@d+7
 13079  1229  3197  270F         	fcall	_otoa
 13080  122B  0020               	movlb	0	; select bank0
 13081  122C  0831               	movf	?_otoa+1,w
 13082  122D  00D8               	movwf	?_vfpfcnvrt+1
 13083  122E  0830               	movf	?_otoa,w
 13084  122F  00D7               	movwf	?_vfpfcnvrt
 13085  1230  0008               	return
 13086  1231                     L12:	
 13087  1231                     L11:	
 13088  1231  3188  281F         	ljmp	l4792
 13089                           
 13090                           	psect	text5_split_5
 13091  081F                     l4792:	
 13092                           
 13093                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1000:      
      +                             if (!strncmp(*fmt, "lo", ((sizeof("lo")/sizeof("lo"[0]))-1))) {
 13094  081F  0859               	movf	vfpfcnvrt@fmt,w
 13095  0820  0086               	movwf	6
 13096  0821  0187               	clrf	7
 13097  0822  3F40               	moviw [0]fsr1
 13098  0823  00F1               	movwf	strncmp@_l
 13099  0824  3F41               	moviw [1]fsr1
 13100  0825  00F2               	movwf	strncmp@_l+1
 13101  0826  30C6               	movlw	low (STR_54| (0+32768))
 13102  0827  00F3               	movwf	strncmp@_r
 13103  0828  30A1               	movlw	high (STR_54| (0+32768))
 13104  0829  00F4               	movwf	strncmp@_r+1
 13105  082A  3002               	movlw	2
 13106  082B  00F5               	movwf	strncmp@n
 13107  082C  3000               	movlw	0
 13108  082D  00F6               	movwf	strncmp@n+1
 13109  082E  319D  2544  3188   	fcall	_strncmp
 13110  0831  0871               	movf	?_strncmp,w
 13111  0832  0472               	iorwf	?_strncmp+1,w
 13112  0833  1D03               	btfss	3,2
 13113  0834  28A6               	goto	l4802
 13114                           
 13115                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1002:      
      +                                 *fmt += ((sizeof("lo")/sizeof("lo"[0]))-1);
 13116  0835  0020               	movlb	0	; select bank0
 13117  0836  0859               	movf	vfpfcnvrt@fmt,w
 13118  0837  0086               	movwf	6
 13119  0838  0187               	clrf	7
 13120  0839  3002               	movlw	2
 13121  083A  0781               	addwf	1,f
 13122  083B  3141               	addfsr 1,1
 13123  083C  1803               	skipnc
 13124  083D  0A81               	incf	1,f
 13125                           
 13126                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1003:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 13127  083E  085A               	movf	vfpfcnvrt@ap,w
 13128  083F  0086               	movwf	6
 13129  0840  0187               	clrf	7
 13130  0841  0801               	movf	1,w
 13131  0842  0084               	movwf	4
 13132  0843  0185               	clrf	5
 13133  0844  3004               	movlw	4
 13134  0845  0781               	addwf	1,f
 13135  0846  3F00               	moviw [0]fsr0
 13136  0847  00DB               	movwf	??_vfpfcnvrt
 13137  0848  3F01               	moviw [1]fsr0
 13138  0849  00DC               	movwf	??_vfpfcnvrt+1
 13139  084A  3F02               	moviw [2]fsr0
 13140  084B  00DD               	movwf	??_vfpfcnvrt+2
 13141  084C  3F03               	moviw [3]fsr0
 13142  084D  00DE               	movwf	??_vfpfcnvrt+3
 13143  084E  085B               	movf	??_vfpfcnvrt,w
 13144  084F  00DF               	movwf	??_vfpfcnvrt+4
 13145  0850  085C               	movf	??_vfpfcnvrt+1,w
 13146  0851  00E0               	movwf	??_vfpfcnvrt+5
 13147  0852  085D               	movf	??_vfpfcnvrt+2,w
 13148  0853  00E1               	movwf	??_vfpfcnvrt+6
 13149  0854  085E               	movf	??_vfpfcnvrt+3,w
 13150  0855  00E2               	movwf	??_vfpfcnvrt+7
 13151  0856  01E3               	clrf	??_vfpfcnvrt+8
 13152  0857  01E4               	clrf	??_vfpfcnvrt+9
 13153  0858  01E5               	clrf	??_vfpfcnvrt+10
 13154  0859  01E6               	clrf	??_vfpfcnvrt+11
 13155  085A  0866               	movf	??_vfpfcnvrt+11,w
 13156  085B  0021               	movlb	1	; select bank1
 13157  085C  00B8               	movwf	(vfpfcnvrt@llu+7)^(0+128)
 13158  085D  0020               	movlb	0	; select bank0
 13159  085E  0865               	movf	??_vfpfcnvrt+10,w
 13160  085F  0021               	movlb	1	; select bank1
 13161  0860  00B7               	movwf	(vfpfcnvrt@llu+6)^(0+128)
 13162  0861  0020               	movlb	0	; select bank0
 13163  0862  0864               	movf	??_vfpfcnvrt+9,w
 13164  0863  0021               	movlb	1	; select bank1
 13165  0864  00B6               	movwf	(vfpfcnvrt@llu+5)^(0+128)
 13166  0865  0020               	movlb	0	; select bank0
 13167  0866  0863               	movf	??_vfpfcnvrt+8,w
 13168  0867  0021               	movlb	1	; select bank1
 13169  0868  00B5               	movwf	(vfpfcnvrt@llu+4)^(0+128)
 13170  0869  0020               	movlb	0	; select bank0
 13171  086A  0862               	movf	??_vfpfcnvrt+7,w
 13172  086B  0021               	movlb	1	; select bank1
 13173  086C  00B4               	movwf	(vfpfcnvrt@llu+3)^(0+128)
 13174  086D  0020               	movlb	0	; select bank0
 13175  086E  0861               	movf	??_vfpfcnvrt+6,w
 13176  086F  0021               	movlb	1	; select bank1
 13177  0870  00B3               	movwf	(vfpfcnvrt@llu+2)^(0+128)
 13178  0871  0020               	movlb	0	; select bank0
 13179  0872  0860               	movf	??_vfpfcnvrt+5,w
 13180  0873  0021               	movlb	1	; select bank1
 13181  0874  00B2               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 13182  0875  0020               	movlb	0	; select bank0
 13183  0876  085F               	movf	??_vfpfcnvrt+4,w
 13184  0877  0021               	movlb	1	; select bank1
 13185  0878  00B1               	movwf	vfpfcnvrt@llu^(0+128)
 13186                           
 13187                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1005:      
      +                                 return otoa(fp, llu);
 13188  0879  0020               	movlb	0	; select bank0
 13189  087A  0858               	movf	vfpfcnvrt@fp+1,w
 13190  087B  00B1               	movwf	otoa@fp+1
 13191  087C  0857               	movf	vfpfcnvrt@fp,w
 13192  087D  00B0               	movwf	otoa@fp
 13193  087E  0021               	movlb	1	; select bank1
 13194  087F  0831               	movf	vfpfcnvrt@llu^(0+128),w
 13195  0880  0020               	movlb	0	; select bank0
 13196  0881  00B2               	movwf	otoa@d
 13197  0882  0021               	movlb	1	; select bank1
 13198  0883  0832               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 13199  0884  0020               	movlb	0	; select bank0
 13200  0885  00B3               	movwf	otoa@d+1
 13201  0886  0021               	movlb	1	; select bank1
 13202  0887  0833               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 13203  0888  0020               	movlb	0	; select bank0
 13204  0889  00B4               	movwf	otoa@d+2
 13205  088A  0021               	movlb	1	; select bank1
 13206  088B  0834               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 13207  088C  0020               	movlb	0	; select bank0
 13208  088D  00B5               	movwf	otoa@d+3
 13209  088E  0021               	movlb	1	; select bank1
 13210  088F  0835               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 13211  0890  0020               	movlb	0	; select bank0
 13212  0891  00B6               	movwf	otoa@d+4
 13213  0892  0021               	movlb	1	; select bank1
 13214  0893  0836               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 13215  0894  0020               	movlb	0	; select bank0
 13216  0895  00B7               	movwf	otoa@d+5
 13217  0896  0021               	movlb	1	; select bank1
 13218  0897  0837               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 13219  0898  0020               	movlb	0	; select bank0
 13220  0899  00B8               	movwf	otoa@d+6
 13221  089A  0021               	movlb	1	; select bank1
 13222  089B  0838               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 13223  089C  0020               	movlb	0	; select bank0
 13224  089D  00B9               	movwf	otoa@d+7
 13225  089E  3197  270F         	fcall	_otoa
 13226  08A0  0020               	movlb	0	; select bank0
 13227  08A1  0831               	movf	?_otoa+1,w
 13228  08A2  00D8               	movwf	?_vfpfcnvrt+1
 13229  08A3  0830               	movf	?_otoa,w
 13230  08A4  00D7               	movwf	?_vfpfcnvrt
 13231  08A5  0008               	return
 13232  08A6                     l4802:	
 13233                           
 13234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
 13235  08A6  0020               	movlb	0	; select bank0
 13236  08A7  0859               	movf	vfpfcnvrt@fmt,w
 13237  08A8  0086               	movwf	6
 13238  08A9  0187               	clrf	7
 13239  08AA  3F40               	moviw [0]fsr1
 13240  08AB  00F1               	movwf	strncmp@_l
 13241  08AC  3F41               	moviw [1]fsr1
 13242  08AD  00F2               	movwf	strncmp@_l+1
 13243  08AE  30C9               	movlw	low (STR_59| (0+32768))
 13244  08AF  00F3               	movwf	strncmp@_r
 13245  08B0  30A1               	movlw	high (STR_59| (0+32768))
 13246  08B1  00F4               	movwf	strncmp@_r+1
 13247  08B2  3002               	movlw	2
 13248  08B3  00F5               	movwf	strncmp@n
 13249  08B4  3000               	movlw	0
 13250  08B5  00F6               	movwf	strncmp@n+1
 13251  08B6  319D  2544  3188   	fcall	_strncmp
 13252  08B9  0871               	movf	?_strncmp,w
 13253  08BA  0472               	iorwf	?_strncmp+1,w
 13254  08BB  1D03               	btfss	3,2
 13255  08BC  2906               	goto	l4812
 13256                           
 13257                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
 13258  08BD  0020               	movlb	0	; select bank0
 13259  08BE  0859               	movf	vfpfcnvrt@fmt,w
 13260  08BF  0086               	movwf	6
 13261  08C0  0187               	clrf	7
 13262  08C1  3002               	movlw	2
 13263  08C2  0781               	addwf	1,f
 13264  08C3  3141               	addfsr 1,1
 13265  08C4  1803               	skipnc
 13266  08C5  0A81               	incf	1,f
 13267                           
 13268                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 13269  08C6  085A               	movf	vfpfcnvrt@ap,w
 13270  08C7  0086               	movwf	6
 13271  08C8  0187               	clrf	7
 13272  08C9  0801               	movf	1,w
 13273  08CA  0084               	movwf	4
 13274  08CB  0185               	clrf	5
 13275  08CC  3002               	movlw	2
 13276  08CD  0781               	addwf	1,f
 13277  08CE  3F00               	moviw [0]fsr0
 13278  08CF  0021               	movlb	1	; select bank1
 13279  08D0  00B1               	movwf	vfpfcnvrt@llu^(0+128)
 13280  08D1  3F01               	moviw [1]fsr0
 13281  08D2  00B2               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 13282  08D3  01B3               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 13283  08D4  01B4               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 13284  08D5  01B5               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 13285  08D6  01B6               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 13286  08D7  01B7               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 13287  08D8  01B8               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 13288                           
 13289                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1049:      
      +                                 return otoa(fp, llu);
 13290  08D9  0020               	movlb	0	; select bank0
 13291  08DA  0858               	movf	vfpfcnvrt@fp+1,w
 13292  08DB  00B1               	movwf	otoa@fp+1
 13293  08DC  0857               	movf	vfpfcnvrt@fp,w
 13294  08DD  00B0               	movwf	otoa@fp
 13295  08DE  0021               	movlb	1	; select bank1
 13296  08DF  0831               	movf	vfpfcnvrt@llu^(0+128),w
 13297  08E0  0020               	movlb	0	; select bank0
 13298  08E1  00B2               	movwf	otoa@d
 13299  08E2  0021               	movlb	1	; select bank1
 13300  08E3  0832               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 13301  08E4  0020               	movlb	0	; select bank0
 13302  08E5  00B3               	movwf	otoa@d+1
 13303  08E6  0021               	movlb	1	; select bank1
 13304  08E7  0833               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 13305  08E8  0020               	movlb	0	; select bank0
 13306  08E9  00B4               	movwf	otoa@d+2
 13307  08EA  0021               	movlb	1	; select bank1
 13308  08EB  0834               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 13309  08EC  0020               	movlb	0	; select bank0
 13310  08ED  00B5               	movwf	otoa@d+3
 13311  08EE  0021               	movlb	1	; select bank1
 13312  08EF  0835               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 13313  08F0  0020               	movlb	0	; select bank0
 13314  08F1  00B6               	movwf	otoa@d+4
 13315  08F2  0021               	movlb	1	; select bank1
 13316  08F3  0836               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 13317  08F4  0020               	movlb	0	; select bank0
 13318  08F5  00B7               	movwf	otoa@d+5
 13319  08F6  0021               	movlb	1	; select bank1
 13320  08F7  0837               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 13321  08F8  0020               	movlb	0	; select bank0
 13322  08F9  00B8               	movwf	otoa@d+6
 13323  08FA  0021               	movlb	1	; select bank1
 13324  08FB  0838               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 13325  08FC  0020               	movlb	0	; select bank0
 13326  08FD  00B9               	movwf	otoa@d+7
 13327  08FE  3197  270F         	fcall	_otoa
 13328  0900  0020               	movlb	0	; select bank0
 13329  0901  0831               	movf	?_otoa+1,w
 13330  0902  00D8               	movwf	?_vfpfcnvrt+1
 13331  0903  0830               	movf	?_otoa,w
 13332  0904  00D7               	movwf	?_vfpfcnvrt
 13333  0905  0008               	return
 13334  0906                     l4812:	
 13335                           
 13336                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
 13337  0906  0020               	movlb	0	; select bank0
 13338  0907  0859               	movf	vfpfcnvrt@fmt,w
 13339  0908  0086               	movwf	6
 13340  0909  0187               	clrf	7
 13341  090A  3F40               	moviw [0]fsr1
 13342  090B  00F1               	movwf	strncmp@_l
 13343  090C  3F41               	moviw [1]fsr1
 13344  090D  00F2               	movwf	strncmp@_l+1
 13345  090E  309E               	movlw	low (STR_64| (0+32768))
 13346  090F  00F3               	movwf	strncmp@_r
 13347  0910  30A1               	movlw	high (STR_64| (0+32768))
 13348  0911  00F4               	movwf	strncmp@_r+1
 13349  0912  3003               	movlw	3
 13350  0913  00F5               	movwf	strncmp@n
 13351  0914  3000               	movlw	0
 13352  0915  00F6               	movwf	strncmp@n+1
 13353  0916  319D  2544  3188   	fcall	_strncmp
 13354  0919  0871               	movf	?_strncmp,w
 13355  091A  0472               	iorwf	?_strncmp+1,w
 13356  091B  1D03               	btfss	3,2
 13357  091C  29C5               	goto	l4824
 13358                           
 13359                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
 13360  091D  0020               	movlb	0	; select bank0
 13361  091E  0859               	movf	vfpfcnvrt@fmt,w
 13362  091F  0086               	movwf	6
 13363  0920  0187               	clrf	7
 13364  0921  3003               	movlw	3
 13365  0922  0781               	addwf	1,f
 13366  0923  3141               	addfsr 1,1
 13367  0924  1803               	skipnc
 13368  0925  0A81               	incf	1,f
 13369                           
 13370                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
 13371  0926  085A               	movf	vfpfcnvrt@ap,w
 13372  0927  0086               	movwf	6
 13373  0928  0187               	clrf	7
 13374  0929  3F40               	moviw [0]fsr1
 13375  092A  0084               	movwf	4
 13376  092B  0185               	clrf	5
 13377  092C  0A81               	incf	1,f
 13378  092D  0800               	movf	0,w
 13379  092E  00DB               	movwf	??_vfpfcnvrt
 13380  092F  085B               	movf	??_vfpfcnvrt,w
 13381  0930  0021               	movlb	1	; select bank1
 13382  0931  00AF               	movwf	vfpfcnvrt@vp^(0+128)
 13383                           
 13384                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
 13385  0932  085D               	movf	_nout^(0+128),w
 13386  0933  0020               	movlb	0	; select bank0
 13387  0934  00DB               	movwf	??_vfpfcnvrt
 13388  0935  0021               	movlb	1	; select bank1
 13389  0936  082F               	movf	vfpfcnvrt@vp^(0+128),w
 13390  0937  0086               	movwf	6
 13391  0938  0187               	clrf	7
 13392  0939  0020               	movlb	0	; select bank0
 13393  093A  085B               	movf	??_vfpfcnvrt,w
 13394  093B  0081               	movwf	1
 13395  093C  29C1               	goto	l4820
 13396  093D                     l4826:	
 13397                           
 13398                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
 13399  093D  0020               	movlb	0	; select bank0
 13400  093E  0859               	movf	vfpfcnvrt@fmt,w
 13401  093F  0086               	movwf	6
 13402  0940  0187               	clrf	7
 13403  0941  3002               	movlw	2
 13404  0942  0781               	addwf	1,f
 13405  0943  3141               	addfsr 1,1
 13406  0944  1803               	skipnc
 13407  0945  0A81               	incf	1,f
 13408                           
 13409                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
 13410  0946  085A               	movf	vfpfcnvrt@ap,w
 13411  0947  0086               	movwf	6
 13412  0948  0187               	clrf	7
 13413  0949  3F40               	moviw [0]fsr1
 13414  094A  0084               	movwf	4
 13415  094B  0185               	clrf	5
 13416  094C  0A81               	incf	1,f
 13417  094D  0800               	movf	0,w
 13418  094E  00DB               	movwf	??_vfpfcnvrt
 13419  094F  085B               	movf	??_vfpfcnvrt,w
 13420  0950  0021               	movlb	1	; select bank1
 13421  0951  00AF               	movwf	vfpfcnvrt@vp^(0+128)
 13422                           
 13423                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
 13424  0952  082F               	movf	vfpfcnvrt@vp^(0+128),w
 13425  0953  0086               	movwf	6
 13426  0954  0187               	clrf	7
 13427  0955  085D               	movf	_nout^(0+128),w
 13428  0956  3FC0               	movwi [0]fsr1
 13429  0957  085E               	movf	(_nout+1)^(0+128),w
 13430  0958  3FC1               	movwi [1]fsr1
 13431  0959  29C1               	goto	l4820
 13432  095A                     l4838:	
 13433                           
 13434                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
 13435  095A  0859               	movf	vfpfcnvrt@fmt,w
 13436  095B  0086               	movwf	6
 13437  095C  0187               	clrf	7
 13438  095D  3001               	movlw	1
 13439  095E  0781               	addwf	1,f
 13440  095F  3141               	addfsr 1,1
 13441  0960  1803               	skipnc
 13442  0961  0A81               	incf	1,f
 13443                           
 13444                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
 13445  0962  085A               	movf	vfpfcnvrt@ap,w
 13446  0963  0086               	movwf	6
 13447  0964  0187               	clrf	7
 13448  0965  3F40               	moviw [0]fsr1
 13449  0966  0084               	movwf	4
 13450  0967  0185               	clrf	5
 13451  0968  0A81               	incf	1,f
 13452  0969  0800               	movf	0,w
 13453  096A  00DB               	movwf	??_vfpfcnvrt
 13454  096B  085B               	movf	??_vfpfcnvrt,w
 13455  096C  0021               	movlb	1	; select bank1
 13456  096D  00AF               	movwf	vfpfcnvrt@vp^(0+128)
 13457                           
 13458                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
 13459  096E  082F               	movf	vfpfcnvrt@vp^(0+128),w
 13460  096F  0086               	movwf	6
 13461  0970  0187               	clrf	7
 13462  0971  085D               	movf	_nout^(0+128),w
 13463  0972  3FC0               	movwi [0]fsr1
 13464  0973  085E               	movf	(_nout+1)^(0+128),w
 13465  0974  3FC1               	movwi [1]fsr1
 13466  0975  29C1               	goto	l4820
 13467  0976                     l4850:	
 13468                           
 13469                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1087:      
      +                                 *fmt += ((sizeof("ln")/sizeof("ln"[0]))-1);
 13470  0976  0020               	movlb	0	; select bank0
 13471  0977  0859               	movf	vfpfcnvrt@fmt,w
 13472  0978  0086               	movwf	6
 13473  0979  0187               	clrf	7
 13474  097A  3002               	movlw	2
 13475  097B  0781               	addwf	1,f
 13476  097C  3141               	addfsr 1,1
 13477  097D  1803               	skipnc
 13478  097E  0A81               	incf	1,f
 13479                           
 13480                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1088:      
      +                                 vp = (void *)(*(long * *)__va_arg(*(long * **)ap, (long *)0));
 13481  097F  085A               	movf	vfpfcnvrt@ap,w
 13482  0980  0086               	movwf	6
 13483  0981  0187               	clrf	7
 13484  0982  3F40               	moviw [0]fsr1
 13485  0983  0084               	movwf	4
 13486  0984  0185               	clrf	5
 13487  0985  0A81               	incf	1,f
 13488  0986  0800               	movf	0,w
 13489  0987  00DB               	movwf	??_vfpfcnvrt
 13490  0988  085B               	movf	??_vfpfcnvrt,w
 13491  0989  0021               	movlb	1	; select bank1
 13492  098A  00AF               	movwf	vfpfcnvrt@vp^(0+128)
 13493                           
 13494                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1089:      
      +                                 *(long *)vp = (long)nout;
 13495  098B  085D               	movf	_nout^(0+128),w
 13496  098C  0020               	movlb	0	; select bank0
 13497  098D  00DB               	movwf	??_vfpfcnvrt
 13498  098E  0021               	movlb	1	; select bank1
 13499  098F  085E               	movf	(_nout+1)^(0+128),w
 13500  0990  0020               	movlb	0	; select bank0
 13501  0991  00DC               	movwf	??_vfpfcnvrt+1
 13502  0992  3000               	movlw	0
 13503  0993  1BDC               	btfsc	??_vfpfcnvrt+1,7
 13504  0994  30FF               	movlw	255
 13505  0995  00DD               	movwf	??_vfpfcnvrt+2
 13506  0996  00DE               	movwf	??_vfpfcnvrt+3
 13507  0997  0021               	movlb	1	; select bank1
 13508  0998  082F               	movf	vfpfcnvrt@vp^(0+128),w
 13509  0999  0086               	movwf	6
 13510  099A  0187               	clrf	7
 13511  099B  0020               	movlb	0	; select bank0
 13512  099C  085B               	movf	??_vfpfcnvrt,w
 13513  099D  3FC0               	movwi [0]fsr1
 13514  099E  085C               	movf	??_vfpfcnvrt+1,w
 13515  099F  3FC1               	movwi [1]fsr1
 13516  09A0  085D               	movf	??_vfpfcnvrt+2,w
 13517  09A1  3FC2               	movwi [2]fsr1
 13518  09A2  085E               	movf	??_vfpfcnvrt+3,w
 13519  09A3  3FC3               	movwi [3]fsr1
 13520  09A4  29C1               	goto	l4820
 13521  09A5                     l4862:	
 13522                           
 13523                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
 13524  09A5  0020               	movlb	0	; select bank0
 13525  09A6  0859               	movf	vfpfcnvrt@fmt,w
 13526  09A7  0086               	movwf	6
 13527  09A8  0187               	clrf	7
 13528  09A9  3002               	movlw	2
 13529  09AA  0781               	addwf	1,f
 13530  09AB  3141               	addfsr 1,1
 13531  09AC  1803               	skipnc
 13532  09AD  0A81               	incf	1,f
 13533                           
 13534                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
 13535  09AE  085A               	movf	vfpfcnvrt@ap,w
 13536  09AF  0086               	movwf	6
 13537  09B0  0187               	clrf	7
 13538  09B1  3F40               	moviw [0]fsr1
 13539  09B2  0084               	movwf	4
 13540  09B3  0185               	clrf	5
 13541  09B4  0A81               	incf	1,f
 13542  09B5  0800               	movf	0,w
 13543  09B6  00DB               	movwf	??_vfpfcnvrt
 13544  09B7  085B               	movf	??_vfpfcnvrt,w
 13545  09B8  0021               	movlb	1	; select bank1
 13546  09B9  00AF               	movwf	vfpfcnvrt@vp^(0+128)
 13547                           
 13548                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
 13549  09BA  082F               	movf	vfpfcnvrt@vp^(0+128),w
 13550  09BB  0086               	movwf	6
 13551  09BC  0187               	clrf	7
 13552  09BD  085D               	movf	_nout^(0+128),w
 13553  09BE  3FC0               	movwi [0]fsr1
 13554  09BF  085E               	movf	(_nout+1)^(0+128),w
 13555  09C0  3FC1               	movwi [1]fsr1
 13556  09C1                     l4820:	
 13557                           
 13558                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
 13559  09C1  0020               	movlb	0	; select bank0
 13560  09C2  01D7               	clrf	?_vfpfcnvrt
 13561  09C3  01D8               	clrf	?_vfpfcnvrt+1
 13562  09C4  0008               	return
 13563  09C5                     l4824:	
 13564                           
 13565                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
 13566  09C5  0020               	movlb	0	; select bank0
 13567  09C6  0859               	movf	vfpfcnvrt@fmt,w
 13568  09C7  0086               	movwf	6
 13569  09C8  0187               	clrf	7
 13570  09C9  3F40               	moviw [0]fsr1
 13571  09CA  00F1               	movwf	strncmp@_l
 13572  09CB  3F41               	moviw [1]fsr1
 13573  09CC  00F2               	movwf	strncmp@_l+1
 13574  09CD  309F               	movlw	low ((STR_64+1)| (0+32768))
 13575  09CE  00F3               	movwf	strncmp@_r
 13576  09CF  30A1               	movlw	high ((STR_64+1)| (0+32768))
 13577  09D0  00F4               	movwf	strncmp@_r+1
 13578  09D1  3002               	movlw	2
 13579  09D2  00F5               	movwf	strncmp@n
 13580  09D3  3000               	movlw	0
 13581  09D4  00F6               	movwf	strncmp@n+1
 13582  09D5  319D  2544  3188   	fcall	_strncmp
 13583  09D8  0871               	movf	?_strncmp,w
 13584  09D9  0472               	iorwf	?_strncmp+1,w
 13585  09DA  1903               	btfsc	3,2
 13586  09DB  293D               	goto	l4826
 13587                           
 13588                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
 13589  09DC  0020               	movlb	0	; select bank0
 13590  09DD  0859               	movf	vfpfcnvrt@fmt,w
 13591  09DE  0086               	movwf	6
 13592  09DF  0187               	clrf	7
 13593  09E0  3F40               	moviw [0]fsr1
 13594  09E1  00DB               	movwf	??_vfpfcnvrt
 13595  09E2  3F41               	moviw [1]fsr1
 13596  09E3  00DC               	movwf	??_vfpfcnvrt+1
 13597  09E4  085B               	movf	??_vfpfcnvrt,w
 13598  09E5  0084               	movwf	4
 13599  09E6  085C               	movf	??_vfpfcnvrt+1,w
 13600  09E7  0085               	movwf	5
 13601  09E8  0012               	moviw fsr0++
 13602  09E9  3A6E               	xorlw	110
 13603  09EA  1903               	btfsc	3,2
 13604  09EB  295A               	goto	l4838
 13605                           
 13606                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1085:      
      +                             if (!strncmp(*fmt, "ln", ((sizeof("ln")/sizeof("ln"[0]))-1))) {
 13607  09EC  0859               	movf	vfpfcnvrt@fmt,w
 13608  09ED  0086               	movwf	6
 13609  09EE  0187               	clrf	7
 13610  09EF  3F40               	moviw [0]fsr1
 13611  09F0  00F1               	movwf	strncmp@_l
 13612  09F1  3F41               	moviw [1]fsr1
 13613  09F2  00F2               	movwf	strncmp@_l+1
 13614  09F3  30C0               	movlw	low (STR_74| (0+32768))
 13615  09F4  00F3               	movwf	strncmp@_r
 13616  09F5  30A1               	movlw	high (STR_74| (0+32768))
 13617  09F6  00F4               	movwf	strncmp@_r+1
 13618  09F7  3002               	movlw	2
 13619  09F8  00F5               	movwf	strncmp@n
 13620  09F9  3000               	movlw	0
 13621  09FA  00F6               	movwf	strncmp@n+1
 13622  09FB  319D  2544  3188   	fcall	_strncmp
 13623  09FE  0871               	movf	?_strncmp,w
 13624  09FF  0472               	iorwf	?_strncmp+1,w
 13625  0A00  1903               	btfsc	3,2
 13626  0A01  2976               	goto	l4850
 13627                           
 13628                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
 13629  0A02  0020               	movlb	0	; select bank0
 13630  0A03  0859               	movf	vfpfcnvrt@fmt,w
 13631  0A04  0086               	movwf	6
 13632  0A05  0187               	clrf	7
 13633  0A06  3F40               	moviw [0]fsr1
 13634  0A07  00F1               	movwf	strncmp@_l
 13635  0A08  3F41               	moviw [1]fsr1
 13636  0A09  00F2               	movwf	strncmp@_l+1
 13637  0A0A  30C3               	movlw	low (STR_79| (0+32768))
 13638  0A0B  00F3               	movwf	strncmp@_r
 13639  0A0C  30A1               	movlw	high (STR_79| (0+32768))
 13640  0A0D  00F4               	movwf	strncmp@_r+1
 13641  0A0E  3002               	movlw	2
 13642  0A0F  00F5               	movwf	strncmp@n
 13643  0A10  3000               	movlw	0
 13644  0A11  00F6               	movwf	strncmp@n+1
 13645  0A12  319D  2544  3188   	fcall	_strncmp
 13646  0A15  0871               	movf	?_strncmp,w
 13647  0A16  0472               	iorwf	?_strncmp+1,w
 13648  0A17  1903               	btfsc	3,2
 13649  0A18  29A5               	goto	l4862
 13650                           
 13651                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
 13652  0A19  0020               	movlb	0	; select bank0
 13653  0A1A  0859               	movf	vfpfcnvrt@fmt,w
 13654  0A1B  0086               	movwf	6
 13655  0A1C  0187               	clrf	7
 13656  0A1D  3F40               	moviw [0]fsr1
 13657  0A1E  00DB               	movwf	??_vfpfcnvrt
 13658  0A1F  3F41               	moviw [1]fsr1
 13659  0A20  00DC               	movwf	??_vfpfcnvrt+1
 13660  0A21  085B               	movf	??_vfpfcnvrt,w
 13661  0A22  0084               	movwf	4
 13662  0A23  085C               	movf	??_vfpfcnvrt+1,w
 13663  0A24  0085               	movwf	5
 13664  0A25  0012               	moviw fsr0++
 13665  0A26  3A70               	xorlw	112
 13666  0A27  1D03               	btfss	3,2
 13667  0A28  2A91               	goto	l4882
 13668                           
 13669                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
 13670  0A29  0859               	movf	vfpfcnvrt@fmt,w
 13671  0A2A  0086               	movwf	6
 13672  0A2B  0187               	clrf	7
 13673  0A2C  3001               	movlw	1
 13674  0A2D  0781               	addwf	1,f
 13675  0A2E  3141               	addfsr 1,1
 13676  0A2F  1803               	skipnc
 13677  0A30  0A81               	incf	1,f
 13678                           
 13679                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
 13680  0A31  085A               	movf	vfpfcnvrt@ap,w
 13681  0A32  0086               	movwf	6
 13682  0A33  0187               	clrf	7
 13683  0A34  3F40               	moviw [0]fsr1
 13684  0A35  0084               	movwf	4
 13685  0A36  0185               	clrf	5
 13686  0A37  0A81               	incf	1,f
 13687  0A38  0800               	movf	0,w
 13688  0A39  00DB               	movwf	??_vfpfcnvrt
 13689  0A3A  01DC               	clrf	??_vfpfcnvrt+1
 13690  0A3B  01DD               	clrf	??_vfpfcnvrt+2
 13691  0A3C  01DE               	clrf	??_vfpfcnvrt+3
 13692  0A3D  01DF               	clrf	??_vfpfcnvrt+4
 13693  0A3E  01E0               	clrf	??_vfpfcnvrt+5
 13694  0A3F  01E1               	clrf	??_vfpfcnvrt+6
 13695  0A40  01E2               	clrf	??_vfpfcnvrt+7
 13696  0A41  0862               	movf	??_vfpfcnvrt+7,w
 13697  0A42  0021               	movlb	1	; select bank1
 13698  0A43  00B8               	movwf	(vfpfcnvrt@llu+7)^(0+128)
 13699  0A44  0020               	movlb	0	; select bank0
 13700  0A45  0861               	movf	??_vfpfcnvrt+6,w
 13701  0A46  0021               	movlb	1	; select bank1
 13702  0A47  00B7               	movwf	(vfpfcnvrt@llu+6)^(0+128)
 13703  0A48  0020               	movlb	0	; select bank0
 13704  0A49  0860               	movf	??_vfpfcnvrt+5,w
 13705  0A4A  0021               	movlb	1	; select bank1
 13706  0A4B  00B6               	movwf	(vfpfcnvrt@llu+5)^(0+128)
 13707  0A4C  0020               	movlb	0	; select bank0
 13708  0A4D  085F               	movf	??_vfpfcnvrt+4,w
 13709  0A4E  0021               	movlb	1	; select bank1
 13710  0A4F  00B5               	movwf	(vfpfcnvrt@llu+4)^(0+128)
 13711  0A50  0020               	movlb	0	; select bank0
 13712  0A51  085E               	movf	??_vfpfcnvrt+3,w
 13713  0A52  0021               	movlb	1	; select bank1
 13714  0A53  00B4               	movwf	(vfpfcnvrt@llu+3)^(0+128)
 13715  0A54  0020               	movlb	0	; select bank0
 13716  0A55  085D               	movf	??_vfpfcnvrt+2,w
 13717  0A56  0021               	movlb	1	; select bank1
 13718  0A57  00B3               	movwf	(vfpfcnvrt@llu+2)^(0+128)
 13719  0A58  0020               	movlb	0	; select bank0
 13720  0A59  085C               	movf	??_vfpfcnvrt+1,w
 13721  0A5A  0021               	movlb	1	; select bank1
 13722  0A5B  00B2               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 13723  0A5C  0020               	movlb	0	; select bank0
 13724  0A5D  085B               	movf	??_vfpfcnvrt,w
 13725  0A5E  0021               	movlb	1	; select bank1
 13726  0A5F  00B1               	movwf	vfpfcnvrt@llu^(0+128)
 13727                           
 13728                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
 13729  0A60  0020               	movlb	0	; select bank0
 13730  0A61  0858               	movf	vfpfcnvrt@fp+1,w
 13731  0A62  00B1               	movwf	xtoa@fp+1
 13732  0A63  0857               	movf	vfpfcnvrt@fp,w
 13733  0A64  00B0               	movwf	xtoa@fp
 13734  0A65  0021               	movlb	1	; select bank1
 13735  0A66  0831               	movf	vfpfcnvrt@llu^(0+128),w
 13736  0A67  0020               	movlb	0	; select bank0
 13737  0A68  00B2               	movwf	xtoa@d
 13738  0A69  0021               	movlb	1	; select bank1
 13739  0A6A  0832               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 13740  0A6B  0020               	movlb	0	; select bank0
 13741  0A6C  00B3               	movwf	xtoa@d+1
 13742  0A6D  0021               	movlb	1	; select bank1
 13743  0A6E  0833               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 13744  0A6F  0020               	movlb	0	; select bank0
 13745  0A70  00B4               	movwf	xtoa@d+2
 13746  0A71  0021               	movlb	1	; select bank1
 13747  0A72  0834               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 13748  0A73  0020               	movlb	0	; select bank0
 13749  0A74  00B5               	movwf	xtoa@d+3
 13750  0A75  0021               	movlb	1	; select bank1
 13751  0A76  0835               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 13752  0A77  0020               	movlb	0	; select bank0
 13753  0A78  00B6               	movwf	xtoa@d+4
 13754  0A79  0021               	movlb	1	; select bank1
 13755  0A7A  0836               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 13756  0A7B  0020               	movlb	0	; select bank0
 13757  0A7C  00B7               	movwf	xtoa@d+5
 13758  0A7D  0021               	movlb	1	; select bank1
 13759  0A7E  0837               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 13760  0A7F  0020               	movlb	0	; select bank0
 13761  0A80  00B8               	movwf	xtoa@d+6
 13762  0A81  0021               	movlb	1	; select bank1
 13763  0A82  0838               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 13764  0A83  0020               	movlb	0	; select bank0
 13765  0A84  00B9               	movwf	xtoa@d+7
 13766  0A85  3078               	movlw	120
 13767  0A86  00DB               	movwf	??_vfpfcnvrt
 13768  0A87  085B               	movf	??_vfpfcnvrt,w
 13769  0A88  00BA               	movwf	xtoa@x
 13770  0A89  3181  21FA         	fcall	_xtoa
 13771  0A8B  0020               	movlb	0	; select bank0
 13772  0A8C  0831               	movf	?_xtoa+1,w
 13773  0A8D  00D8               	movwf	?_vfpfcnvrt+1
 13774  0A8E  0830               	movf	?_xtoa,w
 13775  0A8F  00D7               	movwf	?_vfpfcnvrt
 13776  0A90  0008               	return
 13777  0A91                     l4882:	
 13778                           
 13779                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 13780  0A91  0859               	movf	vfpfcnvrt@fmt,w
 13781  0A92  0086               	movwf	6
 13782  0A93  0187               	clrf	7
 13783  0A94  3F40               	moviw [0]fsr1
 13784  0A95  00DB               	movwf	??_vfpfcnvrt
 13785  0A96  3F41               	moviw [1]fsr1
 13786  0A97  00DC               	movwf	??_vfpfcnvrt+1
 13787  0A98  085B               	movf	??_vfpfcnvrt,w
 13788  0A99  0084               	movwf	4
 13789  0A9A  085C               	movf	??_vfpfcnvrt+1,w
 13790  0A9B  0085               	movwf	5
 13791  0A9C  0012               	moviw fsr0++
 13792  0A9D  3A73               	xorlw	115
 13793  0A9E  1D03               	btfss	3,2
 13794  0A9F  2AC7               	goto	l4892
 13795                           
 13796                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 13797  0AA0  0859               	movf	vfpfcnvrt@fmt,w
 13798  0AA1  0086               	movwf	6
 13799  0AA2  0187               	clrf	7
 13800  0AA3  3001               	movlw	1
 13801  0AA4  0781               	addwf	1,f
 13802  0AA5  3141               	addfsr 1,1
 13803  0AA6  1803               	skipnc
 13804  0AA7  0A81               	incf	1,f
 13805                           
 13806                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 13807  0AA8  085A               	movf	vfpfcnvrt@ap,w
 13808  0AA9  0086               	movwf	6
 13809  0AAA  0187               	clrf	7
 13810  0AAB  3F40               	moviw [0]fsr1
 13811  0AAC  0084               	movwf	4
 13812  0AAD  0185               	clrf	5
 13813  0AAE  0A81               	incf	1,f
 13814  0AAF  0800               	movf	0,w
 13815  0AB0  00DB               	movwf	??_vfpfcnvrt
 13816  0AB1  085B               	movf	??_vfpfcnvrt,w
 13817  0AB2  0021               	movlb	1	; select bank1
 13818  0AB3  00A0               	movwf	vfpfcnvrt@cp^(0+128)
 13819                           
 13820                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 13821  0AB4  0020               	movlb	0	; select bank0
 13822  0AB5  0858               	movf	vfpfcnvrt@fp+1,w
 13823  0AB6  00A1               	movwf	stoa@fp+1
 13824  0AB7  0857               	movf	vfpfcnvrt@fp,w
 13825  0AB8  00A0               	movwf	stoa@fp
 13826  0AB9  0021               	movlb	1	; select bank1
 13827  0ABA  0820               	movf	vfpfcnvrt@cp^(0+128),w
 13828  0ABB  0020               	movlb	0	; select bank0
 13829  0ABC  00DB               	movwf	??_vfpfcnvrt
 13830  0ABD  085B               	movf	??_vfpfcnvrt,w
 13831  0ABE  00A2               	movwf	stoa@s
 13832  0ABF  3192  22F1         	fcall	_stoa
 13833  0AC1  0020               	movlb	0	; select bank0
 13834  0AC2  0821               	movf	?_stoa+1,w
 13835  0AC3  00D8               	movwf	?_vfpfcnvrt+1
 13836  0AC4  0820               	movf	?_stoa,w
 13837  0AC5  00D7               	movwf	?_vfpfcnvrt
 13838  0AC6  0008               	return
 13839  0AC7                     l4892:	
 13840                           
 13841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
 13842  0AC7  0859               	movf	vfpfcnvrt@fmt,w
 13843  0AC8  0086               	movwf	6
 13844  0AC9  0187               	clrf	7
 13845  0ACA  3F40               	moviw [0]fsr1
 13846  0ACB  00F1               	movwf	strncmp@_l
 13847  0ACC  3F41               	moviw [1]fsr1
 13848  0ACD  00F2               	movwf	strncmp@_l+1
 13849  0ACE  30A6               	movlw	low (STR_84| (0+32768))
 13850  0ACF  00F3               	movwf	strncmp@_r
 13851  0AD0  30A1               	movlw	high (STR_84| (0+32768))
 13852  0AD1  00F4               	movwf	strncmp@_r+1
 13853  0AD2  3003               	movlw	3
 13854  0AD3  00F5               	movwf	strncmp@n
 13855  0AD4  3000               	movlw	0
 13856  0AD5  00F6               	movwf	strncmp@n+1
 13857  0AD6  319D  2544  3188   	fcall	_strncmp
 13858  0AD9  0871               	movf	?_strncmp,w
 13859  0ADA  0472               	iorwf	?_strncmp+1,w
 13860  0ADB  1D03               	btfss	3,2
 13861  0ADC  2B25               	goto	l4902
 13862                           
 13863                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
 13864  0ADD  0020               	movlb	0	; select bank0
 13865  0ADE  0859               	movf	vfpfcnvrt@fmt,w
 13866  0ADF  0086               	movwf	6
 13867  0AE0  0187               	clrf	7
 13868  0AE1  3003               	movlw	3
 13869  0AE2  0781               	addwf	1,f
 13870  0AE3  3141               	addfsr 1,1
 13871  0AE4  1803               	skipnc
 13872  0AE5  0A81               	incf	1,f
 13873                           
 13874                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 13875  0AE6  085A               	movf	vfpfcnvrt@ap,w
 13876  0AE7  0086               	movwf	6
 13877  0AE8  0187               	clrf	7
 13878  0AE9  0801               	movf	1,w
 13879  0AEA  0084               	movwf	4
 13880  0AEB  0185               	clrf	5
 13881  0AEC  3002               	movlw	2
 13882  0AED  0781               	addwf	1,f
 13883  0AEE  0800               	movf	0,w
 13884  0AEF  0021               	movlb	1	; select bank1
 13885  0AF0  00B1               	movwf	vfpfcnvrt@llu^(0+128)
 13886  0AF1  01B2               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 13887  0AF2  01B3               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 13888  0AF3  01B4               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 13889  0AF4  01B5               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 13890  0AF5  01B6               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 13891  0AF6  01B7               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 13892  0AF7  01B8               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 13893                           
 13894                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
 13895  0AF8  0020               	movlb	0	; select bank0
 13896  0AF9  0858               	movf	vfpfcnvrt@fp+1,w
 13897  0AFA  00B1               	movwf	utoa@fp+1
 13898  0AFB  0857               	movf	vfpfcnvrt@fp,w
 13899  0AFC  00B0               	movwf	utoa@fp
 13900  0AFD  0021               	movlb	1	; select bank1
 13901  0AFE  0831               	movf	vfpfcnvrt@llu^(0+128),w
 13902  0AFF  0020               	movlb	0	; select bank0
 13903  0B00  00B2               	movwf	utoa@d
 13904  0B01  0021               	movlb	1	; select bank1
 13905  0B02  0832               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 13906  0B03  0020               	movlb	0	; select bank0
 13907  0B04  00B3               	movwf	utoa@d+1
 13908  0B05  0021               	movlb	1	; select bank1
 13909  0B06  0833               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 13910  0B07  0020               	movlb	0	; select bank0
 13911  0B08  00B4               	movwf	utoa@d+2
 13912  0B09  0021               	movlb	1	; select bank1
 13913  0B0A  0834               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 13914  0B0B  0020               	movlb	0	; select bank0
 13915  0B0C  00B5               	movwf	utoa@d+3
 13916  0B0D  0021               	movlb	1	; select bank1
 13917  0B0E  0835               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 13918  0B0F  0020               	movlb	0	; select bank0
 13919  0B10  00B6               	movwf	utoa@d+4
 13920  0B11  0021               	movlb	1	; select bank1
 13921  0B12  0836               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 13922  0B13  0020               	movlb	0	; select bank0
 13923  0B14  00B7               	movwf	utoa@d+5
 13924  0B15  0021               	movlb	1	; select bank1
 13925  0B16  0837               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 13926  0B17  0020               	movlb	0	; select bank0
 13927  0B18  00B8               	movwf	utoa@d+6
 13928  0B19  0021               	movlb	1	; select bank1
 13929  0B1A  0838               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 13930  0B1B  0020               	movlb	0	; select bank0
 13931  0B1C  00B9               	movwf	utoa@d+7
 13932  0B1D  3196  262E         	fcall	_utoa
 13933  0B1F  0020               	movlb	0	; select bank0
 13934  0B20  0831               	movf	?_utoa+1,w
 13935  0B21  00D8               	movwf	?_vfpfcnvrt+1
 13936  0B22  0830               	movf	?_utoa,w
 13937  0B23  00D7               	movwf	?_vfpfcnvrt
 13938  0B24  0008               	return
 13939  0B25                     l4902:	
 13940                           
 13941                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
 13942  0B25  0020               	movlb	0	; select bank0
 13943  0B26  0859               	movf	vfpfcnvrt@fmt,w
 13944  0B27  0086               	movwf	6
 13945  0B28  0187               	clrf	7
 13946  0B29  3F40               	moviw [0]fsr1
 13947  0B2A  00F1               	movwf	strncmp@_l
 13948  0B2B  3F41               	moviw [1]fsr1
 13949  0B2C  00F2               	movwf	strncmp@_l+1
 13950  0B2D  30A7               	movlw	low ((STR_84+1)| (0+32768))
 13951  0B2E  00F3               	movwf	strncmp@_r
 13952  0B2F  30A1               	movlw	high ((STR_84+1)| (0+32768))
 13953  0B30  00F4               	movwf	strncmp@_r+1
 13954  0B31  3002               	movlw	2
 13955  0B32  00F5               	movwf	strncmp@n
 13956  0B33  3000               	movlw	0
 13957  0B34  00F6               	movwf	strncmp@n+1
 13958  0B35  319D  2544  3188   	fcall	_strncmp
 13959  0B38  0871               	movf	?_strncmp,w
 13960  0B39  0472               	iorwf	?_strncmp+1,w
 13961  0B3A  1D03               	btfss	3,2
 13962  0B3B  2B85               	goto	l4912
 13963                           
 13964                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
 13965  0B3C  0020               	movlb	0	; select bank0
 13966  0B3D  0859               	movf	vfpfcnvrt@fmt,w
 13967  0B3E  0086               	movwf	6
 13968  0B3F  0187               	clrf	7
 13969  0B40  3002               	movlw	2
 13970  0B41  0781               	addwf	1,f
 13971  0B42  3141               	addfsr 1,1
 13972  0B43  1803               	skipnc
 13973  0B44  0A81               	incf	1,f
 13974                           
 13975                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 13976  0B45  085A               	movf	vfpfcnvrt@ap,w
 13977  0B46  0086               	movwf	6
 13978  0B47  0187               	clrf	7
 13979  0B48  0801               	movf	1,w
 13980  0B49  0084               	movwf	4
 13981  0B4A  0185               	clrf	5
 13982  0B4B  3002               	movlw	2
 13983  0B4C  0781               	addwf	1,f
 13984  0B4D  3F00               	moviw [0]fsr0
 13985  0B4E  0021               	movlb	1	; select bank1
 13986  0B4F  00B1               	movwf	vfpfcnvrt@llu^(0+128)
 13987  0B50  3F01               	moviw [1]fsr0
 13988  0B51  00B2               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 13989  0B52  01B3               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 13990  0B53  01B4               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 13991  0B54  01B5               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 13992  0B55  01B6               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 13993  0B56  01B7               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 13994  0B57  01B8               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 13995                           
 13996                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1177:      
      +                                 return utoa(fp, llu);
 13997  0B58  0020               	movlb	0	; select bank0
 13998  0B59  0858               	movf	vfpfcnvrt@fp+1,w
 13999  0B5A  00B1               	movwf	utoa@fp+1
 14000  0B5B  0857               	movf	vfpfcnvrt@fp,w
 14001  0B5C  00B0               	movwf	utoa@fp
 14002  0B5D  0021               	movlb	1	; select bank1
 14003  0B5E  0831               	movf	vfpfcnvrt@llu^(0+128),w
 14004  0B5F  0020               	movlb	0	; select bank0
 14005  0B60  00B2               	movwf	utoa@d
 14006  0B61  0021               	movlb	1	; select bank1
 14007  0B62  0832               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 14008  0B63  0020               	movlb	0	; select bank0
 14009  0B64  00B3               	movwf	utoa@d+1
 14010  0B65  0021               	movlb	1	; select bank1
 14011  0B66  0833               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 14012  0B67  0020               	movlb	0	; select bank0
 14013  0B68  00B4               	movwf	utoa@d+2
 14014  0B69  0021               	movlb	1	; select bank1
 14015  0B6A  0834               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 14016  0B6B  0020               	movlb	0	; select bank0
 14017  0B6C  00B5               	movwf	utoa@d+3
 14018  0B6D  0021               	movlb	1	; select bank1
 14019  0B6E  0835               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 14020  0B6F  0020               	movlb	0	; select bank0
 14021  0B70  00B6               	movwf	utoa@d+4
 14022  0B71  0021               	movlb	1	; select bank1
 14023  0B72  0836               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 14024  0B73  0020               	movlb	0	; select bank0
 14025  0B74  00B7               	movwf	utoa@d+5
 14026  0B75  0021               	movlb	1	; select bank1
 14027  0B76  0837               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 14028  0B77  0020               	movlb	0	; select bank0
 14029  0B78  00B8               	movwf	utoa@d+6
 14030  0B79  0021               	movlb	1	; select bank1
 14031  0B7A  0838               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 14032  0B7B  0020               	movlb	0	; select bank0
 14033  0B7C  00B9               	movwf	utoa@d+7
 14034  0B7D  3196  262E         	fcall	_utoa
 14035  0B7F  0020               	movlb	0	; select bank0
 14036  0B80  0831               	movf	?_utoa+1,w
 14037  0B81  00D8               	movwf	?_vfpfcnvrt+1
 14038  0B82  0830               	movf	?_utoa,w
 14039  0B83  00D7               	movwf	?_vfpfcnvrt
 14040  0B84  0008               	return
 14041  0B85                     l4912:	
 14042                           
 14043                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 14044  0B85  0020               	movlb	0	; select bank0
 14045  0B86  0859               	movf	vfpfcnvrt@fmt,w
 14046  0B87  0086               	movwf	6
 14047  0B88  0187               	clrf	7
 14048  0B89  3F40               	moviw [0]fsr1
 14049  0B8A  00DB               	movwf	??_vfpfcnvrt
 14050  0B8B  3F41               	moviw [1]fsr1
 14051  0B8C  00DC               	movwf	??_vfpfcnvrt+1
 14052  0B8D  085B               	movf	??_vfpfcnvrt,w
 14053  0B8E  0084               	movwf	4
 14054  0B8F  085C               	movf	??_vfpfcnvrt+1,w
 14055  0B90  0085               	movwf	5
 14056  0B91  0012               	moviw fsr0++
 14057  0B92  3A75               	xorlw	117
 14058  0B93  1D03               	btfss	3,2
 14059  0B94  2BDD               	goto	l4922
 14060                           
 14061                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 14062  0B95  0859               	movf	vfpfcnvrt@fmt,w
 14063  0B96  0086               	movwf	6
 14064  0B97  0187               	clrf	7
 14065  0B98  3001               	movlw	1
 14066  0B99  0781               	addwf	1,f
 14067  0B9A  3141               	addfsr 1,1
 14068  0B9B  1803               	skipnc
 14069  0B9C  0A81               	incf	1,f
 14070                           
 14071                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 14072  0B9D  085A               	movf	vfpfcnvrt@ap,w
 14073  0B9E  0086               	movwf	6
 14074  0B9F  0187               	clrf	7
 14075  0BA0  0801               	movf	1,w
 14076  0BA1  0084               	movwf	4
 14077  0BA2  0185               	clrf	5
 14078  0BA3  3002               	movlw	2
 14079  0BA4  0781               	addwf	1,f
 14080  0BA5  3F00               	moviw [0]fsr0
 14081  0BA6  0021               	movlb	1	; select bank1
 14082  0BA7  00B1               	movwf	vfpfcnvrt@llu^(0+128)
 14083  0BA8  3F01               	moviw [1]fsr0
 14084  0BA9  00B2               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 14085  0BAA  01B3               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 14086  0BAB  01B4               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 14087  0BAC  01B5               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 14088  0BAD  01B6               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 14089  0BAE  01B7               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 14090  0BAF  01B8               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 14091                           
 14092                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 14093  0BB0  0020               	movlb	0	; select bank0
 14094  0BB1  0858               	movf	vfpfcnvrt@fp+1,w
 14095  0BB2  00B1               	movwf	utoa@fp+1
 14096  0BB3  0857               	movf	vfpfcnvrt@fp,w
 14097  0BB4  00B0               	movwf	utoa@fp
 14098  0BB5  0021               	movlb	1	; select bank1
 14099  0BB6  0831               	movf	vfpfcnvrt@llu^(0+128),w
 14100  0BB7  0020               	movlb	0	; select bank0
 14101  0BB8  00B2               	movwf	utoa@d
 14102  0BB9  0021               	movlb	1	; select bank1
 14103  0BBA  0832               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 14104  0BBB  0020               	movlb	0	; select bank0
 14105  0BBC  00B3               	movwf	utoa@d+1
 14106  0BBD  0021               	movlb	1	; select bank1
 14107  0BBE  0833               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 14108  0BBF  0020               	movlb	0	; select bank0
 14109  0BC0  00B4               	movwf	utoa@d+2
 14110  0BC1  0021               	movlb	1	; select bank1
 14111  0BC2  0834               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 14112  0BC3  0020               	movlb	0	; select bank0
 14113  0BC4  00B5               	movwf	utoa@d+3
 14114  0BC5  0021               	movlb	1	; select bank1
 14115  0BC6  0835               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 14116  0BC7  0020               	movlb	0	; select bank0
 14117  0BC8  00B6               	movwf	utoa@d+4
 14118  0BC9  0021               	movlb	1	; select bank1
 14119  0BCA  0836               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 14120  0BCB  0020               	movlb	0	; select bank0
 14121  0BCC  00B7               	movwf	utoa@d+5
 14122  0BCD  0021               	movlb	1	; select bank1
 14123  0BCE  0837               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 14124  0BCF  0020               	movlb	0	; select bank0
 14125  0BD0  00B8               	movwf	utoa@d+6
 14126  0BD1  0021               	movlb	1	; select bank1
 14127  0BD2  0838               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 14128  0BD3  0020               	movlb	0	; select bank0
 14129  0BD4  00B9               	movwf	utoa@d+7
 14130  0BD5  3196  262E         	fcall	_utoa
 14131  0BD7  0020               	movlb	0	; select bank0
 14132  0BD8  0831               	movf	?_utoa+1,w
 14133  0BD9  00D8               	movwf	?_vfpfcnvrt+1
 14134  0BDA  0830               	movf	?_utoa,w
 14135  0BDB  00D7               	movwf	?_vfpfcnvrt
 14136  0BDC  0008               	return
 14137  0BDD                     l4922:	
 14138                           
 14139                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1192:      
      +                             if (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 14140  0BDD  0859               	movf	vfpfcnvrt@fmt,w
 14141  0BDE  0086               	movwf	6
 14142  0BDF  0187               	clrf	7
 14143  0BE0  3F40               	moviw [0]fsr1
 14144  0BE1  00F1               	movwf	strncmp@_l
 14145  0BE2  3F41               	moviw [1]fsr1
 14146  0BE3  00F2               	movwf	strncmp@_l+1
 14147  0BE4  30CC               	movlw	low (STR_94| (0+32768))
 14148  0BE5  00F3               	movwf	strncmp@_r
 14149  0BE6  30A1               	movlw	high (STR_94| (0+32768))
 14150  0BE7  00F4               	movwf	strncmp@_r+1
 14151  0BE8  3002               	movlw	2
 14152  0BE9  00F5               	movwf	strncmp@n
 14153  0BEA  3000               	movlw	0
 14154  0BEB  00F6               	movwf	strncmp@n+1
 14155  0BEC  319D  2544  3188   	fcall	_strncmp
 14156  0BEF  0871               	movf	?_strncmp,w
 14157  0BF0  0472               	iorwf	?_strncmp+1,w
 14158  0BF1  1D03               	btfss	3,2
 14159  0BF2  2C64               	goto	l4932
 14160                           
 14161                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1194:      
      +                                 *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
 14162  0BF3  0020               	movlb	0	; select bank0
 14163  0BF4  0859               	movf	vfpfcnvrt@fmt,w
 14164  0BF5  0086               	movwf	6
 14165  0BF6  0187               	clrf	7
 14166  0BF7  3002               	movlw	2
 14167  0BF8  0781               	addwf	1,f
 14168  0BF9  3141               	addfsr 1,1
 14169  0BFA  1803               	skipnc
 14170  0BFB  0A81               	incf	1,f
 14171                           
 14172                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1195:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 14173  0BFC  085A               	movf	vfpfcnvrt@ap,w
 14174  0BFD  0086               	movwf	6
 14175  0BFE  0187               	clrf	7
 14176  0BFF  0801               	movf	1,w
 14177  0C00  0084               	movwf	4
 14178  0C01  0185               	clrf	5
 14179  0C02  3004               	movlw	4
 14180  0C03  0781               	addwf	1,f
 14181  0C04  3F00               	moviw [0]fsr0
 14182  0C05  00DB               	movwf	??_vfpfcnvrt
 14183  0C06  3F01               	moviw [1]fsr0
 14184  0C07  00DC               	movwf	??_vfpfcnvrt+1
 14185  0C08  3F02               	moviw [2]fsr0
 14186  0C09  00DD               	movwf	??_vfpfcnvrt+2
 14187  0C0A  3F03               	moviw [3]fsr0
 14188  0C0B  00DE               	movwf	??_vfpfcnvrt+3
 14189  0C0C  085B               	movf	??_vfpfcnvrt,w
 14190  0C0D  00DF               	movwf	??_vfpfcnvrt+4
 14191  0C0E  085C               	movf	??_vfpfcnvrt+1,w
 14192  0C0F  00E0               	movwf	??_vfpfcnvrt+5
 14193  0C10  085D               	movf	??_vfpfcnvrt+2,w
 14194  0C11  00E1               	movwf	??_vfpfcnvrt+6
 14195  0C12  085E               	movf	??_vfpfcnvrt+3,w
 14196  0C13  00E2               	movwf	??_vfpfcnvrt+7
 14197  0C14  01E3               	clrf	??_vfpfcnvrt+8
 14198  0C15  01E4               	clrf	??_vfpfcnvrt+9
 14199  0C16  01E5               	clrf	??_vfpfcnvrt+10
 14200  0C17  01E6               	clrf	??_vfpfcnvrt+11
 14201  0C18  0866               	movf	??_vfpfcnvrt+11,w
 14202  0C19  0021               	movlb	1	; select bank1
 14203  0C1A  00B8               	movwf	(vfpfcnvrt@llu+7)^(0+128)
 14204  0C1B  0020               	movlb	0	; select bank0
 14205  0C1C  0865               	movf	??_vfpfcnvrt+10,w
 14206  0C1D  0021               	movlb	1	; select bank1
 14207  0C1E  00B7               	movwf	(vfpfcnvrt@llu+6)^(0+128)
 14208  0C1F  0020               	movlb	0	; select bank0
 14209  0C20  0864               	movf	??_vfpfcnvrt+9,w
 14210  0C21  0021               	movlb	1	; select bank1
 14211  0C22  00B6               	movwf	(vfpfcnvrt@llu+5)^(0+128)
 14212  0C23  0020               	movlb	0	; select bank0
 14213  0C24  0863               	movf	??_vfpfcnvrt+8,w
 14214  0C25  0021               	movlb	1	; select bank1
 14215  0C26  00B5               	movwf	(vfpfcnvrt@llu+4)^(0+128)
 14216  0C27  0020               	movlb	0	; select bank0
 14217  0C28  0862               	movf	??_vfpfcnvrt+7,w
 14218  0C29  0021               	movlb	1	; select bank1
 14219  0C2A  00B4               	movwf	(vfpfcnvrt@llu+3)^(0+128)
 14220  0C2B  0020               	movlb	0	; select bank0
 14221  0C2C  0861               	movf	??_vfpfcnvrt+6,w
 14222  0C2D  0021               	movlb	1	; select bank1
 14223  0C2E  00B3               	movwf	(vfpfcnvrt@llu+2)^(0+128)
 14224  0C2F  0020               	movlb	0	; select bank0
 14225  0C30  0860               	movf	??_vfpfcnvrt+5,w
 14226  0C31  0021               	movlb	1	; select bank1
 14227  0C32  00B2               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 14228  0C33  0020               	movlb	0	; select bank0
 14229  0C34  085F               	movf	??_vfpfcnvrt+4,w
 14230  0C35  0021               	movlb	1	; select bank1
 14231  0C36  00B1               	movwf	vfpfcnvrt@llu^(0+128)
 14232                           
 14233                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1197:      
      +                                 return utoa(fp, llu);
 14234  0C37  0020               	movlb	0	; select bank0
 14235  0C38  0858               	movf	vfpfcnvrt@fp+1,w
 14236  0C39  00B1               	movwf	utoa@fp+1
 14237  0C3A  0857               	movf	vfpfcnvrt@fp,w
 14238  0C3B  00B0               	movwf	utoa@fp
 14239  0C3C  0021               	movlb	1	; select bank1
 14240  0C3D  0831               	movf	vfpfcnvrt@llu^(0+128),w
 14241  0C3E  0020               	movlb	0	; select bank0
 14242  0C3F  00B2               	movwf	utoa@d
 14243  0C40  0021               	movlb	1	; select bank1
 14244  0C41  0832               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 14245  0C42  0020               	movlb	0	; select bank0
 14246  0C43  00B3               	movwf	utoa@d+1
 14247  0C44  0021               	movlb	1	; select bank1
 14248  0C45  0833               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 14249  0C46  0020               	movlb	0	; select bank0
 14250  0C47  00B4               	movwf	utoa@d+2
 14251  0C48  0021               	movlb	1	; select bank1
 14252  0C49  0834               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 14253  0C4A  0020               	movlb	0	; select bank0
 14254  0C4B  00B5               	movwf	utoa@d+3
 14255  0C4C  0021               	movlb	1	; select bank1
 14256  0C4D  0835               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 14257  0C4E  0020               	movlb	0	; select bank0
 14258  0C4F  00B6               	movwf	utoa@d+4
 14259  0C50  0021               	movlb	1	; select bank1
 14260  0C51  0836               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 14261  0C52  0020               	movlb	0	; select bank0
 14262  0C53  00B7               	movwf	utoa@d+5
 14263  0C54  0021               	movlb	1	; select bank1
 14264  0C55  0837               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 14265  0C56  0020               	movlb	0	; select bank0
 14266  0C57  00B8               	movwf	utoa@d+6
 14267  0C58  0021               	movlb	1	; select bank1
 14268  0C59  0838               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 14269  0C5A  0020               	movlb	0	; select bank0
 14270  0C5B  00B9               	movwf	utoa@d+7
 14271  0C5C  3196  262E         	fcall	_utoa
 14272  0C5E  0020               	movlb	0	; select bank0
 14273  0C5F  0831               	movf	?_utoa+1,w
 14274  0C60  00D8               	movwf	?_vfpfcnvrt+1
 14275  0C61  0830               	movf	?_utoa,w
 14276  0C62  00D7               	movwf	?_vfpfcnvrt
 14277  0C63  0008               	return
 14278  0C64                     l4932:	
 14279                           
 14280                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
 14281  0C64  0020               	movlb	0	; select bank0
 14282  0C65  0859               	movf	vfpfcnvrt@fmt,w
 14283  0C66  0086               	movwf	6
 14284  0C67  0187               	clrf	7
 14285  0C68  3F40               	moviw [0]fsr1
 14286  0C69  00F1               	movwf	strncmp@_l
 14287  0C6A  3F41               	moviw [1]fsr1
 14288  0C6B  00F2               	movwf	strncmp@_l+1
 14289  0C6C  30CF               	movlw	low (STR_99| (0+32768))
 14290  0C6D  00F3               	movwf	strncmp@_r
 14291  0C6E  30A1               	movlw	high (STR_99| (0+32768))
 14292  0C6F  00F4               	movwf	strncmp@_r+1
 14293  0C70  3002               	movlw	2
 14294  0C71  00F5               	movwf	strncmp@n
 14295  0C72  3000               	movlw	0
 14296  0C73  00F6               	movwf	strncmp@n+1
 14297  0C74  319D  2544  3188   	fcall	_strncmp
 14298  0C77  0871               	movf	?_strncmp,w
 14299  0C78  0472               	iorwf	?_strncmp+1,w
 14300  0C79  1D03               	btfss	3,2
 14301  0C7A  2CC4               	goto	l4942
 14302                           
 14303                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
 14304  0C7B  0020               	movlb	0	; select bank0
 14305  0C7C  0859               	movf	vfpfcnvrt@fmt,w
 14306  0C7D  0086               	movwf	6
 14307  0C7E  0187               	clrf	7
 14308  0C7F  3002               	movlw	2
 14309  0C80  0781               	addwf	1,f
 14310  0C81  3141               	addfsr 1,1
 14311  0C82  1803               	skipnc
 14312  0C83  0A81               	incf	1,f
 14313                           
 14314                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 14315  0C84  085A               	movf	vfpfcnvrt@ap,w
 14316  0C85  0086               	movwf	6
 14317  0C86  0187               	clrf	7
 14318  0C87  0801               	movf	1,w
 14319  0C88  0084               	movwf	4
 14320  0C89  0185               	clrf	5
 14321  0C8A  3002               	movlw	2
 14322  0C8B  0781               	addwf	1,f
 14323  0C8C  3F00               	moviw [0]fsr0
 14324  0C8D  0021               	movlb	1	; select bank1
 14325  0C8E  00B1               	movwf	vfpfcnvrt@llu^(0+128)
 14326  0C8F  3F01               	moviw [1]fsr0
 14327  0C90  00B2               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 14328  0C91  01B3               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 14329  0C92  01B4               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 14330  0C93  01B5               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 14331  0C94  01B6               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 14332  0C95  01B7               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 14333  0C96  01B8               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 14334                           
 14335                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1241:      
      +                                 return utoa(fp, llu);
 14336  0C97  0020               	movlb	0	; select bank0
 14337  0C98  0858               	movf	vfpfcnvrt@fp+1,w
 14338  0C99  00B1               	movwf	utoa@fp+1
 14339  0C9A  0857               	movf	vfpfcnvrt@fp,w
 14340  0C9B  00B0               	movwf	utoa@fp
 14341  0C9C  0021               	movlb	1	; select bank1
 14342  0C9D  0831               	movf	vfpfcnvrt@llu^(0+128),w
 14343  0C9E  0020               	movlb	0	; select bank0
 14344  0C9F  00B2               	movwf	utoa@d
 14345  0CA0  0021               	movlb	1	; select bank1
 14346  0CA1  0832               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 14347  0CA2  0020               	movlb	0	; select bank0
 14348  0CA3  00B3               	movwf	utoa@d+1
 14349  0CA4  0021               	movlb	1	; select bank1
 14350  0CA5  0833               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 14351  0CA6  0020               	movlb	0	; select bank0
 14352  0CA7  00B4               	movwf	utoa@d+2
 14353  0CA8  0021               	movlb	1	; select bank1
 14354  0CA9  0834               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 14355  0CAA  0020               	movlb	0	; select bank0
 14356  0CAB  00B5               	movwf	utoa@d+3
 14357  0CAC  0021               	movlb	1	; select bank1
 14358  0CAD  0835               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 14359  0CAE  0020               	movlb	0	; select bank0
 14360  0CAF  00B6               	movwf	utoa@d+4
 14361  0CB0  0021               	movlb	1	; select bank1
 14362  0CB1  0836               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 14363  0CB2  0020               	movlb	0	; select bank0
 14364  0CB3  00B7               	movwf	utoa@d+5
 14365  0CB4  0021               	movlb	1	; select bank1
 14366  0CB5  0837               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 14367  0CB6  0020               	movlb	0	; select bank0
 14368  0CB7  00B8               	movwf	utoa@d+6
 14369  0CB8  0021               	movlb	1	; select bank1
 14370  0CB9  0838               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 14371  0CBA  0020               	movlb	0	; select bank0
 14372  0CBB  00B9               	movwf	utoa@d+7
 14373  0CBC  3196  262E         	fcall	_utoa
 14374  0CBE  0020               	movlb	0	; select bank0
 14375  0CBF  0831               	movf	?_utoa+1,w
 14376  0CC0  00D8               	movwf	?_vfpfcnvrt+1
 14377  0CC1  0830               	movf	?_utoa,w
 14378  0CC2  00D7               	movwf	?_vfpfcnvrt
 14379  0CC3  0008               	return
 14380  0CC4                     l4942:	
 14381                           
 14382                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
 14383  0CC4  0020               	movlb	0	; select bank0
 14384  0CC5  0859               	movf	vfpfcnvrt@fmt,w
 14385  0CC6  0086               	movwf	6
 14386  0CC7  0187               	clrf	7
 14387  0CC8  3F40               	moviw [0]fsr1
 14388  0CC9  00F1               	movwf	strncmp@_l
 14389  0CCA  3F41               	moviw [1]fsr1
 14390  0CCB  00F2               	movwf	strncmp@_l+1
 14391  0CCC  30AA               	movlw	low (STR_104| (0+32768))
 14392  0CCD  00F3               	movwf	strncmp@_r
 14393  0CCE  30A1               	movlw	high (STR_104| (0+32768))
 14394  0CCF  00F4               	movwf	strncmp@_r+1
 14395  0CD0  3003               	movlw	3
 14396  0CD1  00F5               	movwf	strncmp@n
 14397  0CD2  3000               	movlw	0
 14398  0CD3  00F6               	movwf	strncmp@n+1
 14399  0CD4  319D  2544  3188   	fcall	_strncmp
 14400  0CD7  0871               	movf	?_strncmp,w
 14401  0CD8  0472               	iorwf	?_strncmp+1,w
 14402  0CD9  1903               	btfsc	3,2
 14403  0CDA  2CF2               	goto	l4946
 14404  0CDB  0020               	movlb	0	; select bank0
 14405  0CDC  0859               	movf	vfpfcnvrt@fmt,w
 14406  0CDD  0086               	movwf	6
 14407  0CDE  0187               	clrf	7
 14408  0CDF  3F40               	moviw [0]fsr1
 14409  0CE0  00F1               	movwf	strncmp@_l
 14410  0CE1  3F41               	moviw [1]fsr1
 14411  0CE2  00F2               	movwf	strncmp@_l+1
 14412  0CE3  3092               	movlw	low (STR_108| (0+32768))
 14413  0CE4  00F3               	movwf	strncmp@_r
 14414  0CE5  30A1               	movlw	high (STR_108| (0+32768))
 14415  0CE6  00F4               	movwf	strncmp@_r+1
 14416  0CE7  3003               	movlw	3
 14417  0CE8  00F5               	movwf	strncmp@n
 14418  0CE9  3000               	movlw	0
 14419  0CEA  00F6               	movwf	strncmp@n+1
 14420  0CEB  319D  2544  3188   	fcall	_strncmp
 14421  0CEE  0871               	movf	?_strncmp,w
 14422  0CEF  0472               	iorwf	?_strncmp+1,w
 14423  0CF0  1D03               	btfss	3,2
 14424  0CF1  2D54               	goto	l4956
 14425  0CF2                     l4946:	
 14426                           
 14427                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
 14428  0CF2  0020               	movlb	0	; select bank0
 14429  0CF3  0859               	movf	vfpfcnvrt@fmt,w
 14430  0CF4  0086               	movwf	6
 14431  0CF5  0187               	clrf	7
 14432  0CF6  3F40               	moviw [0]fsr1
 14433  0CF7  00DB               	movwf	??_vfpfcnvrt
 14434  0CF8  3F41               	moviw [1]fsr1
 14435  0CF9  00DC               	movwf	??_vfpfcnvrt+1
 14436  0CFA  3002               	movlw	2
 14437  0CFB  075B               	addwf	??_vfpfcnvrt,w
 14438  0CFC  0084               	movwf	4
 14439  0CFD  085C               	movf	??_vfpfcnvrt+1,w
 14440  0CFE  1803               	skipnc
 14441  0CFF  0A5C               	incf	??_vfpfcnvrt+1,w
 14442  0D00  0085               	movwf	5
 14443  0D01  0800               	movf	0,w	;code access
 14444  0D02  00DD               	movwf	??_vfpfcnvrt+2
 14445  0D03  085D               	movf	??_vfpfcnvrt+2,w
 14446  0D04  0021               	movlb	1	; select bank1
 14447  0D05  00B0               	movwf	vfpfcnvrt@c^(0+128)
 14448                           
 14449                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
 14450  0D06  0020               	movlb	0	; select bank0
 14451  0D07  0859               	movf	vfpfcnvrt@fmt,w
 14452  0D08  0086               	movwf	6
 14453  0D09  0187               	clrf	7
 14454  0D0A  3003               	movlw	3
 14455  0D0B  0781               	addwf	1,f
 14456  0D0C  3141               	addfsr 1,1
 14457  0D0D  1803               	skipnc
 14458  0D0E  0A81               	incf	1,f
 14459                           
 14460                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 14461  0D0F  085A               	movf	vfpfcnvrt@ap,w
 14462  0D10  0086               	movwf	6
 14463  0D11  0187               	clrf	7
 14464  0D12  0801               	movf	1,w
 14465  0D13  0084               	movwf	4
 14466  0D14  0185               	clrf	5
 14467  0D15  3002               	movlw	2
 14468  0D16  0781               	addwf	1,f
 14469  0D17  0800               	movf	0,w
 14470  0D18  0021               	movlb	1	; select bank1
 14471  0D19  00B1               	movwf	vfpfcnvrt@llu^(0+128)
 14472  0D1A  01B2               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 14473  0D1B  01B3               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 14474  0D1C  01B4               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 14475  0D1D  01B5               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 14476  0D1E  01B6               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 14477  0D1F  01B7               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 14478  0D20  01B8               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 14479                           
 14480                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
 14481  0D21  0020               	movlb	0	; select bank0
 14482  0D22  0858               	movf	vfpfcnvrt@fp+1,w
 14483  0D23  00B1               	movwf	xtoa@fp+1
 14484  0D24  0857               	movf	vfpfcnvrt@fp,w
 14485  0D25  00B0               	movwf	xtoa@fp
 14486  0D26  0021               	movlb	1	; select bank1
 14487  0D27  0831               	movf	vfpfcnvrt@llu^(0+128),w
 14488  0D28  0020               	movlb	0	; select bank0
 14489  0D29  00B2               	movwf	xtoa@d
 14490  0D2A  0021               	movlb	1	; select bank1
 14491  0D2B  0832               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 14492  0D2C  0020               	movlb	0	; select bank0
 14493  0D2D  00B3               	movwf	xtoa@d+1
 14494  0D2E  0021               	movlb	1	; select bank1
 14495  0D2F  0833               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 14496  0D30  0020               	movlb	0	; select bank0
 14497  0D31  00B4               	movwf	xtoa@d+2
 14498  0D32  0021               	movlb	1	; select bank1
 14499  0D33  0834               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 14500  0D34  0020               	movlb	0	; select bank0
 14501  0D35  00B5               	movwf	xtoa@d+3
 14502  0D36  0021               	movlb	1	; select bank1
 14503  0D37  0835               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 14504  0D38  0020               	movlb	0	; select bank0
 14505  0D39  00B6               	movwf	xtoa@d+4
 14506  0D3A  0021               	movlb	1	; select bank1
 14507  0D3B  0836               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 14508  0D3C  0020               	movlb	0	; select bank0
 14509  0D3D  00B7               	movwf	xtoa@d+5
 14510  0D3E  0021               	movlb	1	; select bank1
 14511  0D3F  0837               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 14512  0D40  0020               	movlb	0	; select bank0
 14513  0D41  00B8               	movwf	xtoa@d+6
 14514  0D42  0021               	movlb	1	; select bank1
 14515  0D43  0838               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 14516  0D44  0020               	movlb	0	; select bank0
 14517  0D45  00B9               	movwf	xtoa@d+7
 14518  0D46  0021               	movlb	1	; select bank1
 14519  0D47  0830               	movf	vfpfcnvrt@c^(0+128),w
 14520  0D48  0020               	movlb	0	; select bank0
 14521  0D49  00DB               	movwf	??_vfpfcnvrt
 14522  0D4A  085B               	movf	??_vfpfcnvrt,w
 14523  0D4B  00BA               	movwf	xtoa@x
 14524  0D4C  3181  21FA         	fcall	_xtoa
 14525  0D4E  0020               	movlb	0	; select bank0
 14526  0D4F  0831               	movf	?_xtoa+1,w
 14527  0D50  00D8               	movwf	?_vfpfcnvrt+1
 14528  0D51  0830               	movf	?_xtoa,w
 14529  0D52  00D7               	movwf	?_vfpfcnvrt
 14530  0D53  0008               	return
 14531  0D54                     l4956:	
 14532                           
 14533                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
 14534  0D54  0020               	movlb	0	; select bank0
 14535  0D55  0859               	movf	vfpfcnvrt@fmt,w
 14536  0D56  0086               	movwf	6
 14537  0D57  0187               	clrf	7
 14538  0D58  3F40               	moviw [0]fsr1
 14539  0D59  00F1               	movwf	strncmp@_l
 14540  0D5A  3F41               	moviw [1]fsr1
 14541  0D5B  00F2               	movwf	strncmp@_l+1
 14542  0D5C  30AB               	movlw	low ((STR_104+1)| (0+32768))
 14543  0D5D  00F3               	movwf	strncmp@_r
 14544  0D5E  30A1               	movlw	high ((STR_104+1)| (0+32768))
 14545  0D5F  00F4               	movwf	strncmp@_r+1
 14546  0D60  3002               	movlw	2
 14547  0D61  00F5               	movwf	strncmp@n
 14548  0D62  3000               	movlw	0
 14549  0D63  00F6               	movwf	strncmp@n+1
 14550  0D64  319D  2544  3188   	fcall	_strncmp
 14551  0D67  0871               	movf	?_strncmp,w
 14552  0D68  0472               	iorwf	?_strncmp+1,w
 14553  0D69  1903               	btfsc	3,2
 14554  0D6A  2D82               	goto	l4960
 14555  0D6B  0020               	movlb	0	; select bank0
 14556  0D6C  0859               	movf	vfpfcnvrt@fmt,w
 14557  0D6D  0086               	movwf	6
 14558  0D6E  0187               	clrf	7
 14559  0D6F  3F40               	moviw [0]fsr1
 14560  0D70  00F1               	movwf	strncmp@_l
 14561  0D71  3F41               	moviw [1]fsr1
 14562  0D72  00F2               	movwf	strncmp@_l+1
 14563  0D73  3093               	movlw	low ((STR_108+1)| (0+32768))
 14564  0D74  00F3               	movwf	strncmp@_r
 14565  0D75  30A1               	movlw	high ((STR_108+1)| (0+32768))
 14566  0D76  00F4               	movwf	strncmp@_r+1
 14567  0D77  3002               	movlw	2
 14568  0D78  00F5               	movwf	strncmp@n
 14569  0D79  3000               	movlw	0
 14570  0D7A  00F6               	movwf	strncmp@n+1
 14571  0D7B  319D  2544  3188   	fcall	_strncmp
 14572  0D7E  0871               	movf	?_strncmp,w
 14573  0D7F  0472               	iorwf	?_strncmp+1,w
 14574  0D80  1D03               	btfss	3,2
 14575  0D81  2DE5               	goto	l4970
 14576  0D82                     l4960:	
 14577                           
 14578                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
 14579  0D82  0020               	movlb	0	; select bank0
 14580  0D83  0859               	movf	vfpfcnvrt@fmt,w
 14581  0D84  0086               	movwf	6
 14582  0D85  0187               	clrf	7
 14583  0D86  3F40               	moviw [0]fsr1
 14584  0D87  00DB               	movwf	??_vfpfcnvrt
 14585  0D88  3F41               	moviw [1]fsr1
 14586  0D89  00DC               	movwf	??_vfpfcnvrt+1
 14587  0D8A  3001               	movlw	1
 14588  0D8B  075B               	addwf	??_vfpfcnvrt,w
 14589  0D8C  0084               	movwf	4
 14590  0D8D  085C               	movf	??_vfpfcnvrt+1,w
 14591  0D8E  1803               	skipnc
 14592  0D8F  0A5C               	incf	??_vfpfcnvrt+1,w
 14593  0D90  0085               	movwf	5
 14594  0D91  0800               	movf	0,w	;code access
 14595  0D92  00DD               	movwf	??_vfpfcnvrt+2
 14596  0D93  085D               	movf	??_vfpfcnvrt+2,w
 14597  0D94  0021               	movlb	1	; select bank1
 14598  0D95  00B0               	movwf	vfpfcnvrt@c^(0+128)
 14599                           
 14600                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
 14601  0D96  0020               	movlb	0	; select bank0
 14602  0D97  0859               	movf	vfpfcnvrt@fmt,w
 14603  0D98  0086               	movwf	6
 14604  0D99  0187               	clrf	7
 14605  0D9A  3002               	movlw	2
 14606  0D9B  0781               	addwf	1,f
 14607  0D9C  3141               	addfsr 1,1
 14608  0D9D  1803               	skipnc
 14609  0D9E  0A81               	incf	1,f
 14610                           
 14611                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 14612  0D9F  085A               	movf	vfpfcnvrt@ap,w
 14613  0DA0  0086               	movwf	6
 14614  0DA1  0187               	clrf	7
 14615  0DA2  0801               	movf	1,w
 14616  0DA3  0084               	movwf	4
 14617  0DA4  0185               	clrf	5
 14618  0DA5  3002               	movlw	2
 14619  0DA6  0781               	addwf	1,f
 14620  0DA7  3F00               	moviw [0]fsr0
 14621  0DA8  0021               	movlb	1	; select bank1
 14622  0DA9  00B1               	movwf	vfpfcnvrt@llu^(0+128)
 14623  0DAA  3F01               	moviw [1]fsr0
 14624  0DAB  00B2               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 14625  0DAC  01B3               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 14626  0DAD  01B4               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 14627  0DAE  01B5               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 14628  0DAF  01B6               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 14629  0DB0  01B7               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 14630  0DB1  01B8               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 14631                           
 14632                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1269:      
      +                                 return xtoa(fp, llu, c);
 14633  0DB2  0020               	movlb	0	; select bank0
 14634  0DB3  0858               	movf	vfpfcnvrt@fp+1,w
 14635  0DB4  00B1               	movwf	xtoa@fp+1
 14636  0DB5  0857               	movf	vfpfcnvrt@fp,w
 14637  0DB6  00B0               	movwf	xtoa@fp
 14638  0DB7  0021               	movlb	1	; select bank1
 14639  0DB8  0831               	movf	vfpfcnvrt@llu^(0+128),w
 14640  0DB9  0020               	movlb	0	; select bank0
 14641  0DBA  00B2               	movwf	xtoa@d
 14642  0DBB  0021               	movlb	1	; select bank1
 14643  0DBC  0832               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 14644  0DBD  0020               	movlb	0	; select bank0
 14645  0DBE  00B3               	movwf	xtoa@d+1
 14646  0DBF  0021               	movlb	1	; select bank1
 14647  0DC0  0833               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 14648  0DC1  0020               	movlb	0	; select bank0
 14649  0DC2  00B4               	movwf	xtoa@d+2
 14650  0DC3  0021               	movlb	1	; select bank1
 14651  0DC4  0834               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 14652  0DC5  0020               	movlb	0	; select bank0
 14653  0DC6  00B5               	movwf	xtoa@d+3
 14654  0DC7  0021               	movlb	1	; select bank1
 14655  0DC8  0835               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 14656  0DC9  0020               	movlb	0	; select bank0
 14657  0DCA  00B6               	movwf	xtoa@d+4
 14658  0DCB  0021               	movlb	1	; select bank1
 14659  0DCC  0836               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 14660  0DCD  0020               	movlb	0	; select bank0
 14661  0DCE  00B7               	movwf	xtoa@d+5
 14662  0DCF  0021               	movlb	1	; select bank1
 14663  0DD0  0837               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 14664  0DD1  0020               	movlb	0	; select bank0
 14665  0DD2  00B8               	movwf	xtoa@d+6
 14666  0DD3  0021               	movlb	1	; select bank1
 14667  0DD4  0838               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 14668  0DD5  0020               	movlb	0	; select bank0
 14669  0DD6  00B9               	movwf	xtoa@d+7
 14670  0DD7  0021               	movlb	1	; select bank1
 14671  0DD8  0830               	movf	vfpfcnvrt@c^(0+128),w
 14672  0DD9  0020               	movlb	0	; select bank0
 14673  0DDA  00DB               	movwf	??_vfpfcnvrt
 14674  0DDB  085B               	movf	??_vfpfcnvrt,w
 14675  0DDC  00BA               	movwf	xtoa@x
 14676  0DDD  3181  21FA         	fcall	_xtoa
 14677  0DDF  0020               	movlb	0	; select bank0
 14678  0DE0  0831               	movf	?_xtoa+1,w
 14679  0DE1  00D8               	movwf	?_vfpfcnvrt+1
 14680  0DE2  0830               	movf	?_xtoa,w
 14681  0DE3  00D7               	movwf	?_vfpfcnvrt
 14682  0DE4  0008               	return
 14683  0DE5                     l4970:	
 14684                           
 14685                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 14686  0DE5  0020               	movlb	0	; select bank0
 14687  0DE6  0859               	movf	vfpfcnvrt@fmt,w
 14688  0DE7  0086               	movwf	6
 14689  0DE8  0187               	clrf	7
 14690  0DE9  3F40               	moviw [0]fsr1
 14691  0DEA  00DB               	movwf	??_vfpfcnvrt
 14692  0DEB  3F41               	moviw [1]fsr1
 14693  0DEC  00DC               	movwf	??_vfpfcnvrt+1
 14694  0DED  085B               	movf	??_vfpfcnvrt,w
 14695  0DEE  0084               	movwf	4
 14696  0DEF  085C               	movf	??_vfpfcnvrt+1,w
 14697  0DF0  0085               	movwf	5
 14698  0DF1  0012               	moviw fsr0++
 14699  0DF2  3A78               	xorlw	120
 14700  0DF3  1903               	btfsc	3,2
 14701  0DF4  2E04               	goto	l4974
 14702  0DF5  0859               	movf	vfpfcnvrt@fmt,w
 14703  0DF6  0086               	movwf	6
 14704  0DF7  0187               	clrf	7
 14705  0DF8  3F40               	moviw [0]fsr1
 14706  0DF9  00DB               	movwf	??_vfpfcnvrt
 14707  0DFA  3F41               	moviw [1]fsr1
 14708  0DFB  00DC               	movwf	??_vfpfcnvrt+1
 14709  0DFC  085B               	movf	??_vfpfcnvrt,w
 14710  0DFD  0084               	movwf	4
 14711  0DFE  085C               	movf	??_vfpfcnvrt+1,w
 14712  0DFF  0085               	movwf	5
 14713  0E00  0012               	moviw fsr0++
 14714  0E01  3A58               	xorlw	88
 14715  0E02  1D03               	btfss	3,2
 14716  0E03  2E63               	goto	l4984
 14717  0E04                     l4974:	
 14718                           
 14719                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 14720  0E04  0859               	movf	vfpfcnvrt@fmt,w
 14721  0E05  0086               	movwf	6
 14722  0E06  0187               	clrf	7
 14723  0E07  3F40               	moviw [0]fsr1
 14724  0E08  00DB               	movwf	??_vfpfcnvrt
 14725  0E09  3F41               	moviw [1]fsr1
 14726  0E0A  00DC               	movwf	??_vfpfcnvrt+1
 14727  0E0B  085B               	movf	??_vfpfcnvrt,w
 14728  0E0C  0084               	movwf	4
 14729  0E0D  085C               	movf	??_vfpfcnvrt+1,w
 14730  0E0E  0085               	movwf	5
 14731  0E0F  0800               	movf	0,w	;code access
 14732  0E10  00DD               	movwf	??_vfpfcnvrt+2
 14733  0E11  085D               	movf	??_vfpfcnvrt+2,w
 14734  0E12  0021               	movlb	1	; select bank1
 14735  0E13  00B0               	movwf	vfpfcnvrt@c^(0+128)
 14736                           
 14737                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 14738  0E14  0020               	movlb	0	; select bank0
 14739  0E15  0859               	movf	vfpfcnvrt@fmt,w
 14740  0E16  0086               	movwf	6
 14741  0E17  0187               	clrf	7
 14742  0E18  3001               	movlw	1
 14743  0E19  0781               	addwf	1,f
 14744  0E1A  3141               	addfsr 1,1
 14745  0E1B  1803               	skipnc
 14746  0E1C  0A81               	incf	1,f
 14747                           
 14748                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 14749  0E1D  085A               	movf	vfpfcnvrt@ap,w
 14750  0E1E  0086               	movwf	6
 14751  0E1F  0187               	clrf	7
 14752  0E20  0801               	movf	1,w
 14753  0E21  0084               	movwf	4
 14754  0E22  0185               	clrf	5
 14755  0E23  3002               	movlw	2
 14756  0E24  0781               	addwf	1,f
 14757  0E25  3F00               	moviw [0]fsr0
 14758  0E26  0021               	movlb	1	; select bank1
 14759  0E27  00B1               	movwf	vfpfcnvrt@llu^(0+128)
 14760  0E28  3F01               	moviw [1]fsr0
 14761  0E29  00B2               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 14762  0E2A  01B3               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 14763  0E2B  01B4               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 14764  0E2C  01B5               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 14765  0E2D  01B6               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 14766  0E2E  01B7               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 14767  0E2F  01B8               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 14768                           
 14769                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 14770  0E30  0020               	movlb	0	; select bank0
 14771  0E31  0858               	movf	vfpfcnvrt@fp+1,w
 14772  0E32  00B1               	movwf	xtoa@fp+1
 14773  0E33  0857               	movf	vfpfcnvrt@fp,w
 14774  0E34  00B0               	movwf	xtoa@fp
 14775  0E35  0021               	movlb	1	; select bank1
 14776  0E36  0831               	movf	vfpfcnvrt@llu^(0+128),w
 14777  0E37  0020               	movlb	0	; select bank0
 14778  0E38  00B2               	movwf	xtoa@d
 14779  0E39  0021               	movlb	1	; select bank1
 14780  0E3A  0832               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 14781  0E3B  0020               	movlb	0	; select bank0
 14782  0E3C  00B3               	movwf	xtoa@d+1
 14783  0E3D  0021               	movlb	1	; select bank1
 14784  0E3E  0833               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 14785  0E3F  0020               	movlb	0	; select bank0
 14786  0E40  00B4               	movwf	xtoa@d+2
 14787  0E41  0021               	movlb	1	; select bank1
 14788  0E42  0834               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 14789  0E43  0020               	movlb	0	; select bank0
 14790  0E44  00B5               	movwf	xtoa@d+3
 14791  0E45  0021               	movlb	1	; select bank1
 14792  0E46  0835               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 14793  0E47  0020               	movlb	0	; select bank0
 14794  0E48  00B6               	movwf	xtoa@d+4
 14795  0E49  0021               	movlb	1	; select bank1
 14796  0E4A  0836               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 14797  0E4B  0020               	movlb	0	; select bank0
 14798  0E4C  00B7               	movwf	xtoa@d+5
 14799  0E4D  0021               	movlb	1	; select bank1
 14800  0E4E  0837               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 14801  0E4F  0020               	movlb	0	; select bank0
 14802  0E50  00B8               	movwf	xtoa@d+6
 14803  0E51  0021               	movlb	1	; select bank1
 14804  0E52  0838               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 14805  0E53  0020               	movlb	0	; select bank0
 14806  0E54  00B9               	movwf	xtoa@d+7
 14807  0E55  0021               	movlb	1	; select bank1
 14808  0E56  0830               	movf	vfpfcnvrt@c^(0+128),w
 14809  0E57  0020               	movlb	0	; select bank0
 14810  0E58  00DB               	movwf	??_vfpfcnvrt
 14811  0E59  085B               	movf	??_vfpfcnvrt,w
 14812  0E5A  00BA               	movwf	xtoa@x
 14813  0E5B  3181  21FA         	fcall	_xtoa
 14814  0E5D  0020               	movlb	0	; select bank0
 14815  0E5E  0831               	movf	?_xtoa+1,w
 14816  0E5F  00D8               	movwf	?_vfpfcnvrt+1
 14817  0E60  0830               	movf	?_xtoa,w
 14818  0E61  00D7               	movwf	?_vfpfcnvrt
 14819  0E62  0008               	return
 14820  0E63                     l4984:	
 14821                           
 14822                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1285:      
      +                             if (!strncmp(*fmt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", 
      +                          ((sizeof("lX")/sizeof("lX"[0]))-1))) {
 14823  0E63  0859               	movf	vfpfcnvrt@fmt,w
 14824  0E64  0086               	movwf	6
 14825  0E65  0187               	clrf	7
 14826  0E66  3F40               	moviw [0]fsr1
 14827  0E67  00F1               	movwf	strncmp@_l
 14828  0E68  3F41               	moviw [1]fsr1
 14829  0E69  00F2               	movwf	strncmp@_l+1
 14830  0E6A  30D2               	movlw	low (STR_122| (0+32768))
 14831  0E6B  00F3               	movwf	strncmp@_r
 14832  0E6C  30A1               	movlw	high (STR_122| (0+32768))
 14833  0E6D  00F4               	movwf	strncmp@_r+1
 14834  0E6E  3002               	movlw	2
 14835  0E6F  00F5               	movwf	strncmp@n
 14836  0E70  3000               	movlw	0
 14837  0E71  00F6               	movwf	strncmp@n+1
 14838  0E72  319D  2544  3188   	fcall	_strncmp
 14839  0E75  0871               	movf	?_strncmp,w
 14840  0E76  0472               	iorwf	?_strncmp+1,w
 14841  0E77  1903               	btfsc	3,2
 14842  0E78  2E90               	goto	l4988
 14843  0E79  0020               	movlb	0	; select bank0
 14844  0E7A  0859               	movf	vfpfcnvrt@fmt,w
 14845  0E7B  0086               	movwf	6
 14846  0E7C  0187               	clrf	7
 14847  0E7D  3F40               	moviw [0]fsr1
 14848  0E7E  00F1               	movwf	strncmp@_l
 14849  0E7F  3F41               	moviw [1]fsr1
 14850  0E80  00F2               	movwf	strncmp@_l+1
 14851  0E81  30AE               	movlw	low (STR_126| (0+32768))
 14852  0E82  00F3               	movwf	strncmp@_r
 14853  0E83  30A1               	movlw	high (STR_126| (0+32768))
 14854  0E84  00F4               	movwf	strncmp@_r+1
 14855  0E85  3002               	movlw	2
 14856  0E86  00F5               	movwf	strncmp@n
 14857  0E87  3000               	movlw	0
 14858  0E88  00F6               	movwf	strncmp@n+1
 14859  0E89  319D  2544  3188   	fcall	_strncmp
 14860  0E8C  0871               	movf	?_strncmp,w
 14861  0E8D  0472               	iorwf	?_strncmp+1,w
 14862  0E8E  1D03               	btfss	3,2
 14863  0E8F  2F1B               	goto	l4998
 14864  0E90                     l4988:	
 14865                           
 14866                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1286: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1288:           
      +                            c = (*fmt)[1];
 14867  0E90  0020               	movlb	0	; select bank0
 14868  0E91  0859               	movf	vfpfcnvrt@fmt,w
 14869  0E92  0086               	movwf	6
 14870  0E93  0187               	clrf	7
 14871  0E94  3F40               	moviw [0]fsr1
 14872  0E95  00DB               	movwf	??_vfpfcnvrt
 14873  0E96  3F41               	moviw [1]fsr1
 14874  0E97  00DC               	movwf	??_vfpfcnvrt+1
 14875  0E98  3001               	movlw	1
 14876  0E99  075B               	addwf	??_vfpfcnvrt,w
 14877  0E9A  0084               	movwf	4
 14878  0E9B  085C               	movf	??_vfpfcnvrt+1,w
 14879  0E9C  1803               	skipnc
 14880  0E9D  0A5C               	incf	??_vfpfcnvrt+1,w
 14881  0E9E  0085               	movwf	5
 14882  0E9F  0800               	movf	0,w	;code access
 14883  0EA0  00DD               	movwf	??_vfpfcnvrt+2
 14884  0EA1  085D               	movf	??_vfpfcnvrt+2,w
 14885  0EA2  0021               	movlb	1	; select bank1
 14886  0EA3  00B0               	movwf	vfpfcnvrt@c^(0+128)
 14887                           
 14888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1289:      
      +                                 *fmt += ((sizeof("lx")/sizeof("lx"[0]))-1);
 14889  0EA4  0020               	movlb	0	; select bank0
 14890  0EA5  0859               	movf	vfpfcnvrt@fmt,w
 14891  0EA6  0086               	movwf	6
 14892  0EA7  0187               	clrf	7
 14893  0EA8  3002               	movlw	2
 14894  0EA9  0781               	addwf	1,f
 14895  0EAA  3141               	addfsr 1,1
 14896  0EAB  1803               	skipnc
 14897  0EAC  0A81               	incf	1,f
 14898                           
 14899                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1290:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 14900  0EAD  085A               	movf	vfpfcnvrt@ap,w
 14901  0EAE  0086               	movwf	6
 14902  0EAF  0187               	clrf	7
 14903  0EB0  0801               	movf	1,w
 14904  0EB1  0084               	movwf	4
 14905  0EB2  0185               	clrf	5
 14906  0EB3  3004               	movlw	4
 14907  0EB4  0781               	addwf	1,f
 14908  0EB5  3F00               	moviw [0]fsr0
 14909  0EB6  00DB               	movwf	??_vfpfcnvrt
 14910  0EB7  3F01               	moviw [1]fsr0
 14911  0EB8  00DC               	movwf	??_vfpfcnvrt+1
 14912  0EB9  3F02               	moviw [2]fsr0
 14913  0EBA  00DD               	movwf	??_vfpfcnvrt+2
 14914  0EBB  3F03               	moviw [3]fsr0
 14915  0EBC  00DE               	movwf	??_vfpfcnvrt+3
 14916  0EBD  085B               	movf	??_vfpfcnvrt,w
 14917  0EBE  00DF               	movwf	??_vfpfcnvrt+4
 14918  0EBF  085C               	movf	??_vfpfcnvrt+1,w
 14919  0EC0  00E0               	movwf	??_vfpfcnvrt+5
 14920  0EC1  085D               	movf	??_vfpfcnvrt+2,w
 14921  0EC2  00E1               	movwf	??_vfpfcnvrt+6
 14922  0EC3  085E               	movf	??_vfpfcnvrt+3,w
 14923  0EC4  00E2               	movwf	??_vfpfcnvrt+7
 14924  0EC5  01E3               	clrf	??_vfpfcnvrt+8
 14925  0EC6  01E4               	clrf	??_vfpfcnvrt+9
 14926  0EC7  01E5               	clrf	??_vfpfcnvrt+10
 14927  0EC8  01E6               	clrf	??_vfpfcnvrt+11
 14928  0EC9  0866               	movf	??_vfpfcnvrt+11,w
 14929  0ECA  0021               	movlb	1	; select bank1
 14930  0ECB  00B8               	movwf	(vfpfcnvrt@llu+7)^(0+128)
 14931  0ECC  0020               	movlb	0	; select bank0
 14932  0ECD  0865               	movf	??_vfpfcnvrt+10,w
 14933  0ECE  0021               	movlb	1	; select bank1
 14934  0ECF  00B7               	movwf	(vfpfcnvrt@llu+6)^(0+128)
 14935  0ED0  0020               	movlb	0	; select bank0
 14936  0ED1  0864               	movf	??_vfpfcnvrt+9,w
 14937  0ED2  0021               	movlb	1	; select bank1
 14938  0ED3  00B6               	movwf	(vfpfcnvrt@llu+5)^(0+128)
 14939  0ED4  0020               	movlb	0	; select bank0
 14940  0ED5  0863               	movf	??_vfpfcnvrt+8,w
 14941  0ED6  0021               	movlb	1	; select bank1
 14942  0ED7  00B5               	movwf	(vfpfcnvrt@llu+4)^(0+128)
 14943  0ED8  0020               	movlb	0	; select bank0
 14944  0ED9  0862               	movf	??_vfpfcnvrt+7,w
 14945  0EDA  0021               	movlb	1	; select bank1
 14946  0EDB  00B4               	movwf	(vfpfcnvrt@llu+3)^(0+128)
 14947  0EDC  0020               	movlb	0	; select bank0
 14948  0EDD  0861               	movf	??_vfpfcnvrt+6,w
 14949  0EDE  0021               	movlb	1	; select bank1
 14950  0EDF  00B3               	movwf	(vfpfcnvrt@llu+2)^(0+128)
 14951  0EE0  0020               	movlb	0	; select bank0
 14952  0EE1  0860               	movf	??_vfpfcnvrt+5,w
 14953  0EE2  0021               	movlb	1	; select bank1
 14954  0EE3  00B2               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 14955  0EE4  0020               	movlb	0	; select bank0
 14956  0EE5  085F               	movf	??_vfpfcnvrt+4,w
 14957  0EE6  0021               	movlb	1	; select bank1
 14958  0EE7  00B1               	movwf	vfpfcnvrt@llu^(0+128)
 14959                           
 14960                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1292:      
      +                                 return xtoa(fp, llu, c);
 14961  0EE8  0020               	movlb	0	; select bank0
 14962  0EE9  0858               	movf	vfpfcnvrt@fp+1,w
 14963  0EEA  00B1               	movwf	xtoa@fp+1
 14964  0EEB  0857               	movf	vfpfcnvrt@fp,w
 14965  0EEC  00B0               	movwf	xtoa@fp
 14966  0EED  0021               	movlb	1	; select bank1
 14967  0EEE  0831               	movf	vfpfcnvrt@llu^(0+128),w
 14968  0EEF  0020               	movlb	0	; select bank0
 14969  0EF0  00B2               	movwf	xtoa@d
 14970  0EF1  0021               	movlb	1	; select bank1
 14971  0EF2  0832               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 14972  0EF3  0020               	movlb	0	; select bank0
 14973  0EF4  00B3               	movwf	xtoa@d+1
 14974  0EF5  0021               	movlb	1	; select bank1
 14975  0EF6  0833               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 14976  0EF7  0020               	movlb	0	; select bank0
 14977  0EF8  00B4               	movwf	xtoa@d+2
 14978  0EF9  0021               	movlb	1	; select bank1
 14979  0EFA  0834               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 14980  0EFB  0020               	movlb	0	; select bank0
 14981  0EFC  00B5               	movwf	xtoa@d+3
 14982  0EFD  0021               	movlb	1	; select bank1
 14983  0EFE  0835               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 14984  0EFF  0020               	movlb	0	; select bank0
 14985  0F00  00B6               	movwf	xtoa@d+4
 14986  0F01  0021               	movlb	1	; select bank1
 14987  0F02  0836               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 14988  0F03  0020               	movlb	0	; select bank0
 14989  0F04  00B7               	movwf	xtoa@d+5
 14990  0F05  0021               	movlb	1	; select bank1
 14991  0F06  0837               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 14992  0F07  0020               	movlb	0	; select bank0
 14993  0F08  00B8               	movwf	xtoa@d+6
 14994  0F09  0021               	movlb	1	; select bank1
 14995  0F0A  0838               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 14996  0F0B  0020               	movlb	0	; select bank0
 14997  0F0C  00B9               	movwf	xtoa@d+7
 14998  0F0D  0021               	movlb	1	; select bank1
 14999  0F0E  0830               	movf	vfpfcnvrt@c^(0+128),w
 15000  0F0F  0020               	movlb	0	; select bank0
 15001  0F10  00DB               	movwf	??_vfpfcnvrt
 15002  0F11  085B               	movf	??_vfpfcnvrt,w
 15003  0F12  00BA               	movwf	xtoa@x
 15004  0F13  3181  21FA         	fcall	_xtoa
 15005  0F15  0020               	movlb	0	; select bank0
 15006  0F16  0831               	movf	?_xtoa+1,w
 15007  0F17  00D8               	movwf	?_vfpfcnvrt+1
 15008  0F18  0830               	movf	?_xtoa,w
 15009  0F19  00D7               	movwf	?_vfpfcnvrt
 15010  0F1A  0008               	return
 15011  0F1B                     l4998:	
 15012                           
 15013                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
 15014  0F1B  0020               	movlb	0	; select bank0
 15015  0F1C  0859               	movf	vfpfcnvrt@fmt,w
 15016  0F1D  0086               	movwf	6
 15017  0F1E  0187               	clrf	7
 15018  0F1F  3F40               	moviw [0]fsr1
 15019  0F20  00F1               	movwf	strncmp@_l
 15020  0F21  3F41               	moviw [1]fsr1
 15021  0F22  00F2               	movwf	strncmp@_l+1
 15022  0F23  30D5               	movlw	low (STR_131| (0+32768))
 15023  0F24  00F3               	movwf	strncmp@_r
 15024  0F25  30A1               	movlw	high (STR_131| (0+32768))
 15025  0F26  00F4               	movwf	strncmp@_r+1
 15026  0F27  3002               	movlw	2
 15027  0F28  00F5               	movwf	strncmp@n
 15028  0F29  3000               	movlw	0
 15029  0F2A  00F6               	movwf	strncmp@n+1
 15030  0F2B  319D  2544  3188   	fcall	_strncmp
 15031  0F2E  0871               	movf	?_strncmp,w
 15032  0F2F  0472               	iorwf	?_strncmp+1,w
 15033  0F30  1903               	btfsc	3,2
 15034  0F31  2F49               	goto	l5002
 15035  0F32  0020               	movlb	0	; select bank0
 15036  0F33  0859               	movf	vfpfcnvrt@fmt,w
 15037  0F34  0086               	movwf	6
 15038  0F35  0187               	clrf	7
 15039  0F36  3F40               	moviw [0]fsr1
 15040  0F37  00F1               	movwf	strncmp@_l
 15041  0F38  3F41               	moviw [1]fsr1
 15042  0F39  00F2               	movwf	strncmp@_l+1
 15043  0F3A  30B1               	movlw	low (STR_135| (0+32768))
 15044  0F3B  00F3               	movwf	strncmp@_r
 15045  0F3C  30A1               	movlw	high (STR_135| (0+32768))
 15046  0F3D  00F4               	movwf	strncmp@_r+1
 15047  0F3E  3002               	movlw	2
 15048  0F3F  00F5               	movwf	strncmp@n
 15049  0F40  3000               	movlw	0
 15050  0F41  00F6               	movwf	strncmp@n+1
 15051  0F42  319D  2544  3188   	fcall	_strncmp
 15052  0F45  0871               	movf	?_strncmp,w
 15053  0F46  0472               	iorwf	?_strncmp+1,w
 15054  0F47  1D03               	btfss	3,2
 15055  0F48  2FAC               	goto	l5012
 15056  0F49                     l5002:	
 15057                           
 15058                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
 15059  0F49  0020               	movlb	0	; select bank0
 15060  0F4A  0859               	movf	vfpfcnvrt@fmt,w
 15061  0F4B  0086               	movwf	6
 15062  0F4C  0187               	clrf	7
 15063  0F4D  3F40               	moviw [0]fsr1
 15064  0F4E  00DB               	movwf	??_vfpfcnvrt
 15065  0F4F  3F41               	moviw [1]fsr1
 15066  0F50  00DC               	movwf	??_vfpfcnvrt+1
 15067  0F51  3001               	movlw	1
 15068  0F52  075B               	addwf	??_vfpfcnvrt,w
 15069  0F53  0084               	movwf	4
 15070  0F54  085C               	movf	??_vfpfcnvrt+1,w
 15071  0F55  1803               	skipnc
 15072  0F56  0A5C               	incf	??_vfpfcnvrt+1,w
 15073  0F57  0085               	movwf	5
 15074  0F58  0800               	movf	0,w	;code access
 15075  0F59  00DD               	movwf	??_vfpfcnvrt+2
 15076  0F5A  085D               	movf	??_vfpfcnvrt+2,w
 15077  0F5B  0021               	movlb	1	; select bank1
 15078  0F5C  00B0               	movwf	vfpfcnvrt@c^(0+128)
 15079                           
 15080                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
 15081  0F5D  0020               	movlb	0	; select bank0
 15082  0F5E  0859               	movf	vfpfcnvrt@fmt,w
 15083  0F5F  0086               	movwf	6
 15084  0F60  0187               	clrf	7
 15085  0F61  3002               	movlw	2
 15086  0F62  0781               	addwf	1,f
 15087  0F63  3141               	addfsr 1,1
 15088  0F64  1803               	skipnc
 15089  0F65  0A81               	incf	1,f
 15090                           
 15091                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 15092  0F66  085A               	movf	vfpfcnvrt@ap,w
 15093  0F67  0086               	movwf	6
 15094  0F68  0187               	clrf	7
 15095  0F69  0801               	movf	1,w
 15096  0F6A  0084               	movwf	4
 15097  0F6B  0185               	clrf	5
 15098  0F6C  3002               	movlw	2
 15099  0F6D  0781               	addwf	1,f
 15100  0F6E  3F00               	moviw [0]fsr0
 15101  0F6F  0021               	movlb	1	; select bank1
 15102  0F70  00B1               	movwf	vfpfcnvrt@llu^(0+128)
 15103  0F71  3F01               	moviw [1]fsr0
 15104  0F72  00B2               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 15105  0F73  01B3               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 15106  0F74  01B4               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 15107  0F75  01B5               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 15108  0F76  01B6               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 15109  0F77  01B7               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 15110  0F78  01B8               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 15111                           
 15112                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1344:      
      +                                 return xtoa(fp, llu, c);
 15113  0F79  0020               	movlb	0	; select bank0
 15114  0F7A  0858               	movf	vfpfcnvrt@fp+1,w
 15115  0F7B  00B1               	movwf	xtoa@fp+1
 15116  0F7C  0857               	movf	vfpfcnvrt@fp,w
 15117  0F7D  00B0               	movwf	xtoa@fp
 15118  0F7E  0021               	movlb	1	; select bank1
 15119  0F7F  0831               	movf	vfpfcnvrt@llu^(0+128),w
 15120  0F80  0020               	movlb	0	; select bank0
 15121  0F81  00B2               	movwf	xtoa@d
 15122  0F82  0021               	movlb	1	; select bank1
 15123  0F83  0832               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 15124  0F84  0020               	movlb	0	; select bank0
 15125  0F85  00B3               	movwf	xtoa@d+1
 15126  0F86  0021               	movlb	1	; select bank1
 15127  0F87  0833               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 15128  0F88  0020               	movlb	0	; select bank0
 15129  0F89  00B4               	movwf	xtoa@d+2
 15130  0F8A  0021               	movlb	1	; select bank1
 15131  0F8B  0834               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 15132  0F8C  0020               	movlb	0	; select bank0
 15133  0F8D  00B5               	movwf	xtoa@d+3
 15134  0F8E  0021               	movlb	1	; select bank1
 15135  0F8F  0835               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 15136  0F90  0020               	movlb	0	; select bank0
 15137  0F91  00B6               	movwf	xtoa@d+4
 15138  0F92  0021               	movlb	1	; select bank1
 15139  0F93  0836               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 15140  0F94  0020               	movlb	0	; select bank0
 15141  0F95  00B7               	movwf	xtoa@d+5
 15142  0F96  0021               	movlb	1	; select bank1
 15143  0F97  0837               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 15144  0F98  0020               	movlb	0	; select bank0
 15145  0F99  00B8               	movwf	xtoa@d+6
 15146  0F9A  0021               	movlb	1	; select bank1
 15147  0F9B  0838               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 15148  0F9C  0020               	movlb	0	; select bank0
 15149  0F9D  00B9               	movwf	xtoa@d+7
 15150  0F9E  0021               	movlb	1	; select bank1
 15151  0F9F  0830               	movf	vfpfcnvrt@c^(0+128),w
 15152  0FA0  0020               	movlb	0	; select bank0
 15153  0FA1  00DB               	movwf	??_vfpfcnvrt
 15154  0FA2  085B               	movf	??_vfpfcnvrt,w
 15155  0FA3  00BA               	movwf	xtoa@x
 15156  0FA4  3181  21FA         	fcall	_xtoa
 15157  0FA6  0020               	movlb	0	; select bank0
 15158  0FA7  0831               	movf	?_xtoa+1,w
 15159  0FA8  00D8               	movwf	?_vfpfcnvrt+1
 15160  0FA9  0830               	movf	?_xtoa,w
 15161  0FAA  00D7               	movwf	?_vfpfcnvrt
 15162  0FAB  0008               	return
 15163  0FAC                     l5012:	
 15164                           
 15165                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 15166  0FAC  0020               	movlb	0	; select bank0
 15167  0FAD  0859               	movf	vfpfcnvrt@fmt,w
 15168  0FAE  0086               	movwf	6
 15169  0FAF  0187               	clrf	7
 15170  0FB0  3F40               	moviw [0]fsr1
 15171  0FB1  00DB               	movwf	??_vfpfcnvrt
 15172  0FB2  3F41               	moviw [1]fsr1
 15173  0FB3  00DC               	movwf	??_vfpfcnvrt+1
 15174  0FB4  085B               	movf	??_vfpfcnvrt,w
 15175  0FB5  0084               	movwf	4
 15176  0FB6  085C               	movf	??_vfpfcnvrt+1,w
 15177  0FB7  0085               	movwf	5
 15178  0FB8  0012               	moviw fsr0++
 15179  0FB9  3A25               	xorlw	37
 15180  0FBA  1D03               	btfss	3,2
 15181  0FBB  2FD4               	goto	l5022
 15182                           
 15183                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 15184  0FBC  0859               	movf	vfpfcnvrt@fmt,w
 15185  0FBD  0086               	movwf	6
 15186  0FBE  0187               	clrf	7
 15187  0FBF  3001               	movlw	1
 15188  0FC0  0781               	addwf	1,f
 15189  0FC1  3141               	addfsr 1,1
 15190  0FC2  1803               	skipnc
 15191  0FC3  0A81               	incf	1,f
 15192                           
 15193                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 15194  0FC4  3025               	movlw	37
 15195  0FC5  00F1               	movwf	fputc@c
 15196  0FC6  3000               	movlw	0
 15197  0FC7  00F2               	movwf	fputc@c+1
 15198  0FC8  0858               	movf	vfpfcnvrt@fp+1,w
 15199  0FC9  00F4               	movwf	fputc@fp+1
 15200  0FCA  0857               	movf	vfpfcnvrt@fp,w
 15201  0FCB  00F3               	movwf	fputc@fp
 15202  0FCC  319D  2596         	fcall	_fputc
 15203  0FCE                     l5018:	
 15204                           
 15205                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 15206  0FCE  3001               	movlw	1
 15207  0FCF  0020               	movlb	0	; select bank0
 15208  0FD0  00D7               	movwf	?_vfpfcnvrt
 15209  0FD1  3000               	movlw	0
 15210  0FD2  00D8               	movwf	?_vfpfcnvrt+1
 15211  0FD3  0008               	return
 15212  0FD4                     l5022:	
 15213                           
 15214                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 15215  0FD4  0859               	movf	vfpfcnvrt@fmt,w
 15216  0FD5  0086               	movwf	6
 15217  0FD6  0187               	clrf	7
 15218  0FD7  3001               	movlw	1
 15219  0FD8  0781               	addwf	1,f
 15220  0FD9  3141               	addfsr 1,1
 15221  0FDA  1803               	skipnc
 15222  0FDB  0A81               	incf	1,f
 15223  0FDC  29C1               	goto	l4820
 15224  0FDD                     l5028:	
 15225                           
 15226                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 15227  0FDD  0859               	movf	vfpfcnvrt@fmt,w
 15228  0FDE  0086               	movwf	6
 15229  0FDF  0187               	clrf	7
 15230  0FE0  3F40               	moviw [0]fsr1
 15231  0FE1  00DB               	movwf	??_vfpfcnvrt
 15232  0FE2  3F41               	moviw [1]fsr1
 15233  0FE3  00DC               	movwf	??_vfpfcnvrt+1
 15234  0FE4  085B               	movf	??_vfpfcnvrt,w
 15235  0FE5  0084               	movwf	4
 15236  0FE6  085C               	movf	??_vfpfcnvrt+1,w
 15237  0FE7  0085               	movwf	5
 15238  0FE8  0800               	movf	0,w	;code access
 15239  0FE9  00DD               	movwf	??_vfpfcnvrt+2
 15240  0FEA  01DE               	clrf	??_vfpfcnvrt+3
 15241  0FEB  085D               	movf	??_vfpfcnvrt+2,w
 15242  0FEC  00F1               	movwf	fputc@c
 15243  0FED  085E               	movf	??_vfpfcnvrt+3,w
 15244  0FEE  00F2               	movwf	fputc@c+1
 15245  0FEF  0858               	movf	vfpfcnvrt@fp+1,w
 15246  0FF0  00F4               	movwf	fputc@fp+1
 15247  0FF1  0857               	movf	vfpfcnvrt@fp,w
 15248  0FF2  00F3               	movwf	fputc@fp
 15249  0FF3  319D  2596  3188   	fcall	_fputc
 15250                           
 15251                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 15252  0FF6  0020               	movlb	0	; select bank0
 15253  0FF7  0859               	movf	vfpfcnvrt@fmt,w
 15254  0FF8  0086               	movwf	6
 15255  0FF9  0187               	clrf	7
 15256  0FFA  3001               	movlw	1
 15257  0FFB  0781               	addwf	1,f
 15258  0FFC  3141               	addfsr 1,1
 15259  0FFD  1803               	skipnc
 15260  0FFE  0A81               	incf	1,f
 15261  0FFF  2FCE               	goto	l5018
 15262  1000                     __end_of_vfpfcnvrt:	


Data Sizes:
    Strings     382
    Constant    90
    Data        7
    BSS         70
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80     61      80
    BANK2            80      1      58
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           65      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    vsnprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK1[1]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_5(CODE[43]), STR_3(CODE[43]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_137(CODE[3]), STR_133(CODE[3]), STR_128(CODE[3]), STR_124(CODE[3]), 
		 -> STR_119(CODE[3]), STR_115(CODE[3]), STR_110(CODE[4]), STR_106(CODE[4]), 
		 -> STR_101(CODE[3]), STR_96(CODE[3]), STR_91(CODE[3]), STR_86(CODE[4]), 
		 -> STR_81(CODE[3]), STR_76(CODE[3]), STR_71(CODE[3]), STR_66(CODE[4]), 
		 -> STR_61(CODE[3]), STR_56(CODE[3]), STR_51(CODE[3]), STR_46(CODE[4]), 
		 -> STR_41(CODE[3]), STR_37(CODE[3]), STR_32(CODE[3]), STR_28(CODE[3]), 
		 -> STR_23(CODE[3]), STR_19(CODE[3]), STR_14(CODE[4]), STR_10(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_137(CODE[3]), STR_133(CODE[3]), STR_128(CODE[3]), STR_124(CODE[3]), 
		 -> STR_119(CODE[3]), STR_115(CODE[3]), STR_110(CODE[4]), STR_106(CODE[4]), 
		 -> STR_101(CODE[3]), STR_96(CODE[3]), STR_91(CODE[3]), STR_86(CODE[4]), 
		 -> STR_81(CODE[3]), STR_76(CODE[3]), STR_71(CODE[3]), STR_66(CODE[4]), 
		 -> STR_61(CODE[3]), STR_56(CODE[3]), STR_51(CODE[3]), STR_46(CODE[4]), 
		 -> STR_41(CODE[3]), STR_37(CODE[3]), STR_32(CODE[3]), STR_28(CODE[3]), 
		 -> STR_23(CODE[3]), STR_19(CODE[3]), STR_14(CODE[4]), STR_10(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_5(CODE[43]), STR_3(CODE[43]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_5(CODE[43]), STR_3(CODE[43]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK2[32]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_5(CODE[43]), STR_3(CODE[43]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    snprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_snprintf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    S1426_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_5(CODE[43]), STR_3(CODE[43]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_5(CODE[43]), STR_3(CODE[43]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 43
		 -> STR_5(CODE[43]), STR_3(CODE[43]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 2
		 -> ?_snprintf(BANK1[2]), 

    vfpfcnvrt@vp	PTR void  size(1) Largest target is 2
		 -> ?_snprintf(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    stoa@s	PTR unsigned char  size(1) Largest target is 2
		 -> ?_snprintf(BANK1[2]), 

    stoa@cp	PTR unsigned char  size(1) Largest target is 7
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 127
		 -> STR_7(CODE[45]), STR_6(CODE[42]), STR_4(CODE[53]), messageBuffer(BIGRAM[127]), 
		 -> STR_2(CODE[46]), STR_1(CODE[40]), 


Critical Paths under _main in COMMON

    _main->_EUSART_Initialize
    _vfpfcnvrt->_stoa
    _vfpfcnvrt->_strncmp
    _toupper->_islower
    _stoa->_fputc
    _dtoa->___aodiv
    _abs->___aomod
    _pad->_fputs
    _fputs->_fputc
    _atoi->___wmul
    _atoi->_isdigit
    _setTemperatureLimitsint->___wmul
    _setShortCircuitProtection->___aldiv
    _beginAFEcommunication->_I2C_writeRegister
    _beginAFEcommunication->_readRegister
    _readRegister->_read_I2C_data
    _readRegister->_send_I2C_controlByte
    _I2C_writeRegister->_send_I2C_controlByte
    _RGB_AWAIT_AFE_CONN->_RGB_color
    _EUSART_Write_Text->_EUSART_Write
    _AFE_getSetShortCircuitCurrent->___aldiv
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _utoa->___lodiv
    _utoa->___lomod
    _utoa->_pad
    _otoa->_pad
    _dtoa->___aodiv
    _dtoa->___aomod
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _init_AFE->_setShortCircuitProtection
    _setShortCircuitProtection->___aldiv
    _AFE_getSetShortCircuitCurrent->___aldiv
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_statemachine
    _statemachine->_snprintf
    _snprintf->_vsnprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _myIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _myIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _myIsr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _myIsr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _myIsr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _myIsr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _myIsr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _myIsr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _myIsr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _myIsr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _myIsr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _myIsr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _myIsr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   65555
                                              0 BANK2      1     1      0
                  _EUSART_Initialize
                          _initClock
                          _init_GPIO
                           _init_I2C
                           _init_RGB
                          _init_TMR1
                       _statemachine
 ---------------------------------------------------------------------------------
 (1) _statemachine                                         3     3      0   64077
                                             58 BANK1      3     3      0
      _AFE_getSetShortCircuitCurrent
                  _EUSART_Write_Text
                 _RGB_AWAIT_AFE_CONN
                          _RGB_color
              _beginAFEcommunication
                           _init_AFE
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _snprintf                                            14     4     10   54194
                                             44 BANK1     14     4     10
      _AFE_getSetShortCircuitCurrent (ARG)
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (3) _vsnprintf                                           19    12      7   53337
                                             25 BANK1     19    12      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             9     4      5   52300
                                             71 BANK0      9     4      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           50    46      4   51471
                                             55 BANK0     16    12      4
                                              0 BANK1     25    25      0
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    7919
                                             16 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     512
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     161
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              8     6      2     161
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _utoa                                                25    15     10    6542
                                             16 BANK0     25    15     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             18     2     16     311
                                              1 COMMON     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             26    10     16     314
                                              1 COMMON    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6    6609
                                              1 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                21    18      3    2326
                                             10 COMMON     2     2      0
                                              0 BANK0     19    16      3
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _otoa                                                34    24     10    6022
                                             16 BANK0     34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                31    21     10    7225
                                             16 BANK0     31    21     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                              4 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             19     3     16     448
                                              1 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             27    11     16     452
                                              1 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 8     5      3    4973
                                             16 BANK0      6     3      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 10     5      5    4713
                                              6 BANK0     10     5      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     210
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     6      2    1605
                                             10 COMMON     2     0      2
                                              0 BANK0      6     6      0
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1290
                                              1 COMMON     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    2025
                                              7 COMMON     2     0      2
                                              0 BANK0     13    13      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              5     3      2     207
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (2) _init_AFE                                             0     0      0    3505
          _setShortCircuitProtection
              _setShuntResistorValue
            _setTemperatureLimitsint
 ---------------------------------------------------------------------------------
 (3) _setTemperatureLimitsint                              8     0      8    1244
                                              0 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     852
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _setShuntResistorValue                                3     1      2      98
                                              1 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (3) _setShortCircuitProtection                           21    15      6    2163
                                             18 BANK0     21    15      6
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _beginAFEcommunication                               15    13      2    3387
                                              0 BANK0     15    13      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _readRegister                                         6     2      4    1599
                                              5 COMMON     6     2      4
                      _read_I2C_data
                      _send_I2C_NACK
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _read_I2C_data                                        4     2      2       0
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (3) _I2C_writeRegister                                    6     0      6    1652
                                              5 COMMON     6     0      6
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_stopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_startBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_data                                        2     0      2     250
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _send_I2C_controlByte                                 4     0      4     652
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _RGB_AWAIT_AFE_CONN                                   1     1      0     326
                                              3 COMMON     1     1      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (2) _RGB_color                                            2     0      2     326
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write_Text                                    5     3      2     644
                                              2 COMMON     5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _AFE_getSetShortCircuitCurrent                       12     8      4    1661
                                             18 BANK0     12     8      4
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     496
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_RGB                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_GPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initClock                                            0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   18    14      4    1478
                                             10 COMMON     2     2      0
                                             18 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8    1165
                                              9 COMMON     1     1      0
                                              4 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _myIsr                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     ___aldiv
       ___lmul (ARG)
   _initClock
     _internal_16
   _init_GPIO
   _init_I2C
   _init_RGB
   _init_TMR1
   _statemachine
     _AFE_getSetShortCircuitCurrent
       ___aldiv
         ___lmul (ARG)
       ___lmul
     _EUSART_Write_Text
       _EUSART_Write
     _RGB_AWAIT_AFE_CONN
       _RGB_color
     _RGB_color
     _beginAFEcommunication
       _I2C_writeRegister
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
     _init_AFE
       _setShortCircuitProtection
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _setShuntResistorValue
       _setTemperatureLimitsint
         ___wmul
     _snprintf
       _AFE_getSetShortCircuitCurrent (ARG)
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _vsnprintf (ARG)
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     3D      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      1      3A       9       72.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      E7      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      E7      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              41      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Dec 24 01:47:37 2019

       __end_of_setShortCircuitProtection 12F1                     __end_of_send_I2C_data 1968  
                             __CFG_CP$OFF 0000                       ___wmul@multiplicand 0073  
                   _setShuntResistorValue 1931                                       l211 193F  
                                     l310 1A91                                       l311 1AA6  
                                     l135 1479                                       l307 1A87  
                                     l252 199D                                       l309 1A8C  
                                     l246 1964                                       l270 1952  
                                     l503 0398                                       l264 194A  
                                     l512 0464                                       l504 039F  
                                     l258 196E                                       l282 07FC  
                                     l508 03BA                                       l540 17D1  
                                     l620 008B                                       l509 03CE  
                                     l533 1731                                       l621 008E  
                                     l366 1173                                       l534 17C6  
                                     l622 0091                                       l551 1332  
                                     l560 138C                                       l608 031F  
                                     l624 00C4                                       l705 1A56  
                                     l529 1716                                       l617 007C  
                                     l491 1D29                                       l619 0088  
                                     l572 1650                                       l805 077C  
                                     l583 0201                                       l488 1D09  
                                     l568 1635                                       l770 1EEE  
                                     l818 161C                                       l587 021C  
                                     l938 1ECC                                       l948 07E6  
                                     _abs 19D7                            RGB_color@color 0071  
                                     _pad 1CF3                              __CFG_BORV$LO 0000  
                                     wreg 0009                              __CFG_IESO$ON 0000  
                            _statemachine 13B4                              __CFG_LVP$OFF 0000  
                                    ?_abs 0074                                      l3000 1E87  
                                    l1180 1FC8                                      l3020 07AA  
                                    l3008 1EC0                                      l3024 07DA  
                                    l3034 1014                                      l3018 079B  
                                    l5002 0F49                                      l4028 1A36  
                                    l5012 0FAC                                      l5102 1F56  
                                    l4310 1B70                                      l5022 0FD4  
                                    l5120 12AE                                      l4312 1B79  
                                    l3360 1D7E                                      l5114 123B  
                                    l4402 1753                                      l3362 1D59  
                                    l5018 0FCE                                      l5132 12E0  
                                    l4332 03B2                                      l5028 0FDD  
                                    l5140 1DFD                                      l5300 1B2C  
                                    l5214 10B2                                      l5054 1BCE  
                                    l5118 129F                                      l2830 1DC9  
                                    l4342 03FB                                      l4430 130B  
                                    l5046 1B9C                                      l5128 12B6  
                                    l2824 1D9E                                      l4264 19C4  
                                    l4352 03D6                                      l4360 0470  
                                    l3368 1D85                                      l4504 16F9  
                                    l4520 022C                                      l5048 1BBC  
                                    l5160 1E55                                      l5058 1BD9  
                                    l5410 1A9B                                      l2826 1DA2  
                                    l2842 1AEF                                      l4266 19D0  
                                    l4282 1D07                                      l2930 06EC  
                                    l4370 0483                                      l4338 03C9  
                                    l4418 17EA                                      l4450 1361  
                                    l4514 0214                                      l5162 1E5C  
                                    l5146 1E11                                      l5234 13B5  
                                    l5084 1F0F                                      l5076 1EFF  
                                    l5172 10CA                                      l2908 1A50  
                                    l4292 1D35                                      l2932 06F0  
                                    l4364 0478                                      l4444 1343  
                                    l4524 0244                                      l5148 1E19  
                                    l5404 146E                                      l5094 1F3D  
                                    l5086 1F1D                                      l4278 1CFF  
                                    l2942 0707                                      l2926 06C5  
                                    l4374 0490                                      l4462 1390  
                                    l4702 05A1                                      l5406 00B2  
                                    l5158 1E51                                      ?_pad 0026  
                                    l4608 1FFB                                      l5408 1FA1  
                                    l4288 1D0B                                      l2952 074F  
                                    l2944 0716                                      l4392 1778  
                                    l4384 1729                                      l4448 1354  
                                    l4544 02AC                                      l4528 025E  
                                    l4552 02EE                                      l5264 1415  
                                    l5098 1F48                                      l2954 075B  
                                    l4466 13A1                                      l4458 1364  
                                    l4802 08A6                                      l4730 04C5  
                                    l4714 0619                                      l4706 05CE  
                                    l5282 1465                                      l2964 157C  
                                    l4468 13AE                                      l4484 1693  
                                    l4820 09C1                                      l4812 0906  
                                    l4660 00F8                                      l4628 007E  
                                    l4644 0099                                      l4590 1F90  
                                    l2982 15EF                                      l4494 16F4  
                                    l4478 1648                                      l4902 0B25  
                                    l4750 147A                                      l4742 0543  
                                    l4726 04A6                                      l4718 0647  
                                    l4662 0108                                      l4670 013B  
                                    l4638 0094                                      l4592 1F95  
                                    l4584 1F80                                      l4576 1F64  
                                    l2976 15B0                                      l2984 15FB  
                                    l2968 15A3                                      l4496 166F  
                                    l4568 033D                                      l4912 0B85  
                                    l4824 09C5                                      l4664 0111  
                                    l4648 00CA                                      l4594 1FA9  
                                    l2978 15BF                                      l4922 0BDD  
                                    l4850 0976                                      l4826 093D  
                                    l4762 14F1                                      l4754 14A8  
                                    l4738 0516                                      l4682 017C  
                                    l3884 1A96                                      l4932 0C64  
                                    l4772 1179                                      l4684 018C  
                                    l4692 01BF                                      l4598 1FCC  
                                    l2998 1E78                                      l4942 0CC4  
                                    l4862 09A5                                      l4838 095A  
                                    l4782 11D9                                      l4686 0195  
                                    l3992 1AB9                                      l4960 0D82  
                                    l4792 081F                                      l4970 0DE5  
                                    l4946 0CF2                                      l4882 0A91  
                                    l4956 0D54                                      l4892 0AC7  
                                    l4974 0E04                                      l4984 0E63  
                                    l4988 0E90                                      l4998 0F1B  
                                    STR_1 2112                                      STR_2 2037  
                                    STR_3 20BD                                      STR_4 2002  
                                    STR_5 2092                                      STR_6 20E8  
                                    STR_7 2065                                      STR_8 2196  
                                    _BRGH 0CF2                                      _CREN 0CEC  
                                    u2510 19FD                                      u2415 1DC7  
                                    u2520 19FE                                      u2505 19E0  
                                    u2530 1A7E                                      u2540 1A7F  
                                    u5005 17AA                                      u2615 1A57  
                                    u5015 17CF                                      u2625 1A5C  
                                    u2715 073C                                      u5035 1767  
                                    u5115 132B                                      u2580 19B8  
                                    u5045 1773                                      u2590 19B9  
                                    u5310 0295                                      u2815 15DD  
                                    u5135 135F                                      u5215 1682  
                                    u4520 1AAF                                      u2680 06F7  
                                    u5080 12FB                                      u5320 0296  
                                    u6105 1F1E                                      u6025 1BDA  
                                    u5145 136E                                      u5225 168E  
                                    u4530 1AB0                                      u2850 1E68  
                                    u6115 1F32                                      u6035 1BE1  
                                    u4540 1ABE                                      u6125 1F3E  
                                    u5165 13AC                                      u2925 07C8  
                                    u4550 1ABF                                      u5255 020C  
                                    u5440 1FE0                                      u4720 1A14  
                                    u5280 0275                                      u6305 1073  
                                    u6153 1294                                      u5185 1640  
                                    u5345 02D2                                      u5450 1FE1  
                                    u4730 1A15                                      u5290 0276  
                                    u5530 012D                                      u6315 108A  
                                    u5355 02F8                                      u5275 0258  
                                    u6235 1E48                                      u4820 036E  
                                    u5540 012E                                      u6085 1F12  
                                    u6245 10E0                                      u6165 12AC  
                                    u2885 1EAD                                      u4830 036F  
                                    u6175 12CF                                      u5375 030E  
                                    u6265 1146                                      u6185 12EE  
                                    u4905 046E                                      u5385 031A  
                                    _SCS0 04C8                                      u6275 1026  
                                    _SCS1 04C9                                      u4780 1AD9  
                                    u5580 01B1                                      u6285 103D  
                                    u4765 1D15                                      u4925 03EA  
                                    u6357 1B33                                      u4790 1ADA  
                                    u5590 01B2                                      u4935 03F6  
                                    u6367 13E0                                      u6377 141C  
                                    u6387 1994                                      u4875 03AA  
                                    u4995 1721                                      _TMR1 0016  
                                    _SPEN 0CEF                                      _TXEN 0CF5  
                                    _SYNC 0CF4                              __CFG_WRT$OFF 0000  
                                    abs@a 0074                                      _dbuf 0132  
                                    _atoi 1F5F                                      _ctoa 1B63  
                                    _main 1B11                                      _dtoa 0353  
                                    _prec 00E1                                      _otoa 170F  
                                    _nout 00DD                                      pad@i 002C  
                                    pad@p 0029                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      pad@w 002E  
                                    _stoa 12F1                                      btemp 007E  
                                    _utoa 162E                                      _xtoa 01FA  
                                    start 001E                  __end_of_send_I2C_stopBit 1956  
                                   ??_abs 0076                                     ??_pad 002B  
                    _send_I2C_controlByte 1968                             ?_EUSART_Write 0070  
                         __end_of___aldiv 1F5F                           __end_of___aodiv 078E  
                                   ?_atoi 0077                                     ?_ctoa 0030  
                                   ?_main 0070                                     ?_dtoa 0030  
                         __end_of___aomod 162E             I2C_writeRegister@slaveAddress 0075  
                                   STR_10 2196                                     STR_12 219A  
                                   STR_14 219A                                     STR_30 21BA  
                                   STR_23 219B                                     STR_32 21BA  
                                   STR_41 21BD                             __CFG_WDTE$OFF 0000  
                                   STR_26 21B4                                     STR_19 2197  
                                   STR_51 21A3                                     STR_35 21B7  
                                   STR_28 21B4                                     STR_44 21A2  
                                   STR_37 21B7                                     STR_61 21C9  
                                   STR_46 21A2                                     STR_54 21C6  
                                   STR_71 219F                                     STR_39 21BD  
                                   STR_56 21C6                                     STR_64 219E  
                                   STR_81 21C3                                     STR_66 219E  
                                   STR_74 21C0                                     STR_91 21A7  
                                   STR_59 21C9                                     STR_76 21C0  
                                   STR_84 21A6                                     STR_86 21A6  
                                   STR_94 21CC                                     STR_79 21C3  
                                   STR_96 21CC                                     ?_otoa 0030  
                                   STR_99 21CF                                     ?_stoa 0020  
                                   ?_utoa 0030                           __end_of___lodiv 1EDD  
                                   ?_xtoa 0030                           __end_of___lomod 07F7  
                                   _IRCF0 04CB                                     _IRCF1 04CC  
                                   _IRCF2 04CD                                     _IRCF3 04CE  
                  __size_of_read_I2C_data 0010                                     i1l117 001C  
                            vfpfcnvrt@fmt 0059                              vfpfcnvrt@llu 00B1  
                                   _SPBRG 019B                        __size_of_RGB_color 0021  
                     ___lmul@multiplicand 0075                            __CFG_FCMEN$OFF 0000  
                                   _flags 00E3                                     _errno 012A  
                                   _fputc 1D96                           __end_of_isalpha 1A86  
                                   _fputs 1AEB                                     _myIsr 0004  
                         __end_of_isdigit 19C0                                     atoi@n 002B  
                                   pad@fp 0026                                     atoi@s 0077  
                                   _width 00DF                                     ctoa@c 0032  
                                   _putch 0003                                     ctoa@w 0034  
                                   dtoa@d 0032                                     dtoa@i 004D  
                                   dtoa@n 0045                                     dtoa@p 003F  
                                   dtoa@s 0043                                     dtoa@w 0041  
                         __end_of_islower 1A1C                           __end_of_isspace 101C  
                          __CFG_BOREN$OFF 0000                           __end_of_isupper 1A05  
                                   otoa@d 0032                                     otoa@i 0050  
                                   otoa@n 0048                                     otoa@p 0042  
                                   otoa@t 0044                                     otoa@w 0046  
                                   stoa@i 002A                                     stoa@l 0031  
                                   stoa@p 002F                                     stoa@s 0022  
                                   stoa@w 002C                                     utoa@d 0032  
                                   utoa@i 0047                                     utoa@n 003F  
                                   utoa@p 003B                                     utoa@w 003D  
                                   status 0003                                     wtemp0 007E  
                                   xtoa@c 0055                                     xtoa@d 0032  
                                   xtoa@i 0053                                     xtoa@n 004B  
                                   xtoa@p 0047                                     xtoa@w 0049  
                                   xtoa@x 003A                         _SCD_delay_setting 218A  
                         __end_of_strncmp 1D96                           __end_of_toupper 1AEB  
                        ___lodiv@dividend 0028                              ?_internal_16 0070  
                            _toupper$1493 0079                            __CFG_MCLRE$OFF 0000  
                         __initialization 0020     setTemperatureLimitsint@maxCharge_degC 0026  
                            __end_of_atoi 2000                              __end_of_ctoa 1B94  
                            __end_of_main 1B39                              __end_of_dtoa 04A6  
                            __end_of_otoa 1800                              __end_of_stoa 13B4  
                            __end_of_utoa 170F                              __end_of_xtoa 0353  
                __end_of_UV_delay_setting 218A                    ?_setShuntResistorValue 0071  
                  beginAFEcommunication@i 002D                     ?_send_I2C_controlByte 0071  
                          ??_EUSART_Write 0071                            __CFG_LPBOR$OFF 0000  
                       _ATmega328_address 2000                                    ??_atoi 0020  
                                  ??_ctoa 0033                                    ??_main 0159  
                                  ??_dtoa 003A                                    ??_otoa 003A  
                                  ??_stoa 007A                                    ??_utoa 003A  
                                  ??_xtoa 003B                            __CFG_PLLEN$OFF 0000  
                        ___lodiv@quotient 0072                             ?_readRegister 0075  
                                  ?_fputc 0071                                    STR_101 21CF  
                                  STR_110 2192                                    ?_fputs 007A  
                                  STR_104 21AA                                    STR_106 21AA  
                                  STR_122 21D2                                    STR_115 21AB  
                                  STR_131 21D5                                    ?_myIsr 0070  
                                  STR_124 21D2                                    STR_108 2192  
                                  STR_133 21D5                                    STR_126 21AE  
                                  STR_119 2193                                    STR_135 21B1  
                                  STR_128 21AE                                    STR_137 21B1  
                          __CFG_ZCDDIS$ON 0000                                    ?_putch 0070  
           __end_of_OCD_threshold_setting 215A                                    _RC1REG 0199  
               __end_of_SCD_delay_setting 2192                             vfpfcnvrt@done 00A1  
                                  _TX1REG 019A                                    u265lld 06C3  
                                  _SPLLEN 04CF                                    u276lld 157A  
                                  _SSPADD 0212                                    _TRISC6 0476  
                                  _TRISC7 0477                                    _SSPBUF 0211  
                           _read_I2C_data 1999                            __CFG_PWRTE$OFF 0000  
                       __end_of_RGB_color 1AA7                              vfprintf@cfmt 006E  
                                  ___lmul 1BC5                                 ??___aldiv 0079  
                               ??___aodiv 0071                                 ??___aomod 0071  
                                  ___wmul 1A4E                            __CFG_STVREN$ON 0000  
                               ??___lodiv 0071                          __end_of_init_I2C 1999  
                               ??___lomod 0071                          __end_of_init_AFE 1B63  
                        __end_of_init_RGB 1931                 __end_of_ATmega328_address 2002  
                   _beginAFEcommunication 10C5                                    pad@buf 0028  
                                  ctoa@fp 0030                                    dtoa@fp 0030  
                                  _strlen 19C0                                    fputc@c 0071  
                                  fputs@c 0022                                    fputs@i 0023  
                                  fputs@s 0025                                 ??_isalpha 0073  
                               ??_isdigit 0073                                 ??_islower 0073  
                               ??_isspace 0073                                    otoa@fp 0030  
                          ??_readRegister 0079                                 ??_isupper 0073  
                                  stoa@cp 002E                                    stoa@fp 0020  
                                  putch@c 0070                          __end_of_vfprintf 1BC5  
                                  utoa@fp 0030                          __end_of_snprintf 1A34  
                                  xtoa@fp 0030                                 ??_strncmp 0077  
                               ??_toupper 0020                   __end_of__initialization 0054  
                          ?_read_I2C_data 0071                  ?_setTemperatureLimitsint 0020  
setTemperatureLimitsint@minDischarge_degC 0020                            __pcstackCOMMON 0070  
                  ??_send_I2C_controlByte 0075                              __pidataBANK2 1937  
                           __end_of_fputc 1DEA                             __end_of_fputs 1B11  
                           __end_of_myIsr 001E                              _cellVoltages 0120  
                           __end_of_putch 0004                        _RGB_AWAIT_AFE_CONN 1AA7  
                     ?_RGB_AWAIT_AFE_CONN 0070                                   ??_fputc 0075  
                                 ??_fputs 0020                                   ??_myIsr 0070  
                                 ??_putch 0071         setShortCircuitProtection@delay_us 0036  
                              __pbssBANK1 00DD                                __pbssBANK2 0120  
                    __end_of_EUSART_Write 1946                        __size_of_init_GPIO 0038  
                      __size_of_initClock 0003                        __size_of_init_TMR1 000B  
                     statemachine@success 00DC                                __pmaintext 1B11  
                    ??_RGB_AWAIT_AFE_CONN 0073                      __size_of_internal_16 0009  
                       ?_send_I2C_stopBit 0070                                   ?___lmul 0071  
                                 ?___wmul 0071     setTemperatureLimitsint@minCharge_degC 0024  
                         __CFG_PPS1WAY$ON 0000                ?_setShortCircuitProtection 0032  
                              __pintentry 0004                    ?_beginAFEcommunication 0020  
                      ??_send_I2C_stopBit 0071                            ___lmul@product 0020  
                                 ?_strlen 0071                   _shuntResistorValue_mOhm 00EF  
          setShortCircuitProtection@i_783 0045                        __size_of_vfpfcnvrt 0FA8  
                                 _PPSLOCK 0E0F                    __size_of_send_I2C_NACK 0009  
                        ___lomod@dividend 0028                           ??_read_I2C_data 0073  
                  __size_of_send_I2C_data 0009                                 ?_init_I2C 0070  
                               ?_init_AFE 0070                                 ?_init_RGB 0070  
                readRegister@recievedData 0079                   ??_setShuntResistorValue 0073  
                      __size_of_vsnprintf 0077                      __end_of_readRegister 1C2D  
                                 ___aldiv 1EDD                                   _adcGain 00E9  
                                 ___aodiv 069B                                   ___aomod 1552  
                         __size_of___lmul 0032                           __size_of___wmul 001B  
                                 ___lodiv 1E61                                   ___lomod 078E  
                               ?_vfprintf 0067                                 ?_snprintf 00CC  
                           _messageBuffer 2771           ??_AFE_getSetShortCircuitCurrent 0036  
                                 __ptext1 13B4                                   __ptext2 1A1C  
                                 __ptext3 1DEA                                   __ptext4 1B94  
                                 __ptext5 0058                                   __ptext6 01FA  
                                 __ptext7 1AC9                                   __ptext8 1A05  
                                 __ptext9 19EE                         __end_of_init_GPIO 1C65  
                       __end_of_initClock 192C                         __end_of_init_TMR1 197D  
                         __size_of_strlen 0017                                 _T1CONbits 0018  
                            __size_of_abs 0017                              __size_of_pad 0051  
                                 _isalpha 1A69                                   _isdigit 19A9  
                        ___aldiv@dividend 0028                                   _islower 1A05  
                                 _isspace 1000                                   _isupper 19EE  
                                 atoi@neg 0024                                   clrloop0 197E  
                                 _strncmp 1D44                                   _toupper 1AC9  
                    end_of_initialization 0054                                ??_init_I2C 0071  
                              ??_init_AFE 007A                                ??_init_RGB 0071  
                                 fputc@fp 0073                                   fputs@fp 007A  
                       _EUSART_Initialize 101C                        ?_EUSART_Initialize 0032  
                       __end_of_vfpfcnvrt 1000                             _send_I2C_NACK 07F7  
                        ___aldiv@quotient 002E                send_I2C_controlByte@RW_bit 0073  
                                 psplit$0 35006B                                   psplit$1 6B006C  
                                 psplit$2 6C006D                                   psplit$3 6D006E  
                                 psplit$4 6E006F                             _send_I2C_data 195F  
                               _RGB_color 1A86                                ??_vfprintf 006C  
                      EUSART_Initialize@x 007A                                ??_snprintf 00D6  
                                 strlen@a 0073                                   strlen@s 0071  
                     ??_EUSART_Initialize 0036                          __CFG_FOSC$INTOSC 0000  
                               _TRISAbits 008C                                 _TRISBbits 008D  
                               _TRISCbits 008E                                 _TRISEbits 0090  
                   __size_of_EUSART_Write 0008                         __end_of_vsnprintf 1E61  
           __end_of_SCD_threshold_setting 217A                                 _RXPPSbits 0E24  
                       _I2C_writeRegister 0801                 __end_of_EUSART_Initialize 10C5  
                   _OCD_threshold_setting 213A                        ?_I2C_writeRegister 0075  
        beginAFEcommunication@commSuccess 002B                            ?_send_I2C_NACK 0070  
                readRegister@slaveAddress 0075                            ?_send_I2C_data 0071  
                     ??_I2C_writeRegister 007B                                ?_RGB_color 0071  
                          __end_of___lmul 1BF7                               vfpfcnvrt@ap 005A  
                             vfpfcnvrt@cp 00A0                               vfpfcnvrt@fp 0057  
                             vfpfcnvrt@ll 00A7                            __end_of___wmul 1A69  
                             vfpfcnvrt@vp 00AF                              _EUSART_Write 193E  
             I2C_writeRegister@regAddress 0077             setShuntResistorValue@res_mOhm 0071  
        __size_of_setTemperatureLimitsint 0044                            __end_of_strlen 19D7  
   __end_of_AFE_getSetShortCircuitCurrent 1CF3    __size_of_AFE_getSetShortCircuitCurrent 004A  
           _AFE_getSetShortCircuitCurrent 1CA9                       start_initialization 0020  
                         ___lodiv@divisor 0020                           ___lodiv@counter 007A  
                       pnum$text5_split_1 006B                         pnum$text5_split_2 006C  
                       pnum$text5_split_3 006D                         pnum$text5_split_4 006E  
                       pnum$text5_split_5 006F                             ?_statemachine 0070  
                             __end_of_abs 19EE                               __end_of_pad 1D44  
                       _minCellTempCharge 00E5                      _maxCellTempDischarge 012C  
                    _minCellTempDischarge 0130                 __end_of_I2C_writeRegister 081F  
                       _EUSART_Write_Text 1A34                     __size_of_readRegister 0036  
                      ?_EUSART_Write_Text 0072                   ??_beginAFEcommunication 0022  
                             vfprintf@fmt 0069                                  ??___lmul 0079  
                                ??___wmul 0075               ??_setShortCircuitProtection 0038  
                             __pdataBANK2 0152                       ??_EUSART_Write_Text 0074  
           __size_of_send_I2C_controlByte 000A                                  ??_strlen 0073  
                            vsnprintf@cnt 00C4                              vsnprintf@fmt 00BD  
                             __pbssBIGRAM 2771                                 _adcOffset 00E7  
                             __pbssCOMMON 007C                            ??_statemachine 00DA  
                               ___latbits 0003          send_I2C_controlByte@BlockAddress 0071  
                              myIsr@count 00EC                             __pcstackBANK0 0020  
                           __pcstackBANK1 00A0                             __pcstackBANK2 0159  
                        ___aodiv@dividend 0028                 __size_of_send_I2C_stopBit 0008  
                             snprintf@fmt 00D0                              _readRegister 1BF7  
setTemperatureLimitsint@maxDischarge_degC 0022                 __end_of_EUSART_Write_Text 1A4E  
              __size_of_EUSART_Initialize 00A9                             ??_internal_16 0071  
                               _atoi$1386 0026                                 _atoi$1387 002A  
                               _atoi$1388 0028                          _OV_delay_setting 217A  
                       __size_of_init_I2C 0010                     I2C_writeRegister@data 0079  
                         ??_send_I2C_NACK 0071                         __size_of_init_AFE 002A  
                       __size_of_init_RGB 0005                         _send_I2C_startBit 1946  
                         ??_send_I2C_data 0073               __size_of_RGB_AWAIT_AFE_CONN 0022  
          __size_of_setShuntResistorValue 0006                                  ?___aldiv 0024  
                                ?___aodiv 0020                        ?_send_I2C_startBit 0070  
           __end_of_setShuntResistorValue 1937                                  ?___aomod 0020  
                        ___aodiv@quotient 0074                                  ?___lodiv 0020  
                                ?___lomod 0020                               ??_RGB_color 0073  
               EUSART_Initialize@baudrate 0032                         __size_of_vfprintf 0031  
                     ??_send_I2C_startBit 0071                         __size_of_snprintf 0018  
                         ___lomod@divisor 0020                           ___lomod@counter 0072  
                                ?_isalpha 0071                                  ?_isdigit 0071  
                                ?_islower 0071                                  ?_isspace 0071  
                               _init_GPIO 1C2D                                  ?_isupper 0071  
                               _initClock 1929                                 _init_TMR1 1972  
                               _currState 00EE                 _setShortCircuitProtection 1233  
              __size_of_I2C_writeRegister 001E                            __size_of_fputc 0054  
                          __size_of_fputs 0026                            __size_of_myIsr 001A  
                                ?_strncmp 0071            ?_AFE_getSetShortCircuitCurrent 0032  
                                ?_toupper 0077                            __size_of_putch 0001  
                         ___aldiv@divisor 0024                     __end_of_read_I2C_data 19A9  
                         ___aldiv@counter 002C                            ___wmul@product 0075  
                                _LATAbits 010C                                  _LATEbits 0110  
               __end_of_send_I2C_startBit 194E                                 clear_ram0 197D  
                               _tmr1_flag 00ED                                  _PIE1bits 0091  
                                _PIR1bits 0011                setShortCircuitProtection@i 0043  
                     __end_of_internal_16 195F                                 _vfpfcnvrt 0058  
                       ___wmul@multiplier 0071                   _setTemperatureLimitsint 1C65  
                              ?_init_GPIO 0070                                ?_initClock 0070  
                              ?_init_TMR1 0070                              _isspace$1413 0075  
                   send_I2C_data@databyte 0071                                vfpfcnvrt@c 00B0  
                       ___lmul@multiplier 0071                __size_of_EUSART_Write_Text 001A  
                               _vsnprintf 1DEA                         _OCD_delay_setting 215A  
                    __end_of_statemachine 147A                                vfprintf@ap 006B  
                              vfprintf@fp 0067                          __size_of___aldiv 0082  
                        __size_of___aodiv 00F3                          __size_of___aomod 00DC  
                             vsnprintf@ap 00BF                    readRegister@regAddress 0077  
                        __size_of___lodiv 007C                          __size_of___lomod 0069  
                              ?_vfpfcnvrt 0057                                snprintf@ap 00D9  
                         ___aodiv@divisor 0020                           ___aodiv@counter 0072  
                              _ANSELBbits 018D                                _ANSELCbits 018E  
                        __size_of_isalpha 001D                          __size_of_isdigit 0017  
                                _dtoa$902 003D                          _send_I2C_stopBit 194E  
                        __size_of_islower 0017                          __size_of_isspace 001C  
                                __ptext10 1A69                                  __ptext11 162E  
                                __ptext20 069B                                  __ptext12 078E  
                                __ptext21 1B63                                  __ptext13 1E61  
                                __ptext30 1B39                                  __ptext22 1CF3  
                                __ptext14 1D44                                  __ptext31 1C65  
                                __ptext23 19C0                                  __ptext15 12F1  
                                __ptext40 194E                                  __ptext32 1A4E  
                                __ptext24 1AEB                                  __ptext16 170F  
                                __ptext41 1946                                  __ptext33 1931  
                                __ptext25 1D96                                  __ptext17 0353  
                                __ptext50 1972                                  __ptext42 195F  
                                __ptext34 1233                                  __ptext26 0003  
                                __ptext18 19D7                                  __ptext51 192C  
                                __ptext43 1968                                  __ptext35 10C5  
                                __ptext27 1F5F                                  __ptext19 1552  
                                __ptext52 1989                                  __ptext44 1AA7  
                                __ptext36 1BF7                                  __ptext28 1000  
                                __ptext53 1C2D                                  __ptext45 1A86  
                                __ptext37 07F7                                  __ptext29 19A9  
                                __ptext54 1929                                  __ptext46 1A34  
                                __ptext38 1999                                  __ptext55 1956  
                                __ptext47 193E                                  __ptext39 0801  
                                __ptext56 101C                                  __ptext48 1CA9  
                                __ptext57 1EDD                                  __ptext49 1BC5  
                        __size_of_isupper 0017                 __end_of_OCD_delay_setting 216A  
                        __size_of_strncmp 0052                          __size_of_toupper 0022  
                              ?_vsnprintf 00B9                                  _init_I2C 1989  
                                _init_AFE 1B39                                  _init_RGB 192C  
                           __size_of_atoi 00A1                             __size_of_ctoa 0031  
                           __size_of_main 0028                             __size_of_dtoa 0153  
                           _SSPDATPPSbits 0E21                                 pnum$text5 0035  
                           __size_of_otoa 00F1                     _SCD_threshold_setting 216A  
                           __size_of_stoa 00C3                             __size_of_utoa 00E1  
              __size_of_send_I2C_startBit 0008                             __size_of_xtoa 0159  
                             _internal_16 1956                                _RB2PPSbits 0E9A  
                              _RC1STAbits 019D                                 stoa@F1152 0152  
                              _RC4PPSbits 0EA4            __size_of_beginAFEcommunication 00B4  
                           _SSPCLKPPSbits 0E20             __end_of_beginAFEcommunication 1179  
                                int$flags 007E                                _RC5PPSbits 0EA5  
                                _protect1 00EB                                  _xtoa$938 0043  
                                _xtoa$939 0045                 ??_setTemperatureLimitsint 0077  
                                _vfprintf 1B94                                  _snprintf 1A1C  
                        ___aomod@dividend 0028                  __end_of_OV_delay_setting 2182  
                              _INTCONbits 000B                               ??_init_GPIO 0071  
                             ??_initClock 0071                               ??_init_TMR1 0071  
                          __pstringtext10 2092                            __pstringtext11 20BD  
                          __pstringtext20 21AA                            __pstringtext12 20E8  
                          __pstringtext21 21AE                            __pstringtext13 2112  
                          __pstringtext30 21C9                            __pstringtext22 21B1  
                          __pstringtext14 2192                            __pstringtext31 21CC  
                          __pstringtext23 21B4                            __pstringtext15 2196  
                          __pstringtext32 21CF                            __pstringtext24 21B7  
                          __pstringtext16 219A                            __pstringtext33 21D2  
                          __pstringtext25 21BA                            __pstringtext17 219E  
                          __pstringtext34 21D5                            __pstringtext26 21BD  
                          __pstringtext18 21A2                            __pstringtext35 0000  
                          __pstringtext27 21C0                            __pstringtext19 21A6  
                          __pstringtext28 21C3                            __pstringtext29 21C6  
                                isalpha@c 0071                                  isdigit@c 0071  
                              vsnprintf@f 00C6                                vsnprintf@n 00BB  
                              vsnprintf@s 00B9                          _UV_delay_setting 2182  
                               snprintf@n 00CE                                 snprintf@s 00CC  
            __end_of_send_I2C_controlByte 1972                                  intlevel1 0000  
     setShortCircuitProtection@current_mA 0032                                  islower@c 0071  
                                isspace@c 0071                         __CFG_CLKOUTEN$OFF 0000  
                             _PPSLOCKbits 0E0F                                  isupper@c 0071  
      __size_of_setShortCircuitProtection 00BE                                 strncmp@_l 0071  
                               strncmp@_r 0073                         _maxCellTempCharge 012E  
                         ___aomod@divisor 0020                               ??_vfpfcnvrt 005B  
                                stoa@nuls 0023                           ___aomod@counter 0072  
                           _vfpfcnvrt$953 00A3                             _vfpfcnvrt$954 00A5  
                           __pstringtext1 213A                             __pstringtext2 215A  
                           __pstringtext3 216A                             __pstringtext4 217A  
                           __pstringtext5 2182                             __pstringtext6 218A  
                           __pstringtext7 2000                             __pstringtext8 2037  
                           __pstringtext9 2065                            _vsnprintf$1530 00C2  
                                strncmp@l 0078                                  strncmp@n 0075  
                                strncmp@r 007A                                  toupper@c 0077  
                   EUSART_Write_Text@text 0072                              ___aldiv@sign 002D  
                             _SSPCON2bits 0216           __end_of_setTemperatureLimitsint 1CA9  
                      EUSART_Write@txData 0071                              ___aodiv@sign 0073  
                             ??_vsnprintf 00C0                     __size_of_statemachine 00C6  
                             _toggleColor 007C                                _SSPCONbits 0215  
              __end_of_RGB_AWAIT_AFE_CONN 1AC9                              ___aomod@sign 0073  
                      EUSART_Write_Text@i 0075                     __end_of_send_I2C_NACK 0800  
