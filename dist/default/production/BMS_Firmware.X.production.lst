

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Jan 01 14:27:00 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1719
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	stringtext14,global,class=STRCODE,delta=2
    19                           	psect	stringtext15,global,class=STRCODE,delta=2
    20                           	psect	stringtext16,global,class=STRCODE,delta=2
    21                           	psect	stringtext17,global,class=STRCODE,delta=2
    22                           	psect	stringtext18,global,class=STRCODE,delta=2
    23                           	psect	stringtext19,global,class=STRCODE,delta=2
    24                           	psect	stringtext20,global,class=STRCODE,delta=2
    25                           	psect	stringtext21,global,class=STRCODE,delta=2
    26                           	psect	stringtext22,global,class=STRCODE,delta=2
    27                           	psect	stringtext23,global,class=STRCODE,delta=2
    28                           	psect	stringtext24,global,class=STRCODE,delta=2
    29                           	psect	stringtext25,global,class=STRCODE,delta=2
    30                           	psect	stringtext26,global,class=STRCODE,delta=2
    31                           	psect	stringtext27,global,class=STRCODE,delta=2
    32                           	psect	stringtext28,global,class=STRCODE,delta=2
    33                           	psect	stringtext29,global,class=STRCODE,delta=2
    34                           	psect	stringtext30,global,class=STRCODE,delta=2
    35                           	psect	stringtext31,global,class=STRCODE,delta=2
    36                           	psect	stringtext32,global,class=STRCODE,delta=2
    37                           	psect	stringtext33,global,class=STRCODE,delta=2
    38                           	psect	stringtext34,global,class=STRCODE,delta=2
    39                           	psect	stringtext35,global,class=STRCODE,delta=2
    40                           	psect	stringtext36,global,class=STRCODE,delta=2
    41                           	psect	stringtext37,global,class=STRCODE,delta=2
    42                           	psect	stringtext38,global,class=STRCODE,delta=2
    43                           	psect	stringtext39,global,class=STRCODE,delta=2
    44                           	psect	stringtext40,global,class=STRCODE,delta=2
    45                           	psect	stringtext41,global,class=STRCODE,delta=2
    46                           	psect	stringtext42,global,class=STRCODE,delta=2
    47                           	psect	stringtext43,global,class=STRCODE,delta=2
    48                           	psect	stringtext44,global,class=STRCODE,delta=2
    49                           	psect	stringtext45,global,class=STRCODE,delta=2
    50                           	psect	stringtext46,global,class=STRCODE,delta=2
    51                           	psect	stringtext47,global,class=STRCODE,delta=2
    52                           	psect	stringtext48,global,class=STRCODE,delta=2
    53                           	psect	stringtext49,global,class=STRCODE,delta=2
    54                           	psect	stringtext50,global,class=STRCODE,delta=2
    55                           	psect	stringtext51,global,class=STRCODE,delta=2
    56                           	psect	stringtext52,global,class=STRCODE,delta=2
    57                           	psect	stringtext53,global,class=STRCODE,delta=2
    58                           	psect	stringtext54,global,class=STRCODE,delta=2
    59                           	psect	stringtext55,global,class=STRCODE,delta=2
    60                           	psect	cinit,global,class=CODE,merge=1,delta=2
    61                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    62                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    63                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    64                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    65                           	psect	clrtext,global,class=CODE,delta=2
    66                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    67                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    68                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    69                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    70                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    71                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    72                           	psect	text1,local,class=CODE,merge=1,delta=2
    73                           	psect	text2,local,class=CODE,merge=1,delta=2
    74                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    75                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    76                           	psect	text5,local,class=CODE,merge=1,delta=2
    77                           	psect	text6,local,class=CODE,merge=1,delta=2
    78                           	psect	text7,local,class=CODE,merge=1,delta=2
    79                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    80                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    81                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    82                           	psect	text11,local,class=CODE,merge=1,delta=2
    83                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    84                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    85                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    86                           	psect	text15,local,class=CODE,merge=1,delta=2
    87                           	psect	text16,local,class=CODE,merge=1,delta=2
    88                           	psect	text17,local,class=CODE,merge=1,delta=2
    89                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    90                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    91                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    92                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    93                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    94                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    95                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    96                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    97                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    98                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    99                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
   100                           	psect	text29,local,class=CODE,merge=1,delta=2
   101                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
   102                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
   103                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
   104                           	psect	text33,local,class=CODE,merge=1,delta=2
   105                           	psect	text34,local,class=CODE,merge=1,delta=2
   106                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
   107                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
   108                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
   109                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
   110                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
   111                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
   112                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
   113                           	psect	text42,local,class=CODE,merge=1,delta=2
   114                           	psect	text43,local,class=CODE,merge=1,delta=2
   115                           	psect	text44,local,class=CODE,merge=1,delta=2
   116                           	psect	text45,local,class=CODE,merge=1,delta=2
   117                           	psect	text46,local,class=CODE,merge=1,delta=2,group=1
   118                           	psect	text47,local,class=CODE,merge=1,delta=2
   119                           	psect	text48,local,class=CODE,merge=1,delta=2
   120                           	psect	text49,local,class=CODE,merge=1,delta=2
   121                           	psect	text50,local,class=CODE,merge=1,delta=2,group=1
   122                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
   123                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
   124                           	psect	text53,local,class=CODE,merge=1,delta=2
   125                           	psect	text54,local,class=CODE,merge=1,delta=2
   126                           	psect	text55,local,class=CODE,merge=1,delta=2,group=1
   127                           	psect	text56,local,class=CODE,merge=1,delta=2
   128                           	psect	text57,local,class=CODE,merge=1,delta=2
   129                           	psect	text58,local,class=CODE,merge=1,delta=2
   130                           	psect	text59,local,class=CODE,merge=1,delta=2
   131                           	psect	text60,local,class=CODE,merge=1,delta=2
   132                           	psect	text61,local,class=CODE,merge=1,delta=2
   133                           	psect	text62,local,class=CODE,merge=1,delta=2
   134                           	psect	text63,local,class=CODE,merge=1,delta=2
   135                           	psect	text64,local,class=CODE,merge=1,delta=2
   136                           	psect	text65,local,class=CODE,merge=1,delta=2
   137                           	psect	text66,local,class=CODE,merge=1,delta=2
   138                           	psect	text67,local,class=CODE,merge=1,delta=2
   139                           	psect	text68,local,class=CODE,merge=1,delta=2
   140                           	psect	text69,local,class=CODE,merge=1,delta=2
   141                           	psect	text70,local,class=CODE,merge=1,delta=2,group=1
   142                           	psect	text71,local,class=CODE,merge=1,delta=2,group=1
   143                           	psect	text72,local,class=CODE,merge=1,delta=2,group=1
   144                           	psect	text73,local,class=CODE,merge=1,delta=2
   145                           	psect	text74,local,class=CODE,merge=1,delta=2
   146                           	psect	text75,local,class=CODE,merge=1,delta=2
   147                           	psect	text76,local,class=CODE,merge=1,delta=2
   148                           	psect	text77,local,class=CODE,merge=1,delta=2
   149                           	psect	text78,local,class=CODE,merge=1,delta=2
   150                           	psect	text79,local,class=CODE,merge=1,delta=2
   151                           	psect	text80,local,class=CODE,merge=1,delta=2
   152                           	psect	text81,local,class=CODE,merge=1,delta=2,group=1
   153                           	psect	intentry,global,class=CODE,delta=2
   154                           	psect	text6_split_1,local,class=CODE,merge=1,delta=2
   155                           	psect	text6_split_2,local,class=CODE,merge=1,delta=2
   156                           	psect	text6_split_3,local,class=CODE,merge=1,delta=2
   157                           	psect	text6_split_4,local,class=CODE,merge=1,delta=2
   158                           	psect	text6_split_5,local,class=CODE,merge=1,delta=2
   159                           	psect	text6_split_6,local,class=CODE,merge=1,delta=2
   160                           	psect	text6_split_7,local,class=CODE,merge=1,delta=2
   161                           	psect	text6_split_8,local,class=CODE,merge=1,delta=2
   162                           	dabs	1,0xCA0,32
   163                           	dabs	1,0xC20,80
   164                           	dabs	1,0xBE1,15
   165                           	dabs	1,0x2771,0,_messageBuffer
   166                           	dabs	1,0x7E,2
   167  0000                     
   168                           ; Version 2.05
   169                           ; Generated 20/12/2018 GMT
   170                           ; 
   171                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   172                           ; All rights reserved.
   173                           ; 
   174                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   175                           ; 
   176                           ; Redistribution and use in source and binary forms, with or without modification, are
   177                           ; permitted provided that the following conditions are met:
   178                           ; 
   179                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   180                           ;        conditions and the following disclaimer.
   181                           ; 
   182                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   183                           ;        of conditions and the following disclaimer in the documentation and/or other
   184                           ;        materials provided with the distribution.
   185                           ; 
   186                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   187                           ;        software without specific prior written permission.
   188                           ; 
   189                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   190                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   191                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   192                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   193                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   194                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   195                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   196                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   197                           ; 
   198                           ; 
   199                           ; Code-generator required, PIC16F1719 Definitions
   200                           ; 
   201                           ; SFR Addresses
   202  0000                     	;# 
   203  0001                     	;# 
   204  0002                     	;# 
   205  0003                     	;# 
   206  0004                     	;# 
   207  0005                     	;# 
   208  0006                     	;# 
   209  0007                     	;# 
   210  0008                     	;# 
   211  0009                     	;# 
   212  000A                     	;# 
   213  000B                     	;# 
   214  000C                     	;# 
   215  000D                     	;# 
   216  000E                     	;# 
   217  000F                     	;# 
   218  0010                     	;# 
   219  0011                     	;# 
   220  0012                     	;# 
   221  0013                     	;# 
   222  0015                     	;# 
   223  0016                     	;# 
   224  0016                     	;# 
   225  0017                     	;# 
   226  0018                     	;# 
   227  0019                     	;# 
   228  001A                     	;# 
   229  001B                     	;# 
   230  001C                     	;# 
   231  008C                     	;# 
   232  008D                     	;# 
   233  008E                     	;# 
   234  008F                     	;# 
   235  0090                     	;# 
   236  0091                     	;# 
   237  0092                     	;# 
   238  0093                     	;# 
   239  0095                     	;# 
   240  0096                     	;# 
   241  0097                     	;# 
   242  0098                     	;# 
   243  0099                     	;# 
   244  009A                     	;# 
   245  009B                     	;# 
   246  009B                     	;# 
   247  009C                     	;# 
   248  009D                     	;# 
   249  009E                     	;# 
   250  009F                     	;# 
   251  010C                     	;# 
   252  010D                     	;# 
   253  010E                     	;# 
   254  010F                     	;# 
   255  0110                     	;# 
   256  0111                     	;# 
   257  0112                     	;# 
   258  0113                     	;# 
   259  0114                     	;# 
   260  0115                     	;# 
   261  0116                     	;# 
   262  0117                     	;# 
   263  0118                     	;# 
   264  0119                     	;# 
   265  011A                     	;# 
   266  011B                     	;# 
   267  011B                     	;# 
   268  011C                     	;# 
   269  018C                     	;# 
   270  018D                     	;# 
   271  018E                     	;# 
   272  018F                     	;# 
   273  0190                     	;# 
   274  0191                     	;# 
   275  0191                     	;# 
   276  0192                     	;# 
   277  0193                     	;# 
   278  0193                     	;# 
   279  0194                     	;# 
   280  0195                     	;# 
   281  0196                     	;# 
   282  0197                     	;# 
   283  0199                     	;# 
   284  0199                     	;# 
   285  0199                     	;# 
   286  019A                     	;# 
   287  019A                     	;# 
   288  019A                     	;# 
   289  019B                     	;# 
   290  019B                     	;# 
   291  019B                     	;# 
   292  019B                     	;# 
   293  019B                     	;# 
   294  019C                     	;# 
   295  019C                     	;# 
   296  019C                     	;# 
   297  019D                     	;# 
   298  019D                     	;# 
   299  019D                     	;# 
   300  019E                     	;# 
   301  019E                     	;# 
   302  019E                     	;# 
   303  019F                     	;# 
   304  019F                     	;# 
   305  019F                     	;# 
   306  019F                     	;# 
   307  019F                     	;# 
   308  020C                     	;# 
   309  020D                     	;# 
   310  020E                     	;# 
   311  020F                     	;# 
   312  0210                     	;# 
   313  0211                     	;# 
   314  0211                     	;# 
   315  0212                     	;# 
   316  0212                     	;# 
   317  0213                     	;# 
   318  0213                     	;# 
   319  0214                     	;# 
   320  0214                     	;# 
   321  0215                     	;# 
   322  0215                     	;# 
   323  0215                     	;# 
   324  0215                     	;# 
   325  0216                     	;# 
   326  0216                     	;# 
   327  0217                     	;# 
   328  0217                     	;# 
   329  028C                     	;# 
   330  028D                     	;# 
   331  028E                     	;# 
   332  028F                     	;# 
   333  0290                     	;# 
   334  0291                     	;# 
   335  0291                     	;# 
   336  0292                     	;# 
   337  0293                     	;# 
   338  0293                     	;# 
   339  0298                     	;# 
   340  0298                     	;# 
   341  0299                     	;# 
   342  029A                     	;# 
   343  029A                     	;# 
   344  029E                     	;# 
   345  030C                     	;# 
   346  030D                     	;# 
   347  030E                     	;# 
   348  030F                     	;# 
   349  0310                     	;# 
   350  038C                     	;# 
   351  038D                     	;# 
   352  038E                     	;# 
   353  038F                     	;# 
   354  0390                     	;# 
   355  0391                     	;# 
   356  0392                     	;# 
   357  0393                     	;# 
   358  0394                     	;# 
   359  0395                     	;# 
   360  0396                     	;# 
   361  0397                     	;# 
   362  0398                     	;# 
   363  0399                     	;# 
   364  039D                     	;# 
   365  039E                     	;# 
   366  039F                     	;# 
   367  0415                     	;# 
   368  0416                     	;# 
   369  0417                     	;# 
   370  041C                     	;# 
   371  041D                     	;# 
   372  041E                     	;# 
   373  0498                     	;# 
   374  0498                     	;# 
   375  0499                     	;# 
   376  049A                     	;# 
   377  049B                     	;# 
   378  049B                     	;# 
   379  049C                     	;# 
   380  049D                     	;# 
   381  049E                     	;# 
   382  049F                     	;# 
   383  0511                     	;# 
   384  0515                     	;# 
   385  0617                     	;# 
   386  0618                     	;# 
   387  0619                     	;# 
   388  0619                     	;# 
   389  061A                     	;# 
   390  061B                     	;# 
   391  061C                     	;# 
   392  061C                     	;# 
   393  0691                     	;# 
   394  0692                     	;# 
   395  0693                     	;# 
   396  0694                     	;# 
   397  0695                     	;# 
   398  0696                     	;# 
   399  0697                     	;# 
   400  0698                     	;# 
   401  0699                     	;# 
   402  069A                     	;# 
   403  069B                     	;# 
   404  069C                     	;# 
   405  069D                     	;# 
   406  069E                     	;# 
   407  069F                     	;# 
   408  0E0F                     	;# 
   409  0E10                     	;# 
   410  0E11                     	;# 
   411  0E12                     	;# 
   412  0E13                     	;# 
   413  0E14                     	;# 
   414  0E15                     	;# 
   415  0E17                     	;# 
   416  0E20                     	;# 
   417  0E21                     	;# 
   418  0E22                     	;# 
   419  0E24                     	;# 
   420  0E25                     	;# 
   421  0E28                     	;# 
   422  0E29                     	;# 
   423  0E2A                     	;# 
   424  0E2B                     	;# 
   425  0E90                     	;# 
   426  0E91                     	;# 
   427  0E92                     	;# 
   428  0E93                     	;# 
   429  0E94                     	;# 
   430  0E95                     	;# 
   431  0E96                     	;# 
   432  0E97                     	;# 
   433  0E98                     	;# 
   434  0E99                     	;# 
   435  0E9A                     	;# 
   436  0E9B                     	;# 
   437  0E9C                     	;# 
   438  0E9D                     	;# 
   439  0E9E                     	;# 
   440  0E9F                     	;# 
   441  0EA0                     	;# 
   442  0EA1                     	;# 
   443  0EA2                     	;# 
   444  0EA3                     	;# 
   445  0EA4                     	;# 
   446  0EA5                     	;# 
   447  0EA6                     	;# 
   448  0EA7                     	;# 
   449  0EA8                     	;# 
   450  0EA9                     	;# 
   451  0EAA                     	;# 
   452  0EAB                     	;# 
   453  0EAC                     	;# 
   454  0EAD                     	;# 
   455  0EAE                     	;# 
   456  0EAF                     	;# 
   457  0EB0                     	;# 
   458  0EB1                     	;# 
   459  0EB2                     	;# 
   460  0F0F                     	;# 
   461  0F10                     	;# 
   462  0F11                     	;# 
   463  0F12                     	;# 
   464  0F13                     	;# 
   465  0F14                     	;# 
   466  0F15                     	;# 
   467  0F16                     	;# 
   468  0F17                     	;# 
   469  0F18                     	;# 
   470  0F19                     	;# 
   471  0F1A                     	;# 
   472  0F1B                     	;# 
   473  0F1C                     	;# 
   474  0F1D                     	;# 
   475  0F1E                     	;# 
   476  0F1F                     	;# 
   477  0F20                     	;# 
   478  0F21                     	;# 
   479  0F22                     	;# 
   480  0F23                     	;# 
   481  0F24                     	;# 
   482  0F25                     	;# 
   483  0F26                     	;# 
   484  0F27                     	;# 
   485  0F28                     	;# 
   486  0F29                     	;# 
   487  0F2A                     	;# 
   488  0F2B                     	;# 
   489  0F2C                     	;# 
   490  0F2D                     	;# 
   491  0F2E                     	;# 
   492  0F2F                     	;# 
   493  0F30                     	;# 
   494  0F31                     	;# 
   495  0F32                     	;# 
   496  0F33                     	;# 
   497  0F34                     	;# 
   498  0F35                     	;# 
   499  0F36                     	;# 
   500  0F37                     	;# 
   501  0FE4                     	;# 
   502  0FE5                     	;# 
   503  0FE6                     	;# 
   504  0FE7                     	;# 
   505  0FE8                     	;# 
   506  0FE9                     	;# 
   507  0FEA                     	;# 
   508  0FEB                     	;# 
   509  0FED                     	;# 
   510  0FEE                     	;# 
   511  0FEF                     	;# 
   512  0000                     	;# 
   513  0001                     	;# 
   514  0002                     	;# 
   515  0003                     	;# 
   516  0004                     	;# 
   517  0005                     	;# 
   518  0006                     	;# 
   519  0007                     	;# 
   520  0008                     	;# 
   521  0009                     	;# 
   522  000A                     	;# 
   523  000B                     	;# 
   524  000C                     	;# 
   525  000D                     	;# 
   526  000E                     	;# 
   527  000F                     	;# 
   528  0010                     	;# 
   529  0011                     	;# 
   530  0012                     	;# 
   531  0013                     	;# 
   532  0015                     	;# 
   533  0016                     	;# 
   534  0016                     	;# 
   535  0017                     	;# 
   536  0018                     	;# 
   537  0019                     	;# 
   538  001A                     	;# 
   539  001B                     	;# 
   540  001C                     	;# 
   541  008C                     	;# 
   542  008D                     	;# 
   543  008E                     	;# 
   544  008F                     	;# 
   545  0090                     	;# 
   546  0091                     	;# 
   547  0092                     	;# 
   548  0093                     	;# 
   549  0095                     	;# 
   550  0096                     	;# 
   551  0097                     	;# 
   552  0098                     	;# 
   553  0099                     	;# 
   554  009A                     	;# 
   555  009B                     	;# 
   556  009B                     	;# 
   557  009C                     	;# 
   558  009D                     	;# 
   559  009E                     	;# 
   560  009F                     	;# 
   561  010C                     	;# 
   562  010D                     	;# 
   563  010E                     	;# 
   564  010F                     	;# 
   565  0110                     	;# 
   566  0111                     	;# 
   567  0112                     	;# 
   568  0113                     	;# 
   569  0114                     	;# 
   570  0115                     	;# 
   571  0116                     	;# 
   572  0117                     	;# 
   573  0118                     	;# 
   574  0119                     	;# 
   575  011A                     	;# 
   576  011B                     	;# 
   577  011B                     	;# 
   578  011C                     	;# 
   579  018C                     	;# 
   580  018D                     	;# 
   581  018E                     	;# 
   582  018F                     	;# 
   583  0190                     	;# 
   584  0191                     	;# 
   585  0191                     	;# 
   586  0192                     	;# 
   587  0193                     	;# 
   588  0193                     	;# 
   589  0194                     	;# 
   590  0195                     	;# 
   591  0196                     	;# 
   592  0197                     	;# 
   593  0199                     	;# 
   594  0199                     	;# 
   595  0199                     	;# 
   596  019A                     	;# 
   597  019A                     	;# 
   598  019A                     	;# 
   599  019B                     	;# 
   600  019B                     	;# 
   601  019B                     	;# 
   602  019B                     	;# 
   603  019B                     	;# 
   604  019C                     	;# 
   605  019C                     	;# 
   606  019C                     	;# 
   607  019D                     	;# 
   608  019D                     	;# 
   609  019D                     	;# 
   610  019E                     	;# 
   611  019E                     	;# 
   612  019E                     	;# 
   613  019F                     	;# 
   614  019F                     	;# 
   615  019F                     	;# 
   616  019F                     	;# 
   617  019F                     	;# 
   618  020C                     	;# 
   619  020D                     	;# 
   620  020E                     	;# 
   621  020F                     	;# 
   622  0210                     	;# 
   623  0211                     	;# 
   624  0211                     	;# 
   625  0212                     	;# 
   626  0212                     	;# 
   627  0213                     	;# 
   628  0213                     	;# 
   629  0214                     	;# 
   630  0214                     	;# 
   631  0215                     	;# 
   632  0215                     	;# 
   633  0215                     	;# 
   634  0215                     	;# 
   635  0216                     	;# 
   636  0216                     	;# 
   637  0217                     	;# 
   638  0217                     	;# 
   639  028C                     	;# 
   640  028D                     	;# 
   641  028E                     	;# 
   642  028F                     	;# 
   643  0290                     	;# 
   644  0291                     	;# 
   645  0291                     	;# 
   646  0292                     	;# 
   647  0293                     	;# 
   648  0293                     	;# 
   649  0298                     	;# 
   650  0298                     	;# 
   651  0299                     	;# 
   652  029A                     	;# 
   653  029A                     	;# 
   654  029E                     	;# 
   655  030C                     	;# 
   656  030D                     	;# 
   657  030E                     	;# 
   658  030F                     	;# 
   659  0310                     	;# 
   660  038C                     	;# 
   661  038D                     	;# 
   662  038E                     	;# 
   663  038F                     	;# 
   664  0390                     	;# 
   665  0391                     	;# 
   666  0392                     	;# 
   667  0393                     	;# 
   668  0394                     	;# 
   669  0395                     	;# 
   670  0396                     	;# 
   671  0397                     	;# 
   672  0398                     	;# 
   673  0399                     	;# 
   674  039D                     	;# 
   675  039E                     	;# 
   676  039F                     	;# 
   677  0415                     	;# 
   678  0416                     	;# 
   679  0417                     	;# 
   680  041C                     	;# 
   681  041D                     	;# 
   682  041E                     	;# 
   683  0498                     	;# 
   684  0498                     	;# 
   685  0499                     	;# 
   686  049A                     	;# 
   687  049B                     	;# 
   688  049B                     	;# 
   689  049C                     	;# 
   690  049D                     	;# 
   691  049E                     	;# 
   692  049F                     	;# 
   693  0511                     	;# 
   694  0515                     	;# 
   695  0617                     	;# 
   696  0618                     	;# 
   697  0619                     	;# 
   698  0619                     	;# 
   699  061A                     	;# 
   700  061B                     	;# 
   701  061C                     	;# 
   702  061C                     	;# 
   703  0691                     	;# 
   704  0692                     	;# 
   705  0693                     	;# 
   706  0694                     	;# 
   707  0695                     	;# 
   708  0696                     	;# 
   709  0697                     	;# 
   710  0698                     	;# 
   711  0699                     	;# 
   712  069A                     	;# 
   713  069B                     	;# 
   714  069C                     	;# 
   715  069D                     	;# 
   716  069E                     	;# 
   717  069F                     	;# 
   718  0E0F                     	;# 
   719  0E10                     	;# 
   720  0E11                     	;# 
   721  0E12                     	;# 
   722  0E13                     	;# 
   723  0E14                     	;# 
   724  0E15                     	;# 
   725  0E17                     	;# 
   726  0E20                     	;# 
   727  0E21                     	;# 
   728  0E22                     	;# 
   729  0E24                     	;# 
   730  0E25                     	;# 
   731  0E28                     	;# 
   732  0E29                     	;# 
   733  0E2A                     	;# 
   734  0E2B                     	;# 
   735  0E90                     	;# 
   736  0E91                     	;# 
   737  0E92                     	;# 
   738  0E93                     	;# 
   739  0E94                     	;# 
   740  0E95                     	;# 
   741  0E96                     	;# 
   742  0E97                     	;# 
   743  0E98                     	;# 
   744  0E99                     	;# 
   745  0E9A                     	;# 
   746  0E9B                     	;# 
   747  0E9C                     	;# 
   748  0E9D                     	;# 
   749  0E9E                     	;# 
   750  0E9F                     	;# 
   751  0EA0                     	;# 
   752  0EA1                     	;# 
   753  0EA2                     	;# 
   754  0EA3                     	;# 
   755  0EA4                     	;# 
   756  0EA5                     	;# 
   757  0EA6                     	;# 
   758  0EA7                     	;# 
   759  0EA8                     	;# 
   760  0EA9                     	;# 
   761  0EAA                     	;# 
   762  0EAB                     	;# 
   763  0EAC                     	;# 
   764  0EAD                     	;# 
   765  0EAE                     	;# 
   766  0EAF                     	;# 
   767  0EB0                     	;# 
   768  0EB1                     	;# 
   769  0EB2                     	;# 
   770  0F0F                     	;# 
   771  0F10                     	;# 
   772  0F11                     	;# 
   773  0F12                     	;# 
   774  0F13                     	;# 
   775  0F14                     	;# 
   776  0F15                     	;# 
   777  0F16                     	;# 
   778  0F17                     	;# 
   779  0F18                     	;# 
   780  0F19                     	;# 
   781  0F1A                     	;# 
   782  0F1B                     	;# 
   783  0F1C                     	;# 
   784  0F1D                     	;# 
   785  0F1E                     	;# 
   786  0F1F                     	;# 
   787  0F20                     	;# 
   788  0F21                     	;# 
   789  0F22                     	;# 
   790  0F23                     	;# 
   791  0F24                     	;# 
   792  0F25                     	;# 
   793  0F26                     	;# 
   794  0F27                     	;# 
   795  0F28                     	;# 
   796  0F29                     	;# 
   797  0F2A                     	;# 
   798  0F2B                     	;# 
   799  0F2C                     	;# 
   800  0F2D                     	;# 
   801  0F2E                     	;# 
   802  0F2F                     	;# 
   803  0F30                     	;# 
   804  0F31                     	;# 
   805  0F32                     	;# 
   806  0F33                     	;# 
   807  0F34                     	;# 
   808  0F35                     	;# 
   809  0F36                     	;# 
   810  0F37                     	;# 
   811  0FE4                     	;# 
   812  0FE5                     	;# 
   813  0FE6                     	;# 
   814  0FE7                     	;# 
   815  0FE8                     	;# 
   816  0FE9                     	;# 
   817  0FEA                     	;# 
   818  0FEB                     	;# 
   819  0FED                     	;# 
   820  0FEE                     	;# 
   821  0FEF                     	;# 
   822  0000                     	;# 
   823  0001                     	;# 
   824  0002                     	;# 
   825  0003                     	;# 
   826  0004                     	;# 
   827  0005                     	;# 
   828  0006                     	;# 
   829  0007                     	;# 
   830  0008                     	;# 
   831  0009                     	;# 
   832  000A                     	;# 
   833  000B                     	;# 
   834  000C                     	;# 
   835  000D                     	;# 
   836  000E                     	;# 
   837  000F                     	;# 
   838  0010                     	;# 
   839  0011                     	;# 
   840  0012                     	;# 
   841  0013                     	;# 
   842  0015                     	;# 
   843  0016                     	;# 
   844  0016                     	;# 
   845  0017                     	;# 
   846  0018                     	;# 
   847  0019                     	;# 
   848  001A                     	;# 
   849  001B                     	;# 
   850  001C                     	;# 
   851  008C                     	;# 
   852  008D                     	;# 
   853  008E                     	;# 
   854  008F                     	;# 
   855  0090                     	;# 
   856  0091                     	;# 
   857  0092                     	;# 
   858  0093                     	;# 
   859  0095                     	;# 
   860  0096                     	;# 
   861  0097                     	;# 
   862  0098                     	;# 
   863  0099                     	;# 
   864  009A                     	;# 
   865  009B                     	;# 
   866  009B                     	;# 
   867  009C                     	;# 
   868  009D                     	;# 
   869  009E                     	;# 
   870  009F                     	;# 
   871  010C                     	;# 
   872  010D                     	;# 
   873  010E                     	;# 
   874  010F                     	;# 
   875  0110                     	;# 
   876  0111                     	;# 
   877  0112                     	;# 
   878  0113                     	;# 
   879  0114                     	;# 
   880  0115                     	;# 
   881  0116                     	;# 
   882  0117                     	;# 
   883  0118                     	;# 
   884  0119                     	;# 
   885  011A                     	;# 
   886  011B                     	;# 
   887  011B                     	;# 
   888  011C                     	;# 
   889  018C                     	;# 
   890  018D                     	;# 
   891  018E                     	;# 
   892  018F                     	;# 
   893  0190                     	;# 
   894  0191                     	;# 
   895  0191                     	;# 
   896  0192                     	;# 
   897  0193                     	;# 
   898  0193                     	;# 
   899  0194                     	;# 
   900  0195                     	;# 
   901  0196                     	;# 
   902  0197                     	;# 
   903  0199                     	;# 
   904  0199                     	;# 
   905  0199                     	;# 
   906  019A                     	;# 
   907  019A                     	;# 
   908  019A                     	;# 
   909  019B                     	;# 
   910  019B                     	;# 
   911  019B                     	;# 
   912  019B                     	;# 
   913  019B                     	;# 
   914  019C                     	;# 
   915  019C                     	;# 
   916  019C                     	;# 
   917  019D                     	;# 
   918  019D                     	;# 
   919  019D                     	;# 
   920  019E                     	;# 
   921  019E                     	;# 
   922  019E                     	;# 
   923  019F                     	;# 
   924  019F                     	;# 
   925  019F                     	;# 
   926  019F                     	;# 
   927  019F                     	;# 
   928  020C                     	;# 
   929  020D                     	;# 
   930  020E                     	;# 
   931  020F                     	;# 
   932  0210                     	;# 
   933  0211                     	;# 
   934  0211                     	;# 
   935  0212                     	;# 
   936  0212                     	;# 
   937  0213                     	;# 
   938  0213                     	;# 
   939  0214                     	;# 
   940  0214                     	;# 
   941  0215                     	;# 
   942  0215                     	;# 
   943  0215                     	;# 
   944  0215                     	;# 
   945  0216                     	;# 
   946  0216                     	;# 
   947  0217                     	;# 
   948  0217                     	;# 
   949  028C                     	;# 
   950  028D                     	;# 
   951  028E                     	;# 
   952  028F                     	;# 
   953  0290                     	;# 
   954  0291                     	;# 
   955  0291                     	;# 
   956  0292                     	;# 
   957  0293                     	;# 
   958  0293                     	;# 
   959  0298                     	;# 
   960  0298                     	;# 
   961  0299                     	;# 
   962  029A                     	;# 
   963  029A                     	;# 
   964  029E                     	;# 
   965  030C                     	;# 
   966  030D                     	;# 
   967  030E                     	;# 
   968  030F                     	;# 
   969  0310                     	;# 
   970  038C                     	;# 
   971  038D                     	;# 
   972  038E                     	;# 
   973  038F                     	;# 
   974  0390                     	;# 
   975  0391                     	;# 
   976  0392                     	;# 
   977  0393                     	;# 
   978  0394                     	;# 
   979  0395                     	;# 
   980  0396                     	;# 
   981  0397                     	;# 
   982  0398                     	;# 
   983  0399                     	;# 
   984  039D                     	;# 
   985  039E                     	;# 
   986  039F                     	;# 
   987  0415                     	;# 
   988  0416                     	;# 
   989  0417                     	;# 
   990  041C                     	;# 
   991  041D                     	;# 
   992  041E                     	;# 
   993  0498                     	;# 
   994  0498                     	;# 
   995  0499                     	;# 
   996  049A                     	;# 
   997  049B                     	;# 
   998  049B                     	;# 
   999  049C                     	;# 
  1000  049D                     	;# 
  1001  049E                     	;# 
  1002  049F                     	;# 
  1003  0511                     	;# 
  1004  0515                     	;# 
  1005  0617                     	;# 
  1006  0618                     	;# 
  1007  0619                     	;# 
  1008  0619                     	;# 
  1009  061A                     	;# 
  1010  061B                     	;# 
  1011  061C                     	;# 
  1012  061C                     	;# 
  1013  0691                     	;# 
  1014  0692                     	;# 
  1015  0693                     	;# 
  1016  0694                     	;# 
  1017  0695                     	;# 
  1018  0696                     	;# 
  1019  0697                     	;# 
  1020  0698                     	;# 
  1021  0699                     	;# 
  1022  069A                     	;# 
  1023  069B                     	;# 
  1024  069C                     	;# 
  1025  069D                     	;# 
  1026  069E                     	;# 
  1027  069F                     	;# 
  1028  0E0F                     	;# 
  1029  0E10                     	;# 
  1030  0E11                     	;# 
  1031  0E12                     	;# 
  1032  0E13                     	;# 
  1033  0E14                     	;# 
  1034  0E15                     	;# 
  1035  0E17                     	;# 
  1036  0E20                     	;# 
  1037  0E21                     	;# 
  1038  0E22                     	;# 
  1039  0E24                     	;# 
  1040  0E25                     	;# 
  1041  0E28                     	;# 
  1042  0E29                     	;# 
  1043  0E2A                     	;# 
  1044  0E2B                     	;# 
  1045  0E90                     	;# 
  1046  0E91                     	;# 
  1047  0E92                     	;# 
  1048  0E93                     	;# 
  1049  0E94                     	;# 
  1050  0E95                     	;# 
  1051  0E96                     	;# 
  1052  0E97                     	;# 
  1053  0E98                     	;# 
  1054  0E99                     	;# 
  1055  0E9A                     	;# 
  1056  0E9B                     	;# 
  1057  0E9C                     	;# 
  1058  0E9D                     	;# 
  1059  0E9E                     	;# 
  1060  0E9F                     	;# 
  1061  0EA0                     	;# 
  1062  0EA1                     	;# 
  1063  0EA2                     	;# 
  1064  0EA3                     	;# 
  1065  0EA4                     	;# 
  1066  0EA5                     	;# 
  1067  0EA6                     	;# 
  1068  0EA7                     	;# 
  1069  0EA8                     	;# 
  1070  0EA9                     	;# 
  1071  0EAA                     	;# 
  1072  0EAB                     	;# 
  1073  0EAC                     	;# 
  1074  0EAD                     	;# 
  1075  0EAE                     	;# 
  1076  0EAF                     	;# 
  1077  0EB0                     	;# 
  1078  0EB1                     	;# 
  1079  0EB2                     	;# 
  1080  0F0F                     	;# 
  1081  0F10                     	;# 
  1082  0F11                     	;# 
  1083  0F12                     	;# 
  1084  0F13                     	;# 
  1085  0F14                     	;# 
  1086  0F15                     	;# 
  1087  0F16                     	;# 
  1088  0F17                     	;# 
  1089  0F18                     	;# 
  1090  0F19                     	;# 
  1091  0F1A                     	;# 
  1092  0F1B                     	;# 
  1093  0F1C                     	;# 
  1094  0F1D                     	;# 
  1095  0F1E                     	;# 
  1096  0F1F                     	;# 
  1097  0F20                     	;# 
  1098  0F21                     	;# 
  1099  0F22                     	;# 
  1100  0F23                     	;# 
  1101  0F24                     	;# 
  1102  0F25                     	;# 
  1103  0F26                     	;# 
  1104  0F27                     	;# 
  1105  0F28                     	;# 
  1106  0F29                     	;# 
  1107  0F2A                     	;# 
  1108  0F2B                     	;# 
  1109  0F2C                     	;# 
  1110  0F2D                     	;# 
  1111  0F2E                     	;# 
  1112  0F2F                     	;# 
  1113  0F30                     	;# 
  1114  0F31                     	;# 
  1115  0F32                     	;# 
  1116  0F33                     	;# 
  1117  0F34                     	;# 
  1118  0F35                     	;# 
  1119  0F36                     	;# 
  1120  0F37                     	;# 
  1121  0FE4                     	;# 
  1122  0FE5                     	;# 
  1123  0FE6                     	;# 
  1124  0FE7                     	;# 
  1125  0FE8                     	;# 
  1126  0FE9                     	;# 
  1127  0FEA                     	;# 
  1128  0FEB                     	;# 
  1129  0FED                     	;# 
  1130  0FEE                     	;# 
  1131  0FEF                     	;# 
  1132  0000                     	;# 
  1133  0001                     	;# 
  1134  0002                     	;# 
  1135  0003                     	;# 
  1136  0004                     	;# 
  1137  0005                     	;# 
  1138  0006                     	;# 
  1139  0007                     	;# 
  1140  0008                     	;# 
  1141  0009                     	;# 
  1142  000A                     	;# 
  1143  000B                     	;# 
  1144  000C                     	;# 
  1145  000D                     	;# 
  1146  000E                     	;# 
  1147  000F                     	;# 
  1148  0010                     	;# 
  1149  0011                     	;# 
  1150  0012                     	;# 
  1151  0013                     	;# 
  1152  0015                     	;# 
  1153  0016                     	;# 
  1154  0016                     	;# 
  1155  0017                     	;# 
  1156  0018                     	;# 
  1157  0019                     	;# 
  1158  001A                     	;# 
  1159  001B                     	;# 
  1160  001C                     	;# 
  1161  008C                     	;# 
  1162  008D                     	;# 
  1163  008E                     	;# 
  1164  008F                     	;# 
  1165  0090                     	;# 
  1166  0091                     	;# 
  1167  0092                     	;# 
  1168  0093                     	;# 
  1169  0095                     	;# 
  1170  0096                     	;# 
  1171  0097                     	;# 
  1172  0098                     	;# 
  1173  0099                     	;# 
  1174  009A                     	;# 
  1175  009B                     	;# 
  1176  009B                     	;# 
  1177  009C                     	;# 
  1178  009D                     	;# 
  1179  009E                     	;# 
  1180  009F                     	;# 
  1181  010C                     	;# 
  1182  010D                     	;# 
  1183  010E                     	;# 
  1184  010F                     	;# 
  1185  0110                     	;# 
  1186  0111                     	;# 
  1187  0112                     	;# 
  1188  0113                     	;# 
  1189  0114                     	;# 
  1190  0115                     	;# 
  1191  0116                     	;# 
  1192  0117                     	;# 
  1193  0118                     	;# 
  1194  0119                     	;# 
  1195  011A                     	;# 
  1196  011B                     	;# 
  1197  011B                     	;# 
  1198  011C                     	;# 
  1199  018C                     	;# 
  1200  018D                     	;# 
  1201  018E                     	;# 
  1202  018F                     	;# 
  1203  0190                     	;# 
  1204  0191                     	;# 
  1205  0191                     	;# 
  1206  0192                     	;# 
  1207  0193                     	;# 
  1208  0193                     	;# 
  1209  0194                     	;# 
  1210  0195                     	;# 
  1211  0196                     	;# 
  1212  0197                     	;# 
  1213  0199                     	;# 
  1214  0199                     	;# 
  1215  0199                     	;# 
  1216  019A                     	;# 
  1217  019A                     	;# 
  1218  019A                     	;# 
  1219  019B                     	;# 
  1220  019B                     	;# 
  1221  019B                     	;# 
  1222  019B                     	;# 
  1223  019B                     	;# 
  1224  019C                     	;# 
  1225  019C                     	;# 
  1226  019C                     	;# 
  1227  019D                     	;# 
  1228  019D                     	;# 
  1229  019D                     	;# 
  1230  019E                     	;# 
  1231  019E                     	;# 
  1232  019E                     	;# 
  1233  019F                     	;# 
  1234  019F                     	;# 
  1235  019F                     	;# 
  1236  019F                     	;# 
  1237  019F                     	;# 
  1238  020C                     	;# 
  1239  020D                     	;# 
  1240  020E                     	;# 
  1241  020F                     	;# 
  1242  0210                     	;# 
  1243  0211                     	;# 
  1244  0211                     	;# 
  1245  0212                     	;# 
  1246  0212                     	;# 
  1247  0213                     	;# 
  1248  0213                     	;# 
  1249  0214                     	;# 
  1250  0214                     	;# 
  1251  0215                     	;# 
  1252  0215                     	;# 
  1253  0215                     	;# 
  1254  0215                     	;# 
  1255  0216                     	;# 
  1256  0216                     	;# 
  1257  0217                     	;# 
  1258  0217                     	;# 
  1259  028C                     	;# 
  1260  028D                     	;# 
  1261  028E                     	;# 
  1262  028F                     	;# 
  1263  0290                     	;# 
  1264  0291                     	;# 
  1265  0291                     	;# 
  1266  0292                     	;# 
  1267  0293                     	;# 
  1268  0293                     	;# 
  1269  0298                     	;# 
  1270  0298                     	;# 
  1271  0299                     	;# 
  1272  029A                     	;# 
  1273  029A                     	;# 
  1274  029E                     	;# 
  1275  030C                     	;# 
  1276  030D                     	;# 
  1277  030E                     	;# 
  1278  030F                     	;# 
  1279  0310                     	;# 
  1280  038C                     	;# 
  1281  038D                     	;# 
  1282  038E                     	;# 
  1283  038F                     	;# 
  1284  0390                     	;# 
  1285  0391                     	;# 
  1286  0392                     	;# 
  1287  0393                     	;# 
  1288  0394                     	;# 
  1289  0395                     	;# 
  1290  0396                     	;# 
  1291  0397                     	;# 
  1292  0398                     	;# 
  1293  0399                     	;# 
  1294  039D                     	;# 
  1295  039E                     	;# 
  1296  039F                     	;# 
  1297  0415                     	;# 
  1298  0416                     	;# 
  1299  0417                     	;# 
  1300  041C                     	;# 
  1301  041D                     	;# 
  1302  041E                     	;# 
  1303  0498                     	;# 
  1304  0498                     	;# 
  1305  0499                     	;# 
  1306  049A                     	;# 
  1307  049B                     	;# 
  1308  049B                     	;# 
  1309  049C                     	;# 
  1310  049D                     	;# 
  1311  049E                     	;# 
  1312  049F                     	;# 
  1313  0511                     	;# 
  1314  0515                     	;# 
  1315  0617                     	;# 
  1316  0618                     	;# 
  1317  0619                     	;# 
  1318  0619                     	;# 
  1319  061A                     	;# 
  1320  061B                     	;# 
  1321  061C                     	;# 
  1322  061C                     	;# 
  1323  0691                     	;# 
  1324  0692                     	;# 
  1325  0693                     	;# 
  1326  0694                     	;# 
  1327  0695                     	;# 
  1328  0696                     	;# 
  1329  0697                     	;# 
  1330  0698                     	;# 
  1331  0699                     	;# 
  1332  069A                     	;# 
  1333  069B                     	;# 
  1334  069C                     	;# 
  1335  069D                     	;# 
  1336  069E                     	;# 
  1337  069F                     	;# 
  1338  0E0F                     	;# 
  1339  0E10                     	;# 
  1340  0E11                     	;# 
  1341  0E12                     	;# 
  1342  0E13                     	;# 
  1343  0E14                     	;# 
  1344  0E15                     	;# 
  1345  0E17                     	;# 
  1346  0E20                     	;# 
  1347  0E21                     	;# 
  1348  0E22                     	;# 
  1349  0E24                     	;# 
  1350  0E25                     	;# 
  1351  0E28                     	;# 
  1352  0E29                     	;# 
  1353  0E2A                     	;# 
  1354  0E2B                     	;# 
  1355  0E90                     	;# 
  1356  0E91                     	;# 
  1357  0E92                     	;# 
  1358  0E93                     	;# 
  1359  0E94                     	;# 
  1360  0E95                     	;# 
  1361  0E96                     	;# 
  1362  0E97                     	;# 
  1363  0E98                     	;# 
  1364  0E99                     	;# 
  1365  0E9A                     	;# 
  1366  0E9B                     	;# 
  1367  0E9C                     	;# 
  1368  0E9D                     	;# 
  1369  0E9E                     	;# 
  1370  0E9F                     	;# 
  1371  0EA0                     	;# 
  1372  0EA1                     	;# 
  1373  0EA2                     	;# 
  1374  0EA3                     	;# 
  1375  0EA4                     	;# 
  1376  0EA5                     	;# 
  1377  0EA6                     	;# 
  1378  0EA7                     	;# 
  1379  0EA8                     	;# 
  1380  0EA9                     	;# 
  1381  0EAA                     	;# 
  1382  0EAB                     	;# 
  1383  0EAC                     	;# 
  1384  0EAD                     	;# 
  1385  0EAE                     	;# 
  1386  0EAF                     	;# 
  1387  0EB0                     	;# 
  1388  0EB1                     	;# 
  1389  0EB2                     	;# 
  1390  0F0F                     	;# 
  1391  0F10                     	;# 
  1392  0F11                     	;# 
  1393  0F12                     	;# 
  1394  0F13                     	;# 
  1395  0F14                     	;# 
  1396  0F15                     	;# 
  1397  0F16                     	;# 
  1398  0F17                     	;# 
  1399  0F18                     	;# 
  1400  0F19                     	;# 
  1401  0F1A                     	;# 
  1402  0F1B                     	;# 
  1403  0F1C                     	;# 
  1404  0F1D                     	;# 
  1405  0F1E                     	;# 
  1406  0F1F                     	;# 
  1407  0F20                     	;# 
  1408  0F21                     	;# 
  1409  0F22                     	;# 
  1410  0F23                     	;# 
  1411  0F24                     	;# 
  1412  0F25                     	;# 
  1413  0F26                     	;# 
  1414  0F27                     	;# 
  1415  0F28                     	;# 
  1416  0F29                     	;# 
  1417  0F2A                     	;# 
  1418  0F2B                     	;# 
  1419  0F2C                     	;# 
  1420  0F2D                     	;# 
  1421  0F2E                     	;# 
  1422  0F2F                     	;# 
  1423  0F30                     	;# 
  1424  0F31                     	;# 
  1425  0F32                     	;# 
  1426  0F33                     	;# 
  1427  0F34                     	;# 
  1428  0F35                     	;# 
  1429  0F36                     	;# 
  1430  0F37                     	;# 
  1431  0FE4                     	;# 
  1432  0FE5                     	;# 
  1433  0FE6                     	;# 
  1434  0FE7                     	;# 
  1435  0FE8                     	;# 
  1436  0FE9                     	;# 
  1437  0FEA                     	;# 
  1438  0FEB                     	;# 
  1439  0FED                     	;# 
  1440  0FEE                     	;# 
  1441  0FEF                     	;# 
  1442  0000                     	;# 
  1443  0001                     	;# 
  1444  0002                     	;# 
  1445  0003                     	;# 
  1446  0004                     	;# 
  1447  0005                     	;# 
  1448  0006                     	;# 
  1449  0007                     	;# 
  1450  0008                     	;# 
  1451  0009                     	;# 
  1452  000A                     	;# 
  1453  000B                     	;# 
  1454  000C                     	;# 
  1455  000D                     	;# 
  1456  000E                     	;# 
  1457  000F                     	;# 
  1458  0010                     	;# 
  1459  0011                     	;# 
  1460  0012                     	;# 
  1461  0013                     	;# 
  1462  0015                     	;# 
  1463  0016                     	;# 
  1464  0016                     	;# 
  1465  0017                     	;# 
  1466  0018                     	;# 
  1467  0019                     	;# 
  1468  001A                     	;# 
  1469  001B                     	;# 
  1470  001C                     	;# 
  1471  008C                     	;# 
  1472  008D                     	;# 
  1473  008E                     	;# 
  1474  008F                     	;# 
  1475  0090                     	;# 
  1476  0091                     	;# 
  1477  0092                     	;# 
  1478  0093                     	;# 
  1479  0095                     	;# 
  1480  0096                     	;# 
  1481  0097                     	;# 
  1482  0098                     	;# 
  1483  0099                     	;# 
  1484  009A                     	;# 
  1485  009B                     	;# 
  1486  009B                     	;# 
  1487  009C                     	;# 
  1488  009D                     	;# 
  1489  009E                     	;# 
  1490  009F                     	;# 
  1491  010C                     	;# 
  1492  010D                     	;# 
  1493  010E                     	;# 
  1494  010F                     	;# 
  1495  0110                     	;# 
  1496  0111                     	;# 
  1497  0112                     	;# 
  1498  0113                     	;# 
  1499  0114                     	;# 
  1500  0115                     	;# 
  1501  0116                     	;# 
  1502  0117                     	;# 
  1503  0118                     	;# 
  1504  0119                     	;# 
  1505  011A                     	;# 
  1506  011B                     	;# 
  1507  011B                     	;# 
  1508  011C                     	;# 
  1509  018C                     	;# 
  1510  018D                     	;# 
  1511  018E                     	;# 
  1512  018F                     	;# 
  1513  0190                     	;# 
  1514  0191                     	;# 
  1515  0191                     	;# 
  1516  0192                     	;# 
  1517  0193                     	;# 
  1518  0193                     	;# 
  1519  0194                     	;# 
  1520  0195                     	;# 
  1521  0196                     	;# 
  1522  0197                     	;# 
  1523  0199                     	;# 
  1524  0199                     	;# 
  1525  0199                     	;# 
  1526  019A                     	;# 
  1527  019A                     	;# 
  1528  019A                     	;# 
  1529  019B                     	;# 
  1530  019B                     	;# 
  1531  019B                     	;# 
  1532  019B                     	;# 
  1533  019B                     	;# 
  1534  019C                     	;# 
  1535  019C                     	;# 
  1536  019C                     	;# 
  1537  019D                     	;# 
  1538  019D                     	;# 
  1539  019D                     	;# 
  1540  019E                     	;# 
  1541  019E                     	;# 
  1542  019E                     	;# 
  1543  019F                     	;# 
  1544  019F                     	;# 
  1545  019F                     	;# 
  1546  019F                     	;# 
  1547  019F                     	;# 
  1548  020C                     	;# 
  1549  020D                     	;# 
  1550  020E                     	;# 
  1551  020F                     	;# 
  1552  0210                     	;# 
  1553  0211                     	;# 
  1554  0211                     	;# 
  1555  0212                     	;# 
  1556  0212                     	;# 
  1557  0213                     	;# 
  1558  0213                     	;# 
  1559  0214                     	;# 
  1560  0214                     	;# 
  1561  0215                     	;# 
  1562  0215                     	;# 
  1563  0215                     	;# 
  1564  0215                     	;# 
  1565  0216                     	;# 
  1566  0216                     	;# 
  1567  0217                     	;# 
  1568  0217                     	;# 
  1569  028C                     	;# 
  1570  028D                     	;# 
  1571  028E                     	;# 
  1572  028F                     	;# 
  1573  0290                     	;# 
  1574  0291                     	;# 
  1575  0291                     	;# 
  1576  0292                     	;# 
  1577  0293                     	;# 
  1578  0293                     	;# 
  1579  0298                     	;# 
  1580  0298                     	;# 
  1581  0299                     	;# 
  1582  029A                     	;# 
  1583  029A                     	;# 
  1584  029E                     	;# 
  1585  030C                     	;# 
  1586  030D                     	;# 
  1587  030E                     	;# 
  1588  030F                     	;# 
  1589  0310                     	;# 
  1590  038C                     	;# 
  1591  038D                     	;# 
  1592  038E                     	;# 
  1593  038F                     	;# 
  1594  0390                     	;# 
  1595  0391                     	;# 
  1596  0392                     	;# 
  1597  0393                     	;# 
  1598  0394                     	;# 
  1599  0395                     	;# 
  1600  0396                     	;# 
  1601  0397                     	;# 
  1602  0398                     	;# 
  1603  0399                     	;# 
  1604  039D                     	;# 
  1605  039E                     	;# 
  1606  039F                     	;# 
  1607  0415                     	;# 
  1608  0416                     	;# 
  1609  0417                     	;# 
  1610  041C                     	;# 
  1611  041D                     	;# 
  1612  041E                     	;# 
  1613  0498                     	;# 
  1614  0498                     	;# 
  1615  0499                     	;# 
  1616  049A                     	;# 
  1617  049B                     	;# 
  1618  049B                     	;# 
  1619  049C                     	;# 
  1620  049D                     	;# 
  1621  049E                     	;# 
  1622  049F                     	;# 
  1623  0511                     	;# 
  1624  0515                     	;# 
  1625  0617                     	;# 
  1626  0618                     	;# 
  1627  0619                     	;# 
  1628  0619                     	;# 
  1629  061A                     	;# 
  1630  061B                     	;# 
  1631  061C                     	;# 
  1632  061C                     	;# 
  1633  0691                     	;# 
  1634  0692                     	;# 
  1635  0693                     	;# 
  1636  0694                     	;# 
  1637  0695                     	;# 
  1638  0696                     	;# 
  1639  0697                     	;# 
  1640  0698                     	;# 
  1641  0699                     	;# 
  1642  069A                     	;# 
  1643  069B                     	;# 
  1644  069C                     	;# 
  1645  069D                     	;# 
  1646  069E                     	;# 
  1647  069F                     	;# 
  1648  0E0F                     	;# 
  1649  0E10                     	;# 
  1650  0E11                     	;# 
  1651  0E12                     	;# 
  1652  0E13                     	;# 
  1653  0E14                     	;# 
  1654  0E15                     	;# 
  1655  0E17                     	;# 
  1656  0E20                     	;# 
  1657  0E21                     	;# 
  1658  0E22                     	;# 
  1659  0E24                     	;# 
  1660  0E25                     	;# 
  1661  0E28                     	;# 
  1662  0E29                     	;# 
  1663  0E2A                     	;# 
  1664  0E2B                     	;# 
  1665  0E90                     	;# 
  1666  0E91                     	;# 
  1667  0E92                     	;# 
  1668  0E93                     	;# 
  1669  0E94                     	;# 
  1670  0E95                     	;# 
  1671  0E96                     	;# 
  1672  0E97                     	;# 
  1673  0E98                     	;# 
  1674  0E99                     	;# 
  1675  0E9A                     	;# 
  1676  0E9B                     	;# 
  1677  0E9C                     	;# 
  1678  0E9D                     	;# 
  1679  0E9E                     	;# 
  1680  0E9F                     	;# 
  1681  0EA0                     	;# 
  1682  0EA1                     	;# 
  1683  0EA2                     	;# 
  1684  0EA3                     	;# 
  1685  0EA4                     	;# 
  1686  0EA5                     	;# 
  1687  0EA6                     	;# 
  1688  0EA7                     	;# 
  1689  0EA8                     	;# 
  1690  0EA9                     	;# 
  1691  0EAA                     	;# 
  1692  0EAB                     	;# 
  1693  0EAC                     	;# 
  1694  0EAD                     	;# 
  1695  0EAE                     	;# 
  1696  0EAF                     	;# 
  1697  0EB0                     	;# 
  1698  0EB1                     	;# 
  1699  0EB2                     	;# 
  1700  0F0F                     	;# 
  1701  0F10                     	;# 
  1702  0F11                     	;# 
  1703  0F12                     	;# 
  1704  0F13                     	;# 
  1705  0F14                     	;# 
  1706  0F15                     	;# 
  1707  0F16                     	;# 
  1708  0F17                     	;# 
  1709  0F18                     	;# 
  1710  0F19                     	;# 
  1711  0F1A                     	;# 
  1712  0F1B                     	;# 
  1713  0F1C                     	;# 
  1714  0F1D                     	;# 
  1715  0F1E                     	;# 
  1716  0F1F                     	;# 
  1717  0F20                     	;# 
  1718  0F21                     	;# 
  1719  0F22                     	;# 
  1720  0F23                     	;# 
  1721  0F24                     	;# 
  1722  0F25                     	;# 
  1723  0F26                     	;# 
  1724  0F27                     	;# 
  1725  0F28                     	;# 
  1726  0F29                     	;# 
  1727  0F2A                     	;# 
  1728  0F2B                     	;# 
  1729  0F2C                     	;# 
  1730  0F2D                     	;# 
  1731  0F2E                     	;# 
  1732  0F2F                     	;# 
  1733  0F30                     	;# 
  1734  0F31                     	;# 
  1735  0F32                     	;# 
  1736  0F33                     	;# 
  1737  0F34                     	;# 
  1738  0F35                     	;# 
  1739  0F36                     	;# 
  1740  0F37                     	;# 
  1741  0FE4                     	;# 
  1742  0FE5                     	;# 
  1743  0FE6                     	;# 
  1744  0FE7                     	;# 
  1745  0FE8                     	;# 
  1746  0FE9                     	;# 
  1747  0FEA                     	;# 
  1748  0FEB                     	;# 
  1749  0FED                     	;# 
  1750  0FEE                     	;# 
  1751  0FEF                     	;# 
  1752  0000                     	;# 
  1753  0001                     	;# 
  1754  0002                     	;# 
  1755  0003                     	;# 
  1756  0004                     	;# 
  1757  0005                     	;# 
  1758  0006                     	;# 
  1759  0007                     	;# 
  1760  0008                     	;# 
  1761  0009                     	;# 
  1762  000A                     	;# 
  1763  000B                     	;# 
  1764  000C                     	;# 
  1765  000D                     	;# 
  1766  000E                     	;# 
  1767  000F                     	;# 
  1768  0010                     	;# 
  1769  0011                     	;# 
  1770  0012                     	;# 
  1771  0013                     	;# 
  1772  0015                     	;# 
  1773  0016                     	;# 
  1774  0016                     	;# 
  1775  0017                     	;# 
  1776  0018                     	;# 
  1777  0019                     	;# 
  1778  001A                     	;# 
  1779  001B                     	;# 
  1780  001C                     	;# 
  1781  008C                     	;# 
  1782  008D                     	;# 
  1783  008E                     	;# 
  1784  008F                     	;# 
  1785  0090                     	;# 
  1786  0091                     	;# 
  1787  0092                     	;# 
  1788  0093                     	;# 
  1789  0095                     	;# 
  1790  0096                     	;# 
  1791  0097                     	;# 
  1792  0098                     	;# 
  1793  0099                     	;# 
  1794  009A                     	;# 
  1795  009B                     	;# 
  1796  009B                     	;# 
  1797  009C                     	;# 
  1798  009D                     	;# 
  1799  009E                     	;# 
  1800  009F                     	;# 
  1801  010C                     	;# 
  1802  010D                     	;# 
  1803  010E                     	;# 
  1804  010F                     	;# 
  1805  0110                     	;# 
  1806  0111                     	;# 
  1807  0112                     	;# 
  1808  0113                     	;# 
  1809  0114                     	;# 
  1810  0115                     	;# 
  1811  0116                     	;# 
  1812  0117                     	;# 
  1813  0118                     	;# 
  1814  0119                     	;# 
  1815  011A                     	;# 
  1816  011B                     	;# 
  1817  011B                     	;# 
  1818  011C                     	;# 
  1819  018C                     	;# 
  1820  018D                     	;# 
  1821  018E                     	;# 
  1822  018F                     	;# 
  1823  0190                     	;# 
  1824  0191                     	;# 
  1825  0191                     	;# 
  1826  0192                     	;# 
  1827  0193                     	;# 
  1828  0193                     	;# 
  1829  0194                     	;# 
  1830  0195                     	;# 
  1831  0196                     	;# 
  1832  0197                     	;# 
  1833  0199                     	;# 
  1834  0199                     	;# 
  1835  0199                     	;# 
  1836  019A                     	;# 
  1837  019A                     	;# 
  1838  019A                     	;# 
  1839  019B                     	;# 
  1840  019B                     	;# 
  1841  019B                     	;# 
  1842  019B                     	;# 
  1843  019B                     	;# 
  1844  019C                     	;# 
  1845  019C                     	;# 
  1846  019C                     	;# 
  1847  019D                     	;# 
  1848  019D                     	;# 
  1849  019D                     	;# 
  1850  019E                     	;# 
  1851  019E                     	;# 
  1852  019E                     	;# 
  1853  019F                     	;# 
  1854  019F                     	;# 
  1855  019F                     	;# 
  1856  019F                     	;# 
  1857  019F                     	;# 
  1858  020C                     	;# 
  1859  020D                     	;# 
  1860  020E                     	;# 
  1861  020F                     	;# 
  1862  0210                     	;# 
  1863  0211                     	;# 
  1864  0211                     	;# 
  1865  0212                     	;# 
  1866  0212                     	;# 
  1867  0213                     	;# 
  1868  0213                     	;# 
  1869  0214                     	;# 
  1870  0214                     	;# 
  1871  0215                     	;# 
  1872  0215                     	;# 
  1873  0215                     	;# 
  1874  0215                     	;# 
  1875  0216                     	;# 
  1876  0216                     	;# 
  1877  0217                     	;# 
  1878  0217                     	;# 
  1879  028C                     	;# 
  1880  028D                     	;# 
  1881  028E                     	;# 
  1882  028F                     	;# 
  1883  0290                     	;# 
  1884  0291                     	;# 
  1885  0291                     	;# 
  1886  0292                     	;# 
  1887  0293                     	;# 
  1888  0293                     	;# 
  1889  0298                     	;# 
  1890  0298                     	;# 
  1891  0299                     	;# 
  1892  029A                     	;# 
  1893  029A                     	;# 
  1894  029E                     	;# 
  1895  030C                     	;# 
  1896  030D                     	;# 
  1897  030E                     	;# 
  1898  030F                     	;# 
  1899  0310                     	;# 
  1900  038C                     	;# 
  1901  038D                     	;# 
  1902  038E                     	;# 
  1903  038F                     	;# 
  1904  0390                     	;# 
  1905  0391                     	;# 
  1906  0392                     	;# 
  1907  0393                     	;# 
  1908  0394                     	;# 
  1909  0395                     	;# 
  1910  0396                     	;# 
  1911  0397                     	;# 
  1912  0398                     	;# 
  1913  0399                     	;# 
  1914  039D                     	;# 
  1915  039E                     	;# 
  1916  039F                     	;# 
  1917  0415                     	;# 
  1918  0416                     	;# 
  1919  0417                     	;# 
  1920  041C                     	;# 
  1921  041D                     	;# 
  1922  041E                     	;# 
  1923  0498                     	;# 
  1924  0498                     	;# 
  1925  0499                     	;# 
  1926  049A                     	;# 
  1927  049B                     	;# 
  1928  049B                     	;# 
  1929  049C                     	;# 
  1930  049D                     	;# 
  1931  049E                     	;# 
  1932  049F                     	;# 
  1933  0511                     	;# 
  1934  0515                     	;# 
  1935  0617                     	;# 
  1936  0618                     	;# 
  1937  0619                     	;# 
  1938  0619                     	;# 
  1939  061A                     	;# 
  1940  061B                     	;# 
  1941  061C                     	;# 
  1942  061C                     	;# 
  1943  0691                     	;# 
  1944  0692                     	;# 
  1945  0693                     	;# 
  1946  0694                     	;# 
  1947  0695                     	;# 
  1948  0696                     	;# 
  1949  0697                     	;# 
  1950  0698                     	;# 
  1951  0699                     	;# 
  1952  069A                     	;# 
  1953  069B                     	;# 
  1954  069C                     	;# 
  1955  069D                     	;# 
  1956  069E                     	;# 
  1957  069F                     	;# 
  1958  0E0F                     	;# 
  1959  0E10                     	;# 
  1960  0E11                     	;# 
  1961  0E12                     	;# 
  1962  0E13                     	;# 
  1963  0E14                     	;# 
  1964  0E15                     	;# 
  1965  0E17                     	;# 
  1966  0E20                     	;# 
  1967  0E21                     	;# 
  1968  0E22                     	;# 
  1969  0E24                     	;# 
  1970  0E25                     	;# 
  1971  0E28                     	;# 
  1972  0E29                     	;# 
  1973  0E2A                     	;# 
  1974  0E2B                     	;# 
  1975  0E90                     	;# 
  1976  0E91                     	;# 
  1977  0E92                     	;# 
  1978  0E93                     	;# 
  1979  0E94                     	;# 
  1980  0E95                     	;# 
  1981  0E96                     	;# 
  1982  0E97                     	;# 
  1983  0E98                     	;# 
  1984  0E99                     	;# 
  1985  0E9A                     	;# 
  1986  0E9B                     	;# 
  1987  0E9C                     	;# 
  1988  0E9D                     	;# 
  1989  0E9E                     	;# 
  1990  0E9F                     	;# 
  1991  0EA0                     	;# 
  1992  0EA1                     	;# 
  1993  0EA2                     	;# 
  1994  0EA3                     	;# 
  1995  0EA4                     	;# 
  1996  0EA5                     	;# 
  1997  0EA6                     	;# 
  1998  0EA7                     	;# 
  1999  0EA8                     	;# 
  2000  0EA9                     	;# 
  2001  0EAA                     	;# 
  2002  0EAB                     	;# 
  2003  0EAC                     	;# 
  2004  0EAD                     	;# 
  2005  0EAE                     	;# 
  2006  0EAF                     	;# 
  2007  0EB0                     	;# 
  2008  0EB1                     	;# 
  2009  0EB2                     	;# 
  2010  0F0F                     	;# 
  2011  0F10                     	;# 
  2012  0F11                     	;# 
  2013  0F12                     	;# 
  2014  0F13                     	;# 
  2015  0F14                     	;# 
  2016  0F15                     	;# 
  2017  0F16                     	;# 
  2018  0F17                     	;# 
  2019  0F18                     	;# 
  2020  0F19                     	;# 
  2021  0F1A                     	;# 
  2022  0F1B                     	;# 
  2023  0F1C                     	;# 
  2024  0F1D                     	;# 
  2025  0F1E                     	;# 
  2026  0F1F                     	;# 
  2027  0F20                     	;# 
  2028  0F21                     	;# 
  2029  0F22                     	;# 
  2030  0F23                     	;# 
  2031  0F24                     	;# 
  2032  0F25                     	;# 
  2033  0F26                     	;# 
  2034  0F27                     	;# 
  2035  0F28                     	;# 
  2036  0F29                     	;# 
  2037  0F2A                     	;# 
  2038  0F2B                     	;# 
  2039  0F2C                     	;# 
  2040  0F2D                     	;# 
  2041  0F2E                     	;# 
  2042  0F2F                     	;# 
  2043  0F30                     	;# 
  2044  0F31                     	;# 
  2045  0F32                     	;# 
  2046  0F33                     	;# 
  2047  0F34                     	;# 
  2048  0F35                     	;# 
  2049  0F36                     	;# 
  2050  0F37                     	;# 
  2051  0FE4                     	;# 
  2052  0FE5                     	;# 
  2053  0FE6                     	;# 
  2054  0FE7                     	;# 
  2055  0FE8                     	;# 
  2056  0FE9                     	;# 
  2057  0FEA                     	;# 
  2058  0FEB                     	;# 
  2059  0FED                     	;# 
  2060  0FEE                     	;# 
  2061  0FEF                     	;_messageBuffer
  2062                           
  2063                           	psect	idataBANK3
  2064  0800                     __pidataBANK3:	
  2065                           
  2066                           ;initializer for stoa@F1174
  2067  0800  3428               	retlw	40
  2068  0801  346E               	retlw	110
  2069  0802  3475               	retlw	117
  2070  0803  346C               	retlw	108
  2071  0804  346C               	retlw	108
  2072  0805  3429               	retlw	41
  2073  0806  3400               	retlw	0
  2074                           
  2075                           	psect	stringtext1
  2076  39C4                     __pstringtext1:	
  2077  39C4                     _OCD_threshold_setting:	
  2078  39C4  3411               	retlw	17
  2079  39C5  3400               	retlw	0
  2080  39C6  3416               	retlw	22
  2081  39C7  3400               	retlw	0
  2082  39C8  341C               	retlw	28
  2083  39C9  3400               	retlw	0
  2084  39CA  3421               	retlw	33
  2085  39CB  3400               	retlw	0
  2086  39CC  3427               	retlw	39
  2087  39CD  3400               	retlw	0
  2088  39CE  342C               	retlw	44
  2089  39CF  3400               	retlw	0
  2090  39D0  3432               	retlw	50
  2091  39D1  3400               	retlw	0
  2092  39D2  3438               	retlw	56
  2093  39D3  3400               	retlw	0
  2094  39D4  343D               	retlw	61
  2095  39D5  3400               	retlw	0
  2096  39D6  3443               	retlw	67
  2097  39D7  3400               	retlw	0
  2098  39D8  3448               	retlw	72
  2099  39D9  3400               	retlw	0
  2100  39DA  344E               	retlw	78
  2101  39DB  3400               	retlw	0
  2102  39DC  3453               	retlw	83
  2103  39DD  3400               	retlw	0
  2104  39DE  3459               	retlw	89
  2105  39DF  3400               	retlw	0
  2106  39E0  345E               	retlw	94
  2107  39E1  3400               	retlw	0
  2108  39E2  3464               	retlw	100
  2109  39E3  3400               	retlw	0
  2110  39E4                     __end_of_OCD_threshold_setting:	
  2111                           
  2112                           	psect	stringtext2
  2113  3AD8                     __pstringtext2:	
  2114  3AD8                     _OCD_delay_setting:	
  2115  3AD8  3408               	retlw	8
  2116  3AD9  3400               	retlw	0
  2117  3ADA  3414               	retlw	20
  2118  3ADB  3400               	retlw	0
  2119  3ADC  3428               	retlw	40
  2120  3ADD  3400               	retlw	0
  2121  3ADE  3450               	retlw	80
  2122  3ADF  3400               	retlw	0
  2123  3AE0  34A0               	retlw	160
  2124  3AE1  3400               	retlw	0
  2125  3AE2  3440               	retlw	64
  2126  3AE3  3401               	retlw	1
  2127  3AE4  3480               	retlw	128
  2128  3AE5  3402               	retlw	2
  2129  3AE6  3400               	retlw	0
  2130  3AE7  3405               	retlw	5
  2131  3AE8                     __end_of_OCD_delay_setting:	
  2132                           
  2133                           	psect	stringtext3
  2134  3AE8                     __pstringtext3:	
  2135  3AE8                     _SCD_threshold_setting:	
  2136  3AE8  342C               	retlw	44
  2137  3AE9  3400               	retlw	0
  2138  3AEA  3443               	retlw	67
  2139  3AEB  3400               	retlw	0
  2140  3AEC  3459               	retlw	89
  2141  3AED  3400               	retlw	0
  2142  3AEE  346F               	retlw	111
  2143  3AEF  3400               	retlw	0
  2144  3AF0  3485               	retlw	133
  2145  3AF1  3400               	retlw	0
  2146  3AF2  349B               	retlw	155
  2147  3AF3  3400               	retlw	0
  2148  3AF4  34B2               	retlw	178
  2149  3AF5  3400               	retlw	0
  2150  3AF6  34C8               	retlw	200
  2151  3AF7  3400               	retlw	0
  2152  3AF8                     __end_of_SCD_threshold_setting:	
  2153                           
  2154                           	psect	stringtext4
  2155  3AF8                     __pstringtext4:	
  2156  3AF8                     _OV_delay_setting:	
  2157  3AF8  3401               	retlw	1
  2158  3AF9  3400               	retlw	0
  2159  3AFA  3402               	retlw	2
  2160  3AFB  3400               	retlw	0
  2161  3AFC  3404               	retlw	4
  2162  3AFD  3400               	retlw	0
  2163  3AFE  3408               	retlw	8
  2164  3AFF  3400               	retlw	0
  2165  3B00                     __end_of_OV_delay_setting:	
  2166                           
  2167                           	psect	stringtext5
  2168  3B00                     __pstringtext5:	
  2169  3B00                     _UV_delay_setting:	
  2170  3B00  3401               	retlw	1
  2171  3B01  3400               	retlw	0
  2172  3B02  3404               	retlw	4
  2173  3B03  3400               	retlw	0
  2174  3B04  3408               	retlw	8
  2175  3B05  3400               	retlw	0
  2176  3B06  3410               	retlw	16
  2177  3B07  3400               	retlw	0
  2178  3B08                     __end_of_UV_delay_setting:	
  2179                           
  2180                           	psect	stringtext6
  2181  3B08                     __pstringtext6:	
  2182  3B08                     _SCD_delay_setting:	
  2183  3B08  3446               	retlw	70
  2184  3B09  3400               	retlw	0
  2185  3B0A  3464               	retlw	100
  2186  3B0B  3400               	retlw	0
  2187  3B0C  34C8               	retlw	200
  2188  3B0D  3400               	retlw	0
  2189  3B0E  3490               	retlw	144
  2190  3B0F  3401               	retlw	1
  2191  3B10                     __end_of_SCD_delay_setting:	
  2192                           
  2193                           	psect	stringtext7
  2194  3800                     __pstringtext7:	
  2195  3800                     _ATmega328_address:	
  2196  3800  3402               	retlw	2
  2197  3801  3400               	retlw	0
  2198  3802                     __end_of_ATmega328_address:	
  2199  0016                     _TMR1	set	22
  2200  000B                     _INTCONbits	set	11
  2201  0018                     _T1CONbits	set	24
  2202  0011                     _PIR1bits	set	17
  2203  0090                     _TRISEbits	set	144
  2204  008C                     _TRISAbits	set	140
  2205  008E                     _TRISCbits	set	142
  2206  008D                     _TRISBbits	set	141
  2207  0091                     _PIE1bits	set	145
  2208  0476                     _TRISC6	set	1142
  2209  0477                     _TRISC7	set	1143
  2210  04CF                     _SPLLEN	set	1231
  2211  04CE                     _IRCF3	set	1230
  2212  04CD                     _IRCF2	set	1229
  2213  04CC                     _IRCF1	set	1228
  2214  04CB                     _IRCF0	set	1227
  2215  04C9                     _SCS1	set	1225
  2216  04C8                     _SCS0	set	1224
  2217  0110                     _LATEbits	set	272
  2218  010C                     _LATAbits	set	268
  2219  019A                     _TX1REG	set	410
  2220  0199                     _RC1REG	set	409
  2221  019D                     _RC1STAbits	set	413
  2222  019B                     _SPBRG	set	411
  2223  018E                     _ANSELCbits	set	398
  2224  018D                     _ANSELBbits	set	397
  2225  0CF5                     _TXEN	set	3317
  2226  0CEC                     _CREN	set	3308
  2227  0CEF                     _SPEN	set	3311
  2228  0CF4                     _SYNC	set	3316
  2229  0CF2                     _BRGH	set	3314
  2230  0216                     _SSPCON2bits	set	534
  2231  0211                     _SSPBUF	set	529
  2232  0212                     _SSPADD	set	530
  2233  0215                     _SSPCONbits	set	533
  2234  0E24                     _RXPPSbits	set	3620
  2235  0E20                     _SSPCLKPPSbits	set	3616
  2236  0E21                     _SSPDATPPSbits	set	3617
  2237  0E0F                     _PPSLOCKbits	set	3599
  2238  0E0F                     _PPSLOCK	set	3599
  2239  0E9A                     _RB2PPSbits	set	3738
  2240  0EA5                     _RC5PPSbits	set	3749
  2241  0EA4                     _RC4PPSbits	set	3748
  2242  3802                     STR_8:	
  2243  3802  3453               	retlw	83	;'S'
  2244  3803  3465               	retlw	101	;'e'
  2245  3804  3474               	retlw	116	;'t'
  2246  3805  3420               	retlw	32	;' '
  2247  3806  344F               	retlw	79	;'O'
  2248  3807  3476               	retlw	118	;'v'
  2249  3808  3465               	retlw	101	;'e'
  2250  3809  3472               	retlw	114	;'r'
  2251  380A  342D               	retlw	45	;'-'
  2252  380B  3463               	retlw	99	;'c'
  2253  380C  3475               	retlw	117	;'u'
  2254  380D  3472               	retlw	114	;'r'
  2255  380E  3472               	retlw	114	;'r'
  2256  380F  3465               	retlw	101	;'e'
  2257  3810  346E               	retlw	110	;'n'
  2258  3811  3474               	retlw	116	;'t'
  2259  3812  3420               	retlw	32	;' '
  2260  3813  3464               	retlw	100	;'d'
  2261  3814  3469               	retlw	105	;'i'
  2262  3815  3473               	retlw	115	;'s'
  2263  3816  3463               	retlw	99	;'c'
  2264  3817  3468               	retlw	104	;'h'
  2265  3818  3461               	retlw	97	;'a'
  2266  3819  3472               	retlw	114	;'r'
  2267  381A  3467               	retlw	103	;'g'
  2268  381B  3465               	retlw	101	;'e'
  2269  381C  3420               	retlw	32	;' '
  2270  381D  3470               	retlw	112	;'p'
  2271  381E  3472               	retlw	114	;'r'
  2272  381F  346F               	retlw	111	;'o'
  2273  3820  3474               	retlw	116	;'t'
  2274  3821  3465               	retlw	101	;'e'
  2275  3822  3463               	retlw	99	;'c'
  2276  3823  3474               	retlw	116	;'t'
  2277  3824  3469               	retlw	105	;'i'
  2278  3825  346F               	retlw	111	;'o'
  2279  3826  346E               	retlw	110	;'n'
  2280  3827  3420               	retlw	32	;' '
  2281  3828  3420               	retlw	32	;' '
  2282  3829  3466               	retlw	102	;'f'
  2283  382A  346F               	retlw	111	;'o'
  2284  382B  3472               	retlw	114	;'r'
  2285  382C  3420               	retlw	32	;' '
  2286  382D  3441               	retlw	65	;'A'
  2287  382E  3446               	retlw	70	;'F'
  2288  382F  3445               	retlw	69	;'E'
  2289  3830  343A               	retlw	58	;':'
  2290  3831  3420               	retlw	32	;' '
  2291  3832  3425               	retlw	37	;'%'
  2292  3833  346C               	retlw	108	;'l'
  2293  3834  3475               	retlw	117	;'u'
  2294  3835  3420               	retlw	32	;' '
  2295  3836  346D               	retlw	109	;'m'
  2296  3837  3441               	retlw	65	;'A'
  2297  3838  340A               	retlw	10
  2298  3839  340D               	retlw	13
  2299  383A  3400               	retlw	0
  2300                           
  2301                           	psect	stringtext8
  2302  383B                     __pstringtext8:	
  2303  383B                     STR_4:	
  2304  383B  3441               	retlw	65	;'A'
  2305  383C  3474               	retlw	116	;'t'
  2306  383D  3474               	retlw	116	;'t'
  2307  383E  3465               	retlw	101	;'e'
  2308  383F  346D               	retlw	109	;'m'
  2309  3840  3470               	retlw	112	;'p'
  2310  3841  3474               	retlw	116	;'t'
  2311  3842  3420               	retlw	32	;' '
  2312  3843  3474               	retlw	116	;'t'
  2313  3844  346F               	retlw	111	;'o'
  2314  3845  3420               	retlw	32	;' '
  2315  3846  3473               	retlw	115	;'s'
  2316  3847  3465               	retlw	101	;'e'
  2317  3848  3474               	retlw	116	;'t'
  2318  3849  3420               	retlw	32	;' '
  2319  384A  3469               	retlw	105	;'i'
  2320  384B  346E               	retlw	110	;'n'
  2321  384C  3469               	retlw	105	;'i'
  2322  384D  3474               	retlw	116	;'t'
  2323  384E  3469               	retlw	105	;'i'
  2324  384F  3461               	retlw	97	;'a'
  2325  3850  346C               	retlw	108	;'l'
  2326  3851  3420               	retlw	32	;' '
  2327  3852  3473               	retlw	115	;'s'
  2328  3853  3479               	retlw	121	;'y'
  2329  3854  3473               	retlw	115	;'s'
  2330  3855  3474               	retlw	116	;'t'
  2331  3856  3465               	retlw	101	;'e'
  2332  3857  346D               	retlw	109	;'m'
  2333  3858  3420               	retlw	32	;' '
  2334  3859  3470               	retlw	112	;'p'
  2335  385A  3461               	retlw	97	;'a'
  2336  385B  3472               	retlw	114	;'r'
  2337  385C  3461               	retlw	97	;'a'
  2338  385D  346D               	retlw	109	;'m'
  2339  385E  3465               	retlw	101	;'e'
  2340  385F  3474               	retlw	116	;'t'
  2341  3860  3465               	retlw	101	;'e'
  2342  3861  3472               	retlw	114	;'r'
  2343  3862  3473               	retlw	115	;'s'
  2344  3863  3420               	retlw	32	;' '
  2345  3864  3474               	retlw	116	;'t'
  2346  3865  346F               	retlw	111	;'o'
  2347  3866  3420               	retlw	32	;' '
  2348  3867  3441               	retlw	65	;'A'
  2349  3868  3446               	retlw	70	;'F'
  2350  3869  3445               	retlw	69	;'E'
  2351  386A  342E               	retlw	46	;'.'
  2352  386B  342E               	retlw	46	;'.'
  2353  386C  342E               	retlw	46	;'.'
  2354  386D  340A               	retlw	10
  2355  386E  340D               	retlw	13
  2356  386F  3400               	retlw	0
  2357                           
  2358                           	psect	stringtext9
  2359  3870                     __pstringtext9:	
  2360  3870                     STR_2:	
  2361  3870  3443               	retlw	67	;'C'
  2362  3871  346F               	retlw	111	;'o'
  2363  3872  346D               	retlw	109	;'m'
  2364  3873  346D               	retlw	109	;'m'
  2365  3874  3475               	retlw	117	;'u'
  2366  3875  346E               	retlw	110	;'n'
  2367  3876  3469               	retlw	105	;'i'
  2368  3877  3463               	retlw	99	;'c'
  2369  3878  3461               	retlw	97	;'a'
  2370  3879  3474               	retlw	116	;'t'
  2371  387A  3469               	retlw	105	;'i'
  2372  387B  346F               	retlw	111	;'o'
  2373  387C  346E               	retlw	110	;'n'
  2374  387D  3420               	retlw	32	;' '
  2375  387E  3477               	retlw	119	;'w'
  2376  387F  3469               	retlw	105	;'i'
  2377  3880  3474               	retlw	116	;'t'
  2378  3881  3468               	retlw	104	;'h'
  2379  3882  3420               	retlw	32	;' '
  2380  3883  3442               	retlw	66	;'B'
  2381  3884  3451               	retlw	81	;'Q'
  2382  3885  3437               	retlw	55	;'7'
  2383  3886  3436               	retlw	54	;'6'
  2384  3887  3439               	retlw	57	;'9'
  2385  3888  3432               	retlw	50	;'2'
  2386  3889  3430               	retlw	48	;'0'
  2387  388A  3420               	retlw	32	;' '
  2388  388B  3441               	retlw	65	;'A'
  2389  388C  3446               	retlw	70	;'F'
  2390  388D  3445               	retlw	69	;'E'
  2391  388E  3420               	retlw	32	;' '
  2392  388F  3465               	retlw	101	;'e'
  2393  3890  3473               	retlw	115	;'s'
  2394  3891  3474               	retlw	116	;'t'
  2395  3892  3461               	retlw	97	;'a'
  2396  3893  3462               	retlw	98	;'b'
  2397  3894  346C               	retlw	108	;'l'
  2398  3895  3469               	retlw	105	;'i'
  2399  3896  3473               	retlw	115	;'s'
  2400  3897  3468               	retlw	104	;'h'
  2401  3898  3465               	retlw	101	;'e'
  2402  3899  3464               	retlw	100	;'d'
  2403  389A  3421               	retlw	33	;'!'
  2404  389B  340A               	retlw	10
  2405  389C  340D               	retlw	13
  2406  389D  3400               	retlw	0
  2407                           
  2408                           	psect	stringtext10
  2409  389E                     __pstringtext10:	
  2410  389E                     STR_10:	
  2411  389E  344E               	retlw	78	;'N'
  2412  389F  346F               	retlw	111	;'o'
  2413  38A0  3477               	retlw	119	;'w'
  2414  38A1  3420               	retlw	32	;' '
  2415  38A2  3472               	retlw	114	;'r'
  2416  38A3  3465               	retlw	101	;'e'
  2417  38A4  3461               	retlw	97	;'a'
  2418  38A5  3464               	retlw	100	;'d'
  2419  38A6  3469               	retlw	105	;'i'
  2420  38A7  346E               	retlw	110	;'n'
  2421  38A8  3467               	retlw	103	;'g'
  2422  38A9  3420               	retlw	32	;' '
  2423  38AA  3441               	retlw	65	;'A'
  2424  38AB  3446               	retlw	70	;'F'
  2425  38AC  3445               	retlw	69	;'E'
  2426  38AD  3420               	retlw	32	;' '
  2427  38AE  3464               	retlw	100	;'d'
  2428  38AF  3461               	retlw	97	;'a'
  2429  38B0  3474               	retlw	116	;'t'
  2430  38B1  3461               	retlw	97	;'a'
  2431  38B2  3420               	retlw	32	;' '
  2432  38B3  3461               	retlw	97	;'a'
  2433  38B4  3474               	retlw	116	;'t'
  2434  38B5  3420               	retlw	32	;' '
  2435  38B6  3472               	retlw	114	;'r'
  2436  38B7  3465               	retlw	101	;'e'
  2437  38B8  3467               	retlw	103	;'g'
  2438  38B9  3475               	retlw	117	;'u'
  2439  38BA  346C               	retlw	108	;'l'
  2440  38BB  3461               	retlw	97	;'a'
  2441  38BC  3472               	retlw	114	;'r'
  2442  38BD  3420               	retlw	32	;' '
  2443  38BE  3469               	retlw	105	;'i'
  2444  38BF  346E               	retlw	110	;'n'
  2445  38C0  3474               	retlw	116	;'t'
  2446  38C1  3465               	retlw	101	;'e'
  2447  38C2  3472               	retlw	114	;'r'
  2448  38C3  3476               	retlw	118	;'v'
  2449  38C4  3461               	retlw	97	;'a'
  2450  38C5  346C               	retlw	108	;'l'
  2451  38C6  3473               	retlw	115	;'s'
  2452  38C7  342E               	retlw	46	;'.'
  2453  38C8  340A               	retlw	10
  2454  38C9  340D               	retlw	13
  2455  38CA  3400               	retlw	0
  2456                           
  2457                           	psect	stringtext11
  2458  38CB                     __pstringtext11:	
  2459  38CB                     STR_7:	
  2460  38CB  3453               	retlw	83	;'S'
  2461  38CC  3465               	retlw	101	;'e'
  2462  38CD  3474               	retlw	116	;'t'
  2463  38CE  3420               	retlw	32	;' '
  2464  38CF  3473               	retlw	115	;'s'
  2465  38D0  3468               	retlw	104	;'h'
  2466  38D1  346F               	retlw	111	;'o'
  2467  38D2  3472               	retlw	114	;'r'
  2468  38D3  3474               	retlw	116	;'t'
  2469  38D4  3420               	retlw	32	;' '
  2470  38D5  3463               	retlw	99	;'c'
  2471  38D6  3469               	retlw	105	;'i'
  2472  38D7  3472               	retlw	114	;'r'
  2473  38D8  3463               	retlw	99	;'c'
  2474  38D9  3475               	retlw	117	;'u'
  2475  38DA  3469               	retlw	105	;'i'
  2476  38DB  3474               	retlw	116	;'t'
  2477  38DC  3420               	retlw	32	;' '
  2478  38DD  3463               	retlw	99	;'c'
  2479  38DE  3475               	retlw	117	;'u'
  2480  38DF  3472               	retlw	114	;'r'
  2481  38E0  3472               	retlw	114	;'r'
  2482  38E1  3465               	retlw	101	;'e'
  2483  38E2  346E               	retlw	110	;'n'
  2484  38E3  3474               	retlw	116	;'t'
  2485  38E4  3420               	retlw	32	;' '
  2486  38E5  3466               	retlw	102	;'f'
  2487  38E6  346F               	retlw	111	;'o'
  2488  38E7  3472               	retlw	114	;'r'
  2489  38E8  3420               	retlw	32	;' '
  2490  38E9  3441               	retlw	65	;'A'
  2491  38EA  3446               	retlw	70	;'F'
  2492  38EB  3445               	retlw	69	;'E'
  2493  38EC  343A               	retlw	58	;':'
  2494  38ED  3420               	retlw	32	;' '
  2495  38EE  3425               	retlw	37	;'%'
  2496  38EF  346C               	retlw	108	;'l'
  2497  38F0  3475               	retlw	117	;'u'
  2498  38F1  3420               	retlw	32	;' '
  2499  38F2  346D               	retlw	109	;'m'
  2500  38F3  3441               	retlw	65	;'A'
  2501  38F4  340A               	retlw	10
  2502  38F5  340D               	retlw	13
  2503  38F6  3400               	retlw	0
  2504                           
  2505                           	psect	stringtext12
  2506  38F7                     __pstringtext12:	
  2507  38F7                     STR_3:	
  2508  38F7  344F               	retlw	79	;'O'
  2509  38F8  3462               	retlw	98	;'b'
  2510  38F9  3474               	retlw	116	;'t'
  2511  38FA  3461               	retlw	97	;'a'
  2512  38FB  3469               	retlw	105	;'i'
  2513  38FC  346E               	retlw	110	;'n'
  2514  38FD  3465               	retlw	101	;'e'
  2515  38FE  3464               	retlw	100	;'d'
  2516  38FF  3420               	retlw	32	;' '
  2517  3900  3461               	retlw	97	;'a'
  2518  3901  3464               	retlw	100	;'d'
  2519  3902  3463               	retlw	99	;'c'
  2520  3903  344F               	retlw	79	;'O'
  2521  3904  3466               	retlw	102	;'f'
  2522  3905  3466               	retlw	102	;'f'
  2523  3906  3473               	retlw	115	;'s'
  2524  3907  3465               	retlw	101	;'e'
  2525  3908  3474               	retlw	116	;'t'
  2526  3909  3420               	retlw	32	;' '
  2527  390A  343D               	retlw	61	;'='
  2528  390B  3420               	retlw	32	;' '
  2529  390C  3425               	retlw	37	;'%'
  2530  390D  3469               	retlw	105	;'i'
  2531  390E  3420               	retlw	32	;' '
  2532  390F  3461               	retlw	97	;'a'
  2533  3910  346E               	retlw	110	;'n'
  2534  3911  3464               	retlw	100	;'d'
  2535  3912  3420               	retlw	32	;' '
  2536  3913  3461               	retlw	97	;'a'
  2537  3914  3464               	retlw	100	;'d'
  2538  3915  3463               	retlw	99	;'c'
  2539  3916  3447               	retlw	71	;'G'
  2540  3917  3461               	retlw	97	;'a'
  2541  3918  3469               	retlw	105	;'i'
  2542  3919  346E               	retlw	110	;'n'
  2543  391A  3420               	retlw	32	;' '
  2544  391B  343D               	retlw	61	;'='
  2545  391C  3420               	retlw	32	;' '
  2546  391D  3425               	retlw	37	;'%'
  2547  391E  3469               	retlw	105	;'i'
  2548  391F  340A               	retlw	10
  2549  3920  340D               	retlw	13
  2550  3921  3400               	retlw	0
  2551                           
  2552                           	psect	stringtext13
  2553  3922                     __pstringtext13:	
  2554  3922                     STR_9:	
  2555  3922  3449               	retlw	73	;'I'
  2556  3923  346E               	retlw	110	;'n'
  2557  3924  3469               	retlw	105	;'i'
  2558  3925  3474               	retlw	116	;'t'
  2559  3926  3469               	retlw	105	;'i'
  2560  3927  3461               	retlw	97	;'a'
  2561  3928  346C               	retlw	108	;'l'
  2562  3929  3420               	retlw	32	;' '
  2563  392A  3470               	retlw	112	;'p'
  2564  392B  3461               	retlw	97	;'a'
  2565  392C  3472               	retlw	114	;'r'
  2566  392D  3461               	retlw	97	;'a'
  2567  392E  346D               	retlw	109	;'m'
  2568  392F  3465               	retlw	101	;'e'
  2569  3930  3474               	retlw	116	;'t'
  2570  3931  3465               	retlw	101	;'e'
  2571  3932  3472               	retlw	114	;'r'
  2572  3933  3473               	retlw	115	;'s'
  2573  3934  3420               	retlw	32	;' '
  2574  3935  3466               	retlw	102	;'f'
  2575  3936  346F               	retlw	111	;'o'
  2576  3937  3472               	retlw	114	;'r'
  2577  3938  3420               	retlw	32	;' '
  2578  3939  3442               	retlw	66	;'B'
  2579  393A  3451               	retlw	81	;'Q'
  2580  393B  3437               	retlw	55	;'7'
  2581  393C  3436               	retlw	54	;'6'
  2582  393D  3439               	retlw	57	;'9'
  2583  393E  3432               	retlw	50	;'2'
  2584  393F  3430               	retlw	48	;'0'
  2585  3940  3420               	retlw	32	;' '
  2586  3941  3441               	retlw	65	;'A'
  2587  3942  3446               	retlw	70	;'F'
  2588  3943  3445               	retlw	69	;'E'
  2589  3944  3420               	retlw	32	;' '
  2590  3945  3473               	retlw	115	;'s'
  2591  3946  3465               	retlw	101	;'e'
  2592  3947  3474               	retlw	116	;'t'
  2593  3948  3421               	retlw	33	;'!'
  2594  3949  340A               	retlw	10
  2595  394A  340D               	retlw	13
  2596  394B  3400               	retlw	0
  2597                           
  2598                           	psect	stringtext14
  2599  394C                     __pstringtext14:	
  2600  394C                     STR_6:	
  2601  394C  3443               	retlw	67	;'C'
  2602  394D  3475               	retlw	117	;'u'
  2603  394E  3472               	retlw	114	;'r'
  2604  394F  3472               	retlw	114	;'r'
  2605  3950  3465               	retlw	101	;'e'
  2606  3951  346E               	retlw	110	;'n'
  2607  3952  3474               	retlw	116	;'t'
  2608  3953  3420               	retlw	32	;' '
  2609  3954  3473               	retlw	115	;'s'
  2610  3955  3465               	retlw	101	;'e'
  2611  3956  346E               	retlw	110	;'n'
  2612  3957  3473               	retlw	115	;'s'
  2613  3958  3465               	retlw	101	;'e'
  2614  3959  3420               	retlw	32	;' '
  2615  395A  3472               	retlw	114	;'r'
  2616  395B  3465               	retlw	101	;'e'
  2617  395C  3473               	retlw	115	;'s'
  2618  395D  3469               	retlw	105	;'i'
  2619  395E  3473               	retlw	115	;'s'
  2620  395F  3474               	retlw	116	;'t'
  2621  3960  346F               	retlw	111	;'o'
  2622  3961  3472               	retlw	114	;'r'
  2623  3962  3420               	retlw	32	;' '
  2624  3963  3476               	retlw	118	;'v'
  2625  3964  3461               	retlw	97	;'a'
  2626  3965  346C               	retlw	108	;'l'
  2627  3966  3475               	retlw	117	;'u'
  2628  3967  3465               	retlw	101	;'e'
  2629  3968  343A               	retlw	58	;':'
  2630  3969  3420               	retlw	32	;' '
  2631  396A  3425               	retlw	37	;'%'
  2632  396B  342E               	retlw	46	;'.'
  2633  396C  3434               	retlw	52	;'4'
  2634  396D  3466               	retlw	102	;'f'
  2635  396E  3420               	retlw	32	;' '
  2636  396F  346F               	retlw	111	;'o'
  2637  3970  3468               	retlw	104	;'h'
  2638  3971  346D               	retlw	109	;'m'
  2639  3972  3473               	retlw	115	;'s'
  2640  3973  340A               	retlw	10
  2641  3974  340D               	retlw	13
  2642  3975  3400               	retlw	0
  2643                           
  2644                           	psect	stringtext15
  2645  3976                     __pstringtext15:	
  2646  3976                     STR_1:	
  2647  3976  3441               	retlw	65	;'A'
  2648  3977  3474               	retlw	116	;'t'
  2649  3978  3474               	retlw	116	;'t'
  2650  3979  3465               	retlw	101	;'e'
  2651  397A  346D               	retlw	109	;'m'
  2652  397B  3470               	retlw	112	;'p'
  2653  397C  3474               	retlw	116	;'t'
  2654  397D  3469               	retlw	105	;'i'
  2655  397E  346E               	retlw	110	;'n'
  2656  397F  3467               	retlw	103	;'g'
  2657  3980  3420               	retlw	32	;' '
  2658  3981  3474               	retlw	116	;'t'
  2659  3982  346F               	retlw	111	;'o'
  2660  3983  3420               	retlw	32	;' '
  2661  3984  3463               	retlw	99	;'c'
  2662  3985  346F               	retlw	111	;'o'
  2663  3986  346D               	retlw	109	;'m'
  2664  3987  346D               	retlw	109	;'m'
  2665  3988  3475               	retlw	117	;'u'
  2666  3989  346E               	retlw	110	;'n'
  2667  398A  3469               	retlw	105	;'i'
  2668  398B  3463               	retlw	99	;'c'
  2669  398C  3461               	retlw	97	;'a'
  2670  398D  3474               	retlw	116	;'t'
  2671  398E  3465               	retlw	101	;'e'
  2672  398F  3420               	retlw	32	;' '
  2673  3990  3477               	retlw	119	;'w'
  2674  3991  3469               	retlw	105	;'i'
  2675  3992  3474               	retlw	116	;'t'
  2676  3993  3468               	retlw	104	;'h'
  2677  3994  3420               	retlw	32	;' '
  2678  3995  3441               	retlw	65	;'A'
  2679  3996  3446               	retlw	70	;'F'
  2680  3997  3445               	retlw	69	;'E'
  2681  3998  342E               	retlw	46	;'.'
  2682  3999  342E               	retlw	46	;'.'
  2683  399A  342E               	retlw	46	;'.'
  2684  399B  340A               	retlw	10
  2685  399C  340D               	retlw	13
  2686  399D  3400               	retlw	0
  2687                           
  2688                           	psect	stringtext16
  2689  399E                     __pstringtext16:	
  2690  399E                     STR_11:	
  2691  399E  3450               	retlw	80	;'P'
  2692  399F  3472               	retlw	114	;'r'
  2693  39A0  3469               	retlw	105	;'i'
  2694  39A1  346E               	retlw	110	;'n'
  2695  39A2  3474               	retlw	116	;'t'
  2696  39A3  3469               	retlw	105	;'i'
  2697  39A4  346E               	retlw	110	;'n'
  2698  39A5  3467               	retlw	103	;'g'
  2699  39A6  3420               	retlw	32	;' '
  2700  39A7  346F               	retlw	111	;'o'
  2701  39A8  3475               	retlw	117	;'u'
  2702  39A9  3474               	retlw	116	;'t'
  2703  39AA  3420               	retlw	32	;' '
  2704  39AB  3441               	retlw	65	;'A'
  2705  39AC  3446               	retlw	70	;'F'
  2706  39AD  3445               	retlw	69	;'E'
  2707  39AE  3420               	retlw	32	;' '
  2708  39AF  3472               	retlw	114	;'r'
  2709  39B0  3465               	retlw	101	;'e'
  2710  39B1  3467               	retlw	103	;'g'
  2711  39B2  3469               	retlw	105	;'i'
  2712  39B3  3473               	retlw	115	;'s'
  2713  39B4  3474               	retlw	116	;'t'
  2714  39B5  3465               	retlw	101	;'e'
  2715  39B6  3472               	retlw	114	;'r'
  2716  39B7  3420               	retlw	32	;' '
  2717  39B8  3476               	retlw	118	;'v'
  2718  39B9  3461               	retlw	97	;'a'
  2719  39BA  346C               	retlw	108	;'l'
  2720  39BB  3475               	retlw	117	;'u'
  2721  39BC  3465               	retlw	101	;'e'
  2722  39BD  3473               	retlw	115	;'s'
  2723  39BE  342E               	retlw	46	;'.'
  2724  39BF  342E               	retlw	46	;'.'
  2725  39C0  342E               	retlw	46	;'.'
  2726  39C1  340A               	retlw	10
  2727  39C2  340D               	retlw	13
  2728  39C3  3400               	retlw	0
  2729                           
  2730                           	psect	stringtext17
  2731  39E4                     __pstringtext17:	
  2732  39E4                     STR_15:	
  2733  39E4  3430               	retlw	48	;'0'
  2734  39E5  3478               	retlw	120	;'x'
  2735  39E6  3430               	retlw	48	;'0'
  2736  39E7  3434               	retlw	52	;'4'
  2737  39E8  3420               	retlw	32	;' '
  2738  39E9  3453               	retlw	83	;'S'
  2739  39EA  3459               	retlw	89	;'Y'
  2740  39EB  3453               	retlw	83	;'S'
  2741  39EC  345F               	retlw	95	;'_'
  2742  39ED  3443               	retlw	67	;'C'
  2743  39EE  3454               	retlw	84	;'T'
  2744  39EF  3452               	retlw	82	;'R'
  2745  39F0  344C               	retlw	76	;'L'
  2746  39F1  3431               	retlw	49	;'1'
  2747  39F2  343A               	retlw	58	;':'
  2748  39F3  3420               	retlw	32	;' '
  2749  39F4  3425               	retlw	37	;'%'
  2750  39F5  3469               	retlw	105	;'i'
  2751  39F6  3420               	retlw	32	;' '
  2752  39F7  340A               	retlw	10
  2753  39F8  340D               	retlw	13
  2754  39F9  3400               	retlw	0
  2755                           
  2756                           	psect	stringtext18
  2757  39FA                     __pstringtext18:	
  2758  39FA                     STR_16:	
  2759  39FA  3430               	retlw	48	;'0'
  2760  39FB  3478               	retlw	120	;'x'
  2761  39FC  3430               	retlw	48	;'0'
  2762  39FD  3435               	retlw	53	;'5'
  2763  39FE  3420               	retlw	32	;' '
  2764  39FF  3453               	retlw	83	;'S'
  2765  3A00  3459               	retlw	89	;'Y'
  2766  3A01  3453               	retlw	83	;'S'
  2767  3A02  345F               	retlw	95	;'_'
  2768  3A03  3443               	retlw	67	;'C'
  2769  3A04  3454               	retlw	84	;'T'
  2770  3A05  3452               	retlw	82	;'R'
  2771  3A06  344C               	retlw	76	;'L'
  2772  3A07  3432               	retlw	50	;'2'
  2773  3A08  343A               	retlw	58	;':'
  2774  3A09  3420               	retlw	32	;' '
  2775  3A0A  3425               	retlw	37	;'%'
  2776  3A0B  3469               	retlw	105	;'i'
  2777  3A0C  3420               	retlw	32	;' '
  2778  3A0D  340A               	retlw	10
  2779  3A0E  340D               	retlw	13
  2780  3A0F  3400               	retlw	0
  2781                           
  2782                           	psect	stringtext19
  2783  3A10                     __pstringtext19:	
  2784  3A10                     STR_14:	
  2785  3A10  3430               	retlw	48	;'0'
  2786  3A11  3478               	retlw	120	;'x'
  2787  3A12  3430               	retlw	48	;'0'
  2788  3A13  3431               	retlw	49	;'1'
  2789  3A14  3420               	retlw	32	;' '
  2790  3A15  3443               	retlw	67	;'C'
  2791  3A16  3445               	retlw	69	;'E'
  2792  3A17  344C               	retlw	76	;'L'
  2793  3A18  344C               	retlw	76	;'L'
  2794  3A19  3442               	retlw	66	;'B'
  2795  3A1A  3441               	retlw	65	;'A'
  2796  3A1B  344C               	retlw	76	;'L'
  2797  3A1C  3431               	retlw	49	;'1'
  2798  3A1D  343A               	retlw	58	;':'
  2799  3A1E  3420               	retlw	32	;' '
  2800  3A1F  3425               	retlw	37	;'%'
  2801  3A20  3469               	retlw	105	;'i'
  2802  3A21  3420               	retlw	32	;' '
  2803  3A22  340A               	retlw	10
  2804  3A23  340D               	retlw	13
  2805  3A24  3400               	retlw	0
  2806                           
  2807                           	psect	stringtext20
  2808  3A25                     __pstringtext20:	
  2809  3A25                     STR_17:	
  2810  3A25  3430               	retlw	48	;'0'
  2811  3A26  3478               	retlw	120	;'x'
  2812  3A27  3430               	retlw	48	;'0'
  2813  3A28  3436               	retlw	54	;'6'
  2814  3A29  3420               	retlw	32	;' '
  2815  3A2A  3450               	retlw	80	;'P'
  2816  3A2B  3452               	retlw	82	;'R'
  2817  3A2C  344F               	retlw	79	;'O'
  2818  3A2D  3454               	retlw	84	;'T'
  2819  3A2E  3445               	retlw	69	;'E'
  2820  3A2F  3443               	retlw	67	;'C'
  2821  3A30  3454               	retlw	84	;'T'
  2822  3A31  3431               	retlw	49	;'1'
  2823  3A32  343A               	retlw	58	;':'
  2824  3A33  3420               	retlw	32	;' '
  2825  3A34  3425               	retlw	37	;'%'
  2826  3A35  3469               	retlw	105	;'i'
  2827  3A36  3420               	retlw	32	;' '
  2828  3A37  340A               	retlw	10
  2829  3A38  340D               	retlw	13
  2830  3A39  3400               	retlw	0
  2831                           
  2832                           	psect	stringtext21
  2833  3A3A                     __pstringtext21:	
  2834  3A3A                     STR_18:	
  2835  3A3A  3430               	retlw	48	;'0'
  2836  3A3B  3478               	retlw	120	;'x'
  2837  3A3C  3430               	retlw	48	;'0'
  2838  3A3D  3437               	retlw	55	;'7'
  2839  3A3E  3420               	retlw	32	;' '
  2840  3A3F  3450               	retlw	80	;'P'
  2841  3A40  3452               	retlw	82	;'R'
  2842  3A41  344F               	retlw	79	;'O'
  2843  3A42  3454               	retlw	84	;'T'
  2844  3A43  3445               	retlw	69	;'E'
  2845  3A44  3443               	retlw	67	;'C'
  2846  3A45  3454               	retlw	84	;'T'
  2847  3A46  3432               	retlw	50	;'2'
  2848  3A47  343A               	retlw	58	;':'
  2849  3A48  3420               	retlw	32	;' '
  2850  3A49  3425               	retlw	37	;'%'
  2851  3A4A  3469               	retlw	105	;'i'
  2852  3A4B  3420               	retlw	32	;' '
  2853  3A4C  340A               	retlw	10
  2854  3A4D  340D               	retlw	13
  2855  3A4E  3400               	retlw	0
  2856                           
  2857                           	psect	stringtext22
  2858  3A4F                     __pstringtext22:	
  2859  3A4F                     STR_19:	
  2860  3A4F  3430               	retlw	48	;'0'
  2861  3A50  3478               	retlw	120	;'x'
  2862  3A51  3430               	retlw	48	;'0'
  2863  3A52  3438               	retlw	56	;'8'
  2864  3A53  3420               	retlw	32	;' '
  2865  3A54  3450               	retlw	80	;'P'
  2866  3A55  3452               	retlw	82	;'R'
  2867  3A56  344F               	retlw	79	;'O'
  2868  3A57  3454               	retlw	84	;'T'
  2869  3A58  3445               	retlw	69	;'E'
  2870  3A59  3443               	retlw	67	;'C'
  2871  3A5A  3454               	retlw	84	;'T'
  2872  3A5B  3433               	retlw	51	;'3'
  2873  3A5C  343A               	retlw	58	;':'
  2874  3A5D  3420               	retlw	32	;' '
  2875  3A5E  3425               	retlw	37	;'%'
  2876  3A5F  3469               	retlw	105	;'i'
  2877  3A60  3420               	retlw	32	;' '
  2878  3A61  340A               	retlw	10
  2879  3A62  340D               	retlw	13
  2880  3A63  3400               	retlw	0
  2881                           
  2882                           	psect	stringtext23
  2883  3A64                     __pstringtext23:	
  2884  3A64                     STR_13:	
  2885  3A64  3430               	retlw	48	;'0'
  2886  3A65  3478               	retlw	120	;'x'
  2887  3A66  3430               	retlw	48	;'0'
  2888  3A67  3430               	retlw	48	;'0'
  2889  3A68  3420               	retlw	32	;' '
  2890  3A69  3453               	retlw	83	;'S'
  2891  3A6A  3459               	retlw	89	;'Y'
  2892  3A6B  3453               	retlw	83	;'S'
  2893  3A6C  345F               	retlw	95	;'_'
  2894  3A6D  3453               	retlw	83	;'S'
  2895  3A6E  3454               	retlw	84	;'T'
  2896  3A6F  3441               	retlw	65	;'A'
  2897  3A70  3454               	retlw	84	;'T'
  2898  3A71  343A               	retlw	58	;':'
  2899  3A72  3420               	retlw	32	;' '
  2900  3A73  3425               	retlw	37	;'%'
  2901  3A74  3469               	retlw	105	;'i'
  2902  3A75  3420               	retlw	32	;' '
  2903  3A76  340A               	retlw	10
  2904  3A77  340D               	retlw	13
  2905  3A78  3400               	retlw	0
  2906                           
  2907                           	psect	stringtext24
  2908  3A79                     __pstringtext24:	
  2909  3A79                     STR_20:	
  2910  3A79  3430               	retlw	48	;'0'
  2911  3A7A  3478               	retlw	120	;'x'
  2912  3A7B  3430               	retlw	48	;'0'
  2913  3A7C  3439               	retlw	57	;'9'
  2914  3A7D  3420               	retlw	32	;' '
  2915  3A7E  344F               	retlw	79	;'O'
  2916  3A7F  3456               	retlw	86	;'V'
  2917  3A80  345F               	retlw	95	;'_'
  2918  3A81  3454               	retlw	84	;'T'
  2919  3A82  3452               	retlw	82	;'R'
  2920  3A83  3449               	retlw	73	;'I'
  2921  3A84  3450               	retlw	80	;'P'
  2922  3A85  343A               	retlw	58	;':'
  2923  3A86  3420               	retlw	32	;' '
  2924  3A87  3425               	retlw	37	;'%'
  2925  3A88  3469               	retlw	105	;'i'
  2926  3A89  3420               	retlw	32	;' '
  2927  3A8A  340A               	retlw	10
  2928  3A8B  340D               	retlw	13
  2929  3A8C  3400               	retlw	0
  2930                           
  2931                           	psect	stringtext25
  2932  3A8D                     __pstringtext25:	
  2933  3A8D                     STR_21:	
  2934  3A8D  3430               	retlw	48	;'0'
  2935  3A8E  3478               	retlw	120	;'x'
  2936  3A8F  3430               	retlw	48	;'0'
  2937  3A90  3441               	retlw	65	;'A'
  2938  3A91  3420               	retlw	32	;' '
  2939  3A92  3455               	retlw	85	;'U'
  2940  3A93  3456               	retlw	86	;'V'
  2941  3A94  345F               	retlw	95	;'_'
  2942  3A95  3454               	retlw	84	;'T'
  2943  3A96  3452               	retlw	82	;'R'
  2944  3A97  3449               	retlw	73	;'I'
  2945  3A98  3450               	retlw	80	;'P'
  2946  3A99  343A               	retlw	58	;':'
  2947  3A9A  3420               	retlw	32	;' '
  2948  3A9B  3425               	retlw	37	;'%'
  2949  3A9C  3469               	retlw	105	;'i'
  2950  3A9D  3420               	retlw	32	;' '
  2951  3A9E  340A               	retlw	10
  2952  3A9F  340D               	retlw	13
  2953  3AA0  3400               	retlw	0
  2954                           
  2955                           	psect	stringtext26
  2956  3AA1                     __pstringtext26:	
  2957  3AA1                     STR_22:	
  2958  3AA1  3430               	retlw	48	;'0'
  2959  3AA2  3478               	retlw	120	;'x'
  2960  3AA3  3430               	retlw	48	;'0'
  2961  3AA4  3442               	retlw	66	;'B'
  2962  3AA5  3420               	retlw	32	;' '
  2963  3AA6  3443               	retlw	67	;'C'
  2964  3AA7  3443               	retlw	67	;'C'
  2965  3AA8  345F               	retlw	95	;'_'
  2966  3AA9  3443               	retlw	67	;'C'
  2967  3AAA  3446               	retlw	70	;'F'
  2968  3AAB  3447               	retlw	71	;'G'
  2969  3AAC  343A               	retlw	58	;':'
  2970  3AAD  3420               	retlw	32	;' '
  2971  3AAE  3425               	retlw	37	;'%'
  2972  3AAF  3469               	retlw	105	;'i'
  2973  3AB0  3420               	retlw	32	;' '
  2974  3AB1  340A               	retlw	10
  2975  3AB2  340D               	retlw	13
  2976  3AB3  3400               	retlw	0
  2977                           
  2978                           	psect	stringtext27
  2979  3AB4                     __pstringtext27:	
  2980  3AB4                     STR_23:	
  2981  3AB4  3430               	retlw	48	;'0'
  2982  3AB5  3478               	retlw	120	;'x'
  2983  3AB6  3433               	retlw	51	;'3'
  2984  3AB7  3432               	retlw	50	;'2'
  2985  3AB8  3420               	retlw	32	;' '
  2986  3AB9  3443               	retlw	67	;'C'
  2987  3ABA  3443               	retlw	67	;'C'
  2988  3ABB  345F               	retlw	95	;'_'
  2989  3ABC  3448               	retlw	72	;'H'
  2990  3ABD  3449               	retlw	73	;'I'
  2991  3ABE  343A               	retlw	58	;':'
  2992  3ABF  3420               	retlw	32	;' '
  2993  3AC0  3425               	retlw	37	;'%'
  2994  3AC1  3469               	retlw	105	;'i'
  2995  3AC2  3420               	retlw	32	;' '
  2996  3AC3  340A               	retlw	10
  2997  3AC4  340D               	retlw	13
  2998  3AC5  3400               	retlw	0
  2999                           
  3000                           	psect	stringtext28
  3001  3AC6                     __pstringtext28:	
  3002  3AC6                     STR_24:	
  3003  3AC6  3430               	retlw	48	;'0'
  3004  3AC7  3478               	retlw	120	;'x'
  3005  3AC8  3433               	retlw	51	;'3'
  3006  3AC9  3433               	retlw	51	;'3'
  3007  3ACA  3420               	retlw	32	;' '
  3008  3ACB  3443               	retlw	67	;'C'
  3009  3ACC  3443               	retlw	67	;'C'
  3010  3ACD  345F               	retlw	95	;'_'
  3011  3ACE  344C               	retlw	76	;'L'
  3012  3ACF  344F               	retlw	79	;'O'
  3013  3AD0  343A               	retlw	58	;':'
  3014  3AD1  3420               	retlw	32	;' '
  3015  3AD2  3425               	retlw	37	;'%'
  3016  3AD3  3469               	retlw	105	;'i'
  3017  3AD4  3420               	retlw	32	;' '
  3018  3AD5  340A               	retlw	10
  3019  3AD6  340D               	retlw	13
  3020  3AD7  3400               	retlw	0
  3021                           
  3022                           	psect	stringtext29
  3023  3B10                     __pstringtext29:	
  3024  3B10                     STR_26:	
  3025  3B10  3449               	retlw	73	;'I'
  3026  3B11  344E               	retlw	78	;'N'
  3027  3B12  3446               	retlw	70	;'F'
  3028  3B13  3400               	retlw	0
  3029                           
  3030                           	psect	stringtext30
  3031  3B14                     __pstringtext30:	
  3032  3B14                     STR_30:	
  3033  3B14  344E               	retlw	78	;'N'
  3034  3B15  3441               	retlw	65	;'A'
  3035  3B16  344E               	retlw	78	;'N'
  3036  3B17  3400               	retlw	0
  3037                           
  3038                           	psect	stringtext31
  3039  3B18                     __pstringtext31:	
  3040  3B18                     STR_139:	
  3041  3B18  3468               	retlw	104	;'h'
  3042  3B19  3468               	retlw	104	;'h'
  3043  3B1A  3458               	retlw	88	;'X'
  3044  3B1B  3400               	retlw	0
  3045                           
  3046                           	psect	stringtext32
  3047  3B1C                     __pstringtext32:	
  3048  3B1C                     STR_34:	
  3049  3B1C  3468               	retlw	104	;'h'
  3050  3B1D  3468               	retlw	104	;'h'
  3051  3B1E  3464               	retlw	100	;'d'
  3052  3B1F  3400               	retlw	0
  3053                           
  3054                           	psect	stringtext33
  3055  3B20                     __pstringtext33:	
  3056  3B20                     STR_27:	
  3057  3B20  3469               	retlw	105	;'i'
  3058  3B21  346E               	retlw	110	;'n'
  3059  3B22  3466               	retlw	102	;'f'
  3060  3B23  3400               	retlw	0
  3061                           
  3062                           	psect	stringtext34
  3063  3B24                     __pstringtext34:	
  3064  3B24                     STR_38:	
  3065  3B24  3468               	retlw	104	;'h'
  3066  3B25  3468               	retlw	104	;'h'
  3067  3B26  3469               	retlw	105	;'i'
  3068  3B27  3400               	retlw	0
  3069                           
  3070                           	psect	stringtext35
  3071  3B28                     __pstringtext35:	
  3072  3B28                     STR_31:	
  3073  3B28  346E               	retlw	110	;'n'
  3074  3B29  3461               	retlw	97	;'a'
  3075  3B2A  346E               	retlw	110	;'n'
  3076  3B2B  3400               	retlw	0
  3077                           
  3078                           	psect	stringtext36
  3079  3B2C                     __pstringtext36:	
  3080  3B2C                     STR_95:	
  3081  3B2C  3468               	retlw	104	;'h'
  3082  3B2D  3468               	retlw	104	;'h'
  3083  3B2E  346E               	retlw	110	;'n'
  3084  3B2F  3400               	retlw	0
  3085                           
  3086                           	psect	stringtext37
  3087  3B30                     __pstringtext37:	
  3088  3B30                     STR_75:	
  3089  3B30  3468               	retlw	104	;'h'
  3090  3B31  3468               	retlw	104	;'h'
  3091  3B32  346F               	retlw	111	;'o'
  3092  3B33  3400               	retlw	0
  3093                           
  3094                           	psect	stringtext38
  3095  3B34                     __pstringtext38:	
  3096  3B34                     STR_115:	
  3097  3B34  3468               	retlw	104	;'h'
  3098  3B35  3468               	retlw	104	;'h'
  3099  3B36  3475               	retlw	117	;'u'
  3100  3B37  3400               	retlw	0
  3101                           
  3102                           	psect	stringtext39
  3103  3B38                     __pstringtext39:	
  3104  3B38                     STR_135:	
  3105  3B38  3468               	retlw	104	;'h'
  3106  3B39  3468               	retlw	104	;'h'
  3107  3B3A  3478               	retlw	120	;'x'
  3108  3B3B  3400               	retlw	0
  3109                           
  3110                           	psect	stringtext40
  3111  3B3C                     __pstringtext40:	
  3112  3B3C                     STR_157:	
  3113  3B3C  346C               	retlw	108	;'l'
  3114  3B3D  3458               	retlw	88	;'X'
  3115  3B3E  3400               	retlw	0
  3116                           
  3117                           	psect	stringtext41
  3118  3B3F                     __pstringtext41:	
  3119  3B3F                     STR_166:	
  3120  3B3F  347A               	retlw	122	;'z'
  3121  3B40  3458               	retlw	88	;'X'
  3122  3B41  3400               	retlw	0
  3123                           
  3124                           	psect	stringtext42
  3125  3B42                     __pstringtext42:	
  3126  3B42                     STR_52:	
  3127  3B42  346C               	retlw	108	;'l'
  3128  3B43  3464               	retlw	100	;'d'
  3129  3B44  3400               	retlw	0
  3130                           
  3131                           	psect	stringtext43
  3132  3B45                     __pstringtext43:	
  3133  3B45                     STR_61:	
  3134  3B45  347A               	retlw	122	;'z'
  3135  3B46  3464               	retlw	100	;'d'
  3136  3B47  3400               	retlw	0
  3137                           
  3138                           	psect	stringtext44
  3139  3B48                     __pstringtext44:	
  3140  3B48                     STR_70:	
  3141  3B48  346C               	retlw	108	;'l'
  3142  3B49  3466               	retlw	102	;'f'
  3143  3B4A  3400               	retlw	0
  3144                           
  3145                           	psect	stringtext45
  3146  3B4B                     __pstringtext45:	
  3147  3B4B                     STR_56:	
  3148  3B4B  346C               	retlw	108	;'l'
  3149  3B4C  3469               	retlw	105	;'i'
  3150  3B4D  3400               	retlw	0
  3151                           
  3152                           	psect	stringtext46
  3153  3B4E                     __pstringtext46:	
  3154  3B4E                     STR_65:	
  3155  3B4E  347A               	retlw	122	;'z'
  3156  3B4F  3469               	retlw	105	;'i'
  3157  3B50  3400               	retlw	0
  3158                           
  3159                           	psect	stringtext47
  3160  3B51                     __pstringtext47:	
  3161  3B51                     STR_105:	
  3162  3B51  346C               	retlw	108	;'l'
  3163  3B52  346E               	retlw	110	;'n'
  3164  3B53  3400               	retlw	0
  3165                           
  3166                           	psect	stringtext48
  3167  3B54                     __pstringtext48:	
  3168  3B54                     STR_110:	
  3169  3B54  347A               	retlw	122	;'z'
  3170  3B55  346E               	retlw	110	;'n'
  3171  3B56  3400               	retlw	0
  3172                           
  3173                           	psect	stringtext49
  3174  3B57                     __pstringtext49:	
  3175  3B57                     STR_85:	
  3176  3B57  346C               	retlw	108	;'l'
  3177  3B58  346F               	retlw	111	;'o'
  3178  3B59  3400               	retlw	0
  3179                           
  3180                           	psect	stringtext50
  3181  3B5A                     __pstringtext50:	
  3182  3B5A                     STR_90:	
  3183  3B5A  347A               	retlw	122	;'z'
  3184  3B5B  346F               	retlw	111	;'o'
  3185  3B5C  3400               	retlw	0
  3186                           
  3187                           	psect	stringtext51
  3188  3B5D                     __pstringtext51:	
  3189  3B5D                     STR_125:	
  3190  3B5D  346C               	retlw	108	;'l'
  3191  3B5E  3475               	retlw	117	;'u'
  3192  3B5F  3400               	retlw	0
  3193                           
  3194                           	psect	stringtext52
  3195  3B60                     __pstringtext52:	
  3196  3B60                     STR_130:	
  3197  3B60  347A               	retlw	122	;'z'
  3198  3B61  3475               	retlw	117	;'u'
  3199  3B62  3400               	retlw	0
  3200                           
  3201                           	psect	stringtext53
  3202  3B63                     __pstringtext53:	
  3203  3B63                     STR_153:	
  3204  3B63  346C               	retlw	108	;'l'
  3205  3B64  3478               	retlw	120	;'x'
  3206  3B65  3400               	retlw	0
  3207                           
  3208                           	psect	stringtext54
  3209  3B66                     __pstringtext54:	
  3210  3B66                     STR_162:	
  3211  3B66  347A               	retlw	122	;'z'
  3212  3B67  3478               	retlw	120	;'x'
  3213  3B68  3400               	retlw	0
  3214                           
  3215                           	psect	stringtext55
  3216  0000                     __pstringtext55:	
  3217  3A22                     
  3218                           ; #config settings
  3219  0000                     
  3220                           	psect	cinit
  3221  0020                     start_initialization:	
  3222  0020                     __initialization:		;BIGRAM
  3223                           
  3224                           ; Initialize objects allocated to BANK3
  3225  0020  3000               	movlw	low __pidataBANK3
  3226  0021  0084               	movwf	4
  3227  0022  3088               	movlw	(high __pidataBANK3)| (0+128)
  3228  0023  0085               	movwf	5
  3229  0024  0023               	movlb	3	; select bank3
  3230  0025  0012               	moviw fsr0++
  3231  0026  00DD               	movwf	__pdataBANK3& (0+127)
  3232  0027  0012               	moviw fsr0++
  3233  0028  00DE               	movwf	(__pdataBANK3+1)& (0+127)
  3234  0029  0012               	moviw fsr0++
  3235  002A  00DF               	movwf	(__pdataBANK3+2)& (0+127)
  3236  002B  0012               	moviw fsr0++
  3237  002C  00E0               	movwf	(__pdataBANK3+3)& (0+127)
  3238  002D  0012               	moviw fsr0++
  3239  002E  00E1               	movwf	(__pdataBANK3+4)& (0+127)
  3240  002F  0012               	moviw fsr0++
  3241  0030  00E2               	movwf	(__pdataBANK3+5)& (0+127)
  3242  0031  0012               	moviw fsr0++
  3243  0032  00E3               	movwf	(__pdataBANK3+6)& (0+127)
  3244                           
  3245                           ; Clear objects allocated to BIGRAM
  3246  0033  3071               	movlw	low (0+10097)
  3247  0034  0084               	movwf	4
  3248  0035  3027               	movlw	high (0+10097)
  3249  0036  0085               	movwf	5
  3250  0037  307F               	movlw	127
  3251  0038  00FE               	movwf	btemp
  3252  0039  3000               	movlw	0
  3253  003A  00FF               	movwf	btemp+1
  3254  003B  31B1  2132  3180   	fcall	clear_ram0
  3255                           
  3256                           ; Clear objects allocated to COMMON
  3257  003E  01FC               	clrf	__pbssCOMMON& (0+127)
  3258                           
  3259                           ; Clear objects allocated to BANK3
  3260  003F  30A0               	movlw	low __pbssBANK3
  3261  0040  0084               	movwf	4
  3262  0041  3001               	movlw	high __pbssBANK3
  3263  0042  0085               	movwf	5
  3264  0043  303D               	movlw	61
  3265  0044  00FE               	movwf	btemp
  3266  0045  3000               	movlw	0
  3267  0046  00FF               	movwf	btemp+1
  3268  0047  31B1  2132  3180   	fcall	clear_ram0
  3269                           
  3270                           ; Clear objects allocated to BANK4
  3271  004A  3020               	movlw	low __pbssBANK4
  3272  004B  0084               	movwf	4
  3273  004C  3002               	movlw	high __pbssBANK4
  3274  004D  0085               	movwf	5
  3275  004E  3050               	movlw	80
  3276  004F  00FE               	movwf	btemp
  3277  0050  3000               	movlw	0
  3278  0051  00FF               	movwf	btemp+1
  3279  0052  31B1  2132         	fcall	clear_ram0
  3280  0054                     end_of_initialization:	
  3281                           ;End of C runtime variable initialization code
  3282                           
  3283  0054                     __end_of__initialization:	
  3284  0054  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3285  0055  0020               	movlb	0
  3286  0056  3198  2801         	ljmp	_main	;jump to C main() function
  3287                           
  3288                           	psect	bssCOMMON
  3289  007C                     __pbssCOMMON:	
  3290  007C                     _toggleColor:	
  3291  007C                     	ds	1
  3292                           
  3293                           	psect	bssBANK3
  3294  01A0                     __pbssBANK3:	
  3295  01A0                     _cellVoltages:	
  3296  01A0                     	ds	10
  3297  01AA                     floorf@F524:	
  3298  01AA                     	ds	4
  3299  01AE                     ___fpclassifyf@F463:	
  3300  01AE                     	ds	4
  3301  01B2                     BQ76920@shuntResistorValue_mOhm:	
  3302  01B2                     	ds	4
  3303  01B6                     _shuntResistorValue_mOhm:	
  3304  01B6                     	ds	4
  3305  01BA                     _errno:	
  3306  01BA                     	ds	2
  3307  01BC                     _nout:	
  3308  01BC                     	ds	2
  3309  01BE                     _width:	
  3310  01BE                     	ds	2
  3311  01C0                     _prec:	
  3312  01C0                     	ds	2
  3313  01C2                     _flags:	
  3314  01C2                     	ds	2
  3315  01C4                     _minCellVoltage:	
  3316  01C4                     	ds	2
  3317  01C6                     _maxCellVoltage:	
  3318  01C6                     	ds	2
  3319  01C8                     _maxCellTempDischarge:	
  3320  01C8                     	ds	2
  3321  01CA                     _maxCellTempCharge:	
  3322  01CA                     	ds	2
  3323  01CC                     _minCellTempDischarge:	
  3324  01CC                     	ds	2
  3325  01CE                     _minCellTempCharge:	
  3326  01CE                     	ds	2
  3327  01D0                     _adcOffset:	
  3328  01D0                     	ds	2
  3329  01D2                     _adcGain:	
  3330  01D2                     	ds	2
  3331  01D4                     BQ76920@protect3:	
  3332  01D4                     	ds	1
  3333  01D5                     BQ76920@protect2:	
  3334  01D5                     	ds	1
  3335  01D6                     BQ76920@protect1:	
  3336  01D6                     	ds	1
  3337  01D7                     myIsr@count:	
  3338  01D7                     	ds	1
  3339  01D8                     _tmr1_flag:	
  3340  01D8                     	ds	1
  3341  01D9                     _currState:	
  3342  01D9                     	ds	1
  3343  01DA                     _protect3:	
  3344  01DA                     	ds	1
  3345  01DB                     _protect2:	
  3346  01DB                     	ds	1
  3347  01DC                     _protect1:	
  3348  01DC                     	ds	1
  3349                           
  3350                           	psect	dataBANK3
  3351  01DD                     __pdataBANK3:	
  3352  01DD                     stoa@F1174:	
  3353  01DD                     	ds	7
  3354                           
  3355                           	psect	bssBANK4
  3356  0220                     __pbssBANK4:	
  3357  0220                     _dbuf:	
  3358  0220                     	ds	80
  3359                           
  3360                           	psect	clrtext
  3361  3132                     clear_ram0:	
  3362                           ;	Called with FSR0 containing the base address, and
  3363                           ;	btemp/btemp+1 has the size to clear
  3364                           
  3365  3132  0064               	clrwdt	;clear the watchdog before getting into this loop
  3366  3133                     clrloop0:	
  3367  3133  0180               	clrf	0	;clear RAM location pointed to by FSR
  3368  3134  3101               	addfsr 0,1
  3369  3135  3001               	movlw	1
  3370  3136  02FE               	subwf	126,f
  3371  3137  3000               	movlw	0
  3372  3138  3BFF               	subwfb	127,f
  3373  3139  087F               	movf	127,w
  3374  313A  047E               	iorwf	126,w
  3375  313B  1903               	btfsc	3,2
  3376  313C  3400               	retlw	0	;all done for this memory range, return
  3377  313D  2933               	goto	clrloop0	;have we reached the end yet?
  3378                           
  3379                           	psect	cstackBANK3
  3380  01E4                     __pcstackBANK3:	
  3381  01E4                     statemachine@success:	
  3382                           
  3383                           ; 1 bytes @ 0x0
  3384  01E4                     	ds	1
  3385  01E5                     ??_main:	
  3386                           
  3387                           ; 1 bytes @ 0x1
  3388  01E5                     	ds	1
  3389                           
  3390                           	psect	cstackBANK2
  3391  0120                     __pcstackBANK2:	
  3392  0120                     ??_vfpfcnvrt:	
  3393                           
  3394                           ; 1 bytes @ 0x0
  3395  0120                     	ds	12
  3396  012C                     vfpfcnvrt@cp:	
  3397                           
  3398                           ; 1 bytes @ 0xC
  3399  012C                     	ds	1
  3400  012D                     vfpfcnvrt@done:	
  3401                           
  3402                           ; 2 bytes @ 0xD
  3403  012D                     	ds	2
  3404  012F                     _vfpfcnvrt$1162:	
  3405                           
  3406                           ; 2 bytes @ 0xF
  3407  012F                     	ds	2
  3408  0131                     _vfpfcnvrt$1163:	
  3409                           
  3410                           ; 2 bytes @ 0x11
  3411  0131                     	ds	2
  3412  0133                     _vfpfcnvrt$1189:	
  3413                           
  3414                           ; 2 bytes @ 0x13
  3415  0133                     	ds	2
  3416  0135                     vfpfcnvrt@ct:	
  3417                           
  3418                           ; 3 bytes @ 0x15
  3419  0135                     	ds	3
  3420  0138                     vfpfcnvrt@f:	
  3421                           
  3422                           ; 4 bytes @ 0x18
  3423  0138                     	ds	4
  3424  013C                     vfpfcnvrt@ll:	
  3425                           
  3426                           ; 8 bytes @ 0x1C
  3427  013C                     	ds	8
  3428  0144                     vfpfcnvrt@vp:	
  3429                           
  3430                           ; 1 bytes @ 0x24
  3431  0144                     	ds	1
  3432  0145                     vfpfcnvrt@c:	
  3433                           
  3434                           ; 1 bytes @ 0x25
  3435  0145                     	ds	1
  3436  0146                     vfpfcnvrt@llu:	
  3437                           
  3438                           ; 8 bytes @ 0x26
  3439  0146                     	ds	8
  3440  014E                     ?_vsnprintf:	
  3441  014E                     vsnprintf@s:	
  3442                           ; 2 bytes @ 0x2E
  3443                           
  3444                           
  3445                           ; 2 bytes @ 0x2E
  3446  014E                     	ds	2
  3447  0150                     vsnprintf@n:	
  3448                           
  3449                           ; 2 bytes @ 0x30
  3450  0150                     	ds	2
  3451  0152                     vsnprintf@fmt:	
  3452                           
  3453                           ; 2 bytes @ 0x32
  3454  0152                     	ds	2
  3455  0154                     vsnprintf@ap:	
  3456                           
  3457                           ; 1 bytes @ 0x34
  3458  0154                     	ds	1
  3459  0155                     _vsnprintf$1791:	
  3460                           
  3461                           ; 2 bytes @ 0x35
  3462  0155                     	ds	2
  3463  0157                     vsnprintf@cnt:	
  3464                           
  3465                           ; 2 bytes @ 0x37
  3466  0157                     	ds	2
  3467  0159                     vsnprintf@f:	
  3468                           
  3469                           ; 6 bytes @ 0x39
  3470  0159                     	ds	6
  3471  015F                     ?_snprintf:	
  3472  015F                     snprintf@s:	
  3473                           ; 2 bytes @ 0x3F
  3474                           
  3475                           
  3476                           ; 2 bytes @ 0x3F
  3477  015F                     	ds	2
  3478  0161                     snprintf@n:	
  3479                           
  3480                           ; 2 bytes @ 0x41
  3481  0161                     	ds	2
  3482  0163                     snprintf@fmt:	
  3483                           
  3484                           ; 2 bytes @ 0x43
  3485  0163                     	ds	6
  3486  0169                     ??_snprintf:	
  3487                           
  3488                           ; 1 bytes @ 0x49
  3489  0169                     	ds	3
  3490  016C                     snprintf@ap:	
  3491                           
  3492                           ; 1 bytes @ 0x4C
  3493  016C                     	ds	1
  3494  016D                     ??_printotAFERegisters:	
  3495                           
  3496                           ; 1 bytes @ 0x4D
  3497  016D                     	ds	1
  3498  016E                     ??_statemachine:	
  3499                           
  3500                           ; 1 bytes @ 0x4E
  3501  016E                     	ds	2
  3502                           
  3503                           	psect	cstackBANK1
  3504  00A0                     __pcstackBANK1:	
  3505  00A0                     ?_efgtoa:	
  3506  00A0                     efgtoa@fp:	
  3507                           ; 2 bytes @ 0x0
  3508                           
  3509  00A0                     setShortCircuitProtection@scaler:	
  3510                           ; 2 bytes @ 0x0
  3511                           
  3512  00A0                     setOverCurrentDischargeProtection@scaler:	
  3513                           ; 4 bytes @ 0x0
  3514                           
  3515                           
  3516                           ; 4 bytes @ 0x0
  3517  00A0                     	ds	2
  3518  00A2                     efgtoa@f:	
  3519                           
  3520                           ; 4 bytes @ 0x2
  3521  00A2                     	ds	2
  3522  00A4                     _setShortCircuitProtection$1985:	
  3523  00A4                     _setOverCurrentDischargeProtection$1986:	
  3524                           ; 4 bytes @ 0x4
  3525                           
  3526                           
  3527                           ; 4 bytes @ 0x4
  3528  00A4                     	ds	2
  3529  00A6                     efgtoa@c:	
  3530                           
  3531                           ; 1 bytes @ 0x6
  3532  00A6                     	ds	1
  3533  00A7                     ??_efgtoa:	
  3534                           
  3535                           ; 1 bytes @ 0x7
  3536  00A7                     	ds	1
  3537  00A8                     setShortCircuitProtection@i:	
  3538  00A8                     setOverCurrentDischargeProtection@i:	
  3539                           ; 2 bytes @ 0x8
  3540                           
  3541                           
  3542                           ; 2 bytes @ 0x8
  3543  00A8                     	ds	2
  3544  00AA                     setShortCircuitProtection@i_896:	
  3545  00AA                     setOverCurrentDischargeProtection@i_905:	
  3546                           ; 2 bytes @ 0xA
  3547                           
  3548                           
  3549                           ; 2 bytes @ 0xA
  3550  00AA                     	ds	1
  3551  00AB                     efgtoa@ou:	
  3552                           
  3553                           ; 4 bytes @ 0xB
  3554  00AB                     	ds	4
  3555  00AF                     _efgtoa$1100:	
  3556                           
  3557                           ; 2 bytes @ 0xF
  3558  00AF                     	ds	2
  3559  00B1                     _efgtoa$1101:	
  3560                           
  3561                           ; 2 bytes @ 0x11
  3562  00B1                     	ds	2
  3563  00B3                     _efgtoa$1105:	
  3564                           
  3565                           ; 2 bytes @ 0x13
  3566  00B3                     	ds	2
  3567  00B5                     _efgtoa$1109:	
  3568                           
  3569                           ; 2 bytes @ 0x15
  3570  00B5                     	ds	2
  3571  00B7                     _efgtoa$1110:	
  3572                           
  3573                           ; 2 bytes @ 0x17
  3574  00B7                     	ds	2
  3575  00B9                     _efgtoa$1111:	
  3576                           
  3577                           ; 2 bytes @ 0x19
  3578  00B9                     	ds	2
  3579  00BB                     efgtoa@t:	
  3580                           
  3581                           ; 2 bytes @ 0x1B
  3582  00BB                     	ds	2
  3583  00BD                     efgtoa@pp:	
  3584                           
  3585                           ; 2 bytes @ 0x1D
  3586  00BD                     	ds	2
  3587  00BF                     efgtoa@m:	
  3588                           
  3589                           ; 2 bytes @ 0x1F
  3590  00BF                     	ds	2
  3591  00C1                     efgtoa@ne:	
  3592                           
  3593                           ; 2 bytes @ 0x21
  3594  00C1                     	ds	2
  3595  00C3                     efgtoa@d:	
  3596                           
  3597                           ; 2 bytes @ 0x23
  3598  00C3                     	ds	2
  3599  00C5                     efgtoa@sign:	
  3600                           
  3601                           ; 2 bytes @ 0x25
  3602  00C5                     	ds	2
  3603  00C7                     efgtoa@p:	
  3604                           
  3605                           ; 2 bytes @ 0x27
  3606  00C7                     	ds	2
  3607  00C9                     efgtoa@nmode:	
  3608                           
  3609                           ; 1 bytes @ 0x29
  3610  00C9                     	ds	1
  3611  00CA                     efgtoa@w:	
  3612                           
  3613                           ; 2 bytes @ 0x2A
  3614  00CA                     	ds	2
  3615  00CC                     efgtoa@mode:	
  3616                           
  3617                           ; 1 bytes @ 0x2C
  3618  00CC                     	ds	1
  3619  00CD                     efgtoa@h:	
  3620                           
  3621                           ; 4 bytes @ 0x2D
  3622  00CD                     	ds	4
  3623  00D1                     efgtoa@l:	
  3624                           
  3625                           ; 4 bytes @ 0x31
  3626  00D1                     	ds	4
  3627  00D5                     efgtoa@i:	
  3628                           
  3629                           ; 2 bytes @ 0x35
  3630  00D5                     	ds	2
  3631  00D7                     efgtoa@g:	
  3632                           
  3633                           ; 4 bytes @ 0x37
  3634  00D7                     	ds	4
  3635  00DB                     efgtoa@e:	
  3636                           
  3637                           ; 2 bytes @ 0x3B
  3638  00DB                     	ds	2
  3639  00DD                     efgtoa@n:	
  3640                           
  3641                           ; 2 bytes @ 0x3D
  3642  00DD                     	ds	2
  3643  00DF                     efgtoa@u:	
  3644                           
  3645                           ; 4 bytes @ 0x3F
  3646  00DF                     	ds	4
  3647  00E3                     ?_vfpfcnvrt:	
  3648  00E3                     vfpfcnvrt@fp:	
  3649                           ; 2 bytes @ 0x43
  3650                           
  3651                           
  3652                           ; 2 bytes @ 0x43
  3653  00E3                     	ds	2
  3654  00E5                     vfpfcnvrt@fmt:	
  3655                           
  3656                           ; 1 bytes @ 0x45
  3657  00E5                     	ds	1
  3658  00E6                     vfpfcnvrt@ap:	
  3659                           
  3660                           ; 1 bytes @ 0x46
  3661  00E6                     	ds	1
  3662  00E7                     ?_vfprintf:	
  3663  00E7                     vfprintf@fp:	
  3664                           ; 2 bytes @ 0x47
  3665                           
  3666                           
  3667                           ; 2 bytes @ 0x47
  3668  00E7                     	ds	2
  3669  00E9                     vfprintf@fmt:	
  3670                           
  3671                           ; 2 bytes @ 0x49
  3672  00E9                     	ds	2
  3673  00EB                     vfprintf@ap:	
  3674                           
  3675                           ; 1 bytes @ 0x4B
  3676  00EB                     	ds	1
  3677  00EC                     vfprintf@cfmt:	
  3678                           
  3679                           ; 2 bytes @ 0x4C
  3680  00EC                     	ds	2
  3681  00EE                     ??_vsnprintf:	
  3682                           
  3683                           ; 1 bytes @ 0x4E
  3684  00EE                     	ds	2
  3685                           
  3686                           	psect	cstackCOMMON
  3687  0070                     __pcstackCOMMON:	
  3688  0070                     ?_initClock:	
  3689  0070                     ?_init_GPIO:	
  3690                           ; 1 bytes @ 0x0
  3691                           
  3692  0070                     ?_init_I2C:	
  3693                           ; 1 bytes @ 0x0
  3694                           
  3695  0070                     ?_init_TMR1:	
  3696                           ; 1 bytes @ 0x0
  3697                           
  3698  0070                     ?_init_RGB:	
  3699                           ; 1 bytes @ 0x0
  3700                           
  3701  0070                     ?_statemachine:	
  3702                           ; 1 bytes @ 0x0
  3703                           
  3704  0070                     ?_RGB_AWAIT_AFE_CONN:	
  3705                           ; 1 bytes @ 0x0
  3706                           
  3707  0070                     ?_init_AFE:	
  3708                           ; 1 bytes @ 0x0
  3709                           
  3710  0070                     ?_printotAFERegisters:	
  3711                           ; 1 bytes @ 0x0
  3712                           
  3713  0070                     ?_AFE_UPDATE:	
  3714                           ; 1 bytes @ 0x0
  3715                           
  3716  0070                     ?_internal_16:	
  3717                           ; 1 bytes @ 0x0
  3718                           
  3719  0070                     ?_putch:	
  3720                           ; 1 bytes @ 0x0
  3721                           
  3722  0070                     ?_myIsr:	
  3723                           ; 1 bytes @ 0x0
  3724                           
  3725  0070                     ??_myIsr:	
  3726                           ; 1 bytes @ 0x0
  3727                           
  3728  0070                     ?_main:	
  3729                           ; 1 bytes @ 0x0
  3730                           
  3731  0070                     ?_EUSART_Write:	
  3732                           ; 1 bytes @ 0x0
  3733                           
  3734  0070                     ?_send_I2C_startBit:	
  3735                           ; 1 bytes @ 0x0
  3736                           
  3737  0070                     ?_send_I2C_stopBit:	
  3738                           ; 1 bytes @ 0x0
  3739                           
  3740  0070                     ?_send_I2C_NACK:	
  3741                           ; 1 bytes @ 0x0
  3742                           
  3743  0070                     putch@c:	
  3744                           ; 1 bytes @ 0x0
  3745                           
  3746                           
  3747                           ; 1 bytes @ 0x0
  3748  0070                     	ds	1
  3749  0071                     ?___fleq:	
  3750  0071                     ??_initClock:	
  3751                           ; 1 bit 
  3752                           
  3753  0071                     ??_init_GPIO:	
  3754                           ; 1 bytes @ 0x1
  3755                           
  3756  0071                     ??_init_I2C:	
  3757                           ; 1 bytes @ 0x1
  3758                           
  3759  0071                     ??_init_TMR1:	
  3760                           ; 1 bytes @ 0x1
  3761                           
  3762  0071                     ??_init_RGB:	
  3763                           ; 1 bytes @ 0x1
  3764                           
  3765  0071                     ?_RGB_color:	
  3766                           ; 1 bytes @ 0x1
  3767                           
  3768  0071                     ??_AFE_UPDATE:	
  3769                           ; 1 bytes @ 0x1
  3770                           
  3771  0071                     ??_internal_16:	
  3772                           ; 1 bytes @ 0x1
  3773                           
  3774  0071                     ?_setShuntResistorValue:	
  3775                           ; 1 bytes @ 0x1
  3776                           
  3777  0071                     ?_strcpy:	
  3778                           ; 1 bytes @ 0x1
  3779                           
  3780  0071                     ??_putch:	
  3781                           ; 1 bytes @ 0x1
  3782                           
  3783  0071                     ??_EUSART_Write:	
  3784                           ; 1 bytes @ 0x1
  3785                           
  3786  0071                     ?_send_I2C_data:	
  3787                           ; 1 bytes @ 0x1
  3788                           
  3789  0071                     ?_send_I2C_controlByte:	
  3790                           ; 1 bytes @ 0x1
  3791                           
  3792  0071                     ??_send_I2C_startBit:	
  3793                           ; 1 bytes @ 0x1
  3794                           
  3795  0071                     ??_send_I2C_stopBit:	
  3796                           ; 1 bytes @ 0x1
  3797                           
  3798  0071                     ??_send_I2C_NACK:	
  3799                           ; 1 bytes @ 0x1
  3800                           
  3801  0071                     ??___aodiv:	
  3802                           ; 1 bytes @ 0x1
  3803                           
  3804  0071                     ??___aomod:	
  3805                           ; 1 bytes @ 0x1
  3806                           
  3807  0071                     ??___lodiv:	
  3808                           ; 1 bytes @ 0x1
  3809                           
  3810  0071                     ??___lomod:	
  3811                           ; 1 bytes @ 0x1
  3812                           
  3813  0071                     ?_fputc:	
  3814                           ; 1 bytes @ 0x1
  3815                           
  3816  0071                     ?_strlen:	
  3817                           ; 2 bytes @ 0x1
  3818                           
  3819  0071                     ?___fpclassifyf:	
  3820                           ; 2 bytes @ 0x1
  3821                           
  3822  0071                     ?_isupper:	
  3823                           ; 2 bytes @ 0x1
  3824                           
  3825  0071                     ?_isalpha:	
  3826                           ; 2 bytes @ 0x1
  3827                           
  3828  0071                     ?_isdigit:	
  3829                           ; 2 bytes @ 0x1
  3830                           
  3831  0071                     ?_strncmp:	
  3832                           ; 2 bytes @ 0x1
  3833                           
  3834  0071                     ?__Umul8_16:	
  3835                           ; 2 bytes @ 0x1
  3836                           
  3837  0071                     ?_isspace:	
  3838                           ; 2 bytes @ 0x1
  3839                           
  3840  0071                     ?_islower:	
  3841                           ; 2 bytes @ 0x1
  3842                           
  3843  0071                     ?_read_I2C_data:	
  3844                           ; 2 bytes @ 0x1
  3845                           
  3846  0071                     ?___wmul:	
  3847                           ; 2 bytes @ 0x1
  3848                           
  3849  0071                     ?___awdiv:	
  3850                           ; 2 bytes @ 0x1
  3851                           
  3852  0071                     ?___awmod:	
  3853                           ; 2 bytes @ 0x1
  3854                           
  3855  0071                     ?_AFE_getSetCurrentSenseRes:	
  3856                           ; 2 bytes @ 0x1
  3857                           
  3858  0071                     ?___lmul:	
  3859                           ; 4 bytes @ 0x1
  3860                           
  3861  0071                     ?___flneg:	
  3862                           ; 4 bytes @ 0x1
  3863                           
  3864  0071                     ?___fladd:	
  3865                           ; 4 bytes @ 0x1
  3866                           
  3867  0071                     ?___xxtofl:	
  3868                           ; 4 bytes @ 0x1
  3869                           
  3870  0071                     EUSART_Write@txData:	
  3871                           ; 4 bytes @ 0x1
  3872                           
  3873  0071                     __Umul8_16@multiplicand:	
  3874                           ; 1 bytes @ 0x1
  3875                           
  3876  0071                     send_I2C_data@databyte:	
  3877                           ; 1 bytes @ 0x1
  3878                           
  3879  0071                     send_I2C_controlByte@BlockAddress:	
  3880                           ; 2 bytes @ 0x1
  3881                           
  3882  0071                     RGB_color@color:	
  3883                           ; 2 bytes @ 0x1
  3884                           
  3885  0071                     ___wmul@multiplier:	
  3886                           ; 2 bytes @ 0x1
  3887                           
  3888  0071                     ___awdiv@divisor:	
  3889                           ; 2 bytes @ 0x1
  3890                           
  3891  0071                     ___awmod@divisor:	
  3892                           ; 2 bytes @ 0x1
  3893                           
  3894  0071                     isalpha@c:	
  3895                           ; 2 bytes @ 0x1
  3896                           
  3897  0071                     isdigit@c:	
  3898                           ; 2 bytes @ 0x1
  3899                           
  3900  0071                     isspace@c:	
  3901                           ; 2 bytes @ 0x1
  3902                           
  3903  0071                     isupper@c:	
  3904                           ; 2 bytes @ 0x1
  3905                           
  3906  0071                     fputc@c:	
  3907                           ; 2 bytes @ 0x1
  3908                           
  3909  0071                     strcpy@src:	
  3910                           ; 2 bytes @ 0x1
  3911                           
  3912  0071                     strlen@s:	
  3913                           ; 2 bytes @ 0x1
  3914                           
  3915  0071                     strncmp@_l:	
  3916                           ; 2 bytes @ 0x1
  3917                           
  3918  0071                     islower@c:	
  3919                           ; 2 bytes @ 0x1
  3920                           
  3921  0071                     setShuntResistorValue@res_mOhm:	
  3922                           ; 2 bytes @ 0x1
  3923                           
  3924  0071                     ___lmul@multiplier:	
  3925                           ; 4 bytes @ 0x1
  3926                           
  3927  0071                     ___fleq@ff1:	
  3928                           ; 4 bytes @ 0x1
  3929                           
  3930  0071                     ___flneg@f1:	
  3931                           ; 4 bytes @ 0x1
  3932                           
  3933  0071                     ___fladd@b:	
  3934                           ; 4 bytes @ 0x1
  3935                           
  3936  0071                     ___xxtofl@val:	
  3937                           ; 4 bytes @ 0x1
  3938                           
  3939  0071                     ___fpclassifyf@x:	
  3940                           ; 4 bytes @ 0x1
  3941                           
  3942                           
  3943                           ; 4 bytes @ 0x1
  3944  0071                     	ds	1
  3945  0072                     ?_EUSART_Write_Text:	
  3946  0072                     ___aodiv@counter:	
  3947                           ; 1 bytes @ 0x2
  3948                           
  3949  0072                     ___aomod@counter:	
  3950                           ; 1 bytes @ 0x2
  3951                           
  3952  0072                     ___lomod@counter:	
  3953                           ; 1 bytes @ 0x2
  3954                           
  3955  0072                     EUSART_Write_Text@text:	
  3956                           ; 1 bytes @ 0x2
  3957                           
  3958  0072                     ___lodiv@quotient:	
  3959                           ; 2 bytes @ 0x2
  3960                           
  3961                           
  3962                           ; 8 bytes @ 0x2
  3963  0072                     	ds	1
  3964  0073                     ??_RGB_AWAIT_AFE_CONN:	
  3965  0073                     ??_RGB_color:	
  3966                           ; 1 bytes @ 0x3
  3967                           
  3968  0073                     ??_strlen:	
  3969                           ; 1 bytes @ 0x3
  3970                           
  3971  0073                     ??_isupper:	
  3972                           ; 1 bytes @ 0x3
  3973                           
  3974  0073                     ??_strcpy:	
  3975                           ; 1 bytes @ 0x3
  3976                           
  3977  0073                     ??_isalpha:	
  3978                           ; 1 bytes @ 0x3
  3979                           
  3980  0073                     ??_isdigit:	
  3981                           ; 1 bytes @ 0x3
  3982                           
  3983  0073                     ??__Umul8_16:	
  3984                           ; 1 bytes @ 0x3
  3985                           
  3986  0073                     ??_isspace:	
  3987                           ; 1 bytes @ 0x3
  3988                           
  3989  0073                     ??_islower:	
  3990                           ; 1 bytes @ 0x3
  3991                           
  3992  0073                     ??_send_I2C_data:	
  3993                           ; 1 bytes @ 0x3
  3994                           
  3995  0073                     ??_read_I2C_data:	
  3996                           ; 1 bytes @ 0x3
  3997                           
  3998  0073                     ___aodiv@sign:	
  3999                           ; 1 bytes @ 0x3
  4000                           
  4001  0073                     ___aomod@sign:	
  4002                           ; 1 bytes @ 0x3
  4003                           
  4004  0073                     send_I2C_controlByte@RW_bit:	
  4005                           ; 1 bytes @ 0x3
  4006                           
  4007  0073                     ___wmul@multiplicand:	
  4008                           ; 2 bytes @ 0x3
  4009                           
  4010  0073                     ___awdiv@dividend:	
  4011                           ; 2 bytes @ 0x3
  4012                           
  4013  0073                     ___awmod@dividend:	
  4014                           ; 2 bytes @ 0x3
  4015                           
  4016  0073                     fputc@fp:	
  4017                           ; 2 bytes @ 0x3
  4018                           
  4019  0073                     strlen@a:	
  4020                           ; 2 bytes @ 0x3
  4021                           
  4022  0073                     strncmp@_r:	
  4023                           ; 2 bytes @ 0x3
  4024                           
  4025                           
  4026                           ; 2 bytes @ 0x3
  4027  0073                     	ds	1
  4028  0074                     ??_EUSART_Write_Text:	
  4029  0074                     ?_abs:	
  4030                           ; 1 bytes @ 0x4
  4031                           
  4032  0074                     abs@a:	
  4033                           ; 2 bytes @ 0x4
  4034                           
  4035  0074                     ___aodiv@quotient:	
  4036                           ; 2 bytes @ 0x4
  4037                           
  4038                           
  4039                           ; 8 bytes @ 0x4
  4040  0074                     	ds	1
  4041  0075                     ??_AFE_getSetCurrentSenseRes:	
  4042  0075                     ??_setShuntResistorValue:	
  4043                           ; 1 bytes @ 0x5
  4044                           
  4045  0075                     ??_fputc:	
  4046                           ; 1 bytes @ 0x5
  4047                           
  4048  0075                     ??___fpclassifyf:	
  4049                           ; 1 bytes @ 0x5
  4050                           
  4051  0075                     ??_send_I2C_controlByte:	
  4052                           ; 1 bytes @ 0x5
  4053                           
  4054  0075                     ?_I2C_writeRegister:	
  4055                           ; 1 bytes @ 0x5
  4056                           
  4057  0075                     ??___wmul:	
  4058                           ; 1 bytes @ 0x5
  4059                           
  4060  0075                     ??___awdiv:	
  4061                           ; 1 bytes @ 0x5
  4062                           
  4063  0075                     ??___awmod:	
  4064                           ; 1 bytes @ 0x5
  4065                           
  4066  0075                     ??___flneg:	
  4067                           ; 1 bytes @ 0x5
  4068                           
  4069  0075                     ??___xxtofl:	
  4070                           ; 1 bytes @ 0x5
  4071                           
  4072  0075                     ?_readRegister:	
  4073                           ; 1 bytes @ 0x5
  4074                           
  4075  0075                     _isspace$1656:	
  4076                           ; 2 bytes @ 0x5
  4077                           
  4078  0075                     EUSART_Write_Text@i:	
  4079                           ; 1 bytes @ 0x5
  4080                           
  4081  0075                     I2C_writeRegister@slaveAddress:	
  4082                           ; 2 bytes @ 0x5
  4083                           
  4084  0075                     readRegister@slaveAddress:	
  4085                           ; 2 bytes @ 0x5
  4086                           
  4087  0075                     ___wmul@product:	
  4088                           ; 2 bytes @ 0x5
  4089                           
  4090  0075                     strcpy@s:	
  4091                           ; 2 bytes @ 0x5
  4092                           
  4093  0075                     strncmp@n:	
  4094                           ; 2 bytes @ 0x5
  4095                           
  4096  0075                     __Umul8_16@product:	
  4097                           ; 2 bytes @ 0x5
  4098                           
  4099  0075                     ___lmul@multiplicand:	
  4100                           ; 2 bytes @ 0x5
  4101                           
  4102  0075                     ___fleq@ff2:	
  4103                           ; 4 bytes @ 0x5
  4104                           
  4105  0075                     ___fladd@a:	
  4106                           ; 4 bytes @ 0x5
  4107                           
  4108                           
  4109                           ; 4 bytes @ 0x5
  4110  0075                     	ds	1
  4111  0076                     ??_abs:	
  4112  0076                     ___awdiv@counter:	
  4113                           ; 1 bytes @ 0x6
  4114                           
  4115  0076                     ___awmod@counter:	
  4116                           ; 1 bytes @ 0x6
  4117                           
  4118                           
  4119                           ; 1 bytes @ 0x6
  4120  0076                     	ds	1
  4121  0077                     ??_setTemperatureLimitsint:	
  4122  0077                     ??_strncmp:	
  4123                           ; 1 bytes @ 0x7
  4124                           
  4125  0077                     ?_tolower:	
  4126                           ; 1 bytes @ 0x7
  4127                           
  4128  0077                     ?_toupper:	
  4129                           ; 2 bytes @ 0x7
  4130                           
  4131  0077                     ?_atoi:	
  4132                           ; 2 bytes @ 0x7
  4133                           
  4134  0077                     ___awdiv@sign:	
  4135                           ; 2 bytes @ 0x7
  4136                           
  4137  0077                     ___awmod@sign:	
  4138                           ; 1 bytes @ 0x7
  4139                           
  4140  0077                     strcpy@d:	
  4141                           ; 1 bytes @ 0x7
  4142                           
  4143  0077                     I2C_writeRegister@regAddress:	
  4144                           ; 1 bytes @ 0x7
  4145                           
  4146  0077                     readRegister@regAddress:	
  4147                           ; 2 bytes @ 0x7
  4148                           
  4149  0077                     atoi@s:	
  4150                           ; 2 bytes @ 0x7
  4151                           
  4152  0077                     tolower@c:	
  4153                           ; 2 bytes @ 0x7
  4154                           
  4155  0077                     toupper@c:	
  4156                           ; 2 bytes @ 0x7
  4157                           
  4158  0077                     __Umul8_16@word_mpld:	
  4159                           ; 2 bytes @ 0x7
  4160                           
  4161                           
  4162                           ; 2 bytes @ 0x7
  4163  0077                     	ds	1
  4164  0078                     strcpy@dest:	
  4165  0078                     ___awdiv@quotient:	
  4166                           ; 1 bytes @ 0x8
  4167                           
  4168  0078                     strncmp@l:	
  4169                           ; 2 bytes @ 0x8
  4170                           
  4171                           
  4172                           ; 2 bytes @ 0x8
  4173  0078                     	ds	1
  4174  0079                     ??_readRegister:	
  4175  0079                     ??___lmul:	
  4176                           ; 1 bytes @ 0x9
  4177                           
  4178  0079                     ??___aldiv:	
  4179                           ; 1 bytes @ 0x9
  4180                           
  4181  0079                     __Umul8_16@multiplier:	
  4182                           ; 1 bytes @ 0x9
  4183                           
  4184  0079                     I2C_writeRegister@data:	
  4185                           ; 1 bytes @ 0x9
  4186                           
  4187  0079                     readRegister@recievedData:	
  4188                           ; 2 bytes @ 0x9
  4189                           
  4190  0079                     _tolower$1739:	
  4191                           ; 2 bytes @ 0x9
  4192                           
  4193  0079                     _toupper$1754:	
  4194                           ; 2 bytes @ 0x9
  4195                           
  4196                           
  4197                           ; 2 bytes @ 0x9
  4198  0079                     	ds	1
  4199  007A                     ??_stoa:	
  4200  007A                     ??___flsub:	
  4201                           ; 1 bytes @ 0xA
  4202                           
  4203  007A                     ?_fputs:	
  4204                           ; 1 bytes @ 0xA
  4205                           
  4206  007A                     ___fltol@sign1:	
  4207                           ; 2 bytes @ 0xA
  4208                           
  4209  007A                     ___lodiv@counter:	
  4210                           ; 1 bytes @ 0xA
  4211                           
  4212  007A                     EUSART_Initialize@x:	
  4213                           ; 1 bytes @ 0xA
  4214                           
  4215  007A                     fputs@fp:	
  4216                           ; 2 bytes @ 0xA
  4217                           
  4218  007A                     strncmp@r:	
  4219                           ; 2 bytes @ 0xA
  4220                           
  4221                           
  4222                           ; 2 bytes @ 0xA
  4223  007A                     	ds	1
  4224  007B                     ??_init_AFE:	
  4225  007B                     ??_I2C_writeRegister:	
  4226                           ; 1 bytes @ 0xB
  4227                           
  4228  007B                     ___fltol@exp1:	
  4229                           ; 1 bytes @ 0xB
  4230                           
  4231                           
  4232                           ; 1 bytes @ 0xB
  4233  007B                     	ds	1
  4234                           
  4235                           	psect	cstackBANK0
  4236  0020                     __pcstackBANK0:	
  4237  0020                     ?_setTemperatureLimitsint:	
  4238  0020                     ??_fputs:	
  4239                           ; 1 bytes @ 0x0
  4240                           
  4241  0020                     ??_tolower:	
  4242                           ; 1 bytes @ 0x0
  4243                           
  4244  0020                     ??_toupper:	
  4245                           ; 1 bytes @ 0x0
  4246                           
  4247  0020                     ??_atoi:	
  4248                           ; 1 bytes @ 0x0
  4249                           
  4250  0020                     ??___fleq:	
  4251                           ; 1 bytes @ 0x0
  4252                           
  4253  0020                     ??___fladd:	
  4254                           ; 1 bytes @ 0x0
  4255                           
  4256  0020                     ?_beginAFEcommunication:	
  4257                           ; 1 bytes @ 0x0
  4258                           
  4259  0020                     ?_stoa:	
  4260                           ; 2 bytes @ 0x0
  4261                           
  4262  0020                     ?___aodiv:	
  4263                           ; 2 bytes @ 0x0
  4264                           
  4265  0020                     ?___aomod:	
  4266                           ; 8 bytes @ 0x0
  4267                           
  4268  0020                     ?___lodiv:	
  4269                           ; 8 bytes @ 0x0
  4270                           
  4271  0020                     ?___lomod:	
  4272                           ; 8 bytes @ 0x0
  4273                           
  4274  0020                     ___xxtofl@sign:	
  4275                           ; 8 bytes @ 0x0
  4276                           
  4277  0020                     setTemperatureLimitsint@minDischarge_degC:	
  4278                           ; 1 bytes @ 0x0
  4279                           
  4280  0020                     stoa@fp:	
  4281                           ; 2 bytes @ 0x0
  4282                           
  4283  0020                     ___fpclassifyf@e:	
  4284                           ; 2 bytes @ 0x0
  4285                           
  4286  0020                     ___lmul@product:	
  4287                           ; 2 bytes @ 0x0
  4288                           
  4289  0020                     ___aodiv@divisor:	
  4290                           ; 4 bytes @ 0x0
  4291                           
  4292  0020                     ___aomod@divisor:	
  4293                           ; 8 bytes @ 0x0
  4294                           
  4295  0020                     ___lodiv@divisor:	
  4296                           ; 8 bytes @ 0x0
  4297                           
  4298  0020                     ___lomod@divisor:	
  4299                           ; 8 bytes @ 0x0
  4300                           
  4301                           
  4302                           ; 8 bytes @ 0x0
  4303  0020                     	ds	1
  4304  0021                     ___xxtofl@exp:	
  4305                           
  4306                           ; 1 bytes @ 0x1
  4307  0021                     	ds	1
  4308  0022                     ??_beginAFEcommunication:	
  4309  0022                     stoa@s:	
  4310                           ; 1 bytes @ 0x2
  4311                           
  4312  0022                     fputs@c:	
  4313                           ; 1 bytes @ 0x2
  4314                           
  4315  0022                     setTemperatureLimitsint@maxDischarge_degC:	
  4316                           ; 1 bytes @ 0x2
  4317                           
  4318  0022                     ___xxtofl@arg:	
  4319                           ; 2 bytes @ 0x2
  4320                           
  4321  0022                     ___fpclassifyf@u:	
  4322                           ; 4 bytes @ 0x2
  4323                           
  4324                           
  4325                           ; 4 bytes @ 0x2
  4326  0022                     	ds	1
  4327  0023                     fputs@i:	
  4328  0023                     stoa@nuls:	
  4329                           ; 2 bytes @ 0x3
  4330                           
  4331                           
  4332                           ; 7 bytes @ 0x3
  4333  0023                     	ds	1
  4334  0024                     ?___aldiv:	
  4335  0024                     setTemperatureLimitsint@minCharge_degC:	
  4336                           ; 4 bytes @ 0x4
  4337                           
  4338  0024                     atoi@neg:	
  4339                           ; 2 bytes @ 0x4
  4340                           
  4341  0024                     ___aldiv@divisor:	
  4342                           ; 2 bytes @ 0x4
  4343                           
  4344                           
  4345                           ; 4 bytes @ 0x4
  4346  0024                     	ds	1
  4347  0025                     fputs@s:	
  4348                           
  4349                           ; 1 bytes @ 0x5
  4350  0025                     	ds	1
  4351  0026                     ?_pad:	
  4352  0026                     ?___flmul:	
  4353                           ; 2 bytes @ 0x6
  4354                           
  4355  0026                     setTemperatureLimitsint@maxCharge_degC:	
  4356                           ; 4 bytes @ 0x6
  4357                           
  4358  0026                     pad@fp:	
  4359                           ; 2 bytes @ 0x6
  4360                           
  4361  0026                     _atoi$1616:	
  4362                           ; 2 bytes @ 0x6
  4363                           
  4364  0026                     ___flmul@b:	
  4365                           ; 2 bytes @ 0x6
  4366                           
  4367                           
  4368                           ; 4 bytes @ 0x6
  4369  0026                     	ds	2
  4370  0028                     pad@buf:	
  4371  0028                     ___fladd@signs:	
  4372                           ; 1 bytes @ 0x8
  4373                           
  4374  0028                     _atoi$1618:	
  4375                           ; 1 bytes @ 0x8
  4376                           
  4377  0028                     ___aldiv@dividend:	
  4378                           ; 2 bytes @ 0x8
  4379                           
  4380  0028                     ___aodiv@dividend:	
  4381                           ; 4 bytes @ 0x8
  4382                           
  4383  0028                     ___aomod@dividend:	
  4384                           ; 8 bytes @ 0x8
  4385                           
  4386  0028                     ___lodiv@dividend:	
  4387                           ; 8 bytes @ 0x8
  4388                           
  4389  0028                     ___lomod@dividend:	
  4390                           ; 8 bytes @ 0x8
  4391                           
  4392                           
  4393                           ; 8 bytes @ 0x8
  4394  0028                     	ds	1
  4395  0029                     ___fladd@aexp:	
  4396  0029                     pad@p:	
  4397                           ; 1 bytes @ 0x9
  4398                           
  4399                           
  4400                           ; 2 bytes @ 0x9
  4401  0029                     	ds	1
  4402  002A                     ___fladd@bexp:	
  4403  002A                     _atoi$1617:	
  4404                           ; 1 bytes @ 0xA
  4405                           
  4406  002A                     stoa@i:	
  4407                           ; 1 bytes @ 0xA
  4408                           
  4409  002A                     ___flmul@a:	
  4410                           ; 2 bytes @ 0xA
  4411                           
  4412                           
  4413                           ; 4 bytes @ 0xA
  4414  002A                     	ds	1
  4415  002B                     ??_pad:	
  4416  002B                     ___fladd@grs:	
  4417                           ; 1 bytes @ 0xB
  4418                           
  4419  002B                     beginAFEcommunication@commSuccess:	
  4420                           ; 1 bytes @ 0xB
  4421                           
  4422  002B                     atoi@n:	
  4423                           ; 2 bytes @ 0xB
  4424                           
  4425                           
  4426                           ; 2 bytes @ 0xB
  4427  002B                     	ds	1
  4428  002C                     ___aldiv@counter:	
  4429  002C                     pad@i:	
  4430                           ; 1 bytes @ 0xC
  4431                           
  4432  002C                     stoa@w:	
  4433                           ; 2 bytes @ 0xC
  4434                           
  4435                           
  4436                           ; 2 bytes @ 0xC
  4437  002C                     	ds	1
  4438  002D                     ___aldiv@sign:	
  4439  002D                     beginAFEcommunication@i:	
  4440                           ; 1 bytes @ 0xD
  4441                           
  4442                           
  4443                           ; 2 bytes @ 0xD
  4444  002D                     	ds	1
  4445  002E                     ??___flmul:	
  4446  002E                     pad@w:	
  4447                           ; 1 bytes @ 0xE
  4448                           
  4449  002E                     stoa@cp:	
  4450                           ; 2 bytes @ 0xE
  4451                           
  4452  002E                     ___aldiv@quotient:	
  4453                           ; 2 bytes @ 0xE
  4454                           
  4455                           
  4456                           ; 4 bytes @ 0xE
  4457  002E                     	ds	2
  4458  0030                     ?_ctoa:	
  4459  0030                     ?_dtoa:	
  4460                           ; 2 bytes @ 0x10
  4461                           
  4462  0030                     ?_otoa:	
  4463                           ; 2 bytes @ 0x10
  4464                           
  4465  0030                     ?_utoa:	
  4466                           ; 2 bytes @ 0x10
  4467                           
  4468  0030                     ?_xtoa:	
  4469                           ; 2 bytes @ 0x10
  4470                           
  4471  0030                     ctoa@fp:	
  4472                           ; 2 bytes @ 0x10
  4473                           
  4474  0030                     dtoa@fp:	
  4475                           ; 2 bytes @ 0x10
  4476                           
  4477  0030                     otoa@fp:	
  4478                           ; 2 bytes @ 0x10
  4479                           
  4480  0030                     stoa@p:	
  4481                           ; 2 bytes @ 0x10
  4482                           
  4483  0030                     utoa@fp:	
  4484                           ; 2 bytes @ 0x10
  4485                           
  4486  0030                     xtoa@fp:	
  4487                           ; 2 bytes @ 0x10
  4488                           
  4489                           
  4490                           ; 2 bytes @ 0x10
  4491  0030                     	ds	2
  4492  0032                     ?_EUSART_Initialize:	
  4493  0032                     ?_setCellUndervoltageProtection:	
  4494                           ; 1 bytes @ 0x12
  4495                           
  4496  0032                     ?_setCellOvervoltageProtection:	
  4497                           ; 1 bytes @ 0x12
  4498                           
  4499  0032                     ctoa@c:	
  4500                           ; 1 bytes @ 0x12
  4501                           
  4502  0032                     setCellUndervoltageProtection@voltage_mV:	
  4503                           ; 1 bytes @ 0x12
  4504                           
  4505  0032                     setCellOvervoltageProtection@voltage_mV:	
  4506                           ; 2 bytes @ 0x12
  4507                           
  4508  0032                     stoa@l:	
  4509                           ; 2 bytes @ 0x12
  4510                           
  4511  0032                     EUSART_Initialize@baudrate:	
  4512                           ; 2 bytes @ 0x12
  4513                           
  4514  0032                     dtoa@d:	
  4515                           ; 4 bytes @ 0x12
  4516                           
  4517  0032                     otoa@d:	
  4518                           ; 8 bytes @ 0x12
  4519                           
  4520  0032                     utoa@d:	
  4521                           ; 8 bytes @ 0x12
  4522                           
  4523  0032                     xtoa@d:	
  4524                           ; 8 bytes @ 0x12
  4525                           
  4526                           
  4527                           ; 8 bytes @ 0x12
  4528  0032                     	ds	1
  4529  0033                     ??_ctoa:	
  4530  0033                     ___flmul@sign:	
  4531                           ; 1 bytes @ 0x13
  4532                           
  4533                           
  4534                           ; 1 bytes @ 0x13
  4535  0033                     	ds	1
  4536  0034                     setCellUndervoltageProtection@delay_s:	
  4537  0034                     setCellOvervoltageProtection@delay_s:	
  4538                           ; 2 bytes @ 0x14
  4539                           
  4540  0034                     ctoa@w:	
  4541                           ; 2 bytes @ 0x14
  4542                           
  4543  0034                     ___flmul@grs:	
  4544                           ; 2 bytes @ 0x14
  4545                           
  4546                           
  4547                           ; 4 bytes @ 0x14
  4548  0034                     	ds	2
  4549  0036                     ??_EUSART_Initialize:	
  4550  0036                     ??_setCellUndervoltageProtection:	
  4551                           ; 1 bytes @ 0x16
  4552                           
  4553  0036                     ??_setCellOvervoltageProtection:	
  4554                           ; 1 bytes @ 0x16
  4555                           
  4556                           
  4557                           ; 1 bytes @ 0x16
  4558  0036                     	ds	2
  4559  0038                     ___flmul@aexp:	
  4560                           
  4561                           ; 1 bytes @ 0x18
  4562  0038                     	ds	1
  4563  0039                     ___flmul@bexp:	
  4564                           
  4565                           ; 1 bytes @ 0x19
  4566  0039                     	ds	1
  4567  003A                     ??_dtoa:	
  4568  003A                     ??_otoa:	
  4569                           ; 1 bytes @ 0x1A
  4570                           
  4571  003A                     ??_utoa:	
  4572                           ; 1 bytes @ 0x1A
  4573                           
  4574  003A                     xtoa@x:	
  4575                           ; 1 bytes @ 0x1A
  4576                           
  4577  003A                     ___flmul@prod:	
  4578                           ; 1 bytes @ 0x1A
  4579                           
  4580                           
  4581                           ; 4 bytes @ 0x1A
  4582  003A                     	ds	1
  4583  003B                     ??_xtoa:	
  4584  003B                     utoa@p:	
  4585                           ; 1 bytes @ 0x1B
  4586                           
  4587                           
  4588                           ; 2 bytes @ 0x1B
  4589  003B                     	ds	2
  4590  003D                     _dtoa$1077:	
  4591  003D                     utoa@w:	
  4592                           ; 2 bytes @ 0x1D
  4593                           
  4594                           
  4595                           ; 2 bytes @ 0x1D
  4596  003D                     	ds	1
  4597  003E                     ___flmul@temp:	
  4598                           
  4599                           ; 2 bytes @ 0x1E
  4600  003E                     	ds	1
  4601  003F                     dtoa@p:	
  4602  003F                     utoa@n:	
  4603                           ; 2 bytes @ 0x1F
  4604                           
  4605                           
  4606                           ; 8 bytes @ 0x1F
  4607  003F                     	ds	1
  4608  0040                     ?___flsub:	
  4609  0040                     ?___fldiv:	
  4610                           ; 4 bytes @ 0x20
  4611                           
  4612  0040                     ___flsub@a:	
  4613                           ; 4 bytes @ 0x20
  4614                           
  4615  0040                     ___fldiv@a:	
  4616                           ; 4 bytes @ 0x20
  4617                           
  4618                           
  4619                           ; 4 bytes @ 0x20
  4620  0040                     	ds	1
  4621  0041                     dtoa@w:	
  4622                           
  4623                           ; 2 bytes @ 0x21
  4624  0041                     	ds	1
  4625  0042                     otoa@p:	
  4626                           
  4627                           ; 2 bytes @ 0x22
  4628  0042                     	ds	1
  4629  0043                     dtoa@s:	
  4630  0043                     _xtoa$1147:	
  4631                           ; 2 bytes @ 0x23
  4632                           
  4633                           
  4634                           ; 2 bytes @ 0x23
  4635  0043                     	ds	1
  4636  0044                     setCellUndervoltageProtection@uv_trip:	
  4637  0044                     setCellOvervoltageProtection@ov_trip:	
  4638                           ; 1 bytes @ 0x24
  4639                           
  4640  0044                     otoa@t:	
  4641                           ; 1 bytes @ 0x24
  4642                           
  4643  0044                     ___flsub@b:	
  4644                           ; 2 bytes @ 0x24
  4645                           
  4646  0044                     ___fldiv@b:	
  4647                           ; 4 bytes @ 0x24
  4648                           
  4649                           
  4650                           ; 4 bytes @ 0x24
  4651  0044                     	ds	1
  4652  0045                     setCellUndervoltageProtection@i:	
  4653  0045                     setCellOvervoltageProtection@i:	
  4654                           ; 2 bytes @ 0x25
  4655                           
  4656  0045                     _xtoa$1148:	
  4657                           ; 2 bytes @ 0x25
  4658                           
  4659  0045                     dtoa@n:	
  4660                           ; 2 bytes @ 0x25
  4661                           
  4662                           
  4663                           ; 8 bytes @ 0x25
  4664  0045                     	ds	1
  4665  0046                     otoa@w:	
  4666                           
  4667                           ; 2 bytes @ 0x26
  4668  0046                     	ds	1
  4669  0047                     utoa@i:	
  4670  0047                     xtoa@p:	
  4671                           ; 2 bytes @ 0x27
  4672                           
  4673                           
  4674                           ; 2 bytes @ 0x27
  4675  0047                     	ds	1
  4676  0048                     ??___fldiv:	
  4677  0048                     otoa@n:	
  4678                           ; 1 bytes @ 0x28
  4679                           
  4680                           
  4681                           ; 8 bytes @ 0x28
  4682  0048                     	ds	1
  4683  0049                     xtoa@w:	
  4684                           
  4685                           ; 2 bytes @ 0x29
  4686  0049                     	ds	2
  4687  004B                     xtoa@n:	
  4688                           
  4689                           ; 8 bytes @ 0x2B
  4690  004B                     	ds	2
  4691  004D                     dtoa@i:	
  4692  004D                     ___fldiv@rem:	
  4693                           ; 2 bytes @ 0x2D
  4694                           
  4695                           
  4696                           ; 4 bytes @ 0x2D
  4697  004D                     	ds	3
  4698  0050                     otoa@i:	
  4699                           
  4700                           ; 2 bytes @ 0x30
  4701  0050                     	ds	1
  4702  0051                     ___fldiv@sign:	
  4703                           
  4704                           ; 1 bytes @ 0x31
  4705  0051                     	ds	1
  4706  0052                     ___fldiv@new_exp:	
  4707                           
  4708                           ; 2 bytes @ 0x32
  4709  0052                     	ds	1
  4710  0053                     xtoa@i:	
  4711                           
  4712                           ; 2 bytes @ 0x33
  4713  0053                     	ds	1
  4714  0054                     ___fldiv@grs:	
  4715                           
  4716                           ; 4 bytes @ 0x34
  4717  0054                     	ds	1
  4718  0055                     xtoa@c:	
  4719                           
  4720                           ; 2 bytes @ 0x35
  4721  0055                     	ds	3
  4722  0058                     ___fldiv@bexp:	
  4723                           
  4724                           ; 1 bytes @ 0x38
  4725  0058                     	ds	1
  4726  0059                     ___fldiv@aexp:	
  4727                           
  4728                           ; 1 bytes @ 0x39
  4729  0059                     	ds	1
  4730  005A                     ?___flge:	
  4731  005A                     ?_floorf:	
  4732                           ; 1 bit 
  4733                           
  4734  005A                     ?___fltol:	
  4735                           ; 4 bytes @ 0x3A
  4736                           
  4737  005A                     ___flge@ff1:	
  4738                           ; 4 bytes @ 0x3A
  4739                           
  4740  005A                     ___fltol@f1:	
  4741                           ; 4 bytes @ 0x3A
  4742                           
  4743  005A                     floorf@x:	
  4744                           ; 4 bytes @ 0x3A
  4745                           
  4746                           
  4747                           ; 4 bytes @ 0x3A
  4748  005A                     	ds	4
  4749  005E                     ??_floorf:	
  4750  005E                     ??___fltol:	
  4751                           ; 1 bytes @ 0x3E
  4752                           
  4753  005E                     ___flge@ff2:	
  4754                           ; 1 bytes @ 0x3E
  4755                           
  4756                           
  4757                           ; 4 bytes @ 0x3E
  4758  005E                     	ds	4
  4759  0062                     ??___flge:	
  4760                           
  4761                           ; 1 bytes @ 0x42
  4762  0062                     	ds	1
  4763  0063                     ?_AFE_getSetShortCircuitCurrent:	
  4764  0063                     ?_AFE_getOverCurrentDischargeCurrent:	
  4765                           ; 4 bytes @ 0x43
  4766                           
  4767                           
  4768                           ; 4 bytes @ 0x43
  4769  0063                     	ds	1
  4770  0064                     floorf@m:	
  4771                           
  4772                           ; 4 bytes @ 0x44
  4773  0064                     	ds	2
  4774  0066                     ?_setShortCircuitProtection:	
  4775  0066                     ?_setOverCurrentDischargeProtection:	
  4776                           ; 1 bytes @ 0x46
  4777                           
  4778  0066                     setShortCircuitProtection@current_mA:	
  4779                           ; 1 bytes @ 0x46
  4780                           
  4781  0066                     setOverCurrentDischargeProtection@current_mA:	
  4782                           ; 4 bytes @ 0x46
  4783                           
  4784                           
  4785                           ; 4 bytes @ 0x46
  4786  0066                     	ds	1
  4787  0067                     ??_AFE_getSetShortCircuitCurrent:	
  4788  0067                     ??_AFE_getOverCurrentDischargeCurrent:	
  4789                           ; 1 bytes @ 0x47
  4790                           
  4791                           
  4792                           ; 1 bytes @ 0x47
  4793  0067                     	ds	1
  4794  0068                     floorf@e:	
  4795                           
  4796                           ; 2 bytes @ 0x48
  4797  0068                     	ds	2
  4798  006A                     setShortCircuitProtection@delay_us:	
  4799  006A                     setOverCurrentDischargeProtection@delay_ms:	
  4800                           ; 2 bytes @ 0x4A
  4801                           
  4802  006A                     floorf@u:	
  4803                           ; 2 bytes @ 0x4A
  4804                           
  4805                           
  4806                           ; 4 bytes @ 0x4A
  4807  006A                     	ds	2
  4808  006C                     ??_setShortCircuitProtection:	
  4809  006C                     ??_setOverCurrentDischargeProtection:	
  4810                           ; 1 bytes @ 0x4C
  4811                           
  4812                           
  4813                           ; 1 bytes @ 0x4C
  4814  006C                     	ds	2
  4815  006E                     ??_vfprintf:	
  4816                           
  4817                           ; 1 bytes @ 0x4E
  4818  006E                     	ds	2
  4819                           
  4820                           	psect	maintext
  4821  1801                     __pmaintext:	
  4822 ;;
  4823 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4824 ;;
  4825 ;; *************** function _main *****************
  4826 ;; Defined at:
  4827 ;;		line 75 in file "main.c"
  4828 ;; Parameters:    Size  Location     Type
  4829 ;;		None
  4830 ;; Auto vars:     Size  Location     Type
  4831 ;;		None
  4832 ;; Return value:  Size  Location     Type
  4833 ;;                  1    wreg      void 
  4834 ;; Registers used:
  4835 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4836 ;; Tracked objects:
  4837 ;;		On entry : B1F/0
  4838 ;;		On exit  : 0/0
  4839 ;;		Unchanged: 0/0
  4840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4843 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4844 ;;      Totals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4845 ;;Total ram usage:        1 bytes
  4846 ;; Hardware stack levels required when called:   12
  4847 ;; This function calls:
  4848 ;;		_EUSART_Initialize
  4849 ;;		_initClock
  4850 ;;		_init_GPIO
  4851 ;;		_init_I2C
  4852 ;;		_init_RGB
  4853 ;;		_init_TMR1
  4854 ;;		_statemachine
  4855 ;; This function is called by:
  4856 ;;		Startup code after reset
  4857 ;; This function uses a non-reentrant model
  4858 ;;
  4859                           
  4860                           
  4861                           ;psect for function _main
  4862  1801                     _main:	
  4863                           
  4864                           ;main.c: 78:     initClock();
  4865                           
  4866                           ;incstack = 0
  4867                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4868  1801  3187  27FC  3198   	fcall	_initClock
  4869                           
  4870                           ;main.c: 79:     init_GPIO();
  4871  1804  3188  2007  3198   	fcall	_init_GPIO
  4872                           
  4873                           ;main.c: 80:     init_I2C();
  4874  1807  31B1  213E  3198   	fcall	_init_I2C
  4875                           
  4876                           ;main.c: 81:     EUSART_Initialize(9600);
  4877  180A  3000               	movlw	0
  4878  180B  0020               	movlb	0	; select bank0
  4879  180C  00B5               	movwf	EUSART_Initialize@baudrate+3
  4880  180D  3000               	movlw	0
  4881  180E  00B4               	movwf	EUSART_Initialize@baudrate+2
  4882  180F  3025               	movlw	37
  4883  1810  00B3               	movwf	EUSART_Initialize@baudrate+1
  4884  1811  3080               	movlw	128
  4885  1812  00B2               	movwf	EUSART_Initialize@baudrate
  4886  1813  31AD  250D  3198   	fcall	_EUSART_Initialize
  4887                           
  4888                           ;main.c: 82:     init_TMR1();
  4889  1816  31B1  2127  3198   	fcall	_init_TMR1
  4890                           
  4891                           ;main.c: 83:     init_RGB();
  4892  1819  31B0  20D2  3198   	fcall	_init_RGB
  4893  181C                     l8720:	
  4894                           
  4895                           ;main.c: 87:         statemachine();
  4896  181C  319A  2246  3198   	fcall	_statemachine
  4897                           
  4898                           ;main.c: 89:         _delay((unsigned long)((10)*(16000000/4000.0)));
  4899  181F  3034               	movlw	52
  4900  1820  0023               	movlb	3	; select bank3
  4901  1821  00E5               	movwf	??_main^(0+384)
  4902  1822  30F1               	movlw	241
  4903  1823                     u12367:	
  4904  1823  0B89               	decfsz	9,f
  4905  1824  2823               	goto	u12367
  4906  1825  0BE5               	decfsz	??_main^(0+384),f
  4907  1826  2823               	goto	u12367
  4908  1827  3200               	nop2
  4909  1828  281C               	goto	l8720
  4910  1829                     __end_of_main:	
  4911                           
  4912                           	psect	text1
  4913  1A46                     __ptext1:	
  4914 ;; *************** function _statemachine *****************
  4915 ;; Defined at:
  4916 ;;		line 95 in file "main.c"
  4917 ;; Parameters:    Size  Location     Type
  4918 ;;		None
  4919 ;; Auto vars:     Size  Location     Type
  4920 ;;  success         1    0[BANK3 ] unsigned char 
  4921 ;; Return value:  Size  Location     Type
  4922 ;;                  1    wreg      void 
  4923 ;; Registers used:
  4924 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4925 ;; Tracked objects:
  4926 ;;		On entry : 0/0
  4927 ;;		On exit  : 0/0
  4928 ;;		Unchanged: 0/0
  4929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4931 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4932 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4933 ;;      Totals:         0       0       0       2       1       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4934 ;;Total ram usage:        3 bytes
  4935 ;; Hardware stack levels used:    1
  4936 ;; Hardware stack levels required when called:   11
  4937 ;; This function calls:
  4938 ;;		_AFE_UPDATE
  4939 ;;		_AFE_getOverCurrentDischargeCurrent
  4940 ;;		_AFE_getSetCurrentSenseRes
  4941 ;;		_AFE_getSetShortCircuitCurrent
  4942 ;;		_EUSART_Write_Text
  4943 ;;		_RGB_AWAIT_AFE_CONN
  4944 ;;		_RGB_color
  4945 ;;		_beginAFEcommunication
  4946 ;;		_init_AFE
  4947 ;;		_printotAFERegisters
  4948 ;;		_snprintf
  4949 ;; This function is called by:
  4950 ;;		_main
  4951 ;; This function uses a non-reentrant model
  4952 ;;
  4953                           
  4954                           
  4955                           ;psect for function _statemachine
  4956  1A46                     _statemachine:	
  4957                           
  4958                           ;main.c: 97:     switch (currState) {
  4959                           
  4960                           ;incstack = 0
  4961                           ; Regs used in _statemachine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4962  1A46  2B5C               	goto	l8702
  4963  1A47                     l8642:	
  4964                           
  4965                           ;main.c: 100:             if (tmr1_flag) {
  4966  1A47  0023               	movlb	3	; select bank3
  4967  1A48  0858               	movf	_tmr1_flag^(0+384),w	;volatile
  4968  1A49  1903               	btfsc	3,2
  4969  1A4A  0008               	return
  4970                           
  4971                           ;main.c: 101:                 tmr1_flag = 0;
  4972  1A4B  01D8               	clrf	_tmr1_flag^(0+384)	;volatile
  4973                           
  4974                           ;main.c: 102:                 RGB_AWAIT_AFE_CONN();
  4975  1A4C  31B2  22C7  319A   	fcall	_RGB_AWAIT_AFE_CONN
  4976                           
  4977                           ;main.c: 103:                 uint8_t success = beginAFEcommunication();
  4978  1A4F  31AD  25B6  319A   	fcall	_beginAFEcommunication
  4979  1A52  0020               	movlb	0	; select bank0
  4980  1A53  0820               	movf	?_beginAFEcommunication,w
  4981  1A54  0022               	movlb	2	; select bank2
  4982  1A55  00EE               	movwf	??_statemachine^(0+256)
  4983  1A56  086E               	movf	??_statemachine^(0+256),w
  4984  1A57  0023               	movlb	3	; select bank3
  4985  1A58  00E4               	movwf	statemachine@success^(0+384)
  4986                           
  4987                           ;main.c: 106:                 EUSART_Write_Text("Attempting to communicate with AFE...\n
      +                          \r");
  4988  1A59  3076               	movlw	low (STR_1| (0+32768))
  4989  1A5A  00F2               	movwf	EUSART_Write_Text@text
  4990  1A5B  30B9               	movlw	high (STR_1| (0+32768))
  4991  1A5C  00F3               	movwf	EUSART_Write_Text@text+1
  4992  1A5D  31B1  21D9  319A   	fcall	_EUSART_Write_Text
  4993                           
  4994                           ;main.c: 108:                 if (success) {
  4995  1A60  0023               	movlb	3	; select bank3
  4996  1A61  0864               	movf	statemachine@success^(0+384),w
  4997  1A62  1903               	btfsc	3,2
  4998  1A63  0008               	return
  4999                           
  5000                           ;main.c: 109:                     T1CONbits.TMR1ON = 0;
  5001  1A64  0020               	movlb	0	; select bank0
  5002  1A65  1018               	bcf	24,0	;volatile
  5003                           
  5004                           ;main.c: 110:                     PIE1bits.TMR1IE = 0;
  5005  1A66  0021               	movlb	1	; select bank1
  5006  1A67  1011               	bcf	17,0	;volatile
  5007                           
  5008                           ;main.c: 111:                     RGB_color(0);
  5009  1A68  3000               	movlw	0
  5010  1A69  00F1               	movwf	RGB_color@color
  5011  1A6A  00F2               	movwf	RGB_color@color+1
  5012  1A6B  31B2  22A6  319A   	fcall	_RGB_color
  5013                           
  5014                           ;main.c: 112:                     tmr1_flag = 0;
  5015  1A6E  0023               	movlb	3	; select bank3
  5016  1A6F  01D8               	clrf	_tmr1_flag^(0+384)	;volatile
  5017                           
  5018                           ;main.c: 115:                     _delay((unsigned long)((5)*(16000000/4000.0)));
  5019  1A70  301A               	movlw	26
  5020  1A71  0022               	movlb	2	; select bank2
  5021  1A72  00EE               	movwf	??_statemachine^(0+256)
  5022  1A73  30F8               	movlw	248
  5023  1A74                     u12377:	
  5024  1A74  0B89               	decfsz	9,f
  5025  1A75  2A74               	goto	u12377
  5026  1A76  0BEE               	decfsz	??_statemachine^(0+256),f
  5027  1A77  2A74               	goto	u12377
  5028  1A78  0000               	nop
  5029                           
  5030                           ;main.c: 116:                     EUSART_Write_Text("Communication with BQ76920 AFE esta
      +                          blished!\n\r");
  5031  1A79  3070               	movlw	low (STR_2| (0+32768))
  5032  1A7A  00F2               	movwf	EUSART_Write_Text@text
  5033  1A7B  30B8               	movlw	high (STR_2| (0+32768))
  5034  1A7C  00F3               	movwf	EUSART_Write_Text@text+1
  5035  1A7D  31B1  21D9  319A   	fcall	_EUSART_Write_Text
  5036                           
  5037                           ;main.c: 117:                     snprintf(messageBuffer, 127, "Obtained adcOffset = %i 
      +                          and adcGain = %i\n\r", adcOffset, adcGain);
  5038  1A80  3071               	movlw	113
  5039  1A81  0022               	movlb	2	; select bank2
  5040  1A82  00DF               	movwf	snprintf@s^(0+256)
  5041  1A83  3027               	movlw	39
  5042  1A84  00E0               	movwf	(snprintf@s^(0+256)+1)
  5043  1A85  307F               	movlw	127
  5044  1A86  00E1               	movwf	snprintf@n^(0+256)
  5045  1A87  3000               	movlw	0
  5046  1A88  00E2               	movwf	(snprintf@n^(0+256)+1)
  5047  1A89  30F7               	movlw	low (STR_3| (0+32768))
  5048  1A8A  00E3               	movwf	snprintf@fmt^(0+256)
  5049  1A8B  30B8               	movlw	high (STR_3| (0+32768))
  5050  1A8C  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5051  1A8D  0023               	movlb	3	; select bank3
  5052  1A8E  0851               	movf	(_adcOffset+1)^(0+384),w
  5053  1A8F  0022               	movlb	2	; select bank2
  5054  1A90  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5055  1A91  0023               	movlb	3	; select bank3
  5056  1A92  0850               	movf	_adcOffset^(0+384),w
  5057  1A93  0022               	movlb	2	; select bank2
  5058  1A94  00E5               	movwf	(?_snprintf^(0+256)+6)
  5059  1A95  0023               	movlb	3	; select bank3
  5060  1A96  0853               	movf	(_adcGain+1)^(0+384),w
  5061  1A97  0022               	movlb	2	; select bank2
  5062  1A98  00E8               	movwf	((?_snprintf+1)^(0+256)+8)
  5063  1A99  0023               	movlb	3	; select bank3
  5064  1A9A  0852               	movf	_adcGain^(0+384),w
  5065  1A9B  0022               	movlb	2	; select bank2
  5066  1A9C  00E7               	movwf	(?_snprintf^(0+256)+8)
  5067  1A9D  31B1  21C1  319A   	fcall	_snprintf
  5068                           
  5069                           ;main.c: 118:                     EUSART_Write_Text(messageBuffer);
  5070  1AA0  3071               	movlw	113
  5071  1AA1  00F2               	movwf	EUSART_Write_Text@text
  5072  1AA2  3027               	movlw	39
  5073  1AA3  00F3               	movwf	EUSART_Write_Text@text+1
  5074  1AA4  31B1  21D9  319A   	fcall	_EUSART_Write_Text
  5075                           
  5076                           ;main.c: 119:                     EUSART_Write_Text("Attempt to set initial system param
      +                          eters to AFE...\n\r");
  5077  1AA7  303B               	movlw	low (STR_4| (0+32768))
  5078  1AA8  00F2               	movwf	EUSART_Write_Text@text
  5079  1AA9  30B8               	movlw	high (STR_4| (0+32768))
  5080  1AAA  00F3               	movwf	EUSART_Write_Text@text+1
  5081  1AAB  31B1  21D9         	fcall	_EUSART_Write_Text
  5082                           
  5083                           ;main.c: 121:                     currState = 1;
  5084  1AAD  0023               	movlb	3	; select bank3
  5085  1AAE  01D9               	clrf	_currState^(0+384)
  5086  1AAF  0AD9               	incf	_currState^(0+384),f
  5087  1AB0  0008               	return
  5088  1AB1                     l8672:	
  5089                           
  5090                           ;main.c: 130:             init_AFE();
  5091  1AB1  31B6  2663  319A   	fcall	_init_AFE
  5092                           
  5093                           ;main.c: 133:             _delay((unsigned long)((5)*(16000000/4000.0)));
  5094  1AB4  301A               	movlw	26
  5095  1AB5  0022               	movlb	2	; select bank2
  5096  1AB6  00EE               	movwf	??_statemachine^(0+256)
  5097  1AB7  30F8               	movlw	248
  5098  1AB8                     u12387:	
  5099  1AB8  0B89               	decfsz	9,f
  5100  1AB9  2AB8               	goto	u12387
  5101  1ABA  0BEE               	decfsz	??_statemachine^(0+256),f
  5102  1ABB  2AB8               	goto	u12387
  5103  1ABC  0000               	nop
  5104                           
  5105                           ;main.c: 134:             EUSART_Write_Text("\n\r");
  5106  1ABD  3022               	movlw	low ((STR_14+18)| (0+32768))
  5107  1ABE  00F2               	movwf	EUSART_Write_Text@text
  5108  1ABF  30BA               	movlw	high ((STR_14+18)| (0+32768))
  5109  1AC0  00F3               	movwf	EUSART_Write_Text@text+1
  5110  1AC1  31B1  21D9  319A   	fcall	_EUSART_Write_Text
  5111                           
  5112                           ;main.c: 135:             snprintf(messageBuffer, 127, "Current sense resistor value: %.
      +                          4f ohms\n\r", AFE_getSetCurrentSenseRes());
  5113  1AC4  3071               	movlw	113
  5114  1AC5  0022               	movlb	2	; select bank2
  5115  1AC6  00DF               	movwf	snprintf@s^(0+256)
  5116  1AC7  3027               	movlw	39
  5117  1AC8  00E0               	movwf	(snprintf@s^(0+256)+1)
  5118  1AC9  307F               	movlw	127
  5119  1ACA  00E1               	movwf	snprintf@n^(0+256)
  5120  1ACB  3000               	movlw	0
  5121  1ACC  00E2               	movwf	(snprintf@n^(0+256)+1)
  5122  1ACD  304C               	movlw	low (STR_6| (0+32768))
  5123  1ACE  00E3               	movwf	snprintf@fmt^(0+256)
  5124  1ACF  30B9               	movlw	high (STR_6| (0+32768))
  5125  1AD0  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5126  1AD1  31B1  2113  319A   	fcall	_AFE_getSetCurrentSenseRes
  5127  1AD4  0874               	movf	?_AFE_getSetCurrentSenseRes+3,w
  5128  1AD5  0022               	movlb	2	; select bank2
  5129  1AD6  00E8               	movwf	((?_snprintf+3)^(0+256)+6)
  5130  1AD7  0873               	movf	?_AFE_getSetCurrentSenseRes+2,w
  5131  1AD8  00E7               	movwf	((?_snprintf+2)^(0+256)+6)
  5132  1AD9  0872               	movf	?_AFE_getSetCurrentSenseRes+1,w
  5133  1ADA  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5134  1ADB  0871               	movf	?_AFE_getSetCurrentSenseRes,w
  5135  1ADC  00E5               	movwf	(?_snprintf^(0+256)+6)
  5136  1ADD  31B1  21C1  319A   	fcall	_snprintf
  5137                           
  5138                           ;main.c: 136:             EUSART_Write_Text(messageBuffer);
  5139  1AE0  3071               	movlw	113
  5140  1AE1  00F2               	movwf	EUSART_Write_Text@text
  5141  1AE2  3027               	movlw	39
  5142  1AE3  00F3               	movwf	EUSART_Write_Text@text+1
  5143  1AE4  31B1  21D9  319A   	fcall	_EUSART_Write_Text
  5144                           
  5145                           ;main.c: 137:             snprintf(messageBuffer, 127, "Set short circuit current for AF
      +                          E: %lu mA\n\r", AFE_getSetShortCircuitCurrent());
  5146  1AE7  3071               	movlw	113
  5147  1AE8  0022               	movlb	2	; select bank2
  5148  1AE9  00DF               	movwf	snprintf@s^(0+256)
  5149  1AEA  3027               	movlw	39
  5150  1AEB  00E0               	movwf	(snprintf@s^(0+256)+1)
  5151  1AEC  307F               	movlw	127
  5152  1AED  00E1               	movwf	snprintf@n^(0+256)
  5153  1AEE  3000               	movlw	0
  5154  1AEF  00E2               	movwf	(snprintf@n^(0+256)+1)
  5155  1AF0  30CB               	movlw	low (STR_7| (0+32768))
  5156  1AF1  00E3               	movwf	snprintf@fmt^(0+256)
  5157  1AF2  30B8               	movlw	high (STR_7| (0+32768))
  5158  1AF3  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5159  1AF4  31B5  251D  319A   	fcall	_AFE_getSetShortCircuitCurrent
  5160  1AF7  0020               	movlb	0	; select bank0
  5161  1AF8  0866               	movf	?_AFE_getSetShortCircuitCurrent+3,w
  5162  1AF9  0022               	movlb	2	; select bank2
  5163  1AFA  00E8               	movwf	((?_snprintf+3)^(0+256)+6)
  5164  1AFB  0020               	movlb	0	; select bank0
  5165  1AFC  0865               	movf	?_AFE_getSetShortCircuitCurrent+2,w
  5166  1AFD  0022               	movlb	2	; select bank2
  5167  1AFE  00E7               	movwf	((?_snprintf+2)^(0+256)+6)
  5168  1AFF  0020               	movlb	0	; select bank0
  5169  1B00  0864               	movf	?_AFE_getSetShortCircuitCurrent+1,w
  5170  1B01  0022               	movlb	2	; select bank2
  5171  1B02  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5172  1B03  0020               	movlb	0	; select bank0
  5173  1B04  0863               	movf	?_AFE_getSetShortCircuitCurrent,w
  5174  1B05  0022               	movlb	2	; select bank2
  5175  1B06  00E5               	movwf	(?_snprintf^(0+256)+6)
  5176  1B07  31B1  21C1  319A   	fcall	_snprintf
  5177                           
  5178                           ;main.c: 138:             EUSART_Write_Text(messageBuffer);
  5179  1B0A  3071               	movlw	113
  5180  1B0B  00F2               	movwf	EUSART_Write_Text@text
  5181  1B0C  3027               	movlw	39
  5182  1B0D  00F3               	movwf	EUSART_Write_Text@text+1
  5183  1B0E  31B1  21D9  319A   	fcall	_EUSART_Write_Text
  5184                           
  5185                           ;main.c: 139:             snprintf(messageBuffer, 127, "Set Over-current discharge prote
      +                          ction  for AFE: %lu mA\n\r", AFE_getOverCurrentDischargeCurrent());
  5186  1B11  3071               	movlw	113
  5187  1B12  0022               	movlb	2	; select bank2
  5188  1B13  00DF               	movwf	snprintf@s^(0+256)
  5189  1B14  3027               	movlw	39
  5190  1B15  00E0               	movwf	(snprintf@s^(0+256)+1)
  5191  1B16  307F               	movlw	127
  5192  1B17  00E1               	movwf	snprintf@n^(0+256)
  5193  1B18  3000               	movlw	0
  5194  1B19  00E2               	movwf	(snprintf@n^(0+256)+1)
  5195  1B1A  3002               	movlw	low (STR_8| (0+32768))
  5196  1B1B  00E3               	movwf	snprintf@fmt^(0+256)
  5197  1B1C  30B8               	movlw	high (STR_8| (0+32768))
  5198  1B1D  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5199  1B1E  31B4  24CD  319A   	fcall	_AFE_getOverCurrentDischargeCurrent
  5200  1B21  0020               	movlb	0	; select bank0
  5201  1B22  0866               	movf	?_AFE_getOverCurrentDischargeCurrent+3,w
  5202  1B23  0022               	movlb	2	; select bank2
  5203  1B24  00E8               	movwf	((?_snprintf+3)^(0+256)+6)
  5204  1B25  0020               	movlb	0	; select bank0
  5205  1B26  0865               	movf	?_AFE_getOverCurrentDischargeCurrent+2,w
  5206  1B27  0022               	movlb	2	; select bank2
  5207  1B28  00E7               	movwf	((?_snprintf+2)^(0+256)+6)
  5208  1B29  0020               	movlb	0	; select bank0
  5209  1B2A  0864               	movf	?_AFE_getOverCurrentDischargeCurrent+1,w
  5210  1B2B  0022               	movlb	2	; select bank2
  5211  1B2C  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5212  1B2D  0020               	movlb	0	; select bank0
  5213  1B2E  0863               	movf	?_AFE_getOverCurrentDischargeCurrent,w
  5214  1B2F  0022               	movlb	2	; select bank2
  5215  1B30  00E5               	movwf	(?_snprintf^(0+256)+6)
  5216  1B31  31B1  21C1  319A   	fcall	_snprintf
  5217                           
  5218                           ;main.c: 140:             EUSART_Write_Text(messageBuffer);
  5219  1B34  3071               	movlw	113
  5220  1B35  00F2               	movwf	EUSART_Write_Text@text
  5221  1B36  3027               	movlw	39
  5222  1B37  00F3               	movwf	EUSART_Write_Text@text+1
  5223  1B38  31B1  21D9  319A   	fcall	_EUSART_Write_Text
  5224                           
  5225                           ;main.c: 141:             printotAFERegisters();
  5226  1B3B  3191  21CC  319A   	fcall	_printotAFERegisters
  5227                           
  5228                           ;main.c: 142:             EUSART_Write_Text("Initial parameters for BQ76920 AFE set!\n\r
      +                          ");
  5229  1B3E  3022               	movlw	low (STR_9| (0+32768))
  5230  1B3F  00F2               	movwf	EUSART_Write_Text@text
  5231  1B40  30B9               	movlw	high (STR_9| (0+32768))
  5232  1B41  00F3               	movwf	EUSART_Write_Text@text+1
  5233  1B42  31B1  21D9  319A   	fcall	_EUSART_Write_Text
  5234                           
  5235                           ;main.c: 143:             EUSART_Write_Text("Now reading AFE data at regular intervals.\
      +                          n\r");
  5236  1B45  309E               	movlw	low (STR_10| (0+32768))
  5237  1B46  00F2               	movwf	EUSART_Write_Text@text
  5238  1B47  30B8               	movlw	high (STR_10| (0+32768))
  5239  1B48  00F3               	movwf	EUSART_Write_Text@text+1
  5240  1B49  31B1  21D9  319A   	fcall	_EUSART_Write_Text
  5241                           
  5242                           ;main.c: 146:             RGB_color(1);
  5243  1B4C  3001               	movlw	1
  5244  1B4D  00F1               	movwf	RGB_color@color
  5245  1B4E  3000               	movlw	0
  5246  1B4F  00F2               	movwf	RGB_color@color+1
  5247  1B50  31B2  22A6         	fcall	_RGB_color
  5248                           
  5249                           ;main.c: 147:             currState = 2;
  5250  1B52  3002               	movlw	2
  5251  1B53  0022               	movlb	2	; select bank2
  5252  1B54  00EE               	movwf	??_statemachine^(0+256)
  5253  1B55  086E               	movf	??_statemachine^(0+256),w
  5254  1B56  0023               	movlb	3	; select bank3
  5255  1B57  00D9               	movwf	_currState^(0+384)
  5256                           
  5257                           ;main.c: 148:             break;
  5258  1B58  0008               	return
  5259  1B59                     l8698:	
  5260                           
  5261                           ;main.c: 152:             AFE_UPDATE();
  5262  1B59  3180  2003         	fcall	_AFE_UPDATE
  5263                           
  5264                           ;main.c: 155:             break;
  5265  1B5B  0008               	return
  5266  1B5C                     l8702:	
  5267  1B5C  0023               	movlb	3	; select bank3
  5268  1B5D  0859               	movf	_currState^(0+384),w
  5269  1B5E  0022               	movlb	2	; select bank2
  5270  1B5F  00EE               	movwf	??_statemachine^(0+256)
  5271  1B60  01EF               	clrf	(??_statemachine^(0+256)+1)
  5272                           
  5273                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5274                           ; Switch size 1, requested type "simple"
  5275                           ; Number of cases is 1, Range of values is 0 to 0
  5276                           ; switch strategies available:
  5277                           ; Name         Instructions Cycles
  5278                           ; simple_byte            4     3 (average)
  5279                           ; direct_byte            8     6 (fixed)
  5280                           ; jumptable            260     6 (fixed)
  5281                           ;	Chosen strategy is simple_byte
  5282  1B61  086F               	movf	(??_statemachine+1)^(0+256),w
  5283  1B62  3A00               	xorlw	0	; case 0
  5284  1B63  1903               	skipnz
  5285  1B64  2B66               	goto	l8824
  5286  1B65  2B71               	goto	l153
  5287  1B66                     l8824:	
  5288                           
  5289                           ; Switch size 1, requested type "simple"
  5290                           ; Number of cases is 3, Range of values is 0 to 2
  5291                           ; switch strategies available:
  5292                           ; Name         Instructions Cycles
  5293                           ; simple_byte           10     6 (average)
  5294                           ; direct_byte           12     6 (fixed)
  5295                           ; jumptable            260     6 (fixed)
  5296                           ;	Chosen strategy is simple_byte
  5297  1B66  086E               	movf	??_statemachine^(0+256),w
  5298  1B67  3A00               	xorlw	0	; case 0
  5299  1B68  1903               	skipnz
  5300  1B69  2A47               	goto	l8642
  5301  1B6A  3A01               	xorlw	1	; case 1
  5302  1B6B  1903               	skipnz
  5303  1B6C  2AB1               	goto	l8672
  5304  1B6D  3A03               	xorlw	3	; case 2
  5305  1B6E  1903               	skipnz
  5306  1B6F  2B59               	goto	l8698
  5307  1B70  2B71               	goto	l153
  5308  1B71                     l153:	
  5309  1B71  0008               	return
  5310  1B72                     __end_of_statemachine:	
  5311                           
  5312                           	psect	text2
  5313  11CC                     __ptext2:	
  5314 ;; *************** function _printotAFERegisters *****************
  5315 ;; Defined at:
  5316 ;;		line 184 in file "BQ76920.c"
  5317 ;; Parameters:    Size  Location     Type
  5318 ;;		None
  5319 ;; Auto vars:     Size  Location     Type
  5320 ;;		None
  5321 ;; Return value:  Size  Location     Type
  5322 ;;                  1    wreg      void 
  5323 ;; Registers used:
  5324 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5325 ;; Tracked objects:
  5326 ;;		On entry : 0/0
  5327 ;;		On exit  : 0/0
  5328 ;;		Unchanged: 0/0
  5329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5332 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5333 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5334 ;;Total ram usage:        1 bytes
  5335 ;; Hardware stack levels used:    1
  5336 ;; Hardware stack levels required when called:   10
  5337 ;; This function calls:
  5338 ;;		_EUSART_Write_Text
  5339 ;;		_readRegister
  5340 ;;		_snprintf
  5341 ;; This function is called by:
  5342 ;;		_statemachine
  5343 ;; This function uses a non-reentrant model
  5344 ;;
  5345                           
  5346                           
  5347                           ;psect for function _printotAFERegisters
  5348  11CC                     _printotAFERegisters:	
  5349                           
  5350                           ;BQ76920.c: 186:     _delay((unsigned long)((5)*(16000000/4000.0)));
  5351                           
  5352                           ;incstack = 0
  5353                           ; Regs used in _printotAFERegisters: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5354  11CC  301A               	movlw	26
  5355  11CD  0022               	movlb	2	; select bank2
  5356  11CE  00ED               	movwf	??_printotAFERegisters^(0+256)
  5357  11CF  30F8               	movlw	248
  5358  11D0                     u12397:	
  5359  11D0  0B89               	decfsz	9,f
  5360  11D1  29D0               	goto	u12397
  5361  11D2  0BED               	decfsz	??_printotAFERegisters^(0+256),f
  5362  11D3  29D0               	goto	u12397
  5363  11D4  0000               	nop
  5364                           
  5365                           ;BQ76920.c: 188:     EUSART_Write_Text("Printing out AFE register values...\n\r");
  5366  11D5  309E               	movlw	low (STR_11| (0+32768))
  5367  11D6  00F2               	movwf	EUSART_Write_Text@text
  5368  11D7  30B9               	movlw	high (STR_11| (0+32768))
  5369  11D8  00F3               	movwf	EUSART_Write_Text@text+1
  5370  11D9  31B1  21D9  3191   	fcall	_EUSART_Write_Text
  5371                           
  5372                           ;BQ76920.c: 189:     EUSART_Write_Text("\n\r");
  5373  11DC  3022               	movlw	low ((STR_14+18)| (0+32768))
  5374  11DD  00F2               	movwf	EUSART_Write_Text@text
  5375  11DE  30BA               	movlw	high ((STR_14+18)| (0+32768))
  5376  11DF  00F3               	movwf	EUSART_Write_Text@text+1
  5377  11E0  31B1  21D9  3191   	fcall	_EUSART_Write_Text
  5378                           
  5379                           ;BQ76920.c: 190:     snprintf(messageBuffer, 127, "0x00 SYS_STAT: %i \n\r", readRegister
      +                          (0x18, 0x00));
  5380  11E3  3071               	movlw	113
  5381  11E4  0022               	movlb	2	; select bank2
  5382  11E5  00DF               	movwf	snprintf@s^(0+256)
  5383  11E6  3027               	movlw	39
  5384  11E7  00E0               	movwf	(snprintf@s^(0+256)+1)
  5385  11E8  307F               	movlw	127
  5386  11E9  00E1               	movwf	snprintf@n^(0+256)
  5387  11EA  3000               	movlw	0
  5388  11EB  00E2               	movwf	(snprintf@n^(0+256)+1)
  5389  11EC  3064               	movlw	low (STR_13| (0+32768))
  5390  11ED  00E3               	movwf	snprintf@fmt^(0+256)
  5391  11EE  30BA               	movlw	high (STR_13| (0+32768))
  5392  11EF  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5393  11F0  3018               	movlw	24
  5394  11F1  00F5               	movwf	readRegister@slaveAddress
  5395  11F2  3000               	movlw	0
  5396  11F3  00F6               	movwf	readRegister@slaveAddress+1
  5397  11F4  3000               	movlw	0
  5398  11F5  00F7               	movwf	readRegister@regAddress
  5399  11F6  00F8               	movwf	readRegister@regAddress+1
  5400  11F7  31B3  23C5  3191   	fcall	_readRegister
  5401  11FA  0876               	movf	?_readRegister+1,w
  5402  11FB  0022               	movlb	2	; select bank2
  5403  11FC  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5404  11FD  0875               	movf	?_readRegister,w
  5405  11FE  00E5               	movwf	(?_snprintf^(0+256)+6)
  5406  11FF  31B1  21C1  3191   	fcall	_snprintf
  5407                           
  5408                           ;BQ76920.c: 191:     EUSART_Write_Text(messageBuffer);
  5409  1202  3071               	movlw	113
  5410  1203  00F2               	movwf	EUSART_Write_Text@text
  5411  1204  3027               	movlw	39
  5412  1205  00F3               	movwf	EUSART_Write_Text@text+1
  5413  1206  31B1  21D9  3191   	fcall	_EUSART_Write_Text
  5414                           
  5415                           ;BQ76920.c: 192:     snprintf(messageBuffer, 127, "0x01 CELLBAL1: %i \n\r", readRegister
      +                          (0x18, 0x01));
  5416  1209  3071               	movlw	113
  5417  120A  0022               	movlb	2	; select bank2
  5418  120B  00DF               	movwf	snprintf@s^(0+256)
  5419  120C  3027               	movlw	39
  5420  120D  00E0               	movwf	(snprintf@s^(0+256)+1)
  5421  120E  307F               	movlw	127
  5422  120F  00E1               	movwf	snprintf@n^(0+256)
  5423  1210  3000               	movlw	0
  5424  1211  00E2               	movwf	(snprintf@n^(0+256)+1)
  5425  1212  3010               	movlw	low (STR_14| (0+32768))
  5426  1213  00E3               	movwf	snprintf@fmt^(0+256)
  5427  1214  30BA               	movlw	high (STR_14| (0+32768))
  5428  1215  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5429  1216  3018               	movlw	24
  5430  1217  00F5               	movwf	readRegister@slaveAddress
  5431  1218  3000               	movlw	0
  5432  1219  00F6               	movwf	readRegister@slaveAddress+1
  5433  121A  3001               	movlw	1
  5434  121B  00F7               	movwf	readRegister@regAddress
  5435  121C  3000               	movlw	0
  5436  121D  00F8               	movwf	readRegister@regAddress+1
  5437  121E  31B3  23C5  3191   	fcall	_readRegister
  5438  1221  0876               	movf	?_readRegister+1,w
  5439  1222  0022               	movlb	2	; select bank2
  5440  1223  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5441  1224  0875               	movf	?_readRegister,w
  5442  1225  00E5               	movwf	(?_snprintf^(0+256)+6)
  5443  1226  31B1  21C1  3191   	fcall	_snprintf
  5444                           
  5445                           ;BQ76920.c: 193:     EUSART_Write_Text(messageBuffer);
  5446  1229  3071               	movlw	113
  5447  122A  00F2               	movwf	EUSART_Write_Text@text
  5448  122B  3027               	movlw	39
  5449  122C  00F3               	movwf	EUSART_Write_Text@text+1
  5450  122D  31B1  21D9  3191   	fcall	_EUSART_Write_Text
  5451                           
  5452                           ;BQ76920.c: 194:     snprintf(messageBuffer, 127, "0x04 SYS_CTRL1: %i \n\r", readRegiste
      +                          r(0x18, 0x04));
  5453  1230  3071               	movlw	113
  5454  1231  0022               	movlb	2	; select bank2
  5455  1232  00DF               	movwf	snprintf@s^(0+256)
  5456  1233  3027               	movlw	39
  5457  1234  00E0               	movwf	(snprintf@s^(0+256)+1)
  5458  1235  307F               	movlw	127
  5459  1236  00E1               	movwf	snprintf@n^(0+256)
  5460  1237  3000               	movlw	0
  5461  1238  00E2               	movwf	(snprintf@n^(0+256)+1)
  5462  1239  30E4               	movlw	low (STR_15| (0+32768))
  5463  123A  00E3               	movwf	snprintf@fmt^(0+256)
  5464  123B  30B9               	movlw	high (STR_15| (0+32768))
  5465  123C  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5466  123D  3018               	movlw	24
  5467  123E  00F5               	movwf	readRegister@slaveAddress
  5468  123F  3000               	movlw	0
  5469  1240  00F6               	movwf	readRegister@slaveAddress+1
  5470  1241  3004               	movlw	4
  5471  1242  00F7               	movwf	readRegister@regAddress
  5472  1243  3000               	movlw	0
  5473  1244  00F8               	movwf	readRegister@regAddress+1
  5474  1245  31B3  23C5  3191   	fcall	_readRegister
  5475  1248  0876               	movf	?_readRegister+1,w
  5476  1249  0022               	movlb	2	; select bank2
  5477  124A  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5478  124B  0875               	movf	?_readRegister,w
  5479  124C  00E5               	movwf	(?_snprintf^(0+256)+6)
  5480  124D  31B1  21C1  3191   	fcall	_snprintf
  5481                           
  5482                           ;BQ76920.c: 195:     EUSART_Write_Text(messageBuffer);
  5483  1250  3071               	movlw	113
  5484  1251  00F2               	movwf	EUSART_Write_Text@text
  5485  1252  3027               	movlw	39
  5486  1253  00F3               	movwf	EUSART_Write_Text@text+1
  5487  1254  31B1  21D9  3191   	fcall	_EUSART_Write_Text
  5488                           
  5489                           ;BQ76920.c: 196:     snprintf(messageBuffer, 127, "0x05 SYS_CTRL2: %i \n\r", readRegiste
      +                          r(0x18, 0x05));
  5490  1257  3071               	movlw	113
  5491  1258  0022               	movlb	2	; select bank2
  5492  1259  00DF               	movwf	snprintf@s^(0+256)
  5493  125A  3027               	movlw	39
  5494  125B  00E0               	movwf	(snprintf@s^(0+256)+1)
  5495  125C  307F               	movlw	127
  5496  125D  00E1               	movwf	snprintf@n^(0+256)
  5497  125E  3000               	movlw	0
  5498  125F  00E2               	movwf	(snprintf@n^(0+256)+1)
  5499  1260  30FA               	movlw	low (STR_16| (0+32768))
  5500  1261  00E3               	movwf	snprintf@fmt^(0+256)
  5501  1262  30B9               	movlw	high (STR_16| (0+32768))
  5502  1263  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5503  1264  3018               	movlw	24
  5504  1265  00F5               	movwf	readRegister@slaveAddress
  5505  1266  3000               	movlw	0
  5506  1267  00F6               	movwf	readRegister@slaveAddress+1
  5507  1268  3005               	movlw	5
  5508  1269  00F7               	movwf	readRegister@regAddress
  5509  126A  3000               	movlw	0
  5510  126B  00F8               	movwf	readRegister@regAddress+1
  5511  126C  31B3  23C5  3191   	fcall	_readRegister
  5512  126F  0876               	movf	?_readRegister+1,w
  5513  1270  0022               	movlb	2	; select bank2
  5514  1271  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5515  1272  0875               	movf	?_readRegister,w
  5516  1273  00E5               	movwf	(?_snprintf^(0+256)+6)
  5517  1274  31B1  21C1  3191   	fcall	_snprintf
  5518                           
  5519                           ;BQ76920.c: 197:     EUSART_Write_Text(messageBuffer);
  5520  1277  3071               	movlw	113
  5521  1278  00F2               	movwf	EUSART_Write_Text@text
  5522  1279  3027               	movlw	39
  5523  127A  00F3               	movwf	EUSART_Write_Text@text+1
  5524  127B  31B1  21D9  3191   	fcall	_EUSART_Write_Text
  5525                           
  5526                           ;BQ76920.c: 198:     snprintf(messageBuffer, 127, "0x06 PROTECT1: %i \n\r", readRegister
      +                          (0x18, 0x06));
  5527  127E  3071               	movlw	113
  5528  127F  0022               	movlb	2	; select bank2
  5529  1280  00DF               	movwf	snprintf@s^(0+256)
  5530  1281  3027               	movlw	39
  5531  1282  00E0               	movwf	(snprintf@s^(0+256)+1)
  5532  1283  307F               	movlw	127
  5533  1284  00E1               	movwf	snprintf@n^(0+256)
  5534  1285  3000               	movlw	0
  5535  1286  00E2               	movwf	(snprintf@n^(0+256)+1)
  5536  1287  3025               	movlw	low (STR_17| (0+32768))
  5537  1288  00E3               	movwf	snprintf@fmt^(0+256)
  5538  1289  30BA               	movlw	high (STR_17| (0+32768))
  5539  128A  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5540  128B  3018               	movlw	24
  5541  128C  00F5               	movwf	readRegister@slaveAddress
  5542  128D  3000               	movlw	0
  5543  128E  00F6               	movwf	readRegister@slaveAddress+1
  5544  128F  3006               	movlw	6
  5545  1290  00F7               	movwf	readRegister@regAddress
  5546  1291  3000               	movlw	0
  5547  1292  00F8               	movwf	readRegister@regAddress+1
  5548  1293  31B3  23C5  3191   	fcall	_readRegister
  5549  1296  0876               	movf	?_readRegister+1,w
  5550  1297  0022               	movlb	2	; select bank2
  5551  1298  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5552  1299  0875               	movf	?_readRegister,w
  5553  129A  00E5               	movwf	(?_snprintf^(0+256)+6)
  5554  129B  31B1  21C1  3191   	fcall	_snprintf
  5555                           
  5556                           ;BQ76920.c: 199:     EUSART_Write_Text(messageBuffer);
  5557  129E  3071               	movlw	113
  5558  129F  00F2               	movwf	EUSART_Write_Text@text
  5559  12A0  3027               	movlw	39
  5560  12A1  00F3               	movwf	EUSART_Write_Text@text+1
  5561  12A2  31B1  21D9  3191   	fcall	_EUSART_Write_Text
  5562                           
  5563                           ;BQ76920.c: 200:     snprintf(messageBuffer, 127, "0x07 PROTECT2: %i \n\r", readRegister
      +                          (0x18, 0x07));
  5564  12A5  3071               	movlw	113
  5565  12A6  0022               	movlb	2	; select bank2
  5566  12A7  00DF               	movwf	snprintf@s^(0+256)
  5567  12A8  3027               	movlw	39
  5568  12A9  00E0               	movwf	(snprintf@s^(0+256)+1)
  5569  12AA  307F               	movlw	127
  5570  12AB  00E1               	movwf	snprintf@n^(0+256)
  5571  12AC  3000               	movlw	0
  5572  12AD  00E2               	movwf	(snprintf@n^(0+256)+1)
  5573  12AE  303A               	movlw	low (STR_18| (0+32768))
  5574  12AF  00E3               	movwf	snprintf@fmt^(0+256)
  5575  12B0  30BA               	movlw	high (STR_18| (0+32768))
  5576  12B1  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5577  12B2  3018               	movlw	24
  5578  12B3  00F5               	movwf	readRegister@slaveAddress
  5579  12B4  3000               	movlw	0
  5580  12B5  00F6               	movwf	readRegister@slaveAddress+1
  5581  12B6  3007               	movlw	7
  5582  12B7  00F7               	movwf	readRegister@regAddress
  5583  12B8  3000               	movlw	0
  5584  12B9  00F8               	movwf	readRegister@regAddress+1
  5585  12BA  31B3  23C5  3191   	fcall	_readRegister
  5586  12BD  0876               	movf	?_readRegister+1,w
  5587  12BE  0022               	movlb	2	; select bank2
  5588  12BF  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5589  12C0  0875               	movf	?_readRegister,w
  5590  12C1  00E5               	movwf	(?_snprintf^(0+256)+6)
  5591  12C2  31B1  21C1  3191   	fcall	_snprintf
  5592                           
  5593                           ;BQ76920.c: 201:     EUSART_Write_Text(messageBuffer);
  5594  12C5  3071               	movlw	113
  5595  12C6  00F2               	movwf	EUSART_Write_Text@text
  5596  12C7  3027               	movlw	39
  5597  12C8  00F3               	movwf	EUSART_Write_Text@text+1
  5598  12C9  31B1  21D9  3191   	fcall	_EUSART_Write_Text
  5599                           
  5600                           ;BQ76920.c: 202:     snprintf(messageBuffer, 127, "0x08 PROTECT3: %i \n\r", readRegister
      +                          (0x18, 0x08));
  5601  12CC  3071               	movlw	113
  5602  12CD  0022               	movlb	2	; select bank2
  5603  12CE  00DF               	movwf	snprintf@s^(0+256)
  5604  12CF  3027               	movlw	39
  5605  12D0  00E0               	movwf	(snprintf@s^(0+256)+1)
  5606  12D1  307F               	movlw	127
  5607  12D2  00E1               	movwf	snprintf@n^(0+256)
  5608  12D3  3000               	movlw	0
  5609  12D4  00E2               	movwf	(snprintf@n^(0+256)+1)
  5610  12D5  304F               	movlw	low (STR_19| (0+32768))
  5611  12D6  00E3               	movwf	snprintf@fmt^(0+256)
  5612  12D7  30BA               	movlw	high (STR_19| (0+32768))
  5613  12D8  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5614  12D9  3018               	movlw	24
  5615  12DA  00F5               	movwf	readRegister@slaveAddress
  5616  12DB  3000               	movlw	0
  5617  12DC  00F6               	movwf	readRegister@slaveAddress+1
  5618  12DD  3008               	movlw	8
  5619  12DE  00F7               	movwf	readRegister@regAddress
  5620  12DF  3000               	movlw	0
  5621  12E0  00F8               	movwf	readRegister@regAddress+1
  5622  12E1  31B3  23C5  3191   	fcall	_readRegister
  5623  12E4  0876               	movf	?_readRegister+1,w
  5624  12E5  0022               	movlb	2	; select bank2
  5625  12E6  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5626  12E7  0875               	movf	?_readRegister,w
  5627  12E8  00E5               	movwf	(?_snprintf^(0+256)+6)
  5628  12E9  31B1  21C1  3191   	fcall	_snprintf
  5629                           
  5630                           ;BQ76920.c: 203:     EUSART_Write_Text(messageBuffer);
  5631  12EC  3071               	movlw	113
  5632  12ED  00F2               	movwf	EUSART_Write_Text@text
  5633  12EE  3027               	movlw	39
  5634  12EF  00F3               	movwf	EUSART_Write_Text@text+1
  5635  12F0  31B1  21D9  3191   	fcall	_EUSART_Write_Text
  5636                           
  5637                           ;BQ76920.c: 204:     snprintf(messageBuffer, 127, "0x09 OV_TRIP: %i \n\r", readRegister(
      +                          0x18, 0x09));
  5638  12F3  3071               	movlw	113
  5639  12F4  0022               	movlb	2	; select bank2
  5640  12F5  00DF               	movwf	snprintf@s^(0+256)
  5641  12F6  3027               	movlw	39
  5642  12F7  00E0               	movwf	(snprintf@s^(0+256)+1)
  5643  12F8  307F               	movlw	127
  5644  12F9  00E1               	movwf	snprintf@n^(0+256)
  5645  12FA  3000               	movlw	0
  5646  12FB  00E2               	movwf	(snprintf@n^(0+256)+1)
  5647  12FC  3079               	movlw	low (STR_20| (0+32768))
  5648  12FD  00E3               	movwf	snprintf@fmt^(0+256)
  5649  12FE  30BA               	movlw	high (STR_20| (0+32768))
  5650  12FF  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5651  1300  3018               	movlw	24
  5652  1301  00F5               	movwf	readRegister@slaveAddress
  5653  1302  3000               	movlw	0
  5654  1303  00F6               	movwf	readRegister@slaveAddress+1
  5655  1304  3009               	movlw	9
  5656  1305  00F7               	movwf	readRegister@regAddress
  5657  1306  3000               	movlw	0
  5658  1307  00F8               	movwf	readRegister@regAddress+1
  5659  1308  31B3  23C5  3191   	fcall	_readRegister
  5660  130B  0876               	movf	?_readRegister+1,w
  5661  130C  0022               	movlb	2	; select bank2
  5662  130D  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5663  130E  0875               	movf	?_readRegister,w
  5664  130F  00E5               	movwf	(?_snprintf^(0+256)+6)
  5665  1310  31B1  21C1  3191   	fcall	_snprintf
  5666                           
  5667                           ;BQ76920.c: 205:     EUSART_Write_Text(messageBuffer);
  5668  1313  3071               	movlw	113
  5669  1314  00F2               	movwf	EUSART_Write_Text@text
  5670  1315  3027               	movlw	39
  5671  1316  00F3               	movwf	EUSART_Write_Text@text+1
  5672  1317  31B1  21D9  3191   	fcall	_EUSART_Write_Text
  5673                           
  5674                           ;BQ76920.c: 206:     snprintf(messageBuffer, 127, "0x0A UV_TRIP: %i \n\r", readRegister(
      +                          0x18, 0x0A));
  5675  131A  3071               	movlw	113
  5676  131B  0022               	movlb	2	; select bank2
  5677  131C  00DF               	movwf	snprintf@s^(0+256)
  5678  131D  3027               	movlw	39
  5679  131E  00E0               	movwf	(snprintf@s^(0+256)+1)
  5680  131F  307F               	movlw	127
  5681  1320  00E1               	movwf	snprintf@n^(0+256)
  5682  1321  3000               	movlw	0
  5683  1322  00E2               	movwf	(snprintf@n^(0+256)+1)
  5684  1323  308D               	movlw	low (STR_21| (0+32768))
  5685  1324  00E3               	movwf	snprintf@fmt^(0+256)
  5686  1325  30BA               	movlw	high (STR_21| (0+32768))
  5687  1326  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5688  1327  3018               	movlw	24
  5689  1328  00F5               	movwf	readRegister@slaveAddress
  5690  1329  3000               	movlw	0
  5691  132A  00F6               	movwf	readRegister@slaveAddress+1
  5692  132B  300A               	movlw	10
  5693  132C  00F7               	movwf	readRegister@regAddress
  5694  132D  3000               	movlw	0
  5695  132E  00F8               	movwf	readRegister@regAddress+1
  5696  132F  31B3  23C5  3191   	fcall	_readRegister
  5697  1332  0876               	movf	?_readRegister+1,w
  5698  1333  0022               	movlb	2	; select bank2
  5699  1334  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5700  1335  0875               	movf	?_readRegister,w
  5701  1336  00E5               	movwf	(?_snprintf^(0+256)+6)
  5702  1337  31B1  21C1  3191   	fcall	_snprintf
  5703                           
  5704                           ;BQ76920.c: 207:     EUSART_Write_Text(messageBuffer);
  5705  133A  3071               	movlw	113
  5706  133B  00F2               	movwf	EUSART_Write_Text@text
  5707  133C  3027               	movlw	39
  5708  133D  00F3               	movwf	EUSART_Write_Text@text+1
  5709  133E  31B1  21D9  3191   	fcall	_EUSART_Write_Text
  5710                           
  5711                           ;BQ76920.c: 208:     snprintf(messageBuffer, 127, "0x0B CC_CFG: %i \n\r", readRegister(0
      +                          x18, 0x0B));
  5712  1341  3071               	movlw	113
  5713  1342  0022               	movlb	2	; select bank2
  5714  1343  00DF               	movwf	snprintf@s^(0+256)
  5715  1344  3027               	movlw	39
  5716  1345  00E0               	movwf	(snprintf@s^(0+256)+1)
  5717  1346  307F               	movlw	127
  5718  1347  00E1               	movwf	snprintf@n^(0+256)
  5719  1348  3000               	movlw	0
  5720  1349  00E2               	movwf	(snprintf@n^(0+256)+1)
  5721  134A  30A1               	movlw	low (STR_22| (0+32768))
  5722  134B  00E3               	movwf	snprintf@fmt^(0+256)
  5723  134C  30BA               	movlw	high (STR_22| (0+32768))
  5724  134D  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5725  134E  3018               	movlw	24
  5726  134F  00F5               	movwf	readRegister@slaveAddress
  5727  1350  3000               	movlw	0
  5728  1351  00F6               	movwf	readRegister@slaveAddress+1
  5729  1352  300B               	movlw	11
  5730  1353  00F7               	movwf	readRegister@regAddress
  5731  1354  3000               	movlw	0
  5732  1355  00F8               	movwf	readRegister@regAddress+1
  5733  1356  31B3  23C5  3191   	fcall	_readRegister
  5734  1359  0876               	movf	?_readRegister+1,w
  5735  135A  0022               	movlb	2	; select bank2
  5736  135B  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5737  135C  0875               	movf	?_readRegister,w
  5738  135D  00E5               	movwf	(?_snprintf^(0+256)+6)
  5739  135E  31B1  21C1  3191   	fcall	_snprintf
  5740                           
  5741                           ;BQ76920.c: 209:     EUSART_Write_Text(messageBuffer);
  5742  1361  3071               	movlw	113
  5743  1362  00F2               	movwf	EUSART_Write_Text@text
  5744  1363  3027               	movlw	39
  5745  1364  00F3               	movwf	EUSART_Write_Text@text+1
  5746  1365  31B1  21D9  3191   	fcall	_EUSART_Write_Text
  5747                           
  5748                           ;BQ76920.c: 210:     snprintf(messageBuffer, 127, "0x32 CC_HI: %i \n\r", readRegister(0x
      +                          18, 0x32));
  5749  1368  3071               	movlw	113
  5750  1369  0022               	movlb	2	; select bank2
  5751  136A  00DF               	movwf	snprintf@s^(0+256)
  5752  136B  3027               	movlw	39
  5753  136C  00E0               	movwf	(snprintf@s^(0+256)+1)
  5754  136D  307F               	movlw	127
  5755  136E  00E1               	movwf	snprintf@n^(0+256)
  5756  136F  3000               	movlw	0
  5757  1370  00E2               	movwf	(snprintf@n^(0+256)+1)
  5758  1371  30B4               	movlw	low (STR_23| (0+32768))
  5759  1372  00E3               	movwf	snprintf@fmt^(0+256)
  5760  1373  30BA               	movlw	high (STR_23| (0+32768))
  5761  1374  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5762  1375  3018               	movlw	24
  5763  1376  00F5               	movwf	readRegister@slaveAddress
  5764  1377  3000               	movlw	0
  5765  1378  00F6               	movwf	readRegister@slaveAddress+1
  5766  1379  3032               	movlw	50
  5767  137A  00F7               	movwf	readRegister@regAddress
  5768  137B  3000               	movlw	0
  5769  137C  00F8               	movwf	readRegister@regAddress+1
  5770  137D  31B3  23C5  3191   	fcall	_readRegister
  5771  1380  0876               	movf	?_readRegister+1,w
  5772  1381  0022               	movlb	2	; select bank2
  5773  1382  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5774  1383  0875               	movf	?_readRegister,w
  5775  1384  00E5               	movwf	(?_snprintf^(0+256)+6)
  5776  1385  31B1  21C1  3191   	fcall	_snprintf
  5777                           
  5778                           ;BQ76920.c: 211:     EUSART_Write_Text(messageBuffer);
  5779  1388  3071               	movlw	113
  5780  1389  00F2               	movwf	EUSART_Write_Text@text
  5781  138A  3027               	movlw	39
  5782  138B  00F3               	movwf	EUSART_Write_Text@text+1
  5783  138C  31B1  21D9  3191   	fcall	_EUSART_Write_Text
  5784                           
  5785                           ;BQ76920.c: 212:     snprintf(messageBuffer, 127, "0x33 CC_LO: %i \n\r", readRegister(0x
      +                          18, 0x33));
  5786  138F  3071               	movlw	113
  5787  1390  0022               	movlb	2	; select bank2
  5788  1391  00DF               	movwf	snprintf@s^(0+256)
  5789  1392  3027               	movlw	39
  5790  1393  00E0               	movwf	(snprintf@s^(0+256)+1)
  5791  1394  307F               	movlw	127
  5792  1395  00E1               	movwf	snprintf@n^(0+256)
  5793  1396  3000               	movlw	0
  5794  1397  00E2               	movwf	(snprintf@n^(0+256)+1)
  5795  1398  30C6               	movlw	low (STR_24| (0+32768))
  5796  1399  00E3               	movwf	snprintf@fmt^(0+256)
  5797  139A  30BA               	movlw	high (STR_24| (0+32768))
  5798  139B  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5799  139C  3018               	movlw	24
  5800  139D  00F5               	movwf	readRegister@slaveAddress
  5801  139E  3000               	movlw	0
  5802  139F  00F6               	movwf	readRegister@slaveAddress+1
  5803  13A0  3033               	movlw	51
  5804  13A1  00F7               	movwf	readRegister@regAddress
  5805  13A2  3000               	movlw	0
  5806  13A3  00F8               	movwf	readRegister@regAddress+1
  5807  13A4  31B3  23C5  3191   	fcall	_readRegister
  5808  13A7  0876               	movf	?_readRegister+1,w
  5809  13A8  0022               	movlb	2	; select bank2
  5810  13A9  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5811  13AA  0875               	movf	?_readRegister,w
  5812  13AB  00E5               	movwf	(?_snprintf^(0+256)+6)
  5813  13AC  31B1  21C1  3191   	fcall	_snprintf
  5814                           
  5815                           ;BQ76920.c: 213:     EUSART_Write_Text(messageBuffer);
  5816  13AF  3071               	movlw	113
  5817  13B0  00F2               	movwf	EUSART_Write_Text@text
  5818  13B1  3027               	movlw	39
  5819  13B2  00F3               	movwf	EUSART_Write_Text@text+1
  5820  13B3  31B1  21D9  3191   	fcall	_EUSART_Write_Text
  5821                           
  5822                           ;BQ76920.c: 214:     EUSART_Write_Text("\n\r");
  5823  13B6  3022               	movlw	low ((STR_14+18)| (0+32768))
  5824  13B7  00F2               	movwf	EUSART_Write_Text@text
  5825  13B8  30BA               	movlw	high ((STR_14+18)| (0+32768))
  5826  13B9  00F3               	movwf	EUSART_Write_Text@text+1
  5827  13BA  31B1  21D9         	fcall	_EUSART_Write_Text
  5828  13BC  0008               	return
  5829  13BD                     __end_of_printotAFERegisters:	
  5830                           
  5831                           	psect	text3
  5832  31C1                     __ptext3:	
  5833 ;; *************** function _snprintf *****************
  5834 ;; Defined at:
  5835 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\snprintf.c"
  5836 ;; Parameters:    Size  Location     Type
  5837 ;;  s               2   63[BANK2 ] PTR unsigned char 
  5838 ;;		 -> messageBuffer(127), 
  5839 ;;  n               2   65[BANK2 ] unsigned int 
  5840 ;;  fmt             2   67[BANK2 ] PTR const unsigned char 
  5841 ;;		 -> STR_24(18), STR_23(18), STR_22(19), STR_21(20), 
  5842 ;;		 -> STR_20(20), STR_19(21), STR_18(21), STR_17(21), 
  5843 ;;		 -> STR_16(22), STR_15(22), STR_14(21), STR_13(21), 
  5844 ;;		 -> STR_8(57), STR_7(44), STR_6(42), STR_3(43), 
  5845 ;; Auto vars:     Size  Location     Type
  5846 ;;  ret             2    0        int 
  5847 ;;  ap              1   76[BANK2 ] PTR void [1]
  5848 ;;		 -> ?_snprintf(2), 
  5849 ;; Return value:  Size  Location     Type
  5850 ;;                  2   63[BANK2 ] int 
  5851 ;; Registers used:
  5852 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5853 ;; Tracked objects:
  5854 ;;		On entry : 0/0
  5855 ;;		On exit  : 0/0
  5856 ;;		Unchanged: 0/0
  5857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5858 ;;      Params:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5859 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5860 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5861 ;;      Totals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5862 ;;Total ram usage:       14 bytes
  5863 ;; Hardware stack levels used:    1
  5864 ;; Hardware stack levels required when called:    9
  5865 ;; This function calls:
  5866 ;;		_vsnprintf
  5867 ;; This function is called by:
  5868 ;;		_statemachine
  5869 ;;		_printotAFERegisters
  5870 ;; This function uses a non-reentrant model
  5871 ;;
  5872                           
  5873                           
  5874                           ;psect for function _snprintf
  5875  31C1                     _snprintf:	
  5876                           
  5877                           ;incstack = 0
  5878                           ; Regs used in _snprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5879  31C1  3065               	movlw	(low ((?_snprintf| (0+256)+6)))& (0+255)
  5880  31C2  0022               	movlb	2	; select bank2
  5881  31C3  00E9               	movwf	??_snprintf^(0+256)
  5882  31C4  0869               	movf	??_snprintf^(0+256),w
  5883  31C5  00EC               	movwf	snprintf@ap^(0+256)
  5884  31C6  0860               	movf	(snprintf@s+1)^(0+256),w
  5885  31C7  00CF               	movwf	(vsnprintf@s+1)^(0+256)
  5886  31C8  085F               	movf	snprintf@s^(0+256),w
  5887  31C9  00CE               	movwf	vsnprintf@s^(0+256)
  5888  31CA  0862               	movf	(snprintf@n+1)^(0+256),w
  5889  31CB  00D1               	movwf	(vsnprintf@n+1)^(0+256)
  5890  31CC  0861               	movf	snprintf@n^(0+256),w
  5891  31CD  00D0               	movwf	vsnprintf@n^(0+256)
  5892  31CE  0864               	movf	(snprintf@fmt+1)^(0+256),w
  5893  31CF  00D3               	movwf	(vsnprintf@fmt+1)^(0+256)
  5894  31D0  0863               	movf	snprintf@fmt^(0+256),w
  5895  31D1  00D2               	movwf	vsnprintf@fmt^(0+256)
  5896  31D2  306C               	movlw	(low (snprintf@ap| (0+256)))& (0+255)
  5897  31D3  00E9               	movwf	??_snprintf^(0+256)
  5898  31D4  0869               	movf	??_snprintf^(0+256),w
  5899  31D5  00D4               	movwf	vsnprintf@ap^(0+256)
  5900  31D6  31A9  2128         	fcall	_vsnprintf
  5901  31D8  0008               	return
  5902  31D9                     __end_of_snprintf:	
  5903                           
  5904                           	psect	text4
  5905  2928                     __ptext4:	
  5906 ;; *************** function _vsnprintf *****************
  5907 ;; Defined at:
  5908 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_vsnprintf.c"
  5909 ;; Parameters:    Size  Location     Type
  5910 ;;  s               2   46[BANK2 ] PTR unsigned char 
  5911 ;;		 -> messageBuffer(127), 
  5912 ;;  n               2   48[BANK2 ] unsigned int 
  5913 ;;  fmt             2   50[BANK2 ] PTR const unsigned char 
  5914 ;;		 -> STR_24(18), STR_23(18), STR_22(19), STR_21(20), 
  5915 ;;		 -> STR_20(20), STR_19(21), STR_18(21), STR_17(21), 
  5916 ;;		 -> STR_16(22), STR_15(22), STR_14(21), STR_13(21), 
  5917 ;;		 -> STR_8(57), STR_7(44), STR_6(42), STR_3(43), 
  5918 ;;  ap              1   52[BANK2 ] PTR PTR void 
  5919 ;;		 -> snprintf@ap(1), 
  5920 ;; Auto vars:     Size  Location     Type
  5921 ;;  f               6   57[BANK2 ] struct _IO_FILE
  5922 ;;  cnt             2   55[BANK2 ] int 
  5923 ;; Return value:  Size  Location     Type
  5924 ;;                  2   46[BANK2 ] int 
  5925 ;; Registers used:
  5926 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5927 ;; Tracked objects:
  5928 ;;		On entry : 0/0
  5929 ;;		On exit  : 0/0
  5930 ;;		Unchanged: 0/0
  5931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5932 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5933 ;;      Locals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5934 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5935 ;;      Totals:         0       0       2      17       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5936 ;;Total ram usage:       19 bytes
  5937 ;; Hardware stack levels used:    1
  5938 ;; Hardware stack levels required when called:    8
  5939 ;; This function calls:
  5940 ;;		_vfprintf
  5941 ;; This function is called by:
  5942 ;;		_snprintf
  5943 ;; This function uses a non-reentrant model
  5944 ;;
  5945                           
  5946                           
  5947                           ;psect for function _vsnprintf
  5948  2928                     _vsnprintf:	
  5949                           
  5950                           ;incstack = 0
  5951                           ; Regs used in _vsnprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5952  2928  3080               	movlw	128
  5953  2929  0022               	movlb	2	; select bank2
  5954  292A  0251               	subwf	(vsnprintf@n+1)^(0+256),w
  5955  292B  3000               	movlw	0
  5956  292C  1903               	skipnz
  5957  292D  0250               	subwf	vsnprintf@n^(0+256),w
  5958  292E  1C03               	skipc
  5959  292F  293B               	goto	l8434
  5960  2930  304B               	movlw	75
  5961  2931  0023               	movlb	3	; select bank3
  5962  2932  00BA               	movwf	_errno^(0+384)
  5963  2933  3000               	movlw	0
  5964  2934  00BB               	movwf	(_errno^(0+384)+1)
  5965  2935  30FF               	movlw	255
  5966  2936  0022               	movlb	2	; select bank2
  5967  2937  00CE               	movwf	?_vsnprintf^(0+256)
  5968  2938  30FF               	movlw	255
  5969  2939  00CF               	movwf	(?_vsnprintf^(0+256)+1)
  5970  293A  0008               	return
  5971  293B                     l8434:	
  5972  293B  084F               	movf	(vsnprintf@s+1)^(0+256),w
  5973  293C  00DA               	movwf	(vsnprintf@f+1)^(0+256)
  5974  293D  084E               	movf	vsnprintf@s^(0+256),w
  5975  293E  00D9               	movwf	vsnprintf@f^(0+256)
  5976  293F  3000               	movlw	0
  5977  2940  0251               	subwf	(vsnprintf@n+1)^(0+256),w
  5978  2941  3002               	movlw	2
  5979  2942  1903               	skipnz
  5980  2943  0250               	subwf	vsnprintf@n^(0+256),w
  5981  2944  1C03               	skipc
  5982  2945  294F               	goto	l8440
  5983  2946  0850               	movf	vsnprintf@n^(0+256),w
  5984  2947  3EFF               	addlw	255
  5985  2948  00DD               	movwf	(vsnprintf@f^(0+256)+4)
  5986  2949  30FF               	movlw	255
  5987  294A  3D51               	addwfc	(vsnprintf@n+1)^(0+256),w
  5988  294B  00DE               	movwf	((vsnprintf@f+1)^(0+256)+4)
  5989  294C  01DB               	clrf	(vsnprintf@f^(0+256)+2)
  5990  294D  01DC               	clrf	((vsnprintf@f+1)^(0+256)+2)
  5991  294E  2957               	goto	l8442
  5992  294F                     l8440:	
  5993  294F  3001               	movlw	1
  5994  2950  00DD               	movwf	(vsnprintf@f^(0+256)+4)
  5995  2951  3000               	movlw	0
  5996  2952  00DE               	movwf	(vsnprintf@f^(0+256)+5)
  5997  2953  3001               	movlw	1
  5998  2954  00DB               	movwf	(vsnprintf@f^(0+256)+2)
  5999  2955  3000               	movlw	0
  6000  2956  00DC               	movwf	(vsnprintf@f^(0+256)+3)
  6001  2957                     l8442:	
  6002  2957  3059               	movlw	low vsnprintf@f
  6003  2958  0021               	movlb	1	; select bank1
  6004  2959  00E7               	movwf	vfprintf@fp^(0+128)
  6005  295A  3001               	movlw	high vsnprintf@f
  6006  295B  00E8               	movwf	(vfprintf@fp^(0+128)+1)
  6007  295C  0022               	movlb	2	; select bank2
  6008  295D  0853               	movf	(vsnprintf@fmt+1)^(0+256),w
  6009  295E  0021               	movlb	1	; select bank1
  6010  295F  00EA               	movwf	(vfprintf@fmt+1)^(0+128)
  6011  2960  0022               	movlb	2	; select bank2
  6012  2961  0852               	movf	vsnprintf@fmt^(0+256),w
  6013  2962  0021               	movlb	1	; select bank1
  6014  2963  00E9               	movwf	vfprintf@fmt^(0+128)
  6015  2964  0022               	movlb	2	; select bank2
  6016  2965  0854               	movf	vsnprintf@ap^(0+256),w
  6017  2966  0021               	movlb	1	; select bank1
  6018  2967  00EE               	movwf	??_vsnprintf^(0+128)
  6019  2968  086E               	movf	??_vsnprintf^(0+128),w
  6020  2969  00EB               	movwf	vfprintf@ap^(0+128)
  6021  296A  31B3  2390  31A9   	fcall	_vfprintf
  6022  296D  0021               	movlb	1	; select bank1
  6023  296E  0868               	movf	(?_vfprintf+1)^(0+128),w
  6024  296F  0022               	movlb	2	; select bank2
  6025  2970  00D8               	movwf	(vsnprintf@cnt+1)^(0+256)
  6026  2971  0021               	movlb	1	; select bank1
  6027  2972  0867               	movf	?_vfprintf^(0+128),w
  6028  2973  0022               	movlb	2	; select bank2
  6029  2974  00D7               	movwf	vsnprintf@cnt^(0+256)
  6030  2975  0850               	movf	vsnprintf@n^(0+256),w
  6031  2976  0451               	iorwf	(vsnprintf@n+1)^(0+256),w
  6032  2977  1D03               	btfss	3,2
  6033  2978  1BD8               	btfsc	(vsnprintf@cnt+1)^(0+256),7
  6034  2979  29A0               	goto	l8456
  6035  297A  0850               	movf	vsnprintf@n^(0+256),w
  6036  297B  3EFF               	addlw	255
  6037  297C  0021               	movlb	1	; select bank1
  6038  297D  00EE               	movwf	??_vsnprintf^(0+128)
  6039  297E  30FF               	movlw	255
  6040  297F  0022               	movlb	2	; select bank2
  6041  2980  3D51               	addwfc	(vsnprintf@n+1)^(0+256),w
  6042  2981  0021               	movlb	1	; select bank1
  6043  2982  00EF               	movwf	(??_vsnprintf+1)^(0+128)
  6044  2983  086F               	movf	(??_vsnprintf+1)^(0+128),w
  6045  2984  0022               	movlb	2	; select bank2
  6046  2985  0258               	subwf	(vsnprintf@cnt+1)^(0+256),w
  6047  2986  1D03               	skipz
  6048  2987  298C               	goto	u12185
  6049  2988  0021               	movlb	1	; select bank1
  6050  2989  086E               	movf	??_vsnprintf^(0+128),w
  6051  298A  0022               	movlb	2	; select bank2
  6052  298B  0257               	subwf	vsnprintf@cnt^(0+256),w
  6053  298C                     u12185:	
  6054  298C  1C03               	skipc
  6055  298D  2995               	goto	l8452
  6056  298E  0850               	movf	vsnprintf@n^(0+256),w
  6057  298F  3EFF               	addlw	255
  6058  2990  00D5               	movwf	_vsnprintf$1791^(0+256)
  6059  2991  30FF               	movlw	255
  6060  2992  3D51               	addwfc	(vsnprintf@n+1)^(0+256),w
  6061  2993  00D6               	movwf	(_vsnprintf$1791+1)^(0+256)
  6062  2994  2999               	goto	l8454
  6063  2995                     l8452:	
  6064  2995  0858               	movf	(vsnprintf@cnt+1)^(0+256),w
  6065  2996  00D6               	movwf	(_vsnprintf$1791+1)^(0+256)
  6066  2997  0857               	movf	vsnprintf@cnt^(0+256),w
  6067  2998  00D5               	movwf	_vsnprintf$1791^(0+256)
  6068  2999                     l8454:	
  6069  2999  0855               	movf	_vsnprintf$1791^(0+256),w
  6070  299A  074E               	addwf	vsnprintf@s^(0+256),w
  6071  299B  0086               	movwf	6
  6072  299C  0856               	movf	(_vsnprintf$1791+1)^(0+256),w
  6073  299D  3D4F               	addwfc	(vsnprintf@s+1)^(0+256),w
  6074  299E  0087               	movwf	7
  6075  299F  0181               	clrf	1
  6076  29A0                     l8456:	
  6077  29A0  0858               	movf	(vsnprintf@cnt+1)^(0+256),w
  6078  29A1  00CF               	movwf	(?_vsnprintf+1)^(0+256)
  6079  29A2  0857               	movf	vsnprintf@cnt^(0+256),w
  6080  29A3  00CE               	movwf	?_vsnprintf^(0+256)
  6081  29A4  0008               	return
  6082  29A5                     __end_of_vsnprintf:	
  6083                           
  6084                           	psect	text5
  6085  3390                     __ptext5:	
  6086 ;; *************** function _vfprintf *****************
  6087 ;; Defined at:
  6088 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6089 ;; Parameters:    Size  Location     Type
  6090 ;;  fp              2   71[BANK1 ] PTR struct _IO_FILE
  6091 ;;		 -> vsnprintf@f(6), 
  6092 ;;  fmt             2   73[BANK1 ] PTR const unsigned char 
  6093 ;;		 -> STR_24(18), STR_23(18), STR_22(19), STR_21(20), 
  6094 ;;		 -> STR_20(20), STR_19(21), STR_18(21), STR_17(21), 
  6095 ;;		 -> STR_16(22), STR_15(22), STR_14(21), STR_13(21), 
  6096 ;;		 -> STR_8(57), STR_7(44), STR_6(42), STR_3(43), 
  6097 ;;  ap              1   75[BANK1 ] PTR PTR void 
  6098 ;;		 -> snprintf@ap(1), 
  6099 ;; Auto vars:     Size  Location     Type
  6100 ;;  cfmt            2   76[BANK1 ] PTR unsigned char 
  6101 ;;		 -> STR_24(18), STR_23(18), STR_22(19), STR_21(20), 
  6102 ;;		 -> STR_20(20), STR_19(21), STR_18(21), STR_17(21), 
  6103 ;;		 -> STR_16(22), STR_15(22), STR_14(21), STR_13(21), 
  6104 ;;		 -> STR_8(57), STR_7(44), STR_6(42), STR_3(43), 
  6105 ;; Return value:  Size  Location     Type
  6106 ;;                  2   71[BANK1 ] int 
  6107 ;; Registers used:
  6108 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6109 ;; Tracked objects:
  6110 ;;		On entry : 0/0
  6111 ;;		On exit  : 0/0
  6112 ;;		Unchanged: 0/0
  6113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6114 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6115 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6116 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6117 ;;      Totals:         0       2       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6118 ;;Total ram usage:        9 bytes
  6119 ;; Hardware stack levels used:    1
  6120 ;; Hardware stack levels required when called:    7
  6121 ;; This function calls:
  6122 ;;		_vfpfcnvrt
  6123 ;; This function is called by:
  6124 ;;		_vsnprintf
  6125 ;; This function uses a non-reentrant model
  6126 ;;
  6127                           
  6128                           
  6129                           ;psect for function _vfprintf
  6130  3390                     _vfprintf:	
  6131                           
  6132                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6133                           
  6134                           ;incstack = 0
  6135                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6136  3390  0021               	movlb	1	; select bank1
  6137  3391  086A               	movf	(vfprintf@fmt+1)^(0+128),w
  6138  3392  00ED               	movwf	(vfprintf@cfmt+1)^(0+128)
  6139  3393  0869               	movf	vfprintf@fmt^(0+128),w
  6140  3394  00EC               	movwf	vfprintf@cfmt^(0+128)
  6141                           
  6142                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  6143  3395  0023               	movlb	3	; select bank3
  6144  3396  01BC               	clrf	_nout^(0+384)
  6145  3397  01BD               	clrf	(_nout+1)^(0+384)
  6146  3398                     l8368:	
  6147                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6148                           
  6149                           
  6150                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6151  3398  0021               	movlb	1	; select bank1
  6152  3399  086C               	movf	vfprintf@cfmt^(0+128),w
  6153  339A  0084               	movwf	4
  6154  339B  086D               	movf	(vfprintf@cfmt+1)^(0+128),w
  6155  339C  0085               	movwf	5
  6156  339D  0012               	moviw fsr0++
  6157  339E  1903               	btfsc	3,2
  6158  339F  2BBC               	goto	l8370
  6159                           
  6160                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  6161  33A0  0868               	movf	(vfprintf@fp+1)^(0+128),w
  6162  33A1  00E4               	movwf	(vfpfcnvrt@fp+1)^(0+128)
  6163  33A2  0867               	movf	vfprintf@fp^(0+128),w
  6164  33A3  00E3               	movwf	vfpfcnvrt@fp^(0+128)
  6165  33A4  30EC               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  6166  33A5  0020               	movlb	0	; select bank0
  6167  33A6  00EE               	movwf	??_vfprintf
  6168  33A7  086E               	movf	??_vfprintf,w
  6169  33A8  0021               	movlb	1	; select bank1
  6170  33A9  00E5               	movwf	vfpfcnvrt@fmt^(0+128)
  6171  33AA  086B               	movf	vfprintf@ap^(0+128),w
  6172  33AB  0020               	movlb	0	; select bank0
  6173  33AC  00EF               	movwf	??_vfprintf+1
  6174  33AD  086F               	movf	??_vfprintf+1,w
  6175  33AE  0021               	movlb	1	; select bank1
  6176  33AF  00E6               	movwf	vfpfcnvrt@ap^(0+128)
  6177  33B0  3193  23BD  31B3   	fcall	_vfpfcnvrt
  6178  33B3  0021               	movlb	1	; select bank1
  6179  33B4  0863               	movf	?_vfpfcnvrt^(0+128),w
  6180  33B5  0023               	movlb	3	; select bank3
  6181  33B6  07BC               	addwf	_nout^(0+384),f
  6182  33B7  0021               	movlb	1	; select bank1
  6183  33B8  0864               	movf	(?_vfpfcnvrt+1)^(0+128),w
  6184  33B9  0023               	movlb	3	; select bank3
  6185  33BA  3DBD               	addwfc	(_nout+1)^(0+384),f
  6186  33BB  2B98               	goto	l8368
  6187  33BC                     l8370:	
  6188                           
  6189                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  6190  33BC  0023               	movlb	3	; select bank3
  6191  33BD  083D               	movf	(_nout+1)^(0+384),w
  6192  33BE  0021               	movlb	1	; select bank1
  6193  33BF  00E8               	movwf	(?_vfprintf+1)^(0+128)
  6194  33C0  0023               	movlb	3	; select bank3
  6195  33C1  083C               	movf	_nout^(0+384),w
  6196  33C2  0021               	movlb	1	; select bank1
  6197  33C3  00E7               	movwf	?_vfprintf^(0+128)
  6198  33C4  0008               	return
  6199  33C5                     __end_of_vfprintf:	
  6200                           
  6201                           	psect	text6
  6202  13BD                     __ptext6:	
  6203 ;; *************** function _vfpfcnvrt *****************
  6204 ;; Defined at:
  6205 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6206 ;; Parameters:    Size  Location     Type
  6207 ;;  fp              2   67[BANK1 ] PTR struct _IO_FILE
  6208 ;;		 -> vsnprintf@f(6), 
  6209 ;;  fmt             1   69[BANK1 ] PTR PTR unsigned char 
  6210 ;;		 -> vfprintf@cfmt(2), 
  6211 ;;  ap              1   70[BANK1 ] PTR PTR void 
  6212 ;;		 -> snprintf@ap(1), 
  6213 ;; Auto vars:     Size  Location     Type
  6214 ;;  llu             8   38[BANK2 ] unsigned long long 
  6215 ;;  ll              8   28[BANK2 ] long long 
  6216 ;;  f               4   24[BANK2 ] long long 
  6217 ;;  ct              3   21[BANK2 ] unsigned char [3]
  6218 ;;  done            2   13[BANK2 ] int 
  6219 ;;  i               2    0        int 
  6220 ;;  c               1   37[BANK2 ] unsigned char 
  6221 ;;  vp              1   36[BANK2 ] PTR void 
  6222 ;;		 -> ?_snprintf(2), 
  6223 ;;  cp              1   12[BANK2 ] PTR unsigned char 
  6224 ;;		 -> ?_snprintf(2), 
  6225 ;; Return value:  Size  Location     Type
  6226 ;;                  2   67[BANK1 ] int 
  6227 ;; Registers used:
  6228 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6229 ;; Tracked objects:
  6230 ;;		On entry : 0/0
  6231 ;;		On exit  : 0/0
  6232 ;;		Unchanged: 0/0
  6233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6234 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6235 ;;      Locals:         0       0       0      34       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6236 ;;      Temps:          0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6237 ;;      Totals:         0       0       4      46       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6238 ;;Total ram usage:       50 bytes
  6239 ;; Hardware stack levels used:    1
  6240 ;; Hardware stack levels required when called:    6
  6241 ;; This function calls:
  6242 ;;		_atoi
  6243 ;;		_ctoa
  6244 ;;		_dtoa
  6245 ;;		_efgtoa
  6246 ;;		_fputc
  6247 ;;		_isdigit
  6248 ;;		_isupper
  6249 ;;		_otoa
  6250 ;;		_stoa
  6251 ;;		_strncmp
  6252 ;;		_tolower
  6253 ;;		_utoa
  6254 ;;		_xtoa
  6255 ;; This function is called by:
  6256 ;;		_vfprintf
  6257 ;; This function uses a non-reentrant model
  6258 ;;
  6259                           
  6260                           
  6261                           ;psect for function _vfpfcnvrt
  6262  13BD                     _vfpfcnvrt:	
  6263                           
  6264                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  6265                           
  6266                           ;incstack = 0
  6267                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6268  13BD  0021               	movlb	1	; select bank1
  6269  13BE  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6270  13BF  0086               	movwf	6
  6271  13C0  0187               	clrf	7
  6272  13C1  3F40               	moviw [0]fsr1
  6273  13C2  0022               	movlb	2	; select bank2
  6274  13C3  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6275  13C4  3F41               	moviw [1]fsr1
  6276  13C5  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6277  13C6  0820               	movf	??_vfpfcnvrt^(0+256),w
  6278  13C7  0084               	movwf	4
  6279  13C8  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  6280  13C9  0085               	movwf	5
  6281  13CA  0012               	moviw fsr0++
  6282  13CB  3A25               	xorlw	37
  6283  13CC  1D03               	btfss	3,2
  6284  13CD  2DD2               	goto	L16
  6285                           
  6286                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  6287  13CE  0021               	movlb	1	; select bank1
  6288  13CF  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6289  13D0  0086               	movwf	6
  6290  13D1  0187               	clrf	7
  6291  13D2  3001               	movlw	1
  6292  13D3  0781               	addwf	1,f
  6293  13D4  3141               	addfsr 1,1
  6294  13D5  1803               	skipnc
  6295  13D6  0A81               	incf	1,f
  6296                           
  6297                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  6298  13D7  0023               	movlb	3	; select bank3
  6299  13D8  01BE               	clrf	_width^(0+384)
  6300  13D9  01BF               	clrf	(_width+1)^(0+384)
  6301  13DA  01C2               	clrf	_flags^(0+384)
  6302  13DB  01C3               	clrf	(_flags+1)^(0+384)
  6303                           
  6304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  6305  13DC  30FF               	movlw	255
  6306  13DD  00C0               	movwf	_prec^(0+384)
  6307  13DE  30FF               	movlw	255
  6308  13DF  00C1               	movwf	(_prec^(0+384)+1)
  6309                           
  6310                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  6311  13E0  0022               	movlb	2	; select bank2
  6312  13E1  01AD               	clrf	vfpfcnvrt@done^(0+256)
  6313  13E2  01AE               	clrf	(vfpfcnvrt@done+1)^(0+256)
  6314                           
  6315                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6316  13E3  2C00               	goto	l7926
  6317  13E4                     l786:	
  6318                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 691:       
      +                                    case '-' :
  6319                           
  6320                           
  6321                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  6322  13E4  0023               	movlb	3	; select bank3
  6323  13E5  1442               	bsf	_flags^(0+384),0
  6324  13E6                     l7910:	
  6325                           
  6326                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  6327  13E6  0021               	movlb	1	; select bank1
  6328  13E7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6329  13E8  0086               	movwf	6
  6330  13E9  0187               	clrf	7
  6331  13EA  3001               	movlw	1
  6332  13EB  0781               	addwf	1,f
  6333  13EC  3141               	addfsr 1,1
  6334  13ED  1803               	skipnc
  6335  13EE  0A81               	incf	1,f
  6336                           
  6337                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  6338  13EF  2C00               	goto	l7926
  6339  13F0                     l788:	
  6340                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 695:       
      +                                    case '0' :
  6341                           
  6342                           
  6343                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  6344  13F0  0023               	movlb	3	; select bank3
  6345  13F1  14C2               	bsf	_flags^(0+384),1
  6346  13F2  2BE6               	goto	l7910
  6347  13F3                     l789:	
  6348                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 699:       
      +                                    case '+' :
  6349                           
  6350                           
  6351                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  6352  13F3  0023               	movlb	3	; select bank3
  6353  13F4  1542               	bsf	_flags^(0+384),2
  6354  13F5  2BE6               	goto	l7910
  6355  13F6                     l790:	
  6356                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 703:       
      +                                    case ' ' :
  6357                           
  6358                           
  6359                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  6360  13F6  0023               	movlb	3	; select bank3
  6361  13F7  15C2               	bsf	_flags^(0+384),3
  6362  13F8  2BE6               	goto	l7910
  6363  13F9                     l791:	
  6364                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 707:       
      +                                    case '#' :
  6365                           
  6366                           
  6367                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  6368  13F9  0023               	movlb	3	; select bank3
  6369  13FA  1642               	bsf	_flags^(0+384),4
  6370  13FB  2BE6               	goto	l7910
  6371  13FC                     l7920:	
  6372                           
  6373                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  6374  13FC  3001               	movlw	1
  6375  13FD  00AD               	movwf	vfpfcnvrt@done^(0+256)
  6376  13FE  3000               	movlw	0
  6377  13FF  00AE               	movwf	(vfpfcnvrt@done^(0+256)+1)
  6378  1400                     l7926:	
  6379                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  6380                           
  6381                           
  6382                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6383  1400  0022               	movlb	2	; select bank2
  6384  1401  082D               	movf	vfpfcnvrt@done^(0+256),w
  6385  1402  042E               	iorwf	(vfpfcnvrt@done+1)^(0+256),w
  6386  1403  1D03               	btfss	3,2
  6387  1404  2C2C               	goto	l793
  6388  1405  0021               	movlb	1	; select bank1
  6389  1406  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6390  1407  0086               	movwf	6
  6391  1408  0187               	clrf	7
  6392  1409  3F40               	moviw [0]fsr1
  6393  140A  0022               	movlb	2	; select bank2
  6394  140B  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6395  140C  3F41               	moviw [1]fsr1
  6396  140D  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6397  140E  0820               	movf	??_vfpfcnvrt^(0+256),w
  6398  140F  0084               	movwf	4
  6399  1410  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  6400  1411  0085               	movwf	5
  6401  1412  0800               	movf	0,w	;code access
  6402  1413  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  6403  1414  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  6404                           
  6405                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6406                           ; Switch size 1, requested type "simple"
  6407                           ; Number of cases is 1, Range of values is 0 to 0
  6408                           ; switch strategies available:
  6409                           ; Name         Instructions Cycles
  6410                           ; simple_byte            4     3 (average)
  6411                           ; direct_byte            8     6 (fixed)
  6412                           ; jumptable            260     6 (fixed)
  6413                           ;	Chosen strategy is simple_byte
  6414  1415  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  6415  1416  3A00               	xorlw	0	; case 0
  6416  1417  1903               	skipnz
  6417  1418  2C1A               	goto	l8826
  6418  1419  2BFC               	goto	l7920
  6419  141A                     l8826:	
  6420                           
  6421                           ; Switch size 1, requested type "simple"
  6422                           ; Number of cases is 5, Range of values is 32 to 48
  6423                           ; switch strategies available:
  6424                           ; Name         Instructions Cycles
  6425                           ; simple_byte           16     9 (average)
  6426                           ; direct_byte           43     9 (fixed)
  6427                           ; jumptable            263     9 (fixed)
  6428                           ;	Chosen strategy is simple_byte
  6429  141A  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  6430  141B  3A20               	xorlw	32	; case 32
  6431  141C  1903               	skipnz
  6432  141D  2BF6               	goto	l790
  6433  141E  3A03               	xorlw	3	; case 35
  6434  141F  1903               	skipnz
  6435  1420  2BF9               	goto	l791
  6436  1421  3A08               	xorlw	8	; case 43
  6437  1422  1903               	skipnz
  6438  1423  2BF3               	goto	l789
  6439  1424  3A06               	xorlw	6	; case 45
  6440  1425  1903               	skipnz
  6441  1426  2BE4               	goto	l786
  6442  1427  3A1D               	xorlw	29	; case 48
  6443  1428  1903               	skipnz
  6444  1429  2BF0               	goto	l788
  6445  142A  2BFC               	goto	l7920
  6446  142B  2C00               	goto	l7926
  6447  142C                     l793:	
  6448                           
  6449                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  6450  142C  0023               	movlb	3	; select bank3
  6451  142D  1C42               	btfss	_flags^(0+384),0
  6452  142E  2C33               	goto	l7930
  6453                           
  6454                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  6455  142F  30FD               	movlw	253
  6456  1430  05C2               	andwf	_flags^(0+384),f
  6457  1431  30FF               	movlw	255
  6458  1432  05C3               	andwf	(_flags+1)^(0+384),f
  6459  1433                     l7930:	
  6460                           
  6461                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  6462  1433  0021               	movlb	1	; select bank1
  6463  1434  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6464  1435  0086               	movwf	6
  6465  1436  0187               	clrf	7
  6466  1437  3F40               	moviw [0]fsr1
  6467  1438  0022               	movlb	2	; select bank2
  6468  1439  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6469  143A  3F41               	moviw [1]fsr1
  6470  143B  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6471  143C  0820               	movf	??_vfpfcnvrt^(0+256),w
  6472  143D  0084               	movwf	4
  6473  143E  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  6474  143F  0085               	movwf	5
  6475  1440  0012               	moviw fsr0++
  6476  1441  3A2A               	xorlw	42
  6477  1442  1D03               	btfss	3,2
  6478  1443  2C65               	goto	l7942
  6479                           
  6480                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  6481  1444  0021               	movlb	1	; select bank1
  6482  1445  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6483  1446  0086               	movwf	6
  6484  1447  0187               	clrf	7
  6485  1448  3001               	movlw	1
  6486  1449  0781               	addwf	1,f
  6487  144A  3141               	addfsr 1,1
  6488  144B  1803               	skipnc
  6489  144C  0A81               	incf	1,f
  6490                           
  6491                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6492  144D  0866               	movf	vfpfcnvrt@ap^(0+128),w
  6493  144E  0086               	movwf	6
  6494  144F  3001               	movlw	1	; select bank2/3
  6495  1450  0087               	movwf	7
  6496  1451  0801               	movf	1,w
  6497  1452  0084               	movwf	4
  6498  1453  3001               	movlw	1	; select bank2/3
  6499  1454  0085               	movwf	5
  6500  1455  3002               	movlw	2
  6501  1456  0781               	addwf	1,f
  6502  1457  3F00               	moviw [0]fsr0
  6503  1458  0023               	movlb	3	; select bank3
  6504  1459  00BE               	movwf	_width^(0+384)
  6505  145A  3F01               	moviw [1]fsr0
  6506  145B  00BF               	movwf	(_width+1)^(0+384)
  6507                           
  6508                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  6509  145C  1FBF               	btfss	(_width+1)^(0+384),7
  6510  145D  2CA7               	goto	l7952
  6511                           
  6512                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  6513  145E  1442               	bsf	_flags^(0+384),0
  6514                           
  6515                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  6516  145F  09BE               	comf	_width^(0+384),f
  6517  1460  09BF               	comf	(_width+1)^(0+384),f
  6518  1461  0ABE               	incf	_width^(0+384),f
  6519  1462  1903               	skipnz
  6520  1463  0ABF               	incf	(_width+1)^(0+384),f
  6521  1464  2CA7               	goto	l7952
  6522  1465                     l7942:	
  6523                           
  6524                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  6525  1465  0021               	movlb	1	; select bank1
  6526  1466  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6527  1467  0086               	movwf	6
  6528  1468  0187               	clrf	7
  6529  1469  3F40               	moviw [0]fsr1
  6530  146A  00F7               	movwf	atoi@s
  6531  146B  3F41               	moviw [1]fsr1
  6532  146C  00F8               	movwf	atoi@s+1
  6533  146D  31AB  23C8  3193   	fcall	_atoi
  6534  1470  0878               	movf	?_atoi+1,w
  6535  1471  0023               	movlb	3	; select bank3
  6536  1472  00BF               	movwf	(_width+1)^(0+384)
  6537  1473  0877               	movf	?_atoi,w
  6538  1474  00BE               	movwf	_width^(0+384)
  6539                           
  6540                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6541  1475  2C7F               	goto	l7946
  6542  1476                     l7944:	
  6543                           
  6544                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  6545  1476  0021               	movlb	1	; select bank1
  6546  1477  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6547  1478  0086               	movwf	6
  6548  1479  0187               	clrf	7
  6549  147A  3001               	movlw	1
  6550  147B  0781               	addwf	1,f
  6551  147C  3141               	addfsr 1,1
  6552  147D  1803               	skipnc
  6553  147E  0A81               	incf	1,f
  6554  147F                     l7946:	
  6555  147F  0021               	movlb	1	; select bank1
  6556  1480  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6557  1481  0086               	movwf	6
  6558  1482  0187               	clrf	7
  6559  1483  3F40               	moviw [0]fsr1
  6560  1484  0022               	movlb	2	; select bank2
  6561  1485  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6562  1486  3F41               	moviw [1]fsr1
  6563  1487  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6564  1488  0820               	movf	??_vfpfcnvrt^(0+256),w
  6565  1489  0084               	movwf	4
  6566  148A  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  6567  148B  0085               	movwf	5
  6568  148C  0800               	movf	0,w	;code access
  6569  148D  3ED0               	addlw	208
  6570  148E  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  6571  148F  30FF               	movlw	255
  6572  1490  1803               	skipnc
  6573  1491  3000               	movlw	0
  6574  1492  00A3               	movwf	((??_vfpfcnvrt+2)^(0+256)+1)
  6575  1493  3000               	movlw	0
  6576  1494  0223               	subwf	(??_vfpfcnvrt+3)^(0+256),w
  6577  1495  300A               	movlw	10
  6578  1496  1903               	skipnz
  6579  1497  0222               	subwf	(??_vfpfcnvrt+2)^(0+256),w
  6580  1498  1803               	btfsc	3,0
  6581  1499  2C9C               	goto	u11450
  6582  149A  3001               	movlw	1
  6583  149B  2C9D               	goto	u11460
  6584  149C                     u11450:	
  6585  149C  3000               	movlw	0
  6586  149D                     u11460:	
  6587  149D  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  6588  149E  01A5               	clrf	((??_vfpfcnvrt+4)^(0+256)+1)
  6589  149F  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  6590  14A0  00AF               	movwf	_vfpfcnvrt$1162^(0+256)
  6591  14A1  0825               	movf	(??_vfpfcnvrt+5)^(0+256),w
  6592  14A2  00B0               	movwf	(_vfpfcnvrt$1162+1)^(0+256)
  6593  14A3  082F               	movf	_vfpfcnvrt$1162^(0+256),w
  6594  14A4  0430               	iorwf	(_vfpfcnvrt$1162+1)^(0+256),w
  6595  14A5  1D03               	btfss	3,2
  6596  14A6  2C76               	goto	l7944
  6597  14A7                     l7952:	
  6598                           
  6599                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  6600  14A7  0021               	movlb	1	; select bank1
  6601  14A8  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6602  14A9  0086               	movwf	6
  6603  14AA  0187               	clrf	7
  6604  14AB  3F40               	moviw [0]fsr1
  6605  14AC  0022               	movlb	2	; select bank2
  6606  14AD  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6607  14AE  3F41               	moviw [1]fsr1
  6608  14AF  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6609  14B0  0820               	movf	??_vfpfcnvrt^(0+256),w
  6610  14B1  0084               	movwf	4
  6611  14B2  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  6612  14B3  0085               	movwf	5
  6613  14B4  0012               	moviw fsr0++
  6614  14B5  3A2E               	xorlw	46
  6615  14B6  1D03               	btfss	3,2
  6616  14B7  2D2F               	goto	l7974
  6617                           
  6618                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  6619  14B8  0023               	movlb	3	; select bank3
  6620  14B9  01C0               	clrf	_prec^(0+384)
  6621  14BA  01C1               	clrf	(_prec+1)^(0+384)
  6622                           
  6623                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  6624  14BB  0021               	movlb	1	; select bank1
  6625  14BC  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6626  14BD  0086               	movwf	6
  6627  14BE  0187               	clrf	7
  6628  14BF  3001               	movlw	1
  6629  14C0  0781               	addwf	1,f
  6630  14C1  3141               	addfsr 1,1
  6631  14C2  1803               	skipnc
  6632  14C3  0A81               	incf	1,f
  6633                           
  6634                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  6635  14C4  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6636  14C5  0086               	movwf	6
  6637  14C6  0187               	clrf	7
  6638  14C7  3F40               	moviw [0]fsr1
  6639  14C8  0022               	movlb	2	; select bank2
  6640  14C9  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6641  14CA  3F41               	moviw [1]fsr1
  6642  14CB  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6643  14CC  0820               	movf	??_vfpfcnvrt^(0+256),w
  6644  14CD  0084               	movwf	4
  6645  14CE  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  6646  14CF  0085               	movwf	5
  6647  14D0  0012               	moviw fsr0++
  6648  14D1  3A2A               	xorlw	42
  6649  14D2  1D03               	btfss	3,2
  6650  14D3  2CED               	goto	l7964
  6651                           
  6652                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  6653  14D4  0021               	movlb	1	; select bank1
  6654  14D5  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6655  14D6  0086               	movwf	6
  6656  14D7  0187               	clrf	7
  6657  14D8  3001               	movlw	1
  6658  14D9  0781               	addwf	1,f
  6659  14DA  3141               	addfsr 1,1
  6660  14DB  1803               	skipnc
  6661  14DC  0A81               	incf	1,f
  6662                           
  6663                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  6664  14DD  0866               	movf	vfpfcnvrt@ap^(0+128),w
  6665  14DE  0086               	movwf	6
  6666  14DF  3001               	movlw	1	; select bank2/3
  6667  14E0  0087               	movwf	7
  6668  14E1  0801               	movf	1,w
  6669  14E2  0084               	movwf	4
  6670  14E3  3001               	movlw	1	; select bank2/3
  6671  14E4  0085               	movwf	5
  6672  14E5  3002               	movlw	2
  6673  14E6  0781               	addwf	1,f
  6674  14E7  3F00               	moviw [0]fsr0
  6675  14E8  0023               	movlb	3	; select bank3
  6676  14E9  00C0               	movwf	_prec^(0+384)
  6677  14EA  3F01               	moviw [1]fsr0
  6678  14EB  00C1               	movwf	(_prec+1)^(0+384)
  6679                           
  6680                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  6681  14EC  2D2F               	goto	l7974
  6682  14ED                     l7964:	
  6683                           
  6684                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  6685  14ED  0021               	movlb	1	; select bank1
  6686  14EE  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6687  14EF  0086               	movwf	6
  6688  14F0  0187               	clrf	7
  6689  14F1  3F40               	moviw [0]fsr1
  6690  14F2  00F7               	movwf	atoi@s
  6691  14F3  3F41               	moviw [1]fsr1
  6692  14F4  00F8               	movwf	atoi@s+1
  6693  14F5  31AB  23C8  3193   	fcall	_atoi
  6694  14F8  0878               	movf	?_atoi+1,w
  6695  14F9  0023               	movlb	3	; select bank3
  6696  14FA  00C1               	movwf	(_prec+1)^(0+384)
  6697  14FB  0877               	movf	?_atoi,w
  6698  14FC  00C0               	movwf	_prec^(0+384)
  6699                           
  6700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6701  14FD  2D07               	goto	l7968
  6702  14FE                     l7966:	
  6703                           
  6704                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  6705  14FE  0021               	movlb	1	; select bank1
  6706  14FF  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6707  1500  0086               	movwf	6
  6708  1501  0187               	clrf	7
  6709  1502  3001               	movlw	1
  6710  1503  0781               	addwf	1,f
  6711  1504  3141               	addfsr 1,1
  6712  1505  1803               	skipnc
  6713  1506  0A81               	incf	1,f
  6714  1507                     l7968:	
  6715  1507  0021               	movlb	1	; select bank1
  6716  1508  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6717  1509  0086               	movwf	6
  6718  150A  0187               	clrf	7
  6719  150B  3F40               	moviw [0]fsr1
  6720  150C  0022               	movlb	2	; select bank2
  6721  150D  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6722  150E  3F41               	moviw [1]fsr1
  6723  150F  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6724  1510  0820               	movf	??_vfpfcnvrt^(0+256),w
  6725  1511  0084               	movwf	4
  6726  1512  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  6727  1513  0085               	movwf	5
  6728  1514  0800               	movf	0,w	;code access
  6729  1515  3ED0               	addlw	208
  6730  1516  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  6731  1517  30FF               	movlw	255
  6732  1518  1803               	skipnc
  6733  1519  3000               	movlw	0
  6734  151A  00A3               	movwf	((??_vfpfcnvrt+2)^(0+256)+1)
  6735  151B  3000               	movlw	0
  6736  151C  0223               	subwf	(??_vfpfcnvrt+3)^(0+256),w
  6737  151D  300A               	movlw	10
  6738  151E  1903               	skipnz
  6739  151F  0222               	subwf	(??_vfpfcnvrt+2)^(0+256),w
  6740  1520  1803               	btfsc	3,0
  6741  1521  2D24               	goto	u11500
  6742  1522  3001               	movlw	1
  6743  1523  2D25               	goto	u11510
  6744  1524                     u11500:	
  6745  1524  3000               	movlw	0
  6746  1525                     u11510:	
  6747  1525  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  6748  1526  01A5               	clrf	((??_vfpfcnvrt+4)^(0+256)+1)
  6749  1527  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  6750  1528  00B1               	movwf	_vfpfcnvrt$1163^(0+256)
  6751  1529  0825               	movf	(??_vfpfcnvrt+5)^(0+256),w
  6752  152A  00B2               	movwf	(_vfpfcnvrt$1163+1)^(0+256)
  6753  152B  0831               	movf	_vfpfcnvrt$1163^(0+256),w
  6754  152C  0432               	iorwf	(_vfpfcnvrt$1163+1)^(0+256),w
  6755  152D  1D03               	btfss	3,2
  6756  152E  2CFE               	goto	l7966
  6757  152F                     l7974:	
  6758                           
  6759                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  6760  152F  0021               	movlb	1	; select bank1
  6761  1530  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6762  1531  0086               	movwf	6
  6763  1532  0187               	clrf	7
  6764  1533  3F40               	moviw [0]fsr1
  6765  1534  0022               	movlb	2	; select bank2
  6766  1535  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6767  1536  3F41               	moviw [1]fsr1
  6768  1537  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6769  1538  0820               	movf	??_vfpfcnvrt^(0+256),w
  6770  1539  0084               	movwf	4
  6771  153A  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  6772  153B  0085               	movwf	5
  6773  153C  0800               	movf	0,w	;code access
  6774  153D  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  6775  153E  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  6776  153F  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  6777  1540  00F7               	movwf	tolower@c
  6778  1541  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  6779  1542  00F8               	movwf	tolower@c+1
  6780  1543  31B2  22E9  3193   	fcall	_tolower
  6781  1546  0877               	movf	?_tolower,w
  6782  1547  0022               	movlb	2	; select bank2
  6783  1548  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  6784  1549  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  6785  154A  00B5               	movwf	vfpfcnvrt@ct^(0+256)
  6786                           
  6787                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  6788  154B  0835               	movf	vfpfcnvrt@ct^(0+256),w
  6789  154C  1903               	btfsc	3,2
  6790  154D  2D8F               	goto	l7984
  6791                           
  6792                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  6793  154E  0021               	movlb	1	; select bank1
  6794  154F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6795  1550  0086               	movwf	6
  6796  1551  0187               	clrf	7
  6797  1552  3F40               	moviw [0]fsr1
  6798  1553  0022               	movlb	2	; select bank2
  6799  1554  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6800  1555  3F41               	moviw [1]fsr1
  6801  1556  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6802  1557  3001               	movlw	1
  6803  1558  0720               	addwf	??_vfpfcnvrt^(0+256),w
  6804  1559  0084               	movwf	4
  6805  155A  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
  6806  155B  1803               	skipnc
  6807  155C  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
  6808  155D  0085               	movwf	5
  6809  155E  0800               	movf	0,w	;code access
  6810  155F  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  6811  1560  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  6812  1561  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  6813  1562  00F7               	movwf	tolower@c
  6814  1563  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  6815  1564  00F8               	movwf	tolower@c+1
  6816  1565  31B2  22E9  3193   	fcall	_tolower
  6817  1568  0877               	movf	?_tolower,w
  6818  1569  0022               	movlb	2	; select bank2
  6819  156A  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  6820  156B  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  6821  156C  00B6               	movwf	(vfpfcnvrt@ct^(0+256)+1)
  6822                           
  6823                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  6824  156D  0836               	movf	(vfpfcnvrt@ct^(0+256)+1),w
  6825  156E  1903               	btfsc	3,2
  6826  156F  2D8F               	goto	l7984
  6827                           
  6828                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  6829  1570  0021               	movlb	1	; select bank1
  6830  1571  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6831  1572  0086               	movwf	6
  6832  1573  0187               	clrf	7
  6833  1574  3F40               	moviw [0]fsr1
  6834  1575  0022               	movlb	2	; select bank2
  6835  1576  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6836  1577  3F41               	moviw [1]fsr1
  6837  1578  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6838  1579  3002               	movlw	2
  6839  157A  0720               	addwf	??_vfpfcnvrt^(0+256),w
  6840  157B  0084               	movwf	4
  6841  157C  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
  6842  157D  1803               	skipnc
  6843  157E  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
  6844  157F  0085               	movwf	5
  6845  1580  0800               	movf	0,w	;code access
  6846  1581  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  6847  1582  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  6848  1583  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  6849  1584  00F7               	movwf	tolower@c
  6850  1585  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  6851  1586  00F8               	movwf	tolower@c+1
  6852  1587  31B2  22E9  3193   	fcall	_tolower
  6853  158A  0877               	movf	?_tolower,w
  6854  158B  0022               	movlb	2	; select bank2
  6855  158C  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  6856  158D  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  6857  158E  00B7               	movwf	(vfpfcnvrt@ct^(0+256)+2)
  6858  158F                     l7984:	
  6859                           
  6860                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  6861  158F  0021               	movlb	1	; select bank1
  6862  1590  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6863  1591  0086               	movwf	6
  6864  1592  0187               	clrf	7
  6865  1593  3F40               	moviw [0]fsr1
  6866  1594  0022               	movlb	2	; select bank2
  6867  1595  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6868  1596  3F41               	moviw [1]fsr1
  6869  1597  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6870  1598  0820               	movf	??_vfpfcnvrt^(0+256),w
  6871  1599  0084               	movwf	4
  6872  159A  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  6873  159B  0085               	movwf	5
  6874  159C  0012               	moviw fsr0++
  6875  159D  3A63               	xorlw	99
  6876  159E  31AA  1D03         	btfss	3,2
  6877  15A0  2A27               	goto	l7994
  6878                           
  6879                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  6880  15A1  0021               	movlb	1	; select bank1
  6881  15A2  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6882  15A3  0086               	movwf	6
  6883  15A4  0187               	clrf	7
  6884  15A5  3001               	movlw	1
  6885  15A6  0781               	addwf	1,f
  6886  15A7  3141               	addfsr 1,1
  6887  15A8  1803               	skipnc
  6888  15A9  0A81               	incf	1,f
  6889                           
  6890                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6891  15AA  0866               	movf	vfpfcnvrt@ap^(0+128),w
  6892  15AB  0086               	movwf	6
  6893  15AC  3001               	movlw	1	; select bank2/3
  6894  15AD  0087               	movwf	7
  6895  15AE  0801               	movf	1,w
  6896  15AF  0084               	movwf	4
  6897  15B0  3001               	movlw	1	; select bank2/3
  6898  15B1  0085               	movwf	5
  6899  15B2  3002               	movlw	2
  6900  15B3  0781               	addwf	1,f
  6901  15B4  0800               	movf	0,w
  6902  15B5  0022               	movlb	2	; select bank2
  6903  15B6  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6904  15B7  0820               	movf	??_vfpfcnvrt^(0+256),w
  6905  15B8  00C5               	movwf	vfpfcnvrt@c^(0+256)
  6906                           
  6907                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  6908  15B9  0021               	movlb	1	; select bank1
  6909  15BA  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
  6910  15BB  0020               	movlb	0	; select bank0
  6911  15BC  00B1               	movwf	ctoa@fp+1
  6912  15BD  0021               	movlb	1	; select bank1
  6913  15BE  0863               	movf	vfpfcnvrt@fp^(0+128),w
  6914  15BF  0020               	movlb	0	; select bank0
  6915  15C0  00B0               	movwf	ctoa@fp
  6916  15C1  0022               	movlb	2	; select bank2
  6917  15C2  0845               	movf	vfpfcnvrt@c^(0+256),w
  6918  15C3  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6919  15C4  0820               	movf	??_vfpfcnvrt^(0+256),w
  6920  15C5  0020               	movlb	0	; select bank0
  6921  15C6  00B2               	movwf	ctoa@c
  6922  15C7  31B3  232D         	fcall	_ctoa
  6923  15C9  0020               	movlb	0	; select bank0
  6924  15CA  0831               	movf	?_ctoa+1,w
  6925  15CB  0021               	movlb	1	; select bank1
  6926  15CC  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
  6927  15CD  0020               	movlb	0	; select bank0
  6928  15CE  0830               	movf	?_ctoa,w
  6929  15CF  0021               	movlb	1	; select bank1
  6930  15D0  00E3               	movwf	?_vfpfcnvrt^(0+128)
  6931  15D1  0008               	return
  6932  15D2                     L16:	
  6933  15D2                     L15:	
  6934  15D2  318F  2FDA         	ljmp	l8350
  6935                           
  6936                           	psect	text7
  6937  1CC5                     __ptext7:	
  6938 ;; *************** function _xtoa *****************
  6939 ;; Defined at:
  6940 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6941 ;; Parameters:    Size  Location     Type
  6942 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  6943 ;;		 -> vsnprintf@f(6), 
  6944 ;;  d               8   18[BANK0 ] unsigned long long 
  6945 ;;  x               1   26[BANK0 ] unsigned char 
  6946 ;; Auto vars:     Size  Location     Type
  6947 ;;  n               8   43[BANK0 ] unsigned long long 
  6948 ;;  c               2   53[BANK0 ] int 
  6949 ;;  i               2   51[BANK0 ] int 
  6950 ;;  w               2   41[BANK0 ] int 
  6951 ;;  p               2   39[BANK0 ] int 
  6952 ;; Return value:  Size  Location     Type
  6953 ;;                  2   16[BANK0 ] int 
  6954 ;; Registers used:
  6955 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6956 ;; Tracked objects:
  6957 ;;		On entry : 0/0
  6958 ;;		On exit  : 0/0
  6959 ;;		Unchanged: 0/0
  6960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6961 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6962 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6963 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6964 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6965 ;;Total ram usage:       39 bytes
  6966 ;; Hardware stack levels used:    1
  6967 ;; Hardware stack levels required when called:    5
  6968 ;; This function calls:
  6969 ;;		_isalpha
  6970 ;;		_isupper
  6971 ;;		_pad
  6972 ;;		_toupper
  6973 ;; This function is called by:
  6974 ;;		_vfpfcnvrt
  6975 ;; This function uses a non-reentrant model
  6976 ;;
  6977                           
  6978                           
  6979                           ;psect for function _xtoa
  6980  1CC5                     _xtoa:	
  6981                           
  6982                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  6983                           
  6984                           ;incstack = 0
  6985                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6986  1CC5  0023               	movlb	3	; select bank3
  6987  1CC6  1BC1               	btfsc	(_prec+1)^(0+384),7
  6988  1CC7  2CCC               	goto	l752
  6989                           
  6990                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  6991  1CC8  30FD               	movlw	253
  6992  1CC9  05C2               	andwf	_flags^(0+384),f
  6993  1CCA  30FF               	movlw	255
  6994  1CCB  05C3               	andwf	(_flags+1)^(0+384),f
  6995  1CCC                     l752:	
  6996                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 631:     }
  6997                           
  6998                           
  6999                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  7000  1CCC  0841               	movf	(_prec+1)^(0+384),w
  7001  1CCD  3A80               	xorlw	128
  7002  1CCE  0020               	movlb	0	; select bank0
  7003  1CCF  00BB               	movwf	??_xtoa
  7004  1CD0  3080               	movlw	128
  7005  1CD1  023B               	subwf	??_xtoa,w
  7006  1CD2  1D03               	skipz
  7007  1CD3  2CD7               	goto	u11175
  7008  1CD4  3001               	movlw	1
  7009  1CD5  0023               	movlb	3	; select bank3
  7010  1CD6  0240               	subwf	_prec^(0+384),w
  7011  1CD7                     u11175:	
  7012  1CD7  1803               	skipnc
  7013  1CD8  2CDF               	goto	l7796
  7014  1CD9  3001               	movlw	1
  7015  1CDA  0020               	movlb	0	; select bank0
  7016  1CDB  00C7               	movwf	xtoa@p
  7017  1CDC  3000               	movlw	0
  7018  1CDD  00C8               	movwf	xtoa@p+1
  7019  1CDE  2CE7               	goto	l756
  7020  1CDF                     l7796:	
  7021  1CDF  0023               	movlb	3	; select bank3
  7022  1CE0  0841               	movf	(_prec+1)^(0+384),w
  7023  1CE1  0020               	movlb	0	; select bank0
  7024  1CE2  00C8               	movwf	xtoa@p+1
  7025  1CE3  0023               	movlb	3	; select bank3
  7026  1CE4  0840               	movf	_prec^(0+384),w
  7027  1CE5  0020               	movlb	0	; select bank0
  7028  1CE6  00C7               	movwf	xtoa@p
  7029  1CE7                     l756:	
  7030                           
  7031                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  7032  1CE7  0023               	movlb	3	; select bank3
  7033  1CE8  083F               	movf	(_width+1)^(0+384),w
  7034  1CE9  0020               	movlb	0	; select bank0
  7035  1CEA  00CA               	movwf	xtoa@w+1
  7036  1CEB  0023               	movlb	3	; select bank3
  7037  1CEC  083E               	movf	_width^(0+384),w
  7038  1CED  0020               	movlb	0	; select bank0
  7039  1CEE  00C9               	movwf	xtoa@w
  7040                           
  7041                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  7042  1CEF  0023               	movlb	3	; select bank3
  7043  1CF0  1E42               	btfss	_flags^(0+384),4
  7044  1CF1  2CF7               	goto	l7802
  7045                           
  7046                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  7047  1CF2  30FE               	movlw	254
  7048  1CF3  0020               	movlb	0	; select bank0
  7049  1CF4  07C9               	addwf	xtoa@w,f
  7050  1CF5  30FF               	movlw	255
  7051  1CF6  3DCA               	addwfc	xtoa@w+1,f
  7052  1CF7                     l7802:	
  7053                           
  7054                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  7055  1CF7  0020               	movlb	0	; select bank0
  7056  1CF8  0832               	movf	xtoa@d,w
  7057  1CF9  00CB               	movwf	xtoa@n
  7058  1CFA  0833               	movf	xtoa@d+1,w
  7059  1CFB  00CC               	movwf	xtoa@n+1
  7060  1CFC  0834               	movf	xtoa@d+2,w
  7061  1CFD  00CD               	movwf	xtoa@n+2
  7062  1CFE  0835               	movf	xtoa@d+3,w
  7063  1CFF  00CE               	movwf	xtoa@n+3
  7064  1D00  0836               	movf	xtoa@d+4,w
  7065  1D01  00CF               	movwf	xtoa@n+4
  7066  1D02  0837               	movf	xtoa@d+5,w
  7067  1D03  00D0               	movwf	xtoa@n+5
  7068  1D04  0838               	movf	xtoa@d+6,w
  7069  1D05  00D1               	movwf	xtoa@n+6
  7070  1D06  0839               	movf	xtoa@d+7,w
  7071  1D07  00D2               	movwf	xtoa@n+7
  7072                           
  7073                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  7074  1D08  304F               	movlw	79
  7075  1D09  00D3               	movwf	xtoa@i
  7076  1D0A  3000               	movlw	0
  7077  1D0B  00D4               	movwf	xtoa@i+1
  7078                           
  7079                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  7080  1D0C  0024               	movlb	4	; select bank4
  7081  1D0D  01EF               	clrf	(_dbuf^(0+512)+79)
  7082                           
  7083                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7084  1D0E  2DB9               	goto	l7834
  7085  1D0F                     l7806:	
  7086                           
  7087                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  7088  1D0F  30FF               	movlw	255
  7089  1D10  0020               	movlb	0	; select bank0
  7090  1D11  07D3               	addwf	xtoa@i,f
  7091  1D12  30FF               	movlw	255
  7092  1D13  3DD4               	addwfc	xtoa@i+1,f
  7093                           
  7094                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  7095  1D14  300F               	movlw	15
  7096  1D15  054B               	andwf	xtoa@n,w
  7097  1D16  00D5               	movwf	xtoa@c
  7098  1D17  3000               	movlw	0
  7099  1D18  054C               	andwf	xtoa@n+1,w
  7100  1D19  00D6               	movwf	xtoa@c+1
  7101                           
  7102                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  7103  1D1A  0856               	movf	xtoa@c+1,w
  7104  1D1B  3A80               	xorlw	128
  7105  1D1C  00BB               	movwf	??_xtoa
  7106  1D1D  3080               	movlw	128
  7107  1D1E  023B               	subwf	??_xtoa,w
  7108  1D1F  1D03               	skipz
  7109  1D20  2D23               	goto	u11195
  7110  1D21  300A               	movlw	10
  7111  1D22  0255               	subwf	xtoa@c,w
  7112  1D23                     u11195:	
  7113  1D23  1C03               	skipc
  7114  1D24  2D29               	goto	l7810
  7115  1D25  0020               	movlb	0	; select bank0
  7116  1D26  0855               	movf	xtoa@c,w
  7117  1D27  3E57               	addlw	87
  7118  1D28  2D2C               	goto	L2
  7119  1D29                     l7810:	
  7120  1D29  0020               	movlb	0	; select bank0
  7121  1D2A  0855               	movf	xtoa@c,w
  7122  1D2B  3E30               	addlw	48
  7123  1D2C                     L2:	
  7124  1D2C  00D5               	movwf	xtoa@c
  7125  1D2D  3000               	movlw	0
  7126  1D2E  3D56               	addwfc	xtoa@c+1,w
  7127  1D2F  00D6               	movwf	xtoa@c+1
  7128  1D30  083A               	movf	xtoa@x,w
  7129  1D31  3EBF               	addlw	191
  7130  1D32  00BB               	movwf	??_xtoa
  7131  1D33  30FF               	movlw	255
  7132  1D34  1803               	skipnc
  7133  1D35  3000               	movlw	0
  7134  1D36  00BC               	movwf	??_xtoa+1
  7135  1D37  3000               	movlw	0
  7136  1D38  023C               	subwf	??_xtoa+1,w
  7137  1D39  301A               	movlw	26
  7138  1D3A  1903               	skipnz
  7139  1D3B  023B               	subwf	??_xtoa,w
  7140  1D3C  1803               	btfsc	3,0
  7141  1D3D  2D40               	goto	u11200
  7142  1D3E  3001               	movlw	1
  7143  1D3F  2D41               	goto	u11210
  7144  1D40                     u11200:	
  7145  1D40  3000               	movlw	0
  7146  1D41                     u11210:	
  7147  1D41  00BD               	movwf	??_xtoa+2
  7148  1D42  01BE               	clrf	??_xtoa+3
  7149  1D43  083D               	movf	??_xtoa+2,w
  7150  1D44  00C3               	movwf	_xtoa$1147
  7151  1D45  083E               	movf	??_xtoa+3,w
  7152  1D46  00C4               	movwf	_xtoa$1147+1
  7153  1D47  0843               	movf	_xtoa$1147,w
  7154  1D48  0444               	iorwf	_xtoa$1147+1,w
  7155  1D49  1903               	btfsc	3,2
  7156  1D4A  2D77               	goto	l7826
  7157  1D4B  3020               	movlw	32
  7158  1D4C  0455               	iorwf	xtoa@c,w
  7159  1D4D  00BB               	movwf	??_xtoa
  7160  1D4E  3000               	movlw	0
  7161  1D4F  0456               	iorwf	xtoa@c+1,w
  7162  1D50  00BC               	movwf	??_xtoa+1
  7163  1D51  083B               	movf	??_xtoa,w
  7164  1D52  3E9F               	addlw	159
  7165  1D53  00BD               	movwf	??_xtoa+2
  7166  1D54  30FF               	movlw	255
  7167  1D55  3D3C               	addwfc	??_xtoa+1,w
  7168  1D56  00BE               	movwf	??_xtoa+3
  7169  1D57  3000               	movlw	0
  7170  1D58  023E               	subwf	??_xtoa+3,w
  7171  1D59  301A               	movlw	26
  7172  1D5A  1903               	skipnz
  7173  1D5B  023D               	subwf	??_xtoa+2,w
  7174  1D5C  1803               	btfsc	3,0
  7175  1D5D  2D60               	goto	u11230
  7176  1D5E  3001               	movlw	1
  7177  1D5F  2D61               	goto	u11240
  7178  1D60                     u11230:	
  7179  1D60  3000               	movlw	0
  7180  1D61                     u11240:	
  7181  1D61  00BF               	movwf	??_xtoa+4
  7182  1D62  01C0               	clrf	??_xtoa+5
  7183  1D63  083F               	movf	??_xtoa+4,w
  7184  1D64  00C5               	movwf	_xtoa$1148
  7185  1D65  0840               	movf	??_xtoa+5,w
  7186  1D66  00C6               	movwf	_xtoa$1148+1
  7187  1D67  0845               	movf	_xtoa$1148,w
  7188  1D68  0446               	iorwf	_xtoa$1148+1,w
  7189  1D69  1903               	btfsc	3,2
  7190  1D6A  2D77               	goto	l7826
  7191                           
  7192                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  7193  1D6B  0856               	movf	xtoa@c+1,w
  7194  1D6C  00F8               	movwf	toupper@c+1
  7195  1D6D  0855               	movf	xtoa@c,w
  7196  1D6E  00F7               	movwf	toupper@c
  7197  1D6F  31B3  230B  319C   	fcall	_toupper
  7198  1D72  0878               	movf	?_toupper+1,w
  7199  1D73  0020               	movlb	0	; select bank0
  7200  1D74  00D6               	movwf	xtoa@c+1
  7201  1D75  0877               	movf	?_toupper,w
  7202  1D76  00D5               	movwf	xtoa@c
  7203  1D77                     l7826:	
  7204                           
  7205                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  7206  1D77  0855               	movf	xtoa@c,w
  7207  1D78  00BB               	movwf	??_xtoa
  7208  1D79  0853               	movf	xtoa@i,w
  7209  1D7A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7210  1D7B  0086               	movwf	6
  7211  1D7C  3002               	movlw	2	; select bank4/5
  7212  1D7D  0087               	movwf	7
  7213  1D7E  083B               	movf	??_xtoa,w
  7214  1D7F  0081               	movwf	1
  7215                           
  7216                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  7217  1D80  30FF               	movlw	255
  7218  1D81  07C7               	addwf	xtoa@p,f
  7219  1D82  30FF               	movlw	255
  7220  1D83  3DC8               	addwfc	xtoa@p+1,f
  7221                           
  7222                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  7223  1D84  30FF               	movlw	255
  7224  1D85  07C9               	addwf	xtoa@w,f
  7225  1D86  30FF               	movlw	255
  7226  1D87  3DCA               	addwfc	xtoa@w+1,f
  7227                           
  7228                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  7229  1D88  304B               	movlw	low xtoa@n
  7230  1D89  0086               	movwf	6
  7231  1D8A  3000               	movlw	high xtoa@n
  7232  1D8B  0087               	movwf	7
  7233  1D8C  3F40               	moviw [0]fsr1
  7234  1D8D  00BB               	movwf	??_xtoa
  7235  1D8E  3F41               	moviw [1]fsr1
  7236  1D8F  00BC               	movwf	??_xtoa+1
  7237  1D90  3F42               	moviw [2]fsr1
  7238  1D91  00BD               	movwf	??_xtoa+2
  7239  1D92  3F43               	moviw [3]fsr1
  7240  1D93  00BE               	movwf	??_xtoa+3
  7241  1D94  3F44               	moviw [4]fsr1
  7242  1D95  00BF               	movwf	??_xtoa+4
  7243  1D96  3F45               	moviw [5]fsr1
  7244  1D97  00C0               	movwf	??_xtoa+5
  7245  1D98  3F46               	moviw [6]fsr1
  7246  1D99  00C1               	movwf	??_xtoa+6
  7247  1D9A  3F47               	moviw [7]fsr1
  7248  1D9B  00C2               	movwf	??_xtoa+7
  7249  1D9C  3004               	movlw	4
  7250  1D9D                     u11265:	
  7251  1D9D  0020               	movlb	0	; select bank0
  7252  1D9E  36C2               	lsrf	??_xtoa+7,f
  7253  1D9F  0CC1               	rrf	??_xtoa+6,f
  7254  1DA0  0CC0               	rrf	??_xtoa+5,f
  7255  1DA1  0CBF               	rrf	??_xtoa+4,f
  7256  1DA2  0CBE               	rrf	??_xtoa+3,f
  7257  1DA3  0CBD               	rrf	??_xtoa+2,f
  7258  1DA4  0CBC               	rrf	??_xtoa+1,f
  7259  1DA5  0CBB               	rrf	??_xtoa,f
  7260  1DA6  0B89               	decfsz	9,f
  7261  1DA7  2D9D               	goto	u11265
  7262  1DA8  0020               	movlb	0	; select bank0
  7263  1DA9  0842               	movf	??_xtoa+7,w
  7264  1DAA  00D2               	movwf	xtoa@n+7
  7265  1DAB  0841               	movf	??_xtoa+6,w
  7266  1DAC  00D1               	movwf	xtoa@n+6
  7267  1DAD  0840               	movf	??_xtoa+5,w
  7268  1DAE  00D0               	movwf	xtoa@n+5
  7269  1DAF  083F               	movf	??_xtoa+4,w
  7270  1DB0  00CF               	movwf	xtoa@n+4
  7271  1DB1  083E               	movf	??_xtoa+3,w
  7272  1DB2  00CE               	movwf	xtoa@n+3
  7273  1DB3  083D               	movf	??_xtoa+2,w
  7274  1DB4  00CD               	movwf	xtoa@n+2
  7275  1DB5  083C               	movf	??_xtoa+1,w
  7276  1DB6  00CC               	movwf	xtoa@n+1
  7277  1DB7  083B               	movf	??_xtoa,w
  7278  1DB8  00CB               	movwf	xtoa@n
  7279  1DB9                     l7834:	
  7280                           
  7281                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7282  1DB9  0020               	movlb	0	; select bank0
  7283  1DBA  0854               	movf	xtoa@i+1,w
  7284  1DBB  3A80               	xorlw	128
  7285  1DBC  00BB               	movwf	??_xtoa
  7286  1DBD  3080               	movlw	128
  7287  1DBE  023B               	subwf	??_xtoa,w
  7288  1DBF  1D03               	skipz
  7289  1DC0  2DC3               	goto	u11275
  7290  1DC1  3002               	movlw	2
  7291  1DC2  0253               	subwf	xtoa@i,w
  7292  1DC3                     u11275:	
  7293  1DC3  1C03               	skipc
  7294  1DC4  2DEA               	goto	l777
  7295  1DC5  0020               	movlb	0	; select bank0
  7296  1DC6  084B               	movf	xtoa@n,w
  7297  1DC7  044C               	iorwf	xtoa@n+1,w
  7298  1DC8  044D               	iorwf	xtoa@n+2,w
  7299  1DC9  044E               	iorwf	xtoa@n+3,w
  7300  1DCA  044F               	iorwf	xtoa@n+4,w
  7301  1DCB  0450               	iorwf	xtoa@n+5,w
  7302  1DCC  0451               	iorwf	xtoa@n+6,w
  7303  1DCD  0452               	iorwf	xtoa@n+7,w
  7304  1DCE  1D03               	skipz
  7305  1DCF  2D0F               	goto	l7806
  7306  1DD0  0848               	movf	xtoa@p+1,w
  7307  1DD1  3A80               	xorlw	128
  7308  1DD2  00BB               	movwf	??_xtoa
  7309  1DD3  3080               	movlw	128
  7310  1DD4  023B               	subwf	??_xtoa,w
  7311  1DD5  1D03               	skipz
  7312  1DD6  2DD9               	goto	u11295
  7313  1DD7  3001               	movlw	1
  7314  1DD8  0247               	subwf	xtoa@p,w
  7315  1DD9                     u11295:	
  7316  1DD9  1803               	skipnc
  7317  1DDA  2D0F               	goto	l7806
  7318  1DDB  0020               	movlb	0	; select bank0
  7319  1DDC  084A               	movf	xtoa@w+1,w
  7320  1DDD  3A80               	xorlw	128
  7321  1DDE  00BB               	movwf	??_xtoa
  7322  1DDF  3080               	movlw	128
  7323  1DE0  023B               	subwf	??_xtoa,w
  7324  1DE1  1D03               	skipz
  7325  1DE2  2DE5               	goto	u11305
  7326  1DE3  3001               	movlw	1
  7327  1DE4  0249               	subwf	xtoa@w,w
  7328  1DE5                     u11305:	
  7329  1DE5  1C03               	skipc
  7330  1DE6  2DEA               	goto	l777
  7331  1DE7  0023               	movlb	3	; select bank3
  7332  1DE8  18C2               	btfsc	_flags^(0+384),1
  7333  1DE9  2D0F               	goto	l7806
  7334  1DEA                     l777:	
  7335                           
  7336                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  7337  1DEA  0023               	movlb	3	; select bank3
  7338  1DEB  1E42               	btfss	_flags^(0+384),4
  7339  1DEC  2E08               	goto	l7850
  7340                           
  7341                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  7342  1DED  30FF               	movlw	255
  7343  1DEE  0020               	movlb	0	; select bank0
  7344  1DEF  07D3               	addwf	xtoa@i,f
  7345  1DF0  30FF               	movlw	255
  7346  1DF1  3DD4               	addwfc	xtoa@i+1,f
  7347                           
  7348                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  7349  1DF2  083A               	movf	xtoa@x,w
  7350  1DF3  00BB               	movwf	??_xtoa
  7351  1DF4  0853               	movf	xtoa@i,w
  7352  1DF5  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7353  1DF6  0086               	movwf	6
  7354  1DF7  3002               	movlw	2	; select bank4/5
  7355  1DF8  0087               	movwf	7
  7356  1DF9  083B               	movf	??_xtoa,w
  7357  1DFA  0081               	movwf	1
  7358                           
  7359                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  7360  1DFB  30FF               	movlw	255
  7361  1DFC  07D3               	addwf	xtoa@i,f
  7362  1DFD  30FF               	movlw	255
  7363  1DFE  3DD4               	addwfc	xtoa@i+1,f
  7364                           
  7365                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  7366  1DFF  3030               	movlw	48
  7367  1E00  00BB               	movwf	??_xtoa
  7368  1E01  0853               	movf	xtoa@i,w
  7369  1E02  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7370  1E03  0086               	movwf	6
  7371  1E04  3002               	movlw	2	; select bank4/5
  7372  1E05  0087               	movwf	7
  7373  1E06  083B               	movf	??_xtoa,w
  7374  1E07  0081               	movwf	1
  7375  1E08                     l7850:	
  7376                           
  7377                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  7378  1E08  0020               	movlb	0	; select bank0
  7379  1E09  0831               	movf	xtoa@fp+1,w
  7380  1E0A  00A7               	movwf	pad@fp+1
  7381  1E0B  0830               	movf	xtoa@fp,w
  7382  1E0C  00A6               	movwf	pad@fp
  7383  1E0D  0853               	movf	xtoa@i,w
  7384  1E0E  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7385  1E0F  00BB               	movwf	??_xtoa
  7386  1E10  083B               	movf	??_xtoa,w
  7387  1E11  00A8               	movwf	pad@buf
  7388  1E12  084A               	movf	xtoa@w+1,w
  7389  1E13  00AA               	movwf	pad@p+1
  7390  1E14  0849               	movf	xtoa@w,w
  7391  1E15  00A9               	movwf	pad@p
  7392  1E16  31B5  256D         	fcall	_pad
  7393  1E18  0020               	movlb	0	; select bank0
  7394  1E19  0827               	movf	?_pad+1,w
  7395  1E1A  00B1               	movwf	?_xtoa+1
  7396  1E1B  0826               	movf	?_pad,w
  7397  1E1C  00B0               	movwf	?_xtoa
  7398  1E1D  0008               	return
  7399  1E1E                     __end_of_xtoa:	
  7400                           
  7401                           	psect	text8
  7402  330B                     __ptext8:	
  7403 ;; *************** function _toupper *****************
  7404 ;; Defined at:
  7405 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  7406 ;; Parameters:    Size  Location     Type
  7407 ;;  c               2    7[COMMON] int 
  7408 ;; Auto vars:     Size  Location     Type
  7409 ;;		None
  7410 ;; Return value:  Size  Location     Type
  7411 ;;                  2    7[COMMON] int 
  7412 ;; Registers used:
  7413 ;;		wreg, status,2, status,0
  7414 ;; Tracked objects:
  7415 ;;		On entry : 0/0
  7416 ;;		On exit  : 0/0
  7417 ;;		Unchanged: 0/0
  7418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7419 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7420 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7421 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7422 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7423 ;;Total ram usage:        8 bytes
  7424 ;; Hardware stack levels used:    1
  7425 ;; Hardware stack levels required when called:    2
  7426 ;; This function calls:
  7427 ;;		_islower
  7428 ;; This function is called by:
  7429 ;;		_xtoa
  7430 ;; This function uses a non-reentrant model
  7431 ;;
  7432                           
  7433                           
  7434                           ;psect for function _toupper
  7435  330B                     _toupper:	
  7436                           
  7437                           ;incstack = 0
  7438                           ; Regs used in _toupper: [wreg+status,2+status,0]
  7439  330B  0877               	movf	toupper@c,w
  7440  330C  3E9F               	addlw	159
  7441  330D  0020               	movlb	0	; select bank0
  7442  330E  00A0               	movwf	??_toupper
  7443  330F  30FF               	movlw	255
  7444  3310  3D78               	addwfc	toupper@c+1,w
  7445  3311  00A1               	movwf	??_toupper+1
  7446  3312  3000               	movlw	0
  7447  3313  0221               	subwf	??_toupper+1,w
  7448  3314  301A               	movlw	26
  7449  3315  1903               	skipnz
  7450  3316  0220               	subwf	??_toupper,w
  7451  3317  1803               	btfsc	3,0
  7452  3318  2B1B               	goto	u10150
  7453  3319  3001               	movlw	1
  7454  331A  2B1C               	goto	u10160
  7455  331B                     u10150:	
  7456  331B  3000               	movlw	0
  7457  331C                     u10160:	
  7458  331C  00A2               	movwf	??_toupper+2
  7459  331D  01A3               	clrf	??_toupper+3
  7460  331E  0822               	movf	??_toupper+2,w
  7461  331F  00F9               	movwf	_toupper$1754
  7462  3320  0823               	movf	??_toupper+3,w
  7463  3321  00FA               	movwf	_toupper$1754+1
  7464  3322  0879               	movf	_toupper$1754,w
  7465  3323  047A               	iorwf	_toupper$1754+1,w
  7466  3324  1903               	btfsc	3,2
  7467  3325  0008               	return
  7468  3326  305F               	movlw	95
  7469  3327  0577               	andwf	toupper@c,w
  7470  3328  00F7               	movwf	?_toupper
  7471  3329  3000               	movlw	0
  7472  332A  0578               	andwf	toupper@c+1,w
  7473  332B  00F8               	movwf	?_toupper+1
  7474  332C  0008               	return
  7475  332D                     __end_of_toupper:	
  7476                           
  7477                           	psect	text9
  7478  31AA                     __ptext9:	
  7479 ;; *************** function _islower *****************
  7480 ;; Defined at:
  7481 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  7482 ;; Parameters:    Size  Location     Type
  7483 ;;  c               2    1[COMMON] int 
  7484 ;; Auto vars:     Size  Location     Type
  7485 ;;		None
  7486 ;; Return value:  Size  Location     Type
  7487 ;;                  2    1[COMMON] int 
  7488 ;; Registers used:
  7489 ;;		wreg, status,2, status,0
  7490 ;; Tracked objects:
  7491 ;;		On entry : 0/0
  7492 ;;		On exit  : 0/0
  7493 ;;		Unchanged: 0/0
  7494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7495 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7497 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7498 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7499 ;;Total ram usage:        6 bytes
  7500 ;; Hardware stack levels used:    1
  7501 ;; Hardware stack levels required when called:    1
  7502 ;; This function calls:
  7503 ;;		Nothing
  7504 ;; This function is called by:
  7505 ;;		_toupper
  7506 ;; This function uses a non-reentrant model
  7507 ;;
  7508                           
  7509                           
  7510                           ;psect for function _islower
  7511  31AA                     _islower:	
  7512                           
  7513                           ;incstack = 0
  7514                           ; Regs used in _islower: [wreg+status,2+status,0]
  7515  31AA  0871               	movf	islower@c,w
  7516  31AB  3E9F               	addlw	159
  7517  31AC  00F3               	movwf	??_islower
  7518  31AD  30FF               	movlw	255
  7519  31AE  3D72               	addwfc	islower@c+1,w
  7520  31AF  00F4               	movwf	??_islower+1
  7521  31B0  3000               	movlw	0
  7522  31B1  0274               	subwf	??_islower+1,w
  7523  31B2  301A               	movlw	26
  7524  31B3  1903               	skipnz
  7525  31B4  0273               	subwf	??_islower,w
  7526  31B5  1803               	btfsc	3,0
  7527  31B6  29B9               	goto	u10060
  7528  31B7  3001               	movlw	1
  7529  31B8  29BA               	goto	u10070
  7530  31B9                     u10060:	
  7531  31B9  3000               	movlw	0
  7532  31BA                     u10070:	
  7533  31BA  00F5               	movwf	??_islower+2
  7534  31BB  01F6               	clrf	??_islower+3
  7535  31BC  0875               	movf	??_islower+2,w
  7536  31BD  00F1               	movwf	?_islower
  7537  31BE  0876               	movf	??_islower+3,w
  7538  31BF  00F2               	movwf	?_islower+1
  7539  31C0  0008               	return
  7540  31C1                     __end_of_islower:	
  7541                           
  7542                           	psect	text10
  7543  320E                     __ptext10:	
  7544 ;; *************** function _isalpha *****************
  7545 ;; Defined at:
  7546 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  7547 ;; Parameters:    Size  Location     Type
  7548 ;;  c               2    1[COMMON] int 
  7549 ;; Auto vars:     Size  Location     Type
  7550 ;;		None
  7551 ;; Return value:  Size  Location     Type
  7552 ;;                  2    1[COMMON] int 
  7553 ;; Registers used:
  7554 ;;		wreg, status,2, status,0
  7555 ;; Tracked objects:
  7556 ;;		On entry : 0/0
  7557 ;;		On exit  : 0/0
  7558 ;;		Unchanged: 0/0
  7559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7560 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7562 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7563 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7564 ;;Total ram usage:        8 bytes
  7565 ;; Hardware stack levels used:    1
  7566 ;; Hardware stack levels required when called:    1
  7567 ;; This function calls:
  7568 ;;		Nothing
  7569 ;; This function is called by:
  7570 ;;		_xtoa
  7571 ;; This function uses a non-reentrant model
  7572 ;;
  7573                           
  7574                           
  7575                           ;psect for function _isalpha
  7576  320E                     _isalpha:	
  7577                           
  7578                           ;incstack = 0
  7579                           ; Regs used in _isalpha: [wreg+status,2+status,0]
  7580  320E  3020               	movlw	32
  7581  320F  0471               	iorwf	isalpha@c,w
  7582  3210  00F3               	movwf	??_isalpha
  7583  3211  3000               	movlw	0
  7584  3212  0472               	iorwf	isalpha@c+1,w
  7585  3213  00F4               	movwf	??_isalpha+1
  7586  3214  0873               	movf	??_isalpha,w
  7587  3215  3E9F               	addlw	159
  7588  3216  00F5               	movwf	??_isalpha+2
  7589  3217  30FF               	movlw	255
  7590  3218  3D74               	addwfc	??_isalpha+1,w
  7591  3219  00F6               	movwf	??_isalpha+3
  7592  321A  3000               	movlw	0
  7593  321B  0276               	subwf	??_isalpha+3,w
  7594  321C  301A               	movlw	26
  7595  321D  1903               	skipnz
  7596  321E  0275               	subwf	??_isalpha+2,w
  7597  321F  1803               	btfsc	3,0
  7598  3220  2A23               	goto	u5670
  7599  3221  3001               	movlw	1
  7600  3222  2A24               	goto	u5680
  7601  3223                     u5670:	
  7602  3223  3000               	movlw	0
  7603  3224                     u5680:	
  7604  3224  00F7               	movwf	??_isalpha+4
  7605  3225  01F8               	clrf	??_isalpha+5
  7606  3226  0877               	movf	??_isalpha+4,w
  7607  3227  00F1               	movwf	?_isalpha
  7608  3228  0878               	movf	??_isalpha+5,w
  7609  3229  00F2               	movwf	?_isalpha+1
  7610  322A  0008               	return
  7611  322B                     __end_of_isalpha:	
  7612                           
  7613                           	psect	text11
  7614  2455                     __ptext11:	
  7615 ;; *************** function _utoa *****************
  7616 ;; Defined at:
  7617 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7618 ;; Parameters:    Size  Location     Type
  7619 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  7620 ;;		 -> vsnprintf@f(6), 
  7621 ;;  d               8   18[BANK0 ] unsigned long long 
  7622 ;; Auto vars:     Size  Location     Type
  7623 ;;  n               8   31[BANK0 ] unsigned long long 
  7624 ;;  i               2   39[BANK0 ] int 
  7625 ;;  w               2   29[BANK0 ] int 
  7626 ;;  p               2   27[BANK0 ] int 
  7627 ;; Return value:  Size  Location     Type
  7628 ;;                  2   16[BANK0 ] int 
  7629 ;; Registers used:
  7630 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7631 ;; Tracked objects:
  7632 ;;		On entry : 0/0
  7633 ;;		On exit  : 0/0
  7634 ;;		Unchanged: 0/0
  7635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7636 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7637 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7638 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7639 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7640 ;;Total ram usage:       25 bytes
  7641 ;; Hardware stack levels used:    1
  7642 ;; Hardware stack levels required when called:    5
  7643 ;; This function calls:
  7644 ;;		___lodiv
  7645 ;;		___lomod
  7646 ;;		_pad
  7647 ;; This function is called by:
  7648 ;;		_vfpfcnvrt
  7649 ;; This function uses a non-reentrant model
  7650 ;;
  7651                           
  7652                           
  7653                           ;psect for function _utoa
  7654  2455                     _utoa:	
  7655                           
  7656                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  7657                           
  7658                           ;incstack = 0
  7659                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7660  2455  0023               	movlb	3	; select bank3
  7661  2456  1BC1               	btfsc	(_prec+1)^(0+384),7
  7662  2457  2C5C               	goto	l737
  7663                           
  7664                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  7665  2458  30FD               	movlw	253
  7666  2459  05C2               	andwf	_flags^(0+384),f
  7667  245A  30FF               	movlw	255
  7668  245B  05C3               	andwf	(_flags+1)^(0+384),f
  7669  245C                     l737:	
  7670                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 601:     }
  7671                           
  7672                           
  7673                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  7674  245C  0841               	movf	(_prec+1)^(0+384),w
  7675  245D  3A80               	xorlw	128
  7676  245E  0020               	movlb	0	; select bank0
  7677  245F  00BA               	movwf	??_utoa
  7678  2460  3080               	movlw	128
  7679  2461  023A               	subwf	??_utoa,w
  7680  2462  1D03               	skipz
  7681  2463  2C67               	goto	u11105
  7682  2464  3001               	movlw	1
  7683  2465  0023               	movlb	3	; select bank3
  7684  2466  0240               	subwf	_prec^(0+384),w
  7685  2467                     u11105:	
  7686  2467  1803               	skipnc
  7687  2468  2C6F               	goto	l7760
  7688  2469  3001               	movlw	1
  7689  246A  0020               	movlb	0	; select bank0
  7690  246B  00BB               	movwf	utoa@p
  7691  246C  3000               	movlw	0
  7692  246D  00BC               	movwf	utoa@p+1
  7693  246E  2C77               	goto	l741
  7694  246F                     l7760:	
  7695  246F  0023               	movlb	3	; select bank3
  7696  2470  0841               	movf	(_prec+1)^(0+384),w
  7697  2471  0020               	movlb	0	; select bank0
  7698  2472  00BC               	movwf	utoa@p+1
  7699  2473  0023               	movlb	3	; select bank3
  7700  2474  0840               	movf	_prec^(0+384),w
  7701  2475  0020               	movlb	0	; select bank0
  7702  2476  00BB               	movwf	utoa@p
  7703  2477                     l741:	
  7704                           
  7705                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  7706  2477  0023               	movlb	3	; select bank3
  7707  2478  083F               	movf	(_width+1)^(0+384),w
  7708  2479  0020               	movlb	0	; select bank0
  7709  247A  00BE               	movwf	utoa@w+1
  7710  247B  0023               	movlb	3	; select bank3
  7711  247C  083E               	movf	_width^(0+384),w
  7712  247D  0020               	movlb	0	; select bank0
  7713  247E  00BD               	movwf	utoa@w
  7714                           
  7715                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  7716  247F  0832               	movf	utoa@d,w
  7717  2480  00BF               	movwf	utoa@n
  7718  2481  0833               	movf	utoa@d+1,w
  7719  2482  00C0               	movwf	utoa@n+1
  7720  2483  0834               	movf	utoa@d+2,w
  7721  2484  00C1               	movwf	utoa@n+2
  7722  2485  0835               	movf	utoa@d+3,w
  7723  2486  00C2               	movwf	utoa@n+3
  7724  2487  0836               	movf	utoa@d+4,w
  7725  2488  00C3               	movwf	utoa@n+4
  7726  2489  0837               	movf	utoa@d+5,w
  7727  248A  00C4               	movwf	utoa@n+5
  7728  248B  0838               	movf	utoa@d+6,w
  7729  248C  00C5               	movwf	utoa@n+6
  7730  248D  0839               	movf	utoa@d+7,w
  7731  248E  00C6               	movwf	utoa@n+7
  7732                           
  7733                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  7734  248F  304F               	movlw	79
  7735  2490  00C7               	movwf	utoa@i
  7736  2491  3000               	movlw	0
  7737  2492  00C8               	movwf	utoa@i+1
  7738                           
  7739                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  7740  2493  0024               	movlb	4	; select bank4
  7741  2494  01EF               	clrf	(_dbuf^(0+512)+79)
  7742                           
  7743                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7744  2495  2D1B               	goto	l7776
  7745  2496                     l7778:	
  7746  2496  083F               	movf	utoa@n,w
  7747  2497  0440               	iorwf	utoa@n+1,w
  7748  2498  0441               	iorwf	utoa@n+2,w
  7749  2499  0442               	iorwf	utoa@n+3,w
  7750  249A  0443               	iorwf	utoa@n+4,w
  7751  249B  0444               	iorwf	utoa@n+5,w
  7752  249C  0445               	iorwf	utoa@n+6,w
  7753  249D  0446               	iorwf	utoa@n+7,w
  7754  249E  1D03               	skipz
  7755  249F  2CBA               	goto	l7766
  7756  24A0  083C               	movf	utoa@p+1,w
  7757  24A1  3A80               	xorlw	128
  7758  24A2  00BA               	movwf	??_utoa
  7759  24A3  3080               	movlw	128
  7760  24A4  023A               	subwf	??_utoa,w
  7761  24A5  1D03               	skipz
  7762  24A6  2CA9               	goto	u11135
  7763  24A7  3001               	movlw	1
  7764  24A8  023B               	subwf	utoa@p,w
  7765  24A9                     u11135:	
  7766  24A9  1803               	skipnc
  7767  24AA  2CBA               	goto	l7766
  7768  24AB  0020               	movlb	0	; select bank0
  7769  24AC  083E               	movf	utoa@w+1,w
  7770  24AD  3A80               	xorlw	128
  7771  24AE  00BA               	movwf	??_utoa
  7772  24AF  3080               	movlw	128
  7773  24B0  023A               	subwf	??_utoa,w
  7774  24B1  1D03               	skipz
  7775  24B2  2CB5               	goto	u11145
  7776  24B3  3001               	movlw	1
  7777  24B4  023D               	subwf	utoa@w,w
  7778  24B5                     u11145:	
  7779  24B5  1C03               	skipc
  7780  24B6  2D20               	goto	l7786
  7781  24B7  0023               	movlb	3	; select bank3
  7782  24B8  1CC2               	btfss	_flags^(0+384),1
  7783  24B9  2D20               	goto	l7786
  7784  24BA                     l7766:	
  7785                           
  7786                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  7787  24BA  30FF               	movlw	255
  7788  24BB  0020               	movlb	0	; select bank0
  7789  24BC  07C7               	addwf	utoa@i,f
  7790  24BD  30FF               	movlw	255
  7791  24BE  3DC8               	addwfc	utoa@i+1,f
  7792                           
  7793                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  7794  24BF  300A               	movlw	10
  7795  24C0  00A0               	movwf	___lomod@divisor
  7796  24C1  01A1               	clrf	___lomod@divisor+1
  7797  24C2  01A2               	clrf	___lomod@divisor+2
  7798  24C3  01A3               	clrf	___lomod@divisor+3
  7799  24C4  01A4               	clrf	___lomod@divisor+4
  7800  24C5  01A5               	clrf	___lomod@divisor+5
  7801  24C6  01A6               	clrf	___lomod@divisor+6
  7802  24C7  01A7               	clrf	___lomod@divisor+7
  7803  24C8  083F               	movf	utoa@n,w
  7804  24C9  00A8               	movwf	___lomod@dividend
  7805  24CA  0840               	movf	utoa@n+1,w
  7806  24CB  00A9               	movwf	___lomod@dividend+1
  7807  24CC  0841               	movf	utoa@n+2,w
  7808  24CD  00AA               	movwf	___lomod@dividend+2
  7809  24CE  0842               	movf	utoa@n+3,w
  7810  24CF  00AB               	movwf	___lomod@dividend+3
  7811  24D0  0843               	movf	utoa@n+4,w
  7812  24D1  00AC               	movwf	___lomod@dividend+4
  7813  24D2  0844               	movf	utoa@n+5,w
  7814  24D3  00AD               	movwf	___lomod@dividend+5
  7815  24D4  0845               	movf	utoa@n+6,w
  7816  24D5  00AE               	movwf	___lomod@dividend+6
  7817  24D6  0846               	movf	utoa@n+7,w
  7818  24D7  00AF               	movwf	___lomod@dividend+7
  7819  24D8  31B7  271F  31A4   	fcall	___lomod
  7820  24DB  0020               	movlb	0	; select bank0
  7821  24DC  0820               	movf	?___lomod,w
  7822  24DD  3E30               	addlw	48
  7823  24DE  00BA               	movwf	??_utoa
  7824  24DF  0847               	movf	utoa@i,w
  7825  24E0  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7826  24E1  0086               	movwf	6
  7827  24E2  3002               	movlw	2	; select bank4/5
  7828  24E3  0087               	movwf	7
  7829  24E4  083A               	movf	??_utoa,w
  7830  24E5  0081               	movwf	1
  7831                           
  7832                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  7833  24E6  30FF               	movlw	255
  7834  24E7  07BB               	addwf	utoa@p,f
  7835  24E8  30FF               	movlw	255
  7836  24E9  3DBC               	addwfc	utoa@p+1,f
  7837                           
  7838                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  7839  24EA  30FF               	movlw	255
  7840  24EB  07BD               	addwf	utoa@w,f
  7841  24EC  30FF               	movlw	255
  7842  24ED  3DBE               	addwfc	utoa@w+1,f
  7843                           
  7844                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  7845  24EE  300A               	movlw	10
  7846  24EF  00A0               	movwf	___lodiv@divisor
  7847  24F0  01A1               	clrf	___lodiv@divisor+1
  7848  24F1  01A2               	clrf	___lodiv@divisor+2
  7849  24F2  01A3               	clrf	___lodiv@divisor+3
  7850  24F3  01A4               	clrf	___lodiv@divisor+4
  7851  24F4  01A5               	clrf	___lodiv@divisor+5
  7852  24F5  01A6               	clrf	___lodiv@divisor+6
  7853  24F6  01A7               	clrf	___lodiv@divisor+7
  7854  24F7  083F               	movf	utoa@n,w
  7855  24F8  00A8               	movwf	___lodiv@dividend
  7856  24F9  0840               	movf	utoa@n+1,w
  7857  24FA  00A9               	movwf	___lodiv@dividend+1
  7858  24FB  0841               	movf	utoa@n+2,w
  7859  24FC  00AA               	movwf	___lodiv@dividend+2
  7860  24FD  0842               	movf	utoa@n+3,w
  7861  24FE  00AB               	movwf	___lodiv@dividend+3
  7862  24FF  0843               	movf	utoa@n+4,w
  7863  2500  00AC               	movwf	___lodiv@dividend+4
  7864  2501  0844               	movf	utoa@n+5,w
  7865  2502  00AD               	movwf	___lodiv@dividend+5
  7866  2503  0845               	movf	utoa@n+6,w
  7867  2504  00AE               	movwf	___lodiv@dividend+6
  7868  2505  0846               	movf	utoa@n+7,w
  7869  2506  00AF               	movwf	___lodiv@dividend+7
  7870  2507  31A8  20AC  31A4   	fcall	___lodiv
  7871  250A  0020               	movlb	0	; select bank0
  7872  250B  0820               	movf	?___lodiv,w
  7873  250C  00BF               	movwf	utoa@n
  7874  250D  0821               	movf	?___lodiv+1,w
  7875  250E  00C0               	movwf	utoa@n+1
  7876  250F  0822               	movf	?___lodiv+2,w
  7877  2510  00C1               	movwf	utoa@n+2
  7878  2511  0823               	movf	?___lodiv+3,w
  7879  2512  00C2               	movwf	utoa@n+3
  7880  2513  0824               	movf	?___lodiv+4,w
  7881  2514  00C3               	movwf	utoa@n+4
  7882  2515  0825               	movf	?___lodiv+5,w
  7883  2516  00C4               	movwf	utoa@n+5
  7884  2517  0826               	movf	?___lodiv+6,w
  7885  2518  00C5               	movwf	utoa@n+6
  7886  2519  0827               	movf	?___lodiv+7,w
  7887  251A  00C6               	movwf	utoa@n+7
  7888  251B                     l7776:	
  7889                           
  7890                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7891  251B  0020               	movlb	0	; select bank0
  7892  251C  0847               	movf	utoa@i,w
  7893  251D  0448               	iorwf	utoa@i+1,w
  7894  251E  1D03               	btfss	3,2
  7895  251F  2C96               	goto	l7778
  7896  2520                     l7786:	
  7897                           
  7898                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  7899  2520  0020               	movlb	0	; select bank0
  7900  2521  0831               	movf	utoa@fp+1,w
  7901  2522  00A7               	movwf	pad@fp+1
  7902  2523  0830               	movf	utoa@fp,w
  7903  2524  00A6               	movwf	pad@fp
  7904  2525  0847               	movf	utoa@i,w
  7905  2526  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7906  2527  00BA               	movwf	??_utoa
  7907  2528  083A               	movf	??_utoa,w
  7908  2529  00A8               	movwf	pad@buf
  7909  252A  083E               	movf	utoa@w+1,w
  7910  252B  00AA               	movwf	pad@p+1
  7911  252C  083D               	movf	utoa@w,w
  7912  252D  00A9               	movwf	pad@p
  7913  252E  31B5  256D         	fcall	_pad
  7914  2530  0020               	movlb	0	; select bank0
  7915  2531  0827               	movf	?_pad+1,w
  7916  2532  00B1               	movwf	?_utoa+1
  7917  2533  0826               	movf	?_pad,w
  7918  2534  00B0               	movwf	?_utoa
  7919  2535  0008               	return
  7920  2536                     __end_of_utoa:	
  7921                           
  7922                           	psect	text12
  7923  371F                     __ptext12:	
  7924 ;; *************** function ___lomod *****************
  7925 ;; Defined at:
  7926 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  7927 ;; Parameters:    Size  Location     Type
  7928 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7929 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7930 ;; Auto vars:     Size  Location     Type
  7931 ;;  counter         1    2[COMMON] unsigned char 
  7932 ;; Return value:  Size  Location     Type
  7933 ;;                  8    0[BANK0 ] unsigned long long 
  7934 ;; Registers used:
  7935 ;;		wreg, status,2, status,0
  7936 ;; Tracked objects:
  7937 ;;		On entry : 0/0
  7938 ;;		On exit  : 0/0
  7939 ;;		Unchanged: 0/0
  7940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7941 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7942 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7943 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7944 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7945 ;;Total ram usage:       18 bytes
  7946 ;; Hardware stack levels used:    1
  7947 ;; Hardware stack levels required when called:    1
  7948 ;; This function calls:
  7949 ;;		Nothing
  7950 ;; This function is called by:
  7951 ;;		_utoa
  7952 ;; This function uses a non-reentrant model
  7953 ;;
  7954                           
  7955                           
  7956                           ;psect for function ___lomod
  7957  371F                     ___lomod:	
  7958                           
  7959                           ;incstack = 0
  7960                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  7961  371F  0020               	movlb	0	; select bank0
  7962  3720  0820               	movf	___lomod@divisor,w
  7963  3721  0421               	iorwf	___lomod@divisor+1,w
  7964  3722  0422               	iorwf	___lomod@divisor+2,w
  7965  3723  0423               	iorwf	___lomod@divisor+3,w
  7966  3724  0424               	iorwf	___lomod@divisor+4,w
  7967  3725  0425               	iorwf	___lomod@divisor+5,w
  7968  3726  0426               	iorwf	___lomod@divisor+6,w
  7969  3727  0427               	iorwf	___lomod@divisor+7,w
  7970  3728  1903               	skipnz
  7971  3729  2F77               	goto	l1127
  7972  372A  01F2               	clrf	___lomod@counter
  7973  372B  0AF2               	incf	___lomod@counter,f
  7974  372C                     l4950:	
  7975  372C  1BA7               	btfsc	___lomod@divisor+7,7
  7976  372D  2F3B               	goto	l4952
  7977  372E  35A0               	lslf	___lomod@divisor,f
  7978  372F  0DA1               	rlf	___lomod@divisor+1,f
  7979  3730  0DA2               	rlf	___lomod@divisor+2,f
  7980  3731  0DA3               	rlf	___lomod@divisor+3,f
  7981  3732  0DA4               	rlf	___lomod@divisor+4,f
  7982  3733  0DA5               	rlf	___lomod@divisor+5,f
  7983  3734  0DA6               	rlf	___lomod@divisor+6,f
  7984  3735  0DA7               	rlf	___lomod@divisor+7,f
  7985  3736  3001               	movlw	1
  7986  3737  00F1               	movwf	??___lomod
  7987  3738  0871               	movf	??___lomod,w
  7988  3739  07F2               	addwf	___lomod@counter,f
  7989  373A  2F2C               	goto	l4950
  7990  373B                     l4952:	
  7991  373B  0827               	movf	___lomod@divisor+7,w
  7992  373C  022F               	subwf	___lomod@dividend+7,w
  7993  373D  1D03               	skipz
  7994  373E  2F59               	goto	u6445
  7995  373F  0826               	movf	___lomod@divisor+6,w
  7996  3740  022E               	subwf	___lomod@dividend+6,w
  7997  3741  1D03               	skipz
  7998  3742  2F59               	goto	u6445
  7999  3743  0825               	movf	___lomod@divisor+5,w
  8000  3744  022D               	subwf	___lomod@dividend+5,w
  8001  3745  1D03               	skipz
  8002  3746  2F59               	goto	u6445
  8003  3747  0824               	movf	___lomod@divisor+4,w
  8004  3748  022C               	subwf	___lomod@dividend+4,w
  8005  3749  1D03               	skipz
  8006  374A  2F59               	goto	u6445
  8007  374B  0823               	movf	___lomod@divisor+3,w
  8008  374C  022B               	subwf	___lomod@dividend+3,w
  8009  374D  1D03               	skipz
  8010  374E  2F59               	goto	u6445
  8011  374F  0822               	movf	___lomod@divisor+2,w
  8012  3750  022A               	subwf	___lomod@dividend+2,w
  8013  3751  1D03               	skipz
  8014  3752  2F59               	goto	u6445
  8015  3753  0821               	movf	___lomod@divisor+1,w
  8016  3754  0229               	subwf	___lomod@dividend+1,w
  8017  3755  1D03               	skipz
  8018  3756  2F59               	goto	u6445
  8019  3757  0820               	movf	___lomod@divisor,w
  8020  3758  0228               	subwf	___lomod@dividend,w
  8021  3759                     u6445:	
  8022  3759  1C03               	skipc
  8023  375A  2F6B               	goto	l4956
  8024  375B  0820               	movf	___lomod@divisor,w
  8025  375C  02A8               	subwf	___lomod@dividend,f
  8026  375D  0821               	movf	___lomod@divisor+1,w
  8027  375E  3BA9               	subwfb	___lomod@dividend+1,f
  8028  375F  0822               	movf	___lomod@divisor+2,w
  8029  3760  3BAA               	subwfb	___lomod@dividend+2,f
  8030  3761  0823               	movf	___lomod@divisor+3,w
  8031  3762  3BAB               	subwfb	___lomod@dividend+3,f
  8032  3763  0824               	movf	___lomod@divisor+4,w
  8033  3764  3BAC               	subwfb	___lomod@dividend+4,f
  8034  3765  0825               	movf	___lomod@divisor+5,w
  8035  3766  3BAD               	subwfb	___lomod@dividend+5,f
  8036  3767  0826               	movf	___lomod@divisor+6,w
  8037  3768  3BAE               	subwfb	___lomod@dividend+6,f
  8038  3769  0827               	movf	___lomod@divisor+7,w
  8039  376A  3BAF               	subwfb	___lomod@dividend+7,f
  8040  376B                     l4956:	
  8041  376B  36A7               	lsrf	___lomod@divisor+7,f
  8042  376C  0CA6               	rrf	___lomod@divisor+6,f
  8043  376D  0CA5               	rrf	___lomod@divisor+5,f
  8044  376E  0CA4               	rrf	___lomod@divisor+4,f
  8045  376F  0CA3               	rrf	___lomod@divisor+3,f
  8046  3770  0CA2               	rrf	___lomod@divisor+2,f
  8047  3771  0CA1               	rrf	___lomod@divisor+1,f
  8048  3772  0CA0               	rrf	___lomod@divisor,f
  8049  3773  3001               	movlw	1
  8050  3774  02F2               	subwf	___lomod@counter,f
  8051  3775  1D03               	btfss	3,2
  8052  3776  2F3B               	goto	l4952
  8053  3777                     l1127:	
  8054  3777  0828               	movf	___lomod@dividend,w
  8055  3778  00A0               	movwf	?___lomod
  8056  3779  0829               	movf	___lomod@dividend+1,w
  8057  377A  00A1               	movwf	?___lomod+1
  8058  377B  082A               	movf	___lomod@dividend+2,w
  8059  377C  00A2               	movwf	?___lomod+2
  8060  377D  082B               	movf	___lomod@dividend+3,w
  8061  377E  00A3               	movwf	?___lomod+3
  8062  377F  082C               	movf	___lomod@dividend+4,w
  8063  3780  00A4               	movwf	?___lomod+4
  8064  3781  082D               	movf	___lomod@dividend+5,w
  8065  3782  00A5               	movwf	?___lomod+5
  8066  3783  082E               	movf	___lomod@dividend+6,w
  8067  3784  00A6               	movwf	?___lomod+6
  8068  3785  082F               	movf	___lomod@dividend+7,w
  8069  3786  00A7               	movwf	?___lomod+7
  8070  3787  0008               	return
  8071  3788                     __end_of___lomod:	
  8072                           
  8073                           	psect	text13
  8074  28AC                     __ptext13:	
  8075 ;; *************** function ___lodiv *****************
  8076 ;; Defined at:
  8077 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  8078 ;; Parameters:    Size  Location     Type
  8079 ;;  divisor         8    0[BANK0 ] unsigned long long 
  8080 ;;  dividend        8    8[BANK0 ] unsigned long long 
  8081 ;; Auto vars:     Size  Location     Type
  8082 ;;  quotient        8    2[COMMON] unsigned long long 
  8083 ;;  counter         1   10[COMMON] unsigned char 
  8084 ;; Return value:  Size  Location     Type
  8085 ;;                  8    0[BANK0 ] unsigned long long 
  8086 ;; Registers used:
  8087 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8088 ;; Tracked objects:
  8089 ;;		On entry : 0/0
  8090 ;;		On exit  : 0/0
  8091 ;;		Unchanged: 0/0
  8092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8093 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8094 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8095 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8096 ;;      Totals:        10      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8097 ;;Total ram usage:       26 bytes
  8098 ;; Hardware stack levels used:    1
  8099 ;; Hardware stack levels required when called:    1
  8100 ;; This function calls:
  8101 ;;		Nothing
  8102 ;; This function is called by:
  8103 ;;		_utoa
  8104 ;; This function uses a non-reentrant model
  8105 ;;
  8106                           
  8107                           
  8108                           ;psect for function ___lodiv
  8109  28AC                     ___lodiv:	
  8110                           
  8111                           ;incstack = 0
  8112                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  8113  28AC  3072               	movlw	low ___lodiv@quotient
  8114  28AD  0086               	movwf	6
  8115  28AE  3000               	movlw	high ___lodiv@quotient
  8116  28AF  0087               	movwf	7
  8117  28B0  3008               	movlw	8
  8118  28B1  00F1               	movwf	??___lodiv
  8119  28B2  3000               	movlw	0
  8120  28B3                     u6370:	
  8121  28B3  001E               	movwi fsr1++
  8122  28B4  0BF1               	decfsz	??___lodiv,f
  8123  28B5  28B3               	goto	u6370
  8124  28B6  0020               	movlb	0	; select bank0
  8125  28B7  0820               	movf	___lodiv@divisor,w
  8126  28B8  0421               	iorwf	___lodiv@divisor+1,w
  8127  28B9  0422               	iorwf	___lodiv@divisor+2,w
  8128  28BA  0423               	iorwf	___lodiv@divisor+3,w
  8129  28BB  0424               	iorwf	___lodiv@divisor+4,w
  8130  28BC  0425               	iorwf	___lodiv@divisor+5,w
  8131  28BD  0426               	iorwf	___lodiv@divisor+6,w
  8132  28BE  0427               	iorwf	___lodiv@divisor+7,w
  8133  28BF  1903               	skipnz
  8134  28C0  2917               	goto	l1117
  8135  28C1  01FA               	clrf	___lodiv@counter
  8136  28C2  0AFA               	incf	___lodiv@counter,f
  8137  28C3                     l4930:	
  8138  28C3  1BA7               	btfsc	___lodiv@divisor+7,7
  8139  28C4  28D2               	goto	l4932
  8140  28C5  35A0               	lslf	___lodiv@divisor,f
  8141  28C6  0DA1               	rlf	___lodiv@divisor+1,f
  8142  28C7  0DA2               	rlf	___lodiv@divisor+2,f
  8143  28C8  0DA3               	rlf	___lodiv@divisor+3,f
  8144  28C9  0DA4               	rlf	___lodiv@divisor+4,f
  8145  28CA  0DA5               	rlf	___lodiv@divisor+5,f
  8146  28CB  0DA6               	rlf	___lodiv@divisor+6,f
  8147  28CC  0DA7               	rlf	___lodiv@divisor+7,f
  8148  28CD  3001               	movlw	1
  8149  28CE  00F1               	movwf	??___lodiv
  8150  28CF  0871               	movf	??___lodiv,w
  8151  28D0  07FA               	addwf	___lodiv@counter,f
  8152  28D1  28C3               	goto	l4930
  8153  28D2                     l4932:	
  8154  28D2  35F2               	lslf	___lodiv@quotient,f
  8155  28D3  0DF3               	rlf	___lodiv@quotient+1,f
  8156  28D4  0DF4               	rlf	___lodiv@quotient+2,f
  8157  28D5  0DF5               	rlf	___lodiv@quotient+3,f
  8158  28D6  0DF6               	rlf	___lodiv@quotient+4,f
  8159  28D7  0DF7               	rlf	___lodiv@quotient+5,f
  8160  28D8  0DF8               	rlf	___lodiv@quotient+6,f
  8161  28D9  0DF9               	rlf	___lodiv@quotient+7,f
  8162  28DA  0827               	movf	___lodiv@divisor+7,w
  8163  28DB  022F               	subwf	___lodiv@dividend+7,w
  8164  28DC  1D03               	skipz
  8165  28DD  28F8               	goto	u6405
  8166  28DE  0826               	movf	___lodiv@divisor+6,w
  8167  28DF  022E               	subwf	___lodiv@dividend+6,w
  8168  28E0  1D03               	skipz
  8169  28E1  28F8               	goto	u6405
  8170  28E2  0825               	movf	___lodiv@divisor+5,w
  8171  28E3  022D               	subwf	___lodiv@dividend+5,w
  8172  28E4  1D03               	skipz
  8173  28E5  28F8               	goto	u6405
  8174  28E6  0824               	movf	___lodiv@divisor+4,w
  8175  28E7  022C               	subwf	___lodiv@dividend+4,w
  8176  28E8  1D03               	skipz
  8177  28E9  28F8               	goto	u6405
  8178  28EA  0823               	movf	___lodiv@divisor+3,w
  8179  28EB  022B               	subwf	___lodiv@dividend+3,w
  8180  28EC  1D03               	skipz
  8181  28ED  28F8               	goto	u6405
  8182  28EE  0822               	movf	___lodiv@divisor+2,w
  8183  28EF  022A               	subwf	___lodiv@dividend+2,w
  8184  28F0  1D03               	skipz
  8185  28F1  28F8               	goto	u6405
  8186  28F2  0821               	movf	___lodiv@divisor+1,w
  8187  28F3  0229               	subwf	___lodiv@dividend+1,w
  8188  28F4  1D03               	skipz
  8189  28F5  28F8               	goto	u6405
  8190  28F6  0820               	movf	___lodiv@divisor,w
  8191  28F7  0228               	subwf	___lodiv@dividend,w
  8192  28F8                     u6405:	
  8193  28F8  1C03               	skipc
  8194  28F9  290B               	goto	l4940
  8195  28FA  0820               	movf	___lodiv@divisor,w
  8196  28FB  02A8               	subwf	___lodiv@dividend,f
  8197  28FC  0821               	movf	___lodiv@divisor+1,w
  8198  28FD  3BA9               	subwfb	___lodiv@dividend+1,f
  8199  28FE  0822               	movf	___lodiv@divisor+2,w
  8200  28FF  3BAA               	subwfb	___lodiv@dividend+2,f
  8201  2900  0823               	movf	___lodiv@divisor+3,w
  8202  2901  3BAB               	subwfb	___lodiv@dividend+3,f
  8203  2902  0824               	movf	___lodiv@divisor+4,w
  8204  2903  3BAC               	subwfb	___lodiv@dividend+4,f
  8205  2904  0825               	movf	___lodiv@divisor+5,w
  8206  2905  3BAD               	subwfb	___lodiv@dividend+5,f
  8207  2906  0826               	movf	___lodiv@divisor+6,w
  8208  2907  3BAE               	subwfb	___lodiv@dividend+6,f
  8209  2908  0827               	movf	___lodiv@divisor+7,w
  8210  2909  3BAF               	subwfb	___lodiv@dividend+7,f
  8211  290A  1472               	bsf	___lodiv@quotient,0
  8212  290B                     l4940:	
  8213  290B  36A7               	lsrf	___lodiv@divisor+7,f
  8214  290C  0CA6               	rrf	___lodiv@divisor+6,f
  8215  290D  0CA5               	rrf	___lodiv@divisor+5,f
  8216  290E  0CA4               	rrf	___lodiv@divisor+4,f
  8217  290F  0CA3               	rrf	___lodiv@divisor+3,f
  8218  2910  0CA2               	rrf	___lodiv@divisor+2,f
  8219  2911  0CA1               	rrf	___lodiv@divisor+1,f
  8220  2912  0CA0               	rrf	___lodiv@divisor,f
  8221  2913  3001               	movlw	1
  8222  2914  02FA               	subwf	___lodiv@counter,f
  8223  2915  1D03               	btfss	3,2
  8224  2916  28D2               	goto	l4932
  8225  2917                     l1117:	
  8226  2917  0872               	movf	___lodiv@quotient,w
  8227  2918  00A0               	movwf	?___lodiv
  8228  2919  0873               	movf	___lodiv@quotient+1,w
  8229  291A  00A1               	movwf	?___lodiv+1
  8230  291B  0874               	movf	___lodiv@quotient+2,w
  8231  291C  00A2               	movwf	?___lodiv+2
  8232  291D  0875               	movf	___lodiv@quotient+3,w
  8233  291E  00A3               	movwf	?___lodiv+3
  8234  291F  0876               	movf	___lodiv@quotient+4,w
  8235  2920  00A4               	movwf	?___lodiv+4
  8236  2921  0877               	movf	___lodiv@quotient+5,w
  8237  2922  00A5               	movwf	?___lodiv+5
  8238  2923  0878               	movf	___lodiv@quotient+6,w
  8239  2924  00A6               	movwf	?___lodiv+6
  8240  2925  0879               	movf	___lodiv@quotient+7,w
  8241  2926  00A7               	movwf	?___lodiv+7
  8242  2927  0008               	return
  8243  2928                     __end_of___lodiv:	
  8244                           
  8245                           	psect	text14
  8246  1000                     __ptext14:	
  8247 ;; *************** function _strncmp *****************
  8248 ;; Defined at:
  8249 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  8250 ;; Parameters:    Size  Location     Type
  8251 ;;  _l              2    1[COMMON] PTR const unsigned char 
  8252 ;;		 -> vfpfcnvrt@ct(3), STR_24(18), STR_23(18), STR_22(19), 
  8253 ;;		 -> STR_21(20), STR_20(20), STR_19(21), STR_18(21), 
  8254 ;;		 -> STR_17(21), STR_16(22), STR_15(22), STR_14(21), 
  8255 ;;		 -> STR_13(21), STR_8(57), STR_7(44), STR_6(42), 
  8256 ;;		 -> STR_3(43), 
  8257 ;;  _r              2    3[COMMON] PTR const unsigned char 
  8258 ;;		 -> STR_168(3), STR_164(3), STR_159(3), STR_155(3), 
  8259 ;;		 -> STR_150(3), STR_146(3), STR_141(4), STR_137(4), 
  8260 ;;		 -> STR_132(3), STR_127(3), STR_122(3), STR_117(4), 
  8261 ;;		 -> STR_112(3), STR_107(3), STR_102(3), STR_97(4), 
  8262 ;;		 -> STR_92(3), STR_87(3), STR_82(3), STR_77(4), 
  8263 ;;		 -> STR_72(3), STR_67(3), STR_63(3), STR_58(3), 
  8264 ;;		 -> STR_54(3), STR_49(3), STR_45(3), STR_40(4), 
  8265 ;;		 -> STR_36(4), 
  8266 ;;  n               2    5[COMMON] unsigned int 
  8267 ;; Auto vars:     Size  Location     Type
  8268 ;;  r               2   10[COMMON] PTR const unsigned char 
  8269 ;;		 -> STR_168(3), STR_164(3), STR_159(3), STR_155(3), 
  8270 ;;		 -> STR_150(3), STR_146(3), STR_141(4), STR_137(4), 
  8271 ;;		 -> STR_132(3), STR_127(3), STR_122(3), STR_117(4), 
  8272 ;;		 -> STR_112(3), STR_107(3), STR_102(3), STR_97(4), 
  8273 ;;		 -> STR_92(3), STR_87(3), STR_82(3), STR_77(4), 
  8274 ;;		 -> STR_72(3), STR_67(3), STR_63(3), STR_58(3), 
  8275 ;;		 -> STR_54(3), STR_49(3), STR_45(3), STR_40(4), 
  8276 ;;		 -> STR_36(4), 
  8277 ;;  l               2    8[COMMON] PTR const unsigned char 
  8278 ;;		 -> vfpfcnvrt@ct(3), STR_24(18), STR_23(18), STR_22(19), 
  8279 ;;		 -> STR_21(20), STR_20(20), STR_19(21), STR_18(21), 
  8280 ;;		 -> STR_17(21), STR_16(22), STR_15(22), STR_14(21), 
  8281 ;;		 -> STR_13(21), STR_8(57), STR_7(44), STR_6(42), 
  8282 ;;		 -> STR_3(43), 
  8283 ;; Return value:  Size  Location     Type
  8284 ;;                  2    1[COMMON] int 
  8285 ;; Registers used:
  8286 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  8287 ;; Tracked objects:
  8288 ;;		On entry : 0/0
  8289 ;;		On exit  : 0/0
  8290 ;;		Unchanged: 0/0
  8291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8292 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8293 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8294 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8295 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8296 ;;Total ram usage:       11 bytes
  8297 ;; Hardware stack levels used:    1
  8298 ;; Hardware stack levels required when called:    1
  8299 ;; This function calls:
  8300 ;;		Nothing
  8301 ;; This function is called by:
  8302 ;;		_vfpfcnvrt
  8303 ;; This function uses a non-reentrant model
  8304 ;;
  8305                           
  8306                           
  8307                           ;psect for function _strncmp
  8308  1000                     _strncmp:	
  8309                           
  8310                           ;incstack = 0
  8311                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  8312  1000  0872               	movf	strncmp@_l+1,w
  8313  1001  00F9               	movwf	strncmp@l+1
  8314  1002  0871               	movf	strncmp@_l,w
  8315  1003  00F8               	movwf	strncmp@l
  8316  1004  0874               	movf	strncmp@_r+1,w
  8317  1005  00FB               	movwf	strncmp@r+1
  8318  1006  0873               	movf	strncmp@_r,w
  8319  1007  00FA               	movwf	strncmp@r
  8320  1008  3001               	movlw	1
  8321  1009  02F5               	subwf	strncmp@n,f
  8322  100A  3000               	movlw	0
  8323  100B  3BF6               	subwfb	strncmp@n+1,f
  8324  100C  0A75               	incf	strncmp@n,w
  8325  100D  1D03               	skipz
  8326  100E  283A               	goto	l5870
  8327  100F  0A76               	incf	strncmp@n+1,w
  8328  1010  1D03               	btfss	3,2
  8329  1011  283A               	goto	l5870
  8330  1012  01F1               	clrf	?_strncmp
  8331  1013  01F2               	clrf	?_strncmp+1
  8332  1014  0008               	return
  8333  1015                     l5872:	
  8334  1015  087A               	movf	strncmp@r,w
  8335  1016  0084               	movwf	4
  8336  1017  087B               	movf	strncmp@r+1,w
  8337  1018  0085               	movwf	5
  8338  1019  0012               	moviw fsr0++
  8339  101A  1903               	btfsc	3,2
  8340  101B  2841               	goto	l5878
  8341  101C  0875               	movf	strncmp@n,w
  8342  101D  0476               	iorwf	strncmp@n+1,w
  8343  101E  1903               	btfsc	3,2
  8344  101F  2841               	goto	l5878
  8345  1020  087A               	movf	strncmp@r,w
  8346  1021  0084               	movwf	4
  8347  1022  087B               	movf	strncmp@r+1,w
  8348  1023  0085               	movwf	5
  8349  1024  0800               	movf	0,w	;code access
  8350  1025  00F7               	movwf	??_strncmp
  8351  1026  0878               	movf	strncmp@l,w
  8352  1027  0084               	movwf	4
  8353  1028  0879               	movf	strncmp@l+1,w
  8354  1029  0085               	movwf	5
  8355  102A  0800               	movf	0,w	;code access
  8356  102B  0677               	xorwf	??_strncmp,w
  8357  102C  1D03               	btfss	3,2
  8358  102D  2841               	goto	l5878
  8359  102E  3001               	movlw	1
  8360  102F  07F8               	addwf	strncmp@l,f
  8361  1030  3000               	movlw	0
  8362  1031  3DF9               	addwfc	strncmp@l+1,f
  8363  1032  3001               	movlw	1
  8364  1033  07FA               	addwf	strncmp@r,f
  8365  1034  3000               	movlw	0
  8366  1035  3DFB               	addwfc	strncmp@r+1,f
  8367  1036  3001               	movlw	1
  8368  1037  02F5               	subwf	strncmp@n,f
  8369  1038  3000               	movlw	0
  8370  1039  3BF6               	subwfb	strncmp@n+1,f
  8371  103A                     l5870:	
  8372  103A  0878               	movf	strncmp@l,w
  8373  103B  0084               	movwf	4
  8374  103C  0879               	movf	strncmp@l+1,w
  8375  103D  0085               	movwf	5
  8376  103E  0012               	moviw fsr0++
  8377  103F  1D03               	btfss	3,2
  8378  1040  2815               	goto	l5872
  8379  1041                     l5878:	
  8380  1041  0878               	movf	strncmp@l,w
  8381  1042  0084               	movwf	4
  8382  1043  0879               	movf	strncmp@l+1,w
  8383  1044  0085               	movwf	5
  8384  1045  0800               	movf	0,w	;code access
  8385  1046  00F7               	movwf	??_strncmp
  8386  1047  087A               	movf	strncmp@r,w
  8387  1048  0084               	movwf	4
  8388  1049  087B               	movf	strncmp@r+1,w
  8389  104A  0085               	movwf	5
  8390  104B  0800               	movf	0,w	;code access
  8391  104C  0277               	subwf	??_strncmp,w
  8392  104D  00F1               	movwf	?_strncmp
  8393  104E  01F2               	clrf	?_strncmp+1
  8394  104F  1C03               	skipc
  8395  1050  03F2               	decf	?_strncmp+1,f
  8396  1051  0008               	return
  8397  1052                     __end_of_strncmp:	
  8398                           
  8399                           	psect	text15
  8400  2E6A                     __ptext15:	
  8401 ;; *************** function _stoa *****************
  8402 ;; Defined at:
  8403 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8404 ;; Parameters:    Size  Location     Type
  8405 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  8406 ;;		 -> vsnprintf@f(6), 
  8407 ;;  s               1    2[BANK0 ] PTR unsigned char 
  8408 ;;		 -> ?_snprintf(2), 
  8409 ;; Auto vars:     Size  Location     Type
  8410 ;;  nuls            7    3[BANK0 ] unsigned char [7]
  8411 ;;  l               2   18[BANK0 ] int 
  8412 ;;  p               2   16[BANK0 ] int 
  8413 ;;  cp              2   14[BANK0 ] PTR unsigned char 
  8414 ;;		 -> ?_snprintf(2), stoa@nuls(7), 
  8415 ;;  w               2   12[BANK0 ] int 
  8416 ;;  i               2   10[BANK0 ] int 
  8417 ;; Return value:  Size  Location     Type
  8418 ;;                  2    0[BANK0 ] int 
  8419 ;; Registers used:
  8420 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8421 ;; Tracked objects:
  8422 ;;		On entry : 0/0
  8423 ;;		On exit  : 0/0
  8424 ;;		Unchanged: 0/0
  8425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8426 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8427 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8428 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8429 ;;      Totals:         2      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8430 ;;Total ram usage:       22 bytes
  8431 ;; Hardware stack levels used:    1
  8432 ;; Hardware stack levels required when called:    3
  8433 ;; This function calls:
  8434 ;;		_fputc
  8435 ;;		_strlen
  8436 ;; This function is called by:
  8437 ;;		_vfpfcnvrt
  8438 ;; This function uses a non-reentrant model
  8439 ;;
  8440                           
  8441                           
  8442                           ;psect for function _stoa
  8443  2E6A                     _stoa:	
  8444                           
  8445                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8446                           
  8447                           ;incstack = 0
  8448                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8449  2E6A  30DD               	movlw	low stoa@F1174
  8450  2E6B  0086               	movwf	6
  8451  2E6C  3001               	movlw	high stoa@F1174
  8452  2E6D  0087               	movwf	7
  8453  2E6E  3023               	movlw	low stoa@nuls
  8454  2E6F  0084               	movwf	4
  8455  2E70  3000               	movlw	high stoa@nuls
  8456  2E71  0085               	movwf	5
  8457  2E72  3007               	movlw	7
  8458  2E73  00FA               	movwf	??_stoa
  8459  2E74                     u11000:	
  8460  2E74  0016               	moviw fsr1++
  8461  2E75  001A               	movwi fsr0++
  8462  2E76  0BFA               	decfsz	??_stoa,f
  8463  2E77  2E74               	goto	u11000
  8464                           
  8465                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  8466  2E78  0020               	movlb	0	; select bank0
  8467  2E79  0822               	movf	stoa@s,w
  8468  2E7A  00AE               	movwf	stoa@cp
  8469  2E7B  3001               	movlw	1
  8470  2E7C  00AF               	movwf	stoa@cp+1
  8471                           
  8472                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  8473  2E7D  082E               	movf	stoa@cp,w
  8474  2E7E  042F               	iorwf	stoa@cp+1,w
  8475  2E7F  1D03               	btfss	3,2
  8476  2E80  2E85               	goto	l7712
  8477                           
  8478                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  8479  2E81  3023               	movlw	low stoa@nuls
  8480  2E82  00AE               	movwf	stoa@cp
  8481  2E83  3000               	movlw	high stoa@nuls
  8482  2E84  00AF               	movwf	stoa@cp+1
  8483  2E85                     l7712:	
  8484                           
  8485                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  8486  2E85  082F               	movf	stoa@cp+1,w
  8487  2E86  00F2               	movwf	strlen@s+1
  8488  2E87  082E               	movf	stoa@cp,w
  8489  2E88  00F1               	movwf	strlen@s
  8490  2E89  31B1  2165  31AE   	fcall	_strlen
  8491  2E8C  0872               	movf	?_strlen+1,w
  8492  2E8D  0020               	movlb	0	; select bank0
  8493  2E8E  00B3               	movwf	stoa@l+1
  8494  2E8F  0871               	movf	?_strlen,w
  8495  2E90  00B2               	movwf	stoa@l
  8496                           
  8497                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  8498  2E91  0023               	movlb	3	; select bank3
  8499  2E92  0841               	movf	(_prec+1)^(0+384),w
  8500  2E93  0020               	movlb	0	; select bank0
  8501  2E94  00B1               	movwf	stoa@p+1
  8502  2E95  0023               	movlb	3	; select bank3
  8503  2E96  0840               	movf	_prec^(0+384),w
  8504  2E97  0020               	movlb	0	; select bank0
  8505  2E98  00B0               	movwf	stoa@p
  8506                           
  8507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  8508  2E99  1BB1               	btfsc	stoa@p+1,7
  8509  2E9A  2EAC               	goto	l720
  8510  2E9B  0831               	movf	stoa@p+1,w
  8511  2E9C  3A80               	xorlw	128
  8512  2E9D  00FA               	movwf	??_stoa
  8513  2E9E  0833               	movf	stoa@l+1,w
  8514  2E9F  3A80               	xorlw	128
  8515  2EA0  027A               	subwf	??_stoa,w
  8516  2EA1  1D03               	skipz
  8517  2EA2  2EA5               	goto	u11035
  8518  2EA3  0832               	movf	stoa@l,w
  8519  2EA4  0230               	subwf	stoa@p,w
  8520  2EA5                     u11035:	
  8521  2EA5  1803               	btfsc	3,0
  8522  2EA6  2EAC               	goto	l720
  8523  2EA7  0020               	movlb	0	; select bank0
  8524  2EA8  0831               	movf	stoa@p+1,w
  8525  2EA9  00B3               	movwf	stoa@l+1
  8526  2EAA  0830               	movf	stoa@p,w
  8527  2EAB  00B2               	movwf	stoa@l
  8528  2EAC                     l720:	
  8529                           
  8530                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  8531  2EAC  0020               	movlb	0	; select bank0
  8532  2EAD  0833               	movf	stoa@l+1,w
  8533  2EAE  00B1               	movwf	stoa@p+1
  8534  2EAF  0832               	movf	stoa@l,w
  8535  2EB0  00B0               	movwf	stoa@p
  8536                           
  8537                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  8538  2EB1  0023               	movlb	3	; select bank3
  8539  2EB2  083F               	movf	(_width+1)^(0+384),w
  8540  2EB3  0020               	movlb	0	; select bank0
  8541  2EB4  00AD               	movwf	stoa@w+1
  8542  2EB5  0023               	movlb	3	; select bank3
  8543  2EB6  083E               	movf	_width^(0+384),w
  8544  2EB7  0020               	movlb	0	; select bank0
  8545  2EB8  00AC               	movwf	stoa@w
  8546                           
  8547                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  8548  2EB9  0023               	movlb	3	; select bank3
  8549  2EBA  1C42               	btfss	_flags^(0+384),0
  8550  2EBB  2ECE               	goto	l7730
  8551  2EBC  2EDB               	goto	l7732
  8552  2EBD                     l7726:	
  8553                           
  8554                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  8555  2EBD  3020               	movlw	32
  8556  2EBE  00F1               	movwf	fputc@c
  8557  2EBF  3000               	movlw	0
  8558  2EC0  00F2               	movwf	fputc@c+1
  8559  2EC1  0020               	movlb	0	; select bank0
  8560  2EC2  0821               	movf	stoa@fp+1,w
  8561  2EC3  00F4               	movwf	fputc@fp+1
  8562  2EC4  0820               	movf	stoa@fp,w
  8563  2EC5  00F3               	movwf	fputc@fp
  8564  2EC6  31B6  260F  31AE   	fcall	_fputc
  8565                           
  8566                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  8567  2EC9  3001               	movlw	1
  8568  2ECA  0020               	movlb	0	; select bank0
  8569  2ECB  07B2               	addwf	stoa@l,f
  8570  2ECC  3000               	movlw	0
  8571  2ECD  3DB3               	addwfc	stoa@l+1,f
  8572  2ECE                     l7730:	
  8573                           
  8574                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  8575  2ECE  0020               	movlb	0	; select bank0
  8576  2ECF  0833               	movf	stoa@l+1,w
  8577  2ED0  3A80               	xorlw	128
  8578  2ED1  00FA               	movwf	??_stoa
  8579  2ED2  082D               	movf	stoa@w+1,w
  8580  2ED3  3A80               	xorlw	128
  8581  2ED4  027A               	subwf	??_stoa,w
  8582  2ED5  1D03               	skipz
  8583  2ED6  2ED9               	goto	u11055
  8584  2ED7  082C               	movf	stoa@w,w
  8585  2ED8  0232               	subwf	stoa@l,w
  8586  2ED9                     u11055:	
  8587  2ED9  1C03               	skipc
  8588  2EDA  2EBD               	goto	l7726
  8589  2EDB                     l7732:	
  8590                           
  8591                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  8592  2EDB  0020               	movlb	0	; select bank0
  8593  2EDC  01AA               	clrf	stoa@i
  8594  2EDD  01AB               	clrf	stoa@i+1
  8595  2EDE                     l7740:	
  8596                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8597                           
  8598                           
  8599                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8600  2EDE  082B               	movf	stoa@i+1,w
  8601  2EDF  3A80               	xorlw	128
  8602  2EE0  00FA               	movwf	??_stoa
  8603  2EE1  0831               	movf	stoa@p+1,w
  8604  2EE2  3A80               	xorlw	128
  8605  2EE3  027A               	subwf	??_stoa,w
  8606  2EE4  1D03               	skipz
  8607  2EE5  2EE8               	goto	u11065
  8608  2EE6  0830               	movf	stoa@p,w
  8609  2EE7  022A               	subwf	stoa@i,w
  8610  2EE8                     u11065:	
  8611  2EE8  1803               	btfsc	3,0
  8612  2EE9  2F07               	goto	l729
  8613                           
  8614                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  8615  2EEA  0020               	movlb	0	; select bank0
  8616  2EEB  082E               	movf	stoa@cp,w
  8617  2EEC  0086               	movwf	6
  8618  2EED  082F               	movf	stoa@cp+1,w
  8619  2EEE  0087               	movwf	7
  8620  2EEF  0801               	movf	1,w
  8621  2EF0  00FA               	movwf	??_stoa
  8622  2EF1  01FB               	clrf	??_stoa+1
  8623  2EF2  087A               	movf	??_stoa,w
  8624  2EF3  00F1               	movwf	fputc@c
  8625  2EF4  087B               	movf	??_stoa+1,w
  8626  2EF5  00F2               	movwf	fputc@c+1
  8627  2EF6  0821               	movf	stoa@fp+1,w
  8628  2EF7  00F4               	movwf	fputc@fp+1
  8629  2EF8  0820               	movf	stoa@fp,w
  8630  2EF9  00F3               	movwf	fputc@fp
  8631  2EFA  31B6  260F  31AE   	fcall	_fputc
  8632                           
  8633                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  8634  2EFD  3001               	movlw	1
  8635  2EFE  0020               	movlb	0	; select bank0
  8636  2EFF  07AE               	addwf	stoa@cp,f
  8637  2F00  3000               	movlw	0
  8638  2F01  3DAF               	addwfc	stoa@cp+1,f
  8639                           
  8640                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  8641  2F02  3001               	movlw	1
  8642  2F03  07AA               	addwf	stoa@i,f
  8643  2F04  3000               	movlw	0
  8644  2F05  3DAB               	addwfc	stoa@i+1,f
  8645  2F06  2EDE               	goto	l7740
  8646  2F07                     l729:	
  8647                           
  8648                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  8649  2F07  0023               	movlb	3	; select bank3
  8650  2F08  1842               	btfsc	_flags^(0+384),0
  8651  2F09  2F1C               	goto	l7748
  8652  2F0A  2F29               	goto	l7750
  8653  2F0B                     l7744:	
  8654                           
  8655                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  8656  2F0B  3020               	movlw	32
  8657  2F0C  00F1               	movwf	fputc@c
  8658  2F0D  3000               	movlw	0
  8659  2F0E  00F2               	movwf	fputc@c+1
  8660  2F0F  0020               	movlb	0	; select bank0
  8661  2F10  0821               	movf	stoa@fp+1,w
  8662  2F11  00F4               	movwf	fputc@fp+1
  8663  2F12  0820               	movf	stoa@fp,w
  8664  2F13  00F3               	movwf	fputc@fp
  8665  2F14  31B6  260F  31AE   	fcall	_fputc
  8666                           
  8667                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  8668  2F17  3001               	movlw	1
  8669  2F18  0020               	movlb	0	; select bank0
  8670  2F19  07B2               	addwf	stoa@l,f
  8671  2F1A  3000               	movlw	0
  8672  2F1B  3DB3               	addwfc	stoa@l+1,f
  8673  2F1C                     l7748:	
  8674                           
  8675                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  8676  2F1C  0020               	movlb	0	; select bank0
  8677  2F1D  0833               	movf	stoa@l+1,w
  8678  2F1E  3A80               	xorlw	128
  8679  2F1F  00FA               	movwf	??_stoa
  8680  2F20  082D               	movf	stoa@w+1,w
  8681  2F21  3A80               	xorlw	128
  8682  2F22  027A               	subwf	??_stoa,w
  8683  2F23  1D03               	skipz
  8684  2F24  2F27               	goto	u11085
  8685  2F25  082C               	movf	stoa@w,w
  8686  2F26  0232               	subwf	stoa@l,w
  8687  2F27                     u11085:	
  8688  2F27  1C03               	skipc
  8689  2F28  2F0B               	goto	l7744
  8690  2F29                     l7750:	
  8691                           
  8692                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  8693  2F29  0020               	movlb	0	; select bank0
  8694  2F2A  0833               	movf	stoa@l+1,w
  8695  2F2B  00A1               	movwf	?_stoa+1
  8696  2F2C  0832               	movf	stoa@l,w
  8697  2F2D  00A0               	movwf	?_stoa
  8698  2F2E  0008               	return
  8699  2F2F                     __end_of_stoa:	
  8700                           
  8701                           	psect	text16
  8702  261C                     __ptext16:	
  8703 ;; *************** function _otoa *****************
  8704 ;; Defined at:
  8705 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8706 ;; Parameters:    Size  Location     Type
  8707 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  8708 ;;		 -> vsnprintf@f(6), 
  8709 ;;  d               8   18[BANK0 ] unsigned long long 
  8710 ;; Auto vars:     Size  Location     Type
  8711 ;;  n               8   40[BANK0 ] unsigned long long 
  8712 ;;  i               2   48[BANK0 ] int 
  8713 ;;  w               2   38[BANK0 ] int 
  8714 ;;  t               2   36[BANK0 ] int 
  8715 ;;  p               2   34[BANK0 ] int 
  8716 ;; Return value:  Size  Location     Type
  8717 ;;                  2   16[BANK0 ] int 
  8718 ;; Registers used:
  8719 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8720 ;; Tracked objects:
  8721 ;;		On entry : 0/0
  8722 ;;		On exit  : 0/0
  8723 ;;		Unchanged: 0/0
  8724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8725 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8726 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8727 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8728 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8729 ;;Total ram usage:       34 bytes
  8730 ;; Hardware stack levels used:    1
  8731 ;; Hardware stack levels required when called:    5
  8732 ;; This function calls:
  8733 ;;		_pad
  8734 ;; This function is called by:
  8735 ;;		_vfpfcnvrt
  8736 ;; This function uses a non-reentrant model
  8737 ;;
  8738                           
  8739                           
  8740                           ;psect for function _otoa
  8741  261C                     _otoa:	
  8742                           
  8743                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  8744                           
  8745                           ;incstack = 0
  8746                           ; Regs used in _otoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8747  261C  0023               	movlb	3	; select bank3
  8748  261D  1BC1               	btfsc	(_prec+1)^(0+384),7
  8749  261E  2E23               	goto	l698
  8750                           
  8751                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  8752  261F  30FD               	movlw	253
  8753  2620  05C2               	andwf	_flags^(0+384),f
  8754  2621  30FF               	movlw	255
  8755  2622  05C3               	andwf	(_flags+1)^(0+384),f
  8756  2623                     l698:	
  8757                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 515:     }
  8758                           
  8759                           
  8760                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  8761  2623  0841               	movf	(_prec+1)^(0+384),w
  8762  2624  3A80               	xorlw	128
  8763  2625  0020               	movlb	0	; select bank0
  8764  2626  00BA               	movwf	??_otoa
  8765  2627  3080               	movlw	128
  8766  2628  023A               	subwf	??_otoa,w
  8767  2629  1D03               	skipz
  8768  262A  2E2E               	goto	u10915
  8769  262B  3001               	movlw	1
  8770  262C  0023               	movlb	3	; select bank3
  8771  262D  0240               	subwf	_prec^(0+384),w
  8772  262E                     u10915:	
  8773  262E  1803               	skipnc
  8774  262F  2E36               	goto	l7666
  8775  2630  3001               	movlw	1
  8776  2631  0020               	movlb	0	; select bank0
  8777  2632  00C2               	movwf	otoa@p
  8778  2633  3000               	movlw	0
  8779  2634  00C3               	movwf	otoa@p+1
  8780  2635  2E3E               	goto	l702
  8781  2636                     l7666:	
  8782  2636  0023               	movlb	3	; select bank3
  8783  2637  0841               	movf	(_prec+1)^(0+384),w
  8784  2638  0020               	movlb	0	; select bank0
  8785  2639  00C3               	movwf	otoa@p+1
  8786  263A  0023               	movlb	3	; select bank3
  8787  263B  0840               	movf	_prec^(0+384),w
  8788  263C  0020               	movlb	0	; select bank0
  8789  263D  00C2               	movwf	otoa@p
  8790  263E                     l702:	
  8791                           
  8792                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  8793  263E  0023               	movlb	3	; select bank3
  8794  263F  083F               	movf	(_width+1)^(0+384),w
  8795  2640  0020               	movlb	0	; select bank0
  8796  2641  00C7               	movwf	otoa@w+1
  8797  2642  0023               	movlb	3	; select bank3
  8798  2643  083E               	movf	_width^(0+384),w
  8799  2644  0020               	movlb	0	; select bank0
  8800  2645  00C6               	movwf	otoa@w
  8801                           
  8802                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  8803  2646  0832               	movf	otoa@d,w
  8804  2647  00C8               	movwf	otoa@n
  8805  2648  0833               	movf	otoa@d+1,w
  8806  2649  00C9               	movwf	otoa@n+1
  8807  264A  0834               	movf	otoa@d+2,w
  8808  264B  00CA               	movwf	otoa@n+2
  8809  264C  0835               	movf	otoa@d+3,w
  8810  264D  00CB               	movwf	otoa@n+3
  8811  264E  0836               	movf	otoa@d+4,w
  8812  264F  00CC               	movwf	otoa@n+4
  8813  2650  0837               	movf	otoa@d+5,w
  8814  2651  00CD               	movwf	otoa@n+5
  8815  2652  0838               	movf	otoa@d+6,w
  8816  2653  00CE               	movwf	otoa@n+6
  8817  2654  0839               	movf	otoa@d+7,w
  8818  2655  00CF               	movwf	otoa@n+7
  8819                           
  8820                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  8821  2656  304F               	movlw	79
  8822  2657  00D0               	movwf	otoa@i
  8823  2658  3000               	movlw	0
  8824  2659  00D1               	movwf	otoa@i+1
  8825                           
  8826                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  8827  265A  0024               	movlb	4	; select bank4
  8828  265B  01EF               	clrf	(_dbuf^(0+512)+79)
  8829                           
  8830                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  8831  265C  0020               	movlb	0	; select bank0
  8832  265D  01C4               	clrf	otoa@t
  8833  265E  01C5               	clrf	otoa@t+1
  8834                           
  8835                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8836  265F  2ED3               	goto	l703
  8837  2660                     l7684:	
  8838  2660  0020               	movlb	0	; select bank0
  8839  2661  0848               	movf	otoa@n,w
  8840  2662  0449               	iorwf	otoa@n+1,w
  8841  2663  044A               	iorwf	otoa@n+2,w
  8842  2664  044B               	iorwf	otoa@n+3,w
  8843  2665  044C               	iorwf	otoa@n+4,w
  8844  2666  044D               	iorwf	otoa@n+5,w
  8845  2667  044E               	iorwf	otoa@n+6,w
  8846  2668  044F               	iorwf	otoa@n+7,w
  8847  2669  1D03               	skipz
  8848  266A  2E85               	goto	l7674
  8849  266B  0843               	movf	otoa@p+1,w
  8850  266C  3A80               	xorlw	128
  8851  266D  00BA               	movwf	??_otoa
  8852  266E  3080               	movlw	128
  8853  266F  023A               	subwf	??_otoa,w
  8854  2670  1D03               	skipz
  8855  2671  2E74               	goto	u10955
  8856  2672  3001               	movlw	1
  8857  2673  0242               	subwf	otoa@p,w
  8858  2674                     u10955:	
  8859  2674  1803               	skipnc
  8860  2675  2E85               	goto	l7674
  8861  2676  0020               	movlb	0	; select bank0
  8862  2677  0847               	movf	otoa@w+1,w
  8863  2678  3A80               	xorlw	128
  8864  2679  00BA               	movwf	??_otoa
  8865  267A  3080               	movlw	128
  8866  267B  023A               	subwf	??_otoa,w
  8867  267C  1D03               	skipz
  8868  267D  2E80               	goto	u10965
  8869  267E  3001               	movlw	1
  8870  267F  0246               	subwf	otoa@w,w
  8871  2680                     u10965:	
  8872  2680  1C03               	skipc
  8873  2681  2EDE               	goto	l709
  8874  2682  0023               	movlb	3	; select bank3
  8875  2683  1CC2               	btfss	_flags^(0+384),1
  8876  2684  2EDE               	goto	l709
  8877  2685                     l7674:	
  8878                           
  8879                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  8880  2685  30FF               	movlw	255
  8881  2686  0020               	movlb	0	; select bank0
  8882  2687  07D0               	addwf	otoa@i,f
  8883  2688  30FF               	movlw	255
  8884  2689  3DD1               	addwfc	otoa@i+1,f
  8885                           
  8886                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  8887  268A  3007               	movlw	7
  8888  268B  0548               	andwf	otoa@n,w
  8889  268C  00C4               	movwf	otoa@t
  8890  268D  3000               	movlw	0
  8891  268E  0549               	andwf	otoa@n+1,w
  8892  268F  00C5               	movwf	otoa@t+1
  8893                           
  8894                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  8895  2690  0844               	movf	otoa@t,w
  8896  2691  3E30               	addlw	48
  8897  2692  00BA               	movwf	??_otoa
  8898  2693  0850               	movf	otoa@i,w
  8899  2694  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8900  2695  0086               	movwf	6
  8901  2696  3002               	movlw	2	; select bank4/5
  8902  2697  0087               	movwf	7
  8903  2698  083A               	movf	??_otoa,w
  8904  2699  0081               	movwf	1
  8905                           
  8906                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  8907  269A  30FF               	movlw	255
  8908  269B  07C2               	addwf	otoa@p,f
  8909  269C  30FF               	movlw	255
  8910  269D  3DC3               	addwfc	otoa@p+1,f
  8911                           
  8912                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  8913  269E  30FF               	movlw	255
  8914  269F  07C6               	addwf	otoa@w,f
  8915  26A0  30FF               	movlw	255
  8916  26A1  3DC7               	addwfc	otoa@w+1,f
  8917                           
  8918                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  8919  26A2  3048               	movlw	low otoa@n
  8920  26A3  0086               	movwf	6
  8921  26A4  3000               	movlw	high otoa@n
  8922  26A5  0087               	movwf	7
  8923  26A6  3F40               	moviw [0]fsr1
  8924  26A7  00BA               	movwf	??_otoa
  8925  26A8  3F41               	moviw [1]fsr1
  8926  26A9  00BB               	movwf	??_otoa+1
  8927  26AA  3F42               	moviw [2]fsr1
  8928  26AB  00BC               	movwf	??_otoa+2
  8929  26AC  3F43               	moviw [3]fsr1
  8930  26AD  00BD               	movwf	??_otoa+3
  8931  26AE  3F44               	moviw [4]fsr1
  8932  26AF  00BE               	movwf	??_otoa+4
  8933  26B0  3F45               	moviw [5]fsr1
  8934  26B1  00BF               	movwf	??_otoa+5
  8935  26B2  3F46               	moviw [6]fsr1
  8936  26B3  00C0               	movwf	??_otoa+6
  8937  26B4  3F47               	moviw [7]fsr1
  8938  26B5  00C1               	movwf	??_otoa+7
  8939  26B6  3003               	movlw	3
  8940  26B7                     u10925:	
  8941  26B7  0020               	movlb	0	; select bank0
  8942  26B8  36C1               	lsrf	??_otoa+7,f
  8943  26B9  0CC0               	rrf	??_otoa+6,f
  8944  26BA  0CBF               	rrf	??_otoa+5,f
  8945  26BB  0CBE               	rrf	??_otoa+4,f
  8946  26BC  0CBD               	rrf	??_otoa+3,f
  8947  26BD  0CBC               	rrf	??_otoa+2,f
  8948  26BE  0CBB               	rrf	??_otoa+1,f
  8949  26BF  0CBA               	rrf	??_otoa,f
  8950  26C0  0B89               	decfsz	9,f
  8951  26C1  2EB7               	goto	u10925
  8952  26C2  0020               	movlb	0	; select bank0
  8953  26C3  0841               	movf	??_otoa+7,w
  8954  26C4  00CF               	movwf	otoa@n+7
  8955  26C5  0840               	movf	??_otoa+6,w
  8956  26C6  00CE               	movwf	otoa@n+6
  8957  26C7  083F               	movf	??_otoa+5,w
  8958  26C8  00CD               	movwf	otoa@n+5
  8959  26C9  083E               	movf	??_otoa+4,w
  8960  26CA  00CC               	movwf	otoa@n+4
  8961  26CB  083D               	movf	??_otoa+3,w
  8962  26CC  00CB               	movwf	otoa@n+3
  8963  26CD  083C               	movf	??_otoa+2,w
  8964  26CE  00CA               	movwf	otoa@n+2
  8965  26CF  083B               	movf	??_otoa+1,w
  8966  26D0  00C9               	movwf	otoa@n+1
  8967  26D1  083A               	movf	??_otoa,w
  8968  26D2  00C8               	movwf	otoa@n
  8969  26D3                     l703:	
  8970                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 531:     }
  8971                           
  8972                           
  8973                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8974  26D3  0851               	movf	otoa@i+1,w
  8975  26D4  3A80               	xorlw	128
  8976  26D5  00BA               	movwf	??_otoa
  8977  26D6  3080               	movlw	128
  8978  26D7  023A               	subwf	??_otoa,w
  8979  26D8  1D03               	skipz
  8980  26D9  2EDC               	goto	u10935
  8981  26DA  3001               	movlw	1
  8982  26DB  0250               	subwf	otoa@i,w
  8983  26DC                     u10935:	
  8984  26DC  1803               	btfsc	3,0
  8985  26DD  2E60               	goto	l7684
  8986  26DE                     l709:	
  8987                           
  8988                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  8989  26DE  0023               	movlb	3	; select bank3
  8990  26DF  1E42               	btfss	_flags^(0+384),4
  8991  26E0  2EF7               	goto	l7700
  8992  26E1  0020               	movlb	0	; select bank0
  8993  26E2  0844               	movf	otoa@t,w
  8994  26E3  0445               	iorwf	otoa@t+1,w
  8995  26E4  1903               	btfsc	3,2
  8996  26E5  2EF7               	goto	l7700
  8997                           
  8998                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  8999  26E6  30FF               	movlw	255
  9000  26E7  07D0               	addwf	otoa@i,f
  9001  26E8  30FF               	movlw	255
  9002  26E9  3DD1               	addwfc	otoa@i+1,f
  9003                           
  9004                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  9005  26EA  3030               	movlw	48
  9006  26EB  00BA               	movwf	??_otoa
  9007  26EC  0850               	movf	otoa@i,w
  9008  26ED  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9009  26EE  0086               	movwf	6
  9010  26EF  3002               	movlw	2	; select bank4/5
  9011  26F0  0087               	movwf	7
  9012  26F1  083A               	movf	??_otoa,w
  9013  26F2  0081               	movwf	1
  9014                           
  9015                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  9016  26F3  30FF               	movlw	255
  9017  26F4  07C6               	addwf	otoa@w,f
  9018  26F5  30FF               	movlw	255
  9019  26F6  3DC7               	addwfc	otoa@w+1,f
  9020  26F7                     l7700:	
  9021                           
  9022                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  9023  26F7  0020               	movlb	0	; select bank0
  9024  26F8  0831               	movf	otoa@fp+1,w
  9025  26F9  00A7               	movwf	pad@fp+1
  9026  26FA  0830               	movf	otoa@fp,w
  9027  26FB  00A6               	movwf	pad@fp
  9028  26FC  0850               	movf	otoa@i,w
  9029  26FD  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9030  26FE  00BA               	movwf	??_otoa
  9031  26FF  083A               	movf	??_otoa,w
  9032  2700  00A8               	movwf	pad@buf
  9033  2701  0847               	movf	otoa@w+1,w
  9034  2702  00AA               	movwf	pad@p+1
  9035  2703  0846               	movf	otoa@w,w
  9036  2704  00A9               	movwf	pad@p
  9037  2705  31B5  256D         	fcall	_pad
  9038  2707  0020               	movlb	0	; select bank0
  9039  2708  0827               	movf	?_pad+1,w
  9040  2709  00B1               	movwf	?_otoa+1
  9041  270A  0826               	movf	?_pad,w
  9042  270B  00B0               	movwf	?_otoa
  9043  270C  0008               	return
  9044  270D                     __end_of_otoa:	
  9045                           
  9046                           	psect	text17
  9047  0058                     __ptext17:	
  9048 ;; *************** function _efgtoa *****************
  9049 ;; Defined at:
  9050 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9051 ;; Parameters:    Size  Location     Type
  9052 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  9053 ;;		 -> vsnprintf@f(6), 
  9054 ;;  f               4    2[BANK1 ] PTR struct _IO_FILE
  9055 ;;  c               1    6[BANK1 ] unsigned char 
  9056 ;; Auto vars:     Size  Location     Type
  9057 ;;  u               4   63[BANK1 ] unsigned char 
  9058 ;;  g               4   55[BANK1 ] unsigned char 
  9059 ;;  l               4   49[BANK1 ] unsigned char 
  9060 ;;  h               4   45[BANK1 ] unsigned char 
  9061 ;;  ou              4   11[BANK1 ] unsigned char 
  9062 ;;  n               2   61[BANK1 ] int 
  9063 ;;  e               2   59[BANK1 ] int 
  9064 ;;  i               2   53[BANK1 ] int 
  9065 ;;  w               2   42[BANK1 ] int 
  9066 ;;  p               2   39[BANK1 ] int 
  9067 ;;  sign            2   37[BANK1 ] int 
  9068 ;;  d               2   35[BANK1 ] int 
  9069 ;;  ne              2   33[BANK1 ] int 
  9070 ;;  m               2   31[BANK1 ] int 
  9071 ;;  pp              2   29[BANK1 ] int 
  9072 ;;  t               2   27[BANK1 ] int 
  9073 ;;  mode            1   44[BANK1 ] unsigned char 
  9074 ;;  nmode           1   41[BANK1 ] unsigned char 
  9075 ;; Return value:  Size  Location     Type
  9076 ;;                  2    0[BANK1 ] int 
  9077 ;; Registers used:
  9078 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9079 ;; Tracked objects:
  9080 ;;		On entry : 0/0
  9081 ;;		On exit  : 0/0
  9082 ;;		Unchanged: 0/0
  9083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9084 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9085 ;;      Locals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9086 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9087 ;;      Totals:         0       0      67       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9088 ;;Total ram usage:       67 bytes
  9089 ;; Hardware stack levels used:    1
  9090 ;; Hardware stack levels required when called:    5
  9091 ;; This function calls:
  9092 ;;		___awdiv
  9093 ;;		___awmod
  9094 ;;		___fladd
  9095 ;;		___fldiv
  9096 ;;		___fleq
  9097 ;;		___flge
  9098 ;;		___flmul
  9099 ;;		___flneg
  9100 ;;		___flsub
  9101 ;;		___fltol
  9102 ;;		___fpclassifyf
  9103 ;;		_floorf
  9104 ;;		_isupper
  9105 ;;		_pad
  9106 ;;		_strcpy
  9107 ;;		_tolower
  9108 ;; This function is called by:
  9109 ;;		_vfpfcnvrt
  9110 ;; This function uses a non-reentrant model
  9111 ;;
  9112                           
  9113                           
  9114                           ;psect for function _efgtoa
  9115  0058                     _efgtoa:	
  9116                           
  9117                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  9118                           
  9119                           ;incstack = 0
  9120                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9121  0058  0021               	movlb	1	; select bank1
  9122  0059  01C5               	clrf	efgtoa@sign^(0+128)
  9123  005A  01C6               	clrf	(efgtoa@sign+1)^(0+128)
  9124                           
  9125                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  9126  005B  0825               	movf	(efgtoa@f+3)^(0+128),w
  9127  005C  00DA               	movwf	(efgtoa@g+3)^(0+128)
  9128  005D  0824               	movf	(efgtoa@f+2)^(0+128),w
  9129  005E  00D9               	movwf	(efgtoa@g+2)^(0+128)
  9130  005F  0823               	movf	(efgtoa@f+1)^(0+128),w
  9131  0060  00D8               	movwf	(efgtoa@g+1)^(0+128)
  9132  0061  0822               	movf	efgtoa@f^(0+128),w
  9133  0062  00D7               	movwf	efgtoa@g^(0+128)
  9134                           
  9135                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  9136  0063  085A               	movf	(efgtoa@g+3)^(0+128),w
  9137  0064  0020               	movlb	0	; select bank0
  9138  0065  00DD               	movwf	___flge@ff1+3
  9139  0066  0021               	movlb	1	; select bank1
  9140  0067  0859               	movf	(efgtoa@g+2)^(0+128),w
  9141  0068  0020               	movlb	0	; select bank0
  9142  0069  00DC               	movwf	___flge@ff1+2
  9143  006A  0021               	movlb	1	; select bank1
  9144  006B  0858               	movf	(efgtoa@g+1)^(0+128),w
  9145  006C  0020               	movlb	0	; select bank0
  9146  006D  00DB               	movwf	___flge@ff1+1
  9147  006E  0021               	movlb	1	; select bank1
  9148  006F  0857               	movf	efgtoa@g^(0+128),w
  9149  0070  0020               	movlb	0	; select bank0
  9150  0071  00DA               	movwf	___flge@ff1
  9151  0072  3000               	movlw	0
  9152  0073  00E1               	movwf	___flge@ff2+3
  9153  0074  3000               	movlw	0
  9154  0075  00E0               	movwf	___flge@ff2+2
  9155  0076  3000               	movlw	0
  9156  0077  00DF               	movwf	___flge@ff2+1
  9157  0078  3000               	movlw	0
  9158  0079  00DE               	movwf	___flge@ff2
  9159  007A  31A8  2030  3180   	fcall	___flge
  9160  007D  1803               	btfsc	3,0
  9161  007E  2898               	goto	l7378
  9162                           
  9163                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  9164  007F  3001               	movlw	1
  9165  0080  0021               	movlb	1	; select bank1
  9166  0081  00C5               	movwf	efgtoa@sign^(0+128)
  9167  0082  3000               	movlw	0
  9168  0083  00C6               	movwf	(efgtoa@sign^(0+128)+1)
  9169                           
  9170                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  9171  0084  085A               	movf	(efgtoa@g+3)^(0+128),w
  9172  0085  00F4               	movwf	___flneg@f1+3
  9173  0086  0859               	movf	(efgtoa@g+2)^(0+128),w
  9174  0087  00F3               	movwf	___flneg@f1+2
  9175  0088  0858               	movf	(efgtoa@g+1)^(0+128),w
  9176  0089  00F2               	movwf	___flneg@f1+1
  9177  008A  0857               	movf	efgtoa@g^(0+128),w
  9178  008B  00F1               	movwf	___flneg@f1
  9179  008C  31B1  210A  3180   	fcall	___flneg
  9180  008F  0874               	movf	?___flneg+3,w
  9181  0090  0021               	movlb	1	; select bank1
  9182  0091  00DA               	movwf	(efgtoa@g+3)^(0+128)
  9183  0092  0873               	movf	?___flneg+2,w
  9184  0093  00D9               	movwf	(efgtoa@g+2)^(0+128)
  9185  0094  0872               	movf	?___flneg+1,w
  9186  0095  00D8               	movwf	(efgtoa@g+1)^(0+128)
  9187  0096  0871               	movf	?___flneg,w
  9188  0097  00D7               	movwf	efgtoa@g^(0+128)
  9189  0098                     l7378:	
  9190                           
  9191                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  9192  0098  0021               	movlb	1	; select bank1
  9193  0099  01DD               	clrf	efgtoa@n^(0+128)
  9194  009A  01DE               	clrf	(efgtoa@n+1)^(0+128)
  9195                           
  9196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  9197  009B  0023               	movlb	3	; select bank3
  9198  009C  083F               	movf	(_width+1)^(0+384),w
  9199  009D  0021               	movlb	1	; select bank1
  9200  009E  00CB               	movwf	(efgtoa@w+1)^(0+128)
  9201  009F  0023               	movlb	3	; select bank3
  9202  00A0  083E               	movf	_width^(0+384),w
  9203  00A1  0021               	movlb	1	; select bank1
  9204  00A2  00CA               	movwf	efgtoa@w^(0+128)
  9205                           
  9206                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  9207  00A3  0845               	movf	efgtoa@sign^(0+128),w
  9208  00A4  0446               	iorwf	(efgtoa@sign+1)^(0+128),w
  9209  00A5  1D03               	btfss	3,2
  9210  00A6  28AA               	goto	l7386
  9211  00A7  0023               	movlb	3	; select bank3
  9212  00A8  1D42               	btfss	_flags^(0+384),2
  9213  00A9  28C3               	goto	l7398
  9214  00AA                     l7386:	
  9215                           
  9216                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  9217  00AA  0021               	movlb	1	; select bank1
  9218  00AB  0845               	movf	efgtoa@sign^(0+128),w
  9219  00AC  0446               	iorwf	(efgtoa@sign+1)^(0+128),w
  9220  00AD  1D03               	btfss	3,2
  9221  00AE  28B1               	goto	l7390
  9222  00AF  302B               	movlw	43
  9223  00B0  28B2               	goto	L3
  9224  00B1                     l7390:	
  9225  00B1  302D               	movlw	45
  9226  00B2                     L3:	
  9227  00B2  00AF               	movwf	_efgtoa$1100^(0+128)
  9228  00B3  3000               	movlw	0
  9229  00B4  00B0               	movwf	(_efgtoa$1100^(0+128)+1)
  9230  00B5  082F               	movf	_efgtoa$1100^(0+128),w
  9231  00B6  00A7               	movwf	??_efgtoa^(0+128)
  9232  00B7  0827               	movf	??_efgtoa^(0+128),w
  9233  00B8  0024               	movlb	4	; select bank4
  9234  00B9  00A0               	movwf	_dbuf^(0+512)
  9235                           
  9236                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  9237  00BA  3001               	movlw	1
  9238  00BB  0021               	movlb	1	; select bank1
  9239  00BC  07DD               	addwf	efgtoa@n^(0+128),f
  9240  00BD  3000               	movlw	0
  9241  00BE  3DDE               	addwfc	(efgtoa@n+1)^(0+128),f
  9242                           
  9243                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  9244  00BF  30FF               	movlw	255
  9245  00C0  07CA               	addwf	efgtoa@w^(0+128),f
  9246  00C1  30FF               	movlw	255
  9247  00C2  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  9248  00C3                     l7398:	
  9249                           
  9250                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9251  00C3  0021               	movlb	1	; select bank1
  9252  00C4  085A               	movf	(efgtoa@g+3)^(0+128),w
  9253  00C5  00F4               	movwf	___fpclassifyf@x+3
  9254  00C6  0859               	movf	(efgtoa@g+2)^(0+128),w
  9255  00C7  00F3               	movwf	___fpclassifyf@x+2
  9256  00C8  0858               	movf	(efgtoa@g+1)^(0+128),w
  9257  00C9  00F2               	movwf	___fpclassifyf@x+1
  9258  00CA  0857               	movf	efgtoa@g^(0+128),w
  9259  00CB  00F1               	movwf	___fpclassifyf@x
  9260  00CC  31B7  2788  3180   	fcall	___fpclassifyf
  9261  00CF  0371               	decf	?___fpclassifyf,w
  9262  00D0  0472               	iorwf	?___fpclassifyf+1,w
  9263  00D1  1D03               	btfss	3,2
  9264  00D2  2921               	goto	l7416
  9265  00D3  0021               	movlb	1	; select bank1
  9266  00D4  0826               	movf	efgtoa@c^(0+128),w
  9267  00D5  3EBF               	addlw	191
  9268  00D6  00A7               	movwf	??_efgtoa^(0+128)
  9269  00D7  30FF               	movlw	255
  9270  00D8  1803               	skipnc
  9271  00D9  3000               	movlw	0
  9272  00DA  00A8               	movwf	(??_efgtoa^(0+128)+1)
  9273  00DB  3000               	movlw	0
  9274  00DC  0228               	subwf	(??_efgtoa+1)^(0+128),w
  9275  00DD  301A               	movlw	26
  9276  00DE  1903               	skipnz
  9277  00DF  0227               	subwf	??_efgtoa^(0+128),w
  9278  00E0  1803               	btfsc	3,0
  9279  00E1  28E4               	goto	u10430
  9280  00E2  3001               	movlw	1
  9281  00E3  28E5               	goto	u10440
  9282  00E4                     u10430:	
  9283  00E4  3000               	movlw	0
  9284  00E5                     u10440:	
  9285  00E5  00A9               	movwf	(??_efgtoa+2)^(0+128)
  9286  00E6  01AA               	clrf	((??_efgtoa+2)^(0+128)+1)
  9287  00E7  0829               	movf	(??_efgtoa+2)^(0+128),w
  9288  00E8  00B1               	movwf	_efgtoa$1101^(0+128)
  9289  00E9  082A               	movf	(??_efgtoa+3)^(0+128),w
  9290  00EA  00B2               	movwf	(_efgtoa$1101+1)^(0+128)
  9291  00EB  0831               	movf	_efgtoa$1101^(0+128),w
  9292  00EC  0432               	iorwf	(_efgtoa$1101+1)^(0+128),w
  9293  00ED  1903               	btfsc	3,2
  9294  00EE  28F3               	goto	l7408
  9295                           
  9296                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  9297  00EF  3010               	movlw	low (STR_26| (0+32768))
  9298  00F0  00F1               	movwf	strcpy@src
  9299  00F1  30BB               	movlw	high (STR_26| (0+32768))
  9300  00F2  28F6               	goto	L4
  9301  00F3                     l7408:	
  9302                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  9303                           
  9304                           
  9305                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  9306  00F3  3020               	movlw	low (STR_27| (0+32768))
  9307  00F4  00F1               	movwf	strcpy@src
  9308  00F5  30BB               	movlw	high (STR_27| (0+32768))
  9309  00F6                     L4:	
  9310  00F6  00F2               	movwf	strcpy@src+1
  9311  00F7  085D               	movf	efgtoa@n^(0+128),w
  9312  00F8  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9313  00F9  31B2  2287  3180   	fcall	_strcpy
  9314                           
  9315                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  9316  00FC  30FD               	movlw	253
  9317  00FD  0021               	movlb	1	; select bank1
  9318  00FE  07CA               	addwf	efgtoa@w^(0+128),f
  9319  00FF  30FF               	movlw	255
  9320  0100  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  9321                           
  9322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  9323  0101  0821               	movf	(efgtoa@fp+1)^(0+128),w
  9324  0102  0020               	movlb	0	; select bank0
  9325  0103  00A7               	movwf	pad@fp+1
  9326  0104  0021               	movlb	1	; select bank1
  9327  0105  0820               	movf	efgtoa@fp^(0+128),w
  9328  0106  0020               	movlb	0	; select bank0
  9329  0107  00A6               	movwf	pad@fp
  9330  0108  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  9331  0109  0021               	movlb	1	; select bank1
  9332  010A  00A7               	movwf	??_efgtoa^(0+128)
  9333  010B  0827               	movf	??_efgtoa^(0+128),w
  9334  010C  0020               	movlb	0	; select bank0
  9335  010D  00A8               	movwf	pad@buf
  9336  010E  0021               	movlb	1	; select bank1
  9337  010F  084B               	movf	(efgtoa@w+1)^(0+128),w
  9338  0110  0020               	movlb	0	; select bank0
  9339  0111  00AA               	movwf	pad@p+1
  9340  0112  0021               	movlb	1	; select bank1
  9341  0113  084A               	movf	efgtoa@w^(0+128),w
  9342  0114  0020               	movlb	0	; select bank0
  9343  0115  00A9               	movwf	pad@p
  9344  0116  31B5  256D         	fcall	_pad
  9345  0118  0020               	movlb	0	; select bank0
  9346  0119  0827               	movf	?_pad+1,w
  9347  011A  0021               	movlb	1	; select bank1
  9348  011B  00A1               	movwf	(?_efgtoa+1)^(0+128)
  9349  011C  0020               	movlb	0	; select bank0
  9350  011D  0826               	movf	?_pad,w
  9351  011E  0021               	movlb	1	; select bank1
  9352  011F  00A0               	movwf	?_efgtoa^(0+128)
  9353  0120  0008               	return
  9354  0121                     l7416:	
  9355                           
  9356                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9357  0121  0021               	movlb	1	; select bank1
  9358  0122  085A               	movf	(efgtoa@g+3)^(0+128),w
  9359  0123  00F4               	movwf	___fpclassifyf@x+3
  9360  0124  0859               	movf	(efgtoa@g+2)^(0+128),w
  9361  0125  00F3               	movwf	___fpclassifyf@x+2
  9362  0126  0858               	movf	(efgtoa@g+1)^(0+128),w
  9363  0127  00F2               	movwf	___fpclassifyf@x+1
  9364  0128  0857               	movf	efgtoa@g^(0+128),w
  9365  0129  00F1               	movwf	___fpclassifyf@x
  9366  012A  31B7  2788  3180   	fcall	___fpclassifyf
  9367  012D  0871               	movf	?___fpclassifyf,w
  9368  012E  0472               	iorwf	?___fpclassifyf+1,w
  9369  012F  1D03               	btfss	3,2
  9370  0130  297F               	goto	l7434
  9371  0131  0021               	movlb	1	; select bank1
  9372  0132  0826               	movf	efgtoa@c^(0+128),w
  9373  0133  3EBF               	addlw	191
  9374  0134  00A7               	movwf	??_efgtoa^(0+128)
  9375  0135  30FF               	movlw	255
  9376  0136  1803               	skipnc
  9377  0137  3000               	movlw	0
  9378  0138  00A8               	movwf	(??_efgtoa^(0+128)+1)
  9379  0139  3000               	movlw	0
  9380  013A  0228               	subwf	(??_efgtoa+1)^(0+128),w
  9381  013B  301A               	movlw	26
  9382  013C  1903               	skipnz
  9383  013D  0227               	subwf	??_efgtoa^(0+128),w
  9384  013E  1803               	btfsc	3,0
  9385  013F  2942               	goto	u10470
  9386  0140  3001               	movlw	1
  9387  0141  2943               	goto	u10480
  9388  0142                     u10470:	
  9389  0142  3000               	movlw	0
  9390  0143                     u10480:	
  9391  0143  00A9               	movwf	(??_efgtoa+2)^(0+128)
  9392  0144  01AA               	clrf	((??_efgtoa+2)^(0+128)+1)
  9393  0145  0829               	movf	(??_efgtoa+2)^(0+128),w
  9394  0146  00B3               	movwf	_efgtoa$1105^(0+128)
  9395  0147  082A               	movf	(??_efgtoa+3)^(0+128),w
  9396  0148  00B4               	movwf	(_efgtoa$1105+1)^(0+128)
  9397  0149  0833               	movf	_efgtoa$1105^(0+128),w
  9398  014A  0434               	iorwf	(_efgtoa$1105+1)^(0+128),w
  9399  014B  1903               	btfsc	3,2
  9400  014C  2951               	goto	l7426
  9401                           
  9402                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  9403  014D  3014               	movlw	low (STR_30| (0+32768))
  9404  014E  00F1               	movwf	strcpy@src
  9405  014F  30BB               	movlw	high (STR_30| (0+32768))
  9406  0150  2954               	goto	L5
  9407  0151                     l7426:	
  9408                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  9409                           
  9410                           
  9411                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  9412  0151  3028               	movlw	low (STR_31| (0+32768))
  9413  0152  00F1               	movwf	strcpy@src
  9414  0153  30BB               	movlw	high (STR_31| (0+32768))
  9415  0154                     L5:	
  9416  0154  00F2               	movwf	strcpy@src+1
  9417  0155  085D               	movf	efgtoa@n^(0+128),w
  9418  0156  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9419  0157  31B2  2287  3180   	fcall	_strcpy
  9420                           
  9421                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 358:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  9422  015A  30FD               	movlw	253
  9423  015B  0021               	movlb	1	; select bank1
  9424  015C  07CA               	addwf	efgtoa@w^(0+128),f
  9425  015D  30FF               	movlw	255
  9426  015E  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  9427                           
  9428                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 359:       
      +                            return pad(fp, &dbuf[0], w);
  9429  015F  0821               	movf	(efgtoa@fp+1)^(0+128),w
  9430  0160  0020               	movlb	0	; select bank0
  9431  0161  00A7               	movwf	pad@fp+1
  9432  0162  0021               	movlb	1	; select bank1
  9433  0163  0820               	movf	efgtoa@fp^(0+128),w
  9434  0164  0020               	movlb	0	; select bank0
  9435  0165  00A6               	movwf	pad@fp
  9436  0166  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  9437  0167  0021               	movlb	1	; select bank1
  9438  0168  00A7               	movwf	??_efgtoa^(0+128)
  9439  0169  0827               	movf	??_efgtoa^(0+128),w
  9440  016A  0020               	movlb	0	; select bank0
  9441  016B  00A8               	movwf	pad@buf
  9442  016C  0021               	movlb	1	; select bank1
  9443  016D  084B               	movf	(efgtoa@w+1)^(0+128),w
  9444  016E  0020               	movlb	0	; select bank0
  9445  016F  00AA               	movwf	pad@p+1
  9446  0170  0021               	movlb	1	; select bank1
  9447  0171  084A               	movf	efgtoa@w^(0+128),w
  9448  0172  0020               	movlb	0	; select bank0
  9449  0173  00A9               	movwf	pad@p
  9450  0174  31B5  256D         	fcall	_pad
  9451  0176  0020               	movlb	0	; select bank0
  9452  0177  0827               	movf	?_pad+1,w
  9453  0178  0021               	movlb	1	; select bank1
  9454  0179  00A1               	movwf	(?_efgtoa+1)^(0+128)
  9455  017A  0020               	movlb	0	; select bank0
  9456  017B  0826               	movf	?_pad,w
  9457  017C  0021               	movlb	1	; select bank1
  9458  017D  00A0               	movwf	?_efgtoa^(0+128)
  9459  017E  0008               	return
  9460  017F                     l7434:	
  9461                           
  9462                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  9463  017F  303F               	movlw	63
  9464  0180  0021               	movlb	1	; select bank1
  9465  0181  00E2               	movwf	(efgtoa@u+3)^(0+128)
  9466  0182  3080               	movlw	128
  9467  0183  00E1               	movwf	(efgtoa@u+2)^(0+128)
  9468  0184  3000               	movlw	0
  9469  0185  00E0               	movwf	(efgtoa@u+1)^(0+128)
  9470  0186  3000               	movlw	0
  9471  0187  00DF               	movwf	efgtoa@u^(0+128)
  9472                           
  9473                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  9474  0188  01DB               	clrf	efgtoa@e^(0+128)
  9475  0189  01DC               	clrf	(efgtoa@e+1)^(0+128)
  9476                           
  9477                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  9478  018A  085A               	movf	(efgtoa@g+3)^(0+128),w
  9479  018B  00F4               	movwf	___fleq@ff1+3
  9480  018C  0859               	movf	(efgtoa@g+2)^(0+128),w
  9481  018D  00F3               	movwf	___fleq@ff1+2
  9482  018E  0858               	movf	(efgtoa@g+1)^(0+128),w
  9483  018F  00F2               	movwf	___fleq@ff1+1
  9484  0190  0857               	movf	efgtoa@g^(0+128),w
  9485  0191  00F1               	movwf	___fleq@ff1
  9486  0192  3000               	movlw	0
  9487  0193  00F8               	movwf	___fleq@ff2+3
  9488  0194  3000               	movlw	0
  9489  0195  00F7               	movwf	___fleq@ff2+2
  9490  0196  3000               	movlw	0
  9491  0197  00F6               	movwf	___fleq@ff2+1
  9492  0198  3000               	movlw	0
  9493  0199  00F5               	movwf	___fleq@ff2
  9494  019A  31B4  2484  3180   	fcall	___fleq
  9495  019D  1C03               	btfss	3,0
  9496  019E  29D0               	goto	l7446
  9497  019F  2A5F               	goto	l7454
  9498  01A0                     l7442:	
  9499                           
  9500                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  9501  01A0  3041               	movlw	65
  9502  01A1  0020               	movlb	0	; select bank0
  9503  01A2  00A9               	movwf	___flmul@b+3
  9504  01A3  3020               	movlw	32
  9505  01A4  00A8               	movwf	___flmul@b+2
  9506  01A5  3000               	movlw	0
  9507  01A6  00A7               	movwf	___flmul@b+1
  9508  01A7  3000               	movlw	0
  9509  01A8  00A6               	movwf	___flmul@b
  9510  01A9  0021               	movlb	1	; select bank1
  9511  01AA  0862               	movf	(efgtoa@u+3)^(0+128),w
  9512  01AB  0020               	movlb	0	; select bank0
  9513  01AC  00AD               	movwf	___flmul@a+3
  9514  01AD  0021               	movlb	1	; select bank1
  9515  01AE  0861               	movf	(efgtoa@u+2)^(0+128),w
  9516  01AF  0020               	movlb	0	; select bank0
  9517  01B0  00AC               	movwf	___flmul@a+2
  9518  01B1  0021               	movlb	1	; select bank1
  9519  01B2  0860               	movf	(efgtoa@u+1)^(0+128),w
  9520  01B3  0020               	movlb	0	; select bank0
  9521  01B4  00AB               	movwf	___flmul@a+1
  9522  01B5  0021               	movlb	1	; select bank1
  9523  01B6  085F               	movf	efgtoa@u^(0+128),w
  9524  01B7  0020               	movlb	0	; select bank0
  9525  01B8  00AA               	movwf	___flmul@a
  9526  01B9  3195  25D4  3180   	fcall	___flmul
  9527  01BC  0020               	movlb	0	; select bank0
  9528  01BD  0829               	movf	?___flmul+3,w
  9529  01BE  0021               	movlb	1	; select bank1
  9530  01BF  00E2               	movwf	(efgtoa@u+3)^(0+128)
  9531  01C0  0020               	movlb	0	; select bank0
  9532  01C1  0828               	movf	?___flmul+2,w
  9533  01C2  0021               	movlb	1	; select bank1
  9534  01C3  00E1               	movwf	(efgtoa@u+2)^(0+128)
  9535  01C4  0020               	movlb	0	; select bank0
  9536  01C5  0827               	movf	?___flmul+1,w
  9537  01C6  0021               	movlb	1	; select bank1
  9538  01C7  00E0               	movwf	(efgtoa@u+1)^(0+128)
  9539  01C8  0020               	movlb	0	; select bank0
  9540  01C9  0826               	movf	?___flmul,w
  9541  01CA  0021               	movlb	1	; select bank1
  9542  01CB  00DF               	movwf	efgtoa@u^(0+128)
  9543                           
  9544                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  9545  01CC  3001               	movlw	1
  9546  01CD  07DB               	addwf	efgtoa@e^(0+128),f
  9547  01CE  3000               	movlw	0
  9548  01CF  3DDC               	addwfc	(efgtoa@e+1)^(0+128),f
  9549  01D0                     l7446:	
  9550                           
  9551                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  9552  01D0  0021               	movlb	1	; select bank1
  9553  01D1  085A               	movf	(efgtoa@g+3)^(0+128),w
  9554  01D2  0020               	movlb	0	; select bank0
  9555  01D3  00DD               	movwf	___flge@ff1+3
  9556  01D4  0021               	movlb	1	; select bank1
  9557  01D5  0859               	movf	(efgtoa@g+2)^(0+128),w
  9558  01D6  0020               	movlb	0	; select bank0
  9559  01D7  00DC               	movwf	___flge@ff1+2
  9560  01D8  0021               	movlb	1	; select bank1
  9561  01D9  0858               	movf	(efgtoa@g+1)^(0+128),w
  9562  01DA  0020               	movlb	0	; select bank0
  9563  01DB  00DB               	movwf	___flge@ff1+1
  9564  01DC  0021               	movlb	1	; select bank1
  9565  01DD  0857               	movf	efgtoa@g^(0+128),w
  9566  01DE  0020               	movlb	0	; select bank0
  9567  01DF  00DA               	movwf	___flge@ff1
  9568  01E0  3041               	movlw	65
  9569  01E1  00A9               	movwf	___flmul@b+3
  9570  01E2  3020               	movlw	32
  9571  01E3  00A8               	movwf	___flmul@b+2
  9572  01E4  3000               	movlw	0
  9573  01E5  00A7               	movwf	___flmul@b+1
  9574  01E6  3000               	movlw	0
  9575  01E7  00A6               	movwf	___flmul@b
  9576  01E8  0021               	movlb	1	; select bank1
  9577  01E9  0862               	movf	(efgtoa@u+3)^(0+128),w
  9578  01EA  0020               	movlb	0	; select bank0
  9579  01EB  00AD               	movwf	___flmul@a+3
  9580  01EC  0021               	movlb	1	; select bank1
  9581  01ED  0861               	movf	(efgtoa@u+2)^(0+128),w
  9582  01EE  0020               	movlb	0	; select bank0
  9583  01EF  00AC               	movwf	___flmul@a+2
  9584  01F0  0021               	movlb	1	; select bank1
  9585  01F1  0860               	movf	(efgtoa@u+1)^(0+128),w
  9586  01F2  0020               	movlb	0	; select bank0
  9587  01F3  00AB               	movwf	___flmul@a+1
  9588  01F4  0021               	movlb	1	; select bank1
  9589  01F5  085F               	movf	efgtoa@u^(0+128),w
  9590  01F6  0020               	movlb	0	; select bank0
  9591  01F7  00AA               	movwf	___flmul@a
  9592  01F8  3195  25D4  3180   	fcall	___flmul
  9593  01FB  0020               	movlb	0	; select bank0
  9594  01FC  0829               	movf	?___flmul+3,w
  9595  01FD  00E1               	movwf	___flge@ff2+3
  9596  01FE  0828               	movf	?___flmul+2,w
  9597  01FF  00E0               	movwf	___flge@ff2+2
  9598  0200  0827               	movf	?___flmul+1,w
  9599  0201  00DF               	movwf	___flge@ff2+1
  9600  0202  0826               	movf	?___flmul,w
  9601  0203  00DE               	movwf	___flge@ff2
  9602  0204  31A8  2030  3180   	fcall	___flge
  9603  0207  1C03               	btfss	3,0
  9604  0208  2A3A               	goto	l7452
  9605  0209  29A0               	goto	l7442
  9606  020A                     l7448:	
  9607                           
  9608                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  9609  020A  3041               	movlw	65
  9610  020B  0020               	movlb	0	; select bank0
  9611  020C  00C3               	movwf	___fldiv@a+3
  9612  020D  3020               	movlw	32
  9613  020E  00C2               	movwf	___fldiv@a+2
  9614  020F  3000               	movlw	0
  9615  0210  00C1               	movwf	___fldiv@a+1
  9616  0211  3000               	movlw	0
  9617  0212  00C0               	movwf	___fldiv@a
  9618  0213  0021               	movlb	1	; select bank1
  9619  0214  0862               	movf	(efgtoa@u+3)^(0+128),w
  9620  0215  0020               	movlb	0	; select bank0
  9621  0216  00C7               	movwf	___fldiv@b+3
  9622  0217  0021               	movlb	1	; select bank1
  9623  0218  0861               	movf	(efgtoa@u+2)^(0+128),w
  9624  0219  0020               	movlb	0	; select bank0
  9625  021A  00C6               	movwf	___fldiv@b+2
  9626  021B  0021               	movlb	1	; select bank1
  9627  021C  0860               	movf	(efgtoa@u+1)^(0+128),w
  9628  021D  0020               	movlb	0	; select bank0
  9629  021E  00C5               	movwf	___fldiv@b+1
  9630  021F  0021               	movlb	1	; select bank1
  9631  0220  085F               	movf	efgtoa@u^(0+128),w
  9632  0221  0020               	movlb	0	; select bank0
  9633  0222  00C4               	movwf	___fldiv@b
  9634  0223  3190  2052  3180   	fcall	___fldiv
  9635  0226  0020               	movlb	0	; select bank0
  9636  0227  0843               	movf	?___fldiv+3,w
  9637  0228  0021               	movlb	1	; select bank1
  9638  0229  00E2               	movwf	(efgtoa@u+3)^(0+128)
  9639  022A  0020               	movlb	0	; select bank0
  9640  022B  0842               	movf	?___fldiv+2,w
  9641  022C  0021               	movlb	1	; select bank1
  9642  022D  00E1               	movwf	(efgtoa@u+2)^(0+128)
  9643  022E  0020               	movlb	0	; select bank0
  9644  022F  0841               	movf	?___fldiv+1,w
  9645  0230  0021               	movlb	1	; select bank1
  9646  0231  00E0               	movwf	(efgtoa@u+1)^(0+128)
  9647  0232  0020               	movlb	0	; select bank0
  9648  0233  0840               	movf	?___fldiv,w
  9649  0234  0021               	movlb	1	; select bank1
  9650  0235  00DF               	movwf	efgtoa@u^(0+128)
  9651                           
  9652                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  9653  0236  30FF               	movlw	255
  9654  0237  07DB               	addwf	efgtoa@e^(0+128),f
  9655  0238  30FF               	movlw	255
  9656  0239  3DDC               	addwfc	(efgtoa@e+1)^(0+128),f
  9657  023A                     l7452:	
  9658                           
  9659                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  9660  023A  0021               	movlb	1	; select bank1
  9661  023B  085A               	movf	(efgtoa@g+3)^(0+128),w
  9662  023C  0020               	movlb	0	; select bank0
  9663  023D  00DD               	movwf	___flge@ff1+3
  9664  023E  0021               	movlb	1	; select bank1
  9665  023F  0859               	movf	(efgtoa@g+2)^(0+128),w
  9666  0240  0020               	movlb	0	; select bank0
  9667  0241  00DC               	movwf	___flge@ff1+2
  9668  0242  0021               	movlb	1	; select bank1
  9669  0243  0858               	movf	(efgtoa@g+1)^(0+128),w
  9670  0244  0020               	movlb	0	; select bank0
  9671  0245  00DB               	movwf	___flge@ff1+1
  9672  0246  0021               	movlb	1	; select bank1
  9673  0247  0857               	movf	efgtoa@g^(0+128),w
  9674  0248  0020               	movlb	0	; select bank0
  9675  0249  00DA               	movwf	___flge@ff1
  9676  024A  0021               	movlb	1	; select bank1
  9677  024B  0862               	movf	(efgtoa@u+3)^(0+128),w
  9678  024C  0020               	movlb	0	; select bank0
  9679  024D  00E1               	movwf	___flge@ff2+3
  9680  024E  0021               	movlb	1	; select bank1
  9681  024F  0861               	movf	(efgtoa@u+2)^(0+128),w
  9682  0250  0020               	movlb	0	; select bank0
  9683  0251  00E0               	movwf	___flge@ff2+2
  9684  0252  0021               	movlb	1	; select bank1
  9685  0253  0860               	movf	(efgtoa@u+1)^(0+128),w
  9686  0254  0020               	movlb	0	; select bank0
  9687  0255  00DF               	movwf	___flge@ff2+1
  9688  0256  0021               	movlb	1	; select bank1
  9689  0257  085F               	movf	efgtoa@u^(0+128),w
  9690  0258  0020               	movlb	0	; select bank0
  9691  0259  00DE               	movwf	___flge@ff2
  9692  025A  31A8  2030  3180   	fcall	___flge
  9693  025D  1C03               	btfss	3,0
  9694  025E  2A0A               	goto	l7448
  9695  025F                     l7454:	
  9696                           
  9697                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  9698  025F  0021               	movlb	1	; select bank1
  9699  0260  0826               	movf	efgtoa@c^(0+128),w
  9700  0261  00A7               	movwf	??_efgtoa^(0+128)
  9701  0262  01A8               	clrf	(??_efgtoa^(0+128)+1)
  9702  0263  0827               	movf	??_efgtoa^(0+128),w
  9703  0264  00F7               	movwf	tolower@c
  9704  0265  0828               	movf	(??_efgtoa+1)^(0+128),w
  9705  0266  00F8               	movwf	tolower@c+1
  9706  0267  31B2  22E9  3180   	fcall	_tolower
  9707  026A  0877               	movf	?_tolower,w
  9708  026B  0021               	movlb	1	; select bank1
  9709  026C  00A9               	movwf	(??_efgtoa+2)^(0+128)
  9710  026D  0829               	movf	(??_efgtoa+2)^(0+128),w
  9711  026E  00CC               	movwf	efgtoa@mode^(0+128)
  9712                           
  9713                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  9714  026F  084C               	movf	efgtoa@mode^(0+128),w
  9715  0270  00A7               	movwf	??_efgtoa^(0+128)
  9716  0271  0827               	movf	??_efgtoa^(0+128),w
  9717  0272  00C9               	movwf	efgtoa@nmode^(0+128)
  9718                           
  9719                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  9720  0273  3067               	movlw	103
  9721  0274  064C               	xorwf	efgtoa@mode^(0+128),w
  9722  0275  1D03               	btfss	3,2
  9723  0276  2A93               	goto	l637
  9724                           
  9725                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  9726  0277  0023               	movlb	3	; select bank3
  9727  0278  0840               	movf	_prec^(0+384),w
  9728  0279  0441               	iorwf	(_prec+1)^(0+384),w
  9729  027A  1D03               	btfss	3,2
  9730  027B  2A80               	goto	l638
  9731                           
  9732                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  9733  027C  3001               	movlw	1
  9734  027D  00C0               	movwf	_prec^(0+384)
  9735  027E  3000               	movlw	0
  9736  027F  00C1               	movwf	(_prec^(0+384)+1)
  9737  0280                     l638:	
  9738                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 382:   }
  9739                           
  9740                           
  9741                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  9742  0280  0841               	movf	(_prec+1)^(0+384),w
  9743  0281  3A80               	xorlw	128
  9744  0282  0021               	movlb	1	; select bank1
  9745  0283  00A7               	movwf	??_efgtoa^(0+128)
  9746  0284  3080               	movlw	128
  9747  0285  0227               	subwf	??_efgtoa^(0+128),w
  9748  0286  1D03               	skipz
  9749  0287  2A8B               	goto	u10555
  9750  0288  3001               	movlw	1
  9751  0289  0023               	movlb	3	; select bank3
  9752  028A  0240               	subwf	_prec^(0+384),w
  9753  028B                     u10555:	
  9754  028B  1803               	skipnc
  9755  028C  2A96               	goto	l7466
  9756  028D                     l7464:	
  9757  028D  3006               	movlw	6
  9758  028E  0021               	movlb	1	; select bank1
  9759  028F  00C7               	movwf	efgtoa@p^(0+128)
  9760  0290  3000               	movlw	0
  9761  0291  00C8               	movwf	(efgtoa@p^(0+128)+1)
  9762  0292  2A9E               	goto	l7472
  9763  0293                     l637:	
  9764                           
  9765                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  9766  0293  0023               	movlb	3	; select bank3
  9767  0294  1BC1               	btfsc	(_prec+1)^(0+384),7
  9768  0295  2A8D               	goto	l7464
  9769  0296                     l7466:	
  9770  0296  0023               	movlb	3	; select bank3
  9771  0297  0841               	movf	(_prec+1)^(0+384),w
  9772  0298  0021               	movlb	1	; select bank1
  9773  0299  00C8               	movwf	(efgtoa@p+1)^(0+128)
  9774  029A  0023               	movlb	3	; select bank3
  9775  029B  0840               	movf	_prec^(0+384),w
  9776  029C  0021               	movlb	1	; select bank1
  9777  029D  00C7               	movwf	efgtoa@p^(0+128)
  9778  029E                     l7472:	
  9779                           
  9780                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  9781  029E  3067               	movlw	103
  9782  029F  064C               	xorwf	efgtoa@mode^(0+128),w
  9783  02A0  1D03               	btfss	3,2
  9784  02A1  2AC7               	goto	l648
  9785                           
  9786                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  9787  02A2  085C               	movf	(efgtoa@e+1)^(0+128),w
  9788  02A3  3A80               	xorlw	128
  9789  02A4  00A7               	movwf	??_efgtoa^(0+128)
  9790  02A5  307F               	movlw	127
  9791  02A6  0227               	subwf	??_efgtoa^(0+128),w
  9792  02A7  1D03               	skipz
  9793  02A8  2AAB               	goto	u10585
  9794  02A9  30FC               	movlw	252
  9795  02AA  025B               	subwf	efgtoa@e^(0+128),w
  9796  02AB                     u10585:	
  9797  02AB  1C03               	skipc
  9798  02AC  2AC2               	goto	l7480
  9799  02AD  0021               	movlb	1	; select bank1
  9800  02AE  0847               	movf	efgtoa@p^(0+128),w
  9801  02AF  3EFF               	addlw	255
  9802  02B0  00A7               	movwf	??_efgtoa^(0+128)
  9803  02B1  30FF               	movlw	255
  9804  02B2  3D48               	addwfc	(efgtoa@p+1)^(0+128),w
  9805  02B3  00A8               	movwf	(??_efgtoa+1)^(0+128)
  9806  02B4  0828               	movf	(??_efgtoa+1)^(0+128),w
  9807  02B5  3A80               	xorlw	128
  9808  02B6  00A9               	movwf	(??_efgtoa+2)^(0+128)
  9809  02B7  085C               	movf	(efgtoa@e+1)^(0+128),w
  9810  02B8  3A80               	xorlw	128
  9811  02B9  0229               	subwf	(??_efgtoa+2)^(0+128),w
  9812  02BA  1D03               	skipz
  9813  02BB  2ABE               	goto	u10595
  9814  02BC  085B               	movf	efgtoa@e^(0+128),w
  9815  02BD  0227               	subwf	??_efgtoa^(0+128),w
  9816  02BE                     u10595:	
  9817  02BE  1C03               	skipc
  9818  02BF  2AC2               	goto	l7480
  9819                           
  9820                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  9821  02C0  3066               	movlw	102
  9822  02C1  2AC3               	goto	L6
  9823  02C2                     l7480:	
  9824                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  9825                           
  9826                           
  9827                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  9828  02C2  3065               	movlw	101
  9829  02C3                     L6:	
  9830  02C3  0021               	movlb	1	; select bank1
  9831  02C4  00A7               	movwf	??_efgtoa^(0+128)
  9832  02C5  0827               	movf	??_efgtoa^(0+128),w
  9833  02C6  00C9               	movwf	efgtoa@nmode^(0+128)
  9834  02C7                     l648:	
  9835                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 395:     }
  9836                           
  9837                           
  9838                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  9839  02C7  0848               	movf	(efgtoa@p+1)^(0+128),w
  9840  02C8  00C0               	movwf	(efgtoa@m+1)^(0+128)
  9841  02C9  0847               	movf	efgtoa@p^(0+128),w
  9842  02CA  00BF               	movwf	efgtoa@m^(0+128)
  9843                           
  9844                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  9845  02CB  3067               	movlw	103
  9846  02CC  064C               	xorwf	efgtoa@mode^(0+128),w
  9847  02CD  1D03               	btfss	3,2
  9848  02CE  2AD4               	goto	l7488
  9849  02CF  3066               	movlw	102
  9850  02D0  0649               	xorwf	efgtoa@nmode^(0+128),w
  9851  02D1  1903               	btfsc	3,2
  9852  02D2  1FDC               	btfss	(efgtoa@e+1)^(0+128),7
  9853  02D3  2AD8               	goto	l7490
  9854  02D4                     l7488:	
  9855                           
  9856                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  9857  02D4  3001               	movlw	1
  9858  02D5  07BF               	addwf	efgtoa@m^(0+128),f
  9859  02D6  3000               	movlw	0
  9860  02D7  3DC0               	addwfc	(efgtoa@m+1)^(0+128),f
  9861  02D8                     l7490:	
  9862                           
  9863                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  9864  02D8  3066               	movlw	102
  9865  02D9  0649               	xorwf	efgtoa@nmode^(0+128),w
  9866  02DA  1D03               	btfss	3,2
  9867  02DB  2AF0               	goto	l7502
  9868                           
  9869                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  9870  02DC  1FDC               	btfss	(efgtoa@e+1)^(0+128),7
  9871  02DD  2AE8               	goto	l7498
  9872                           
  9873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  9874  02DE  303F               	movlw	63
  9875  02DF  00E2               	movwf	(efgtoa@u+3)^(0+128)
  9876  02E0  3080               	movlw	128
  9877  02E1  00E1               	movwf	(efgtoa@u+2)^(0+128)
  9878  02E2  3000               	movlw	0
  9879  02E3  00E0               	movwf	(efgtoa@u+1)^(0+128)
  9880  02E4  3000               	movlw	0
  9881  02E5  00DF               	movwf	efgtoa@u^(0+128)
  9882                           
  9883                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  9884  02E6  01DB               	clrf	efgtoa@e^(0+128)
  9885  02E7  01DC               	clrf	(efgtoa@e+1)^(0+128)
  9886  02E8                     l7498:	
  9887                           
  9888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  9889  02E8  3067               	movlw	103
  9890  02E9  064C               	xorwf	efgtoa@mode^(0+128),w
  9891  02EA  1903               	btfsc	3,2
  9892  02EB  2AF0               	goto	l7502
  9893                           
  9894                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  9895  02EC  085B               	movf	efgtoa@e^(0+128),w
  9896  02ED  07BF               	addwf	efgtoa@m^(0+128),f
  9897  02EE  085C               	movf	(efgtoa@e+1)^(0+128),w
  9898  02EF  3DC0               	addwfc	(efgtoa@m+1)^(0+128),f
  9899  02F0                     l7502:	
  9900                           
  9901                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  9902  02F0  01D5               	clrf	efgtoa@i^(0+128)
  9903  02F1  01D6               	clrf	(efgtoa@i+1)^(0+128)
  9904                           
  9905                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  9906  02F2  085A               	movf	(efgtoa@g+3)^(0+128),w
  9907  02F3  00D0               	movwf	(efgtoa@h+3)^(0+128)
  9908  02F4  0859               	movf	(efgtoa@g+2)^(0+128),w
  9909  02F5  00CF               	movwf	(efgtoa@h+2)^(0+128)
  9910  02F6  0858               	movf	(efgtoa@g+1)^(0+128),w
  9911  02F7  00CE               	movwf	(efgtoa@h+1)^(0+128)
  9912  02F8  0857               	movf	efgtoa@g^(0+128),w
  9913  02F9  00CD               	movwf	efgtoa@h^(0+128)
  9914                           
  9915                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  9916  02FA  0862               	movf	(efgtoa@u+3)^(0+128),w
  9917  02FB  00AE               	movwf	(efgtoa@ou+3)^(0+128)
  9918  02FC  0861               	movf	(efgtoa@u+2)^(0+128),w
  9919  02FD  00AD               	movwf	(efgtoa@ou+2)^(0+128)
  9920  02FE  0860               	movf	(efgtoa@u+1)^(0+128),w
  9921  02FF  00AC               	movwf	(efgtoa@ou+1)^(0+128)
  9922  0300  085F               	movf	efgtoa@u^(0+128),w
  9923  0301  00AB               	movwf	efgtoa@ou^(0+128)
  9924  0302                     l7512:	
  9925                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  9926                           
  9927                           
  9928                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  9929  0302  0856               	movf	(efgtoa@i+1)^(0+128),w
  9930  0303  3A80               	xorlw	128
  9931  0304  00A7               	movwf	??_efgtoa^(0+128)
  9932  0305  0840               	movf	(efgtoa@m+1)^(0+128),w
  9933  0306  3A80               	xorlw	128
  9934  0307  0227               	subwf	??_efgtoa^(0+128),w
  9935  0308  1D03               	skipz
  9936  0309  2B0C               	goto	u10665
  9937  030A  083F               	movf	efgtoa@m^(0+128),w
  9938  030B  0255               	subwf	efgtoa@i^(0+128),w
  9939  030C                     u10665:	
  9940  030C  1803               	btfsc	3,0
  9941  030D  2BE6               	goto	l7514
  9942                           
  9943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  9944  030E  0021               	movlb	1	; select bank1
  9945  030F  0862               	movf	(efgtoa@u+3)^(0+128),w
  9946  0310  0020               	movlb	0	; select bank0
  9947  0311  00C3               	movwf	___fldiv@a+3
  9948  0312  0021               	movlb	1	; select bank1
  9949  0313  0861               	movf	(efgtoa@u+2)^(0+128),w
  9950  0314  0020               	movlb	0	; select bank0
  9951  0315  00C2               	movwf	___fldiv@a+2
  9952  0316  0021               	movlb	1	; select bank1
  9953  0317  0860               	movf	(efgtoa@u+1)^(0+128),w
  9954  0318  0020               	movlb	0	; select bank0
  9955  0319  00C1               	movwf	___fldiv@a+1
  9956  031A  0021               	movlb	1	; select bank1
  9957  031B  085F               	movf	efgtoa@u^(0+128),w
  9958  031C  0020               	movlb	0	; select bank0
  9959  031D  00C0               	movwf	___fldiv@a
  9960  031E  0021               	movlb	1	; select bank1
  9961  031F  0850               	movf	(efgtoa@h+3)^(0+128),w
  9962  0320  0020               	movlb	0	; select bank0
  9963  0321  00C7               	movwf	___fldiv@b+3
  9964  0322  0021               	movlb	1	; select bank1
  9965  0323  084F               	movf	(efgtoa@h+2)^(0+128),w
  9966  0324  0020               	movlb	0	; select bank0
  9967  0325  00C6               	movwf	___fldiv@b+2
  9968  0326  0021               	movlb	1	; select bank1
  9969  0327  084E               	movf	(efgtoa@h+1)^(0+128),w
  9970  0328  0020               	movlb	0	; select bank0
  9971  0329  00C5               	movwf	___fldiv@b+1
  9972  032A  0021               	movlb	1	; select bank1
  9973  032B  084D               	movf	efgtoa@h^(0+128),w
  9974  032C  0020               	movlb	0	; select bank0
  9975  032D  00C4               	movwf	___fldiv@b
  9976  032E  3190  2052  3180   	fcall	___fldiv
  9977  0331  0020               	movlb	0	; select bank0
  9978  0332  0843               	movf	?___fldiv+3,w
  9979  0333  00DD               	movwf	floorf@x+3
  9980  0334  0842               	movf	?___fldiv+2,w
  9981  0335  00DC               	movwf	floorf@x+2
  9982  0336  0841               	movf	?___fldiv+1,w
  9983  0337  00DB               	movwf	floorf@x+1
  9984  0338  0840               	movf	?___fldiv,w
  9985  0339  00DA               	movwf	floorf@x
  9986  033A  31A1  21C6  3180   	fcall	_floorf
  9987  033D  0020               	movlb	0	; select bank0
  9988  033E  085D               	movf	?_floorf+3,w
  9989  033F  0021               	movlb	1	; select bank1
  9990  0340  00D4               	movwf	(efgtoa@l+3)^(0+128)
  9991  0341  0020               	movlb	0	; select bank0
  9992  0342  085C               	movf	?_floorf+2,w
  9993  0343  0021               	movlb	1	; select bank1
  9994  0344  00D3               	movwf	(efgtoa@l+2)^(0+128)
  9995  0345  0020               	movlb	0	; select bank0
  9996  0346  085B               	movf	?_floorf+1,w
  9997  0347  0021               	movlb	1	; select bank1
  9998  0348  00D2               	movwf	(efgtoa@l+1)^(0+128)
  9999  0349  0020               	movlb	0	; select bank0
 10000  034A  085A               	movf	?_floorf,w
 10001  034B  0021               	movlb	1	; select bank1
 10002  034C  00D1               	movwf	efgtoa@l^(0+128)
 10003                           
 10004                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
 10005  034D  0854               	movf	(efgtoa@l+3)^(0+128),w
 10006  034E  0020               	movlb	0	; select bank0
 10007  034F  00DD               	movwf	___fltol@f1+3
 10008  0350  0021               	movlb	1	; select bank1
 10009  0351  0853               	movf	(efgtoa@l+2)^(0+128),w
 10010  0352  0020               	movlb	0	; select bank0
 10011  0353  00DC               	movwf	___fltol@f1+2
 10012  0354  0021               	movlb	1	; select bank1
 10013  0355  0852               	movf	(efgtoa@l+1)^(0+128),w
 10014  0356  0020               	movlb	0	; select bank0
 10015  0357  00DB               	movwf	___fltol@f1+1
 10016  0358  0021               	movlb	1	; select bank1
 10017  0359  0851               	movf	efgtoa@l^(0+128),w
 10018  035A  0020               	movlb	0	; select bank0
 10019  035B  00DA               	movwf	___fltol@f1
 10020  035C  31B6  26B9  3180   	fcall	___fltol
 10021  035F  0020               	movlb	0	; select bank0
 10022  0360  085B               	movf	?___fltol+1,w
 10023  0361  0021               	movlb	1	; select bank1
 10024  0362  00C4               	movwf	(efgtoa@d+1)^(0+128)
 10025  0363  0020               	movlb	0	; select bank0
 10026  0364  085A               	movf	?___fltol,w
 10027  0365  0021               	movlb	1	; select bank1
 10028  0366  00C3               	movwf	efgtoa@d^(0+128)
 10029                           
 10030                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
 10031  0367  0854               	movf	(efgtoa@l+3)^(0+128),w
 10032  0368  0020               	movlb	0	; select bank0
 10033  0369  00AD               	movwf	___flmul@a+3
 10034  036A  0021               	movlb	1	; select bank1
 10035  036B  0853               	movf	(efgtoa@l+2)^(0+128),w
 10036  036C  0020               	movlb	0	; select bank0
 10037  036D  00AC               	movwf	___flmul@a+2
 10038  036E  0021               	movlb	1	; select bank1
 10039  036F  0852               	movf	(efgtoa@l+1)^(0+128),w
 10040  0370  0020               	movlb	0	; select bank0
 10041  0371  00AB               	movwf	___flmul@a+1
 10042  0372  0021               	movlb	1	; select bank1
 10043  0373  0851               	movf	efgtoa@l^(0+128),w
 10044  0374  0020               	movlb	0	; select bank0
 10045  0375  00AA               	movwf	___flmul@a
 10046  0376  0021               	movlb	1	; select bank1
 10047  0377  0862               	movf	(efgtoa@u+3)^(0+128),w
 10048  0378  0020               	movlb	0	; select bank0
 10049  0379  00A9               	movwf	___flmul@b+3
 10050  037A  0021               	movlb	1	; select bank1
 10051  037B  0861               	movf	(efgtoa@u+2)^(0+128),w
 10052  037C  0020               	movlb	0	; select bank0
 10053  037D  00A8               	movwf	___flmul@b+2
 10054  037E  0021               	movlb	1	; select bank1
 10055  037F  0860               	movf	(efgtoa@u+1)^(0+128),w
 10056  0380  0020               	movlb	0	; select bank0
 10057  0381  00A7               	movwf	___flmul@b+1
 10058  0382  0021               	movlb	1	; select bank1
 10059  0383  085F               	movf	efgtoa@u^(0+128),w
 10060  0384  0020               	movlb	0	; select bank0
 10061  0385  00A6               	movwf	___flmul@b
 10062  0386  3195  25D4  3180   	fcall	___flmul
 10063  0389  0020               	movlb	0	; select bank0
 10064  038A  0829               	movf	?___flmul+3,w
 10065  038B  00C3               	movwf	___flsub@a+3
 10066  038C  0828               	movf	?___flmul+2,w
 10067  038D  00C2               	movwf	___flsub@a+2
 10068  038E  0827               	movf	?___flmul+1,w
 10069  038F  00C1               	movwf	___flsub@a+1
 10070  0390  0826               	movf	?___flmul,w
 10071  0391  00C0               	movwf	___flsub@a
 10072  0392  0021               	movlb	1	; select bank1
 10073  0393  0850               	movf	(efgtoa@h+3)^(0+128),w
 10074  0394  0020               	movlb	0	; select bank0
 10075  0395  00C7               	movwf	___flsub@b+3
 10076  0396  0021               	movlb	1	; select bank1
 10077  0397  084F               	movf	(efgtoa@h+2)^(0+128),w
 10078  0398  0020               	movlb	0	; select bank0
 10079  0399  00C6               	movwf	___flsub@b+2
 10080  039A  0021               	movlb	1	; select bank1
 10081  039B  084E               	movf	(efgtoa@h+1)^(0+128),w
 10082  039C  0020               	movlb	0	; select bank0
 10083  039D  00C5               	movwf	___flsub@b+1
 10084  039E  0021               	movlb	1	; select bank1
 10085  039F  084D               	movf	efgtoa@h^(0+128),w
 10086  03A0  0020               	movlb	0	; select bank0
 10087  03A1  00C4               	movwf	___flsub@b
 10088  03A2  31B2  2268  3180   	fcall	___flsub
 10089  03A5  0020               	movlb	0	; select bank0
 10090  03A6  0843               	movf	?___flsub+3,w
 10091  03A7  0021               	movlb	1	; select bank1
 10092  03A8  00D0               	movwf	(efgtoa@h+3)^(0+128)
 10093  03A9  0020               	movlb	0	; select bank0
 10094  03AA  0842               	movf	?___flsub+2,w
 10095  03AB  0021               	movlb	1	; select bank1
 10096  03AC  00CF               	movwf	(efgtoa@h+2)^(0+128)
 10097  03AD  0020               	movlb	0	; select bank0
 10098  03AE  0841               	movf	?___flsub+1,w
 10099  03AF  0021               	movlb	1	; select bank1
 10100  03B0  00CE               	movwf	(efgtoa@h+1)^(0+128)
 10101  03B1  0020               	movlb	0	; select bank0
 10102  03B2  0840               	movf	?___flsub,w
 10103  03B3  0021               	movlb	1	; select bank1
 10104  03B4  00CD               	movwf	efgtoa@h^(0+128)
 10105                           
 10106                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
 10107  03B5  3041               	movlw	65
 10108  03B6  0020               	movlb	0	; select bank0
 10109  03B7  00C3               	movwf	___fldiv@a+3
 10110  03B8  3020               	movlw	32
 10111  03B9  00C2               	movwf	___fldiv@a+2
 10112  03BA  3000               	movlw	0
 10113  03BB  00C1               	movwf	___fldiv@a+1
 10114  03BC  3000               	movlw	0
 10115  03BD  00C0               	movwf	___fldiv@a
 10116  03BE  0021               	movlb	1	; select bank1
 10117  03BF  0862               	movf	(efgtoa@u+3)^(0+128),w
 10118  03C0  0020               	movlb	0	; select bank0
 10119  03C1  00C7               	movwf	___fldiv@b+3
 10120  03C2  0021               	movlb	1	; select bank1
 10121  03C3  0861               	movf	(efgtoa@u+2)^(0+128),w
 10122  03C4  0020               	movlb	0	; select bank0
 10123  03C5  00C6               	movwf	___fldiv@b+2
 10124  03C6  0021               	movlb	1	; select bank1
 10125  03C7  0860               	movf	(efgtoa@u+1)^(0+128),w
 10126  03C8  0020               	movlb	0	; select bank0
 10127  03C9  00C5               	movwf	___fldiv@b+1
 10128  03CA  0021               	movlb	1	; select bank1
 10129  03CB  085F               	movf	efgtoa@u^(0+128),w
 10130  03CC  0020               	movlb	0	; select bank0
 10131  03CD  00C4               	movwf	___fldiv@b
 10132  03CE  3190  2052  3180   	fcall	___fldiv
 10133  03D1  0020               	movlb	0	; select bank0
 10134  03D2  0843               	movf	?___fldiv+3,w
 10135  03D3  0021               	movlb	1	; select bank1
 10136  03D4  00E2               	movwf	(efgtoa@u+3)^(0+128)
 10137  03D5  0020               	movlb	0	; select bank0
 10138  03D6  0842               	movf	?___fldiv+2,w
 10139  03D7  0021               	movlb	1	; select bank1
 10140  03D8  00E1               	movwf	(efgtoa@u+2)^(0+128)
 10141  03D9  0020               	movlb	0	; select bank0
 10142  03DA  0841               	movf	?___fldiv+1,w
 10143  03DB  0021               	movlb	1	; select bank1
 10144  03DC  00E0               	movwf	(efgtoa@u+1)^(0+128)
 10145  03DD  0020               	movlb	0	; select bank0
 10146  03DE  0840               	movf	?___fldiv,w
 10147  03DF  0021               	movlb	1	; select bank1
 10148  03E0  00DF               	movwf	efgtoa@u^(0+128)
 10149                           
 10150                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
 10151  03E1  3001               	movlw	1
 10152  03E2  07D5               	addwf	efgtoa@i^(0+128),f
 10153  03E3  3000               	movlw	0
 10154  03E4  3DD6               	addwfc	(efgtoa@i+1)^(0+128),f
 10155  03E5  2B02               	goto	l7512
 10156  03E6                     l7514:	
 10157                           
 10158                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
 10159  03E6  3040               	movlw	64
 10160  03E7  0020               	movlb	0	; select bank0
 10161  03E8  00A9               	movwf	___flmul@b+3
 10162  03E9  30A0               	movlw	160
 10163  03EA  00A8               	movwf	___flmul@b+2
 10164  03EB  3000               	movlw	0
 10165  03EC  00A7               	movwf	___flmul@b+1
 10166  03ED  3000               	movlw	0
 10167  03EE  00A6               	movwf	___flmul@b
 10168  03EF  0021               	movlb	1	; select bank1
 10169  03F0  0862               	movf	(efgtoa@u+3)^(0+128),w
 10170  03F1  0020               	movlb	0	; select bank0
 10171  03F2  00AD               	movwf	___flmul@a+3
 10172  03F3  0021               	movlb	1	; select bank1
 10173  03F4  0861               	movf	(efgtoa@u+2)^(0+128),w
 10174  03F5  0020               	movlb	0	; select bank0
 10175  03F6  00AC               	movwf	___flmul@a+2
 10176  03F7  0021               	movlb	1	; select bank1
 10177  03F8  0860               	movf	(efgtoa@u+1)^(0+128),w
 10178  03F9  0020               	movlb	0	; select bank0
 10179  03FA  00AB               	movwf	___flmul@a+1
 10180  03FB  0021               	movlb	1	; select bank1
 10181  03FC  085F               	movf	efgtoa@u^(0+128),w
 10182  03FD  0020               	movlb	0	; select bank0
 10183  03FE  00AA               	movwf	___flmul@a
 10184  03FF  3195  25D4  3180   	fcall	___flmul
 10185  0402  0020               	movlb	0	; select bank0
 10186  0403  0829               	movf	?___flmul+3,w
 10187  0404  0021               	movlb	1	; select bank1
 10188  0405  00D4               	movwf	(efgtoa@l+3)^(0+128)
 10189  0406  0020               	movlb	0	; select bank0
 10190  0407  0828               	movf	?___flmul+2,w
 10191  0408  0021               	movlb	1	; select bank1
 10192  0409  00D3               	movwf	(efgtoa@l+2)^(0+128)
 10193  040A  0020               	movlb	0	; select bank0
 10194  040B  0827               	movf	?___flmul+1,w
 10195  040C  0021               	movlb	1	; select bank1
 10196  040D  00D2               	movwf	(efgtoa@l+1)^(0+128)
 10197  040E  0020               	movlb	0	; select bank0
 10198  040F  0826               	movf	?___flmul,w
 10199  0410  0021               	movlb	1	; select bank1
 10200  0411  00D1               	movwf	efgtoa@l^(0+128)
 10201                           
 10202                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
 10203  0412  0850               	movf	(efgtoa@h+3)^(0+128),w
 10204  0413  0020               	movlb	0	; select bank0
 10205  0414  00DD               	movwf	___flge@ff1+3
 10206  0415  0021               	movlb	1	; select bank1
 10207  0416  084F               	movf	(efgtoa@h+2)^(0+128),w
 10208  0417  0020               	movlb	0	; select bank0
 10209  0418  00DC               	movwf	___flge@ff1+2
 10210  0419  0021               	movlb	1	; select bank1
 10211  041A  084E               	movf	(efgtoa@h+1)^(0+128),w
 10212  041B  0020               	movlb	0	; select bank0
 10213  041C  00DB               	movwf	___flge@ff1+1
 10214  041D  0021               	movlb	1	; select bank1
 10215  041E  084D               	movf	efgtoa@h^(0+128),w
 10216  041F  0020               	movlb	0	; select bank0
 10217  0420  00DA               	movwf	___flge@ff1
 10218  0421  0021               	movlb	1	; select bank1
 10219  0422  0854               	movf	(efgtoa@l+3)^(0+128),w
 10220  0423  0020               	movlb	0	; select bank0
 10221  0424  00E1               	movwf	___flge@ff2+3
 10222  0425  0021               	movlb	1	; select bank1
 10223  0426  0853               	movf	(efgtoa@l+2)^(0+128),w
 10224  0427  0020               	movlb	0	; select bank0
 10225  0428  00E0               	movwf	___flge@ff2+2
 10226  0429  0021               	movlb	1	; select bank1
 10227  042A  0852               	movf	(efgtoa@l+1)^(0+128),w
 10228  042B  0020               	movlb	0	; select bank0
 10229  042C  00DF               	movwf	___flge@ff2+1
 10230  042D  0021               	movlb	1	; select bank1
 10231  042E  0851               	movf	efgtoa@l^(0+128),w
 10232  042F  0020               	movlb	0	; select bank0
 10233  0430  00DE               	movwf	___flge@ff2
 10234  0431  31A8  2030  3180   	fcall	___flge
 10235  0434  1803               	btfsc	3,0
 10236  0435  2C39               	goto	l7518
 10237                           
 10238                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
 10239  0436  3000               	movlw	0
 10240  0437  0021               	movlb	1	; select bank1
 10241  0438  2C53               	goto	L7
 10242  0439                     l7518:	
 10243                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
 10244                           
 10245                           
 10246                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
 10247  0439  0021               	movlb	1	; select bank1
 10248  043A  0850               	movf	(efgtoa@h+3)^(0+128),w
 10249  043B  00F4               	movwf	___fleq@ff1+3
 10250  043C  084F               	movf	(efgtoa@h+2)^(0+128),w
 10251  043D  00F3               	movwf	___fleq@ff1+2
 10252  043E  084E               	movf	(efgtoa@h+1)^(0+128),w
 10253  043F  00F2               	movwf	___fleq@ff1+1
 10254  0440  084D               	movf	efgtoa@h^(0+128),w
 10255  0441  00F1               	movwf	___fleq@ff1
 10256  0442  0854               	movf	(efgtoa@l+3)^(0+128),w
 10257  0443  00F8               	movwf	___fleq@ff2+3
 10258  0444  0853               	movf	(efgtoa@l+2)^(0+128),w
 10259  0445  00F7               	movwf	___fleq@ff2+2
 10260  0446  0852               	movf	(efgtoa@l+1)^(0+128),w
 10261  0447  00F6               	movwf	___fleq@ff2+1
 10262  0448  0851               	movf	efgtoa@l^(0+128),w
 10263  0449  00F5               	movwf	___fleq@ff2
 10264  044A  31B4  2484  3180   	fcall	___fleq
 10265  044D  1C03               	btfss	3,0
 10266  044E  2C5A               	goto	l7524
 10267  044F  0021               	movlb	1	; select bank1
 10268  0450  1843               	btfsc	efgtoa@d^(0+128),0
 10269  0451  2C5A               	goto	l7524
 10270                           
 10271                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
 10272  0452  3000               	movlw	0
 10273  0453                     L7:	
 10274  0453  00D4               	movwf	(efgtoa@l+3)^(0+128)
 10275  0454  3000               	movlw	0
 10276  0455  00D3               	movwf	(efgtoa@l+2)^(0+128)
 10277  0456  3000               	movlw	0
 10278  0457  00D2               	movwf	(efgtoa@l+1)^(0+128)
 10279  0458  3000               	movlw	0
 10280  0459  00D1               	movwf	efgtoa@l^(0+128)
 10281  045A                     l7524:	
 10282                           
 10283                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
 10284  045A  0021               	movlb	1	; select bank1
 10285  045B  0854               	movf	(efgtoa@l+3)^(0+128),w
 10286  045C  00F4               	movwf	___fladd@b+3
 10287  045D  0853               	movf	(efgtoa@l+2)^(0+128),w
 10288  045E  00F3               	movwf	___fladd@b+2
 10289  045F  0852               	movf	(efgtoa@l+1)^(0+128),w
 10290  0460  00F2               	movwf	___fladd@b+1
 10291  0461  0851               	movf	efgtoa@l^(0+128),w
 10292  0462  00F1               	movwf	___fladd@b
 10293  0463  085A               	movf	(efgtoa@g+3)^(0+128),w
 10294  0464  00F8               	movwf	___fladd@a+3
 10295  0465  0859               	movf	(efgtoa@g+2)^(0+128),w
 10296  0466  00F7               	movwf	___fladd@a+2
 10297  0467  0858               	movf	(efgtoa@g+1)^(0+128),w
 10298  0468  00F6               	movwf	___fladd@a+1
 10299  0469  0857               	movf	efgtoa@g^(0+128),w
 10300  046A  00F5               	movwf	___fladd@a
 10301  046B  319E  261E  3180   	fcall	___fladd
 10302  046E  0874               	movf	?___fladd+3,w
 10303  046F  0021               	movlb	1	; select bank1
 10304  0470  00D0               	movwf	(efgtoa@h+3)^(0+128)
 10305  0471  0873               	movf	?___fladd+2,w
 10306  0472  00CF               	movwf	(efgtoa@h+2)^(0+128)
 10307  0473  0872               	movf	?___fladd+1,w
 10308  0474  00CE               	movwf	(efgtoa@h+1)^(0+128)
 10309  0475  0871               	movf	?___fladd,w
 10310  0476  00CD               	movwf	efgtoa@h^(0+128)
 10311                           
 10312                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
 10313  0477  082E               	movf	(efgtoa@ou+3)^(0+128),w
 10314  0478  00E2               	movwf	(efgtoa@u+3)^(0+128)
 10315  0479  082D               	movf	(efgtoa@ou+2)^(0+128),w
 10316  047A  00E1               	movwf	(efgtoa@u+2)^(0+128)
 10317  047B  082C               	movf	(efgtoa@ou+1)^(0+128),w
 10318  047C  00E0               	movwf	(efgtoa@u+1)^(0+128)
 10319  047D  082B               	movf	efgtoa@ou^(0+128),w
 10320  047E  00DF               	movwf	efgtoa@u^(0+128)
 10321                           
 10322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
 10323  047F  3065               	movlw	101
 10324  0480  0649               	xorwf	efgtoa@nmode^(0+128),w
 10325  0481  1903               	btfsc	3,2
 10326  0482  2C88               	goto	l7532
 10327  0483  085C               	movf	(efgtoa@e+1)^(0+128),w
 10328  0484  00C2               	movwf	(efgtoa@ne+1)^(0+128)
 10329  0485  085B               	movf	efgtoa@e^(0+128),w
 10330  0486  00C1               	movwf	efgtoa@ne^(0+128)
 10331  0487  2C8A               	goto	l666
 10332  0488                     l7532:	
 10333  0488  01C1               	clrf	efgtoa@ne^(0+128)
 10334  0489  01C2               	clrf	(efgtoa@ne+1)^(0+128)
 10335  048A                     l666:	
 10336                           
 10337                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
 10338  048A  01BD               	clrf	efgtoa@pp^(0+128)
 10339  048B  01BE               	clrf	(efgtoa@pp+1)^(0+128)
 10340                           
 10341                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
 10342  048C  01BB               	clrf	efgtoa@t^(0+128)
 10343  048D  01BC               	clrf	(efgtoa@t+1)^(0+128)
 10344                           
 10345                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
 10346  048E  01D5               	clrf	efgtoa@i^(0+128)
 10347  048F  01D6               	clrf	(efgtoa@i+1)^(0+128)
 10348                           
 10349                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
 10350  0490  2DC5               	goto	l7582
 10351  0491                     l7534:	
 10352                           
 10353                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
 10354  0491  0021               	movlb	1	; select bank1
 10355  0492  0862               	movf	(efgtoa@u+3)^(0+128),w
 10356  0493  0020               	movlb	0	; select bank0
 10357  0494  00C3               	movwf	___fldiv@a+3
 10358  0495  0021               	movlb	1	; select bank1
 10359  0496  0861               	movf	(efgtoa@u+2)^(0+128),w
 10360  0497  0020               	movlb	0	; select bank0
 10361  0498  00C2               	movwf	___fldiv@a+2
 10362  0499  0021               	movlb	1	; select bank1
 10363  049A  0860               	movf	(efgtoa@u+1)^(0+128),w
 10364  049B  0020               	movlb	0	; select bank0
 10365  049C  00C1               	movwf	___fldiv@a+1
 10366  049D  0021               	movlb	1	; select bank1
 10367  049E  085F               	movf	efgtoa@u^(0+128),w
 10368  049F  0020               	movlb	0	; select bank0
 10369  04A0  00C0               	movwf	___fldiv@a
 10370  04A1  0021               	movlb	1	; select bank1
 10371  04A2  0850               	movf	(efgtoa@h+3)^(0+128),w
 10372  04A3  0020               	movlb	0	; select bank0
 10373  04A4  00C7               	movwf	___fldiv@b+3
 10374  04A5  0021               	movlb	1	; select bank1
 10375  04A6  084F               	movf	(efgtoa@h+2)^(0+128),w
 10376  04A7  0020               	movlb	0	; select bank0
 10377  04A8  00C6               	movwf	___fldiv@b+2
 10378  04A9  0021               	movlb	1	; select bank1
 10379  04AA  084E               	movf	(efgtoa@h+1)^(0+128),w
 10380  04AB  0020               	movlb	0	; select bank0
 10381  04AC  00C5               	movwf	___fldiv@b+1
 10382  04AD  0021               	movlb	1	; select bank1
 10383  04AE  084D               	movf	efgtoa@h^(0+128),w
 10384  04AF  0020               	movlb	0	; select bank0
 10385  04B0  00C4               	movwf	___fldiv@b
 10386  04B1  3190  2052  3180   	fcall	___fldiv
 10387  04B4  0020               	movlb	0	; select bank0
 10388  04B5  0843               	movf	?___fldiv+3,w
 10389  04B6  00DD               	movwf	floorf@x+3
 10390  04B7  0842               	movf	?___fldiv+2,w
 10391  04B8  00DC               	movwf	floorf@x+2
 10392  04B9  0841               	movf	?___fldiv+1,w
 10393  04BA  00DB               	movwf	floorf@x+1
 10394  04BB  0840               	movf	?___fldiv,w
 10395  04BC  00DA               	movwf	floorf@x
 10396  04BD  31A1  21C6  3180   	fcall	_floorf
 10397  04C0  0020               	movlb	0	; select bank0
 10398  04C1  085D               	movf	?_floorf+3,w
 10399  04C2  0021               	movlb	1	; select bank1
 10400  04C3  00D4               	movwf	(efgtoa@l+3)^(0+128)
 10401  04C4  0020               	movlb	0	; select bank0
 10402  04C5  085C               	movf	?_floorf+2,w
 10403  04C6  0021               	movlb	1	; select bank1
 10404  04C7  00D3               	movwf	(efgtoa@l+2)^(0+128)
 10405  04C8  0020               	movlb	0	; select bank0
 10406  04C9  085B               	movf	?_floorf+1,w
 10407  04CA  0021               	movlb	1	; select bank1
 10408  04CB  00D2               	movwf	(efgtoa@l+1)^(0+128)
 10409  04CC  0020               	movlb	0	; select bank0
 10410  04CD  085A               	movf	?_floorf,w
 10411  04CE  0021               	movlb	1	; select bank1
 10412  04CF  00D1               	movwf	efgtoa@l^(0+128)
 10413                           
 10414                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
 10415  04D0  0854               	movf	(efgtoa@l+3)^(0+128),w
 10416  04D1  0020               	movlb	0	; select bank0
 10417  04D2  00DD               	movwf	___fltol@f1+3
 10418  04D3  0021               	movlb	1	; select bank1
 10419  04D4  0853               	movf	(efgtoa@l+2)^(0+128),w
 10420  04D5  0020               	movlb	0	; select bank0
 10421  04D6  00DC               	movwf	___fltol@f1+2
 10422  04D7  0021               	movlb	1	; select bank1
 10423  04D8  0852               	movf	(efgtoa@l+1)^(0+128),w
 10424  04D9  0020               	movlb	0	; select bank0
 10425  04DA  00DB               	movwf	___fltol@f1+1
 10426  04DB  0021               	movlb	1	; select bank1
 10427  04DC  0851               	movf	efgtoa@l^(0+128),w
 10428  04DD  0020               	movlb	0	; select bank0
 10429  04DE  00DA               	movwf	___fltol@f1
 10430  04DF  31B6  26B9  3180   	fcall	___fltol
 10431  04E2  0020               	movlb	0	; select bank0
 10432  04E3  085B               	movf	?___fltol+1,w
 10433  04E4  0021               	movlb	1	; select bank1
 10434  04E5  00C4               	movwf	(efgtoa@d+1)^(0+128)
 10435  04E6  0020               	movlb	0	; select bank0
 10436  04E7  085A               	movf	?___fltol,w
 10437  04E8  0021               	movlb	1	; select bank1
 10438  04E9  00C3               	movwf	efgtoa@d^(0+128)
 10439                           
 10440                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
 10441  04EA  0023               	movlb	3	; select bank3
 10442  04EB  1A42               	btfsc	_flags^(0+384),4
 10443  04EC  2CFC               	goto	l7546
 10444  04ED  0021               	movlb	1	; select bank1
 10445  04EE  0843               	movf	efgtoa@d^(0+128),w
 10446  04EF  0444               	iorwf	(efgtoa@d+1)^(0+128),w
 10447  04F0  1D03               	btfss	3,2
 10448  04F1  2CFC               	goto	l7546
 10449  04F2  3067               	movlw	103
 10450  04F3  064C               	xorwf	efgtoa@mode^(0+128),w
 10451  04F4  1903               	btfsc	3,2
 10452  04F5  1FC2               	btfss	(efgtoa@ne+1)^(0+128),7
 10453  04F6  2CFC               	goto	l7546
 10454                           
 10455                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
 10456  04F7  3001               	movlw	1
 10457  04F8  07BB               	addwf	efgtoa@t^(0+128),f
 10458  04F9  3000               	movlw	0
 10459  04FA  3DBC               	addwfc	(efgtoa@t+1)^(0+128),f
 10460                           
 10461                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
 10462  04FB  2D43               	goto	l7574
 10463  04FC                     l7546:	
 10464                           
 10465                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
 10466  04FC  0021               	movlb	1	; select bank1
 10467  04FD  083D               	movf	efgtoa@pp^(0+128),w
 10468  04FE  043E               	iorwf	(efgtoa@pp+1)^(0+128),w
 10469  04FF  1903               	btfsc	3,2
 10470  0500  1FC2               	btfss	(efgtoa@ne+1)^(0+128),7
 10471  0501  2D17               	goto	l7566
 10472                           
 10473                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
 10474  0502  302E               	movlw	46
 10475  0503  00A7               	movwf	??_efgtoa^(0+128)
 10476  0504  085D               	movf	efgtoa@n^(0+128),w
 10477  0505  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10478  0506  0086               	movwf	6
 10479  0507  3002               	movlw	2	; select bank4/5
 10480  0508  0087               	movwf	7
 10481  0509  0827               	movf	??_efgtoa^(0+128),w
 10482  050A  0081               	movwf	1
 10483  050B  3001               	movlw	1
 10484  050C  07DD               	addwf	efgtoa@n^(0+128),f
 10485  050D  3000               	movlw	0
 10486  050E  3DDE               	addwfc	(efgtoa@n+1)^(0+128),f
 10487                           
 10488                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
 10489  050F  30FF               	movlw	255
 10490  0510  07CA               	addwf	efgtoa@w^(0+128),f
 10491  0511  30FF               	movlw	255
 10492  0512  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
 10493                           
 10494                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
 10495  0513  3001               	movlw	1
 10496  0514  00BD               	movwf	efgtoa@pp^(0+128)
 10497  0515  3000               	movlw	0
 10498  0516  00BE               	movwf	(efgtoa@pp^(0+128)+1)
 10499  0517                     l7566:	
 10500                           
 10501                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
 10502  0517  083B               	movf	efgtoa@t^(0+128),w
 10503  0518  043C               	iorwf	(efgtoa@t+1)^(0+128),w
 10504  0519  1903               	btfsc	3,2
 10505  051A  2D31               	goto	l7568
 10506                           
 10507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
 10508  051B  3030               	movlw	48
 10509  051C  00A7               	movwf	??_efgtoa^(0+128)
 10510  051D  085D               	movf	efgtoa@n^(0+128),w
 10511  051E  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10512  051F  0086               	movwf	6
 10513  0520  3002               	movlw	2	; select bank4/5
 10514  0521  0087               	movwf	7
 10515  0522  0827               	movf	??_efgtoa^(0+128),w
 10516  0523  0081               	movwf	1
 10517  0524  3001               	movlw	1
 10518  0525  07DD               	addwf	efgtoa@n^(0+128),f
 10519  0526  3000               	movlw	0
 10520  0527  3DDE               	addwfc	(efgtoa@n+1)^(0+128),f
 10521                           
 10522                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
 10523  0528  30FF               	movlw	255
 10524  0529  07CA               	addwf	efgtoa@w^(0+128),f
 10525  052A  30FF               	movlw	255
 10526  052B  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
 10527                           
 10528                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
 10529  052C  30FF               	movlw	255
 10530  052D  07BB               	addwf	efgtoa@t^(0+128),f
 10531  052E  30FF               	movlw	255
 10532  052F  3DBC               	addwfc	(efgtoa@t+1)^(0+128),f
 10533  0530  2D17               	goto	l7566
 10534  0531                     l7568:	
 10535                           
 10536                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
 10537  0531  0843               	movf	efgtoa@d^(0+128),w
 10538  0532  3E30               	addlw	48
 10539  0533  00A7               	movwf	??_efgtoa^(0+128)
 10540  0534  085D               	movf	efgtoa@n^(0+128),w
 10541  0535  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10542  0536  0086               	movwf	6
 10543  0537  3002               	movlw	2	; select bank4/5
 10544  0538  0087               	movwf	7
 10545  0539  0827               	movf	??_efgtoa^(0+128),w
 10546  053A  0081               	movwf	1
 10547  053B  3001               	movlw	1
 10548  053C  07DD               	addwf	efgtoa@n^(0+128),f
 10549  053D  3000               	movlw	0
 10550  053E  3DDE               	addwfc	(efgtoa@n+1)^(0+128),f
 10551                           
 10552                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
 10553  053F  30FF               	movlw	255
 10554  0540  07CA               	addwf	efgtoa@w^(0+128),f
 10555  0541  30FF               	movlw	255
 10556  0542  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
 10557  0543                     l7574:	
 10558                           
 10559                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
 10560  0543  0854               	movf	(efgtoa@l+3)^(0+128),w
 10561  0544  0020               	movlb	0	; select bank0
 10562  0545  00AD               	movwf	___flmul@a+3
 10563  0546  0021               	movlb	1	; select bank1
 10564  0547  0853               	movf	(efgtoa@l+2)^(0+128),w
 10565  0548  0020               	movlb	0	; select bank0
 10566  0549  00AC               	movwf	___flmul@a+2
 10567  054A  0021               	movlb	1	; select bank1
 10568  054B  0852               	movf	(efgtoa@l+1)^(0+128),w
 10569  054C  0020               	movlb	0	; select bank0
 10570  054D  00AB               	movwf	___flmul@a+1
 10571  054E  0021               	movlb	1	; select bank1
 10572  054F  0851               	movf	efgtoa@l^(0+128),w
 10573  0550  0020               	movlb	0	; select bank0
 10574  0551  00AA               	movwf	___flmul@a
 10575  0552  0021               	movlb	1	; select bank1
 10576  0553  0862               	movf	(efgtoa@u+3)^(0+128),w
 10577  0554  0020               	movlb	0	; select bank0
 10578  0555  00A9               	movwf	___flmul@b+3
 10579  0556  0021               	movlb	1	; select bank1
 10580  0557  0861               	movf	(efgtoa@u+2)^(0+128),w
 10581  0558  0020               	movlb	0	; select bank0
 10582  0559  00A8               	movwf	___flmul@b+2
 10583  055A  0021               	movlb	1	; select bank1
 10584  055B  0860               	movf	(efgtoa@u+1)^(0+128),w
 10585  055C  0020               	movlb	0	; select bank0
 10586  055D  00A7               	movwf	___flmul@b+1
 10587  055E  0021               	movlb	1	; select bank1
 10588  055F  085F               	movf	efgtoa@u^(0+128),w
 10589  0560  0020               	movlb	0	; select bank0
 10590  0561  00A6               	movwf	___flmul@b
 10591  0562  3195  25D4  3180   	fcall	___flmul
 10592  0565  0020               	movlb	0	; select bank0
 10593  0566  0829               	movf	?___flmul+3,w
 10594  0567  00C3               	movwf	___flsub@a+3
 10595  0568  0828               	movf	?___flmul+2,w
 10596  0569  00C2               	movwf	___flsub@a+2
 10597  056A  0827               	movf	?___flmul+1,w
 10598  056B  00C1               	movwf	___flsub@a+1
 10599  056C  0826               	movf	?___flmul,w
 10600  056D  00C0               	movwf	___flsub@a
 10601  056E  0021               	movlb	1	; select bank1
 10602  056F  0850               	movf	(efgtoa@h+3)^(0+128),w
 10603  0570  0020               	movlb	0	; select bank0
 10604  0571  00C7               	movwf	___flsub@b+3
 10605  0572  0021               	movlb	1	; select bank1
 10606  0573  084F               	movf	(efgtoa@h+2)^(0+128),w
 10607  0574  0020               	movlb	0	; select bank0
 10608  0575  00C6               	movwf	___flsub@b+2
 10609  0576  0021               	movlb	1	; select bank1
 10610  0577  084E               	movf	(efgtoa@h+1)^(0+128),w
 10611  0578  0020               	movlb	0	; select bank0
 10612  0579  00C5               	movwf	___flsub@b+1
 10613  057A  0021               	movlb	1	; select bank1
 10614  057B  084D               	movf	efgtoa@h^(0+128),w
 10615  057C  0020               	movlb	0	; select bank0
 10616  057D  00C4               	movwf	___flsub@b
 10617  057E  31B2  2268  3180   	fcall	___flsub
 10618  0581  0020               	movlb	0	; select bank0
 10619  0582  0843               	movf	?___flsub+3,w
 10620  0583  0021               	movlb	1	; select bank1
 10621  0584  00D0               	movwf	(efgtoa@h+3)^(0+128)
 10622  0585  0020               	movlb	0	; select bank0
 10623  0586  0842               	movf	?___flsub+2,w
 10624  0587  0021               	movlb	1	; select bank1
 10625  0588  00CF               	movwf	(efgtoa@h+2)^(0+128)
 10626  0589  0020               	movlb	0	; select bank0
 10627  058A  0841               	movf	?___flsub+1,w
 10628  058B  0021               	movlb	1	; select bank1
 10629  058C  00CE               	movwf	(efgtoa@h+1)^(0+128)
 10630  058D  0020               	movlb	0	; select bank0
 10631  058E  0840               	movf	?___flsub,w
 10632  058F  0021               	movlb	1	; select bank1
 10633  0590  00CD               	movwf	efgtoa@h^(0+128)
 10634                           
 10635                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
 10636  0591  3041               	movlw	65
 10637  0592  0020               	movlb	0	; select bank0
 10638  0593  00C3               	movwf	___fldiv@a+3
 10639  0594  3020               	movlw	32
 10640  0595  00C2               	movwf	___fldiv@a+2
 10641  0596  3000               	movlw	0
 10642  0597  00C1               	movwf	___fldiv@a+1
 10643  0598  3000               	movlw	0
 10644  0599  00C0               	movwf	___fldiv@a
 10645  059A  0021               	movlb	1	; select bank1
 10646  059B  0862               	movf	(efgtoa@u+3)^(0+128),w
 10647  059C  0020               	movlb	0	; select bank0
 10648  059D  00C7               	movwf	___fldiv@b+3
 10649  059E  0021               	movlb	1	; select bank1
 10650  059F  0861               	movf	(efgtoa@u+2)^(0+128),w
 10651  05A0  0020               	movlb	0	; select bank0
 10652  05A1  00C6               	movwf	___fldiv@b+2
 10653  05A2  0021               	movlb	1	; select bank1
 10654  05A3  0860               	movf	(efgtoa@u+1)^(0+128),w
 10655  05A4  0020               	movlb	0	; select bank0
 10656  05A5  00C5               	movwf	___fldiv@b+1
 10657  05A6  0021               	movlb	1	; select bank1
 10658  05A7  085F               	movf	efgtoa@u^(0+128),w
 10659  05A8  0020               	movlb	0	; select bank0
 10660  05A9  00C4               	movwf	___fldiv@b
 10661  05AA  3190  2052  3180   	fcall	___fldiv
 10662  05AD  0020               	movlb	0	; select bank0
 10663  05AE  0843               	movf	?___fldiv+3,w
 10664  05AF  0021               	movlb	1	; select bank1
 10665  05B0  00E2               	movwf	(efgtoa@u+3)^(0+128)
 10666  05B1  0020               	movlb	0	; select bank0
 10667  05B2  0842               	movf	?___fldiv+2,w
 10668  05B3  0021               	movlb	1	; select bank1
 10669  05B4  00E1               	movwf	(efgtoa@u+2)^(0+128)
 10670  05B5  0020               	movlb	0	; select bank0
 10671  05B6  0841               	movf	?___fldiv+1,w
 10672  05B7  0021               	movlb	1	; select bank1
 10673  05B8  00E0               	movwf	(efgtoa@u+1)^(0+128)
 10674  05B9  0020               	movlb	0	; select bank0
 10675  05BA  0840               	movf	?___fldiv,w
 10676  05BB  0021               	movlb	1	; select bank1
 10677  05BC  00DF               	movwf	efgtoa@u^(0+128)
 10678                           
 10679                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
 10680  05BD  30FF               	movlw	255
 10681  05BE  07C1               	addwf	efgtoa@ne^(0+128),f
 10682  05BF  30FF               	movlw	255
 10683  05C0  3DC2               	addwfc	(efgtoa@ne+1)^(0+128),f
 10684                           
 10685                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
 10686  05C1  3001               	movlw	1
 10687  05C2  07D5               	addwf	efgtoa@i^(0+128),f
 10688  05C3  3000               	movlw	0
 10689  05C4  3DD6               	addwfc	(efgtoa@i+1)^(0+128),f
 10690  05C5                     l7582:	
 10691                           
 10692                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
 10693  05C5  0856               	movf	(efgtoa@i+1)^(0+128),w
 10694  05C6  3A80               	xorlw	128
 10695  05C7  00A7               	movwf	??_efgtoa^(0+128)
 10696  05C8  0840               	movf	(efgtoa@m+1)^(0+128),w
 10697  05C9  3A80               	xorlw	128
 10698  05CA  0227               	subwf	??_efgtoa^(0+128),w
 10699  05CB  1D03               	skipz
 10700  05CC  2DCF               	goto	u10785
 10701  05CD  083F               	movf	efgtoa@m^(0+128),w
 10702  05CE  0255               	subwf	efgtoa@i^(0+128),w
 10703  05CF                     u10785:	
 10704  05CF  1803               	skipnc
 10705  05D0  2DDD               	goto	l7586
 10706  05D1  0021               	movlb	1	; select bank1
 10707  05D2  085E               	movf	(efgtoa@n+1)^(0+128),w
 10708  05D3  3A80               	xorlw	128
 10709  05D4  00A7               	movwf	??_efgtoa^(0+128)
 10710  05D5  3080               	movlw	128
 10711  05D6  0227               	subwf	??_efgtoa^(0+128),w
 10712  05D7  1D03               	skipz
 10713  05D8  2DDB               	goto	u10795
 10714  05D9  304B               	movlw	75
 10715  05DA  025D               	subwf	efgtoa@n^(0+128),w
 10716  05DB                     u10795:	
 10717  05DB  1C03               	skipc
 10718  05DC  2C91               	goto	l7534
 10719  05DD                     l7586:	
 10720                           
 10721                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
 10722  05DD  0021               	movlb	1	; select bank1
 10723  05DE  083D               	movf	efgtoa@pp^(0+128),w
 10724  05DF  043E               	iorwf	(efgtoa@pp+1)^(0+128),w
 10725  05E0  1D03               	btfss	3,2
 10726  05E1  2DF3               	goto	l7594
 10727  05E2  0023               	movlb	3	; select bank3
 10728  05E3  1E42               	btfss	_flags^(0+384),4
 10729  05E4  2DF3               	goto	l7594
 10730                           
 10731                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
 10732  05E5  302E               	movlw	46
 10733  05E6  0021               	movlb	1	; select bank1
 10734  05E7  00A7               	movwf	??_efgtoa^(0+128)
 10735  05E8  085D               	movf	efgtoa@n^(0+128),w
 10736  05E9  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10737  05EA  0086               	movwf	6
 10738  05EB  3002               	movlw	2	; select bank4/5
 10739  05EC  0087               	movwf	7
 10740  05ED  0827               	movf	??_efgtoa^(0+128),w
 10741  05EE  0081               	movwf	1
 10742  05EF  3001               	movlw	1
 10743  05F0  07DD               	addwf	efgtoa@n^(0+128),f
 10744  05F1  3000               	movlw	0
 10745  05F2  3DDE               	addwfc	(efgtoa@n+1)^(0+128),f
 10746  05F3                     l7594:	
 10747                           
 10748                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
 10749  05F3  0021               	movlb	1	; select bank1
 10750  05F4  085D               	movf	efgtoa@n^(0+128),w
 10751  05F5  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10752  05F6  0086               	movwf	6
 10753  05F7  3002               	movlw	2	; select bank4/5
 10754  05F8  0087               	movwf	7
 10755  05F9  0181               	clrf	1
 10756                           
 10757                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
 10758  05FA  3065               	movlw	101
 10759  05FB  0649               	xorwf	efgtoa@nmode^(0+128),w
 10760  05FC  1D03               	btfss	3,2
 10761  05FD  2EB4               	goto	l7656
 10762                           
 10763                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
 10764  05FE  304F               	movlw	79
 10765  05FF  00D5               	movwf	efgtoa@i^(0+128)
 10766  0600  3000               	movlw	0
 10767  0601  00D6               	movwf	(efgtoa@i^(0+128)+1)
 10768                           
 10769                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
 10770  0602  0855               	movf	efgtoa@i^(0+128),w
 10771  0603  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10772  0604  0086               	movwf	6
 10773  0605  3002               	movlw	2	; select bank4/5
 10774  0606  0087               	movwf	7
 10775  0607  0181               	clrf	1
 10776                           
 10777                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
 10778  0608  01C5               	clrf	efgtoa@sign^(0+128)
 10779  0609  01C6               	clrf	(efgtoa@sign+1)^(0+128)
 10780                           
 10781                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
 10782  060A  1FDC               	btfss	(efgtoa@e+1)^(0+128),7
 10783  060B  2E15               	goto	l7610
 10784                           
 10785                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
 10786  060C  3001               	movlw	1
 10787  060D  00C5               	movwf	efgtoa@sign^(0+128)
 10788  060E  3000               	movlw	0
 10789  060F  00C6               	movwf	(efgtoa@sign^(0+128)+1)
 10790                           
 10791                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
 10792  0610  09DB               	comf	efgtoa@e^(0+128),f
 10793  0611  09DC               	comf	(efgtoa@e+1)^(0+128),f
 10794  0612  0ADB               	incf	efgtoa@e^(0+128),f
 10795  0613  1903               	skipnz
 10796  0614  0ADC               	incf	(efgtoa@e+1)^(0+128),f
 10797  0615                     l7610:	
 10798                           
 10799                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
 10800  0615  3002               	movlw	2
 10801  0616  00C7               	movwf	efgtoa@p^(0+128)
 10802  0617  3000               	movlw	0
 10803  0618  00C8               	movwf	(efgtoa@p^(0+128)+1)
 10804  0619                     l7622:	
 10805                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 10806                           
 10807                           
 10808                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 10809  0619  085B               	movf	efgtoa@e^(0+128),w
 10810  061A  045C               	iorwf	(efgtoa@e+1)^(0+128),w
 10811  061B  1903               	btfsc	3,2
 10812  061C  2E51               	goto	l7624
 10813  061D                     l7612:	
 10814                           
 10815                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
 10816  061D  30FF               	movlw	255
 10817  061E  0021               	movlb	1	; select bank1
 10818  061F  07D5               	addwf	efgtoa@i^(0+128),f
 10819  0620  30FF               	movlw	255
 10820  0621  3DD6               	addwfc	(efgtoa@i+1)^(0+128),f
 10821                           
 10822                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
 10823  0622  300A               	movlw	10
 10824  0623  00F1               	movwf	___awmod@divisor
 10825  0624  3000               	movlw	0
 10826  0625  00F2               	movwf	___awmod@divisor+1
 10827  0626  085C               	movf	(efgtoa@e+1)^(0+128),w
 10828  0627  00F4               	movwf	___awmod@dividend+1
 10829  0628  085B               	movf	efgtoa@e^(0+128),w
 10830  0629  00F3               	movwf	___awmod@dividend
 10831  062A  31B4  243F  3180   	fcall	___awmod
 10832  062D  0871               	movf	?___awmod,w
 10833  062E  3E30               	addlw	48
 10834  062F  0021               	movlb	1	; select bank1
 10835  0630  00A7               	movwf	??_efgtoa^(0+128)
 10836  0631  0855               	movf	efgtoa@i^(0+128),w
 10837  0632  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10838  0633  0086               	movwf	6
 10839  0634  3002               	movlw	2	; select bank4/5
 10840  0635  0087               	movwf	7
 10841  0636  0827               	movf	??_efgtoa^(0+128),w
 10842  0637  0081               	movwf	1
 10843                           
 10844                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
 10845  0638  300A               	movlw	10
 10846  0639  00F1               	movwf	___awdiv@divisor
 10847  063A  3000               	movlw	0
 10848  063B  00F2               	movwf	___awdiv@divisor+1
 10849  063C  085C               	movf	(efgtoa@e+1)^(0+128),w
 10850  063D  00F4               	movwf	___awdiv@dividend+1
 10851  063E  085B               	movf	efgtoa@e^(0+128),w
 10852  063F  00F3               	movwf	___awdiv@dividend
 10853  0640  31B5  25BE  3180   	fcall	___awdiv
 10854  0643  0872               	movf	?___awdiv+1,w
 10855  0644  0021               	movlb	1	; select bank1
 10856  0645  00DC               	movwf	(efgtoa@e+1)^(0+128)
 10857  0646  0871               	movf	?___awdiv,w
 10858  0647  00DB               	movwf	efgtoa@e^(0+128)
 10859                           
 10860                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
 10861  0648  30FF               	movlw	255
 10862  0649  07C7               	addwf	efgtoa@p^(0+128),f
 10863  064A  30FF               	movlw	255
 10864  064B  3DC8               	addwfc	(efgtoa@p+1)^(0+128),f
 10865                           
 10866                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
 10867  064C  30FF               	movlw	255
 10868  064D  07CA               	addwf	efgtoa@w^(0+128),f
 10869  064E  30FF               	movlw	255
 10870  064F  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
 10871  0650  2E19               	goto	l7622
 10872  0651                     l7624:	
 10873  0651  0848               	movf	(efgtoa@p+1)^(0+128),w
 10874  0652  3A80               	xorlw	128
 10875  0653  00A7               	movwf	??_efgtoa^(0+128)
 10876  0654  3080               	movlw	128
 10877  0655  0227               	subwf	??_efgtoa^(0+128),w
 10878  0656  1D03               	skipz
 10879  0657  2E5A               	goto	u10855
 10880  0658  3001               	movlw	1
 10881  0659  0247               	subwf	efgtoa@p^(0+128),w
 10882  065A                     u10855:	
 10883  065A  1803               	skipnc
 10884  065B  2E1D               	goto	l7612
 10885                           
 10886                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
 10887  065C  30FF               	movlw	255
 10888  065D  0021               	movlb	1	; select bank1
 10889  065E  07D5               	addwf	efgtoa@i^(0+128),f
 10890  065F  30FF               	movlw	255
 10891  0660  3DD6               	addwfc	(efgtoa@i+1)^(0+128),f
 10892                           
 10893                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
 10894  0661  0845               	movf	efgtoa@sign^(0+128),w
 10895  0662  0446               	iorwf	(efgtoa@sign+1)^(0+128),w
 10896  0663  1D03               	btfss	3,2
 10897  0664  2E67               	goto	l7632
 10898  0665  302B               	movlw	43
 10899  0666  2E68               	goto	L8
 10900  0667                     l7632:	
 10901  0667  302D               	movlw	45
 10902  0668                     L8:	
 10903  0668  00B5               	movwf	_efgtoa$1109^(0+128)
 10904  0669  3000               	movlw	0
 10905  066A  00B6               	movwf	(_efgtoa$1109^(0+128)+1)
 10906  066B  0835               	movf	_efgtoa$1109^(0+128),w
 10907  066C  00A7               	movwf	??_efgtoa^(0+128)
 10908  066D  0855               	movf	efgtoa@i^(0+128),w
 10909  066E  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10910  066F  0086               	movwf	6
 10911  0670  3002               	movlw	2	; select bank4/5
 10912  0671  0087               	movwf	7
 10913  0672  0827               	movf	??_efgtoa^(0+128),w
 10914  0673  0081               	movwf	1
 10915                           
 10916                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
 10917  0674  30FF               	movlw	255
 10918  0675  07CA               	addwf	efgtoa@w^(0+128),f
 10919  0676  30FF               	movlw	255
 10920  0677  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
 10921                           
 10922                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 10923  0678  30FF               	movlw	255
 10924  0679  07D5               	addwf	efgtoa@i^(0+128),f
 10925  067A  30FF               	movlw	255
 10926  067B  3DD6               	addwfc	(efgtoa@i+1)^(0+128),f
 10927  067C  0826               	movf	efgtoa@c^(0+128),w
 10928  067D  3EBF               	addlw	191
 10929  067E  00A7               	movwf	??_efgtoa^(0+128)
 10930  067F  30FF               	movlw	255
 10931  0680  1803               	skipnc
 10932  0681  3000               	movlw	0
 10933  0682  00A8               	movwf	(??_efgtoa^(0+128)+1)
 10934  0683  3000               	movlw	0
 10935  0684  0228               	subwf	(??_efgtoa+1)^(0+128),w
 10936  0685  301A               	movlw	26
 10937  0686  1903               	skipnz
 10938  0687  0227               	subwf	??_efgtoa^(0+128),w
 10939  0688  1803               	btfsc	3,0
 10940  0689  2E8C               	goto	u10870
 10941  068A  3001               	movlw	1
 10942  068B  2E8D               	goto	u10880
 10943  068C                     u10870:	
 10944  068C  3000               	movlw	0
 10945  068D                     u10880:	
 10946  068D  00A9               	movwf	(??_efgtoa+2)^(0+128)
 10947  068E  01AA               	clrf	((??_efgtoa+2)^(0+128)+1)
 10948  068F  0829               	movf	(??_efgtoa+2)^(0+128),w
 10949  0690  00B9               	movwf	_efgtoa$1111^(0+128)
 10950  0691  082A               	movf	(??_efgtoa+3)^(0+128),w
 10951  0692  00BA               	movwf	(_efgtoa$1111+1)^(0+128)
 10952  0693  0839               	movf	_efgtoa$1111^(0+128),w
 10953  0694  043A               	iorwf	(_efgtoa$1111+1)^(0+128),w
 10954  0695  1D03               	btfss	3,2
 10955  0696  2E99               	goto	l7648
 10956  0697  3065               	movlw	101
 10957  0698  2E9A               	goto	L9
 10958  0699                     l7648:	
 10959  0699  3045               	movlw	69
 10960  069A                     L9:	
 10961  069A  00B7               	movwf	_efgtoa$1110^(0+128)
 10962  069B  3000               	movlw	0
 10963  069C  00B8               	movwf	(_efgtoa$1110^(0+128)+1)
 10964  069D  0837               	movf	_efgtoa$1110^(0+128),w
 10965  069E  00A7               	movwf	??_efgtoa^(0+128)
 10966  069F  0855               	movf	efgtoa@i^(0+128),w
 10967  06A0  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10968  06A1  0086               	movwf	6
 10969  06A2  3002               	movlw	2	; select bank4/5
 10970  06A3  0087               	movwf	7
 10971  06A4  0827               	movf	??_efgtoa^(0+128),w
 10972  06A5  0081               	movwf	1
 10973                           
 10974                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
 10975  06A6  30FF               	movlw	255
 10976  06A7  07CA               	addwf	efgtoa@w^(0+128),f
 10977  06A8  30FF               	movlw	255
 10978  06A9  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
 10979                           
 10980                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
 10981  06AA  0855               	movf	efgtoa@i^(0+128),w
 10982  06AB  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10983  06AC  00F1               	movwf	strcpy@src
 10984  06AD  3002               	movlw	2
 10985  06AE  00F2               	movwf	strcpy@src+1
 10986  06AF  085D               	movf	efgtoa@n^(0+128),w
 10987  06B0  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10988  06B1  31B2  2287  3180   	fcall	_strcpy
 10989  06B4                     l7656:	
 10990                           
 10991                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 502:     re
      +                          turn pad(fp, &dbuf[0], w);
 10992  06B4  0021               	movlb	1	; select bank1
 10993  06B5  0821               	movf	(efgtoa@fp+1)^(0+128),w
 10994  06B6  0020               	movlb	0	; select bank0
 10995  06B7  00A7               	movwf	pad@fp+1
 10996  06B8  0021               	movlb	1	; select bank1
 10997  06B9  0820               	movf	efgtoa@fp^(0+128),w
 10998  06BA  0020               	movlb	0	; select bank0
 10999  06BB  00A6               	movwf	pad@fp
 11000  06BC  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
 11001  06BD  0021               	movlb	1	; select bank1
 11002  06BE  00A7               	movwf	??_efgtoa^(0+128)
 11003  06BF  0827               	movf	??_efgtoa^(0+128),w
 11004  06C0  0020               	movlb	0	; select bank0
 11005  06C1  00A8               	movwf	pad@buf
 11006  06C2  0021               	movlb	1	; select bank1
 11007  06C3  084B               	movf	(efgtoa@w+1)^(0+128),w
 11008  06C4  0020               	movlb	0	; select bank0
 11009  06C5  00AA               	movwf	pad@p+1
 11010  06C6  0021               	movlb	1	; select bank1
 11011  06C7  084A               	movf	efgtoa@w^(0+128),w
 11012  06C8  0020               	movlb	0	; select bank0
 11013  06C9  00A9               	movwf	pad@p
 11014  06CA  31B5  256D         	fcall	_pad
 11015  06CC  0020               	movlb	0	; select bank0
 11016  06CD  0827               	movf	?_pad+1,w
 11017  06CE  0021               	movlb	1	; select bank1
 11018  06CF  00A1               	movwf	(?_efgtoa+1)^(0+128)
 11019  06D0  0020               	movlb	0	; select bank0
 11020  06D1  0826               	movf	?_pad,w
 11021  06D2  0021               	movlb	1	; select bank1
 11022  06D3  00A0               	movwf	?_efgtoa^(0+128)
 11023  06D4  0008               	return
 11024  06D5                     __end_of_efgtoa:	
 11025                           
 11026                           	psect	text18
 11027  32E9                     __ptext18:	
 11028 ;; *************** function _tolower *****************
 11029 ;; Defined at:
 11030 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
 11031 ;; Parameters:    Size  Location     Type
 11032 ;;  c               2    7[COMMON] int 
 11033 ;; Auto vars:     Size  Location     Type
 11034 ;;		None
 11035 ;; Return value:  Size  Location     Type
 11036 ;;                  2    7[COMMON] int 
 11037 ;; Registers used:
 11038 ;;		wreg, status,2, status,0
 11039 ;; Tracked objects:
 11040 ;;		On entry : 0/0
 11041 ;;		On exit  : 0/0
 11042 ;;		Unchanged: 0/0
 11043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11044 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11045 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11046 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11047 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11048 ;;Total ram usage:        8 bytes
 11049 ;; Hardware stack levels used:    1
 11050 ;; Hardware stack levels required when called:    2
 11051 ;; This function calls:
 11052 ;;		_isupper
 11053 ;; This function is called by:
 11054 ;;		_efgtoa
 11055 ;;		_vfpfcnvrt
 11056 ;; This function uses a non-reentrant model
 11057 ;;
 11058                           
 11059                           
 11060                           ;psect for function _tolower
 11061  32E9                     _tolower:	
 11062                           
 11063                           ;incstack = 0
 11064                           ; Regs used in _tolower: [wreg+status,2+status,0]
 11065  32E9  0877               	movf	tolower@c,w
 11066  32EA  3EBF               	addlw	191
 11067  32EB  0020               	movlb	0	; select bank0
 11068  32EC  00A0               	movwf	??_tolower
 11069  32ED  30FF               	movlw	255
 11070  32EE  3D78               	addwfc	tolower@c+1,w
 11071  32EF  00A1               	movwf	??_tolower+1
 11072  32F0  3000               	movlw	0
 11073  32F1  0221               	subwf	??_tolower+1,w
 11074  32F2  301A               	movlw	26
 11075  32F3  1903               	skipnz
 11076  32F4  0220               	subwf	??_tolower,w
 11077  32F5  1803               	btfsc	3,0
 11078  32F6  2AF9               	goto	u10120
 11079  32F7  3001               	movlw	1
 11080  32F8  2AFA               	goto	u10130
 11081  32F9                     u10120:	
 11082  32F9  3000               	movlw	0
 11083  32FA                     u10130:	
 11084  32FA  00A2               	movwf	??_tolower+2
 11085  32FB  01A3               	clrf	??_tolower+3
 11086  32FC  0822               	movf	??_tolower+2,w
 11087  32FD  00F9               	movwf	_tolower$1739
 11088  32FE  0823               	movf	??_tolower+3,w
 11089  32FF  00FA               	movwf	_tolower$1739+1
 11090  3300  0879               	movf	_tolower$1739,w
 11091  3301  047A               	iorwf	_tolower$1739+1,w
 11092  3302  1903               	btfsc	3,2
 11093  3303  0008               	return
 11094  3304  3020               	movlw	32
 11095  3305  0477               	iorwf	tolower@c,w
 11096  3306  00F7               	movwf	?_tolower
 11097  3307  3000               	movlw	0
 11098  3308  0478               	iorwf	tolower@c+1,w
 11099  3309  00F8               	movwf	?_tolower+1
 11100  330A  0008               	return
 11101  330B                     __end_of_tolower:	
 11102                           
 11103                           	psect	text19
 11104  3193                     __ptext19:	
 11105 ;; *************** function _isupper *****************
 11106 ;; Defined at:
 11107 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
 11108 ;; Parameters:    Size  Location     Type
 11109 ;;  c               2    1[COMMON] int 
 11110 ;; Auto vars:     Size  Location     Type
 11111 ;;		None
 11112 ;; Return value:  Size  Location     Type
 11113 ;;                  2    1[COMMON] int 
 11114 ;; Registers used:
 11115 ;;		wreg, status,2, status,0
 11116 ;; Tracked objects:
 11117 ;;		On entry : 0/0
 11118 ;;		On exit  : 0/0
 11119 ;;		Unchanged: 0/0
 11120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11121 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11123 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11124 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11125 ;;Total ram usage:        6 bytes
 11126 ;; Hardware stack levels used:    1
 11127 ;; Hardware stack levels required when called:    1
 11128 ;; This function calls:
 11129 ;;		Nothing
 11130 ;; This function is called by:
 11131 ;;		_efgtoa
 11132 ;;		_xtoa
 11133 ;;		_vfpfcnvrt
 11134 ;;		_tolower
 11135 ;; This function uses a non-reentrant model
 11136 ;;
 11137                           
 11138                           
 11139                           ;psect for function _isupper
 11140  3193                     _isupper:	
 11141                           
 11142                           ;incstack = 0
 11143                           ; Regs used in _isupper: [wreg+status,2+status,0]
 11144  3193  0871               	movf	isupper@c,w
 11145  3194  3EBF               	addlw	191
 11146  3195  00F3               	movwf	??_isupper
 11147  3196  30FF               	movlw	255
 11148  3197  3D72               	addwfc	isupper@c+1,w
 11149  3198  00F4               	movwf	??_isupper+1
 11150  3199  3000               	movlw	0
 11151  319A  0274               	subwf	??_isupper+1,w
 11152  319B  301A               	movlw	26
 11153  319C  1903               	skipnz
 11154  319D  0273               	subwf	??_isupper,w
 11155  319E  1803               	btfsc	3,0
 11156  319F  29A2               	goto	u9610
 11157  31A0  3001               	movlw	1
 11158  31A1  29A3               	goto	u9620
 11159  31A2                     u9610:	
 11160  31A2  3000               	movlw	0
 11161  31A3                     u9620:	
 11162  31A3  00F5               	movwf	??_isupper+2
 11163  31A4  01F6               	clrf	??_isupper+3
 11164  31A5  0875               	movf	??_isupper+2,w
 11165  31A6  00F1               	movwf	?_isupper
 11166  31A7  0876               	movf	??_isupper+3,w
 11167  31A8  00F2               	movwf	?_isupper+1
 11168  31A9  0008               	return
 11169  31AA                     __end_of_isupper:	
 11170                           
 11171                           	psect	text20
 11172  3287                     __ptext20:	
 11173 ;; *************** function _strcpy *****************
 11174 ;; Defined at:
 11175 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
 11176 ;; Parameters:    Size  Location     Type
 11177 ;;  dest            1    wreg     PTR unsigned char 
 11178 ;;		 -> dbuf(80), 
 11179 ;;  src             2    1[COMMON] PTR const unsigned char 
 11180 ;;		 -> STR_31(4), STR_30(4), STR_27(4), STR_26(4), 
 11181 ;;		 -> dbuf(80), 
 11182 ;; Auto vars:     Size  Location     Type
 11183 ;;  dest            1    8[COMMON] PTR unsigned char 
 11184 ;;		 -> dbuf(80), 
 11185 ;;  s               2    5[COMMON] PTR const unsigned char 
 11186 ;;		 -> STR_31(4), STR_30(4), STR_27(4), STR_26(4), 
 11187 ;;		 -> dbuf(80), 
 11188 ;;  d               1    7[COMMON] PTR unsigned char 
 11189 ;;		 -> dbuf(80), 
 11190 ;; Return value:  Size  Location     Type
 11191 ;;                  1    wreg      PTR unsigned char 
 11192 ;; Registers used:
 11193 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 11194 ;; Tracked objects:
 11195 ;;		On entry : 0/0
 11196 ;;		On exit  : 0/0
 11197 ;;		Unchanged: 0/0
 11198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11199 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11200 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11201 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11202 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11203 ;;Total ram usage:        8 bytes
 11204 ;; Hardware stack levels used:    1
 11205 ;; Hardware stack levels required when called:    1
 11206 ;; This function calls:
 11207 ;;		Nothing
 11208 ;; This function is called by:
 11209 ;;		_efgtoa
 11210 ;; This function uses a non-reentrant model
 11211 ;;
 11212                           
 11213                           
 11214                           ;psect for function _strcpy
 11215  3287                     _strcpy:	
 11216                           
 11217                           ;incstack = 0
 11218                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
 11219                           ;strcpy@dest stored from wreg
 11220  3287  00F8               	movwf	strcpy@dest
 11221  3288  0872               	movf	strcpy@src+1,w
 11222  3289  00F6               	movwf	strcpy@s+1
 11223  328A  0871               	movf	strcpy@src,w
 11224  328B  00F5               	movwf	strcpy@s
 11225  328C  0878               	movf	strcpy@dest,w
 11226  328D  00F3               	movwf	??_strcpy
 11227  328E  0873               	movf	??_strcpy,w
 11228  328F  00F7               	movwf	strcpy@d
 11229  3290                     l4620:	
 11230  3290  0877               	movf	strcpy@d,w
 11231  3291  0086               	movwf	6
 11232  3292  3002               	movlw	2	; select bank4/5
 11233  3293  0087               	movwf	7
 11234  3294  0AF7               	incf	strcpy@d,f
 11235  3295  0876               	movf	strcpy@s+1,w
 11236  3296  00F4               	movwf	??_strcpy+1
 11237  3297  0875               	movf	strcpy@s,w
 11238  3298  00F3               	movwf	??_strcpy
 11239  3299  0AF5               	incf	strcpy@s,f
 11240  329A  1903               	skipnz
 11241  329B  0AF6               	incf	strcpy@s+1,f
 11242  329C  0873               	movf	??_strcpy,w
 11243  329D  0084               	movwf	4
 11244  329E  0874               	movf	??_strcpy+1,w
 11245  329F  0085               	movwf	5
 11246  32A0  0800               	movf	0,w	;code access
 11247  32A1  3FC0               	movwi [0]fsr1
 11248  32A2  0889               	movf	9,f
 11249  32A3  1903               	btfsc	3,2
 11250  32A4  0008               	return
 11251  32A5  2A90               	goto	l4620
 11252  32A6                     __end_of_strcpy:	
 11253                           
 11254                           	psect	text21
 11255  21C6                     __ptext21:	
 11256 ;; *************** function _floorf *****************
 11257 ;; Defined at:
 11258 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
 11259 ;; Parameters:    Size  Location     Type
 11260 ;;  x               4   58[BANK0 ] float 
 11261 ;; Auto vars:     Size  Location     Type
 11262 ;;  u               4   74[BANK0 ] struct .
 11263 ;;  m               4   68[BANK0 ] unsigned long 
 11264 ;;  e               2   72[BANK0 ] int 
 11265 ;; Return value:  Size  Location     Type
 11266 ;;                  4   58[BANK0 ] float 
 11267 ;; Registers used:
 11268 ;;		wreg, status,2, status,0
 11269 ;; Tracked objects:
 11270 ;;		On entry : 0/0
 11271 ;;		On exit  : 0/0
 11272 ;;		Unchanged: 0/0
 11273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11274 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11275 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11276 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11277 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11278 ;;Total ram usage:       20 bytes
 11279 ;; Hardware stack levels used:    1
 11280 ;; Hardware stack levels required when called:    1
 11281 ;; This function calls:
 11282 ;;		Nothing
 11283 ;; This function is called by:
 11284 ;;		_efgtoa
 11285 ;; This function uses a non-reentrant model
 11286 ;;
 11287                           
 11288                           
 11289                           ;psect for function _floorf
 11290  21C6                     _floorf:	
 11291                           
 11292                           ;incstack = 0
 11293                           ; Regs used in _floorf: [wreg+status,2+status,0]
 11294  21C6  0023               	movlb	3	; select bank3
 11295  21C7  082D               	movf	(floorf@F524+3)^(0+384),w
 11296  21C8  0020               	movlb	0	; select bank0
 11297  21C9  00ED               	movwf	floorf@u+3
 11298  21CA  0023               	movlb	3	; select bank3
 11299  21CB  082C               	movf	(floorf@F524+2)^(0+384),w
 11300  21CC  0020               	movlb	0	; select bank0
 11301  21CD  00EC               	movwf	floorf@u+2
 11302  21CE  0023               	movlb	3	; select bank3
 11303  21CF  082B               	movf	(floorf@F524+1)^(0+384),w
 11304  21D0  0020               	movlb	0	; select bank0
 11305  21D1  00EB               	movwf	floorf@u+1
 11306  21D2  0023               	movlb	3	; select bank3
 11307  21D3  082A               	movf	floorf@F524^(0+384),w
 11308  21D4  0020               	movlb	0	; select bank0
 11309  21D5  00EA               	movwf	floorf@u
 11310  21D6  085D               	movf	floorf@x+3,w
 11311  21D7  00ED               	movwf	floorf@u+3
 11312  21D8  085C               	movf	floorf@x+2,w
 11313  21D9  00EC               	movwf	floorf@u+2
 11314  21DA  085B               	movf	floorf@x+1,w
 11315  21DB  00EB               	movwf	floorf@u+1
 11316  21DC  085A               	movf	floorf@x,w
 11317  21DD  00EA               	movwf	floorf@u
 11318  21DE  086A               	movf	floorf@u,w
 11319  21DF  00DE               	movwf	??_floorf
 11320  21E0  086B               	movf	floorf@u+1,w
 11321  21E1  00DF               	movwf	??_floorf+1
 11322  21E2  086C               	movf	floorf@u+2,w
 11323  21E3  00E0               	movwf	??_floorf+2
 11324  21E4  086D               	movf	floorf@u+3,w
 11325  21E5  00E1               	movwf	??_floorf+3
 11326  21E6  3017               	movlw	23
 11327  21E7                     u5565:	
 11328  21E7  36E1               	lsrf	??_floorf+3,f
 11329  21E8  0CE0               	rrf	??_floorf+2,f
 11330  21E9  0CDF               	rrf	??_floorf+1,f
 11331  21EA  0CDE               	rrf	??_floorf,f
 11332  21EB  0B89               	decfsz	9,f
 11333  21EC  29E7               	goto	u5565
 11334  21ED  30FF               	movlw	255
 11335  21EE  055E               	andwf	??_floorf,w
 11336  21EF  00E2               	movwf	??_floorf+4
 11337  21F0  3000               	movlw	0
 11338  21F1  055F               	andwf	??_floorf+1,w
 11339  21F2  00E3               	movwf	??_floorf+5
 11340  21F3  0862               	movf	??_floorf+4,w
 11341  21F4  3E81               	addlw	129
 11342  21F5  00E8               	movwf	floorf@e
 11343  21F6  30FF               	movlw	255
 11344  21F7  3D63               	addwfc	??_floorf+5,w
 11345  21F8  00E9               	movwf	floorf@e+1
 11346  21F9  0869               	movf	floorf@e+1,w
 11347  21FA  3A80               	xorlw	128
 11348  21FB  00DE               	movwf	??_floorf
 11349  21FC  3080               	movlw	128
 11350  21FD  025E               	subwf	??_floorf,w
 11351  21FE  1D03               	skipz
 11352  21FF  2A02               	goto	u5575
 11353  2200  3017               	movlw	23
 11354  2201  0268               	subwf	floorf@e,w
 11355  2202                     u5575:	
 11356  2202  1803               	btfsc	3,0
 11357  2203  0008               	return
 11358  2204  0020               	movlb	0	; select bank0
 11359  2205  1BE9               	btfsc	floorf@e+1,7
 11360  2206  2A5F               	goto	l4652
 11361  2207  30FF               	movlw	255
 11362  2208  00DE               	movwf	??_floorf
 11363  2209  30FF               	movlw	255
 11364  220A  00DF               	movwf	??_floorf+1
 11365  220B  307F               	movlw	127
 11366  220C  00E0               	movwf	??_floorf+2
 11367  220D  3000               	movlw	0
 11368  220E  00E1               	movwf	??_floorf+3
 11369  220F  0A68               	incf	floorf@e,w
 11370  2210  2A15               	goto	u5590
 11371  2211                     u5595:	
 11372  2211  37E1               	asrf	??_floorf+3,f
 11373  2212  0CE0               	rrf	??_floorf+2,f
 11374  2213  0CDF               	rrf	??_floorf+1,f
 11375  2214  0CDE               	rrf	??_floorf,f
 11376  2215                     u5590:	
 11377  2215  0B89               	decfsz	9,f
 11378  2216  2A11               	goto	u5595
 11379  2217  0861               	movf	??_floorf+3,w
 11380  2218  00E7               	movwf	floorf@m+3
 11381  2219  0860               	movf	??_floorf+2,w
 11382  221A  00E6               	movwf	floorf@m+2
 11383  221B  085F               	movf	??_floorf+1,w
 11384  221C  00E5               	movwf	floorf@m+1
 11385  221D  085E               	movf	??_floorf,w
 11386  221E  00E4               	movwf	floorf@m
 11387  221F  086A               	movf	floorf@u,w
 11388  2220  0564               	andwf	floorf@m,w
 11389  2221  00DE               	movwf	??_floorf
 11390  2222  086B               	movf	floorf@u+1,w
 11391  2223  0565               	andwf	floorf@m+1,w
 11392  2224  00DF               	movwf	??_floorf+1
 11393  2225  086C               	movf	floorf@u+2,w
 11394  2226  0566               	andwf	floorf@m+2,w
 11395  2227  00E0               	movwf	??_floorf+2
 11396  2228  086D               	movf	floorf@u+3,w
 11397  2229  0567               	andwf	floorf@m+3,w
 11398  222A  00E1               	movwf	??_floorf+3
 11399  222B  0861               	movf	??_floorf+3,w
 11400  222C  0460               	iorwf	??_floorf+2,w
 11401  222D  045F               	iorwf	??_floorf+1,w
 11402  222E  045E               	iorwf	??_floorf,w
 11403  222F  1903               	btfsc	3,2
 11404  2230  0008               	return
 11405  2231  086A               	movf	floorf@u,w
 11406  2232  00DE               	movwf	??_floorf
 11407  2233  086B               	movf	floorf@u+1,w
 11408  2234  00DF               	movwf	??_floorf+1
 11409  2235  086C               	movf	floorf@u+2,w
 11410  2236  00E0               	movwf	??_floorf+2
 11411  2237  086D               	movf	floorf@u+3,w
 11412  2238  00E1               	movwf	??_floorf+3
 11413  2239  301F               	movlw	31
 11414  223A                     u5615:	
 11415  223A  36E1               	lsrf	??_floorf+3,f
 11416  223B  0CE0               	rrf	??_floorf+2,f
 11417  223C  0CDF               	rrf	??_floorf+1,f
 11418  223D  0CDE               	rrf	??_floorf,f
 11419  223E  0B89               	decfsz	9,f
 11420  223F  2A3A               	goto	u5615
 11421  2240  0861               	movf	??_floorf+3,w
 11422  2241  0460               	iorwf	??_floorf+2,w
 11423  2242  045F               	iorwf	??_floorf+1,w
 11424  2243  045E               	iorwf	??_floorf,w
 11425  2244  1903               	skipnz
 11426  2245  2A4E               	goto	l4650
 11427  2246  0864               	movf	floorf@m,w
 11428  2247  07EA               	addwf	floorf@u,f
 11429  2248  0865               	movf	floorf@m+1,w
 11430  2249  3DEB               	addwfc	floorf@u+1,f
 11431  224A  0866               	movf	floorf@m+2,w
 11432  224B  3DEC               	addwfc	floorf@u+2,f
 11433  224C  0867               	movf	floorf@m+3,w
 11434  224D  3DED               	addwfc	floorf@u+3,f
 11435  224E                     l4650:	
 11436  224E  0964               	comf	floorf@m,w
 11437  224F  00DE               	movwf	??_floorf
 11438  2250  0965               	comf	floorf@m+1,w
 11439  2251  00DF               	movwf	??_floorf+1
 11440  2252  0966               	comf	floorf@m+2,w
 11441  2253  00E0               	movwf	??_floorf+2
 11442  2254  0967               	comf	floorf@m+3,w
 11443  2255  00E1               	movwf	??_floorf+3
 11444  2256  085E               	movf	??_floorf,w
 11445  2257  05EA               	andwf	floorf@u,f
 11446  2258  085F               	movf	??_floorf+1,w
 11447  2259  05EB               	andwf	floorf@u+1,f
 11448  225A  0860               	movf	??_floorf+2,w
 11449  225B  05EC               	andwf	floorf@u+2,f
 11450  225C  0861               	movf	??_floorf+3,w
 11451  225D  05ED               	andwf	floorf@u+3,f
 11452  225E  2A95               	goto	l1393
 11453  225F                     l4652:	
 11454  225F  086A               	movf	floorf@u,w
 11455  2260  00DE               	movwf	??_floorf
 11456  2261  086B               	movf	floorf@u+1,w
 11457  2262  00DF               	movwf	??_floorf+1
 11458  2263  086C               	movf	floorf@u+2,w
 11459  2264  00E0               	movwf	??_floorf+2
 11460  2265  086D               	movf	floorf@u+3,w
 11461  2266  00E1               	movwf	??_floorf+3
 11462  2267  301F               	movlw	31
 11463  2268                     u5635:	
 11464  2268  36E1               	lsrf	??_floorf+3,f
 11465  2269  0CE0               	rrf	??_floorf+2,f
 11466  226A  0CDF               	rrf	??_floorf+1,f
 11467  226B  0CDE               	rrf	??_floorf,f
 11468  226C  0B89               	decfsz	9,f
 11469  226D  2A68               	goto	u5635
 11470  226E  0861               	movf	??_floorf+3,w
 11471  226F  0460               	iorwf	??_floorf+2,w
 11472  2270  045F               	iorwf	??_floorf+1,w
 11473  2271  045E               	iorwf	??_floorf,w
 11474  2272  1D03               	skipz
 11475  2273  2A78               	goto	l4656
 11476  2274  3000               	movlw	0
 11477  2275  00ED               	movwf	floorf@u+3
 11478  2276  3000               	movlw	0
 11479  2277  2A90               	goto	L10
 11480  2278                     l4656:	
 11481  2278  086A               	movf	floorf@u,w
 11482  2279  00DE               	movwf	??_floorf
 11483  227A  086B               	movf	floorf@u+1,w
 11484  227B  00DF               	movwf	??_floorf+1
 11485  227C  086C               	movf	floorf@u+2,w
 11486  227D  00E0               	movwf	??_floorf+2
 11487  227E  086D               	movf	floorf@u+3,w
 11488  227F  00E1               	movwf	??_floorf+3
 11489  2280  3001               	movlw	1
 11490  2281                     u5655:	
 11491  2281  35DE               	lslf	??_floorf,f
 11492  2282  0DDF               	rlf	??_floorf+1,f
 11493  2283  0DE0               	rlf	??_floorf+2,f
 11494  2284  0DE1               	rlf	??_floorf+3,f
 11495  2285  0B89               	decfsz	9,f
 11496  2286  2A81               	goto	u5655
 11497  2287  0861               	movf	??_floorf+3,w
 11498  2288  0460               	iorwf	??_floorf+2,w
 11499  2289  045F               	iorwf	??_floorf+1,w
 11500  228A  045E               	iorwf	??_floorf,w
 11501  228B  1903               	skipnz
 11502  228C  2A95               	goto	l1393
 11503  228D  30BF               	movlw	191
 11504  228E  00ED               	movwf	floorf@u+3
 11505  228F  3080               	movlw	128
 11506  2290                     L10:	
 11507  2290  00EC               	movwf	floorf@u+2
 11508  2291  3000               	movlw	0
 11509  2292  00EB               	movwf	floorf@u+1
 11510  2293  3000               	movlw	0
 11511  2294  00EA               	movwf	floorf@u
 11512  2295                     l1393:	
 11513  2295  086D               	movf	floorf@u+3,w
 11514  2296  00DD               	movwf	?_floorf+3
 11515  2297  086C               	movf	floorf@u+2,w
 11516  2298  00DC               	movwf	?_floorf+2
 11517  2299  086B               	movf	floorf@u+1,w
 11518  229A  00DB               	movwf	?_floorf+1
 11519  229B  086A               	movf	floorf@u,w
 11520  229C  00DA               	movwf	?_floorf
 11521  229D  0008               	return
 11522  229E                     __end_of_floorf:	
 11523                           
 11524                           	psect	text22
 11525  3788                     __ptext22:	
 11526 ;; *************** function ___fpclassifyf *****************
 11527 ;; Defined at:
 11528 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
 11529 ;; Parameters:    Size  Location     Type
 11530 ;;  x               4    1[COMMON] float 
 11531 ;; Auto vars:     Size  Location     Type
 11532 ;;  u               4    2[BANK0 ] struct .
 11533 ;;  e               2    0[BANK0 ] int 
 11534 ;; Return value:  Size  Location     Type
 11535 ;;                  2    1[COMMON] int 
 11536 ;; Registers used:
 11537 ;;		wreg, status,2, status,0
 11538 ;; Tracked objects:
 11539 ;;		On entry : 0/0
 11540 ;;		On exit  : 0/0
 11541 ;;		Unchanged: 0/0
 11542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11543 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11544 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11545 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11546 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11547 ;;Total ram usage:       16 bytes
 11548 ;; Hardware stack levels used:    1
 11549 ;; Hardware stack levels required when called:    1
 11550 ;; This function calls:
 11551 ;;		Nothing
 11552 ;; This function is called by:
 11553 ;;		_efgtoa
 11554 ;; This function uses a non-reentrant model
 11555 ;;
 11556                           
 11557                           
 11558                           ;psect for function ___fpclassifyf
 11559  3788                     ___fpclassifyf:	
 11560                           
 11561                           ;incstack = 0
 11562                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
 11563  3788  0023               	movlb	3	; select bank3
 11564  3789  0831               	movf	(___fpclassifyf@F463+3)^(0+384),w
 11565  378A  0020               	movlb	0	; select bank0
 11566  378B  00A5               	movwf	___fpclassifyf@u+3
 11567  378C  0023               	movlb	3	; select bank3
 11568  378D  0830               	movf	(___fpclassifyf@F463+2)^(0+384),w
 11569  378E  0020               	movlb	0	; select bank0
 11570  378F  00A4               	movwf	___fpclassifyf@u+2
 11571  3790  0023               	movlb	3	; select bank3
 11572  3791  082F               	movf	(___fpclassifyf@F463+1)^(0+384),w
 11573  3792  0020               	movlb	0	; select bank0
 11574  3793  00A3               	movwf	___fpclassifyf@u+1
 11575  3794  0023               	movlb	3	; select bank3
 11576  3795  082E               	movf	___fpclassifyf@F463^(0+384),w
 11577  3796  0020               	movlb	0	; select bank0
 11578  3797  00A2               	movwf	___fpclassifyf@u
 11579  3798  0874               	movf	___fpclassifyf@x+3,w
 11580  3799  00A5               	movwf	___fpclassifyf@u+3
 11581  379A  0873               	movf	___fpclassifyf@x+2,w
 11582  379B  00A4               	movwf	___fpclassifyf@u+2
 11583  379C  0872               	movf	___fpclassifyf@x+1,w
 11584  379D  00A3               	movwf	___fpclassifyf@u+1
 11585  379E  0871               	movf	___fpclassifyf@x,w
 11586  379F  00A2               	movwf	___fpclassifyf@u
 11587  37A0  0822               	movf	___fpclassifyf@u,w
 11588  37A1  00F5               	movwf	??___fpclassifyf
 11589  37A2  0823               	movf	___fpclassifyf@u+1,w
 11590  37A3  00F6               	movwf	??___fpclassifyf+1
 11591  37A4  0824               	movf	___fpclassifyf@u+2,w
 11592  37A5  00F7               	movwf	??___fpclassifyf+2
 11593  37A6  0825               	movf	___fpclassifyf@u+3,w
 11594  37A7  00F8               	movwf	??___fpclassifyf+3
 11595  37A8  3017               	movlw	23
 11596  37A9                     u5445:	
 11597  37A9  36F8               	lsrf	??___fpclassifyf+3,f
 11598  37AA  0CF7               	rrf	??___fpclassifyf+2,f
 11599  37AB  0CF6               	rrf	??___fpclassifyf+1,f
 11600  37AC  0CF5               	rrf	??___fpclassifyf,f
 11601  37AD  0B89               	decfsz	9,f
 11602  37AE  2FA9               	goto	u5445
 11603  37AF  30FF               	movlw	255
 11604  37B0  0575               	andwf	??___fpclassifyf,w
 11605  37B1  00A0               	movwf	___fpclassifyf@e
 11606  37B2  3000               	movlw	0
 11607  37B3  0576               	andwf	??___fpclassifyf+1,w
 11608  37B4  00A1               	movwf	___fpclassifyf@e+1
 11609  37B5  0820               	movf	___fpclassifyf@e,w
 11610  37B6  0421               	iorwf	___fpclassifyf@e+1,w
 11611  37B7  1D03               	btfss	3,2
 11612  37B8  2FD8               	goto	l4608
 11613  37B9  0822               	movf	___fpclassifyf@u,w
 11614  37BA  00F5               	movwf	??___fpclassifyf
 11615  37BB  0823               	movf	___fpclassifyf@u+1,w
 11616  37BC  00F6               	movwf	??___fpclassifyf+1
 11617  37BD  0824               	movf	___fpclassifyf@u+2,w
 11618  37BE  00F7               	movwf	??___fpclassifyf+2
 11619  37BF  0825               	movf	___fpclassifyf@u+3,w
 11620  37C0  00F8               	movwf	??___fpclassifyf+3
 11621  37C1  3001               	movlw	1
 11622  37C2                     u5465:	
 11623  37C2  35F5               	lslf	??___fpclassifyf,f
 11624  37C3  0DF6               	rlf	??___fpclassifyf+1,f
 11625  37C4  0DF7               	rlf	??___fpclassifyf+2,f
 11626  37C5  0DF8               	rlf	??___fpclassifyf+3,f
 11627  37C6  0B89               	decfsz	9,f
 11628  37C7  2FC2               	goto	u5465
 11629  37C8  0878               	movf	??___fpclassifyf+3,w
 11630  37C9  0477               	iorwf	??___fpclassifyf+2,w
 11631  37CA  0476               	iorwf	??___fpclassifyf+1,w
 11632  37CB  0475               	iorwf	??___fpclassifyf,w
 11633  37CC  1D03               	skipz
 11634  37CD  2FD3               	goto	l4604
 11635  37CE  3002               	movlw	2
 11636  37CF  00F1               	movwf	?___fpclassifyf
 11637  37D0  3000               	movlw	0
 11638  37D1  00F2               	movwf	?___fpclassifyf+1
 11639  37D2  0008               	return
 11640  37D3                     l4604:	
 11641  37D3  3003               	movlw	3
 11642  37D4  00F1               	movwf	?___fpclassifyf
 11643  37D5  3000               	movlw	0
 11644  37D6  00F2               	movwf	?___fpclassifyf+1
 11645  37D7  0008               	return
 11646  37D8                     l4608:	
 11647  37D8  0A20               	incf	___fpclassifyf@e,w
 11648  37D9  0421               	iorwf	___fpclassifyf@e+1,w
 11649  37DA  1D03               	btfss	3,2
 11650  37DB  2FFB               	goto	l4614
 11651  37DC  0822               	movf	___fpclassifyf@u,w
 11652  37DD  00F5               	movwf	??___fpclassifyf
 11653  37DE  0823               	movf	___fpclassifyf@u+1,w
 11654  37DF  00F6               	movwf	??___fpclassifyf+1
 11655  37E0  0824               	movf	___fpclassifyf@u+2,w
 11656  37E1  00F7               	movwf	??___fpclassifyf+2
 11657  37E2  0825               	movf	___fpclassifyf@u+3,w
 11658  37E3  00F8               	movwf	??___fpclassifyf+3
 11659  37E4  3009               	movlw	9
 11660  37E5                     u5495:	
 11661  37E5  35F5               	lslf	??___fpclassifyf,f
 11662  37E6  0DF6               	rlf	??___fpclassifyf+1,f
 11663  37E7  0DF7               	rlf	??___fpclassifyf+2,f
 11664  37E8  0DF8               	rlf	??___fpclassifyf+3,f
 11665  37E9  0B89               	decfsz	9,f
 11666  37EA  2FE5               	goto	u5495
 11667  37EB  0878               	movf	??___fpclassifyf+3,w
 11668  37EC  0477               	iorwf	??___fpclassifyf+2,w
 11669  37ED  0476               	iorwf	??___fpclassifyf+1,w
 11670  37EE  0475               	iorwf	??___fpclassifyf,w
 11671  37EF  1D03               	btfss	3,2
 11672  37F0  2FF3               	goto	u5500
 11673  37F1  3001               	movlw	1
 11674  37F2  2FF4               	goto	u5510
 11675  37F3                     u5500:	
 11676  37F3  3000               	movlw	0
 11677  37F4                     u5510:	
 11678  37F4  00F9               	movwf	??___fpclassifyf+4
 11679  37F5  01FA               	clrf	??___fpclassifyf+5
 11680  37F6  0879               	movf	??___fpclassifyf+4,w
 11681  37F7  00F1               	movwf	?___fpclassifyf
 11682  37F8  087A               	movf	??___fpclassifyf+5,w
 11683  37F9  00F2               	movwf	?___fpclassifyf+1
 11684  37FA  0008               	return
 11685  37FB                     l4614:	
 11686  37FB  3004               	movlw	4
 11687  37FC  00F1               	movwf	?___fpclassifyf
 11688  37FD  3000               	movlw	0
 11689  37FE  00F2               	movwf	?___fpclassifyf+1
 11690  37FF  0008               	return
 11691  3800                     __end_of___fpclassifyf:	
 11692                           
 11693                           	psect	text23
 11694  3268                     __ptext23:	
 11695 ;; *************** function ___flsub *****************
 11696 ;; Defined at:
 11697 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 11698 ;; Parameters:    Size  Location     Type
 11699 ;;  a               4   32[BANK0 ] int 
 11700 ;;  b               4   36[BANK0 ] int 
 11701 ;; Auto vars:     Size  Location     Type
 11702 ;;		None
 11703 ;; Return value:  Size  Location     Type
 11704 ;;                  4   32[BANK0 ] int 
 11705 ;; Registers used:
 11706 ;;		wreg, status,2, status,0, pclath, cstack
 11707 ;; Tracked objects:
 11708 ;;		On entry : 0/0
 11709 ;;		On exit  : 0/0
 11710 ;;		Unchanged: 0/0
 11711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11712 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11715 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11716 ;;Total ram usage:        8 bytes
 11717 ;; Hardware stack levels used:    1
 11718 ;; Hardware stack levels required when called:    2
 11719 ;; This function calls:
 11720 ;;		___fladd
 11721 ;; This function is called by:
 11722 ;;		_efgtoa
 11723 ;; This function uses a non-reentrant model
 11724 ;;
 11725                           
 11726                           
 11727                           ;psect for function ___flsub
 11728  3268                     ___flsub:	
 11729                           
 11730                           ;incstack = 0
 11731                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 11732  3268  3080               	movlw	128
 11733  3269  0020               	movlb	0	; select bank0
 11734  326A  06C3               	xorwf	___flsub@a+3,f
 11735  326B  0847               	movf	___flsub@b+3,w
 11736  326C  00F4               	movwf	___fladd@b+3
 11737  326D  0846               	movf	___flsub@b+2,w
 11738  326E  00F3               	movwf	___fladd@b+2
 11739  326F  0845               	movf	___flsub@b+1,w
 11740  3270  00F2               	movwf	___fladd@b+1
 11741  3271  0844               	movf	___flsub@b,w
 11742  3272  00F1               	movwf	___fladd@b
 11743  3273  0843               	movf	___flsub@a+3,w
 11744  3274  00F8               	movwf	___fladd@a+3
 11745  3275  0842               	movf	___flsub@a+2,w
 11746  3276  00F7               	movwf	___fladd@a+2
 11747  3277  0841               	movf	___flsub@a+1,w
 11748  3278  00F6               	movwf	___fladd@a+1
 11749  3279  0840               	movf	___flsub@a,w
 11750  327A  00F5               	movwf	___fladd@a
 11751  327B  319E  261E         	fcall	___fladd
 11752  327D  0874               	movf	?___fladd+3,w
 11753  327E  0020               	movlb	0	; select bank0
 11754  327F  00C3               	movwf	?___flsub+3
 11755  3280  0873               	movf	?___fladd+2,w
 11756  3281  00C2               	movwf	?___flsub+2
 11757  3282  0872               	movf	?___fladd+1,w
 11758  3283  00C1               	movwf	?___flsub+1
 11759  3284  0871               	movf	?___fladd,w
 11760  3285  00C0               	movwf	?___flsub
 11761  3286  0008               	return
 11762  3287                     __end_of___flsub:	
 11763                           
 11764                           	psect	text24
 11765  1E1E                     __ptext24:	
 11766 ;; *************** function ___fladd *****************
 11767 ;; Defined at:
 11768 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 11769 ;; Parameters:    Size  Location     Type
 11770 ;;  b               4    1[COMMON] int 
 11771 ;;  a               4    5[COMMON] int 
 11772 ;; Auto vars:     Size  Location     Type
 11773 ;;  grs             1   11[BANK0 ] unsigned char 
 11774 ;;  bexp            1   10[BANK0 ] unsigned char 
 11775 ;;  aexp            1    9[BANK0 ] unsigned char 
 11776 ;;  signs           1    8[BANK0 ] unsigned char 
 11777 ;; Return value:  Size  Location     Type
 11778 ;;                  4    1[COMMON] unsigned char 
 11779 ;; Registers used:
 11780 ;;		wreg, status,2, status,0
 11781 ;; Tracked objects:
 11782 ;;		On entry : 0/0
 11783 ;;		On exit  : 0/0
 11784 ;;		Unchanged: 0/0
 11785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11786 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11787 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11788 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11789 ;;      Totals:         8      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11790 ;;Total ram usage:       20 bytes
 11791 ;; Hardware stack levels used:    1
 11792 ;; Hardware stack levels required when called:    1
 11793 ;; This function calls:
 11794 ;;		Nothing
 11795 ;; This function is called by:
 11796 ;;		_efgtoa
 11797 ;;		___flsub
 11798 ;; This function uses a non-reentrant model
 11799 ;;
 11800                           
 11801                           
 11802                           ;psect for function ___fladd
 11803  1E1E                     ___fladd:	
 11804                           
 11805                           ;incstack = 0
 11806                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 11807  1E1E  0874               	movf	___fladd@b+3,w
 11808  1E1F  3980               	andlw	128
 11809  1E20  0020               	movlb	0	; select bank0
 11810  1E21  00A0               	movwf	??___fladd
 11811  1E22  0820               	movf	??___fladd,w
 11812  1E23  00A8               	movwf	___fladd@signs
 11813  1E24  3574               	lslf	___fladd@b+3,w
 11814  1E25  00A0               	movwf	??___fladd
 11815  1E26  0820               	movf	??___fladd,w
 11816  1E27  00AA               	movwf	___fladd@bexp
 11817  1E28  1BF3               	btfsc	___fladd@b+2,7
 11818  1E29  142A               	bsf	___fladd@bexp,0
 11819  1E2A  082A               	movf	___fladd@bexp,w
 11820  1E2B  1903               	btfsc	3,2
 11821  1E2C  2E3B               	goto	l7056
 11822  1E2D  0A2A               	incf	___fladd@bexp,w
 11823  1E2E  1D03               	btfss	3,2
 11824  1E2F  2E38               	goto	l7052
 11825  1E30  3000               	movlw	0
 11826  1E31  00F4               	movwf	___fladd@b+3
 11827  1E32  3000               	movlw	0
 11828  1E33  00F3               	movwf	___fladd@b+2
 11829  1E34  3000               	movlw	0
 11830  1E35  00F2               	movwf	___fladd@b+1
 11831  1E36  3000               	movlw	0
 11832  1E37  00F1               	movwf	___fladd@b
 11833  1E38                     l7052:	
 11834  1E38  17F3               	bsf	___fladd@b+2,7
 11835  1E39  01F4               	clrf	___fladd@b+3
 11836  1E3A  2E43               	goto	l7058
 11837  1E3B                     l7056:	
 11838  1E3B  3000               	movlw	0
 11839  1E3C  00F4               	movwf	___fladd@b+3
 11840  1E3D  3000               	movlw	0
 11841  1E3E  00F3               	movwf	___fladd@b+2
 11842  1E3F  3000               	movlw	0
 11843  1E40  00F2               	movwf	___fladd@b+1
 11844  1E41  3000               	movlw	0
 11845  1E42  00F1               	movwf	___fladd@b
 11846  1E43                     l7058:	
 11847  1E43  0878               	movf	___fladd@a+3,w
 11848  1E44  3980               	andlw	128
 11849  1E45  00A0               	movwf	??___fladd
 11850  1E46  0820               	movf	??___fladd,w
 11851  1E47  00A9               	movwf	___fladd@aexp
 11852  1E48  0829               	movf	___fladd@aexp,w
 11853  1E49  0628               	xorwf	___fladd@signs,w
 11854  1E4A  1D03               	btfss	3,2
 11855  1E4B  1728               	bsf	___fladd@signs,6
 11856  1E4C  3578               	lslf	___fladd@a+3,w
 11857  1E4D  00A0               	movwf	??___fladd
 11858  1E4E  0820               	movf	??___fladd,w
 11859  1E4F  00A9               	movwf	___fladd@aexp
 11860  1E50  1BF7               	btfsc	___fladd@a+2,7
 11861  1E51  1429               	bsf	___fladd@aexp,0
 11862  1E52  0829               	movf	___fladd@aexp,w
 11863  1E53  1903               	btfsc	3,2
 11864  1E54  2E63               	goto	l7080
 11865  1E55  0A29               	incf	___fladd@aexp,w
 11866  1E56  1D03               	btfss	3,2
 11867  1E57  2E60               	goto	l7076
 11868  1E58  3000               	movlw	0
 11869  1E59  00F8               	movwf	___fladd@a+3
 11870  1E5A  3000               	movlw	0
 11871  1E5B  00F7               	movwf	___fladd@a+2
 11872  1E5C  3000               	movlw	0
 11873  1E5D  00F6               	movwf	___fladd@a+1
 11874  1E5E  3000               	movlw	0
 11875  1E5F  00F5               	movwf	___fladd@a
 11876  1E60                     l7076:	
 11877  1E60  17F7               	bsf	___fladd@a+2,7
 11878  1E61  01F8               	clrf	___fladd@a+3
 11879  1E62  2E6B               	goto	l1185
 11880  1E63                     l7080:	
 11881  1E63  3000               	movlw	0
 11882  1E64  00F8               	movwf	___fladd@a+3
 11883  1E65  3000               	movlw	0
 11884  1E66  00F7               	movwf	___fladd@a+2
 11885  1E67  3000               	movlw	0
 11886  1E68  00F6               	movwf	___fladd@a+1
 11887  1E69  3000               	movlw	0
 11888  1E6A  00F5               	movwf	___fladd@a
 11889  1E6B                     l1185:	
 11890  1E6B  082A               	movf	___fladd@bexp,w
 11891  1E6C  0229               	subwf	___fladd@aexp,w
 11892  1E6D  1803               	skipnc
 11893  1E6E  2EB1               	goto	l7116
 11894  1E6F  1F28               	btfss	___fladd@signs,6
 11895  1E70  2E75               	goto	l7086
 11896  1E71  3080               	movlw	128
 11897  1E72  00A0               	movwf	??___fladd
 11898  1E73  0820               	movf	??___fladd,w
 11899  1E74  06A8               	xorwf	___fladd@signs,f
 11900  1E75                     l7086:	
 11901  1E75  082A               	movf	___fladd@bexp,w
 11902  1E76  00A0               	movwf	??___fladd
 11903  1E77  0820               	movf	??___fladd,w
 11904  1E78  00AB               	movwf	___fladd@grs
 11905  1E79  0829               	movf	___fladd@aexp,w
 11906  1E7A  00A0               	movwf	??___fladd
 11907  1E7B  0820               	movf	??___fladd,w
 11908  1E7C  00AA               	movwf	___fladd@bexp
 11909  1E7D  082B               	movf	___fladd@grs,w
 11910  1E7E  00A0               	movwf	??___fladd
 11911  1E7F  0820               	movf	??___fladd,w
 11912  1E80  00A9               	movwf	___fladd@aexp
 11913  1E81  0871               	movf	___fladd@b,w
 11914  1E82  00A0               	movwf	??___fladd
 11915  1E83  0820               	movf	??___fladd,w
 11916  1E84  00AB               	movwf	___fladd@grs
 11917  1E85  0875               	movf	___fladd@a,w
 11918  1E86  00A0               	movwf	??___fladd
 11919  1E87  0820               	movf	??___fladd,w
 11920  1E88  00F1               	movwf	___fladd@b
 11921  1E89  082B               	movf	___fladd@grs,w
 11922  1E8A  00A0               	movwf	??___fladd
 11923  1E8B  0820               	movf	??___fladd,w
 11924  1E8C  00F5               	movwf	___fladd@a
 11925  1E8D  0872               	movf	___fladd@b+1,w
 11926  1E8E  00A0               	movwf	??___fladd
 11927  1E8F  0820               	movf	??___fladd,w
 11928  1E90  00AB               	movwf	___fladd@grs
 11929  1E91  0876               	movf	___fladd@a+1,w
 11930  1E92  00A0               	movwf	??___fladd
 11931  1E93  0820               	movf	??___fladd,w
 11932  1E94  00F2               	movwf	___fladd@b+1
 11933  1E95  082B               	movf	___fladd@grs,w
 11934  1E96  00A0               	movwf	??___fladd
 11935  1E97  0820               	movf	??___fladd,w
 11936  1E98  00F6               	movwf	___fladd@a+1
 11937  1E99  0873               	movf	___fladd@b+2,w
 11938  1E9A  00A0               	movwf	??___fladd
 11939  1E9B  0820               	movf	??___fladd,w
 11940  1E9C  00AB               	movwf	___fladd@grs
 11941  1E9D  0877               	movf	___fladd@a+2,w
 11942  1E9E  00A0               	movwf	??___fladd
 11943  1E9F  0820               	movf	??___fladd,w
 11944  1EA0  00F3               	movwf	___fladd@b+2
 11945  1EA1  082B               	movf	___fladd@grs,w
 11946  1EA2  00A0               	movwf	??___fladd
 11947  1EA3  0820               	movf	??___fladd,w
 11948  1EA4  00F7               	movwf	___fladd@a+2
 11949  1EA5  0874               	movf	___fladd@b+3,w
 11950  1EA6  00A0               	movwf	??___fladd
 11951  1EA7  0820               	movf	??___fladd,w
 11952  1EA8  00AB               	movwf	___fladd@grs
 11953  1EA9  0878               	movf	___fladd@a+3,w
 11954  1EAA  00A0               	movwf	??___fladd
 11955  1EAB  0820               	movf	??___fladd,w
 11956  1EAC  00F4               	movwf	___fladd@b+3
 11957  1EAD  082B               	movf	___fladd@grs,w
 11958  1EAE  00A0               	movwf	??___fladd
 11959  1EAF  0820               	movf	??___fladd,w
 11960  1EB0  00F8               	movwf	___fladd@a+3
 11961  1EB1                     l7116:	
 11962  1EB1  01AB               	clrf	___fladd@grs
 11963  1EB2  0829               	movf	___fladd@aexp,w
 11964  1EB3  00A0               	movwf	??___fladd
 11965  1EB4  01A1               	clrf	??___fladd+1
 11966  1EB5  0821               	movf	??___fladd+1,w
 11967  1EB6  00A3               	movwf	??___fladd+3
 11968  1EB7  082A               	movf	___fladd@bexp,w
 11969  1EB8  0220               	subwf	??___fladd,w
 11970  1EB9  00A2               	movwf	??___fladd+2
 11971  1EBA  1C03               	skipc
 11972  1EBB  03A3               	decf	??___fladd+3,f
 11973  1EBC  0823               	movf	??___fladd+3,w
 11974  1EBD  3A80               	xorlw	128
 11975  1EBE  00A4               	movwf	??___fladd+4
 11976  1EBF  3080               	movlw	128
 11977  1EC0  0224               	subwf	??___fladd+4,w
 11978  1EC1  1D03               	skipz
 11979  1EC2  2EC5               	goto	u9725
 11980  1EC3  301A               	movlw	26
 11981  1EC4  0222               	subwf	??___fladd+2,w
 11982  1EC5                     u9725:	
 11983  1EC5  1C03               	skipc
 11984  1EC6  2EF9               	goto	l7134
 11985  1EC7  0874               	movf	___fladd@b+3,w
 11986  1EC8  0473               	iorwf	___fladd@b+2,w
 11987  1EC9  0472               	iorwf	___fladd@b+1,w
 11988  1ECA  0471               	iorwf	___fladd@b,w
 11989  1ECB  1903               	btfsc	3,2
 11990  1ECC  2ECF               	goto	u9730
 11991  1ECD  3001               	movlw	1
 11992  1ECE  2ED0               	goto	u9740
 11993  1ECF                     u9730:	
 11994  1ECF  3000               	movlw	0
 11995  1ED0                     u9740:	
 11996  1ED0  0020               	movlb	0	; select bank0
 11997  1ED1  00A0               	movwf	??___fladd
 11998  1ED2  0820               	movf	??___fladd,w
 11999  1ED3  00AB               	movwf	___fladd@grs
 12000  1ED4  3000               	movlw	0
 12001  1ED5  00F4               	movwf	___fladd@b+3
 12002  1ED6  3000               	movlw	0
 12003  1ED7  00F3               	movwf	___fladd@b+2
 12004  1ED8  3000               	movlw	0
 12005  1ED9  00F2               	movwf	___fladd@b+1
 12006  1EDA  3000               	movlw	0
 12007  1EDB  00F1               	movwf	___fladd@b
 12008  1EDC  0829               	movf	___fladd@aexp,w
 12009  1EDD  00A0               	movwf	??___fladd
 12010  1EDE  0820               	movf	??___fladd,w
 12011  1EDF  00AA               	movwf	___fladd@bexp
 12012  1EE0  2EFE               	goto	l1189
 12013  1EE1                     l1191:	
 12014  1EE1  1C2B               	btfss	___fladd@grs,0
 12015  1EE2  2EE9               	goto	l7124
 12016  1EE3  362B               	lsrf	___fladd@grs,w
 12017  1EE4  3801               	iorlw	1
 12018  1EE5  00A0               	movwf	??___fladd
 12019  1EE6  0820               	movf	??___fladd,w
 12020  1EE7  00AB               	movwf	___fladd@grs
 12021  1EE8  2EEB               	goto	l7126
 12022  1EE9                     l7124:	
 12023  1EE9  1003               	clrc
 12024  1EEA  0CAB               	rrf	___fladd@grs,f
 12025  1EEB                     l7126:	
 12026  1EEB  1871               	btfsc	___fladd@b,0
 12027  1EEC  17AB               	bsf	___fladd@grs,7
 12028  1EED  3001               	movlw	1
 12029  1EEE  00A0               	movwf	??___fladd
 12030  1EEF                     u9775:	
 12031  1EEF  37F4               	asrf	___fladd@b+3,f
 12032  1EF0  0CF3               	rrf	___fladd@b+2,f
 12033  1EF1  0CF2               	rrf	___fladd@b+1,f
 12034  1EF2  0CF1               	rrf	___fladd@b,f
 12035  1EF3  0BA0               	decfsz	??___fladd& (0+127),f
 12036  1EF4  2EEF               	goto	u9775
 12037  1EF5  3001               	movlw	1
 12038  1EF6  00A0               	movwf	??___fladd
 12039  1EF7  0820               	movf	??___fladd,w
 12040  1EF8  07AA               	addwf	___fladd@bexp,f
 12041  1EF9                     l7134:	
 12042  1EF9  0020               	movlb	0	; select bank0
 12043  1EFA  0829               	movf	___fladd@aexp,w
 12044  1EFB  022A               	subwf	___fladd@bexp,w
 12045  1EFC  1C03               	skipc
 12046  1EFD  2EE1               	goto	l1191
 12047  1EFE                     l1189:	
 12048  1EFE  1B28               	btfsc	___fladd@signs,6
 12049  1EFF  2F2F               	goto	l7160
 12050  1F00  082A               	movf	___fladd@bexp,w
 12051  1F01  1D03               	btfss	3,2
 12052  1F02  2F0C               	goto	l7142
 12053  1F03  3000               	movlw	0
 12054  1F04  00F4               	movwf	?___fladd+3
 12055  1F05  3000               	movlw	0
 12056  1F06  00F3               	movwf	?___fladd+2
 12057  1F07  3000               	movlw	0
 12058  1F08  00F2               	movwf	?___fladd+1
 12059  1F09  3000               	movlw	0
 12060  1F0A  00F1               	movwf	?___fladd
 12061  1F0B  0008               	return
 12062  1F0C                     l7142:	
 12063  1F0C  0875               	movf	___fladd@a,w
 12064  1F0D  07F1               	addwf	___fladd@b,f
 12065  1F0E  0876               	movf	___fladd@a+1,w
 12066  1F0F  3DF2               	addwfc	___fladd@b+1,f
 12067  1F10  0877               	movf	___fladd@a+2,w
 12068  1F11  3DF3               	addwfc	___fladd@b+2,f
 12069  1F12  0878               	movf	___fladd@a+3,w
 12070  1F13  3DF4               	addwfc	___fladd@b+3,f
 12071  1F14  1C74               	btfss	___fladd@b+3,0
 12072  1F15  2FA9               	goto	l7194
 12073  1F16  1C2B               	btfss	___fladd@grs,0
 12074  1F17  2F1E               	goto	l7150
 12075  1F18  362B               	lsrf	___fladd@grs,w
 12076  1F19  3801               	iorlw	1
 12077  1F1A  00A0               	movwf	??___fladd
 12078  1F1B  0820               	movf	??___fladd,w
 12079  1F1C  00AB               	movwf	___fladd@grs
 12080  1F1D  2F20               	goto	l7152
 12081  1F1E                     l7150:	
 12082  1F1E  1003               	clrc
 12083  1F1F  0CAB               	rrf	___fladd@grs,f
 12084  1F20                     l7152:	
 12085  1F20  1871               	btfsc	___fladd@b,0
 12086  1F21  17AB               	bsf	___fladd@grs,7
 12087  1F22  3001               	movlw	1
 12088  1F23  00A0               	movwf	??___fladd
 12089  1F24                     u9845:	
 12090  1F24  37F4               	asrf	___fladd@b+3,f
 12091  1F25  0CF3               	rrf	___fladd@b+2,f
 12092  1F26  0CF2               	rrf	___fladd@b+1,f
 12093  1F27  0CF1               	rrf	___fladd@b,f
 12094  1F28  0BA0               	decfsz	??___fladd& (0+127),f
 12095  1F29  2F24               	goto	u9845
 12096  1F2A  3001               	movlw	1
 12097  1F2B  00A0               	movwf	??___fladd
 12098  1F2C  0820               	movf	??___fladd,w
 12099  1F2D  07AA               	addwf	___fladd@bexp,f
 12100  1F2E  2FA9               	goto	l7194
 12101  1F2F                     l7160:	
 12102  1F2F  0874               	movf	___fladd@b+3,w
 12103  1F30  3A80               	xorlw	128
 12104  1F31  00A0               	movwf	??___fladd
 12105  1F32  0878               	movf	___fladd@a+3,w
 12106  1F33  3A80               	xorlw	128
 12107  1F34  0220               	subwf	??___fladd,w
 12108  1F35  1D03               	skipz
 12109  1F36  2F41               	goto	u9853
 12110  1F37  0877               	movf	___fladd@a+2,w
 12111  1F38  0273               	subwf	___fladd@b+2,w
 12112  1F39  1D03               	skipz
 12113  1F3A  2F41               	goto	u9853
 12114  1F3B  0876               	movf	___fladd@a+1,w
 12115  1F3C  0272               	subwf	___fladd@b+1,w
 12116  1F3D  1D03               	skipz
 12117  1F3E  2F41               	goto	u9853
 12118  1F3F  0875               	movf	___fladd@a,w
 12119  1F40  0271               	subwf	___fladd@b,w
 12120  1F41                     u9853:	
 12121  1F41  1803               	skipnc
 12122  1F42  2F79               	goto	l7170
 12123  1F43  30FF               	movlw	255
 12124  1F44  00A0               	movwf	??___fladd
 12125  1F45  30FF               	movlw	255
 12126  1F46  00A1               	movwf	??___fladd+1
 12127  1F47  30FF               	movlw	255
 12128  1F48  00A2               	movwf	??___fladd+2
 12129  1F49  30FF               	movlw	255
 12130  1F4A  00A3               	movwf	??___fladd+3
 12131  1F4B  0871               	movf	___fladd@b,w
 12132  1F4C  0275               	subwf	___fladd@a,w
 12133  1F4D  00A4               	movwf	??___fladd+4
 12134  1F4E  0872               	movf	___fladd@b+1,w
 12135  1F4F  3B76               	subwfb	___fladd@a+1,w
 12136  1F50  00A5               	movwf	??___fladd+5
 12137  1F51  0873               	movf	___fladd@b+2,w
 12138  1F52  3B77               	subwfb	___fladd@a+2,w
 12139  1F53  00A6               	movwf	??___fladd+6
 12140  1F54  0874               	movf	___fladd@b+3,w
 12141  1F55  3B78               	subwfb	___fladd@a+3,w
 12142  1F56  00A7               	movwf	??___fladd+7
 12143  1F57  0824               	movf	??___fladd+4,w
 12144  1F58  07A0               	addwf	??___fladd,f
 12145  1F59  0825               	movf	??___fladd+5,w
 12146  1F5A  3DA1               	addwfc	??___fladd+1,f
 12147  1F5B  0826               	movf	??___fladd+6,w
 12148  1F5C  3DA2               	addwfc	??___fladd+2,f
 12149  1F5D  0827               	movf	??___fladd+7,w
 12150  1F5E  3DA3               	addwfc	??___fladd+3,f
 12151  1F5F  0823               	movf	??___fladd+3,w
 12152  1F60  00F4               	movwf	___fladd@b+3
 12153  1F61  0822               	movf	??___fladd+2,w
 12154  1F62  00F3               	movwf	___fladd@b+2
 12155  1F63  0821               	movf	??___fladd+1,w
 12156  1F64  00F2               	movwf	___fladd@b+1
 12157  1F65  0820               	movf	??___fladd,w
 12158  1F66  00F1               	movwf	___fladd@b
 12159  1F67  3080               	movlw	128
 12160  1F68  00A0               	movwf	??___fladd
 12161  1F69  0820               	movf	??___fladd,w
 12162  1F6A  06A8               	xorwf	___fladd@signs,f
 12163  1F6B  09AB               	comf	___fladd@grs,f
 12164  1F6C  0AAB               	incf	___fladd@grs,f
 12165  1F6D  082B               	movf	___fladd@grs,w
 12166  1F6E  1D03               	btfss	3,2
 12167  1F6F  2F81               	goto	l1206
 12168  1F70  3001               	movlw	1
 12169  1F71  07F1               	addwf	___fladd@b,f
 12170  1F72  3000               	movlw	0
 12171  1F73  3DF2               	addwfc	___fladd@b+1,f
 12172  1F74  3000               	movlw	0
 12173  1F75  3DF3               	addwfc	___fladd@b+2,f
 12174  1F76  3000               	movlw	0
 12175  1F77  3DF4               	addwfc	___fladd@b+3,f
 12176  1F78  2F81               	goto	l1206
 12177  1F79                     l7170:	
 12178  1F79  0875               	movf	___fladd@a,w
 12179  1F7A  02F1               	subwf	___fladd@b,f
 12180  1F7B  0876               	movf	___fladd@a+1,w
 12181  1F7C  3BF2               	subwfb	___fladd@b+1,f
 12182  1F7D  0877               	movf	___fladd@a+2,w
 12183  1F7E  3BF3               	subwfb	___fladd@b+2,f
 12184  1F7F  0878               	movf	___fladd@a+3,w
 12185  1F80  3BF4               	subwfb	___fladd@b+3,f
 12186  1F81                     l1206:	
 12187  1F81  0874               	movf	___fladd@b+3,w
 12188  1F82  0473               	iorwf	___fladd@b+2,w
 12189  1F83  0472               	iorwf	___fladd@b+1,w
 12190  1F84  0471               	iorwf	___fladd@b,w
 12191  1F85  1D03               	skipz
 12192  1F86  2FA7               	goto	l7192
 12193  1F87  082B               	movf	___fladd@grs,w
 12194  1F88  1D03               	btfss	3,2
 12195  1F89  2FA7               	goto	l7192
 12196  1F8A  3000               	movlw	0
 12197  1F8B  00F4               	movwf	?___fladd+3
 12198  1F8C  3000               	movlw	0
 12199  1F8D  00F3               	movwf	?___fladd+2
 12200  1F8E  3000               	movlw	0
 12201  1F8F  00F2               	movwf	?___fladd+1
 12202  1F90  3000               	movlw	0
 12203  1F91  00F1               	movwf	?___fladd
 12204  1F92  0008               	return
 12205  1F93                     l7178:	
 12206  1F93  3001               	movlw	1
 12207  1F94                     u9895:	
 12208  1F94  35F1               	lslf	___fladd@b,f
 12209  1F95  0DF2               	rlf	___fladd@b+1,f
 12210  1F96  0DF3               	rlf	___fladd@b+2,f
 12211  1F97  0DF4               	rlf	___fladd@b+3,f
 12212  1F98  0B89               	decfsz	9,f
 12213  1F99  2F94               	goto	u9895
 12214  1F9A  1BAB               	btfsc	___fladd@grs,7
 12215  1F9B  1471               	bsf	___fladd@b,0
 12216  1F9C  1C2B               	btfss	___fladd@grs,0
 12217  1F9D  2FA0               	goto	l7186
 12218  1F9E  1403               	setc
 12219  1F9F  2FA1               	goto	L11
 12220  1FA0                     l7186:	
 12221  1FA0  1003               	clrc
 12222  1FA1                     L11:	
 12223  1FA1  0DAB               	rlf	___fladd@grs,f
 12224  1FA2  082A               	movf	___fladd@bexp,w
 12225  1FA3  1903               	btfsc	3,2
 12226  1FA4  2FA7               	goto	l7192
 12227  1FA5  3001               	movlw	1
 12228  1FA6  02AA               	subwf	___fladd@bexp,f
 12229  1FA7                     l7192:	
 12230  1FA7  1FF3               	btfss	___fladd@b+2,7
 12231  1FA8  2F93               	goto	l7178
 12232  1FA9                     l7194:	
 12233  1FA9  01A9               	clrf	___fladd@aexp
 12234  1FAA  1FAB               	btfss	___fladd@grs,7
 12235  1FAB  2FB4               	goto	l7204
 12236  1FAC  082B               	movf	___fladd@grs,w
 12237  1FAD  397F               	andlw	127
 12238  1FAE  1903               	btfsc	3,2
 12239  1FAF  1871               	btfsc	___fladd@b,0
 12240  1FB0  2FB2               	goto	l7200
 12241  1FB1  2FB4               	goto	l7204
 12242  1FB2                     l7200:	
 12243  1FB2  01A9               	clrf	___fladd@aexp
 12244  1FB3  0AA9               	incf	___fladd@aexp,f
 12245  1FB4                     l7204:	
 12246  1FB4  0829               	movf	___fladd@aexp,w
 12247  1FB5  1903               	btfsc	3,2
 12248  1FB6  2FE0               	goto	l1219
 12249  1FB7  3001               	movlw	1
 12250  1FB8  07F1               	addwf	___fladd@b,f
 12251  1FB9  3000               	movlw	0
 12252  1FBA  3DF2               	addwfc	___fladd@b+1,f
 12253  1FBB  3000               	movlw	0
 12254  1FBC  3DF3               	addwfc	___fladd@b+2,f
 12255  1FBD  3000               	movlw	0
 12256  1FBE  3DF4               	addwfc	___fladd@b+3,f
 12257  1FBF  1C74               	btfss	___fladd@b+3,0
 12258  1FC0  2FE0               	goto	l1219
 12259  1FC1  0871               	movf	___fladd@b,w
 12260  1FC2  00A0               	movwf	??___fladd
 12261  1FC3  0872               	movf	___fladd@b+1,w
 12262  1FC4  00A1               	movwf	??___fladd+1
 12263  1FC5  0873               	movf	___fladd@b+2,w
 12264  1FC6  00A2               	movwf	??___fladd+2
 12265  1FC7  0874               	movf	___fladd@b+3,w
 12266  1FC8  00A3               	movwf	??___fladd+3
 12267  1FC9  3001               	movlw	1
 12268  1FCA  00A4               	movwf	??___fladd+4
 12269  1FCB                     u9995:	
 12270  1FCB  37A3               	asrf	??___fladd+3,f
 12271  1FCC  0CA2               	rrf	??___fladd+2,f
 12272  1FCD  0CA1               	rrf	??___fladd+1,f
 12273  1FCE  0CA0               	rrf	??___fladd,f
 12274  1FCF  0BA4               	decfsz	??___fladd+4,f
 12275  1FD0  2FCB               	goto	u9995
 12276  1FD1  0823               	movf	??___fladd+3,w
 12277  1FD2  00F4               	movwf	___fladd@b+3
 12278  1FD3  0822               	movf	??___fladd+2,w
 12279  1FD4  00F3               	movwf	___fladd@b+2
 12280  1FD5  0821               	movf	??___fladd+1,w
 12281  1FD6  00F2               	movwf	___fladd@b+1
 12282  1FD7  0820               	movf	??___fladd,w
 12283  1FD8  00F1               	movwf	___fladd@b
 12284  1FD9  0A2A               	incf	___fladd@bexp,w
 12285  1FDA  1903               	btfsc	3,2
 12286  1FDB  2FE0               	goto	l1219
 12287  1FDC  3001               	movlw	1
 12288  1FDD  00A0               	movwf	??___fladd
 12289  1FDE  0820               	movf	??___fladd,w
 12290  1FDF  07AA               	addwf	___fladd@bexp,f
 12291  1FE0                     l1219:	
 12292  1FE0  0A2A               	incf	___fladd@bexp,w
 12293  1FE1  1D03               	btfss	3,2
 12294  1FE2  082A               	movf	___fladd@bexp,w
 12295  1FE3  1D03               	btfss	3,2
 12296  1FE4  2FF0               	goto	l7222
 12297  1FE5  3000               	movlw	0
 12298  1FE6  00F4               	movwf	___fladd@b+3
 12299  1FE7  3000               	movlw	0
 12300  1FE8  00F3               	movwf	___fladd@b+2
 12301  1FE9  3000               	movlw	0
 12302  1FEA  00F2               	movwf	___fladd@b+1
 12303  1FEB  3000               	movlw	0
 12304  1FEC  00F1               	movwf	___fladd@b
 12305  1FED  082A               	movf	___fladd@bexp,w
 12306  1FEE  1903               	btfsc	3,2
 12307  1FEF  01A8               	clrf	___fladd@signs
 12308  1FF0                     l7222:	
 12309  1FF0  1C2A               	btfss	___fladd@bexp,0
 12310  1FF1  2FF4               	goto	l7226
 12311  1FF2  17F3               	bsf	___fladd@b+2,7
 12312  1FF3  2FF8               	goto	l1227
 12313  1FF4                     l7226:	
 12314  1FF4  307F               	movlw	127
 12315  1FF5  00A0               	movwf	??___fladd
 12316  1FF6  0820               	movf	??___fladd,w
 12317  1FF7  05F3               	andwf	___fladd@b+2,f
 12318  1FF8                     l1227:	
 12319  1FF8  362A               	lsrf	___fladd@bexp,w
 12320  1FF9  00A0               	movwf	??___fladd
 12321  1FFA  0820               	movf	??___fladd,w
 12322  1FFB  00F4               	movwf	___fladd@b+3
 12323  1FFC  1FA8               	btfss	___fladd@signs,7
 12324  1FFD  0008               	return
 12325  1FFE  17F4               	bsf	___fladd@b+3,7
 12326  1FFF  0008               	return
 12327  2000                     __end_of___fladd:	
 12328                           
 12329                           	psect	text25
 12330  310A                     __ptext25:	
 12331 ;; *************** function ___flneg *****************
 12332 ;; Defined at:
 12333 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
 12334 ;; Parameters:    Size  Location     Type
 12335 ;;  f1              4    1[COMMON] unsigned char 
 12336 ;; Auto vars:     Size  Location     Type
 12337 ;;		None
 12338 ;; Return value:  Size  Location     Type
 12339 ;;                  4    1[COMMON] unsigned char 
 12340 ;; Registers used:
 12341 ;;		wreg
 12342 ;; Tracked objects:
 12343 ;;		On entry : 0/0
 12344 ;;		On exit  : 0/0
 12345 ;;		Unchanged: 0/0
 12346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12347 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12350 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12351 ;;Total ram usage:        4 bytes
 12352 ;; Hardware stack levels used:    1
 12353 ;; Hardware stack levels required when called:    1
 12354 ;; This function calls:
 12355 ;;		Nothing
 12356 ;; This function is called by:
 12357 ;;		_efgtoa
 12358 ;; This function uses a non-reentrant model
 12359 ;;
 12360                           
 12361                           
 12362                           ;psect for function ___flneg
 12363  310A                     ___flneg:	
 12364                           
 12365                           ;incstack = 0
 12366                           ; Regs used in ___flneg: [wreg]
 12367  310A  0874               	movf	___flneg@f1+3,w
 12368  310B  0473               	iorwf	___flneg@f1+2,w
 12369  310C  0472               	iorwf	___flneg@f1+1,w
 12370  310D  0471               	iorwf	___flneg@f1,w
 12371  310E  1903               	skipnz
 12372  310F  0008               	return
 12373  3110  3080               	movlw	128
 12374  3111  06F4               	xorwf	___flneg@f1+3,f
 12375  3112  0008               	return
 12376  3113                     __end_of___flneg:	
 12377                           
 12378                           	psect	text26
 12379  3484                     __ptext26:	
 12380 ;; *************** function ___fleq *****************
 12381 ;; Defined at:
 12382 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
 12383 ;; Parameters:    Size  Location     Type
 12384 ;;  ff1             4    1[COMMON] unsigned char 
 12385 ;;  ff2             4    5[COMMON] unsigned char 
 12386 ;; Auto vars:     Size  Location     Type
 12387 ;;		None
 12388 ;; Return value:  Size  Location     Type
 12389 ;;		None               void
 12390 ;; Registers used:
 12391 ;;		wreg, status,2, status,0
 12392 ;; Tracked objects:
 12393 ;;		On entry : 0/0
 12394 ;;		On exit  : 0/0
 12395 ;;		Unchanged: 0/0
 12396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12397 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12399 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12400 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12401 ;;Total ram usage:       12 bytes
 12402 ;; Hardware stack levels used:    1
 12403 ;; Hardware stack levels required when called:    1
 12404 ;; This function calls:
 12405 ;;		Nothing
 12406 ;; This function is called by:
 12407 ;;		_efgtoa
 12408 ;; This function uses a non-reentrant model
 12409 ;;
 12410                           
 12411                           
 12412                           ;psect for function ___fleq
 12413  3484                     ___fleq:	
 12414                           
 12415                           ;incstack = 0
 12416                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 12417  3484  3000               	movlw	0
 12418  3485  0571               	andwf	___fleq@ff1,w
 12419  3486  0020               	movlb	0	; select bank0
 12420  3487  00A0               	movwf	??___fleq
 12421  3488  3000               	movlw	0
 12422  3489  0572               	andwf	___fleq@ff1+1,w
 12423  348A  00A1               	movwf	??___fleq+1
 12424  348B  3080               	movlw	128
 12425  348C  0573               	andwf	___fleq@ff1+2,w
 12426  348D  00A2               	movwf	??___fleq+2
 12427  348E  307F               	movlw	127
 12428  348F  0574               	andwf	___fleq@ff1+3,w
 12429  3490  00A3               	movwf	??___fleq+3
 12430  3491  0823               	movf	??___fleq+3,w
 12431  3492  0422               	iorwf	??___fleq+2,w
 12432  3493  0421               	iorwf	??___fleq+1,w
 12433  3494  0420               	iorwf	??___fleq,w
 12434  3495  1D03               	skipz
 12435  3496  2C9F               	goto	l1053
 12436  3497  3000               	movlw	0
 12437  3498  00F4               	movwf	___fleq@ff1+3
 12438  3499  3000               	movlw	0
 12439  349A  00F3               	movwf	___fleq@ff1+2
 12440  349B  3000               	movlw	0
 12441  349C  00F2               	movwf	___fleq@ff1+1
 12442  349D  3000               	movlw	0
 12443  349E  00F1               	movwf	___fleq@ff1
 12444  349F                     l1053:	
 12445  349F  3000               	movlw	0
 12446  34A0  0575               	andwf	___fleq@ff2,w
 12447  34A1  00A0               	movwf	??___fleq
 12448  34A2  3000               	movlw	0
 12449  34A3  0576               	andwf	___fleq@ff2+1,w
 12450  34A4  00A1               	movwf	??___fleq+1
 12451  34A5  3080               	movlw	128
 12452  34A6  0577               	andwf	___fleq@ff2+2,w
 12453  34A7  00A2               	movwf	??___fleq+2
 12454  34A8  307F               	movlw	127
 12455  34A9  0578               	andwf	___fleq@ff2+3,w
 12456  34AA  00A3               	movwf	??___fleq+3
 12457  34AB  0823               	movf	??___fleq+3,w
 12458  34AC  0422               	iorwf	??___fleq+2,w
 12459  34AD  0421               	iorwf	??___fleq+1,w
 12460  34AE  0420               	iorwf	??___fleq,w
 12461  34AF  1D03               	skipz
 12462  34B0  2CB9               	goto	l1054
 12463  34B1  3000               	movlw	0
 12464  34B2  00F8               	movwf	___fleq@ff2+3
 12465  34B3  3000               	movlw	0
 12466  34B4  00F7               	movwf	___fleq@ff2+2
 12467  34B5  3000               	movlw	0
 12468  34B6  00F6               	movwf	___fleq@ff2+1
 12469  34B7  3000               	movlw	0
 12470  34B8  00F5               	movwf	___fleq@ff2
 12471  34B9                     l1054:	
 12472  34B9  0878               	movf	___fleq@ff2+3,w
 12473  34BA  0674               	xorwf	___fleq@ff1+3,w
 12474  34BB  1D03               	skipz
 12475  34BC  2CC7               	goto	u10205
 12476  34BD  0877               	movf	___fleq@ff2+2,w
 12477  34BE  0673               	xorwf	___fleq@ff1+2,w
 12478  34BF  1D03               	skipz
 12479  34C0  2CC7               	goto	u10205
 12480  34C1  0876               	movf	___fleq@ff2+1,w
 12481  34C2  0672               	xorwf	___fleq@ff1+1,w
 12482  34C3  1D03               	skipz
 12483  34C4  2CC7               	goto	u10205
 12484  34C5  0875               	movf	___fleq@ff2,w
 12485  34C6  0671               	xorwf	___fleq@ff1,w
 12486  34C7                     u10205:	
 12487  34C7  1903               	skipnz
 12488  34C8  2CCB               	goto	l7286
 12489  34C9  1003               	clrc
 12490  34CA  0008               	return
 12491  34CB                     l7286:	
 12492  34CB  1403               	setc
 12493  34CC  0008               	return
 12494  34CD                     __end_of___fleq:	
 12495                           
 12496                           	psect	text27
 12497  343F                     __ptext27:	
 12498 ;; *************** function ___awmod *****************
 12499 ;; Defined at:
 12500 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
 12501 ;; Parameters:    Size  Location     Type
 12502 ;;  divisor         2    1[COMMON] int 
 12503 ;;  dividend        2    3[COMMON] int 
 12504 ;; Auto vars:     Size  Location     Type
 12505 ;;  sign            1    7[COMMON] unsigned char 
 12506 ;;  counter         1    6[COMMON] unsigned char 
 12507 ;; Return value:  Size  Location     Type
 12508 ;;                  2    1[COMMON] int 
 12509 ;; Registers used:
 12510 ;;		wreg, status,2, status,0
 12511 ;; Tracked objects:
 12512 ;;		On entry : 0/0
 12513 ;;		On exit  : 0/0
 12514 ;;		Unchanged: 0/0
 12515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12516 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12517 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12518 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12519 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12520 ;;Total ram usage:        7 bytes
 12521 ;; Hardware stack levels used:    1
 12522 ;; Hardware stack levels required when called:    1
 12523 ;; This function calls:
 12524 ;;		Nothing
 12525 ;; This function is called by:
 12526 ;;		_efgtoa
 12527 ;; This function uses a non-reentrant model
 12528 ;;
 12529                           
 12530                           
 12531                           ;psect for function ___awmod
 12532  343F                     ___awmod:	
 12533                           
 12534                           ;incstack = 0
 12535                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 12536  343F  01F7               	clrf	___awmod@sign
 12537  3440  1FF4               	btfss	___awmod@dividend+1,7
 12538  3441  2C49               	goto	l4814
 12539  3442  09F3               	comf	___awmod@dividend,f
 12540  3443  09F4               	comf	___awmod@dividend+1,f
 12541  3444  0AF3               	incf	___awmod@dividend,f
 12542  3445  1903               	skipnz
 12543  3446  0AF4               	incf	___awmod@dividend+1,f
 12544  3447  01F7               	clrf	___awmod@sign
 12545  3448  0AF7               	incf	___awmod@sign,f
 12546  3449                     l4814:	
 12547  3449  1FF2               	btfss	___awmod@divisor+1,7
 12548  344A  2C50               	goto	l4818
 12549  344B  09F1               	comf	___awmod@divisor,f
 12550  344C  09F2               	comf	___awmod@divisor+1,f
 12551  344D  0AF1               	incf	___awmod@divisor,f
 12552  344E  1903               	skipnz
 12553  344F  0AF2               	incf	___awmod@divisor+1,f
 12554  3450                     l4818:	
 12555  3450  0871               	movf	___awmod@divisor,w
 12556  3451  0472               	iorwf	___awmod@divisor+1,w
 12557  3452  1903               	btfsc	3,2
 12558  3453  2C77               	goto	l4836
 12559  3454  01F6               	clrf	___awmod@counter
 12560  3455  0AF6               	incf	___awmod@counter,f
 12561  3456                     l4826:	
 12562  3456  1BF2               	btfsc	___awmod@divisor+1,7
 12563  3457  2C62               	goto	l4828
 12564  3458  3001               	movlw	1
 12565  3459                     u6125:	
 12566  3459  35F1               	lslf	___awmod@divisor,f
 12567  345A  0DF2               	rlf	___awmod@divisor+1,f
 12568  345B  0B89               	decfsz	9,f
 12569  345C  2C59               	goto	u6125
 12570  345D  3001               	movlw	1
 12571  345E  00F5               	movwf	??___awmod
 12572  345F  0875               	movf	??___awmod,w
 12573  3460  07F6               	addwf	___awmod@counter,f
 12574  3461  2C56               	goto	l4826
 12575  3462                     l4828:	
 12576  3462  0872               	movf	___awmod@divisor+1,w
 12577  3463  0274               	subwf	___awmod@dividend+1,w
 12578  3464  1D03               	skipz
 12579  3465  2C68               	goto	u6145
 12580  3466  0871               	movf	___awmod@divisor,w
 12581  3467  0273               	subwf	___awmod@dividend,w
 12582  3468                     u6145:	
 12583  3468  1C03               	skipc
 12584  3469  2C6E               	goto	l4832
 12585  346A  0871               	movf	___awmod@divisor,w
 12586  346B  02F3               	subwf	___awmod@dividend,f
 12587  346C  0872               	movf	___awmod@divisor+1,w
 12588  346D  3BF4               	subwfb	___awmod@dividend+1,f
 12589  346E                     l4832:	
 12590  346E  3001               	movlw	1
 12591  346F                     u6155:	
 12592  346F  36F2               	lsrf	___awmod@divisor+1,f
 12593  3470  0CF1               	rrf	___awmod@divisor,f
 12594  3471  0B89               	decfsz	9,f
 12595  3472  2C6F               	goto	u6155
 12596  3473  3001               	movlw	1
 12597  3474  02F6               	subwf	___awmod@counter,f
 12598  3475  1D03               	btfss	3,2
 12599  3476  2C62               	goto	l4828
 12600  3477                     l4836:	
 12601  3477  0877               	movf	___awmod@sign,w
 12602  3478  1903               	btfsc	3,2
 12603  3479  2C7F               	goto	l4840
 12604  347A  09F3               	comf	___awmod@dividend,f
 12605  347B  09F4               	comf	___awmod@dividend+1,f
 12606  347C  0AF3               	incf	___awmod@dividend,f
 12607  347D  1903               	skipnz
 12608  347E  0AF4               	incf	___awmod@dividend+1,f
 12609  347F                     l4840:	
 12610  347F  0874               	movf	___awmod@dividend+1,w
 12611  3480  00F2               	movwf	?___awmod+1
 12612  3481  0873               	movf	___awmod@dividend,w
 12613  3482  00F1               	movwf	?___awmod
 12614  3483  0008               	return
 12615  3484                     __end_of___awmod:	
 12616                           
 12617                           	psect	text28
 12618  35BE                     __ptext28:	
 12619 ;; *************** function ___awdiv *****************
 12620 ;; Defined at:
 12621 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 12622 ;; Parameters:    Size  Location     Type
 12623 ;;  divisor         2    1[COMMON] int 
 12624 ;;  dividend        2    3[COMMON] int 
 12625 ;; Auto vars:     Size  Location     Type
 12626 ;;  quotient        2    8[COMMON] int 
 12627 ;;  sign            1    7[COMMON] unsigned char 
 12628 ;;  counter         1    6[COMMON] unsigned char 
 12629 ;; Return value:  Size  Location     Type
 12630 ;;                  2    1[COMMON] int 
 12631 ;; Registers used:
 12632 ;;		wreg, status,2, status,0
 12633 ;; Tracked objects:
 12634 ;;		On entry : 0/0
 12635 ;;		On exit  : 0/0
 12636 ;;		Unchanged: 0/0
 12637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12638 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12639 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12640 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12641 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12642 ;;Total ram usage:        9 bytes
 12643 ;; Hardware stack levels used:    1
 12644 ;; Hardware stack levels required when called:    1
 12645 ;; This function calls:
 12646 ;;		Nothing
 12647 ;; This function is called by:
 12648 ;;		_efgtoa
 12649 ;; This function uses a non-reentrant model
 12650 ;;
 12651                           
 12652                           
 12653                           ;psect for function ___awdiv
 12654  35BE                     ___awdiv:	
 12655                           
 12656                           ;incstack = 0
 12657                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 12658  35BE  01F7               	clrf	___awdiv@sign
 12659  35BF  1FF2               	btfss	___awdiv@divisor+1,7
 12660  35C0  2DC8               	goto	l4770
 12661  35C1  09F1               	comf	___awdiv@divisor,f
 12662  35C2  09F2               	comf	___awdiv@divisor+1,f
 12663  35C3  0AF1               	incf	___awdiv@divisor,f
 12664  35C4  1903               	skipnz
 12665  35C5  0AF2               	incf	___awdiv@divisor+1,f
 12666  35C6  01F7               	clrf	___awdiv@sign
 12667  35C7  0AF7               	incf	___awdiv@sign,f
 12668  35C8                     l4770:	
 12669  35C8  1FF4               	btfss	___awdiv@dividend+1,7
 12670  35C9  2DD3               	goto	l4776
 12671  35CA  09F3               	comf	___awdiv@dividend,f
 12672  35CB  09F4               	comf	___awdiv@dividend+1,f
 12673  35CC  0AF3               	incf	___awdiv@dividend,f
 12674  35CD  1903               	skipnz
 12675  35CE  0AF4               	incf	___awdiv@dividend+1,f
 12676  35CF  3001               	movlw	1
 12677  35D0  00F5               	movwf	??___awdiv
 12678  35D1  0875               	movf	??___awdiv,w
 12679  35D2  06F7               	xorwf	___awdiv@sign,f
 12680  35D3                     l4776:	
 12681  35D3  01F8               	clrf	___awdiv@quotient
 12682  35D4  01F9               	clrf	___awdiv@quotient+1
 12683  35D5  0871               	movf	___awdiv@divisor,w
 12684  35D6  0472               	iorwf	___awdiv@divisor+1,w
 12685  35D7  1903               	btfsc	3,2
 12686  35D8  2E02               	goto	l4798
 12687  35D9  01F6               	clrf	___awdiv@counter
 12688  35DA  0AF6               	incf	___awdiv@counter,f
 12689  35DB                     l4786:	
 12690  35DB  1BF2               	btfsc	___awdiv@divisor+1,7
 12691  35DC  2DE7               	goto	l4788
 12692  35DD  3001               	movlw	1
 12693  35DE                     u6025:	
 12694  35DE  35F1               	lslf	___awdiv@divisor,f
 12695  35DF  0DF2               	rlf	___awdiv@divisor+1,f
 12696  35E0  0B89               	decfsz	9,f
 12697  35E1  2DDE               	goto	u6025
 12698  35E2  3001               	movlw	1
 12699  35E3  00F5               	movwf	??___awdiv
 12700  35E4  0875               	movf	??___awdiv,w
 12701  35E5  07F6               	addwf	___awdiv@counter,f
 12702  35E6  2DDB               	goto	l4786
 12703  35E7                     l4788:	
 12704  35E7  3001               	movlw	1
 12705  35E8                     u6045:	
 12706  35E8  35F8               	lslf	___awdiv@quotient,f
 12707  35E9  0DF9               	rlf	___awdiv@quotient+1,f
 12708  35EA  0B89               	decfsz	9,f
 12709  35EB  2DE8               	goto	u6045
 12710  35EC  0872               	movf	___awdiv@divisor+1,w
 12711  35ED  0274               	subwf	___awdiv@dividend+1,w
 12712  35EE  1D03               	skipz
 12713  35EF  2DF2               	goto	u6055
 12714  35F0  0871               	movf	___awdiv@divisor,w
 12715  35F1  0273               	subwf	___awdiv@dividend,w
 12716  35F2                     u6055:	
 12717  35F2  1C03               	skipc
 12718  35F3  2DF9               	goto	l4794
 12719  35F4  0871               	movf	___awdiv@divisor,w
 12720  35F5  02F3               	subwf	___awdiv@dividend,f
 12721  35F6  0872               	movf	___awdiv@divisor+1,w
 12722  35F7  3BF4               	subwfb	___awdiv@dividend+1,f
 12723  35F8  1478               	bsf	___awdiv@quotient,0
 12724  35F9                     l4794:	
 12725  35F9  3001               	movlw	1
 12726  35FA                     u6065:	
 12727  35FA  36F2               	lsrf	___awdiv@divisor+1,f
 12728  35FB  0CF1               	rrf	___awdiv@divisor,f
 12729  35FC  0B89               	decfsz	9,f
 12730  35FD  2DFA               	goto	u6065
 12731  35FE  3001               	movlw	1
 12732  35FF  02F6               	subwf	___awdiv@counter,f
 12733  3600  1D03               	btfss	3,2
 12734  3601  2DE7               	goto	l4788
 12735  3602                     l4798:	
 12736  3602  0877               	movf	___awdiv@sign,w
 12737  3603  1903               	btfsc	3,2
 12738  3604  2E0A               	goto	l4802
 12739  3605  09F8               	comf	___awdiv@quotient,f
 12740  3606  09F9               	comf	___awdiv@quotient+1,f
 12741  3607  0AF8               	incf	___awdiv@quotient,f
 12742  3608  1903               	skipnz
 12743  3609  0AF9               	incf	___awdiv@quotient+1,f
 12744  360A                     l4802:	
 12745  360A  0879               	movf	___awdiv@quotient+1,w
 12746  360B  00F2               	movwf	?___awdiv+1
 12747  360C  0878               	movf	___awdiv@quotient,w
 12748  360D  00F1               	movwf	?___awdiv
 12749  360E  0008               	return
 12750  360F                     __end_of___awdiv:	
 12751                           
 12752                           	psect	text29
 12753  1B72                     __ptext29:	
 12754 ;; *************** function _dtoa *****************
 12755 ;; Defined at:
 12756 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 12757 ;; Parameters:    Size  Location     Type
 12758 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
 12759 ;;		 -> vsnprintf@f(6), 
 12760 ;;  d               8   18[BANK0 ] long long 
 12761 ;; Auto vars:     Size  Location     Type
 12762 ;;  n               8   37[BANK0 ] long long 
 12763 ;;  i               2   45[BANK0 ] int 
 12764 ;;  s               2   35[BANK0 ] int 
 12765 ;;  w               2   33[BANK0 ] int 
 12766 ;;  p               2   31[BANK0 ] int 
 12767 ;; Return value:  Size  Location     Type
 12768 ;;                  2   16[BANK0 ] int 
 12769 ;; Registers used:
 12770 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12771 ;; Tracked objects:
 12772 ;;		On entry : 0/0
 12773 ;;		On exit  : 0/0
 12774 ;;		Unchanged: 0/0
 12775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12776 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12777 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12778 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12779 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12780 ;;Total ram usage:       31 bytes
 12781 ;; Hardware stack levels used:    1
 12782 ;; Hardware stack levels required when called:    5
 12783 ;; This function calls:
 12784 ;;		___aodiv
 12785 ;;		___aomod
 12786 ;;		_abs
 12787 ;;		_pad
 12788 ;; This function is called by:
 12789 ;;		_vfpfcnvrt
 12790 ;; This function uses a non-reentrant model
 12791 ;;
 12792                           
 12793                           
 12794                           ;psect for function _dtoa
 12795  1B72                     _dtoa:	
 12796                           
 12797                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
 12798                           
 12799                           ;incstack = 0
 12800                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12801  1B72  0020               	movlb	0	; select bank0
 12802  1B73  0832               	movf	dtoa@d,w
 12803  1B74  00C5               	movwf	dtoa@n
 12804  1B75  0833               	movf	dtoa@d+1,w
 12805  1B76  00C6               	movwf	dtoa@n+1
 12806  1B77  0834               	movf	dtoa@d+2,w
 12807  1B78  00C7               	movwf	dtoa@n+2
 12808  1B79  0835               	movf	dtoa@d+3,w
 12809  1B7A  00C8               	movwf	dtoa@n+3
 12810  1B7B  0836               	movf	dtoa@d+4,w
 12811  1B7C  00C9               	movwf	dtoa@n+4
 12812  1B7D  0837               	movf	dtoa@d+5,w
 12813  1B7E  00CA               	movwf	dtoa@n+5
 12814  1B7F  0838               	movf	dtoa@d+6,w
 12815  1B80  00CB               	movwf	dtoa@n+6
 12816  1B81  0839               	movf	dtoa@d+7,w
 12817  1B82  00CC               	movwf	dtoa@n+7
 12818                           
 12819                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 12820  1B83  3045               	movlw	low dtoa@n
 12821  1B84  0086               	movwf	6
 12822  1B85  3000               	movlw	high dtoa@n
 12823  1B86  0087               	movwf	7
 12824  1B87  3F47               	moviw [7]fsr1
 12825  1B88  00BA               	movwf	??_dtoa
 12826  1B89  1FBA               	btfss	??_dtoa,7
 12827  1B8A  2B8D               	goto	u10220
 12828  1B8B  3001               	movlw	1
 12829  1B8C  2B8E               	goto	u10230
 12830  1B8D                     u10220:	
 12831  1B8D  3000               	movlw	0
 12832  1B8E                     u10230:	
 12833  1B8E  0020               	movlb	0	; select bank0
 12834  1B8F  00BB               	movwf	??_dtoa+1
 12835  1B90  01BC               	clrf	??_dtoa+2
 12836  1B91  083B               	movf	??_dtoa+1,w
 12837  1B92  00C3               	movwf	dtoa@s
 12838  1B93  083C               	movf	??_dtoa+2,w
 12839  1B94  00C4               	movwf	dtoa@s+1
 12840                           
 12841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 12842  1B95  0843               	movf	dtoa@s,w
 12843  1B96  0444               	iorwf	dtoa@s+1,w
 12844  1B97  1903               	btfsc	3,2
 12845  1B98  2BB7               	goto	l581
 12846                           
 12847                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 12848  1B99  09C5               	comf	dtoa@n,f
 12849  1B9A  09C6               	comf	dtoa@n+1,f
 12850  1B9B  09C7               	comf	dtoa@n+2,f
 12851  1B9C  09C8               	comf	dtoa@n+3,f
 12852  1B9D  09C9               	comf	dtoa@n+4,f
 12853  1B9E  09CA               	comf	dtoa@n+5,f
 12854  1B9F  09CB               	comf	dtoa@n+6,f
 12855  1BA0  09CC               	comf	dtoa@n+7,f
 12856  1BA1  0AC5               	incf	dtoa@n,f
 12857  1BA2  1D03               	skipz
 12858  1BA3  2BB7               	goto	l581
 12859  1BA4  0AC6               	incf	dtoa@n+1,f
 12860  1BA5  1D03               	skipz
 12861  1BA6  2BB7               	goto	l581
 12862  1BA7  0AC7               	incf	dtoa@n+2,f
 12863  1BA8  1D03               	skipz
 12864  1BA9  2BB7               	goto	l581
 12865  1BAA  0AC8               	incf	dtoa@n+3,f
 12866  1BAB  1D03               	skipz
 12867  1BAC  2BB7               	goto	l581
 12868  1BAD  0AC9               	incf	dtoa@n+4,f
 12869  1BAE  1D03               	skipz
 12870  1BAF  2BB7               	goto	l581
 12871  1BB0  0ACA               	incf	dtoa@n+5,f
 12872  1BB1  1D03               	skipz
 12873  1BB2  2BB7               	goto	l581
 12874  1BB3  0ACB               	incf	dtoa@n+6,f
 12875  1BB4  1D03               	skipz
 12876  1BB5  2BB7               	goto	l581
 12877  1BB6  0ACC               	incf	dtoa@n+7,f
 12878  1BB7                     l581:	
 12879                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
 12880                           
 12881                           
 12882                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 12883  1BB7  0023               	movlb	3	; select bank3
 12884  1BB8  1BC1               	btfsc	(_prec+1)^(0+384),7
 12885  1BB9  2BBE               	goto	l582
 12886                           
 12887                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 12888  1BBA  30FD               	movlw	253
 12889  1BBB  05C2               	andwf	_flags^(0+384),f
 12890  1BBC  30FF               	movlw	255
 12891  1BBD  05C3               	andwf	(_flags+1)^(0+384),f
 12892  1BBE                     l582:	
 12893                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
 12894                           
 12895                           
 12896                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 12897  1BBE  0841               	movf	(_prec+1)^(0+384),w
 12898  1BBF  3A80               	xorlw	128
 12899  1BC0  0020               	movlb	0	; select bank0
 12900  1BC1  00BA               	movwf	??_dtoa
 12901  1BC2  3080               	movlw	128
 12902  1BC3  023A               	subwf	??_dtoa,w
 12903  1BC4  1D03               	skipz
 12904  1BC5  2BC9               	goto	u10275
 12905  1BC6  3001               	movlw	1
 12906  1BC7  0023               	movlb	3	; select bank3
 12907  1BC8  0240               	subwf	_prec^(0+384),w
 12908  1BC9                     u10275:	
 12909  1BC9  1803               	skipnc
 12910  1BCA  2BD1               	goto	l7322
 12911  1BCB  3001               	movlw	1
 12912  1BCC  0020               	movlb	0	; select bank0
 12913  1BCD  00BF               	movwf	dtoa@p
 12914  1BCE  3000               	movlw	0
 12915  1BCF  00C0               	movwf	dtoa@p+1
 12916  1BD0  2BD9               	goto	l586
 12917  1BD1                     l7322:	
 12918  1BD1  0023               	movlb	3	; select bank3
 12919  1BD2  0841               	movf	(_prec+1)^(0+384),w
 12920  1BD3  0020               	movlb	0	; select bank0
 12921  1BD4  00C0               	movwf	dtoa@p+1
 12922  1BD5  0023               	movlb	3	; select bank3
 12923  1BD6  0840               	movf	_prec^(0+384),w
 12924  1BD7  0020               	movlb	0	; select bank0
 12925  1BD8  00BF               	movwf	dtoa@p
 12926  1BD9                     l586:	
 12927                           
 12928                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 12929  1BD9  0023               	movlb	3	; select bank3
 12930  1BDA  083F               	movf	(_width+1)^(0+384),w
 12931  1BDB  0020               	movlb	0	; select bank0
 12932  1BDC  00C2               	movwf	dtoa@w+1
 12933  1BDD  0023               	movlb	3	; select bank3
 12934  1BDE  083E               	movf	_width^(0+384),w
 12935  1BDF  0020               	movlb	0	; select bank0
 12936  1BE0  00C1               	movwf	dtoa@w
 12937                           
 12938                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 12939  1BE1  0843               	movf	dtoa@s,w
 12940  1BE2  0444               	iorwf	dtoa@s+1,w
 12941  1BE3  1D03               	btfss	3,2
 12942  1BE4  2BE8               	goto	l7328
 12943  1BE5  0023               	movlb	3	; select bank3
 12944  1BE6  1D42               	btfss	_flags^(0+384),2
 12945  1BE7  2BED               	goto	l587
 12946  1BE8                     l7328:	
 12947                           
 12948                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 12949  1BE8  30FF               	movlw	255
 12950  1BE9  0020               	movlb	0	; select bank0
 12951  1BEA  07C1               	addwf	dtoa@w,f
 12952  1BEB  30FF               	movlw	255
 12953  1BEC  3DC2               	addwfc	dtoa@w+1,f
 12954  1BED                     l587:	
 12955                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
 12956                           
 12957                           
 12958                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 12959  1BED  304F               	movlw	79
 12960  1BEE  0020               	movlb	0	; select bank0
 12961  1BEF  00CD               	movwf	dtoa@i
 12962  1BF0  3000               	movlw	0
 12963  1BF1  00CE               	movwf	dtoa@i+1
 12964                           
 12965                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 12966  1BF2  0024               	movlb	4	; select bank4
 12967  1BF3  01EF               	clrf	(_dbuf^(0+512)+79)
 12968                           
 12969                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12970  1BF4  2C83               	goto	l590
 12971  1BF5                     l7342:	
 12972  1BF5  0020               	movlb	0	; select bank0
 12973  1BF6  0845               	movf	dtoa@n,w
 12974  1BF7  0446               	iorwf	dtoa@n+1,w
 12975  1BF8  0447               	iorwf	dtoa@n+2,w
 12976  1BF9  0448               	iorwf	dtoa@n+3,w
 12977  1BFA  0449               	iorwf	dtoa@n+4,w
 12978  1BFB  044A               	iorwf	dtoa@n+5,w
 12979  1BFC  044B               	iorwf	dtoa@n+6,w
 12980  1BFD  044C               	iorwf	dtoa@n+7,w
 12981  1BFE  1D03               	skipz
 12982  1BFF  2C1A               	goto	l7332
 12983  1C00  0840               	movf	dtoa@p+1,w
 12984  1C01  3A80               	xorlw	128
 12985  1C02  00BA               	movwf	??_dtoa
 12986  1C03  3080               	movlw	128
 12987  1C04  023A               	subwf	??_dtoa,w
 12988  1C05  1D03               	skipz
 12989  1C06  2C09               	goto	u10325
 12990  1C07  3001               	movlw	1
 12991  1C08  023F               	subwf	dtoa@p,w
 12992  1C09                     u10325:	
 12993  1C09  1803               	skipnc
 12994  1C0A  2C1A               	goto	l7332
 12995  1C0B  0020               	movlb	0	; select bank0
 12996  1C0C  0842               	movf	dtoa@w+1,w
 12997  1C0D  3A80               	xorlw	128
 12998  1C0E  00BA               	movwf	??_dtoa
 12999  1C0F  3080               	movlw	128
 13000  1C10  023A               	subwf	??_dtoa,w
 13001  1C11  1D03               	skipz
 13002  1C12  2C15               	goto	u10335
 13003  1C13  3001               	movlw	1
 13004  1C14  0241               	subwf	dtoa@w,w
 13005  1C15                     u10335:	
 13006  1C15  1C03               	skipc
 13007  1C16  2C8F               	goto	l7350
 13008  1C17  0023               	movlb	3	; select bank3
 13009  1C18  1CC2               	btfss	_flags^(0+384),1
 13010  1C19  2C8F               	goto	l7350
 13011  1C1A                     l7332:	
 13012                           
 13013                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 13014  1C1A  30FF               	movlw	255
 13015  1C1B  0020               	movlb	0	; select bank0
 13016  1C1C  07CD               	addwf	dtoa@i,f
 13017  1C1D  30FF               	movlw	255
 13018  1C1E  3DCE               	addwfc	dtoa@i+1,f
 13019                           
 13020                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 13021  1C1F  300A               	movlw	10
 13022  1C20  00A0               	movwf	___aomod@divisor
 13023  1C21  01A1               	clrf	___aomod@divisor+1
 13024  1C22  01A2               	clrf	___aomod@divisor+2
 13025  1C23  01A3               	clrf	___aomod@divisor+3
 13026  1C24  01A4               	clrf	___aomod@divisor+4
 13027  1C25  01A5               	clrf	___aomod@divisor+5
 13028  1C26  01A6               	clrf	___aomod@divisor+6
 13029  1C27  01A7               	clrf	___aomod@divisor+7
 13030  1C28  0845               	movf	dtoa@n,w
 13031  1C29  00A8               	movwf	___aomod@dividend
 13032  1C2A  0846               	movf	dtoa@n+1,w
 13033  1C2B  00A9               	movwf	___aomod@dividend+1
 13034  1C2C  0847               	movf	dtoa@n+2,w
 13035  1C2D  00AA               	movwf	___aomod@dividend+2
 13036  1C2E  0848               	movf	dtoa@n+3,w
 13037  1C2F  00AB               	movwf	___aomod@dividend+3
 13038  1C30  0849               	movf	dtoa@n+4,w
 13039  1C31  00AC               	movwf	___aomod@dividend+4
 13040  1C32  084A               	movf	dtoa@n+5,w
 13041  1C33  00AD               	movwf	___aomod@dividend+5
 13042  1C34  084B               	movf	dtoa@n+6,w
 13043  1C35  00AE               	movwf	___aomod@dividend+6
 13044  1C36  084C               	movf	dtoa@n+7,w
 13045  1C37  00AF               	movwf	___aomod@dividend+7
 13046  1C38  31A3  2379  319B   	fcall	___aomod
 13047  1C3B  0020               	movlb	0	; select bank0
 13048  1C3C  0821               	movf	?___aomod+1,w
 13049  1C3D  00F5               	movwf	abs@a+1
 13050  1C3E  0820               	movf	?___aomod,w
 13051  1C3F  00F4               	movwf	abs@a
 13052  1C40  31B1  217C  319B   	fcall	_abs
 13053  1C43  0874               	movf	?_abs,w
 13054  1C44  3E30               	addlw	48
 13055  1C45  0020               	movlb	0	; select bank0
 13056  1C46  00BA               	movwf	??_dtoa
 13057  1C47  084D               	movf	dtoa@i,w
 13058  1C48  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 13059  1C49  0086               	movwf	6
 13060  1C4A  3002               	movlw	2	; select bank4/5
 13061  1C4B  0087               	movwf	7
 13062  1C4C  083A               	movf	??_dtoa,w
 13063  1C4D  0081               	movwf	1
 13064                           
 13065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 13066  1C4E  30FF               	movlw	255
 13067  1C4F  07BF               	addwf	dtoa@p,f
 13068  1C50  30FF               	movlw	255
 13069  1C51  3DC0               	addwfc	dtoa@p+1,f
 13070                           
 13071                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 13072  1C52  30FF               	movlw	255
 13073  1C53  07C1               	addwf	dtoa@w,f
 13074  1C54  30FF               	movlw	255
 13075  1C55  3DC2               	addwfc	dtoa@w+1,f
 13076                           
 13077                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 13078  1C56  300A               	movlw	10
 13079  1C57  00A0               	movwf	___aodiv@divisor
 13080  1C58  01A1               	clrf	___aodiv@divisor+1
 13081  1C59  01A2               	clrf	___aodiv@divisor+2
 13082  1C5A  01A3               	clrf	___aodiv@divisor+3
 13083  1C5B  01A4               	clrf	___aodiv@divisor+4
 13084  1C5C  01A5               	clrf	___aodiv@divisor+5
 13085  1C5D  01A6               	clrf	___aodiv@divisor+6
 13086  1C5E  01A7               	clrf	___aodiv@divisor+7
 13087  1C5F  0845               	movf	dtoa@n,w
 13088  1C60  00A8               	movwf	___aodiv@dividend
 13089  1C61  0846               	movf	dtoa@n+1,w
 13090  1C62  00A9               	movwf	___aodiv@dividend+1
 13091  1C63  0847               	movf	dtoa@n+2,w
 13092  1C64  00AA               	movwf	___aodiv@dividend+2
 13093  1C65  0848               	movf	dtoa@n+3,w
 13094  1C66  00AB               	movwf	___aodiv@dividend+3
 13095  1C67  0849               	movf	dtoa@n+4,w
 13096  1C68  00AC               	movwf	___aodiv@dividend+4
 13097  1C69  084A               	movf	dtoa@n+5,w
 13098  1C6A  00AD               	movwf	___aodiv@dividend+5
 13099  1C6B  084B               	movf	dtoa@n+6,w
 13100  1C6C  00AE               	movwf	___aodiv@dividend+6
 13101  1C6D  084C               	movf	dtoa@n+7,w
 13102  1C6E  00AF               	movwf	___aodiv@dividend+7
 13103  1C6F  31A7  270D  319B   	fcall	___aodiv
 13104  1C72  0020               	movlb	0	; select bank0
 13105  1C73  0820               	movf	?___aodiv,w
 13106  1C74  00C5               	movwf	dtoa@n
 13107  1C75  0821               	movf	?___aodiv+1,w
 13108  1C76  00C6               	movwf	dtoa@n+1
 13109  1C77  0822               	movf	?___aodiv+2,w
 13110  1C78  00C7               	movwf	dtoa@n+2
 13111  1C79  0823               	movf	?___aodiv+3,w
 13112  1C7A  00C8               	movwf	dtoa@n+3
 13113  1C7B  0824               	movf	?___aodiv+4,w
 13114  1C7C  00C9               	movwf	dtoa@n+4
 13115  1C7D  0825               	movf	?___aodiv+5,w
 13116  1C7E  00CA               	movwf	dtoa@n+5
 13117  1C7F  0826               	movf	?___aodiv+6,w
 13118  1C80  00CB               	movwf	dtoa@n+6
 13119  1C81  0827               	movf	?___aodiv+7,w
 13120  1C82  00CC               	movwf	dtoa@n+7
 13121  1C83                     l590:	
 13122                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
 13123                           
 13124                           
 13125                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13126  1C83  0020               	movlb	0	; select bank0
 13127  1C84  084E               	movf	dtoa@i+1,w
 13128  1C85  3A80               	xorlw	128
 13129  1C86  00BA               	movwf	??_dtoa
 13130  1C87  3080               	movlw	128
 13131  1C88  023A               	subwf	??_dtoa,w
 13132  1C89  1D03               	skipz
 13133  1C8A  2C8D               	goto	u10305
 13134  1C8B  3001               	movlw	1
 13135  1C8C  024D               	subwf	dtoa@i,w
 13136  1C8D                     u10305:	
 13137  1C8D  1803               	btfsc	3,0
 13138  1C8E  2BF5               	goto	l7342
 13139  1C8F                     l7350:	
 13140                           
 13141                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 13142  1C8F  0020               	movlb	0	; select bank0
 13143  1C90  0843               	movf	dtoa@s,w
 13144  1C91  0444               	iorwf	dtoa@s+1,w
 13145  1C92  1D03               	btfss	3,2
 13146  1C93  2C97               	goto	l7354
 13147  1C94  0023               	movlb	3	; select bank3
 13148  1C95  1D42               	btfss	_flags^(0+384),2
 13149  1C96  2CAF               	goto	l7364
 13150  1C97                     l7354:	
 13151                           
 13152                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 13153  1C97  30FF               	movlw	255
 13154  1C98  0020               	movlb	0	; select bank0
 13155  1C99  07CD               	addwf	dtoa@i,f
 13156  1C9A  30FF               	movlw	255
 13157  1C9B  3DCE               	addwfc	dtoa@i+1,f
 13158                           
 13159                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 13160  1C9C  0843               	movf	dtoa@s,w
 13161  1C9D  0444               	iorwf	dtoa@s+1,w
 13162  1C9E  1D03               	btfss	3,2
 13163  1C9F  2CA2               	goto	l7360
 13164  1CA0  302B               	movlw	43
 13165  1CA1  2CA3               	goto	L12
 13166  1CA2                     l7360:	
 13167  1CA2  302D               	movlw	45
 13168  1CA3                     L12:	
 13169  1CA3  00BD               	movwf	_dtoa$1077
 13170  1CA4  3000               	movlw	0
 13171  1CA5  00BE               	movwf	_dtoa$1077+1
 13172  1CA6  083D               	movf	_dtoa$1077,w
 13173  1CA7  00BA               	movwf	??_dtoa
 13174  1CA8  084D               	movf	dtoa@i,w
 13175  1CA9  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 13176  1CAA  0086               	movwf	6
 13177  1CAB  3002               	movlw	2	; select bank4/5
 13178  1CAC  0087               	movwf	7
 13179  1CAD  083A               	movf	??_dtoa,w
 13180  1CAE  0081               	movwf	1
 13181  1CAF                     l7364:	
 13182                           
 13183                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 13184  1CAF  0020               	movlb	0	; select bank0
 13185  1CB0  0831               	movf	dtoa@fp+1,w
 13186  1CB1  00A7               	movwf	pad@fp+1
 13187  1CB2  0830               	movf	dtoa@fp,w
 13188  1CB3  00A6               	movwf	pad@fp
 13189  1CB4  084D               	movf	dtoa@i,w
 13190  1CB5  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 13191  1CB6  00BA               	movwf	??_dtoa
 13192  1CB7  083A               	movf	??_dtoa,w
 13193  1CB8  00A8               	movwf	pad@buf
 13194  1CB9  0842               	movf	dtoa@w+1,w
 13195  1CBA  00AA               	movwf	pad@p+1
 13196  1CBB  0841               	movf	dtoa@w,w
 13197  1CBC  00A9               	movwf	pad@p
 13198  1CBD  31B5  256D         	fcall	_pad
 13199  1CBF  0020               	movlb	0	; select bank0
 13200  1CC0  0827               	movf	?_pad+1,w
 13201  1CC1  00B1               	movwf	?_dtoa+1
 13202  1CC2  0826               	movf	?_pad,w
 13203  1CC3  00B0               	movwf	?_dtoa
 13204  1CC4  0008               	return
 13205  1CC5                     __end_of_dtoa:	
 13206                           
 13207                           	psect	text30
 13208  317C                     __ptext30:	
 13209 ;; *************** function _abs *****************
 13210 ;; Defined at:
 13211 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 13212 ;; Parameters:    Size  Location     Type
 13213 ;;  a               2    4[COMMON] int 
 13214 ;; Auto vars:     Size  Location     Type
 13215 ;;		None
 13216 ;; Return value:  Size  Location     Type
 13217 ;;                  2    4[COMMON] int 
 13218 ;; Registers used:
 13219 ;;		wreg, status,2, status,0
 13220 ;; Tracked objects:
 13221 ;;		On entry : 0/0
 13222 ;;		On exit  : 0/0
 13223 ;;		Unchanged: 0/0
 13224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13225 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13227 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13228 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13229 ;;Total ram usage:        4 bytes
 13230 ;; Hardware stack levels used:    1
 13231 ;; Hardware stack levels required when called:    1
 13232 ;; This function calls:
 13233 ;;		Nothing
 13234 ;; This function is called by:
 13235 ;;		_dtoa
 13236 ;; This function uses a non-reentrant model
 13237 ;;
 13238                           
 13239                           
 13240                           ;psect for function _abs
 13241  317C                     _abs:	
 13242                           
 13243                           ;incstack = 0
 13244                           ; Regs used in _abs: [wreg+status,2+status,0]
 13245  317C  0875               	movf	abs@a+1,w
 13246  317D  3A80               	xorlw	128
 13247  317E  00F6               	movwf	??_abs
 13248  317F  3080               	movlw	128
 13249  3180  0276               	subwf	??_abs,w
 13250  3181  1D03               	skipz
 13251  3182  2985               	goto	u5435
 13252  3183  3001               	movlw	1
 13253  3184  0274               	subwf	abs@a,w
 13254  3185                     u5435:	
 13255  3185  1803               	skipnc
 13256  3186  0008               	return
 13257  3187  0974               	comf	abs@a,w
 13258  3188  00F6               	movwf	??_abs
 13259  3189  0975               	comf	abs@a+1,w
 13260  318A  00F7               	movwf	??_abs+1
 13261  318B  0AF6               	incf	??_abs,f
 13262  318C  1903               	skipnz
 13263  318D  0AF7               	incf	??_abs+1,f
 13264  318E  0876               	movf	??_abs,w
 13265  318F  00F4               	movwf	?_abs
 13266  3190  0877               	movf	??_abs+1,w
 13267  3191  00F5               	movwf	?_abs+1
 13268  3192  0008               	return
 13269  3193                     __end_of_abs:	
 13270                           
 13271                           	psect	text31
 13272  2379                     __ptext31:	
 13273 ;; *************** function ___aomod *****************
 13274 ;; Defined at:
 13275 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 13276 ;; Parameters:    Size  Location     Type
 13277 ;;  divisor         8    0[BANK0 ] long long 
 13278 ;;  dividend        8    8[BANK0 ] long long 
 13279 ;; Auto vars:     Size  Location     Type
 13280 ;;  sign            1    3[COMMON] unsigned char 
 13281 ;;  counter         1    2[COMMON] unsigned char 
 13282 ;; Return value:  Size  Location     Type
 13283 ;;                  8    0[BANK0 ] long long 
 13284 ;; Registers used:
 13285 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13286 ;; Tracked objects:
 13287 ;;		On entry : 0/0
 13288 ;;		On exit  : 0/0
 13289 ;;		Unchanged: 0/0
 13290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13291 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13292 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13293 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13294 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13295 ;;Total ram usage:       19 bytes
 13296 ;; Hardware stack levels used:    1
 13297 ;; Hardware stack levels required when called:    1
 13298 ;; This function calls:
 13299 ;;		Nothing
 13300 ;; This function is called by:
 13301 ;;		_dtoa
 13302 ;; This function uses a non-reentrant model
 13303 ;;
 13304                           
 13305                           
 13306                           ;psect for function ___aomod
 13307  2379                     ___aomod:	
 13308                           
 13309                           ;incstack = 0
 13310                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
 13311  2379  01F3               	clrf	___aomod@sign
 13312  237A  3028               	movlw	low ___aomod@dividend
 13313  237B  0086               	movwf	6
 13314  237C  3000               	movlw	high ___aomod@dividend
 13315  237D  0087               	movwf	7
 13316  237E  3F47               	moviw [7]fsr1
 13317  237F  00F1               	movwf	??___aomod
 13318  2380  1FF1               	btfss	??___aomod,7
 13319  2381  2BA3               	goto	l4738
 13320  2382  0020               	movlb	0	; select bank0
 13321  2383  09A8               	comf	___aomod@dividend,f
 13322  2384  09A9               	comf	___aomod@dividend+1,f
 13323  2385  09AA               	comf	___aomod@dividend+2,f
 13324  2386  09AB               	comf	___aomod@dividend+3,f
 13325  2387  09AC               	comf	___aomod@dividend+4,f
 13326  2388  09AD               	comf	___aomod@dividend+5,f
 13327  2389  09AE               	comf	___aomod@dividend+6,f
 13328  238A  09AF               	comf	___aomod@dividend+7,f
 13329  238B  0AA8               	incf	___aomod@dividend,f
 13330  238C  1D03               	skipz
 13331  238D  2BA1               	goto	u590lld
 13332  238E  0AA9               	incf	___aomod@dividend+1,f
 13333  238F  1D03               	skipz
 13334  2390  2BA1               	goto	u590lld
 13335  2391  0AAA               	incf	___aomod@dividend+2,f
 13336  2392  1D03               	skipz
 13337  2393  2BA1               	goto	u590lld
 13338  2394  0AAB               	incf	___aomod@dividend+3,f
 13339  2395  1D03               	skipz
 13340  2396  2BA1               	goto	u590lld
 13341  2397  0AAC               	incf	___aomod@dividend+4,f
 13342  2398  1D03               	skipz
 13343  2399  2BA1               	goto	u590lld
 13344  239A  0AAD               	incf	___aomod@dividend+5,f
 13345  239B  1D03               	skipz
 13346  239C  2BA1               	goto	u590lld
 13347  239D  0AAE               	incf	___aomod@dividend+6,f
 13348  239E  1D03               	skipz
 13349  239F  2BA1               	goto	u590lld
 13350  23A0  0AAF               	incf	___aomod@dividend+7,f
 13351  23A1                     u590lld:	
 13352  23A1  01F3               	clrf	___aomod@sign
 13353  23A2  0AF3               	incf	___aomod@sign,f
 13354  23A3                     l4738:	
 13355  23A3  3020               	movlw	low ___aomod@divisor
 13356  23A4  0086               	movwf	6
 13357  23A5  3000               	movlw	high ___aomod@divisor
 13358  23A6  0087               	movwf	7
 13359  23A7  3F47               	moviw [7]fsr1
 13360  23A8  00F1               	movwf	??___aomod
 13361  23A9  1FF1               	btfss	??___aomod,7
 13362  23AA  2BCA               	goto	l4742
 13363  23AB  0020               	movlb	0	; select bank0
 13364  23AC  09A0               	comf	___aomod@divisor,f
 13365  23AD  09A1               	comf	___aomod@divisor+1,f
 13366  23AE  09A2               	comf	___aomod@divisor+2,f
 13367  23AF  09A3               	comf	___aomod@divisor+3,f
 13368  23B0  09A4               	comf	___aomod@divisor+4,f
 13369  23B1  09A5               	comf	___aomod@divisor+5,f
 13370  23B2  09A6               	comf	___aomod@divisor+6,f
 13371  23B3  09A7               	comf	___aomod@divisor+7,f
 13372  23B4  0AA0               	incf	___aomod@divisor,f
 13373  23B5  1D03               	skipz
 13374  23B6  2BCA               	goto	l4742
 13375  23B7  0AA1               	incf	___aomod@divisor+1,f
 13376  23B8  1D03               	skipz
 13377  23B9  2BCA               	goto	l4742
 13378  23BA  0AA2               	incf	___aomod@divisor+2,f
 13379  23BB  1D03               	skipz
 13380  23BC  2BCA               	goto	l4742
 13381  23BD  0AA3               	incf	___aomod@divisor+3,f
 13382  23BE  1D03               	skipz
 13383  23BF  2BCA               	goto	l4742
 13384  23C0  0AA4               	incf	___aomod@divisor+4,f
 13385  23C1  1D03               	skipz
 13386  23C2  2BCA               	goto	l4742
 13387  23C3  0AA5               	incf	___aomod@divisor+5,f
 13388  23C4  1D03               	skipz
 13389  23C5  2BCA               	goto	l4742
 13390  23C6  0AA6               	incf	___aomod@divisor+6,f
 13391  23C7  1D03               	skipz
 13392  23C8  2BCA               	goto	l4742
 13393  23C9  0AA7               	incf	___aomod@divisor+7,f
 13394  23CA                     l4742:	
 13395  23CA  0020               	movlb	0	; select bank0
 13396  23CB  0820               	movf	___aomod@divisor,w
 13397  23CC  0421               	iorwf	___aomod@divisor+1,w
 13398  23CD  0422               	iorwf	___aomod@divisor+2,w
 13399  23CE  0423               	iorwf	___aomod@divisor+3,w
 13400  23CF  0424               	iorwf	___aomod@divisor+4,w
 13401  23D0  0425               	iorwf	___aomod@divisor+5,w
 13402  23D1  0426               	iorwf	___aomod@divisor+6,w
 13403  23D2  0427               	iorwf	___aomod@divisor+7,w
 13404  23D3  1903               	skipnz
 13405  23D4  2C22               	goto	l4758
 13406  23D5  01F2               	clrf	___aomod@counter
 13407  23D6  0AF2               	incf	___aomod@counter,f
 13408  23D7                     l4750:	
 13409  23D7  1BA7               	btfsc	___aomod@divisor+7,7
 13410  23D8  2BE6               	goto	l4752
 13411  23D9  35A0               	lslf	___aomod@divisor,f
 13412  23DA  0DA1               	rlf	___aomod@divisor+1,f
 13413  23DB  0DA2               	rlf	___aomod@divisor+2,f
 13414  23DC  0DA3               	rlf	___aomod@divisor+3,f
 13415  23DD  0DA4               	rlf	___aomod@divisor+4,f
 13416  23DE  0DA5               	rlf	___aomod@divisor+5,f
 13417  23DF  0DA6               	rlf	___aomod@divisor+6,f
 13418  23E0  0DA7               	rlf	___aomod@divisor+7,f
 13419  23E1  3001               	movlw	1
 13420  23E2  00F1               	movwf	??___aomod
 13421  23E3  0871               	movf	??___aomod,w
 13422  23E4  07F2               	addwf	___aomod@counter,f
 13423  23E5  2BD7               	goto	l4750
 13424  23E6                     l4752:	
 13425  23E6  0827               	movf	___aomod@divisor+7,w
 13426  23E7  022F               	subwf	___aomod@dividend+7,w
 13427  23E8  1D03               	skipz
 13428  23E9  2C04               	goto	u5955
 13429  23EA  0826               	movf	___aomod@divisor+6,w
 13430  23EB  022E               	subwf	___aomod@dividend+6,w
 13431  23EC  1D03               	skipz
 13432  23ED  2C04               	goto	u5955
 13433  23EE  0825               	movf	___aomod@divisor+5,w
 13434  23EF  022D               	subwf	___aomod@dividend+5,w
 13435  23F0  1D03               	skipz
 13436  23F1  2C04               	goto	u5955
 13437  23F2  0824               	movf	___aomod@divisor+4,w
 13438  23F3  022C               	subwf	___aomod@dividend+4,w
 13439  23F4  1D03               	skipz
 13440  23F5  2C04               	goto	u5955
 13441  23F6  0823               	movf	___aomod@divisor+3,w
 13442  23F7  022B               	subwf	___aomod@dividend+3,w
 13443  23F8  1D03               	skipz
 13444  23F9  2C04               	goto	u5955
 13445  23FA  0822               	movf	___aomod@divisor+2,w
 13446  23FB  022A               	subwf	___aomod@dividend+2,w
 13447  23FC  1D03               	skipz
 13448  23FD  2C04               	goto	u5955
 13449  23FE  0821               	movf	___aomod@divisor+1,w
 13450  23FF  0229               	subwf	___aomod@dividend+1,w
 13451  2400  1D03               	skipz
 13452  2401  2C04               	goto	u5955
 13453  2402  0820               	movf	___aomod@divisor,w
 13454  2403  0228               	subwf	___aomod@dividend,w
 13455  2404                     u5955:	
 13456  2404  1C03               	skipc
 13457  2405  2C16               	goto	l4756
 13458  2406  0820               	movf	___aomod@divisor,w
 13459  2407  02A8               	subwf	___aomod@dividend,f
 13460  2408  0821               	movf	___aomod@divisor+1,w
 13461  2409  3BA9               	subwfb	___aomod@dividend+1,f
 13462  240A  0822               	movf	___aomod@divisor+2,w
 13463  240B  3BAA               	subwfb	___aomod@dividend+2,f
 13464  240C  0823               	movf	___aomod@divisor+3,w
 13465  240D  3BAB               	subwfb	___aomod@dividend+3,f
 13466  240E  0824               	movf	___aomod@divisor+4,w
 13467  240F  3BAC               	subwfb	___aomod@dividend+4,f
 13468  2410  0825               	movf	___aomod@divisor+5,w
 13469  2411  3BAD               	subwfb	___aomod@dividend+5,f
 13470  2412  0826               	movf	___aomod@divisor+6,w
 13471  2413  3BAE               	subwfb	___aomod@dividend+6,f
 13472  2414  0827               	movf	___aomod@divisor+7,w
 13473  2415  3BAF               	subwfb	___aomod@dividend+7,f
 13474  2416                     l4756:	
 13475  2416  36A7               	lsrf	___aomod@divisor+7,f
 13476  2417  0CA6               	rrf	___aomod@divisor+6,f
 13477  2418  0CA5               	rrf	___aomod@divisor+5,f
 13478  2419  0CA4               	rrf	___aomod@divisor+4,f
 13479  241A  0CA3               	rrf	___aomod@divisor+3,f
 13480  241B  0CA2               	rrf	___aomod@divisor+2,f
 13481  241C  0CA1               	rrf	___aomod@divisor+1,f
 13482  241D  0CA0               	rrf	___aomod@divisor,f
 13483  241E  3001               	movlw	1
 13484  241F  02F2               	subwf	___aomod@counter,f
 13485  2420  1D03               	btfss	3,2
 13486  2421  2BE6               	goto	l4752
 13487  2422                     l4758:	
 13488  2422  0873               	movf	___aomod@sign,w
 13489  2423  1903               	btfsc	3,2
 13490  2424  2C43               	goto	l997
 13491  2425  09A8               	comf	___aomod@dividend,f
 13492  2426  09A9               	comf	___aomod@dividend+1,f
 13493  2427  09AA               	comf	___aomod@dividend+2,f
 13494  2428  09AB               	comf	___aomod@dividend+3,f
 13495  2429  09AC               	comf	___aomod@dividend+4,f
 13496  242A  09AD               	comf	___aomod@dividend+5,f
 13497  242B  09AE               	comf	___aomod@dividend+6,f
 13498  242C  09AF               	comf	___aomod@dividend+7,f
 13499  242D  0AA8               	incf	___aomod@dividend,f
 13500  242E  1D03               	skipz
 13501  242F  2C43               	goto	l997
 13502  2430  0AA9               	incf	___aomod@dividend+1,f
 13503  2431  1D03               	skipz
 13504  2432  2C43               	goto	l997
 13505  2433  0AAA               	incf	___aomod@dividend+2,f
 13506  2434  1D03               	skipz
 13507  2435  2C43               	goto	l997
 13508  2436  0AAB               	incf	___aomod@dividend+3,f
 13509  2437  1D03               	skipz
 13510  2438  2C43               	goto	l997
 13511  2439  0AAC               	incf	___aomod@dividend+4,f
 13512  243A  1D03               	skipz
 13513  243B  2C43               	goto	l997
 13514  243C  0AAD               	incf	___aomod@dividend+5,f
 13515  243D  1D03               	skipz
 13516  243E  2C43               	goto	l997
 13517  243F  0AAE               	incf	___aomod@dividend+6,f
 13518  2440  1D03               	skipz
 13519  2441  2C43               	goto	l997
 13520  2442  0AAF               	incf	___aomod@dividend+7,f
 13521  2443                     l997:	
 13522  2443  0020               	movlb	0	; select bank0
 13523  2444  0828               	movf	___aomod@dividend,w
 13524  2445  00A0               	movwf	?___aomod
 13525  2446  0829               	movf	___aomod@dividend+1,w
 13526  2447  00A1               	movwf	?___aomod+1
 13527  2448  082A               	movf	___aomod@dividend+2,w
 13528  2449  00A2               	movwf	?___aomod+2
 13529  244A  082B               	movf	___aomod@dividend+3,w
 13530  244B  00A3               	movwf	?___aomod+3
 13531  244C  082C               	movf	___aomod@dividend+4,w
 13532  244D  00A4               	movwf	?___aomod+4
 13533  244E  082D               	movf	___aomod@dividend+5,w
 13534  244F  00A5               	movwf	?___aomod+5
 13535  2450  082E               	movf	___aomod@dividend+6,w
 13536  2451  00A6               	movwf	?___aomod+6
 13537  2452  082F               	movf	___aomod@dividend+7,w
 13538  2453  00A7               	movwf	?___aomod+7
 13539  2454  0008               	return
 13540  2455                     __end_of___aomod:	
 13541                           
 13542                           	psect	text32
 13543  270D                     __ptext32:	
 13544 ;; *************** function ___aodiv *****************
 13545 ;; Defined at:
 13546 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 13547 ;; Parameters:    Size  Location     Type
 13548 ;;  divisor         8    0[BANK0 ] long long 
 13549 ;;  dividend        8    8[BANK0 ] long long 
 13550 ;; Auto vars:     Size  Location     Type
 13551 ;;  quotient        8    4[COMMON] long long 
 13552 ;;  sign            1    3[COMMON] unsigned char 
 13553 ;;  counter         1    2[COMMON] unsigned char 
 13554 ;; Return value:  Size  Location     Type
 13555 ;;                  8    0[BANK0 ] long long 
 13556 ;; Registers used:
 13557 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13558 ;; Tracked objects:
 13559 ;;		On entry : 0/0
 13560 ;;		On exit  : 0/0
 13561 ;;		Unchanged: 0/0
 13562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13563 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13564 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13565 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13566 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13567 ;;Total ram usage:       27 bytes
 13568 ;; Hardware stack levels used:    1
 13569 ;; Hardware stack levels required when called:    1
 13570 ;; This function calls:
 13571 ;;		Nothing
 13572 ;; This function is called by:
 13573 ;;		_dtoa
 13574 ;; This function uses a non-reentrant model
 13575 ;;
 13576                           
 13577                           
 13578                           ;psect for function ___aodiv
 13579  270D                     ___aodiv:	
 13580                           
 13581                           ;incstack = 0
 13582                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 13583  270D  01F3               	clrf	___aodiv@sign
 13584  270E  3020               	movlw	low ___aodiv@divisor
 13585  270F  0086               	movwf	6
 13586  2710  3000               	movlw	high ___aodiv@divisor
 13587  2711  0087               	movwf	7
 13588  2712  3F47               	moviw [7]fsr1
 13589  2713  00F1               	movwf	??___aodiv
 13590  2714  1FF1               	btfss	??___aodiv,7
 13591  2715  2F37               	goto	l4700
 13592  2716  0020               	movlb	0	; select bank0
 13593  2717  09A0               	comf	___aodiv@divisor,f
 13594  2718  09A1               	comf	___aodiv@divisor+1,f
 13595  2719  09A2               	comf	___aodiv@divisor+2,f
 13596  271A  09A3               	comf	___aodiv@divisor+3,f
 13597  271B  09A4               	comf	___aodiv@divisor+4,f
 13598  271C  09A5               	comf	___aodiv@divisor+5,f
 13599  271D  09A6               	comf	___aodiv@divisor+6,f
 13600  271E  09A7               	comf	___aodiv@divisor+7,f
 13601  271F  0AA0               	incf	___aodiv@divisor,f
 13602  2720  1D03               	skipz
 13603  2721  2F35               	goto	u579lld
 13604  2722  0AA1               	incf	___aodiv@divisor+1,f
 13605  2723  1D03               	skipz
 13606  2724  2F35               	goto	u579lld
 13607  2725  0AA2               	incf	___aodiv@divisor+2,f
 13608  2726  1D03               	skipz
 13609  2727  2F35               	goto	u579lld
 13610  2728  0AA3               	incf	___aodiv@divisor+3,f
 13611  2729  1D03               	skipz
 13612  272A  2F35               	goto	u579lld
 13613  272B  0AA4               	incf	___aodiv@divisor+4,f
 13614  272C  1D03               	skipz
 13615  272D  2F35               	goto	u579lld
 13616  272E  0AA5               	incf	___aodiv@divisor+5,f
 13617  272F  1D03               	skipz
 13618  2730  2F35               	goto	u579lld
 13619  2731  0AA6               	incf	___aodiv@divisor+6,f
 13620  2732  1D03               	skipz
 13621  2733  2F35               	goto	u579lld
 13622  2734  0AA7               	incf	___aodiv@divisor+7,f
 13623  2735                     u579lld:	
 13624  2735  01F3               	clrf	___aodiv@sign
 13625  2736  0AF3               	incf	___aodiv@sign,f
 13626  2737                     l4700:	
 13627  2737  3028               	movlw	low ___aodiv@dividend
 13628  2738  0086               	movwf	6
 13629  2739  3000               	movlw	high ___aodiv@dividend
 13630  273A  0087               	movwf	7
 13631  273B  3F47               	moviw [7]fsr1
 13632  273C  00F1               	movwf	??___aodiv
 13633  273D  1FF1               	btfss	??___aodiv,7
 13634  273E  2F62               	goto	l4706
 13635  273F  0020               	movlb	0	; select bank0
 13636  2740  09A8               	comf	___aodiv@dividend,f
 13637  2741  09A9               	comf	___aodiv@dividend+1,f
 13638  2742  09AA               	comf	___aodiv@dividend+2,f
 13639  2743  09AB               	comf	___aodiv@dividend+3,f
 13640  2744  09AC               	comf	___aodiv@dividend+4,f
 13641  2745  09AD               	comf	___aodiv@dividend+5,f
 13642  2746  09AE               	comf	___aodiv@dividend+6,f
 13643  2747  09AF               	comf	___aodiv@dividend+7,f
 13644  2748  0AA8               	incf	___aodiv@dividend,f
 13645  2749  1D03               	skipz
 13646  274A  2F5E               	goto	l4704
 13647  274B  0AA9               	incf	___aodiv@dividend+1,f
 13648  274C  1D03               	skipz
 13649  274D  2F5E               	goto	l4704
 13650  274E  0AAA               	incf	___aodiv@dividend+2,f
 13651  274F  1D03               	skipz
 13652  2750  2F5E               	goto	l4704
 13653  2751  0AAB               	incf	___aodiv@dividend+3,f
 13654  2752  1D03               	skipz
 13655  2753  2F5E               	goto	l4704
 13656  2754  0AAC               	incf	___aodiv@dividend+4,f
 13657  2755  1D03               	skipz
 13658  2756  2F5E               	goto	l4704
 13659  2757  0AAD               	incf	___aodiv@dividend+5,f
 13660  2758  1D03               	skipz
 13661  2759  2F5E               	goto	l4704
 13662  275A  0AAE               	incf	___aodiv@dividend+6,f
 13663  275B  1D03               	skipz
 13664  275C  2F5E               	goto	l4704
 13665  275D  0AAF               	incf	___aodiv@dividend+7,f
 13666  275E                     l4704:	
 13667  275E  3001               	movlw	1
 13668  275F  00F1               	movwf	??___aodiv
 13669  2760  0871               	movf	??___aodiv,w
 13670  2761  06F3               	xorwf	___aodiv@sign,f
 13671  2762                     l4706:	
 13672  2762  3074               	movlw	low ___aodiv@quotient
 13673  2763  0086               	movwf	6
 13674  2764  3000               	movlw	high ___aodiv@quotient
 13675  2765  0087               	movwf	7
 13676  2766  3008               	movlw	8
 13677  2767  00F1               	movwf	??___aodiv
 13678  2768  3000               	movlw	0
 13679  2769                     u5820:	
 13680  2769  001E               	movwi fsr1++
 13681  276A  0BF1               	decfsz	??___aodiv,f
 13682  276B  2F69               	goto	u5820
 13683  276C  0020               	movlb	0	; select bank0
 13684  276D  0820               	movf	___aodiv@divisor,w
 13685  276E  0421               	iorwf	___aodiv@divisor+1,w
 13686  276F  0422               	iorwf	___aodiv@divisor+2,w
 13687  2770  0423               	iorwf	___aodiv@divisor+3,w
 13688  2771  0424               	iorwf	___aodiv@divisor+4,w
 13689  2772  0425               	iorwf	___aodiv@divisor+5,w
 13690  2773  0426               	iorwf	___aodiv@divisor+6,w
 13691  2774  0427               	iorwf	___aodiv@divisor+7,w
 13692  2775  1903               	skipnz
 13693  2776  2FCD               	goto	l4728
 13694  2777  01F2               	clrf	___aodiv@counter
 13695  2778  0AF2               	incf	___aodiv@counter,f
 13696  2779                     l4716:	
 13697  2779  1BA7               	btfsc	___aodiv@divisor+7,7
 13698  277A  2F88               	goto	l4718
 13699  277B  35A0               	lslf	___aodiv@divisor,f
 13700  277C  0DA1               	rlf	___aodiv@divisor+1,f
 13701  277D  0DA2               	rlf	___aodiv@divisor+2,f
 13702  277E  0DA3               	rlf	___aodiv@divisor+3,f
 13703  277F  0DA4               	rlf	___aodiv@divisor+4,f
 13704  2780  0DA5               	rlf	___aodiv@divisor+5,f
 13705  2781  0DA6               	rlf	___aodiv@divisor+6,f
 13706  2782  0DA7               	rlf	___aodiv@divisor+7,f
 13707  2783  3001               	movlw	1
 13708  2784  00F1               	movwf	??___aodiv
 13709  2785  0871               	movf	??___aodiv,w
 13710  2786  07F2               	addwf	___aodiv@counter,f
 13711  2787  2F79               	goto	l4716
 13712  2788                     l4718:	
 13713  2788  35F4               	lslf	___aodiv@quotient,f
 13714  2789  0DF5               	rlf	___aodiv@quotient+1,f
 13715  278A  0DF6               	rlf	___aodiv@quotient+2,f
 13716  278B  0DF7               	rlf	___aodiv@quotient+3,f
 13717  278C  0DF8               	rlf	___aodiv@quotient+4,f
 13718  278D  0DF9               	rlf	___aodiv@quotient+5,f
 13719  278E  0DFA               	rlf	___aodiv@quotient+6,f
 13720  278F  0DFB               	rlf	___aodiv@quotient+7,f
 13721  2790  0827               	movf	___aodiv@divisor+7,w
 13722  2791  022F               	subwf	___aodiv@dividend+7,w
 13723  2792  1D03               	skipz
 13724  2793  2FAE               	goto	u5855
 13725  2794  0826               	movf	___aodiv@divisor+6,w
 13726  2795  022E               	subwf	___aodiv@dividend+6,w
 13727  2796  1D03               	skipz
 13728  2797  2FAE               	goto	u5855
 13729  2798  0825               	movf	___aodiv@divisor+5,w
 13730  2799  022D               	subwf	___aodiv@dividend+5,w
 13731  279A  1D03               	skipz
 13732  279B  2FAE               	goto	u5855
 13733  279C  0824               	movf	___aodiv@divisor+4,w
 13734  279D  022C               	subwf	___aodiv@dividend+4,w
 13735  279E  1D03               	skipz
 13736  279F  2FAE               	goto	u5855
 13737  27A0  0823               	movf	___aodiv@divisor+3,w
 13738  27A1  022B               	subwf	___aodiv@dividend+3,w
 13739  27A2  1D03               	skipz
 13740  27A3  2FAE               	goto	u5855
 13741  27A4  0822               	movf	___aodiv@divisor+2,w
 13742  27A5  022A               	subwf	___aodiv@dividend+2,w
 13743  27A6  1D03               	skipz
 13744  27A7  2FAE               	goto	u5855
 13745  27A8  0821               	movf	___aodiv@divisor+1,w
 13746  27A9  0229               	subwf	___aodiv@dividend+1,w
 13747  27AA  1D03               	skipz
 13748  27AB  2FAE               	goto	u5855
 13749  27AC  0820               	movf	___aodiv@divisor,w
 13750  27AD  0228               	subwf	___aodiv@dividend,w
 13751  27AE                     u5855:	
 13752  27AE  1C03               	skipc
 13753  27AF  2FC1               	goto	l4726
 13754  27B0  0820               	movf	___aodiv@divisor,w
 13755  27B1  02A8               	subwf	___aodiv@dividend,f
 13756  27B2  0821               	movf	___aodiv@divisor+1,w
 13757  27B3  3BA9               	subwfb	___aodiv@dividend+1,f
 13758  27B4  0822               	movf	___aodiv@divisor+2,w
 13759  27B5  3BAA               	subwfb	___aodiv@dividend+2,f
 13760  27B6  0823               	movf	___aodiv@divisor+3,w
 13761  27B7  3BAB               	subwfb	___aodiv@dividend+3,f
 13762  27B8  0824               	movf	___aodiv@divisor+4,w
 13763  27B9  3BAC               	subwfb	___aodiv@dividend+4,f
 13764  27BA  0825               	movf	___aodiv@divisor+5,w
 13765  27BB  3BAD               	subwfb	___aodiv@dividend+5,f
 13766  27BC  0826               	movf	___aodiv@divisor+6,w
 13767  27BD  3BAE               	subwfb	___aodiv@dividend+6,f
 13768  27BE  0827               	movf	___aodiv@divisor+7,w
 13769  27BF  3BAF               	subwfb	___aodiv@dividend+7,f
 13770  27C0  1474               	bsf	___aodiv@quotient,0
 13771  27C1                     l4726:	
 13772  27C1  36A7               	lsrf	___aodiv@divisor+7,f
 13773  27C2  0CA6               	rrf	___aodiv@divisor+6,f
 13774  27C3  0CA5               	rrf	___aodiv@divisor+5,f
 13775  27C4  0CA4               	rrf	___aodiv@divisor+4,f
 13776  27C5  0CA3               	rrf	___aodiv@divisor+3,f
 13777  27C6  0CA2               	rrf	___aodiv@divisor+2,f
 13778  27C7  0CA1               	rrf	___aodiv@divisor+1,f
 13779  27C8  0CA0               	rrf	___aodiv@divisor,f
 13780  27C9  3001               	movlw	1
 13781  27CA  02F2               	subwf	___aodiv@counter,f
 13782  27CB  1D03               	btfss	3,2
 13783  27CC  2F88               	goto	l4718
 13784  27CD                     l4728:	
 13785  27CD  0873               	movf	___aodiv@sign,w
 13786  27CE  1903               	btfsc	3,2
 13787  27CF  2FEE               	goto	l984
 13788  27D0  09F4               	comf	___aodiv@quotient,f
 13789  27D1  09F5               	comf	___aodiv@quotient+1,f
 13790  27D2  09F6               	comf	___aodiv@quotient+2,f
 13791  27D3  09F7               	comf	___aodiv@quotient+3,f
 13792  27D4  09F8               	comf	___aodiv@quotient+4,f
 13793  27D5  09F9               	comf	___aodiv@quotient+5,f
 13794  27D6  09FA               	comf	___aodiv@quotient+6,f
 13795  27D7  09FB               	comf	___aodiv@quotient+7,f
 13796  27D8  0AF4               	incf	___aodiv@quotient,f
 13797  27D9  1D03               	skipz
 13798  27DA  2FEE               	goto	l984
 13799  27DB  0AF5               	incf	___aodiv@quotient+1,f
 13800  27DC  1D03               	skipz
 13801  27DD  2FEE               	goto	l984
 13802  27DE  0AF6               	incf	___aodiv@quotient+2,f
 13803  27DF  1D03               	skipz
 13804  27E0  2FEE               	goto	l984
 13805  27E1  0AF7               	incf	___aodiv@quotient+3,f
 13806  27E2  1D03               	skipz
 13807  27E3  2FEE               	goto	l984
 13808  27E4  0AF8               	incf	___aodiv@quotient+4,f
 13809  27E5  1D03               	skipz
 13810  27E6  2FEE               	goto	l984
 13811  27E7  0AF9               	incf	___aodiv@quotient+5,f
 13812  27E8  1D03               	skipz
 13813  27E9  2FEE               	goto	l984
 13814  27EA  0AFA               	incf	___aodiv@quotient+6,f
 13815  27EB  1D03               	skipz
 13816  27EC  2FEE               	goto	l984
 13817  27ED  0AFB               	incf	___aodiv@quotient+7,f
 13818  27EE                     l984:	
 13819  27EE  0874               	movf	___aodiv@quotient,w
 13820  27EF  0020               	movlb	0	; select bank0
 13821  27F0  00A0               	movwf	?___aodiv
 13822  27F1  0875               	movf	___aodiv@quotient+1,w
 13823  27F2  00A1               	movwf	?___aodiv+1
 13824  27F3  0876               	movf	___aodiv@quotient+2,w
 13825  27F4  00A2               	movwf	?___aodiv+2
 13826  27F5  0877               	movf	___aodiv@quotient+3,w
 13827  27F6  00A3               	movwf	?___aodiv+3
 13828  27F7  0878               	movf	___aodiv@quotient+4,w
 13829  27F8  00A4               	movwf	?___aodiv+4
 13830  27F9  0879               	movf	___aodiv@quotient+5,w
 13831  27FA  00A5               	movwf	?___aodiv+5
 13832  27FB  087A               	movf	___aodiv@quotient+6,w
 13833  27FC  00A6               	movwf	?___aodiv+6
 13834  27FD  087B               	movf	___aodiv@quotient+7,w
 13835  27FE  00A7               	movwf	?___aodiv+7
 13836  27FF  0008               	return
 13837  2800                     __end_of___aodiv:	
 13838                           
 13839                           	psect	text33
 13840  332D                     __ptext33:	
 13841 ;; *************** function _ctoa *****************
 13842 ;; Defined at:
 13843 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 13844 ;; Parameters:    Size  Location     Type
 13845 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
 13846 ;;		 -> vsnprintf@f(6), 
 13847 ;;  c               1   18[BANK0 ] unsigned char 
 13848 ;; Auto vars:     Size  Location     Type
 13849 ;;  w               2   20[BANK0 ] int 
 13850 ;;  l               2    0        int 
 13851 ;; Return value:  Size  Location     Type
 13852 ;;                  2   16[BANK0 ] int 
 13853 ;; Registers used:
 13854 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13855 ;; Tracked objects:
 13856 ;;		On entry : 0/0
 13857 ;;		On exit  : 0/0
 13858 ;;		Unchanged: 0/0
 13859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13860 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13861 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13862 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13863 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13864 ;;Total ram usage:        6 bytes
 13865 ;; Hardware stack levels used:    1
 13866 ;; Hardware stack levels required when called:    5
 13867 ;; This function calls:
 13868 ;;		_pad
 13869 ;; This function is called by:
 13870 ;;		_vfpfcnvrt
 13871 ;; This function uses a non-reentrant model
 13872 ;;
 13873                           
 13874                           
 13875                           ;psect for function _ctoa
 13876  332D                     _ctoa:	
 13877                           
 13878                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 13879                           
 13880                           ;incstack = 0
 13881                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13882  332D  0023               	movlb	3	; select bank3
 13883  332E  083E               	movf	_width^(0+384),w
 13884  332F  043F               	iorwf	(_width+1)^(0+384),w
 13885  3330  1D03               	btfss	3,2
 13886  3331  2B3A               	goto	l7300
 13887  3332  083F               	movf	(_width+1)^(0+384),w
 13888  3333  0020               	movlb	0	; select bank0
 13889  3334  00B5               	movwf	ctoa@w+1
 13890  3335  0023               	movlb	3	; select bank3
 13891  3336  083E               	movf	_width^(0+384),w
 13892  3337  0020               	movlb	0	; select bank0
 13893  3338  00B4               	movwf	ctoa@w
 13894  3339  2B43               	goto	l7302
 13895  333A                     l7300:	
 13896  333A  083E               	movf	_width^(0+384),w
 13897  333B  3EFF               	addlw	255
 13898  333C  0020               	movlb	0	; select bank0
 13899  333D  00B4               	movwf	ctoa@w
 13900  333E  30FF               	movlw	255
 13901  333F  0023               	movlb	3	; select bank3
 13902  3340  3D3F               	addwfc	(_width+1)^(0+384),w
 13903  3341  0020               	movlb	0	; select bank0
 13904  3342  00B5               	movwf	ctoa@w+1
 13905  3343                     l7302:	
 13906                           
 13907                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 13908  3343  0832               	movf	ctoa@c,w
 13909  3344  00B3               	movwf	??_ctoa
 13910  3345  0833               	movf	??_ctoa,w
 13911  3346  0024               	movlb	4	; select bank4
 13912  3347  00A0               	movwf	_dbuf^(0+512)
 13913                           
 13914                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 13915  3348  01A1               	clrf	(_dbuf^(0+512)+1)
 13916                           
 13917                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 13918  3349  0020               	movlb	0	; select bank0
 13919  334A  0831               	movf	ctoa@fp+1,w
 13920  334B  00A7               	movwf	pad@fp+1
 13921  334C  0830               	movf	ctoa@fp,w
 13922  334D  00A6               	movwf	pad@fp
 13923  334E  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
 13924  334F  00B3               	movwf	??_ctoa
 13925  3350  0833               	movf	??_ctoa,w
 13926  3351  00A8               	movwf	pad@buf
 13927  3352  0835               	movf	ctoa@w+1,w
 13928  3353  00AA               	movwf	pad@p+1
 13929  3354  0834               	movf	ctoa@w,w
 13930  3355  00A9               	movwf	pad@p
 13931  3356  31B5  256D         	fcall	_pad
 13932  3358  0020               	movlb	0	; select bank0
 13933  3359  0827               	movf	?_pad+1,w
 13934  335A  00B1               	movwf	?_ctoa+1
 13935  335B  0826               	movf	?_pad,w
 13936  335C  00B0               	movwf	?_ctoa
 13937  335D  0008               	return
 13938  335E                     __end_of_ctoa:	
 13939                           
 13940                           	psect	text34
 13941  356D                     __ptext34:	
 13942 ;; *************** function _pad *****************
 13943 ;; Defined at:
 13944 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 13945 ;; Parameters:    Size  Location     Type
 13946 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
 13947 ;;		 -> vsnprintf@f(6), 
 13948 ;;  buf             1    8[BANK0 ] PTR unsigned char 
 13949 ;;		 -> dbuf(80), 
 13950 ;;  p               2    9[BANK0 ] int 
 13951 ;; Auto vars:     Size  Location     Type
 13952 ;;  w               2   14[BANK0 ] int 
 13953 ;;  i               2   12[BANK0 ] int 
 13954 ;; Return value:  Size  Location     Type
 13955 ;;                  2    6[BANK0 ] int 
 13956 ;; Registers used:
 13957 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13958 ;; Tracked objects:
 13959 ;;		On entry : 0/0
 13960 ;;		On exit  : 0/0
 13961 ;;		Unchanged: 0/0
 13962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13963 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13964 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13965 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13966 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13967 ;;Total ram usage:       10 bytes
 13968 ;; Hardware stack levels used:    1
 13969 ;; Hardware stack levels required when called:    4
 13970 ;; This function calls:
 13971 ;;		_fputc
 13972 ;;		_fputs
 13973 ;;		_strlen
 13974 ;; This function is called by:
 13975 ;;		_ctoa
 13976 ;;		_dtoa
 13977 ;;		_efgtoa
 13978 ;;		_otoa
 13979 ;;		_utoa
 13980 ;;		_xtoa
 13981 ;; This function uses a non-reentrant model
 13982 ;;
 13983                           
 13984                           
 13985                           ;psect for function _pad
 13986  356D                     _pad:	
 13987                           
 13988                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 13989                           
 13990                           ;incstack = 0
 13991                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13992  356D  0023               	movlb	3	; select bank3
 13993  356E  1C42               	btfss	_flags^(0+384),0
 13994  356F  2D79               	goto	l7240
 13995                           
 13996                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 13997  3570  0020               	movlb	0	; select bank0
 13998  3571  0827               	movf	pad@fp+1,w
 13999  3572  00FB               	movwf	fputs@fp+1
 14000  3573  0826               	movf	pad@fp,w
 14001  3574  00FA               	movwf	fputs@fp
 14002  3575  0828               	movf	pad@buf,w
 14003  3576  31A8  200A  31B5   	fcall	_fputs
 14004  3579                     l7240:	
 14005                           
 14006                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 14007  3579  0020               	movlb	0	; select bank0
 14008  357A  1BAA               	btfsc	pad@p+1,7
 14009  357B  2D81               	goto	l7244
 14010  357C  082A               	movf	pad@p+1,w
 14011  357D  00AF               	movwf	pad@w+1
 14012  357E  0829               	movf	pad@p,w
 14013  357F  00AE               	movwf	pad@w
 14014  3580  2D83               	goto	l566
 14015  3581                     l7244:	
 14016  3581  01AE               	clrf	pad@w
 14017  3582  01AF               	clrf	pad@w+1
 14018  3583                     l566:	
 14019                           
 14020                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 14021  3583  01AC               	clrf	pad@i
 14022  3584  01AD               	clrf	pad@i+1
 14023  3585                     l7250:	
 14024                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14025                           
 14026                           
 14027                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14028  3585  082D               	movf	pad@i+1,w
 14029  3586  3A80               	xorlw	128
 14030  3587  00AB               	movwf	??_pad
 14031  3588  082F               	movf	pad@w+1,w
 14032  3589  3A80               	xorlw	128
 14033  358A  022B               	subwf	??_pad,w
 14034  358B  1D03               	skipz
 14035  358C  2D8F               	goto	u10105
 14036  358D  082E               	movf	pad@w,w
 14037  358E  022C               	subwf	pad@i,w
 14038  358F                     u10105:	
 14039  358F  1803               	btfsc	3,0
 14040  3590  2DA3               	goto	l569
 14041                           
 14042                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 14043  3591  3020               	movlw	32
 14044  3592  00F1               	movwf	fputc@c
 14045  3593  3000               	movlw	0
 14046  3594  00F2               	movwf	fputc@c+1
 14047  3595  0020               	movlb	0	; select bank0
 14048  3596  0827               	movf	pad@fp+1,w
 14049  3597  00F4               	movwf	fputc@fp+1
 14050  3598  0826               	movf	pad@fp,w
 14051  3599  00F3               	movwf	fputc@fp
 14052  359A  31B6  260F  31B5   	fcall	_fputc
 14053                           
 14054                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 14055  359D  3001               	movlw	1
 14056  359E  0020               	movlb	0	; select bank0
 14057  359F  07AC               	addwf	pad@i,f
 14058  35A0  3000               	movlw	0
 14059  35A1  3DAD               	addwfc	pad@i+1,f
 14060  35A2  2D85               	goto	l7250
 14061  35A3                     l569:	
 14062                           
 14063                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 14064  35A3  0023               	movlb	3	; select bank3
 14065  35A4  1842               	btfsc	_flags^(0+384),0
 14066  35A5  2DAF               	goto	l7254
 14067                           
 14068                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 14069  35A6  0020               	movlb	0	; select bank0
 14070  35A7  0827               	movf	pad@fp+1,w
 14071  35A8  00FB               	movwf	fputs@fp+1
 14072  35A9  0826               	movf	pad@fp,w
 14073  35AA  00FA               	movwf	fputs@fp
 14074  35AB  0828               	movf	pad@buf,w
 14075  35AC  31A8  200A  31B5   	fcall	_fputs
 14076  35AF                     l7254:	
 14077                           
 14078                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 14079  35AF  0020               	movlb	0	; select bank0
 14080  35B0  0828               	movf	pad@buf,w
 14081  35B1  00F1               	movwf	strlen@s
 14082  35B2  3002               	movlw	2
 14083  35B3  00F2               	movwf	strlen@s+1
 14084  35B4  31B1  2165         	fcall	_strlen
 14085  35B6  0020               	movlb	0	; select bank0
 14086  35B7  082E               	movf	pad@w,w
 14087  35B8  0771               	addwf	?_strlen,w
 14088  35B9  00A6               	movwf	?_pad
 14089  35BA  082F               	movf	pad@w+1,w
 14090  35BB  3D72               	addwfc	?_strlen+1,w
 14091  35BC  00A7               	movwf	?_pad+1
 14092  35BD  0008               	return
 14093  35BE                     __end_of_pad:	
 14094                           
 14095                           	psect	text35
 14096  3165                     __ptext35:	
 14097 ;; *************** function _strlen *****************
 14098 ;; Defined at:
 14099 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 14100 ;; Parameters:    Size  Location     Type
 14101 ;;  s               2    1[COMMON] PTR const unsigned char 
 14102 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), 
 14103 ;; Auto vars:     Size  Location     Type
 14104 ;;  a               2    3[COMMON] PTR const unsigned char 
 14105 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), 
 14106 ;; Return value:  Size  Location     Type
 14107 ;;                  2    1[COMMON] unsigned int 
 14108 ;; Registers used:
 14109 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14110 ;; Tracked objects:
 14111 ;;		On entry : 0/0
 14112 ;;		On exit  : 0/0
 14113 ;;		Unchanged: 0/0
 14114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14115 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14116 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14118 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14119 ;;Total ram usage:        4 bytes
 14120 ;; Hardware stack levels used:    1
 14121 ;; Hardware stack levels required when called:    1
 14122 ;; This function calls:
 14123 ;;		Nothing
 14124 ;; This function is called by:
 14125 ;;		_pad
 14126 ;;		_stoa
 14127 ;; This function uses a non-reentrant model
 14128 ;;
 14129                           
 14130                           
 14131                           ;psect for function _strlen
 14132  3165                     _strlen:	
 14133                           
 14134                           ;incstack = 0
 14135                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 14136  3165  0872               	movf	strlen@s+1,w
 14137  3166  00F4               	movwf	strlen@a+1
 14138  3167  0871               	movf	strlen@s,w
 14139  3168  00F3               	movwf	strlen@a
 14140  3169                     l4346:	
 14141  3169  0871               	movf	strlen@s,w
 14142  316A  0086               	movwf	6
 14143  316B  0872               	movf	strlen@s+1,w
 14144  316C  0087               	movwf	7
 14145  316D  0801               	movf	1,w
 14146  316E  1903               	btfsc	3,2
 14147  316F  2975               	goto	l4348
 14148  3170  3001               	movlw	1
 14149  3171  07F1               	addwf	strlen@s,f
 14150  3172  3000               	movlw	0
 14151  3173  3DF2               	addwfc	strlen@s+1,f
 14152  3174  2969               	goto	l4346
 14153  3175                     l4348:	
 14154  3175  0873               	movf	strlen@a,w
 14155  3176  0271               	subwf	strlen@s,w
 14156  3177  00F1               	movwf	?_strlen
 14157  3178  0874               	movf	strlen@a+1,w
 14158  3179  3B72               	subwfb	strlen@s+1,w
 14159  317A  00F2               	movwf	?_strlen+1
 14160  317B  0008               	return
 14161  317C                     __end_of_strlen:	
 14162                           
 14163                           	psect	text36
 14164  280A                     __ptext36:	
 14165 ;; *************** function _fputs *****************
 14166 ;; Defined at:
 14167 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 14168 ;; Parameters:    Size  Location     Type
 14169 ;;  s               1    wreg     PTR const unsigned char 
 14170 ;;		 -> dbuf(80), 
 14171 ;;  fp              2   10[COMMON] PTR struct _IO_FILE
 14172 ;;		 -> vsnprintf@f(6), 
 14173 ;; Auto vars:     Size  Location     Type
 14174 ;;  s               1    5[BANK0 ] PTR const unsigned char 
 14175 ;;		 -> dbuf(80), 
 14176 ;;  i               2    3[BANK0 ] int 
 14177 ;;  c               1    2[BANK0 ] unsigned char 
 14178 ;; Return value:  Size  Location     Type
 14179 ;;                  2   10[COMMON] int 
 14180 ;; Registers used:
 14181 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14182 ;; Tracked objects:
 14183 ;;		On entry : 0/0
 14184 ;;		On exit  : 0/0
 14185 ;;		Unchanged: 0/0
 14186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14187 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14188 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14189 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14190 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14191 ;;Total ram usage:        8 bytes
 14192 ;; Hardware stack levels used:    1
 14193 ;; Hardware stack levels required when called:    3
 14194 ;; This function calls:
 14195 ;;		_fputc
 14196 ;; This function is called by:
 14197 ;;		_pad
 14198 ;; This function uses a non-reentrant model
 14199 ;;
 14200                           
 14201                           
 14202                           ;psect for function _fputs
 14203  280A                     _fputs:	
 14204                           
 14205                           ;incstack = 0
 14206                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14207                           ;fputs@s stored from wreg
 14208  280A  0020               	movlb	0	; select bank0
 14209  280B  00A5               	movwf	fputs@s
 14210  280C  01A3               	clrf	fputs@i
 14211  280D  01A4               	clrf	fputs@i+1
 14212  280E                     l4340:	
 14213  280E  0823               	movf	fputs@i,w
 14214  280F  0725               	addwf	fputs@s,w
 14215  2810  00A0               	movwf	??_fputs
 14216  2811  0820               	movf	??_fputs,w
 14217  2812  0086               	movwf	6
 14218  2813  3002               	movlw	2	; select bank4/5
 14219  2814  0087               	movwf	7
 14220  2815  0801               	movf	1,w
 14221  2816  00A1               	movwf	??_fputs+1
 14222  2817  0821               	movf	??_fputs+1,w
 14223  2818  00A2               	movwf	fputs@c
 14224  2819  0822               	movf	fputs@c,w
 14225  281A  1903               	btfsc	3,2
 14226  281B  0008               	return
 14227  281C  0822               	movf	fputs@c,w
 14228  281D  00A0               	movwf	??_fputs
 14229  281E  01A1               	clrf	??_fputs+1
 14230  281F  0820               	movf	??_fputs,w
 14231  2820  00F1               	movwf	fputc@c
 14232  2821  0821               	movf	??_fputs+1,w
 14233  2822  00F2               	movwf	fputc@c+1
 14234  2823  087B               	movf	fputs@fp+1,w
 14235  2824  00F4               	movwf	fputc@fp+1
 14236  2825  087A               	movf	fputs@fp,w
 14237  2826  00F3               	movwf	fputc@fp
 14238  2827  31B6  260F  31A8   	fcall	_fputc
 14239  282A  3001               	movlw	1
 14240  282B  0020               	movlb	0	; select bank0
 14241  282C  07A3               	addwf	fputs@i,f
 14242  282D  3000               	movlw	0
 14243  282E  3DA4               	addwfc	fputs@i+1,f
 14244  282F  280E               	goto	l4340
 14245  2830                     __end_of_fputs:	
 14246                           
 14247                           	psect	text37
 14248  360F                     __ptext37:	
 14249 ;; *************** function _fputc *****************
 14250 ;; Defined at:
 14251 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 14252 ;; Parameters:    Size  Location     Type
 14253 ;;  c               2    1[COMMON] int 
 14254 ;;  fp              2    3[COMMON] PTR struct _IO_FILE
 14255 ;;		 -> vsnprintf@f(6), 
 14256 ;; Auto vars:     Size  Location     Type
 14257 ;;		None
 14258 ;; Return value:  Size  Location     Type
 14259 ;;                  2    1[COMMON] int 
 14260 ;; Registers used:
 14261 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14262 ;; Tracked objects:
 14263 ;;		On entry : 0/0
 14264 ;;		On exit  : 0/0
 14265 ;;		Unchanged: 0/0
 14266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14267 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14269 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14270 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14271 ;;Total ram usage:        9 bytes
 14272 ;; Hardware stack levels used:    1
 14273 ;; Hardware stack levels required when called:    2
 14274 ;; This function calls:
 14275 ;;		_putch
 14276 ;; This function is called by:
 14277 ;;		_pad
 14278 ;;		_stoa
 14279 ;;		_vfpfcnvrt
 14280 ;;		_fputs
 14281 ;; This function uses a non-reentrant model
 14282 ;;
 14283                           
 14284                           
 14285                           ;psect for function _fputc
 14286  360F                     _fputc:	
 14287                           
 14288                           ;incstack = 0
 14289                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14290  360F  0873               	movf	fputc@fp,w
 14291  3610  0474               	iorwf	fputc@fp+1,w
 14292  3611  1903               	btfsc	3,2
 14293  3612  2E17               	goto	l4322
 14294  3613  0873               	movf	fputc@fp,w
 14295  3614  0474               	iorwf	fputc@fp+1,w
 14296  3615  1D03               	btfss	3,2
 14297  3616  2E1B               	goto	l4324
 14298  3617                     l4322:	
 14299  3617  0871               	movf	fputc@c,w
 14300  3618  3187  27FF         	fcall	_putch
 14301  361A  0008               	return
 14302  361B                     l4324:	
 14303  361B  0873               	movf	fputc@fp,w
 14304  361C  0086               	movwf	6
 14305  361D  0874               	movf	fputc@fp+1,w
 14306  361E  0087               	movwf	7
 14307  361F  3144               	addfsr 1,4
 14308  3620  0016               	moviw fsr1++
 14309  3621  0401               	iorwf	1,w
 14310  3622  1903               	btfsc	3,2
 14311  3623  2E42               	goto	l4328
 14312  3624  0873               	movf	fputc@fp,w
 14313  3625  0086               	movwf	6
 14314  3626  0874               	movf	fputc@fp+1,w
 14315  3627  0087               	movwf	7
 14316  3628  3144               	addfsr 1,4
 14317  3629  3F40               	moviw [0]fsr1
 14318  362A  00F5               	movwf	??_fputc
 14319  362B  3F41               	moviw [1]fsr1
 14320  362C  00F6               	movwf	??_fputc+1
 14321  362D  0873               	movf	fputc@fp,w
 14322  362E  0086               	movwf	6
 14323  362F  0874               	movf	fputc@fp+1,w
 14324  3630  0087               	movwf	7
 14325  3631  3142               	addfsr 1,2
 14326  3632  3F40               	moviw [0]fsr1
 14327  3633  00F7               	movwf	??_fputc+2
 14328  3634  3F41               	moviw [1]fsr1
 14329  3635  00F8               	movwf	??_fputc+3
 14330  3636  0878               	movf	??_fputc+3,w
 14331  3637  3A80               	xorlw	128
 14332  3638  00F9               	movwf	??_fputc+4
 14333  3639  0876               	movf	??_fputc+1,w
 14334  363A  3A80               	xorlw	128
 14335  363B  0279               	subwf	??_fputc+4,w
 14336  363C  1D03               	skipz
 14337  363D  2E40               	goto	u4865
 14338  363E  0875               	movf	??_fputc,w
 14339  363F  0277               	subwf	??_fputc+2,w
 14340  3640                     u4865:	
 14341  3640  1803               	skipnc
 14342  3641  0008               	return
 14343  3642                     l4328:	
 14344  3642  0873               	movf	fputc@fp,w
 14345  3643  0086               	movwf	6
 14346  3644  0874               	movf	fputc@fp+1,w
 14347  3645  0087               	movwf	7
 14348  3646  3142               	addfsr 1,2
 14349  3647  0873               	movf	fputc@fp,w
 14350  3648  0084               	movwf	4
 14351  3649  0874               	movf	fputc@fp+1,w
 14352  364A  0085               	movwf	5
 14353  364B  3F40               	moviw [0]fsr1
 14354  364C  0700               	addwf	0,w
 14355  364D  00F5               	movwf	??_fputc
 14356  364E  3101               	addfsr 0,1
 14357  364F  3F41               	moviw [1]fsr1
 14358  3650  3D00               	addwfc	0,w
 14359  3651  00F6               	movwf	??_fputc+1
 14360  3652  0875               	movf	??_fputc,w
 14361  3653  0086               	movwf	6
 14362  3654  0876               	movf	??_fputc+1,w
 14363  3655  0087               	movwf	7
 14364  3656  0871               	movf	fputc@c,w
 14365  3657  0081               	movwf	1
 14366  3658  0873               	movf	fputc@fp,w
 14367  3659  0086               	movwf	6
 14368  365A  0874               	movf	fputc@fp+1,w
 14369  365B  0087               	movwf	7
 14370  365C  3142               	addfsr 1,2
 14371  365D  3001               	movlw	1
 14372  365E  0781               	addwf	1,f
 14373  365F  3141               	addfsr 1,1
 14374  3660  1803               	skipnc
 14375  3661  0A81               	incf	1,f
 14376  3662  0008               	return
 14377  3663                     __end_of_fputc:	
 14378                           
 14379                           	psect	text38
 14380  07FF                     __ptext38:	
 14381 ;; *************** function _putch *****************
 14382 ;; Defined at:
 14383 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
 14384 ;; Parameters:    Size  Location     Type
 14385 ;;  c               1    wreg     unsigned char 
 14386 ;; Auto vars:     Size  Location     Type
 14387 ;;  c               1    0[COMMON] unsigned char 
 14388 ;; Return value:  Size  Location     Type
 14389 ;;                  1    wreg      void 
 14390 ;; Registers used:
 14391 ;;		wreg
 14392 ;; Tracked objects:
 14393 ;;		On entry : 0/0
 14394 ;;		On exit  : 0/0
 14395 ;;		Unchanged: 0/0
 14396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14401 ;;Total ram usage:        0 bytes
 14402 ;; Hardware stack levels used:    1
 14403 ;; Hardware stack levels required when called:    1
 14404 ;; This function calls:
 14405 ;;		Nothing
 14406 ;; This function is called by:
 14407 ;;		_fputc
 14408 ;; This function uses a non-reentrant model
 14409 ;;
 14410                           
 14411                           
 14412                           ;psect for function _putch
 14413  07FF                     _putch:	
 14414                           
 14415                           ;incstack = 0
 14416                           ; Regs used in _putch: [wreg]
 14417  07FF  0008               	return
 14418  0800                     __end_of_putch:	
 14419                           
 14420                           	psect	text39
 14421  2BC8                     __ptext39:	
 14422 ;; *************** function _atoi *****************
 14423 ;; Defined at:
 14424 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 14425 ;; Parameters:    Size  Location     Type
 14426 ;;  s               2    7[COMMON] PTR const unsigned char 
 14427 ;;		 -> STR_24(18), STR_23(18), STR_22(19), STR_21(20), 
 14428 ;;		 -> STR_20(20), STR_19(21), STR_18(21), STR_17(21), 
 14429 ;;		 -> STR_16(22), STR_15(22), STR_14(21), STR_13(21), 
 14430 ;;		 -> STR_8(57), STR_7(44), STR_6(42), STR_3(43), 
 14431 ;; Auto vars:     Size  Location     Type
 14432 ;;  n               2   11[BANK0 ] int 
 14433 ;;  neg             2    4[BANK0 ] int 
 14434 ;; Return value:  Size  Location     Type
 14435 ;;                  2    7[COMMON] int 
 14436 ;; Registers used:
 14437 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14438 ;; Tracked objects:
 14439 ;;		On entry : 0/0
 14440 ;;		On exit  : 0/0
 14441 ;;		Unchanged: 0/0
 14442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14443 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14444 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14445 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14446 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14447 ;;Total ram usage:       15 bytes
 14448 ;; Hardware stack levels used:    1
 14449 ;; Hardware stack levels required when called:    2
 14450 ;; This function calls:
 14451 ;;		___wmul
 14452 ;;		_isdigit
 14453 ;;		_isspace
 14454 ;; This function is called by:
 14455 ;;		_vfpfcnvrt
 14456 ;; This function uses a non-reentrant model
 14457 ;;
 14458                           
 14459                           
 14460                           ;psect for function _atoi
 14461  2BC8                     _atoi:	
 14462                           
 14463                           ;incstack = 0
 14464                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14465  2BC8  0020               	movlb	0	; select bank0
 14466  2BC9  01AB               	clrf	atoi@n
 14467  2BCA  01AC               	clrf	atoi@n+1
 14468  2BCB  01A4               	clrf	atoi@neg
 14469  2BCC  01A5               	clrf	atoi@neg+1
 14470  2BCD                     l7858:	
 14471  2BCD  01AA               	clrf	_atoi$1617
 14472  2BCE  0AAA               	incf	_atoi$1617,f
 14473  2BCF  0877               	movf	atoi@s,w
 14474  2BD0  0084               	movwf	4
 14475  2BD1  0878               	movf	atoi@s+1,w
 14476  2BD2  0085               	movwf	5
 14477  2BD3  0012               	moviw fsr0++
 14478  2BD4  3A20               	xorlw	32
 14479  2BD5  1903               	btfsc	3,2
 14480  2BD6  2BE9               	goto	l7866
 14481  2BD7  0877               	movf	atoi@s,w
 14482  2BD8  0084               	movwf	4
 14483  2BD9  0878               	movf	atoi@s+1,w
 14484  2BDA  0085               	movwf	5
 14485  2BDB  0800               	movf	0,w	;code access
 14486  2BDC  3EF7               	addlw	247
 14487  2BDD  00A0               	movwf	??_atoi
 14488  2BDE  30FF               	movlw	255
 14489  2BDF  1803               	skipnc
 14490  2BE0  3000               	movlw	0
 14491  2BE1  00A1               	movwf	??_atoi+1
 14492  2BE2  3000               	movlw	0
 14493  2BE3  0221               	subwf	??_atoi+1,w
 14494  2BE4  3005               	movlw	5
 14495  2BE5  1903               	skipnz
 14496  2BE6  0220               	subwf	??_atoi,w
 14497  2BE7  1803               	btfsc	3,0
 14498  2BE8  01AA               	clrf	_atoi$1617
 14499  2BE9                     l7866:	
 14500  2BE9  082A               	movf	_atoi$1617,w
 14501  2BEA  00A0               	movwf	??_atoi
 14502  2BEB  01A1               	clrf	??_atoi+1
 14503  2BEC  0820               	movf	??_atoi,w
 14504  2BED  00A6               	movwf	_atoi$1616
 14505  2BEE  0821               	movf	??_atoi+1,w
 14506  2BEF  00A7               	movwf	_atoi$1616+1
 14507  2BF0  0826               	movf	_atoi$1616,w
 14508  2BF1  0427               	iorwf	_atoi$1616+1,w
 14509  2BF2  1903               	btfsc	3,2
 14510  2BF3  2BFE               	goto	l7874
 14511  2BF4  3001               	movlw	1
 14512  2BF5  07F7               	addwf	atoi@s,f
 14513  2BF6  3000               	movlw	0
 14514  2BF7  3DF8               	addwfc	atoi@s+1,f
 14515  2BF8  2BCD               	goto	l7858
 14516  2BF9                     l7872:	
 14517  2BF9  3001               	movlw	1
 14518  2BFA  00A4               	movwf	atoi@neg
 14519  2BFB  3000               	movlw	0
 14520  2BFC  00A5               	movwf	atoi@neg+1
 14521  2BFD  2C31               	goto	l1370
 14522  2BFE                     l7874:	
 14523  2BFE  0877               	movf	atoi@s,w
 14524  2BFF  0084               	movwf	4
 14525  2C00  0878               	movf	atoi@s+1,w
 14526  2C01  0085               	movwf	5
 14527  2C02  0800               	movf	0,w	;code access
 14528  2C03  00A0               	movwf	??_atoi
 14529  2C04  01A1               	clrf	??_atoi+1
 14530                           
 14531                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14532                           ; Switch size 1, requested type "simple"
 14533                           ; Number of cases is 1, Range of values is 0 to 0
 14534                           ; switch strategies available:
 14535                           ; Name         Instructions Cycles
 14536                           ; simple_byte            4     3 (average)
 14537                           ; direct_byte            8     6 (fixed)
 14538                           ; jumptable            260     6 (fixed)
 14539                           ;	Chosen strategy is simple_byte
 14540  2C05  0821               	movf	??_atoi+1,w
 14541  2C06  3A00               	xorlw	0	; case 0
 14542  2C07  1903               	skipnz
 14543  2C08  2C0A               	goto	l8828
 14544  2C09  2C35               	goto	l7880
 14545  2C0A                     l8828:	
 14546                           
 14547                           ; Switch size 1, requested type "simple"
 14548                           ; Number of cases is 2, Range of values is 43 to 45
 14549                           ; switch strategies available:
 14550                           ; Name         Instructions Cycles
 14551                           ; simple_byte            7     4 (average)
 14552                           ; direct_byte           15     9 (fixed)
 14553                           ; jumptable            263     9 (fixed)
 14554                           ;	Chosen strategy is simple_byte
 14555  2C0A  0820               	movf	??_atoi,w
 14556  2C0B  3A2B               	xorlw	43	; case 43
 14557  2C0C  1903               	skipnz
 14558  2C0D  2C31               	goto	l1370
 14559  2C0E  3A06               	xorlw	6	; case 45
 14560  2C0F  1903               	skipnz
 14561  2C10  2BF9               	goto	l7872
 14562  2C11  2C35               	goto	l7880
 14563  2C12                     l7876:	
 14564  2C12  0877               	movf	atoi@s,w
 14565  2C13  0084               	movwf	4
 14566  2C14  0878               	movf	atoi@s+1,w
 14567  2C15  0085               	movwf	5
 14568  2C16  0800               	movf	0,w	;code access
 14569  2C17  00A0               	movwf	??_atoi
 14570  2C18  082C               	movf	atoi@n+1,w
 14571  2C19  00F2               	movwf	___wmul@multiplier+1
 14572  2C1A  082B               	movf	atoi@n,w
 14573  2C1B  00F1               	movwf	___wmul@multiplier
 14574  2C1C  300A               	movlw	10
 14575  2C1D  00F3               	movwf	___wmul@multiplicand
 14576  2C1E  3000               	movlw	0
 14577  2C1F  00F4               	movwf	___wmul@multiplicand+1
 14578  2C20  31B1  21F3  31AB   	fcall	___wmul
 14579  2C23  0872               	movf	?___wmul+1,w
 14580  2C24  0020               	movlb	0	; select bank0
 14581  2C25  00A2               	movwf	??_atoi+2
 14582  2C26  0820               	movf	??_atoi,w
 14583  2C27  0271               	subwf	?___wmul,w
 14584  2C28  00A1               	movwf	??_atoi+1
 14585  2C29  1C03               	skipc
 14586  2C2A  03A2               	decf	??_atoi+2,f
 14587  2C2B  0821               	movf	??_atoi+1,w
 14588  2C2C  3E30               	addlw	48
 14589  2C2D  00AB               	movwf	atoi@n
 14590  2C2E  3000               	movlw	0
 14591  2C2F  3D22               	addwfc	??_atoi+2,w
 14592  2C30  00AC               	movwf	atoi@n+1
 14593  2C31                     l1370:	
 14594  2C31  3001               	movlw	1
 14595  2C32  07F7               	addwf	atoi@s,f
 14596  2C33  3000               	movlw	0
 14597  2C34  3DF8               	addwfc	atoi@s+1,f
 14598  2C35                     l7880:	
 14599  2C35  0877               	movf	atoi@s,w
 14600  2C36  0084               	movwf	4
 14601  2C37  0878               	movf	atoi@s+1,w
 14602  2C38  0085               	movwf	5
 14603  2C39  0800               	movf	0,w	;code access
 14604  2C3A  3ED0               	addlw	208
 14605  2C3B  00A0               	movwf	??_atoi
 14606  2C3C  30FF               	movlw	255
 14607  2C3D  1803               	skipnc
 14608  2C3E  3000               	movlw	0
 14609  2C3F  00A1               	movwf	??_atoi+1
 14610  2C40  3000               	movlw	0
 14611  2C41  0221               	subwf	??_atoi+1,w
 14612  2C42  300A               	movlw	10
 14613  2C43  1903               	skipnz
 14614  2C44  0220               	subwf	??_atoi,w
 14615  2C45  1803               	btfsc	3,0
 14616  2C46  2C49               	goto	u11360
 14617  2C47  3001               	movlw	1
 14618  2C48  2C4A               	goto	u11370
 14619  2C49                     u11360:	
 14620  2C49  3000               	movlw	0
 14621  2C4A                     u11370:	
 14622  2C4A  00A2               	movwf	??_atoi+2
 14623  2C4B  01A3               	clrf	??_atoi+3
 14624  2C4C  0822               	movf	??_atoi+2,w
 14625  2C4D  00A8               	movwf	_atoi$1618
 14626  2C4E  0823               	movf	??_atoi+3,w
 14627  2C4F  00A9               	movwf	_atoi$1618+1
 14628  2C50  0828               	movf	_atoi$1618,w
 14629  2C51  0429               	iorwf	_atoi$1618+1,w
 14630  2C52  1D03               	btfss	3,2
 14631  2C53  2C12               	goto	l7876
 14632  2C54  0824               	movf	atoi@neg,w
 14633  2C55  0425               	iorwf	atoi@neg+1,w
 14634  2C56  1D03               	btfss	3,2
 14635  2C57  2C64               	goto	l7890
 14636  2C58  092B               	comf	atoi@n,w
 14637  2C59  00A0               	movwf	??_atoi
 14638  2C5A  092C               	comf	atoi@n+1,w
 14639  2C5B  00A1               	movwf	??_atoi+1
 14640  2C5C  0AA0               	incf	??_atoi,f
 14641  2C5D  1903               	skipnz
 14642  2C5E  0AA1               	incf	??_atoi+1,f
 14643  2C5F  0820               	movf	??_atoi,w
 14644  2C60  00F7               	movwf	?_atoi
 14645  2C61  0821               	movf	??_atoi+1,w
 14646  2C62  00F8               	movwf	?_atoi+1
 14647  2C63  0008               	return
 14648  2C64                     l7890:	
 14649  2C64  082C               	movf	atoi@n+1,w
 14650  2C65  00F8               	movwf	?_atoi+1
 14651  2C66  082B               	movf	atoi@n,w
 14652  2C67  00F7               	movwf	?_atoi
 14653  2C68  0008               	return
 14654  2C69                     __end_of_atoi:	
 14655                           
 14656                           	psect	text40
 14657  2000                     __ptext40:	
 14658 ;; *************** function _isspace *****************
 14659 ;; Defined at:
 14660 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 14661 ;; Parameters:    Size  Location     Type
 14662 ;;  c               2    1[COMMON] int 
 14663 ;; Auto vars:     Size  Location     Type
 14664 ;;		None
 14665 ;; Return value:  Size  Location     Type
 14666 ;;                  2    1[COMMON] int 
 14667 ;; Registers used:
 14668 ;;		wreg, status,2, status,0
 14669 ;; Tracked objects:
 14670 ;;		On entry : 0/0
 14671 ;;		On exit  : 0/0
 14672 ;;		Unchanged: 0/0
 14673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14674 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14675 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14676 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14677 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14678 ;;Total ram usage:        5 bytes
 14679 ;; Hardware stack levels used:    1
 14680 ;; Hardware stack levels required when called:    1
 14681 ;; This function calls:
 14682 ;;		Nothing
 14683 ;; This function is called by:
 14684 ;;		_atoi
 14685 ;; This function uses a non-reentrant model
 14686 ;;
 14687                           
 14688                           
 14689                           ;psect for function _isspace
 14690  2000                     _isspace:	
 14691                           
 14692                           ;incstack = 0
 14693                           ; Regs used in _isspace: [wreg+status,2+status,0]
 14694  2000  01F5               	clrf	_isspace$1656
 14695  2001  0AF5               	incf	_isspace$1656,f
 14696  2002  3020               	movlw	32
 14697  2003  0671               	xorwf	isspace@c,w
 14698  2004  0472               	iorwf	isspace@c+1,w
 14699  2005  1903               	btfsc	3,2
 14700  2006  2814               	goto	l5252
 14701  2007  0871               	movf	isspace@c,w
 14702  2008  3EF7               	addlw	247
 14703  2009  00F3               	movwf	??_isspace
 14704  200A  30FF               	movlw	255
 14705  200B  3D72               	addwfc	isspace@c+1,w
 14706  200C  00F4               	movwf	??_isspace+1
 14707  200D  3000               	movlw	0
 14708  200E  0274               	subwf	??_isspace+1,w
 14709  200F  3005               	movlw	5
 14710  2010  1903               	skipnz
 14711  2011  0273               	subwf	??_isspace,w
 14712  2012  1803               	btfsc	3,0
 14713  2013  01F5               	clrf	_isspace$1656
 14714  2014                     l5252:	
 14715  2014  0875               	movf	_isspace$1656,w
 14716  2015  00F3               	movwf	??_isspace
 14717  2016  01F4               	clrf	??_isspace+1
 14718  2017  0873               	movf	??_isspace,w
 14719  2018  00F1               	movwf	?_isspace
 14720  2019  0874               	movf	??_isspace+1,w
 14721  201A  00F2               	movwf	?_isspace+1
 14722  201B  0008               	return
 14723  201C                     __end_of_isspace:	
 14724                           
 14725                           	psect	text41
 14726  314E                     __ptext41:	
 14727 ;; *************** function _isdigit *****************
 14728 ;; Defined at:
 14729 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 14730 ;; Parameters:    Size  Location     Type
 14731 ;;  c               2    1[COMMON] int 
 14732 ;; Auto vars:     Size  Location     Type
 14733 ;;		None
 14734 ;; Return value:  Size  Location     Type
 14735 ;;                  2    1[COMMON] int 
 14736 ;; Registers used:
 14737 ;;		wreg, status,2, status,0
 14738 ;; Tracked objects:
 14739 ;;		On entry : 0/0
 14740 ;;		On exit  : 0/0
 14741 ;;		Unchanged: 0/0
 14742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14743 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14745 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14746 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14747 ;;Total ram usage:        6 bytes
 14748 ;; Hardware stack levels used:    1
 14749 ;; Hardware stack levels required when called:    1
 14750 ;; This function calls:
 14751 ;;		Nothing
 14752 ;; This function is called by:
 14753 ;;		_vfpfcnvrt
 14754 ;;		_atoi
 14755 ;; This function uses a non-reentrant model
 14756 ;;
 14757                           
 14758                           
 14759                           ;psect for function _isdigit
 14760  314E                     _isdigit:	
 14761                           
 14762                           ;incstack = 0
 14763                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 14764  314E  0871               	movf	isdigit@c,w
 14765  314F  3ED0               	addlw	208
 14766  3150  00F3               	movwf	??_isdigit
 14767  3151  30FF               	movlw	255
 14768  3152  3D72               	addwfc	isdigit@c+1,w
 14769  3153  00F4               	movwf	??_isdigit+1
 14770  3154  3000               	movlw	0
 14771  3155  0274               	subwf	??_isdigit+1,w
 14772  3156  300A               	movlw	10
 14773  3157  1903               	skipnz
 14774  3158  0273               	subwf	??_isdigit,w
 14775  3159  1803               	btfsc	3,0
 14776  315A  295D               	goto	u5720
 14777  315B  3001               	movlw	1
 14778  315C  295E               	goto	u5730
 14779  315D                     u5720:	
 14780  315D  3000               	movlw	0
 14781  315E                     u5730:	
 14782  315E  00F5               	movwf	??_isdigit+2
 14783  315F  01F6               	clrf	??_isdigit+3
 14784  3160  0875               	movf	??_isdigit+2,w
 14785  3161  00F1               	movwf	?_isdigit
 14786  3162  0876               	movf	??_isdigit+3,w
 14787  3163  00F2               	movwf	?_isdigit+1
 14788  3164  0008               	return
 14789  3165                     __end_of_isdigit:	
 14790                           
 14791                           	psect	text42
 14792  31D9                     __ptext42:	
 14793 ;; *************** function _EUSART_Write_Text *****************
 14794 ;; Defined at:
 14795 ;;		line 75 in file "EUSART.c"
 14796 ;; Parameters:    Size  Location     Type
 14797 ;;  text            2    2[COMMON] PTR unsigned char 
 14798 ;;		 -> STR_25(3), STR_12(3), STR_11(38), STR_10(45), 
 14799 ;;		 -> STR_9(42), STR_5(3), STR_4(53), messageBuffer(127), 
 14800 ;;		 -> STR_2(46), STR_1(40), 
 14801 ;; Auto vars:     Size  Location     Type
 14802 ;;  i               2    5[COMMON] int 
 14803 ;; Return value:  Size  Location     Type
 14804 ;;                  1    wreg      void 
 14805 ;; Registers used:
 14806 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14807 ;; Tracked objects:
 14808 ;;		On entry : 0/0
 14809 ;;		On exit  : 0/0
 14810 ;;		Unchanged: 0/0
 14811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14812 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14813 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14814 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14815 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14816 ;;Total ram usage:        5 bytes
 14817 ;; Hardware stack levels used:    1
 14818 ;; Hardware stack levels required when called:    2
 14819 ;; This function calls:
 14820 ;;		_EUSART_Write
 14821 ;; This function is called by:
 14822 ;;		_statemachine
 14823 ;;		_printotAFERegisters
 14824 ;; This function uses a non-reentrant model
 14825 ;;
 14826                           
 14827                           
 14828                           ;psect for function _EUSART_Write_Text
 14829  31D9                     _EUSART_Write_Text:	
 14830                           
 14831                           ;EUSART.c: 75: void EUSART_Write_Text(char *text);EUSART.c: 76: {;EUSART.c: 77:   int i;
      +                          ;EUSART.c: 78:   for(i=0;text[i]!='\0';i++)
 14832                           
 14833                           ;incstack = 0
 14834                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14835  31D9  01F5               	clrf	EUSART_Write_Text@i
 14836  31DA  01F6               	clrf	EUSART_Write_Text@i+1
 14837  31DB                     l6544:	
 14838  31DB  0872               	movf	EUSART_Write_Text@text,w
 14839  31DC  0775               	addwf	EUSART_Write_Text@i,w
 14840  31DD  0084               	movwf	4
 14841  31DE  0873               	movf	EUSART_Write_Text@text+1,w
 14842  31DF  3D76               	addwfc	EUSART_Write_Text@i+1,w
 14843  31E0  0085               	movwf	5
 14844  31E1  0012               	moviw fsr0++
 14845  31E2  1903               	btfsc	3,2
 14846  31E3  0008               	return
 14847                           
 14848                           ;EUSART.c: 79:    EUSART_Write(text[i]);
 14849  31E4  0872               	movf	EUSART_Write_Text@text,w
 14850  31E5  0775               	addwf	EUSART_Write_Text@i,w
 14851  31E6  0084               	movwf	4
 14852  31E7  0873               	movf	EUSART_Write_Text@text+1,w
 14853  31E8  3D76               	addwfc	EUSART_Write_Text@i+1,w
 14854  31E9  0085               	movwf	5
 14855  31EA  0800               	movf	0,w	;code access
 14856  31EB  31B0  20E7  31B1   	fcall	_EUSART_Write
 14857  31EE  3001               	movlw	1
 14858  31EF  07F5               	addwf	EUSART_Write_Text@i,f
 14859  31F0  3000               	movlw	0
 14860  31F1  3DF6               	addwfc	EUSART_Write_Text@i+1,f
 14861  31F2  29DB               	goto	l6544
 14862  31F3                     __end_of_EUSART_Write_Text:	
 14863                           
 14864                           	psect	text43
 14865  30E7                     __ptext43:	
 14866 ;; *************** function _EUSART_Write *****************
 14867 ;; Defined at:
 14868 ;;		line 56 in file "EUSART.c"
 14869 ;; Parameters:    Size  Location     Type
 14870 ;;  txData          1    wreg     unsigned char 
 14871 ;; Auto vars:     Size  Location     Type
 14872 ;;  txData          1    1[COMMON] unsigned char 
 14873 ;; Return value:  Size  Location     Type
 14874 ;;                  1    wreg      void 
 14875 ;; Registers used:
 14876 ;;		wreg
 14877 ;; Tracked objects:
 14878 ;;		On entry : 0/0
 14879 ;;		On exit  : 0/0
 14880 ;;		Unchanged: 0/0
 14881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14883 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14885 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14886 ;;Total ram usage:        1 bytes
 14887 ;; Hardware stack levels used:    1
 14888 ;; Hardware stack levels required when called:    1
 14889 ;; This function calls:
 14890 ;;		Nothing
 14891 ;; This function is called by:
 14892 ;;		_EUSART_Write_Text
 14893 ;; This function uses a non-reentrant model
 14894 ;;
 14895                           
 14896                           
 14897                           ;psect for function _EUSART_Write
 14898  30E7                     _EUSART_Write:	
 14899                           
 14900                           ;incstack = 0
 14901                           ; Regs used in _EUSART_Write: [wreg]
 14902                           ;EUSART_Write@txData stored from wreg
 14903  30E7  00F1               	movwf	EUSART_Write@txData
 14904  30E8                     l229:	
 14905                           ;EUSART.c: 59:     {;EUSART.c: 60:     }
 14906                           
 14907                           
 14908                           ;EUSART.c: 58:     while(0 == PIR1bits.TXIF)
 14909  30E8  0020               	movlb	0	; select bank0
 14910  30E9  1E11               	btfss	17,4	;volatile
 14911  30EA  28E8               	goto	l229
 14912                           
 14913                           ;EUSART.c: 62:     TX1REG = txData;
 14914  30EB  0871               	movf	EUSART_Write@txData,w
 14915  30EC  0023               	movlb	3	; select bank3
 14916  30ED  009A               	movwf	26	;volatile
 14917  30EE  0008               	return
 14918  30EF                     __end_of_EUSART_Write:	
 14919                           
 14920                           	psect	text44
 14921  3663                     __ptext44:	
 14922 ;; *************** function _init_AFE *****************
 14923 ;; Defined at:
 14924 ;;		line 3 in file "BQ76920.c"
 14925 ;; Parameters:    Size  Location     Type
 14926 ;;		None
 14927 ;; Auto vars:     Size  Location     Type
 14928 ;;		None
 14929 ;; Return value:  Size  Location     Type
 14930 ;;                  1    wreg      void 
 14931 ;; Registers used:
 14932 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14933 ;; Tracked objects:
 14934 ;;		On entry : 0/0
 14935 ;;		On exit  : 0/0
 14936 ;;		Unchanged: 0/0
 14937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14942 ;;Total ram usage:        0 bytes
 14943 ;; Hardware stack levels used:    1
 14944 ;; Hardware stack levels required when called:    4
 14945 ;; This function calls:
 14946 ;;		_setCellOvervoltageProtection
 14947 ;;		_setCellUndervoltageProtection
 14948 ;;		_setOverCurrentDischargeProtection
 14949 ;;		_setShortCircuitProtection
 14950 ;;		_setShuntResistorValue
 14951 ;;		_setTemperatureLimitsint
 14952 ;; This function is called by:
 14953 ;;		_statemachine
 14954 ;; This function uses a non-reentrant model
 14955 ;;
 14956                           
 14957                           
 14958                           ;psect for function _init_AFE
 14959  3663                     _init_AFE:	
 14960                           
 14961                           ;BQ76920.c: 5:     setTemperatureLimitsint(-20, 45, 0, 45);
 14962                           
 14963                           ;incstack = 0
 14964                           ; Regs used in _init_AFE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14965  3663  30EC               	movlw	236
 14966  3664  0020               	movlb	0	; select bank0
 14967  3665  00A0               	movwf	setTemperatureLimitsint@minDischarge_degC
 14968  3666  30FF               	movlw	255
 14969  3667  00A1               	movwf	setTemperatureLimitsint@minDischarge_degC+1
 14970  3668  302D               	movlw	45
 14971  3669  00A2               	movwf	setTemperatureLimitsint@maxDischarge_degC
 14972  366A  3000               	movlw	0
 14973  366B  00A3               	movwf	setTemperatureLimitsint@maxDischarge_degC+1
 14974  366C  3000               	movlw	0
 14975  366D  00A4               	movwf	setTemperatureLimitsint@minCharge_degC
 14976  366E  00A5               	movwf	setTemperatureLimitsint@minCharge_degC+1
 14977  366F  302D               	movlw	45
 14978  3670  00A6               	movwf	setTemperatureLimitsint@maxCharge_degC
 14979  3671  3000               	movlw	0
 14980  3672  00A7               	movwf	setTemperatureLimitsint@maxCharge_degC+1
 14981  3673  31B3  23FB  31B6   	fcall	_setTemperatureLimitsint
 14982                           
 14983                           ;BQ76920.c: 6:     setShuntResistorValue(0.02);
 14984  3676  303C               	movlw	60
 14985  3677  00F4               	movwf	setShuntResistorValue@res_mOhm+3
 14986  3678  30A3               	movlw	163
 14987  3679  00F3               	movwf	setShuntResistorValue@res_mOhm+2
 14988  367A  30D7               	movlw	215
 14989  367B  00F2               	movwf	setShuntResistorValue@res_mOhm+1
 14990  367C  300A               	movlw	10
 14991  367D  00F1               	movwf	setShuntResistorValue@res_mOhm
 14992  367E  31A8  2000  31B6   	fcall	_setShuntResistorValue
 14993                           
 14994                           ;BQ76920.c: 7:     setShortCircuitProtection(2500, 200);
 14995  3681  3000               	movlw	0
 14996  3682  0020               	movlb	0	; select bank0
 14997  3683  00E9               	movwf	setShortCircuitProtection@current_mA+3
 14998  3684  3000               	movlw	0
 14999  3685  00E8               	movwf	setShortCircuitProtection@current_mA+2
 15000  3686  3009               	movlw	9
 15001  3687  00E7               	movwf	setShortCircuitProtection@current_mA+1
 15002  3688  30C4               	movlw	196
 15003  3689  00E6               	movwf	setShortCircuitProtection@current_mA
 15004  368A  30C8               	movlw	200
 15005  368B  00EA               	movwf	setShortCircuitProtection@delay_us
 15006  368C  3000               	movlw	0
 15007  368D  00EB               	movwf	setShortCircuitProtection@delay_us+1
 15008  368E  3186  26D5  31B6   	fcall	_setShortCircuitProtection
 15009                           
 15010                           ;BQ76920.c: 9:     setOverCurrentDischargeProtection(20000, 320);
 15011  3691  3000               	movlw	0
 15012  3692  0020               	movlb	0	; select bank0
 15013  3693  00E9               	movwf	setOverCurrentDischargeProtection@current_mA+3
 15014  3694  3000               	movlw	0
 15015  3695  00E8               	movwf	setOverCurrentDischargeProtection@current_mA+2
 15016  3696  304E               	movlw	78
 15017  3697  00E7               	movwf	setOverCurrentDischargeProtection@current_mA+1
 15018  3698  3020               	movlw	32
 15019  3699  00E6               	movwf	setOverCurrentDischargeProtection@current_mA
 15020  369A  3040               	movlw	64
 15021  369B  00EA               	movwf	setOverCurrentDischargeProtection@delay_ms
 15022  369C  3001               	movlw	1
 15023  369D  00EB               	movwf	setOverCurrentDischargeProtection@delay_ms+1
 15024  369E  3199  2131  31B6   	fcall	_setOverCurrentDischargeProtection
 15025                           
 15026                           ;BQ76920.c: 10:     setCellUndervoltageProtection(2900, 2);
 15027  36A1  3054               	movlw	84
 15028  36A2  0020               	movlb	0	; select bank0
 15029  36A3  00B2               	movwf	setCellUndervoltageProtection@voltage_mV
 15030  36A4  300B               	movlw	11
 15031  36A5  00B3               	movwf	setCellUndervoltageProtection@voltage_mV+1
 15032  36A6  3002               	movlw	2
 15033  36A7  00B4               	movwf	setCellUndervoltageProtection@delay_s
 15034  36A8  3000               	movlw	0
 15035  36A9  00B5               	movwf	setCellUndervoltageProtection@delay_s+1
 15036  36AA  31A2  229E  31B6   	fcall	_setCellUndervoltageProtection
 15037                           
 15038                           ;BQ76920.c: 11:     setCellOvervoltageProtection(4100,2);
 15039  36AD  3004               	movlw	4
 15040  36AE  0020               	movlb	0	; select bank0
 15041  36AF  00B2               	movwf	setCellOvervoltageProtection@voltage_mV
 15042  36B0  3010               	movlw	16
 15043  36B1  00B3               	movwf	setCellOvervoltageProtection@voltage_mV+1
 15044  36B2  3002               	movlw	2
 15045  36B3  00B4               	movwf	setCellOvervoltageProtection@delay_s
 15046  36B4  3000               	movlw	0
 15047  36B5  00B5               	movwf	setCellOvervoltageProtection@delay_s+1
 15048  36B6  31A0  201C         	fcall	_setCellOvervoltageProtection
 15049  36B8  0008               	return
 15050  36B9                     __end_of_init_AFE:	
 15051                           
 15052                           	psect	text45
 15053  33FB                     __ptext45:	
 15054 ;; *************** function _setTemperatureLimitsint *****************
 15055 ;; Defined at:
 15056 ;;		line 56 in file "BQ76920.c"
 15057 ;; Parameters:    Size  Location     Type
 15058 ;;  minDischarge    2    0[BANK0 ] int 
 15059 ;;  maxDischarge    2    2[BANK0 ] int 
 15060 ;;  minCharge_de    2    4[BANK0 ] int 
 15061 ;;  maxCharge_de    2    6[BANK0 ] int 
 15062 ;; Auto vars:     Size  Location     Type
 15063 ;;		None
 15064 ;; Return value:  Size  Location     Type
 15065 ;;                  1    wreg      void 
 15066 ;; Registers used:
 15067 ;;		wreg, status,2, status,0, pclath, cstack
 15068 ;; Tracked objects:
 15069 ;;		On entry : 0/0
 15070 ;;		On exit  : 0/0
 15071 ;;		Unchanged: 0/0
 15072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15073 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15076 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15077 ;;Total ram usage:        8 bytes
 15078 ;; Hardware stack levels used:    1
 15079 ;; Hardware stack levels required when called:    2
 15080 ;; This function calls:
 15081 ;;		___wmul
 15082 ;; This function is called by:
 15083 ;;		_init_AFE
 15084 ;; This function uses a non-reentrant model
 15085 ;;
 15086                           
 15087                           
 15088                           ;psect for function _setTemperatureLimitsint
 15089  33FB                     _setTemperatureLimitsint:	
 15090                           
 15091                           ;BQ76920.c: 58:     minCellTempDischarge = minDischarge_degC * 10;
 15092                           
 15093                           ;incstack = 0
 15094                           ; Regs used in _setTemperatureLimitsint: [wreg+status,2+status,0+pclath+cstack]
 15095  33FB  0020               	movlb	0	; select bank0
 15096  33FC  0821               	movf	setTemperatureLimitsint@minDischarge_degC+1,w
 15097  33FD  00F2               	movwf	___wmul@multiplier+1
 15098  33FE  0820               	movf	setTemperatureLimitsint@minDischarge_degC,w
 15099  33FF  00F1               	movwf	___wmul@multiplier
 15100  3400  300A               	movlw	10
 15101  3401  00F3               	movwf	___wmul@multiplicand
 15102  3402  3000               	movlw	0
 15103  3403  00F4               	movwf	___wmul@multiplicand+1
 15104  3404  31B1  21F3  31B3   	fcall	___wmul
 15105  3407  0872               	movf	?___wmul+1,w
 15106  3408  0023               	movlb	3	; select bank3
 15107  3409  00CD               	movwf	(_minCellTempDischarge+1)^(0+384)
 15108  340A  0871               	movf	?___wmul,w
 15109  340B  00CC               	movwf	_minCellTempDischarge^(0+384)
 15110                           
 15111                           ;BQ76920.c: 59:     maxCellTempDischarge = maxDischarge_degC * 10;
 15112  340C  0020               	movlb	0	; select bank0
 15113  340D  0823               	movf	setTemperatureLimitsint@maxDischarge_degC+1,w
 15114  340E  00F2               	movwf	___wmul@multiplier+1
 15115  340F  0822               	movf	setTemperatureLimitsint@maxDischarge_degC,w
 15116  3410  00F1               	movwf	___wmul@multiplier
 15117  3411  300A               	movlw	10
 15118  3412  00F3               	movwf	___wmul@multiplicand
 15119  3413  3000               	movlw	0
 15120  3414  00F4               	movwf	___wmul@multiplicand+1
 15121  3415  31B1  21F3  31B3   	fcall	___wmul
 15122  3418  0872               	movf	?___wmul+1,w
 15123  3419  0023               	movlb	3	; select bank3
 15124  341A  00C9               	movwf	(_maxCellTempDischarge+1)^(0+384)
 15125  341B  0871               	movf	?___wmul,w
 15126  341C  00C8               	movwf	_maxCellTempDischarge^(0+384)
 15127                           
 15128                           ;BQ76920.c: 60:     minCellTempCharge = minCharge_degC * 10;
 15129  341D  0020               	movlb	0	; select bank0
 15130  341E  0825               	movf	setTemperatureLimitsint@minCharge_degC+1,w
 15131  341F  00F2               	movwf	___wmul@multiplier+1
 15132  3420  0824               	movf	setTemperatureLimitsint@minCharge_degC,w
 15133  3421  00F1               	movwf	___wmul@multiplier
 15134  3422  300A               	movlw	10
 15135  3423  00F3               	movwf	___wmul@multiplicand
 15136  3424  3000               	movlw	0
 15137  3425  00F4               	movwf	___wmul@multiplicand+1
 15138  3426  31B1  21F3  31B3   	fcall	___wmul
 15139  3429  0872               	movf	?___wmul+1,w
 15140  342A  0023               	movlb	3	; select bank3
 15141  342B  00CF               	movwf	(_minCellTempCharge+1)^(0+384)
 15142  342C  0871               	movf	?___wmul,w
 15143  342D  00CE               	movwf	_minCellTempCharge^(0+384)
 15144                           
 15145                           ;BQ76920.c: 61:     maxCellTempCharge = maxCharge_degC * 10;
 15146  342E  0020               	movlb	0	; select bank0
 15147  342F  0827               	movf	setTemperatureLimitsint@maxCharge_degC+1,w
 15148  3430  00F2               	movwf	___wmul@multiplier+1
 15149  3431  0826               	movf	setTemperatureLimitsint@maxCharge_degC,w
 15150  3432  00F1               	movwf	___wmul@multiplier
 15151  3433  300A               	movlw	10
 15152  3434  00F3               	movwf	___wmul@multiplicand
 15153  3435  3000               	movlw	0
 15154  3436  00F4               	movwf	___wmul@multiplicand+1
 15155  3437  31B1  21F3         	fcall	___wmul
 15156  3439  0872               	movf	?___wmul+1,w
 15157  343A  0023               	movlb	3	; select bank3
 15158  343B  00CB               	movwf	(_maxCellTempCharge+1)^(0+384)
 15159  343C  0871               	movf	?___wmul,w
 15160  343D  00CA               	movwf	_maxCellTempCharge^(0+384)
 15161  343E  0008               	return
 15162  343F                     __end_of_setTemperatureLimitsint:	
 15163                           
 15164                           	psect	text46
 15165  31F3                     __ptext46:	
 15166 ;; *************** function ___wmul *****************
 15167 ;; Defined at:
 15168 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 15169 ;; Parameters:    Size  Location     Type
 15170 ;;  multiplier      2    1[COMMON] unsigned int 
 15171 ;;  multiplicand    2    3[COMMON] unsigned int 
 15172 ;; Auto vars:     Size  Location     Type
 15173 ;;  product         2    5[COMMON] unsigned int 
 15174 ;; Return value:  Size  Location     Type
 15175 ;;                  2    1[COMMON] unsigned int 
 15176 ;; Registers used:
 15177 ;;		wreg, status,2, status,0
 15178 ;; Tracked objects:
 15179 ;;		On entry : 0/0
 15180 ;;		On exit  : 0/0
 15181 ;;		Unchanged: 0/0
 15182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15183 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15184 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15186 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15187 ;;Total ram usage:        6 bytes
 15188 ;; Hardware stack levels used:    1
 15189 ;; Hardware stack levels required when called:    1
 15190 ;; This function calls:
 15191 ;;		Nothing
 15192 ;; This function is called by:
 15193 ;;		_setTemperatureLimitsint
 15194 ;;		_atoi
 15195 ;; This function uses a non-reentrant model
 15196 ;;
 15197                           
 15198                           
 15199                           ;psect for function ___wmul
 15200  31F3                     ___wmul:	
 15201                           
 15202                           ;incstack = 0
 15203                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 15204  31F3  01F5               	clrf	___wmul@product
 15205  31F4  01F6               	clrf	___wmul@product+1
 15206  31F5                     l4682:	
 15207  31F5  1C71               	btfss	___wmul@multiplier,0
 15208  31F6  29FB               	goto	l884
 15209  31F7  0873               	movf	___wmul@multiplicand,w
 15210  31F8  07F5               	addwf	___wmul@product,f
 15211  31F9  0874               	movf	___wmul@multiplicand+1,w
 15212  31FA  3DF6               	addwfc	___wmul@product+1,f
 15213  31FB                     l884:	
 15214  31FB  3001               	movlw	1
 15215  31FC                     u5755:	
 15216  31FC  35F3               	lslf	___wmul@multiplicand,f
 15217  31FD  0DF4               	rlf	___wmul@multiplicand+1,f
 15218  31FE  0B89               	decfsz	9,f
 15219  31FF  29FC               	goto	u5755
 15220  3200  3001               	movlw	1
 15221  3201                     u5765:	
 15222  3201  36F2               	lsrf	___wmul@multiplier+1,f
 15223  3202  0CF1               	rrf	___wmul@multiplier,f
 15224  3203  0B89               	decfsz	9,f
 15225  3204  2A01               	goto	u5765
 15226  3205  0871               	movf	___wmul@multiplier,w
 15227  3206  0472               	iorwf	___wmul@multiplier+1,w
 15228  3207  1D03               	btfss	3,2
 15229  3208  29F5               	goto	l4682
 15230  3209  0876               	movf	___wmul@product+1,w
 15231  320A  00F2               	movwf	?___wmul+1
 15232  320B  0875               	movf	___wmul@product,w
 15233  320C  00F1               	movwf	?___wmul
 15234  320D  0008               	return
 15235  320E                     __end_of___wmul:	
 15236                           
 15237                           	psect	text47
 15238  2800                     __ptext47:	
 15239 ;; *************** function _setShuntResistorValue *****************
 15240 ;; Defined at:
 15241 ;;		line 68 in file "BQ76920.c"
 15242 ;; Parameters:    Size  Location     Type
 15243 ;;  res_mOhm        4    1[COMMON] float 
 15244 ;; Auto vars:     Size  Location     Type
 15245 ;;		None
 15246 ;; Return value:  Size  Location     Type
 15247 ;;                  1    wreg      void 
 15248 ;; Registers used:
 15249 ;;		wreg
 15250 ;; Tracked objects:
 15251 ;;		On entry : 0/0
 15252 ;;		On exit  : 0/0
 15253 ;;		Unchanged: 0/0
 15254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15255 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15258 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15259 ;;Total ram usage:        4 bytes
 15260 ;; Hardware stack levels used:    1
 15261 ;; Hardware stack levels required when called:    1
 15262 ;; This function calls:
 15263 ;;		Nothing
 15264 ;; This function is called by:
 15265 ;;		_init_AFE
 15266 ;; This function uses a non-reentrant model
 15267 ;;
 15268                           
 15269                           
 15270                           ;psect for function _setShuntResistorValue
 15271  2800                     _setShuntResistorValue:	
 15272                           
 15273                           ;BQ76920.c: 69:     shuntResistorValue_mOhm = res_mOhm;
 15274                           
 15275                           ;incstack = 0
 15276                           ; Regs used in _setShuntResistorValue: [wreg]
 15277  2800  0874               	movf	setShuntResistorValue@res_mOhm+3,w
 15278  2801  0023               	movlb	3	; select bank3
 15279  2802  00B5               	movwf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384)
 15280  2803  0873               	movf	setShuntResistorValue@res_mOhm+2,w
 15281  2804  00B4               	movwf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384)
 15282  2805  0872               	movf	setShuntResistorValue@res_mOhm+1,w
 15283  2806  00B3               	movwf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384)
 15284  2807  0871               	movf	setShuntResistorValue@res_mOhm,w
 15285  2808  00B2               	movwf	BQ76920@shuntResistorValue_mOhm^(0+384)
 15286  2809  0008               	return
 15287  280A                     __end_of_setShuntResistorValue:	
 15288                           
 15289                           	psect	text48
 15290  06D5                     __ptext48:	
 15291 ;; *************** function _setShortCircuitProtection *****************
 15292 ;; Defined at:
 15293 ;;		line 76 in file "BQ76920.c"
 15294 ;; Parameters:    Size  Location     Type
 15295 ;;  current_mA      4   70[BANK0 ] long 
 15296 ;;  delay_us        2   74[BANK0 ] int 
 15297 ;; Auto vars:     Size  Location     Type
 15298 ;;  i               2   10[BANK1 ] int 
 15299 ;;  i               2    8[BANK1 ] int 
 15300 ;;  scaler          4    0[BANK1 ] float 
 15301 ;; Return value:  Size  Location     Type
 15302 ;;                  1    wreg      void 
 15303 ;; Registers used:
 15304 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15305 ;; Tracked objects:
 15306 ;;		On entry : 0/0
 15307 ;;		On exit  : 0/0
 15308 ;;		Unchanged: 0/0
 15309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15310 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15311 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15312 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15313 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15314 ;;Total ram usage:       21 bytes
 15315 ;; Hardware stack levels used:    1
 15316 ;; Hardware stack levels required when called:    3
 15317 ;; This function calls:
 15318 ;;		_I2C_writeRegister
 15319 ;;		___fldiv
 15320 ;;		___flge
 15321 ;;		___flmul
 15322 ;;		___xxtofl
 15323 ;; This function is called by:
 15324 ;;		_init_AFE
 15325 ;; This function uses a non-reentrant model
 15326 ;;
 15327                           
 15328                           
 15329                           ;psect for function _setShortCircuitProtection
 15330  06D5                     _setShortCircuitProtection:	
 15331                           
 15332                           ;BQ76920.c: 81:     float scaler = 1000.0;
 15333                           
 15334                           ;incstack = 0
 15335                           ; Regs used in _setShortCircuitProtection: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15336  06D5  3044               	movlw	68
 15337  06D6  0021               	movlb	1	; select bank1
 15338  06D7  00A3               	movwf	(setShortCircuitProtection@scaler+3)^(0+128)
 15339  06D8  307A               	movlw	122
 15340  06D9  00A2               	movwf	(setShortCircuitProtection@scaler+2)^(0+128)
 15341  06DA  3000               	movlw	0
 15342  06DB  00A1               	movwf	(setShortCircuitProtection@scaler+1)^(0+128)
 15343  06DC  3000               	movlw	0
 15344  06DD  00A0               	movwf	setShortCircuitProtection@scaler^(0+128)
 15345                           
 15346                           ;BQ76920.c: 82:     protect1.bits.SCD_THRESH = 0;
 15347  06DE  30F8               	movlw	-8
 15348  06DF  0023               	movlb	3	; select bank3
 15349  06E0  05D6               	andwf	BQ76920@protect1^(0+384),f
 15350                           
 15351                           ;BQ76920.c: 83:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 15352  06E1  0021               	movlb	1	; select bank1
 15353  06E2  01A8               	clrf	setShortCircuitProtection@i^(0+128)
 15354  06E3  01A9               	clrf	(setShortCircuitProtection@i+1)^(0+128)
 15355  06E4                     l6576:	
 15356                           
 15357                           ;BQ76920.c: 84:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 15358  06E4  0023               	movlb	3	; select bank3
 15359  06E5  0835               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 15360  06E6  0020               	movlb	0	; select bank0
 15361  06E7  00A9               	movwf	___flmul@b+3
 15362  06E8  0023               	movlb	3	; select bank3
 15363  06E9  0834               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 15364  06EA  0020               	movlb	0	; select bank0
 15365  06EB  00A8               	movwf	___flmul@b+2
 15366  06EC  0023               	movlb	3	; select bank3
 15367  06ED  0833               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 15368  06EE  0020               	movlb	0	; select bank0
 15369  06EF  00A7               	movwf	___flmul@b+1
 15370  06F0  0023               	movlb	3	; select bank3
 15371  06F1  0832               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 15372  06F2  0020               	movlb	0	; select bank0
 15373  06F3  00A6               	movwf	___flmul@b
 15374  06F4  0869               	movf	setShortCircuitProtection@current_mA+3,w
 15375  06F5  00F4               	movwf	___xxtofl@val+3
 15376  06F6  0868               	movf	setShortCircuitProtection@current_mA+2,w
 15377  06F7  00F3               	movwf	___xxtofl@val+2
 15378  06F8  0867               	movf	setShortCircuitProtection@current_mA+1,w
 15379  06F9  00F2               	movwf	___xxtofl@val+1
 15380  06FA  0866               	movf	setShortCircuitProtection@current_mA,w
 15381  06FB  00F1               	movwf	___xxtofl@val
 15382  06FC  3001               	movlw	1
 15383  06FD  31AB  2332  3186   	fcall	___xxtofl
 15384  0700  0874               	movf	?___xxtofl+3,w
 15385  0701  0020               	movlb	0	; select bank0
 15386  0702  00AD               	movwf	___flmul@a+3
 15387  0703  0873               	movf	?___xxtofl+2,w
 15388  0704  00AC               	movwf	___flmul@a+2
 15389  0705  0872               	movf	?___xxtofl+1,w
 15390  0706  00AB               	movwf	___flmul@a+1
 15391  0707  0871               	movf	?___xxtofl,w
 15392  0708  00AA               	movwf	___flmul@a
 15393  0709  3195  25D4  3186   	fcall	___flmul
 15394  070C  0020               	movlb	0	; select bank0
 15395  070D  0829               	movf	?___flmul+3,w
 15396  070E  0021               	movlb	1	; select bank1
 15397  070F  00A7               	movwf	(_setShortCircuitProtection$1985+3)^(0+128)
 15398  0710  0020               	movlb	0	; select bank0
 15399  0711  0828               	movf	?___flmul+2,w
 15400  0712  0021               	movlb	1	; select bank1
 15401  0713  00A6               	movwf	(_setShortCircuitProtection$1985+2)^(0+128)
 15402  0714  0020               	movlb	0	; select bank0
 15403  0715  0827               	movf	?___flmul+1,w
 15404  0716  0021               	movlb	1	; select bank1
 15405  0717  00A5               	movwf	(_setShortCircuitProtection$1985+1)^(0+128)
 15406  0718  0020               	movlb	0	; select bank0
 15407  0719  0826               	movf	?___flmul,w
 15408  071A  0021               	movlb	1	; select bank1
 15409  071B  00A4               	movwf	_setShortCircuitProtection$1985^(0+128)
 15410                           
 15411                           ;BQ76920.c: 84:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 15412  071C  3044               	movlw	68
 15413  071D  0020               	movlb	0	; select bank0
 15414  071E  00C3               	movwf	___fldiv@a+3
 15415  071F  307A               	movlw	122
 15416  0720  00C2               	movwf	___fldiv@a+2
 15417  0721  3000               	movlw	0
 15418  0722  00C1               	movwf	___fldiv@a+1
 15419  0723  3000               	movlw	0
 15420  0724  00C0               	movwf	___fldiv@a
 15421  0725  0021               	movlb	1	; select bank1
 15422  0726  0823               	movf	(setShortCircuitProtection@scaler+3)^(0+128),w
 15423  0727  0020               	movlb	0	; select bank0
 15424  0728  00A9               	movwf	___flmul@b+3
 15425  0729  0021               	movlb	1	; select bank1
 15426  072A  0822               	movf	(setShortCircuitProtection@scaler+2)^(0+128),w
 15427  072B  0020               	movlb	0	; select bank0
 15428  072C  00A8               	movwf	___flmul@b+2
 15429  072D  0021               	movlb	1	; select bank1
 15430  072E  0821               	movf	(setShortCircuitProtection@scaler+1)^(0+128),w
 15431  072F  0020               	movlb	0	; select bank0
 15432  0730  00A7               	movwf	___flmul@b+1
 15433  0731  0021               	movlb	1	; select bank1
 15434  0732  0820               	movf	setShortCircuitProtection@scaler^(0+128),w
 15435  0733  0020               	movlb	0	; select bank0
 15436  0734  00A6               	movwf	___flmul@b
 15437  0735  0021               	movlb	1	; select bank1
 15438  0736  0827               	movf	(_setShortCircuitProtection$1985+3)^(0+128),w
 15439  0737  0020               	movlb	0	; select bank0
 15440  0738  00AD               	movwf	___flmul@a+3
 15441  0739  0021               	movlb	1	; select bank1
 15442  073A  0826               	movf	(_setShortCircuitProtection$1985+2)^(0+128),w
 15443  073B  0020               	movlb	0	; select bank0
 15444  073C  00AC               	movwf	___flmul@a+2
 15445  073D  0021               	movlb	1	; select bank1
 15446  073E  0825               	movf	(_setShortCircuitProtection$1985+1)^(0+128),w
 15447  073F  0020               	movlb	0	; select bank0
 15448  0740  00AB               	movwf	___flmul@a+1
 15449  0741  0021               	movlb	1	; select bank1
 15450  0742  0824               	movf	_setShortCircuitProtection$1985^(0+128),w
 15451  0743  0020               	movlb	0	; select bank0
 15452  0744  00AA               	movwf	___flmul@a
 15453  0745  3195  25D4  3186   	fcall	___flmul
 15454  0748  0020               	movlb	0	; select bank0
 15455  0749  0829               	movf	?___flmul+3,w
 15456  074A  00C7               	movwf	___fldiv@b+3
 15457  074B  0828               	movf	?___flmul+2,w
 15458  074C  00C6               	movwf	___fldiv@b+2
 15459  074D  0827               	movf	?___flmul+1,w
 15460  074E  00C5               	movwf	___fldiv@b+1
 15461  074F  0826               	movf	?___flmul,w
 15462  0750  00C4               	movwf	___fldiv@b
 15463  0751  3190  2052  3186   	fcall	___fldiv
 15464  0754  0020               	movlb	0	; select bank0
 15465  0755  0843               	movf	?___fldiv+3,w
 15466  0756  00DD               	movwf	___flge@ff1+3
 15467  0757  0842               	movf	?___fldiv+2,w
 15468  0758  00DC               	movwf	___flge@ff1+2
 15469  0759  0841               	movf	?___fldiv+1,w
 15470  075A  00DB               	movwf	___flge@ff1+1
 15471  075B  0840               	movf	?___fldiv,w
 15472  075C  00DA               	movwf	___flge@ff1
 15473  075D  0021               	movlb	1	; select bank1
 15474  075E  0829               	movf	(setShortCircuitProtection@i+1)^(0+128),w
 15475  075F  0085               	movwf	5
 15476  0760  0828               	movf	setShortCircuitProtection@i^(0+128),w
 15477  0761  0084               	movwf	4
 15478  0762  3584               	lslf	4,f
 15479  0763  0D85               	rlf	5,f
 15480  0764  30E8               	movlw	low (_SCD_threshold_setting| (0+32768))
 15481  0765  0784               	addwf	4,f
 15482  0766  30BA               	movlw	high (_SCD_threshold_setting| (0+32768))
 15483  0767  3D85               	addwfc	5,f
 15484  0768  3F00               	moviw [0]fsr0
 15485  0769  0020               	movlb	0	; select bank0
 15486  076A  00EC               	movwf	??_setShortCircuitProtection
 15487  076B  3F01               	moviw [1]fsr0
 15488  076C  00ED               	movwf	??_setShortCircuitProtection+1
 15489  076D  086C               	movf	??_setShortCircuitProtection,w
 15490  076E  00F1               	movwf	___xxtofl@val
 15491  076F  086D               	movf	??_setShortCircuitProtection+1,w
 15492  0770  00F2               	movwf	___xxtofl@val+1
 15493  0771  0D89               	rlf	9,f
 15494  0772  3B89               	subwfb	9,f
 15495  0773  0989               	comf	9,f
 15496  0774  00F3               	movwf	___xxtofl@val+2
 15497  0775  00F4               	movwf	___xxtofl@val+3
 15498  0776  3001               	movlw	1
 15499  0777  31AB  2332  3186   	fcall	___xxtofl
 15500  077A  0874               	movf	?___xxtofl+3,w
 15501  077B  0020               	movlb	0	; select bank0
 15502  077C  00E1               	movwf	___flge@ff2+3
 15503  077D  0873               	movf	?___xxtofl+2,w
 15504  077E  00E0               	movwf	___flge@ff2+2
 15505  077F  0872               	movf	?___xxtofl+1,w
 15506  0780  00DF               	movwf	___flge@ff2+1
 15507  0781  0871               	movf	?___xxtofl,w
 15508  0782  00DE               	movwf	___flge@ff2
 15509  0783  31A8  2030  3186   	fcall	___flge
 15510  0786  1C03               	btfss	3,0
 15511  0787  2F90               	goto	l6582
 15512                           
 15513                           ;BQ76920.c: 85:             protect1.bits.SCD_THRESH = i;
 15514  0788  0023               	movlb	3	; select bank3
 15515  0789  0856               	movf	BQ76920@protect1^(0+384),w
 15516  078A  0021               	movlb	1	; select bank1
 15517  078B  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 15518  078C  39F8               	andlw	-8
 15519  078D  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 15520  078E  0023               	movlb	3	; select bank3
 15521  078F  00D6               	movwf	BQ76920@protect1^(0+384)
 15522  0790                     l6582:	
 15523                           
 15524                           ;BQ76920.c: 87:     }
 15525  0790  3001               	movlw	1
 15526  0791  0021               	movlb	1	; select bank1
 15527  0792  07A8               	addwf	setShortCircuitProtection@i^(0+128),f
 15528  0793  3000               	movlw	0
 15529  0794  3DA9               	addwfc	(setShortCircuitProtection@i+1)^(0+128),f
 15530  0795  3000               	movlw	0
 15531  0796  0229               	subwf	(setShortCircuitProtection@i+1)^(0+128),w
 15532  0797  3007               	movlw	7
 15533  0798  1903               	skipnz
 15534  0799  0228               	subwf	setShortCircuitProtection@i^(0+128),w
 15535  079A  1C03               	skipc
 15536  079B  2EE4               	goto	l6576
 15537                           
 15538                           ;BQ76920.c: 89:     protect1.bits.SCD_DELAY = 0;
 15539  079C  30E7               	movlw	-25
 15540  079D  0023               	movlb	3	; select bank3
 15541  079E  05D6               	andwf	BQ76920@protect1^(0+384),f
 15542                           
 15543                           ;BQ76920.c: 90:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 15544  079F  0021               	movlb	1	; select bank1
 15545  07A0  01AA               	clrf	setShortCircuitProtection@i_896^(0+128)
 15546  07A1  01AB               	clrf	(setShortCircuitProtection@i_896+1)^(0+128)
 15547  07A2                     l6594:	
 15548                           
 15549                           ;BQ76920.c: 91:         if (delay_us >= SCD_delay_setting[i]) {
 15550  07A2  082B               	movf	(setShortCircuitProtection@i_896+1)^(0+128),w
 15551  07A3  0085               	movwf	5
 15552  07A4  082A               	movf	setShortCircuitProtection@i_896^(0+128),w
 15553  07A5  0084               	movwf	4
 15554  07A6  3584               	lslf	4,f
 15555  07A7  0D85               	rlf	5,f
 15556  07A8  3008               	movlw	low (_SCD_delay_setting| (0+32768))
 15557  07A9  0784               	addwf	4,f
 15558  07AA  30BB               	movlw	high (_SCD_delay_setting| (0+32768))
 15559  07AB  3D85               	addwfc	5,f
 15560  07AC  3F00               	moviw [0]fsr0
 15561  07AD  0020               	movlb	0	; select bank0
 15562  07AE  00EC               	movwf	??_setShortCircuitProtection
 15563  07AF  3F01               	moviw [1]fsr0
 15564  07B0  00ED               	movwf	??_setShortCircuitProtection+1
 15565  07B1  086B               	movf	setShortCircuitProtection@delay_us+1,w
 15566  07B2  3A80               	xorlw	128
 15567  07B3  00EE               	movwf	??_setShortCircuitProtection+2
 15568  07B4  086D               	movf	??_setShortCircuitProtection+1,w
 15569  07B5  3A80               	xorlw	128
 15570  07B6  026E               	subwf	??_setShortCircuitProtection+2,w
 15571  07B7  1D03               	skipz
 15572  07B8  2FBB               	goto	u9305
 15573  07B9  086C               	movf	??_setShortCircuitProtection,w
 15574  07BA  026A               	subwf	setShortCircuitProtection@delay_us,w
 15575  07BB                     u9305:	
 15576  07BB  1C03               	skipc
 15577  07BC  2FCC               	goto	l6598
 15578                           
 15579                           ;BQ76920.c: 92:             protect1.bits.SCD_DELAY = i;
 15580  07BD  0021               	movlb	1	; select bank1
 15581  07BE  082A               	movf	setShortCircuitProtection@i_896^(0+128),w
 15582  07BF  0020               	movlb	0	; select bank0
 15583  07C0  00EC               	movwf	??_setShortCircuitProtection
 15584  07C1  0DEC               	rlf	??_setShortCircuitProtection,f
 15585  07C2  0DEC               	rlf	??_setShortCircuitProtection,f
 15586  07C3  0DEC               	rlf	??_setShortCircuitProtection,f
 15587  07C4  0023               	movlb	3	; select bank3
 15588  07C5  0856               	movf	BQ76920@protect1^(0+384),w
 15589  07C6  0020               	movlb	0	; select bank0
 15590  07C7  066C               	xorwf	??_setShortCircuitProtection,w
 15591  07C8  39E7               	andlw	-25
 15592  07C9  066C               	xorwf	??_setShortCircuitProtection,w
 15593  07CA  0023               	movlb	3	; select bank3
 15594  07CB  00D6               	movwf	BQ76920@protect1^(0+384)
 15595  07CC                     l6598:	
 15596                           
 15597                           ;BQ76920.c: 94:     }
 15598  07CC  3001               	movlw	1
 15599  07CD  0021               	movlb	1	; select bank1
 15600  07CE  07AA               	addwf	setShortCircuitProtection@i_896^(0+128),f
 15601  07CF  3000               	movlw	0
 15602  07D0  3DAB               	addwfc	(setShortCircuitProtection@i_896+1)^(0+128),f
 15603  07D1  3000               	movlw	0
 15604  07D2  022B               	subwf	(setShortCircuitProtection@i_896+1)^(0+128),w
 15605  07D3  3007               	movlw	7
 15606  07D4  1903               	skipnz
 15607  07D5  022A               	subwf	setShortCircuitProtection@i_896^(0+128),w
 15608  07D6  1C03               	skipc
 15609  07D7  2FA2               	goto	l6594
 15610                           
 15611                           ;BQ76920.c: 96:     I2C_writeRegister(0x18, 0x06, protect1.regByte);
 15612  07D8  3018               	movlw	24
 15613  07D9  00F5               	movwf	I2C_writeRegister@slaveAddress
 15614  07DA  3000               	movlw	0
 15615  07DB  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 15616  07DC  3006               	movlw	6
 15617  07DD  00F7               	movwf	I2C_writeRegister@regAddress
 15618  07DE  3000               	movlw	0
 15619  07DF  00F8               	movwf	I2C_writeRegister@regAddress+1
 15620  07E0  0023               	movlb	3	; select bank3
 15621  07E1  0856               	movf	BQ76920@protect1^(0+384),w
 15622  07E2  0020               	movlb	0	; select bank0
 15623  07E3  00EC               	movwf	??_setShortCircuitProtection
 15624  07E4  01ED               	clrf	??_setShortCircuitProtection+1
 15625  07E5  086C               	movf	??_setShortCircuitProtection,w
 15626  07E6  00F9               	movwf	I2C_writeRegister@data
 15627  07E7  086D               	movf	??_setShortCircuitProtection+1,w
 15628  07E8  00FA               	movwf	I2C_writeRegister@data+1
 15629  07E9  31B2  222B         	fcall	_I2C_writeRegister
 15630  07EB  0008               	return
 15631  07EC                     __end_of_setShortCircuitProtection:	
 15632                           
 15633                           	psect	text49
 15634  1931                     __ptext49:	
 15635 ;; *************** function _setOverCurrentDischargeProtection *****************
 15636 ;; Defined at:
 15637 ;;		line 103 in file "BQ76920.c"
 15638 ;; Parameters:    Size  Location     Type
 15639 ;;  current_mA      4   70[BANK0 ] long 
 15640 ;;  delay_ms        2   74[BANK0 ] int 
 15641 ;; Auto vars:     Size  Location     Type
 15642 ;;  i               2   10[BANK1 ] int 
 15643 ;;  i               2    8[BANK1 ] int 
 15644 ;;  scaler          4    0[BANK1 ] float 
 15645 ;; Return value:  Size  Location     Type
 15646 ;;                  1    wreg      void 
 15647 ;; Registers used:
 15648 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15649 ;; Tracked objects:
 15650 ;;		On entry : 0/0
 15651 ;;		On exit  : 0/0
 15652 ;;		Unchanged: 0/0
 15653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15654 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15655 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15656 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15657 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15658 ;;Total ram usage:       21 bytes
 15659 ;; Hardware stack levels used:    1
 15660 ;; Hardware stack levels required when called:    3
 15661 ;; This function calls:
 15662 ;;		_I2C_writeRegister
 15663 ;;		___fldiv
 15664 ;;		___flge
 15665 ;;		___flmul
 15666 ;;		___xxtofl
 15667 ;; This function is called by:
 15668 ;;		_init_AFE
 15669 ;; This function uses a non-reentrant model
 15670 ;;
 15671                           
 15672                           
 15673                           ;psect for function _setOverCurrentDischargeProtection
 15674  1931                     _setOverCurrentDischargeProtection:	
 15675                           
 15676                           ;BQ76920.c: 106:     float scaler = 1000.0;
 15677                           
 15678                           ;incstack = 0
 15679                           ; Regs used in _setOverCurrentDischargeProtection: [wreg-fsr0h+status,2+status,0+pclath+
      +                          cstack]
 15680  1931  3044               	movlw	68
 15681  1932  0021               	movlb	1	; select bank1
 15682  1933  00A3               	movwf	(setOverCurrentDischargeProtection@scaler+3)^(0+128)
 15683  1934  307A               	movlw	122
 15684  1935  00A2               	movwf	(setOverCurrentDischargeProtection@scaler+2)^(0+128)
 15685  1936  3000               	movlw	0
 15686  1937  00A1               	movwf	(setOverCurrentDischargeProtection@scaler+1)^(0+128)
 15687  1938  3000               	movlw	0
 15688  1939  00A0               	movwf	setOverCurrentDischargeProtection@scaler^(0+128)
 15689                           
 15690                           ;BQ76920.c: 107:     protect2.bits.OCD_THRESH = 0;
 15691  193A  30F0               	movlw	-16
 15692  193B  0023               	movlb	3	; select bank3
 15693  193C  05D5               	andwf	BQ76920@protect2^(0+384),f
 15694                           
 15695                           ;BQ76920.c: 108:     for (int i = 0; i < (sizeof(OCD_threshold_setting) / sizeof((OCD_th
      +                          reshold_setting)[0])) - 1; i++) {
 15696  193D  0021               	movlb	1	; select bank1
 15697  193E  01A8               	clrf	setOverCurrentDischargeProtection@i^(0+128)
 15698  193F  01A9               	clrf	(setOverCurrentDischargeProtection@i+1)^(0+128)
 15699  1940                     l6614:	
 15700                           
 15701                           ;BQ76920.c: 109:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 15702  1940  0023               	movlb	3	; select bank3
 15703  1941  0835               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 15704  1942  0020               	movlb	0	; select bank0
 15705  1943  00A9               	movwf	___flmul@b+3
 15706  1944  0023               	movlb	3	; select bank3
 15707  1945  0834               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 15708  1946  0020               	movlb	0	; select bank0
 15709  1947  00A8               	movwf	___flmul@b+2
 15710  1948  0023               	movlb	3	; select bank3
 15711  1949  0833               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 15712  194A  0020               	movlb	0	; select bank0
 15713  194B  00A7               	movwf	___flmul@b+1
 15714  194C  0023               	movlb	3	; select bank3
 15715  194D  0832               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 15716  194E  0020               	movlb	0	; select bank0
 15717  194F  00A6               	movwf	___flmul@b
 15718  1950  0869               	movf	setOverCurrentDischargeProtection@current_mA+3,w
 15719  1951  00F4               	movwf	___xxtofl@val+3
 15720  1952  0868               	movf	setOverCurrentDischargeProtection@current_mA+2,w
 15721  1953  00F3               	movwf	___xxtofl@val+2
 15722  1954  0867               	movf	setOverCurrentDischargeProtection@current_mA+1,w
 15723  1955  00F2               	movwf	___xxtofl@val+1
 15724  1956  0866               	movf	setOverCurrentDischargeProtection@current_mA,w
 15725  1957  00F1               	movwf	___xxtofl@val
 15726  1958  3001               	movlw	1
 15727  1959  31AB  2332  3199   	fcall	___xxtofl
 15728  195C  0874               	movf	?___xxtofl+3,w
 15729  195D  0020               	movlb	0	; select bank0
 15730  195E  00AD               	movwf	___flmul@a+3
 15731  195F  0873               	movf	?___xxtofl+2,w
 15732  1960  00AC               	movwf	___flmul@a+2
 15733  1961  0872               	movf	?___xxtofl+1,w
 15734  1962  00AB               	movwf	___flmul@a+1
 15735  1963  0871               	movf	?___xxtofl,w
 15736  1964  00AA               	movwf	___flmul@a
 15737  1965  3195  25D4  3199   	fcall	___flmul
 15738  1968  0020               	movlb	0	; select bank0
 15739  1969  0829               	movf	?___flmul+3,w
 15740  196A  0021               	movlb	1	; select bank1
 15741  196B  00A7               	movwf	(_setOverCurrentDischargeProtection$1986+3)^(0+128)
 15742  196C  0020               	movlb	0	; select bank0
 15743  196D  0828               	movf	?___flmul+2,w
 15744  196E  0021               	movlb	1	; select bank1
 15745  196F  00A6               	movwf	(_setOverCurrentDischargeProtection$1986+2)^(0+128)
 15746  1970  0020               	movlb	0	; select bank0
 15747  1971  0827               	movf	?___flmul+1,w
 15748  1972  0021               	movlb	1	; select bank1
 15749  1973  00A5               	movwf	(_setOverCurrentDischargeProtection$1986+1)^(0+128)
 15750  1974  0020               	movlb	0	; select bank0
 15751  1975  0826               	movf	?___flmul,w
 15752  1976  0021               	movlb	1	; select bank1
 15753  1977  00A4               	movwf	_setOverCurrentDischargeProtection$1986^(0+128)
 15754                           
 15755                           ;BQ76920.c: 109:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 15756  1978  3044               	movlw	68
 15757  1979  0020               	movlb	0	; select bank0
 15758  197A  00C3               	movwf	___fldiv@a+3
 15759  197B  307A               	movlw	122
 15760  197C  00C2               	movwf	___fldiv@a+2
 15761  197D  3000               	movlw	0
 15762  197E  00C1               	movwf	___fldiv@a+1
 15763  197F  3000               	movlw	0
 15764  1980  00C0               	movwf	___fldiv@a
 15765  1981  0021               	movlb	1	; select bank1
 15766  1982  0823               	movf	(setOverCurrentDischargeProtection@scaler+3)^(0+128),w
 15767  1983  0020               	movlb	0	; select bank0
 15768  1984  00A9               	movwf	___flmul@b+3
 15769  1985  0021               	movlb	1	; select bank1
 15770  1986  0822               	movf	(setOverCurrentDischargeProtection@scaler+2)^(0+128),w
 15771  1987  0020               	movlb	0	; select bank0
 15772  1988  00A8               	movwf	___flmul@b+2
 15773  1989  0021               	movlb	1	; select bank1
 15774  198A  0821               	movf	(setOverCurrentDischargeProtection@scaler+1)^(0+128),w
 15775  198B  0020               	movlb	0	; select bank0
 15776  198C  00A7               	movwf	___flmul@b+1
 15777  198D  0021               	movlb	1	; select bank1
 15778  198E  0820               	movf	setOverCurrentDischargeProtection@scaler^(0+128),w
 15779  198F  0020               	movlb	0	; select bank0
 15780  1990  00A6               	movwf	___flmul@b
 15781  1991  0021               	movlb	1	; select bank1
 15782  1992  0827               	movf	(_setOverCurrentDischargeProtection$1986+3)^(0+128),w
 15783  1993  0020               	movlb	0	; select bank0
 15784  1994  00AD               	movwf	___flmul@a+3
 15785  1995  0021               	movlb	1	; select bank1
 15786  1996  0826               	movf	(_setOverCurrentDischargeProtection$1986+2)^(0+128),w
 15787  1997  0020               	movlb	0	; select bank0
 15788  1998  00AC               	movwf	___flmul@a+2
 15789  1999  0021               	movlb	1	; select bank1
 15790  199A  0825               	movf	(_setOverCurrentDischargeProtection$1986+1)^(0+128),w
 15791  199B  0020               	movlb	0	; select bank0
 15792  199C  00AB               	movwf	___flmul@a+1
 15793  199D  0021               	movlb	1	; select bank1
 15794  199E  0824               	movf	_setOverCurrentDischargeProtection$1986^(0+128),w
 15795  199F  0020               	movlb	0	; select bank0
 15796  19A0  00AA               	movwf	___flmul@a
 15797  19A1  3195  25D4  3199   	fcall	___flmul
 15798  19A4  0020               	movlb	0	; select bank0
 15799  19A5  0829               	movf	?___flmul+3,w
 15800  19A6  00C7               	movwf	___fldiv@b+3
 15801  19A7  0828               	movf	?___flmul+2,w
 15802  19A8  00C6               	movwf	___fldiv@b+2
 15803  19A9  0827               	movf	?___flmul+1,w
 15804  19AA  00C5               	movwf	___fldiv@b+1
 15805  19AB  0826               	movf	?___flmul,w
 15806  19AC  00C4               	movwf	___fldiv@b
 15807  19AD  3190  2052  3199   	fcall	___fldiv
 15808  19B0  0020               	movlb	0	; select bank0
 15809  19B1  0843               	movf	?___fldiv+3,w
 15810  19B2  00DD               	movwf	___flge@ff1+3
 15811  19B3  0842               	movf	?___fldiv+2,w
 15812  19B4  00DC               	movwf	___flge@ff1+2
 15813  19B5  0841               	movf	?___fldiv+1,w
 15814  19B6  00DB               	movwf	___flge@ff1+1
 15815  19B7  0840               	movf	?___fldiv,w
 15816  19B8  00DA               	movwf	___flge@ff1
 15817  19B9  0021               	movlb	1	; select bank1
 15818  19BA  0829               	movf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 15819  19BB  0085               	movwf	5
 15820  19BC  0828               	movf	setOverCurrentDischargeProtection@i^(0+128),w
 15821  19BD  0084               	movwf	4
 15822  19BE  3584               	lslf	4,f
 15823  19BF  0D85               	rlf	5,f
 15824  19C0  30C4               	movlw	low (_OCD_threshold_setting| (0+32768))
 15825  19C1  0784               	addwf	4,f
 15826  19C2  30B9               	movlw	high (_OCD_threshold_setting| (0+32768))
 15827  19C3  3D85               	addwfc	5,f
 15828  19C4  3F00               	moviw [0]fsr0
 15829  19C5  0020               	movlb	0	; select bank0
 15830  19C6  00EC               	movwf	??_setOverCurrentDischargeProtection
 15831  19C7  3F01               	moviw [1]fsr0
 15832  19C8  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 15833  19C9  086C               	movf	??_setOverCurrentDischargeProtection,w
 15834  19CA  00F1               	movwf	___xxtofl@val
 15835  19CB  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 15836  19CC  00F2               	movwf	___xxtofl@val+1
 15837  19CD  0D89               	rlf	9,f
 15838  19CE  3B89               	subwfb	9,f
 15839  19CF  0989               	comf	9,f
 15840  19D0  00F3               	movwf	___xxtofl@val+2
 15841  19D1  00F4               	movwf	___xxtofl@val+3
 15842  19D2  3001               	movlw	1
 15843  19D3  31AB  2332  3199   	fcall	___xxtofl
 15844  19D6  0874               	movf	?___xxtofl+3,w
 15845  19D7  0020               	movlb	0	; select bank0
 15846  19D8  00E1               	movwf	___flge@ff2+3
 15847  19D9  0873               	movf	?___xxtofl+2,w
 15848  19DA  00E0               	movwf	___flge@ff2+2
 15849  19DB  0872               	movf	?___xxtofl+1,w
 15850  19DC  00DF               	movwf	___flge@ff2+1
 15851  19DD  0871               	movf	?___xxtofl,w
 15852  19DE  00DE               	movwf	___flge@ff2
 15853  19DF  31A8  2030  3199   	fcall	___flge
 15854  19E2  1C03               	btfss	3,0
 15855  19E3  29EC               	goto	l6620
 15856                           
 15857                           ;BQ76920.c: 110:             protect2.bits.OCD_THRESH = i;
 15858  19E4  0023               	movlb	3	; select bank3
 15859  19E5  0855               	movf	BQ76920@protect2^(0+384),w
 15860  19E6  0021               	movlb	1	; select bank1
 15861  19E7  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 15862  19E8  39F0               	andlw	-16
 15863  19E9  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 15864  19EA  0023               	movlb	3	; select bank3
 15865  19EB  00D5               	movwf	BQ76920@protect2^(0+384)
 15866  19EC                     l6620:	
 15867                           
 15868                           ;BQ76920.c: 112:     }
 15869  19EC  3001               	movlw	1
 15870  19ED  0021               	movlb	1	; select bank1
 15871  19EE  07A8               	addwf	setOverCurrentDischargeProtection@i^(0+128),f
 15872  19EF  3000               	movlw	0
 15873  19F0  3DA9               	addwfc	(setOverCurrentDischargeProtection@i+1)^(0+128),f
 15874  19F1  3000               	movlw	0
 15875  19F2  0229               	subwf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 15876  19F3  300F               	movlw	15
 15877  19F4  1903               	skipnz
 15878  19F5  0228               	subwf	setOverCurrentDischargeProtection@i^(0+128),w
 15879  19F6  1C03               	skipc
 15880  19F7  2940               	goto	l6614
 15881                           
 15882                           ;BQ76920.c: 114:     protect2.bits.OCD_DELAY = 0;
 15883  19F8  308F               	movlw	-113
 15884  19F9  0023               	movlb	3	; select bank3
 15885  19FA  05D5               	andwf	BQ76920@protect2^(0+384),f
 15886                           
 15887                           ;BQ76920.c: 115:     for (int i = 0; i < (sizeof(OCD_delay_setting) / sizeof((OCD_delay_
      +                          setting)[0])) - 1; i++) {
 15888  19FB  0021               	movlb	1	; select bank1
 15889  19FC  01AA               	clrf	setOverCurrentDischargeProtection@i_905^(0+128)
 15890  19FD  01AB               	clrf	(setOverCurrentDischargeProtection@i_905+1)^(0+128)
 15891  19FE                     l6632:	
 15892                           
 15893                           ;BQ76920.c: 116:         if (delay_ms >= OCD_delay_setting[i]) {
 15894  19FE  082B               	movf	(setOverCurrentDischargeProtection@i_905+1)^(0+128),w
 15895  19FF  0085               	movwf	5
 15896  1A00  082A               	movf	setOverCurrentDischargeProtection@i_905^(0+128),w
 15897  1A01  0084               	movwf	4
 15898  1A02  3584               	lslf	4,f
 15899  1A03  0D85               	rlf	5,f
 15900  1A04  30D8               	movlw	low (_OCD_delay_setting| (0+32768))
 15901  1A05  0784               	addwf	4,f
 15902  1A06  30BA               	movlw	high (_OCD_delay_setting| (0+32768))
 15903  1A07  3D85               	addwfc	5,f
 15904  1A08  3F00               	moviw [0]fsr0
 15905  1A09  0020               	movlb	0	; select bank0
 15906  1A0A  00EC               	movwf	??_setOverCurrentDischargeProtection
 15907  1A0B  3F01               	moviw [1]fsr0
 15908  1A0C  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 15909  1A0D  086B               	movf	setOverCurrentDischargeProtection@delay_ms+1,w
 15910  1A0E  3A80               	xorlw	128
 15911  1A0F  00EE               	movwf	??_setOverCurrentDischargeProtection+2
 15912  1A10  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 15913  1A11  3A80               	xorlw	128
 15914  1A12  026E               	subwf	??_setOverCurrentDischargeProtection+2,w
 15915  1A13  1D03               	skipz
 15916  1A14  2A17               	goto	u9345
 15917  1A15  086C               	movf	??_setOverCurrentDischargeProtection,w
 15918  1A16  026A               	subwf	setOverCurrentDischargeProtection@delay_ms,w
 15919  1A17                     u9345:	
 15920  1A17  1C03               	skipc
 15921  1A18  2A26               	goto	l6636
 15922                           
 15923                           ;BQ76920.c: 117:             protect2.bits.OCD_DELAY = i;
 15924  1A19  0021               	movlb	1	; select bank1
 15925  1A1A  082A               	movf	setOverCurrentDischargeProtection@i_905^(0+128),w
 15926  1A1B  0020               	movlb	0	; select bank0
 15927  1A1C  00EC               	movwf	??_setOverCurrentDischargeProtection
 15928  1A1D  0EEC               	swapf	??_setOverCurrentDischargeProtection,f
 15929  1A1E  0023               	movlb	3	; select bank3
 15930  1A1F  0855               	movf	BQ76920@protect2^(0+384),w
 15931  1A20  0020               	movlb	0	; select bank0
 15932  1A21  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 15933  1A22  398F               	andlw	-113
 15934  1A23  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 15935  1A24  0023               	movlb	3	; select bank3
 15936  1A25  00D5               	movwf	BQ76920@protect2^(0+384)
 15937  1A26                     l6636:	
 15938                           
 15939                           ;BQ76920.c: 119:     }
 15940  1A26  3001               	movlw	1
 15941  1A27  0021               	movlb	1	; select bank1
 15942  1A28  07AA               	addwf	setOverCurrentDischargeProtection@i_905^(0+128),f
 15943  1A29  3000               	movlw	0
 15944  1A2A  3DAB               	addwfc	(setOverCurrentDischargeProtection@i_905+1)^(0+128),f
 15945  1A2B  3000               	movlw	0
 15946  1A2C  022B               	subwf	(setOverCurrentDischargeProtection@i_905+1)^(0+128),w
 15947  1A2D  3007               	movlw	7
 15948  1A2E  1903               	skipnz
 15949  1A2F  022A               	subwf	setOverCurrentDischargeProtection@i_905^(0+128),w
 15950  1A30  1C03               	skipc
 15951  1A31  29FE               	goto	l6632
 15952                           
 15953                           ;BQ76920.c: 121:     I2C_writeRegister(0x18, 0x07, protect2.regByte);
 15954  1A32  3018               	movlw	24
 15955  1A33  00F5               	movwf	I2C_writeRegister@slaveAddress
 15956  1A34  3000               	movlw	0
 15957  1A35  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 15958  1A36  3007               	movlw	7
 15959  1A37  00F7               	movwf	I2C_writeRegister@regAddress
 15960  1A38  3000               	movlw	0
 15961  1A39  00F8               	movwf	I2C_writeRegister@regAddress+1
 15962  1A3A  0023               	movlb	3	; select bank3
 15963  1A3B  0855               	movf	BQ76920@protect2^(0+384),w
 15964  1A3C  0020               	movlb	0	; select bank0
 15965  1A3D  00EC               	movwf	??_setOverCurrentDischargeProtection
 15966  1A3E  01ED               	clrf	??_setOverCurrentDischargeProtection+1
 15967  1A3F  086C               	movf	??_setOverCurrentDischargeProtection,w
 15968  1A40  00F9               	movwf	I2C_writeRegister@data
 15969  1A41  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 15970  1A42  00FA               	movwf	I2C_writeRegister@data+1
 15971  1A43  31B2  222B         	fcall	_I2C_writeRegister
 15972  1A45  0008               	return
 15973  1A46                     __end_of_setOverCurrentDischargeProtection:	
 15974                           
 15975                           	psect	text50
 15976  15D4                     __ptext50:	
 15977 ;; *************** function ___flmul *****************
 15978 ;; Defined at:
 15979 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 15980 ;; Parameters:    Size  Location     Type
 15981 ;;  b               4    6[BANK0 ] void 
 15982 ;;  a               4   10[BANK0 ] void 
 15983 ;; Auto vars:     Size  Location     Type
 15984 ;;  prod            4   26[BANK0 ] struct .
 15985 ;;  grs             4   20[BANK0 ] unsigned long 
 15986 ;;  temp            2   30[BANK0 ] struct .
 15987 ;;  bexp            1   25[BANK0 ] unsigned char 
 15988 ;;  aexp            1   24[BANK0 ] unsigned char 
 15989 ;;  sign            1   19[BANK0 ] unsigned char 
 15990 ;; Return value:  Size  Location     Type
 15991 ;;                  4    6[BANK0 ] unsigned char 
 15992 ;; Registers used:
 15993 ;;		wreg, status,2, status,0, pclath, cstack
 15994 ;; Tracked objects:
 15995 ;;		On entry : 0/0
 15996 ;;		On exit  : 0/0
 15997 ;;		Unchanged: 0/0
 15998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15999 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16000 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16001 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16002 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16003 ;;Total ram usage:       26 bytes
 16004 ;; Hardware stack levels used:    1
 16005 ;; Hardware stack levels required when called:    2
 16006 ;; This function calls:
 16007 ;;		__Umul8_16
 16008 ;; This function is called by:
 16009 ;;		_setShortCircuitProtection
 16010 ;;		_setOverCurrentDischargeProtection
 16011 ;;		_efgtoa
 16012 ;; This function uses a non-reentrant model
 16013 ;;
 16014                           
 16015                           
 16016                           ;psect for function ___flmul
 16017  15D4                     ___flmul:	
 16018                           
 16019                           ;incstack = 0
 16020                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 16021  15D4  0020               	movlb	0	; select bank0
 16022  15D5  0829               	movf	___flmul@b+3,w
 16023  15D6  3980               	andlw	128
 16024  15D7  00AE               	movwf	??___flmul
 16025  15D8  082E               	movf	??___flmul,w
 16026  15D9  00B3               	movwf	___flmul@sign
 16027  15DA  3529               	lslf	___flmul@b+3,w
 16028  15DB  00AE               	movwf	??___flmul
 16029  15DC  082E               	movf	??___flmul,w
 16030  15DD  00B9               	movwf	___flmul@bexp
 16031  15DE  1BA8               	btfsc	___flmul@b+2,7
 16032  15DF  1439               	bsf	___flmul@bexp,0
 16033  15E0  0839               	movf	___flmul@bexp,w
 16034  15E1  1903               	btfsc	3,2
 16035  15E2  2DF0               	goto	l5120
 16036  15E3  0A39               	incf	___flmul@bexp,w
 16037  15E4  1D03               	btfss	3,2
 16038  15E5  2DEE               	goto	l5118
 16039  15E6  3000               	movlw	0
 16040  15E7  00A9               	movwf	___flmul@b+3
 16041  15E8  3000               	movlw	0
 16042  15E9  00A8               	movwf	___flmul@b+2
 16043  15EA  3000               	movlw	0
 16044  15EB  00A7               	movwf	___flmul@b+1
 16045  15EC  3000               	movlw	0
 16046  15ED  00A6               	movwf	___flmul@b
 16047  15EE                     l5118:	
 16048  15EE  17A8               	bsf	___flmul@b+2,7
 16049  15EF  2DF8               	goto	l5122
 16050  15F0                     l5120:	
 16051  15F0  3000               	movlw	0
 16052  15F1  00A9               	movwf	___flmul@b+3
 16053  15F2  3000               	movlw	0
 16054  15F3  00A8               	movwf	___flmul@b+2
 16055  15F4  3000               	movlw	0
 16056  15F5  00A7               	movwf	___flmul@b+1
 16057  15F6  3000               	movlw	0
 16058  15F7  00A6               	movwf	___flmul@b
 16059  15F8                     l5122:	
 16060  15F8  082D               	movf	___flmul@a+3,w
 16061  15F9  3980               	andlw	128
 16062  15FA  00AE               	movwf	??___flmul
 16063  15FB  082E               	movf	??___flmul,w
 16064  15FC  06B3               	xorwf	___flmul@sign,f
 16065  15FD  352D               	lslf	___flmul@a+3,w
 16066  15FE  00AE               	movwf	??___flmul
 16067  15FF  082E               	movf	??___flmul,w
 16068  1600  00B8               	movwf	___flmul@aexp
 16069  1601  1BAC               	btfsc	___flmul@a+2,7
 16070  1602  1438               	bsf	___flmul@aexp,0
 16071  1603  0838               	movf	___flmul@aexp,w
 16072  1604  1903               	btfsc	3,2
 16073  1605  2E13               	goto	l5138
 16074  1606  0A38               	incf	___flmul@aexp,w
 16075  1607  1D03               	btfss	3,2
 16076  1608  2E11               	goto	l5136
 16077  1609  3000               	movlw	0
 16078  160A  00AD               	movwf	___flmul@a+3
 16079  160B  3000               	movlw	0
 16080  160C  00AC               	movwf	___flmul@a+2
 16081  160D  3000               	movlw	0
 16082  160E  00AB               	movwf	___flmul@a+1
 16083  160F  3000               	movlw	0
 16084  1610  00AA               	movwf	___flmul@a
 16085  1611                     l5136:	
 16086  1611  17AC               	bsf	___flmul@a+2,7
 16087  1612  2E1B               	goto	l5140
 16088  1613                     l5138:	
 16089  1613  3000               	movlw	0
 16090  1614  00AD               	movwf	___flmul@a+3
 16091  1615  3000               	movlw	0
 16092  1616  00AC               	movwf	___flmul@a+2
 16093  1617  3000               	movlw	0
 16094  1618  00AB               	movwf	___flmul@a+1
 16095  1619  3000               	movlw	0
 16096  161A  00AA               	movwf	___flmul@a
 16097  161B                     l5140:	
 16098  161B  0838               	movf	___flmul@aexp,w
 16099  161C  1D03               	btfss	3,2
 16100  161D  0839               	movf	___flmul@bexp,w
 16101  161E  1D03               	btfss	3,2
 16102  161F  2E29               	goto	l5148
 16103  1620  3000               	movlw	0
 16104  1621  00A9               	movwf	?___flmul+3
 16105  1622  3000               	movlw	0
 16106  1623  00A8               	movwf	?___flmul+2
 16107  1624  3000               	movlw	0
 16108  1625  00A7               	movwf	?___flmul+1
 16109  1626  3000               	movlw	0
 16110  1627  00A6               	movwf	?___flmul
 16111  1628  0008               	return
 16112  1629                     l5148:	
 16113  1629  0826               	movf	___flmul@b,w
 16114  162A  00AE               	movwf	??___flmul
 16115  162B  082E               	movf	??___flmul,w
 16116  162C  00F1               	movwf	__Umul8_16@multiplicand
 16117  162D  082C               	movf	___flmul@a+2,w
 16118  162E  31B2  2249  3195   	fcall	__Umul8_16
 16119  1631  0872               	movf	?__Umul8_16+1,w
 16120  1632  0020               	movlb	0	; select bank0
 16121  1633  00BF               	movwf	___flmul@temp+1
 16122  1634  0871               	movf	?__Umul8_16,w
 16123  1635  00BE               	movwf	___flmul@temp
 16124  1636  083E               	movf	___flmul@temp,w
 16125  1637  00AE               	movwf	??___flmul
 16126  1638  01AF               	clrf	??___flmul+1
 16127  1639  01B0               	clrf	??___flmul+2
 16128  163A  01B1               	clrf	??___flmul+3
 16129  163B  0831               	movf	??___flmul+3,w
 16130  163C  00B7               	movwf	___flmul@grs+3
 16131  163D  0830               	movf	??___flmul+2,w
 16132  163E  00B6               	movwf	___flmul@grs+2
 16133  163F  082F               	movf	??___flmul+1,w
 16134  1640  00B5               	movwf	___flmul@grs+1
 16135  1641  082E               	movf	??___flmul,w
 16136  1642  00B4               	movwf	___flmul@grs
 16137  1643  083F               	movf	___flmul@temp+1,w
 16138  1644  00AE               	movwf	??___flmul
 16139  1645  01AF               	clrf	??___flmul+1
 16140  1646  01B0               	clrf	??___flmul+2
 16141  1647  01B1               	clrf	??___flmul+3
 16142  1648  0831               	movf	??___flmul+3,w
 16143  1649  00BD               	movwf	___flmul@prod+3
 16144  164A  0830               	movf	??___flmul+2,w
 16145  164B  00BC               	movwf	___flmul@prod+2
 16146  164C  082F               	movf	??___flmul+1,w
 16147  164D  00BB               	movwf	___flmul@prod+1
 16148  164E  082E               	movf	??___flmul,w
 16149  164F  00BA               	movwf	___flmul@prod
 16150  1650  0827               	movf	___flmul@b+1,w
 16151  1651  00AE               	movwf	??___flmul
 16152  1652  082E               	movf	??___flmul,w
 16153  1653  00F1               	movwf	__Umul8_16@multiplicand
 16154  1654  082B               	movf	___flmul@a+1,w
 16155  1655  31B2  2249  3195   	fcall	__Umul8_16
 16156  1658  0872               	movf	?__Umul8_16+1,w
 16157  1659  0020               	movlb	0	; select bank0
 16158  165A  00BF               	movwf	___flmul@temp+1
 16159  165B  0871               	movf	?__Umul8_16,w
 16160  165C  00BE               	movwf	___flmul@temp
 16161  165D  083E               	movf	___flmul@temp,w
 16162  165E  00AE               	movwf	??___flmul
 16163  165F  01AF               	clrf	??___flmul+1
 16164  1660  01B0               	clrf	??___flmul+2
 16165  1661  01B1               	clrf	??___flmul+3
 16166  1662  082E               	movf	??___flmul,w
 16167  1663  07B4               	addwf	___flmul@grs,f
 16168  1664  082F               	movf	??___flmul+1,w
 16169  1665  3DB5               	addwfc	___flmul@grs+1,f
 16170  1666  0830               	movf	??___flmul+2,w
 16171  1667  3DB6               	addwfc	___flmul@grs+2,f
 16172  1668  0831               	movf	??___flmul+3,w
 16173  1669  3DB7               	addwfc	___flmul@grs+3,f
 16174  166A  083F               	movf	___flmul@temp+1,w
 16175  166B  00AE               	movwf	??___flmul
 16176  166C  01AF               	clrf	??___flmul+1
 16177  166D  01B0               	clrf	??___flmul+2
 16178  166E  01B1               	clrf	??___flmul+3
 16179  166F  082E               	movf	??___flmul,w
 16180  1670  07BA               	addwf	___flmul@prod,f
 16181  1671  082F               	movf	??___flmul+1,w
 16182  1672  3DBB               	addwfc	___flmul@prod+1,f
 16183  1673  0830               	movf	??___flmul+2,w
 16184  1674  3DBC               	addwfc	___flmul@prod+2,f
 16185  1675  0831               	movf	??___flmul+3,w
 16186  1676  3DBD               	addwfc	___flmul@prod+3,f
 16187  1677  0828               	movf	___flmul@b+2,w
 16188  1678  00AE               	movwf	??___flmul
 16189  1679  082E               	movf	??___flmul,w
 16190  167A  00F1               	movwf	__Umul8_16@multiplicand
 16191  167B  082A               	movf	___flmul@a,w
 16192  167C  31B2  2249  3195   	fcall	__Umul8_16
 16193  167F  0872               	movf	?__Umul8_16+1,w
 16194  1680  0020               	movlb	0	; select bank0
 16195  1681  00BF               	movwf	___flmul@temp+1
 16196  1682  0871               	movf	?__Umul8_16,w
 16197  1683  00BE               	movwf	___flmul@temp
 16198  1684  083E               	movf	___flmul@temp,w
 16199  1685  00AE               	movwf	??___flmul
 16200  1686  01AF               	clrf	??___flmul+1
 16201  1687  01B0               	clrf	??___flmul+2
 16202  1688  01B1               	clrf	??___flmul+3
 16203  1689  082E               	movf	??___flmul,w
 16204  168A  07B4               	addwf	___flmul@grs,f
 16205  168B  082F               	movf	??___flmul+1,w
 16206  168C  3DB5               	addwfc	___flmul@grs+1,f
 16207  168D  0830               	movf	??___flmul+2,w
 16208  168E  3DB6               	addwfc	___flmul@grs+2,f
 16209  168F  0831               	movf	??___flmul+3,w
 16210  1690  3DB7               	addwfc	___flmul@grs+3,f
 16211  1691  083F               	movf	___flmul@temp+1,w
 16212  1692  00AE               	movwf	??___flmul
 16213  1693  01AF               	clrf	??___flmul+1
 16214  1694  01B0               	clrf	??___flmul+2
 16215  1695  01B1               	clrf	??___flmul+3
 16216  1696  082E               	movf	??___flmul,w
 16217  1697  07BA               	addwf	___flmul@prod,f
 16218  1698  082F               	movf	??___flmul+1,w
 16219  1699  3DBB               	addwfc	___flmul@prod+1,f
 16220  169A  0830               	movf	??___flmul+2,w
 16221  169B  3DBC               	addwfc	___flmul@prod+2,f
 16222  169C  0831               	movf	??___flmul+3,w
 16223  169D  3DBD               	addwfc	___flmul@prod+3,f
 16224  169E  3008               	movlw	8
 16225  169F                     u6835:	
 16226  169F  35B4               	lslf	___flmul@grs,f
 16227  16A0  0DB5               	rlf	___flmul@grs+1,f
 16228  16A1  0DB6               	rlf	___flmul@grs+2,f
 16229  16A2  0DB7               	rlf	___flmul@grs+3,f
 16230  16A3  0B89               	decfsz	9,f
 16231  16A4  2E9F               	goto	u6835
 16232  16A5  0827               	movf	___flmul@b+1,w
 16233  16A6  00AE               	movwf	??___flmul
 16234  16A7  082E               	movf	??___flmul,w
 16235  16A8  00F1               	movwf	__Umul8_16@multiplicand
 16236  16A9  082A               	movf	___flmul@a,w
 16237  16AA  31B2  2249  3195   	fcall	__Umul8_16
 16238  16AD  0872               	movf	?__Umul8_16+1,w
 16239  16AE  0020               	movlb	0	; select bank0
 16240  16AF  00BF               	movwf	___flmul@temp+1
 16241  16B0  0871               	movf	?__Umul8_16,w
 16242  16B1  00BE               	movwf	___flmul@temp
 16243  16B2  083E               	movf	___flmul@temp,w
 16244  16B3  07B4               	addwf	___flmul@grs,f
 16245  16B4  083F               	movf	___flmul@temp+1,w
 16246  16B5  3DB5               	addwfc	___flmul@grs+1,f
 16247  16B6  3000               	movlw	0
 16248  16B7  3DB6               	addwfc	___flmul@grs+2,f
 16249  16B8  3DB7               	addwfc	___flmul@grs+3,f
 16250  16B9  0826               	movf	___flmul@b,w
 16251  16BA  00AE               	movwf	??___flmul
 16252  16BB  082E               	movf	??___flmul,w
 16253  16BC  00F1               	movwf	__Umul8_16@multiplicand
 16254  16BD  082B               	movf	___flmul@a+1,w
 16255  16BE  31B2  2249  3195   	fcall	__Umul8_16
 16256  16C1  0872               	movf	?__Umul8_16+1,w
 16257  16C2  0020               	movlb	0	; select bank0
 16258  16C3  00BF               	movwf	___flmul@temp+1
 16259  16C4  0871               	movf	?__Umul8_16,w
 16260  16C5  00BE               	movwf	___flmul@temp
 16261  16C6  083E               	movf	___flmul@temp,w
 16262  16C7  07B4               	addwf	___flmul@grs,f
 16263  16C8  083F               	movf	___flmul@temp+1,w
 16264  16C9  3DB5               	addwfc	___flmul@grs+1,f
 16265  16CA  3000               	movlw	0
 16266  16CB  3DB6               	addwfc	___flmul@grs+2,f
 16267  16CC  3DB7               	addwfc	___flmul@grs+3,f
 16268  16CD  3008               	movlw	8
 16269  16CE                     u6845:	
 16270  16CE  35B4               	lslf	___flmul@grs,f
 16271  16CF  0DB5               	rlf	___flmul@grs+1,f
 16272  16D0  0DB6               	rlf	___flmul@grs+2,f
 16273  16D1  0DB7               	rlf	___flmul@grs+3,f
 16274  16D2  0B89               	decfsz	9,f
 16275  16D3  2ECE               	goto	u6845
 16276  16D4  0826               	movf	___flmul@b,w
 16277  16D5  00AE               	movwf	??___flmul
 16278  16D6  082E               	movf	??___flmul,w
 16279  16D7  00F1               	movwf	__Umul8_16@multiplicand
 16280  16D8  082A               	movf	___flmul@a,w
 16281  16D9  31B2  2249  3195   	fcall	__Umul8_16
 16282  16DC  0872               	movf	?__Umul8_16+1,w
 16283  16DD  0020               	movlb	0	; select bank0
 16284  16DE  00BF               	movwf	___flmul@temp+1
 16285  16DF  0871               	movf	?__Umul8_16,w
 16286  16E0  00BE               	movwf	___flmul@temp
 16287  16E1  083E               	movf	___flmul@temp,w
 16288  16E2  07B4               	addwf	___flmul@grs,f
 16289  16E3  083F               	movf	___flmul@temp+1,w
 16290  16E4  3DB5               	addwfc	___flmul@grs+1,f
 16291  16E5  3000               	movlw	0
 16292  16E6  3DB6               	addwfc	___flmul@grs+2,f
 16293  16E7  3DB7               	addwfc	___flmul@grs+3,f
 16294  16E8  0827               	movf	___flmul@b+1,w
 16295  16E9  00AE               	movwf	??___flmul
 16296  16EA  082E               	movf	??___flmul,w
 16297  16EB  00F1               	movwf	__Umul8_16@multiplicand
 16298  16EC  082C               	movf	___flmul@a+2,w
 16299  16ED  31B2  2249  3195   	fcall	__Umul8_16
 16300  16F0  0872               	movf	?__Umul8_16+1,w
 16301  16F1  0020               	movlb	0	; select bank0
 16302  16F2  00BF               	movwf	___flmul@temp+1
 16303  16F3  0871               	movf	?__Umul8_16,w
 16304  16F4  00BE               	movwf	___flmul@temp
 16305  16F5  083E               	movf	___flmul@temp,w
 16306  16F6  07BA               	addwf	___flmul@prod,f
 16307  16F7  083F               	movf	___flmul@temp+1,w
 16308  16F8  3DBB               	addwfc	___flmul@prod+1,f
 16309  16F9  3000               	movlw	0
 16310  16FA  3DBC               	addwfc	___flmul@prod+2,f
 16311  16FB  3DBD               	addwfc	___flmul@prod+3,f
 16312  16FC  0828               	movf	___flmul@b+2,w
 16313  16FD  00AE               	movwf	??___flmul
 16314  16FE  082E               	movf	??___flmul,w
 16315  16FF  00F1               	movwf	__Umul8_16@multiplicand
 16316  1700  082B               	movf	___flmul@a+1,w
 16317  1701  31B2  2249  3195   	fcall	__Umul8_16
 16318  1704  0872               	movf	?__Umul8_16+1,w
 16319  1705  0020               	movlb	0	; select bank0
 16320  1706  00BF               	movwf	___flmul@temp+1
 16321  1707  0871               	movf	?__Umul8_16,w
 16322  1708  00BE               	movwf	___flmul@temp
 16323  1709  083E               	movf	___flmul@temp,w
 16324  170A  07BA               	addwf	___flmul@prod,f
 16325  170B  083F               	movf	___flmul@temp+1,w
 16326  170C  3DBB               	addwfc	___flmul@prod+1,f
 16327  170D  3000               	movlw	0
 16328  170E  3DBC               	addwfc	___flmul@prod+2,f
 16329  170F  3DBD               	addwfc	___flmul@prod+3,f
 16330  1710  0828               	movf	___flmul@b+2,w
 16331  1711  00AE               	movwf	??___flmul
 16332  1712  082E               	movf	??___flmul,w
 16333  1713  00F1               	movwf	__Umul8_16@multiplicand
 16334  1714  082C               	movf	___flmul@a+2,w
 16335  1715  31B2  2249  3195   	fcall	__Umul8_16
 16336  1718  0872               	movf	?__Umul8_16+1,w
 16337  1719  0020               	movlb	0	; select bank0
 16338  171A  00BF               	movwf	___flmul@temp+1
 16339  171B  0871               	movf	?__Umul8_16,w
 16340  171C  00BE               	movwf	___flmul@temp
 16341  171D  083E               	movf	___flmul@temp,w
 16342  171E  00AE               	movwf	??___flmul
 16343  171F  083F               	movf	___flmul@temp+1,w
 16344  1720  00AF               	movwf	??___flmul+1
 16345  1721  01B0               	clrf	??___flmul+2
 16346  1722  01B1               	clrf	??___flmul+3
 16347  1723  3008               	movlw	8
 16348  1724                     u6855:	
 16349  1724  35AE               	lslf	??___flmul,f
 16350  1725  0DAF               	rlf	??___flmul+1,f
 16351  1726  0DB0               	rlf	??___flmul+2,f
 16352  1727  0DB1               	rlf	??___flmul+3,f
 16353  1728  0B89               	decfsz	9,f
 16354  1729  2F24               	goto	u6855
 16355  172A  082E               	movf	??___flmul,w
 16356  172B  07BA               	addwf	___flmul@prod,f
 16357  172C  082F               	movf	??___flmul+1,w
 16358  172D  3DBB               	addwfc	___flmul@prod+1,f
 16359  172E  0830               	movf	??___flmul+2,w
 16360  172F  3DBC               	addwfc	___flmul@prod+2,f
 16361  1730  0831               	movf	??___flmul+3,w
 16362  1731  3DBD               	addwfc	___flmul@prod+3,f
 16363  1732  0834               	movf	___flmul@grs,w
 16364  1733  00AE               	movwf	??___flmul
 16365  1734  0835               	movf	___flmul@grs+1,w
 16366  1735  00AF               	movwf	??___flmul+1
 16367  1736  0836               	movf	___flmul@grs+2,w
 16368  1737  00B0               	movwf	??___flmul+2
 16369  1738  0837               	movf	___flmul@grs+3,w
 16370  1739  00B1               	movwf	??___flmul+3
 16371  173A  3018               	movlw	24
 16372  173B                     u6865:	
 16373  173B  36B1               	lsrf	??___flmul+3,f
 16374  173C  0CB0               	rrf	??___flmul+2,f
 16375  173D  0CAF               	rrf	??___flmul+1,f
 16376  173E  0CAE               	rrf	??___flmul,f
 16377  173F  0B89               	decfsz	9,f
 16378  1740  2F3B               	goto	u6865
 16379  1741  082E               	movf	??___flmul,w
 16380  1742  07BA               	addwf	___flmul@prod,f
 16381  1743  082F               	movf	??___flmul+1,w
 16382  1744  3DBB               	addwfc	___flmul@prod+1,f
 16383  1745  0830               	movf	??___flmul+2,w
 16384  1746  3DBC               	addwfc	___flmul@prod+2,f
 16385  1747  0831               	movf	??___flmul+3,w
 16386  1748  3DBD               	addwfc	___flmul@prod+3,f
 16387  1749  3008               	movlw	8
 16388  174A                     u6875:	
 16389  174A  35B4               	lslf	___flmul@grs,f
 16390  174B  0DB5               	rlf	___flmul@grs+1,f
 16391  174C  0DB6               	rlf	___flmul@grs+2,f
 16392  174D  0DB7               	rlf	___flmul@grs+3,f
 16393  174E  0B89               	decfsz	9,f
 16394  174F  2F4A               	goto	u6875
 16395  1750  0839               	movf	___flmul@bexp,w
 16396  1751  0738               	addwf	___flmul@aexp,w
 16397  1752  00AE               	movwf	??___flmul
 16398  1753  01AF               	clrf	??___flmul+1
 16399  1754  0DAF               	rlf	??___flmul+1,f
 16400  1755  082E               	movf	??___flmul,w
 16401  1756  3E82               	addlw	130
 16402  1757  00BE               	movwf	___flmul@temp
 16403  1758  30FF               	movlw	255
 16404  1759  3D2F               	addwfc	??___flmul+1,w
 16405  175A  00BF               	movwf	___flmul@temp+1
 16406  175B                     l5200:	
 16407  175B  1BBC               	btfsc	___flmul@prod+2,7
 16408  175C  2F72               	goto	l5202
 16409  175D  3001               	movlw	1
 16410  175E                     u6885:	
 16411  175E  35BA               	lslf	___flmul@prod,f
 16412  175F  0DBB               	rlf	___flmul@prod+1,f
 16413  1760  0DBC               	rlf	___flmul@prod+2,f
 16414  1761  0DBD               	rlf	___flmul@prod+3,f
 16415  1762  0B89               	decfsz	9,f
 16416  1763  2F5E               	goto	u6885
 16417  1764  1BB7               	btfsc	___flmul@grs+3,7
 16418  1765  143A               	bsf	___flmul@prod,0
 16419  1766  3001               	movlw	1
 16420  1767                     u6905:	
 16421  1767  35B4               	lslf	___flmul@grs,f
 16422  1768  0DB5               	rlf	___flmul@grs+1,f
 16423  1769  0DB6               	rlf	___flmul@grs+2,f
 16424  176A  0DB7               	rlf	___flmul@grs+3,f
 16425  176B  0B89               	decfsz	9,f
 16426  176C  2F67               	goto	u6905
 16427  176D  30FF               	movlw	255
 16428  176E  07BE               	addwf	___flmul@temp,f
 16429  176F  30FF               	movlw	255
 16430  1770  3DBF               	addwfc	___flmul@temp+1,f
 16431  1771  2F5B               	goto	l5200
 16432  1772                     l5202:	
 16433  1772  01B8               	clrf	___flmul@aexp
 16434  1773  1FB7               	btfss	___flmul@grs+3,7
 16435  1774  2F8B               	goto	l5212
 16436  1775  30FF               	movlw	255
 16437  1776  0534               	andwf	___flmul@grs,w
 16438  1777  00AE               	movwf	??___flmul
 16439  1778  30FF               	movlw	255
 16440  1779  0535               	andwf	___flmul@grs+1,w
 16441  177A  00AF               	movwf	??___flmul+1
 16442  177B  30FF               	movlw	255
 16443  177C  0536               	andwf	___flmul@grs+2,w
 16444  177D  00B0               	movwf	??___flmul+2
 16445  177E  307F               	movlw	127
 16446  177F  0537               	andwf	___flmul@grs+3,w
 16447  1780  00B1               	movwf	??___flmul+3
 16448  1781  0831               	movf	??___flmul+3,w
 16449  1782  0430               	iorwf	??___flmul+2,w
 16450  1783  042F               	iorwf	??___flmul+1,w
 16451  1784  042E               	iorwf	??___flmul,w
 16452  1785  1903               	skipnz
 16453  1786  183A               	btfsc	___flmul@prod,0
 16454  1787  2F89               	goto	l5208
 16455  1788  2F8B               	goto	l5212
 16456  1789                     l5208:	
 16457  1789  01B8               	clrf	___flmul@aexp
 16458  178A  0AB8               	incf	___flmul@aexp,f
 16459  178B                     l5212:	
 16460  178B  0838               	movf	___flmul@aexp,w
 16461  178C  1903               	btfsc	3,2
 16462  178D  2FB4               	goto	l5222
 16463  178E  3001               	movlw	1
 16464  178F  07BA               	addwf	___flmul@prod,f
 16465  1790  3000               	movlw	0
 16466  1791  3DBB               	addwfc	___flmul@prod+1,f
 16467  1792  3000               	movlw	0
 16468  1793  3DBC               	addwfc	___flmul@prod+2,f
 16469  1794  3000               	movlw	0
 16470  1795  3DBD               	addwfc	___flmul@prod+3,f
 16471  1796  1C3D               	btfss	___flmul@prod+3,0
 16472  1797  2FB4               	goto	l5222
 16473  1798  083A               	movf	___flmul@prod,w
 16474  1799  00AE               	movwf	??___flmul
 16475  179A  083B               	movf	___flmul@prod+1,w
 16476  179B  00AF               	movwf	??___flmul+1
 16477  179C  083C               	movf	___flmul@prod+2,w
 16478  179D  00B0               	movwf	??___flmul+2
 16479  179E  083D               	movf	___flmul@prod+3,w
 16480  179F  00B1               	movwf	??___flmul+3
 16481  17A0  3001               	movlw	1
 16482  17A1  00B2               	movwf	??___flmul+4
 16483  17A2                     u6975:	
 16484  17A2  37B1               	asrf	??___flmul+3,f
 16485  17A3  0CB0               	rrf	??___flmul+2,f
 16486  17A4  0CAF               	rrf	??___flmul+1,f
 16487  17A5  0CAE               	rrf	??___flmul,f
 16488  17A6  0BB2               	decfsz	??___flmul+4,f
 16489  17A7  2FA2               	goto	u6975
 16490  17A8  0831               	movf	??___flmul+3,w
 16491  17A9  00BD               	movwf	___flmul@prod+3
 16492  17AA  0830               	movf	??___flmul+2,w
 16493  17AB  00BC               	movwf	___flmul@prod+2
 16494  17AC  082F               	movf	??___flmul+1,w
 16495  17AD  00BB               	movwf	___flmul@prod+1
 16496  17AE  082E               	movf	??___flmul,w
 16497  17AF  00BA               	movwf	___flmul@prod
 16498  17B0  3001               	movlw	1
 16499  17B1  07BE               	addwf	___flmul@temp,f
 16500  17B2  3000               	movlw	0
 16501  17B3  3DBF               	addwfc	___flmul@temp+1,f
 16502  17B4                     l5222:	
 16503  17B4  083F               	movf	___flmul@temp+1,w
 16504  17B5  3A80               	xorlw	128
 16505  17B6  00AE               	movwf	??___flmul
 16506  17B7  3080               	movlw	128
 16507  17B8  022E               	subwf	??___flmul,w
 16508  17B9  1D03               	skipz
 16509  17BA  2FBD               	goto	u6985
 16510  17BB  30FF               	movlw	255
 16511  17BC  023E               	subwf	___flmul@temp,w
 16512  17BD                     u6985:	
 16513  17BD  1C03               	skipc
 16514  17BE  2FC9               	goto	l5226
 16515  17BF  307F               	movlw	127
 16516  17C0  0020               	movlb	0	; select bank0
 16517  17C1  00BD               	movwf	___flmul@prod+3
 16518  17C2  3080               	movlw	128
 16519  17C3  00BC               	movwf	___flmul@prod+2
 16520  17C4  3000               	movlw	0
 16521  17C5  00BB               	movwf	___flmul@prod+1
 16522  17C6  3000               	movlw	0
 16523  17C7  00BA               	movwf	___flmul@prod
 16524  17C8  2FF3               	goto	l1293
 16525  17C9                     l5226:	
 16526  17C9  0020               	movlb	0	; select bank0
 16527  17CA  083F               	movf	___flmul@temp+1,w
 16528  17CB  3A80               	xorlw	128
 16529  17CC  00AE               	movwf	??___flmul
 16530  17CD  3080               	movlw	128
 16531  17CE  022E               	subwf	??___flmul,w
 16532  17CF  1D03               	skipz
 16533  17D0  2FD3               	goto	u6995
 16534  17D1  3001               	movlw	1
 16535  17D2  023E               	subwf	___flmul@temp,w
 16536  17D3                     u6995:	
 16537  17D3  1803               	skipnc
 16538  17D4  2FE0               	goto	l5232
 16539  17D5  3000               	movlw	0
 16540  17D6  0020               	movlb	0	; select bank0
 16541  17D7  00BD               	movwf	___flmul@prod+3
 16542  17D8  3000               	movlw	0
 16543  17D9  00BC               	movwf	___flmul@prod+2
 16544  17DA  3000               	movlw	0
 16545  17DB  00BB               	movwf	___flmul@prod+1
 16546  17DC  3000               	movlw	0
 16547  17DD  00BA               	movwf	___flmul@prod
 16548  17DE  01B3               	clrf	___flmul@sign
 16549  17DF  2FF3               	goto	l1293
 16550  17E0                     l5232:	
 16551  17E0  0020               	movlb	0	; select bank0
 16552  17E1  083E               	movf	___flmul@temp,w
 16553  17E2  00AE               	movwf	??___flmul
 16554  17E3  082E               	movf	??___flmul,w
 16555  17E4  00B9               	movwf	___flmul@bexp
 16556  17E5  30FF               	movlw	255
 16557  17E6  05BA               	andwf	___flmul@prod,f
 16558  17E7  30FF               	movlw	255
 16559  17E8  05BB               	andwf	___flmul@prod+1,f
 16560  17E9  307F               	movlw	127
 16561  17EA  05BC               	andwf	___flmul@prod+2,f
 16562  17EB  3000               	movlw	0
 16563  17EC  05BD               	andwf	___flmul@prod+3,f
 16564  17ED  1839               	btfsc	___flmul@bexp,0
 16565  17EE  17BC               	bsf	___flmul@prod+2,7
 16566  17EF  3639               	lsrf	___flmul@bexp,w
 16567  17F0  00AE               	movwf	??___flmul
 16568  17F1  082E               	movf	??___flmul,w
 16569  17F2  00BD               	movwf	___flmul@prod+3
 16570  17F3                     l1293:	
 16571  17F3  0833               	movf	___flmul@sign,w
 16572  17F4  00AE               	movwf	??___flmul
 16573  17F5  082E               	movf	??___flmul,w
 16574  17F6  04BD               	iorwf	___flmul@prod+3,f
 16575  17F7  083D               	movf	___flmul@prod+3,w
 16576  17F8  00A9               	movwf	?___flmul+3
 16577  17F9  083C               	movf	___flmul@prod+2,w
 16578  17FA  00A8               	movwf	?___flmul+2
 16579  17FB  083B               	movf	___flmul@prod+1,w
 16580  17FC  00A7               	movwf	?___flmul+1
 16581  17FD  083A               	movf	___flmul@prod,w
 16582  17FE  00A6               	movwf	?___flmul
 16583  17FF  0008               	return
 16584  1800                     __end_of___flmul:	
 16585                           
 16586                           	psect	text51
 16587  3249                     __ptext51:	
 16588 ;; *************** function __Umul8_16 *****************
 16589 ;; Defined at:
 16590 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 16591 ;; Parameters:    Size  Location     Type
 16592 ;;  multiplier      1    wreg     unsigned char 
 16593 ;;  multiplicand    1    1[COMMON] unsigned char 
 16594 ;; Auto vars:     Size  Location     Type
 16595 ;;  multiplier      1    9[COMMON] unsigned char 
 16596 ;;  word_mpld       2    7[COMMON] unsigned int 
 16597 ;;  product         2    5[COMMON] unsigned int 
 16598 ;; Return value:  Size  Location     Type
 16599 ;;                  2    1[COMMON] unsigned int 
 16600 ;; Registers used:
 16601 ;;		wreg, status,2, status,0
 16602 ;; Tracked objects:
 16603 ;;		On entry : 0/0
 16604 ;;		On exit  : 0/0
 16605 ;;		Unchanged: 0/0
 16606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16607 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16608 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16609 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16610 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16611 ;;Total ram usage:        9 bytes
 16612 ;; Hardware stack levels used:    1
 16613 ;; Hardware stack levels required when called:    1
 16614 ;; This function calls:
 16615 ;;		Nothing
 16616 ;; This function is called by:
 16617 ;;		___flmul
 16618 ;; This function uses a non-reentrant model
 16619 ;;
 16620                           
 16621                           
 16622                           ;psect for function __Umul8_16
 16623  3249                     __Umul8_16:	
 16624                           
 16625                           ;incstack = 0
 16626                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 16627                           ;__Umul8_16@multiplier stored from wreg
 16628  3249  00F9               	movwf	__Umul8_16@multiplier
 16629  324A  01F5               	clrf	__Umul8_16@product
 16630  324B  01F6               	clrf	__Umul8_16@product+1
 16631  324C  0871               	movf	__Umul8_16@multiplicand,w
 16632  324D  00F3               	movwf	??__Umul8_16
 16633  324E  01F4               	clrf	??__Umul8_16+1
 16634  324F  0873               	movf	??__Umul8_16,w
 16635  3250  00F7               	movwf	__Umul8_16@word_mpld
 16636  3251  0874               	movf	??__Umul8_16+1,w
 16637  3252  00F8               	movwf	__Umul8_16@word_mpld+1
 16638  3253                     l4554:	
 16639  3253  1C79               	btfss	__Umul8_16@multiplier,0
 16640  3254  2A59               	goto	l1503
 16641  3255  0877               	movf	__Umul8_16@word_mpld,w
 16642  3256  07F5               	addwf	__Umul8_16@product,f
 16643  3257  0878               	movf	__Umul8_16@word_mpld+1,w
 16644  3258  3DF6               	addwfc	__Umul8_16@product+1,f
 16645  3259                     l1503:	
 16646  3259  3001               	movlw	1
 16647  325A                     u5355:	
 16648  325A  35F7               	lslf	__Umul8_16@word_mpld,f
 16649  325B  0DF8               	rlf	__Umul8_16@word_mpld+1,f
 16650  325C  0B89               	decfsz	9,f
 16651  325D  2A5A               	goto	u5355
 16652  325E  1003               	clrc
 16653  325F  0CF9               	rrf	__Umul8_16@multiplier,f
 16654  3260  0879               	movf	__Umul8_16@multiplier,w
 16655  3261  1D03               	btfss	3,2
 16656  3262  2A53               	goto	l4554
 16657  3263  0876               	movf	__Umul8_16@product+1,w
 16658  3264  00F2               	movwf	?__Umul8_16+1
 16659  3265  0875               	movf	__Umul8_16@product,w
 16660  3266  00F1               	movwf	?__Umul8_16
 16661  3267  0008               	return
 16662  3268                     __end_of__Umul8_16:	
 16663                           
 16664                           	psect	text52
 16665  2830                     __ptext52:	
 16666 ;; *************** function ___flge *****************
 16667 ;; Defined at:
 16668 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 16669 ;; Parameters:    Size  Location     Type
 16670 ;;  ff1             4   58[BANK0 ] unsigned int 
 16671 ;;  ff2             4   62[BANK0 ] unsigned int 
 16672 ;; Auto vars:     Size  Location     Type
 16673 ;;		None
 16674 ;; Return value:  Size  Location     Type
 16675 ;;		None               void
 16676 ;; Registers used:
 16677 ;;		wreg, status,2, status,0
 16678 ;; Tracked objects:
 16679 ;;		On entry : 0/0
 16680 ;;		On exit  : 0/0
 16681 ;;		Unchanged: 0/0
 16682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16683 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16685 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16686 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16687 ;;Total ram usage:       12 bytes
 16688 ;; Hardware stack levels used:    1
 16689 ;; Hardware stack levels required when called:    1
 16690 ;; This function calls:
 16691 ;;		Nothing
 16692 ;; This function is called by:
 16693 ;;		_setShortCircuitProtection
 16694 ;;		_setOverCurrentDischargeProtection
 16695 ;;		_efgtoa
 16696 ;; This function uses a non-reentrant model
 16697 ;;
 16698                           
 16699                           
 16700                           ;psect for function ___flge
 16701  2830                     ___flge:	
 16702                           
 16703                           ;incstack = 0
 16704                           ; Regs used in ___flge: [wreg+status,2+status,0]
 16705  2830  3000               	movlw	0
 16706  2831  0020               	movlb	0	; select bank0
 16707  2832  055A               	andwf	___flge@ff1,w
 16708  2833  00E2               	movwf	??___flge
 16709  2834  3000               	movlw	0
 16710  2835  055B               	andwf	___flge@ff1+1,w
 16711  2836  00E3               	movwf	??___flge+1
 16712  2837  3080               	movlw	128
 16713  2838  055C               	andwf	___flge@ff1+2,w
 16714  2839  00E4               	movwf	??___flge+2
 16715  283A  307F               	movlw	127
 16716  283B  055D               	andwf	___flge@ff1+3,w
 16717  283C  00E5               	movwf	??___flge+3
 16718  283D  0865               	movf	??___flge+3,w
 16719  283E  0464               	iorwf	??___flge+2,w
 16720  283F  0463               	iorwf	??___flge+1,w
 16721  2840  0462               	iorwf	??___flge,w
 16722  2841  1D03               	skipz
 16723  2842  284B               	goto	l1062
 16724  2843  3000               	movlw	0
 16725  2844  00DD               	movwf	___flge@ff1+3
 16726  2845  3000               	movlw	0
 16727  2846  00DC               	movwf	___flge@ff1+2
 16728  2847  3000               	movlw	0
 16729  2848  00DB               	movwf	___flge@ff1+1
 16730  2849  3000               	movlw	0
 16731  284A  00DA               	movwf	___flge@ff1
 16732  284B                     l1062:	
 16733  284B  3000               	movlw	0
 16734  284C  055E               	andwf	___flge@ff2,w
 16735  284D  00E2               	movwf	??___flge
 16736  284E  3000               	movlw	0
 16737  284F  055F               	andwf	___flge@ff2+1,w
 16738  2850  00E3               	movwf	??___flge+1
 16739  2851  3080               	movlw	128
 16740  2852  0560               	andwf	___flge@ff2+2,w
 16741  2853  00E4               	movwf	??___flge+2
 16742  2854  307F               	movlw	127
 16743  2855  0561               	andwf	___flge@ff2+3,w
 16744  2856  00E5               	movwf	??___flge+3
 16745  2857  0865               	movf	??___flge+3,w
 16746  2858  0464               	iorwf	??___flge+2,w
 16747  2859  0463               	iorwf	??___flge+1,w
 16748  285A  0462               	iorwf	??___flge,w
 16749  285B  1D03               	skipz
 16750  285C  2865               	goto	l4862
 16751  285D  3000               	movlw	0
 16752  285E  00E1               	movwf	___flge@ff2+3
 16753  285F  3000               	movlw	0
 16754  2860  00E0               	movwf	___flge@ff2+2
 16755  2861  3000               	movlw	0
 16756  2862  00DF               	movwf	___flge@ff2+1
 16757  2863  3000               	movlw	0
 16758  2864  00DE               	movwf	___flge@ff2
 16759  2865                     l4862:	
 16760  2865  1FDD               	btfss	___flge@ff1+3,7
 16761  2866  287F               	goto	l4866
 16762  2867  3000               	movlw	0
 16763  2868  00E2               	movwf	??___flge
 16764  2869  3000               	movlw	0
 16765  286A  00E3               	movwf	??___flge+1
 16766  286B  3000               	movlw	0
 16767  286C  00E4               	movwf	??___flge+2
 16768  286D  3080               	movlw	128
 16769  286E  00E5               	movwf	??___flge+3
 16770  286F  085A               	movf	___flge@ff1,w
 16771  2870  02E2               	subwf	??___flge,f
 16772  2871  085B               	movf	___flge@ff1+1,w
 16773  2872  3BE3               	subwfb	??___flge+1,f
 16774  2873  085C               	movf	___flge@ff1+2,w
 16775  2874  3BE4               	subwfb	??___flge+2,f
 16776  2875  085D               	movf	___flge@ff1+3,w
 16777  2876  3BE5               	subwfb	??___flge+3,f
 16778  2877  0865               	movf	??___flge+3,w
 16779  2878  00DD               	movwf	___flge@ff1+3
 16780  2879  0864               	movf	??___flge+2,w
 16781  287A  00DC               	movwf	___flge@ff1+2
 16782  287B  0863               	movf	??___flge+1,w
 16783  287C  00DB               	movwf	___flge@ff1+1
 16784  287D  0862               	movf	??___flge,w
 16785  287E  00DA               	movwf	___flge@ff1
 16786  287F                     l4866:	
 16787  287F  1FE1               	btfss	___flge@ff2+3,7
 16788  2880  2899               	goto	l1065
 16789  2881  3000               	movlw	0
 16790  2882  00E2               	movwf	??___flge
 16791  2883  3000               	movlw	0
 16792  2884  00E3               	movwf	??___flge+1
 16793  2885  3000               	movlw	0
 16794  2886  00E4               	movwf	??___flge+2
 16795  2887  3080               	movlw	128
 16796  2888  00E5               	movwf	??___flge+3
 16797  2889  085E               	movf	___flge@ff2,w
 16798  288A  02E2               	subwf	??___flge,f
 16799  288B  085F               	movf	___flge@ff2+1,w
 16800  288C  3BE3               	subwfb	??___flge+1,f
 16801  288D  0860               	movf	___flge@ff2+2,w
 16802  288E  3BE4               	subwfb	??___flge+2,f
 16803  288F  0861               	movf	___flge@ff2+3,w
 16804  2890  3BE5               	subwfb	??___flge+3,f
 16805  2891  0865               	movf	??___flge+3,w
 16806  2892  00E1               	movwf	___flge@ff2+3
 16807  2893  0864               	movf	??___flge+2,w
 16808  2894  00E0               	movwf	___flge@ff2+2
 16809  2895  0863               	movf	??___flge+1,w
 16810  2896  00DF               	movwf	___flge@ff2+1
 16811  2897  0862               	movf	??___flge,w
 16812  2898  00DE               	movwf	___flge@ff2
 16813  2899                     l1065:	
 16814  2899  3080               	movlw	128
 16815  289A  06DD               	xorwf	___flge@ff1+3,f
 16816  289B  3080               	movlw	128
 16817  289C  06E1               	xorwf	___flge@ff2+3,f
 16818  289D  0861               	movf	___flge@ff2+3,w
 16819  289E  025D               	subwf	___flge@ff1+3,w
 16820  289F  1D03               	skipz
 16821  28A0  0008               	return
 16822  28A1  0860               	movf	___flge@ff2+2,w
 16823  28A2  025C               	subwf	___flge@ff1+2,w
 16824  28A3  1D03               	skipz
 16825  28A4  0008               	return
 16826  28A5  085F               	movf	___flge@ff2+1,w
 16827  28A6  025B               	subwf	___flge@ff1+1,w
 16828  28A7  1D03               	skipz
 16829  28A8  0008               	return
 16830  28A9  085E               	movf	___flge@ff2,w
 16831  28AA  025A               	subwf	___flge@ff1,w
 16832  28AB  0008               	return
 16833  28AC                     __end_of___flge:	
 16834                           
 16835                           	psect	text53
 16836  229E                     __ptext53:	
 16837 ;; *************** function _setCellUndervoltageProtection *****************
 16838 ;; Defined at:
 16839 ;;		line 127 in file "BQ76920.c"
 16840 ;; Parameters:    Size  Location     Type
 16841 ;;  voltage_mV      2   18[BANK0 ] int 
 16842 ;;  delay_s         2   20[BANK0 ] int 
 16843 ;; Auto vars:     Size  Location     Type
 16844 ;;  i               2   37[BANK0 ] int 
 16845 ;;  uv_trip         1   36[BANK0 ] unsigned char 
 16846 ;; Return value:  Size  Location     Type
 16847 ;;                  1    wreg      void 
 16848 ;; Registers used:
 16849 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16850 ;; Tracked objects:
 16851 ;;		On entry : 0/0
 16852 ;;		On exit  : 0/0
 16853 ;;		Unchanged: 0/0
 16854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16855 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16856 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16857 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16858 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16859 ;;Total ram usage:       21 bytes
 16860 ;; Hardware stack levels used:    1
 16861 ;; Hardware stack levels required when called:    3
 16862 ;; This function calls:
 16863 ;;		_I2C_writeRegister
 16864 ;;		___aldiv
 16865 ;;		___lmul
 16866 ;;		_readRegister
 16867 ;; This function is called by:
 16868 ;;		_init_AFE
 16869 ;; This function uses a non-reentrant model
 16870 ;;
 16871                           
 16872                           
 16873                           ;psect for function _setCellUndervoltageProtection
 16874  229E                     _setCellUndervoltageProtection:	
 16875                           
 16876                           ;BQ76920.c: 129:     minCellVoltage = voltage_mV;
 16877                           
 16878                           ;incstack = 0
 16879                           ; Regs used in _setCellUndervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+csta
      +                          ck]
 16880  229E  0020               	movlb	0	; select bank0
 16881  229F  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 16882  22A0  0023               	movlb	3	; select bank3
 16883  22A1  00C5               	movwf	(_minCellVoltage+1)^(0+384)
 16884  22A2  0020               	movlb	0	; select bank0
 16885  22A3  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 16886  22A4  0023               	movlb	3	; select bank3
 16887  22A5  00C4               	movwf	_minCellVoltage^(0+384)
 16888                           
 16889                           ;BQ76920.c: 131:     protect3.regByte = readRegister(0x18, 0x08);
 16890  22A6  3018               	movlw	24
 16891  22A7  00F5               	movwf	readRegister@slaveAddress
 16892  22A8  3000               	movlw	0
 16893  22A9  00F6               	movwf	readRegister@slaveAddress+1
 16894  22AA  3008               	movlw	8
 16895  22AB  00F7               	movwf	readRegister@regAddress
 16896  22AC  3000               	movlw	0
 16897  22AD  00F8               	movwf	readRegister@regAddress+1
 16898  22AE  31B3  23C5  31A2   	fcall	_readRegister
 16899  22B1  0875               	movf	?_readRegister,w
 16900  22B2  0020               	movlb	0	; select bank0
 16901  22B3  00B6               	movwf	??_setCellUndervoltageProtection
 16902  22B4  0836               	movf	??_setCellUndervoltageProtection,w
 16903  22B5  0023               	movlb	3	; select bank3
 16904  22B6  00D4               	movwf	BQ76920@protect3^(0+384)
 16905                           
 16906                           ;BQ76920.c: 132:     uv_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 16907  22B7  0852               	movf	_adcGain^(0+384),w
 16908  22B8  0020               	movlb	0	; select bank0
 16909  22B9  00A4               	movwf	___aldiv@divisor
 16910  22BA  0023               	movlb	3	; select bank3
 16911  22BB  0853               	movf	(_adcGain+1)^(0+384),w
 16912  22BC  0020               	movlb	0	; select bank0
 16913  22BD  00A5               	movwf	___aldiv@divisor+1
 16914  22BE  0D89               	rlf	9,f
 16915  22BF  3B89               	subwfb	9,f
 16916  22C0  0989               	comf	9,f
 16917  22C1  00A6               	movwf	___aldiv@divisor+2
 16918  22C2  00A7               	movwf	___aldiv@divisor+3
 16919  22C3  0023               	movlb	3	; select bank3
 16920  22C4  0850               	movf	_adcOffset^(0+384),w
 16921  22C5  0020               	movlb	0	; select bank0
 16922  22C6  00B6               	movwf	??_setCellUndervoltageProtection
 16923  22C7  0023               	movlb	3	; select bank3
 16924  22C8  0851               	movf	(_adcOffset+1)^(0+384),w
 16925  22C9  0020               	movlb	0	; select bank0
 16926  22CA  00B7               	movwf	??_setCellUndervoltageProtection+1
 16927  22CB  3000               	movlw	0
 16928  22CC  1BB7               	btfsc	??_setCellUndervoltageProtection+1,7
 16929  22CD  30FF               	movlw	255
 16930  22CE  00B8               	movwf	??_setCellUndervoltageProtection+2
 16931  22CF  00B9               	movwf	??_setCellUndervoltageProtection+3
 16932  22D0  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 16933  22D1  00BA               	movwf	??_setCellUndervoltageProtection+4
 16934  22D2  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 16935  22D3  00BB               	movwf	??_setCellUndervoltageProtection+5
 16936  22D4  3000               	movlw	0
 16937  22D5  1BBB               	btfsc	??_setCellUndervoltageProtection+5,7
 16938  22D6  30FF               	movlw	255
 16939  22D7  00BC               	movwf	??_setCellUndervoltageProtection+6
 16940  22D8  00BD               	movwf	??_setCellUndervoltageProtection+7
 16941  22D9  0836               	movf	??_setCellUndervoltageProtection,w
 16942  22DA  02BA               	subwf	??_setCellUndervoltageProtection+4,f
 16943  22DB  0837               	movf	??_setCellUndervoltageProtection+1,w
 16944  22DC  3BBB               	subwfb	??_setCellUndervoltageProtection+5,f
 16945  22DD  0838               	movf	??_setCellUndervoltageProtection+2,w
 16946  22DE  3BBC               	subwfb	??_setCellUndervoltageProtection+6,f
 16947  22DF  0839               	movf	??_setCellUndervoltageProtection+3,w
 16948  22E0  3BBD               	subwfb	??_setCellUndervoltageProtection+7,f
 16949  22E1  083D               	movf	??_setCellUndervoltageProtection+7,w
 16950  22E2  00F4               	movwf	___lmul@multiplier+3
 16951  22E3  083C               	movf	??_setCellUndervoltageProtection+6,w
 16952  22E4  00F3               	movwf	___lmul@multiplier+2
 16953  22E5  083B               	movf	??_setCellUndervoltageProtection+5,w
 16954  22E6  00F2               	movwf	___lmul@multiplier+1
 16955  22E7  083A               	movf	??_setCellUndervoltageProtection+4,w
 16956  22E8  00F1               	movwf	___lmul@multiplier
 16957  22E9  3000               	movlw	0
 16958  22EA  00F8               	movwf	___lmul@multiplicand+3
 16959  22EB  3000               	movlw	0
 16960  22EC  00F7               	movwf	___lmul@multiplicand+2
 16961  22ED  3003               	movlw	3
 16962  22EE  00F6               	movwf	___lmul@multiplicand+1
 16963  22EF  30E8               	movlw	232
 16964  22F0  00F5               	movwf	___lmul@multiplicand
 16965  22F1  31B3  235E  31A2   	fcall	___lmul
 16966  22F4  0874               	movf	?___lmul+3,w
 16967  22F5  0020               	movlb	0	; select bank0
 16968  22F6  00AB               	movwf	___aldiv@dividend+3
 16969  22F7  0873               	movf	?___lmul+2,w
 16970  22F8  00AA               	movwf	___aldiv@dividend+2
 16971  22F9  0872               	movf	?___lmul+1,w
 16972  22FA  00A9               	movwf	___aldiv@dividend+1
 16973  22FB  0871               	movf	?___lmul,w
 16974  22FC  00A8               	movwf	___aldiv@dividend
 16975  22FD  31A9  21A5  31A2   	fcall	___aldiv
 16976  2300  0020               	movlb	0	; select bank0
 16977  2301  0824               	movf	?___aldiv,w
 16978  2302  00BE               	movwf	??_setCellUndervoltageProtection+8
 16979  2303  0825               	movf	?___aldiv+1,w
 16980  2304  00BF               	movwf	??_setCellUndervoltageProtection+9
 16981  2305  0826               	movf	?___aldiv+2,w
 16982  2306  00C0               	movwf	??_setCellUndervoltageProtection+10
 16983  2307  0827               	movf	?___aldiv+3,w
 16984  2308  00C1               	movwf	??_setCellUndervoltageProtection+11
 16985  2309  3004               	movlw	4
 16986  230A  00C2               	movwf	??_setCellUndervoltageProtection+12
 16987  230B                     u12195:	
 16988  230B  37C1               	asrf	??_setCellUndervoltageProtection+11,f
 16989  230C  0CC0               	rrf	??_setCellUndervoltageProtection+10,f
 16990  230D  0CBF               	rrf	??_setCellUndervoltageProtection+9,f
 16991  230E  0CBE               	rrf	??_setCellUndervoltageProtection+8,f
 16992  230F  0BC2               	decfsz	??_setCellUndervoltageProtection+12,f
 16993  2310  2B0B               	goto	u12195
 16994  2311  083E               	movf	??_setCellUndervoltageProtection+8,w
 16995  2312  00C3               	movwf	??_setCellUndervoltageProtection+13
 16996  2313  0843               	movf	??_setCellUndervoltageProtection+13,w
 16997  2314  00C4               	movwf	setCellUndervoltageProtection@uv_trip
 16998                           
 16999                           ;BQ76920.c: 133:     uv_trip += 1;
 17000  2315  3001               	movlw	1
 17001  2316  00B6               	movwf	??_setCellUndervoltageProtection
 17002  2317  0836               	movf	??_setCellUndervoltageProtection,w
 17003  2318  07C4               	addwf	setCellUndervoltageProtection@uv_trip,f
 17004                           
 17005                           ;BQ76920.c: 134:     I2C_writeRegister(0x18, 0x0A, uv_trip);
 17006  2319  3018               	movlw	24
 17007  231A  00F5               	movwf	I2C_writeRegister@slaveAddress
 17008  231B  3000               	movlw	0
 17009  231C  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 17010  231D  300A               	movlw	10
 17011  231E  00F7               	movwf	I2C_writeRegister@regAddress
 17012  231F  3000               	movlw	0
 17013  2320  00F8               	movwf	I2C_writeRegister@regAddress+1
 17014  2321  0844               	movf	setCellUndervoltageProtection@uv_trip,w
 17015  2322  00B6               	movwf	??_setCellUndervoltageProtection
 17016  2323  01B7               	clrf	??_setCellUndervoltageProtection+1
 17017  2324  0836               	movf	??_setCellUndervoltageProtection,w
 17018  2325  00F9               	movwf	I2C_writeRegister@data
 17019  2326  0837               	movf	??_setCellUndervoltageProtection+1,w
 17020  2327  00FA               	movwf	I2C_writeRegister@data+1
 17021  2328  31B2  222B  31A2   	fcall	_I2C_writeRegister
 17022                           
 17023                           ;BQ76920.c: 136:     protect3.bits.UV_DELAY = 0;
 17024  232B  303F               	movlw	-193
 17025  232C  0023               	movlb	3	; select bank3
 17026  232D  05D4               	andwf	BQ76920@protect3^(0+384),f
 17027                           
 17028                           ;BQ76920.c: 137:     for (int i = 0; i < (sizeof(UV_delay_setting) / sizeof((UV_delay_se
      +                          tting)[0])) - 1; i++) {
 17029  232E  0020               	movlb	0	; select bank0
 17030  232F  01C5               	clrf	setCellUndervoltageProtection@i
 17031  2330  01C6               	clrf	setCellUndervoltageProtection@i+1
 17032  2331                     l8486:	
 17033                           
 17034                           ;BQ76920.c: 138:         if (delay_s >= UV_delay_setting[i]) {
 17035  2331  0846               	movf	setCellUndervoltageProtection@i+1,w
 17036  2332  0085               	movwf	5
 17037  2333  0845               	movf	setCellUndervoltageProtection@i,w
 17038  2334  0084               	movwf	4
 17039  2335  3584               	lslf	4,f
 17040  2336  0D85               	rlf	5,f
 17041  2337  3000               	movlw	low (_UV_delay_setting| (0+32768))
 17042  2338  0784               	addwf	4,f
 17043  2339  30BB               	movlw	high (_UV_delay_setting| (0+32768))
 17044  233A  3D85               	addwfc	5,f
 17045  233B  3F00               	moviw [0]fsr0
 17046  233C  00B6               	movwf	??_setCellUndervoltageProtection
 17047  233D  3F01               	moviw [1]fsr0
 17048  233E  00B7               	movwf	??_setCellUndervoltageProtection+1
 17049  233F  0835               	movf	setCellUndervoltageProtection@delay_s+1,w
 17050  2340  3A80               	xorlw	128
 17051  2341  00B8               	movwf	??_setCellUndervoltageProtection+2
 17052  2342  0837               	movf	??_setCellUndervoltageProtection+1,w
 17053  2343  3A80               	xorlw	128
 17054  2344  0238               	subwf	??_setCellUndervoltageProtection+2,w
 17055  2345  1D03               	skipz
 17056  2346  2B49               	goto	u12205
 17057  2347  0836               	movf	??_setCellUndervoltageProtection,w
 17058  2348  0234               	subwf	setCellUndervoltageProtection@delay_s,w
 17059  2349                     u12205:	
 17060  2349  1C03               	skipc
 17061  234A  2B59               	goto	l8490
 17062                           
 17063                           ;BQ76920.c: 139:             protect3.bits.UV_DELAY = i;
 17064  234B  0020               	movlb	0	; select bank0
 17065  234C  0845               	movf	setCellUndervoltageProtection@i,w
 17066  234D  00B6               	movwf	??_setCellUndervoltageProtection
 17067  234E  0EB6               	swapf	??_setCellUndervoltageProtection,f
 17068  234F  0DB6               	rlf	??_setCellUndervoltageProtection,f
 17069  2350  0DB6               	rlf	??_setCellUndervoltageProtection,f
 17070  2351  0023               	movlb	3	; select bank3
 17071  2352  0854               	movf	BQ76920@protect3^(0+384),w
 17072  2353  0020               	movlb	0	; select bank0
 17073  2354  0636               	xorwf	??_setCellUndervoltageProtection,w
 17074  2355  393F               	andlw	-193
 17075  2356  0636               	xorwf	??_setCellUndervoltageProtection,w
 17076  2357  0023               	movlb	3	; select bank3
 17077  2358  00D4               	movwf	BQ76920@protect3^(0+384)
 17078  2359                     l8490:	
 17079                           
 17080                           ;BQ76920.c: 141:     }
 17081  2359  3001               	movlw	1
 17082  235A  0020               	movlb	0	; select bank0
 17083  235B  07C5               	addwf	setCellUndervoltageProtection@i,f
 17084  235C  3000               	movlw	0
 17085  235D  3DC6               	addwfc	setCellUndervoltageProtection@i+1,f
 17086  235E  3000               	movlw	0
 17087  235F  0246               	subwf	setCellUndervoltageProtection@i+1,w
 17088  2360  3003               	movlw	3
 17089  2361  1903               	skipnz
 17090  2362  0245               	subwf	setCellUndervoltageProtection@i,w
 17091  2363  1C03               	skipc
 17092  2364  2B31               	goto	l8486
 17093                           
 17094                           ;BQ76920.c: 142:     I2C_writeRegister(0x18, 0x08, protect3.regByte);
 17095  2365  3018               	movlw	24
 17096  2366  00F5               	movwf	I2C_writeRegister@slaveAddress
 17097  2367  3000               	movlw	0
 17098  2368  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 17099  2369  3008               	movlw	8
 17100  236A  00F7               	movwf	I2C_writeRegister@regAddress
 17101  236B  3000               	movlw	0
 17102  236C  00F8               	movwf	I2C_writeRegister@regAddress+1
 17103  236D  0023               	movlb	3	; select bank3
 17104  236E  0854               	movf	BQ76920@protect3^(0+384),w
 17105  236F  0020               	movlb	0	; select bank0
 17106  2370  00B6               	movwf	??_setCellUndervoltageProtection
 17107  2371  01B7               	clrf	??_setCellUndervoltageProtection+1
 17108  2372  0836               	movf	??_setCellUndervoltageProtection,w
 17109  2373  00F9               	movwf	I2C_writeRegister@data
 17110  2374  0837               	movf	??_setCellUndervoltageProtection+1,w
 17111  2375  00FA               	movwf	I2C_writeRegister@data+1
 17112  2376  31B2  222B         	fcall	_I2C_writeRegister
 17113  2378  0008               	return
 17114  2379                     __end_of_setCellUndervoltageProtection:	
 17115                           
 17116                           	psect	text54
 17117  201C                     __ptext54:	
 17118 ;; *************** function _setCellOvervoltageProtection *****************
 17119 ;; Defined at:
 17120 ;;		line 148 in file "BQ76920.c"
 17121 ;; Parameters:    Size  Location     Type
 17122 ;;  voltage_mV      2   18[BANK0 ] int 
 17123 ;;  delay_s         2   20[BANK0 ] int 
 17124 ;; Auto vars:     Size  Location     Type
 17125 ;;  i               2   37[BANK0 ] int 
 17126 ;;  ov_trip         1   36[BANK0 ] unsigned char 
 17127 ;; Return value:  Size  Location     Type
 17128 ;;                  1    wreg      void 
 17129 ;; Registers used:
 17130 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17131 ;; Tracked objects:
 17132 ;;		On entry : 0/0
 17133 ;;		On exit  : 0/0
 17134 ;;		Unchanged: 0/0
 17135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17136 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17137 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17138 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17139 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17140 ;;Total ram usage:       21 bytes
 17141 ;; Hardware stack levels used:    1
 17142 ;; Hardware stack levels required when called:    3
 17143 ;; This function calls:
 17144 ;;		_I2C_writeRegister
 17145 ;;		___aldiv
 17146 ;;		___lmul
 17147 ;;		_readRegister
 17148 ;; This function is called by:
 17149 ;;		_init_AFE
 17150 ;; This function uses a non-reentrant model
 17151 ;;
 17152                           
 17153                           
 17154                           ;psect for function _setCellOvervoltageProtection
 17155  201C                     _setCellOvervoltageProtection:	
 17156                           
 17157                           ;BQ76920.c: 150:     maxCellVoltage = voltage_mV;
 17158                           
 17159                           ;incstack = 0
 17160                           ; Regs used in _setCellOvervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+cstac
      +                          k]
 17161  201C  0020               	movlb	0	; select bank0
 17162  201D  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 17163  201E  0023               	movlb	3	; select bank3
 17164  201F  00C7               	movwf	(_maxCellVoltage+1)^(0+384)
 17165  2020  0020               	movlb	0	; select bank0
 17166  2021  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 17167  2022  0023               	movlb	3	; select bank3
 17168  2023  00C6               	movwf	_maxCellVoltage^(0+384)
 17169                           
 17170                           ;BQ76920.c: 151:     protect3.regByte = readRegister(0x18, 0x08);
 17171  2024  3018               	movlw	24
 17172  2025  00F5               	movwf	readRegister@slaveAddress
 17173  2026  3000               	movlw	0
 17174  2027  00F6               	movwf	readRegister@slaveAddress+1
 17175  2028  3008               	movlw	8
 17176  2029  00F7               	movwf	readRegister@regAddress
 17177  202A  3000               	movlw	0
 17178  202B  00F8               	movwf	readRegister@regAddress+1
 17179  202C  31B3  23C5  31A0   	fcall	_readRegister
 17180  202F  0875               	movf	?_readRegister,w
 17181  2030  0020               	movlb	0	; select bank0
 17182  2031  00B6               	movwf	??_setCellOvervoltageProtection
 17183  2032  0836               	movf	??_setCellOvervoltageProtection,w
 17184  2033  0023               	movlb	3	; select bank3
 17185  2034  00D4               	movwf	BQ76920@protect3^(0+384)
 17186                           
 17187                           ;BQ76920.c: 152:     ov_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 17188  2035  0852               	movf	_adcGain^(0+384),w
 17189  2036  0020               	movlb	0	; select bank0
 17190  2037  00A4               	movwf	___aldiv@divisor
 17191  2038  0023               	movlb	3	; select bank3
 17192  2039  0853               	movf	(_adcGain+1)^(0+384),w
 17193  203A  0020               	movlb	0	; select bank0
 17194  203B  00A5               	movwf	___aldiv@divisor+1
 17195  203C  0D89               	rlf	9,f
 17196  203D  3B89               	subwfb	9,f
 17197  203E  0989               	comf	9,f
 17198  203F  00A6               	movwf	___aldiv@divisor+2
 17199  2040  00A7               	movwf	___aldiv@divisor+3
 17200  2041  0023               	movlb	3	; select bank3
 17201  2042  0850               	movf	_adcOffset^(0+384),w
 17202  2043  0020               	movlb	0	; select bank0
 17203  2044  00B6               	movwf	??_setCellOvervoltageProtection
 17204  2045  0023               	movlb	3	; select bank3
 17205  2046  0851               	movf	(_adcOffset+1)^(0+384),w
 17206  2047  0020               	movlb	0	; select bank0
 17207  2048  00B7               	movwf	??_setCellOvervoltageProtection+1
 17208  2049  3000               	movlw	0
 17209  204A  1BB7               	btfsc	??_setCellOvervoltageProtection+1,7
 17210  204B  30FF               	movlw	255
 17211  204C  00B8               	movwf	??_setCellOvervoltageProtection+2
 17212  204D  00B9               	movwf	??_setCellOvervoltageProtection+3
 17213  204E  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 17214  204F  00BA               	movwf	??_setCellOvervoltageProtection+4
 17215  2050  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 17216  2051  00BB               	movwf	??_setCellOvervoltageProtection+5
 17217  2052  3000               	movlw	0
 17218  2053  1BBB               	btfsc	??_setCellOvervoltageProtection+5,7
 17219  2054  30FF               	movlw	255
 17220  2055  00BC               	movwf	??_setCellOvervoltageProtection+6
 17221  2056  00BD               	movwf	??_setCellOvervoltageProtection+7
 17222  2057  0836               	movf	??_setCellOvervoltageProtection,w
 17223  2058  02BA               	subwf	??_setCellOvervoltageProtection+4,f
 17224  2059  0837               	movf	??_setCellOvervoltageProtection+1,w
 17225  205A  3BBB               	subwfb	??_setCellOvervoltageProtection+5,f
 17226  205B  0838               	movf	??_setCellOvervoltageProtection+2,w
 17227  205C  3BBC               	subwfb	??_setCellOvervoltageProtection+6,f
 17228  205D  0839               	movf	??_setCellOvervoltageProtection+3,w
 17229  205E  3BBD               	subwfb	??_setCellOvervoltageProtection+7,f
 17230  205F  083D               	movf	??_setCellOvervoltageProtection+7,w
 17231  2060  00F4               	movwf	___lmul@multiplier+3
 17232  2061  083C               	movf	??_setCellOvervoltageProtection+6,w
 17233  2062  00F3               	movwf	___lmul@multiplier+2
 17234  2063  083B               	movf	??_setCellOvervoltageProtection+5,w
 17235  2064  00F2               	movwf	___lmul@multiplier+1
 17236  2065  083A               	movf	??_setCellOvervoltageProtection+4,w
 17237  2066  00F1               	movwf	___lmul@multiplier
 17238  2067  3000               	movlw	0
 17239  2068  00F8               	movwf	___lmul@multiplicand+3
 17240  2069  3000               	movlw	0
 17241  206A  00F7               	movwf	___lmul@multiplicand+2
 17242  206B  3003               	movlw	3
 17243  206C  00F6               	movwf	___lmul@multiplicand+1
 17244  206D  30E8               	movlw	232
 17245  206E  00F5               	movwf	___lmul@multiplicand
 17246  206F  31B3  235E  31A0   	fcall	___lmul
 17247  2072  0874               	movf	?___lmul+3,w
 17248  2073  0020               	movlb	0	; select bank0
 17249  2074  00AB               	movwf	___aldiv@dividend+3
 17250  2075  0873               	movf	?___lmul+2,w
 17251  2076  00AA               	movwf	___aldiv@dividend+2
 17252  2077  0872               	movf	?___lmul+1,w
 17253  2078  00A9               	movwf	___aldiv@dividend+1
 17254  2079  0871               	movf	?___lmul,w
 17255  207A  00A8               	movwf	___aldiv@dividend
 17256  207B  31A9  21A5  31A0   	fcall	___aldiv
 17257  207E  0020               	movlb	0	; select bank0
 17258  207F  0824               	movf	?___aldiv,w
 17259  2080  00BE               	movwf	??_setCellOvervoltageProtection+8
 17260  2081  0825               	movf	?___aldiv+1,w
 17261  2082  00BF               	movwf	??_setCellOvervoltageProtection+9
 17262  2083  0826               	movf	?___aldiv+2,w
 17263  2084  00C0               	movwf	??_setCellOvervoltageProtection+10
 17264  2085  0827               	movf	?___aldiv+3,w
 17265  2086  00C1               	movwf	??_setCellOvervoltageProtection+11
 17266  2087  3004               	movlw	4
 17267  2088  00C2               	movwf	??_setCellOvervoltageProtection+12
 17268  2089                     u12225:	
 17269  2089  37C1               	asrf	??_setCellOvervoltageProtection+11,f
 17270  208A  0CC0               	rrf	??_setCellOvervoltageProtection+10,f
 17271  208B  0CBF               	rrf	??_setCellOvervoltageProtection+9,f
 17272  208C  0CBE               	rrf	??_setCellOvervoltageProtection+8,f
 17273  208D  0BC2               	decfsz	??_setCellOvervoltageProtection+12,f
 17274  208E  2889               	goto	u12225
 17275  208F  083E               	movf	??_setCellOvervoltageProtection+8,w
 17276  2090  00C3               	movwf	??_setCellOvervoltageProtection+13
 17277  2091  0843               	movf	??_setCellOvervoltageProtection+13,w
 17278  2092  00C4               	movwf	setCellOvervoltageProtection@ov_trip
 17279                           
 17280                           ;BQ76920.c: 153:     I2C_writeRegister(0x18, 0x09, ov_trip);
 17281  2093  3018               	movlw	24
 17282  2094  00F5               	movwf	I2C_writeRegister@slaveAddress
 17283  2095  3000               	movlw	0
 17284  2096  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 17285  2097  3009               	movlw	9
 17286  2098  00F7               	movwf	I2C_writeRegister@regAddress
 17287  2099  3000               	movlw	0
 17288  209A  00F8               	movwf	I2C_writeRegister@regAddress+1
 17289  209B  0844               	movf	setCellOvervoltageProtection@ov_trip,w
 17290  209C  00B6               	movwf	??_setCellOvervoltageProtection
 17291  209D  01B7               	clrf	??_setCellOvervoltageProtection+1
 17292  209E  0836               	movf	??_setCellOvervoltageProtection,w
 17293  209F  00F9               	movwf	I2C_writeRegister@data
 17294  20A0  0837               	movf	??_setCellOvervoltageProtection+1,w
 17295  20A1  00FA               	movwf	I2C_writeRegister@data+1
 17296  20A2  31B2  222B  31A0   	fcall	_I2C_writeRegister
 17297                           
 17298                           ;BQ76920.c: 155:     for (int i = 0; i < (sizeof(OV_delay_setting) / sizeof((OV_delay_se
      +                          tting)[0])) - 1; i++) {
 17299  20A5  0020               	movlb	0	; select bank0
 17300  20A6  01C5               	clrf	setCellOvervoltageProtection@i
 17301  20A7  01C6               	clrf	setCellOvervoltageProtection@i+1
 17302  20A8                     l8512:	
 17303                           
 17304                           ;BQ76920.c: 156:         if (delay_s >= OV_delay_setting[i]) {
 17305  20A8  0846               	movf	setCellOvervoltageProtection@i+1,w
 17306  20A9  0085               	movwf	5
 17307  20AA  0845               	movf	setCellOvervoltageProtection@i,w
 17308  20AB  0084               	movwf	4
 17309  20AC  3584               	lslf	4,f
 17310  20AD  0D85               	rlf	5,f
 17311  20AE  30F8               	movlw	low (_OV_delay_setting| (0+32768))
 17312  20AF  0784               	addwf	4,f
 17313  20B0  30BA               	movlw	high (_OV_delay_setting| (0+32768))
 17314  20B1  3D85               	addwfc	5,f
 17315  20B2  3F00               	moviw [0]fsr0
 17316  20B3  00B6               	movwf	??_setCellOvervoltageProtection
 17317  20B4  3F01               	moviw [1]fsr0
 17318  20B5  00B7               	movwf	??_setCellOvervoltageProtection+1
 17319  20B6  0835               	movf	setCellOvervoltageProtection@delay_s+1,w
 17320  20B7  3A80               	xorlw	128
 17321  20B8  00B8               	movwf	??_setCellOvervoltageProtection+2
 17322  20B9  0837               	movf	??_setCellOvervoltageProtection+1,w
 17323  20BA  3A80               	xorlw	128
 17324  20BB  0238               	subwf	??_setCellOvervoltageProtection+2,w
 17325  20BC  1D03               	skipz
 17326  20BD  28C0               	goto	u12235
 17327  20BE  0836               	movf	??_setCellOvervoltageProtection,w
 17328  20BF  0234               	subwf	setCellOvervoltageProtection@delay_s,w
 17329  20C0                     u12235:	
 17330  20C0  1C03               	skipc
 17331  20C1  28D0               	goto	l8516
 17332                           
 17333                           ;BQ76920.c: 157:             protect3.bits.UV_DELAY = i;
 17334  20C2  0020               	movlb	0	; select bank0
 17335  20C3  0845               	movf	setCellOvervoltageProtection@i,w
 17336  20C4  00B6               	movwf	??_setCellOvervoltageProtection
 17337  20C5  0EB6               	swapf	??_setCellOvervoltageProtection,f
 17338  20C6  0DB6               	rlf	??_setCellOvervoltageProtection,f
 17339  20C7  0DB6               	rlf	??_setCellOvervoltageProtection,f
 17340  20C8  0023               	movlb	3	; select bank3
 17341  20C9  0854               	movf	BQ76920@protect3^(0+384),w
 17342  20CA  0020               	movlb	0	; select bank0
 17343  20CB  0636               	xorwf	??_setCellOvervoltageProtection,w
 17344  20CC  393F               	andlw	-193
 17345  20CD  0636               	xorwf	??_setCellOvervoltageProtection,w
 17346  20CE  0023               	movlb	3	; select bank3
 17347  20CF  00D4               	movwf	BQ76920@protect3^(0+384)
 17348  20D0                     l8516:	
 17349                           
 17350                           ;BQ76920.c: 159:     }
 17351  20D0  3001               	movlw	1
 17352  20D1  0020               	movlb	0	; select bank0
 17353  20D2  07C5               	addwf	setCellOvervoltageProtection@i,f
 17354  20D3  3000               	movlw	0
 17355  20D4  3DC6               	addwfc	setCellOvervoltageProtection@i+1,f
 17356  20D5  3000               	movlw	0
 17357  20D6  0246               	subwf	setCellOvervoltageProtection@i+1,w
 17358  20D7  3003               	movlw	3
 17359  20D8  1903               	skipnz
 17360  20D9  0245               	subwf	setCellOvervoltageProtection@i,w
 17361  20DA  1C03               	skipc
 17362  20DB  28A8               	goto	l8512
 17363                           
 17364                           ;BQ76920.c: 160:     I2C_writeRegister(0x18,0x08, protect3.regByte);
 17365  20DC  3018               	movlw	24
 17366  20DD  00F5               	movwf	I2C_writeRegister@slaveAddress
 17367  20DE  3000               	movlw	0
 17368  20DF  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 17369  20E0  3008               	movlw	8
 17370  20E1  00F7               	movwf	I2C_writeRegister@regAddress
 17371  20E2  3000               	movlw	0
 17372  20E3  00F8               	movwf	I2C_writeRegister@regAddress+1
 17373  20E4  0023               	movlb	3	; select bank3
 17374  20E5  0854               	movf	BQ76920@protect3^(0+384),w
 17375  20E6  0020               	movlb	0	; select bank0
 17376  20E7  00B6               	movwf	??_setCellOvervoltageProtection
 17377  20E8  01B7               	clrf	??_setCellOvervoltageProtection+1
 17378  20E9  0836               	movf	??_setCellOvervoltageProtection,w
 17379  20EA  00F9               	movwf	I2C_writeRegister@data
 17380  20EB  0837               	movf	??_setCellOvervoltageProtection+1,w
 17381  20EC  00FA               	movwf	I2C_writeRegister@data+1
 17382  20ED  31B2  222B         	fcall	_I2C_writeRegister
 17383  20EF  0008               	return
 17384  20F0                     __end_of_setCellOvervoltageProtection:	
 17385                           
 17386                           	psect	text55
 17387  335E                     __ptext55:	
 17388 ;; *************** function ___lmul *****************
 17389 ;; Defined at:
 17390 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
 17391 ;; Parameters:    Size  Location     Type
 17392 ;;  multiplier      4    1[COMMON] unsigned long 
 17393 ;;  multiplicand    4    5[COMMON] unsigned long 
 17394 ;; Auto vars:     Size  Location     Type
 17395 ;;  product         4    0[BANK0 ] unsigned long 
 17396 ;; Return value:  Size  Location     Type
 17397 ;;                  4    1[COMMON] unsigned long 
 17398 ;; Registers used:
 17399 ;;		wreg, status,2, status,0
 17400 ;; Tracked objects:
 17401 ;;		On entry : 0/0
 17402 ;;		On exit  : 0/0
 17403 ;;		Unchanged: 0/0
 17404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17405 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17406 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17408 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17409 ;;Total ram usage:       12 bytes
 17410 ;; Hardware stack levels used:    1
 17411 ;; Hardware stack levels required when called:    1
 17412 ;; This function calls:
 17413 ;;		Nothing
 17414 ;; This function is called by:
 17415 ;;		_setCellUndervoltageProtection
 17416 ;;		_setCellOvervoltageProtection
 17417 ;; This function uses a non-reentrant model
 17418 ;;
 17419                           
 17420                           
 17421                           ;psect for function ___lmul
 17422  335E                     ___lmul:	
 17423                           
 17424                           ;incstack = 0
 17425                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 17426  335E  3000               	movlw	0
 17427  335F  0020               	movlb	0	; select bank0
 17428  3360  00A3               	movwf	___lmul@product+3
 17429  3361  3000               	movlw	0
 17430  3362  00A2               	movwf	___lmul@product+2
 17431  3363  3000               	movlw	0
 17432  3364  00A1               	movwf	___lmul@product+1
 17433  3365  3000               	movlw	0
 17434  3366  00A0               	movwf	___lmul@product
 17435  3367                     l8376:	
 17436  3367  1C71               	btfss	___lmul@multiplier,0
 17437  3368  2B72               	goto	l8380
 17438  3369  0875               	movf	___lmul@multiplicand,w
 17439  336A  0020               	movlb	0	; select bank0
 17440  336B  07A0               	addwf	___lmul@product,f
 17441  336C  0876               	movf	___lmul@multiplicand+1,w
 17442  336D  3DA1               	addwfc	___lmul@product+1,f
 17443  336E  0877               	movf	___lmul@multiplicand+2,w
 17444  336F  3DA2               	addwfc	___lmul@product+2,f
 17445  3370  0878               	movf	___lmul@multiplicand+3,w
 17446  3371  3DA3               	addwfc	___lmul@product+3,f
 17447  3372                     l8380:	
 17448  3372  3001               	movlw	1
 17449  3373                     u12015:	
 17450  3373  35F5               	lslf	___lmul@multiplicand,f
 17451  3374  0DF6               	rlf	___lmul@multiplicand+1,f
 17452  3375  0DF7               	rlf	___lmul@multiplicand+2,f
 17453  3376  0DF8               	rlf	___lmul@multiplicand+3,f
 17454  3377  0B89               	decfsz	9,f
 17455  3378  2B73               	goto	u12015
 17456  3379  3001               	movlw	1
 17457  337A                     u12025:	
 17458  337A  36F4               	lsrf	___lmul@multiplier+3,f
 17459  337B  0CF3               	rrf	___lmul@multiplier+2,f
 17460  337C  0CF2               	rrf	___lmul@multiplier+1,f
 17461  337D  0CF1               	rrf	___lmul@multiplier,f
 17462  337E  0B89               	decfsz	9,f
 17463  337F  2B7A               	goto	u12025
 17464  3380  0874               	movf	___lmul@multiplier+3,w
 17465  3381  0473               	iorwf	___lmul@multiplier+2,w
 17466  3382  0472               	iorwf	___lmul@multiplier+1,w
 17467  3383  0471               	iorwf	___lmul@multiplier,w
 17468  3384  1D03               	skipz
 17469  3385  2B67               	goto	l8376
 17470  3386  0020               	movlb	0	; select bank0
 17471  3387  0823               	movf	___lmul@product+3,w
 17472  3388  00F4               	movwf	?___lmul+3
 17473  3389  0822               	movf	___lmul@product+2,w
 17474  338A  00F3               	movwf	?___lmul+2
 17475  338B  0821               	movf	___lmul@product+1,w
 17476  338C  00F2               	movwf	?___lmul+1
 17477  338D  0820               	movf	___lmul@product,w
 17478  338E  00F1               	movwf	?___lmul
 17479  338F  0008               	return
 17480  3390                     __end_of___lmul:	
 17481                           
 17482                           	psect	text56
 17483  2DB6                     __ptext56:	
 17484 ;; *************** function _beginAFEcommunication *****************
 17485 ;; Defined at:
 17486 ;;		line 23 in file "BQ76920.c"
 17487 ;; Parameters:    Size  Location     Type
 17488 ;;		None
 17489 ;; Auto vars:     Size  Location     Type
 17490 ;;  i               2   13[BANK0 ] int 
 17491 ;;  commSuccess     2   11[BANK0 ] int 
 17492 ;; Return value:  Size  Location     Type
 17493 ;;                  2    0[BANK0 ] int 
 17494 ;; Registers used:
 17495 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17496 ;; Tracked objects:
 17497 ;;		On entry : 0/0
 17498 ;;		On exit  : 0/0
 17499 ;;		Unchanged: 0/0
 17500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17501 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17502 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17503 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17504 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17505 ;;Total ram usage:       15 bytes
 17506 ;; Hardware stack levels used:    1
 17507 ;; Hardware stack levels required when called:    3
 17508 ;; This function calls:
 17509 ;;		_I2C_writeRegister
 17510 ;;		_readRegister
 17511 ;; This function is called by:
 17512 ;;		_statemachine
 17513 ;; This function uses a non-reentrant model
 17514 ;;
 17515                           
 17516                           
 17517                           ;psect for function _beginAFEcommunication
 17518  2DB6                     _beginAFEcommunication:	
 17519                           
 17520                           ;BQ76920.c: 25:     int commSuccess = 0;
 17521                           
 17522                           ;incstack = 0
 17523                           ; Regs used in _beginAFEcommunication: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17524  2DB6  0020               	movlb	0	; select bank0
 17525  2DB7  01AB               	clrf	beginAFEcommunication@commSuccess
 17526  2DB8  01AC               	clrf	beginAFEcommunication@commSuccess+1
 17527                           
 17528                           ;BQ76920.c: 28:     for (int i = 0; i < 4; i++) {
 17529  2DB9  01AD               	clrf	beginAFEcommunication@i
 17530  2DBA  01AE               	clrf	beginAFEcommunication@i+1
 17531  2DBB                     l8528:	
 17532                           
 17533                           ;BQ76920.c: 29:         cellVoltages[i] = 0;
 17534  2DBB  0020               	movlb	0	; select bank0
 17535  2DBC  352D               	lslf	beginAFEcommunication@i,w
 17536  2DBD  3EA0               	addlw	(low (_cellVoltages| (0+256)))& (0+255)
 17537  2DBE  0086               	movwf	6
 17538  2DBF  3001               	movlw	1	; select bank3/4
 17539  2DC0  0087               	movwf	7
 17540  2DC1  3000               	movlw	0
 17541  2DC2  3FC0               	movwi [0]fsr1
 17542  2DC3  3FC1               	movwi [1]fsr1
 17543                           
 17544                           ;BQ76920.c: 30:     }
 17545  2DC4  3001               	movlw	1
 17546  2DC5  07AD               	addwf	beginAFEcommunication@i,f
 17547  2DC6  3000               	movlw	0
 17548  2DC7  3DAE               	addwfc	beginAFEcommunication@i+1,f
 17549  2DC8  082E               	movf	beginAFEcommunication@i+1,w
 17550  2DC9  3A80               	xorlw	128
 17551  2DCA  00A2               	movwf	??_beginAFEcommunication
 17552  2DCB  3080               	movlw	128
 17553  2DCC  0222               	subwf	??_beginAFEcommunication,w
 17554  2DCD  1D03               	skipz
 17555  2DCE  2DD1               	goto	u12255
 17556  2DCF  3004               	movlw	4
 17557  2DD0  022D               	subwf	beginAFEcommunication@i,w
 17558  2DD1                     u12255:	
 17559  2DD1  1C03               	skipc
 17560  2DD2  2DBB               	goto	l8528
 17561                           
 17562                           ;BQ76920.c: 33:     I2C_writeRegister(0x18, 0x0B, 0x19);
 17563  2DD3  3018               	movlw	24
 17564  2DD4  00F5               	movwf	I2C_writeRegister@slaveAddress
 17565  2DD5  3000               	movlw	0
 17566  2DD6  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 17567  2DD7  300B               	movlw	11
 17568  2DD8  00F7               	movwf	I2C_writeRegister@regAddress
 17569  2DD9  3000               	movlw	0
 17570  2DDA  00F8               	movwf	I2C_writeRegister@regAddress+1
 17571  2DDB  3019               	movlw	25
 17572  2DDC  00F9               	movwf	I2C_writeRegister@data
 17573  2DDD  3000               	movlw	0
 17574  2DDE  00FA               	movwf	I2C_writeRegister@data+1
 17575  2DDF  31B2  222B  31AD   	fcall	_I2C_writeRegister
 17576                           
 17577                           ;BQ76920.c: 35:     if (readRegister(0x18, 0x0B) == 0x19) {
 17578  2DE2  3018               	movlw	24
 17579  2DE3  00F5               	movwf	readRegister@slaveAddress
 17580  2DE4  3000               	movlw	0
 17581  2DE5  00F6               	movwf	readRegister@slaveAddress+1
 17582  2DE6  300B               	movlw	11
 17583  2DE7  00F7               	movwf	readRegister@regAddress
 17584  2DE8  3000               	movlw	0
 17585  2DE9  00F8               	movwf	readRegister@regAddress+1
 17586  2DEA  31B3  23C5  31AD   	fcall	_readRegister
 17587  2DED  3019               	movlw	25
 17588  2DEE  0675               	xorwf	?_readRegister,w
 17589  2DEF  0476               	iorwf	?_readRegister+1,w
 17590  2DF0  1D03               	btfss	3,2
 17591  2DF1  2E64               	goto	l403
 17592                           
 17593                           ;BQ76920.c: 36:         commSuccess = 1;
 17594  2DF2  3001               	movlw	1
 17595  2DF3  0020               	movlb	0	; select bank0
 17596  2DF4  00AB               	movwf	beginAFEcommunication@commSuccess
 17597  2DF5  3000               	movlw	0
 17598  2DF6  00AC               	movwf	beginAFEcommunication@commSuccess+1
 17599                           
 17600                           ;BQ76920.c: 40:         I2C_writeRegister(0x18, 0x04, 0x18);
 17601  2DF7  3018               	movlw	24
 17602  2DF8  00F5               	movwf	I2C_writeRegister@slaveAddress
 17603  2DF9  3000               	movlw	0
 17604  2DFA  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 17605  2DFB  3004               	movlw	4
 17606  2DFC  00F7               	movwf	I2C_writeRegister@regAddress
 17607  2DFD  3000               	movlw	0
 17608  2DFE  00F8               	movwf	I2C_writeRegister@regAddress+1
 17609  2DFF  3018               	movlw	24
 17610  2E00  00F9               	movwf	I2C_writeRegister@data
 17611  2E01  3000               	movlw	0
 17612  2E02  00FA               	movwf	I2C_writeRegister@data+1
 17613  2E03  31B2  222B  31AD   	fcall	_I2C_writeRegister
 17614                           
 17615                           ;BQ76920.c: 41:         I2C_writeRegister(0x18, 0x05, 0x40);
 17616  2E06  3018               	movlw	24
 17617  2E07  00F5               	movwf	I2C_writeRegister@slaveAddress
 17618  2E08  3000               	movlw	0
 17619  2E09  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 17620  2E0A  3005               	movlw	5
 17621  2E0B  00F7               	movwf	I2C_writeRegister@regAddress
 17622  2E0C  3000               	movlw	0
 17623  2E0D  00F8               	movwf	I2C_writeRegister@regAddress+1
 17624  2E0E  3040               	movlw	64
 17625  2E0F  00F9               	movwf	I2C_writeRegister@data
 17626  2E10  3000               	movlw	0
 17627  2E11  00FA               	movwf	I2C_writeRegister@data+1
 17628  2E12  31B2  222B  31AD   	fcall	_I2C_writeRegister
 17629                           
 17630                           ;BQ76920.c: 44:         adcOffset = (signed int) readRegister(0x18, 0x51);
 17631  2E15  3018               	movlw	24
 17632  2E16  00F5               	movwf	readRegister@slaveAddress
 17633  2E17  3000               	movlw	0
 17634  2E18  00F6               	movwf	readRegister@slaveAddress+1
 17635  2E19  3051               	movlw	81
 17636  2E1A  00F7               	movwf	readRegister@regAddress
 17637  2E1B  3000               	movlw	0
 17638  2E1C  00F8               	movwf	readRegister@regAddress+1
 17639  2E1D  31B3  23C5  31AD   	fcall	_readRegister
 17640  2E20  0876               	movf	?_readRegister+1,w
 17641  2E21  0023               	movlb	3	; select bank3
 17642  2E22  00D1               	movwf	(_adcOffset+1)^(0+384)
 17643  2E23  0875               	movf	?_readRegister,w
 17644  2E24  00D0               	movwf	_adcOffset^(0+384)
 17645                           
 17646                           ;BQ76920.c: 45:         adcGain = 365 + (((readRegister(0x18, 0x50) & 0x0C) << 1) |
 17647  2E25  3018               	movlw	24
 17648  2E26  00F5               	movwf	readRegister@slaveAddress
 17649  2E27  3000               	movlw	0
 17650  2E28  00F6               	movwf	readRegister@slaveAddress+1
 17651  2E29  3059               	movlw	89
 17652  2E2A  00F7               	movwf	readRegister@regAddress
 17653  2E2B  3000               	movlw	0
 17654  2E2C  00F8               	movwf	readRegister@regAddress+1
 17655  2E2D  31B3  23C5  31AD   	fcall	_readRegister
 17656  2E30  0875               	movf	?_readRegister,w
 17657  2E31  0020               	movlb	0	; select bank0
 17658  2E32  00A2               	movwf	??_beginAFEcommunication
 17659  2E33  0876               	movf	?_readRegister+1,w
 17660  2E34  00A3               	movwf	??_beginAFEcommunication+1
 17661  2E35  3005               	movlw	5
 17662  2E36  00A4               	movwf	??_beginAFEcommunication+2
 17663  2E37                     u12275:	
 17664  2E37  0D23               	rlf	??_beginAFEcommunication+1,w
 17665  2E38  0CA3               	rrf	??_beginAFEcommunication+1,f
 17666  2E39  0CA2               	rrf	??_beginAFEcommunication,f
 17667  2E3A  0BA4               	decfsz	??_beginAFEcommunication+2,f
 17668  2E3B  2E37               	goto	u12275
 17669  2E3C  3007               	movlw	7
 17670  2E3D  0522               	andwf	??_beginAFEcommunication,w
 17671  2E3E  00A5               	movwf	??_beginAFEcommunication+3
 17672  2E3F  3000               	movlw	0
 17673  2E40  0523               	andwf	??_beginAFEcommunication+1,w
 17674  2E41  00A6               	movwf	??_beginAFEcommunication+4
 17675  2E42  3018               	movlw	24
 17676  2E43  00F5               	movwf	readRegister@slaveAddress
 17677  2E44  3000               	movlw	0
 17678  2E45  00F6               	movwf	readRegister@slaveAddress+1
 17679  2E46  3050               	movlw	80
 17680  2E47  00F7               	movwf	readRegister@regAddress
 17681  2E48  3000               	movlw	0
 17682  2E49  00F8               	movwf	readRegister@regAddress+1
 17683  2E4A  31B3  23C5         	fcall	_readRegister
 17684  2E4C  300C               	movlw	12
 17685  2E4D  0575               	andwf	?_readRegister,w
 17686  2E4E  0020               	movlb	0	; select bank0
 17687  2E4F  00A7               	movwf	??_beginAFEcommunication+5
 17688  2E50  3000               	movlw	0
 17689  2E51  0576               	andwf	?_readRegister+1,w
 17690  2E52  00A8               	movwf	??_beginAFEcommunication+6
 17691  2E53  35A7               	lslf	??_beginAFEcommunication+5,f
 17692  2E54  0DA8               	rlf	??_beginAFEcommunication+6,f
 17693  2E55  0825               	movf	??_beginAFEcommunication+3,w
 17694  2E56  0427               	iorwf	??_beginAFEcommunication+5,w
 17695  2E57  00A9               	movwf	??_beginAFEcommunication+7
 17696  2E58  0826               	movf	??_beginAFEcommunication+4,w
 17697  2E59  0428               	iorwf	??_beginAFEcommunication+6,w
 17698  2E5A  00AA               	movwf	??_beginAFEcommunication+8
 17699  2E5B  0829               	movf	??_beginAFEcommunication+7,w
 17700  2E5C  3E6D               	addlw	109
 17701  2E5D  0023               	movlb	3	; select bank3
 17702  2E5E  00D2               	movwf	_adcGain^(0+384)
 17703  2E5F  3001               	movlw	1
 17704  2E60  0020               	movlb	0	; select bank0
 17705  2E61  3D2A               	addwfc	??_beginAFEcommunication+8,w
 17706  2E62  0023               	movlb	3	; select bank3
 17707  2E63  00D3               	movwf	(_adcGain+1)^(0+384)
 17708  2E64                     l403:	
 17709                           ;BQ76920.c: 48:     }
 17710                           
 17711                           
 17712                           ;BQ76920.c: 49:     return commSuccess;
 17713  2E64  0020               	movlb	0	; select bank0
 17714  2E65  082C               	movf	beginAFEcommunication@commSuccess+1,w
 17715  2E66  00A1               	movwf	?_beginAFEcommunication+1
 17716  2E67  082B               	movf	beginAFEcommunication@commSuccess,w
 17717  2E68  00A0               	movwf	?_beginAFEcommunication
 17718  2E69  0008               	return
 17719  2E6A                     __end_of_beginAFEcommunication:	
 17720                           
 17721                           	psect	text57
 17722  33C5                     __ptext57:	
 17723 ;; *************** function _readRegister *****************
 17724 ;; Defined at:
 17725 ;;		line 107 in file "I2C.c"
 17726 ;; Parameters:    Size  Location     Type
 17727 ;;  slaveAddress    2    5[COMMON] int 
 17728 ;;  regAddress      2    7[COMMON] int 
 17729 ;; Auto vars:     Size  Location     Type
 17730 ;;  recievedData    2    9[COMMON] int 
 17731 ;; Return value:  Size  Location     Type
 17732 ;;                  2    5[COMMON] int 
 17733 ;; Registers used:
 17734 ;;		wreg, status,2, status,0, pclath, cstack
 17735 ;; Tracked objects:
 17736 ;;		On entry : 0/0
 17737 ;;		On exit  : 0/0
 17738 ;;		Unchanged: 0/0
 17739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17740 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17741 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17743 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17744 ;;Total ram usage:        6 bytes
 17745 ;; Hardware stack levels used:    1
 17746 ;; Hardware stack levels required when called:    2
 17747 ;; This function calls:
 17748 ;;		_read_I2C_data
 17749 ;;		_send_I2C_NACK
 17750 ;;		_send_I2C_controlByte
 17751 ;;		_send_I2C_data
 17752 ;;		_send_I2C_startBit
 17753 ;;		_send_I2C_stopBit
 17754 ;; This function is called by:
 17755 ;;		_beginAFEcommunication
 17756 ;;		_setCellUndervoltageProtection
 17757 ;;		_setCellOvervoltageProtection
 17758 ;;		_printotAFERegisters
 17759 ;; This function uses a non-reentrant model
 17760 ;;
 17761                           
 17762                           
 17763                           ;psect for function _readRegister
 17764  33C5                     _readRegister:	
 17765                           
 17766                           ;I2C.c: 108:     int recievedData;;I2C.c: 109:     send_I2C_startBit();
 17767                           
 17768                           ;incstack = 0
 17769                           ; Regs used in _readRegister: [wreg+status,2+status,0+pclath+cstack]
 17770  33C5  31B0  20D7  31B3   	fcall	_send_I2C_startBit
 17771                           
 17772                           ;I2C.c: 110:     send_I2C_controlByte(slaveAddress, 0);
 17773  33C8  0876               	movf	readRegister@slaveAddress+1,w
 17774  33C9  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 17775  33CA  0875               	movf	readRegister@slaveAddress,w
 17776  33CB  00F1               	movwf	send_I2C_controlByte@BlockAddress
 17777  33CC  3000               	movlw	0
 17778  33CD  00F3               	movwf	send_I2C_controlByte@RW_bit
 17779  33CE  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 17780  33CF  31B1  211D  31B3   	fcall	_send_I2C_controlByte
 17781                           
 17782                           ;I2C.c: 111:     send_I2C_data(regAddress);
 17783  33D2  0878               	movf	readRegister@regAddress+1,w
 17784  33D3  00F2               	movwf	send_I2C_data@databyte+1
 17785  33D4  0877               	movf	readRegister@regAddress,w
 17786  33D5  00F1               	movwf	send_I2C_data@databyte
 17787  33D6  31B0  20F8  31B3   	fcall	_send_I2C_data
 17788                           
 17789                           ;I2C.c: 112:     send_I2C_stopBit();
 17790  33D9  31B0  20DF  31B3   	fcall	_send_I2C_stopBit
 17791                           
 17792                           ;I2C.c: 113:     send_I2C_startBit();
 17793  33DC  31B0  20D7  31B3   	fcall	_send_I2C_startBit
 17794                           
 17795                           ;I2C.c: 114:     send_I2C_controlByte(slaveAddress, 1);
 17796  33DF  0876               	movf	readRegister@slaveAddress+1,w
 17797  33E0  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 17798  33E1  0875               	movf	readRegister@slaveAddress,w
 17799  33E2  00F1               	movwf	send_I2C_controlByte@BlockAddress
 17800  33E3  3001               	movlw	1
 17801  33E4  00F3               	movwf	send_I2C_controlByte@RW_bit
 17802  33E5  3000               	movlw	0
 17803  33E6  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 17804  33E7  31B1  211D  31B3   	fcall	_send_I2C_controlByte
 17805                           
 17806                           ;I2C.c: 115:     recievedData = read_I2C_data();
 17807  33EA  3187  27EC  31B3   	fcall	_read_I2C_data
 17808  33ED  0872               	movf	?_read_I2C_data+1,w
 17809  33EE  00FA               	movwf	readRegister@recievedData+1
 17810  33EF  0871               	movf	?_read_I2C_data,w
 17811  33F0  00F9               	movwf	readRegister@recievedData
 17812                           
 17813                           ;I2C.c: 116:     send_I2C_NACK();
 17814  33F1  31B1  2101  31B3   	fcall	_send_I2C_NACK
 17815                           
 17816                           ;I2C.c: 117:     send_I2C_stopBit();
 17817  33F4  31B0  20DF         	fcall	_send_I2C_stopBit
 17818                           
 17819                           ;I2C.c: 118:     return recievedData;
 17820  33F6  087A               	movf	readRegister@recievedData+1,w
 17821  33F7  00F6               	movwf	?_readRegister+1
 17822  33F8  0879               	movf	readRegister@recievedData,w
 17823  33F9  00F5               	movwf	?_readRegister
 17824  33FA  0008               	return
 17825  33FB                     __end_of_readRegister:	
 17826                           
 17827                           	psect	text58
 17828  3101                     __ptext58:	
 17829 ;; *************** function _send_I2C_NACK *****************
 17830 ;; Defined at:
 17831 ;;		line 83 in file "I2C.c"
 17832 ;; Parameters:    Size  Location     Type
 17833 ;;		None
 17834 ;; Auto vars:     Size  Location     Type
 17835 ;;		None
 17836 ;; Return value:  Size  Location     Type
 17837 ;;                  1    wreg      void 
 17838 ;; Registers used:
 17839 ;;		None
 17840 ;; Tracked objects:
 17841 ;;		On entry : 0/0
 17842 ;;		On exit  : 0/0
 17843 ;;		Unchanged: 0/0
 17844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17849 ;;Total ram usage:        0 bytes
 17850 ;; Hardware stack levels used:    1
 17851 ;; Hardware stack levels required when called:    1
 17852 ;; This function calls:
 17853 ;;		Nothing
 17854 ;; This function is called by:
 17855 ;;		_readRegister
 17856 ;; This function uses a non-reentrant model
 17857 ;;
 17858                           
 17859                           
 17860                           ;psect for function _send_I2C_NACK
 17861  3101                     _send_I2C_NACK:	
 17862                           
 17863                           ;I2C.c: 84:     PIR1bits.SSP1IF = 0;
 17864                           
 17865                           ;incstack = 0
 17866                           ; Regs used in _send_I2C_NACK: []
 17867  3101  0020               	movlb	0	; select bank0
 17868  3102  1191               	bcf	17,3	;volatile
 17869                           
 17870                           ;I2C.c: 85:     SSPCON2bits.ACKDT = 1;
 17871  3103  0024               	movlb	4	; select bank4
 17872  3104  1696               	bsf	22,5	;volatile
 17873                           
 17874                           ;I2C.c: 86:     SSPCON2bits.ACKEN = 1;
 17875  3105  1616               	bsf	22,4	;volatile
 17876  3106                     l300:	
 17877                           ;I2C.c: 87:     while (!PIR1bits.SSP1IF);
 17878                           
 17879  3106  0020               	movlb	0	; select bank0
 17880  3107  1991               	btfsc	17,3	;volatile
 17881  3108  0008               	return
 17882  3109  2906               	goto	l300
 17883  310A                     __end_of_send_I2C_NACK:	
 17884                           
 17885                           	psect	text59
 17886  07EC                     __ptext59:	
 17887 ;; *************** function _read_I2C_data *****************
 17888 ;; Defined at:
 17889 ;;		line 42 in file "I2C.c"
 17890 ;; Parameters:    Size  Location     Type
 17891 ;;		None
 17892 ;; Auto vars:     Size  Location     Type
 17893 ;;		None
 17894 ;; Return value:  Size  Location     Type
 17895 ;;                  2    1[COMMON] unsigned int 
 17896 ;; Registers used:
 17897 ;;		wreg
 17898 ;; Tracked objects:
 17899 ;;		On entry : 0/0
 17900 ;;		On exit  : 0/0
 17901 ;;		Unchanged: 0/0
 17902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17903 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17905 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17906 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17907 ;;Total ram usage:        4 bytes
 17908 ;; Hardware stack levels used:    1
 17909 ;; Hardware stack levels required when called:    1
 17910 ;; This function calls:
 17911 ;;		Nothing
 17912 ;; This function is called by:
 17913 ;;		_readRegister
 17914 ;; This function uses a non-reentrant model
 17915 ;;
 17916                           
 17917                           
 17918                           ;psect for function _read_I2C_data
 17919  07EC                     _read_I2C_data:	
 17920                           
 17921                           ;I2C.c: 43:     PIR1bits.SSP1IF = 0;
 17922                           
 17923                           ;incstack = 0
 17924                           ; Regs used in _read_I2C_data: [wreg]
 17925  07EC  0020               	movlb	0	; select bank0
 17926  07ED  1191               	bcf	17,3	;volatile
 17927                           
 17928                           ;I2C.c: 44:     SSPCON2bits.RCEN = 1;
 17929  07EE  0024               	movlb	4	; select bank4
 17930  07EF  1596               	bsf	22,3	;volatile
 17931  07F0                     l270:	
 17932                           ;I2C.c: 45:     while (!PIR1bits.SSP1IF);
 17933                           
 17934  07F0  0020               	movlb	0	; select bank0
 17935  07F1  1D91               	btfss	17,3	;volatile
 17936  07F2  2FF0               	goto	l270
 17937                           
 17938                           ;I2C.c: 46:     return (SSPBUF);
 17939  07F3  0024               	movlb	4	; select bank4
 17940  07F4  0811               	movf	17,w	;volatile
 17941  07F5  00F3               	movwf	??_read_I2C_data
 17942  07F6  01F4               	clrf	??_read_I2C_data+1
 17943  07F7  0873               	movf	??_read_I2C_data,w
 17944  07F8  00F1               	movwf	?_read_I2C_data
 17945  07F9  0874               	movf	??_read_I2C_data+1,w
 17946  07FA  00F2               	movwf	?_read_I2C_data+1
 17947  07FB  0008               	return
 17948  07FC                     __end_of_read_I2C_data:	
 17949                           
 17950                           	psect	text60
 17951  322B                     __ptext60:	
 17952 ;; *************** function _I2C_writeRegister *****************
 17953 ;; Defined at:
 17954 ;;		line 96 in file "I2C.c"
 17955 ;; Parameters:    Size  Location     Type
 17956 ;;  slaveAddress    2    5[COMMON] int 
 17957 ;;  regAddress      2    7[COMMON] int 
 17958 ;;  data            2    9[COMMON] int 
 17959 ;; Auto vars:     Size  Location     Type
 17960 ;;		None
 17961 ;; Return value:  Size  Location     Type
 17962 ;;                  1    wreg      void 
 17963 ;; Registers used:
 17964 ;;		wreg, status,2, status,0, pclath, cstack
 17965 ;; Tracked objects:
 17966 ;;		On entry : 0/0
 17967 ;;		On exit  : 0/0
 17968 ;;		Unchanged: 0/0
 17969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17970 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17973 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17974 ;;Total ram usage:        6 bytes
 17975 ;; Hardware stack levels used:    1
 17976 ;; Hardware stack levels required when called:    2
 17977 ;; This function calls:
 17978 ;;		_send_I2C_controlByte
 17979 ;;		_send_I2C_data
 17980 ;;		_send_I2C_startBit
 17981 ;;		_send_I2C_stopBit
 17982 ;; This function is called by:
 17983 ;;		_beginAFEcommunication
 17984 ;;		_setShortCircuitProtection
 17985 ;;		_setOverCurrentDischargeProtection
 17986 ;;		_setCellUndervoltageProtection
 17987 ;;		_setCellOvervoltageProtection
 17988 ;; This function uses a non-reentrant model
 17989 ;;
 17990                           
 17991                           
 17992                           ;psect for function _I2C_writeRegister
 17993  322B                     _I2C_writeRegister:	
 17994                           
 17995                           ;I2C.c: 97:     send_I2C_startBit();
 17996                           
 17997                           ;incstack = 0
 17998                           ; Regs used in _I2C_writeRegister: [wreg+status,2+status,0+pclath+cstack]
 17999  322B  31B0  20D7  31B2   	fcall	_send_I2C_startBit
 18000                           
 18001                           ;I2C.c: 98:     send_I2C_controlByte(slaveAddress, 0);
 18002  322E  0876               	movf	I2C_writeRegister@slaveAddress+1,w
 18003  322F  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 18004  3230  0875               	movf	I2C_writeRegister@slaveAddress,w
 18005  3231  00F1               	movwf	send_I2C_controlByte@BlockAddress
 18006  3232  3000               	movlw	0
 18007  3233  00F3               	movwf	send_I2C_controlByte@RW_bit
 18008  3234  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 18009  3235  31B1  211D  31B2   	fcall	_send_I2C_controlByte
 18010                           
 18011                           ;I2C.c: 99:     send_I2C_data(regAddress);
 18012  3238  0878               	movf	I2C_writeRegister@regAddress+1,w
 18013  3239  00F2               	movwf	send_I2C_data@databyte+1
 18014  323A  0877               	movf	I2C_writeRegister@regAddress,w
 18015  323B  00F1               	movwf	send_I2C_data@databyte
 18016  323C  31B0  20F8  31B2   	fcall	_send_I2C_data
 18017                           
 18018                           ;I2C.c: 100:     send_I2C_data(data);
 18019  323F  087A               	movf	I2C_writeRegister@data+1,w
 18020  3240  00F2               	movwf	send_I2C_data@databyte+1
 18021  3241  0879               	movf	I2C_writeRegister@data,w
 18022  3242  00F1               	movwf	send_I2C_data@databyte
 18023  3243  31B0  20F8  31B2   	fcall	_send_I2C_data
 18024                           
 18025                           ;I2C.c: 101:     send_I2C_stopBit();
 18026  3246  31B0  20DF         	fcall	_send_I2C_stopBit
 18027  3248  0008               	return
 18028  3249                     __end_of_I2C_writeRegister:	
 18029                           
 18030                           	psect	text61
 18031  30DF                     __ptext61:	
 18032 ;; *************** function _send_I2C_stopBit *****************
 18033 ;; Defined at:
 18034 ;;		line 70 in file "I2C.c"
 18035 ;; Parameters:    Size  Location     Type
 18036 ;;		None
 18037 ;; Auto vars:     Size  Location     Type
 18038 ;;		None
 18039 ;; Return value:  Size  Location     Type
 18040 ;;                  1    wreg      void 
 18041 ;; Registers used:
 18042 ;;		None
 18043 ;; Tracked objects:
 18044 ;;		On entry : 0/0
 18045 ;;		On exit  : 0/0
 18046 ;;		Unchanged: 0/0
 18047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18052 ;;Total ram usage:        0 bytes
 18053 ;; Hardware stack levels used:    1
 18054 ;; Hardware stack levels required when called:    1
 18055 ;; This function calls:
 18056 ;;		Nothing
 18057 ;; This function is called by:
 18058 ;;		_I2C_writeRegister
 18059 ;;		_readRegister
 18060 ;; This function uses a non-reentrant model
 18061 ;;
 18062                           
 18063                           
 18064                           ;psect for function _send_I2C_stopBit
 18065  30DF                     _send_I2C_stopBit:	
 18066                           
 18067                           ;I2C.c: 71:     PIR1bits.SSP1IF = 0;
 18068                           
 18069                           ;incstack = 0
 18070                           ; Regs used in _send_I2C_stopBit: []
 18071  30DF  0020               	movlb	0	; select bank0
 18072  30E0  1191               	bcf	17,3	;volatile
 18073                           
 18074                           ;I2C.c: 72:     SSPCON2bits.PEN = 1;
 18075  30E1  0024               	movlb	4	; select bank4
 18076  30E2  1516               	bsf	22,2	;volatile
 18077  30E3                     l288:	
 18078                           ;I2C.c: 73:     while (!PIR1bits.SSP1IF);
 18079                           
 18080  30E3  0020               	movlb	0	; select bank0
 18081  30E4  1991               	btfsc	17,3	;volatile
 18082  30E5  0008               	return
 18083  30E6  28E3               	goto	l288
 18084  30E7                     __end_of_send_I2C_stopBit:	
 18085                           
 18086                           	psect	text62
 18087  30D7                     __ptext62:	
 18088 ;; *************** function _send_I2C_startBit *****************
 18089 ;; Defined at:
 18090 ;;		line 64 in file "I2C.c"
 18091 ;; Parameters:    Size  Location     Type
 18092 ;;		None
 18093 ;; Auto vars:     Size  Location     Type
 18094 ;;		None
 18095 ;; Return value:  Size  Location     Type
 18096 ;;                  1    wreg      void 
 18097 ;; Registers used:
 18098 ;;		None
 18099 ;; Tracked objects:
 18100 ;;		On entry : 0/0
 18101 ;;		On exit  : 0/0
 18102 ;;		Unchanged: 0/0
 18103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18108 ;;Total ram usage:        0 bytes
 18109 ;; Hardware stack levels used:    1
 18110 ;; Hardware stack levels required when called:    1
 18111 ;; This function calls:
 18112 ;;		Nothing
 18113 ;; This function is called by:
 18114 ;;		_I2C_writeRegister
 18115 ;;		_readRegister
 18116 ;; This function uses a non-reentrant model
 18117 ;;
 18118                           
 18119                           
 18120                           ;psect for function _send_I2C_startBit
 18121  30D7                     _send_I2C_startBit:	
 18122                           
 18123                           ;I2C.c: 65:     PIR1bits.SSP1IF = 0;
 18124                           
 18125                           ;incstack = 0
 18126                           ; Regs used in _send_I2C_startBit: []
 18127  30D7  0020               	movlb	0	; select bank0
 18128  30D8  1191               	bcf	17,3	;volatile
 18129                           
 18130                           ;I2C.c: 66:     SSPCON2bits.SEN = 1;
 18131  30D9  0024               	movlb	4	; select bank4
 18132  30DA  1416               	bsf	22,0	;volatile
 18133  30DB                     l282:	
 18134                           ;I2C.c: 67:     while (!PIR1bits.SSP1IF);
 18135                           
 18136  30DB  0020               	movlb	0	; select bank0
 18137  30DC  1991               	btfsc	17,3	;volatile
 18138  30DD  0008               	return
 18139  30DE  28DB               	goto	l282
 18140  30DF                     __end_of_send_I2C_startBit:	
 18141                           
 18142                           	psect	text63
 18143  30F8                     __ptext63:	
 18144 ;; *************** function _send_I2C_data *****************
 18145 ;; Defined at:
 18146 ;;		line 33 in file "I2C.c"
 18147 ;; Parameters:    Size  Location     Type
 18148 ;;  databyte        2    1[COMMON] unsigned int 
 18149 ;; Auto vars:     Size  Location     Type
 18150 ;;		None
 18151 ;; Return value:  Size  Location     Type
 18152 ;;                  1    wreg      void 
 18153 ;; Registers used:
 18154 ;;		wreg
 18155 ;; Tracked objects:
 18156 ;;		On entry : 0/0
 18157 ;;		On exit  : 0/0
 18158 ;;		Unchanged: 0/0
 18159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18160 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18163 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18164 ;;Total ram usage:        2 bytes
 18165 ;; Hardware stack levels used:    1
 18166 ;; Hardware stack levels required when called:    1
 18167 ;; This function calls:
 18168 ;;		Nothing
 18169 ;; This function is called by:
 18170 ;;		_I2C_writeRegister
 18171 ;;		_readRegister
 18172 ;; This function uses a non-reentrant model
 18173 ;;
 18174                           
 18175                           
 18176                           ;psect for function _send_I2C_data
 18177  30F8                     _send_I2C_data:	
 18178                           
 18179                           ;I2C.c: 34:     PIR1bits.SSP1IF = 0;
 18180                           
 18181                           ;incstack = 0
 18182                           ; Regs used in _send_I2C_data: [wreg]
 18183  30F8  0020               	movlb	0	; select bank0
 18184  30F9  1191               	bcf	17,3	;volatile
 18185                           
 18186                           ;I2C.c: 35:     SSPBUF = databyte;
 18187  30FA  0871               	movf	send_I2C_data@databyte,w
 18188  30FB  0024               	movlb	4	; select bank4
 18189  30FC  0091               	movwf	17	;volatile
 18190  30FD                     l264:	
 18191                           ;I2C.c: 36:     while (!PIR1bits.SSP1IF);
 18192                           
 18193  30FD  0020               	movlb	0	; select bank0
 18194  30FE  1991               	btfsc	17,3	;volatile
 18195  30FF  0008               	return
 18196  3100  28FD               	goto	l264
 18197  3101                     __end_of_send_I2C_data:	
 18198                           
 18199                           	psect	text64
 18200  311D                     __ptext64:	
 18201 ;; *************** function _send_I2C_controlByte *****************
 18202 ;; Defined at:
 18203 ;;		line 52 in file "I2C.c"
 18204 ;; Parameters:    Size  Location     Type
 18205 ;;  BlockAddress    2    1[COMMON] unsigned int 
 18206 ;;  RW_bit          2    3[COMMON] unsigned int 
 18207 ;; Auto vars:     Size  Location     Type
 18208 ;;		None
 18209 ;; Return value:  Size  Location     Type
 18210 ;;                  1    wreg      void 
 18211 ;; Registers used:
 18212 ;;		wreg, status,2, status,0
 18213 ;; Tracked objects:
 18214 ;;		On entry : 0/0
 18215 ;;		On exit  : 0/0
 18216 ;;		Unchanged: 0/0
 18217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18218 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18221 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18222 ;;Total ram usage:        4 bytes
 18223 ;; Hardware stack levels used:    1
 18224 ;; Hardware stack levels required when called:    1
 18225 ;; This function calls:
 18226 ;;		Nothing
 18227 ;; This function is called by:
 18228 ;;		_I2C_writeRegister
 18229 ;;		_readRegister
 18230 ;; This function uses a non-reentrant model
 18231 ;;
 18232                           
 18233                           
 18234                           ;psect for function _send_I2C_controlByte
 18235  311D                     _send_I2C_controlByte:	
 18236                           
 18237                           ;I2C.c: 53:     PIR1bits.SSP1IF = 0;
 18238                           
 18239                           ;incstack = 0
 18240                           ; Regs used in _send_I2C_controlByte: [wreg+status,2+status,0]
 18241  311D  0020               	movlb	0	; select bank0
 18242  311E  1191               	bcf	17,3	;volatile
 18243                           
 18244                           ;I2C.c: 59:     SSPBUF = (((0b0000 << 4) | (BlockAddress << 1)) + RW_bit);
 18245  311F  3571               	lslf	send_I2C_controlByte@BlockAddress,w
 18246  3120  0773               	addwf	send_I2C_controlByte@RW_bit,w
 18247  3121  0024               	movlb	4	; select bank4
 18248  3122  0091               	movwf	17	;volatile
 18249  3123                     l276:	
 18250                           ;I2C.c: 61:     while (!PIR1bits.SSP1IF);
 18251                           
 18252  3123  0020               	movlb	0	; select bank0
 18253  3124  1991               	btfsc	17,3	;volatile
 18254  3125  0008               	return
 18255  3126  2923               	goto	l276
 18256  3127                     __end_of_send_I2C_controlByte:	
 18257                           
 18258                           	psect	text65
 18259  32C7                     __ptext65:	
 18260 ;; *************** function _RGB_AWAIT_AFE_CONN *****************
 18261 ;; Defined at:
 18262 ;;		line 43 in file "RGB.c"
 18263 ;; Parameters:    Size  Location     Type
 18264 ;;		None
 18265 ;; Auto vars:     Size  Location     Type
 18266 ;;		None
 18267 ;; Return value:  Size  Location     Type
 18268 ;;                  1    wreg      void 
 18269 ;; Registers used:
 18270 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 18271 ;; Tracked objects:
 18272 ;;		On entry : 0/0
 18273 ;;		On exit  : 0/0
 18274 ;;		Unchanged: 0/0
 18275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18278 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18279 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18280 ;;Total ram usage:        1 bytes
 18281 ;; Hardware stack levels used:    1
 18282 ;; Hardware stack levels required when called:    2
 18283 ;; This function calls:
 18284 ;;		_RGB_color
 18285 ;; This function is called by:
 18286 ;;		_statemachine
 18287 ;; This function uses a non-reentrant model
 18288 ;;
 18289                           
 18290                           
 18291                           ;psect for function _RGB_AWAIT_AFE_CONN
 18292  32C7                     _RGB_AWAIT_AFE_CONN:	
 18293                           
 18294                           ;RGB.c: 45:     if (toggleColor) {
 18295                           
 18296                           ;incstack = 0
 18297                           ; Regs used in _RGB_AWAIT_AFE_CONN: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 18298  32C7  087C               	movf	_toggleColor,w
 18299  32C8  1903               	btfsc	3,2
 18300  32C9  2AD9               	goto	l6704
 18301                           
 18302                           ;RGB.c: 46:         toggleColor = !toggleColor;
 18303  32CA  087C               	movf	_toggleColor,w
 18304  32CB  1D03               	btfss	3,2
 18305  32CC  2ACF               	goto	u9430
 18306  32CD  3001               	movlw	1
 18307  32CE  2AD0               	goto	u9440
 18308  32CF                     u9430:	
 18309  32CF  3000               	movlw	0
 18310  32D0                     u9440:	
 18311  32D0  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 18312  32D1  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 18313  32D2  00FC               	movwf	_toggleColor
 18314                           
 18315                           ;RGB.c: 47:         RGB_color(0);
 18316  32D3  3000               	movlw	0
 18317  32D4  00F1               	movwf	RGB_color@color
 18318  32D5  00F2               	movwf	RGB_color@color+1
 18319  32D6  31B2  22A6         	fcall	_RGB_color
 18320                           
 18321                           ;RGB.c: 48:     } else {
 18322  32D8  0008               	return
 18323  32D9                     l6704:	
 18324                           
 18325                           ;RGB.c: 49:         toggleColor = !toggleColor;
 18326  32D9  087C               	movf	_toggleColor,w
 18327  32DA  1D03               	btfss	3,2
 18328  32DB  2ADE               	goto	u9450
 18329  32DC  3001               	movlw	1
 18330  32DD  2ADF               	goto	u9460
 18331  32DE                     u9450:	
 18332  32DE  3000               	movlw	0
 18333  32DF                     u9460:	
 18334  32DF  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 18335  32E0  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 18336  32E1  00FC               	movwf	_toggleColor
 18337                           
 18338                           ;RGB.c: 50:         RGB_color(1);
 18339  32E2  3001               	movlw	1
 18340  32E3  00F1               	movwf	RGB_color@color
 18341  32E4  3000               	movlw	0
 18342  32E5  00F2               	movwf	RGB_color@color+1
 18343  32E6  31B2  22A6         	fcall	_RGB_color
 18344  32E8  0008               	return
 18345  32E9                     __end_of_RGB_AWAIT_AFE_CONN:	
 18346                           
 18347                           	psect	text66
 18348  32A6                     __ptext66:	
 18349 ;; *************** function _RGB_color *****************
 18350 ;; Defined at:
 18351 ;;		line 17 in file "RGB.c"
 18352 ;; Parameters:    Size  Location     Type
 18353 ;;  color           2    1[COMMON] int 
 18354 ;; Auto vars:     Size  Location     Type
 18355 ;;		None
 18356 ;; Return value:  Size  Location     Type
 18357 ;;                  1    wreg      void 
 18358 ;; Registers used:
 18359 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 18360 ;; Tracked objects:
 18361 ;;		On entry : 0/0
 18362 ;;		On exit  : 0/0
 18363 ;;		Unchanged: 0/0
 18364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18365 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18368 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18369 ;;Total ram usage:        2 bytes
 18370 ;; Hardware stack levels used:    1
 18371 ;; Hardware stack levels required when called:    1
 18372 ;; This function calls:
 18373 ;;		Nothing
 18374 ;; This function is called by:
 18375 ;;		_statemachine
 18376 ;;		_RGB_AWAIT_AFE_CONN
 18377 ;; This function uses a non-reentrant model
 18378 ;;
 18379                           
 18380                           
 18381                           ;psect for function _RGB_color
 18382  32A6                     _RGB_color:	
 18383                           
 18384                           ;RGB.c: 19:     switch (color) {
 18385                           
 18386                           ;incstack = 0
 18387                           ; Regs used in _RGB_color: [wreg-fsr0h+status,2+status,0]
 18388  32A6  2AB6               	goto	l6550
 18389  32A7                     l322:	
 18390                           ;RGB.c: 20:         case 0:
 18391                           
 18392                           
 18393                           ;RGB.c: 21:             LATAbits.LATA4 = 0;
 18394  32A7  0022               	movlb	2	; select bank2
 18395  32A8  120C               	bcf	12,4	;volatile
 18396                           
 18397                           ;RGB.c: 22:             LATAbits.LATA5 = 1;
 18398  32A9  168C               	bsf	12,5	;volatile
 18399                           
 18400                           ;RGB.c: 23:             LATEbits.LATE0 = 1;
 18401  32AA  1410               	bsf	16,0	;volatile
 18402                           
 18403                           ;RGB.c: 24:             break;
 18404  32AB  0008               	return
 18405  32AC                     l324:	
 18406                           ;RGB.c: 25:         case 1:
 18407                           
 18408                           
 18409                           ;RGB.c: 26:             LATAbits.LATA4 = 1;
 18410  32AC  0022               	movlb	2	; select bank2
 18411  32AD  160C               	bsf	12,4	;volatile
 18412                           
 18413                           ;RGB.c: 27:             LATAbits.LATA5 = 0;
 18414  32AE  128C               	bcf	12,5	;volatile
 18415                           
 18416                           ;RGB.c: 28:             LATEbits.LATE0 = 1;
 18417  32AF  1410               	bsf	16,0	;volatile
 18418                           
 18419                           ;RGB.c: 29:             break;
 18420  32B0  0008               	return
 18421  32B1                     l325:	
 18422                           ;RGB.c: 30:         case 2:
 18423                           
 18424                           
 18425                           ;RGB.c: 31:             LATAbits.LATA4 = 1;
 18426  32B1  0022               	movlb	2	; select bank2
 18427  32B2  160C               	bsf	12,4	;volatile
 18428                           
 18429                           ;RGB.c: 32:             LATAbits.LATA5 = 1;
 18430  32B3  168C               	bsf	12,5	;volatile
 18431                           
 18432                           ;RGB.c: 33:             LATEbits.LATE0 = 0;
 18433  32B4  1010               	bcf	16,0	;volatile
 18434                           
 18435                           ;RGB.c: 34:             break;
 18436  32B5  0008               	return
 18437  32B6                     l6550:	
 18438                           
 18439                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18440                           ; Switch size 1, requested type "simple"
 18441                           ; Number of cases is 1, Range of values is 0 to 0
 18442                           ; switch strategies available:
 18443                           ; Name         Instructions Cycles
 18444                           ; simple_byte            4     3 (average)
 18445                           ; direct_byte            8     6 (fixed)
 18446                           ; jumptable            260     6 (fixed)
 18447                           ;	Chosen strategy is simple_byte
 18448  32B6  0872               	movf	RGB_color@color+1,w
 18449  32B7  3A00               	xorlw	0	; case 0
 18450  32B8  1903               	skipnz
 18451  32B9  2ABB               	goto	l8830
 18452  32BA  2AC6               	goto	l326
 18453  32BB                     l8830:	
 18454                           
 18455                           ; Switch size 1, requested type "simple"
 18456                           ; Number of cases is 3, Range of values is 0 to 2
 18457                           ; switch strategies available:
 18458                           ; Name         Instructions Cycles
 18459                           ; simple_byte           10     6 (average)
 18460                           ; direct_byte           12     6 (fixed)
 18461                           ; jumptable            260     6 (fixed)
 18462                           ;	Chosen strategy is simple_byte
 18463  32BB  0871               	movf	RGB_color@color,w
 18464  32BC  3A00               	xorlw	0	; case 0
 18465  32BD  1903               	skipnz
 18466  32BE  2AA7               	goto	l322
 18467  32BF  3A01               	xorlw	1	; case 1
 18468  32C0  1903               	skipnz
 18469  32C1  2AAC               	goto	l324
 18470  32C2  3A03               	xorlw	3	; case 2
 18471  32C3  1903               	skipnz
 18472  32C4  2AB1               	goto	l325
 18473  32C5  2AC6               	goto	l326
 18474  32C6                     l326:	
 18475  32C6  0008               	return
 18476  32C7                     __end_of_RGB_color:	
 18477                           
 18478                           	psect	text67
 18479  351D                     __ptext67:	
 18480 ;; *************** function _AFE_getSetShortCircuitCurrent *****************
 18481 ;; Defined at:
 18482 ;;		line 176 in file "BQ76920.c"
 18483 ;; Parameters:    Size  Location     Type
 18484 ;;		None
 18485 ;; Auto vars:     Size  Location     Type
 18486 ;;		None
 18487 ;; Return value:  Size  Location     Type
 18488 ;;                  4   67[BANK0 ] long 
 18489 ;; Registers used:
 18490 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 18491 ;; Tracked objects:
 18492 ;;		On entry : 0/0
 18493 ;;		On exit  : 0/0
 18494 ;;		Unchanged: 0/0
 18495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18496 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18498 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18499 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18500 ;;Total ram usage:        8 bytes
 18501 ;; Hardware stack levels used:    1
 18502 ;; Hardware stack levels required when called:    2
 18503 ;; This function calls:
 18504 ;;		___fldiv
 18505 ;;		___fltol
 18506 ;;		___xxtofl
 18507 ;; This function is called by:
 18508 ;;		_statemachine
 18509 ;; This function uses a non-reentrant model
 18510 ;;
 18511                           
 18512                           
 18513                           ;psect for function _AFE_getSetShortCircuitCurrent
 18514  351D                     _AFE_getSetShortCircuitCurrent:	
 18515                           
 18516                           ;BQ76920.c: 177:     return (long) (SCD_threshold_setting[protect1.bits.SCD_THRESH]) / s
      +                          huntResistorValue_mOhm;
 18517                           
 18518                           ;incstack = 0
 18519                           ; Regs used in _AFE_getSetShortCircuitCurrent: [wreg-fsr0h+status,2+status,0+pclath+csta
      +                          ck]
 18520  351D  0023               	movlb	3	; select bank3
 18521  351E  0856               	movf	BQ76920@protect1^(0+384),w
 18522  351F  3907               	andlw	7
 18523  3520  0020               	movlb	0	; select bank0
 18524  3521  00E7               	movwf	??_AFE_getSetShortCircuitCurrent
 18525  3522  01E8               	clrf	??_AFE_getSetShortCircuitCurrent+1
 18526  3523  35E7               	lslf	??_AFE_getSetShortCircuitCurrent,f
 18527  3524  0DE8               	rlf	??_AFE_getSetShortCircuitCurrent+1,f
 18528  3525  30E8               	movlw	low (_SCD_threshold_setting| (0+32768))
 18529  3526  0767               	addwf	??_AFE_getSetShortCircuitCurrent,w
 18530  3527  0084               	movwf	4
 18531  3528  30BA               	movlw	high (_SCD_threshold_setting| (0+32768))
 18532  3529  3D68               	addwfc	??_AFE_getSetShortCircuitCurrent+1,w
 18533  352A  0085               	movwf	5
 18534  352B  3F00               	moviw [0]fsr0
 18535  352C  00E9               	movwf	??_AFE_getSetShortCircuitCurrent+2
 18536  352D  3F01               	moviw [1]fsr0
 18537  352E  00EA               	movwf	??_AFE_getSetShortCircuitCurrent+3
 18538  352F  0869               	movf	??_AFE_getSetShortCircuitCurrent+2,w
 18539  3530  00F1               	movwf	___xxtofl@val
 18540  3531  086A               	movf	??_AFE_getSetShortCircuitCurrent+3,w
 18541  3532  00F2               	movwf	___xxtofl@val+1
 18542  3533  0D89               	rlf	9,f
 18543  3534  3B89               	subwfb	9,f
 18544  3535  0989               	comf	9,f
 18545  3536  00F3               	movwf	___xxtofl@val+2
 18546  3537  00F4               	movwf	___xxtofl@val+3
 18547  3538  3001               	movlw	1
 18548  3539  31AB  2332  31B5   	fcall	___xxtofl
 18549  353C  0874               	movf	?___xxtofl+3,w
 18550  353D  0020               	movlb	0	; select bank0
 18551  353E  00C7               	movwf	___fldiv@b+3
 18552  353F  0873               	movf	?___xxtofl+2,w
 18553  3540  00C6               	movwf	___fldiv@b+2
 18554  3541  0872               	movf	?___xxtofl+1,w
 18555  3542  00C5               	movwf	___fldiv@b+1
 18556  3543  0871               	movf	?___xxtofl,w
 18557  3544  00C4               	movwf	___fldiv@b
 18558  3545  0023               	movlb	3	; select bank3
 18559  3546  0835               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 18560  3547  0020               	movlb	0	; select bank0
 18561  3548  00C3               	movwf	___fldiv@a+3
 18562  3549  0023               	movlb	3	; select bank3
 18563  354A  0834               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 18564  354B  0020               	movlb	0	; select bank0
 18565  354C  00C2               	movwf	___fldiv@a+2
 18566  354D  0023               	movlb	3	; select bank3
 18567  354E  0833               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 18568  354F  0020               	movlb	0	; select bank0
 18569  3550  00C1               	movwf	___fldiv@a+1
 18570  3551  0023               	movlb	3	; select bank3
 18571  3552  0832               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 18572  3553  0020               	movlb	0	; select bank0
 18573  3554  00C0               	movwf	___fldiv@a
 18574  3555  3190  2052  31B5   	fcall	___fldiv
 18575  3558  0020               	movlb	0	; select bank0
 18576  3559  0843               	movf	?___fldiv+3,w
 18577  355A  00DD               	movwf	___fltol@f1+3
 18578  355B  0842               	movf	?___fldiv+2,w
 18579  355C  00DC               	movwf	___fltol@f1+2
 18580  355D  0841               	movf	?___fldiv+1,w
 18581  355E  00DB               	movwf	___fltol@f1+1
 18582  355F  0840               	movf	?___fldiv,w
 18583  3560  00DA               	movwf	___fltol@f1
 18584  3561  31B6  26B9         	fcall	___fltol
 18585  3563  0020               	movlb	0	; select bank0
 18586  3564  085D               	movf	?___fltol+3,w
 18587  3565  00E6               	movwf	?_AFE_getSetShortCircuitCurrent+3
 18588  3566  085C               	movf	?___fltol+2,w
 18589  3567  00E5               	movwf	?_AFE_getSetShortCircuitCurrent+2
 18590  3568  085B               	movf	?___fltol+1,w
 18591  3569  00E4               	movwf	?_AFE_getSetShortCircuitCurrent+1
 18592  356A  085A               	movf	?___fltol,w
 18593  356B  00E3               	movwf	?_AFE_getSetShortCircuitCurrent
 18594  356C  0008               	return
 18595  356D                     __end_of_AFE_getSetShortCircuitCurrent:	
 18596                           
 18597                           	psect	text68
 18598  3113                     __ptext68:	
 18599 ;; *************** function _AFE_getSetCurrentSenseRes *****************
 18600 ;; Defined at:
 18601 ;;		line 172 in file "BQ76920.c"
 18602 ;; Parameters:    Size  Location     Type
 18603 ;;		None
 18604 ;; Auto vars:     Size  Location     Type
 18605 ;;		None
 18606 ;; Return value:  Size  Location     Type
 18607 ;;                  4    1[COMMON] float 
 18608 ;; Registers used:
 18609 ;;		wreg
 18610 ;; Tracked objects:
 18611 ;;		On entry : 0/0
 18612 ;;		On exit  : 0/0
 18613 ;;		Unchanged: 0/0
 18614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18615 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18618 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18619 ;;Total ram usage:        4 bytes
 18620 ;; Hardware stack levels used:    1
 18621 ;; Hardware stack levels required when called:    1
 18622 ;; This function calls:
 18623 ;;		Nothing
 18624 ;; This function is called by:
 18625 ;;		_statemachine
 18626 ;; This function uses a non-reentrant model
 18627 ;;
 18628                           
 18629                           
 18630                           ;psect for function _AFE_getSetCurrentSenseRes
 18631  3113                     _AFE_getSetCurrentSenseRes:	
 18632                           
 18633                           ;BQ76920.c: 173:     return (float) shuntResistorValue_mOhm;
 18634                           
 18635                           ;incstack = 0
 18636                           ; Regs used in _AFE_getSetCurrentSenseRes: [wreg]
 18637  3113  0023               	movlb	3	; select bank3
 18638  3114  0835               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 18639  3115  00F4               	movwf	?_AFE_getSetCurrentSenseRes+3
 18640  3116  0834               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 18641  3117  00F3               	movwf	?_AFE_getSetCurrentSenseRes+2
 18642  3118  0833               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 18643  3119  00F2               	movwf	?_AFE_getSetCurrentSenseRes+1
 18644  311A  0832               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 18645  311B  00F1               	movwf	?_AFE_getSetCurrentSenseRes
 18646  311C  0008               	return
 18647  311D                     __end_of_AFE_getSetCurrentSenseRes:	
 18648                           
 18649                           	psect	text69
 18650  34CD                     __ptext69:	
 18651 ;; *************** function _AFE_getOverCurrentDischargeCurrent *****************
 18652 ;; Defined at:
 18653 ;;		line 180 in file "BQ76920.c"
 18654 ;; Parameters:    Size  Location     Type
 18655 ;;		None
 18656 ;; Auto vars:     Size  Location     Type
 18657 ;;		None
 18658 ;; Return value:  Size  Location     Type
 18659 ;;                  4   67[BANK0 ] long 
 18660 ;; Registers used:
 18661 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 18662 ;; Tracked objects:
 18663 ;;		On entry : 0/0
 18664 ;;		On exit  : 0/0
 18665 ;;		Unchanged: 0/0
 18666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18667 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18669 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18670 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18671 ;;Total ram usage:        8 bytes
 18672 ;; Hardware stack levels used:    1
 18673 ;; Hardware stack levels required when called:    2
 18674 ;; This function calls:
 18675 ;;		___fldiv
 18676 ;;		___fltol
 18677 ;;		___xxtofl
 18678 ;; This function is called by:
 18679 ;;		_statemachine
 18680 ;; This function uses a non-reentrant model
 18681 ;;
 18682                           
 18683                           
 18684                           ;psect for function _AFE_getOverCurrentDischargeCurrent
 18685  34CD                     _AFE_getOverCurrentDischargeCurrent:	
 18686                           
 18687                           ;BQ76920.c: 181:     return (long) (OCD_threshold_setting[protect2.bits.OCD_THRESH]) / s
      +                          huntResistorValue_mOhm;
 18688                           
 18689                           ;incstack = 0
 18690                           ; Regs used in _AFE_getOverCurrentDischargeCurrent: [wreg-fsr0h+status,2+status,0+pclath
      +                          +cstack]
 18691  34CD  0023               	movlb	3	; select bank3
 18692  34CE  0855               	movf	BQ76920@protect2^(0+384),w
 18693  34CF  390F               	andlw	15
 18694  34D0  0020               	movlb	0	; select bank0
 18695  34D1  00E7               	movwf	??_AFE_getOverCurrentDischargeCurrent
 18696  34D2  01E8               	clrf	??_AFE_getOverCurrentDischargeCurrent+1
 18697  34D3  35E7               	lslf	??_AFE_getOverCurrentDischargeCurrent,f
 18698  34D4  0DE8               	rlf	??_AFE_getOverCurrentDischargeCurrent+1,f
 18699  34D5  30C4               	movlw	low (_OCD_threshold_setting| (0+32768))
 18700  34D6  0767               	addwf	??_AFE_getOverCurrentDischargeCurrent,w
 18701  34D7  0084               	movwf	4
 18702  34D8  30B9               	movlw	high (_OCD_threshold_setting| (0+32768))
 18703  34D9  3D68               	addwfc	??_AFE_getOverCurrentDischargeCurrent+1,w
 18704  34DA  0085               	movwf	5
 18705  34DB  3F00               	moviw [0]fsr0
 18706  34DC  00E9               	movwf	??_AFE_getOverCurrentDischargeCurrent+2
 18707  34DD  3F01               	moviw [1]fsr0
 18708  34DE  00EA               	movwf	??_AFE_getOverCurrentDischargeCurrent+3
 18709  34DF  0869               	movf	??_AFE_getOverCurrentDischargeCurrent+2,w
 18710  34E0  00F1               	movwf	___xxtofl@val
 18711  34E1  086A               	movf	??_AFE_getOverCurrentDischargeCurrent+3,w
 18712  34E2  00F2               	movwf	___xxtofl@val+1
 18713  34E3  0D89               	rlf	9,f
 18714  34E4  3B89               	subwfb	9,f
 18715  34E5  0989               	comf	9,f
 18716  34E6  00F3               	movwf	___xxtofl@val+2
 18717  34E7  00F4               	movwf	___xxtofl@val+3
 18718  34E8  3001               	movlw	1
 18719  34E9  31AB  2332  31B4   	fcall	___xxtofl
 18720  34EC  0874               	movf	?___xxtofl+3,w
 18721  34ED  0020               	movlb	0	; select bank0
 18722  34EE  00C7               	movwf	___fldiv@b+3
 18723  34EF  0873               	movf	?___xxtofl+2,w
 18724  34F0  00C6               	movwf	___fldiv@b+2
 18725  34F1  0872               	movf	?___xxtofl+1,w
 18726  34F2  00C5               	movwf	___fldiv@b+1
 18727  34F3  0871               	movf	?___xxtofl,w
 18728  34F4  00C4               	movwf	___fldiv@b
 18729  34F5  0023               	movlb	3	; select bank3
 18730  34F6  0835               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 18731  34F7  0020               	movlb	0	; select bank0
 18732  34F8  00C3               	movwf	___fldiv@a+3
 18733  34F9  0023               	movlb	3	; select bank3
 18734  34FA  0834               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 18735  34FB  0020               	movlb	0	; select bank0
 18736  34FC  00C2               	movwf	___fldiv@a+2
 18737  34FD  0023               	movlb	3	; select bank3
 18738  34FE  0833               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 18739  34FF  0020               	movlb	0	; select bank0
 18740  3500  00C1               	movwf	___fldiv@a+1
 18741  3501  0023               	movlb	3	; select bank3
 18742  3502  0832               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 18743  3503  0020               	movlb	0	; select bank0
 18744  3504  00C0               	movwf	___fldiv@a
 18745  3505  3190  2052  31B4   	fcall	___fldiv
 18746  3508  0020               	movlb	0	; select bank0
 18747  3509  0843               	movf	?___fldiv+3,w
 18748  350A  00DD               	movwf	___fltol@f1+3
 18749  350B  0842               	movf	?___fldiv+2,w
 18750  350C  00DC               	movwf	___fltol@f1+2
 18751  350D  0841               	movf	?___fldiv+1,w
 18752  350E  00DB               	movwf	___fltol@f1+1
 18753  350F  0840               	movf	?___fldiv,w
 18754  3510  00DA               	movwf	___fltol@f1
 18755  3511  31B6  26B9         	fcall	___fltol
 18756  3513  0020               	movlb	0	; select bank0
 18757  3514  085D               	movf	?___fltol+3,w
 18758  3515  00E6               	movwf	?_AFE_getOverCurrentDischargeCurrent+3
 18759  3516  085C               	movf	?___fltol+2,w
 18760  3517  00E5               	movwf	?_AFE_getOverCurrentDischargeCurrent+2
 18761  3518  085B               	movf	?___fltol+1,w
 18762  3519  00E4               	movwf	?_AFE_getOverCurrentDischargeCurrent+1
 18763  351A  085A               	movf	?___fltol,w
 18764  351B  00E3               	movwf	?_AFE_getOverCurrentDischargeCurrent
 18765  351C  0008               	return
 18766  351D                     __end_of_AFE_getOverCurrentDischargeCurrent:	
 18767                           
 18768                           	psect	text70
 18769  2B32                     __ptext70:	
 18770 ;; *************** function ___xxtofl *****************
 18771 ;; Defined at:
 18772 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 18773 ;; Parameters:    Size  Location     Type
 18774 ;;  sign            1    wreg     unsigned char 
 18775 ;;  val             4    1[COMMON] long 
 18776 ;; Auto vars:     Size  Location     Type
 18777 ;;  sign            1    0[BANK0 ] unsigned char 
 18778 ;;  arg             4    2[BANK0 ] unsigned long 
 18779 ;;  exp             1    1[BANK0 ] unsigned char 
 18780 ;; Return value:  Size  Location     Type
 18781 ;;                  4    1[COMMON] unsigned char 
 18782 ;; Registers used:
 18783 ;;		wreg, status,2, status,0
 18784 ;; Tracked objects:
 18785 ;;		On entry : 0/0
 18786 ;;		On exit  : 0/0
 18787 ;;		Unchanged: 0/0
 18788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18789 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18790 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18791 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18792 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18793 ;;Total ram usage:       14 bytes
 18794 ;; Hardware stack levels used:    1
 18795 ;; Hardware stack levels required when called:    1
 18796 ;; This function calls:
 18797 ;;		Nothing
 18798 ;; This function is called by:
 18799 ;;		_setShortCircuitProtection
 18800 ;;		_setOverCurrentDischargeProtection
 18801 ;;		_AFE_getSetShortCircuitCurrent
 18802 ;;		_AFE_getOverCurrentDischargeCurrent
 18803 ;; This function uses a non-reentrant model
 18804 ;;
 18805                           
 18806                           
 18807                           ;psect for function ___xxtofl
 18808  2B32                     ___xxtofl:	
 18809                           
 18810                           ;incstack = 0
 18811                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 18812                           ;___xxtofl@sign stored from wreg
 18813  2B32  0020               	movlb	0	; select bank0
 18814  2B33  00A0               	movwf	___xxtofl@sign
 18815  2B34  0820               	movf	___xxtofl@sign,w
 18816  2B35  1D03               	btfss	3,2
 18817  2B36  1FF4               	btfss	___xxtofl@val+3,7
 18818  2B37  2B48               	goto	l6468
 18819  2B38  0971               	comf	___xxtofl@val,w
 18820  2B39  00A2               	movwf	___xxtofl@arg
 18821  2B3A  0972               	comf	___xxtofl@val+1,w
 18822  2B3B  00A3               	movwf	___xxtofl@arg+1
 18823  2B3C  0973               	comf	___xxtofl@val+2,w
 18824  2B3D  00A4               	movwf	___xxtofl@arg+2
 18825  2B3E  0974               	comf	___xxtofl@val+3,w
 18826  2B3F  00A5               	movwf	___xxtofl@arg+3
 18827  2B40  0AA2               	incf	___xxtofl@arg,f
 18828  2B41  1903               	skipnz
 18829  2B42  0AA3               	incf	___xxtofl@arg+1,f
 18830  2B43  1903               	skipnz
 18831  2B44  0AA4               	incf	___xxtofl@arg+2,f
 18832  2B45  1903               	skipnz
 18833  2B46  0AA5               	incf	___xxtofl@arg+3,f
 18834  2B47  2B50               	goto	l1319
 18835  2B48                     l6468:	
 18836  2B48  0874               	movf	___xxtofl@val+3,w
 18837  2B49  00A5               	movwf	___xxtofl@arg+3
 18838  2B4A  0873               	movf	___xxtofl@val+2,w
 18839  2B4B  00A4               	movwf	___xxtofl@arg+2
 18840  2B4C  0872               	movf	___xxtofl@val+1,w
 18841  2B4D  00A3               	movwf	___xxtofl@arg+1
 18842  2B4E  0871               	movf	___xxtofl@val,w
 18843  2B4F  00A2               	movwf	___xxtofl@arg
 18844  2B50                     l1319:	
 18845  2B50  0874               	movf	___xxtofl@val+3,w
 18846  2B51  0473               	iorwf	___xxtofl@val+2,w
 18847  2B52  0472               	iorwf	___xxtofl@val+1,w
 18848  2B53  0471               	iorwf	___xxtofl@val,w
 18849  2B54  1D03               	skipz
 18850  2B55  2B5F               	goto	l6474
 18851  2B56  3000               	movlw	0
 18852  2B57  00F4               	movwf	?___xxtofl+3
 18853  2B58  3000               	movlw	0
 18854  2B59  00F3               	movwf	?___xxtofl+2
 18855  2B5A  3000               	movlw	0
 18856  2B5B  00F2               	movwf	?___xxtofl+1
 18857  2B5C  3000               	movlw	0
 18858  2B5D  00F1               	movwf	?___xxtofl
 18859  2B5E  0008               	return
 18860  2B5F                     l6474:	
 18861  2B5F  3096               	movlw	150
 18862  2B60  00F5               	movwf	??___xxtofl
 18863  2B61  0875               	movf	??___xxtofl,w
 18864  2B62  00A1               	movwf	___xxtofl@exp
 18865  2B63                     l6478:	
 18866  2B63  30FE               	movlw	254
 18867  2B64  0525               	andwf	___xxtofl@arg+3,w
 18868  2B65  1903               	btfsc	3,2
 18869  2B66  2B86               	goto	l1325
 18870  2B67  3001               	movlw	1
 18871  2B68  00F5               	movwf	??___xxtofl
 18872  2B69  0875               	movf	??___xxtofl,w
 18873  2B6A  07A1               	addwf	___xxtofl@exp,f
 18874  2B6B  3001               	movlw	1
 18875  2B6C                     u9115:	
 18876  2B6C  36A5               	lsrf	___xxtofl@arg+3,f
 18877  2B6D  0CA4               	rrf	___xxtofl@arg+2,f
 18878  2B6E  0CA3               	rrf	___xxtofl@arg+1,f
 18879  2B6F  0CA2               	rrf	___xxtofl@arg,f
 18880  2B70  0B89               	decfsz	9,f
 18881  2B71  2B6C               	goto	u9115
 18882  2B72  2B63               	goto	l6478
 18883  2B73                     l6480:	
 18884  2B73  3001               	movlw	1
 18885  2B74  00F5               	movwf	??___xxtofl
 18886  2B75  0875               	movf	??___xxtofl,w
 18887  2B76  07A1               	addwf	___xxtofl@exp,f
 18888  2B77  3001               	movlw	1
 18889  2B78  07A2               	addwf	___xxtofl@arg,f
 18890  2B79  3000               	movlw	0
 18891  2B7A  3DA3               	addwfc	___xxtofl@arg+1,f
 18892  2B7B  3000               	movlw	0
 18893  2B7C  3DA4               	addwfc	___xxtofl@arg+2,f
 18894  2B7D  3000               	movlw	0
 18895  2B7E  3DA5               	addwfc	___xxtofl@arg+3,f
 18896  2B7F  3001               	movlw	1
 18897  2B80                     u9135:	
 18898  2B80  36A5               	lsrf	___xxtofl@arg+3,f
 18899  2B81  0CA4               	rrf	___xxtofl@arg+2,f
 18900  2B82  0CA3               	rrf	___xxtofl@arg+1,f
 18901  2B83  0CA2               	rrf	___xxtofl@arg,f
 18902  2B84  0B89               	decfsz	9,f
 18903  2B85  2B80               	goto	u9135
 18904  2B86                     l1325:	
 18905  2B86  30FF               	movlw	255
 18906  2B87  0525               	andwf	___xxtofl@arg+3,w
 18907  2B88  1903               	btfsc	3,2
 18908  2B89  2B98               	goto	l6488
 18909  2B8A  2B73               	goto	l6480
 18910  2B8B                     l6490:	
 18911  2B8B  3002               	movlw	2
 18912  2B8C  0221               	subwf	___xxtofl@exp,w
 18913  2B8D  1C03               	btfss	3,0
 18914  2B8E  2B9A               	goto	l1332
 18915  2B8F  3001               	movlw	1
 18916  2B90  02A1               	subwf	___xxtofl@exp,f
 18917  2B91  3001               	movlw	1
 18918  2B92                     u9155:	
 18919  2B92  35A2               	lslf	___xxtofl@arg,f
 18920  2B93  0DA3               	rlf	___xxtofl@arg+1,f
 18921  2B94  0DA4               	rlf	___xxtofl@arg+2,f
 18922  2B95  0DA5               	rlf	___xxtofl@arg+3,f
 18923  2B96  0B89               	decfsz	9,f
 18924  2B97  2B92               	goto	u9155
 18925  2B98                     l6488:	
 18926  2B98  1FA4               	btfss	___xxtofl@arg+2,7
 18927  2B99  2B8B               	goto	l6490
 18928  2B9A                     l1332:	
 18929  2B9A  1821               	btfsc	___xxtofl@exp,0
 18930  2B9B  2BA4               	goto	l1333
 18931  2B9C  30FF               	movlw	255
 18932  2B9D  05A2               	andwf	___xxtofl@arg,f
 18933  2B9E  30FF               	movlw	255
 18934  2B9F  05A3               	andwf	___xxtofl@arg+1,f
 18935  2BA0  307F               	movlw	127
 18936  2BA1  05A4               	andwf	___xxtofl@arg+2,f
 18937  2BA2  30FF               	movlw	255
 18938  2BA3  05A5               	andwf	___xxtofl@arg+3,f
 18939  2BA4                     l1333:	
 18940  2BA4  1003               	clrc
 18941  2BA5  0CA1               	rrf	___xxtofl@exp,f
 18942  2BA6  0821               	movf	___xxtofl@exp,w
 18943  2BA7  00F5               	movwf	??___xxtofl
 18944  2BA8  01F6               	clrf	??___xxtofl+1
 18945  2BA9  01F7               	clrf	??___xxtofl+2
 18946  2BAA  01F8               	clrf	??___xxtofl+3
 18947  2BAB  3018               	movlw	24
 18948  2BAC                     u9195:	
 18949  2BAC  35F5               	lslf	??___xxtofl,f
 18950  2BAD  0DF6               	rlf	??___xxtofl+1,f
 18951  2BAE  0DF7               	rlf	??___xxtofl+2,f
 18952  2BAF  0DF8               	rlf	??___xxtofl+3,f
 18953  2BB0  0B89               	decfsz	9,f
 18954  2BB1  2BAC               	goto	u9195
 18955  2BB2  0875               	movf	??___xxtofl,w
 18956  2BB3  04A2               	iorwf	___xxtofl@arg,f
 18957  2BB4  0876               	movf	??___xxtofl+1,w
 18958  2BB5  04A3               	iorwf	___xxtofl@arg+1,f
 18959  2BB6  0877               	movf	??___xxtofl+2,w
 18960  2BB7  04A4               	iorwf	___xxtofl@arg+2,f
 18961  2BB8  0878               	movf	??___xxtofl+3,w
 18962  2BB9  04A5               	iorwf	___xxtofl@arg+3,f
 18963  2BBA  0820               	movf	___xxtofl@sign,w
 18964  2BBB  1D03               	btfss	3,2
 18965  2BBC  1FF4               	btfss	___xxtofl@val+3,7
 18966  2BBD  2BBF               	goto	l6502
 18967  2BBE  17A5               	bsf	___xxtofl@arg+3,7
 18968  2BBF                     l6502:	
 18969  2BBF  0825               	movf	___xxtofl@arg+3,w
 18970  2BC0  00F4               	movwf	?___xxtofl+3
 18971  2BC1  0824               	movf	___xxtofl@arg+2,w
 18972  2BC2  00F3               	movwf	?___xxtofl+2
 18973  2BC3  0823               	movf	___xxtofl@arg+1,w
 18974  2BC4  00F2               	movwf	?___xxtofl+1
 18975  2BC5  0822               	movf	___xxtofl@arg,w
 18976  2BC6  00F1               	movwf	?___xxtofl
 18977  2BC7  0008               	return
 18978  2BC8                     __end_of___xxtofl:	
 18979                           
 18980                           	psect	text71
 18981  36B9                     __ptext71:	
 18982 ;; *************** function ___fltol *****************
 18983 ;; Defined at:
 18984 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 18985 ;; Parameters:    Size  Location     Type
 18986 ;;  f1              4   58[BANK0 ] unsigned char 
 18987 ;; Auto vars:     Size  Location     Type
 18988 ;;  exp1            1   11[COMMON] unsigned char 
 18989 ;;  sign1           1   10[COMMON] unsigned char 
 18990 ;; Return value:  Size  Location     Type
 18991 ;;                  4   58[BANK0 ] long 
 18992 ;; Registers used:
 18993 ;;		wreg, status,2, status,0
 18994 ;; Tracked objects:
 18995 ;;		On entry : 0/0
 18996 ;;		On exit  : 0/0
 18997 ;;		Unchanged: 0/0
 18998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18999 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19000 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19001 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19002 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19003 ;;Total ram usage:       11 bytes
 19004 ;; Hardware stack levels used:    1
 19005 ;; Hardware stack levels required when called:    1
 19006 ;; This function calls:
 19007 ;;		Nothing
 19008 ;; This function is called by:
 19009 ;;		_AFE_getSetShortCircuitCurrent
 19010 ;;		_AFE_getOverCurrentDischargeCurrent
 19011 ;;		_efgtoa
 19012 ;; This function uses a non-reentrant model
 19013 ;;
 19014                           
 19015                           
 19016                           ;psect for function ___fltol
 19017  36B9                     ___fltol:	
 19018                           
 19019                           ;incstack = 0
 19020                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 19021  36B9  1003               	clrc
 19022  36BA  0020               	movlb	0	; select bank0
 19023  36BB  0D5C               	rlf	___fltol@f1+2,w
 19024  36BC  0D5D               	rlf	___fltol@f1+3,w
 19025  36BD  00DE               	movwf	??___fltol
 19026  36BE  085E               	movf	??___fltol,w
 19027  36BF  00FB               	movwf	___fltol@exp1
 19028  36C0  087B               	movf	___fltol@exp1,w
 19029  36C1  1D03               	btfss	3,2
 19030  36C2  2ECC               	goto	l4890
 19031  36C3                     l4886:	
 19032  36C3  3000               	movlw	0
 19033  36C4  00DD               	movwf	?___fltol+3
 19034  36C5  3000               	movlw	0
 19035  36C6  00DC               	movwf	?___fltol+2
 19036  36C7  3000               	movlw	0
 19037  36C8  00DB               	movwf	?___fltol+1
 19038  36C9  3000               	movlw	0
 19039  36CA  00DA               	movwf	?___fltol
 19040  36CB  0008               	return
 19041  36CC                     l4890:	
 19042  36CC  085A               	movf	___fltol@f1,w
 19043  36CD  00DE               	movwf	??___fltol
 19044  36CE  085B               	movf	___fltol@f1+1,w
 19045  36CF  00DF               	movwf	??___fltol+1
 19046  36D0  085C               	movf	___fltol@f1+2,w
 19047  36D1  00E0               	movwf	??___fltol+2
 19048  36D2  085D               	movf	___fltol@f1+3,w
 19049  36D3  00E1               	movwf	??___fltol+3
 19050  36D4  301F               	movlw	31
 19051  36D5                     u6285:	
 19052  36D5  36E1               	lsrf	??___fltol+3,f
 19053  36D6  0CE0               	rrf	??___fltol+2,f
 19054  36D7  0CDF               	rrf	??___fltol+1,f
 19055  36D8  0CDE               	rrf	??___fltol,f
 19056  36D9  0B89               	decfsz	9,f
 19057  36DA  2ED5               	goto	u6285
 19058  36DB  085E               	movf	??___fltol,w
 19059  36DC  00E2               	movwf	??___fltol+4
 19060  36DD  0862               	movf	??___fltol+4,w
 19061  36DE  00FA               	movwf	___fltol@sign1
 19062  36DF  17DC               	bsf	___fltol@f1+2,7
 19063  36E0  30FF               	movlw	255
 19064  36E1  05DA               	andwf	___fltol@f1,f
 19065  36E2  30FF               	movlw	255
 19066  36E3  05DB               	andwf	___fltol@f1+1,f
 19067  36E4  30FF               	movlw	255
 19068  36E5  05DC               	andwf	___fltol@f1+2,f
 19069  36E6  3000               	movlw	0
 19070  36E7  05DD               	andwf	___fltol@f1+3,f
 19071  36E8  3096               	movlw	150
 19072  36E9  02FB               	subwf	___fltol@exp1,f
 19073  36EA  1FFB               	btfss	___fltol@exp1,7
 19074  36EB  2EFF               	goto	l4908
 19075  36EC  087B               	movf	___fltol@exp1,w
 19076  36ED  3A80               	xorlw	128
 19077  36EE  3E97               	addlw	151
 19078  36EF  1C03               	btfss	3,0
 19079  36F0  2EC3               	goto	l4886
 19080  36F1                     l4906:	
 19081  36F1  3001               	movlw	1
 19082  36F2                     u6315:	
 19083  36F2  36DD               	lsrf	___fltol@f1+3,f
 19084  36F3  0CDC               	rrf	___fltol@f1+2,f
 19085  36F4  0CDB               	rrf	___fltol@f1+1,f
 19086  36F5  0CDA               	rrf	___fltol@f1,f
 19087  36F6  0B89               	decfsz	9,f
 19088  36F7  2EF2               	goto	u6315
 19089  36F8  3001               	movlw	1
 19090  36F9  00DE               	movwf	??___fltol
 19091  36FA  085E               	movf	??___fltol,w
 19092  36FB  07FB               	addwf	___fltol@exp1,f
 19093  36FC  1903               	btfsc	3,2
 19094  36FD  2F10               	goto	l4916
 19095  36FE  2EF1               	goto	l4906
 19096  36FF                     l4908:	
 19097  36FF  3020               	movlw	32
 19098  3700  027B               	subwf	___fltol@exp1,w
 19099  3701  1803               	btfsc	3,0
 19100  3702  2EC3               	goto	l4886
 19101  3703                     l1085:	
 19102  3703  087B               	movf	___fltol@exp1,w
 19103  3704  1903               	btfsc	3,2
 19104  3705  2F10               	goto	l4916
 19105  3706  3001               	movlw	1
 19106  3707                     u6345:	
 19107  3707  35DA               	lslf	___fltol@f1,f
 19108  3708  0DDB               	rlf	___fltol@f1+1,f
 19109  3709  0DDC               	rlf	___fltol@f1+2,f
 19110  370A  0DDD               	rlf	___fltol@f1+3,f
 19111  370B  0B89               	decfsz	9,f
 19112  370C  2F07               	goto	u6345
 19113  370D  3001               	movlw	1
 19114  370E  02FB               	subwf	___fltol@exp1,f
 19115  370F  2F03               	goto	l1085
 19116  3710                     l4916:	
 19117  3710  087A               	movf	___fltol@sign1,w
 19118  3711  1903               	btfsc	3,2
 19119  3712  0008               	return
 19120  3713  09DA               	comf	___fltol@f1,f
 19121  3714  09DB               	comf	___fltol@f1+1,f
 19122  3715  09DC               	comf	___fltol@f1+2,f
 19123  3716  09DD               	comf	___fltol@f1+3,f
 19124  3717  0ADA               	incf	___fltol@f1,f
 19125  3718  1903               	skipnz
 19126  3719  0ADB               	incf	___fltol@f1+1,f
 19127  371A  1903               	skipnz
 19128  371B  0ADC               	incf	___fltol@f1+2,f
 19129  371C  1903               	skipnz
 19130  371D  0ADD               	incf	___fltol@f1+3,f
 19131  371E  0008               	return
 19132  371F                     __end_of___fltol:	
 19133                           
 19134                           	psect	text72
 19135  1052                     __ptext72:	
 19136 ;; *************** function ___fldiv *****************
 19137 ;; Defined at:
 19138 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 19139 ;; Parameters:    Size  Location     Type
 19140 ;;  a               4   32[BANK0 ] long 
 19141 ;;  b               4   36[BANK0 ] long 
 19142 ;; Auto vars:     Size  Location     Type
 19143 ;;  grs             4   52[BANK0 ] unsigned long 
 19144 ;;  rem             4   45[BANK0 ] unsigned long 
 19145 ;;  new_exp         2   50[BANK0 ] int 
 19146 ;;  aexp            1   57[BANK0 ] unsigned char 
 19147 ;;  bexp            1   56[BANK0 ] unsigned char 
 19148 ;;  sign            1   49[BANK0 ] unsigned char 
 19149 ;; Return value:  Size  Location     Type
 19150 ;;                  4   32[BANK0 ] unsigned char 
 19151 ;; Registers used:
 19152 ;;		wreg, status,2, status,0
 19153 ;; Tracked objects:
 19154 ;;		On entry : 0/0
 19155 ;;		On exit  : 0/0
 19156 ;;		Unchanged: 0/0
 19157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19158 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19159 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19160 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19161 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19162 ;;Total ram usage:       26 bytes
 19163 ;; Hardware stack levels used:    1
 19164 ;; Hardware stack levels required when called:    1
 19165 ;; This function calls:
 19166 ;;		Nothing
 19167 ;; This function is called by:
 19168 ;;		_setShortCircuitProtection
 19169 ;;		_setOverCurrentDischargeProtection
 19170 ;;		_AFE_getSetShortCircuitCurrent
 19171 ;;		_AFE_getOverCurrentDischargeCurrent
 19172 ;;		_efgtoa
 19173 ;; This function uses a non-reentrant model
 19174 ;;
 19175                           
 19176                           
 19177                           ;psect for function ___fldiv
 19178  1052                     ___fldiv:	
 19179                           
 19180                           ;incstack = 0
 19181                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 19182  1052  0020               	movlb	0	; select bank0
 19183  1053  0847               	movf	___fldiv@b+3,w
 19184  1054  3980               	andlw	128
 19185  1055  00C8               	movwf	??___fldiv
 19186  1056  0848               	movf	??___fldiv,w
 19187  1057  00D1               	movwf	___fldiv@sign
 19188  1058  3547               	lslf	___fldiv@b+3,w
 19189  1059  00C8               	movwf	??___fldiv
 19190  105A  0848               	movf	??___fldiv,w
 19191  105B  00D8               	movwf	___fldiv@bexp
 19192  105C  1BC6               	btfsc	___fldiv@b+2,7
 19193  105D  1458               	bsf	___fldiv@bexp,0
 19194  105E  0858               	movf	___fldiv@bexp,w
 19195  105F  1903               	btfsc	3,2
 19196  1060  286F               	goto	l4982
 19197  1061  0A58               	incf	___fldiv@bexp,w
 19198  1062  1D03               	btfss	3,2
 19199  1063  286C               	goto	l4978
 19200  1064  3000               	movlw	0
 19201  1065  00C7               	movwf	___fldiv@b+3
 19202  1066  3000               	movlw	0
 19203  1067  00C6               	movwf	___fldiv@b+2
 19204  1068  3000               	movlw	0
 19205  1069  00C5               	movwf	___fldiv@b+1
 19206  106A  3000               	movlw	0
 19207  106B  00C4               	movwf	___fldiv@b
 19208  106C                     l4978:	
 19209  106C  17C6               	bsf	___fldiv@b+2,7
 19210  106D  01C7               	clrf	___fldiv@b+3
 19211  106E  2877               	goto	l4984
 19212  106F                     l4982:	
 19213  106F  3000               	movlw	0
 19214  1070  00C7               	movwf	___fldiv@b+3
 19215  1071  3000               	movlw	0
 19216  1072  00C6               	movwf	___fldiv@b+2
 19217  1073  3000               	movlw	0
 19218  1074  00C5               	movwf	___fldiv@b+1
 19219  1075  3000               	movlw	0
 19220  1076  00C4               	movwf	___fldiv@b
 19221  1077                     l4984:	
 19222  1077  0843               	movf	___fldiv@a+3,w
 19223  1078  3980               	andlw	128
 19224  1079  00C8               	movwf	??___fldiv
 19225  107A  0848               	movf	??___fldiv,w
 19226  107B  06D1               	xorwf	___fldiv@sign,f
 19227  107C  3543               	lslf	___fldiv@a+3,w
 19228  107D  00C8               	movwf	??___fldiv
 19229  107E  0848               	movf	??___fldiv,w
 19230  107F  00D9               	movwf	___fldiv@aexp
 19231  1080  1BC2               	btfsc	___fldiv@a+2,7
 19232  1081  1459               	bsf	___fldiv@aexp,0
 19233  1082  0859               	movf	___fldiv@aexp,w
 19234  1083  1903               	btfsc	3,2
 19235  1084  2893               	goto	l5002
 19236  1085  0A59               	incf	___fldiv@aexp,w
 19237  1086  1D03               	btfss	3,2
 19238  1087  2890               	goto	l4998
 19239  1088  3000               	movlw	0
 19240  1089  00C3               	movwf	___fldiv@a+3
 19241  108A  3000               	movlw	0
 19242  108B  00C2               	movwf	___fldiv@a+2
 19243  108C  3000               	movlw	0
 19244  108D  00C1               	movwf	___fldiv@a+1
 19245  108E  3000               	movlw	0
 19246  108F  00C0               	movwf	___fldiv@a
 19247  1090                     l4998:	
 19248  1090  17C2               	bsf	___fldiv@a+2,7
 19249  1091  01C3               	clrf	___fldiv@a+3
 19250  1092  289B               	goto	l1241
 19251  1093                     l5002:	
 19252  1093  3000               	movlw	0
 19253  1094  00C3               	movwf	___fldiv@a+3
 19254  1095  3000               	movlw	0
 19255  1096  00C2               	movwf	___fldiv@a+2
 19256  1097  3000               	movlw	0
 19257  1098  00C1               	movwf	___fldiv@a+1
 19258  1099  3000               	movlw	0
 19259  109A  00C0               	movwf	___fldiv@a
 19260  109B                     l1241:	
 19261  109B  0843               	movf	___fldiv@a+3,w
 19262  109C  0442               	iorwf	___fldiv@a+2,w
 19263  109D  0441               	iorwf	___fldiv@a+1,w
 19264  109E  0440               	iorwf	___fldiv@a,w
 19265  109F  1D03               	skipz
 19266  10A0  28BA               	goto	l5012
 19267  10A1  3000               	movlw	0
 19268  10A2  00C7               	movwf	___fldiv@b+3
 19269  10A3  3000               	movlw	0
 19270  10A4  00C6               	movwf	___fldiv@b+2
 19271  10A5  3000               	movlw	0
 19272  10A6  00C5               	movwf	___fldiv@b+1
 19273  10A7  3000               	movlw	0
 19274  10A8  00C4               	movwf	___fldiv@b
 19275  10A9  3080               	movlw	128
 19276  10AA  04C6               	iorwf	___fldiv@b+2,f
 19277  10AB  307F               	movlw	127
 19278  10AC  04C7               	iorwf	___fldiv@b+3,f
 19279  10AD                     L14:	
 19280  10AD  0851               	movf	___fldiv@sign,w
 19281  10AE  00C8               	movwf	??___fldiv
 19282  10AF  0848               	movf	??___fldiv,w
 19283  10B0  04C7               	iorwf	___fldiv@b+3,f
 19284  10B1  0847               	movf	___fldiv@b+3,w
 19285  10B2  00C3               	movwf	?___fldiv+3
 19286  10B3  0846               	movf	___fldiv@b+2,w
 19287  10B4  00C2               	movwf	?___fldiv+2
 19288  10B5  0845               	movf	___fldiv@b+1,w
 19289  10B6  00C1               	movwf	?___fldiv+1
 19290  10B7  0844               	movf	___fldiv@b,w
 19291  10B8  00C0               	movwf	?___fldiv
 19292  10B9  0008               	return
 19293  10BA                     l5012:	
 19294  10BA  0858               	movf	___fldiv@bexp,w
 19295  10BB  1D03               	btfss	3,2
 19296  10BC  28C6               	goto	l5018
 19297  10BD  3000               	movlw	0
 19298  10BE  00C3               	movwf	?___fldiv+3
 19299  10BF  3000               	movlw	0
 19300  10C0  00C2               	movwf	?___fldiv+2
 19301  10C1  3000               	movlw	0
 19302  10C2  00C1               	movwf	?___fldiv+1
 19303  10C3  3000               	movlw	0
 19304  10C4  00C0               	movwf	?___fldiv
 19305  10C5  0008               	return
 19306  10C6                     l5018:	
 19307  10C6  0858               	movf	___fldiv@bexp,w
 19308  10C7  00C8               	movwf	??___fldiv
 19309  10C8  01C9               	clrf	??___fldiv+1
 19310  10C9  0849               	movf	??___fldiv+1,w
 19311  10CA  00CB               	movwf	??___fldiv+3
 19312  10CB  0859               	movf	___fldiv@aexp,w
 19313  10CC  0248               	subwf	??___fldiv,w
 19314  10CD  00CA               	movwf	??___fldiv+2
 19315  10CE  1C03               	skipc
 19316  10CF  03CB               	decf	??___fldiv+3,f
 19317  10D0  084A               	movf	??___fldiv+2,w
 19318  10D1  3E7F               	addlw	127
 19319  10D2  00D2               	movwf	___fldiv@new_exp
 19320  10D3  3000               	movlw	0
 19321  10D4  3D4B               	addwfc	??___fldiv+3,w
 19322  10D5  00D3               	movwf	___fldiv@new_exp+1
 19323  10D6  0847               	movf	___fldiv@b+3,w
 19324  10D7  00D0               	movwf	___fldiv@rem+3
 19325  10D8  0846               	movf	___fldiv@b+2,w
 19326  10D9  00CF               	movwf	___fldiv@rem+2
 19327  10DA  0845               	movf	___fldiv@b+1,w
 19328  10DB  00CE               	movwf	___fldiv@rem+1
 19329  10DC  0844               	movf	___fldiv@b,w
 19330  10DD  00CD               	movwf	___fldiv@rem
 19331  10DE  3000               	movlw	0
 19332  10DF  00C7               	movwf	___fldiv@b+3
 19333  10E0  3000               	movlw	0
 19334  10E1  00C6               	movwf	___fldiv@b+2
 19335  10E2  3000               	movlw	0
 19336  10E3  00C5               	movwf	___fldiv@b+1
 19337  10E4  3000               	movlw	0
 19338  10E5  00C4               	movwf	___fldiv@b
 19339  10E6  3000               	movlw	0
 19340  10E7  00D7               	movwf	___fldiv@grs+3
 19341  10E8  3000               	movlw	0
 19342  10E9  00D6               	movwf	___fldiv@grs+2
 19343  10EA  3000               	movlw	0
 19344  10EB  00D5               	movwf	___fldiv@grs+1
 19345  10EC  3000               	movlw	0
 19346  10ED  00D4               	movwf	___fldiv@grs
 19347  10EE  01D9               	clrf	___fldiv@aexp
 19348  10EF                     l5046:	
 19349  10EF  301A               	movlw	26
 19350  10F0  0259               	subwf	___fldiv@aexp,w
 19351  10F1  1803               	btfsc	3,0
 19352  10F2  292B               	goto	l5048
 19353  10F3  0859               	movf	___fldiv@aexp,w
 19354  10F4  1903               	btfsc	3,2
 19355  10F5  290D               	goto	l5038
 19356  10F6  3001               	movlw	1
 19357  10F7                     u6555:	
 19358  10F7  35CD               	lslf	___fldiv@rem,f
 19359  10F8  0DCE               	rlf	___fldiv@rem+1,f
 19360  10F9  0DCF               	rlf	___fldiv@rem+2,f
 19361  10FA  0DD0               	rlf	___fldiv@rem+3,f
 19362  10FB  0B89               	decfsz	9,f
 19363  10FC  28F7               	goto	u6555
 19364  10FD  3001               	movlw	1
 19365  10FE                     u6565:	
 19366  10FE  35C4               	lslf	___fldiv@b,f
 19367  10FF  0DC5               	rlf	___fldiv@b+1,f
 19368  1100  0DC6               	rlf	___fldiv@b+2,f
 19369  1101  0DC7               	rlf	___fldiv@b+3,f
 19370  1102  0B89               	decfsz	9,f
 19371  1103  28FE               	goto	u6565
 19372  1104  1BD7               	btfsc	___fldiv@grs+3,7
 19373  1105  1444               	bsf	___fldiv@b,0
 19374  1106  3001               	movlw	1
 19375  1107                     u6585:	
 19376  1107  35D4               	lslf	___fldiv@grs,f
 19377  1108  0DD5               	rlf	___fldiv@grs+1,f
 19378  1109  0DD6               	rlf	___fldiv@grs+2,f
 19379  110A  0DD7               	rlf	___fldiv@grs+3,f
 19380  110B  0B89               	decfsz	9,f
 19381  110C  2907               	goto	u6585
 19382  110D                     l5038:	
 19383  110D  0843               	movf	___fldiv@a+3,w
 19384  110E  0250               	subwf	___fldiv@rem+3,w
 19385  110F  1D03               	skipz
 19386  1110  291B               	goto	u6595
 19387  1111  0842               	movf	___fldiv@a+2,w
 19388  1112  024F               	subwf	___fldiv@rem+2,w
 19389  1113  1D03               	skipz
 19390  1114  291B               	goto	u6595
 19391  1115  0841               	movf	___fldiv@a+1,w
 19392  1116  024E               	subwf	___fldiv@rem+1,w
 19393  1117  1D03               	skipz
 19394  1118  291B               	goto	u6595
 19395  1119  0840               	movf	___fldiv@a,w
 19396  111A  024D               	subwf	___fldiv@rem,w
 19397  111B                     u6595:	
 19398  111B  1C03               	skipc
 19399  111C  2926               	goto	l5044
 19400  111D  1757               	bsf	___fldiv@grs+3,6
 19401  111E  0840               	movf	___fldiv@a,w
 19402  111F  02CD               	subwf	___fldiv@rem,f
 19403  1120  0841               	movf	___fldiv@a+1,w
 19404  1121  3BCE               	subwfb	___fldiv@rem+1,f
 19405  1122  0842               	movf	___fldiv@a+2,w
 19406  1123  3BCF               	subwfb	___fldiv@rem+2,f
 19407  1124  0843               	movf	___fldiv@a+3,w
 19408  1125  3BD0               	subwfb	___fldiv@rem+3,f
 19409  1126                     l5044:	
 19410  1126  3001               	movlw	1
 19411  1127  00C8               	movwf	??___fldiv
 19412  1128  0848               	movf	??___fldiv,w
 19413  1129  07D9               	addwf	___fldiv@aexp,f
 19414  112A  28EF               	goto	l5046
 19415  112B                     l5048:	
 19416  112B  0850               	movf	___fldiv@rem+3,w
 19417  112C  044F               	iorwf	___fldiv@rem+2,w
 19418  112D  044E               	iorwf	___fldiv@rem+1,w
 19419  112E  044D               	iorwf	___fldiv@rem,w
 19420  112F  1D03               	btfss	3,2
 19421  1130  1454               	bsf	___fldiv@grs,0
 19422  1131                     l5062:	
 19423  1131  1BC6               	btfsc	___fldiv@b+2,7
 19424  1132  2948               	goto	l5064
 19425  1133  3001               	movlw	1
 19426  1134                     u6625:	
 19427  1134  35C4               	lslf	___fldiv@b,f
 19428  1135  0DC5               	rlf	___fldiv@b+1,f
 19429  1136  0DC6               	rlf	___fldiv@b+2,f
 19430  1137  0DC7               	rlf	___fldiv@b+3,f
 19431  1138  0B89               	decfsz	9,f
 19432  1139  2934               	goto	u6625
 19433  113A  1BD7               	btfsc	___fldiv@grs+3,7
 19434  113B  1444               	bsf	___fldiv@b,0
 19435  113C  3001               	movlw	1
 19436  113D                     u6645:	
 19437  113D  35D4               	lslf	___fldiv@grs,f
 19438  113E  0DD5               	rlf	___fldiv@grs+1,f
 19439  113F  0DD6               	rlf	___fldiv@grs+2,f
 19440  1140  0DD7               	rlf	___fldiv@grs+3,f
 19441  1141  0B89               	decfsz	9,f
 19442  1142  293D               	goto	u6645
 19443  1143  30FF               	movlw	255
 19444  1144  07D2               	addwf	___fldiv@new_exp,f
 19445  1145  30FF               	movlw	255
 19446  1146  3DD3               	addwfc	___fldiv@new_exp+1,f
 19447  1147  2931               	goto	l5062
 19448  1148                     l5064:	
 19449  1148  01D9               	clrf	___fldiv@aexp
 19450  1149  1FD7               	btfss	___fldiv@grs+3,7
 19451  114A  2961               	goto	l5074
 19452  114B  30FF               	movlw	255
 19453  114C  0554               	andwf	___fldiv@grs,w
 19454  114D  00C8               	movwf	??___fldiv
 19455  114E  30FF               	movlw	255
 19456  114F  0555               	andwf	___fldiv@grs+1,w
 19457  1150  00C9               	movwf	??___fldiv+1
 19458  1151  30FF               	movlw	255
 19459  1152  0556               	andwf	___fldiv@grs+2,w
 19460  1153  00CA               	movwf	??___fldiv+2
 19461  1154  307F               	movlw	127
 19462  1155  0557               	andwf	___fldiv@grs+3,w
 19463  1156  00CB               	movwf	??___fldiv+3
 19464  1157  084B               	movf	??___fldiv+3,w
 19465  1158  044A               	iorwf	??___fldiv+2,w
 19466  1159  0449               	iorwf	??___fldiv+1,w
 19467  115A  0448               	iorwf	??___fldiv,w
 19468  115B  1903               	skipnz
 19469  115C  1844               	btfsc	___fldiv@b,0
 19470  115D  295F               	goto	l5070
 19471  115E  2961               	goto	l5074
 19472  115F                     l5070:	
 19473  115F  01D9               	clrf	___fldiv@aexp
 19474  1160  0AD9               	incf	___fldiv@aexp,f
 19475  1161                     l5074:	
 19476  1161  0859               	movf	___fldiv@aexp,w
 19477  1162  1903               	btfsc	3,2
 19478  1163  298A               	goto	l5084
 19479  1164  3001               	movlw	1
 19480  1165  07C4               	addwf	___fldiv@b,f
 19481  1166  3000               	movlw	0
 19482  1167  3DC5               	addwfc	___fldiv@b+1,f
 19483  1168  3000               	movlw	0
 19484  1169  3DC6               	addwfc	___fldiv@b+2,f
 19485  116A  3000               	movlw	0
 19486  116B  3DC7               	addwfc	___fldiv@b+3,f
 19487  116C  1C47               	btfss	___fldiv@b+3,0
 19488  116D  298A               	goto	l5084
 19489  116E  0844               	movf	___fldiv@b,w
 19490  116F  00C8               	movwf	??___fldiv
 19491  1170  0845               	movf	___fldiv@b+1,w
 19492  1171  00C9               	movwf	??___fldiv+1
 19493  1172  0846               	movf	___fldiv@b+2,w
 19494  1173  00CA               	movwf	??___fldiv+2
 19495  1174  0847               	movf	___fldiv@b+3,w
 19496  1175  00CB               	movwf	??___fldiv+3
 19497  1176  3001               	movlw	1
 19498  1177  00CC               	movwf	??___fldiv+4
 19499  1178                     u6715:	
 19500  1178  37CB               	asrf	??___fldiv+3,f
 19501  1179  0CCA               	rrf	??___fldiv+2,f
 19502  117A  0CC9               	rrf	??___fldiv+1,f
 19503  117B  0CC8               	rrf	??___fldiv,f
 19504  117C  0BCC               	decfsz	??___fldiv+4,f
 19505  117D  2978               	goto	u6715
 19506  117E  084B               	movf	??___fldiv+3,w
 19507  117F  00C7               	movwf	___fldiv@b+3
 19508  1180  084A               	movf	??___fldiv+2,w
 19509  1181  00C6               	movwf	___fldiv@b+2
 19510  1182  0849               	movf	??___fldiv+1,w
 19511  1183  00C5               	movwf	___fldiv@b+1
 19512  1184  0848               	movf	??___fldiv,w
 19513  1185  00C4               	movwf	___fldiv@b
 19514  1186  3001               	movlw	1
 19515  1187  07D2               	addwf	___fldiv@new_exp,f
 19516  1188  3000               	movlw	0
 19517  1189  3DD3               	addwfc	___fldiv@new_exp+1,f
 19518  118A                     l5084:	
 19519  118A  0853               	movf	___fldiv@new_exp+1,w
 19520  118B  3A80               	xorlw	128
 19521  118C  00C8               	movwf	??___fldiv
 19522  118D  3080               	movlw	128
 19523  118E  0248               	subwf	??___fldiv,w
 19524  118F  1D03               	skipz
 19525  1190  2993               	goto	u6725
 19526  1191  30FF               	movlw	255
 19527  1192  0252               	subwf	___fldiv@new_exp,w
 19528  1193                     u6725:	
 19529  1193  1C03               	skipc
 19530  1194  29A2               	goto	l1262
 19531  1195  30FF               	movlw	255
 19532  1196  0020               	movlb	0	; select bank0
 19533  1197  00D2               	movwf	___fldiv@new_exp
 19534  1198  3000               	movlw	0
 19535  1199  00D3               	movwf	___fldiv@new_exp+1
 19536  119A  3000               	movlw	0
 19537  119B  00C7               	movwf	___fldiv@b+3
 19538  119C  3000               	movlw	0
 19539  119D  00C6               	movwf	___fldiv@b+2
 19540  119E  3000               	movlw	0
 19541  119F  00C5               	movwf	___fldiv@b+1
 19542  11A0  3000               	movlw	0
 19543  11A1  00C4               	movwf	___fldiv@b
 19544  11A2                     l1262:	
 19545  11A2  0020               	movlb	0	; select bank0
 19546  11A3  0853               	movf	___fldiv@new_exp+1,w
 19547  11A4  3A80               	xorlw	128
 19548  11A5  00C8               	movwf	??___fldiv
 19549  11A6  3080               	movlw	128
 19550  11A7  0248               	subwf	??___fldiv,w
 19551  11A8  1D03               	skipz
 19552  11A9  29AC               	goto	u6735
 19553  11AA  3001               	movlw	1
 19554  11AB  0252               	subwf	___fldiv@new_exp,w
 19555  11AC                     u6735:	
 19556  11AC  1803               	skipnc
 19557  11AD  29BA               	goto	l1263
 19558  11AE  0020               	movlb	0	; select bank0
 19559  11AF  01D2               	clrf	___fldiv@new_exp
 19560  11B0  01D3               	clrf	___fldiv@new_exp+1
 19561  11B1  3000               	movlw	0
 19562  11B2  00C7               	movwf	___fldiv@b+3
 19563  11B3  3000               	movlw	0
 19564  11B4  00C6               	movwf	___fldiv@b+2
 19565  11B5  3000               	movlw	0
 19566  11B6  00C5               	movwf	___fldiv@b+1
 19567  11B7  3000               	movlw	0
 19568  11B8  00C4               	movwf	___fldiv@b
 19569  11B9  01D1               	clrf	___fldiv@sign
 19570  11BA                     l1263:	
 19571  11BA  0020               	movlb	0	; select bank0
 19572  11BB  0852               	movf	___fldiv@new_exp,w
 19573  11BC  00C8               	movwf	??___fldiv
 19574  11BD  0848               	movf	??___fldiv,w
 19575  11BE  00D8               	movwf	___fldiv@bexp
 19576  11BF  1C58               	btfss	___fldiv@bexp,0
 19577  11C0  29C3               	goto	l5098
 19578  11C1  17C6               	bsf	___fldiv@b+2,7
 19579  11C2  29C7               	goto	l1265
 19580  11C3                     l5098:	
 19581  11C3  307F               	movlw	127
 19582  11C4  00C8               	movwf	??___fldiv
 19583  11C5  0848               	movf	??___fldiv,w
 19584  11C6  05C6               	andwf	___fldiv@b+2,f
 19585  11C7                     l1265:	
 19586  11C7  3658               	lsrf	___fldiv@bexp,w
 19587  11C8  00C8               	movwf	??___fldiv
 19588  11C9  0848               	movf	??___fldiv,w
 19589  11CA  00C7               	movwf	___fldiv@b+3
 19590  11CB  28AD               	goto	L14
 19591  11CC                     __end_of___fldiv:	
 19592                           
 19593                           	psect	text73
 19594  0003                     __ptext73:	
 19595 ;; *************** function _AFE_UPDATE *****************
 19596 ;; Defined at:
 19597 ;;		line 163 in file "BQ76920.c"
 19598 ;; Parameters:    Size  Location     Type
 19599 ;;		None
 19600 ;; Auto vars:     Size  Location     Type
 19601 ;;		None
 19602 ;; Return value:  Size  Location     Type
 19603 ;;                  1    wreg      void 
 19604 ;; Registers used:
 19605 ;;		None
 19606 ;; Tracked objects:
 19607 ;;		On entry : 0/0
 19608 ;;		On exit  : 0/0
 19609 ;;		Unchanged: 0/0
 19610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19615 ;;Total ram usage:        0 bytes
 19616 ;; Hardware stack levels used:    1
 19617 ;; Hardware stack levels required when called:    1
 19618 ;; This function calls:
 19619 ;;		Nothing
 19620 ;; This function is called by:
 19621 ;;		_statemachine
 19622 ;; This function uses a non-reentrant model
 19623 ;;
 19624                           
 19625                           
 19626                           ;psect for function _AFE_UPDATE
 19627  0003                     _AFE_UPDATE:	
 19628                           
 19629                           ;incstack = 0
 19630                           ; Regs used in _AFE_UPDATE: []
 19631  0003  0008               	return
 19632  0004                     __end_of_AFE_UPDATE:	
 19633                           
 19634                           	psect	text74
 19635  3127                     __ptext74:	
 19636 ;; *************** function _init_TMR1 *****************
 19637 ;; Defined at:
 19638 ;;		line 169 in file "main.c"
 19639 ;; Parameters:    Size  Location     Type
 19640 ;;		None
 19641 ;; Auto vars:     Size  Location     Type
 19642 ;;		None
 19643 ;; Return value:  Size  Location     Type
 19644 ;;                  1    wreg      void 
 19645 ;; Registers used:
 19646 ;;		wreg, status,2, status,0
 19647 ;; Tracked objects:
 19648 ;;		On entry : 0/0
 19649 ;;		On exit  : 0/0
 19650 ;;		Unchanged: 0/0
 19651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19656 ;;Total ram usage:        0 bytes
 19657 ;; Hardware stack levels used:    1
 19658 ;; Hardware stack levels required when called:    1
 19659 ;; This function calls:
 19660 ;;		Nothing
 19661 ;; This function is called by:
 19662 ;;		_main
 19663 ;; This function uses a non-reentrant model
 19664 ;;
 19665                           
 19666                           
 19667                           ;psect for function _init_TMR1
 19668  3127                     _init_TMR1:	
 19669                           
 19670                           ;main.c: 172:     T1CONbits.T1CKPS = 0b00;
 19671                           
 19672                           ;incstack = 0
 19673                           ; Regs used in _init_TMR1: [wreg+status,2+status,0]
 19674  3127  30CF               	movlw	-49
 19675  3128  0020               	movlb	0	; select bank0
 19676  3129  0598               	andwf	24,f	;volatile
 19677                           
 19678                           ;main.c: 174:     TMR1 = 0;
 19679  312A  0196               	clrf	22	;volatile
 19680  312B  0197               	clrf	23	;volatile
 19681                           
 19682                           ;main.c: 176:     T1CONbits.TMR1ON = 1;
 19683  312C  1418               	bsf	24,0	;volatile
 19684                           
 19685                           ;main.c: 178:     PIE1bits.TMR1IE = 1;
 19686  312D  0021               	movlb	1	; select bank1
 19687  312E  1411               	bsf	17,0	;volatile
 19688                           
 19689                           ;main.c: 180:     INTCONbits.PEIE = 1;
 19690  312F  170B               	bsf	11,6	;volatile
 19691                           
 19692                           ;main.c: 182:     (INTCONbits.GIE = 1);
 19693  3130  178B               	bsf	11,7	;volatile
 19694  3131  0008               	return
 19695  3132                     __end_of_init_TMR1:	
 19696                           
 19697                           	psect	text75
 19698  30D2                     __ptext75:	
 19699 ;; *************** function _init_RGB *****************
 19700 ;; Defined at:
 19701 ;;		line 6 in file "RGB.c"
 19702 ;; Parameters:    Size  Location     Type
 19703 ;;		None
 19704 ;; Auto vars:     Size  Location     Type
 19705 ;;		None
 19706 ;; Return value:  Size  Location     Type
 19707 ;;                  1    wreg      void 
 19708 ;; Registers used:
 19709 ;;		None
 19710 ;; Tracked objects:
 19711 ;;		On entry : 0/0
 19712 ;;		On exit  : 0/0
 19713 ;;		Unchanged: 0/0
 19714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19719 ;;Total ram usage:        0 bytes
 19720 ;; Hardware stack levels used:    1
 19721 ;; Hardware stack levels required when called:    1
 19722 ;; This function calls:
 19723 ;;		Nothing
 19724 ;; This function is called by:
 19725 ;;		_main
 19726 ;; This function uses a non-reentrant model
 19727 ;;
 19728                           
 19729                           
 19730                           ;psect for function _init_RGB
 19731  30D2                     _init_RGB:	
 19732                           
 19733                           ;RGB.c: 8:     LATAbits.LATA4 = 1;
 19734                           
 19735                           ;incstack = 0
 19736                           ; Regs used in _init_RGB: []
 19737  30D2  0022               	movlb	2	; select bank2
 19738  30D3  160C               	bsf	12,4	;volatile
 19739                           
 19740                           ;RGB.c: 9:     LATAbits.LATA5 = 1;
 19741  30D4  168C               	bsf	12,5	;volatile
 19742                           
 19743                           ;RGB.c: 10:     LATEbits.LATE0 = 1;
 19744  30D5  1410               	bsf	16,0	;volatile
 19745  30D6  0008               	return
 19746  30D7                     __end_of_init_RGB:	
 19747                           
 19748                           	psect	text76
 19749  313E                     __ptext76:	
 19750 ;; *************** function _init_I2C *****************
 19751 ;; Defined at:
 19752 ;;		line 10 in file "I2C.c"
 19753 ;; Parameters:    Size  Location     Type
 19754 ;;		None
 19755 ;; Auto vars:     Size  Location     Type
 19756 ;;		None
 19757 ;; Return value:  Size  Location     Type
 19758 ;;                  1    wreg      void 
 19759 ;; Registers used:
 19760 ;;		wreg, status,2, status,0
 19761 ;; Tracked objects:
 19762 ;;		On entry : 0/0
 19763 ;;		On exit  : 0/0
 19764 ;;		Unchanged: 0/0
 19765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19768 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19769 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19770 ;;Total ram usage:        1 bytes
 19771 ;; Hardware stack levels used:    1
 19772 ;; Hardware stack levels required when called:    1
 19773 ;; This function calls:
 19774 ;;		Nothing
 19775 ;; This function is called by:
 19776 ;;		_main
 19777 ;; This function uses a non-reentrant model
 19778 ;;
 19779                           
 19780                           
 19781                           ;psect for function _init_I2C
 19782  313E                     _init_I2C:	
 19783                           
 19784                           ;I2C.c: 14:     SSPCONbits.SSPM = 0x08;
 19785                           
 19786                           ;incstack = 0
 19787                           ; Regs used in _init_I2C: [wreg+status,2+status,0]
 19788  313E  0024               	movlb	4	; select bank4
 19789  313F  0815               	movf	21,w	;volatile
 19790  3140  39F0               	andlw	-16
 19791  3141  3808               	iorlw	8
 19792  3142  0095               	movwf	21	;volatile
 19793                           
 19794                           ;I2C.c: 15:     SSPCONbits.SSPEN = 1;
 19795  3143  1695               	bsf	21,5	;volatile
 19796                           
 19797                           ;I2C.c: 24:     SSPADD = 39;
 19798  3144  3027               	movlw	39
 19799  3145  0092               	movwf	18	;volatile
 19800                           
 19801                           ;I2C.c: 27:     _delay((unsigned long)((10)*(16000000/4000.0)));
 19802  3146  3034               	movlw	52
 19803  3147  00F1               	movwf	??_init_I2C
 19804  3148  30F2               	movlw	242
 19805  3149                     u12407:	
 19806  3149  0B89               	decfsz	9,f
 19807  314A  2949               	goto	u12407
 19808  314B  0BF1               	decfsz	??_init_I2C,f
 19809  314C  2949               	goto	u12407
 19810  314D  0008               	return
 19811  314E                     __end_of_init_I2C:	
 19812                           
 19813                           	psect	text77
 19814  0807                     __ptext77:	
 19815 ;; *************** function _init_GPIO *****************
 19816 ;; Defined at:
 19817 ;;		line 186 in file "main.c"
 19818 ;; Parameters:    Size  Location     Type
 19819 ;;		None
 19820 ;; Auto vars:     Size  Location     Type
 19821 ;;		None
 19822 ;; Return value:  Size  Location     Type
 19823 ;;                  1    wreg      void 
 19824 ;; Registers used:
 19825 ;;		wreg, status,2, status,0
 19826 ;; Tracked objects:
 19827 ;;		On entry : 0/0
 19828 ;;		On exit  : 0/0
 19829 ;;		Unchanged: 0/0
 19830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19835 ;;Total ram usage:        0 bytes
 19836 ;; Hardware stack levels used:    1
 19837 ;; Hardware stack levels required when called:    1
 19838 ;; This function calls:
 19839 ;;		Nothing
 19840 ;; This function is called by:
 19841 ;;		_main
 19842 ;; This function uses a non-reentrant model
 19843 ;;
 19844                           
 19845                           
 19846                           ;psect for function _init_GPIO
 19847  0807                     _init_GPIO:	
 19848                           
 19849                           ;main.c: 192:     TRISBbits.TRISB2 = 0;
 19850                           
 19851                           ;incstack = 0
 19852                           ; Regs used in _init_GPIO: [wreg+status,2+status,0]
 19853  0807  0021               	movlb	1	; select bank1
 19854  0808  110D               	bcf	13,2	;volatile
 19855                           
 19856                           ;main.c: 193:     ANSELBbits.ANSB2 = 0;
 19857  0809  0023               	movlb	3	; select bank3
 19858  080A  110D               	bcf	13,2	;volatile
 19859                           
 19860                           ;main.c: 194:     TRISBbits.TRISB3 = 1;
 19861  080B  0021               	movlb	1	; select bank1
 19862  080C  158D               	bsf	13,3	;volatile
 19863                           
 19864                           ;main.c: 195:     ANSELBbits.ANSB3 = 0;
 19865  080D  0023               	movlb	3	; select bank3
 19866  080E  118D               	bcf	13,3	;volatile
 19867                           
 19868                           ;main.c: 200:     ANSELCbits.ANSC4 = 0;
 19869  080F  120E               	bcf	14,4	;volatile
 19870                           
 19871                           ;main.c: 201:     ANSELCbits.ANSC5 = 0;
 19872  0810  128E               	bcf	14,5	;volatile
 19873                           
 19874                           ;main.c: 202:     TRISCbits.TRISC4 = 1;
 19875  0811  0021               	movlb	1	; select bank1
 19876  0812  160E               	bsf	14,4	;volatile
 19877                           
 19878                           ;main.c: 203:     TRISCbits.TRISC5 = 1;
 19879  0813  168E               	bsf	14,5	;volatile
 19880                           
 19881                           ;main.c: 212:     TRISAbits.TRISA4 = 0;
 19882  0814  120C               	bcf	12,4	;volatile
 19883                           
 19884                           ;main.c: 213:     TRISAbits.TRISA5 = 0;
 19885  0815  128C               	bcf	12,5	;volatile
 19886                           
 19887                           ;main.c: 214:     TRISEbits.TRISE0 = 0;
 19888  0816  1010               	bcf	16,0	;volatile
 19889                           
 19890                           ;main.c: 220:     PPSLOCK = 0x55;
 19891  0817  3055               	movlw	85
 19892  0818  003C               	movlb	28	; select bank28
 19893  0819  008F               	movwf	15	;volsfr
 19894                           
 19895                           ;main.c: 221:     PPSLOCK = 0xAA;
 19896  081A  30AA               	movlw	170
 19897  081B  008F               	movwf	15	;volsfr
 19898                           
 19899                           ;main.c: 222:     PPSLOCKbits.PPSLOCKED = 0x00;
 19900  081C  100F               	bcf	15,0	;volsfr
 19901                           
 19902                           ;main.c: 226:     RC4PPSbits.RC4PPS = 0x0011;
 19903  081D  003D               	movlb	29	; select bank29
 19904  081E  0824               	movf	36,w	;volatile
 19905  081F  39E0               	andlw	-32
 19906  0820  3811               	iorlw	17
 19907  0821  00A4               	movwf	36	;volatile
 19908                           
 19909                           ;main.c: 227:     SSPDATPPSbits.SSPDATPPS = 0x0014;
 19910  0822  003C               	movlb	28	; select bank28
 19911  0823  0821               	movf	33,w	;volatile
 19912  0824  39E0               	andlw	-32
 19913  0825  3814               	iorlw	20
 19914  0826  00A1               	movwf	33	;volatile
 19915                           
 19916                           ;main.c: 228:     SSPCLKPPSbits.SSPCLKPPS = 0x0015;
 19917  0827  0820               	movf	32,w	;volatile
 19918  0828  39E0               	andlw	-32
 19919  0829  3815               	iorlw	21
 19920  082A  00A0               	movwf	32	;volatile
 19921                           
 19922                           ;main.c: 229:     RC5PPSbits.RC5PPS = 0x0010;
 19923  082B  003D               	movlb	29	; select bank29
 19924  082C  0825               	movf	37,w	;volatile
 19925  082D  39E0               	andlw	-32
 19926  082E  3810               	iorlw	16
 19927  082F  00A5               	movwf	37	;volatile
 19928                           
 19929                           ;main.c: 232:     RB2PPSbits.RB2PPS = 0x14;
 19930  0830  081A               	movf	26,w	;volatile
 19931  0831  39E0               	andlw	-32
 19932  0832  3814               	iorlw	20
 19933  0833  009A               	movwf	26	;volatile
 19934                           
 19935                           ;main.c: 233:     RXPPSbits.RXPPS = 0x0B;
 19936  0834  003C               	movlb	28	; select bank28
 19937  0835  0824               	movf	36,w	;volatile
 19938  0836  39E0               	andlw	-32
 19939  0837  380B               	iorlw	11
 19940  0838  00A4               	movwf	36	;volatile
 19941                           
 19942                           ;main.c: 235:     PPSLOCK = 0x55;
 19943  0839  3055               	movlw	85
 19944  083A  008F               	movwf	15	;volsfr
 19945                           
 19946                           ;main.c: 236:     PPSLOCK = 0xAA;
 19947  083B  30AA               	movlw	170
 19948  083C  008F               	movwf	15	;volsfr
 19949                           
 19950                           ;main.c: 237:     PPSLOCKbits.PPSLOCKED = 0x01;
 19951  083D  140F               	bsf	15,0	;volsfr
 19952  083E  0008               	return
 19953  083F                     __end_of_init_GPIO:	
 19954                           
 19955                           	psect	text78
 19956  07FC                     __ptext78:	
 19957 ;; *************** function _initClock *****************
 19958 ;; Defined at:
 19959 ;;		line 160 in file "main.c"
 19960 ;; Parameters:    Size  Location     Type
 19961 ;;		None
 19962 ;; Auto vars:     Size  Location     Type
 19963 ;;		None
 19964 ;; Return value:  Size  Location     Type
 19965 ;;                  1    wreg      void 
 19966 ;; Registers used:
 19967 ;;		status,2, status,0, pclath, cstack
 19968 ;; Tracked objects:
 19969 ;;		On entry : 0/0
 19970 ;;		On exit  : 0/0
 19971 ;;		Unchanged: 0/0
 19972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19977 ;;Total ram usage:        0 bytes
 19978 ;; Hardware stack levels used:    1
 19979 ;; Hardware stack levels required when called:    2
 19980 ;; This function calls:
 19981 ;;		_internal_16
 19982 ;; This function is called by:
 19983 ;;		_main
 19984 ;; This function uses a non-reentrant model
 19985 ;;
 19986                           
 19987                           
 19988                           ;psect for function _initClock
 19989  07FC                     _initClock:	
 19990                           
 19991                           ;main.c: 162:     internal_16();
 19992                           
 19993                           ;incstack = 0
 19994                           ; Regs used in _initClock: [status,2+status,0+pclath+cstack]
 19995  07FC  31B0  20EF         	fcall	_internal_16
 19996  07FE  0008               	return
 19997  07FF                     __end_of_initClock:	
 19998                           
 19999                           	psect	text79
 20000  30EF                     __ptext79:	
 20001 ;; *************** function _internal_16 *****************
 20002 ;; Defined at:
 20003 ;;		line 26 in file "pic16f1719_internals.c"
 20004 ;; Parameters:    Size  Location     Type
 20005 ;;		None
 20006 ;; Auto vars:     Size  Location     Type
 20007 ;;		None
 20008 ;; Return value:  Size  Location     Type
 20009 ;;                  1    wreg      void 
 20010 ;; Registers used:
 20011 ;;		None
 20012 ;; Tracked objects:
 20013 ;;		On entry : 0/0
 20014 ;;		On exit  : 0/0
 20015 ;;		Unchanged: 0/0
 20016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20021 ;;Total ram usage:        0 bytes
 20022 ;; Hardware stack levels used:    1
 20023 ;; Hardware stack levels required when called:    1
 20024 ;; This function calls:
 20025 ;;		Nothing
 20026 ;; This function is called by:
 20027 ;;		_initClock
 20028 ;; This function uses a non-reentrant model
 20029 ;;
 20030                           
 20031                           
 20032                           ;psect for function _internal_16
 20033  30EF                     _internal_16:	
 20034                           
 20035                           ;pic16f1719_internals.c: 28: SCS0 = 0;
 20036                           
 20037                           ;incstack = 0
 20038                           ; Regs used in _internal_16: []
 20039  30EF  0021               	movlb	1	; select bank1
 20040  30F0  1019               	bcf	25,0	;volatile
 20041                           
 20042                           ;pic16f1719_internals.c: 29: SCS1 = 0;
 20043  30F1  1099               	bcf	25,1	;volatile
 20044                           
 20045                           ;pic16f1719_internals.c: 31: IRCF0 = 1;
 20046  30F2  1599               	bsf	25,3	;volatile
 20047                           
 20048                           ;pic16f1719_internals.c: 32: IRCF1 = 1;
 20049  30F3  1619               	bsf	25,4	;volatile
 20050                           
 20051                           ;pic16f1719_internals.c: 33: IRCF2 = 1;
 20052  30F4  1699               	bsf	25,5	;volatile
 20053                           
 20054                           ;pic16f1719_internals.c: 34: IRCF3 = 1;
 20055  30F5  1719               	bsf	25,6	;volatile
 20056                           
 20057                           ;pic16f1719_internals.c: 36: SPLLEN = 0;
 20058  30F6  1399               	bcf	25,7	;volatile
 20059  30F7  0008               	return
 20060  30F8                     __end_of_internal_16:	
 20061                           
 20062                           	psect	text80
 20063  2D0D                     __ptext80:	
 20064 ;; *************** function _EUSART_Initialize *****************
 20065 ;; Defined at:
 20066 ;;		line 6 in file "EUSART.c"
 20067 ;; Parameters:    Size  Location     Type
 20068 ;;  baudrate        4   18[BANK0 ] const long 
 20069 ;; Auto vars:     Size  Location     Type
 20070 ;;  x               2   10[COMMON] unsigned int 
 20071 ;; Return value:  Size  Location     Type
 20072 ;;                  1    wreg      unsigned char 
 20073 ;; Registers used:
 20074 ;;		wreg, status,2, status,0, pclath, cstack
 20075 ;; Tracked objects:
 20076 ;;		On entry : 0/0
 20077 ;;		On exit  : 0/0
 20078 ;;		Unchanged: 0/0
 20079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20080 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20081 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20082 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20083 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20084 ;;Total ram usage:       18 bytes
 20085 ;; Hardware stack levels used:    1
 20086 ;; Hardware stack levels required when called:    2
 20087 ;; This function calls:
 20088 ;;		___aldiv
 20089 ;; This function is called by:
 20090 ;;		_main
 20091 ;; This function uses a non-reentrant model
 20092 ;;
 20093                           
 20094                           
 20095                           ;psect for function _EUSART_Initialize
 20096  2D0D                     _EUSART_Initialize:	
 20097                           
 20098                           ;EUSART.c: 6: char EUSART_Initialize(const long int baudrate);EUSART.c: 7: {;EUSART.c: 8
      +                          :  unsigned int x;;EUSART.c: 9:  x = (16000000 - baudrate*64)/(baudrate*64);
 20099                           
 20100                           ;incstack = 0
 20101                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 20102  2D0D  0020               	movlb	0	; select bank0
 20103  2D0E  0832               	movf	EUSART_Initialize@baudrate,w
 20104  2D0F  00B6               	movwf	??_EUSART_Initialize
 20105  2D10  0833               	movf	EUSART_Initialize@baudrate+1,w
 20106  2D11  00B7               	movwf	??_EUSART_Initialize+1
 20107  2D12  0834               	movf	EUSART_Initialize@baudrate+2,w
 20108  2D13  00B8               	movwf	??_EUSART_Initialize+2
 20109  2D14  0835               	movf	EUSART_Initialize@baudrate+3,w
 20110  2D15  00B9               	movwf	??_EUSART_Initialize+3
 20111  2D16  3006               	movlw	6
 20112  2D17                     u12285:	
 20113  2D17  35B6               	lslf	??_EUSART_Initialize,f
 20114  2D18  0DB7               	rlf	??_EUSART_Initialize+1,f
 20115  2D19  0DB8               	rlf	??_EUSART_Initialize+2,f
 20116  2D1A  0DB9               	rlf	??_EUSART_Initialize+3,f
 20117  2D1B  0B89               	decfsz	9,f
 20118  2D1C  2D17               	goto	u12285
 20119  2D1D  0839               	movf	??_EUSART_Initialize+3,w
 20120  2D1E  00A7               	movwf	___aldiv@divisor+3
 20121  2D1F  0838               	movf	??_EUSART_Initialize+2,w
 20122  2D20  00A6               	movwf	___aldiv@divisor+2
 20123  2D21  0837               	movf	??_EUSART_Initialize+1,w
 20124  2D22  00A5               	movwf	___aldiv@divisor+1
 20125  2D23  0836               	movf	??_EUSART_Initialize,w
 20126  2D24  00A4               	movwf	___aldiv@divisor
 20127  2D25  0832               	movf	EUSART_Initialize@baudrate,w
 20128  2D26  00BA               	movwf	??_EUSART_Initialize+4
 20129  2D27  0833               	movf	EUSART_Initialize@baudrate+1,w
 20130  2D28  00BB               	movwf	??_EUSART_Initialize+5
 20131  2D29  0834               	movf	EUSART_Initialize@baudrate+2,w
 20132  2D2A  00BC               	movwf	??_EUSART_Initialize+6
 20133  2D2B  0835               	movf	EUSART_Initialize@baudrate+3,w
 20134  2D2C  00BD               	movwf	??_EUSART_Initialize+7
 20135  2D2D  3006               	movlw	6
 20136  2D2E                     u12295:	
 20137  2D2E  35BA               	lslf	??_EUSART_Initialize+4,f
 20138  2D2F  0DBB               	rlf	??_EUSART_Initialize+5,f
 20139  2D30  0DBC               	rlf	??_EUSART_Initialize+6,f
 20140  2D31  0DBD               	rlf	??_EUSART_Initialize+7,f
 20141  2D32  0B89               	decfsz	9,f
 20142  2D33  2D2E               	goto	u12295
 20143  2D34  3000               	movlw	0
 20144  2D35  00BE               	movwf	??_EUSART_Initialize+8
 20145  2D36  3024               	movlw	36
 20146  2D37  00BF               	movwf	??_EUSART_Initialize+9
 20147  2D38  30F4               	movlw	244
 20148  2D39  00C0               	movwf	??_EUSART_Initialize+10
 20149  2D3A  3000               	movlw	0
 20150  2D3B  00C1               	movwf	??_EUSART_Initialize+11
 20151  2D3C  083A               	movf	??_EUSART_Initialize+4,w
 20152  2D3D  02BE               	subwf	??_EUSART_Initialize+8,f
 20153  2D3E  083B               	movf	??_EUSART_Initialize+5,w
 20154  2D3F  3BBF               	subwfb	??_EUSART_Initialize+9,f
 20155  2D40  083C               	movf	??_EUSART_Initialize+6,w
 20156  2D41  3BC0               	subwfb	??_EUSART_Initialize+10,f
 20157  2D42  083D               	movf	??_EUSART_Initialize+7,w
 20158  2D43  3BC1               	subwfb	??_EUSART_Initialize+11,f
 20159  2D44  0841               	movf	??_EUSART_Initialize+11,w
 20160  2D45  00AB               	movwf	___aldiv@dividend+3
 20161  2D46  0840               	movf	??_EUSART_Initialize+10,w
 20162  2D47  00AA               	movwf	___aldiv@dividend+2
 20163  2D48  083F               	movf	??_EUSART_Initialize+9,w
 20164  2D49  00A9               	movwf	___aldiv@dividend+1
 20165  2D4A  083E               	movf	??_EUSART_Initialize+8,w
 20166  2D4B  00A8               	movwf	___aldiv@dividend
 20167  2D4C  31A9  21A5  31AD   	fcall	___aldiv
 20168  2D4F  0020               	movlb	0	; select bank0
 20169  2D50  0825               	movf	?___aldiv+1,w
 20170  2D51  00FB               	movwf	EUSART_Initialize@x+1
 20171  2D52  0824               	movf	?___aldiv,w
 20172  2D53  00FA               	movwf	EUSART_Initialize@x
 20173                           
 20174                           ;EUSART.c: 10:  if(x>255)
 20175  2D54  3001               	movlw	1
 20176  2D55  027B               	subwf	EUSART_Initialize@x+1,w
 20177  2D56  3000               	movlw	0
 20178  2D57  1903               	skipnz
 20179  2D58  027A               	subwf	EUSART_Initialize@x,w
 20180  2D59  1C03               	skipc
 20181  2D5A  2DA3               	goto	l8622
 20182                           
 20183                           ;EUSART.c: 11:  {;EUSART.c: 12:   x = (16000000 - baudrate*16)/(baudrate*16);
 20184  2D5B  0832               	movf	EUSART_Initialize@baudrate,w
 20185  2D5C  00B6               	movwf	??_EUSART_Initialize
 20186  2D5D  0833               	movf	EUSART_Initialize@baudrate+1,w
 20187  2D5E  00B7               	movwf	??_EUSART_Initialize+1
 20188  2D5F  0834               	movf	EUSART_Initialize@baudrate+2,w
 20189  2D60  00B8               	movwf	??_EUSART_Initialize+2
 20190  2D61  0835               	movf	EUSART_Initialize@baudrate+3,w
 20191  2D62  00B9               	movwf	??_EUSART_Initialize+3
 20192  2D63  3004               	movlw	4
 20193  2D64                     u12315:	
 20194  2D64  35B6               	lslf	??_EUSART_Initialize,f
 20195  2D65  0DB7               	rlf	??_EUSART_Initialize+1,f
 20196  2D66  0DB8               	rlf	??_EUSART_Initialize+2,f
 20197  2D67  0DB9               	rlf	??_EUSART_Initialize+3,f
 20198  2D68  0B89               	decfsz	9,f
 20199  2D69  2D64               	goto	u12315
 20200  2D6A  0839               	movf	??_EUSART_Initialize+3,w
 20201  2D6B  00A7               	movwf	___aldiv@divisor+3
 20202  2D6C  0838               	movf	??_EUSART_Initialize+2,w
 20203  2D6D  00A6               	movwf	___aldiv@divisor+2
 20204  2D6E  0837               	movf	??_EUSART_Initialize+1,w
 20205  2D6F  00A5               	movwf	___aldiv@divisor+1
 20206  2D70  0836               	movf	??_EUSART_Initialize,w
 20207  2D71  00A4               	movwf	___aldiv@divisor
 20208  2D72  0832               	movf	EUSART_Initialize@baudrate,w
 20209  2D73  00BA               	movwf	??_EUSART_Initialize+4
 20210  2D74  0833               	movf	EUSART_Initialize@baudrate+1,w
 20211  2D75  00BB               	movwf	??_EUSART_Initialize+5
 20212  2D76  0834               	movf	EUSART_Initialize@baudrate+2,w
 20213  2D77  00BC               	movwf	??_EUSART_Initialize+6
 20214  2D78  0835               	movf	EUSART_Initialize@baudrate+3,w
 20215  2D79  00BD               	movwf	??_EUSART_Initialize+7
 20216  2D7A  3004               	movlw	4
 20217  2D7B                     u12325:	
 20218  2D7B  35BA               	lslf	??_EUSART_Initialize+4,f
 20219  2D7C  0DBB               	rlf	??_EUSART_Initialize+5,f
 20220  2D7D  0DBC               	rlf	??_EUSART_Initialize+6,f
 20221  2D7E  0DBD               	rlf	??_EUSART_Initialize+7,f
 20222  2D7F  0B89               	decfsz	9,f
 20223  2D80  2D7B               	goto	u12325
 20224  2D81  3000               	movlw	0
 20225  2D82  00BE               	movwf	??_EUSART_Initialize+8
 20226  2D83  3024               	movlw	36
 20227  2D84  00BF               	movwf	??_EUSART_Initialize+9
 20228  2D85  30F4               	movlw	244
 20229  2D86  00C0               	movwf	??_EUSART_Initialize+10
 20230  2D87  3000               	movlw	0
 20231  2D88  00C1               	movwf	??_EUSART_Initialize+11
 20232  2D89  083A               	movf	??_EUSART_Initialize+4,w
 20233  2D8A  02BE               	subwf	??_EUSART_Initialize+8,f
 20234  2D8B  083B               	movf	??_EUSART_Initialize+5,w
 20235  2D8C  3BBF               	subwfb	??_EUSART_Initialize+9,f
 20236  2D8D  083C               	movf	??_EUSART_Initialize+6,w
 20237  2D8E  3BC0               	subwfb	??_EUSART_Initialize+10,f
 20238  2D8F  083D               	movf	??_EUSART_Initialize+7,w
 20239  2D90  3BC1               	subwfb	??_EUSART_Initialize+11,f
 20240  2D91  0841               	movf	??_EUSART_Initialize+11,w
 20241  2D92  00AB               	movwf	___aldiv@dividend+3
 20242  2D93  0840               	movf	??_EUSART_Initialize+10,w
 20243  2D94  00AA               	movwf	___aldiv@dividend+2
 20244  2D95  083F               	movf	??_EUSART_Initialize+9,w
 20245  2D96  00A9               	movwf	___aldiv@dividend+1
 20246  2D97  083E               	movf	??_EUSART_Initialize+8,w
 20247  2D98  00A8               	movwf	___aldiv@dividend
 20248  2D99  31A9  21A5  31AD   	fcall	___aldiv
 20249  2D9C  0020               	movlb	0	; select bank0
 20250  2D9D  0825               	movf	?___aldiv+1,w
 20251  2D9E  00FB               	movwf	EUSART_Initialize@x+1
 20252  2D9F  0824               	movf	?___aldiv,w
 20253  2DA0  00FA               	movwf	EUSART_Initialize@x
 20254                           
 20255                           ;EUSART.c: 13:   BRGH = 1;
 20256  2DA1  0023               	movlb	3	; select bank3
 20257  2DA2  151E               	bsf	30,2	;volatile
 20258  2DA3                     l8622:	
 20259                           
 20260                           ;EUSART.c: 15:  if(x<256)
 20261  2DA3  3001               	movlw	1
 20262  2DA4  027B               	subwf	EUSART_Initialize@x+1,w
 20263  2DA5  3000               	movlw	0
 20264  2DA6  1903               	skipnz
 20265  2DA7  027A               	subwf	EUSART_Initialize@x,w
 20266  2DA8  1803               	skipnc
 20267  2DA9  0008               	return
 20268                           
 20269                           ;EUSART.c: 16:  {;EUSART.c: 17:    SPBRG = x;
 20270  2DAA  087A               	movf	EUSART_Initialize@x,w
 20271  2DAB  0023               	movlb	3	; select bank3
 20272  2DAC  009B               	movwf	27	;volatile
 20273                           
 20274                           ;EUSART.c: 18:    SYNC = 0;
 20275  2DAD  121E               	bcf	30,4	;volatile
 20276                           
 20277                           ;EUSART.c: 19:    SPEN = 1;
 20278  2DAE  179D               	bsf	29,7	;volatile
 20279                           
 20280                           ;EUSART.c: 20:           TRISC7 = 1;
 20281  2DAF  0021               	movlb	1	; select bank1
 20282  2DB0  178E               	bsf	14,7	;volatile
 20283                           
 20284                           ;EUSART.c: 21:           TRISC6 = 1;
 20285  2DB1  170E               	bsf	14,6	;volatile
 20286                           
 20287                           ;EUSART.c: 22:           CREN = 1;
 20288  2DB2  0023               	movlb	3	; select bank3
 20289  2DB3  161D               	bsf	29,4	;volatile
 20290                           
 20291                           ;EUSART.c: 23:           TXEN = 1;
 20292  2DB4  169E               	bsf	30,5	;volatile
 20293  2DB5  0008               	return
 20294  2DB6                     __end_of_EUSART_Initialize:	
 20295                           
 20296                           	psect	text81
 20297  29A5                     __ptext81:	
 20298 ;; *************** function ___aldiv *****************
 20299 ;; Defined at:
 20300 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
 20301 ;; Parameters:    Size  Location     Type
 20302 ;;  divisor         4    4[BANK0 ] long 
 20303 ;;  dividend        4    8[BANK0 ] long 
 20304 ;; Auto vars:     Size  Location     Type
 20305 ;;  quotient        4   14[BANK0 ] long 
 20306 ;;  sign            1   13[BANK0 ] unsigned char 
 20307 ;;  counter         1   12[BANK0 ] unsigned char 
 20308 ;; Return value:  Size  Location     Type
 20309 ;;                  4    4[BANK0 ] long 
 20310 ;; Registers used:
 20311 ;;		wreg, status,2, status,0
 20312 ;; Tracked objects:
 20313 ;;		On entry : 0/0
 20314 ;;		On exit  : 0/0
 20315 ;;		Unchanged: 0/0
 20316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20317 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20318 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20319 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20320 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20321 ;;Total ram usage:       15 bytes
 20322 ;; Hardware stack levels used:    1
 20323 ;; Hardware stack levels required when called:    1
 20324 ;; This function calls:
 20325 ;;		Nothing
 20326 ;; This function is called by:
 20327 ;;		_EUSART_Initialize
 20328 ;;		_setCellUndervoltageProtection
 20329 ;;		_setCellOvervoltageProtection
 20330 ;; This function uses a non-reentrant model
 20331 ;;
 20332                           
 20333                           
 20334                           ;psect for function ___aldiv
 20335  29A5                     ___aldiv:	
 20336                           
 20337                           ;incstack = 0
 20338                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 20339  29A5  0020               	movlb	0	; select bank0
 20340  29A6  01AD               	clrf	___aldiv@sign
 20341  29A7  1FA7               	btfss	___aldiv@divisor+3,7
 20342  29A8  29B6               	goto	l949
 20343  29A9  09A4               	comf	___aldiv@divisor,f
 20344  29AA  09A5               	comf	___aldiv@divisor+1,f
 20345  29AB  09A6               	comf	___aldiv@divisor+2,f
 20346  29AC  09A7               	comf	___aldiv@divisor+3,f
 20347  29AD  0AA4               	incf	___aldiv@divisor,f
 20348  29AE  1903               	skipnz
 20349  29AF  0AA5               	incf	___aldiv@divisor+1,f
 20350  29B0  1903               	skipnz
 20351  29B1  0AA6               	incf	___aldiv@divisor+2,f
 20352  29B2  1903               	skipnz
 20353  29B3  0AA7               	incf	___aldiv@divisor+3,f
 20354  29B4  01AD               	clrf	___aldiv@sign
 20355  29B5  0AAD               	incf	___aldiv@sign,f
 20356  29B6                     l949:	
 20357  29B6  1FAB               	btfss	___aldiv@dividend+3,7
 20358  29B7  29C7               	goto	l8398
 20359  29B8  09A8               	comf	___aldiv@dividend,f
 20360  29B9  09A9               	comf	___aldiv@dividend+1,f
 20361  29BA  09AA               	comf	___aldiv@dividend+2,f
 20362  29BB  09AB               	comf	___aldiv@dividend+3,f
 20363  29BC  0AA8               	incf	___aldiv@dividend,f
 20364  29BD  1903               	skipnz
 20365  29BE  0AA9               	incf	___aldiv@dividend+1,f
 20366  29BF  1903               	skipnz
 20367  29C0  0AAA               	incf	___aldiv@dividend+2,f
 20368  29C1  1903               	skipnz
 20369  29C2  0AAB               	incf	___aldiv@dividend+3,f
 20370  29C3  3001               	movlw	1
 20371  29C4  00F9               	movwf	??___aldiv
 20372  29C5  0879               	movf	??___aldiv,w
 20373  29C6  06AD               	xorwf	___aldiv@sign,f
 20374  29C7                     l8398:	
 20375  29C7  3000               	movlw	0
 20376  29C8  00B1               	movwf	___aldiv@quotient+3
 20377  29C9  3000               	movlw	0
 20378  29CA  00B0               	movwf	___aldiv@quotient+2
 20379  29CB  3000               	movlw	0
 20380  29CC  00AF               	movwf	___aldiv@quotient+1
 20381  29CD  3000               	movlw	0
 20382  29CE  00AE               	movwf	___aldiv@quotient
 20383  29CF  0827               	movf	___aldiv@divisor+3,w
 20384  29D0  0426               	iorwf	___aldiv@divisor+2,w
 20385  29D1  0425               	iorwf	___aldiv@divisor+1,w
 20386  29D2  0424               	iorwf	___aldiv@divisor,w
 20387  29D3  1903               	skipnz
 20388  29D4  2A10               	goto	l8420
 20389  29D5  01AC               	clrf	___aldiv@counter
 20390  29D6  0AAC               	incf	___aldiv@counter,f
 20391  29D7                     l8406:	
 20392  29D7  1BA7               	btfsc	___aldiv@divisor+3,7
 20393  29D8  29E5               	goto	l8408
 20394  29D9  3001               	movlw	1
 20395  29DA                     u12075:	
 20396  29DA  35A4               	lslf	___aldiv@divisor,f
 20397  29DB  0DA5               	rlf	___aldiv@divisor+1,f
 20398  29DC  0DA6               	rlf	___aldiv@divisor+2,f
 20399  29DD  0DA7               	rlf	___aldiv@divisor+3,f
 20400  29DE  0B89               	decfsz	9,f
 20401  29DF  29DA               	goto	u12075
 20402  29E0  3001               	movlw	1
 20403  29E1  00F9               	movwf	??___aldiv
 20404  29E2  0879               	movf	??___aldiv,w
 20405  29E3  07AC               	addwf	___aldiv@counter,f
 20406  29E4  29D7               	goto	l8406
 20407  29E5                     l8408:	
 20408  29E5  3001               	movlw	1
 20409  29E6                     u12095:	
 20410  29E6  35AE               	lslf	___aldiv@quotient,f
 20411  29E7  0DAF               	rlf	___aldiv@quotient+1,f
 20412  29E8  0DB0               	rlf	___aldiv@quotient+2,f
 20413  29E9  0DB1               	rlf	___aldiv@quotient+3,f
 20414  29EA  0B89               	decfsz	9,f
 20415  29EB  29E6               	goto	u12095
 20416  29EC  0827               	movf	___aldiv@divisor+3,w
 20417  29ED  022B               	subwf	___aldiv@dividend+3,w
 20418  29EE  1D03               	skipz
 20419  29EF  29FA               	goto	u12105
 20420  29F0  0826               	movf	___aldiv@divisor+2,w
 20421  29F1  022A               	subwf	___aldiv@dividend+2,w
 20422  29F2  1D03               	skipz
 20423  29F3  29FA               	goto	u12105
 20424  29F4  0825               	movf	___aldiv@divisor+1,w
 20425  29F5  0229               	subwf	___aldiv@dividend+1,w
 20426  29F6  1D03               	skipz
 20427  29F7  29FA               	goto	u12105
 20428  29F8  0824               	movf	___aldiv@divisor,w
 20429  29F9  0228               	subwf	___aldiv@dividend,w
 20430  29FA                     u12105:	
 20431  29FA  1C03               	skipc
 20432  29FB  2A05               	goto	l8416
 20433  29FC  0824               	movf	___aldiv@divisor,w
 20434  29FD  02A8               	subwf	___aldiv@dividend,f
 20435  29FE  0825               	movf	___aldiv@divisor+1,w
 20436  29FF  3BA9               	subwfb	___aldiv@dividend+1,f
 20437  2A00  0826               	movf	___aldiv@divisor+2,w
 20438  2A01  3BAA               	subwfb	___aldiv@dividend+2,f
 20439  2A02  0827               	movf	___aldiv@divisor+3,w
 20440  2A03  3BAB               	subwfb	___aldiv@dividend+3,f
 20441  2A04  142E               	bsf	___aldiv@quotient,0
 20442  2A05                     l8416:	
 20443  2A05  3001               	movlw	1
 20444  2A06                     u12115:	
 20445  2A06  36A7               	lsrf	___aldiv@divisor+3,f
 20446  2A07  0CA6               	rrf	___aldiv@divisor+2,f
 20447  2A08  0CA5               	rrf	___aldiv@divisor+1,f
 20448  2A09  0CA4               	rrf	___aldiv@divisor,f
 20449  2A0A  0B89               	decfsz	9,f
 20450  2A0B  2A06               	goto	u12115
 20451  2A0C  3001               	movlw	1
 20452  2A0D  02AC               	subwf	___aldiv@counter,f
 20453  2A0E  1D03               	btfss	3,2
 20454  2A0F  29E5               	goto	l8408
 20455  2A10                     l8420:	
 20456  2A10  082D               	movf	___aldiv@sign,w
 20457  2A11  1903               	btfsc	3,2
 20458  2A12  2A1E               	goto	l8424
 20459  2A13  09AE               	comf	___aldiv@quotient,f
 20460  2A14  09AF               	comf	___aldiv@quotient+1,f
 20461  2A15  09B0               	comf	___aldiv@quotient+2,f
 20462  2A16  09B1               	comf	___aldiv@quotient+3,f
 20463  2A17  0AAE               	incf	___aldiv@quotient,f
 20464  2A18  1903               	skipnz
 20465  2A19  0AAF               	incf	___aldiv@quotient+1,f
 20466  2A1A  1903               	skipnz
 20467  2A1B  0AB0               	incf	___aldiv@quotient+2,f
 20468  2A1C  1903               	skipnz
 20469  2A1D  0AB1               	incf	___aldiv@quotient+3,f
 20470  2A1E                     l8424:	
 20471  2A1E  0831               	movf	___aldiv@quotient+3,w
 20472  2A1F  00A7               	movwf	?___aldiv+3
 20473  2A20  0830               	movf	___aldiv@quotient+2,w
 20474  2A21  00A6               	movwf	?___aldiv+2
 20475  2A22  082F               	movf	___aldiv@quotient+1,w
 20476  2A23  00A5               	movwf	?___aldiv+1
 20477  2A24  082E               	movf	___aldiv@quotient,w
 20478  2A25  00A4               	movwf	?___aldiv
 20479  2A26  0008               	return
 20480  2A27                     __end_of___aldiv:	
 20481                           
 20482                           	psect	intentry
 20483  0004                     __pintentry:	
 20484 ;; *************** function _myIsr *****************
 20485 ;; Defined at:
 20486 ;;		line 57 in file "main.c"
 20487 ;; Parameters:    Size  Location     Type
 20488 ;;		None
 20489 ;; Auto vars:     Size  Location     Type
 20490 ;;		None
 20491 ;; Return value:  Size  Location     Type
 20492 ;;                  1    wreg      void 
 20493 ;; Registers used:
 20494 ;;		wreg, status,2, status,0
 20495 ;; Tracked objects:
 20496 ;;		On entry : 0/0
 20497 ;;		On exit  : 0/0
 20498 ;;		Unchanged: 0/0
 20499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20502 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20503 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20504 ;;Total ram usage:        1 bytes
 20505 ;; Hardware stack levels used:    1
 20506 ;; This function calls:
 20507 ;;		Nothing
 20508 ;; This function is called by:
 20509 ;;		Interrupt level 1
 20510 ;; This function uses a non-reentrant model
 20511 ;;
 20512                           
 20513  0004                     _myIsr:	
 20514                           
 20515                           ;incstack = 0
 20516  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 20517                           
 20518                           ; Regs used in _myIsr: [wreg+status,2+status,0]
 20519  0005  3180               	pagesel	$
 20520                           
 20521                           ;main.c: 59:     static uint8_t count = 0;;main.c: 61:     if (PIR1bits.TMR1IF && PIE1bi
      +                          ts.TMR1IE) {
 20522  0006  0020               	movlb	0	; select bank0
 20523  0007  1C11               	btfss	17,0	;volatile
 20524  0008  281C               	goto	i1l135
 20525  0009  0021               	movlb	1	; select bank1
 20526  000A  1C11               	btfss	17,0	;volatile
 20527  000B  281C               	goto	i1l135
 20528                           
 20529                           ;main.c: 62:         PIR1bits.TMR1IF = 0;
 20530  000C  0020               	movlb	0	; select bank0
 20531  000D  1011               	bcf	17,0	;volatile
 20532                           
 20533                           ;main.c: 63:         count++;
 20534  000E  3001               	movlw	1
 20535  000F  00F0               	movwf	??_myIsr
 20536  0010  0870               	movf	??_myIsr,w
 20537  0011  0023               	movlb	3	; select bank3
 20538  0012  07D7               	addwf	myIsr@count^(0+384),f
 20539                           
 20540                           ;main.c: 66:         if (count == 61) {
 20541  0013  303D               	movlw	61
 20542  0014  0657               	xorwf	myIsr@count^(0+384),w
 20543  0015  1D03               	btfss	3,2
 20544  0016  281C               	goto	i1l135
 20545                           
 20546                           ;main.c: 67:             tmr1_flag = 1;
 20547  0017  3001               	movlw	1
 20548  0018  00F0               	movwf	??_myIsr
 20549  0019  0870               	movf	??_myIsr,w
 20550  001A  00D8               	movwf	_tmr1_flag^(0+384)	;volatile
 20551                           
 20552                           ;main.c: 68:             count = 0;
 20553  001B  01D7               	clrf	myIsr@count^(0+384)
 20554  001C                     i1l135:	
 20555  001C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 20556  001D  0009               	retfie
 20557  001E                     __end_of_myIsr:	
 20558  007E                     btemp	set	126	;btemp
 20559  007E                     int$flags	set	126
 20560  007E                     wtemp0	set	126
 20561  2771                     
 20562                           	psect	text6_split_1
 20563  2A27                     l7994:	
 20564                           
 20565                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
 20566  2A27  0021               	movlb	1	; select bank1
 20567  2A28  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20568  2A29  0086               	movwf	6
 20569  2A2A  0187               	clrf	7
 20570  2A2B  3F40               	moviw [0]fsr1
 20571  2A2C  00F1               	movwf	strncmp@_l
 20572  2A2D  3F41               	moviw [1]fsr1
 20573  2A2E  00F2               	movwf	strncmp@_l+1
 20574  2A2F  301C               	movlw	low (STR_34| (0+32768))
 20575  2A30  00F3               	movwf	strncmp@_r
 20576  2A31  30BB               	movlw	high (STR_34| (0+32768))
 20577  2A32  00F4               	movwf	strncmp@_r+1
 20578  2A33  3003               	movlw	3
 20579  2A34  00F5               	movwf	strncmp@n
 20580  2A35  3000               	movlw	0
 20581  2A36  00F6               	movwf	strncmp@n+1
 20582  2A37  3190  2000  31AA   	fcall	_strncmp
 20583  2A3A  0871               	movf	?_strncmp,w
 20584  2A3B  0472               	iorwf	?_strncmp+1,w
 20585  2A3C  1903               	btfsc	3,2
 20586  2A3D  2A55               	goto	l7998
 20587  2A3E  0021               	movlb	1	; select bank1
 20588  2A3F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20589  2A40  0086               	movwf	6
 20590  2A41  0187               	clrf	7
 20591  2A42  3F40               	moviw [0]fsr1
 20592  2A43  00F1               	movwf	strncmp@_l
 20593  2A44  3F41               	moviw [1]fsr1
 20594  2A45  00F2               	movwf	strncmp@_l+1
 20595  2A46  3024               	movlw	low (STR_38| (0+32768))
 20596  2A47  00F3               	movwf	strncmp@_r
 20597  2A48  30BB               	movlw	high (STR_38| (0+32768))
 20598  2A49  00F4               	movwf	strncmp@_r+1
 20599  2A4A  3003               	movlw	3
 20600  2A4B  00F5               	movwf	strncmp@n
 20601  2A4C  3000               	movlw	0
 20602  2A4D  00F6               	movwf	strncmp@n+1
 20603  2A4E  3190  2000  31AA   	fcall	_strncmp
 20604  2A51  0871               	movf	?_strncmp,w
 20605  2A52  0472               	iorwf	?_strncmp+1,w
 20606  2A53  1D03               	btfss	3,2
 20607  2A54  2AA8               	goto	L18
 20608  2A55                     l7998:	
 20609                           
 20610                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
 20611  2A55  0021               	movlb	1	; select bank1
 20612  2A56  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20613  2A57  0086               	movwf	6
 20614  2A58  0187               	clrf	7
 20615  2A59  3003               	movlw	3
 20616  2A5A  0781               	addwf	1,f
 20617  2A5B  3141               	addfsr 1,1
 20618  2A5C  1803               	skipnc
 20619  2A5D  0A81               	incf	1,f
 20620                           
 20621                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 20622  2A5E  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20623  2A5F  0086               	movwf	6
 20624  2A60  3001               	movlw	1	; select bank2/3
 20625  2A61  0087               	movwf	7
 20626  2A62  0801               	movf	1,w
 20627  2A63  0084               	movwf	4
 20628  2A64  3001               	movlw	1	; select bank2/3
 20629  2A65  0085               	movwf	5
 20630  2A66  3002               	movlw	2
 20631  2A67  0781               	addwf	1,f
 20632  2A68  0800               	movf	0,w
 20633  2A69  0022               	movlb	2	; select bank2
 20634  2A6A  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 20635  2A6B  3980               	andlw	128
 20636  2A6C  1D03               	skipz
 20637  2A6D  30FF               	movlw	255
 20638  2A6E  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 20639  2A6F  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 20640  2A70  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 20641  2A71  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 20642  2A72  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 20643  2A73  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 20644  2A74  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 20645                           
 20646                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
 20647  2A75  0021               	movlb	1	; select bank1
 20648  2A76  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20649  2A77  0020               	movlb	0	; select bank0
 20650  2A78  00B1               	movwf	dtoa@fp+1
 20651  2A79  0021               	movlb	1	; select bank1
 20652  2A7A  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20653  2A7B  0020               	movlb	0	; select bank0
 20654  2A7C  00B0               	movwf	dtoa@fp
 20655  2A7D  0022               	movlb	2	; select bank2
 20656  2A7E  083C               	movf	vfpfcnvrt@ll^(0+256),w
 20657  2A7F  0020               	movlb	0	; select bank0
 20658  2A80  00B2               	movwf	dtoa@d
 20659  2A81  0022               	movlb	2	; select bank2
 20660  2A82  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 20661  2A83  0020               	movlb	0	; select bank0
 20662  2A84  00B3               	movwf	dtoa@d+1
 20663  2A85  0022               	movlb	2	; select bank2
 20664  2A86  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 20665  2A87  0020               	movlb	0	; select bank0
 20666  2A88  00B4               	movwf	dtoa@d+2
 20667  2A89  0022               	movlb	2	; select bank2
 20668  2A8A  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 20669  2A8B  0020               	movlb	0	; select bank0
 20670  2A8C  00B5               	movwf	dtoa@d+3
 20671  2A8D  0022               	movlb	2	; select bank2
 20672  2A8E  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 20673  2A8F  0020               	movlb	0	; select bank0
 20674  2A90  00B6               	movwf	dtoa@d+4
 20675  2A91  0022               	movlb	2	; select bank2
 20676  2A92  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 20677  2A93  0020               	movlb	0	; select bank0
 20678  2A94  00B7               	movwf	dtoa@d+5
 20679  2A95  0022               	movlb	2	; select bank2
 20680  2A96  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 20681  2A97  0020               	movlb	0	; select bank0
 20682  2A98  00B8               	movwf	dtoa@d+6
 20683  2A99  0022               	movlb	2	; select bank2
 20684  2A9A  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 20685  2A9B  0020               	movlb	0	; select bank0
 20686  2A9C  00B9               	movwf	dtoa@d+7
 20687  2A9D  319B  2372         	fcall	_dtoa
 20688  2A9F  0020               	movlb	0	; select bank0
 20689  2AA0  0831               	movf	?_dtoa+1,w
 20690  2AA1  0021               	movlb	1	; select bank1
 20691  2AA2  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20692  2AA3  0020               	movlb	0	; select bank0
 20693  2AA4  0830               	movf	?_dtoa,w
 20694  2AA5  0021               	movlb	1	; select bank1
 20695  2AA6  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20696  2AA7  0008               	return
 20697  2AA8                     L18:	
 20698  2AA8                     L17:	
 20699  2AA8  31AA  2AAA         	ljmp	l8006
 20700                           
 20701                           	psect	text6_split_2
 20702  2AAA                     l8006:	
 20703                           
 20704                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
 20705  2AAA  0021               	movlb	1	; select bank1
 20706  2AAB  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20707  2AAC  0086               	movwf	6
 20708  2AAD  0187               	clrf	7
 20709  2AAE  3F40               	moviw [0]fsr1
 20710  2AAF  00F1               	movwf	strncmp@_l
 20711  2AB0  3F41               	moviw [1]fsr1
 20712  2AB1  00F2               	movwf	strncmp@_l+1
 20713  2AB2  301D               	movlw	low ((STR_34+1)| (0+32768))
 20714  2AB3  00F3               	movwf	strncmp@_r
 20715  2AB4  30BB               	movlw	high ((STR_34+1)| (0+32768))
 20716  2AB5  00F4               	movwf	strncmp@_r+1
 20717  2AB6  3002               	movlw	2
 20718  2AB7  00F5               	movwf	strncmp@n
 20719  2AB8  3000               	movlw	0
 20720  2AB9  00F6               	movwf	strncmp@n+1
 20721  2ABA  3190  2000  31AA   	fcall	_strncmp
 20722  2ABD  0871               	movf	?_strncmp,w
 20723  2ABE  0472               	iorwf	?_strncmp+1,w
 20724  2ABF  1903               	btfsc	3,2
 20725  2AC0  2AD8               	goto	l8010
 20726  2AC1  0021               	movlb	1	; select bank1
 20727  2AC2  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20728  2AC3  0086               	movwf	6
 20729  2AC4  0187               	clrf	7
 20730  2AC5  3F40               	moviw [0]fsr1
 20731  2AC6  00F1               	movwf	strncmp@_l
 20732  2AC7  3F41               	moviw [1]fsr1
 20733  2AC8  00F2               	movwf	strncmp@_l+1
 20734  2AC9  3025               	movlw	low ((STR_38+1)| (0+32768))
 20735  2ACA  00F3               	movwf	strncmp@_r
 20736  2ACB  30BB               	movlw	high ((STR_38+1)| (0+32768))
 20737  2ACC  00F4               	movwf	strncmp@_r+1
 20738  2ACD  3002               	movlw	2
 20739  2ACE  00F5               	movwf	strncmp@n
 20740  2ACF  3000               	movlw	0
 20741  2AD0  00F6               	movwf	strncmp@n+1
 20742  2AD1  3190  2000  31AA   	fcall	_strncmp
 20743  2AD4  0871               	movf	?_strncmp,w
 20744  2AD5  0472               	iorwf	?_strncmp+1,w
 20745  2AD6  1D03               	btfss	3,2
 20746  2AD7  2B30               	goto	L20
 20747  2AD8                     l8010:	
 20748                           
 20749                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
 20750  2AD8  0021               	movlb	1	; select bank1
 20751  2AD9  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20752  2ADA  0086               	movwf	6
 20753  2ADB  0187               	clrf	7
 20754  2ADC  3002               	movlw	2
 20755  2ADD  0781               	addwf	1,f
 20756  2ADE  3141               	addfsr 1,1
 20757  2ADF  1803               	skipnc
 20758  2AE0  0A81               	incf	1,f
 20759                           
 20760                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
 20761  2AE1  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20762  2AE2  0086               	movwf	6
 20763  2AE3  3001               	movlw	1	; select bank2/3
 20764  2AE4  0087               	movwf	7
 20765  2AE5  0801               	movf	1,w
 20766  2AE6  0084               	movwf	4
 20767  2AE7  3001               	movlw	1	; select bank2/3
 20768  2AE8  0085               	movwf	5
 20769  2AE9  3002               	movlw	2
 20770  2AEA  0781               	addwf	1,f
 20771  2AEB  3F00               	moviw [0]fsr0
 20772  2AEC  0022               	movlb	2	; select bank2
 20773  2AED  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20774  2AEE  3F01               	moviw [1]fsr0
 20775  2AEF  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20776  2AF0  0820               	movf	??_vfpfcnvrt^(0+256),w
 20777  2AF1  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 20778  2AF2  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 20779  2AF3  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 20780  2AF4  0D89               	rlf	9,f
 20781  2AF5  3B89               	subwfb	9,f
 20782  2AF6  0989               	comf	9,f
 20783  2AF7  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 20784  2AF8  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 20785  2AF9  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 20786  2AFA  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 20787  2AFB  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 20788  2AFC  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 20789                           
 20790                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 820:       
      +                                return dtoa(fp, ll);
 20791  2AFD  0021               	movlb	1	; select bank1
 20792  2AFE  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20793  2AFF  0020               	movlb	0	; select bank0
 20794  2B00  00B1               	movwf	dtoa@fp+1
 20795  2B01  0021               	movlb	1	; select bank1
 20796  2B02  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20797  2B03  0020               	movlb	0	; select bank0
 20798  2B04  00B0               	movwf	dtoa@fp
 20799  2B05  0022               	movlb	2	; select bank2
 20800  2B06  083C               	movf	vfpfcnvrt@ll^(0+256),w
 20801  2B07  0020               	movlb	0	; select bank0
 20802  2B08  00B2               	movwf	dtoa@d
 20803  2B09  0022               	movlb	2	; select bank2
 20804  2B0A  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 20805  2B0B  0020               	movlb	0	; select bank0
 20806  2B0C  00B3               	movwf	dtoa@d+1
 20807  2B0D  0022               	movlb	2	; select bank2
 20808  2B0E  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 20809  2B0F  0020               	movlb	0	; select bank0
 20810  2B10  00B4               	movwf	dtoa@d+2
 20811  2B11  0022               	movlb	2	; select bank2
 20812  2B12  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 20813  2B13  0020               	movlb	0	; select bank0
 20814  2B14  00B5               	movwf	dtoa@d+3
 20815  2B15  0022               	movlb	2	; select bank2
 20816  2B16  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 20817  2B17  0020               	movlb	0	; select bank0
 20818  2B18  00B6               	movwf	dtoa@d+4
 20819  2B19  0022               	movlb	2	; select bank2
 20820  2B1A  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 20821  2B1B  0020               	movlb	0	; select bank0
 20822  2B1C  00B7               	movwf	dtoa@d+5
 20823  2B1D  0022               	movlb	2	; select bank2
 20824  2B1E  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 20825  2B1F  0020               	movlb	0	; select bank0
 20826  2B20  00B8               	movwf	dtoa@d+6
 20827  2B21  0022               	movlb	2	; select bank2
 20828  2B22  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 20829  2B23  0020               	movlb	0	; select bank0
 20830  2B24  00B9               	movwf	dtoa@d+7
 20831  2B25  319B  2372         	fcall	_dtoa
 20832  2B27  0020               	movlb	0	; select bank0
 20833  2B28  0831               	movf	?_dtoa+1,w
 20834  2B29  0021               	movlb	1	; select bank1
 20835  2B2A  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20836  2B2B  0020               	movlb	0	; select bank0
 20837  2B2C  0830               	movf	?_dtoa,w
 20838  2B2D  0021               	movlb	1	; select bank1
 20839  2B2E  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20840  2B2F  0008               	return
 20841  2B30                     L20:	
 20842  2B30                     L19:	
 20843  2B30  3198  2829         	ljmp	l8018
 20844                           
 20845                           	psect	text6_split_3
 20846  1829                     l8018:	
 20847                           
 20848                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 20849  1829  0021               	movlb	1	; select bank1
 20850  182A  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20851  182B  0086               	movwf	6
 20852  182C  0187               	clrf	7
 20853  182D  3F40               	moviw [0]fsr1
 20854  182E  0022               	movlb	2	; select bank2
 20855  182F  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20856  1830  3F41               	moviw [1]fsr1
 20857  1831  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20858  1832  0820               	movf	??_vfpfcnvrt^(0+256),w
 20859  1833  0084               	movwf	4
 20860  1834  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 20861  1835  0085               	movwf	5
 20862  1836  0012               	moviw fsr0++
 20863  1837  3A64               	xorlw	100
 20864  1838  1903               	btfsc	3,2
 20865  1839  284B               	goto	l8022
 20866  183A  0021               	movlb	1	; select bank1
 20867  183B  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20868  183C  0086               	movwf	6
 20869  183D  0187               	clrf	7
 20870  183E  3F40               	moviw [0]fsr1
 20871  183F  0022               	movlb	2	; select bank2
 20872  1840  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20873  1841  3F41               	moviw [1]fsr1
 20874  1842  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20875  1843  0820               	movf	??_vfpfcnvrt^(0+256),w
 20876  1844  0084               	movwf	4
 20877  1845  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 20878  1846  0085               	movwf	5
 20879  1847  0012               	moviw fsr0++
 20880  1848  3A69               	xorlw	105
 20881  1849  1D03               	btfss	3,2
 20882  184A  28A3               	goto	l8030
 20883  184B                     l8022:	
 20884                           
 20885                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 20886  184B  0021               	movlb	1	; select bank1
 20887  184C  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20888  184D  0086               	movwf	6
 20889  184E  0187               	clrf	7
 20890  184F  3001               	movlw	1
 20891  1850  0781               	addwf	1,f
 20892  1851  3141               	addfsr 1,1
 20893  1852  1803               	skipnc
 20894  1853  0A81               	incf	1,f
 20895                           
 20896                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 20897  1854  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20898  1855  0086               	movwf	6
 20899  1856  3001               	movlw	1	; select bank2/3
 20900  1857  0087               	movwf	7
 20901  1858  0801               	movf	1,w
 20902  1859  0084               	movwf	4
 20903  185A  3001               	movlw	1	; select bank2/3
 20904  185B  0085               	movwf	5
 20905  185C  3002               	movlw	2
 20906  185D  0781               	addwf	1,f
 20907  185E  3F00               	moviw [0]fsr0
 20908  185F  0022               	movlb	2	; select bank2
 20909  1860  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20910  1861  3F01               	moviw [1]fsr0
 20911  1862  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20912  1863  0820               	movf	??_vfpfcnvrt^(0+256),w
 20913  1864  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 20914  1865  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 20915  1866  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 20916  1867  0D89               	rlf	9,f
 20917  1868  3B89               	subwfb	9,f
 20918  1869  0989               	comf	9,f
 20919  186A  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 20920  186B  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 20921  186C  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 20922  186D  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 20923  186E  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 20924  186F  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 20925                           
 20926                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 20927  1870  0021               	movlb	1	; select bank1
 20928  1871  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20929  1872  0020               	movlb	0	; select bank0
 20930  1873  00B1               	movwf	dtoa@fp+1
 20931  1874  0021               	movlb	1	; select bank1
 20932  1875  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20933  1876  0020               	movlb	0	; select bank0
 20934  1877  00B0               	movwf	dtoa@fp
 20935  1878  0022               	movlb	2	; select bank2
 20936  1879  083C               	movf	vfpfcnvrt@ll^(0+256),w
 20937  187A  0020               	movlb	0	; select bank0
 20938  187B  00B2               	movwf	dtoa@d
 20939  187C  0022               	movlb	2	; select bank2
 20940  187D  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 20941  187E  0020               	movlb	0	; select bank0
 20942  187F  00B3               	movwf	dtoa@d+1
 20943  1880  0022               	movlb	2	; select bank2
 20944  1881  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 20945  1882  0020               	movlb	0	; select bank0
 20946  1883  00B4               	movwf	dtoa@d+2
 20947  1884  0022               	movlb	2	; select bank2
 20948  1885  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 20949  1886  0020               	movlb	0	; select bank0
 20950  1887  00B5               	movwf	dtoa@d+3
 20951  1888  0022               	movlb	2	; select bank2
 20952  1889  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 20953  188A  0020               	movlb	0	; select bank0
 20954  188B  00B6               	movwf	dtoa@d+4
 20955  188C  0022               	movlb	2	; select bank2
 20956  188D  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 20957  188E  0020               	movlb	0	; select bank0
 20958  188F  00B7               	movwf	dtoa@d+5
 20959  1890  0022               	movlb	2	; select bank2
 20960  1891  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 20961  1892  0020               	movlb	0	; select bank0
 20962  1893  00B8               	movwf	dtoa@d+6
 20963  1894  0022               	movlb	2	; select bank2
 20964  1895  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 20965  1896  0020               	movlb	0	; select bank0
 20966  1897  00B9               	movwf	dtoa@d+7
 20967  1898  319B  2372         	fcall	_dtoa
 20968  189A  0020               	movlb	0	; select bank0
 20969  189B  0831               	movf	?_dtoa+1,w
 20970  189C  0021               	movlb	1	; select bank1
 20971  189D  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20972  189E  0020               	movlb	0	; select bank0
 20973  189F  0830               	movf	?_dtoa,w
 20974  18A0  0021               	movlb	1	; select bank1
 20975  18A1  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20976  18A2  0008               	return
 20977  18A3                     l8030:	
 20978                           
 20979                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 835:       
      +                            if (!strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", (
      +                          (sizeof("li")/sizeof("li"[0]))-1))) {
 20980  18A3  0021               	movlb	1	; select bank1
 20981  18A4  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20982  18A5  0086               	movwf	6
 20983  18A6  0187               	clrf	7
 20984  18A7  3F40               	moviw [0]fsr1
 20985  18A8  00F1               	movwf	strncmp@_l
 20986  18A9  3F41               	moviw [1]fsr1
 20987  18AA  00F2               	movwf	strncmp@_l+1
 20988  18AB  3042               	movlw	low (STR_52| (0+32768))
 20989  18AC  00F3               	movwf	strncmp@_r
 20990  18AD  30BB               	movlw	high (STR_52| (0+32768))
 20991  18AE  00F4               	movwf	strncmp@_r+1
 20992  18AF  3002               	movlw	2
 20993  18B0  00F5               	movwf	strncmp@n
 20994  18B1  3000               	movlw	0
 20995  18B2  00F6               	movwf	strncmp@n+1
 20996  18B3  3190  2000  3198   	fcall	_strncmp
 20997  18B6  0871               	movf	?_strncmp,w
 20998  18B7  0472               	iorwf	?_strncmp+1,w
 20999  18B8  1903               	btfsc	3,2
 21000  18B9  28D1               	goto	l8034
 21001  18BA  0021               	movlb	1	; select bank1
 21002  18BB  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21003  18BC  0086               	movwf	6
 21004  18BD  0187               	clrf	7
 21005  18BE  3F40               	moviw [0]fsr1
 21006  18BF  00F1               	movwf	strncmp@_l
 21007  18C0  3F41               	moviw [1]fsr1
 21008  18C1  00F2               	movwf	strncmp@_l+1
 21009  18C2  304B               	movlw	low (STR_56| (0+32768))
 21010  18C3  00F3               	movwf	strncmp@_r
 21011  18C4  30BB               	movlw	high (STR_56| (0+32768))
 21012  18C5  00F4               	movwf	strncmp@_r+1
 21013  18C6  3002               	movlw	2
 21014  18C7  00F5               	movwf	strncmp@n
 21015  18C8  3000               	movlw	0
 21016  18C9  00F6               	movwf	strncmp@n+1
 21017  18CA  3190  2000  3198   	fcall	_strncmp
 21018  18CD  0871               	movf	?_strncmp,w
 21019  18CE  0472               	iorwf	?_strncmp+1,w
 21020  18CF  1D03               	btfss	3,2
 21021  18D0  292F               	goto	L22
 21022  18D1                     l8034:	
 21023                           
 21024                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 836: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 838:             
      +                          *fmt += ((sizeof("ld")/sizeof("ld"[0]))-1);
 21025  18D1  0021               	movlb	1	; select bank1
 21026  18D2  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21027  18D3  0086               	movwf	6
 21028  18D4  0187               	clrf	7
 21029  18D5  3002               	movlw	2
 21030  18D6  0781               	addwf	1,f
 21031  18D7  3141               	addfsr 1,1
 21032  18D8  1803               	skipnc
 21033  18D9  0A81               	incf	1,f
 21034                           
 21035                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 839:       
      +                                ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
 21036  18DA  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21037  18DB  0086               	movwf	6
 21038  18DC  3001               	movlw	1	; select bank2/3
 21039  18DD  0087               	movwf	7
 21040  18DE  0801               	movf	1,w
 21041  18DF  0084               	movwf	4
 21042  18E0  3001               	movlw	1	; select bank2/3
 21043  18E1  0085               	movwf	5
 21044  18E2  3004               	movlw	4
 21045  18E3  0781               	addwf	1,f
 21046  18E4  3F00               	moviw [0]fsr0
 21047  18E5  0022               	movlb	2	; select bank2
 21048  18E6  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21049  18E7  3F01               	moviw [1]fsr0
 21050  18E8  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21051  18E9  3F02               	moviw [2]fsr0
 21052  18EA  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 21053  18EB  3F03               	moviw [3]fsr0
 21054  18EC  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 21055  18ED  0820               	movf	??_vfpfcnvrt^(0+256),w
 21056  18EE  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 21057  18EF  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21058  18F0  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 21059  18F1  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 21060  18F2  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 21061  18F3  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 21062  18F4  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 21063  18F5  3000               	movlw	0
 21064  18F6  1BBF               	btfsc	(vfpfcnvrt@ll+3)^(0+256),7
 21065  18F7  30FF               	movlw	255
 21066  18F8  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 21067  18F9  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 21068  18FA  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 21069  18FB  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 21070                           
 21071                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 841:       
      +                                return dtoa(fp, ll);
 21072  18FC  0021               	movlb	1	; select bank1
 21073  18FD  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21074  18FE  0020               	movlb	0	; select bank0
 21075  18FF  00B1               	movwf	dtoa@fp+1
 21076  1900  0021               	movlb	1	; select bank1
 21077  1901  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21078  1902  0020               	movlb	0	; select bank0
 21079  1903  00B0               	movwf	dtoa@fp
 21080  1904  0022               	movlb	2	; select bank2
 21081  1905  083C               	movf	vfpfcnvrt@ll^(0+256),w
 21082  1906  0020               	movlb	0	; select bank0
 21083  1907  00B2               	movwf	dtoa@d
 21084  1908  0022               	movlb	2	; select bank2
 21085  1909  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 21086  190A  0020               	movlb	0	; select bank0
 21087  190B  00B3               	movwf	dtoa@d+1
 21088  190C  0022               	movlb	2	; select bank2
 21089  190D  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 21090  190E  0020               	movlb	0	; select bank0
 21091  190F  00B4               	movwf	dtoa@d+2
 21092  1910  0022               	movlb	2	; select bank2
 21093  1911  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 21094  1912  0020               	movlb	0	; select bank0
 21095  1913  00B5               	movwf	dtoa@d+3
 21096  1914  0022               	movlb	2	; select bank2
 21097  1915  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 21098  1916  0020               	movlb	0	; select bank0
 21099  1917  00B6               	movwf	dtoa@d+4
 21100  1918  0022               	movlb	2	; select bank2
 21101  1919  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 21102  191A  0020               	movlb	0	; select bank0
 21103  191B  00B7               	movwf	dtoa@d+5
 21104  191C  0022               	movlb	2	; select bank2
 21105  191D  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 21106  191E  0020               	movlb	0	; select bank0
 21107  191F  00B8               	movwf	dtoa@d+6
 21108  1920  0022               	movlb	2	; select bank2
 21109  1921  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 21110  1922  0020               	movlb	0	; select bank0
 21111  1923  00B9               	movwf	dtoa@d+7
 21112  1924  319B  2372         	fcall	_dtoa
 21113  1926  0020               	movlb	0	; select bank0
 21114  1927  0831               	movf	?_dtoa+1,w
 21115  1928  0021               	movlb	1	; select bank1
 21116  1929  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21117  192A  0020               	movlb	0	; select bank0
 21118  192B  0830               	movf	?_dtoa,w
 21119  192C  0021               	movlb	1	; select bank1
 21120  192D  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21121  192E  0008               	return
 21122  192F                     L22:	
 21123  192F                     L21:	
 21124  192F  31A0  28F0         	ljmp	l8042
 21125                           
 21126                           	psect	text6_split_4
 21127  20F0                     l8042:	
 21128                           
 21129                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
 21130  20F0  0021               	movlb	1	; select bank1
 21131  20F1  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21132  20F2  0086               	movwf	6
 21133  20F3  0187               	clrf	7
 21134  20F4  3F40               	moviw [0]fsr1
 21135  20F5  00F1               	movwf	strncmp@_l
 21136  20F6  3F41               	moviw [1]fsr1
 21137  20F7  00F2               	movwf	strncmp@_l+1
 21138  20F8  3045               	movlw	low (STR_61| (0+32768))
 21139  20F9  00F3               	movwf	strncmp@_r
 21140  20FA  30BB               	movlw	high (STR_61| (0+32768))
 21141  20FB  00F4               	movwf	strncmp@_r+1
 21142  20FC  3002               	movlw	2
 21143  20FD  00F5               	movwf	strncmp@n
 21144  20FE  3000               	movlw	0
 21145  20FF  00F6               	movwf	strncmp@n+1
 21146  2100  3190  2000  31A0   	fcall	_strncmp
 21147  2103  0871               	movf	?_strncmp,w
 21148  2104  0472               	iorwf	?_strncmp+1,w
 21149  2105  1903               	btfsc	3,2
 21150  2106  291E               	goto	l8046
 21151  2107  0021               	movlb	1	; select bank1
 21152  2108  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21153  2109  0086               	movwf	6
 21154  210A  0187               	clrf	7
 21155  210B  3F40               	moviw [0]fsr1
 21156  210C  00F1               	movwf	strncmp@_l
 21157  210D  3F41               	moviw [1]fsr1
 21158  210E  00F2               	movwf	strncmp@_l+1
 21159  210F  304E               	movlw	low (STR_65| (0+32768))
 21160  2110  00F3               	movwf	strncmp@_r
 21161  2111  30BB               	movlw	high (STR_65| (0+32768))
 21162  2112  00F4               	movwf	strncmp@_r+1
 21163  2113  3002               	movlw	2
 21164  2114  00F5               	movwf	strncmp@n
 21165  2115  3000               	movlw	0
 21166  2116  00F6               	movwf	strncmp@n+1
 21167  2117  3190  2000  31A0   	fcall	_strncmp
 21168  211A  0871               	movf	?_strncmp,w
 21169  211B  0472               	iorwf	?_strncmp+1,w
 21170  211C  1D03               	btfss	3,2
 21171  211D  296F               	goto	l8054
 21172  211E                     l8046:	
 21173                           
 21174                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
 21175  211E  0021               	movlb	1	; select bank1
 21176  211F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21177  2120  0086               	movwf	6
 21178  2121  0187               	clrf	7
 21179  2122  3002               	movlw	2
 21180  2123  0781               	addwf	1,f
 21181  2124  3141               	addfsr 1,1
 21182  2125  1803               	skipnc
 21183  2126  0A81               	incf	1,f
 21184                           
 21185                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 21186  2127  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21187  2128  0086               	movwf	6
 21188  2129  3001               	movlw	1	; select bank2/3
 21189  212A  0087               	movwf	7
 21190  212B  0801               	movf	1,w
 21191  212C  0084               	movwf	4
 21192  212D  3001               	movlw	1	; select bank2/3
 21193  212E  0085               	movwf	5
 21194  212F  3002               	movlw	2
 21195  2130  0781               	addwf	1,f
 21196  2131  3F00               	moviw [0]fsr0
 21197  2132  0022               	movlb	2	; select bank2
 21198  2133  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 21199  2134  3F01               	moviw [1]fsr0
 21200  2135  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 21201  2136  01BE               	clrf	(vfpfcnvrt@ll+2)^(0+256)
 21202  2137  01BF               	clrf	(vfpfcnvrt@ll+3)^(0+256)
 21203  2138  01C0               	clrf	(vfpfcnvrt@ll+4)^(0+256)
 21204  2139  01C1               	clrf	(vfpfcnvrt@ll+5)^(0+256)
 21205  213A  01C2               	clrf	(vfpfcnvrt@ll+6)^(0+256)
 21206  213B  01C3               	clrf	(vfpfcnvrt@ll+7)^(0+256)
 21207                           
 21208                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 889:       
      +                                return dtoa(fp, ll);
 21209  213C  0021               	movlb	1	; select bank1
 21210  213D  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21211  213E  0020               	movlb	0	; select bank0
 21212  213F  00B1               	movwf	dtoa@fp+1
 21213  2140  0021               	movlb	1	; select bank1
 21214  2141  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21215  2142  0020               	movlb	0	; select bank0
 21216  2143  00B0               	movwf	dtoa@fp
 21217  2144  0022               	movlb	2	; select bank2
 21218  2145  083C               	movf	vfpfcnvrt@ll^(0+256),w
 21219  2146  0020               	movlb	0	; select bank0
 21220  2147  00B2               	movwf	dtoa@d
 21221  2148  0022               	movlb	2	; select bank2
 21222  2149  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 21223  214A  0020               	movlb	0	; select bank0
 21224  214B  00B3               	movwf	dtoa@d+1
 21225  214C  0022               	movlb	2	; select bank2
 21226  214D  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 21227  214E  0020               	movlb	0	; select bank0
 21228  214F  00B4               	movwf	dtoa@d+2
 21229  2150  0022               	movlb	2	; select bank2
 21230  2151  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 21231  2152  0020               	movlb	0	; select bank0
 21232  2153  00B5               	movwf	dtoa@d+3
 21233  2154  0022               	movlb	2	; select bank2
 21234  2155  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 21235  2156  0020               	movlb	0	; select bank0
 21236  2157  00B6               	movwf	dtoa@d+4
 21237  2158  0022               	movlb	2	; select bank2
 21238  2159  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 21239  215A  0020               	movlb	0	; select bank0
 21240  215B  00B7               	movwf	dtoa@d+5
 21241  215C  0022               	movlb	2	; select bank2
 21242  215D  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 21243  215E  0020               	movlb	0	; select bank0
 21244  215F  00B8               	movwf	dtoa@d+6
 21245  2160  0022               	movlb	2	; select bank2
 21246  2161  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 21247  2162  0020               	movlb	0	; select bank0
 21248  2163  00B9               	movwf	dtoa@d+7
 21249  2164  319B  2372         	fcall	_dtoa
 21250  2166  0020               	movlb	0	; select bank0
 21251  2167  0831               	movf	?_dtoa+1,w
 21252  2168  0021               	movlb	1	; select bank1
 21253  2169  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21254  216A  0020               	movlb	0	; select bank0
 21255  216B  0830               	movf	?_dtoa,w
 21256  216C  0021               	movlb	1	; select bank1
 21257  216D  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21258  216E  0008               	return
 21259  216F                     l8054:	
 21260                           
 21261                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
 21262  216F  3066               	movlw	102
 21263  2170  0022               	movlb	2	; select bank2
 21264  2171  0635               	xorwf	vfpfcnvrt@ct^(0+256),w
 21265  2172  1D03               	btfss	3,2
 21266  2173  29C4               	goto	L24
 21267                           
 21268                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
 21269  2174  0021               	movlb	1	; select bank1
 21270  2175  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21271  2176  0086               	movwf	6
 21272  2177  0187               	clrf	7
 21273  2178  3F40               	moviw [0]fsr1
 21274  2179  0022               	movlb	2	; select bank2
 21275  217A  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21276  217B  3F41               	moviw [1]fsr1
 21277  217C  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21278  217D  0820               	movf	??_vfpfcnvrt^(0+256),w
 21279  217E  0084               	movwf	4
 21280  217F  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21281  2180  0085               	movwf	5
 21282  2181  0800               	movf	0,w	;code access
 21283  2182  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 21284  2183  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 21285  2184  00C5               	movwf	vfpfcnvrt@c^(0+256)
 21286                           
 21287                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
 21288  2185  0021               	movlb	1	; select bank1
 21289  2186  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21290  2187  0086               	movwf	6
 21291  2188  0187               	clrf	7
 21292  2189  3001               	movlw	1
 21293  218A  0781               	addwf	1,f
 21294  218B  3141               	addfsr 1,1
 21295  218C  1803               	skipnc
 21296  218D  0A81               	incf	1,f
 21297                           
 21298                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 21299  218E  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21300  218F  0086               	movwf	6
 21301  2190  3001               	movlw	1	; select bank2/3
 21302  2191  0087               	movwf	7
 21303  2192  0801               	movf	1,w
 21304  2193  0084               	movwf	4
 21305  2194  3001               	movlw	1	; select bank2/3
 21306  2195  0085               	movwf	5
 21307  2196  3004               	movlw	4
 21308  2197  0781               	addwf	1,f
 21309  2198  3F00               	moviw [0]fsr0
 21310  2199  0022               	movlb	2	; select bank2
 21311  219A  00B8               	movwf	vfpfcnvrt@f^(0+256)
 21312  219B  3F01               	moviw [1]fsr0
 21313  219C  00B9               	movwf	(vfpfcnvrt@f+1)^(0+256)
 21314  219D  3F02               	moviw [2]fsr0
 21315  219E  00BA               	movwf	(vfpfcnvrt@f+2)^(0+256)
 21316  219F  3F03               	moviw [3]fsr0
 21317  21A0  00BB               	movwf	(vfpfcnvrt@f+3)^(0+256)
 21318                           
 21319                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
 21320  21A1  0021               	movlb	1	; select bank1
 21321  21A2  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21322  21A3  00A1               	movwf	(efgtoa@fp+1)^(0+128)
 21323  21A4  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21324  21A5  00A0               	movwf	efgtoa@fp^(0+128)
 21325  21A6  0022               	movlb	2	; select bank2
 21326  21A7  083B               	movf	(vfpfcnvrt@f+3)^(0+256),w
 21327  21A8  0021               	movlb	1	; select bank1
 21328  21A9  00A5               	movwf	(efgtoa@f+3)^(0+128)
 21329  21AA  0022               	movlb	2	; select bank2
 21330  21AB  083A               	movf	(vfpfcnvrt@f+2)^(0+256),w
 21331  21AC  0021               	movlb	1	; select bank1
 21332  21AD  00A4               	movwf	(efgtoa@f+2)^(0+128)
 21333  21AE  0022               	movlb	2	; select bank2
 21334  21AF  0839               	movf	(vfpfcnvrt@f+1)^(0+256),w
 21335  21B0  0021               	movlb	1	; select bank1
 21336  21B1  00A3               	movwf	(efgtoa@f+1)^(0+128)
 21337  21B2  0022               	movlb	2	; select bank2
 21338  21B3  0838               	movf	vfpfcnvrt@f^(0+256),w
 21339  21B4  0021               	movlb	1	; select bank1
 21340  21B5  00A2               	movwf	efgtoa@f^(0+128)
 21341  21B6  0022               	movlb	2	; select bank2
 21342  21B7  0845               	movf	vfpfcnvrt@c^(0+256),w
 21343  21B8  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21344  21B9  0820               	movf	??_vfpfcnvrt^(0+256),w
 21345  21BA  0021               	movlb	1	; select bank1
 21346  21BB  00A6               	movwf	efgtoa@c^(0+128)
 21347  21BC  3180  2058         	fcall	_efgtoa
 21348  21BE  0021               	movlb	1	; select bank1
 21349  21BF  0821               	movf	(?_efgtoa+1)^(0+128),w
 21350  21C0  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21351  21C1  0820               	movf	?_efgtoa^(0+128),w
 21352  21C2  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21353  21C3  0008               	return
 21354  21C4                     L24:	
 21355  21C4                     L23:	
 21356  21C4  31AC  2C69         	ljmp	l8066
 21357                           
 21358                           	psect	text6_split_5
 21359  2C69                     l8066:	
 21360                           
 21361                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 21362  2C69  3035               	movlw	low vfpfcnvrt@ct
 21363  2C6A  00F1               	movwf	strncmp@_l
 21364  2C6B  3001               	movlw	high vfpfcnvrt@ct
 21365  2C6C  00F2               	movwf	strncmp@_l+1
 21366  2C6D  3048               	movlw	low (STR_70| (0+32768))
 21367  2C6E  00F3               	movwf	strncmp@_r
 21368  2C6F  30BB               	movlw	high (STR_70| (0+32768))
 21369  2C70  00F4               	movwf	strncmp@_r+1
 21370  2C71  3002               	movlw	2
 21371  2C72  00F5               	movwf	strncmp@n
 21372  2C73  3000               	movlw	0
 21373  2C74  00F6               	movwf	strncmp@n+1
 21374  2C75  3190  2000  31AC   	fcall	_strncmp
 21375  2C78  0871               	movf	?_strncmp,w
 21376  2C79  0472               	iorwf	?_strncmp+1,w
 21377  2C7A  1D03               	btfss	3,2
 21378  2C7B  2D0B               	goto	L26
 21379                           
 21380                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 21381  2C7C  0021               	movlb	1	; select bank1
 21382  2C7D  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21383  2C7E  0086               	movwf	6
 21384  2C7F  0187               	clrf	7
 21385  2C80  3F40               	moviw [0]fsr1
 21386  2C81  0022               	movlb	2	; select bank2
 21387  2C82  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21388  2C83  3F41               	moviw [1]fsr1
 21389  2C84  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21390  2C85  3001               	movlw	1
 21391  2C86  0720               	addwf	??_vfpfcnvrt^(0+256),w
 21392  2C87  0084               	movwf	4
 21393  2C88  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 21394  2C89  1803               	skipnc
 21395  2C8A  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 21396  2C8B  0085               	movwf	5
 21397  2C8C  0800               	movf	0,w	;code access
 21398  2C8D  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 21399  2C8E  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 21400  2C8F  00C5               	movwf	vfpfcnvrt@c^(0+256)
 21401  2C90  0021               	movlb	1	; select bank1
 21402  2C91  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21403  2C92  0086               	movwf	6
 21404  2C93  0187               	clrf	7
 21405  2C94  3F40               	moviw [0]fsr1
 21406  2C95  0022               	movlb	2	; select bank2
 21407  2C96  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21408  2C97  3F41               	moviw [1]fsr1
 21409  2C98  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21410  2C99  0820               	movf	??_vfpfcnvrt^(0+256),w
 21411  2C9A  0084               	movwf	4
 21412  2C9B  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21413  2C9C  0085               	movwf	5
 21414  2C9D  0800               	movf	0,w	;code access
 21415  2C9E  3EBF               	addlw	191
 21416  2C9F  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 21417  2CA0  30FF               	movlw	255
 21418  2CA1  1803               	skipnc
 21419  2CA2  3000               	movlw	0
 21420  2CA3  00A3               	movwf	((??_vfpfcnvrt+2)^(0+256)+1)
 21421  2CA4  3000               	movlw	0
 21422  2CA5  0223               	subwf	(??_vfpfcnvrt+3)^(0+256),w
 21423  2CA6  301A               	movlw	26
 21424  2CA7  1903               	skipnz
 21425  2CA8  0222               	subwf	(??_vfpfcnvrt+2)^(0+256),w
 21426  2CA9  1803               	btfsc	3,0
 21427  2CAA  2CAD               	goto	u11680
 21428  2CAB  3001               	movlw	1
 21429  2CAC  2CAE               	goto	u11690
 21430  2CAD                     u11680:	
 21431  2CAD  3000               	movlw	0
 21432  2CAE                     u11690:	
 21433  2CAE  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 21434  2CAF  01A5               	clrf	((??_vfpfcnvrt+4)^(0+256)+1)
 21435  2CB0  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 21436  2CB1  00B3               	movwf	_vfpfcnvrt$1189^(0+256)
 21437  2CB2  0825               	movf	(??_vfpfcnvrt+5)^(0+256),w
 21438  2CB3  00B4               	movwf	(_vfpfcnvrt$1189+1)^(0+256)
 21439  2CB4  0833               	movf	_vfpfcnvrt$1189^(0+256),w
 21440  2CB5  0434               	iorwf	(_vfpfcnvrt$1189+1)^(0+256),w
 21441  2CB6  1903               	btfsc	3,2
 21442  2CB7  2CCC               	goto	l8076
 21443                           
 21444                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
 21445  2CB8  0021               	movlb	1	; select bank1
 21446  2CB9  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21447  2CBA  0086               	movwf	6
 21448  2CBB  3001               	movlw	1	; select bank2/3
 21449  2CBC  0087               	movwf	7
 21450  2CBD  0801               	movf	1,w
 21451  2CBE  0084               	movwf	4
 21452  2CBF  3001               	movlw	1	; select bank2/3
 21453  2CC0  0085               	movwf	5
 21454  2CC1  3004               	movlw	4
 21455  2CC2  0781               	addwf	1,f
 21456  2CC3  3F00               	moviw [0]fsr0
 21457  2CC4  0022               	movlb	2	; select bank2
 21458  2CC5  00B8               	movwf	vfpfcnvrt@f^(0+256)
 21459  2CC6  3F01               	moviw [1]fsr0
 21460  2CC7  00B9               	movwf	(vfpfcnvrt@f+1)^(0+256)
 21461  2CC8  3F02               	moviw [2]fsr0
 21462  2CC9  00BA               	movwf	(vfpfcnvrt@f+2)^(0+256)
 21463  2CCA  3F03               	moviw [3]fsr0
 21464  2CCB  2CDF               	goto	L1
 21465  2CCC                     l8076:	
 21466                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
 21467                           
 21468                           
 21469                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 21470  2CCC  0021               	movlb	1	; select bank1
 21471  2CCD  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21472  2CCE  0086               	movwf	6
 21473  2CCF  3001               	movlw	1	; select bank2/3
 21474  2CD0  0087               	movwf	7
 21475  2CD1  0801               	movf	1,w
 21476  2CD2  0084               	movwf	4
 21477  2CD3  3001               	movlw	1	; select bank2/3
 21478  2CD4  0085               	movwf	5
 21479  2CD5  3004               	movlw	4
 21480  2CD6  0781               	addwf	1,f
 21481  2CD7  3F00               	moviw [0]fsr0
 21482  2CD8  0022               	movlb	2	; select bank2
 21483  2CD9  00B8               	movwf	vfpfcnvrt@f^(0+256)
 21484  2CDA  3F01               	moviw [1]fsr0
 21485  2CDB  00B9               	movwf	(vfpfcnvrt@f+1)^(0+256)
 21486  2CDC  3F02               	moviw [2]fsr0
 21487  2CDD  00BA               	movwf	(vfpfcnvrt@f+2)^(0+256)
 21488  2CDE  3F03               	moviw [3]fsr0
 21489  2CDF                     L1:	
 21490  2CDF  00BB               	movwf	(vfpfcnvrt@f+3)^(0+256)
 21491                           
 21492                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
 21493  2CE0  0021               	movlb	1	; select bank1
 21494  2CE1  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21495  2CE2  0086               	movwf	6
 21496  2CE3  0187               	clrf	7
 21497  2CE4  3002               	movlw	2
 21498  2CE5  0781               	addwf	1,f
 21499  2CE6  3141               	addfsr 1,1
 21500  2CE7  1803               	skipnc
 21501  2CE8  0A81               	incf	1,f
 21502                           
 21503                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 938:       
      +                                return efgtoa(fp, f, c);
 21504  2CE9  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21505  2CEA  00A1               	movwf	(efgtoa@fp+1)^(0+128)
 21506  2CEB  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21507  2CEC  00A0               	movwf	efgtoa@fp^(0+128)
 21508  2CED  0022               	movlb	2	; select bank2
 21509  2CEE  083B               	movf	(vfpfcnvrt@f+3)^(0+256),w
 21510  2CEF  0021               	movlb	1	; select bank1
 21511  2CF0  00A5               	movwf	(efgtoa@f+3)^(0+128)
 21512  2CF1  0022               	movlb	2	; select bank2
 21513  2CF2  083A               	movf	(vfpfcnvrt@f+2)^(0+256),w
 21514  2CF3  0021               	movlb	1	; select bank1
 21515  2CF4  00A4               	movwf	(efgtoa@f+2)^(0+128)
 21516  2CF5  0022               	movlb	2	; select bank2
 21517  2CF6  0839               	movf	(vfpfcnvrt@f+1)^(0+256),w
 21518  2CF7  0021               	movlb	1	; select bank1
 21519  2CF8  00A3               	movwf	(efgtoa@f+1)^(0+128)
 21520  2CF9  0022               	movlb	2	; select bank2
 21521  2CFA  0838               	movf	vfpfcnvrt@f^(0+256),w
 21522  2CFB  0021               	movlb	1	; select bank1
 21523  2CFC  00A2               	movwf	efgtoa@f^(0+128)
 21524  2CFD  0022               	movlb	2	; select bank2
 21525  2CFE  0845               	movf	vfpfcnvrt@c^(0+256),w
 21526  2CFF  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21527  2D00  0820               	movf	??_vfpfcnvrt^(0+256),w
 21528  2D01  0021               	movlb	1	; select bank1
 21529  2D02  00A6               	movwf	efgtoa@c^(0+128)
 21530  2D03  3180  2058         	fcall	_efgtoa
 21531  2D05  0021               	movlb	1	; select bank1
 21532  2D06  0821               	movf	(?_efgtoa+1)^(0+128),w
 21533  2D07  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21534  2D08  0820               	movf	?_efgtoa^(0+128),w
 21535  2D09  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21536  2D0A  0008               	return
 21537  2D0B                     L26:	
 21538  2D0B                     L25:	
 21539  2D0B  31AF  2F2F         	ljmp	l8084
 21540                           
 21541                           	psect	text6_split_6
 21542  2F2F                     l8084:	
 21543                           
 21544                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
 21545  2F2F  0021               	movlb	1	; select bank1
 21546  2F30  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21547  2F31  0086               	movwf	6
 21548  2F32  0187               	clrf	7
 21549  2F33  3F40               	moviw [0]fsr1
 21550  2F34  00F1               	movwf	strncmp@_l
 21551  2F35  3F41               	moviw [1]fsr1
 21552  2F36  00F2               	movwf	strncmp@_l+1
 21553  2F37  3030               	movlw	low (STR_75| (0+32768))
 21554  2F38  00F3               	movwf	strncmp@_r
 21555  2F39  30BB               	movlw	high (STR_75| (0+32768))
 21556  2F3A  00F4               	movwf	strncmp@_r+1
 21557  2F3B  3003               	movlw	3
 21558  2F3C  00F5               	movwf	strncmp@n
 21559  2F3D  3000               	movlw	0
 21560  2F3E  00F6               	movwf	strncmp@n+1
 21561  2F3F  3190  2000  31AF   	fcall	_strncmp
 21562  2F42  0871               	movf	?_strncmp,w
 21563  2F43  0472               	iorwf	?_strncmp+1,w
 21564  2F44  1D03               	btfss	3,2
 21565  2F45  2F96               	goto	l8094
 21566                           
 21567                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
 21568  2F46  0021               	movlb	1	; select bank1
 21569  2F47  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21570  2F48  0086               	movwf	6
 21571  2F49  0187               	clrf	7
 21572  2F4A  3003               	movlw	3
 21573  2F4B  0781               	addwf	1,f
 21574  2F4C  3141               	addfsr 1,1
 21575  2F4D  1803               	skipnc
 21576  2F4E  0A81               	incf	1,f
 21577                           
 21578                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 21579  2F4F  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21580  2F50  0086               	movwf	6
 21581  2F51  3001               	movlw	1	; select bank2/3
 21582  2F52  0087               	movwf	7
 21583  2F53  0801               	movf	1,w
 21584  2F54  0084               	movwf	4
 21585  2F55  3001               	movlw	1	; select bank2/3
 21586  2F56  0085               	movwf	5
 21587  2F57  3002               	movlw	2
 21588  2F58  0781               	addwf	1,f
 21589  2F59  0800               	movf	0,w
 21590  2F5A  0022               	movlb	2	; select bank2
 21591  2F5B  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 21592  2F5C  01C7               	clrf	(vfpfcnvrt@llu+1)^(0+256)
 21593  2F5D  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 21594  2F5E  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 21595  2F5F  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 21596  2F60  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 21597  2F61  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 21598  2F62  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 21599                           
 21600                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
 21601  2F63  0021               	movlb	1	; select bank1
 21602  2F64  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21603  2F65  0020               	movlb	0	; select bank0
 21604  2F66  00B1               	movwf	otoa@fp+1
 21605  2F67  0021               	movlb	1	; select bank1
 21606  2F68  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21607  2F69  0020               	movlb	0	; select bank0
 21608  2F6A  00B0               	movwf	otoa@fp
 21609  2F6B  0022               	movlb	2	; select bank2
 21610  2F6C  0846               	movf	vfpfcnvrt@llu^(0+256),w
 21611  2F6D  0020               	movlb	0	; select bank0
 21612  2F6E  00B2               	movwf	otoa@d
 21613  2F6F  0022               	movlb	2	; select bank2
 21614  2F70  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 21615  2F71  0020               	movlb	0	; select bank0
 21616  2F72  00B3               	movwf	otoa@d+1
 21617  2F73  0022               	movlb	2	; select bank2
 21618  2F74  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 21619  2F75  0020               	movlb	0	; select bank0
 21620  2F76  00B4               	movwf	otoa@d+2
 21621  2F77  0022               	movlb	2	; select bank2
 21622  2F78  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 21623  2F79  0020               	movlb	0	; select bank0
 21624  2F7A  00B5               	movwf	otoa@d+3
 21625  2F7B  0022               	movlb	2	; select bank2
 21626  2F7C  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 21627  2F7D  0020               	movlb	0	; select bank0
 21628  2F7E  00B6               	movwf	otoa@d+4
 21629  2F7F  0022               	movlb	2	; select bank2
 21630  2F80  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 21631  2F81  0020               	movlb	0	; select bank0
 21632  2F82  00B7               	movwf	otoa@d+5
 21633  2F83  0022               	movlb	2	; select bank2
 21634  2F84  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 21635  2F85  0020               	movlb	0	; select bank0
 21636  2F86  00B8               	movwf	otoa@d+6
 21637  2F87  0022               	movlb	2	; select bank2
 21638  2F88  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 21639  2F89  0020               	movlb	0	; select bank0
 21640  2F8A  00B9               	movwf	otoa@d+7
 21641  2F8B  31A6  261C         	fcall	_otoa
 21642  2F8D  0020               	movlb	0	; select bank0
 21643  2F8E  0831               	movf	?_otoa+1,w
 21644  2F8F  0021               	movlb	1	; select bank1
 21645  2F90  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21646  2F91  0020               	movlb	0	; select bank0
 21647  2F92  0830               	movf	?_otoa,w
 21648  2F93  0021               	movlb	1	; select bank1
 21649  2F94  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21650  2F95  0008               	return
 21651  2F96                     l8094:	
 21652                           
 21653                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
 21654  2F96  0021               	movlb	1	; select bank1
 21655  2F97  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21656  2F98  0086               	movwf	6
 21657  2F99  0187               	clrf	7
 21658  2F9A  3F40               	moviw [0]fsr1
 21659  2F9B  00F1               	movwf	strncmp@_l
 21660  2F9C  3F41               	moviw [1]fsr1
 21661  2F9D  00F2               	movwf	strncmp@_l+1
 21662  2F9E  3031               	movlw	low ((STR_75+1)| (0+32768))
 21663  2F9F  00F3               	movwf	strncmp@_r
 21664  2FA0  30BB               	movlw	high ((STR_75+1)| (0+32768))
 21665  2FA1  00F4               	movwf	strncmp@_r+1
 21666  2FA2  3002               	movlw	2
 21667  2FA3  00F5               	movwf	strncmp@n
 21668  2FA4  3000               	movlw	0
 21669  2FA5  00F6               	movwf	strncmp@n+1
 21670  2FA6  3190  2000  31AF   	fcall	_strncmp
 21671  2FA9  0871               	movf	?_strncmp,w
 21672  2FAA  0472               	iorwf	?_strncmp+1,w
 21673  2FAB  1D03               	btfss	3,2
 21674  2FAC  2FFE               	goto	L28
 21675                           
 21676                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
 21677  2FAD  0021               	movlb	1	; select bank1
 21678  2FAE  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21679  2FAF  0086               	movwf	6
 21680  2FB0  0187               	clrf	7
 21681  2FB1  3002               	movlw	2
 21682  2FB2  0781               	addwf	1,f
 21683  2FB3  3141               	addfsr 1,1
 21684  2FB4  1803               	skipnc
 21685  2FB5  0A81               	incf	1,f
 21686                           
 21687                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
 21688  2FB6  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21689  2FB7  0086               	movwf	6
 21690  2FB8  3001               	movlw	1	; select bank2/3
 21691  2FB9  0087               	movwf	7
 21692  2FBA  0801               	movf	1,w
 21693  2FBB  0084               	movwf	4
 21694  2FBC  3001               	movlw	1	; select bank2/3
 21695  2FBD  0085               	movwf	5
 21696  2FBE  3002               	movlw	2
 21697  2FBF  0781               	addwf	1,f
 21698  2FC0  3F00               	moviw [0]fsr0
 21699  2FC1  0022               	movlb	2	; select bank2
 21700  2FC2  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 21701  2FC3  3F01               	moviw [1]fsr0
 21702  2FC4  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 21703  2FC5  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 21704  2FC6  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 21705  2FC7  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 21706  2FC8  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 21707  2FC9  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 21708  2FCA  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 21709                           
 21710                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 985:       
      +                                return otoa(fp, llu);
 21711  2FCB  0021               	movlb	1	; select bank1
 21712  2FCC  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21713  2FCD  0020               	movlb	0	; select bank0
 21714  2FCE  00B1               	movwf	otoa@fp+1
 21715  2FCF  0021               	movlb	1	; select bank1
 21716  2FD0  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21717  2FD1  0020               	movlb	0	; select bank0
 21718  2FD2  00B0               	movwf	otoa@fp
 21719  2FD3  0022               	movlb	2	; select bank2
 21720  2FD4  0846               	movf	vfpfcnvrt@llu^(0+256),w
 21721  2FD5  0020               	movlb	0	; select bank0
 21722  2FD6  00B2               	movwf	otoa@d
 21723  2FD7  0022               	movlb	2	; select bank2
 21724  2FD8  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 21725  2FD9  0020               	movlb	0	; select bank0
 21726  2FDA  00B3               	movwf	otoa@d+1
 21727  2FDB  0022               	movlb	2	; select bank2
 21728  2FDC  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 21729  2FDD  0020               	movlb	0	; select bank0
 21730  2FDE  00B4               	movwf	otoa@d+2
 21731  2FDF  0022               	movlb	2	; select bank2
 21732  2FE0  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 21733  2FE1  0020               	movlb	0	; select bank0
 21734  2FE2  00B5               	movwf	otoa@d+3
 21735  2FE3  0022               	movlb	2	; select bank2
 21736  2FE4  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 21737  2FE5  0020               	movlb	0	; select bank0
 21738  2FE6  00B6               	movwf	otoa@d+4
 21739  2FE7  0022               	movlb	2	; select bank2
 21740  2FE8  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 21741  2FE9  0020               	movlb	0	; select bank0
 21742  2FEA  00B7               	movwf	otoa@d+5
 21743  2FEB  0022               	movlb	2	; select bank2
 21744  2FEC  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 21745  2FED  0020               	movlb	0	; select bank0
 21746  2FEE  00B8               	movwf	otoa@d+6
 21747  2FEF  0022               	movlb	2	; select bank2
 21748  2FF0  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 21749  2FF1  0020               	movlb	0	; select bank0
 21750  2FF2  00B9               	movwf	otoa@d+7
 21751  2FF3  31A6  261C         	fcall	_otoa
 21752  2FF5  0020               	movlb	0	; select bank0
 21753  2FF6  0831               	movf	?_otoa+1,w
 21754  2FF7  0021               	movlb	1	; select bank1
 21755  2FF8  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21756  2FF9  0020               	movlb	0	; select bank0
 21757  2FFA  0830               	movf	?_otoa,w
 21758  2FFB  0021               	movlb	1	; select bank1
 21759  2FFC  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21760  2FFD  0008               	return
 21761  2FFE                     L28:	
 21762  2FFE                     L27:	
 21763  2FFE  31A5  2D36         	ljmp	l8104
 21764                           
 21765                           	psect	text6_split_7
 21766  2536                     l8104:	
 21767                           
 21768                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
 21769  2536  0021               	movlb	1	; select bank1
 21770  2537  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21771  2538  0086               	movwf	6
 21772  2539  0187               	clrf	7
 21773  253A  3F40               	moviw [0]fsr1
 21774  253B  0022               	movlb	2	; select bank2
 21775  253C  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21776  253D  3F41               	moviw [1]fsr1
 21777  253E  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21778  253F  0820               	movf	??_vfpfcnvrt^(0+256),w
 21779  2540  0084               	movwf	4
 21780  2541  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21781  2542  0085               	movwf	5
 21782  2543  0012               	moviw fsr0++
 21783  2544  3A6F               	xorlw	111
 21784  2545  1D03               	btfss	3,2
 21785  2546  2D98               	goto	l8114
 21786                           
 21787                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
 21788  2547  0021               	movlb	1	; select bank1
 21789  2548  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21790  2549  0086               	movwf	6
 21791  254A  0187               	clrf	7
 21792  254B  3001               	movlw	1
 21793  254C  0781               	addwf	1,f
 21794  254D  3141               	addfsr 1,1
 21795  254E  1803               	skipnc
 21796  254F  0A81               	incf	1,f
 21797                           
 21798                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
 21799  2550  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21800  2551  0086               	movwf	6
 21801  2552  3001               	movlw	1	; select bank2/3
 21802  2553  0087               	movwf	7
 21803  2554  0801               	movf	1,w
 21804  2555  0084               	movwf	4
 21805  2556  3001               	movlw	1	; select bank2/3
 21806  2557  0085               	movwf	5
 21807  2558  3002               	movlw	2
 21808  2559  0781               	addwf	1,f
 21809  255A  3F00               	moviw [0]fsr0
 21810  255B  0022               	movlb	2	; select bank2
 21811  255C  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 21812  255D  3F01               	moviw [1]fsr0
 21813  255E  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 21814  255F  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 21815  2560  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 21816  2561  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 21817  2562  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 21818  2563  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 21819  2564  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 21820                           
 21821                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 995:       
      +                                return otoa(fp, llu);
 21822  2565  0021               	movlb	1	; select bank1
 21823  2566  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21824  2567  0020               	movlb	0	; select bank0
 21825  2568  00B1               	movwf	otoa@fp+1
 21826  2569  0021               	movlb	1	; select bank1
 21827  256A  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21828  256B  0020               	movlb	0	; select bank0
 21829  256C  00B0               	movwf	otoa@fp
 21830  256D  0022               	movlb	2	; select bank2
 21831  256E  0846               	movf	vfpfcnvrt@llu^(0+256),w
 21832  256F  0020               	movlb	0	; select bank0
 21833  2570  00B2               	movwf	otoa@d
 21834  2571  0022               	movlb	2	; select bank2
 21835  2572  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 21836  2573  0020               	movlb	0	; select bank0
 21837  2574  00B3               	movwf	otoa@d+1
 21838  2575  0022               	movlb	2	; select bank2
 21839  2576  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 21840  2577  0020               	movlb	0	; select bank0
 21841  2578  00B4               	movwf	otoa@d+2
 21842  2579  0022               	movlb	2	; select bank2
 21843  257A  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 21844  257B  0020               	movlb	0	; select bank0
 21845  257C  00B5               	movwf	otoa@d+3
 21846  257D  0022               	movlb	2	; select bank2
 21847  257E  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 21848  257F  0020               	movlb	0	; select bank0
 21849  2580  00B6               	movwf	otoa@d+4
 21850  2581  0022               	movlb	2	; select bank2
 21851  2582  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 21852  2583  0020               	movlb	0	; select bank0
 21853  2584  00B7               	movwf	otoa@d+5
 21854  2585  0022               	movlb	2	; select bank2
 21855  2586  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 21856  2587  0020               	movlb	0	; select bank0
 21857  2588  00B8               	movwf	otoa@d+6
 21858  2589  0022               	movlb	2	; select bank2
 21859  258A  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 21860  258B  0020               	movlb	0	; select bank0
 21861  258C  00B9               	movwf	otoa@d+7
 21862  258D  31A6  261C         	fcall	_otoa
 21863  258F  0020               	movlb	0	; select bank0
 21864  2590  0831               	movf	?_otoa+1,w
 21865  2591  0021               	movlb	1	; select bank1
 21866  2592  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21867  2593  0020               	movlb	0	; select bank0
 21868  2594  0830               	movf	?_otoa,w
 21869  2595  0021               	movlb	1	; select bank1
 21870  2596  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21871  2597  0008               	return
 21872  2598                     l8114:	
 21873                           
 21874                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1000:      
      +                             if (!strncmp(*fmt, "lo", ((sizeof("lo")/sizeof("lo"[0]))-1))) {
 21875  2598  0021               	movlb	1	; select bank1
 21876  2599  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21877  259A  0086               	movwf	6
 21878  259B  0187               	clrf	7
 21879  259C  3F40               	moviw [0]fsr1
 21880  259D  00F1               	movwf	strncmp@_l
 21881  259E  3F41               	moviw [1]fsr1
 21882  259F  00F2               	movwf	strncmp@_l+1
 21883  25A0  3057               	movlw	low (STR_85| (0+32768))
 21884  25A1  00F3               	movwf	strncmp@_r
 21885  25A2  30BB               	movlw	high (STR_85| (0+32768))
 21886  25A3  00F4               	movwf	strncmp@_r+1
 21887  25A4  3002               	movlw	2
 21888  25A5  00F5               	movwf	strncmp@n
 21889  25A6  3000               	movlw	0
 21890  25A7  00F6               	movwf	strncmp@n+1
 21891  25A8  3190  2000  31A5   	fcall	_strncmp
 21892  25AB  0871               	movf	?_strncmp,w
 21893  25AC  0472               	iorwf	?_strncmp+1,w
 21894  25AD  1D03               	btfss	3,2
 21895  25AE  2E1A               	goto	L30
 21896                           
 21897                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1002:      
      +                                 *fmt += ((sizeof("lo")/sizeof("lo"[0]))-1);
 21898  25AF  0021               	movlb	1	; select bank1
 21899  25B0  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21900  25B1  0086               	movwf	6
 21901  25B2  0187               	clrf	7
 21902  25B3  3002               	movlw	2
 21903  25B4  0781               	addwf	1,f
 21904  25B5  3141               	addfsr 1,1
 21905  25B6  1803               	skipnc
 21906  25B7  0A81               	incf	1,f
 21907                           
 21908                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1003:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 21909  25B8  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21910  25B9  0086               	movwf	6
 21911  25BA  3001               	movlw	1	; select bank2/3
 21912  25BB  0087               	movwf	7
 21913  25BC  0801               	movf	1,w
 21914  25BD  0084               	movwf	4
 21915  25BE  3001               	movlw	1	; select bank2/3
 21916  25BF  0085               	movwf	5
 21917  25C0  3004               	movlw	4
 21918  25C1  0781               	addwf	1,f
 21919  25C2  3F00               	moviw [0]fsr0
 21920  25C3  0022               	movlb	2	; select bank2
 21921  25C4  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21922  25C5  3F01               	moviw [1]fsr0
 21923  25C6  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21924  25C7  3F02               	moviw [2]fsr0
 21925  25C8  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 21926  25C9  3F03               	moviw [3]fsr0
 21927  25CA  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 21928  25CB  0820               	movf	??_vfpfcnvrt^(0+256),w
 21929  25CC  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 21930  25CD  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21931  25CE  00A5               	movwf	((??_vfpfcnvrt+4)^(0+256)+1)
 21932  25CF  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 21933  25D0  00A6               	movwf	((??_vfpfcnvrt+4)^(0+256)+2)
 21934  25D1  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 21935  25D2  00A7               	movwf	((??_vfpfcnvrt+4)^(0+256)+3)
 21936  25D3  01A8               	clrf	((??_vfpfcnvrt+4)^(0+256)+4)
 21937  25D4  01A9               	clrf	((??_vfpfcnvrt+4)^(0+256)+5)
 21938  25D5  01AA               	clrf	((??_vfpfcnvrt+4)^(0+256)+6)
 21939  25D6  01AB               	clrf	((??_vfpfcnvrt+4)^(0+256)+7)
 21940  25D7  082B               	movf	((??_vfpfcnvrt+4)^(0+256)+7),w
 21941  25D8  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 21942  25D9  082A               	movf	((??_vfpfcnvrt+4)^(0+256)+6),w
 21943  25DA  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 21944  25DB  0829               	movf	((??_vfpfcnvrt+4)^(0+256)+5),w
 21945  25DC  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 21946  25DD  0828               	movf	((??_vfpfcnvrt+4)^(0+256)+4),w
 21947  25DE  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 21948  25DF  0827               	movf	((??_vfpfcnvrt+4)^(0+256)+3),w
 21949  25E0  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 21950  25E1  0826               	movf	((??_vfpfcnvrt+4)^(0+256)+2),w
 21951  25E2  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 21952  25E3  0825               	movf	((??_vfpfcnvrt+4)^(0+256)+1),w
 21953  25E4  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 21954  25E5  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 21955  25E6  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 21956                           
 21957                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1005:      
      +                                 return otoa(fp, llu);
 21958  25E7  0021               	movlb	1	; select bank1
 21959  25E8  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21960  25E9  0020               	movlb	0	; select bank0
 21961  25EA  00B1               	movwf	otoa@fp+1
 21962  25EB  0021               	movlb	1	; select bank1
 21963  25EC  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21964  25ED  0020               	movlb	0	; select bank0
 21965  25EE  00B0               	movwf	otoa@fp
 21966  25EF  0022               	movlb	2	; select bank2
 21967  25F0  0846               	movf	vfpfcnvrt@llu^(0+256),w
 21968  25F1  0020               	movlb	0	; select bank0
 21969  25F2  00B2               	movwf	otoa@d
 21970  25F3  0022               	movlb	2	; select bank2
 21971  25F4  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 21972  25F5  0020               	movlb	0	; select bank0
 21973  25F6  00B3               	movwf	otoa@d+1
 21974  25F7  0022               	movlb	2	; select bank2
 21975  25F8  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 21976  25F9  0020               	movlb	0	; select bank0
 21977  25FA  00B4               	movwf	otoa@d+2
 21978  25FB  0022               	movlb	2	; select bank2
 21979  25FC  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 21980  25FD  0020               	movlb	0	; select bank0
 21981  25FE  00B5               	movwf	otoa@d+3
 21982  25FF  0022               	movlb	2	; select bank2
 21983  2600  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 21984  2601  0020               	movlb	0	; select bank0
 21985  2602  00B6               	movwf	otoa@d+4
 21986  2603  0022               	movlb	2	; select bank2
 21987  2604  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 21988  2605  0020               	movlb	0	; select bank0
 21989  2606  00B7               	movwf	otoa@d+5
 21990  2607  0022               	movlb	2	; select bank2
 21991  2608  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 21992  2609  0020               	movlb	0	; select bank0
 21993  260A  00B8               	movwf	otoa@d+6
 21994  260B  0022               	movlb	2	; select bank2
 21995  260C  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 21996  260D  0020               	movlb	0	; select bank0
 21997  260E  00B9               	movwf	otoa@d+7
 21998  260F  31A6  261C         	fcall	_otoa
 21999  2611  0020               	movlb	0	; select bank0
 22000  2612  0831               	movf	?_otoa+1,w
 22001  2613  0021               	movlb	1	; select bank1
 22002  2614  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22003  2615  0020               	movlb	0	; select bank0
 22004  2616  0830               	movf	?_otoa,w
 22005  2617  0021               	movlb	1	; select bank1
 22006  2618  00E3               	movwf	?_vfpfcnvrt^(0+128)
 22007  2619  0008               	return
 22008  261A                     L30:	
 22009  261A                     L29:	
 22010  261A  3188  283F         	ljmp	l8124
 22011                           
 22012                           	psect	text6_split_8
 22013  083F                     l8124:	
 22014                           
 22015                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
 22016  083F  0021               	movlb	1	; select bank1
 22017  0840  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22018  0841  0086               	movwf	6
 22019  0842  0187               	clrf	7
 22020  0843  3F40               	moviw [0]fsr1
 22021  0844  00F1               	movwf	strncmp@_l
 22022  0845  3F41               	moviw [1]fsr1
 22023  0846  00F2               	movwf	strncmp@_l+1
 22024  0847  305A               	movlw	low (STR_90| (0+32768))
 22025  0848  00F3               	movwf	strncmp@_r
 22026  0849  30BB               	movlw	high (STR_90| (0+32768))
 22027  084A  00F4               	movwf	strncmp@_r+1
 22028  084B  3002               	movlw	2
 22029  084C  00F5               	movwf	strncmp@n
 22030  084D  3000               	movlw	0
 22031  084E  00F6               	movwf	strncmp@n+1
 22032  084F  3190  2000  3188   	fcall	_strncmp
 22033  0852  0871               	movf	?_strncmp,w
 22034  0853  0472               	iorwf	?_strncmp+1,w
 22035  0854  1D03               	btfss	3,2
 22036  0855  28A7               	goto	l8134
 22037                           
 22038                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
 22039  0856  0021               	movlb	1	; select bank1
 22040  0857  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22041  0858  0086               	movwf	6
 22042  0859  0187               	clrf	7
 22043  085A  3002               	movlw	2
 22044  085B  0781               	addwf	1,f
 22045  085C  3141               	addfsr 1,1
 22046  085D  1803               	skipnc
 22047  085E  0A81               	incf	1,f
 22048                           
 22049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 22050  085F  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22051  0860  0086               	movwf	6
 22052  0861  3001               	movlw	1	; select bank2/3
 22053  0862  0087               	movwf	7
 22054  0863  0801               	movf	1,w
 22055  0864  0084               	movwf	4
 22056  0865  3001               	movlw	1	; select bank2/3
 22057  0866  0085               	movwf	5
 22058  0867  3002               	movlw	2
 22059  0868  0781               	addwf	1,f
 22060  0869  3F00               	moviw [0]fsr0
 22061  086A  0022               	movlb	2	; select bank2
 22062  086B  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 22063  086C  3F01               	moviw [1]fsr0
 22064  086D  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 22065  086E  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 22066  086F  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 22067  0870  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 22068  0871  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 22069  0872  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 22070  0873  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 22071                           
 22072                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1049:      
      +                                 return otoa(fp, llu);
 22073  0874  0021               	movlb	1	; select bank1
 22074  0875  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22075  0876  0020               	movlb	0	; select bank0
 22076  0877  00B1               	movwf	otoa@fp+1
 22077  0878  0021               	movlb	1	; select bank1
 22078  0879  0863               	movf	vfpfcnvrt@fp^(0+128),w
 22079  087A  0020               	movlb	0	; select bank0
 22080  087B  00B0               	movwf	otoa@fp
 22081  087C  0022               	movlb	2	; select bank2
 22082  087D  0846               	movf	vfpfcnvrt@llu^(0+256),w
 22083  087E  0020               	movlb	0	; select bank0
 22084  087F  00B2               	movwf	otoa@d
 22085  0880  0022               	movlb	2	; select bank2
 22086  0881  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 22087  0882  0020               	movlb	0	; select bank0
 22088  0883  00B3               	movwf	otoa@d+1
 22089  0884  0022               	movlb	2	; select bank2
 22090  0885  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 22091  0886  0020               	movlb	0	; select bank0
 22092  0887  00B4               	movwf	otoa@d+2
 22093  0888  0022               	movlb	2	; select bank2
 22094  0889  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 22095  088A  0020               	movlb	0	; select bank0
 22096  088B  00B5               	movwf	otoa@d+3
 22097  088C  0022               	movlb	2	; select bank2
 22098  088D  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 22099  088E  0020               	movlb	0	; select bank0
 22100  088F  00B6               	movwf	otoa@d+4
 22101  0890  0022               	movlb	2	; select bank2
 22102  0891  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 22103  0892  0020               	movlb	0	; select bank0
 22104  0893  00B7               	movwf	otoa@d+5
 22105  0894  0022               	movlb	2	; select bank2
 22106  0895  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 22107  0896  0020               	movlb	0	; select bank0
 22108  0897  00B8               	movwf	otoa@d+6
 22109  0898  0022               	movlb	2	; select bank2
 22110  0899  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 22111  089A  0020               	movlb	0	; select bank0
 22112  089B  00B9               	movwf	otoa@d+7
 22113  089C  31A6  261C         	fcall	_otoa
 22114  089E  0020               	movlb	0	; select bank0
 22115  089F  0831               	movf	?_otoa+1,w
 22116  08A0  0021               	movlb	1	; select bank1
 22117  08A1  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22118  08A2  0020               	movlb	0	; select bank0
 22119  08A3  0830               	movf	?_otoa,w
 22120  08A4  0021               	movlb	1	; select bank1
 22121  08A5  00E3               	movwf	?_vfpfcnvrt^(0+128)
 22122  08A6  0008               	return
 22123  08A7                     l8134:	
 22124                           
 22125                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
 22126  08A7  0021               	movlb	1	; select bank1
 22127  08A8  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22128  08A9  0086               	movwf	6
 22129  08AA  0187               	clrf	7
 22130  08AB  3F40               	moviw [0]fsr1
 22131  08AC  00F1               	movwf	strncmp@_l
 22132  08AD  3F41               	moviw [1]fsr1
 22133  08AE  00F2               	movwf	strncmp@_l+1
 22134  08AF  302C               	movlw	low (STR_95| (0+32768))
 22135  08B0  00F3               	movwf	strncmp@_r
 22136  08B1  30BB               	movlw	high (STR_95| (0+32768))
 22137  08B2  00F4               	movwf	strncmp@_r+1
 22138  08B3  3003               	movlw	3
 22139  08B4  00F5               	movwf	strncmp@n
 22140  08B5  3000               	movlw	0
 22141  08B6  00F6               	movwf	strncmp@n+1
 22142  08B7  3190  2000  3188   	fcall	_strncmp
 22143  08BA  0871               	movf	?_strncmp,w
 22144  08BB  0472               	iorwf	?_strncmp+1,w
 22145  08BC  1D03               	btfss	3,2
 22146  08BD  2977               	goto	l8146
 22147                           
 22148                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
 22149  08BE  0021               	movlb	1	; select bank1
 22150  08BF  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22151  08C0  0086               	movwf	6
 22152  08C1  0187               	clrf	7
 22153  08C2  3003               	movlw	3
 22154  08C3  0781               	addwf	1,f
 22155  08C4  3141               	addfsr 1,1
 22156  08C5  1803               	skipnc
 22157  08C6  0A81               	incf	1,f
 22158                           
 22159                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
 22160  08C7  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22161  08C8  0086               	movwf	6
 22162  08C9  3001               	movlw	1	; select bank2/3
 22163  08CA  0087               	movwf	7
 22164  08CB  3F40               	moviw [0]fsr1
 22165  08CC  0084               	movwf	4
 22166  08CD  3001               	movlw	1	; select bank2/3
 22167  08CE  0085               	movwf	5
 22168  08CF  0A81               	incf	1,f
 22169  08D0  0800               	movf	0,w
 22170  08D1  0022               	movlb	2	; select bank2
 22171  08D2  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22172  08D3  0820               	movf	??_vfpfcnvrt^(0+256),w
 22173  08D4  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 22174                           
 22175                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
 22176  08D5  0023               	movlb	3	; select bank3
 22177  08D6  083C               	movf	_nout^(0+384),w
 22178  08D7  0022               	movlb	2	; select bank2
 22179  08D8  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22180  08D9  0844               	movf	vfpfcnvrt@vp^(0+256),w
 22181  08DA  0086               	movwf	6
 22182  08DB  3001               	movlw	1	; select bank2/3
 22183  08DC  0087               	movwf	7
 22184  08DD  0820               	movf	??_vfpfcnvrt^(0+256),w
 22185  08DE  0081               	movwf	1
 22186  08DF  2973               	goto	l8142
 22187  08E0                     l8148:	
 22188                           
 22189                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
 22190  08E0  0021               	movlb	1	; select bank1
 22191  08E1  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22192  08E2  0086               	movwf	6
 22193  08E3  0187               	clrf	7
 22194  08E4  3002               	movlw	2
 22195  08E5  0781               	addwf	1,f
 22196  08E6  3141               	addfsr 1,1
 22197  08E7  1803               	skipnc
 22198  08E8  0A81               	incf	1,f
 22199                           
 22200                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
 22201  08E9  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22202  08EA  0086               	movwf	6
 22203  08EB  3001               	movlw	1	; select bank2/3
 22204  08EC  0087               	movwf	7
 22205  08ED  3F40               	moviw [0]fsr1
 22206  08EE  0084               	movwf	4
 22207  08EF  3001               	movlw	1	; select bank2/3
 22208  08F0  0085               	movwf	5
 22209  08F1  0A81               	incf	1,f
 22210  08F2  0800               	movf	0,w
 22211  08F3  0022               	movlb	2	; select bank2
 22212  08F4  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22213  08F5  0820               	movf	??_vfpfcnvrt^(0+256),w
 22214  08F6  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 22215                           
 22216                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
 22217  08F7  0844               	movf	vfpfcnvrt@vp^(0+256),w
 22218  08F8  0086               	movwf	6
 22219  08F9  3001               	movlw	1	; select bank2/3
 22220  08FA  0087               	movwf	7
 22221  08FB  0023               	movlb	3	; select bank3
 22222  08FC  083C               	movf	_nout^(0+384),w
 22223  08FD  3FC0               	movwi [0]fsr1
 22224  08FE  083D               	movf	(_nout+1)^(0+384),w
 22225  08FF  3FC1               	movwi [1]fsr1
 22226  0900  2973               	goto	l8142
 22227  0901                     l8160:	
 22228                           
 22229                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
 22230  0901  0021               	movlb	1	; select bank1
 22231  0902  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22232  0903  0086               	movwf	6
 22233  0904  0187               	clrf	7
 22234  0905  3001               	movlw	1
 22235  0906  0781               	addwf	1,f
 22236  0907  3141               	addfsr 1,1
 22237  0908  1803               	skipnc
 22238  0909  0A81               	incf	1,f
 22239                           
 22240                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
 22241  090A  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22242  090B  0086               	movwf	6
 22243  090C  3001               	movlw	1	; select bank2/3
 22244  090D  0087               	movwf	7
 22245  090E  3F40               	moviw [0]fsr1
 22246  090F  0084               	movwf	4
 22247  0910  3001               	movlw	1	; select bank2/3
 22248  0911  0085               	movwf	5
 22249  0912  0A81               	incf	1,f
 22250  0913  0800               	movf	0,w
 22251  0914  0022               	movlb	2	; select bank2
 22252  0915  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22253  0916  0820               	movf	??_vfpfcnvrt^(0+256),w
 22254  0917  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 22255                           
 22256                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
 22257  0918  0844               	movf	vfpfcnvrt@vp^(0+256),w
 22258  0919  0086               	movwf	6
 22259  091A  3001               	movlw	1	; select bank2/3
 22260  091B  0087               	movwf	7
 22261  091C  0023               	movlb	3	; select bank3
 22262  091D  083C               	movf	_nout^(0+384),w
 22263  091E  3FC0               	movwi [0]fsr1
 22264  091F  083D               	movf	(_nout+1)^(0+384),w
 22265  0920  3FC1               	movwi [1]fsr1
 22266  0921  2973               	goto	l8142
 22267  0922                     l8172:	
 22268                           
 22269                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1087:      
      +                                 *fmt += ((sizeof("ln")/sizeof("ln"[0]))-1);
 22270  0922  0021               	movlb	1	; select bank1
 22271  0923  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22272  0924  0086               	movwf	6
 22273  0925  0187               	clrf	7
 22274  0926  3002               	movlw	2
 22275  0927  0781               	addwf	1,f
 22276  0928  3141               	addfsr 1,1
 22277  0929  1803               	skipnc
 22278  092A  0A81               	incf	1,f
 22279                           
 22280                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1088:      
      +                                 vp = (void *)(*(long * *)__va_arg(*(long * **)ap, (long *)0));
 22281  092B  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22282  092C  0086               	movwf	6
 22283  092D  3001               	movlw	1	; select bank2/3
 22284  092E  0087               	movwf	7
 22285  092F  3F40               	moviw [0]fsr1
 22286  0930  0084               	movwf	4
 22287  0931  3001               	movlw	1	; select bank2/3
 22288  0932  0085               	movwf	5
 22289  0933  0A81               	incf	1,f
 22290  0934  0800               	movf	0,w
 22291  0935  0022               	movlb	2	; select bank2
 22292  0936  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22293  0937  0820               	movf	??_vfpfcnvrt^(0+256),w
 22294  0938  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 22295                           
 22296                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1089:      
      +                                 *(long *)vp = (long)nout;
 22297  0939  0023               	movlb	3	; select bank3
 22298  093A  083C               	movf	_nout^(0+384),w
 22299  093B  0022               	movlb	2	; select bank2
 22300  093C  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22301  093D  0023               	movlb	3	; select bank3
 22302  093E  083D               	movf	(_nout+1)^(0+384),w
 22303  093F  0022               	movlb	2	; select bank2
 22304  0940  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22305  0941  3000               	movlw	0
 22306  0942  1BA1               	btfsc	(??_vfpfcnvrt^(0+256)+1),7
 22307  0943  30FF               	movlw	255
 22308  0944  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 22309  0945  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 22310  0946  0844               	movf	vfpfcnvrt@vp^(0+256),w
 22311  0947  0086               	movwf	6
 22312  0948  3001               	movlw	1	; select bank2/3
 22313  0949  0087               	movwf	7
 22314  094A  0820               	movf	??_vfpfcnvrt^(0+256),w
 22315  094B  3FC0               	movwi [0]fsr1
 22316  094C  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22317  094D  3FC1               	movwi [1]fsr1
 22318  094E  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 22319  094F  3FC2               	movwi [2]fsr1
 22320  0950  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 22321  0951  3FC3               	movwi [3]fsr1
 22322  0952  2973               	goto	l8142
 22323  0953                     l8184:	
 22324                           
 22325                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
 22326  0953  0021               	movlb	1	; select bank1
 22327  0954  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22328  0955  0086               	movwf	6
 22329  0956  0187               	clrf	7
 22330  0957  3002               	movlw	2
 22331  0958  0781               	addwf	1,f
 22332  0959  3141               	addfsr 1,1
 22333  095A  1803               	skipnc
 22334  095B  0A81               	incf	1,f
 22335                           
 22336                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
 22337  095C  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22338  095D  0086               	movwf	6
 22339  095E  3001               	movlw	1	; select bank2/3
 22340  095F  0087               	movwf	7
 22341  0960  3F40               	moviw [0]fsr1
 22342  0961  0084               	movwf	4
 22343  0962  3001               	movlw	1	; select bank2/3
 22344  0963  0085               	movwf	5
 22345  0964  0A81               	incf	1,f
 22346  0965  0800               	movf	0,w
 22347  0966  0022               	movlb	2	; select bank2
 22348  0967  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22349  0968  0820               	movf	??_vfpfcnvrt^(0+256),w
 22350  0969  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 22351                           
 22352                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
 22353  096A  0844               	movf	vfpfcnvrt@vp^(0+256),w
 22354  096B  0086               	movwf	6
 22355  096C  3001               	movlw	1	; select bank2/3
 22356  096D  0087               	movwf	7
 22357  096E  0023               	movlb	3	; select bank3
 22358  096F  083C               	movf	_nout^(0+384),w
 22359  0970  3FC0               	movwi [0]fsr1
 22360  0971  083D               	movf	(_nout+1)^(0+384),w
 22361  0972  3FC1               	movwi [1]fsr1
 22362  0973                     l8142:	
 22363                           
 22364                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
 22365  0973  0021               	movlb	1	; select bank1
 22366  0974  01E3               	clrf	?_vfpfcnvrt^(0+128)
 22367  0975  01E4               	clrf	(?_vfpfcnvrt+1)^(0+128)
 22368  0976  0008               	return
 22369  0977                     l8146:	
 22370                           
 22371                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
 22372  0977  0021               	movlb	1	; select bank1
 22373  0978  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22374  0979  0086               	movwf	6
 22375  097A  0187               	clrf	7
 22376  097B  3F40               	moviw [0]fsr1
 22377  097C  00F1               	movwf	strncmp@_l
 22378  097D  3F41               	moviw [1]fsr1
 22379  097E  00F2               	movwf	strncmp@_l+1
 22380  097F  302D               	movlw	low ((STR_95+1)| (0+32768))
 22381  0980  00F3               	movwf	strncmp@_r
 22382  0981  30BB               	movlw	high ((STR_95+1)| (0+32768))
 22383  0982  00F4               	movwf	strncmp@_r+1
 22384  0983  3002               	movlw	2
 22385  0984  00F5               	movwf	strncmp@n
 22386  0985  3000               	movlw	0
 22387  0986  00F6               	movwf	strncmp@n+1
 22388  0987  3190  2000  3188   	fcall	_strncmp
 22389  098A  0871               	movf	?_strncmp,w
 22390  098B  0472               	iorwf	?_strncmp+1,w
 22391  098C  1903               	btfsc	3,2
 22392  098D  28E0               	goto	l8148
 22393                           
 22394                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
 22395  098E  0021               	movlb	1	; select bank1
 22396  098F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22397  0990  0086               	movwf	6
 22398  0991  0187               	clrf	7
 22399  0992  3F40               	moviw [0]fsr1
 22400  0993  0022               	movlb	2	; select bank2
 22401  0994  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22402  0995  3F41               	moviw [1]fsr1
 22403  0996  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22404  0997  0820               	movf	??_vfpfcnvrt^(0+256),w
 22405  0998  0084               	movwf	4
 22406  0999  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22407  099A  0085               	movwf	5
 22408  099B  0012               	moviw fsr0++
 22409  099C  3A6E               	xorlw	110
 22410  099D  1903               	btfsc	3,2
 22411  099E  2901               	goto	l8160
 22412                           
 22413                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1085:      
      +                             if (!strncmp(*fmt, "ln", ((sizeof("ln")/sizeof("ln"[0]))-1))) {
 22414  099F  0021               	movlb	1	; select bank1
 22415  09A0  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22416  09A1  0086               	movwf	6
 22417  09A2  0187               	clrf	7
 22418  09A3  3F40               	moviw [0]fsr1
 22419  09A4  00F1               	movwf	strncmp@_l
 22420  09A5  3F41               	moviw [1]fsr1
 22421  09A6  00F2               	movwf	strncmp@_l+1
 22422  09A7  3051               	movlw	low (STR_105| (0+32768))
 22423  09A8  00F3               	movwf	strncmp@_r
 22424  09A9  30BB               	movlw	high (STR_105| (0+32768))
 22425  09AA  00F4               	movwf	strncmp@_r+1
 22426  09AB  3002               	movlw	2
 22427  09AC  00F5               	movwf	strncmp@n
 22428  09AD  3000               	movlw	0
 22429  09AE  00F6               	movwf	strncmp@n+1
 22430  09AF  3190  2000  3188   	fcall	_strncmp
 22431  09B2  0871               	movf	?_strncmp,w
 22432  09B3  0472               	iorwf	?_strncmp+1,w
 22433  09B4  1903               	btfsc	3,2
 22434  09B5  2922               	goto	l8172
 22435                           
 22436                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
 22437  09B6  0021               	movlb	1	; select bank1
 22438  09B7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22439  09B8  0086               	movwf	6
 22440  09B9  0187               	clrf	7
 22441  09BA  3F40               	moviw [0]fsr1
 22442  09BB  00F1               	movwf	strncmp@_l
 22443  09BC  3F41               	moviw [1]fsr1
 22444  09BD  00F2               	movwf	strncmp@_l+1
 22445  09BE  3054               	movlw	low (STR_110| (0+32768))
 22446  09BF  00F3               	movwf	strncmp@_r
 22447  09C0  30BB               	movlw	high (STR_110| (0+32768))
 22448  09C1  00F4               	movwf	strncmp@_r+1
 22449  09C2  3002               	movlw	2
 22450  09C3  00F5               	movwf	strncmp@n
 22451  09C4  3000               	movlw	0
 22452  09C5  00F6               	movwf	strncmp@n+1
 22453  09C6  3190  2000  3188   	fcall	_strncmp
 22454  09C9  0871               	movf	?_strncmp,w
 22455  09CA  0472               	iorwf	?_strncmp+1,w
 22456  09CB  1903               	btfsc	3,2
 22457  09CC  2953               	goto	l8184
 22458                           
 22459                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
 22460  09CD  0021               	movlb	1	; select bank1
 22461  09CE  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22462  09CF  0086               	movwf	6
 22463  09D0  0187               	clrf	7
 22464  09D1  3F40               	moviw [0]fsr1
 22465  09D2  0022               	movlb	2	; select bank2
 22466  09D3  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22467  09D4  3F41               	moviw [1]fsr1
 22468  09D5  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22469  09D6  0820               	movf	??_vfpfcnvrt^(0+256),w
 22470  09D7  0084               	movwf	4
 22471  09D8  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22472  09D9  0085               	movwf	5
 22473  09DA  0012               	moviw fsr0++
 22474  09DB  3A70               	xorlw	112
 22475  09DC  1D03               	btfss	3,2
 22476  09DD  2A43               	goto	l8204
 22477                           
 22478                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
 22479  09DE  0021               	movlb	1	; select bank1
 22480  09DF  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22481  09E0  0086               	movwf	6
 22482  09E1  0187               	clrf	7
 22483  09E2  3001               	movlw	1
 22484  09E3  0781               	addwf	1,f
 22485  09E4  3141               	addfsr 1,1
 22486  09E5  1803               	skipnc
 22487  09E6  0A81               	incf	1,f
 22488                           
 22489                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
 22490  09E7  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22491  09E8  0086               	movwf	6
 22492  09E9  3001               	movlw	1	; select bank2/3
 22493  09EA  0087               	movwf	7
 22494  09EB  3F40               	moviw [0]fsr1
 22495  09EC  0084               	movwf	4
 22496  09ED  3001               	movlw	1	; select bank2/3
 22497  09EE  0085               	movwf	5
 22498  09EF  0A81               	incf	1,f
 22499  09F0  0800               	movf	0,w
 22500  09F1  0022               	movlb	2	; select bank2
 22501  09F2  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22502  09F3  01A1               	clrf	(??_vfpfcnvrt^(0+256)+1)
 22503  09F4  01A2               	clrf	(??_vfpfcnvrt^(0+256)+2)
 22504  09F5  01A3               	clrf	(??_vfpfcnvrt^(0+256)+3)
 22505  09F6  01A4               	clrf	(??_vfpfcnvrt^(0+256)+4)
 22506  09F7  01A5               	clrf	(??_vfpfcnvrt^(0+256)+5)
 22507  09F8  01A6               	clrf	(??_vfpfcnvrt^(0+256)+6)
 22508  09F9  01A7               	clrf	(??_vfpfcnvrt^(0+256)+7)
 22509  09FA  0827               	movf	(??_vfpfcnvrt^(0+256)+7),w
 22510  09FB  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 22511  09FC  0826               	movf	(??_vfpfcnvrt^(0+256)+6),w
 22512  09FD  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 22513  09FE  0825               	movf	(??_vfpfcnvrt^(0+256)+5),w
 22514  09FF  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 22515  0A00  0824               	movf	(??_vfpfcnvrt^(0+256)+4),w
 22516  0A01  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 22517  0A02  0823               	movf	(??_vfpfcnvrt^(0+256)+3),w
 22518  0A03  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 22519  0A04  0822               	movf	(??_vfpfcnvrt^(0+256)+2),w
 22520  0A05  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 22521  0A06  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 22522  0A07  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 22523  0A08  0820               	movf	??_vfpfcnvrt^(0+256),w
 22524  0A09  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 22525                           
 22526                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
 22527  0A0A  0021               	movlb	1	; select bank1
 22528  0A0B  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22529  0A0C  0020               	movlb	0	; select bank0
 22530  0A0D  00B1               	movwf	xtoa@fp+1
 22531  0A0E  0021               	movlb	1	; select bank1
 22532  0A0F  0863               	movf	vfpfcnvrt@fp^(0+128),w
 22533  0A10  0020               	movlb	0	; select bank0
 22534  0A11  00B0               	movwf	xtoa@fp
 22535  0A12  0022               	movlb	2	; select bank2
 22536  0A13  0846               	movf	vfpfcnvrt@llu^(0+256),w
 22537  0A14  0020               	movlb	0	; select bank0
 22538  0A15  00B2               	movwf	xtoa@d
 22539  0A16  0022               	movlb	2	; select bank2
 22540  0A17  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 22541  0A18  0020               	movlb	0	; select bank0
 22542  0A19  00B3               	movwf	xtoa@d+1
 22543  0A1A  0022               	movlb	2	; select bank2
 22544  0A1B  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 22545  0A1C  0020               	movlb	0	; select bank0
 22546  0A1D  00B4               	movwf	xtoa@d+2
 22547  0A1E  0022               	movlb	2	; select bank2
 22548  0A1F  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 22549  0A20  0020               	movlb	0	; select bank0
 22550  0A21  00B5               	movwf	xtoa@d+3
 22551  0A22  0022               	movlb	2	; select bank2
 22552  0A23  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 22553  0A24  0020               	movlb	0	; select bank0
 22554  0A25  00B6               	movwf	xtoa@d+4
 22555  0A26  0022               	movlb	2	; select bank2
 22556  0A27  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 22557  0A28  0020               	movlb	0	; select bank0
 22558  0A29  00B7               	movwf	xtoa@d+5
 22559  0A2A  0022               	movlb	2	; select bank2
 22560  0A2B  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 22561  0A2C  0020               	movlb	0	; select bank0
 22562  0A2D  00B8               	movwf	xtoa@d+6
 22563  0A2E  0022               	movlb	2	; select bank2
 22564  0A2F  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 22565  0A30  0020               	movlb	0	; select bank0
 22566  0A31  00B9               	movwf	xtoa@d+7
 22567  0A32  3078               	movlw	120
 22568  0A33  0022               	movlb	2	; select bank2
 22569  0A34  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22570  0A35  0820               	movf	??_vfpfcnvrt^(0+256),w
 22571  0A36  0020               	movlb	0	; select bank0
 22572  0A37  00BA               	movwf	xtoa@x
 22573  0A38  319C  24C5         	fcall	_xtoa
 22574  0A3A  0020               	movlb	0	; select bank0
 22575  0A3B  0831               	movf	?_xtoa+1,w
 22576  0A3C  0021               	movlb	1	; select bank1
 22577  0A3D  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22578  0A3E  0020               	movlb	0	; select bank0
 22579  0A3F  0830               	movf	?_xtoa,w
 22580  0A40  0021               	movlb	1	; select bank1
 22581  0A41  00E3               	movwf	?_vfpfcnvrt^(0+128)
 22582  0A42  0008               	return
 22583  0A43                     l8204:	
 22584                           
 22585                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 22586  0A43  0021               	movlb	1	; select bank1
 22587  0A44  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22588  0A45  0086               	movwf	6
 22589  0A46  0187               	clrf	7
 22590  0A47  3F40               	moviw [0]fsr1
 22591  0A48  0022               	movlb	2	; select bank2
 22592  0A49  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22593  0A4A  3F41               	moviw [1]fsr1
 22594  0A4B  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22595  0A4C  0820               	movf	??_vfpfcnvrt^(0+256),w
 22596  0A4D  0084               	movwf	4
 22597  0A4E  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22598  0A4F  0085               	movwf	5
 22599  0A50  0012               	moviw fsr0++
 22600  0A51  3A73               	xorlw	115
 22601  0A52  1D03               	btfss	3,2
 22602  0A53  2A84               	goto	l8214
 22603                           
 22604                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 22605  0A54  0021               	movlb	1	; select bank1
 22606  0A55  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22607  0A56  0086               	movwf	6
 22608  0A57  0187               	clrf	7
 22609  0A58  3001               	movlw	1
 22610  0A59  0781               	addwf	1,f
 22611  0A5A  3141               	addfsr 1,1
 22612  0A5B  1803               	skipnc
 22613  0A5C  0A81               	incf	1,f
 22614                           
 22615                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 22616  0A5D  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22617  0A5E  0086               	movwf	6
 22618  0A5F  3001               	movlw	1	; select bank2/3
 22619  0A60  0087               	movwf	7
 22620  0A61  3F40               	moviw [0]fsr1
 22621  0A62  0084               	movwf	4
 22622  0A63  3001               	movlw	1	; select bank2/3
 22623  0A64  0085               	movwf	5
 22624  0A65  0A81               	incf	1,f
 22625  0A66  0800               	movf	0,w
 22626  0A67  0022               	movlb	2	; select bank2
 22627  0A68  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22628  0A69  0820               	movf	??_vfpfcnvrt^(0+256),w
 22629  0A6A  00AC               	movwf	vfpfcnvrt@cp^(0+256)
 22630                           
 22631                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 22632  0A6B  0021               	movlb	1	; select bank1
 22633  0A6C  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22634  0A6D  0020               	movlb	0	; select bank0
 22635  0A6E  00A1               	movwf	stoa@fp+1
 22636  0A6F  0021               	movlb	1	; select bank1
 22637  0A70  0863               	movf	vfpfcnvrt@fp^(0+128),w
 22638  0A71  0020               	movlb	0	; select bank0
 22639  0A72  00A0               	movwf	stoa@fp
 22640  0A73  0022               	movlb	2	; select bank2
 22641  0A74  082C               	movf	vfpfcnvrt@cp^(0+256),w
 22642  0A75  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22643  0A76  0820               	movf	??_vfpfcnvrt^(0+256),w
 22644  0A77  0020               	movlb	0	; select bank0
 22645  0A78  00A2               	movwf	stoa@s
 22646  0A79  31AE  266A         	fcall	_stoa
 22647  0A7B  0020               	movlb	0	; select bank0
 22648  0A7C  0821               	movf	?_stoa+1,w
 22649  0A7D  0021               	movlb	1	; select bank1
 22650  0A7E  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22651  0A7F  0020               	movlb	0	; select bank0
 22652  0A80  0820               	movf	?_stoa,w
 22653  0A81  0021               	movlb	1	; select bank1
 22654  0A82  00E3               	movwf	?_vfpfcnvrt^(0+128)
 22655  0A83  0008               	return
 22656  0A84                     l8214:	
 22657                           
 22658                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
 22659  0A84  0021               	movlb	1	; select bank1
 22660  0A85  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22661  0A86  0086               	movwf	6
 22662  0A87  0187               	clrf	7
 22663  0A88  3F40               	moviw [0]fsr1
 22664  0A89  00F1               	movwf	strncmp@_l
 22665  0A8A  3F41               	moviw [1]fsr1
 22666  0A8B  00F2               	movwf	strncmp@_l+1
 22667  0A8C  3034               	movlw	low (STR_115| (0+32768))
 22668  0A8D  00F3               	movwf	strncmp@_r
 22669  0A8E  30BB               	movlw	high (STR_115| (0+32768))
 22670  0A8F  00F4               	movwf	strncmp@_r+1
 22671  0A90  3003               	movlw	3
 22672  0A91  00F5               	movwf	strncmp@n
 22673  0A92  3000               	movlw	0
 22674  0A93  00F6               	movwf	strncmp@n+1
 22675  0A94  3190  2000  3188   	fcall	_strncmp
 22676  0A97  0871               	movf	?_strncmp,w
 22677  0A98  0472               	iorwf	?_strncmp+1,w
 22678  0A99  1D03               	btfss	3,2
 22679  0A9A  2AEB               	goto	l8224
 22680                           
 22681                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
 22682  0A9B  0021               	movlb	1	; select bank1
 22683  0A9C  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22684  0A9D  0086               	movwf	6
 22685  0A9E  0187               	clrf	7
 22686  0A9F  3003               	movlw	3
 22687  0AA0  0781               	addwf	1,f
 22688  0AA1  3141               	addfsr 1,1
 22689  0AA2  1803               	skipnc
 22690  0AA3  0A81               	incf	1,f
 22691                           
 22692                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 22693  0AA4  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22694  0AA5  0086               	movwf	6
 22695  0AA6  3001               	movlw	1	; select bank2/3
 22696  0AA7  0087               	movwf	7
 22697  0AA8  0801               	movf	1,w
 22698  0AA9  0084               	movwf	4
 22699  0AAA  3001               	movlw	1	; select bank2/3
 22700  0AAB  0085               	movwf	5
 22701  0AAC  3002               	movlw	2
 22702  0AAD  0781               	addwf	1,f
 22703  0AAE  0800               	movf	0,w
 22704  0AAF  0022               	movlb	2	; select bank2
 22705  0AB0  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 22706  0AB1  01C7               	clrf	(vfpfcnvrt@llu+1)^(0+256)
 22707  0AB2  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 22708  0AB3  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 22709  0AB4  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 22710  0AB5  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 22711  0AB6  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 22712  0AB7  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 22713                           
 22714                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
 22715  0AB8  0021               	movlb	1	; select bank1
 22716  0AB9  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22717  0ABA  0020               	movlb	0	; select bank0
 22718  0ABB  00B1               	movwf	utoa@fp+1
 22719  0ABC  0021               	movlb	1	; select bank1
 22720  0ABD  0863               	movf	vfpfcnvrt@fp^(0+128),w
 22721  0ABE  0020               	movlb	0	; select bank0
 22722  0ABF  00B0               	movwf	utoa@fp
 22723  0AC0  0022               	movlb	2	; select bank2
 22724  0AC1  0846               	movf	vfpfcnvrt@llu^(0+256),w
 22725  0AC2  0020               	movlb	0	; select bank0
 22726  0AC3  00B2               	movwf	utoa@d
 22727  0AC4  0022               	movlb	2	; select bank2
 22728  0AC5  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 22729  0AC6  0020               	movlb	0	; select bank0
 22730  0AC7  00B3               	movwf	utoa@d+1
 22731  0AC8  0022               	movlb	2	; select bank2
 22732  0AC9  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 22733  0ACA  0020               	movlb	0	; select bank0
 22734  0ACB  00B4               	movwf	utoa@d+2
 22735  0ACC  0022               	movlb	2	; select bank2
 22736  0ACD  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 22737  0ACE  0020               	movlb	0	; select bank0
 22738  0ACF  00B5               	movwf	utoa@d+3
 22739  0AD0  0022               	movlb	2	; select bank2
 22740  0AD1  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 22741  0AD2  0020               	movlb	0	; select bank0
 22742  0AD3  00B6               	movwf	utoa@d+4
 22743  0AD4  0022               	movlb	2	; select bank2
 22744  0AD5  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 22745  0AD6  0020               	movlb	0	; select bank0
 22746  0AD7  00B7               	movwf	utoa@d+5
 22747  0AD8  0022               	movlb	2	; select bank2
 22748  0AD9  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 22749  0ADA  0020               	movlb	0	; select bank0
 22750  0ADB  00B8               	movwf	utoa@d+6
 22751  0ADC  0022               	movlb	2	; select bank2
 22752  0ADD  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 22753  0ADE  0020               	movlb	0	; select bank0
 22754  0ADF  00B9               	movwf	utoa@d+7
 22755  0AE0  31A4  2455         	fcall	_utoa
 22756  0AE2  0020               	movlb	0	; select bank0
 22757  0AE3  0831               	movf	?_utoa+1,w
 22758  0AE4  0021               	movlb	1	; select bank1
 22759  0AE5  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22760  0AE6  0020               	movlb	0	; select bank0
 22761  0AE7  0830               	movf	?_utoa,w
 22762  0AE8  0021               	movlb	1	; select bank1
 22763  0AE9  00E3               	movwf	?_vfpfcnvrt^(0+128)
 22764  0AEA  0008               	return
 22765  0AEB                     l8224:	
 22766                           
 22767                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
 22768  0AEB  0021               	movlb	1	; select bank1
 22769  0AEC  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22770  0AED  0086               	movwf	6
 22771  0AEE  0187               	clrf	7
 22772  0AEF  3F40               	moviw [0]fsr1
 22773  0AF0  00F1               	movwf	strncmp@_l
 22774  0AF1  3F41               	moviw [1]fsr1
 22775  0AF2  00F2               	movwf	strncmp@_l+1
 22776  0AF3  3035               	movlw	low ((STR_115+1)| (0+32768))
 22777  0AF4  00F3               	movwf	strncmp@_r
 22778  0AF5  30BB               	movlw	high ((STR_115+1)| (0+32768))
 22779  0AF6  00F4               	movwf	strncmp@_r+1
 22780  0AF7  3002               	movlw	2
 22781  0AF8  00F5               	movwf	strncmp@n
 22782  0AF9  3000               	movlw	0
 22783  0AFA  00F6               	movwf	strncmp@n+1
 22784  0AFB  3190  2000  3188   	fcall	_strncmp
 22785  0AFE  0871               	movf	?_strncmp,w
 22786  0AFF  0472               	iorwf	?_strncmp+1,w
 22787  0B00  1D03               	btfss	3,2
 22788  0B01  2B53               	goto	l8234
 22789                           
 22790                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
 22791  0B02  0021               	movlb	1	; select bank1
 22792  0B03  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22793  0B04  0086               	movwf	6
 22794  0B05  0187               	clrf	7
 22795  0B06  3002               	movlw	2
 22796  0B07  0781               	addwf	1,f
 22797  0B08  3141               	addfsr 1,1
 22798  0B09  1803               	skipnc
 22799  0B0A  0A81               	incf	1,f
 22800                           
 22801                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 22802  0B0B  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22803  0B0C  0086               	movwf	6
 22804  0B0D  3001               	movlw	1	; select bank2/3
 22805  0B0E  0087               	movwf	7
 22806  0B0F  0801               	movf	1,w
 22807  0B10  0084               	movwf	4
 22808  0B11  3001               	movlw	1	; select bank2/3
 22809  0B12  0085               	movwf	5
 22810  0B13  3002               	movlw	2
 22811  0B14  0781               	addwf	1,f
 22812  0B15  3F00               	moviw [0]fsr0
 22813  0B16  0022               	movlb	2	; select bank2
 22814  0B17  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 22815  0B18  3F01               	moviw [1]fsr0
 22816  0B19  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 22817  0B1A  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 22818  0B1B  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 22819  0B1C  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 22820  0B1D  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 22821  0B1E  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 22822  0B1F  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 22823                           
 22824                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1177:      
      +                                 return utoa(fp, llu);
 22825  0B20  0021               	movlb	1	; select bank1
 22826  0B21  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22827  0B22  0020               	movlb	0	; select bank0
 22828  0B23  00B1               	movwf	utoa@fp+1
 22829  0B24  0021               	movlb	1	; select bank1
 22830  0B25  0863               	movf	vfpfcnvrt@fp^(0+128),w
 22831  0B26  0020               	movlb	0	; select bank0
 22832  0B27  00B0               	movwf	utoa@fp
 22833  0B28  0022               	movlb	2	; select bank2
 22834  0B29  0846               	movf	vfpfcnvrt@llu^(0+256),w
 22835  0B2A  0020               	movlb	0	; select bank0
 22836  0B2B  00B2               	movwf	utoa@d
 22837  0B2C  0022               	movlb	2	; select bank2
 22838  0B2D  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 22839  0B2E  0020               	movlb	0	; select bank0
 22840  0B2F  00B3               	movwf	utoa@d+1
 22841  0B30  0022               	movlb	2	; select bank2
 22842  0B31  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 22843  0B32  0020               	movlb	0	; select bank0
 22844  0B33  00B4               	movwf	utoa@d+2
 22845  0B34  0022               	movlb	2	; select bank2
 22846  0B35  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 22847  0B36  0020               	movlb	0	; select bank0
 22848  0B37  00B5               	movwf	utoa@d+3
 22849  0B38  0022               	movlb	2	; select bank2
 22850  0B39  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 22851  0B3A  0020               	movlb	0	; select bank0
 22852  0B3B  00B6               	movwf	utoa@d+4
 22853  0B3C  0022               	movlb	2	; select bank2
 22854  0B3D  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 22855  0B3E  0020               	movlb	0	; select bank0
 22856  0B3F  00B7               	movwf	utoa@d+5
 22857  0B40  0022               	movlb	2	; select bank2
 22858  0B41  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 22859  0B42  0020               	movlb	0	; select bank0
 22860  0B43  00B8               	movwf	utoa@d+6
 22861  0B44  0022               	movlb	2	; select bank2
 22862  0B45  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 22863  0B46  0020               	movlb	0	; select bank0
 22864  0B47  00B9               	movwf	utoa@d+7
 22865  0B48  31A4  2455         	fcall	_utoa
 22866  0B4A  0020               	movlb	0	; select bank0
 22867  0B4B  0831               	movf	?_utoa+1,w
 22868  0B4C  0021               	movlb	1	; select bank1
 22869  0B4D  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22870  0B4E  0020               	movlb	0	; select bank0
 22871  0B4F  0830               	movf	?_utoa,w
 22872  0B50  0021               	movlb	1	; select bank1
 22873  0B51  00E3               	movwf	?_vfpfcnvrt^(0+128)
 22874  0B52  0008               	return
 22875  0B53                     l8234:	
 22876                           
 22877                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 22878  0B53  0021               	movlb	1	; select bank1
 22879  0B54  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22880  0B55  0086               	movwf	6
 22881  0B56  0187               	clrf	7
 22882  0B57  3F40               	moviw [0]fsr1
 22883  0B58  0022               	movlb	2	; select bank2
 22884  0B59  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22885  0B5A  3F41               	moviw [1]fsr1
 22886  0B5B  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22887  0B5C  0820               	movf	??_vfpfcnvrt^(0+256),w
 22888  0B5D  0084               	movwf	4
 22889  0B5E  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22890  0B5F  0085               	movwf	5
 22891  0B60  0012               	moviw fsr0++
 22892  0B61  3A75               	xorlw	117
 22893  0B62  1D03               	btfss	3,2
 22894  0B63  2BB5               	goto	l8244
 22895                           
 22896                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 22897  0B64  0021               	movlb	1	; select bank1
 22898  0B65  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22899  0B66  0086               	movwf	6
 22900  0B67  0187               	clrf	7
 22901  0B68  3001               	movlw	1
 22902  0B69  0781               	addwf	1,f
 22903  0B6A  3141               	addfsr 1,1
 22904  0B6B  1803               	skipnc
 22905  0B6C  0A81               	incf	1,f
 22906                           
 22907                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 22908  0B6D  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22909  0B6E  0086               	movwf	6
 22910  0B6F  3001               	movlw	1	; select bank2/3
 22911  0B70  0087               	movwf	7
 22912  0B71  0801               	movf	1,w
 22913  0B72  0084               	movwf	4
 22914  0B73  3001               	movlw	1	; select bank2/3
 22915  0B74  0085               	movwf	5
 22916  0B75  3002               	movlw	2
 22917  0B76  0781               	addwf	1,f
 22918  0B77  3F00               	moviw [0]fsr0
 22919  0B78  0022               	movlb	2	; select bank2
 22920  0B79  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 22921  0B7A  3F01               	moviw [1]fsr0
 22922  0B7B  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 22923  0B7C  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 22924  0B7D  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 22925  0B7E  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 22926  0B7F  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 22927  0B80  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 22928  0B81  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 22929                           
 22930                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 22931  0B82  0021               	movlb	1	; select bank1
 22932  0B83  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22933  0B84  0020               	movlb	0	; select bank0
 22934  0B85  00B1               	movwf	utoa@fp+1
 22935  0B86  0021               	movlb	1	; select bank1
 22936  0B87  0863               	movf	vfpfcnvrt@fp^(0+128),w
 22937  0B88  0020               	movlb	0	; select bank0
 22938  0B89  00B0               	movwf	utoa@fp
 22939  0B8A  0022               	movlb	2	; select bank2
 22940  0B8B  0846               	movf	vfpfcnvrt@llu^(0+256),w
 22941  0B8C  0020               	movlb	0	; select bank0
 22942  0B8D  00B2               	movwf	utoa@d
 22943  0B8E  0022               	movlb	2	; select bank2
 22944  0B8F  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 22945  0B90  0020               	movlb	0	; select bank0
 22946  0B91  00B3               	movwf	utoa@d+1
 22947  0B92  0022               	movlb	2	; select bank2
 22948  0B93  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 22949  0B94  0020               	movlb	0	; select bank0
 22950  0B95  00B4               	movwf	utoa@d+2
 22951  0B96  0022               	movlb	2	; select bank2
 22952  0B97  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 22953  0B98  0020               	movlb	0	; select bank0
 22954  0B99  00B5               	movwf	utoa@d+3
 22955  0B9A  0022               	movlb	2	; select bank2
 22956  0B9B  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 22957  0B9C  0020               	movlb	0	; select bank0
 22958  0B9D  00B6               	movwf	utoa@d+4
 22959  0B9E  0022               	movlb	2	; select bank2
 22960  0B9F  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 22961  0BA0  0020               	movlb	0	; select bank0
 22962  0BA1  00B7               	movwf	utoa@d+5
 22963  0BA2  0022               	movlb	2	; select bank2
 22964  0BA3  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 22965  0BA4  0020               	movlb	0	; select bank0
 22966  0BA5  00B8               	movwf	utoa@d+6
 22967  0BA6  0022               	movlb	2	; select bank2
 22968  0BA7  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 22969  0BA8  0020               	movlb	0	; select bank0
 22970  0BA9  00B9               	movwf	utoa@d+7
 22971  0BAA  31A4  2455         	fcall	_utoa
 22972  0BAC  0020               	movlb	0	; select bank0
 22973  0BAD  0831               	movf	?_utoa+1,w
 22974  0BAE  0021               	movlb	1	; select bank1
 22975  0BAF  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22976  0BB0  0020               	movlb	0	; select bank0
 22977  0BB1  0830               	movf	?_utoa,w
 22978  0BB2  0021               	movlb	1	; select bank1
 22979  0BB3  00E3               	movwf	?_vfpfcnvrt^(0+128)
 22980  0BB4  0008               	return
 22981  0BB5                     l8244:	
 22982                           
 22983                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1192:      
      +                             if (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 22984  0BB5  0021               	movlb	1	; select bank1
 22985  0BB6  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22986  0BB7  0086               	movwf	6
 22987  0BB8  0187               	clrf	7
 22988  0BB9  3F40               	moviw [0]fsr1
 22989  0BBA  00F1               	movwf	strncmp@_l
 22990  0BBB  3F41               	moviw [1]fsr1
 22991  0BBC  00F2               	movwf	strncmp@_l+1
 22992  0BBD  305D               	movlw	low (STR_125| (0+32768))
 22993  0BBE  00F3               	movwf	strncmp@_r
 22994  0BBF  30BB               	movlw	high (STR_125| (0+32768))
 22995  0BC0  00F4               	movwf	strncmp@_r+1
 22996  0BC1  3002               	movlw	2
 22997  0BC2  00F5               	movwf	strncmp@n
 22998  0BC3  3000               	movlw	0
 22999  0BC4  00F6               	movwf	strncmp@n+1
 23000  0BC5  3190  2000  3188   	fcall	_strncmp
 23001  0BC8  0871               	movf	?_strncmp,w
 23002  0BC9  0472               	iorwf	?_strncmp+1,w
 23003  0BCA  1D03               	btfss	3,2
 23004  0BCB  2C37               	goto	l8254
 23005                           
 23006                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1194:      
      +                                 *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
 23007  0BCC  0021               	movlb	1	; select bank1
 23008  0BCD  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23009  0BCE  0086               	movwf	6
 23010  0BCF  0187               	clrf	7
 23011  0BD0  3002               	movlw	2
 23012  0BD1  0781               	addwf	1,f
 23013  0BD2  3141               	addfsr 1,1
 23014  0BD3  1803               	skipnc
 23015  0BD4  0A81               	incf	1,f
 23016                           
 23017                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1195:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 23018  0BD5  0866               	movf	vfpfcnvrt@ap^(0+128),w
 23019  0BD6  0086               	movwf	6
 23020  0BD7  3001               	movlw	1	; select bank2/3
 23021  0BD8  0087               	movwf	7
 23022  0BD9  0801               	movf	1,w
 23023  0BDA  0084               	movwf	4
 23024  0BDB  3001               	movlw	1	; select bank2/3
 23025  0BDC  0085               	movwf	5
 23026  0BDD  3004               	movlw	4
 23027  0BDE  0781               	addwf	1,f
 23028  0BDF  3F00               	moviw [0]fsr0
 23029  0BE0  0022               	movlb	2	; select bank2
 23030  0BE1  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23031  0BE2  3F01               	moviw [1]fsr0
 23032  0BE3  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 23033  0BE4  3F02               	moviw [2]fsr0
 23034  0BE5  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 23035  0BE6  3F03               	moviw [3]fsr0
 23036  0BE7  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 23037  0BE8  0820               	movf	??_vfpfcnvrt^(0+256),w
 23038  0BE9  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 23039  0BEA  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 23040  0BEB  00A5               	movwf	((??_vfpfcnvrt+4)^(0+256)+1)
 23041  0BEC  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 23042  0BED  00A6               	movwf	((??_vfpfcnvrt+4)^(0+256)+2)
 23043  0BEE  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 23044  0BEF  00A7               	movwf	((??_vfpfcnvrt+4)^(0+256)+3)
 23045  0BF0  01A8               	clrf	((??_vfpfcnvrt+4)^(0+256)+4)
 23046  0BF1  01A9               	clrf	((??_vfpfcnvrt+4)^(0+256)+5)
 23047  0BF2  01AA               	clrf	((??_vfpfcnvrt+4)^(0+256)+6)
 23048  0BF3  01AB               	clrf	((??_vfpfcnvrt+4)^(0+256)+7)
 23049  0BF4  082B               	movf	((??_vfpfcnvrt+4)^(0+256)+7),w
 23050  0BF5  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 23051  0BF6  082A               	movf	((??_vfpfcnvrt+4)^(0+256)+6),w
 23052  0BF7  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 23053  0BF8  0829               	movf	((??_vfpfcnvrt+4)^(0+256)+5),w
 23054  0BF9  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 23055  0BFA  0828               	movf	((??_vfpfcnvrt+4)^(0+256)+4),w
 23056  0BFB  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 23057  0BFC  0827               	movf	((??_vfpfcnvrt+4)^(0+256)+3),w
 23058  0BFD  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 23059  0BFE  0826               	movf	((??_vfpfcnvrt+4)^(0+256)+2),w
 23060  0BFF  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 23061  0C00  0825               	movf	((??_vfpfcnvrt+4)^(0+256)+1),w
 23062  0C01  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 23063  0C02  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 23064  0C03  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 23065                           
 23066                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1197:      
      +                                 return utoa(fp, llu);
 23067  0C04  0021               	movlb	1	; select bank1
 23068  0C05  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23069  0C06  0020               	movlb	0	; select bank0
 23070  0C07  00B1               	movwf	utoa@fp+1
 23071  0C08  0021               	movlb	1	; select bank1
 23072  0C09  0863               	movf	vfpfcnvrt@fp^(0+128),w
 23073  0C0A  0020               	movlb	0	; select bank0
 23074  0C0B  00B0               	movwf	utoa@fp
 23075  0C0C  0022               	movlb	2	; select bank2
 23076  0C0D  0846               	movf	vfpfcnvrt@llu^(0+256),w
 23077  0C0E  0020               	movlb	0	; select bank0
 23078  0C0F  00B2               	movwf	utoa@d
 23079  0C10  0022               	movlb	2	; select bank2
 23080  0C11  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 23081  0C12  0020               	movlb	0	; select bank0
 23082  0C13  00B3               	movwf	utoa@d+1
 23083  0C14  0022               	movlb	2	; select bank2
 23084  0C15  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 23085  0C16  0020               	movlb	0	; select bank0
 23086  0C17  00B4               	movwf	utoa@d+2
 23087  0C18  0022               	movlb	2	; select bank2
 23088  0C19  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 23089  0C1A  0020               	movlb	0	; select bank0
 23090  0C1B  00B5               	movwf	utoa@d+3
 23091  0C1C  0022               	movlb	2	; select bank2
 23092  0C1D  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 23093  0C1E  0020               	movlb	0	; select bank0
 23094  0C1F  00B6               	movwf	utoa@d+4
 23095  0C20  0022               	movlb	2	; select bank2
 23096  0C21  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 23097  0C22  0020               	movlb	0	; select bank0
 23098  0C23  00B7               	movwf	utoa@d+5
 23099  0C24  0022               	movlb	2	; select bank2
 23100  0C25  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 23101  0C26  0020               	movlb	0	; select bank0
 23102  0C27  00B8               	movwf	utoa@d+6
 23103  0C28  0022               	movlb	2	; select bank2
 23104  0C29  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 23105  0C2A  0020               	movlb	0	; select bank0
 23106  0C2B  00B9               	movwf	utoa@d+7
 23107  0C2C  31A4  2455         	fcall	_utoa
 23108  0C2E  0020               	movlb	0	; select bank0
 23109  0C2F  0831               	movf	?_utoa+1,w
 23110  0C30  0021               	movlb	1	; select bank1
 23111  0C31  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 23112  0C32  0020               	movlb	0	; select bank0
 23113  0C33  0830               	movf	?_utoa,w
 23114  0C34  0021               	movlb	1	; select bank1
 23115  0C35  00E3               	movwf	?_vfpfcnvrt^(0+128)
 23116  0C36  0008               	return
 23117  0C37                     l8254:	
 23118                           
 23119                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
 23120  0C37  0021               	movlb	1	; select bank1
 23121  0C38  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23122  0C39  0086               	movwf	6
 23123  0C3A  0187               	clrf	7
 23124  0C3B  3F40               	moviw [0]fsr1
 23125  0C3C  00F1               	movwf	strncmp@_l
 23126  0C3D  3F41               	moviw [1]fsr1
 23127  0C3E  00F2               	movwf	strncmp@_l+1
 23128  0C3F  3060               	movlw	low (STR_130| (0+32768))
 23129  0C40  00F3               	movwf	strncmp@_r
 23130  0C41  30BB               	movlw	high (STR_130| (0+32768))
 23131  0C42  00F4               	movwf	strncmp@_r+1
 23132  0C43  3002               	movlw	2
 23133  0C44  00F5               	movwf	strncmp@n
 23134  0C45  3000               	movlw	0
 23135  0C46  00F6               	movwf	strncmp@n+1
 23136  0C47  3190  2000  3188   	fcall	_strncmp
 23137  0C4A  0871               	movf	?_strncmp,w
 23138  0C4B  0472               	iorwf	?_strncmp+1,w
 23139  0C4C  1D03               	btfss	3,2
 23140  0C4D  2C9F               	goto	l8264
 23141                           
 23142                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
 23143  0C4E  0021               	movlb	1	; select bank1
 23144  0C4F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23145  0C50  0086               	movwf	6
 23146  0C51  0187               	clrf	7
 23147  0C52  3002               	movlw	2
 23148  0C53  0781               	addwf	1,f
 23149  0C54  3141               	addfsr 1,1
 23150  0C55  1803               	skipnc
 23151  0C56  0A81               	incf	1,f
 23152                           
 23153                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 23154  0C57  0866               	movf	vfpfcnvrt@ap^(0+128),w
 23155  0C58  0086               	movwf	6
 23156  0C59  3001               	movlw	1	; select bank2/3
 23157  0C5A  0087               	movwf	7
 23158  0C5B  0801               	movf	1,w
 23159  0C5C  0084               	movwf	4
 23160  0C5D  3001               	movlw	1	; select bank2/3
 23161  0C5E  0085               	movwf	5
 23162  0C5F  3002               	movlw	2
 23163  0C60  0781               	addwf	1,f
 23164  0C61  3F00               	moviw [0]fsr0
 23165  0C62  0022               	movlb	2	; select bank2
 23166  0C63  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 23167  0C64  3F01               	moviw [1]fsr0
 23168  0C65  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 23169  0C66  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 23170  0C67  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 23171  0C68  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 23172  0C69  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 23173  0C6A  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 23174  0C6B  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 23175                           
 23176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1241:      
      +                                 return utoa(fp, llu);
 23177  0C6C  0021               	movlb	1	; select bank1
 23178  0C6D  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23179  0C6E  0020               	movlb	0	; select bank0
 23180  0C6F  00B1               	movwf	utoa@fp+1
 23181  0C70  0021               	movlb	1	; select bank1
 23182  0C71  0863               	movf	vfpfcnvrt@fp^(0+128),w
 23183  0C72  0020               	movlb	0	; select bank0
 23184  0C73  00B0               	movwf	utoa@fp
 23185  0C74  0022               	movlb	2	; select bank2
 23186  0C75  0846               	movf	vfpfcnvrt@llu^(0+256),w
 23187  0C76  0020               	movlb	0	; select bank0
 23188  0C77  00B2               	movwf	utoa@d
 23189  0C78  0022               	movlb	2	; select bank2
 23190  0C79  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 23191  0C7A  0020               	movlb	0	; select bank0
 23192  0C7B  00B3               	movwf	utoa@d+1
 23193  0C7C  0022               	movlb	2	; select bank2
 23194  0C7D  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 23195  0C7E  0020               	movlb	0	; select bank0
 23196  0C7F  00B4               	movwf	utoa@d+2
 23197  0C80  0022               	movlb	2	; select bank2
 23198  0C81  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 23199  0C82  0020               	movlb	0	; select bank0
 23200  0C83  00B5               	movwf	utoa@d+3
 23201  0C84  0022               	movlb	2	; select bank2
 23202  0C85  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 23203  0C86  0020               	movlb	0	; select bank0
 23204  0C87  00B6               	movwf	utoa@d+4
 23205  0C88  0022               	movlb	2	; select bank2
 23206  0C89  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 23207  0C8A  0020               	movlb	0	; select bank0
 23208  0C8B  00B7               	movwf	utoa@d+5
 23209  0C8C  0022               	movlb	2	; select bank2
 23210  0C8D  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 23211  0C8E  0020               	movlb	0	; select bank0
 23212  0C8F  00B8               	movwf	utoa@d+6
 23213  0C90  0022               	movlb	2	; select bank2
 23214  0C91  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 23215  0C92  0020               	movlb	0	; select bank0
 23216  0C93  00B9               	movwf	utoa@d+7
 23217  0C94  31A4  2455         	fcall	_utoa
 23218  0C96  0020               	movlb	0	; select bank0
 23219  0C97  0831               	movf	?_utoa+1,w
 23220  0C98  0021               	movlb	1	; select bank1
 23221  0C99  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 23222  0C9A  0020               	movlb	0	; select bank0
 23223  0C9B  0830               	movf	?_utoa,w
 23224  0C9C  0021               	movlb	1	; select bank1
 23225  0C9D  00E3               	movwf	?_vfpfcnvrt^(0+128)
 23226  0C9E  0008               	return
 23227  0C9F                     l8264:	
 23228                           
 23229                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
 23230  0C9F  0021               	movlb	1	; select bank1
 23231  0CA0  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23232  0CA1  0086               	movwf	6
 23233  0CA2  0187               	clrf	7
 23234  0CA3  3F40               	moviw [0]fsr1
 23235  0CA4  00F1               	movwf	strncmp@_l
 23236  0CA5  3F41               	moviw [1]fsr1
 23237  0CA6  00F2               	movwf	strncmp@_l+1
 23238  0CA7  3038               	movlw	low (STR_135| (0+32768))
 23239  0CA8  00F3               	movwf	strncmp@_r
 23240  0CA9  30BB               	movlw	high (STR_135| (0+32768))
 23241  0CAA  00F4               	movwf	strncmp@_r+1
 23242  0CAB  3003               	movlw	3
 23243  0CAC  00F5               	movwf	strncmp@n
 23244  0CAD  3000               	movlw	0
 23245  0CAE  00F6               	movwf	strncmp@n+1
 23246  0CAF  3190  2000  3188   	fcall	_strncmp
 23247  0CB2  0871               	movf	?_strncmp,w
 23248  0CB3  0472               	iorwf	?_strncmp+1,w
 23249  0CB4  1903               	btfsc	3,2
 23250  0CB5  2CCD               	goto	l8268
 23251  0CB6  0021               	movlb	1	; select bank1
 23252  0CB7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23253  0CB8  0086               	movwf	6
 23254  0CB9  0187               	clrf	7
 23255  0CBA  3F40               	moviw [0]fsr1
 23256  0CBB  00F1               	movwf	strncmp@_l
 23257  0CBC  3F41               	moviw [1]fsr1
 23258  0CBD  00F2               	movwf	strncmp@_l+1
 23259  0CBE  3018               	movlw	low (STR_139| (0+32768))
 23260  0CBF  00F3               	movwf	strncmp@_r
 23261  0CC0  30BB               	movlw	high (STR_139| (0+32768))
 23262  0CC1  00F4               	movwf	strncmp@_r+1
 23263  0CC2  3003               	movlw	3
 23264  0CC3  00F5               	movwf	strncmp@n
 23265  0CC4  3000               	movlw	0
 23266  0CC5  00F6               	movwf	strncmp@n+1
 23267  0CC6  3190  2000  3188   	fcall	_strncmp
 23268  0CC9  0871               	movf	?_strncmp,w
 23269  0CCA  0472               	iorwf	?_strncmp+1,w
 23270  0CCB  1D03               	btfss	3,2
 23271  0CCC  2D37               	goto	l8278
 23272  0CCD                     l8268:	
 23273                           
 23274                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
 23275  0CCD  0021               	movlb	1	; select bank1
 23276  0CCE  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23277  0CCF  0086               	movwf	6
 23278  0CD0  0187               	clrf	7
 23279  0CD1  3F40               	moviw [0]fsr1
 23280  0CD2  0022               	movlb	2	; select bank2
 23281  0CD3  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23282  0CD4  3F41               	moviw [1]fsr1
 23283  0CD5  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 23284  0CD6  3002               	movlw	2
 23285  0CD7  0720               	addwf	??_vfpfcnvrt^(0+256),w
 23286  0CD8  0084               	movwf	4
 23287  0CD9  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 23288  0CDA  1803               	skipnc
 23289  0CDB  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 23290  0CDC  0085               	movwf	5
 23291  0CDD  0800               	movf	0,w	;code access
 23292  0CDE  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 23293  0CDF  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 23294  0CE0  00C5               	movwf	vfpfcnvrt@c^(0+256)
 23295                           
 23296                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
 23297  0CE1  0021               	movlb	1	; select bank1
 23298  0CE2  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23299  0CE3  0086               	movwf	6
 23300  0CE4  0187               	clrf	7
 23301  0CE5  3003               	movlw	3
 23302  0CE6  0781               	addwf	1,f
 23303  0CE7  3141               	addfsr 1,1
 23304  0CE8  1803               	skipnc
 23305  0CE9  0A81               	incf	1,f
 23306                           
 23307                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 23308  0CEA  0866               	movf	vfpfcnvrt@ap^(0+128),w
 23309  0CEB  0086               	movwf	6
 23310  0CEC  3001               	movlw	1	; select bank2/3
 23311  0CED  0087               	movwf	7
 23312  0CEE  0801               	movf	1,w
 23313  0CEF  0084               	movwf	4
 23314  0CF0  3001               	movlw	1	; select bank2/3
 23315  0CF1  0085               	movwf	5
 23316  0CF2  3002               	movlw	2
 23317  0CF3  0781               	addwf	1,f
 23318  0CF4  0800               	movf	0,w
 23319  0CF5  0022               	movlb	2	; select bank2
 23320  0CF6  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 23321  0CF7  01C7               	clrf	(vfpfcnvrt@llu+1)^(0+256)
 23322  0CF8  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 23323  0CF9  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 23324  0CFA  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 23325  0CFB  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 23326  0CFC  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 23327  0CFD  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 23328                           
 23329                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
 23330  0CFE  0021               	movlb	1	; select bank1
 23331  0CFF  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23332  0D00  0020               	movlb	0	; select bank0
 23333  0D01  00B1               	movwf	xtoa@fp+1
 23334  0D02  0021               	movlb	1	; select bank1
 23335  0D03  0863               	movf	vfpfcnvrt@fp^(0+128),w
 23336  0D04  0020               	movlb	0	; select bank0
 23337  0D05  00B0               	movwf	xtoa@fp
 23338  0D06  0022               	movlb	2	; select bank2
 23339  0D07  0846               	movf	vfpfcnvrt@llu^(0+256),w
 23340  0D08  0020               	movlb	0	; select bank0
 23341  0D09  00B2               	movwf	xtoa@d
 23342  0D0A  0022               	movlb	2	; select bank2
 23343  0D0B  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 23344  0D0C  0020               	movlb	0	; select bank0
 23345  0D0D  00B3               	movwf	xtoa@d+1
 23346  0D0E  0022               	movlb	2	; select bank2
 23347  0D0F  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 23348  0D10  0020               	movlb	0	; select bank0
 23349  0D11  00B4               	movwf	xtoa@d+2
 23350  0D12  0022               	movlb	2	; select bank2
 23351  0D13  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 23352  0D14  0020               	movlb	0	; select bank0
 23353  0D15  00B5               	movwf	xtoa@d+3
 23354  0D16  0022               	movlb	2	; select bank2
 23355  0D17  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 23356  0D18  0020               	movlb	0	; select bank0
 23357  0D19  00B6               	movwf	xtoa@d+4
 23358  0D1A  0022               	movlb	2	; select bank2
 23359  0D1B  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 23360  0D1C  0020               	movlb	0	; select bank0
 23361  0D1D  00B7               	movwf	xtoa@d+5
 23362  0D1E  0022               	movlb	2	; select bank2
 23363  0D1F  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 23364  0D20  0020               	movlb	0	; select bank0
 23365  0D21  00B8               	movwf	xtoa@d+6
 23366  0D22  0022               	movlb	2	; select bank2
 23367  0D23  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 23368  0D24  0020               	movlb	0	; select bank0
 23369  0D25  00B9               	movwf	xtoa@d+7
 23370  0D26  0022               	movlb	2	; select bank2
 23371  0D27  0845               	movf	vfpfcnvrt@c^(0+256),w
 23372  0D28  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23373  0D29  0820               	movf	??_vfpfcnvrt^(0+256),w
 23374  0D2A  0020               	movlb	0	; select bank0
 23375  0D2B  00BA               	movwf	xtoa@x
 23376  0D2C  319C  24C5         	fcall	_xtoa
 23377  0D2E  0020               	movlb	0	; select bank0
 23378  0D2F  0831               	movf	?_xtoa+1,w
 23379  0D30  0021               	movlb	1	; select bank1
 23380  0D31  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 23381  0D32  0020               	movlb	0	; select bank0
 23382  0D33  0830               	movf	?_xtoa,w
 23383  0D34  0021               	movlb	1	; select bank1
 23384  0D35  00E3               	movwf	?_vfpfcnvrt^(0+128)
 23385  0D36  0008               	return
 23386  0D37                     l8278:	
 23387                           
 23388                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
 23389  0D37  0021               	movlb	1	; select bank1
 23390  0D38  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23391  0D39  0086               	movwf	6
 23392  0D3A  0187               	clrf	7
 23393  0D3B  3F40               	moviw [0]fsr1
 23394  0D3C  00F1               	movwf	strncmp@_l
 23395  0D3D  3F41               	moviw [1]fsr1
 23396  0D3E  00F2               	movwf	strncmp@_l+1
 23397  0D3F  3039               	movlw	low ((STR_135+1)| (0+32768))
 23398  0D40  00F3               	movwf	strncmp@_r
 23399  0D41  30BB               	movlw	high ((STR_135+1)| (0+32768))
 23400  0D42  00F4               	movwf	strncmp@_r+1
 23401  0D43  3002               	movlw	2
 23402  0D44  00F5               	movwf	strncmp@n
 23403  0D45  3000               	movlw	0
 23404  0D46  00F6               	movwf	strncmp@n+1
 23405  0D47  3190  2000  3188   	fcall	_strncmp
 23406  0D4A  0871               	movf	?_strncmp,w
 23407  0D4B  0472               	iorwf	?_strncmp+1,w
 23408  0D4C  1903               	btfsc	3,2
 23409  0D4D  2D65               	goto	l8282
 23410  0D4E  0021               	movlb	1	; select bank1
 23411  0D4F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23412  0D50  0086               	movwf	6
 23413  0D51  0187               	clrf	7
 23414  0D52  3F40               	moviw [0]fsr1
 23415  0D53  00F1               	movwf	strncmp@_l
 23416  0D54  3F41               	moviw [1]fsr1
 23417  0D55  00F2               	movwf	strncmp@_l+1
 23418  0D56  3019               	movlw	low ((STR_139+1)| (0+32768))
 23419  0D57  00F3               	movwf	strncmp@_r
 23420  0D58  30BB               	movlw	high ((STR_139+1)| (0+32768))
 23421  0D59  00F4               	movwf	strncmp@_r+1
 23422  0D5A  3002               	movlw	2
 23423  0D5B  00F5               	movwf	strncmp@n
 23424  0D5C  3000               	movlw	0
 23425  0D5D  00F6               	movwf	strncmp@n+1
 23426  0D5E  3190  2000  3188   	fcall	_strncmp
 23427  0D61  0871               	movf	?_strncmp,w
 23428  0D62  0472               	iorwf	?_strncmp+1,w
 23429  0D63  1D03               	btfss	3,2
 23430  0D64  2DD0               	goto	l8292
 23431  0D65                     l8282:	
 23432                           
 23433                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
 23434  0D65  0021               	movlb	1	; select bank1
 23435  0D66  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23436  0D67  0086               	movwf	6
 23437  0D68  0187               	clrf	7
 23438  0D69  3F40               	moviw [0]fsr1
 23439  0D6A  0022               	movlb	2	; select bank2
 23440  0D6B  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23441  0D6C  3F41               	moviw [1]fsr1
 23442  0D6D  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 23443  0D6E  3001               	movlw	1
 23444  0D6F  0720               	addwf	??_vfpfcnvrt^(0+256),w
 23445  0D70  0084               	movwf	4
 23446  0D71  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 23447  0D72  1803               	skipnc
 23448  0D73  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 23449  0D74  0085               	movwf	5
 23450  0D75  0800               	movf	0,w	;code access
 23451  0D76  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 23452  0D77  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 23453  0D78  00C5               	movwf	vfpfcnvrt@c^(0+256)
 23454                           
 23455                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
 23456  0D79  0021               	movlb	1	; select bank1
 23457  0D7A  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23458  0D7B  0086               	movwf	6
 23459  0D7C  0187               	clrf	7
 23460  0D7D  3002               	movlw	2
 23461  0D7E  0781               	addwf	1,f
 23462  0D7F  3141               	addfsr 1,1
 23463  0D80  1803               	skipnc
 23464  0D81  0A81               	incf	1,f
 23465                           
 23466                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 23467  0D82  0866               	movf	vfpfcnvrt@ap^(0+128),w
 23468  0D83  0086               	movwf	6
 23469  0D84  3001               	movlw	1	; select bank2/3
 23470  0D85  0087               	movwf	7
 23471  0D86  0801               	movf	1,w
 23472  0D87  0084               	movwf	4
 23473  0D88  3001               	movlw	1	; select bank2/3
 23474  0D89  0085               	movwf	5
 23475  0D8A  3002               	movlw	2
 23476  0D8B  0781               	addwf	1,f
 23477  0D8C  3F00               	moviw [0]fsr0
 23478  0D8D  0022               	movlb	2	; select bank2
 23479  0D8E  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 23480  0D8F  3F01               	moviw [1]fsr0
 23481  0D90  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 23482  0D91  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 23483  0D92  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 23484  0D93  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 23485  0D94  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 23486  0D95  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 23487  0D96  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 23488                           
 23489                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1269:      
      +                                 return xtoa(fp, llu, c);
 23490  0D97  0021               	movlb	1	; select bank1
 23491  0D98  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23492  0D99  0020               	movlb	0	; select bank0
 23493  0D9A  00B1               	movwf	xtoa@fp+1
 23494  0D9B  0021               	movlb	1	; select bank1
 23495  0D9C  0863               	movf	vfpfcnvrt@fp^(0+128),w
 23496  0D9D  0020               	movlb	0	; select bank0
 23497  0D9E  00B0               	movwf	xtoa@fp
 23498  0D9F  0022               	movlb	2	; select bank2
 23499  0DA0  0846               	movf	vfpfcnvrt@llu^(0+256),w
 23500  0DA1  0020               	movlb	0	; select bank0
 23501  0DA2  00B2               	movwf	xtoa@d
 23502  0DA3  0022               	movlb	2	; select bank2
 23503  0DA4  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 23504  0DA5  0020               	movlb	0	; select bank0
 23505  0DA6  00B3               	movwf	xtoa@d+1
 23506  0DA7  0022               	movlb	2	; select bank2
 23507  0DA8  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 23508  0DA9  0020               	movlb	0	; select bank0
 23509  0DAA  00B4               	movwf	xtoa@d+2
 23510  0DAB  0022               	movlb	2	; select bank2
 23511  0DAC  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 23512  0DAD  0020               	movlb	0	; select bank0
 23513  0DAE  00B5               	movwf	xtoa@d+3
 23514  0DAF  0022               	movlb	2	; select bank2
 23515  0DB0  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 23516  0DB1  0020               	movlb	0	; select bank0
 23517  0DB2  00B6               	movwf	xtoa@d+4
 23518  0DB3  0022               	movlb	2	; select bank2
 23519  0DB4  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 23520  0DB5  0020               	movlb	0	; select bank0
 23521  0DB6  00B7               	movwf	xtoa@d+5
 23522  0DB7  0022               	movlb	2	; select bank2
 23523  0DB8  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 23524  0DB9  0020               	movlb	0	; select bank0
 23525  0DBA  00B8               	movwf	xtoa@d+6
 23526  0DBB  0022               	movlb	2	; select bank2
 23527  0DBC  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 23528  0DBD  0020               	movlb	0	; select bank0
 23529  0DBE  00B9               	movwf	xtoa@d+7
 23530  0DBF  0022               	movlb	2	; select bank2
 23531  0DC0  0845               	movf	vfpfcnvrt@c^(0+256),w
 23532  0DC1  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23533  0DC2  0820               	movf	??_vfpfcnvrt^(0+256),w
 23534  0DC3  0020               	movlb	0	; select bank0
 23535  0DC4  00BA               	movwf	xtoa@x
 23536  0DC5  319C  24C5         	fcall	_xtoa
 23537  0DC7  0020               	movlb	0	; select bank0
 23538  0DC8  0831               	movf	?_xtoa+1,w
 23539  0DC9  0021               	movlb	1	; select bank1
 23540  0DCA  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 23541  0DCB  0020               	movlb	0	; select bank0
 23542  0DCC  0830               	movf	?_xtoa,w
 23543  0DCD  0021               	movlb	1	; select bank1
 23544  0DCE  00E3               	movwf	?_vfpfcnvrt^(0+128)
 23545  0DCF  0008               	return
 23546  0DD0                     l8292:	
 23547                           
 23548                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 23549  0DD0  0021               	movlb	1	; select bank1
 23550  0DD1  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23551  0DD2  0086               	movwf	6
 23552  0DD3  0187               	clrf	7
 23553  0DD4  3F40               	moviw [0]fsr1
 23554  0DD5  0022               	movlb	2	; select bank2
 23555  0DD6  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23556  0DD7  3F41               	moviw [1]fsr1
 23557  0DD8  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 23558  0DD9  0820               	movf	??_vfpfcnvrt^(0+256),w
 23559  0DDA  0084               	movwf	4
 23560  0DDB  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 23561  0DDC  0085               	movwf	5
 23562  0DDD  0012               	moviw fsr0++
 23563  0DDE  3A78               	xorlw	120
 23564  0DDF  1903               	btfsc	3,2
 23565  0DE0  2DF2               	goto	l8296
 23566  0DE1  0021               	movlb	1	; select bank1
 23567  0DE2  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23568  0DE3  0086               	movwf	6
 23569  0DE4  0187               	clrf	7
 23570  0DE5  3F40               	moviw [0]fsr1
 23571  0DE6  0022               	movlb	2	; select bank2
 23572  0DE7  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23573  0DE8  3F41               	moviw [1]fsr1
 23574  0DE9  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 23575  0DEA  0820               	movf	??_vfpfcnvrt^(0+256),w
 23576  0DEB  0084               	movwf	4
 23577  0DEC  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 23578  0DED  0085               	movwf	5
 23579  0DEE  0012               	moviw fsr0++
 23580  0DEF  3A58               	xorlw	88
 23581  0DF0  1D03               	btfss	3,2
 23582  0DF1  2E5A               	goto	l8306
 23583  0DF2                     l8296:	
 23584                           
 23585                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 23586  0DF2  0021               	movlb	1	; select bank1
 23587  0DF3  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23588  0DF4  0086               	movwf	6
 23589  0DF5  0187               	clrf	7
 23590  0DF6  3F40               	moviw [0]fsr1
 23591  0DF7  0022               	movlb	2	; select bank2
 23592  0DF8  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23593  0DF9  3F41               	moviw [1]fsr1
 23594  0DFA  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 23595  0DFB  0820               	movf	??_vfpfcnvrt^(0+256),w
 23596  0DFC  0084               	movwf	4
 23597  0DFD  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 23598  0DFE  0085               	movwf	5
 23599  0DFF  0800               	movf	0,w	;code access
 23600  0E00  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 23601  0E01  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 23602  0E02  00C5               	movwf	vfpfcnvrt@c^(0+256)
 23603                           
 23604                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 23605  0E03  0021               	movlb	1	; select bank1
 23606  0E04  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23607  0E05  0086               	movwf	6
 23608  0E06  0187               	clrf	7
 23609  0E07  3001               	movlw	1
 23610  0E08  0781               	addwf	1,f
 23611  0E09  3141               	addfsr 1,1
 23612  0E0A  1803               	skipnc
 23613  0E0B  0A81               	incf	1,f
 23614                           
 23615                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 23616  0E0C  0866               	movf	vfpfcnvrt@ap^(0+128),w
 23617  0E0D  0086               	movwf	6
 23618  0E0E  3001               	movlw	1	; select bank2/3
 23619  0E0F  0087               	movwf	7
 23620  0E10  0801               	movf	1,w
 23621  0E11  0084               	movwf	4
 23622  0E12  3001               	movlw	1	; select bank2/3
 23623  0E13  0085               	movwf	5
 23624  0E14  3002               	movlw	2
 23625  0E15  0781               	addwf	1,f
 23626  0E16  3F00               	moviw [0]fsr0
 23627  0E17  0022               	movlb	2	; select bank2
 23628  0E18  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 23629  0E19  3F01               	moviw [1]fsr0
 23630  0E1A  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 23631  0E1B  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 23632  0E1C  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 23633  0E1D  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 23634  0E1E  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 23635  0E1F  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 23636  0E20  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 23637                           
 23638                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 23639  0E21  0021               	movlb	1	; select bank1
 23640  0E22  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23641  0E23  0020               	movlb	0	; select bank0
 23642  0E24  00B1               	movwf	xtoa@fp+1
 23643  0E25  0021               	movlb	1	; select bank1
 23644  0E26  0863               	movf	vfpfcnvrt@fp^(0+128),w
 23645  0E27  0020               	movlb	0	; select bank0
 23646  0E28  00B0               	movwf	xtoa@fp
 23647  0E29  0022               	movlb	2	; select bank2
 23648  0E2A  0846               	movf	vfpfcnvrt@llu^(0+256),w
 23649  0E2B  0020               	movlb	0	; select bank0
 23650  0E2C  00B2               	movwf	xtoa@d
 23651  0E2D  0022               	movlb	2	; select bank2
 23652  0E2E  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 23653  0E2F  0020               	movlb	0	; select bank0
 23654  0E30  00B3               	movwf	xtoa@d+1
 23655  0E31  0022               	movlb	2	; select bank2
 23656  0E32  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 23657  0E33  0020               	movlb	0	; select bank0
 23658  0E34  00B4               	movwf	xtoa@d+2
 23659  0E35  0022               	movlb	2	; select bank2
 23660  0E36  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 23661  0E37  0020               	movlb	0	; select bank0
 23662  0E38  00B5               	movwf	xtoa@d+3
 23663  0E39  0022               	movlb	2	; select bank2
 23664  0E3A  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 23665  0E3B  0020               	movlb	0	; select bank0
 23666  0E3C  00B6               	movwf	xtoa@d+4
 23667  0E3D  0022               	movlb	2	; select bank2
 23668  0E3E  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 23669  0E3F  0020               	movlb	0	; select bank0
 23670  0E40  00B7               	movwf	xtoa@d+5
 23671  0E41  0022               	movlb	2	; select bank2
 23672  0E42  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 23673  0E43  0020               	movlb	0	; select bank0
 23674  0E44  00B8               	movwf	xtoa@d+6
 23675  0E45  0022               	movlb	2	; select bank2
 23676  0E46  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 23677  0E47  0020               	movlb	0	; select bank0
 23678  0E48  00B9               	movwf	xtoa@d+7
 23679  0E49  0022               	movlb	2	; select bank2
 23680  0E4A  0845               	movf	vfpfcnvrt@c^(0+256),w
 23681  0E4B  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23682  0E4C  0820               	movf	??_vfpfcnvrt^(0+256),w
 23683  0E4D  0020               	movlb	0	; select bank0
 23684  0E4E  00BA               	movwf	xtoa@x
 23685  0E4F  319C  24C5         	fcall	_xtoa
 23686  0E51  0020               	movlb	0	; select bank0
 23687  0E52  0831               	movf	?_xtoa+1,w
 23688  0E53  0021               	movlb	1	; select bank1
 23689  0E54  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 23690  0E55  0020               	movlb	0	; select bank0
 23691  0E56  0830               	movf	?_xtoa,w
 23692  0E57  0021               	movlb	1	; select bank1
 23693  0E58  00E3               	movwf	?_vfpfcnvrt^(0+128)
 23694  0E59  0008               	return
 23695  0E5A                     l8306:	
 23696                           
 23697                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1285:      
      +                             if (!strncmp(*fmt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", 
      +                          ((sizeof("lX")/sizeof("lX"[0]))-1))) {
 23698  0E5A  0021               	movlb	1	; select bank1
 23699  0E5B  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23700  0E5C  0086               	movwf	6
 23701  0E5D  0187               	clrf	7
 23702  0E5E  3F40               	moviw [0]fsr1
 23703  0E5F  00F1               	movwf	strncmp@_l
 23704  0E60  3F41               	moviw [1]fsr1
 23705  0E61  00F2               	movwf	strncmp@_l+1
 23706  0E62  3063               	movlw	low (STR_153| (0+32768))
 23707  0E63  00F3               	movwf	strncmp@_r
 23708  0E64  30BB               	movlw	high (STR_153| (0+32768))
 23709  0E65  00F4               	movwf	strncmp@_r+1
 23710  0E66  3002               	movlw	2
 23711  0E67  00F5               	movwf	strncmp@n
 23712  0E68  3000               	movlw	0
 23713  0E69  00F6               	movwf	strncmp@n+1
 23714  0E6A  3190  2000  3188   	fcall	_strncmp
 23715  0E6D  0871               	movf	?_strncmp,w
 23716  0E6E  0472               	iorwf	?_strncmp+1,w
 23717  0E6F  1903               	btfsc	3,2
 23718  0E70  2E88               	goto	l8310
 23719  0E71  0021               	movlb	1	; select bank1
 23720  0E72  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23721  0E73  0086               	movwf	6
 23722  0E74  0187               	clrf	7
 23723  0E75  3F40               	moviw [0]fsr1
 23724  0E76  00F1               	movwf	strncmp@_l
 23725  0E77  3F41               	moviw [1]fsr1
 23726  0E78  00F2               	movwf	strncmp@_l+1
 23727  0E79  303C               	movlw	low (STR_157| (0+32768))
 23728  0E7A  00F3               	movwf	strncmp@_r
 23729  0E7B  30BB               	movlw	high (STR_157| (0+32768))
 23730  0E7C  00F4               	movwf	strncmp@_r+1
 23731  0E7D  3002               	movlw	2
 23732  0E7E  00F5               	movwf	strncmp@n
 23733  0E7F  3000               	movlw	0
 23734  0E80  00F6               	movwf	strncmp@n+1
 23735  0E81  3190  2000  3188   	fcall	_strncmp
 23736  0E84  0871               	movf	?_strncmp,w
 23737  0E85  0472               	iorwf	?_strncmp+1,w
 23738  0E86  1D03               	btfss	3,2
 23739  0E87  2F0D               	goto	l8320
 23740  0E88                     l8310:	
 23741                           
 23742                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1286: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1288:           
      +                            c = (*fmt)[1];
 23743  0E88  0021               	movlb	1	; select bank1
 23744  0E89  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23745  0E8A  0086               	movwf	6
 23746  0E8B  0187               	clrf	7
 23747  0E8C  3F40               	moviw [0]fsr1
 23748  0E8D  0022               	movlb	2	; select bank2
 23749  0E8E  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23750  0E8F  3F41               	moviw [1]fsr1
 23751  0E90  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 23752  0E91  3001               	movlw	1
 23753  0E92  0720               	addwf	??_vfpfcnvrt^(0+256),w
 23754  0E93  0084               	movwf	4
 23755  0E94  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 23756  0E95  1803               	skipnc
 23757  0E96  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 23758  0E97  0085               	movwf	5
 23759  0E98  0800               	movf	0,w	;code access
 23760  0E99  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 23761  0E9A  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 23762  0E9B  00C5               	movwf	vfpfcnvrt@c^(0+256)
 23763                           
 23764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1289:      
      +                                 *fmt += ((sizeof("lx")/sizeof("lx"[0]))-1);
 23765  0E9C  0021               	movlb	1	; select bank1
 23766  0E9D  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23767  0E9E  0086               	movwf	6
 23768  0E9F  0187               	clrf	7
 23769  0EA0  3002               	movlw	2
 23770  0EA1  0781               	addwf	1,f
 23771  0EA2  3141               	addfsr 1,1
 23772  0EA3  1803               	skipnc
 23773  0EA4  0A81               	incf	1,f
 23774                           
 23775                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1290:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 23776  0EA5  0866               	movf	vfpfcnvrt@ap^(0+128),w
 23777  0EA6  0086               	movwf	6
 23778  0EA7  3001               	movlw	1	; select bank2/3
 23779  0EA8  0087               	movwf	7
 23780  0EA9  0801               	movf	1,w
 23781  0EAA  0084               	movwf	4
 23782  0EAB  3001               	movlw	1	; select bank2/3
 23783  0EAC  0085               	movwf	5
 23784  0EAD  3004               	movlw	4
 23785  0EAE  0781               	addwf	1,f
 23786  0EAF  3F00               	moviw [0]fsr0
 23787  0EB0  0022               	movlb	2	; select bank2
 23788  0EB1  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23789  0EB2  3F01               	moviw [1]fsr0
 23790  0EB3  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 23791  0EB4  3F02               	moviw [2]fsr0
 23792  0EB5  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 23793  0EB6  3F03               	moviw [3]fsr0
 23794  0EB7  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 23795  0EB8  0820               	movf	??_vfpfcnvrt^(0+256),w
 23796  0EB9  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 23797  0EBA  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 23798  0EBB  00A5               	movwf	((??_vfpfcnvrt+4)^(0+256)+1)
 23799  0EBC  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 23800  0EBD  00A6               	movwf	((??_vfpfcnvrt+4)^(0+256)+2)
 23801  0EBE  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 23802  0EBF  00A7               	movwf	((??_vfpfcnvrt+4)^(0+256)+3)
 23803  0EC0  01A8               	clrf	((??_vfpfcnvrt+4)^(0+256)+4)
 23804  0EC1  01A9               	clrf	((??_vfpfcnvrt+4)^(0+256)+5)
 23805  0EC2  01AA               	clrf	((??_vfpfcnvrt+4)^(0+256)+6)
 23806  0EC3  01AB               	clrf	((??_vfpfcnvrt+4)^(0+256)+7)
 23807  0EC4  082B               	movf	((??_vfpfcnvrt+4)^(0+256)+7),w
 23808  0EC5  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 23809  0EC6  082A               	movf	((??_vfpfcnvrt+4)^(0+256)+6),w
 23810  0EC7  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 23811  0EC8  0829               	movf	((??_vfpfcnvrt+4)^(0+256)+5),w
 23812  0EC9  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 23813  0ECA  0828               	movf	((??_vfpfcnvrt+4)^(0+256)+4),w
 23814  0ECB  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 23815  0ECC  0827               	movf	((??_vfpfcnvrt+4)^(0+256)+3),w
 23816  0ECD  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 23817  0ECE  0826               	movf	((??_vfpfcnvrt+4)^(0+256)+2),w
 23818  0ECF  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 23819  0ED0  0825               	movf	((??_vfpfcnvrt+4)^(0+256)+1),w
 23820  0ED1  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 23821  0ED2  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 23822  0ED3  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 23823                           
 23824                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1292:      
      +                                 return xtoa(fp, llu, c);
 23825  0ED4  0021               	movlb	1	; select bank1
 23826  0ED5  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23827  0ED6  0020               	movlb	0	; select bank0
 23828  0ED7  00B1               	movwf	xtoa@fp+1
 23829  0ED8  0021               	movlb	1	; select bank1
 23830  0ED9  0863               	movf	vfpfcnvrt@fp^(0+128),w
 23831  0EDA  0020               	movlb	0	; select bank0
 23832  0EDB  00B0               	movwf	xtoa@fp
 23833  0EDC  0022               	movlb	2	; select bank2
 23834  0EDD  0846               	movf	vfpfcnvrt@llu^(0+256),w
 23835  0EDE  0020               	movlb	0	; select bank0
 23836  0EDF  00B2               	movwf	xtoa@d
 23837  0EE0  0022               	movlb	2	; select bank2
 23838  0EE1  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 23839  0EE2  0020               	movlb	0	; select bank0
 23840  0EE3  00B3               	movwf	xtoa@d+1
 23841  0EE4  0022               	movlb	2	; select bank2
 23842  0EE5  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 23843  0EE6  0020               	movlb	0	; select bank0
 23844  0EE7  00B4               	movwf	xtoa@d+2
 23845  0EE8  0022               	movlb	2	; select bank2
 23846  0EE9  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 23847  0EEA  0020               	movlb	0	; select bank0
 23848  0EEB  00B5               	movwf	xtoa@d+3
 23849  0EEC  0022               	movlb	2	; select bank2
 23850  0EED  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 23851  0EEE  0020               	movlb	0	; select bank0
 23852  0EEF  00B6               	movwf	xtoa@d+4
 23853  0EF0  0022               	movlb	2	; select bank2
 23854  0EF1  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 23855  0EF2  0020               	movlb	0	; select bank0
 23856  0EF3  00B7               	movwf	xtoa@d+5
 23857  0EF4  0022               	movlb	2	; select bank2
 23858  0EF5  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 23859  0EF6  0020               	movlb	0	; select bank0
 23860  0EF7  00B8               	movwf	xtoa@d+6
 23861  0EF8  0022               	movlb	2	; select bank2
 23862  0EF9  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 23863  0EFA  0020               	movlb	0	; select bank0
 23864  0EFB  00B9               	movwf	xtoa@d+7
 23865  0EFC  0022               	movlb	2	; select bank2
 23866  0EFD  0845               	movf	vfpfcnvrt@c^(0+256),w
 23867  0EFE  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23868  0EFF  0820               	movf	??_vfpfcnvrt^(0+256),w
 23869  0F00  0020               	movlb	0	; select bank0
 23870  0F01  00BA               	movwf	xtoa@x
 23871  0F02  319C  24C5         	fcall	_xtoa
 23872  0F04  0020               	movlb	0	; select bank0
 23873  0F05  0831               	movf	?_xtoa+1,w
 23874  0F06  0021               	movlb	1	; select bank1
 23875  0F07  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 23876  0F08  0020               	movlb	0	; select bank0
 23877  0F09  0830               	movf	?_xtoa,w
 23878  0F0A  0021               	movlb	1	; select bank1
 23879  0F0B  00E3               	movwf	?_vfpfcnvrt^(0+128)
 23880  0F0C  0008               	return
 23881  0F0D                     l8320:	
 23882                           
 23883                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
 23884  0F0D  0021               	movlb	1	; select bank1
 23885  0F0E  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23886  0F0F  0086               	movwf	6
 23887  0F10  0187               	clrf	7
 23888  0F11  3F40               	moviw [0]fsr1
 23889  0F12  00F1               	movwf	strncmp@_l
 23890  0F13  3F41               	moviw [1]fsr1
 23891  0F14  00F2               	movwf	strncmp@_l+1
 23892  0F15  3066               	movlw	low (STR_162| (0+32768))
 23893  0F16  00F3               	movwf	strncmp@_r
 23894  0F17  30BB               	movlw	high (STR_162| (0+32768))
 23895  0F18  00F4               	movwf	strncmp@_r+1
 23896  0F19  3002               	movlw	2
 23897  0F1A  00F5               	movwf	strncmp@n
 23898  0F1B  3000               	movlw	0
 23899  0F1C  00F6               	movwf	strncmp@n+1
 23900  0F1D  3190  2000  3188   	fcall	_strncmp
 23901  0F20  0871               	movf	?_strncmp,w
 23902  0F21  0472               	iorwf	?_strncmp+1,w
 23903  0F22  1903               	btfsc	3,2
 23904  0F23  2F3B               	goto	l8324
 23905  0F24  0021               	movlb	1	; select bank1
 23906  0F25  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23907  0F26  0086               	movwf	6
 23908  0F27  0187               	clrf	7
 23909  0F28  3F40               	moviw [0]fsr1
 23910  0F29  00F1               	movwf	strncmp@_l
 23911  0F2A  3F41               	moviw [1]fsr1
 23912  0F2B  00F2               	movwf	strncmp@_l+1
 23913  0F2C  303F               	movlw	low (STR_166| (0+32768))
 23914  0F2D  00F3               	movwf	strncmp@_r
 23915  0F2E  30BB               	movlw	high (STR_166| (0+32768))
 23916  0F2F  00F4               	movwf	strncmp@_r+1
 23917  0F30  3002               	movlw	2
 23918  0F31  00F5               	movwf	strncmp@n
 23919  0F32  3000               	movlw	0
 23920  0F33  00F6               	movwf	strncmp@n+1
 23921  0F34  3190  2000  3188   	fcall	_strncmp
 23922  0F37  0871               	movf	?_strncmp,w
 23923  0F38  0472               	iorwf	?_strncmp+1,w
 23924  0F39  1D03               	btfss	3,2
 23925  0F3A  2FA6               	goto	l8334
 23926  0F3B                     l8324:	
 23927                           
 23928                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
 23929  0F3B  0021               	movlb	1	; select bank1
 23930  0F3C  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23931  0F3D  0086               	movwf	6
 23932  0F3E  0187               	clrf	7
 23933  0F3F  3F40               	moviw [0]fsr1
 23934  0F40  0022               	movlb	2	; select bank2
 23935  0F41  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23936  0F42  3F41               	moviw [1]fsr1
 23937  0F43  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 23938  0F44  3001               	movlw	1
 23939  0F45  0720               	addwf	??_vfpfcnvrt^(0+256),w
 23940  0F46  0084               	movwf	4
 23941  0F47  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 23942  0F48  1803               	skipnc
 23943  0F49  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 23944  0F4A  0085               	movwf	5
 23945  0F4B  0800               	movf	0,w	;code access
 23946  0F4C  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 23947  0F4D  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 23948  0F4E  00C5               	movwf	vfpfcnvrt@c^(0+256)
 23949                           
 23950                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
 23951  0F4F  0021               	movlb	1	; select bank1
 23952  0F50  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23953  0F51  0086               	movwf	6
 23954  0F52  0187               	clrf	7
 23955  0F53  3002               	movlw	2
 23956  0F54  0781               	addwf	1,f
 23957  0F55  3141               	addfsr 1,1
 23958  0F56  1803               	skipnc
 23959  0F57  0A81               	incf	1,f
 23960                           
 23961                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 23962  0F58  0866               	movf	vfpfcnvrt@ap^(0+128),w
 23963  0F59  0086               	movwf	6
 23964  0F5A  3001               	movlw	1	; select bank2/3
 23965  0F5B  0087               	movwf	7
 23966  0F5C  0801               	movf	1,w
 23967  0F5D  0084               	movwf	4
 23968  0F5E  3001               	movlw	1	; select bank2/3
 23969  0F5F  0085               	movwf	5
 23970  0F60  3002               	movlw	2
 23971  0F61  0781               	addwf	1,f
 23972  0F62  3F00               	moviw [0]fsr0
 23973  0F63  0022               	movlb	2	; select bank2
 23974  0F64  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 23975  0F65  3F01               	moviw [1]fsr0
 23976  0F66  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 23977  0F67  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 23978  0F68  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 23979  0F69  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 23980  0F6A  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 23981  0F6B  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 23982  0F6C  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 23983                           
 23984                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1344:      
      +                                 return xtoa(fp, llu, c);
 23985  0F6D  0021               	movlb	1	; select bank1
 23986  0F6E  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23987  0F6F  0020               	movlb	0	; select bank0
 23988  0F70  00B1               	movwf	xtoa@fp+1
 23989  0F71  0021               	movlb	1	; select bank1
 23990  0F72  0863               	movf	vfpfcnvrt@fp^(0+128),w
 23991  0F73  0020               	movlb	0	; select bank0
 23992  0F74  00B0               	movwf	xtoa@fp
 23993  0F75  0022               	movlb	2	; select bank2
 23994  0F76  0846               	movf	vfpfcnvrt@llu^(0+256),w
 23995  0F77  0020               	movlb	0	; select bank0
 23996  0F78  00B2               	movwf	xtoa@d
 23997  0F79  0022               	movlb	2	; select bank2
 23998  0F7A  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 23999  0F7B  0020               	movlb	0	; select bank0
 24000  0F7C  00B3               	movwf	xtoa@d+1
 24001  0F7D  0022               	movlb	2	; select bank2
 24002  0F7E  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 24003  0F7F  0020               	movlb	0	; select bank0
 24004  0F80  00B4               	movwf	xtoa@d+2
 24005  0F81  0022               	movlb	2	; select bank2
 24006  0F82  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 24007  0F83  0020               	movlb	0	; select bank0
 24008  0F84  00B5               	movwf	xtoa@d+3
 24009  0F85  0022               	movlb	2	; select bank2
 24010  0F86  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 24011  0F87  0020               	movlb	0	; select bank0
 24012  0F88  00B6               	movwf	xtoa@d+4
 24013  0F89  0022               	movlb	2	; select bank2
 24014  0F8A  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 24015  0F8B  0020               	movlb	0	; select bank0
 24016  0F8C  00B7               	movwf	xtoa@d+5
 24017  0F8D  0022               	movlb	2	; select bank2
 24018  0F8E  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 24019  0F8F  0020               	movlb	0	; select bank0
 24020  0F90  00B8               	movwf	xtoa@d+6
 24021  0F91  0022               	movlb	2	; select bank2
 24022  0F92  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 24023  0F93  0020               	movlb	0	; select bank0
 24024  0F94  00B9               	movwf	xtoa@d+7
 24025  0F95  0022               	movlb	2	; select bank2
 24026  0F96  0845               	movf	vfpfcnvrt@c^(0+256),w
 24027  0F97  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24028  0F98  0820               	movf	??_vfpfcnvrt^(0+256),w
 24029  0F99  0020               	movlb	0	; select bank0
 24030  0F9A  00BA               	movwf	xtoa@x
 24031  0F9B  319C  24C5         	fcall	_xtoa
 24032  0F9D  0020               	movlb	0	; select bank0
 24033  0F9E  0831               	movf	?_xtoa+1,w
 24034  0F9F  0021               	movlb	1	; select bank1
 24035  0FA0  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 24036  0FA1  0020               	movlb	0	; select bank0
 24037  0FA2  0830               	movf	?_xtoa,w
 24038  0FA3  0021               	movlb	1	; select bank1
 24039  0FA4  00E3               	movwf	?_vfpfcnvrt^(0+128)
 24040  0FA5  0008               	return
 24041  0FA6                     l8334:	
 24042                           
 24043                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 24044  0FA6  0021               	movlb	1	; select bank1
 24045  0FA7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 24046  0FA8  0086               	movwf	6
 24047  0FA9  0187               	clrf	7
 24048  0FAA  3F40               	moviw [0]fsr1
 24049  0FAB  0022               	movlb	2	; select bank2
 24050  0FAC  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24051  0FAD  3F41               	moviw [1]fsr1
 24052  0FAE  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 24053  0FAF  0820               	movf	??_vfpfcnvrt^(0+256),w
 24054  0FB0  0084               	movwf	4
 24055  0FB1  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 24056  0FB2  0085               	movwf	5
 24057  0FB3  0012               	moviw fsr0++
 24058  0FB4  3A25               	xorlw	37
 24059  0FB5  1D03               	btfss	3,2
 24060  0FB6  2FD0               	goto	l8344
 24061                           
 24062                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 24063  0FB7  0021               	movlb	1	; select bank1
 24064  0FB8  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 24065  0FB9  0086               	movwf	6
 24066  0FBA  0187               	clrf	7
 24067  0FBB  3001               	movlw	1
 24068  0FBC  0781               	addwf	1,f
 24069  0FBD  3141               	addfsr 1,1
 24070  0FBE  1803               	skipnc
 24071  0FBF  0A81               	incf	1,f
 24072                           
 24073                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 24074  0FC0  3025               	movlw	37
 24075  0FC1  00F1               	movwf	fputc@c
 24076  0FC2  3000               	movlw	0
 24077  0FC3  00F2               	movwf	fputc@c+1
 24078  0FC4  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 24079  0FC5  00F4               	movwf	fputc@fp+1
 24080  0FC6  0863               	movf	vfpfcnvrt@fp^(0+128),w
 24081  0FC7  00F3               	movwf	fputc@fp
 24082  0FC8  31B6  260F         	fcall	_fputc
 24083  0FCA                     l8340:	
 24084                           
 24085                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 24086  0FCA  3001               	movlw	1
 24087  0FCB  0021               	movlb	1	; select bank1
 24088  0FCC  00E3               	movwf	?_vfpfcnvrt^(0+128)
 24089  0FCD  3000               	movlw	0
 24090  0FCE  00E4               	movwf	(?_vfpfcnvrt^(0+128)+1)
 24091  0FCF  0008               	return
 24092  0FD0                     l8344:	
 24093                           
 24094                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 24095  0FD0  0021               	movlb	1	; select bank1
 24096  0FD1  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 24097  0FD2  0086               	movwf	6
 24098  0FD3  0187               	clrf	7
 24099  0FD4  3001               	movlw	1
 24100  0FD5  0781               	addwf	1,f
 24101  0FD6  3141               	addfsr 1,1
 24102  0FD7  1803               	skipnc
 24103  0FD8  0A81               	incf	1,f
 24104  0FD9  2973               	goto	l8142
 24105  0FDA                     l8350:	
 24106                           
 24107                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 24108  0FDA  0021               	movlb	1	; select bank1
 24109  0FDB  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 24110  0FDC  0086               	movwf	6
 24111  0FDD  0187               	clrf	7
 24112  0FDE  3F40               	moviw [0]fsr1
 24113  0FDF  0022               	movlb	2	; select bank2
 24114  0FE0  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24115  0FE1  3F41               	moviw [1]fsr1
 24116  0FE2  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 24117  0FE3  0820               	movf	??_vfpfcnvrt^(0+256),w
 24118  0FE4  0084               	movwf	4
 24119  0FE5  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 24120  0FE6  0085               	movwf	5
 24121  0FE7  0800               	movf	0,w	;code access
 24122  0FE8  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 24123  0FE9  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
 24124  0FEA  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 24125  0FEB  00F1               	movwf	fputc@c
 24126  0FEC  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 24127  0FED  00F2               	movwf	fputc@c+1
 24128  0FEE  0021               	movlb	1	; select bank1
 24129  0FEF  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 24130  0FF0  00F4               	movwf	fputc@fp+1
 24131  0FF1  0863               	movf	vfpfcnvrt@fp^(0+128),w
 24132  0FF2  00F3               	movwf	fputc@fp
 24133  0FF3  31B6  260F  3188   	fcall	_fputc
 24134                           
 24135                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 24136  0FF6  0021               	movlb	1	; select bank1
 24137  0FF7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 24138  0FF8  0086               	movwf	6
 24139  0FF9  0187               	clrf	7
 24140  0FFA  3001               	movlw	1
 24141  0FFB  0781               	addwf	1,f
 24142  0FFC  3141               	addfsr 1,1
 24143  0FFD  1803               	skipnc
 24144  0FFE  0A81               	incf	1,f
 24145  0FFF  2FCA               	goto	l8340
 24146  1000                     __end_of_vfpfcnvrt:	


Data Sizes:
    Strings     783
    Constant    90
    Data        7
    BSS         142
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     80      80
    BANK3            80      2      70
    BANK4            80      0      80
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           65      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    vsnprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK2[1]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[19]), STR_21(CODE[20]), 
		 -> STR_20(CODE[20]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_168(CODE[3]), STR_164(CODE[3]), STR_159(CODE[3]), STR_155(CODE[3]), 
		 -> STR_150(CODE[3]), STR_146(CODE[3]), STR_141(CODE[4]), STR_137(CODE[4]), 
		 -> STR_132(CODE[3]), STR_127(CODE[3]), STR_122(CODE[3]), STR_117(CODE[4]), 
		 -> STR_112(CODE[3]), STR_107(CODE[3]), STR_102(CODE[3]), STR_97(CODE[4]), 
		 -> STR_92(CODE[3]), STR_87(CODE[3]), STR_82(CODE[3]), STR_77(CODE[4]), 
		 -> STR_72(CODE[3]), STR_67(CODE[3]), STR_63(CODE[3]), STR_58(CODE[3]), 
		 -> STR_54(CODE[3]), STR_49(CODE[3]), STR_45(CODE[3]), STR_40(CODE[4]), 
		 -> STR_36(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_168(CODE[3]), STR_164(CODE[3]), STR_159(CODE[3]), STR_155(CODE[3]), 
		 -> STR_150(CODE[3]), STR_146(CODE[3]), STR_141(CODE[4]), STR_137(CODE[4]), 
		 -> STR_132(CODE[3]), STR_127(CODE[3]), STR_122(CODE[3]), STR_117(CODE[4]), 
		 -> STR_112(CODE[3]), STR_107(CODE[3]), STR_102(CODE[3]), STR_97(CODE[4]), 
		 -> STR_92(CODE[3]), STR_87(CODE[3]), STR_82(CODE[3]), STR_77(CODE[4]), 
		 -> STR_72(CODE[3]), STR_67(CODE[3]), STR_63(CODE[3]), STR_58(CODE[3]), 
		 -> STR_54(CODE[3]), STR_49(CODE[3]), STR_45(CODE[3]), STR_40(CODE[4]), 
		 -> STR_36(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 57
		 -> vfpfcnvrt@ct(BANK2[3]), STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[19]), 
		 -> STR_21(CODE[20]), STR_20(CODE[20]), STR_19(CODE[21]), STR_18(CODE[21]), 
		 -> STR_17(CODE[21]), STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), 
		 -> STR_3(CODE[43]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 57
		 -> vfpfcnvrt@ct(BANK2[3]), STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[19]), 
		 -> STR_21(CODE[20]), STR_20(CODE[20]), STR_19(CODE[21]), STR_18(CODE[21]), 
		 -> STR_17(CODE[21]), STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), 
		 -> STR_3(CODE[43]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK2[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK2[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_31(CODE[4]), STR_30(CODE[4]), STR_27(CODE[4]), STR_26(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_31(CODE[4]), STR_30(CODE[4]), STR_27(CODE[4]), STR_26(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[19]), STR_21(CODE[20]), 
		 -> STR_20(CODE[20]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    snprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_snprintf(BANK2[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    S1669_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[19]), STR_21(CODE[20]), 
		 -> STR_20(CODE[20]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[19]), STR_21(CODE[20]), 
		 -> STR_20(CODE[20]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 57
		 -> STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[19]), STR_21(CODE[20]), 
		 -> STR_20(CODE[20]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 2
		 -> ?_snprintf(BANK2[2]), 

    vfpfcnvrt@vp	PTR void  size(1) Largest target is 2
		 -> ?_snprintf(BANK2[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    stoa@s	PTR unsigned char  size(1) Largest target is 2
		 -> ?_snprintf(BANK2[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK2[2]), stoa@nuls(BANK0[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 127
		 -> STR_25(CODE[3]), STR_12(CODE[3]), STR_11(CODE[38]), STR_10(CODE[45]), 
		 -> STR_9(CODE[42]), STR_5(CODE[3]), STR_4(CODE[53]), messageBuffer(BIGRAM[127]), 
		 -> STR_2(CODE[46]), STR_1(CODE[40]), 


Critical Paths under _main in COMMON

    _main->_EUSART_Initialize
    _vfpfcnvrt->_stoa
    _vfpfcnvrt->_strncmp
    _toupper->_islower
    _stoa->_fputc
    _efgtoa->___fltol
    _tolower->_isupper
    _dtoa->___aodiv
    _abs->___aomod
    _pad->_fputs
    _fputs->_fputc
    _atoi->___wmul
    _atoi->_isdigit
    _EUSART_Write_Text->_EUSART_Write
    _setTemperatureLimitsint->___wmul
    _setShortCircuitProtection->_I2C_writeRegister
    _setOverCurrentDischargeProtection->_I2C_writeRegister
    ___flmul->__Umul8_16
    _setCellUndervoltageProtection->_I2C_writeRegister
    _setCellUndervoltageProtection->_readRegister
    _setCellOvervoltageProtection->_I2C_writeRegister
    _setCellOvervoltageProtection->_readRegister
    _beginAFEcommunication->_I2C_writeRegister
    _beginAFEcommunication->_readRegister
    _readRegister->_read_I2C_data
    _readRegister->_send_I2C_controlByte
    _I2C_writeRegister->_send_I2C_controlByte
    _RGB_AWAIT_AFE_CONN->_RGB_color
    _AFE_getSetShortCircuitCurrent->___fltol
    _AFE_getOverCurrentDischargeCurrent->___fltol
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _vsnprintf->_vfprintf
    _xtoa->_pad
    _utoa->___lodiv
    _utoa->___lomod
    _utoa->_pad
    _otoa->_pad
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    _dtoa->___aodiv
    _dtoa->___aomod
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _setShortCircuitProtection->___flge
    _setOverCurrentDischargeProtection->___flge
    ___flmul->___xxtofl
    ___flge->___fldiv
    _setCellUndervoltageProtection->___aldiv
    _setCellOvervoltageProtection->___aldiv
    _AFE_getSetShortCircuitCurrent->___fltol
    _AFE_getOverCurrentDischargeCurrent->___fltol
    ___fltol->___fldiv
    ___fldiv->___flmul
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_statemachine
    _statemachine->_printotAFERegisters
    _printotAFERegisters->_snprintf
    _snprintf->_vsnprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_statemachine

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _myIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _myIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _myIsr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _myIsr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _myIsr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _myIsr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _myIsr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _myIsr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _myIsr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _myIsr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _myIsr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _myIsr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _myIsr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  253193
                                              1 BANK3      1     1      0
                  _EUSART_Initialize
                          _initClock
                          _init_GPIO
                           _init_I2C
                           _init_RGB
                          _init_TMR1
                       _statemachine
 ---------------------------------------------------------------------------------
 (1) _statemachine                                         3     3      0  251715
                                             78 BANK2      2     2      0
                                              0 BANK3      1     1      0
                         _AFE_UPDATE
 _AFE_getOverCurrentDischargeCurrent
          _AFE_getSetCurrentSenseRes
      _AFE_getSetShortCircuitCurrent
                  _EUSART_Write_Text
                 _RGB_AWAIT_AFE_CONN
                          _RGB_color
              _beginAFEcommunication
                           _init_AFE
                _printotAFERegisters
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _printotAFERegisters                                  1     1      0   99712
                                             77 BANK2      1     1      0
                  _EUSART_Write_Text
                       _readRegister
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _snprintf                                            14     4     10   94125
                                             63 BANK2     14     4     10
 _AFE_getOverCurrentDischargeCurrent (ARG)
          _AFE_getSetCurrentSenseRes (ARG)
      _AFE_getSetShortCircuitCurrent (ARG)
                       _readRegister (ARG)
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (3) _vsnprintf                                           19    12      7   89470
                                             78 BANK1      2     2      0
                                             46 BANK2     17    10      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             9     4      5   88433
                                             78 BANK0      2     2      0
                                             71 BANK1      7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           52    48      4   87571
                                             67 BANK1      4     0      4
                                              0 BANK2     46    46      0
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _otoa
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    9106
                                             16 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     512
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              8     6      2     161
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _utoa                                                25    15     10    7249
                                             16 BANK0     25    15     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             18     2     16     311
                                              1 COMMON     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             26    10     16     314
                                              1 COMMON    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6    6837
                                              1 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    19      3    2280
                                             10 COMMON     2     2      0
                                              0 BANK0     20    17      3
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _otoa                                                34    24     10    6729
                                             16 BANK0     34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              67    60      7   29207
                                              0 BANK1     67    60      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2    1232
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     641
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                               8     6      2     641
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     490
                                             58 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       16    12      4     287
                                              1 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    3727
                                             32 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             20    12      8    3302
                                              1 COMMON     8     0      8
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     121
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     490
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              7     3      4     448
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              9     5      4     452
                                              1 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                31    21     10    7932
                                             16 BANK0     31    21     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                              4 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             19     3     16     448
                                              1 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             27    11     16     452
                                              1 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 8     5      3    5680
                                             16 BANK0      6     3      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 10     5      5    5420
                                              6 BANK0     10     5      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     164
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     6      2    1605
                                             10 COMMON     2     0      2
                                              0 BANK0      6     6      0
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1290
                                              1 COMMON     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    2025
                                              7 COMMON     2     0      2
                                              0 BANK0     13    13      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              5     3      2     207
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write_Text                                    5     3      2    2012
                                              2 COMMON     5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_AFE                                             0     0      0   41001
       _setCellOvervoltageProtection
      _setCellUndervoltageProtection
  _setOverCurrentDischargeProtection
          _setShortCircuitProtection
              _setShuntResistorValue
            _setTemperatureLimitsint
 ---------------------------------------------------------------------------------
 (3) _setTemperatureLimitsint                              8     0      8    1244
                                              0 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     852
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _setShuntResistorValue                                4     0      4      98
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) _setShortCircuitProtection                           21    15      6   11284
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _setOverCurrentDischargeProtection                   21    15      6   11284
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             26    18      8    3633
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) __Umul8_16                                            9     7      2     799
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1094
                                             58 BANK0     12     4      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _setCellUndervoltageProtection                       21    17      4    8547
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _setCellOvervoltageProtection                        21    17      4    8544
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     496
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _beginAFEcommunication                               15    13      2    6579
                                              0 BANK0     15    13      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _readRegister                                         6     2      4    3575
                                              5 COMMON     6     2      4
                      _read_I2C_data
                      _send_I2C_NACK
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _read_I2C_data                                        4     2      2       0
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) _I2C_writeRegister                                    6     0      6    2868
                                              5 COMMON     6     0      6
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_stopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_startBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_data                                        2     0      2     250
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _send_I2C_controlByte                                 4     0      4     500
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _RGB_AWAIT_AFE_CONN                                   1     1      0     326
                                              3 COMMON     1     1      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (2) _RGB_color                                            2     0      2     326
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _AFE_getSetShortCircuitCurrent                        8     4      4    3800
                                             67 BANK0      8     4      4
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _AFE_getSetCurrentSenseRes                            4     0      4       0
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _AFE_getOverCurrentDischargeCurrent                   8     4      4    3800
                                             67 BANK0      8     4      4
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     778
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             11     7      4     533
                                             10 COMMON     2     2      0
                                             58 BANK0      9     5      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             26    18      8    2489
                                             32 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _AFE_UPDATE                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_RGB                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_GPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initClock                                            0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   18    14      4    1478
                                             10 COMMON     2     2      0
                                             18 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8    1165
                                              9 COMMON     1     1      0
                                              4 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _myIsr                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     ___aldiv
       ___lmul (ARG)
   _initClock
     _internal_16
   _init_GPIO
   _init_I2C
   _init_RGB
   _init_TMR1
   _statemachine
     _AFE_UPDATE
     _AFE_getOverCurrentDischargeCurrent
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _AFE_getSetCurrentSenseRes
     _AFE_getSetShortCircuitCurrent
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _EUSART_Write_Text
       _EUSART_Write
     _RGB_AWAIT_AFE_CONN
       _RGB_color
     _RGB_color
     _beginAFEcommunication
       _I2C_writeRegister
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
     _init_AFE
       _setCellOvervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setCellUndervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setOverCurrentDischargeProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShortCircuitProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShuntResistorValue
       _setTemperatureLimitsint
         ___wmul
     _printotAFERegisters
       _EUSART_Write_Text
         _EUSART_Write
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _snprintf
         _AFE_getOverCurrentDischargeCurrent (ARG)
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
         _AFE_getSetCurrentSenseRes (ARG)
         _AFE_getSetShortCircuitCurrent (ARG)
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
         _readRegister (ARG)
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _vsnprintf (ARG)
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fleq
                 ___flge
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___fltol
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
     _snprintf
       _AFE_getOverCurrentDischargeCurrent (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _AFE_getSetCurrentSenseRes (ARG)
       _AFE_getSetShortCircuitCurrent (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _readRegister (ARG)
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _vsnprintf (ARG)
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fleq
               ___flge
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul
                 __Umul8_16
                 ___xxtofl (ARG)
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___fltol
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     50      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      2      46      11       87.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     193      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     193      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              41      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Jan 01 14:27:00 2020

          __end_of_setShortCircuitProtection 07EC                               _maxCellVoltage 01C6  
                      __end_of_send_I2C_data 3101                                 ___fldiv@aexp 0059  
                               ___fldiv@bexp 0058                                 ___fldiv@sign 0051  
                                __CFG_CP$OFF 0000                                 ___awdiv@sign 0077  
                        ___wmul@multiplicand 0073                        _setShuntResistorValue 2800  
                        __Umul8_16@word_mpld 0077                                          l300 3106  
                                        l153 1B71                                          l322 32A7  
                                        l403 2E64                                          l324 32AC  
                                        l325 32B1                                          l229 30E8  
                                        l326 32C6                                          l270 07F0  
                                        l264 30FD                                          l282 30DB  
                                        l276 3123                                          l702 263E  
                                        l703 26D3                                          l288 30E3  
                                        l720 2EAC                                          l581 1BB7  
                                        l637 0293                                          l709 26DE  
                                        l741 2477                                          l566 3583  
                                        l590 1C83                                          l582 1BBE  
                                        l638 0280                                          l648 02C7  
                                        l752 1CCC                                          l569 35A3  
                                        l729 2F07                                          l737 245C  
                                        l586 1BD9                                          l666 048A  
                                        l587 1BED                                          l756 1CE7  
                                        l790 13F6                                          l791 13F9  
                                        l777 1DEA                                          l793 142C  
                                        l698 2623                                          l786 13E4  
                                        l884 31FB                                          l788 13F0  
                                        l949 29B6                                          l789 13F3  
                                        l984 27EE                                          l997 2443  
                        __size_of_AFE_UPDATE 0001                                          _abs 317C  
                             RGB_color@color 0071                                          _pad 356D  
                               ___awmod@sign 0077                                 __CFG_BORV$LO 0000  
                                        wreg 0009                                 __CFG_IESO$ON 0000  
                               ___flmul@aexp 0038                                 ___flmul@bexp 0039  
     setCellOvervoltageProtection@voltage_mV 0032      setCellUndervoltageProtection@voltage_mV 0032  
                               ___flmul@sign 0033                                 ___flmul@temp 003E  
                               ___flmul@prod 003A                                 _statemachine 1A46  
                               __CFG_LVP$OFF 0000                                 ___fltol@exp1 007B  
                                       ?_abs 0074                                         l1053 349F  
                                       l1117 2917                                         l1062 284B  
                                       l1054 34B9                                         l1206 1F81  
                                       l1127 3777                                         l1241 109B  
                                       l1065 2899                                         l1227 1FF8  
                                       l1219 1FE0                                         l1332 2B9A  
                                       l1085 3703                                         l1333 2BA4  
                                       l1325 2B86                                         l1262 11A2  
                                       l1263 11BA                                         l1319 2B50  
                                       l1503 3259                                         l1191 1EE1  
                                       l1265 11C7                                         l1185 1E6B  
                                       l1370 2C31                                         l1293 17F3  
                                       l1189 1EFE                                         l1393 2295  
                                       l5002 1093                                         l5012 10BA  
                                       l5200 175B                                         l5120 15F0  
                                       l5018 10C6                                         l5202 1772  
                                       l5122 15F8                                         l4322 3617  
                                       l5044 1126                                         l5212 178B  
                                       l5140 161B                                         l4324 361B  
                                       l4340 280E                                         l5070 115F  
                                       l5062 1131                                         l5038 110D  
                                       l5046 10EF                                         l5222 17B4  
                                       l5118 15EE                                         l5064 1148  
                                       l5048 112B                                         l5232 17E0  
                                       l5208 1789                                         l5136 1611  
                                       l4328 3642                                         l5074 1161  
                                       l5226 17C9                                         l5138 1613  
                                       l4346 3169                                         l5084 118A  
                                       l5148 1629                                         l5252 2014  
                                       l4348 3175                                         l4700 2737  
                                       l4604 37D3                                         l4620 3290  
                                       l4614 37FB                                         ?_pad 0026  
                                       l4704 275E                                         l7200 1FB2  
                                       l4608 37D8                                         l5098 11C3  
                                       l4554 3253                                         l4706 2762  
                                       l4802 360A                                         l4650 224E  
                                       l8010 2AD8                                         l7300 333A  
                                       l4716 2779                                         l7204 1FB4  
                                       l7124 1EE9                                         l7116 1EB1  
                                       l7052 1E38                                         l4652 225F  
                                       l6502 2BBF                                         l7302 3343  
                                       l4726 27C1                                         l4718 2788  
                                       l4750 23D7                                         l4742 23CA  
                                       l4814 3449                                         l7222 1FF0  
                                       l7150 1F1E                                         l7142 1F0C  
                                       l7126 1EEB                                         l7134 1EF9  
                                       l8030 18A3                                         l8022 184B  
                                       l8006 2AAA                                         l7240 3579  
                                       l4728 27CD                                         l4752 23E6  
                                       l4840 347F                                         l4832 346E  
                                       l7152 1F20                                         l7160 1F2F  
                                       l7080 1E63                                         l7056 1E3B  
                                       l4656 2278                                         l8104 2536  
                                       l4906 36F1                                         l4682 31F5  
                                       l7250 3585                                         l4738 23A3  
                                       l7322 1BD1                                         l4770 35C8  
                                       l4826 3456                                         l4818 3450  
                                       l7226 1FF4                                         l7170 1F79  
                                       l7058 1E43                                         l4930 28C3  
                                       l8114 2598                                         l8042 20F0  
                                       l8034 18D1                                         l8018 1829  
                                       l4916 3710                                         l4908 36FF  
                                       l6620 19EC                                         l7244 3581  
                                       l4756 2416                                         l7332 1C1A  
                                       l4828 3462                                         l4836 3477  
                                       l7076 1E60                                         l4940 290B  
                                       l4932 28D2                                         l8204 0A43  
                                       l8124 083F                                         l6550 32B6  
                                       l4862 2865                                         l6614 1940  
                                       l7254 35AF                                         l4758 2422  
                                       l7342 1BF5                                         l7350 1C8F  
                                       l7086 1E75                                         l7502 02F0  
                                       l4950 372C                                         l8310 0E88  
                                       l8214 0A84                                         l8142 0973  
                                       l8134 08A7                                         l8054 216F  
                                       l8046 211E                                         l6480 2B73  
                                       l6704 32D9                                         l6632 19FE  
                                       l6544 31DB                                         l7360 1CA2  
                                       l7328 1BE8                                         l4776 35D3  
                                       l7192 1FA7                                         l7512 0302  
                                       l7408 00F3                                         l7416 0121  
                                       l4952 373B                                         l8320 0F0D  
                                       l8224 0AEB                                         l8160 0901  
                                       l4890 36CC                                         l6490 2B8B  
                                       l6474 2B5F                                         l4866 287F  
                                       l7354 1C97                                         l4794 35F9  
                                       l4786 35DB                                         l7186 1FA0  
                                       l7178 1F93                                         l7194 1FA9  
                                       l7610 0615                                         l7514 03E6  
                                       l7442 01A0                                         l7426 0151  
                                       l7434 017F                                         l8306 0E5A  
                                       l8234 0B53                                         l8146 0977  
                                       l8066 2C69                                         l8420 2A10  
                                       l6468 2B48                                         l6636 1A26  
                                       l7364 1CAF                                         l4788 35E7  
                                       l7612 061D                                         l7532 0488  
                                       l7524 045A                                         l7452 023A  
                                       l7700 26F7                                         l4956 376B  
                                       l8340 0FCA                                         l8324 0F3B  
                                       l8244 0BB5                                         l8172 0922  
                                       l8148 08E0                                         l8076 2CCC  
                                       l8084 2F2F                                         l8406 29D7  
                                       l4982 106F                                         l4886 36C3  
                                       l6478 2B63                                         l6582 0790  
                                       l4798 3602                                         l7286 34CB  
                                       l7622 0619                                         l7534 0491  
                                       l7518 0439                                         l7446 01D0  
                                       l7454 025F                                         l7390 00B1  
                                       l5870 103A                                         l8334 0FA6  
                                       l8254 0C37                                         l8094 2F96  
                                       l8350 0FDA                                         l8424 2A1E  
                                       l8416 2A05                                         l8408 29E5  
                                       l4984 1077                                         l6488 2B98  
                                       l8512 20A8                                         l6576 06E4  
                                       l7632 0667                                         l7624 0651  
                                       l7480 02C2                                         l7472 029E  
                                       l7464 028D                                         l7448 020A  
                                       l7712 2E85                                         l5872 1015  
                                       l8344 0FD0                                         l8264 0C9F  
                                       l8184 0953                                         l8440 294F  
                                       l4978 106C                                         l6594 07A2  
                                       l7546 04FC                                         l7490 02D8  
                                       l7466 0296                                         l7386 00AA  
                                       l7378 0098                                         l7730 2ECE  
                                       l7810 1D29                                         l7802 1CF7  
                                       l8282 0D65                                         l8370 33BC  
                                       l8442 2957                                         l8434 293B  
                                       l8380 3372                                         l8516 20D0  
                                       l7740 2EDE                                         l7732 2EDB  
                                       l8292 0DD0                                         l8268 0CCD  
                                       l8452 2995                                         l8622 2DA3  
                                       l4998 1090                                         l6598 07CC  
                                       l7566 0517                                         l7574 0543  
                                       l7582 05C5                                         l7398 00C3  
                                       l7750 2F29                                         l7726 2EBD  
                                       l5878 1041                                         l7806 1D0F  
                                       l8278 0D37                                         l7910 13E6  
                                       l8454 2999                                         l8702 1B5C  
                                       l8528 2DBB                                         l8376 3367  
                                       l7648 0699                                         l7656 06B4  
                                       l7568 0531                                         l7488 02D4  
                                       l7744 2F0B                                         l7760 246F  
                                       l8296 0DF2                                         l7920 13FC  
                                       l8368 3398                                         l8456 29A0  
                                       l8720 181C                                         l8490 2359  
                                       l7594 05F3                                         l7586 05DD  
                                       l7498 02E8                                         l7674 2685  
                                       l7666 2636                                         l7850 1E08  
                                       l7826 1D77                                         l7834 1DB9  
                                       l7930 1433                                         l8642 1A47  
                                       l7684 2660                                         l7748 2F1C  
                                       l8398 29C7                                         l8830 32BB  
                                       l8486 2331                                         l7766 24BA  
                                       l7942 1465                                         l7926 1400  
                                       l7880 2C35                                         l7872 2BF9  
                                       l7776 251B                                         l7944 1476  
                                       l7952 14A7                                         l8824 1B66  
                                       l8672 1AB1                                         l7890 2C64  
                                       l7874 2BFE                                         l7866 2BE9  
                                       l7858 2BCD                                         l7778 2496  
                                       l7786 2520                                         l7946 147F  
                                       l8826 141A                                         l7876 2C12  
                                       l8828 2C0A                                         l7796 1CDF  
                                       l7964 14ED                                         l7966 14FE  
                                       l7974 152F                                         l7984 158F  
                                       l7968 1507                                         l7994 2A27  
                                       l8698 1B59                                         l7998 2A55  
                                       STR_1 3976                                         STR_2 3870  
                                       STR_3 38F7                                         STR_4 383B  
                                       STR_5 3A22                                         STR_6 394C  
                                       STR_7 38CB                                         STR_8 3802  
                                       STR_9 3922                                         _BRGH 0CF2  
                                       _CREN 0CEC                                         u6025 35DE  
                                       u5500 37F3                                         u6045 35E8  
                                       u6125 3459                                         u5510 37F4  
                                       u6055 35F2                                         u6065 35FA  
                                       u6145 3468                                         u6315 36F2  
                                       u5355 325A                                         u5435 3185  
                                       u6155 346F                                         u5445 37A9  
                                       u6405 28F8                                         u5615 223A  
                                       u5720 315D                                         u6345 3707  
                                       u5465 37C2                                         u5730 315E  
                                       u6370 28B3                                         _SCS0 04C8  
                                       u5635 2268                                         _SCS1 04C9  
                                       u5820 2769                                         u6285 36D5  
                                       u5565 21E7                                         u6445 3759  
                                       u5590 2215                                         u5670 3223  
                                       u5495 37E5                                         u5655 2281  
                                       u5575 2202                                         u5680 3224  
                                       u6625 1134                                         u4865 3640  
                                       u6715 1178                                         u6555 10F7  
                                       u9115 2B6C                                         u5755 31FC  
                                       u5595 2211                                         u6725 1193  
                                       u6645 113D                                         u6565 10FE  
                                       u5765 3201                                         u6735 11AC  
                                       u9135 2B80                                         u5855 27AE  
                                       u6585 1107                                         u6905 1767  
                                       u9305 07BB                                         u6595 111B  
                                       u9155 2B92                                         u6835 169F  
                                       u5955 2404                                         u6845 16CE  
                                       u9430 32CF                                         u6855 1724  
                                       u9440 32D0                                         u6865 173B  
                                       u9345 1A17                                         u9450 32DE  
                                       u9610 31A2                                         u9195 2BAC  
                                       u6875 174A                                         u9460 32DF  
                                       u9620 31A3                                         u6885 175E  
                                       u6975 17A2                                         u6985 17BD  
                                       u9730 1ECF                                         u6995 17D3  
                                       u9740 1ED0                                         u9725 1EC5  
                                       u9853 1F41                                         u9845 1F24  
                                       u9775 1EEF                                         _TMR1 0016  
                                       u9895 1F94                                         _SPEN 0CEF  
                                       u9995 1FCB                                         _TXEN 0CF5  
                                       _SYNC 0CF4                                 __CFG_WRT$OFF 0000  
                                       abs@a 0074                                         _dbuf 0220  
                                       _atoi 2BC8                                         _ctoa 332D  
                                       _main 1801                                         _dtoa 1B72  
                                       _prec 01C0                                         _otoa 261C  
                                       _nout 01BC                                         pad@i 002C  
                                       pad@p 0029                                         fsr0h 0005  
                                       fsr1h 0007                                         indf0 0000  
                                       fsr0l 0004                                         indf1 0001  
                                       fsr1l 0006                                         pad@w 002E  
                                       _stoa 2E6A                                         btemp 007E  
                                       _utoa 2455                                         _xtoa 1CC5  
                              ___fpclassifyf 3788                                         start 001E  
                            ___fldiv@new_exp 0052                                 _tolower$1739 0079  
                   __end_of_send_I2C_stopBit 30E7                                        ??_abs 0076  
                                      ??_pad 002B                         _send_I2C_controlByte 311D  
                              ?_EUSART_Write 0070                                ___fltol@sign1 007A  
                            __end_of___aldiv 2A27                              __end_of___aodiv 2800  
                                      ?_atoi 0077                                        ?_ctoa 0030  
                            __end_of___fladd 2000                                        ?_main 0070  
                                      ?_dtoa 0030                              __end_of___aomod 2455  
              I2C_writeRegister@slaveAddress 0075                              __end_of___fldiv 11CC  
                            __end_of___awdiv 360F                              __end_of___flneg 3113  
                                      STR_10 389E                                        STR_11 399E  
                                      STR_12 3A22                                        STR_20 3A79  
                                      STR_21 3A8D                                        STR_13 3A64  
                                      STR_30 3B14                                        STR_22 3AA1  
                                      STR_14 3A10                                        STR_31 3B28  
                                      STR_23 3AB4                                        STR_15 39E4  
                                      STR_40 3B24                                        STR_24 3AC6  
                                      STR_16 39FA                                        STR_25 3A22  
                                      STR_17 3A25                                __CFG_WDTE$OFF 0000  
                                      STR_34 3B1C                                        STR_26 3B10  
                                      STR_18 3A3A                                        STR_27 3B20  
                                      STR_19 3A4F                                        STR_36 3B1C  
                                      STR_52 3B42                              __end_of___awmod 3484  
                                      STR_45 3B1D                                        STR_61 3B45  
                                      STR_54 3B42                                        STR_70 3B48  
                                      STR_38 3B24                                        STR_63 3B45  
                                      STR_72 3B48                                        STR_56 3B4B  
                                      STR_49 3B25                                        STR_65 3B4E  
                                      STR_58 3B4B                                        STR_82 3B31  
                                      STR_90 3B5A                                        STR_67 3B4E  
                                      STR_75 3B30                                        STR_92 3B5A  
                                      STR_77 3B30                                        STR_85 3B57  
                                      STR_87 3B57                                        STR_95 3B2C  
                            __end_of___flmul 1800                                        STR_97 3B2C  
                                      ?_otoa 0030                              __end_of___flsub 3287  
                            __end_of___fltol 371F                                        ?_stoa 0020  
                                      ?_utoa 0030                                        u10120 32F9  
                                      u11000 2E74                                        u10105 358F  
                                      u10130 32FA                                        u10220 1B8D  
                                      u10060 31B9                                        u10205 34C7  
                                      u10230 1B8E                                        u10070 31BA  
                                      u10150 331B                                        u10160 331C  
                                      u11200 1D40                                        u10305 1C8D  
                                      u11105 2467                                        u11210 1D41  
                                      u11035 2EA5                                        u10325 1C09  
                                      u10430 00E4                                        u11230 1D60  
                                      u12015 3373                                        u10335 1C15  
                                      u11055 2ED9                                        u11135 24A9  
                                      u10440 00E5                                        u11240 1D61  
                                      u12105 29FA                                        u12025 337A  
                                      u11065 2EE8                                        u11145 24B5  
                                      u11305 1DE5                                        u12115 2A06  
                                      u10275 1BC9                              __end_of___lodiv 2928  
                                      u11500 1524                              ___awdiv@divisor 0071  
                                      u12205 2349                                        u11085 2F27  
                                      u10470 0142                                        u11510 1525  
                                      u11175 1CD7                                        ?_xtoa 0030  
                                      u11360 2C49                                        u10480 0143  
                                      u12225 2089                                        u11265 1D9D  
                                      u11370 2C4A                                        u11450 149C  
                                      u12075 29DA                                        u12315 2D64  
                                      u12235 20C0                                        u10555 028B  
                                      u11275 1DC3                                        u11195 1D23  
                                      u11460 149D                                        u12325 2D7B  
                                      u12095 29E6                                        u12407 3149  
                                      u12255 2DD1                                        u11295 1DD9  
                                      u10665 030C                                        u10585 02AB  
                                      u12185 298C                                        u12275 2E37  
                                      u12195 230B                                        u10595 02BE  
                                      u10915 262E                                        u12285 2D17  
                                      u10925 26B7                                        u10870 068C  
                                      u12295 2D2E                                        u10855 065A  
                                      u10935 26DC                                        u12367 1823  
                                      u10880 068D                                        u11680 2CAD  
                                      u10785 05CF                                        u12377 1A74  
                                      u11690 2CAE                                        u10795 05DB  
                                      u10955 2674                                        u12387 1AB8  
                                      u10965 2680                                        u12397 11D0  
                            __end_of___lomod 3788                                        _IRCF0 04CB  
                                      _IRCF1 04CC                                        _IRCF2 04CD  
                                      _IRCF3 04CE                       __size_of_read_I2C_data 0010  
                                      i1l135 001C                              ___awdiv@counter 0076  
                               vfpfcnvrt@fmt 00E5                                 vfpfcnvrt@llu 0146  
                                      _SPBRG 019B                           __size_of_RGB_color 0021  
                        ___lmul@multiplicand 0075                               __CFG_FCMEN$OFF 0000  
                                      _flags 01C2                                        _errno 01BA  
                                      _fputc 360F                              __end_of_isalpha 322B  
                                      _fputs 280A                                        _myIsr 0004  
                            __end_of_isdigit 3165                          _printotAFERegisters 11CC  
                                      atoi@n 002B                                        pad@fp 0026  
                                      atoi@s 0077                                        _width 01BE  
                                      ctoa@c 0032                                        _putch 07FF  
                                      ctoa@w 0034                                        dtoa@d 0032  
                                      dtoa@i 004D                                        dtoa@n 0045  
                                      dtoa@p 003F                                        dtoa@s 0043  
                                      dtoa@w 0041                              __end_of_islower 31C1  
                            __end_of_isspace 201C                               __CFG_BOREN$OFF 0000  
                            __end_of_isupper 31AA                                        otoa@d 0032  
                                      otoa@i 0050                                        otoa@n 0048  
                                      otoa@p 0042                                        otoa@t 0044  
                                      otoa@w 0046                                        stoa@i 002A  
                                      stoa@l 0032                                        stoa@p 0030  
                                      stoa@s 0022                                        stoa@w 002C  
                                      utoa@d 0032                                        utoa@i 0047  
                                      utoa@n 003F                                        utoa@p 003B  
                                      utoa@w 003D                                        status 0003  
                                      wtemp0 007E                               ?___fpclassifyf 0071  
                            __end_of_tolower 330B                                        xtoa@c 0055  
                                      xtoa@d 0032                                        xtoa@i 0053  
                                      xtoa@n 004B                                        xtoa@p 0047  
                                      xtoa@w 0049                                        xtoa@x 003A  
                          _SCD_delay_setting 3B08                              __end_of_strncmp 1052  
                            __end_of_toupper 332D                             ___lodiv@dividend 0028  
                               ?_internal_16 0070                                 _toupper$1754 0079  
                             __CFG_MCLRE$OFF 0000                              __initialization 0020  
      setTemperatureLimitsint@maxCharge_degC 0026                                 __end_of_atoi 2C69  
                               __end_of_ctoa 335E                                 __end_of_main 1829  
                               __end_of_dtoa 1CC5                                 __end_of_otoa 270D  
                               __end_of_stoa 2F2F                                 __end_of_utoa 2536  
                               __end_of_xtoa 1E1E                         ?_printotAFERegisters 0070  
                   __end_of_UV_delay_setting 3B08                       ?_setShuntResistorValue 0071  
                     beginAFEcommunication@i 002D                        ?_send_I2C_controlByte 0071  
                             ??_EUSART_Write 0071                               __CFG_LPBOR$OFF 0000  
                          _ATmega328_address 3800                                       ??_atoi 0020  
                                     ??_ctoa 0033                                       ??_main 01E5  
                                     ??_dtoa 003A                                       ??_otoa 003A  
                                     ??_stoa 007A                                       ??_utoa 003A  
                                     ??_xtoa 003B                               __CFG_PLLEN$OFF 0000  
                           ___lodiv@quotient 0072                                ?_readRegister 0075  
                                     ?_fputc 0071                                       STR_102 3B2D  
                                     STR_110 3B54                                       ?_fputs 007A  
                                     STR_112 3B54                                       STR_105 3B51  
                                     STR_122 3B35                                       STR_130 3B60  
                                     STR_107 3B51                                       STR_115 3B34  
                                     ?_myIsr 0070                                       STR_132 3B60  
                                     STR_141 3B18                                       STR_117 3B34  
                                     STR_125 3B5D                                       STR_150 3B19  
                                     STR_127 3B5D                                       STR_135 3B38  
                                     STR_137 3B38                                       STR_153 3B63  
                                     STR_146 3B39                                       STR_162 3B66  
                                     STR_155 3B63                                       STR_139 3B18  
                                     STR_164 3B66                                       STR_157 3B3C  
                                     STR_166 3B3F                                       STR_159 3B3C  
                                     STR_168 3B3F                             ___awdiv@dividend 0073  
                             __CFG_ZCDDIS$ON 0000                                       ?_putch 0070  
              __end_of_OCD_threshold_setting 39E4                                       _RC1REG 0199  
                  __end_of_SCD_delay_setting 3B10                                vfpfcnvrt@done 012D  
                               ??_AFE_UPDATE 0071                                       _TX1REG 019A  
     setOverCurrentDischargeProtection@i_905 00AA                                       _SPLLEN 04CF  
                                     _SSPADD 0212                                       _TRISC6 0476  
                                     _TRISC7 0477                                       _SSPBUF 0211  
                                     u590lld 23A1                                       u579lld 2735  
                              _read_I2C_data 07EC                             __end_of___xxtofl 2BC8  
                             __CFG_PWRTE$OFF 0000                            __end_of_RGB_color 32C7  
                               vfprintf@cfmt 00EC                                       ___flge 2830  
                                     ___fleq 3484                        ??_printotAFERegisters 016D  
                                     ___lmul 335E                                    ??___aldiv 0079  
                                  ??___aodiv 0071                               _minCellVoltage 01C4  
                                  ??___fladd 0020                                    ??___aomod 0071  
                                     ___wmul 31F3                                    ??___fldiv 0048  
                                  ??___awdiv 0075                                    ??___flneg 0075  
                             __CFG_STVREN$ON 0000                                    ??___awmod 0075  
                                  ??___flmul 002E                                    ??___flsub 007A  
                                  ??___fltol 005E                                    ??___lodiv 0071  
                           __end_of_init_I2C 314E                                    ??___lomod 0071  
                           __end_of_init_AFE 36B9                                       _efgtoa 0058  
                           __end_of_init_RGB 30D7                    __end_of_ATmega328_address 3802  
                                     _floorf 21C6                             ___awdiv@quotient 0078  
                      _beginAFEcommunication 2DB6                              ___awmod@divisor 0071  
                            ___awmod@counter 0076                                       pad@buf 0028  
                                     ctoa@fp 0030                                       dtoa@fp 0030  
                                     _strcpy 3287                                       _strlen 3165  
                                     fputc@c 0071                                       fputs@c 0022  
                                     fputs@i 0023                                       fputs@s 0025  
                                  ??_isalpha 0073                                    ??_isdigit 0073  
                         __end_of_AFE_UPDATE 0004                           __size_of__Umul8_16 001F  
                            ___fpclassifyf@e 0020                              ___fpclassifyf@u 0022  
                            ___fpclassifyf@x 0071                                    ??_islower 0073  
                                  ??_isspace 0073                                       otoa@fp 0030  
                             ??_readRegister 0079                                    ??_isupper 0073  
                                     stoa@cp 002E                                       stoa@fp 0020  
                                     putch@c 0070                             __end_of_vfprintf 33C5  
                                     utoa@fp 0030              ??_setCellUndervoltageProtection 0036  
                           __end_of_snprintf 31D9                                    ??_tolower 0020  
                                     xtoa@fp 0030                                    ??_strncmp 0077  
                                  ??_toupper 0020                                   ___flge@ff1 005A  
                                 ___flge@ff2 005E                              ??___fpclassifyf 0075  
                               ___xxtofl@arg 0022                                 ___xxtofl@exp 0021  
                               ___xxtofl@val 0071                                   ___fleq@ff1 0071  
                                 ___fleq@ff2 0075                      __end_of__initialization 0054  
                             ?_read_I2C_data 0071                                   ___flneg@f1 0071  
                                 ___fltol@f1 005A                     ?_setTemperatureLimitsint 0020  
   setTemperatureLimitsint@minDischarge_degC 0020                               __pcstackCOMMON 0070  
                     ??_send_I2C_controlByte 0075                                 __pidataBANK3 0800  
                              __end_of_fputc 3663                                __end_of_fputs 2830  
                              __end_of_myIsr 001E                                 _cellVoltages 01A0  
                              __end_of_putch 0800                           _RGB_AWAIT_AFE_CONN 32C7  
                        ?_RGB_AWAIT_AFE_CONN 0070                                      ??_fputc 0075  
                                    ??_fputs 0020                                      ??_myIsr 0070  
                                    ??_putch 0071            setShortCircuitProtection@delay_us 006A  
                                 __pbssBANK3 01A0                                   __pbssBANK4 0220  
                       __end_of_EUSART_Write 30EF                           __size_of_init_GPIO 0038  
                         __size_of_initClock 0003                           __size_of_init_TMR1 000B  
                        statemachine@success 01E4                            __end_of__Umul8_16 3268  
                                 __pmaintext 1801                         ??_RGB_AWAIT_AFE_CONN 0073  
                       __size_of_internal_16 0009              setShortCircuitProtection@scaler 00A0  
                                    ?___flge 005A                                      ?___fleq 0071  
                          ?_send_I2C_stopBit 0070                                      ?___lmul 0071  
                                    ?___wmul 0071        setTemperatureLimitsint@minCharge_degC 0024  
                            __CFG_PPS1WAY$ON 0000                   ?_setShortCircuitProtection 0066  
                                 __pintentry 0004                                      ?_efgtoa 00A0  
                     ?_beginAFEcommunication 0020                                      ?_floorf 005A  
                         ??_send_I2C_stopBit 0071                               ___lmul@product 0020  
                                    ?_strcpy 0071                                      ?_strlen 0071  
                    _shuntResistorValue_mOhm 01B6                                    ?___xxtofl 0071  
             setShortCircuitProtection@i_896 00AA                           __size_of_vfpfcnvrt FC43  
                                    _PPSLOCK 0E0F                       __size_of_send_I2C_NACK 0009  
                           ___lomod@dividend 0028                              ??_read_I2C_data 0073  
                     __size_of_send_I2C_data 0009                                    ?_init_I2C 0070  
                                  ?_init_AFE 0070                                    ?_init_RGB 0070  
       __end_of_setCellOvervoltageProtection 20F0        __size_of_setCellOvervoltageProtection 00D4  
               _setCellOvervoltageProtection 201C        __end_of_setCellUndervoltageProtection 2379  
     __size_of_setCellUndervoltageProtection 00DB                _setCellUndervoltageProtection 229E  
                   readRegister@recievedData 0079                      ??_setShuntResistorValue 0075  
                         __size_of_vsnprintf 007D                         __end_of_readRegister 33FB  
                                    ___aldiv 29A5                                      _adcGain 01D2  
                            __size_of___flge 007C                              __size_of___fleq 0049  
                                    ___aodiv 270D                                      ___fladd 1E1E  
                                    ___aomod 2379                                      ___fldiv 1052  
                                    ___awdiv 35BE                                      ___flneg 310A  
                            __size_of___lmul 0032                                      ___awmod 343F  
                                    ___flmul 15D4                                      ___flsub 3268  
                                    ___fltol 36B9                              __size_of___wmul 001B  
                                    ___lodiv 28AC                                      ___lomod 371F  
                                  ?_vfprintf 00E7                              __size_of_efgtoa 067D  
                                  ?_snprintf 015F                                _messageBuffer 2771  
            ??_AFE_getSetShortCircuitCurrent 0067                              __size_of_floorf 00D8  
                                    __ptext1 1A46                                      __ptext2 11CC  
                                    __ptext3 31C1                                      __ptext4 2928  
                                    __ptext5 3390                                      __ptext6 13BD  
                                    __ptext7 1CC5                                      __ptext8 330B  
                                    __ptext9 31AA                            __end_of_init_GPIO 083F  
                          __end_of_initClock 07FF                            __end_of_init_TMR1 3132  
                            __size_of_strcpy 001F                              __size_of_strlen 0017  
                                  _T1CONbits 0018                                 __size_of_abs 0017  
         __size_of_AFE_getSetCurrentSenseRes 000A                                 __size_of_pad 0051  
                                    _isalpha 320E                                      _isdigit 314E  
                                 ??___xxtofl 0075                             ___awmod@dividend 0073  
                 ?_AFE_getSetCurrentSenseRes 0071                             ___aldiv@dividend 0028  
                                    _islower 31AA                                      _isspace 2000  
  __end_of_setOverCurrentDischargeProtection 1A46   __size_of_setOverCurrentDischargeProtection 0115  
        ??_setOverCurrentDischargeProtection 006C           ?_setOverCurrentDischargeProtection 0066  
          _setOverCurrentDischargeProtection 1931                                      _isupper 3193  
                                    efgtoa@c 00A6                                      efgtoa@d 00C3  
                                    efgtoa@e 00DB                                      efgtoa@f 00A2  
                                    efgtoa@g 00D7                                      efgtoa@h 00CD  
                                    efgtoa@i 00D5                                      efgtoa@l 00D1  
                                    efgtoa@m 00BF                                      efgtoa@n 00DD  
                                    efgtoa@p 00C7                                      efgtoa@t 00BB  
                                    efgtoa@u 00DF                                      efgtoa@w 00CA  
                                    atoi@neg 0024                                      _tolower 32E9  
                                    clrloop0 3133                                      _strncmp 1000  
                                    _toupper 330B                         end_of_initialization 0054  
                                    floorf@e 0068                                      floorf@m 0064  
                                    floorf@u 006A                                      floorf@x 005A  
                                 ??_init_I2C 0071                                   ??_init_AFE 007B  
                                 ??_init_RGB 0071                                      fputc@fp 0073  
                                    fputs@fp 007A                ?_setCellOvervoltageProtection 0032  
                          _EUSART_Initialize 2D0D                           ?_EUSART_Initialize 0032  
                          __end_of_vfpfcnvrt 1000                                   efgtoa@mode 00CC  
                                 efgtoa@sign 00C5                                _send_I2C_NACK 3101  
                           ___aldiv@quotient 002E                   send_I2C_controlByte@RW_bit 0073  
                                    psplit$0 4B0098                                      psplit$1 980099  
                                    psplit$2 99009A                                      psplit$3 9A009B  
                                    psplit$4 9B009C                                      psplit$5 9C009D  
                                    psplit$6 9D009E                                      psplit$7 9E009F  
                              _send_I2C_data 30F8                                    _RGB_color 32A6  
                                 ??_vfprintf 006E                           EUSART_Initialize@x 007A  
                                 ??_snprintf 0169                                      strcpy@d 0077  
                                    strlen@a 0073                                      strcpy@s 0075  
                                    strlen@s 0071                          ??_EUSART_Initialize 0036  
                                ___fladd@grs 002B                             __CFG_FOSC$INTOSC 0000  
                              ___xxtofl@sign 0020                                    _TRISAbits 008C  
                                  _TRISBbits 008D                                    _TRISCbits 008E  
                                  _TRISEbits 0090                        __size_of_EUSART_Write 0008  
          __end_of_AFE_getSetCurrentSenseRes 311D                            __end_of_vsnprintf 29A5  
                                ___fldiv@grs 0054                                  ___fldiv@rem 004D  
              __end_of_SCD_threshold_setting 3AF8                                    _RXPPSbits 0E24  
                          _I2C_writeRegister 322B                                  ___flmul@grs 0034  
                  __end_of_EUSART_Initialize 2DB6                        _OCD_threshold_setting 39C4  
                __end_of_printotAFERegisters 13BD                           ?_I2C_writeRegister 0075  
           beginAFEcommunication@commSuccess 002B                               ?_send_I2C_NACK 0070  
                   readRegister@slaveAddress 0075               ?_setCellUndervoltageProtection 0032  
                             ?_send_I2C_data 0071                          ??_I2C_writeRegister 007B  
 __end_of_AFE_getOverCurrentDischargeCurrent 351D  __size_of_AFE_getOverCurrentDischargeCurrent 0050  
       ??_AFE_getOverCurrentDischargeCurrent 0067          ?_AFE_getOverCurrentDischargeCurrent 0063  
         _AFE_getOverCurrentDischargeCurrent 34CD                                   ?_RGB_color 0071  
                             __end_of___flge 28AC                               __end_of___fleq 34CD  
                             __end_of___lmul 3390                                  vfpfcnvrt@ap 00E6  
                                vfpfcnvrt@cp 012C                                  vfpfcnvrt@ct 0135  
                                vfpfcnvrt@fp 00E3                                  vfpfcnvrt@ll 013C  
                             __end_of___wmul 320E                                  vfpfcnvrt@vp 0144  
                             __end_of_efgtoa 06D5                                 _EUSART_Write 30E7  
                             __end_of_floorf 229E                  I2C_writeRegister@regAddress 0077  
                                 floorf@F524 01AA                setShuntResistorValue@res_mOhm 0071  
           __size_of_setTemperatureLimitsint 0044                               __end_of_strcpy 32A6  
                             __end_of_strlen 317C        __end_of_AFE_getSetShortCircuitCurrent 356D  
     __size_of_AFE_getSetShortCircuitCurrent 0050                _AFE_getSetShortCircuitCurrent 351D  
                        start_initialization 0020                              ___lodiv@divisor 0020  
                            ___lodiv@counter 007A                                ?_statemachine 0070  
                                __end_of_abs 3193                                  __end_of_pad 35BE  
                          _minCellTempCharge 01CE                            pnum$text6_split_1 0098  
                          pnum$text6_split_2 0099                            pnum$text6_split_3 009A  
                          pnum$text6_split_4 009B                            pnum$text6_split_5 009C  
                          pnum$text6_split_6 009D                            pnum$text6_split_7 009E  
                          pnum$text6_split_8 009F                setCellOvervoltageProtection@i 0045  
                       _maxCellTempDischarge 01C8                         _minCellTempDischarge 01CC  
                  __end_of_I2C_writeRegister 3249       _setOverCurrentDischargeProtection$1986 00A4  
                      __end_of___fpclassifyf 3800          setCellOvervoltageProtection@delay_s 0034  
       setCellUndervoltageProtection@delay_s 0034                            _EUSART_Write_Text 31D9  
                      __size_of_readRegister 0036                           ?_EUSART_Write_Text 0072  
                    ??_beginAFEcommunication 0022                                  vfprintf@fmt 00E9  
                                   ??___flge 0062                                     ??___fleq 0020  
                                   ??___lmul 0079                                     ??___wmul 0075  
             ??_setCellOvervoltageProtection 0036          setCellOvervoltageProtection@ov_trip 0044  
                                   ??_efgtoa 00A7                                    __Umul8_16 3249  
                ??_setShortCircuitProtection 006C                                  __pdataBANK3 01DD  
                                   ??_floorf 005E                          ??_EUSART_Write_Text 0074  
              __size_of_send_I2C_controlByte 000A         setCellUndervoltageProtection@uv_trip 0044  
                                   ??_strcpy 0073                                     ??_strlen 0073  
                                  ___fladd@a 0075                                    ___fladd@b 0071  
                               vsnprintf@cnt 0157                                 vsnprintf@fmt 0152  
                                  ___fldiv@a 0040                                    ___fldiv@b 0044  
                                __pbssBIGRAM 2771                                    _adcOffset 01D0  
                                  ___flmul@a 002A                                    ___flmul@b 0026  
                                __pbssCOMMON 007C                                    ___flsub@a 0040  
                                  ___flsub@b 0044                               ??_statemachine 016E  
                                  ___latbits 0003             send_I2C_controlByte@BlockAddress 0071  
                                 myIsr@count 01D7                                __pcstackBANK0 0020  
                              __pcstackBANK1 00A0                                __pcstackBANK2 0120  
                              __pcstackBANK3 01E4                             ___aodiv@dividend 0028  
                  __size_of_send_I2C_stopBit 0008                                  snprintf@fmt 0163  
                          __size_of___xxtofl 0096                                 _readRegister 33C5  
   setTemperatureLimitsint@maxDischarge_degC 0022                    __end_of_EUSART_Write_Text 31F3  
                 __size_of_EUSART_Initialize 00A9                                ??_internal_16 0071  
                                  _atoi$1616 0026                                    _atoi$1617 002A  
                                  _atoi$1618 0028                             _OV_delay_setting 3AF8  
                          __size_of_init_I2C 0010                        I2C_writeRegister@data 0079  
                            ??_send_I2C_NACK 0071                            __size_of_init_AFE 0056  
                          __size_of_init_RGB 0005                                  _efgtoa$1100 00AF  
                                _efgtoa$1101 00B1                                  _efgtoa$1110 00B7  
                                _efgtoa$1111 00B9                                  _efgtoa$1105 00B3  
                                _efgtoa$1109 00B5                            _send_I2C_startBit 30D7  
                                  _dtoa$1077 003D                              ??_send_I2C_data 0073  
                __size_of_RGB_AWAIT_AFE_CONN 0022               __size_of_setShuntResistorValue 000A  
                                   ?___aldiv 0024                                     ?___aodiv 0020  
                         ?_send_I2C_startBit 0070                                     ?___fladd 0071  
              __end_of_setShuntResistorValue 280A                                     ?___aomod 0020  
                                   ?___fldiv 0040                                     ?___awdiv 0071  
                           ___aodiv@quotient 0074                                     ?___flneg 0071  
                                   ?___awmod 0071                                     ?___flmul 0026  
                                   ?___flsub 0040                                     ?___fltol 005A  
                                   ?___lodiv 0020                                     ?___lomod 0020  
                                ??_RGB_color 0073                                   ?__Umul8_16 0071  
                  EUSART_Initialize@baudrate 0032                            __size_of_vfprintf 0035  
                        ??_send_I2C_startBit 0071                            __size_of_snprintf 0018  
             BQ76920@shuntResistorValue_mOhm 01B2                              ___lomod@divisor 0020  
                            ___lomod@counter 0072                                     ?_isalpha 0071  
                                   ?_isdigit 0071                                     ?_islower 0071  
                                   ?_isspace 0071                  ??_AFE_getSetCurrentSenseRes 0075  
                                  _init_GPIO 0807                                     ?_isupper 0071  
                                  _initClock 07FC                                    _init_TMR1 3127  
                                  _currState 01D9                                     ?_tolower 0077  
                  _setShortCircuitProtection 06D5                   __size_of_I2C_writeRegister 001E  
                             __size_of_fputc 0054                               __size_of_fputs 0026  
                             __size_of_myIsr 001A                                     ?_strncmp 0071  
             ?_AFE_getSetShortCircuitCurrent 0063                                     ?_toupper 0077  
                             __size_of_putch 0001                              ___aldiv@divisor 0024  
                      __end_of_read_I2C_data 07FC                              ___aldiv@counter 002C  
                             ___wmul@product 0075                              BQ76920@protect1 01D6  
                            BQ76920@protect2 01D5                              BQ76920@protect3 01D4  
                                   _LATAbits 010C                                     _LATEbits 0110  
                  __end_of_send_I2C_startBit 30DF                                    clear_ram0 3132  
                                  _tmr1_flag 01D8                                     _PIE1bits 0091  
         setOverCurrentDischargeProtection@i 00A8                                     _PIR1bits 0011  
                 setShortCircuitProtection@i 00A8                          __end_of_internal_16 30F8  
                                  _vfpfcnvrt 13BD                                    _xtoa$1147 0043  
                                  _xtoa$1148 0045                            ___wmul@multiplier 0071  
                    _setTemperatureLimitsint 33FB                                   ?_init_GPIO 0070  
                                 ?_initClock 0070                                   ?_init_TMR1 0070  
                               _isspace$1656 0075                        send_I2C_data@databyte 0071  
                                 vfpfcnvrt@c 0145                                   vfpfcnvrt@f 0138  
                          ___lmul@multiplier 0071                   __size_of_EUSART_Write_Text 001A  
                                  _vsnprintf 2928                                   _AFE_UPDATE 0003  
                          _OCD_delay_setting 3AD8                    _AFE_getSetCurrentSenseRes 3113  
                       __end_of_statemachine 1B72                                   vfprintf@ap 00EB  
                                 vfprintf@fp 00E7                                  ??__Umul8_16 0073  
                           __size_of___aldiv 0082                             __size_of___aodiv 00F3  
                           __size_of___fladd 01E2                             __size_of___aomod 00DC  
                           __size_of___fldiv 017A                             __size_of___awdiv 0051  
                           __size_of___flneg 0009                             __size_of___awmod 0045  
                                vsnprintf@ap 0154                             __size_of___flmul 022C  
             _setShortCircuitProtection$1985 00A4                             __size_of___flsub 001F  
                           __size_of___fltol 0066                       readRegister@regAddress 0077  
                           __size_of___lodiv 007C                             __size_of___lomod 0069  
                                 ?_vfpfcnvrt 00E3                                   snprintf@ap 016C  
                            ___aodiv@divisor 0020                              ___aodiv@counter 0072  
                                 _ANSELBbits 018D                                   _ANSELCbits 018E  
                         ___fpclassifyf@F463 01AE                                     ___xxtofl 2B32  
setOverCurrentDischargeProtection@current_mA 0066                             __size_of_isalpha 001D  
                           __size_of_isdigit 0017                             _send_I2C_stopBit 30DF  
                           __size_of_islower 0017                             __size_of_isspace 001C  
                                   __ptext10 320E                                     __ptext11 2455  
                                   __ptext20 3287                                     __ptext12 371F  
                                   __ptext21 21C6                                     __ptext13 28AC  
                                   __ptext30 317C                                     __ptext22 3788  
                                   __ptext14 1000                                     __ptext31 2379  
                                   __ptext23 3268                                     __ptext15 2E6A  
                                   __ptext40 2000                                     __ptext32 270D  
                                   __ptext24 1E1E                                     __ptext16 261C  
                                   __ptext41 314E                                     __ptext33 332D  
                                   __ptext25 310A                                     __ptext17 0058  
                                   __ptext50 15D4                                     __ptext42 31D9  
                                   __ptext34 356D                                     __ptext26 3484  
                                   __ptext18 32E9                                     __ptext51 3249  
                                   __ptext43 30E7                                     __ptext35 3165  
                                   __ptext27 343F                                     __ptext19 3193  
                                   __ptext60 322B                                     __ptext52 2830  
                                   __ptext44 3663                                     __ptext36 280A  
                                   __ptext28 35BE                                     __ptext61 30DF  
                                   __ptext53 229E                                     __ptext45 33FB  
                                   __ptext37 360F                                     __ptext29 1B72  
                                   __ptext70 2B32                                     __ptext62 30D7  
                                   __ptext54 201C                                     __ptext46 31F3  
                                   __ptext38 07FF                                     __ptext71 36B9  
                                   __ptext63 30F8                                     __ptext55 335E  
                                   __ptext47 2800                                     __ptext39 2BC8  
                                   __ptext80 2D0D                                     __ptext72 1052  
                                   __ptext64 311D                                     __ptext56 2DB6  
                                   __ptext48 06D5                                     __ptext81 29A5  
                                   __ptext73 0003                                     __ptext65 32C7  
                                   __ptext57 33C5                                     __ptext49 1931  
                                   __ptext74 3127                                     __ptext66 32A6  
                                   __ptext58 3101                                     __ptext75 30D2  
                                   __ptext67 351D                                     __ptext59 07EC  
                                   __ptext76 313E                                     __ptext68 3113  
                                   __ptext77 0807                                     __ptext69 34CD  
                                   __ptext78 07FC                                     __ptext79 30EF  
                           __size_of_isupper 0017               setCellUndervoltageProtection@i 0045  
                           __size_of_tolower 0022                    __end_of_OCD_delay_setting 3AE8  
                                 strcpy@dest 0078                             __size_of_strncmp 0052  
                           __size_of_toupper 0022                                   ?_vsnprintf 014E  
                                   _init_I2C 313E                                     _init_AFE 3663  
                                   _init_RGB 30D2                                __size_of_atoi 00A1  
                              __size_of_ctoa 0031                                __size_of_main 0028  
                              __size_of_dtoa 0153                                _SSPDATPPSbits 0E21  
                                  pnum$text6 004B                                __size_of_otoa 00F1  
                      _SCD_threshold_setting 3AE8                                __size_of_stoa 00C5  
                              __size_of_utoa 00E1                   __size_of_send_I2C_startBit 0008  
                              __size_of_xtoa 0159                                  _internal_16 30EF  
                                 _RB2PPSbits 0E9A                                   _RC1STAbits 019D  
                                   efgtoa@fp 00A0                                     efgtoa@ne 00C1  
                                   efgtoa@pp 00BD                                     efgtoa@ou 00AB  
                                  stoa@F1174 01DD                                   _RC4PPSbits 0EA4  
             __size_of_beginAFEcommunication 00B4                                _SSPCLKPPSbits 0E20  
              __end_of_beginAFEcommunication 2E6A                                     int$flags 007E  
                                 _RC5PPSbits 0EA5                                     _protect1 01DC  
                                   _protect2 01DB                 __size_of_printotAFERegisters 01F1  
                                   _protect3 01DA                    ??_setTemperatureLimitsint 0077  
                                   _vfprintf 3390                                     _snprintf 31C1  
                           ___aomod@dividend 0028    setOverCurrentDischargeProtection@delay_ms 006A  
                   __end_of_OV_delay_setting 3B00                               _vfpfcnvrt$1162 012F  
                             _vfpfcnvrt$1163 0131                               _vfpfcnvrt$1189 0133  
                                 _INTCONbits 000B                                  ??_init_GPIO 0071  
                                ??_initClock 0071                                  ??_init_TMR1 0071  
                             __pstringtext10 389E                               __pstringtext11 38CB  
                             __pstringtext20 3A25                               __pstringtext12 38F7  
                             __pstringtext21 3A3A                               __pstringtext13 3922  
                             __pstringtext30 3B14                               __pstringtext22 3A4F  
                             __pstringtext14 394C                               __pstringtext31 3B18  
                             __pstringtext23 3A64                               __pstringtext15 3976  
                             __pstringtext40 3B3C                               __pstringtext32 3B1C  
                             __pstringtext24 3A79                               __pstringtext16 399E  
                             __pstringtext41 3B3F                               __pstringtext33 3B20  
                             __pstringtext25 3A8D                               __pstringtext17 39E4  
                             __pstringtext50 3B5A                               __pstringtext42 3B42  
                             __pstringtext34 3B24                               __pstringtext26 3AA1  
                             __pstringtext18 39FA                               __pstringtext51 3B5D  
                             __pstringtext43 3B45                               __pstringtext35 3B28  
                             __pstringtext27 3AB4                               __pstringtext19 3A10  
                             __pstringtext52 3B60                               __pstringtext44 3B48  
                             __pstringtext36 3B2C                               __pstringtext28 3AC6  
                             __pstringtext53 3B63                               __pstringtext45 3B4B  
                             __pstringtext37 3B30                               __pstringtext29 3B10  
                             __pstringtext54 3B66                               __pstringtext46 3B4E  
                             __pstringtext38 3B34                               __pstringtext55 0000  
                             __pstringtext47 3B51                               __pstringtext39 3B38  
                             __pstringtext48 3B54                               __pstringtext49 3B57  
                                   isalpha@c 0071                                     isdigit@c 0071  
                                 vsnprintf@f 0159                                   vsnprintf@n 0150  
                                 vsnprintf@s 014E                             _UV_delay_setting 3B00  
                                  snprintf@n 0161                                    snprintf@s 015F  
               __end_of_send_I2C_controlByte 3127                                     intlevel1 0000  
        setShortCircuitProtection@current_mA 0066                                     islower@c 0071  
                                ?_AFE_UPDATE 0070                                     isspace@c 0071  
                          __CFG_CLKOUTEN$OFF 0000                                    strcpy@src 0071  
                                _PPSLOCKbits 0E0F                                     isupper@c 0071  
         __size_of_setShortCircuitProtection 0117                                    strncmp@_l 0071  
                                  strncmp@_r 0073                                  efgtoa@nmode 00C9  
                          _maxCellTempCharge 01CA                              ___aomod@divisor 0020  
                                ??_vfpfcnvrt 0120                                     stoa@nuls 0023  
                            ___aomod@counter 0072                                __pstringtext1 39C4  
                              __pstringtext2 3AD8                                __pstringtext3 3AE8  
                              __pstringtext4 3AF8                                __pstringtext5 3B00  
                              __pstringtext6 3B08                                __pstringtext7 3800  
                              __pstringtext8 383B                                __pstringtext9 3870  
                     __Umul8_16@multiplicand 0071                                     tolower@c 0077  
                             _vsnprintf$1791 0155                       __size_of___fpclassifyf 0078  
                                   strncmp@l 0078                                     strncmp@n 0075  
                                   strncmp@r 007A                                     toupper@c 0077  
                      EUSART_Write_Text@text 0072                                 ___aldiv@sign 002D  
                                _SSPCON2bits 0216                                ___fladd@signs 0028  
            __end_of_setTemperatureLimitsint 343F                           EUSART_Write@txData 0071  
                               ___aodiv@sign 0073      setOverCurrentDischargeProtection@scaler 00A0  
                                ??_vsnprintf 00EE                                 ___fladd@aexp 0029  
                               ___fladd@bexp 002A                        __size_of_statemachine 012C  
                                _toggleColor 007C                         __Umul8_16@multiplier 0079  
                                 _SSPCONbits 0215                   __end_of_RGB_AWAIT_AFE_CONN 32E9  
                               ___aomod@sign 0073                           EUSART_Write_Text@i 0075  
                      __end_of_send_I2C_NACK 310A                            __Umul8_16@product 0075  
