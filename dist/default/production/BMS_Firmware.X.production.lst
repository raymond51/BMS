

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Mar 15 14:48:55 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1719
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	idataBANK4,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	stringtext6,global,class=STRCODE,delta=2
    12                           	psect	stringtext7,global,class=STRCODE,delta=2
    13                           	psect	stringtext8,global,class=STRCODE,delta=2
    14                           	psect	stringtext9,global,class=STRCODE,delta=2
    15                           	psect	stringtext10,global,class=STRCODE,delta=2
    16                           	psect	stringtext11,global,class=STRCODE,delta=2
    17                           	psect	stringtext12,global,class=STRCODE,delta=2
    18                           	psect	stringtext13,global,class=STRCODE,delta=2
    19                           	psect	stringtext14,global,class=STRCODE,delta=2
    20                           	psect	stringtext15,global,class=STRCODE,delta=2
    21                           	psect	stringtext16,global,class=STRCODE,delta=2
    22                           	psect	stringtext17,global,class=STRCODE,delta=2
    23                           	psect	stringtext18,global,class=STRCODE,delta=2
    24                           	psect	stringtext19,global,class=STRCODE,delta=2
    25                           	psect	stringtext20,global,class=STRCODE,delta=2
    26                           	psect	stringtext21,global,class=STRCODE,delta=2
    27                           	psect	stringtext22,global,class=STRCODE,delta=2
    28                           	psect	stringtext23,global,class=STRCODE,delta=2
    29                           	psect	stringtext24,global,class=STRCODE,delta=2
    30                           	psect	stringtext25,global,class=STRCODE,delta=2
    31                           	psect	stringtext26,global,class=STRCODE,delta=2
    32                           	psect	stringtext27,global,class=STRCODE,delta=2
    33                           	psect	stringtext28,global,class=STRCODE,delta=2
    34                           	psect	stringtext29,global,class=STRCODE,delta=2
    35                           	psect	stringtext30,global,class=STRCODE,delta=2
    36                           	psect	stringtext31,global,class=STRCODE,delta=2
    37                           	psect	stringtext32,global,class=STRCODE,delta=2
    38                           	psect	stringtext33,global,class=STRCODE,delta=2
    39                           	psect	stringtext34,global,class=STRCODE,delta=2
    40                           	psect	stringtext35,global,class=STRCODE,delta=2
    41                           	psect	stringtext36,global,class=STRCODE,delta=2
    42                           	psect	stringtext37,global,class=STRCODE,delta=2
    43                           	psect	stringtext38,global,class=STRCODE,delta=2
    44                           	psect	stringtext39,global,class=STRCODE,delta=2
    45                           	psect	stringtext40,global,class=STRCODE,delta=2
    46                           	psect	stringtext41,global,class=STRCODE,delta=2
    47                           	psect	stringtext42,global,class=STRCODE,delta=2
    48                           	psect	stringtext43,global,class=STRCODE,delta=2
    49                           	psect	stringtext44,global,class=STRCODE,delta=2
    50                           	psect	stringtext45,global,class=STRCODE,delta=2
    51                           	psect	stringtext46,global,class=STRCODE,delta=2
    52                           	psect	stringtext47,global,class=STRCODE,delta=2
    53                           	psect	stringtext48,global,class=STRCODE,delta=2
    54                           	psect	cinit,global,class=CODE,merge=1,delta=2
    55                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    56                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    57                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    58                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    59                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    60                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    61                           	psect	clrtext,global,class=CODE,delta=2
    62                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    63                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    64                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    65                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    66                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    67                           	psect	text1,local,class=CODE,merge=1,delta=2
    68                           	psect	text2,local,class=CODE,merge=1,delta=2
    69                           	psect	text3,local,class=CODE,merge=1,delta=2
    70                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    71                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    72                           	psect	text6,local,class=CODE,merge=1,delta=2
    73                           	psect	text7,local,class=CODE,merge=1,delta=2
    74                           	psect	text8,local,class=CODE,merge=1,delta=2
    75                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    76                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    77                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    78                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    79                           	psect	text13,local,class=CODE,merge=1,delta=2
    80                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    81                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    82                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    83                           	psect	text17,local,class=CODE,merge=1,delta=2
    84                           	psect	text18,local,class=CODE,merge=1,delta=2
    85                           	psect	text19,local,class=CODE,merge=1,delta=2
    86                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    87                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    88                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    89                           	psect	text23,local,class=CODE,merge=1,delta=2
    90                           	psect	text24,local,class=CODE,merge=1,delta=2
    91                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    92                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    93                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    94                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    95                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    96                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    97                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    98                           	psect	text32,local,class=CODE,merge=1,delta=2
    99                           	psect	text33,local,class=CODE,merge=1,delta=2
   100                           	psect	text34,local,class=CODE,merge=1,delta=2
   101                           	psect	text35,local,class=CODE,merge=1,delta=2
   102                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
   103                           	psect	text37,local,class=CODE,merge=1,delta=2
   104                           	psect	text38,local,class=CODE,merge=1,delta=2
   105                           	psect	text39,local,class=CODE,merge=1,delta=2
   106                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
   107                           	psect	text41,local,class=CODE,merge=1,delta=2
   108                           	psect	text42,local,class=CODE,merge=1,delta=2
   109                           	psect	text43,local,class=CODE,merge=1,delta=2
   110                           	psect	text44,local,class=CODE,merge=1,delta=2
   111                           	psect	text45,local,class=CODE,merge=1,delta=2
   112                           	psect	text46,local,class=CODE,merge=1,delta=2
   113                           	psect	text47,local,class=CODE,merge=1,delta=2
   114                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
   115                           	psect	text49,local,class=CODE,merge=1,delta=2
   116                           	psect	text50,local,class=CODE,merge=1,delta=2,group=2
   117                           	psect	text51,local,class=CODE,merge=1,delta=2
   118                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
   119                           	psect	text53,local,class=CODE,merge=1,delta=2
   120                           	psect	text54,local,class=CODE,merge=1,delta=2
   121                           	psect	text55,local,class=CODE,merge=1,delta=2
   122                           	psect	text56,local,class=CODE,merge=1,delta=2
   123                           	psect	text57,local,class=CODE,merge=1,delta=2
   124                           	psect	text58,local,class=CODE,merge=1,delta=2
   125                           	psect	text59,local,class=CODE,merge=1,delta=2
   126                           	psect	text60,local,class=CODE,merge=1,delta=2
   127                           	psect	text61,local,class=CODE,merge=1,delta=2
   128                           	psect	text62,local,class=CODE,merge=1,delta=2
   129                           	psect	text63,local,class=CODE,merge=1,delta=2
   130                           	psect	text64,local,class=CODE,merge=1,delta=2,group=1
   131                           	psect	text65,local,class=CODE,merge=1,delta=2,group=1
   132                           	psect	text66,local,class=CODE,merge=1,delta=2
   133                           	psect	text67,local,class=CODE,merge=1,delta=2,group=1
   134                           	psect	text68,local,class=CODE,merge=1,delta=2,group=1
   135                           	psect	text69,local,class=CODE,merge=1,delta=2,group=1
   136                           	psect	text70,local,class=CODE,merge=1,delta=2,group=1
   137                           	psect	text71,local,class=CODE,merge=1,delta=2,group=1
   138                           	psect	text72,local,class=CODE,merge=1,delta=2
   139                           	psect	text73,local,class=CODE,merge=1,delta=2
   140                           	psect	text74,local,class=CODE,merge=1,delta=2
   141                           	psect	text75,local,class=CODE,merge=1,delta=2
   142                           	psect	text76,local,class=CODE,merge=1,delta=2
   143                           	psect	text77,local,class=CODE,merge=1,delta=2
   144                           	psect	text78,local,class=CODE,merge=1,delta=2
   145                           	psect	text79,local,class=CODE,merge=1,delta=2
   146                           	psect	text80,local,class=CODE,merge=1,delta=2,group=1
   147                           	psect	intentry,global,class=CODE,delta=2
   148                           	psect	text7_split_1,local,class=CODE,merge=1,delta=2
   149                           	psect	text7_split_2,local,class=CODE,merge=1,delta=2
   150                           	dabs	1,0xCA0,32
   151                           	dabs	1,0xC20,80
   152                           	dabs	1,0xBE1,15
   153                           	dabs	1,0x2771,0,_messageBuffer
   154                           	dabs	1,0x7E,2
   155  0000                     
   156                           ; Version 2.05
   157                           ; Generated 20/12/2018 GMT
   158                           ; 
   159                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   160                           ; All rights reserved.
   161                           ; 
   162                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   163                           ; 
   164                           ; Redistribution and use in source and binary forms, with or without modification, are
   165                           ; permitted provided that the following conditions are met:
   166                           ; 
   167                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   168                           ;        conditions and the following disclaimer.
   169                           ; 
   170                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   171                           ;        of conditions and the following disclaimer in the documentation and/or other
   172                           ;        materials provided with the distribution.
   173                           ; 
   174                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   175                           ;        software without specific prior written permission.
   176                           ; 
   177                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   178                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   179                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   180                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   181                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   182                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   183                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   184                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   185                           ; 
   186                           ; 
   187                           ; Code-generator required, PIC16F1719 Definitions
   188                           ; 
   189                           ; SFR Addresses
   190  0000                     	;# 
   191  0001                     	;# 
   192  0002                     	;# 
   193  0003                     	;# 
   194  0004                     	;# 
   195  0005                     	;# 
   196  0006                     	;# 
   197  0007                     	;# 
   198  0008                     	;# 
   199  0009                     	;# 
   200  000A                     	;# 
   201  000B                     	;# 
   202  000C                     	;# 
   203  000D                     	;# 
   204  000E                     	;# 
   205  000F                     	;# 
   206  0010                     	;# 
   207  0011                     	;# 
   208  0012                     	;# 
   209  0013                     	;# 
   210  0015                     	;# 
   211  0016                     	;# 
   212  0016                     	;# 
   213  0017                     	;# 
   214  0018                     	;# 
   215  0019                     	;# 
   216  001A                     	;# 
   217  001B                     	;# 
   218  001C                     	;# 
   219  008C                     	;# 
   220  008D                     	;# 
   221  008E                     	;# 
   222  008F                     	;# 
   223  0090                     	;# 
   224  0091                     	;# 
   225  0092                     	;# 
   226  0093                     	;# 
   227  0095                     	;# 
   228  0096                     	;# 
   229  0097                     	;# 
   230  0098                     	;# 
   231  0099                     	;# 
   232  009A                     	;# 
   233  009B                     	;# 
   234  009B                     	;# 
   235  009C                     	;# 
   236  009D                     	;# 
   237  009E                     	;# 
   238  009F                     	;# 
   239  010C                     	;# 
   240  010D                     	;# 
   241  010E                     	;# 
   242  010F                     	;# 
   243  0110                     	;# 
   244  0111                     	;# 
   245  0112                     	;# 
   246  0113                     	;# 
   247  0114                     	;# 
   248  0115                     	;# 
   249  0116                     	;# 
   250  0117                     	;# 
   251  0118                     	;# 
   252  0119                     	;# 
   253  011A                     	;# 
   254  011B                     	;# 
   255  011B                     	;# 
   256  011C                     	;# 
   257  018C                     	;# 
   258  018D                     	;# 
   259  018E                     	;# 
   260  018F                     	;# 
   261  0190                     	;# 
   262  0191                     	;# 
   263  0191                     	;# 
   264  0192                     	;# 
   265  0193                     	;# 
   266  0193                     	;# 
   267  0194                     	;# 
   268  0195                     	;# 
   269  0196                     	;# 
   270  0197                     	;# 
   271  0199                     	;# 
   272  0199                     	;# 
   273  0199                     	;# 
   274  019A                     	;# 
   275  019A                     	;# 
   276  019A                     	;# 
   277  019B                     	;# 
   278  019B                     	;# 
   279  019B                     	;# 
   280  019B                     	;# 
   281  019B                     	;# 
   282  019C                     	;# 
   283  019C                     	;# 
   284  019C                     	;# 
   285  019D                     	;# 
   286  019D                     	;# 
   287  019D                     	;# 
   288  019E                     	;# 
   289  019E                     	;# 
   290  019E                     	;# 
   291  019F                     	;# 
   292  019F                     	;# 
   293  019F                     	;# 
   294  019F                     	;# 
   295  019F                     	;# 
   296  020C                     	;# 
   297  020D                     	;# 
   298  020E                     	;# 
   299  020F                     	;# 
   300  0210                     	;# 
   301  0211                     	;# 
   302  0211                     	;# 
   303  0212                     	;# 
   304  0212                     	;# 
   305  0213                     	;# 
   306  0213                     	;# 
   307  0214                     	;# 
   308  0214                     	;# 
   309  0215                     	;# 
   310  0215                     	;# 
   311  0215                     	;# 
   312  0215                     	;# 
   313  0216                     	;# 
   314  0216                     	;# 
   315  0217                     	;# 
   316  0217                     	;# 
   317  028C                     	;# 
   318  028D                     	;# 
   319  028E                     	;# 
   320  028F                     	;# 
   321  0290                     	;# 
   322  0291                     	;# 
   323  0291                     	;# 
   324  0292                     	;# 
   325  0293                     	;# 
   326  0293                     	;# 
   327  0298                     	;# 
   328  0298                     	;# 
   329  0299                     	;# 
   330  029A                     	;# 
   331  029A                     	;# 
   332  029E                     	;# 
   333  030C                     	;# 
   334  030D                     	;# 
   335  030E                     	;# 
   336  030F                     	;# 
   337  0310                     	;# 
   338  038C                     	;# 
   339  038D                     	;# 
   340  038E                     	;# 
   341  038F                     	;# 
   342  0390                     	;# 
   343  0391                     	;# 
   344  0392                     	;# 
   345  0393                     	;# 
   346  0394                     	;# 
   347  0395                     	;# 
   348  0396                     	;# 
   349  0397                     	;# 
   350  0398                     	;# 
   351  0399                     	;# 
   352  039D                     	;# 
   353  039E                     	;# 
   354  039F                     	;# 
   355  0415                     	;# 
   356  0416                     	;# 
   357  0417                     	;# 
   358  041C                     	;# 
   359  041D                     	;# 
   360  041E                     	;# 
   361  0498                     	;# 
   362  0498                     	;# 
   363  0499                     	;# 
   364  049A                     	;# 
   365  049B                     	;# 
   366  049B                     	;# 
   367  049C                     	;# 
   368  049D                     	;# 
   369  049E                     	;# 
   370  049F                     	;# 
   371  0511                     	;# 
   372  0515                     	;# 
   373  0617                     	;# 
   374  0618                     	;# 
   375  0619                     	;# 
   376  0619                     	;# 
   377  061A                     	;# 
   378  061B                     	;# 
   379  061C                     	;# 
   380  061C                     	;# 
   381  0691                     	;# 
   382  0692                     	;# 
   383  0693                     	;# 
   384  0694                     	;# 
   385  0695                     	;# 
   386  0696                     	;# 
   387  0697                     	;# 
   388  0698                     	;# 
   389  0699                     	;# 
   390  069A                     	;# 
   391  069B                     	;# 
   392  069C                     	;# 
   393  069D                     	;# 
   394  069E                     	;# 
   395  069F                     	;# 
   396  0E0F                     	;# 
   397  0E10                     	;# 
   398  0E11                     	;# 
   399  0E12                     	;# 
   400  0E13                     	;# 
   401  0E14                     	;# 
   402  0E15                     	;# 
   403  0E17                     	;# 
   404  0E20                     	;# 
   405  0E21                     	;# 
   406  0E22                     	;# 
   407  0E24                     	;# 
   408  0E25                     	;# 
   409  0E28                     	;# 
   410  0E29                     	;# 
   411  0E2A                     	;# 
   412  0E2B                     	;# 
   413  0E90                     	;# 
   414  0E91                     	;# 
   415  0E92                     	;# 
   416  0E93                     	;# 
   417  0E94                     	;# 
   418  0E95                     	;# 
   419  0E96                     	;# 
   420  0E97                     	;# 
   421  0E98                     	;# 
   422  0E99                     	;# 
   423  0E9A                     	;# 
   424  0E9B                     	;# 
   425  0E9C                     	;# 
   426  0E9D                     	;# 
   427  0E9E                     	;# 
   428  0E9F                     	;# 
   429  0EA0                     	;# 
   430  0EA1                     	;# 
   431  0EA2                     	;# 
   432  0EA3                     	;# 
   433  0EA4                     	;# 
   434  0EA5                     	;# 
   435  0EA6                     	;# 
   436  0EA7                     	;# 
   437  0EA8                     	;# 
   438  0EA9                     	;# 
   439  0EAA                     	;# 
   440  0EAB                     	;# 
   441  0EAC                     	;# 
   442  0EAD                     	;# 
   443  0EAE                     	;# 
   444  0EAF                     	;# 
   445  0EB0                     	;# 
   446  0EB1                     	;# 
   447  0EB2                     	;# 
   448  0F0F                     	;# 
   449  0F10                     	;# 
   450  0F11                     	;# 
   451  0F12                     	;# 
   452  0F13                     	;# 
   453  0F14                     	;# 
   454  0F15                     	;# 
   455  0F16                     	;# 
   456  0F17                     	;# 
   457  0F18                     	;# 
   458  0F19                     	;# 
   459  0F1A                     	;# 
   460  0F1B                     	;# 
   461  0F1C                     	;# 
   462  0F1D                     	;# 
   463  0F1E                     	;# 
   464  0F1F                     	;# 
   465  0F20                     	;# 
   466  0F21                     	;# 
   467  0F22                     	;# 
   468  0F23                     	;# 
   469  0F24                     	;# 
   470  0F25                     	;# 
   471  0F26                     	;# 
   472  0F27                     	;# 
   473  0F28                     	;# 
   474  0F29                     	;# 
   475  0F2A                     	;# 
   476  0F2B                     	;# 
   477  0F2C                     	;# 
   478  0F2D                     	;# 
   479  0F2E                     	;# 
   480  0F2F                     	;# 
   481  0F30                     	;# 
   482  0F31                     	;# 
   483  0F32                     	;# 
   484  0F33                     	;# 
   485  0F34                     	;# 
   486  0F35                     	;# 
   487  0F36                     	;# 
   488  0F37                     	;# 
   489  0FE4                     	;# 
   490  0FE5                     	;# 
   491  0FE6                     	;# 
   492  0FE7                     	;# 
   493  0FE8                     	;# 
   494  0FE9                     	;# 
   495  0FEA                     	;# 
   496  0FEB                     	;# 
   497  0FED                     	;# 
   498  0FEE                     	;# 
   499  0FEF                     	;# 
   500  0000                     	;# 
   501  0001                     	;# 
   502  0002                     	;# 
   503  0003                     	;# 
   504  0004                     	;# 
   505  0005                     	;# 
   506  0006                     	;# 
   507  0007                     	;# 
   508  0008                     	;# 
   509  0009                     	;# 
   510  000A                     	;# 
   511  000B                     	;# 
   512  000C                     	;# 
   513  000D                     	;# 
   514  000E                     	;# 
   515  000F                     	;# 
   516  0010                     	;# 
   517  0011                     	;# 
   518  0012                     	;# 
   519  0013                     	;# 
   520  0015                     	;# 
   521  0016                     	;# 
   522  0016                     	;# 
   523  0017                     	;# 
   524  0018                     	;# 
   525  0019                     	;# 
   526  001A                     	;# 
   527  001B                     	;# 
   528  001C                     	;# 
   529  008C                     	;# 
   530  008D                     	;# 
   531  008E                     	;# 
   532  008F                     	;# 
   533  0090                     	;# 
   534  0091                     	;# 
   535  0092                     	;# 
   536  0093                     	;# 
   537  0095                     	;# 
   538  0096                     	;# 
   539  0097                     	;# 
   540  0098                     	;# 
   541  0099                     	;# 
   542  009A                     	;# 
   543  009B                     	;# 
   544  009B                     	;# 
   545  009C                     	;# 
   546  009D                     	;# 
   547  009E                     	;# 
   548  009F                     	;# 
   549  010C                     	;# 
   550  010D                     	;# 
   551  010E                     	;# 
   552  010F                     	;# 
   553  0110                     	;# 
   554  0111                     	;# 
   555  0112                     	;# 
   556  0113                     	;# 
   557  0114                     	;# 
   558  0115                     	;# 
   559  0116                     	;# 
   560  0117                     	;# 
   561  0118                     	;# 
   562  0119                     	;# 
   563  011A                     	;# 
   564  011B                     	;# 
   565  011B                     	;# 
   566  011C                     	;# 
   567  018C                     	;# 
   568  018D                     	;# 
   569  018E                     	;# 
   570  018F                     	;# 
   571  0190                     	;# 
   572  0191                     	;# 
   573  0191                     	;# 
   574  0192                     	;# 
   575  0193                     	;# 
   576  0193                     	;# 
   577  0194                     	;# 
   578  0195                     	;# 
   579  0196                     	;# 
   580  0197                     	;# 
   581  0199                     	;# 
   582  0199                     	;# 
   583  0199                     	;# 
   584  019A                     	;# 
   585  019A                     	;# 
   586  019A                     	;# 
   587  019B                     	;# 
   588  019B                     	;# 
   589  019B                     	;# 
   590  019B                     	;# 
   591  019B                     	;# 
   592  019C                     	;# 
   593  019C                     	;# 
   594  019C                     	;# 
   595  019D                     	;# 
   596  019D                     	;# 
   597  019D                     	;# 
   598  019E                     	;# 
   599  019E                     	;# 
   600  019E                     	;# 
   601  019F                     	;# 
   602  019F                     	;# 
   603  019F                     	;# 
   604  019F                     	;# 
   605  019F                     	;# 
   606  020C                     	;# 
   607  020D                     	;# 
   608  020E                     	;# 
   609  020F                     	;# 
   610  0210                     	;# 
   611  0211                     	;# 
   612  0211                     	;# 
   613  0212                     	;# 
   614  0212                     	;# 
   615  0213                     	;# 
   616  0213                     	;# 
   617  0214                     	;# 
   618  0214                     	;# 
   619  0215                     	;# 
   620  0215                     	;# 
   621  0215                     	;# 
   622  0215                     	;# 
   623  0216                     	;# 
   624  0216                     	;# 
   625  0217                     	;# 
   626  0217                     	;# 
   627  028C                     	;# 
   628  028D                     	;# 
   629  028E                     	;# 
   630  028F                     	;# 
   631  0290                     	;# 
   632  0291                     	;# 
   633  0291                     	;# 
   634  0292                     	;# 
   635  0293                     	;# 
   636  0293                     	;# 
   637  0298                     	;# 
   638  0298                     	;# 
   639  0299                     	;# 
   640  029A                     	;# 
   641  029A                     	;# 
   642  029E                     	;# 
   643  030C                     	;# 
   644  030D                     	;# 
   645  030E                     	;# 
   646  030F                     	;# 
   647  0310                     	;# 
   648  038C                     	;# 
   649  038D                     	;# 
   650  038E                     	;# 
   651  038F                     	;# 
   652  0390                     	;# 
   653  0391                     	;# 
   654  0392                     	;# 
   655  0393                     	;# 
   656  0394                     	;# 
   657  0395                     	;# 
   658  0396                     	;# 
   659  0397                     	;# 
   660  0398                     	;# 
   661  0399                     	;# 
   662  039D                     	;# 
   663  039E                     	;# 
   664  039F                     	;# 
   665  0415                     	;# 
   666  0416                     	;# 
   667  0417                     	;# 
   668  041C                     	;# 
   669  041D                     	;# 
   670  041E                     	;# 
   671  0498                     	;# 
   672  0498                     	;# 
   673  0499                     	;# 
   674  049A                     	;# 
   675  049B                     	;# 
   676  049B                     	;# 
   677  049C                     	;# 
   678  049D                     	;# 
   679  049E                     	;# 
   680  049F                     	;# 
   681  0511                     	;# 
   682  0515                     	;# 
   683  0617                     	;# 
   684  0618                     	;# 
   685  0619                     	;# 
   686  0619                     	;# 
   687  061A                     	;# 
   688  061B                     	;# 
   689  061C                     	;# 
   690  061C                     	;# 
   691  0691                     	;# 
   692  0692                     	;# 
   693  0693                     	;# 
   694  0694                     	;# 
   695  0695                     	;# 
   696  0696                     	;# 
   697  0697                     	;# 
   698  0698                     	;# 
   699  0699                     	;# 
   700  069A                     	;# 
   701  069B                     	;# 
   702  069C                     	;# 
   703  069D                     	;# 
   704  069E                     	;# 
   705  069F                     	;# 
   706  0E0F                     	;# 
   707  0E10                     	;# 
   708  0E11                     	;# 
   709  0E12                     	;# 
   710  0E13                     	;# 
   711  0E14                     	;# 
   712  0E15                     	;# 
   713  0E17                     	;# 
   714  0E20                     	;# 
   715  0E21                     	;# 
   716  0E22                     	;# 
   717  0E24                     	;# 
   718  0E25                     	;# 
   719  0E28                     	;# 
   720  0E29                     	;# 
   721  0E2A                     	;# 
   722  0E2B                     	;# 
   723  0E90                     	;# 
   724  0E91                     	;# 
   725  0E92                     	;# 
   726  0E93                     	;# 
   727  0E94                     	;# 
   728  0E95                     	;# 
   729  0E96                     	;# 
   730  0E97                     	;# 
   731  0E98                     	;# 
   732  0E99                     	;# 
   733  0E9A                     	;# 
   734  0E9B                     	;# 
   735  0E9C                     	;# 
   736  0E9D                     	;# 
   737  0E9E                     	;# 
   738  0E9F                     	;# 
   739  0EA0                     	;# 
   740  0EA1                     	;# 
   741  0EA2                     	;# 
   742  0EA3                     	;# 
   743  0EA4                     	;# 
   744  0EA5                     	;# 
   745  0EA6                     	;# 
   746  0EA7                     	;# 
   747  0EA8                     	;# 
   748  0EA9                     	;# 
   749  0EAA                     	;# 
   750  0EAB                     	;# 
   751  0EAC                     	;# 
   752  0EAD                     	;# 
   753  0EAE                     	;# 
   754  0EAF                     	;# 
   755  0EB0                     	;# 
   756  0EB1                     	;# 
   757  0EB2                     	;# 
   758  0F0F                     	;# 
   759  0F10                     	;# 
   760  0F11                     	;# 
   761  0F12                     	;# 
   762  0F13                     	;# 
   763  0F14                     	;# 
   764  0F15                     	;# 
   765  0F16                     	;# 
   766  0F17                     	;# 
   767  0F18                     	;# 
   768  0F19                     	;# 
   769  0F1A                     	;# 
   770  0F1B                     	;# 
   771  0F1C                     	;# 
   772  0F1D                     	;# 
   773  0F1E                     	;# 
   774  0F1F                     	;# 
   775  0F20                     	;# 
   776  0F21                     	;# 
   777  0F22                     	;# 
   778  0F23                     	;# 
   779  0F24                     	;# 
   780  0F25                     	;# 
   781  0F26                     	;# 
   782  0F27                     	;# 
   783  0F28                     	;# 
   784  0F29                     	;# 
   785  0F2A                     	;# 
   786  0F2B                     	;# 
   787  0F2C                     	;# 
   788  0F2D                     	;# 
   789  0F2E                     	;# 
   790  0F2F                     	;# 
   791  0F30                     	;# 
   792  0F31                     	;# 
   793  0F32                     	;# 
   794  0F33                     	;# 
   795  0F34                     	;# 
   796  0F35                     	;# 
   797  0F36                     	;# 
   798  0F37                     	;# 
   799  0FE4                     	;# 
   800  0FE5                     	;# 
   801  0FE6                     	;# 
   802  0FE7                     	;# 
   803  0FE8                     	;# 
   804  0FE9                     	;# 
   805  0FEA                     	;# 
   806  0FEB                     	;# 
   807  0FED                     	;# 
   808  0FEE                     	;# 
   809  0FEF                     	;# 
   810  0000                     	;# 
   811  0001                     	;# 
   812  0002                     	;# 
   813  0003                     	;# 
   814  0004                     	;# 
   815  0005                     	;# 
   816  0006                     	;# 
   817  0007                     	;# 
   818  0008                     	;# 
   819  0009                     	;# 
   820  000A                     	;# 
   821  000B                     	;# 
   822  000C                     	;# 
   823  000D                     	;# 
   824  000E                     	;# 
   825  000F                     	;# 
   826  0010                     	;# 
   827  0011                     	;# 
   828  0012                     	;# 
   829  0013                     	;# 
   830  0015                     	;# 
   831  0016                     	;# 
   832  0016                     	;# 
   833  0017                     	;# 
   834  0018                     	;# 
   835  0019                     	;# 
   836  001A                     	;# 
   837  001B                     	;# 
   838  001C                     	;# 
   839  008C                     	;# 
   840  008D                     	;# 
   841  008E                     	;# 
   842  008F                     	;# 
   843  0090                     	;# 
   844  0091                     	;# 
   845  0092                     	;# 
   846  0093                     	;# 
   847  0095                     	;# 
   848  0096                     	;# 
   849  0097                     	;# 
   850  0098                     	;# 
   851  0099                     	;# 
   852  009A                     	;# 
   853  009B                     	;# 
   854  009B                     	;# 
   855  009C                     	;# 
   856  009D                     	;# 
   857  009E                     	;# 
   858  009F                     	;# 
   859  010C                     	;# 
   860  010D                     	;# 
   861  010E                     	;# 
   862  010F                     	;# 
   863  0110                     	;# 
   864  0111                     	;# 
   865  0112                     	;# 
   866  0113                     	;# 
   867  0114                     	;# 
   868  0115                     	;# 
   869  0116                     	;# 
   870  0117                     	;# 
   871  0118                     	;# 
   872  0119                     	;# 
   873  011A                     	;# 
   874  011B                     	;# 
   875  011B                     	;# 
   876  011C                     	;# 
   877  018C                     	;# 
   878  018D                     	;# 
   879  018E                     	;# 
   880  018F                     	;# 
   881  0190                     	;# 
   882  0191                     	;# 
   883  0191                     	;# 
   884  0192                     	;# 
   885  0193                     	;# 
   886  0193                     	;# 
   887  0194                     	;# 
   888  0195                     	;# 
   889  0196                     	;# 
   890  0197                     	;# 
   891  0199                     	;# 
   892  0199                     	;# 
   893  0199                     	;# 
   894  019A                     	;# 
   895  019A                     	;# 
   896  019A                     	;# 
   897  019B                     	;# 
   898  019B                     	;# 
   899  019B                     	;# 
   900  019B                     	;# 
   901  019B                     	;# 
   902  019C                     	;# 
   903  019C                     	;# 
   904  019C                     	;# 
   905  019D                     	;# 
   906  019D                     	;# 
   907  019D                     	;# 
   908  019E                     	;# 
   909  019E                     	;# 
   910  019E                     	;# 
   911  019F                     	;# 
   912  019F                     	;# 
   913  019F                     	;# 
   914  019F                     	;# 
   915  019F                     	;# 
   916  020C                     	;# 
   917  020D                     	;# 
   918  020E                     	;# 
   919  020F                     	;# 
   920  0210                     	;# 
   921  0211                     	;# 
   922  0211                     	;# 
   923  0212                     	;# 
   924  0212                     	;# 
   925  0213                     	;# 
   926  0213                     	;# 
   927  0214                     	;# 
   928  0214                     	;# 
   929  0215                     	;# 
   930  0215                     	;# 
   931  0215                     	;# 
   932  0215                     	;# 
   933  0216                     	;# 
   934  0216                     	;# 
   935  0217                     	;# 
   936  0217                     	;# 
   937  028C                     	;# 
   938  028D                     	;# 
   939  028E                     	;# 
   940  028F                     	;# 
   941  0290                     	;# 
   942  0291                     	;# 
   943  0291                     	;# 
   944  0292                     	;# 
   945  0293                     	;# 
   946  0293                     	;# 
   947  0298                     	;# 
   948  0298                     	;# 
   949  0299                     	;# 
   950  029A                     	;# 
   951  029A                     	;# 
   952  029E                     	;# 
   953  030C                     	;# 
   954  030D                     	;# 
   955  030E                     	;# 
   956  030F                     	;# 
   957  0310                     	;# 
   958  038C                     	;# 
   959  038D                     	;# 
   960  038E                     	;# 
   961  038F                     	;# 
   962  0390                     	;# 
   963  0391                     	;# 
   964  0392                     	;# 
   965  0393                     	;# 
   966  0394                     	;# 
   967  0395                     	;# 
   968  0396                     	;# 
   969  0397                     	;# 
   970  0398                     	;# 
   971  0399                     	;# 
   972  039D                     	;# 
   973  039E                     	;# 
   974  039F                     	;# 
   975  0415                     	;# 
   976  0416                     	;# 
   977  0417                     	;# 
   978  041C                     	;# 
   979  041D                     	;# 
   980  041E                     	;# 
   981  0498                     	;# 
   982  0498                     	;# 
   983  0499                     	;# 
   984  049A                     	;# 
   985  049B                     	;# 
   986  049B                     	;# 
   987  049C                     	;# 
   988  049D                     	;# 
   989  049E                     	;# 
   990  049F                     	;# 
   991  0511                     	;# 
   992  0515                     	;# 
   993  0617                     	;# 
   994  0618                     	;# 
   995  0619                     	;# 
   996  0619                     	;# 
   997  061A                     	;# 
   998  061B                     	;# 
   999  061C                     	;# 
  1000  061C                     	;# 
  1001  0691                     	;# 
  1002  0692                     	;# 
  1003  0693                     	;# 
  1004  0694                     	;# 
  1005  0695                     	;# 
  1006  0696                     	;# 
  1007  0697                     	;# 
  1008  0698                     	;# 
  1009  0699                     	;# 
  1010  069A                     	;# 
  1011  069B                     	;# 
  1012  069C                     	;# 
  1013  069D                     	;# 
  1014  069E                     	;# 
  1015  069F                     	;# 
  1016  0E0F                     	;# 
  1017  0E10                     	;# 
  1018  0E11                     	;# 
  1019  0E12                     	;# 
  1020  0E13                     	;# 
  1021  0E14                     	;# 
  1022  0E15                     	;# 
  1023  0E17                     	;# 
  1024  0E20                     	;# 
  1025  0E21                     	;# 
  1026  0E22                     	;# 
  1027  0E24                     	;# 
  1028  0E25                     	;# 
  1029  0E28                     	;# 
  1030  0E29                     	;# 
  1031  0E2A                     	;# 
  1032  0E2B                     	;# 
  1033  0E90                     	;# 
  1034  0E91                     	;# 
  1035  0E92                     	;# 
  1036  0E93                     	;# 
  1037  0E94                     	;# 
  1038  0E95                     	;# 
  1039  0E96                     	;# 
  1040  0E97                     	;# 
  1041  0E98                     	;# 
  1042  0E99                     	;# 
  1043  0E9A                     	;# 
  1044  0E9B                     	;# 
  1045  0E9C                     	;# 
  1046  0E9D                     	;# 
  1047  0E9E                     	;# 
  1048  0E9F                     	;# 
  1049  0EA0                     	;# 
  1050  0EA1                     	;# 
  1051  0EA2                     	;# 
  1052  0EA3                     	;# 
  1053  0EA4                     	;# 
  1054  0EA5                     	;# 
  1055  0EA6                     	;# 
  1056  0EA7                     	;# 
  1057  0EA8                     	;# 
  1058  0EA9                     	;# 
  1059  0EAA                     	;# 
  1060  0EAB                     	;# 
  1061  0EAC                     	;# 
  1062  0EAD                     	;# 
  1063  0EAE                     	;# 
  1064  0EAF                     	;# 
  1065  0EB0                     	;# 
  1066  0EB1                     	;# 
  1067  0EB2                     	;# 
  1068  0F0F                     	;# 
  1069  0F10                     	;# 
  1070  0F11                     	;# 
  1071  0F12                     	;# 
  1072  0F13                     	;# 
  1073  0F14                     	;# 
  1074  0F15                     	;# 
  1075  0F16                     	;# 
  1076  0F17                     	;# 
  1077  0F18                     	;# 
  1078  0F19                     	;# 
  1079  0F1A                     	;# 
  1080  0F1B                     	;# 
  1081  0F1C                     	;# 
  1082  0F1D                     	;# 
  1083  0F1E                     	;# 
  1084  0F1F                     	;# 
  1085  0F20                     	;# 
  1086  0F21                     	;# 
  1087  0F22                     	;# 
  1088  0F23                     	;# 
  1089  0F24                     	;# 
  1090  0F25                     	;# 
  1091  0F26                     	;# 
  1092  0F27                     	;# 
  1093  0F28                     	;# 
  1094  0F29                     	;# 
  1095  0F2A                     	;# 
  1096  0F2B                     	;# 
  1097  0F2C                     	;# 
  1098  0F2D                     	;# 
  1099  0F2E                     	;# 
  1100  0F2F                     	;# 
  1101  0F30                     	;# 
  1102  0F31                     	;# 
  1103  0F32                     	;# 
  1104  0F33                     	;# 
  1105  0F34                     	;# 
  1106  0F35                     	;# 
  1107  0F36                     	;# 
  1108  0F37                     	;# 
  1109  0FE4                     	;# 
  1110  0FE5                     	;# 
  1111  0FE6                     	;# 
  1112  0FE7                     	;# 
  1113  0FE8                     	;# 
  1114  0FE9                     	;# 
  1115  0FEA                     	;# 
  1116  0FEB                     	;# 
  1117  0FED                     	;# 
  1118  0FEE                     	;# 
  1119  0FEF                     	;# 
  1120  0000                     	;# 
  1121  0001                     	;# 
  1122  0002                     	;# 
  1123  0003                     	;# 
  1124  0004                     	;# 
  1125  0005                     	;# 
  1126  0006                     	;# 
  1127  0007                     	;# 
  1128  0008                     	;# 
  1129  0009                     	;# 
  1130  000A                     	;# 
  1131  000B                     	;# 
  1132  000C                     	;# 
  1133  000D                     	;# 
  1134  000E                     	;# 
  1135  000F                     	;# 
  1136  0010                     	;# 
  1137  0011                     	;# 
  1138  0012                     	;# 
  1139  0013                     	;# 
  1140  0015                     	;# 
  1141  0016                     	;# 
  1142  0016                     	;# 
  1143  0017                     	;# 
  1144  0018                     	;# 
  1145  0019                     	;# 
  1146  001A                     	;# 
  1147  001B                     	;# 
  1148  001C                     	;# 
  1149  008C                     	;# 
  1150  008D                     	;# 
  1151  008E                     	;# 
  1152  008F                     	;# 
  1153  0090                     	;# 
  1154  0091                     	;# 
  1155  0092                     	;# 
  1156  0093                     	;# 
  1157  0095                     	;# 
  1158  0096                     	;# 
  1159  0097                     	;# 
  1160  0098                     	;# 
  1161  0099                     	;# 
  1162  009A                     	;# 
  1163  009B                     	;# 
  1164  009B                     	;# 
  1165  009C                     	;# 
  1166  009D                     	;# 
  1167  009E                     	;# 
  1168  009F                     	;# 
  1169  010C                     	;# 
  1170  010D                     	;# 
  1171  010E                     	;# 
  1172  010F                     	;# 
  1173  0110                     	;# 
  1174  0111                     	;# 
  1175  0112                     	;# 
  1176  0113                     	;# 
  1177  0114                     	;# 
  1178  0115                     	;# 
  1179  0116                     	;# 
  1180  0117                     	;# 
  1181  0118                     	;# 
  1182  0119                     	;# 
  1183  011A                     	;# 
  1184  011B                     	;# 
  1185  011B                     	;# 
  1186  011C                     	;# 
  1187  018C                     	;# 
  1188  018D                     	;# 
  1189  018E                     	;# 
  1190  018F                     	;# 
  1191  0190                     	;# 
  1192  0191                     	;# 
  1193  0191                     	;# 
  1194  0192                     	;# 
  1195  0193                     	;# 
  1196  0193                     	;# 
  1197  0194                     	;# 
  1198  0195                     	;# 
  1199  0196                     	;# 
  1200  0197                     	;# 
  1201  0199                     	;# 
  1202  0199                     	;# 
  1203  0199                     	;# 
  1204  019A                     	;# 
  1205  019A                     	;# 
  1206  019A                     	;# 
  1207  019B                     	;# 
  1208  019B                     	;# 
  1209  019B                     	;# 
  1210  019B                     	;# 
  1211  019B                     	;# 
  1212  019C                     	;# 
  1213  019C                     	;# 
  1214  019C                     	;# 
  1215  019D                     	;# 
  1216  019D                     	;# 
  1217  019D                     	;# 
  1218  019E                     	;# 
  1219  019E                     	;# 
  1220  019E                     	;# 
  1221  019F                     	;# 
  1222  019F                     	;# 
  1223  019F                     	;# 
  1224  019F                     	;# 
  1225  019F                     	;# 
  1226  020C                     	;# 
  1227  020D                     	;# 
  1228  020E                     	;# 
  1229  020F                     	;# 
  1230  0210                     	;# 
  1231  0211                     	;# 
  1232  0211                     	;# 
  1233  0212                     	;# 
  1234  0212                     	;# 
  1235  0213                     	;# 
  1236  0213                     	;# 
  1237  0214                     	;# 
  1238  0214                     	;# 
  1239  0215                     	;# 
  1240  0215                     	;# 
  1241  0215                     	;# 
  1242  0215                     	;# 
  1243  0216                     	;# 
  1244  0216                     	;# 
  1245  0217                     	;# 
  1246  0217                     	;# 
  1247  028C                     	;# 
  1248  028D                     	;# 
  1249  028E                     	;# 
  1250  028F                     	;# 
  1251  0290                     	;# 
  1252  0291                     	;# 
  1253  0291                     	;# 
  1254  0292                     	;# 
  1255  0293                     	;# 
  1256  0293                     	;# 
  1257  0298                     	;# 
  1258  0298                     	;# 
  1259  0299                     	;# 
  1260  029A                     	;# 
  1261  029A                     	;# 
  1262  029E                     	;# 
  1263  030C                     	;# 
  1264  030D                     	;# 
  1265  030E                     	;# 
  1266  030F                     	;# 
  1267  0310                     	;# 
  1268  038C                     	;# 
  1269  038D                     	;# 
  1270  038E                     	;# 
  1271  038F                     	;# 
  1272  0390                     	;# 
  1273  0391                     	;# 
  1274  0392                     	;# 
  1275  0393                     	;# 
  1276  0394                     	;# 
  1277  0395                     	;# 
  1278  0396                     	;# 
  1279  0397                     	;# 
  1280  0398                     	;# 
  1281  0399                     	;# 
  1282  039D                     	;# 
  1283  039E                     	;# 
  1284  039F                     	;# 
  1285  0415                     	;# 
  1286  0416                     	;# 
  1287  0417                     	;# 
  1288  041C                     	;# 
  1289  041D                     	;# 
  1290  041E                     	;# 
  1291  0498                     	;# 
  1292  0498                     	;# 
  1293  0499                     	;# 
  1294  049A                     	;# 
  1295  049B                     	;# 
  1296  049B                     	;# 
  1297  049C                     	;# 
  1298  049D                     	;# 
  1299  049E                     	;# 
  1300  049F                     	;# 
  1301  0511                     	;# 
  1302  0515                     	;# 
  1303  0617                     	;# 
  1304  0618                     	;# 
  1305  0619                     	;# 
  1306  0619                     	;# 
  1307  061A                     	;# 
  1308  061B                     	;# 
  1309  061C                     	;# 
  1310  061C                     	;# 
  1311  0691                     	;# 
  1312  0692                     	;# 
  1313  0693                     	;# 
  1314  0694                     	;# 
  1315  0695                     	;# 
  1316  0696                     	;# 
  1317  0697                     	;# 
  1318  0698                     	;# 
  1319  0699                     	;# 
  1320  069A                     	;# 
  1321  069B                     	;# 
  1322  069C                     	;# 
  1323  069D                     	;# 
  1324  069E                     	;# 
  1325  069F                     	;# 
  1326  0E0F                     	;# 
  1327  0E10                     	;# 
  1328  0E11                     	;# 
  1329  0E12                     	;# 
  1330  0E13                     	;# 
  1331  0E14                     	;# 
  1332  0E15                     	;# 
  1333  0E17                     	;# 
  1334  0E20                     	;# 
  1335  0E21                     	;# 
  1336  0E22                     	;# 
  1337  0E24                     	;# 
  1338  0E25                     	;# 
  1339  0E28                     	;# 
  1340  0E29                     	;# 
  1341  0E2A                     	;# 
  1342  0E2B                     	;# 
  1343  0E90                     	;# 
  1344  0E91                     	;# 
  1345  0E92                     	;# 
  1346  0E93                     	;# 
  1347  0E94                     	;# 
  1348  0E95                     	;# 
  1349  0E96                     	;# 
  1350  0E97                     	;# 
  1351  0E98                     	;# 
  1352  0E99                     	;# 
  1353  0E9A                     	;# 
  1354  0E9B                     	;# 
  1355  0E9C                     	;# 
  1356  0E9D                     	;# 
  1357  0E9E                     	;# 
  1358  0E9F                     	;# 
  1359  0EA0                     	;# 
  1360  0EA1                     	;# 
  1361  0EA2                     	;# 
  1362  0EA3                     	;# 
  1363  0EA4                     	;# 
  1364  0EA5                     	;# 
  1365  0EA6                     	;# 
  1366  0EA7                     	;# 
  1367  0EA8                     	;# 
  1368  0EA9                     	;# 
  1369  0EAA                     	;# 
  1370  0EAB                     	;# 
  1371  0EAC                     	;# 
  1372  0EAD                     	;# 
  1373  0EAE                     	;# 
  1374  0EAF                     	;# 
  1375  0EB0                     	;# 
  1376  0EB1                     	;# 
  1377  0EB2                     	;# 
  1378  0F0F                     	;# 
  1379  0F10                     	;# 
  1380  0F11                     	;# 
  1381  0F12                     	;# 
  1382  0F13                     	;# 
  1383  0F14                     	;# 
  1384  0F15                     	;# 
  1385  0F16                     	;# 
  1386  0F17                     	;# 
  1387  0F18                     	;# 
  1388  0F19                     	;# 
  1389  0F1A                     	;# 
  1390  0F1B                     	;# 
  1391  0F1C                     	;# 
  1392  0F1D                     	;# 
  1393  0F1E                     	;# 
  1394  0F1F                     	;# 
  1395  0F20                     	;# 
  1396  0F21                     	;# 
  1397  0F22                     	;# 
  1398  0F23                     	;# 
  1399  0F24                     	;# 
  1400  0F25                     	;# 
  1401  0F26                     	;# 
  1402  0F27                     	;# 
  1403  0F28                     	;# 
  1404  0F29                     	;# 
  1405  0F2A                     	;# 
  1406  0F2B                     	;# 
  1407  0F2C                     	;# 
  1408  0F2D                     	;# 
  1409  0F2E                     	;# 
  1410  0F2F                     	;# 
  1411  0F30                     	;# 
  1412  0F31                     	;# 
  1413  0F32                     	;# 
  1414  0F33                     	;# 
  1415  0F34                     	;# 
  1416  0F35                     	;# 
  1417  0F36                     	;# 
  1418  0F37                     	;# 
  1419  0FE4                     	;# 
  1420  0FE5                     	;# 
  1421  0FE6                     	;# 
  1422  0FE7                     	;# 
  1423  0FE8                     	;# 
  1424  0FE9                     	;# 
  1425  0FEA                     	;# 
  1426  0FEB                     	;# 
  1427  0FED                     	;# 
  1428  0FEE                     	;# 
  1429  0FEF                     	;# 
  1430  0000                     	;# 
  1431  0001                     	;# 
  1432  0002                     	;# 
  1433  0003                     	;# 
  1434  0004                     	;# 
  1435  0005                     	;# 
  1436  0006                     	;# 
  1437  0007                     	;# 
  1438  0008                     	;# 
  1439  0009                     	;# 
  1440  000A                     	;# 
  1441  000B                     	;# 
  1442  000C                     	;# 
  1443  000D                     	;# 
  1444  000E                     	;# 
  1445  000F                     	;# 
  1446  0010                     	;# 
  1447  0011                     	;# 
  1448  0012                     	;# 
  1449  0013                     	;# 
  1450  0015                     	;# 
  1451  0016                     	;# 
  1452  0016                     	;# 
  1453  0017                     	;# 
  1454  0018                     	;# 
  1455  0019                     	;# 
  1456  001A                     	;# 
  1457  001B                     	;# 
  1458  001C                     	;# 
  1459  008C                     	;# 
  1460  008D                     	;# 
  1461  008E                     	;# 
  1462  008F                     	;# 
  1463  0090                     	;# 
  1464  0091                     	;# 
  1465  0092                     	;# 
  1466  0093                     	;# 
  1467  0095                     	;# 
  1468  0096                     	;# 
  1469  0097                     	;# 
  1470  0098                     	;# 
  1471  0099                     	;# 
  1472  009A                     	;# 
  1473  009B                     	;# 
  1474  009B                     	;# 
  1475  009C                     	;# 
  1476  009D                     	;# 
  1477  009E                     	;# 
  1478  009F                     	;# 
  1479  010C                     	;# 
  1480  010D                     	;# 
  1481  010E                     	;# 
  1482  010F                     	;# 
  1483  0110                     	;# 
  1484  0111                     	;# 
  1485  0112                     	;# 
  1486  0113                     	;# 
  1487  0114                     	;# 
  1488  0115                     	;# 
  1489  0116                     	;# 
  1490  0117                     	;# 
  1491  0118                     	;# 
  1492  0119                     	;# 
  1493  011A                     	;# 
  1494  011B                     	;# 
  1495  011B                     	;# 
  1496  011C                     	;# 
  1497  018C                     	;# 
  1498  018D                     	;# 
  1499  018E                     	;# 
  1500  018F                     	;# 
  1501  0190                     	;# 
  1502  0191                     	;# 
  1503  0191                     	;# 
  1504  0192                     	;# 
  1505  0193                     	;# 
  1506  0193                     	;# 
  1507  0194                     	;# 
  1508  0195                     	;# 
  1509  0196                     	;# 
  1510  0197                     	;# 
  1511  0199                     	;# 
  1512  0199                     	;# 
  1513  0199                     	;# 
  1514  019A                     	;# 
  1515  019A                     	;# 
  1516  019A                     	;# 
  1517  019B                     	;# 
  1518  019B                     	;# 
  1519  019B                     	;# 
  1520  019B                     	;# 
  1521  019B                     	;# 
  1522  019C                     	;# 
  1523  019C                     	;# 
  1524  019C                     	;# 
  1525  019D                     	;# 
  1526  019D                     	;# 
  1527  019D                     	;# 
  1528  019E                     	;# 
  1529  019E                     	;# 
  1530  019E                     	;# 
  1531  019F                     	;# 
  1532  019F                     	;# 
  1533  019F                     	;# 
  1534  019F                     	;# 
  1535  019F                     	;# 
  1536  020C                     	;# 
  1537  020D                     	;# 
  1538  020E                     	;# 
  1539  020F                     	;# 
  1540  0210                     	;# 
  1541  0211                     	;# 
  1542  0211                     	;# 
  1543  0212                     	;# 
  1544  0212                     	;# 
  1545  0213                     	;# 
  1546  0213                     	;# 
  1547  0214                     	;# 
  1548  0214                     	;# 
  1549  0215                     	;# 
  1550  0215                     	;# 
  1551  0215                     	;# 
  1552  0215                     	;# 
  1553  0216                     	;# 
  1554  0216                     	;# 
  1555  0217                     	;# 
  1556  0217                     	;# 
  1557  028C                     	;# 
  1558  028D                     	;# 
  1559  028E                     	;# 
  1560  028F                     	;# 
  1561  0290                     	;# 
  1562  0291                     	;# 
  1563  0291                     	;# 
  1564  0292                     	;# 
  1565  0293                     	;# 
  1566  0293                     	;# 
  1567  0298                     	;# 
  1568  0298                     	;# 
  1569  0299                     	;# 
  1570  029A                     	;# 
  1571  029A                     	;# 
  1572  029E                     	;# 
  1573  030C                     	;# 
  1574  030D                     	;# 
  1575  030E                     	;# 
  1576  030F                     	;# 
  1577  0310                     	;# 
  1578  038C                     	;# 
  1579  038D                     	;# 
  1580  038E                     	;# 
  1581  038F                     	;# 
  1582  0390                     	;# 
  1583  0391                     	;# 
  1584  0392                     	;# 
  1585  0393                     	;# 
  1586  0394                     	;# 
  1587  0395                     	;# 
  1588  0396                     	;# 
  1589  0397                     	;# 
  1590  0398                     	;# 
  1591  0399                     	;# 
  1592  039D                     	;# 
  1593  039E                     	;# 
  1594  039F                     	;# 
  1595  0415                     	;# 
  1596  0416                     	;# 
  1597  0417                     	;# 
  1598  041C                     	;# 
  1599  041D                     	;# 
  1600  041E                     	;# 
  1601  0498                     	;# 
  1602  0498                     	;# 
  1603  0499                     	;# 
  1604  049A                     	;# 
  1605  049B                     	;# 
  1606  049B                     	;# 
  1607  049C                     	;# 
  1608  049D                     	;# 
  1609  049E                     	;# 
  1610  049F                     	;# 
  1611  0511                     	;# 
  1612  0515                     	;# 
  1613  0617                     	;# 
  1614  0618                     	;# 
  1615  0619                     	;# 
  1616  0619                     	;# 
  1617  061A                     	;# 
  1618  061B                     	;# 
  1619  061C                     	;# 
  1620  061C                     	;# 
  1621  0691                     	;# 
  1622  0692                     	;# 
  1623  0693                     	;# 
  1624  0694                     	;# 
  1625  0695                     	;# 
  1626  0696                     	;# 
  1627  0697                     	;# 
  1628  0698                     	;# 
  1629  0699                     	;# 
  1630  069A                     	;# 
  1631  069B                     	;# 
  1632  069C                     	;# 
  1633  069D                     	;# 
  1634  069E                     	;# 
  1635  069F                     	;# 
  1636  0E0F                     	;# 
  1637  0E10                     	;# 
  1638  0E11                     	;# 
  1639  0E12                     	;# 
  1640  0E13                     	;# 
  1641  0E14                     	;# 
  1642  0E15                     	;# 
  1643  0E17                     	;# 
  1644  0E20                     	;# 
  1645  0E21                     	;# 
  1646  0E22                     	;# 
  1647  0E24                     	;# 
  1648  0E25                     	;# 
  1649  0E28                     	;# 
  1650  0E29                     	;# 
  1651  0E2A                     	;# 
  1652  0E2B                     	;# 
  1653  0E90                     	;# 
  1654  0E91                     	;# 
  1655  0E92                     	;# 
  1656  0E93                     	;# 
  1657  0E94                     	;# 
  1658  0E95                     	;# 
  1659  0E96                     	;# 
  1660  0E97                     	;# 
  1661  0E98                     	;# 
  1662  0E99                     	;# 
  1663  0E9A                     	;# 
  1664  0E9B                     	;# 
  1665  0E9C                     	;# 
  1666  0E9D                     	;# 
  1667  0E9E                     	;# 
  1668  0E9F                     	;# 
  1669  0EA0                     	;# 
  1670  0EA1                     	;# 
  1671  0EA2                     	;# 
  1672  0EA3                     	;# 
  1673  0EA4                     	;# 
  1674  0EA5                     	;# 
  1675  0EA6                     	;# 
  1676  0EA7                     	;# 
  1677  0EA8                     	;# 
  1678  0EA9                     	;# 
  1679  0EAA                     	;# 
  1680  0EAB                     	;# 
  1681  0EAC                     	;# 
  1682  0EAD                     	;# 
  1683  0EAE                     	;# 
  1684  0EAF                     	;# 
  1685  0EB0                     	;# 
  1686  0EB1                     	;# 
  1687  0EB2                     	;# 
  1688  0F0F                     	;# 
  1689  0F10                     	;# 
  1690  0F11                     	;# 
  1691  0F12                     	;# 
  1692  0F13                     	;# 
  1693  0F14                     	;# 
  1694  0F15                     	;# 
  1695  0F16                     	;# 
  1696  0F17                     	;# 
  1697  0F18                     	;# 
  1698  0F19                     	;# 
  1699  0F1A                     	;# 
  1700  0F1B                     	;# 
  1701  0F1C                     	;# 
  1702  0F1D                     	;# 
  1703  0F1E                     	;# 
  1704  0F1F                     	;# 
  1705  0F20                     	;# 
  1706  0F21                     	;# 
  1707  0F22                     	;# 
  1708  0F23                     	;# 
  1709  0F24                     	;# 
  1710  0F25                     	;# 
  1711  0F26                     	;# 
  1712  0F27                     	;# 
  1713  0F28                     	;# 
  1714  0F29                     	;# 
  1715  0F2A                     	;# 
  1716  0F2B                     	;# 
  1717  0F2C                     	;# 
  1718  0F2D                     	;# 
  1719  0F2E                     	;# 
  1720  0F2F                     	;# 
  1721  0F30                     	;# 
  1722  0F31                     	;# 
  1723  0F32                     	;# 
  1724  0F33                     	;# 
  1725  0F34                     	;# 
  1726  0F35                     	;# 
  1727  0F36                     	;# 
  1728  0F37                     	;# 
  1729  0FE4                     	;# 
  1730  0FE5                     	;# 
  1731  0FE6                     	;# 
  1732  0FE7                     	;# 
  1733  0FE8                     	;# 
  1734  0FE9                     	;# 
  1735  0FEA                     	;# 
  1736  0FEB                     	;# 
  1737  0FED                     	;# 
  1738  0FEE                     	;# 
  1739  0FEF                     	;# 
  1740  0000                     	;# 
  1741  0001                     	;# 
  1742  0002                     	;# 
  1743  0003                     	;# 
  1744  0004                     	;# 
  1745  0005                     	;# 
  1746  0006                     	;# 
  1747  0007                     	;# 
  1748  0008                     	;# 
  1749  0009                     	;# 
  1750  000A                     	;# 
  1751  000B                     	;# 
  1752  000C                     	;# 
  1753  000D                     	;# 
  1754  000E                     	;# 
  1755  000F                     	;# 
  1756  0010                     	;# 
  1757  0011                     	;# 
  1758  0012                     	;# 
  1759  0013                     	;# 
  1760  0015                     	;# 
  1761  0016                     	;# 
  1762  0016                     	;# 
  1763  0017                     	;# 
  1764  0018                     	;# 
  1765  0019                     	;# 
  1766  001A                     	;# 
  1767  001B                     	;# 
  1768  001C                     	;# 
  1769  008C                     	;# 
  1770  008D                     	;# 
  1771  008E                     	;# 
  1772  008F                     	;# 
  1773  0090                     	;# 
  1774  0091                     	;# 
  1775  0092                     	;# 
  1776  0093                     	;# 
  1777  0095                     	;# 
  1778  0096                     	;# 
  1779  0097                     	;# 
  1780  0098                     	;# 
  1781  0099                     	;# 
  1782  009A                     	;# 
  1783  009B                     	;# 
  1784  009B                     	;# 
  1785  009C                     	;# 
  1786  009D                     	;# 
  1787  009E                     	;# 
  1788  009F                     	;# 
  1789  010C                     	;# 
  1790  010D                     	;# 
  1791  010E                     	;# 
  1792  010F                     	;# 
  1793  0110                     	;# 
  1794  0111                     	;# 
  1795  0112                     	;# 
  1796  0113                     	;# 
  1797  0114                     	;# 
  1798  0115                     	;# 
  1799  0116                     	;# 
  1800  0117                     	;# 
  1801  0118                     	;# 
  1802  0119                     	;# 
  1803  011A                     	;# 
  1804  011B                     	;# 
  1805  011B                     	;# 
  1806  011C                     	;# 
  1807  018C                     	;# 
  1808  018D                     	;# 
  1809  018E                     	;# 
  1810  018F                     	;# 
  1811  0190                     	;# 
  1812  0191                     	;# 
  1813  0191                     	;# 
  1814  0192                     	;# 
  1815  0193                     	;# 
  1816  0193                     	;# 
  1817  0194                     	;# 
  1818  0195                     	;# 
  1819  0196                     	;# 
  1820  0197                     	;# 
  1821  0199                     	;# 
  1822  0199                     	;# 
  1823  0199                     	;# 
  1824  019A                     	;# 
  1825  019A                     	;# 
  1826  019A                     	;# 
  1827  019B                     	;# 
  1828  019B                     	;# 
  1829  019B                     	;# 
  1830  019B                     	;# 
  1831  019B                     	;# 
  1832  019C                     	;# 
  1833  019C                     	;# 
  1834  019C                     	;# 
  1835  019D                     	;# 
  1836  019D                     	;# 
  1837  019D                     	;# 
  1838  019E                     	;# 
  1839  019E                     	;# 
  1840  019E                     	;# 
  1841  019F                     	;# 
  1842  019F                     	;# 
  1843  019F                     	;# 
  1844  019F                     	;# 
  1845  019F                     	;# 
  1846  020C                     	;# 
  1847  020D                     	;# 
  1848  020E                     	;# 
  1849  020F                     	;# 
  1850  0210                     	;# 
  1851  0211                     	;# 
  1852  0211                     	;# 
  1853  0212                     	;# 
  1854  0212                     	;# 
  1855  0213                     	;# 
  1856  0213                     	;# 
  1857  0214                     	;# 
  1858  0214                     	;# 
  1859  0215                     	;# 
  1860  0215                     	;# 
  1861  0215                     	;# 
  1862  0215                     	;# 
  1863  0216                     	;# 
  1864  0216                     	;# 
  1865  0217                     	;# 
  1866  0217                     	;# 
  1867  028C                     	;# 
  1868  028D                     	;# 
  1869  028E                     	;# 
  1870  028F                     	;# 
  1871  0290                     	;# 
  1872  0291                     	;# 
  1873  0291                     	;# 
  1874  0292                     	;# 
  1875  0293                     	;# 
  1876  0293                     	;# 
  1877  0298                     	;# 
  1878  0298                     	;# 
  1879  0299                     	;# 
  1880  029A                     	;# 
  1881  029A                     	;# 
  1882  029E                     	;# 
  1883  030C                     	;# 
  1884  030D                     	;# 
  1885  030E                     	;# 
  1886  030F                     	;# 
  1887  0310                     	;# 
  1888  038C                     	;# 
  1889  038D                     	;# 
  1890  038E                     	;# 
  1891  038F                     	;# 
  1892  0390                     	;# 
  1893  0391                     	;# 
  1894  0392                     	;# 
  1895  0393                     	;# 
  1896  0394                     	;# 
  1897  0395                     	;# 
  1898  0396                     	;# 
  1899  0397                     	;# 
  1900  0398                     	;# 
  1901  0399                     	;# 
  1902  039D                     	;# 
  1903  039E                     	;# 
  1904  039F                     	;# 
  1905  0415                     	;# 
  1906  0416                     	;# 
  1907  0417                     	;# 
  1908  041C                     	;# 
  1909  041D                     	;# 
  1910  041E                     	;# 
  1911  0498                     	;# 
  1912  0498                     	;# 
  1913  0499                     	;# 
  1914  049A                     	;# 
  1915  049B                     	;# 
  1916  049B                     	;# 
  1917  049C                     	;# 
  1918  049D                     	;# 
  1919  049E                     	;# 
  1920  049F                     	;# 
  1921  0511                     	;# 
  1922  0515                     	;# 
  1923  0617                     	;# 
  1924  0618                     	;# 
  1925  0619                     	;# 
  1926  0619                     	;# 
  1927  061A                     	;# 
  1928  061B                     	;# 
  1929  061C                     	;# 
  1930  061C                     	;# 
  1931  0691                     	;# 
  1932  0692                     	;# 
  1933  0693                     	;# 
  1934  0694                     	;# 
  1935  0695                     	;# 
  1936  0696                     	;# 
  1937  0697                     	;# 
  1938  0698                     	;# 
  1939  0699                     	;# 
  1940  069A                     	;# 
  1941  069B                     	;# 
  1942  069C                     	;# 
  1943  069D                     	;# 
  1944  069E                     	;# 
  1945  069F                     	;# 
  1946  0E0F                     	;# 
  1947  0E10                     	;# 
  1948  0E11                     	;# 
  1949  0E12                     	;# 
  1950  0E13                     	;# 
  1951  0E14                     	;# 
  1952  0E15                     	;# 
  1953  0E17                     	;# 
  1954  0E20                     	;# 
  1955  0E21                     	;# 
  1956  0E22                     	;# 
  1957  0E24                     	;# 
  1958  0E25                     	;# 
  1959  0E28                     	;# 
  1960  0E29                     	;# 
  1961  0E2A                     	;# 
  1962  0E2B                     	;# 
  1963  0E90                     	;# 
  1964  0E91                     	;# 
  1965  0E92                     	;# 
  1966  0E93                     	;# 
  1967  0E94                     	;# 
  1968  0E95                     	;# 
  1969  0E96                     	;# 
  1970  0E97                     	;# 
  1971  0E98                     	;# 
  1972  0E99                     	;# 
  1973  0E9A                     	;# 
  1974  0E9B                     	;# 
  1975  0E9C                     	;# 
  1976  0E9D                     	;# 
  1977  0E9E                     	;# 
  1978  0E9F                     	;# 
  1979  0EA0                     	;# 
  1980  0EA1                     	;# 
  1981  0EA2                     	;# 
  1982  0EA3                     	;# 
  1983  0EA4                     	;# 
  1984  0EA5                     	;# 
  1985  0EA6                     	;# 
  1986  0EA7                     	;# 
  1987  0EA8                     	;# 
  1988  0EA9                     	;# 
  1989  0EAA                     	;# 
  1990  0EAB                     	;# 
  1991  0EAC                     	;# 
  1992  0EAD                     	;# 
  1993  0EAE                     	;# 
  1994  0EAF                     	;# 
  1995  0EB0                     	;# 
  1996  0EB1                     	;# 
  1997  0EB2                     	;# 
  1998  0F0F                     	;# 
  1999  0F10                     	;# 
  2000  0F11                     	;# 
  2001  0F12                     	;# 
  2002  0F13                     	;# 
  2003  0F14                     	;# 
  2004  0F15                     	;# 
  2005  0F16                     	;# 
  2006  0F17                     	;# 
  2007  0F18                     	;# 
  2008  0F19                     	;# 
  2009  0F1A                     	;# 
  2010  0F1B                     	;# 
  2011  0F1C                     	;# 
  2012  0F1D                     	;# 
  2013  0F1E                     	;# 
  2014  0F1F                     	;# 
  2015  0F20                     	;# 
  2016  0F21                     	;# 
  2017  0F22                     	;# 
  2018  0F23                     	;# 
  2019  0F24                     	;# 
  2020  0F25                     	;# 
  2021  0F26                     	;# 
  2022  0F27                     	;# 
  2023  0F28                     	;# 
  2024  0F29                     	;# 
  2025  0F2A                     	;# 
  2026  0F2B                     	;# 
  2027  0F2C                     	;# 
  2028  0F2D                     	;# 
  2029  0F2E                     	;# 
  2030  0F2F                     	;# 
  2031  0F30                     	;# 
  2032  0F31                     	;# 
  2033  0F32                     	;# 
  2034  0F33                     	;# 
  2035  0F34                     	;# 
  2036  0F35                     	;# 
  2037  0F36                     	;# 
  2038  0F37                     	;# 
  2039  0FE4                     	;# 
  2040  0FE5                     	;# 
  2041  0FE6                     	;# 
  2042  0FE7                     	;# 
  2043  0FE8                     	;# 
  2044  0FE9                     	;# 
  2045  0FEA                     	;# 
  2046  0FEB                     	;# 
  2047  0FED                     	;# 
  2048  0FEE                     	;# 
  2049  0FEF                     	;# 
  2050  0000                     	;# 
  2051  0001                     	;# 
  2052  0002                     	;# 
  2053  0003                     	;# 
  2054  0004                     	;# 
  2055  0005                     	;# 
  2056  0006                     	;# 
  2057  0007                     	;# 
  2058  0008                     	;# 
  2059  0009                     	;# 
  2060  000A                     	;# 
  2061  000B                     	;# 
  2062  000C                     	;# 
  2063  000D                     	;# 
  2064  000E                     	;# 
  2065  000F                     	;# 
  2066  0010                     	;# 
  2067  0011                     	;# 
  2068  0012                     	;# 
  2069  0013                     	;# 
  2070  0015                     	;# 
  2071  0016                     	;# 
  2072  0016                     	;# 
  2073  0017                     	;# 
  2074  0018                     	;# 
  2075  0019                     	;# 
  2076  001A                     	;# 
  2077  001B                     	;# 
  2078  001C                     	;# 
  2079  008C                     	;# 
  2080  008D                     	;# 
  2081  008E                     	;# 
  2082  008F                     	;# 
  2083  0090                     	;# 
  2084  0091                     	;# 
  2085  0092                     	;# 
  2086  0093                     	;# 
  2087  0095                     	;# 
  2088  0096                     	;# 
  2089  0097                     	;# 
  2090  0098                     	;# 
  2091  0099                     	;# 
  2092  009A                     	;# 
  2093  009B                     	;# 
  2094  009B                     	;# 
  2095  009C                     	;# 
  2096  009D                     	;# 
  2097  009E                     	;# 
  2098  009F                     	;# 
  2099  010C                     	;# 
  2100  010D                     	;# 
  2101  010E                     	;# 
  2102  010F                     	;# 
  2103  0110                     	;# 
  2104  0111                     	;# 
  2105  0112                     	;# 
  2106  0113                     	;# 
  2107  0114                     	;# 
  2108  0115                     	;# 
  2109  0116                     	;# 
  2110  0117                     	;# 
  2111  0118                     	;# 
  2112  0119                     	;# 
  2113  011A                     	;# 
  2114  011B                     	;# 
  2115  011B                     	;# 
  2116  011C                     	;# 
  2117  018C                     	;# 
  2118  018D                     	;# 
  2119  018E                     	;# 
  2120  018F                     	;# 
  2121  0190                     	;# 
  2122  0191                     	;# 
  2123  0191                     	;# 
  2124  0192                     	;# 
  2125  0193                     	;# 
  2126  0193                     	;# 
  2127  0194                     	;# 
  2128  0195                     	;# 
  2129  0196                     	;# 
  2130  0197                     	;# 
  2131  0199                     	;# 
  2132  0199                     	;# 
  2133  0199                     	;# 
  2134  019A                     	;# 
  2135  019A                     	;# 
  2136  019A                     	;# 
  2137  019B                     	;# 
  2138  019B                     	;# 
  2139  019B                     	;# 
  2140  019B                     	;# 
  2141  019B                     	;# 
  2142  019C                     	;# 
  2143  019C                     	;# 
  2144  019C                     	;# 
  2145  019D                     	;# 
  2146  019D                     	;# 
  2147  019D                     	;# 
  2148  019E                     	;# 
  2149  019E                     	;# 
  2150  019E                     	;# 
  2151  019F                     	;# 
  2152  019F                     	;# 
  2153  019F                     	;# 
  2154  019F                     	;# 
  2155  019F                     	;# 
  2156  020C                     	;# 
  2157  020D                     	;# 
  2158  020E                     	;# 
  2159  020F                     	;# 
  2160  0210                     	;# 
  2161  0211                     	;# 
  2162  0211                     	;# 
  2163  0212                     	;# 
  2164  0212                     	;# 
  2165  0213                     	;# 
  2166  0213                     	;# 
  2167  0214                     	;# 
  2168  0214                     	;# 
  2169  0215                     	;# 
  2170  0215                     	;# 
  2171  0215                     	;# 
  2172  0215                     	;# 
  2173  0216                     	;# 
  2174  0216                     	;# 
  2175  0217                     	;# 
  2176  0217                     	;# 
  2177  028C                     	;# 
  2178  028D                     	;# 
  2179  028E                     	;# 
  2180  028F                     	;# 
  2181  0290                     	;# 
  2182  0291                     	;# 
  2183  0291                     	;# 
  2184  0292                     	;# 
  2185  0293                     	;# 
  2186  0293                     	;# 
  2187  0298                     	;# 
  2188  0298                     	;# 
  2189  0299                     	;# 
  2190  029A                     	;# 
  2191  029A                     	;# 
  2192  029E                     	;# 
  2193  030C                     	;# 
  2194  030D                     	;# 
  2195  030E                     	;# 
  2196  030F                     	;# 
  2197  0310                     	;# 
  2198  038C                     	;# 
  2199  038D                     	;# 
  2200  038E                     	;# 
  2201  038F                     	;# 
  2202  0390                     	;# 
  2203  0391                     	;# 
  2204  0392                     	;# 
  2205  0393                     	;# 
  2206  0394                     	;# 
  2207  0395                     	;# 
  2208  0396                     	;# 
  2209  0397                     	;# 
  2210  0398                     	;# 
  2211  0399                     	;# 
  2212  039D                     	;# 
  2213  039E                     	;# 
  2214  039F                     	;# 
  2215  0415                     	;# 
  2216  0416                     	;# 
  2217  0417                     	;# 
  2218  041C                     	;# 
  2219  041D                     	;# 
  2220  041E                     	;# 
  2221  0498                     	;# 
  2222  0498                     	;# 
  2223  0499                     	;# 
  2224  049A                     	;# 
  2225  049B                     	;# 
  2226  049B                     	;# 
  2227  049C                     	;# 
  2228  049D                     	;# 
  2229  049E                     	;# 
  2230  049F                     	;# 
  2231  0511                     	;# 
  2232  0515                     	;# 
  2233  0617                     	;# 
  2234  0618                     	;# 
  2235  0619                     	;# 
  2236  0619                     	;# 
  2237  061A                     	;# 
  2238  061B                     	;# 
  2239  061C                     	;# 
  2240  061C                     	;# 
  2241  0691                     	;# 
  2242  0692                     	;# 
  2243  0693                     	;# 
  2244  0694                     	;# 
  2245  0695                     	;# 
  2246  0696                     	;# 
  2247  0697                     	;# 
  2248  0698                     	;# 
  2249  0699                     	;# 
  2250  069A                     	;# 
  2251  069B                     	;# 
  2252  069C                     	;# 
  2253  069D                     	;# 
  2254  069E                     	;# 
  2255  069F                     	;# 
  2256  0E0F                     	;# 
  2257  0E10                     	;# 
  2258  0E11                     	;# 
  2259  0E12                     	;# 
  2260  0E13                     	;# 
  2261  0E14                     	;# 
  2262  0E15                     	;# 
  2263  0E17                     	;# 
  2264  0E20                     	;# 
  2265  0E21                     	;# 
  2266  0E22                     	;# 
  2267  0E24                     	;# 
  2268  0E25                     	;# 
  2269  0E28                     	;# 
  2270  0E29                     	;# 
  2271  0E2A                     	;# 
  2272  0E2B                     	;# 
  2273  0E90                     	;# 
  2274  0E91                     	;# 
  2275  0E92                     	;# 
  2276  0E93                     	;# 
  2277  0E94                     	;# 
  2278  0E95                     	;# 
  2279  0E96                     	;# 
  2280  0E97                     	;# 
  2281  0E98                     	;# 
  2282  0E99                     	;# 
  2283  0E9A                     	;# 
  2284  0E9B                     	;# 
  2285  0E9C                     	;# 
  2286  0E9D                     	;# 
  2287  0E9E                     	;# 
  2288  0E9F                     	;# 
  2289  0EA0                     	;# 
  2290  0EA1                     	;# 
  2291  0EA2                     	;# 
  2292  0EA3                     	;# 
  2293  0EA4                     	;# 
  2294  0EA5                     	;# 
  2295  0EA6                     	;# 
  2296  0EA7                     	;# 
  2297  0EA8                     	;# 
  2298  0EA9                     	;# 
  2299  0EAA                     	;# 
  2300  0EAB                     	;# 
  2301  0EAC                     	;# 
  2302  0EAD                     	;# 
  2303  0EAE                     	;# 
  2304  0EAF                     	;# 
  2305  0EB0                     	;# 
  2306  0EB1                     	;# 
  2307  0EB2                     	;# 
  2308  0F0F                     	;# 
  2309  0F10                     	;# 
  2310  0F11                     	;# 
  2311  0F12                     	;# 
  2312  0F13                     	;# 
  2313  0F14                     	;# 
  2314  0F15                     	;# 
  2315  0F16                     	;# 
  2316  0F17                     	;# 
  2317  0F18                     	;# 
  2318  0F19                     	;# 
  2319  0F1A                     	;# 
  2320  0F1B                     	;# 
  2321  0F1C                     	;# 
  2322  0F1D                     	;# 
  2323  0F1E                     	;# 
  2324  0F1F                     	;# 
  2325  0F20                     	;# 
  2326  0F21                     	;# 
  2327  0F22                     	;# 
  2328  0F23                     	;# 
  2329  0F24                     	;# 
  2330  0F25                     	;# 
  2331  0F26                     	;# 
  2332  0F27                     	;# 
  2333  0F28                     	;# 
  2334  0F29                     	;# 
  2335  0F2A                     	;# 
  2336  0F2B                     	;# 
  2337  0F2C                     	;# 
  2338  0F2D                     	;# 
  2339  0F2E                     	;# 
  2340  0F2F                     	;# 
  2341  0F30                     	;# 
  2342  0F31                     	;# 
  2343  0F32                     	;# 
  2344  0F33                     	;# 
  2345  0F34                     	;# 
  2346  0F35                     	;# 
  2347  0F36                     	;# 
  2348  0F37                     	;# 
  2349  0FE4                     	;# 
  2350  0FE5                     	;# 
  2351  0FE6                     	;# 
  2352  0FE7                     	;# 
  2353  0FE8                     	;# 
  2354  0FE9                     	;# 
  2355  0FEA                     	;# 
  2356  0FEB                     	;# 
  2357  0FED                     	;# 
  2358  0FEE                     	;# 
  2359  0FEF                     	;_messageBuffer
  2360                           
  2361                           	psect	idataBANK3
  2362  2800                     __pidataBANK3:	
  2363                           
  2364                           ;initializer for _samsung_cell_max_charge
  2365  2800  34C4               	retlw	196
  2366  2801  3409               	retlw	9
  2367                           
  2368                           ;initializer for _thermistorBetaValue
  2369  2802  346B               	retlw	107
  2370  2803  340D               	retlw	13
  2371                           
  2372                           	psect	idataBANK4
  2373  314C                     __pidataBANK4:	
  2374                           
  2375                           ;initializer for stoa@F1152
  2376  314C  3428               	retlw	40
  2377  314D  346E               	retlw	110
  2378  314E  3475               	retlw	117
  2379  314F  346C               	retlw	108
  2380  3150  346C               	retlw	108
  2381  3151  3429               	retlw	41
  2382  3152  3400               	retlw	0
  2383                           
  2384                           	psect	stringtext1
  2385  3800                     __pstringtext1:	
  2386  3800                     _lookupTableSamsung_SOC:	
  2387  3800  3464               	retlw	100
  2388  3801  3400               	retlw	0
  2389  3802  3462               	retlw	98
  2390  3803  3400               	retlw	0
  2391  3804  3460               	retlw	96
  2392  3805  3400               	retlw	0
  2393  3806  345D               	retlw	93
  2394  3807  3400               	retlw	0
  2395  3808  345B               	retlw	91
  2396  3809  3400               	retlw	0
  2397  380A  3457               	retlw	87
  2398  380B  3400               	retlw	0
  2399  380C  3454               	retlw	84
  2400  380D  3400               	retlw	0
  2401  380E  3452               	retlw	82
  2402  380F  3400               	retlw	0
  2403  3810  3450               	retlw	80
  2404  3811  3400               	retlw	0
  2405  3812  344E               	retlw	78
  2406  3813  3400               	retlw	0
  2407  3814  344C               	retlw	76
  2408  3815  3400               	retlw	0
  2409  3816  3449               	retlw	73
  2410  3817  3400               	retlw	0
  2411  3818  3447               	retlw	71
  2412  3819  3400               	retlw	0
  2413  381A  3445               	retlw	69
  2414  381B  3400               	retlw	0
  2415  381C  3443               	retlw	67
  2416  381D  3400               	retlw	0
  2417  381E  3440               	retlw	64
  2418  381F  3400               	retlw	0
  2419  3820  343E               	retlw	62
  2420  3821  3400               	retlw	0
  2421  3822  343C               	retlw	60
  2422  3823  3400               	retlw	0
  2423  3824  343A               	retlw	58
  2424  3825  3400               	retlw	0
  2425  3826  3438               	retlw	56
  2426  3827  3400               	retlw	0
  2427  3828  3435               	retlw	53
  2428  3829  3400               	retlw	0
  2429  382A  3433               	retlw	51
  2430  382B  3400               	retlw	0
  2431  382C  3431               	retlw	49
  2432  382D  3400               	retlw	0
  2433  382E  342F               	retlw	47
  2434  382F  3400               	retlw	0
  2435  3830  342C               	retlw	44
  2436  3831  3400               	retlw	0
  2437  3832  342A               	retlw	42
  2438  3833  3400               	retlw	0
  2439  3834  3428               	retlw	40
  2440  3835  3400               	retlw	0
  2441  3836  3426               	retlw	38
  2442  3837  3400               	retlw	0
  2443  3838  3424               	retlw	36
  2444  3839  3400               	retlw	0
  2445  383A  3421               	retlw	33
  2446  383B  3400               	retlw	0
  2447  383C  341F               	retlw	31
  2448  383D  3400               	retlw	0
  2449  383E  341D               	retlw	29
  2450  383F  3400               	retlw	0
  2451  3840  341B               	retlw	27
  2452  3841  3400               	retlw	0
  2453  3842  3418               	retlw	24
  2454  3843  3400               	retlw	0
  2455  3844  3416               	retlw	22
  2456  3845  3400               	retlw	0
  2457  3846  3414               	retlw	20
  2458  3847  3400               	retlw	0
  2459  3848  3412               	retlw	18
  2460  3849  3400               	retlw	0
  2461  384A  3410               	retlw	16
  2462  384B  3400               	retlw	0
  2463  384C  340D               	retlw	13
  2464  384D  3400               	retlw	0
  2465  384E  340B               	retlw	11
  2466  384F  3400               	retlw	0
  2467  3850  3409               	retlw	9
  2468  3851  3400               	retlw	0
  2469  3852  3407               	retlw	7
  2470  3853  3400               	retlw	0
  2471  3854  3404               	retlw	4
  2472  3855  3400               	retlw	0
  2473  3856  3402               	retlw	2
  2474  3857  3400               	retlw	0
  2475  3858  3400               	retlw	0
  2476  3859  3400               	retlw	0
  2477  385A  3400               	retlw	0
  2478  385B  3400               	retlw	0
  2479  385C                     __end_of_lookupTableSamsung_SOC:	
  2480                           
  2481                           	psect	stringtext2
  2482  385C                     __pstringtext2:	
  2483  385C                     _lookupTableSamsung_voltage:	
  2484  385C  3451               	retlw	81
  2485  385D  3410               	retlw	16
  2486  385E  345B               	retlw	91
  2487  385F  340F               	retlw	15
  2488  3860  341F               	retlw	31
  2489  3861  340F               	retlw	15
  2490  3862  340F               	retlw	15
  2491  3863  340F               	retlw	15
  2492  3864  340A               	retlw	10
  2493  3865  340F               	retlw	15
  2494  3866  3406               	retlw	6
  2495  3867  340F               	retlw	15
  2496  3868  3405               	retlw	5
  2497  3869  340F               	retlw	15
  2498  386A  3403               	retlw	3
  2499  386B  340F               	retlw	15
  2500  386C  3401               	retlw	1
  2501  386D  340F               	retlw	15
  2502  386E  3400               	retlw	0
  2503  386F  340F               	retlw	15
  2504  3870  34FE               	retlw	254
  2505  3871  340E               	retlw	14
  2506  3872  34FC               	retlw	252
  2507  3873  340E               	retlw	14
  2508  3874  34FA               	retlw	250
  2509  3875  340E               	retlw	14
  2510  3876  34F8               	retlw	248
  2511  3877  340E               	retlw	14
  2512  3878  34F6               	retlw	246
  2513  3879  340E               	retlw	14
  2514  387A  34F3               	retlw	243
  2515  387B  340E               	retlw	14
  2516  387C  34F1               	retlw	241
  2517  387D  340E               	retlw	14
  2518  387E  34EE               	retlw	238
  2519  387F  340E               	retlw	14
  2520  3880  34EB               	retlw	235
  2521  3881  340E               	retlw	14
  2522  3882  34E8               	retlw	232
  2523  3883  340E               	retlw	14
  2524  3884  34E5               	retlw	229
  2525  3885  340E               	retlw	14
  2526  3886  34E1               	retlw	225
  2527  3887  340E               	retlw	14
  2528  3888  34DD               	retlw	221
  2529  3889  340E               	retlw	14
  2530  388A  34D9               	retlw	217
  2531  388B  340E               	retlw	14
  2532  388C  34D4               	retlw	212
  2533  388D  340E               	retlw	14
  2534  388E  34CF               	retlw	207
  2535  388F  340E               	retlw	14
  2536  3890  34C9               	retlw	201
  2537  3891  340E               	retlw	14
  2538  3892  34C3               	retlw	195
  2539  3893  340E               	retlw	14
  2540  3894  34BB               	retlw	187
  2541  3895  340E               	retlw	14
  2542  3896  34B4               	retlw	180
  2543  3897  340E               	retlw	14
  2544  3898  34AB               	retlw	171
  2545  3899  340E               	retlw	14
  2546  389A  34A0               	retlw	160
  2547  389B  340E               	retlw	14
  2548  389C  3495               	retlw	149
  2549  389D  340E               	retlw	14
  2550  389E  3487               	retlw	135
  2551  389F  340E               	retlw	14
  2552  38A0  3477               	retlw	119
  2553  38A1  340E               	retlw	14
  2554  38A2  3464               	retlw	100
  2555  38A3  340E               	retlw	14
  2556  38A4  344D               	retlw	77
  2557  38A5  340E               	retlw	14
  2558  38A6  3431               	retlw	49
  2559  38A7  340E               	retlw	14
  2560  38A8  340D               	retlw	13
  2561  38A9  340E               	retlw	14
  2562  38AA  34DE               	retlw	222
  2563  38AB  340D               	retlw	13
  2564  38AC  349F               	retlw	159
  2565  38AD  340D               	retlw	13
  2566  38AE  3443               	retlw	67
  2567  38AF  340D               	retlw	13
  2568  38B0  34B3               	retlw	179
  2569  38B1  340C               	retlw	12
  2570  38B2  34B1               	retlw	177
  2571  38B3  340B               	retlw	11
  2572  38B4  345E               	retlw	94
  2573  38B5  3409               	retlw	9
  2574  38B6  3400               	retlw	0
  2575  38B7  3400               	retlw	0
  2576  38B8                     __end_of_lookupTableSamsung_voltage:	
  2577                           
  2578                           	psect	stringtext3
  2579  399C                     __pstringtext3:	
  2580  399C                     _OCD_threshold_setting:	
  2581  399C  3411               	retlw	17
  2582  399D  3400               	retlw	0
  2583  399E  3416               	retlw	22
  2584  399F  3400               	retlw	0
  2585  39A0  341C               	retlw	28
  2586  39A1  3400               	retlw	0
  2587  39A2  3421               	retlw	33
  2588  39A3  3400               	retlw	0
  2589  39A4  3427               	retlw	39
  2590  39A5  3400               	retlw	0
  2591  39A6  342C               	retlw	44
  2592  39A7  3400               	retlw	0
  2593  39A8  3432               	retlw	50
  2594  39A9  3400               	retlw	0
  2595  39AA  3438               	retlw	56
  2596  39AB  3400               	retlw	0
  2597  39AC  343D               	retlw	61
  2598  39AD  3400               	retlw	0
  2599  39AE  3443               	retlw	67
  2600  39AF  3400               	retlw	0
  2601  39B0  3448               	retlw	72
  2602  39B1  3400               	retlw	0
  2603  39B2  344E               	retlw	78
  2604  39B3  3400               	retlw	0
  2605  39B4  3453               	retlw	83
  2606  39B5  3400               	retlw	0
  2607  39B6  3459               	retlw	89
  2608  39B7  3400               	retlw	0
  2609  39B8  345E               	retlw	94
  2610  39B9  3400               	retlw	0
  2611  39BA  3464               	retlw	100
  2612  39BB  3400               	retlw	0
  2613  39BC                     __end_of_OCD_threshold_setting:	
  2614                           
  2615                           	psect	stringtext4
  2616  3AB0                     __pstringtext4:	
  2617  3AB0                     _OCD_delay_setting:	
  2618  3AB0  3408               	retlw	8
  2619  3AB1  3400               	retlw	0
  2620  3AB2  3414               	retlw	20
  2621  3AB3  3400               	retlw	0
  2622  3AB4  3428               	retlw	40
  2623  3AB5  3400               	retlw	0
  2624  3AB6  3450               	retlw	80
  2625  3AB7  3400               	retlw	0
  2626  3AB8  34A0               	retlw	160
  2627  3AB9  3400               	retlw	0
  2628  3ABA  3440               	retlw	64
  2629  3ABB  3401               	retlw	1
  2630  3ABC  3480               	retlw	128
  2631  3ABD  3402               	retlw	2
  2632  3ABE  3400               	retlw	0
  2633  3ABF  3405               	retlw	5
  2634  3AC0                     __end_of_OCD_delay_setting:	
  2635                           
  2636                           	psect	stringtext5
  2637  3AC0                     __pstringtext5:	
  2638  3AC0                     _SCD_threshold_setting:	
  2639  3AC0  342C               	retlw	44
  2640  3AC1  3400               	retlw	0
  2641  3AC2  3443               	retlw	67
  2642  3AC3  3400               	retlw	0
  2643  3AC4  3459               	retlw	89
  2644  3AC5  3400               	retlw	0
  2645  3AC6  346F               	retlw	111
  2646  3AC7  3400               	retlw	0
  2647  3AC8  3485               	retlw	133
  2648  3AC9  3400               	retlw	0
  2649  3ACA  349B               	retlw	155
  2650  3ACB  3400               	retlw	0
  2651  3ACC  34B2               	retlw	178
  2652  3ACD  3400               	retlw	0
  2653  3ACE  34C8               	retlw	200
  2654  3ACF  3400               	retlw	0
  2655  3AD0                     __end_of_SCD_threshold_setting:	
  2656                           
  2657                           	psect	stringtext6
  2658  3AEE                     __pstringtext6:	
  2659  3AEE                     _OV_delay_setting:	
  2660  3AEE  3401               	retlw	1
  2661  3AEF  3400               	retlw	0
  2662  3AF0  3402               	retlw	2
  2663  3AF1  3400               	retlw	0
  2664  3AF2  3404               	retlw	4
  2665  3AF3  3400               	retlw	0
  2666  3AF4  3408               	retlw	8
  2667  3AF5  3400               	retlw	0
  2668  3AF6                     __end_of_OV_delay_setting:	
  2669                           
  2670                           	psect	stringtext7
  2671  3AF6                     __pstringtext7:	
  2672  3AF6                     _UV_delay_setting:	
  2673  3AF6  3401               	retlw	1
  2674  3AF7  3400               	retlw	0
  2675  3AF8  3404               	retlw	4
  2676  3AF9  3400               	retlw	0
  2677  3AFA  3408               	retlw	8
  2678  3AFB  3400               	retlw	0
  2679  3AFC  3410               	retlw	16
  2680  3AFD  3400               	retlw	0
  2681  3AFE                     __end_of_UV_delay_setting:	
  2682                           
  2683                           	psect	stringtext8
  2684  3AFE                     __pstringtext8:	
  2685  3AFE                     _SCD_delay_setting:	
  2686  3AFE  3446               	retlw	70
  2687  3AFF  3400               	retlw	0
  2688  3B00  3464               	retlw	100
  2689  3B01  3400               	retlw	0
  2690  3B02  34C8               	retlw	200
  2691  3B03  3400               	retlw	0
  2692  3B04  3490               	retlw	144
  2693  3B05  3401               	retlw	1
  2694  3B06                     __end_of_SCD_delay_setting:	
  2695                           
  2696                           	psect	stringtext9
  2697  3B06                     __pstringtext9:	
  2698  3B06                     _Lg4:	
  2699  3B06  3426               	retlw	38
  2700  3B07  349E               	retlw	158
  2701  3B08  3478               	retlw	120
  2702  3B09  343E               	retlw	62
  2703  3B0A                     __end_of_Lg4:	
  2704                           
  2705                           	psect	stringtext10
  2706  3B0A                     __pstringtext10:	
  2707  3B0A                     _Lg3:	
  2708  3B0A  34EE               	retlw	238
  2709  3B0B  34E9               	retlw	233
  2710  3B0C  3491               	retlw	145
  2711  3B0D  343E               	retlw	62
  2712  3B0E                     __end_of_Lg3:	
  2713                           
  2714                           	psect	stringtext11
  2715  3B0E                     __pstringtext11:	
  2716  3B0E                     _Lg2:	
  2717  3B0E  3413               	retlw	19
  2718  3B0F  34CE               	retlw	206
  2719  3B10  34CC               	retlw	204
  2720  3B11  343E               	retlw	62
  2721  3B12                     __end_of_Lg2:	
  2722                           
  2723                           	psect	stringtext12
  2724  3B12                     __pstringtext12:	
  2725  3B12                     _Lg1:	
  2726  3B12  34AA               	retlw	170
  2727  3B13  34AA               	retlw	170
  2728  3B14  342A               	retlw	42
  2729  3B15  343F               	retlw	63
  2730  3B16                     __end_of_Lg1:	
  2731                           
  2732                           	psect	stringtext13
  2733  3B16                     __pstringtext13:	
  2734  3B16                     _ln2_lo:	
  2735  3B16  34D1               	retlw	209
  2736  3B17  34F7               	retlw	247
  2737  3B18  3417               	retlw	23
  2738  3B19  3437               	retlw	55
  2739  3B1A                     __end_of_ln2_lo:	
  2740                           
  2741                           	psect	stringtext14
  2742  3B1A                     __pstringtext14:	
  2743  3B1A                     _ln2_hi:	
  2744  3B1A  3480               	retlw	128
  2745  3B1B  3471               	retlw	113
  2746  3B1C  3431               	retlw	49
  2747  3B1D  343F               	retlw	63
  2748  3B1E                     __end_of_ln2_hi:	
  2749                           
  2750                           	psect	stringtext15
  2751  38B8                     __pstringtext15:	
  2752  38B8                     _ATmega328_address:	
  2753  38B8  3402               	retlw	2
  2754  38B9  3400               	retlw	0
  2755  38BA                     __end_of_ATmega328_address:	
  2756  0016                     _TMR1	set	22
  2757  0003                     _STATUSbits	set	3
  2758  000B                     _INTCONbits	set	11
  2759  0018                     _T1CONbits	set	24
  2760  0011                     _PIR1bits	set	17
  2761  0097                     _WDTCONbits	set	151
  2762  0090                     _TRISEbits	set	144
  2763  008C                     _TRISAbits	set	140
  2764  008E                     _TRISCbits	set	142
  2765  008D                     _TRISBbits	set	141
  2766  0091                     _PIE1bits	set	145
  2767  0476                     _TRISC6	set	1142
  2768  0477                     _TRISC7	set	1143
  2769  04CF                     _SPLLEN	set	1231
  2770  04CE                     _IRCF3	set	1230
  2771  04CD                     _IRCF2	set	1229
  2772  04CC                     _IRCF1	set	1228
  2773  04CB                     _IRCF0	set	1227
  2774  04C9                     _SCS1	set	1225
  2775  04C8                     _SCS0	set	1224
  2776  0110                     _LATEbits	set	272
  2777  010C                     _LATAbits	set	268
  2778  019A                     _TX1REG	set	410
  2779  0199                     _RC1REG	set	409
  2780  019D                     _RC1STAbits	set	413
  2781  019B                     _SPBRG	set	411
  2782  018E                     _ANSELCbits	set	398
  2783  018D                     _ANSELBbits	set	397
  2784  0CF5                     _TXEN	set	3317
  2785  0CEC                     _CREN	set	3308
  2786  0CEF                     _SPEN	set	3311
  2787  0CF4                     _SYNC	set	3316
  2788  0CF2                     _BRGH	set	3314
  2789  0216                     _SSPCON2bits	set	534
  2790  0211                     _SSPBUF	set	529
  2791  0212                     _SSPADD	set	530
  2792  0215                     _SSPCONbits	set	533
  2793  0E24                     _RXPPSbits	set	3620
  2794  0E20                     _SSPCLKPPSbits	set	3616
  2795  0E21                     _SSPDATPPSbits	set	3617
  2796  0E0F                     _PPSLOCKbits	set	3599
  2797  0E0F                     _PPSLOCK	set	3599
  2798  0E9A                     _RB2PPSbits	set	3738
  2799  0EA5                     _RC5PPSbits	set	3749
  2800  0EA4                     _RC4PPSbits	set	3748
  2801  38BA                     STR_2:	
  2802  38BA  3443               	retlw	67	;'C'
  2803  38BB  3465               	retlw	101	;'e'
  2804  38BC  346C               	retlw	108	;'l'
  2805  38BD  346C               	retlw	108	;'l'
  2806  38BE  3420               	retlw	32	;' '
  2807  38BF  3462               	retlw	98	;'b'
  2808  38C0  3461               	retlw	97	;'a'
  2809  38C1  3474               	retlw	116	;'t'
  2810  38C2  3474               	retlw	116	;'t'
  2811  38C3  343A               	retlw	58	;':'
  2812  38C4  3420               	retlw	32	;' '
  2813  38C5  3425               	retlw	37	;'%'
  2814  38C6  3469               	retlw	105	;'i'
  2815  38C7  3420               	retlw	32	;' '
  2816  38C8  342C               	retlw	44	;','
  2817  38C9  3425               	retlw	37	;'%'
  2818  38CA  3464               	retlw	100	;'d'
  2819  38CB  342C               	retlw	44	;','
  2820  38CC  3420               	retlw	32	;' '
  2821  38CD  3425               	retlw	37	;'%'
  2822  38CE  3464               	retlw	100	;'d'
  2823  38CF  3420               	retlw	32	;' '
  2824  38D0  342C               	retlw	44	;','
  2825  38D1  3420               	retlw	32	;' '
  2826  38D2  3425               	retlw	37	;'%'
  2827  38D3  3464               	retlw	100	;'d'
  2828  38D4  342C               	retlw	44	;','
  2829  38D5  3420               	retlw	32	;' '
  2830  38D6  3425               	retlw	37	;'%'
  2831  38D7  3464               	retlw	100	;'d'
  2832  38D8  342C               	retlw	44	;','
  2833  38D9  3420               	retlw	32	;' '
  2834  38DA  3425               	retlw	37	;'%'
  2835  38DB  3464               	retlw	100	;'d'
  2836  38DC  3420               	retlw	32	;' '
  2837  38DD  3442               	retlw	66	;'B'
  2838  38DE  3461               	retlw	97	;'a'
  2839  38DF  3474               	retlw	116	;'t'
  2840  38E0  3474               	retlw	116	;'t'
  2841  38E1  3420               	retlw	32	;' '
  2842  38E2  3443               	retlw	67	;'C'
  2843  38E3  3475               	retlw	117	;'u'
  2844  38E4  3472               	retlw	114	;'r'
  2845  38E5  3472               	retlw	114	;'r'
  2846  38E6  343A               	retlw	58	;':'
  2847  38E7  3420               	retlw	32	;' '
  2848  38E8  3425               	retlw	37	;'%'
  2849  38E9  3469               	retlw	105	;'i'
  2850  38EA  3420               	retlw	32	;' '
  2851  38EB  3454               	retlw	84	;'T'
  2852  38EC  3465               	retlw	101	;'e'
  2853  38ED  346D               	retlw	109	;'m'
  2854  38EE  3470               	retlw	112	;'p'
  2855  38EF  343A               	retlw	58	;':'
  2856  38F0  3420               	retlw	32	;' '
  2857  38F1  3425               	retlw	37	;'%'
  2858  38F2  3469               	retlw	105	;'i'
  2859  38F3  3420               	retlw	32	;' '
  2860  38F4  3443               	retlw	67	;'C'
  2861  38F5  3454               	retlw	84	;'T'
  2862  38F6  3452               	retlw	82	;'R'
  2863  38F7  344C               	retlw	76	;'L'
  2864  38F8  3432               	retlw	50	;'2'
  2865  38F9  343A               	retlw	58	;':'
  2866  38FA  3420               	retlw	32	;' '
  2867  38FB  3425               	retlw	37	;'%'
  2868  38FC  3469               	retlw	105	;'i'
  2869  38FD  3420               	retlw	32	;' '
  2870  38FE  340A               	retlw	10
  2871  38FF  340D               	retlw	13
  2872  3900  3400               	retlw	0
  2873                           
  2874                           	psect	stringtext16
  2875  3901                     __pstringtext16:	
  2876  3901                     STR_9:	
  2877  3901  3463               	retlw	99	;'c'
  2878  3902  3465               	retlw	101	;'e'
  2879  3903  346C               	retlw	108	;'l'
  2880  3904  346C               	retlw	108	;'l'
  2881  3905  3420               	retlw	32	;' '
  2882  3906  3470               	retlw	112	;'p'
  2883  3907  3472               	retlw	114	;'r'
  2884  3908  3465               	retlw	101	;'e'
  2885  3909  3464               	retlw	100	;'d'
  2886  390A  3469               	retlw	105	;'i'
  2887  390B  3463               	retlw	99	;'c'
  2888  390C  3474               	retlw	116	;'t'
  2889  390D  3465               	retlw	101	;'e'
  2890  390E  3464               	retlw	100	;'d'
  2891  390F  3420               	retlw	32	;' '
  2892  3910  3443               	retlw	67	;'C'
  2893  3911  3468               	retlw	104	;'h'
  2894  3912  3461               	retlw	97	;'a'
  2895  3913  3472               	retlw	114	;'r'
  2896  3914  3467               	retlw	103	;'g'
  2897  3915  3465               	retlw	101	;'e'
  2898  3916  343A               	retlw	58	;':'
  2899  3917  3420               	retlw	32	;' '
  2900  3918  3425               	retlw	37	;'%'
  2901  3919  3464               	retlw	100	;'d'
  2902  391A  3420               	retlw	32	;' '
  2903  391B  3425               	retlw	37	;'%'
  2904  391C  3464               	retlw	100	;'d'
  2905  391D  3420               	retlw	32	;' '
  2906  391E  3425               	retlw	37	;'%'
  2907  391F  3464               	retlw	100	;'d'
  2908  3920  3420               	retlw	32	;' '
  2909  3921  3425               	retlw	37	;'%'
  2910  3922  3464               	retlw	100	;'d'
  2911  3923  3420               	retlw	32	;' '
  2912  3924  3425               	retlw	37	;'%'
  2913  3925  3464               	retlw	100	;'d'
  2914  3926  340A               	retlw	10
  2915  3927  340D               	retlw	13
  2916  3928  3400               	retlw	0
  2917                           
  2918                           	psect	stringtext17
  2919  3929                     __pstringtext17:	
  2920  3929                     STR_1:	
  2921  3929  3457               	retlw	87	;'W'
  2922  392A  3441               	retlw	65	;'A'
  2923  392B  3454               	retlw	84	;'T'
  2924  392C  3443               	retlw	67	;'C'
  2925  392D  3448               	retlw	72	;'H'
  2926  392E  3444               	retlw	68	;'D'
  2927  392F  344F               	retlw	79	;'O'
  2928  3930  3447               	retlw	71	;'G'
  2929  3931  3420               	retlw	32	;' '
  2930  3932  344E               	retlw	78	;'N'
  2931  3933  344F               	retlw	79	;'O'
  2932  3934  3454               	retlw	84	;'T'
  2933  3935  3420               	retlw	32	;' '
  2934  3936  344B               	retlw	75	;'K'
  2935  3937  3449               	retlw	73	;'I'
  2936  3938  3443               	retlw	67	;'C'
  2937  3939  344B               	retlw	75	;'K'
  2938  393A  3445               	retlw	69	;'E'
  2939  393B  3444               	retlw	68	;'D'
  2940  393C  343A               	retlw	58	;':'
  2941  393D  3420               	retlw	32	;' '
  2942  393E  3441               	retlw	65	;'A'
  2943  393F  3446               	retlw	70	;'F'
  2944  3940  3445               	retlw	69	;'E'
  2945  3941  3420               	retlw	32	;' '
  2946  3942  3463               	retlw	99	;'c'
  2947  3943  346F               	retlw	111	;'o'
  2948  3944  346D               	retlw	109	;'m'
  2949  3945  346D               	retlw	109	;'m'
  2950  3946  3473               	retlw	115	;'s'
  2951  3947  3420               	retlw	32	;' '
  2952  3948  3465               	retlw	101	;'e'
  2953  3949  3472               	retlw	114	;'r'
  2954  394A  3472               	retlw	114	;'r'
  2955  394B  346F               	retlw	111	;'o'
  2956  394C  3472               	retlw	114	;'r'
  2957  394D  3420               	retlw	32	;' '
  2958  394E  340A               	retlw	10
  2959  394F  340D               	retlw	13
  2960  3950  3400               	retlw	0
  2961                           
  2962                           	psect	stringtext18
  2963  3951                     __pstringtext18:	
  2964  3951                     STR_11:	
  2965  3951  3450               	retlw	80	;'P'
  2966  3952  3472               	retlw	114	;'r'
  2967  3953  3469               	retlw	105	;'i'
  2968  3954  346E               	retlw	110	;'n'
  2969  3955  3474               	retlw	116	;'t'
  2970  3956  3469               	retlw	105	;'i'
  2971  3957  346E               	retlw	110	;'n'
  2972  3958  3467               	retlw	103	;'g'
  2973  3959  3420               	retlw	32	;' '
  2974  395A  346F               	retlw	111	;'o'
  2975  395B  3475               	retlw	117	;'u'
  2976  395C  3474               	retlw	116	;'t'
  2977  395D  3420               	retlw	32	;' '
  2978  395E  3441               	retlw	65	;'A'
  2979  395F  3446               	retlw	70	;'F'
  2980  3960  3445               	retlw	69	;'E'
  2981  3961  3420               	retlw	32	;' '
  2982  3962  3472               	retlw	114	;'r'
  2983  3963  3465               	retlw	101	;'e'
  2984  3964  3467               	retlw	103	;'g'
  2985  3965  3469               	retlw	105	;'i'
  2986  3966  3473               	retlw	115	;'s'
  2987  3967  3474               	retlw	116	;'t'
  2988  3968  3465               	retlw	101	;'e'
  2989  3969  3472               	retlw	114	;'r'
  2990  396A  3420               	retlw	32	;' '
  2991  396B  3476               	retlw	118	;'v'
  2992  396C  3461               	retlw	97	;'a'
  2993  396D  346C               	retlw	108	;'l'
  2994  396E  3475               	retlw	117	;'u'
  2995  396F  3465               	retlw	101	;'e'
  2996  3970  3473               	retlw	115	;'s'
  2997  3971  342E               	retlw	46	;'.'
  2998  3972  342E               	retlw	46	;'.'
  2999  3973  342E               	retlw	46	;'.'
  3000  3974  340A               	retlw	10
  3001  3975  340D               	retlw	13
  3002  3976  3400               	retlw	0
  3003                           
  3004                           	psect	stringtext19
  3005  3977                     __pstringtext19:	
  3006  3977                     STR_8:	
  3007  3977  3463               	retlw	99	;'c'
  3008  3978  3465               	retlw	101	;'e'
  3009  3979  346C               	retlw	108	;'l'
  3010  397A  346C               	retlw	108	;'l'
  3011  397B  3420               	retlw	32	;' '
  3012  397C  3470               	retlw	112	;'p'
  3013  397D  3472               	retlw	114	;'r'
  3014  397E  3465               	retlw	101	;'e'
  3015  397F  3464               	retlw	100	;'d'
  3016  3980  3469               	retlw	105	;'i'
  3017  3981  3463               	retlw	99	;'c'
  3018  3982  3474               	retlw	116	;'t'
  3019  3983  3465               	retlw	101	;'e'
  3020  3984  3464               	retlw	100	;'d'
  3021  3985  3420               	retlw	32	;' '
  3022  3986  3453               	retlw	83	;'S'
  3023  3987  344F               	retlw	79	;'O'
  3024  3988  3443               	retlw	67	;'C'
  3025  3989  343A               	retlw	58	;':'
  3026  398A  3420               	retlw	32	;' '
  3027  398B  3425               	retlw	37	;'%'
  3028  398C  3464               	retlw	100	;'d'
  3029  398D  3420               	retlw	32	;' '
  3030  398E  3425               	retlw	37	;'%'
  3031  398F  3464               	retlw	100	;'d'
  3032  3990  3420               	retlw	32	;' '
  3033  3991  3425               	retlw	37	;'%'
  3034  3992  3464               	retlw	100	;'d'
  3035  3993  3420               	retlw	32	;' '
  3036  3994  3425               	retlw	37	;'%'
  3037  3995  3464               	retlw	100	;'d'
  3038  3996  3420               	retlw	32	;' '
  3039  3997  3425               	retlw	37	;'%'
  3040  3998  3464               	retlw	100	;'d'
  3041  3999  340A               	retlw	10
  3042  399A  340D               	retlw	13
  3043  399B  3400               	retlw	0
  3044                           
  3045                           	psect	stringtext20
  3046  39BC                     __pstringtext20:	
  3047  39BC                     STR_15:	
  3048  39BC  3430               	retlw	48	;'0'
  3049  39BD  3478               	retlw	120	;'x'
  3050  39BE  3430               	retlw	48	;'0'
  3051  39BF  3434               	retlw	52	;'4'
  3052  39C0  3420               	retlw	32	;' '
  3053  39C1  3453               	retlw	83	;'S'
  3054  39C2  3459               	retlw	89	;'Y'
  3055  39C3  3453               	retlw	83	;'S'
  3056  39C4  345F               	retlw	95	;'_'
  3057  39C5  3443               	retlw	67	;'C'
  3058  39C6  3454               	retlw	84	;'T'
  3059  39C7  3452               	retlw	82	;'R'
  3060  39C8  344C               	retlw	76	;'L'
  3061  39C9  3431               	retlw	49	;'1'
  3062  39CA  343A               	retlw	58	;':'
  3063  39CB  3420               	retlw	32	;' '
  3064  39CC  3425               	retlw	37	;'%'
  3065  39CD  3469               	retlw	105	;'i'
  3066  39CE  3420               	retlw	32	;' '
  3067  39CF  340A               	retlw	10
  3068  39D0  340D               	retlw	13
  3069  39D1  3400               	retlw	0
  3070                           
  3071                           	psect	stringtext21
  3072  39D2                     __pstringtext21:	
  3073  39D2                     STR_3:	
  3074  39D2  3430               	retlw	48	;'0'
  3075  39D3  3478               	retlw	120	;'x'
  3076  39D4  3430               	retlw	48	;'0'
  3077  39D5  3435               	retlw	53	;'5'
  3078  39D6  3420               	retlw	32	;' '
  3079  39D7  3453               	retlw	83	;'S'
  3080  39D8  3459               	retlw	89	;'Y'
  3081  39D9  3453               	retlw	83	;'S'
  3082  39DA  345F               	retlw	95	;'_'
  3083  39DB  3443               	retlw	67	;'C'
  3084  39DC  3454               	retlw	84	;'T'
  3085  39DD  3452               	retlw	82	;'R'
  3086  39DE  344C               	retlw	76	;'L'
  3087  39DF  3432               	retlw	50	;'2'
  3088  39E0  343A               	retlw	58	;':'
  3089  39E1  3420               	retlw	32	;' '
  3090  39E2  3425               	retlw	37	;'%'
  3091  39E3  3469               	retlw	105	;'i'
  3092  39E4  3420               	retlw	32	;' '
  3093  39E5  340A               	retlw	10
  3094  39E6  340D               	retlw	13
  3095  39E7  3400               	retlw	0
  3096                           
  3097                           	psect	stringtext22
  3098  39E8                     __pstringtext22:	
  3099  39E8                     STR_14:	
  3100  39E8  3430               	retlw	48	;'0'
  3101  39E9  3478               	retlw	120	;'x'
  3102  39EA  3430               	retlw	48	;'0'
  3103  39EB  3431               	retlw	49	;'1'
  3104  39EC  3420               	retlw	32	;' '
  3105  39ED  3443               	retlw	67	;'C'
  3106  39EE  3445               	retlw	69	;'E'
  3107  39EF  344C               	retlw	76	;'L'
  3108  39F0  344C               	retlw	76	;'L'
  3109  39F1  3442               	retlw	66	;'B'
  3110  39F2  3441               	retlw	65	;'A'
  3111  39F3  344C               	retlw	76	;'L'
  3112  39F4  3431               	retlw	49	;'1'
  3113  39F5  343A               	retlw	58	;':'
  3114  39F6  3420               	retlw	32	;' '
  3115  39F7  3425               	retlw	37	;'%'
  3116  39F8  3469               	retlw	105	;'i'
  3117  39F9  3420               	retlw	32	;' '
  3118  39FA  340A               	retlw	10
  3119  39FB  340D               	retlw	13
  3120  39FC  3400               	retlw	0
  3121                           
  3122                           	psect	stringtext23
  3123  39FD                     __pstringtext23:	
  3124  39FD                     STR_5:	
  3125  39FD  3430               	retlw	48	;'0'
  3126  39FE  3478               	retlw	120	;'x'
  3127  39FF  3430               	retlw	48	;'0'
  3128  3A00  3436               	retlw	54	;'6'
  3129  3A01  3420               	retlw	32	;' '
  3130  3A02  3450               	retlw	80	;'P'
  3131  3A03  3452               	retlw	82	;'R'
  3132  3A04  344F               	retlw	79	;'O'
  3133  3A05  3454               	retlw	84	;'T'
  3134  3A06  3445               	retlw	69	;'E'
  3135  3A07  3443               	retlw	67	;'C'
  3136  3A08  3454               	retlw	84	;'T'
  3137  3A09  3431               	retlw	49	;'1'
  3138  3A0A  343A               	retlw	58	;':'
  3139  3A0B  3420               	retlw	32	;' '
  3140  3A0C  3425               	retlw	37	;'%'
  3141  3A0D  3469               	retlw	105	;'i'
  3142  3A0E  3420               	retlw	32	;' '
  3143  3A0F  340A               	retlw	10
  3144  3A10  340D               	retlw	13
  3145  3A11  3400               	retlw	0
  3146                           
  3147                           	psect	stringtext24
  3148  3A12                     __pstringtext24:	
  3149  3A12                     STR_6:	
  3150  3A12  3430               	retlw	48	;'0'
  3151  3A13  3478               	retlw	120	;'x'
  3152  3A14  3430               	retlw	48	;'0'
  3153  3A15  3437               	retlw	55	;'7'
  3154  3A16  3420               	retlw	32	;' '
  3155  3A17  3450               	retlw	80	;'P'
  3156  3A18  3452               	retlw	82	;'R'
  3157  3A19  344F               	retlw	79	;'O'
  3158  3A1A  3454               	retlw	84	;'T'
  3159  3A1B  3445               	retlw	69	;'E'
  3160  3A1C  3443               	retlw	67	;'C'
  3161  3A1D  3454               	retlw	84	;'T'
  3162  3A1E  3432               	retlw	50	;'2'
  3163  3A1F  343A               	retlw	58	;':'
  3164  3A20  3420               	retlw	32	;' '
  3165  3A21  3425               	retlw	37	;'%'
  3166  3A22  3469               	retlw	105	;'i'
  3167  3A23  3420               	retlw	32	;' '
  3168  3A24  340A               	retlw	10
  3169  3A25  340D               	retlw	13
  3170  3A26  3400               	retlw	0
  3171                           
  3172                           	psect	stringtext25
  3173  3A27                     __pstringtext25:	
  3174  3A27                     STR_19:	
  3175  3A27  3430               	retlw	48	;'0'
  3176  3A28  3478               	retlw	120	;'x'
  3177  3A29  3430               	retlw	48	;'0'
  3178  3A2A  3438               	retlw	56	;'8'
  3179  3A2B  3420               	retlw	32	;' '
  3180  3A2C  3450               	retlw	80	;'P'
  3181  3A2D  3452               	retlw	82	;'R'
  3182  3A2E  344F               	retlw	79	;'O'
  3183  3A2F  3454               	retlw	84	;'T'
  3184  3A30  3445               	retlw	69	;'E'
  3185  3A31  3443               	retlw	67	;'C'
  3186  3A32  3454               	retlw	84	;'T'
  3187  3A33  3433               	retlw	51	;'3'
  3188  3A34  343A               	retlw	58	;':'
  3189  3A35  3420               	retlw	32	;' '
  3190  3A36  3425               	retlw	37	;'%'
  3191  3A37  3469               	retlw	105	;'i'
  3192  3A38  3420               	retlw	32	;' '
  3193  3A39  340A               	retlw	10
  3194  3A3A  340D               	retlw	13
  3195  3A3B  3400               	retlw	0
  3196                           
  3197                           	psect	stringtext26
  3198  3A3C                     __pstringtext26:	
  3199  3A3C                     STR_4:	
  3200  3A3C  3430               	retlw	48	;'0'
  3201  3A3D  3478               	retlw	120	;'x'
  3202  3A3E  3430               	retlw	48	;'0'
  3203  3A3F  3430               	retlw	48	;'0'
  3204  3A40  3420               	retlw	32	;' '
  3205  3A41  3453               	retlw	83	;'S'
  3206  3A42  3459               	retlw	89	;'Y'
  3207  3A43  3453               	retlw	83	;'S'
  3208  3A44  345F               	retlw	95	;'_'
  3209  3A45  3453               	retlw	83	;'S'
  3210  3A46  3454               	retlw	84	;'T'
  3211  3A47  3441               	retlw	65	;'A'
  3212  3A48  3454               	retlw	84	;'T'
  3213  3A49  343A               	retlw	58	;':'
  3214  3A4A  3420               	retlw	32	;' '
  3215  3A4B  3425               	retlw	37	;'%'
  3216  3A4C  3469               	retlw	105	;'i'
  3217  3A4D  3420               	retlw	32	;' '
  3218  3A4E  340A               	retlw	10
  3219  3A4F  340D               	retlw	13
  3220  3A50  3400               	retlw	0
  3221                           
  3222                           	psect	stringtext27
  3223  3A51                     __pstringtext27:	
  3224  3A51                     STR_20:	
  3225  3A51  3430               	retlw	48	;'0'
  3226  3A52  3478               	retlw	120	;'x'
  3227  3A53  3430               	retlw	48	;'0'
  3228  3A54  3439               	retlw	57	;'9'
  3229  3A55  3420               	retlw	32	;' '
  3230  3A56  344F               	retlw	79	;'O'
  3231  3A57  3456               	retlw	86	;'V'
  3232  3A58  345F               	retlw	95	;'_'
  3233  3A59  3454               	retlw	84	;'T'
  3234  3A5A  3452               	retlw	82	;'R'
  3235  3A5B  3449               	retlw	73	;'I'
  3236  3A5C  3450               	retlw	80	;'P'
  3237  3A5D  343A               	retlw	58	;':'
  3238  3A5E  3420               	retlw	32	;' '
  3239  3A5F  3425               	retlw	37	;'%'
  3240  3A60  3469               	retlw	105	;'i'
  3241  3A61  3420               	retlw	32	;' '
  3242  3A62  340A               	retlw	10
  3243  3A63  340D               	retlw	13
  3244  3A64  3400               	retlw	0
  3245                           
  3246                           	psect	stringtext28
  3247  3A65                     __pstringtext28:	
  3248  3A65                     STR_21:	
  3249  3A65  3430               	retlw	48	;'0'
  3250  3A66  3478               	retlw	120	;'x'
  3251  3A67  3430               	retlw	48	;'0'
  3252  3A68  3441               	retlw	65	;'A'
  3253  3A69  3420               	retlw	32	;' '
  3254  3A6A  3455               	retlw	85	;'U'
  3255  3A6B  3456               	retlw	86	;'V'
  3256  3A6C  345F               	retlw	95	;'_'
  3257  3A6D  3454               	retlw	84	;'T'
  3258  3A6E  3452               	retlw	82	;'R'
  3259  3A6F  3449               	retlw	73	;'I'
  3260  3A70  3450               	retlw	80	;'P'
  3261  3A71  343A               	retlw	58	;':'
  3262  3A72  3420               	retlw	32	;' '
  3263  3A73  3425               	retlw	37	;'%'
  3264  3A74  3469               	retlw	105	;'i'
  3265  3A75  3420               	retlw	32	;' '
  3266  3A76  340A               	retlw	10
  3267  3A77  340D               	retlw	13
  3268  3A78  3400               	retlw	0
  3269                           
  3270                           	psect	stringtext29
  3271  3A79                     __pstringtext29:	
  3272  3A79                     STR_22:	
  3273  3A79  3430               	retlw	48	;'0'
  3274  3A7A  3478               	retlw	120	;'x'
  3275  3A7B  3430               	retlw	48	;'0'
  3276  3A7C  3442               	retlw	66	;'B'
  3277  3A7D  3420               	retlw	32	;' '
  3278  3A7E  3443               	retlw	67	;'C'
  3279  3A7F  3443               	retlw	67	;'C'
  3280  3A80  345F               	retlw	95	;'_'
  3281  3A81  3443               	retlw	67	;'C'
  3282  3A82  3446               	retlw	70	;'F'
  3283  3A83  3447               	retlw	71	;'G'
  3284  3A84  343A               	retlw	58	;':'
  3285  3A85  3420               	retlw	32	;' '
  3286  3A86  3425               	retlw	37	;'%'
  3287  3A87  3469               	retlw	105	;'i'
  3288  3A88  3420               	retlw	32	;' '
  3289  3A89  340A               	retlw	10
  3290  3A8A  340D               	retlw	13
  3291  3A8B  3400               	retlw	0
  3292                           
  3293                           	psect	stringtext30
  3294  3A8C                     __pstringtext30:	
  3295  3A8C                     STR_23:	
  3296  3A8C  3430               	retlw	48	;'0'
  3297  3A8D  3478               	retlw	120	;'x'
  3298  3A8E  3433               	retlw	51	;'3'
  3299  3A8F  3432               	retlw	50	;'2'
  3300  3A90  3420               	retlw	32	;' '
  3301  3A91  3443               	retlw	67	;'C'
  3302  3A92  3443               	retlw	67	;'C'
  3303  3A93  345F               	retlw	95	;'_'
  3304  3A94  3448               	retlw	72	;'H'
  3305  3A95  3449               	retlw	73	;'I'
  3306  3A96  343A               	retlw	58	;':'
  3307  3A97  3420               	retlw	32	;' '
  3308  3A98  3425               	retlw	37	;'%'
  3309  3A99  3469               	retlw	105	;'i'
  3310  3A9A  3420               	retlw	32	;' '
  3311  3A9B  340A               	retlw	10
  3312  3A9C  340D               	retlw	13
  3313  3A9D  3400               	retlw	0
  3314                           
  3315                           	psect	stringtext31
  3316  3A9E                     __pstringtext31:	
  3317  3A9E                     STR_24:	
  3318  3A9E  3430               	retlw	48	;'0'
  3319  3A9F  3478               	retlw	120	;'x'
  3320  3AA0  3433               	retlw	51	;'3'
  3321  3AA1  3433               	retlw	51	;'3'
  3322  3AA2  3420               	retlw	32	;' '
  3323  3AA3  3443               	retlw	67	;'C'
  3324  3AA4  3443               	retlw	67	;'C'
  3325  3AA5  345F               	retlw	95	;'_'
  3326  3AA6  344C               	retlw	76	;'L'
  3327  3AA7  344F               	retlw	79	;'O'
  3328  3AA8  343A               	retlw	58	;':'
  3329  3AA9  3420               	retlw	32	;' '
  3330  3AAA  3425               	retlw	37	;'%'
  3331  3AAB  3469               	retlw	105	;'i'
  3332  3AAC  3420               	retlw	32	;' '
  3333  3AAD  340A               	retlw	10
  3334  3AAE  340D               	retlw	13
  3335  3AAF  3400               	retlw	0
  3336                           
  3337                           	psect	stringtext32
  3338  3AD0                     __pstringtext32:	
  3339  3AD0                     STR_7:	
  3340  3AD0  3443               	retlw	67	;'C'
  3341  3AD1  3475               	retlw	117	;'u'
  3342  3AD2  3472               	retlw	114	;'r'
  3343  3AD3  3472               	retlw	114	;'r'
  3344  3AD4  3465               	retlw	101	;'e'
  3345  3AD5  346E               	retlw	110	;'n'
  3346  3AD6  3474               	retlw	116	;'t'
  3347  3AD7  343A               	retlw	58	;':'
  3348  3AD8  3420               	retlw	32	;' '
  3349  3AD9  3425               	retlw	37	;'%'
  3350  3ADA  3464               	retlw	100	;'d'
  3351  3ADB  3420               	retlw	32	;' '
  3352  3ADC  340A               	retlw	10
  3353  3ADD  340D               	retlw	13
  3354  3ADE  3400               	retlw	0
  3355                           
  3356                           	psect	stringtext33
  3357  3ADF                     __pstringtext33:	
  3358  3ADF                     STR_10:	
  3359  3ADF  3454               	retlw	84	;'T'
  3360  3AE0  3465               	retlw	101	;'e'
  3361  3AE1  346D               	retlw	109	;'m'
  3362  3AE2  3470               	retlw	112	;'p'
  3363  3AE3  343A               	retlw	58	;':'
  3364  3AE4  3420               	retlw	32	;' '
  3365  3AE5  3425               	retlw	37	;'%'
  3366  3AE6  3464               	retlw	100	;'d'
  3367  3AE7  3420               	retlw	32	;' '
  3368  3AE8  3465               	retlw	101	;'e'
  3369  3AE9  342D               	retlw	45	;'-'
  3370  3AEA  3432               	retlw	50	;'2'
  3371  3AEB  340A               	retlw	10
  3372  3AEC  340D               	retlw	13
  3373  3AED  3400               	retlw	0
  3374                           
  3375                           	psect	stringtext34
  3376  3B1E                     __pstringtext34:	
  3377  3B1E                     STR_102:	
  3378  3B1E  3468               	retlw	104	;'h'
  3379  3B1F  3468               	retlw	104	;'h'
  3380  3B20  3458               	retlw	88	;'X'
  3381  3B21  3400               	retlw	0
  3382                           
  3383                           	psect	stringtext35
  3384  3B22                     __pstringtext35:	
  3385  3B22                     STR_26:	
  3386  3B22  3468               	retlw	104	;'h'
  3387  3B23  3468               	retlw	104	;'h'
  3388  3B24  3464               	retlw	100	;'d'
  3389  3B25  3400               	retlw	0
  3390                           
  3391                           	psect	stringtext36
  3392  3B26                     __pstringtext36:	
  3393  3B26                     STR_30:	
  3394  3B26  3468               	retlw	104	;'h'
  3395  3B27  3468               	retlw	104	;'h'
  3396  3B28  3469               	retlw	105	;'i'
  3397  3B29  3400               	retlw	0
  3398                           
  3399                           	psect	stringtext37
  3400  3B2A                     __pstringtext37:	
  3401  3B2A                     STR_68:	
  3402  3B2A  3468               	retlw	104	;'h'
  3403  3B2B  3468               	retlw	104	;'h'
  3404  3B2C  346E               	retlw	110	;'n'
  3405  3B2D  3400               	retlw	0
  3406                           
  3407                           	psect	stringtext38
  3408  3B2E                     __pstringtext38:	
  3409  3B2E                     STR_53:	
  3410  3B2E  3468               	retlw	104	;'h'
  3411  3B2F  3468               	retlw	104	;'h'
  3412  3B30  346F               	retlw	111	;'o'
  3413  3B31  3400               	retlw	0
  3414                           
  3415                           	psect	stringtext39
  3416  3B32                     __pstringtext39:	
  3417  3B32                     STR_83:	
  3418  3B32  3468               	retlw	104	;'h'
  3419  3B33  3468               	retlw	104	;'h'
  3420  3B34  3475               	retlw	117	;'u'
  3421  3B35  3400               	retlw	0
  3422                           
  3423                           	psect	stringtext40
  3424  3B36                     __pstringtext40:	
  3425  3B36                     STR_98:	
  3426  3B36  3468               	retlw	104	;'h'
  3427  3B37  3468               	retlw	104	;'h'
  3428  3B38  3478               	retlw	120	;'x'
  3429  3B39  3400               	retlw	0
  3430                           
  3431                           	psect	stringtext41
  3432  3B3A                     __pstringtext41:	
  3433  3B3A                     STR_120:	
  3434  3B3A  347A               	retlw	122	;'z'
  3435  3B3B  3458               	retlw	88	;'X'
  3436  3B3C  3400               	retlw	0
  3437                           
  3438                           	psect	stringtext42
  3439  3B3D                     __pstringtext42:	
  3440  3B3D                     STR_44:	
  3441  3B3D  347A               	retlw	122	;'z'
  3442  3B3E  3464               	retlw	100	;'d'
  3443  3B3F  3400               	retlw	0
  3444                           
  3445                           	psect	stringtext43
  3446  3B40                     __pstringtext43:	
  3447  3B40                     STR_48:	
  3448  3B40  347A               	retlw	122	;'z'
  3449  3B41  3469               	retlw	105	;'i'
  3450  3B42  3400               	retlw	0
  3451                           
  3452                           	psect	stringtext44
  3453  3B43                     __pstringtext44:	
  3454  3B43                     STR_78:	
  3455  3B43  347A               	retlw	122	;'z'
  3456  3B44  346E               	retlw	110	;'n'
  3457  3B45  3400               	retlw	0
  3458                           
  3459                           	psect	stringtext45
  3460  3B46                     __pstringtext45:	
  3461  3B46                     STR_63:	
  3462  3B46  347A               	retlw	122	;'z'
  3463  3B47  346F               	retlw	111	;'o'
  3464  3B48  3400               	retlw	0
  3465                           
  3466                           	psect	stringtext46
  3467  3B49                     __pstringtext46:	
  3468  3B49                     STR_93:	
  3469  3B49  347A               	retlw	122	;'z'
  3470  3B4A  3475               	retlw	117	;'u'
  3471  3B4B  3400               	retlw	0
  3472                           
  3473                           	psect	stringtext47
  3474  3B4C                     __pstringtext47:	
  3475  3B4C                     STR_116:	
  3476  3B4C  347A               	retlw	122	;'z'
  3477  3B4D  3478               	retlw	120	;'x'
  3478  3B4E  3400               	retlw	0
  3479                           
  3480                           	psect	stringtext48
  3481  0000                     __pstringtext48:	
  3482  3ADC                     
  3483                           ; #config settings
  3484  0000                     
  3485                           	psect	cinit
  3486  0020                     start_initialization:	
  3487  0020                     __initialization:		;BIGRAM
  3488                           
  3489                           ; Initialize objects allocated to BANK3
  3490  0020  0023               	movlb	3	; select bank3
  3491  0021  31A8  2000  3180   	fcall	__pidataBANK3	;fetch initializer
  3492  0024  00E8               	movwf	__pdataBANK3& (0+127)
  3493  0025  31A8  2001  3180   	fcall	__pidataBANK3+1	;fetch initializer
  3494  0028  00E9               	movwf	(__pdataBANK3+1)& (0+127)
  3495  0029  31A8  2002  3180   	fcall	__pidataBANK3+2	;fetch initializer
  3496  002C  00EA               	movwf	(__pdataBANK3+2)& (0+127)
  3497  002D  31A8  2003  3180   	fcall	__pidataBANK3+3	;fetch initializer
  3498  0030  00EB               	movwf	(__pdataBANK3+3)& (0+127)
  3499                           
  3500                           ; Initialize objects allocated to BANK4
  3501  0031  304C               	movlw	low __pidataBANK4
  3502  0032  0084               	movwf	4
  3503  0033  30B1               	movlw	(high __pidataBANK4)| (0+128)
  3504  0034  0085               	movwf	5
  3505  0035  0024               	movlb	4	; select bank4
  3506  0036  0012               	moviw fsr0++
  3507  0037  00C0               	movwf	__pdataBANK4& (0+127)
  3508  0038  0012               	moviw fsr0++
  3509  0039  00C1               	movwf	(__pdataBANK4+1)& (0+127)
  3510  003A  0012               	moviw fsr0++
  3511  003B  00C2               	movwf	(__pdataBANK4+2)& (0+127)
  3512  003C  0012               	moviw fsr0++
  3513  003D  00C3               	movwf	(__pdataBANK4+3)& (0+127)
  3514  003E  0012               	moviw fsr0++
  3515  003F  00C4               	movwf	(__pdataBANK4+4)& (0+127)
  3516  0040  0012               	moviw fsr0++
  3517  0041  00C5               	movwf	(__pdataBANK4+5)& (0+127)
  3518  0042  0012               	moviw fsr0++
  3519  0043  00C6               	movwf	(__pdataBANK4+6)& (0+127)
  3520                           
  3521                           ; Clear objects allocated to BIGRAM
  3522  0044  3071               	movlw	low (0+10097)
  3523  0045  0084               	movwf	4
  3524  0046  3027               	movlw	high (0+10097)
  3525  0047  0085               	movwf	5
  3526  0048  307F               	movlw	127
  3527  0049  00FE               	movwf	btemp
  3528  004A  3000               	movlw	0
  3529  004B  00FF               	movwf	btemp+1
  3530  004C  31B1  21A7  3180   	fcall	clear_ram0
  3531                           
  3532                           ; Clear objects allocated to COMMON
  3533  004F  01FC               	clrf	__pbssCOMMON& (0+127)
  3534                           
  3535                           ; Clear objects allocated to BANK2
  3536  0050  3066               	movlw	low __pbssBANK2
  3537  0051  0084               	movwf	4
  3538  0052  3001               	movlw	high __pbssBANK2
  3539  0053  0085               	movwf	5
  3540  0054  300A               	movlw	10
  3541  0055  00FE               	movwf	btemp
  3542  0056  3000               	movlw	0
  3543  0057  00FF               	movwf	btemp+1
  3544  0058  31B1  21A7  3180   	fcall	clear_ram0
  3545                           
  3546                           ; Clear objects allocated to BANK3
  3547  005B  30A0               	movlw	low __pbssBANK3
  3548  005C  0084               	movwf	4
  3549  005D  3001               	movlw	high __pbssBANK3
  3550  005E  0085               	movwf	5
  3551  005F  3048               	movlw	72
  3552  0060  00FE               	movwf	btemp
  3553  0061  3000               	movlw	0
  3554  0062  00FF               	movwf	btemp+1
  3555  0063  31B1  21A7  3180   	fcall	clear_ram0
  3556                           
  3557                           ; Clear objects allocated to BANK4
  3558  0066  3020               	movlw	low __pbssBANK4
  3559  0067  0084               	movwf	4
  3560  0068  3002               	movlw	high __pbssBANK4
  3561  0069  0085               	movwf	5
  3562  006A  3020               	movlw	32
  3563  006B  00FE               	movwf	btemp
  3564  006C  3000               	movlw	0
  3565  006D  00FF               	movwf	btemp+1
  3566  006E  31B1  21A7         	fcall	clear_ram0
  3567  0070                     end_of_initialization:	
  3568                           ;End of C runtime variable initialization code
  3569                           
  3570  0070                     __end_of__initialization:	
  3571  0070  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3572  0071  0020               	movlb	0
  3573  0072  31B4  2C38         	ljmp	_main	;jump to C main() function
  3574                           
  3575                           	psect	bssCOMMON
  3576  007C                     __pbssCOMMON:	
  3577  007C                     _toggleColor:	
  3578  007C                     	ds	1
  3579                           
  3580                           	psect	bssBANK2
  3581  0166                     __pbssBANK2:	
  3582  0166                     _width:	
  3583  0166                     	ds	2
  3584  0168                     _prec:	
  3585  0168                     	ds	2
  3586  016A                     _flags:	
  3587  016A                     	ds	2
  3588  016C                     _adcOffset:	
  3589  016C                     	ds	2
  3590  016E                     _adcGain:	
  3591  016E                     	ds	2
  3592                           
  3593                           	psect	bssBANK3
  3594  01A0                     __pbssBANK3:	
  3595  01A0                     _cellCharge:	
  3596  01A0                     	ds	10
  3597  01AA                     _cellSOC:	
  3598  01AA                     	ds	10
  3599  01B4                     _cellVoltages:	
  3600  01B4                     	ds	10
  3601  01BE                     logf@F469:	
  3602  01BE                     	ds	4
  3603  01C2                     _shuntResistorValue_mOhm:	
  3604  01C2                     	ds	4
  3605  01C6                     _temperatureThermistor:	
  3606  01C6                     	ds	4
  3607  01CA                     _batCurrent:	
  3608  01CA                     	ds	4
  3609  01CE                     _batVoltage:	
  3610  01CE                     	ds	4
  3611  01D2                     _errno:	
  3612  01D2                     	ds	2
  3613  01D4                     _nout:	
  3614  01D4                     	ds	2
  3615  01D6                     _minCellVoltage:	
  3616  01D6                     	ds	2
  3617  01D8                     _maxCellVoltage:	
  3618  01D8                     	ds	2
  3619  01DA                     _maxCellTempDischarge:	
  3620  01DA                     	ds	2
  3621  01DC                     _maxCellTempCharge:	
  3622  01DC                     	ds	2
  3623  01DE                     _minCellTempDischarge:	
  3624  01DE                     	ds	2
  3625  01E0                     _minCellTempCharge:	
  3626  01E0                     	ds	2
  3627  01E2                     myIsr@count:	
  3628  01E2                     	ds	1
  3629  01E3                     _tmr1_flag:	
  3630  01E3                     	ds	1
  3631  01E4                     _protect3:	
  3632  01E4                     	ds	1
  3633  01E5                     _protect2:	
  3634  01E5                     	ds	1
  3635  01E6                     _protect1:	
  3636  01E6                     	ds	1
  3637  01E7                     _currState:	
  3638  01E7                     	ds	1
  3639                           
  3640                           	psect	dataBANK3
  3641  01E8                     __pdataBANK3:	
  3642  01E8                     _samsung_cell_max_charge:	
  3643  01E8                     	ds	2
  3644  01EA                     _thermistorBetaValue:	
  3645  01EA                     	ds	2
  3646                           
  3647                           	psect	bssBANK4
  3648  0220                     __pbssBANK4:	
  3649  0220                     _dbuf:	
  3650  0220                     	ds	32
  3651                           
  3652                           	psect	dataBANK4
  3653  0240                     __pdataBANK4:	
  3654  0240                     stoa@F1152:	
  3655  0240                     	ds	7
  3656                           
  3657                           	psect	clrtext
  3658  31A7                     clear_ram0:	
  3659                           ;	Called with FSR0 containing the base address, and
  3660                           ;	btemp/btemp+1 has the size to clear
  3661                           
  3662  31A7  0064               	clrwdt	;clear the watchdog before getting into this loop
  3663  31A8                     clrloop0:	
  3664  31A8  0180               	clrf	0	;clear RAM location pointed to by FSR
  3665  31A9  3101               	addfsr 0,1
  3666  31AA  3001               	movlw	1
  3667  31AB  02FE               	subwf	126,f
  3668  31AC  3000               	movlw	0
  3669  31AD  3BFF               	subwfb	127,f
  3670  31AE  087F               	movf	127,w
  3671  31AF  047E               	iorwf	126,w
  3672  31B0  1903               	btfsc	3,2
  3673  31B1  3400               	retlw	0	;all done for this memory range, return
  3674  31B2  29A8               	goto	clrloop0	;have we reached the end yet?
  3675                           
  3676                           	psect	cstackBANK2
  3677  0120                     __pcstackBANK2:	
  3678  0120                     logf@R:	
  3679                           
  3680                           ; 4 bytes @ 0x0
  3681  0120                     	ds	4
  3682  0124                     logf@t1:	
  3683                           
  3684                           ; 4 bytes @ 0x4
  3685  0124                     	ds	4
  3686  0128                     logf@t2:	
  3687                           
  3688                           ; 4 bytes @ 0x8
  3689  0128                     	ds	4
  3690  012C                     _logf$2104:	
  3691                           
  3692                           ; 4 bytes @ 0xC
  3693  012C                     	ds	4
  3694  0130                     _logf$2105:	
  3695                           
  3696                           ; 4 bytes @ 0x10
  3697  0130                     	ds	4
  3698  0134                     _logf$2106:	
  3699                           
  3700                           ; 4 bytes @ 0x14
  3701  0134                     	ds	4
  3702  0138                     _logf$2107:	
  3703                           
  3704                           ; 4 bytes @ 0x18
  3705  0138                     	ds	4
  3706  013C                     logf@k:	
  3707                           
  3708                           ; 2 bytes @ 0x1C
  3709  013C                     	ds	2
  3710  013E                     logf@hfsq:	
  3711                           
  3712                           ; 4 bytes @ 0x1E
  3713  013E                     	ds	4
  3714  0142                     logf@dk:	
  3715                           
  3716                           ; 4 bytes @ 0x22
  3717  0142                     	ds	4
  3718  0146                     logf@s:	
  3719                           
  3720                           ; 4 bytes @ 0x26
  3721  0146                     	ds	4
  3722  014A                     logf@z:	
  3723                           
  3724                           ; 4 bytes @ 0x2A
  3725  014A                     	ds	4
  3726  014E                     logf@w:	
  3727                           
  3728                           ; 4 bytes @ 0x2E
  3729  014E                     	ds	4
  3730  0152                     _logf$2103:	
  3731                           
  3732                           ; 4 bytes @ 0x32
  3733  0152                     	ds	4
  3734  0156                     logf@u:	
  3735                           
  3736                           ; 4 bytes @ 0x36
  3737  0156                     	ds	4
  3738  015A                     logf@f:	
  3739                           
  3740                           ; 4 bytes @ 0x3A
  3741  015A                     	ds	4
  3742  015E                     logf@ix:	
  3743                           
  3744                           ; 4 bytes @ 0x3E
  3745  015E                     	ds	4
  3746  0162                     ??_statemachine:	
  3747                           
  3748                           ; 1 bytes @ 0x42
  3749  0162                     	ds	2
  3750  0164                     ??_main:	
  3751                           
  3752                           ; 1 bytes @ 0x44
  3753  0164                     	ds	2
  3754                           
  3755                           	psect	cstackBANK1
  3756  00A0                     __pcstackBANK1:	
  3757  00A0                     ?___flsub:	
  3758  00A0                     vfpfcnvrt@cp:	
  3759                           ; 4 bytes @ 0x0
  3760                           
  3761  00A0                     setShortCircuitProtection@scaler:	
  3762                           ; 2 bytes @ 0x0
  3763                           
  3764  00A0                     setOverCurrentDischargeProtection@scaler:	
  3765                           ; 4 bytes @ 0x0
  3766                           
  3767  00A0                     ___flsub@a:	
  3768                           ; 4 bytes @ 0x0
  3769                           
  3770                           
  3771                           ; 4 bytes @ 0x0
  3772  00A0                     	ds	2
  3773  00A2                     vfpfcnvrt@done:	
  3774                           
  3775                           ; 2 bytes @ 0x2
  3776  00A2                     	ds	2
  3777  00A4                     _vfpfcnvrt$1313:	
  3778  00A4                     ___flsub@b:	
  3779                           ; 2 bytes @ 0x4
  3780                           
  3781  00A4                     _setShortCircuitProtection$2089:	
  3782                           ; 4 bytes @ 0x4
  3783                           
  3784  00A4                     _setOverCurrentDischargeProtection$2090:	
  3785                           ; 4 bytes @ 0x4
  3786                           
  3787                           
  3788                           ; 4 bytes @ 0x4
  3789  00A4                     	ds	2
  3790  00A6                     _vfpfcnvrt$1314:	
  3791                           
  3792                           ; 2 bytes @ 0x6
  3793  00A6                     	ds	2
  3794  00A8                     ?_logf:	
  3795  00A8                     ?___fltol:	
  3796                           ; 4 bytes @ 0x8
  3797                           
  3798  00A8                     setShortCircuitProtection@i:	
  3799                           ; 4 bytes @ 0x8
  3800                           
  3801  00A8                     setOverCurrentDischargeProtection@i:	
  3802                           ; 2 bytes @ 0x8
  3803                           
  3804  00A8                     ___fltol@f1:	
  3805                           ; 2 bytes @ 0x8
  3806                           
  3807  00A8                     logf@x:	
  3808                           ; 4 bytes @ 0x8
  3809                           
  3810  00A8                     vfpfcnvrt@ll:	
  3811                           ; 4 bytes @ 0x8
  3812                           
  3813                           
  3814                           ; 8 bytes @ 0x8
  3815  00A8                     	ds	2
  3816  00AA                     setShortCircuitProtection@i_974:	
  3817  00AA                     setOverCurrentDischargeProtection@i_983:	
  3818                           ; 2 bytes @ 0xA
  3819                           
  3820                           
  3821                           ; 2 bytes @ 0xA
  3822  00AA                     	ds	2
  3823  00AC                     ??_logf:	
  3824  00AC                     ??___fltol:	
  3825                           ; 1 bytes @ 0xC
  3826                           
  3827                           
  3828                           ; 1 bytes @ 0xC
  3829  00AC                     	ds	4
  3830  00B0                     vfpfcnvrt@vp:	
  3831                           
  3832                           ; 2 bytes @ 0x10
  3833  00B0                     	ds	1
  3834  00B1                     ??_updateVoltages:	
  3835  00B1                     ??_calibrate_BATTSOC:	
  3836                           ; 1 bytes @ 0x11
  3837                           
  3838  00B1                     ??_updateCurrent:	
  3839                           ; 1 bytes @ 0x11
  3840                           
  3841  00B1                     coulomb_counter@i:	
  3842                           ; 1 bytes @ 0x11
  3843                           
  3844                           
  3845                           ; 2 bytes @ 0x11
  3846  00B1                     	ds	1
  3847  00B2                     vfpfcnvrt@c:	
  3848                           
  3849                           ; 1 bytes @ 0x12
  3850  00B2                     	ds	1
  3851  00B3                     vfpfcnvrt@llu:	
  3852                           
  3853                           ; 8 bytes @ 0x13
  3854  00B3                     	ds	1
  3855  00B4                     ??_updateTemperatures:	
  3856  00B4                     _updateVoltages$2091:	
  3857                           ; 1 bytes @ 0x14
  3858                           
  3859                           
  3860                           ; 4 bytes @ 0x14
  3861  00B4                     	ds	1
  3862  00B5                     updateCurrent@adcVal:	
  3863                           
  3864                           ; 2 bytes @ 0x15
  3865  00B5                     	ds	1
  3866  00B6                     calibrate_BATTSOC@i:	
  3867                           
  3868                           ; 2 bytes @ 0x16
  3869  00B6                     	ds	1
  3870  00B7                     _updateTemperatures$2092:	
  3871                           
  3872                           ; 4 bytes @ 0x17
  3873  00B7                     	ds	1
  3874  00B8                     calibrate_BATTSOC@j:	
  3875  00B8                     updateVoltages@adcVal:	
  3876                           ; 2 bytes @ 0x18
  3877                           
  3878                           
  3879                           ; 4 bytes @ 0x18
  3880  00B8                     	ds	3
  3881  00BB                     ?_vsnprintf:	
  3882  00BB                     vsnprintf@s:	
  3883                           ; 2 bytes @ 0x1B
  3884                           
  3885  00BB                     _updateTemperatures$2093:	
  3886                           ; 2 bytes @ 0x1B
  3887                           
  3888                           
  3889                           ; 4 bytes @ 0x1B
  3890  00BB                     	ds	2
  3891  00BD                     vsnprintf@n:	
  3892                           
  3893                           ; 2 bytes @ 0x1D
  3894  00BD                     	ds	2
  3895  00BF                     vsnprintf@fmt:	
  3896  00BF                     _updateTemperatures$2094:	
  3897                           ; 2 bytes @ 0x1F
  3898                           
  3899                           
  3900                           ; 4 bytes @ 0x1F
  3901  00BF                     	ds	2
  3902  00C1                     vsnprintf@ap:	
  3903                           
  3904                           ; 1 bytes @ 0x21
  3905  00C1                     	ds	1
  3906  00C2                     _vsnprintf$1885:	
  3907                           
  3908                           ; 2 bytes @ 0x22
  3909  00C2                     	ds	1
  3910  00C3                     _updateTemperatures$2095:	
  3911                           
  3912                           ; 4 bytes @ 0x23
  3913  00C3                     	ds	1
  3914  00C4                     vsnprintf@cnt:	
  3915                           
  3916                           ; 2 bytes @ 0x24
  3917  00C4                     	ds	2
  3918  00C6                     vsnprintf@f:	
  3919                           
  3920                           ; 6 bytes @ 0x26
  3921  00C6                     	ds	1
  3922  00C7                     _updateTemperatures$2096:	
  3923                           
  3924                           ; 4 bytes @ 0x27
  3925  00C7                     	ds	4
  3926  00CB                     _updateTemperatures$2097:	
  3927                           
  3928                           ; 4 bytes @ 0x2B
  3929  00CB                     	ds	1
  3930  00CC                     ?_snprintf:	
  3931  00CC                     snprintf@s:	
  3932                           ; 2 bytes @ 0x2C
  3933                           
  3934                           
  3935                           ; 2 bytes @ 0x2C
  3936  00CC                     	ds	2
  3937  00CE                     snprintf@n:	
  3938                           
  3939                           ; 2 bytes @ 0x2E
  3940  00CE                     	ds	1
  3941  00CF                     _updateTemperatures$2098:	
  3942                           
  3943                           ; 4 bytes @ 0x2F
  3944  00CF                     	ds	1
  3945  00D0                     snprintf@fmt:	
  3946                           
  3947                           ; 2 bytes @ 0x30
  3948  00D0                     	ds	3
  3949  00D3                     _updateTemperatures$2099:	
  3950                           
  3951                           ; 4 bytes @ 0x33
  3952  00D3                     	ds	4
  3953  00D7                     _updateTemperatures$2100:	
  3954                           
  3955                           ; 4 bytes @ 0x37
  3956  00D7                     	ds	4
  3957  00DB                     _updateTemperatures$2101:	
  3958                           
  3959                           ; 4 bytes @ 0x3B
  3960  00DB                     	ds	4
  3961  00DF                     _updateTemperatures$2102:	
  3962                           
  3963                           ; 4 bytes @ 0x3F
  3964  00DF                     	ds	4
  3965  00E3                     updateTemperatures@tmp:	
  3966                           
  3967                           ; 4 bytes @ 0x43
  3968  00E3                     	ds	4
  3969  00E7                     updateTemperatures@adcVal:	
  3970                           
  3971                           ; 2 bytes @ 0x47
  3972  00E7                     	ds	2
  3973  00E9                     updateTemperatures@vtsx:	
  3974                           
  3975                           ; 2 bytes @ 0x49
  3976  00E9                     	ds	2
  3977  00EB                     updateTemperatures@rts:	
  3978                           
  3979                           ; 4 bytes @ 0x4B
  3980  00EB                     	ds	4
  3981  00EF                     statemachine@success:	
  3982                           
  3983                           ; 1 bytes @ 0x4F
  3984  00EF                     	ds	1
  3985                           
  3986                           	psect	cstackCOMMON
  3987  0070                     __pcstackCOMMON:	
  3988  0070                     ?_initClock:	
  3989  0070                     ?_init_GPIO:	
  3990                           ; 1 bytes @ 0x0
  3991                           
  3992  0070                     ?_initWDT:	
  3993                           ; 1 bytes @ 0x0
  3994                           
  3995  0070                     ?_init_I2C:	
  3996                           ; 1 bytes @ 0x0
  3997                           
  3998  0070                     ?_init_TMR1:	
  3999                           ; 1 bytes @ 0x0
  4000                           
  4001  0070                     ?_init_RGB:	
  4002                           ; 1 bytes @ 0x0
  4003                           
  4004  0070                     ?_watchdog_timeout_shutdown:	
  4005                           ; 1 bytes @ 0x0
  4006                           
  4007  0070                     ?_statemachine:	
  4008                           ; 1 bytes @ 0x0
  4009                           
  4010  0070                     ?_RGB_AWAIT_AFE_CONN:	
  4011                           ; 1 bytes @ 0x0
  4012                           
  4013  0070                     ?_init_AFE:	
  4014                           ; 1 bytes @ 0x0
  4015                           
  4016  0070                     ?_AFE_UPDATE:	
  4017                           ; 1 bytes @ 0x0
  4018                           
  4019  0070                     ?_printcellParameters:	
  4020                           ; 1 bytes @ 0x0
  4021                           
  4022  0070                     ?_internal_16:	
  4023                           ; 1 bytes @ 0x0
  4024                           
  4025  0070                     ?_updateVoltages:	
  4026                           ; 1 bytes @ 0x0
  4027                           
  4028  0070                     ?_calibrate_BATTSOC:	
  4029                           ; 1 bytes @ 0x0
  4030                           
  4031  0070                     ?_coulomb_counter:	
  4032                           ; 1 bytes @ 0x0
  4033                           
  4034  0070                     ?_updateCurrent:	
  4035                           ; 1 bytes @ 0x0
  4036                           
  4037  0070                     ?_updateTemperatures:	
  4038                           ; 1 bytes @ 0x0
  4039                           
  4040  0070                     ?_putch:	
  4041                           ; 1 bytes @ 0x0
  4042                           
  4043  0070                     ?_myIsr:	
  4044                           ; 1 bytes @ 0x0
  4045                           
  4046  0070                     ??_myIsr:	
  4047                           ; 1 bytes @ 0x0
  4048                           
  4049  0070                     ?_main:	
  4050                           ; 1 bytes @ 0x0
  4051                           
  4052  0070                     ?_EUSART_Write:	
  4053                           ; 1 bytes @ 0x0
  4054                           
  4055  0070                     ?_send_I2C_startBit:	
  4056                           ; 1 bytes @ 0x0
  4057                           
  4058  0070                     ?_send_I2C_stopBit:	
  4059                           ; 1 bytes @ 0x0
  4060                           
  4061  0070                     ?_send_I2C_NACK:	
  4062                           ; 1 bytes @ 0x0
  4063                           
  4064  0070                     putch@c:	
  4065                           ; 1 bytes @ 0x0
  4066                           
  4067                           
  4068                           ; 1 bytes @ 0x0
  4069  0070                     	ds	1
  4070  0071                     ??_initClock:	
  4071  0071                     ??_init_GPIO:	
  4072                           ; 1 bytes @ 0x1
  4073                           
  4074  0071                     ??_initWDT:	
  4075                           ; 1 bytes @ 0x1
  4076                           
  4077  0071                     ??_init_I2C:	
  4078                           ; 1 bytes @ 0x1
  4079                           
  4080  0071                     ??_init_TMR1:	
  4081                           ; 1 bytes @ 0x1
  4082                           
  4083  0071                     ??_init_RGB:	
  4084                           ; 1 bytes @ 0x1
  4085                           
  4086  0071                     ?_RGB_color:	
  4087                           ; 1 bytes @ 0x1
  4088                           
  4089  0071                     ??_internal_16:	
  4090                           ; 1 bytes @ 0x1
  4091                           
  4092  0071                     ?_setShuntResistorValue:	
  4093                           ; 1 bytes @ 0x1
  4094                           
  4095  0071                     ??_putch:	
  4096                           ; 1 bytes @ 0x1
  4097                           
  4098  0071                     ??_EUSART_Write:	
  4099                           ; 1 bytes @ 0x1
  4100                           
  4101  0071                     ?_send_I2C_data:	
  4102                           ; 1 bytes @ 0x1
  4103                           
  4104  0071                     ?_send_I2C_controlByte:	
  4105                           ; 1 bytes @ 0x1
  4106                           
  4107  0071                     ??_send_I2C_startBit:	
  4108                           ; 1 bytes @ 0x1
  4109                           
  4110  0071                     ??_send_I2C_stopBit:	
  4111                           ; 1 bytes @ 0x1
  4112                           
  4113  0071                     ??_send_I2C_NACK:	
  4114                           ; 1 bytes @ 0x1
  4115                           
  4116  0071                     ??___aodiv:	
  4117                           ; 1 bytes @ 0x1
  4118                           
  4119  0071                     ??___aomod:	
  4120                           ; 1 bytes @ 0x1
  4121                           
  4122  0071                     ??___lodiv:	
  4123                           ; 1 bytes @ 0x1
  4124                           
  4125  0071                     ??___lomod:	
  4126                           ; 1 bytes @ 0x1
  4127                           
  4128  0071                     ?_fputc:	
  4129                           ; 1 bytes @ 0x1
  4130                           
  4131  0071                     ?_strlen:	
  4132                           ; 2 bytes @ 0x1
  4133                           
  4134  0071                     ?_isupper:	
  4135                           ; 2 bytes @ 0x1
  4136                           
  4137  0071                     ?_isalpha:	
  4138                           ; 2 bytes @ 0x1
  4139                           
  4140  0071                     ?_isdigit:	
  4141                           ; 2 bytes @ 0x1
  4142                           
  4143  0071                     ?_strncmp:	
  4144                           ; 2 bytes @ 0x1
  4145                           
  4146  0071                     ?__Umul8_16:	
  4147                           ; 2 bytes @ 0x1
  4148                           
  4149  0071                     ?_isspace:	
  4150                           ; 2 bytes @ 0x1
  4151                           
  4152  0071                     ?_islower:	
  4153                           ; 2 bytes @ 0x1
  4154                           
  4155  0071                     ?_read_I2C_data:	
  4156                           ; 2 bytes @ 0x1
  4157                           
  4158  0071                     ?___wmul:	
  4159                           ; 2 bytes @ 0x1
  4160                           
  4161  0071                     ?___lmul:	
  4162                           ; 2 bytes @ 0x1
  4163                           
  4164  0071                     ?___xxtofl:	
  4165                           ; 4 bytes @ 0x1
  4166                           
  4167  0071                     EUSART_Write@txData:	
  4168                           ; 4 bytes @ 0x1
  4169                           
  4170  0071                     __Umul8_16@multiplicand:	
  4171                           ; 1 bytes @ 0x1
  4172                           
  4173  0071                     send_I2C_data@databyte:	
  4174                           ; 1 bytes @ 0x1
  4175                           
  4176  0071                     send_I2C_controlByte@BlockAddress:	
  4177                           ; 2 bytes @ 0x1
  4178                           
  4179  0071                     RGB_color@color:	
  4180                           ; 2 bytes @ 0x1
  4181                           
  4182  0071                     ___wmul@multiplier:	
  4183                           ; 2 bytes @ 0x1
  4184                           
  4185  0071                     isalpha@c:	
  4186                           ; 2 bytes @ 0x1
  4187                           
  4188  0071                     isdigit@c:	
  4189                           ; 2 bytes @ 0x1
  4190                           
  4191  0071                     isspace@c:	
  4192                           ; 2 bytes @ 0x1
  4193                           
  4194  0071                     isupper@c:	
  4195                           ; 2 bytes @ 0x1
  4196                           
  4197  0071                     fputc@c:	
  4198                           ; 2 bytes @ 0x1
  4199                           
  4200  0071                     strlen@s:	
  4201                           ; 2 bytes @ 0x1
  4202                           
  4203  0071                     strncmp@_l:	
  4204                           ; 2 bytes @ 0x1
  4205                           
  4206  0071                     islower@c:	
  4207                           ; 2 bytes @ 0x1
  4208                           
  4209  0071                     setShuntResistorValue@res_mOhm:	
  4210                           ; 2 bytes @ 0x1
  4211                           
  4212  0071                     ___lmul@multiplier:	
  4213                           ; 4 bytes @ 0x1
  4214                           
  4215  0071                     ___xxtofl@val:	
  4216                           ; 4 bytes @ 0x1
  4217                           
  4218                           
  4219                           ; 4 bytes @ 0x1
  4220  0071                     	ds	1
  4221  0072                     ?_EUSART_Write_Text:	
  4222  0072                     ___aodiv@counter:	
  4223                           ; 1 bytes @ 0x2
  4224                           
  4225  0072                     ___aomod@counter:	
  4226                           ; 1 bytes @ 0x2
  4227                           
  4228  0072                     ___lomod@counter:	
  4229                           ; 1 bytes @ 0x2
  4230                           
  4231  0072                     EUSART_Write_Text@text:	
  4232                           ; 1 bytes @ 0x2
  4233                           
  4234  0072                     ___lodiv@quotient:	
  4235                           ; 2 bytes @ 0x2
  4236                           
  4237                           
  4238                           ; 8 bytes @ 0x2
  4239  0072                     	ds	1
  4240  0073                     ??_watchdog_timeout_shutdown:	
  4241  0073                     ??_RGB_AWAIT_AFE_CONN:	
  4242                           ; 1 bytes @ 0x3
  4243                           
  4244  0073                     ??_RGB_color:	
  4245                           ; 1 bytes @ 0x3
  4246                           
  4247  0073                     ??_strlen:	
  4248                           ; 1 bytes @ 0x3
  4249                           
  4250  0073                     ??_isupper:	
  4251                           ; 1 bytes @ 0x3
  4252                           
  4253  0073                     ??_isalpha:	
  4254                           ; 1 bytes @ 0x3
  4255                           
  4256  0073                     ??_isdigit:	
  4257                           ; 1 bytes @ 0x3
  4258                           
  4259  0073                     ??__Umul8_16:	
  4260                           ; 1 bytes @ 0x3
  4261                           
  4262  0073                     ??_isspace:	
  4263                           ; 1 bytes @ 0x3
  4264                           
  4265  0073                     ??_islower:	
  4266                           ; 1 bytes @ 0x3
  4267                           
  4268  0073                     ??_send_I2C_data:	
  4269                           ; 1 bytes @ 0x3
  4270                           
  4271  0073                     ??_read_I2C_data:	
  4272                           ; 1 bytes @ 0x3
  4273                           
  4274  0073                     ___aodiv@sign:	
  4275                           ; 1 bytes @ 0x3
  4276                           
  4277  0073                     ___aomod@sign:	
  4278                           ; 1 bytes @ 0x3
  4279                           
  4280  0073                     send_I2C_controlByte@RW_bit:	
  4281                           ; 1 bytes @ 0x3
  4282                           
  4283  0073                     ___wmul@multiplicand:	
  4284                           ; 2 bytes @ 0x3
  4285                           
  4286  0073                     fputc@fp:	
  4287                           ; 2 bytes @ 0x3
  4288                           
  4289  0073                     strlen@a:	
  4290                           ; 2 bytes @ 0x3
  4291                           
  4292  0073                     strncmp@_r:	
  4293                           ; 2 bytes @ 0x3
  4294                           
  4295                           
  4296                           ; 2 bytes @ 0x3
  4297  0073                     	ds	1
  4298  0074                     ??_EUSART_Write_Text:	
  4299  0074                     ?_abs:	
  4300                           ; 1 bytes @ 0x4
  4301                           
  4302  0074                     abs@a:	
  4303                           ; 2 bytes @ 0x4
  4304                           
  4305  0074                     ___aodiv@quotient:	
  4306                           ; 2 bytes @ 0x4
  4307                           
  4308                           
  4309                           ; 8 bytes @ 0x4
  4310  0074                     	ds	1
  4311  0075                     ??_setShuntResistorValue:	
  4312  0075                     ??_fputc:	
  4313                           ; 1 bytes @ 0x5
  4314                           
  4315  0075                     ??_send_I2C_controlByte:	
  4316                           ; 1 bytes @ 0x5
  4317                           
  4318  0075                     ?_I2C_writeRegister:	
  4319                           ; 1 bytes @ 0x5
  4320                           
  4321  0075                     ??___wmul:	
  4322                           ; 1 bytes @ 0x5
  4323                           
  4324  0075                     ??___xxtofl:	
  4325                           ; 1 bytes @ 0x5
  4326                           
  4327  0075                     ?_readRegister:	
  4328                           ; 1 bytes @ 0x5
  4329                           
  4330  0075                     _isspace$1740:	
  4331                           ; 2 bytes @ 0x5
  4332                           
  4333  0075                     EUSART_Write_Text@i:	
  4334                           ; 1 bytes @ 0x5
  4335                           
  4336  0075                     I2C_writeRegister@slaveAddress:	
  4337                           ; 2 bytes @ 0x5
  4338                           
  4339  0075                     readRegister@slaveAddress:	
  4340                           ; 2 bytes @ 0x5
  4341                           
  4342  0075                     ___wmul@product:	
  4343                           ; 2 bytes @ 0x5
  4344                           
  4345  0075                     strncmp@n:	
  4346                           ; 2 bytes @ 0x5
  4347                           
  4348  0075                     __Umul8_16@product:	
  4349                           ; 2 bytes @ 0x5
  4350                           
  4351  0075                     ___lmul@multiplicand:	
  4352                           ; 2 bytes @ 0x5
  4353                           
  4354                           
  4355                           ; 4 bytes @ 0x5
  4356  0075                     	ds	1
  4357  0076                     ??_abs:	
  4358                           
  4359                           ; 1 bytes @ 0x6
  4360  0076                     	ds	1
  4361  0077                     ??_setTemperatureLimitsint:	
  4362  0077                     ??_strncmp:	
  4363                           ; 1 bytes @ 0x7
  4364                           
  4365  0077                     ?_toupper:	
  4366                           ; 1 bytes @ 0x7
  4367                           
  4368  0077                     ?_atoi:	
  4369                           ; 2 bytes @ 0x7
  4370                           
  4371  0077                     I2C_writeRegister@regAddress:	
  4372                           ; 2 bytes @ 0x7
  4373                           
  4374  0077                     readRegister@regAddress:	
  4375                           ; 2 bytes @ 0x7
  4376                           
  4377  0077                     atoi@s:	
  4378                           ; 2 bytes @ 0x7
  4379                           
  4380  0077                     toupper@c:	
  4381                           ; 2 bytes @ 0x7
  4382                           
  4383  0077                     __Umul8_16@word_mpld:	
  4384                           ; 2 bytes @ 0x7
  4385                           
  4386                           
  4387                           ; 2 bytes @ 0x7
  4388  0077                     	ds	1
  4389  0078                     strncmp@l:	
  4390                           
  4391                           ; 2 bytes @ 0x8
  4392  0078                     	ds	1
  4393  0079                     ??_readRegister:	
  4394  0079                     ??___lmul:	
  4395                           ; 1 bytes @ 0x9
  4396                           
  4397  0079                     ??___aldiv:	
  4398                           ; 1 bytes @ 0x9
  4399                           
  4400  0079                     __Umul8_16@multiplier:	
  4401                           ; 1 bytes @ 0x9
  4402                           
  4403  0079                     I2C_writeRegister@data:	
  4404                           ; 1 bytes @ 0x9
  4405                           
  4406  0079                     readRegister@recievedData:	
  4407                           ; 2 bytes @ 0x9
  4408                           
  4409  0079                     _toupper$1848:	
  4410                           ; 2 bytes @ 0x9
  4411                           
  4412                           
  4413                           ; 2 bytes @ 0x9
  4414  0079                     	ds	1
  4415  007A                     ??_stoa:	
  4416  007A                     ??___flneg:	
  4417                           ; 1 bytes @ 0xA
  4418                           
  4419  007A                     ??___flsub:	
  4420                           ; 1 bytes @ 0xA
  4421                           
  4422  007A                     ?_fputs:	
  4423                           ; 1 bytes @ 0xA
  4424                           
  4425  007A                     ___fltol@sign1:	
  4426                           ; 2 bytes @ 0xA
  4427                           
  4428  007A                     ___lodiv@counter:	
  4429                           ; 1 bytes @ 0xA
  4430                           
  4431  007A                     EUSART_Initialize@x:	
  4432                           ; 1 bytes @ 0xA
  4433                           
  4434  007A                     fputs@fp:	
  4435                           ; 2 bytes @ 0xA
  4436                           
  4437  007A                     strncmp@r:	
  4438                           ; 2 bytes @ 0xA
  4439                           
  4440                           
  4441                           ; 2 bytes @ 0xA
  4442  007A                     	ds	1
  4443  007B                     ??_init_AFE:	
  4444  007B                     ??_I2C_writeRegister:	
  4445                           ; 1 bytes @ 0xB
  4446                           
  4447  007B                     enableDischarging@sys_ctrl2:	
  4448                           ; 1 bytes @ 0xB
  4449                           
  4450  007B                     enableCharging@sys_ctrl2:	
  4451                           ; 1 bytes @ 0xB
  4452                           
  4453  007B                     ___fltol@exp1:	
  4454                           ; 1 bytes @ 0xB
  4455                           
  4456                           
  4457                           ; 1 bytes @ 0xB
  4458  007B                     	ds	1
  4459  007C                     ??_AFE_UPDATE:	
  4460  007C                     ??_printcellParameters:	
  4461                           ; 1 bytes @ 0xC
  4462                           
  4463                           
  4464                           	psect	cstackBANK0
  4465  0020                     __pcstackBANK0:	
  4466                           ; 1 bytes @ 0xC
  4467                           
  4468  0020                     ?_setTemperatureLimitsint:	
  4469  0020                     ?_enableDischarging:	
  4470                           ; 1 bytes @ 0x0
  4471                           
  4472  0020                     ?_enableCharging:	
  4473                           ; 1 bytes @ 0x0
  4474                           
  4475  0020                     ??_fputs:	
  4476                           ; 1 bytes @ 0x0
  4477                           
  4478  0020                     ??_toupper:	
  4479                           ; 1 bytes @ 0x0
  4480                           
  4481  0020                     ??_atoi:	
  4482                           ; 1 bytes @ 0x0
  4483                           
  4484  0020                     ?_beginAFEcommunication:	
  4485                           ; 1 bytes @ 0x0
  4486                           
  4487  0020                     ?_stoa:	
  4488                           ; 2 bytes @ 0x0
  4489                           
  4490  0020                     ?___aodiv:	
  4491                           ; 2 bytes @ 0x0
  4492                           
  4493  0020                     ?___aomod:	
  4494                           ; 8 bytes @ 0x0
  4495                           
  4496  0020                     ?___lodiv:	
  4497                           ; 8 bytes @ 0x0
  4498                           
  4499  0020                     ?___lomod:	
  4500                           ; 8 bytes @ 0x0
  4501                           
  4502  0020                     ___xxtofl@sign:	
  4503                           ; 8 bytes @ 0x0
  4504                           
  4505  0020                     setTemperatureLimitsint@minDischarge_degC:	
  4506                           ; 1 bytes @ 0x0
  4507                           
  4508  0020                     enableDischarging@enable:	
  4509                           ; 2 bytes @ 0x0
  4510                           
  4511  0020                     enableCharging@enable:	
  4512                           ; 2 bytes @ 0x0
  4513                           
  4514  0020                     stoa@fp:	
  4515                           ; 2 bytes @ 0x0
  4516                           
  4517  0020                     ___lmul@product:	
  4518                           ; 2 bytes @ 0x0
  4519                           
  4520  0020                     ___aodiv@divisor:	
  4521                           ; 4 bytes @ 0x0
  4522                           
  4523  0020                     ___aomod@divisor:	
  4524                           ; 8 bytes @ 0x0
  4525                           
  4526  0020                     ___lodiv@divisor:	
  4527                           ; 8 bytes @ 0x0
  4528                           
  4529  0020                     ___lomod@divisor:	
  4530                           ; 8 bytes @ 0x0
  4531                           
  4532                           
  4533                           ; 8 bytes @ 0x0
  4534  0020                     	ds	1
  4535  0021                     ___xxtofl@exp:	
  4536                           
  4537                           ; 1 bytes @ 0x1
  4538  0021                     	ds	1
  4539  0022                     ??_beginAFEcommunication:	
  4540  0022                     ??_enableDischarging:	
  4541                           ; 1 bytes @ 0x2
  4542                           
  4543  0022                     ??_enableCharging:	
  4544                           ; 1 bytes @ 0x2
  4545                           
  4546  0022                     fputs@c:	
  4547                           ; 1 bytes @ 0x2
  4548                           
  4549  0022                     setTemperatureLimitsint@maxDischarge_degC:	
  4550                           ; 1 bytes @ 0x2
  4551                           
  4552  0022                     stoa@s:	
  4553                           ; 2 bytes @ 0x2
  4554                           
  4555  0022                     ___xxtofl@arg:	
  4556                           ; 2 bytes @ 0x2
  4557                           
  4558                           
  4559                           ; 4 bytes @ 0x2
  4560  0022                     	ds	1
  4561  0023                     fputs@i:	
  4562                           
  4563                           ; 2 bytes @ 0x3
  4564  0023                     	ds	1
  4565  0024                     ?___aldiv:	
  4566  0024                     setTemperatureLimitsint@minCharge_degC:	
  4567                           ; 4 bytes @ 0x4
  4568                           
  4569  0024                     atoi@neg:	
  4570                           ; 2 bytes @ 0x4
  4571                           
  4572  0024                     ___aldiv@divisor:	
  4573                           ; 2 bytes @ 0x4
  4574                           
  4575  0024                     stoa@nuls:	
  4576                           ; 4 bytes @ 0x4
  4577                           
  4578                           
  4579                           ; 7 bytes @ 0x4
  4580  0024                     	ds	1
  4581  0025                     fputs@s:	
  4582                           
  4583                           ; 1 bytes @ 0x5
  4584  0025                     	ds	1
  4585  0026                     ?_pad:	
  4586  0026                     ?___flmul:	
  4587                           ; 2 bytes @ 0x6
  4588                           
  4589  0026                     setTemperatureLimitsint@maxCharge_degC:	
  4590                           ; 4 bytes @ 0x6
  4591                           
  4592  0026                     pad@fp:	
  4593                           ; 2 bytes @ 0x6
  4594                           
  4595  0026                     _atoi$1713:	
  4596                           ; 2 bytes @ 0x6
  4597                           
  4598  0026                     ___flmul@b:	
  4599                           ; 2 bytes @ 0x6
  4600                           
  4601                           
  4602                           ; 4 bytes @ 0x6
  4603  0026                     	ds	2
  4604  0028                     pad@buf:	
  4605  0028                     _atoi$1715:	
  4606                           ; 1 bytes @ 0x8
  4607                           
  4608  0028                     ___aldiv@dividend:	
  4609                           ; 2 bytes @ 0x8
  4610                           
  4611  0028                     ___aodiv@dividend:	
  4612                           ; 4 bytes @ 0x8
  4613                           
  4614  0028                     ___aomod@dividend:	
  4615                           ; 8 bytes @ 0x8
  4616                           
  4617  0028                     ___lodiv@dividend:	
  4618                           ; 8 bytes @ 0x8
  4619                           
  4620  0028                     ___lomod@dividend:	
  4621                           ; 8 bytes @ 0x8
  4622                           
  4623                           
  4624                           ; 8 bytes @ 0x8
  4625  0028                     	ds	1
  4626  0029                     pad@p:	
  4627                           
  4628                           ; 2 bytes @ 0x9
  4629  0029                     	ds	1
  4630  002A                     _atoi$1714:	
  4631  002A                     ___flmul@a:	
  4632                           ; 1 bytes @ 0xA
  4633                           
  4634                           
  4635                           ; 4 bytes @ 0xA
  4636  002A                     	ds	1
  4637  002B                     ??_pad:	
  4638  002B                     beginAFEcommunication@commSuccess:	
  4639                           ; 1 bytes @ 0xB
  4640                           
  4641  002B                     stoa@i:	
  4642                           ; 2 bytes @ 0xB
  4643                           
  4644  002B                     atoi@n:	
  4645                           ; 2 bytes @ 0xB
  4646                           
  4647                           
  4648                           ; 2 bytes @ 0xB
  4649  002B                     	ds	1
  4650  002C                     ___aldiv@counter:	
  4651  002C                     pad@i:	
  4652                           ; 1 bytes @ 0xC
  4653                           
  4654                           
  4655                           ; 2 bytes @ 0xC
  4656  002C                     	ds	1
  4657  002D                     ___aldiv@sign:	
  4658  002D                     beginAFEcommunication@i:	
  4659                           ; 1 bytes @ 0xD
  4660                           
  4661  002D                     stoa@w:	
  4662                           ; 2 bytes @ 0xD
  4663                           
  4664                           
  4665                           ; 2 bytes @ 0xD
  4666  002D                     	ds	1
  4667  002E                     ??___flmul:	
  4668  002E                     pad@w:	
  4669                           ; 1 bytes @ 0xE
  4670                           
  4671  002E                     ___aldiv@quotient:	
  4672                           ; 2 bytes @ 0xE
  4673                           
  4674                           
  4675                           ; 4 bytes @ 0xE
  4676  002E                     	ds	1
  4677  002F                     stoa@cp:	
  4678                           
  4679                           ; 2 bytes @ 0xF
  4680  002F                     	ds	1
  4681  0030                     ?_ctoa:	
  4682  0030                     ?_dtoa:	
  4683                           ; 2 bytes @ 0x10
  4684                           
  4685  0030                     ?_otoa:	
  4686                           ; 2 bytes @ 0x10
  4687                           
  4688  0030                     ?_utoa:	
  4689                           ; 2 bytes @ 0x10
  4690                           
  4691  0030                     ?_xtoa:	
  4692                           ; 2 bytes @ 0x10
  4693                           
  4694  0030                     ctoa@fp:	
  4695                           ; 2 bytes @ 0x10
  4696                           
  4697  0030                     dtoa@fp:	
  4698                           ; 2 bytes @ 0x10
  4699                           
  4700  0030                     otoa@fp:	
  4701                           ; 2 bytes @ 0x10
  4702                           
  4703  0030                     utoa@fp:	
  4704                           ; 2 bytes @ 0x10
  4705                           
  4706  0030                     xtoa@fp:	
  4707                           ; 2 bytes @ 0x10
  4708                           
  4709                           
  4710                           ; 2 bytes @ 0x10
  4711  0030                     	ds	1
  4712  0031                     stoa@p:	
  4713                           
  4714                           ; 2 bytes @ 0x11
  4715  0031                     	ds	1
  4716  0032                     ?_EUSART_Initialize:	
  4717  0032                     ?_setCellUndervoltageProtection:	
  4718                           ; 1 bytes @ 0x12
  4719                           
  4720  0032                     ?_setCellOvervoltageProtection:	
  4721                           ; 1 bytes @ 0x12
  4722                           
  4723  0032                     ctoa@c:	
  4724                           ; 1 bytes @ 0x12
  4725                           
  4726  0032                     setCellUndervoltageProtection@voltage_mV:	
  4727                           ; 1 bytes @ 0x12
  4728                           
  4729  0032                     setCellOvervoltageProtection@voltage_mV:	
  4730                           ; 2 bytes @ 0x12
  4731                           
  4732  0032                     EUSART_Initialize@baudrate:	
  4733                           ; 2 bytes @ 0x12
  4734                           
  4735  0032                     dtoa@d:	
  4736                           ; 4 bytes @ 0x12
  4737                           
  4738  0032                     otoa@d:	
  4739                           ; 8 bytes @ 0x12
  4740                           
  4741  0032                     utoa@d:	
  4742                           ; 8 bytes @ 0x12
  4743                           
  4744  0032                     xtoa@d:	
  4745                           ; 8 bytes @ 0x12
  4746                           
  4747                           
  4748                           ; 8 bytes @ 0x12
  4749  0032                     	ds	1
  4750  0033                     ??_ctoa:	
  4751  0033                     ___flmul@sign:	
  4752                           ; 1 bytes @ 0x13
  4753                           
  4754  0033                     stoa@l:	
  4755                           ; 1 bytes @ 0x13
  4756                           
  4757                           
  4758                           ; 2 bytes @ 0x13
  4759  0033                     	ds	1
  4760  0034                     setCellUndervoltageProtection@delay_s:	
  4761  0034                     setCellOvervoltageProtection@delay_s:	
  4762                           ; 2 bytes @ 0x14
  4763                           
  4764  0034                     ctoa@w:	
  4765                           ; 2 bytes @ 0x14
  4766                           
  4767  0034                     ___flmul@grs:	
  4768                           ; 2 bytes @ 0x14
  4769                           
  4770                           
  4771                           ; 4 bytes @ 0x14
  4772  0034                     	ds	2
  4773  0036                     ??_EUSART_Initialize:	
  4774  0036                     ??_setCellUndervoltageProtection:	
  4775                           ; 1 bytes @ 0x16
  4776                           
  4777  0036                     ??_setCellOvervoltageProtection:	
  4778                           ; 1 bytes @ 0x16
  4779                           
  4780                           
  4781                           ; 1 bytes @ 0x16
  4782  0036                     	ds	2
  4783  0038                     ___flmul@aexp:	
  4784                           
  4785                           ; 1 bytes @ 0x18
  4786  0038                     	ds	1
  4787  0039                     ___flmul@bexp:	
  4788                           
  4789                           ; 1 bytes @ 0x19
  4790  0039                     	ds	1
  4791  003A                     ??_dtoa:	
  4792  003A                     ??_otoa:	
  4793                           ; 1 bytes @ 0x1A
  4794                           
  4795  003A                     ??_utoa:	
  4796                           ; 1 bytes @ 0x1A
  4797                           
  4798  003A                     xtoa@x:	
  4799                           ; 1 bytes @ 0x1A
  4800                           
  4801  003A                     ___flmul@prod:	
  4802                           ; 1 bytes @ 0x1A
  4803                           
  4804                           
  4805                           ; 4 bytes @ 0x1A
  4806  003A                     	ds	1
  4807  003B                     ??_xtoa:	
  4808  003B                     utoa@p:	
  4809                           ; 1 bytes @ 0x1B
  4810                           
  4811                           
  4812                           ; 2 bytes @ 0x1B
  4813  003B                     	ds	2
  4814  003D                     _dtoa$1262:	
  4815  003D                     utoa@w:	
  4816                           ; 2 bytes @ 0x1D
  4817                           
  4818                           
  4819                           ; 2 bytes @ 0x1D
  4820  003D                     	ds	1
  4821  003E                     ___flmul@temp:	
  4822                           
  4823                           ; 2 bytes @ 0x1E
  4824  003E                     	ds	1
  4825  003F                     dtoa@p:	
  4826  003F                     utoa@n:	
  4827                           ; 2 bytes @ 0x1F
  4828                           
  4829                           
  4830                           ; 8 bytes @ 0x1F
  4831  003F                     	ds	1
  4832  0040                     ?___fldiv:	
  4833  0040                     ___fldiv@a:	
  4834                           ; 4 bytes @ 0x20
  4835                           
  4836                           
  4837                           ; 4 bytes @ 0x20
  4838  0040                     	ds	1
  4839  0041                     dtoa@w:	
  4840                           
  4841                           ; 2 bytes @ 0x21
  4842  0041                     	ds	1
  4843  0042                     otoa@p:	
  4844                           
  4845                           ; 2 bytes @ 0x22
  4846  0042                     	ds	1
  4847  0043                     dtoa@s:	
  4848  0043                     _xtoa$1298:	
  4849                           ; 2 bytes @ 0x23
  4850                           
  4851                           
  4852                           ; 2 bytes @ 0x23
  4853  0043                     	ds	1
  4854  0044                     setCellUndervoltageProtection@uv_trip:	
  4855  0044                     setCellOvervoltageProtection@ov_trip:	
  4856                           ; 1 bytes @ 0x24
  4857                           
  4858  0044                     otoa@t:	
  4859                           ; 1 bytes @ 0x24
  4860                           
  4861  0044                     ___fldiv@b:	
  4862                           ; 2 bytes @ 0x24
  4863                           
  4864                           
  4865                           ; 4 bytes @ 0x24
  4866  0044                     	ds	1
  4867  0045                     setCellUndervoltageProtection@i:	
  4868  0045                     setCellOvervoltageProtection@i:	
  4869                           ; 2 bytes @ 0x25
  4870                           
  4871  0045                     _xtoa$1299:	
  4872                           ; 2 bytes @ 0x25
  4873                           
  4874  0045                     dtoa@n:	
  4875                           ; 2 bytes @ 0x25
  4876                           
  4877                           
  4878                           ; 8 bytes @ 0x25
  4879  0045                     	ds	1
  4880  0046                     otoa@w:	
  4881                           
  4882                           ; 2 bytes @ 0x26
  4883  0046                     	ds	1
  4884  0047                     utoa@i:	
  4885  0047                     xtoa@p:	
  4886                           ; 2 bytes @ 0x27
  4887                           
  4888                           
  4889                           ; 2 bytes @ 0x27
  4890  0047                     	ds	1
  4891  0048                     ??___fldiv:	
  4892  0048                     otoa@n:	
  4893                           ; 1 bytes @ 0x28
  4894                           
  4895                           
  4896                           ; 8 bytes @ 0x28
  4897  0048                     	ds	1
  4898  0049                     xtoa@w:	
  4899                           
  4900                           ; 2 bytes @ 0x29
  4901  0049                     	ds	2
  4902  004B                     xtoa@n:	
  4903                           
  4904                           ; 8 bytes @ 0x2B
  4905  004B                     	ds	2
  4906  004D                     dtoa@i:	
  4907  004D                     ___fldiv@rem:	
  4908                           ; 2 bytes @ 0x2D
  4909                           
  4910                           
  4911                           ; 4 bytes @ 0x2D
  4912  004D                     	ds	3
  4913  0050                     otoa@i:	
  4914                           
  4915                           ; 2 bytes @ 0x30
  4916  0050                     	ds	1
  4917  0051                     ___fldiv@sign:	
  4918                           
  4919                           ; 1 bytes @ 0x31
  4920  0051                     	ds	1
  4921  0052                     ___fldiv@new_exp:	
  4922                           
  4923                           ; 2 bytes @ 0x32
  4924  0052                     	ds	1
  4925  0053                     xtoa@i:	
  4926                           
  4927                           ; 2 bytes @ 0x33
  4928  0053                     	ds	1
  4929  0054                     ___fldiv@grs:	
  4930                           
  4931                           ; 4 bytes @ 0x34
  4932  0054                     	ds	1
  4933  0055                     xtoa@c:	
  4934                           
  4935                           ; 2 bytes @ 0x35
  4936  0055                     	ds	2
  4937  0057                     ?_vfpfcnvrt:	
  4938  0057                     vfpfcnvrt@fp:	
  4939                           ; 2 bytes @ 0x37
  4940                           
  4941                           
  4942                           ; 2 bytes @ 0x37
  4943  0057                     	ds	1
  4944  0058                     ___fldiv@bexp:	
  4945                           
  4946                           ; 1 bytes @ 0x38
  4947  0058                     	ds	1
  4948  0059                     vfpfcnvrt@fmt:	
  4949  0059                     ___fldiv@aexp:	
  4950                           ; 1 bytes @ 0x39
  4951                           
  4952                           
  4953                           ; 1 bytes @ 0x39
  4954  0059                     	ds	1
  4955  005A                     ?___flge:	
  4956  005A                     ?___flneg:	
  4957                           ; 1 bit 
  4958                           
  4959  005A                     ?___fladd:	
  4960                           ; 4 bytes @ 0x3A
  4961                           
  4962  005A                     vfpfcnvrt@ap:	
  4963                           ; 4 bytes @ 0x3A
  4964                           
  4965  005A                     ___flge@ff1:	
  4966                           ; 1 bytes @ 0x3A
  4967                           
  4968  005A                     ___flneg@f1:	
  4969                           ; 4 bytes @ 0x3A
  4970                           
  4971  005A                     ___fladd@b:	
  4972                           ; 4 bytes @ 0x3A
  4973                           
  4974                           
  4975                           ; 4 bytes @ 0x3A
  4976  005A                     	ds	1
  4977  005B                     ??_vfpfcnvrt:	
  4978                           
  4979                           ; 1 bytes @ 0x3B
  4980  005B                     	ds	3
  4981  005E                     ___flge@ff2:	
  4982  005E                     ___fladd@a:	
  4983                           ; 4 bytes @ 0x3E
  4984                           
  4985                           
  4986                           ; 4 bytes @ 0x3E
  4987  005E                     	ds	3
  4988  0061                     ?_vfprintf:	
  4989  0061                     vfprintf@fp:	
  4990                           ; 2 bytes @ 0x41
  4991                           
  4992                           
  4993                           ; 2 bytes @ 0x41
  4994  0061                     	ds	1
  4995  0062                     ??___flge:	
  4996  0062                     ??___fladd:	
  4997                           ; 1 bytes @ 0x42
  4998                           
  4999                           
  5000                           ; 1 bytes @ 0x42
  5001  0062                     	ds	1
  5002  0063                     vfprintf@fmt:	
  5003                           
  5004                           ; 2 bytes @ 0x43
  5005  0063                     	ds	2
  5006  0065                     vfprintf@ap:	
  5007                           
  5008                           ; 1 bytes @ 0x45
  5009  0065                     	ds	1
  5010  0066                     ?_setShortCircuitProtection:	
  5011  0066                     ?_setOverCurrentDischargeProtection:	
  5012                           ; 1 bytes @ 0x46
  5013                           
  5014  0066                     ??_vfprintf:	
  5015                           ; 1 bytes @ 0x46
  5016                           
  5017  0066                     setShortCircuitProtection@current_mA:	
  5018                           ; 1 bytes @ 0x46
  5019                           
  5020  0066                     setOverCurrentDischargeProtection@current_mA:	
  5021                           ; 4 bytes @ 0x46
  5022                           
  5023                           
  5024                           ; 4 bytes @ 0x46
  5025  0066                     	ds	2
  5026  0068                     vfprintf@cfmt:	
  5027                           
  5028                           ; 2 bytes @ 0x48
  5029  0068                     	ds	2
  5030  006A                     ??_vsnprintf:	
  5031  006A                     ___fladd@signs:	
  5032                           ; 1 bytes @ 0x4A
  5033                           
  5034  006A                     setShortCircuitProtection@delay_us:	
  5035                           ; 1 bytes @ 0x4A
  5036                           
  5037  006A                     setOverCurrentDischargeProtection@delay_ms:	
  5038                           ; 2 bytes @ 0x4A
  5039                           
  5040                           
  5041                           ; 2 bytes @ 0x4A
  5042  006A                     	ds	1
  5043  006B                     ___fladd@aexp:	
  5044                           
  5045                           ; 1 bytes @ 0x4B
  5046  006B                     	ds	1
  5047  006C                     ??_snprintf:	
  5048  006C                     ??_setShortCircuitProtection:	
  5049                           ; 1 bytes @ 0x4C
  5050                           
  5051  006C                     ??_setOverCurrentDischargeProtection:	
  5052                           ; 1 bytes @ 0x4C
  5053                           
  5054  006C                     ___fladd@bexp:	
  5055                           ; 1 bytes @ 0x4C
  5056                           
  5057                           
  5058                           ; 1 bytes @ 0x4C
  5059  006C                     	ds	1
  5060  006D                     ___fladd@grs:	
  5061                           
  5062                           ; 1 bytes @ 0x4D
  5063  006D                     	ds	1
  5064  006E                     ??_coulomb_counter:	
  5065                           
  5066                           ; 1 bytes @ 0x4E
  5067  006E                     	ds	1
  5068  006F                     snprintf@ap:	
  5069                           
  5070                           ; 1 bytes @ 0x4F
  5071  006F                     	ds	1
  5072                           
  5073                           	psect	maintext
  5074  3438                     __pmaintext:	
  5075 ;;
  5076 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5077 ;;
  5078 ;; *************** function _main *****************
  5079 ;; Defined at:
  5080 ;;		line 72 in file "main.c"
  5081 ;; Parameters:    Size  Location     Type
  5082 ;;		None
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;		None
  5085 ;; Return value:  Size  Location     Type
  5086 ;;                  1    wreg      void 
  5087 ;; Registers used:
  5088 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5089 ;; Tracked objects:
  5090 ;;		On entry : B1F/0
  5091 ;;		On exit  : 0/0
  5092 ;;		Unchanged: 0/0
  5093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5096 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5097 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5098 ;;Total ram usage:        2 bytes
  5099 ;; Hardware stack levels required when called:   12
  5100 ;; This function calls:
  5101 ;;		_EUSART_Initialize
  5102 ;;		_initClock
  5103 ;;		_initWDT
  5104 ;;		_init_GPIO
  5105 ;;		_init_I2C
  5106 ;;		_init_RGB
  5107 ;;		_init_TMR1
  5108 ;;		_statemachine
  5109 ;;		_watchdog_timeout_shutdown
  5110 ;; This function is called by:
  5111 ;;		Startup code after reset
  5112 ;; This function uses a non-reentrant model
  5113 ;;
  5114                           
  5115                           
  5116                           ;psect for function _main
  5117  3438                     _main:	
  5118                           
  5119                           ;main.c: 75:     initClock();
  5120                           
  5121                           ;incstack = 0
  5122                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5123  3438  31B1  2144  31B4   	fcall	_initClock
  5124                           
  5125                           ;main.c: 76:     init_GPIO();
  5126  343B  3188  2008  31B4   	fcall	_init_GPIO
  5127                           
  5128                           ;main.c: 77:     initWDT();
  5129  343E  31A0  2000  31B4   	fcall	_initWDT
  5130                           
  5131                           ;main.c: 78:     init_I2C();
  5132  3441  31B1  21B3  31B4   	fcall	_init_I2C
  5133                           
  5134                           ;main.c: 79:     EUSART_Initialize(9600);
  5135  3444  3000               	movlw	0
  5136  3445  0020               	movlb	0	; select bank0
  5137  3446  00B5               	movwf	EUSART_Initialize@baudrate+3
  5138  3447  3000               	movlw	0
  5139  3448  00B4               	movwf	EUSART_Initialize@baudrate+2
  5140  3449  3025               	movlw	37
  5141  344A  00B3               	movwf	EUSART_Initialize@baudrate+1
  5142  344B  3080               	movlw	128
  5143  344C  00B2               	movwf	EUSART_Initialize@baudrate
  5144  344D  31AA  22A3  31B4   	fcall	_EUSART_Initialize
  5145                           
  5146                           ;main.c: 80:     init_TMR1();
  5147  3450  31B1  219C  31B4   	fcall	_init_TMR1
  5148                           
  5149                           ;main.c: 81:     init_RGB();
  5150  3453  31B1  2147  31B4   	fcall	_init_RGB
  5151                           
  5152                           ;main.c: 84:     watchdog_timeout_shutdown();
  5153  3456  31B2  2296  31B4   	fcall	_watchdog_timeout_shutdown
  5154  3459                     l7671:	
  5155                           
  5156                           ;main.c: 88:         statemachine();
  5157  3459  31B6  2690  31B4   	fcall	_statemachine
  5158                           
  5159                           ;main.c: 90:         _delay((unsigned long)((1000)*(16000000/4000.0)));
  5160  345C  3015               	movlw	21
  5161  345D  0022               	movlb	2	; select bank2
  5162  345E  00E5               	movwf	(??_main^(0+256)+1)
  5163  345F  304B               	movlw	75
  5164  3460  00E4               	movwf	??_main^(0+256)
  5165  3461  30BE               	movlw	190
  5166  3462                     u9487:	
  5167  3462  0B89               	decfsz	9,f
  5168  3463  2C62               	goto	u9487
  5169  3464  0BE4               	decfsz	??_main^(0+256),f
  5170  3465  2C62               	goto	u9487
  5171  3466  0BE5               	decfsz	(??_main^(0+256)+1),f
  5172  3467  2C62               	goto	u9487
  5173  3468  0000               	nop
  5174  3469  2C59               	goto	l7671
  5175  346A                     __end_of_main:	
  5176                           
  5177                           	psect	text1
  5178  3296                     __ptext1:	
  5179 ;; *************** function _watchdog_timeout_shutdown *****************
  5180 ;; Defined at:
  5181 ;;		line 3 in file "algorithms.c"
  5182 ;; Parameters:    Size  Location     Type
  5183 ;;		None
  5184 ;; Auto vars:     Size  Location     Type
  5185 ;;		None
  5186 ;; Return value:  Size  Location     Type
  5187 ;;                  1    wreg      void 
  5188 ;; Registers used:
  5189 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5190 ;; Tracked objects:
  5191 ;;		On entry : 0/0
  5192 ;;		On exit  : 0/0
  5193 ;;		Unchanged: 0/0
  5194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5197 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5198 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5199 ;;Total ram usage:        2 bytes
  5200 ;; Hardware stack levels used:    1
  5201 ;; Hardware stack levels required when called:    2
  5202 ;; This function calls:
  5203 ;;		_RGB_color
  5204 ;; This function is called by:
  5205 ;;		_main
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           
  5210                           ;psect for function _watchdog_timeout_shutdown
  5211  3296                     _watchdog_timeout_shutdown:	
  5212                           
  5213                           ;algorithms.c: 5:     if (!STATUSbits.nTO) {
  5214                           
  5215                           ;incstack = 0
  5216                           ; Regs used in _watchdog_timeout_shutdown: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5217  3296  0020               	movlb	0	; select bank0
  5218  3297  1A03               	btfsc	3,4	;volatile
  5219  3298  0008               	return
  5220                           
  5221                           ;algorithms.c: 6:         RGB_color(0);
  5222  3299  3000               	movlw	0
  5223  329A  00F1               	movwf	RGB_color@color
  5224  329B  00F2               	movwf	RGB_color@color+1
  5225  329C  31B3  230B  31B2   	fcall	_RGB_color
  5226                           
  5227                           ;algorithms.c: 7:          _delay((unsigned long)((2000)*(16000000/4000.0)));
  5228  329F  3029               	movlw	41
  5229  32A0  00F4               	movwf	??_watchdog_timeout_shutdown+1
  5230  32A1  3096               	movlw	150
  5231  32A2  00F3               	movwf	??_watchdog_timeout_shutdown
  5232  32A3  307F               	movlw	127
  5233  32A4                     u9497:	
  5234  32A4  0B89               	decfsz	9,f
  5235  32A5  2AA4               	goto	u9497
  5236  32A6  0BF3               	decfsz	??_watchdog_timeout_shutdown,f
  5237  32A7  2AA4               	goto	u9497
  5238  32A8  0BF4               	decfsz	??_watchdog_timeout_shutdown+1,f
  5239  32A9  2AA4               	goto	u9497
  5240  32AA  0000               	nop
  5241                           
  5242                           ;algorithms.c: 8:          currState = 3;
  5243  32AB  3003               	movlw	3
  5244  32AC  00F3               	movwf	??_watchdog_timeout_shutdown
  5245  32AD  0873               	movf	??_watchdog_timeout_shutdown,w
  5246  32AE  0023               	movlb	3	; select bank3
  5247  32AF  00E7               	movwf	_currState^(0+384)
  5248  32B0  0008               	return
  5249  32B1                     __end_of_watchdog_timeout_shutdown:	
  5250                           
  5251                           	psect	text2
  5252  3690                     __ptext2:	
  5253 ;; *************** function _statemachine *****************
  5254 ;; Defined at:
  5255 ;;		line 96 in file "main.c"
  5256 ;; Parameters:    Size  Location     Type
  5257 ;;		None
  5258 ;; Auto vars:     Size  Location     Type
  5259 ;;  success         1   79[BANK1 ] unsigned char 
  5260 ;; Return value:  Size  Location     Type
  5261 ;;                  1    wreg      void 
  5262 ;; Registers used:
  5263 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5264 ;; Tracked objects:
  5265 ;;		On entry : 0/0
  5266 ;;		On exit  : 0/0
  5267 ;;		Unchanged: 0/0
  5268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5270 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5271 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5272 ;;      Totals:         0       0       1       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5273 ;;Total ram usage:        3 bytes
  5274 ;; Hardware stack levels used:    1
  5275 ;; Hardware stack levels required when called:   11
  5276 ;; This function calls:
  5277 ;;		_AFE_UPDATE
  5278 ;;		_EUSART_Write_Text
  5279 ;;		_RGB_AWAIT_AFE_CONN
  5280 ;;		_RGB_color
  5281 ;;		_beginAFEcommunication
  5282 ;;		_init_AFE
  5283 ;;		_printcellParameters
  5284 ;;		_snprintf
  5285 ;; This function is called by:
  5286 ;;		_main
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           
  5291                           ;psect for function _statemachine
  5292  3690                     _statemachine:	
  5293                           
  5294                           ;main.c: 98:     switch (currState) {
  5295                           
  5296                           ;incstack = 0
  5297                           ; Regs used in _statemachine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5298  3690  2EEF               	goto	l7647
  5299  3691                     l7615:	
  5300                           
  5301                           ;main.c: 101:             if (tmr1_flag) {
  5302  3691  0023               	movlb	3	; select bank3
  5303  3692  0863               	movf	_tmr1_flag^(0+384),w	;volatile
  5304  3693  1903               	btfsc	3,2
  5305  3694  0008               	return
  5306                           
  5307                           ;main.c: 102:                 tmr1_flag = 0;
  5308  3695  01E3               	clrf	_tmr1_flag^(0+384)	;volatile
  5309                           
  5310                           ;main.c: 103:                 RGB_AWAIT_AFE_CONN();
  5311  3696  31B3  232C  31B6   	fcall	_RGB_AWAIT_AFE_CONN
  5312                           
  5313                           ;main.c: 104:                 uint8_t success = beginAFEcommunication();
  5314  3699  31AB  234C  31B6   	fcall	_beginAFEcommunication
  5315  369C  0020               	movlb	0	; select bank0
  5316  369D  0820               	movf	?_beginAFEcommunication,w
  5317  369E  0022               	movlb	2	; select bank2
  5318  369F  00E2               	movwf	??_statemachine^(0+256)
  5319  36A0  0862               	movf	??_statemachine^(0+256),w
  5320  36A1  0021               	movlb	1	; select bank1
  5321  36A2  00EF               	movwf	statemachine@success^(0+128)
  5322                           
  5323                           ;main.c: 109:                 if (success) {
  5324  36A3  086F               	movf	statemachine@success^(0+128),w
  5325  36A4  1903               	btfsc	3,2
  5326  36A5  0008               	return
  5327                           
  5328                           ;main.c: 110:                     T1CONbits.TMR1ON = 0;
  5329  36A6  0020               	movlb	0	; select bank0
  5330  36A7  1018               	bcf	24,0	;volatile
  5331                           
  5332                           ;main.c: 111:                     PIE1bits.TMR1IE = 0;
  5333  36A8  0021               	movlb	1	; select bank1
  5334  36A9  1011               	bcf	17,0	;volatile
  5335                           
  5336                           ;main.c: 112:                     RGB_color(0);
  5337  36AA  3000               	movlw	0
  5338  36AB  00F1               	movwf	RGB_color@color
  5339  36AC  00F2               	movwf	RGB_color@color+1
  5340  36AD  31B3  230B         	fcall	_RGB_color
  5341                           
  5342                           ;main.c: 113:                     tmr1_flag = 0;
  5343  36AF  0023               	movlb	3	; select bank3
  5344  36B0  01E3               	clrf	_tmr1_flag^(0+384)	;volatile
  5345                           
  5346                           ;main.c: 126:                     currState = 1;
  5347  36B1  01E7               	clrf	_currState^(0+384)
  5348  36B2  0AE7               	incf	_currState^(0+384),f
  5349  36B3  0008               	return
  5350  36B4                     l7633:	
  5351                           
  5352                           ;main.c: 135:             init_AFE();
  5353  36B4  31A0  2006  31B6   	fcall	_init_AFE
  5354                           
  5355                           ;main.c: 154:             RGB_color(1);
  5356  36B7  3001               	movlw	1
  5357  36B8  00F1               	movwf	RGB_color@color
  5358  36B9  3000               	movlw	0
  5359  36BA  00F2               	movwf	RGB_color@color+1
  5360  36BB  31B3  230B         	fcall	_RGB_color
  5361                           
  5362                           ;main.c: 155:             currState = 2;
  5363  36BD  3002               	movlw	2
  5364  36BE  0022               	movlb	2	; select bank2
  5365  36BF  00E2               	movwf	??_statemachine^(0+256)
  5366  36C0  0862               	movf	??_statemachine^(0+256),w
  5367  36C1  0023               	movlb	3	; select bank3
  5368  36C2  00E7               	movwf	_currState^(0+384)
  5369                           
  5370                           ;main.c: 156:             break;
  5371  36C3  0008               	return
  5372  36C4                     l7637:	
  5373                           
  5374                           ;main.c: 160:             AFE_UPDATE();
  5375  36C4  31B3  2374  31B6   	fcall	_AFE_UPDATE
  5376  36C7  0064               	clrwdt	;# 
  5377                           
  5378                           ;main.c: 164:             printcellParameters();
  5379  36C8  3185  25FE  31B6   	fcall	_printcellParameters
  5380                           
  5381                           ;main.c: 166:             _delay((unsigned long)((5000)*(16000000/4000.0)));
  5382  36CB  3066               	movlw	102
  5383  36CC  0022               	movlb	2	; select bank2
  5384  36CD  00E3               	movwf	(??_statemachine^(0+256)+1)
  5385  36CE  3076               	movlw	118
  5386  36CF  00E2               	movwf	??_statemachine^(0+256)
  5387  36D0  30C1               	movlw	193
  5388  36D1                     u9507:	
  5389  36D1  0B89               	decfsz	9,f
  5390  36D2  2ED1               	goto	u9507
  5391  36D3  0BE2               	decfsz	??_statemachine^(0+256),f
  5392  36D4  2ED1               	goto	u9507
  5393  36D5  0BE3               	decfsz	(??_statemachine^(0+256)+1),f
  5394  36D6  2ED1               	goto	u9507
  5395                           
  5396                           ;main.c: 168:             break;
  5397  36D7  0008               	return
  5398  36D8                     l7641:	
  5399                           
  5400                           ;main.c: 172:              snprintf(messageBuffer, 127, "WATCHDOG NOT KICKED: AFE comms 
      +                          error \n\r");
  5401  36D8  3071               	movlw	113
  5402  36D9  0021               	movlb	1	; select bank1
  5403  36DA  00CC               	movwf	snprintf@s^(0+128)
  5404  36DB  3027               	movlw	39
  5405  36DC  00CD               	movwf	(snprintf@s^(0+128)+1)
  5406  36DD  307F               	movlw	127
  5407  36DE  00CE               	movwf	snprintf@n^(0+128)
  5408  36DF  3000               	movlw	0
  5409  36E0  00CF               	movwf	(snprintf@n^(0+128)+1)
  5410  36E1  3029               	movlw	low (STR_1| (0+32768))
  5411  36E2  00D0               	movwf	snprintf@fmt^(0+128)
  5412  36E3  30B9               	movlw	high (STR_1| (0+32768))
  5413  36E4  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5414  36E5  31B2  227B  31B6   	fcall	_snprintf
  5415                           
  5416                           ;main.c: 173:              EUSART_Write_Text(messageBuffer);
  5417  36E8  3071               	movlw	113
  5418  36E9  00F2               	movwf	EUSART_Write_Text@text
  5419  36EA  3027               	movlw	39
  5420  36EB  00F3               	movwf	EUSART_Write_Text@text+1
  5421  36EC  31B2  2246         	fcall	_EUSART_Write_Text
  5422                           
  5423                           ;main.c: 174:             break;
  5424  36EE  0008               	return
  5425  36EF                     l7647:	
  5426  36EF  0023               	movlb	3	; select bank3
  5427  36F0  0867               	movf	_currState^(0+384),w
  5428  36F1  0022               	movlb	2	; select bank2
  5429  36F2  00E2               	movwf	??_statemachine^(0+256)
  5430  36F3  01E3               	clrf	(??_statemachine^(0+256)+1)
  5431                           
  5432                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5433                           ; Switch size 1, requested type "simple"
  5434                           ; Number of cases is 1, Range of values is 0 to 0
  5435                           ; switch strategies available:
  5436                           ; Name         Instructions Cycles
  5437                           ; simple_byte            4     3 (average)
  5438                           ; direct_byte            8     6 (fixed)
  5439                           ; jumptable            260     6 (fixed)
  5440                           ;	Chosen strategy is simple_byte
  5441  36F4  0863               	movf	(??_statemachine+1)^(0+256),w
  5442  36F5  3A00               	xorlw	0	; case 0
  5443  36F6  1903               	skipnz
  5444  36F7  2EF9               	goto	l7831
  5445  36F8  2F07               	goto	l174
  5446  36F9                     l7831:	
  5447                           
  5448                           ; Switch size 1, requested type "simple"
  5449                           ; Number of cases is 4, Range of values is 0 to 3
  5450                           ; switch strategies available:
  5451                           ; Name         Instructions Cycles
  5452                           ; simple_byte           13     7 (average)
  5453                           ; direct_byte           14     6 (fixed)
  5454                           ; jumptable            260     6 (fixed)
  5455                           ;	Chosen strategy is simple_byte
  5456  36F9  0862               	movf	??_statemachine^(0+256),w
  5457  36FA  3A00               	xorlw	0	; case 0
  5458  36FB  1903               	skipnz
  5459  36FC  2E91               	goto	l7615
  5460  36FD  3A01               	xorlw	1	; case 1
  5461  36FE  1903               	skipnz
  5462  36FF  2EB4               	goto	l7633
  5463  3700  3A03               	xorlw	3	; case 2
  5464  3701  1903               	skipnz
  5465  3702  2EC4               	goto	l7637
  5466  3703  3A01               	xorlw	1	; case 3
  5467  3704  1903               	skipnz
  5468  3705  2ED8               	goto	l7641
  5469  3706  2F07               	goto	l174
  5470  3707                     l174:	
  5471  3707  0008               	return
  5472  3708                     __end_of_statemachine:	
  5473                           
  5474                           	psect	text3
  5475  05FE                     __ptext3:	
  5476 ;; *************** function _printcellParameters *****************
  5477 ;; Defined at:
  5478 ;;		line 323 in file "BQ76920.c"
  5479 ;; Parameters:    Size  Location     Type
  5480 ;;		None
  5481 ;; Auto vars:     Size  Location     Type
  5482 ;;		None
  5483 ;; Return value:  Size  Location     Type
  5484 ;;                  1    wreg      void 
  5485 ;; Registers used:
  5486 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5487 ;; Tracked objects:
  5488 ;;		On entry : 0/0
  5489 ;;		On exit  : 0/0
  5490 ;;		Unchanged: 0/0
  5491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5496 ;;Total ram usage:        0 bytes
  5497 ;; Hardware stack levels used:    1
  5498 ;; Hardware stack levels required when called:   10
  5499 ;; This function calls:
  5500 ;;		_EUSART_Write_Text
  5501 ;;		_readRegister
  5502 ;;		_snprintf
  5503 ;; This function is called by:
  5504 ;;		_statemachine
  5505 ;; This function uses a non-reentrant model
  5506 ;;
  5507                           
  5508                           
  5509                           ;psect for function _printcellParameters
  5510  05FE                     _printcellParameters:	
  5511                           
  5512                           ;BQ76920.c: 324:     snprintf(messageBuffer, 127, "Cell batt: %i ,%d, %d , %d, %d, %d Ba
      +                          tt Curr: %i Temp: %i CTRL2: %i \n\r", batVoltage,cellVoltages[0],cellVoltages[1],cellVol
      +                          tages[2],cellVoltages[3],cellVoltages[4], batCurrent, temperatureThermistor,readRegister
      +                          (0x18, 0x05));
  5513                           
  5514                           ;incstack = 0
  5515                           ; Regs used in _printcellParameters: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5516  05FE  3071               	movlw	113
  5517  05FF  0021               	movlb	1	; select bank1
  5518  0600  00CC               	movwf	snprintf@s^(0+128)
  5519  0601  3027               	movlw	39
  5520  0602  00CD               	movwf	(snprintf@s^(0+128)+1)
  5521  0603  307F               	movlw	127
  5522  0604  00CE               	movwf	snprintf@n^(0+128)
  5523  0605  3000               	movlw	0
  5524  0606  00CF               	movwf	(snprintf@n^(0+128)+1)
  5525  0607  30BA               	movlw	low (STR_2| (0+32768))
  5526  0608  00D0               	movwf	snprintf@fmt^(0+128)
  5527  0609  30B8               	movlw	high (STR_2| (0+32768))
  5528  060A  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5529  060B  0023               	movlb	3	; select bank3
  5530  060C  0851               	movf	(_batVoltage+3)^(0+384),w
  5531  060D  0021               	movlb	1	; select bank1
  5532  060E  00D5               	movwf	((?_snprintf+3)^(0+128)+6)
  5533  060F  0023               	movlb	3	; select bank3
  5534  0610  0850               	movf	(_batVoltage+2)^(0+384),w
  5535  0611  0021               	movlb	1	; select bank1
  5536  0612  00D4               	movwf	((?_snprintf+2)^(0+128)+6)
  5537  0613  0023               	movlb	3	; select bank3
  5538  0614  084F               	movf	(_batVoltage+1)^(0+384),w
  5539  0615  0021               	movlb	1	; select bank1
  5540  0616  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5541  0617  0023               	movlb	3	; select bank3
  5542  0618  084E               	movf	_batVoltage^(0+384),w
  5543  0619  0021               	movlb	1	; select bank1
  5544  061A  00D2               	movwf	(?_snprintf^(0+128)+6)
  5545  061B  0023               	movlb	3	; select bank3
  5546  061C  0835               	movf	(_cellVoltages+1)^(0+384),w
  5547  061D  0021               	movlb	1	; select bank1
  5548  061E  00D7               	movwf	((?_snprintf+1)^(0+128)+10)
  5549  061F  0023               	movlb	3	; select bank3
  5550  0620  0834               	movf	_cellVoltages^(0+384),w
  5551  0621  0021               	movlb	1	; select bank1
  5552  0622  00D6               	movwf	(?_snprintf^(0+128)+10)
  5553  0623  0023               	movlb	3	; select bank3
  5554  0624  0837               	movf	((_cellVoltages+1)^(0+384)+2),w
  5555  0625  0021               	movlb	1	; select bank1
  5556  0626  00D9               	movwf	((?_snprintf+1)^(0+128)+12)
  5557  0627  0023               	movlb	3	; select bank3
  5558  0628  0836               	movf	(_cellVoltages^(0+384)+2),w
  5559  0629  0021               	movlb	1	; select bank1
  5560  062A  00D8               	movwf	(?_snprintf^(0+128)+12)
  5561  062B  0023               	movlb	3	; select bank3
  5562  062C  0839               	movf	((_cellVoltages+1)^(0+384)+4),w
  5563  062D  0021               	movlb	1	; select bank1
  5564  062E  00DB               	movwf	((?_snprintf+1)^(0+128)+14)
  5565  062F  0023               	movlb	3	; select bank3
  5566  0630  0838               	movf	(_cellVoltages^(0+384)+4),w
  5567  0631  0021               	movlb	1	; select bank1
  5568  0632  00DA               	movwf	(?_snprintf^(0+128)+14)
  5569  0633  0023               	movlb	3	; select bank3
  5570  0634  083B               	movf	((_cellVoltages+1)^(0+384)+6),w
  5571  0635  0021               	movlb	1	; select bank1
  5572  0636  00DD               	movwf	((?_snprintf+1)^(0+128)+16)
  5573  0637  0023               	movlb	3	; select bank3
  5574  0638  083A               	movf	(_cellVoltages^(0+384)+6),w
  5575  0639  0021               	movlb	1	; select bank1
  5576  063A  00DC               	movwf	(?_snprintf^(0+128)+16)
  5577  063B  0023               	movlb	3	; select bank3
  5578  063C  083D               	movf	((_cellVoltages+1)^(0+384)+8),w
  5579  063D  0021               	movlb	1	; select bank1
  5580  063E  00DF               	movwf	((?_snprintf+1)^(0+128)+18)
  5581  063F  0023               	movlb	3	; select bank3
  5582  0640  083C               	movf	(_cellVoltages^(0+384)+8),w
  5583  0641  0021               	movlb	1	; select bank1
  5584  0642  00DE               	movwf	(?_snprintf^(0+128)+18)
  5585  0643  0023               	movlb	3	; select bank3
  5586  0644  084D               	movf	(_batCurrent+3)^(0+384),w
  5587  0645  0021               	movlb	1	; select bank1
  5588  0646  00E3               	movwf	((?_snprintf+3)^(0+128)+20)
  5589  0647  0023               	movlb	3	; select bank3
  5590  0648  084C               	movf	(_batCurrent+2)^(0+384),w
  5591  0649  0021               	movlb	1	; select bank1
  5592  064A  00E2               	movwf	((?_snprintf+2)^(0+128)+20)
  5593  064B  0023               	movlb	3	; select bank3
  5594  064C  084B               	movf	(_batCurrent+1)^(0+384),w
  5595  064D  0021               	movlb	1	; select bank1
  5596  064E  00E1               	movwf	((?_snprintf+1)^(0+128)+20)
  5597  064F  0023               	movlb	3	; select bank3
  5598  0650  084A               	movf	_batCurrent^(0+384),w
  5599  0651  0021               	movlb	1	; select bank1
  5600  0652  00E0               	movwf	(?_snprintf^(0+128)+20)
  5601  0653  0023               	movlb	3	; select bank3
  5602  0654  0849               	movf	(_temperatureThermistor+3)^(0+384),w
  5603  0655  0021               	movlb	1	; select bank1
  5604  0656  00E7               	movwf	((?_snprintf+3)^(0+128)+24)
  5605  0657  0023               	movlb	3	; select bank3
  5606  0658  0848               	movf	(_temperatureThermistor+2)^(0+384),w
  5607  0659  0021               	movlb	1	; select bank1
  5608  065A  00E6               	movwf	((?_snprintf+2)^(0+128)+24)
  5609  065B  0023               	movlb	3	; select bank3
  5610  065C  0847               	movf	(_temperatureThermistor+1)^(0+384),w
  5611  065D  0021               	movlb	1	; select bank1
  5612  065E  00E5               	movwf	((?_snprintf+1)^(0+128)+24)
  5613  065F  0023               	movlb	3	; select bank3
  5614  0660  0846               	movf	_temperatureThermistor^(0+384),w
  5615  0661  0021               	movlb	1	; select bank1
  5616  0662  00E4               	movwf	(?_snprintf^(0+128)+24)
  5617  0663  3018               	movlw	24
  5618  0664  00F5               	movwf	readRegister@slaveAddress
  5619  0665  3000               	movlw	0
  5620  0666  00F6               	movwf	readRegister@slaveAddress+1
  5621  0667  3005               	movlw	5
  5622  0668  00F7               	movwf	readRegister@regAddress
  5623  0669  3000               	movlw	0
  5624  066A  00F8               	movwf	readRegister@regAddress+1
  5625  066B  31B4  249F  3185   	fcall	_readRegister
  5626  066E  0876               	movf	?_readRegister+1,w
  5627  066F  0021               	movlb	1	; select bank1
  5628  0670  00E9               	movwf	((?_snprintf+1)^(0+128)+28)
  5629  0671  0875               	movf	?_readRegister,w
  5630  0672  00E8               	movwf	(?_snprintf^(0+128)+28)
  5631  0673  31B2  227B  3185   	fcall	_snprintf
  5632                           
  5633                           ;BQ76920.c: 325:     EUSART_Write_Text(messageBuffer);
  5634  0676  3071               	movlw	113
  5635  0677  00F2               	movwf	EUSART_Write_Text@text
  5636  0678  3027               	movlw	39
  5637  0679  00F3               	movwf	EUSART_Write_Text@text+1
  5638  067A  31B2  2246  3185   	fcall	_EUSART_Write_Text
  5639                           
  5640                           ;BQ76920.c: 326:     snprintf(messageBuffer, 127, "0x05 SYS_CTRL2: %i \n\r", readRegiste
      +                          r(0x18, 0x05));
  5641  067D  3071               	movlw	113
  5642  067E  0021               	movlb	1	; select bank1
  5643  067F  00CC               	movwf	snprintf@s^(0+128)
  5644  0680  3027               	movlw	39
  5645  0681  00CD               	movwf	(snprintf@s^(0+128)+1)
  5646  0682  307F               	movlw	127
  5647  0683  00CE               	movwf	snprintf@n^(0+128)
  5648  0684  3000               	movlw	0
  5649  0685  00CF               	movwf	(snprintf@n^(0+128)+1)
  5650  0686  30D2               	movlw	low (STR_3| (0+32768))
  5651  0687  00D0               	movwf	snprintf@fmt^(0+128)
  5652  0688  30B9               	movlw	high (STR_3| (0+32768))
  5653  0689  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5654  068A  3018               	movlw	24
  5655  068B  00F5               	movwf	readRegister@slaveAddress
  5656  068C  3000               	movlw	0
  5657  068D  00F6               	movwf	readRegister@slaveAddress+1
  5658  068E  3005               	movlw	5
  5659  068F  00F7               	movwf	readRegister@regAddress
  5660  0690  3000               	movlw	0
  5661  0691  00F8               	movwf	readRegister@regAddress+1
  5662  0692  31B4  249F  3185   	fcall	_readRegister
  5663  0695  0876               	movf	?_readRegister+1,w
  5664  0696  0021               	movlb	1	; select bank1
  5665  0697  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5666  0698  0875               	movf	?_readRegister,w
  5667  0699  00D2               	movwf	(?_snprintf^(0+128)+6)
  5668  069A  31B2  227B  3185   	fcall	_snprintf
  5669                           
  5670                           ;BQ76920.c: 327:     EUSART_Write_Text(messageBuffer);
  5671  069D  3071               	movlw	113
  5672  069E  00F2               	movwf	EUSART_Write_Text@text
  5673  069F  3027               	movlw	39
  5674  06A0  00F3               	movwf	EUSART_Write_Text@text+1
  5675  06A1  31B2  2246  3185   	fcall	_EUSART_Write_Text
  5676                           
  5677                           ;BQ76920.c: 328:     snprintf(messageBuffer, 127, "0x00 SYS_STAT: %i \n\r", readRegister
      +                          (0x18, 0x00));
  5678  06A4  3071               	movlw	113
  5679  06A5  0021               	movlb	1	; select bank1
  5680  06A6  00CC               	movwf	snprintf@s^(0+128)
  5681  06A7  3027               	movlw	39
  5682  06A8  00CD               	movwf	(snprintf@s^(0+128)+1)
  5683  06A9  307F               	movlw	127
  5684  06AA  00CE               	movwf	snprintf@n^(0+128)
  5685  06AB  3000               	movlw	0
  5686  06AC  00CF               	movwf	(snprintf@n^(0+128)+1)
  5687  06AD  303C               	movlw	low (STR_4| (0+32768))
  5688  06AE  00D0               	movwf	snprintf@fmt^(0+128)
  5689  06AF  30BA               	movlw	high (STR_4| (0+32768))
  5690  06B0  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5691  06B1  3018               	movlw	24
  5692  06B2  00F5               	movwf	readRegister@slaveAddress
  5693  06B3  3000               	movlw	0
  5694  06B4  00F6               	movwf	readRegister@slaveAddress+1
  5695  06B5  3000               	movlw	0
  5696  06B6  00F7               	movwf	readRegister@regAddress
  5697  06B7  00F8               	movwf	readRegister@regAddress+1
  5698  06B8  31B4  249F  3185   	fcall	_readRegister
  5699  06BB  0876               	movf	?_readRegister+1,w
  5700  06BC  0021               	movlb	1	; select bank1
  5701  06BD  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5702  06BE  0875               	movf	?_readRegister,w
  5703  06BF  00D2               	movwf	(?_snprintf^(0+128)+6)
  5704  06C0  31B2  227B  3185   	fcall	_snprintf
  5705                           
  5706                           ;BQ76920.c: 329:     EUSART_Write_Text(messageBuffer);
  5707  06C3  3071               	movlw	113
  5708  06C4  00F2               	movwf	EUSART_Write_Text@text
  5709  06C5  3027               	movlw	39
  5710  06C6  00F3               	movwf	EUSART_Write_Text@text+1
  5711  06C7  31B2  2246  3185   	fcall	_EUSART_Write_Text
  5712                           
  5713                           ;BQ76920.c: 330:     snprintf(messageBuffer, 127, "0x06 PROTECT1: %i \n\r", readRegister
      +                          (0x18, 0x06));
  5714  06CA  3071               	movlw	113
  5715  06CB  0021               	movlb	1	; select bank1
  5716  06CC  00CC               	movwf	snprintf@s^(0+128)
  5717  06CD  3027               	movlw	39
  5718  06CE  00CD               	movwf	(snprintf@s^(0+128)+1)
  5719  06CF  307F               	movlw	127
  5720  06D0  00CE               	movwf	snprintf@n^(0+128)
  5721  06D1  3000               	movlw	0
  5722  06D2  00CF               	movwf	(snprintf@n^(0+128)+1)
  5723  06D3  30FD               	movlw	low (STR_5| (0+32768))
  5724  06D4  00D0               	movwf	snprintf@fmt^(0+128)
  5725  06D5  30B9               	movlw	high (STR_5| (0+32768))
  5726  06D6  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5727  06D7  3018               	movlw	24
  5728  06D8  00F5               	movwf	readRegister@slaveAddress
  5729  06D9  3000               	movlw	0
  5730  06DA  00F6               	movwf	readRegister@slaveAddress+1
  5731  06DB  3006               	movlw	6
  5732  06DC  00F7               	movwf	readRegister@regAddress
  5733  06DD  3000               	movlw	0
  5734  06DE  00F8               	movwf	readRegister@regAddress+1
  5735  06DF  31B4  249F  3185   	fcall	_readRegister
  5736  06E2  0876               	movf	?_readRegister+1,w
  5737  06E3  0021               	movlb	1	; select bank1
  5738  06E4  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5739  06E5  0875               	movf	?_readRegister,w
  5740  06E6  00D2               	movwf	(?_snprintf^(0+128)+6)
  5741  06E7  31B2  227B  3185   	fcall	_snprintf
  5742                           
  5743                           ;BQ76920.c: 331:     EUSART_Write_Text(messageBuffer);
  5744  06EA  3071               	movlw	113
  5745  06EB  00F2               	movwf	EUSART_Write_Text@text
  5746  06EC  3027               	movlw	39
  5747  06ED  00F3               	movwf	EUSART_Write_Text@text+1
  5748  06EE  31B2  2246  3185   	fcall	_EUSART_Write_Text
  5749                           
  5750                           ;BQ76920.c: 332:     snprintf(messageBuffer, 127, "0x07 PROTECT2: %i \n\r", readRegister
      +                          (0x18, 0x07));
  5751  06F1  3071               	movlw	113
  5752  06F2  0021               	movlb	1	; select bank1
  5753  06F3  00CC               	movwf	snprintf@s^(0+128)
  5754  06F4  3027               	movlw	39
  5755  06F5  00CD               	movwf	(snprintf@s^(0+128)+1)
  5756  06F6  307F               	movlw	127
  5757  06F7  00CE               	movwf	snprintf@n^(0+128)
  5758  06F8  3000               	movlw	0
  5759  06F9  00CF               	movwf	(snprintf@n^(0+128)+1)
  5760  06FA  3012               	movlw	low (STR_6| (0+32768))
  5761  06FB  00D0               	movwf	snprintf@fmt^(0+128)
  5762  06FC  30BA               	movlw	high (STR_6| (0+32768))
  5763  06FD  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5764  06FE  3018               	movlw	24
  5765  06FF  00F5               	movwf	readRegister@slaveAddress
  5766  0700  3000               	movlw	0
  5767  0701  00F6               	movwf	readRegister@slaveAddress+1
  5768  0702  3007               	movlw	7
  5769  0703  00F7               	movwf	readRegister@regAddress
  5770  0704  3000               	movlw	0
  5771  0705  00F8               	movwf	readRegister@regAddress+1
  5772  0706  31B4  249F  3185   	fcall	_readRegister
  5773  0709  0876               	movf	?_readRegister+1,w
  5774  070A  0021               	movlb	1	; select bank1
  5775  070B  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5776  070C  0875               	movf	?_readRegister,w
  5777  070D  00D2               	movwf	(?_snprintf^(0+128)+6)
  5778  070E  31B2  227B  3185   	fcall	_snprintf
  5779                           
  5780                           ;BQ76920.c: 333:     EUSART_Write_Text(messageBuffer);
  5781  0711  3071               	movlw	113
  5782  0712  00F2               	movwf	EUSART_Write_Text@text
  5783  0713  3027               	movlw	39
  5784  0714  00F3               	movwf	EUSART_Write_Text@text+1
  5785  0715  31B2  2246  3185   	fcall	_EUSART_Write_Text
  5786                           
  5787                           ;BQ76920.c: 334:     snprintf(messageBuffer, 127, "Current: %d \n\r", batCurrent);
  5788  0718  3071               	movlw	113
  5789  0719  0021               	movlb	1	; select bank1
  5790  071A  00CC               	movwf	snprintf@s^(0+128)
  5791  071B  3027               	movlw	39
  5792  071C  00CD               	movwf	(snprintf@s^(0+128)+1)
  5793  071D  307F               	movlw	127
  5794  071E  00CE               	movwf	snprintf@n^(0+128)
  5795  071F  3000               	movlw	0
  5796  0720  00CF               	movwf	(snprintf@n^(0+128)+1)
  5797  0721  30D0               	movlw	low (STR_7| (0+32768))
  5798  0722  00D0               	movwf	snprintf@fmt^(0+128)
  5799  0723  30BA               	movlw	high (STR_7| (0+32768))
  5800  0724  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5801  0725  0023               	movlb	3	; select bank3
  5802  0726  084D               	movf	(_batCurrent+3)^(0+384),w
  5803  0727  0021               	movlb	1	; select bank1
  5804  0728  00D5               	movwf	((?_snprintf+3)^(0+128)+6)
  5805  0729  0023               	movlb	3	; select bank3
  5806  072A  084C               	movf	(_batCurrent+2)^(0+384),w
  5807  072B  0021               	movlb	1	; select bank1
  5808  072C  00D4               	movwf	((?_snprintf+2)^(0+128)+6)
  5809  072D  0023               	movlb	3	; select bank3
  5810  072E  084B               	movf	(_batCurrent+1)^(0+384),w
  5811  072F  0021               	movlb	1	; select bank1
  5812  0730  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5813  0731  0023               	movlb	3	; select bank3
  5814  0732  084A               	movf	_batCurrent^(0+384),w
  5815  0733  0021               	movlb	1	; select bank1
  5816  0734  00D2               	movwf	(?_snprintf^(0+128)+6)
  5817  0735  31B2  227B  3185   	fcall	_snprintf
  5818                           
  5819                           ;BQ76920.c: 335:     EUSART_Write_Text(messageBuffer);
  5820  0738  3071               	movlw	113
  5821  0739  00F2               	movwf	EUSART_Write_Text@text
  5822  073A  3027               	movlw	39
  5823  073B  00F3               	movwf	EUSART_Write_Text@text+1
  5824  073C  31B2  2246  3185   	fcall	_EUSART_Write_Text
  5825                           
  5826                           ;BQ76920.c: 336:     snprintf(messageBuffer, 127, "cell predicted SOC: %d %d %d %d %d\n\
      +                          r", cellSOC[0], cellSOC[1], cellSOC[2], cellSOC[3], cellSOC[4]);
  5827  073F  3071               	movlw	113
  5828  0740  0021               	movlb	1	; select bank1
  5829  0741  00CC               	movwf	snprintf@s^(0+128)
  5830  0742  3027               	movlw	39
  5831  0743  00CD               	movwf	(snprintf@s^(0+128)+1)
  5832  0744  307F               	movlw	127
  5833  0745  00CE               	movwf	snprintf@n^(0+128)
  5834  0746  3000               	movlw	0
  5835  0747  00CF               	movwf	(snprintf@n^(0+128)+1)
  5836  0748  3077               	movlw	low (STR_8| (0+32768))
  5837  0749  00D0               	movwf	snprintf@fmt^(0+128)
  5838  074A  30B9               	movlw	high (STR_8| (0+32768))
  5839  074B  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5840  074C  0023               	movlb	3	; select bank3
  5841  074D  082B               	movf	(_cellSOC+1)^(0+384),w
  5842  074E  0021               	movlb	1	; select bank1
  5843  074F  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5844  0750  0023               	movlb	3	; select bank3
  5845  0751  082A               	movf	_cellSOC^(0+384),w
  5846  0752  0021               	movlb	1	; select bank1
  5847  0753  00D2               	movwf	(?_snprintf^(0+128)+6)
  5848  0754  0023               	movlb	3	; select bank3
  5849  0755  082D               	movf	((_cellSOC+1)^(0+384)+2),w
  5850  0756  0021               	movlb	1	; select bank1
  5851  0757  00D5               	movwf	((?_snprintf+1)^(0+128)+8)
  5852  0758  0023               	movlb	3	; select bank3
  5853  0759  082C               	movf	(_cellSOC^(0+384)+2),w
  5854  075A  0021               	movlb	1	; select bank1
  5855  075B  00D4               	movwf	(?_snprintf^(0+128)+8)
  5856  075C  0023               	movlb	3	; select bank3
  5857  075D  082F               	movf	((_cellSOC+1)^(0+384)+4),w
  5858  075E  0021               	movlb	1	; select bank1
  5859  075F  00D7               	movwf	((?_snprintf+1)^(0+128)+10)
  5860  0760  0023               	movlb	3	; select bank3
  5861  0761  082E               	movf	(_cellSOC^(0+384)+4),w
  5862  0762  0021               	movlb	1	; select bank1
  5863  0763  00D6               	movwf	(?_snprintf^(0+128)+10)
  5864  0764  0023               	movlb	3	; select bank3
  5865  0765  0831               	movf	((_cellSOC+1)^(0+384)+6),w
  5866  0766  0021               	movlb	1	; select bank1
  5867  0767  00D9               	movwf	((?_snprintf+1)^(0+128)+12)
  5868  0768  0023               	movlb	3	; select bank3
  5869  0769  0830               	movf	(_cellSOC^(0+384)+6),w
  5870  076A  0021               	movlb	1	; select bank1
  5871  076B  00D8               	movwf	(?_snprintf^(0+128)+12)
  5872  076C  0023               	movlb	3	; select bank3
  5873  076D  0833               	movf	((_cellSOC+1)^(0+384)+8),w
  5874  076E  0021               	movlb	1	; select bank1
  5875  076F  00DB               	movwf	((?_snprintf+1)^(0+128)+14)
  5876  0770  0023               	movlb	3	; select bank3
  5877  0771  0832               	movf	(_cellSOC^(0+384)+8),w
  5878  0772  0021               	movlb	1	; select bank1
  5879  0773  00DA               	movwf	(?_snprintf^(0+128)+14)
  5880  0774  31B2  227B  3185   	fcall	_snprintf
  5881                           
  5882                           ;BQ76920.c: 337:     EUSART_Write_Text(messageBuffer);
  5883  0777  3071               	movlw	113
  5884  0778  00F2               	movwf	EUSART_Write_Text@text
  5885  0779  3027               	movlw	39
  5886  077A  00F3               	movwf	EUSART_Write_Text@text+1
  5887  077B  31B2  2246  3185   	fcall	_EUSART_Write_Text
  5888                           
  5889                           ;BQ76920.c: 338:     snprintf(messageBuffer, 127, "cell predicted Charge: %d %d %d %d %d
      +                          \n\r", cellCharge[0], cellCharge[1], cellCharge[2], cellCharge[3], cellCharge[4]);
  5890  077E  3071               	movlw	113
  5891  077F  0021               	movlb	1	; select bank1
  5892  0780  00CC               	movwf	snprintf@s^(0+128)
  5893  0781  3027               	movlw	39
  5894  0782  00CD               	movwf	(snprintf@s^(0+128)+1)
  5895  0783  307F               	movlw	127
  5896  0784  00CE               	movwf	snprintf@n^(0+128)
  5897  0785  3000               	movlw	0
  5898  0786  00CF               	movwf	(snprintf@n^(0+128)+1)
  5899  0787  3001               	movlw	low (STR_9| (0+32768))
  5900  0788  00D0               	movwf	snprintf@fmt^(0+128)
  5901  0789  30B9               	movlw	high (STR_9| (0+32768))
  5902  078A  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5903  078B  0023               	movlb	3	; select bank3
  5904  078C  0821               	movf	(_cellCharge+1)^(0+384),w
  5905  078D  0021               	movlb	1	; select bank1
  5906  078E  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5907  078F  0023               	movlb	3	; select bank3
  5908  0790  0820               	movf	_cellCharge^(0+384),w
  5909  0791  0021               	movlb	1	; select bank1
  5910  0792  00D2               	movwf	(?_snprintf^(0+128)+6)
  5911  0793  0023               	movlb	3	; select bank3
  5912  0794  0823               	movf	((_cellCharge+1)^(0+384)+2),w
  5913  0795  0021               	movlb	1	; select bank1
  5914  0796  00D5               	movwf	((?_snprintf+1)^(0+128)+8)
  5915  0797  0023               	movlb	3	; select bank3
  5916  0798  0822               	movf	(_cellCharge^(0+384)+2),w
  5917  0799  0021               	movlb	1	; select bank1
  5918  079A  00D4               	movwf	(?_snprintf^(0+128)+8)
  5919  079B  0023               	movlb	3	; select bank3
  5920  079C  0825               	movf	((_cellCharge+1)^(0+384)+4),w
  5921  079D  0021               	movlb	1	; select bank1
  5922  079E  00D7               	movwf	((?_snprintf+1)^(0+128)+10)
  5923  079F  0023               	movlb	3	; select bank3
  5924  07A0  0824               	movf	(_cellCharge^(0+384)+4),w
  5925  07A1  0021               	movlb	1	; select bank1
  5926  07A2  00D6               	movwf	(?_snprintf^(0+128)+10)
  5927  07A3  0023               	movlb	3	; select bank3
  5928  07A4  0827               	movf	((_cellCharge+1)^(0+384)+6),w
  5929  07A5  0021               	movlb	1	; select bank1
  5930  07A6  00D9               	movwf	((?_snprintf+1)^(0+128)+12)
  5931  07A7  0023               	movlb	3	; select bank3
  5932  07A8  0826               	movf	(_cellCharge^(0+384)+6),w
  5933  07A9  0021               	movlb	1	; select bank1
  5934  07AA  00D8               	movwf	(?_snprintf^(0+128)+12)
  5935  07AB  0023               	movlb	3	; select bank3
  5936  07AC  0829               	movf	((_cellCharge+1)^(0+384)+8),w
  5937  07AD  0021               	movlb	1	; select bank1
  5938  07AE  00DB               	movwf	((?_snprintf+1)^(0+128)+14)
  5939  07AF  0023               	movlb	3	; select bank3
  5940  07B0  0828               	movf	(_cellCharge^(0+384)+8),w
  5941  07B1  0021               	movlb	1	; select bank1
  5942  07B2  00DA               	movwf	(?_snprintf^(0+128)+14)
  5943  07B3  31B2  227B  3185   	fcall	_snprintf
  5944                           
  5945                           ;BQ76920.c: 339:     EUSART_Write_Text(messageBuffer);
  5946  07B6  3071               	movlw	113
  5947  07B7  00F2               	movwf	EUSART_Write_Text@text
  5948  07B8  3027               	movlw	39
  5949  07B9  00F3               	movwf	EUSART_Write_Text@text+1
  5950  07BA  31B2  2246  3185   	fcall	_EUSART_Write_Text
  5951                           
  5952                           ;BQ76920.c: 340:     snprintf(messageBuffer, 127, "Temp: %d e-2\n\r", temperatureThermis
      +                          tor);
  5953  07BD  3071               	movlw	113
  5954  07BE  0021               	movlb	1	; select bank1
  5955  07BF  00CC               	movwf	snprintf@s^(0+128)
  5956  07C0  3027               	movlw	39
  5957  07C1  00CD               	movwf	(snprintf@s^(0+128)+1)
  5958  07C2  307F               	movlw	127
  5959  07C3  00CE               	movwf	snprintf@n^(0+128)
  5960  07C4  3000               	movlw	0
  5961  07C5  00CF               	movwf	(snprintf@n^(0+128)+1)
  5962  07C6  30DF               	movlw	low (STR_10| (0+32768))
  5963  07C7  00D0               	movwf	snprintf@fmt^(0+128)
  5964  07C8  30BA               	movlw	high (STR_10| (0+32768))
  5965  07C9  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5966  07CA  0023               	movlb	3	; select bank3
  5967  07CB  0849               	movf	(_temperatureThermistor+3)^(0+384),w
  5968  07CC  0021               	movlb	1	; select bank1
  5969  07CD  00D5               	movwf	((?_snprintf+3)^(0+128)+6)
  5970  07CE  0023               	movlb	3	; select bank3
  5971  07CF  0848               	movf	(_temperatureThermistor+2)^(0+384),w
  5972  07D0  0021               	movlb	1	; select bank1
  5973  07D1  00D4               	movwf	((?_snprintf+2)^(0+128)+6)
  5974  07D2  0023               	movlb	3	; select bank3
  5975  07D3  0847               	movf	(_temperatureThermistor+1)^(0+384),w
  5976  07D4  0021               	movlb	1	; select bank1
  5977  07D5  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5978  07D6  0023               	movlb	3	; select bank3
  5979  07D7  0846               	movf	_temperatureThermistor^(0+384),w
  5980  07D8  0021               	movlb	1	; select bank1
  5981  07D9  00D2               	movwf	(?_snprintf^(0+128)+6)
  5982  07DA  31B2  227B  3185   	fcall	_snprintf
  5983                           
  5984                           ;BQ76920.c: 341:     EUSART_Write_Text(messageBuffer);
  5985  07DD  3071               	movlw	113
  5986  07DE  00F2               	movwf	EUSART_Write_Text@text
  5987  07DF  3027               	movlw	39
  5988  07E0  00F3               	movwf	EUSART_Write_Text@text+1
  5989  07E1  31B2  2246         	fcall	_EUSART_Write_Text
  5990  07E3  0008               	return
  5991  07E4                     __end_of_printcellParameters:	
  5992                           
  5993                           	psect	text4
  5994  327B                     __ptext4:	
  5995 ;; *************** function _snprintf *****************
  5996 ;; Defined at:
  5997 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\snprintf.c"
  5998 ;; Parameters:    Size  Location     Type
  5999 ;;  s               2   44[BANK1 ] PTR unsigned char 
  6000 ;;		 -> messageBuffer(127), 
  6001 ;;  n               2   46[BANK1 ] unsigned int 
  6002 ;;  fmt             2   48[BANK1 ] PTR const unsigned char 
  6003 ;;		 -> STR_24(18), STR_23(18), STR_22(19), STR_21(20), 
  6004 ;;		 -> STR_20(20), STR_19(21), STR_18(21), STR_17(21), 
  6005 ;;		 -> STR_16(22), STR_15(22), STR_14(21), STR_13(21), 
  6006 ;;		 -> STR_10(15), STR_9(40), STR_8(37), STR_7(15), 
  6007 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_3(22), 
  6008 ;;		 -> STR_2(71), STR_1(40), 
  6009 ;; Auto vars:     Size  Location     Type
  6010 ;;  ret             2    0        int 
  6011 ;;  ap              1   79[BANK0 ] PTR void [1]
  6012 ;;		 -> ?_snprintf(2), 
  6013 ;; Return value:  Size  Location     Type
  6014 ;;                  2   44[BANK1 ] int 
  6015 ;; Registers used:
  6016 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6017 ;; Tracked objects:
  6018 ;;		On entry : 0/0
  6019 ;;		On exit  : 0/0
  6020 ;;		Unchanged: 0/0
  6021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6022 ;;      Params:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6023 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6024 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6025 ;;      Totals:         0       4      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6026 ;;Total ram usage:       34 bytes
  6027 ;; Hardware stack levels used:    1
  6028 ;; Hardware stack levels required when called:    9
  6029 ;; This function calls:
  6030 ;;		_vsnprintf
  6031 ;; This function is called by:
  6032 ;;		_statemachine
  6033 ;;		_printcellParameters
  6034 ;;		_printotAFERegisters
  6035 ;; This function uses a non-reentrant model
  6036 ;;
  6037                           
  6038                           
  6039                           ;psect for function _snprintf
  6040  327B                     _snprintf:	
  6041                           
  6042                           ;incstack = 0
  6043                           ; Regs used in _snprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6044  327B  30D2               	movlw	(low ((?_snprintf| 0+6)))& (0+255)
  6045  327C  0020               	movlb	0	; select bank0
  6046  327D  00EC               	movwf	??_snprintf
  6047  327E  086C               	movf	??_snprintf,w
  6048  327F  00EF               	movwf	snprintf@ap
  6049  3280  0021               	movlb	1	; select bank1
  6050  3281  084D               	movf	(snprintf@s+1)^(0+128),w
  6051  3282  00BC               	movwf	(vsnprintf@s+1)^(0+128)
  6052  3283  084C               	movf	snprintf@s^(0+128),w
  6053  3284  00BB               	movwf	vsnprintf@s^(0+128)
  6054  3285  084F               	movf	(snprintf@n+1)^(0+128),w
  6055  3286  00BE               	movwf	(vsnprintf@n+1)^(0+128)
  6056  3287  084E               	movf	snprintf@n^(0+128),w
  6057  3288  00BD               	movwf	vsnprintf@n^(0+128)
  6058  3289  0851               	movf	(snprintf@fmt+1)^(0+128),w
  6059  328A  00C0               	movwf	(vsnprintf@fmt+1)^(0+128)
  6060  328B  0850               	movf	snprintf@fmt^(0+128),w
  6061  328C  00BF               	movwf	vsnprintf@fmt^(0+128)
  6062  328D  306F               	movlw	(low (snprintf@ap| 0))& (0+255)
  6063  328E  0020               	movlb	0	; select bank0
  6064  328F  00EC               	movwf	??_snprintf
  6065  3290  086C               	movf	??_snprintf,w
  6066  3291  0021               	movlb	1	; select bank1
  6067  3292  00C1               	movwf	vsnprintf@ap^(0+128)
  6068  3293  31A8  206D         	fcall	_vsnprintf
  6069  3295  0008               	return
  6070  3296                     __end_of_snprintf:	
  6071                           
  6072                           	psect	text5
  6073  286D                     __ptext5:	
  6074 ;; *************** function _vsnprintf *****************
  6075 ;; Defined at:
  6076 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_vsnprintf.c"
  6077 ;; Parameters:    Size  Location     Type
  6078 ;;  s               2   27[BANK1 ] PTR unsigned char 
  6079 ;;		 -> messageBuffer(127), 
  6080 ;;  n               2   29[BANK1 ] unsigned int 
  6081 ;;  fmt             2   31[BANK1 ] PTR const unsigned char 
  6082 ;;		 -> STR_24(18), STR_23(18), STR_22(19), STR_21(20), 
  6083 ;;		 -> STR_20(20), STR_19(21), STR_18(21), STR_17(21), 
  6084 ;;		 -> STR_16(22), STR_15(22), STR_14(21), STR_13(21), 
  6085 ;;		 -> STR_10(15), STR_9(40), STR_8(37), STR_7(15), 
  6086 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_3(22), 
  6087 ;;		 -> STR_2(71), STR_1(40), 
  6088 ;;  ap              1   33[BANK1 ] PTR PTR void 
  6089 ;;		 -> snprintf@ap(1), 
  6090 ;; Auto vars:     Size  Location     Type
  6091 ;;  f               6   38[BANK1 ] struct _IO_FILE
  6092 ;;  cnt             2   36[BANK1 ] int 
  6093 ;; Return value:  Size  Location     Type
  6094 ;;                  2   27[BANK1 ] int 
  6095 ;; Registers used:
  6096 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6097 ;; Tracked objects:
  6098 ;;		On entry : 0/0
  6099 ;;		On exit  : 0/0
  6100 ;;		Unchanged: 0/0
  6101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6102 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6103 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6104 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6105 ;;      Totals:         0       2      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6106 ;;Total ram usage:       19 bytes
  6107 ;; Hardware stack levels used:    1
  6108 ;; Hardware stack levels required when called:    8
  6109 ;; This function calls:
  6110 ;;		_vfprintf
  6111 ;; This function is called by:
  6112 ;;		_snprintf
  6113 ;; This function uses a non-reentrant model
  6114 ;;
  6115                           
  6116                           
  6117                           ;psect for function _vsnprintf
  6118  286D                     _vsnprintf:	
  6119                           
  6120                           ;incstack = 0
  6121                           ; Regs used in _vsnprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6122  286D  3080               	movlw	128
  6123  286E  0021               	movlb	1	; select bank1
  6124  286F  023E               	subwf	(vsnprintf@n+1)^(0+128),w
  6125  2870  3000               	movlw	0
  6126  2871  1903               	skipnz
  6127  2872  023D               	subwf	vsnprintf@n^(0+128),w
  6128  2873  1C03               	skipc
  6129  2874  2880               	goto	l7247
  6130  2875  304B               	movlw	75
  6131  2876  0023               	movlb	3	; select bank3
  6132  2877  00D2               	movwf	_errno^(0+384)
  6133  2878  3000               	movlw	0
  6134  2879  00D3               	movwf	(_errno^(0+384)+1)
  6135  287A  30FF               	movlw	255
  6136  287B  0021               	movlb	1	; select bank1
  6137  287C  00BB               	movwf	?_vsnprintf^(0+128)
  6138  287D  30FF               	movlw	255
  6139  287E  00BC               	movwf	(?_vsnprintf^(0+128)+1)
  6140  287F  0008               	return
  6141  2880                     l7247:	
  6142  2880  083C               	movf	(vsnprintf@s+1)^(0+128),w
  6143  2881  00C7               	movwf	(vsnprintf@f+1)^(0+128)
  6144  2882  083B               	movf	vsnprintf@s^(0+128),w
  6145  2883  00C6               	movwf	vsnprintf@f^(0+128)
  6146  2884  3000               	movlw	0
  6147  2885  023E               	subwf	(vsnprintf@n+1)^(0+128),w
  6148  2886  3002               	movlw	2
  6149  2887  1903               	skipnz
  6150  2888  023D               	subwf	vsnprintf@n^(0+128),w
  6151  2889  1C03               	skipc
  6152  288A  2894               	goto	l7253
  6153  288B  083D               	movf	vsnprintf@n^(0+128),w
  6154  288C  3EFF               	addlw	255
  6155  288D  00CA               	movwf	(vsnprintf@f^(0+128)+4)
  6156  288E  30FF               	movlw	255
  6157  288F  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  6158  2890  00CB               	movwf	((vsnprintf@f+1)^(0+128)+4)
  6159  2891  01C8               	clrf	(vsnprintf@f^(0+128)+2)
  6160  2892  01C9               	clrf	((vsnprintf@f+1)^(0+128)+2)
  6161  2893  289C               	goto	l7255
  6162  2894                     l7253:	
  6163  2894  3001               	movlw	1
  6164  2895  00CA               	movwf	(vsnprintf@f^(0+128)+4)
  6165  2896  3000               	movlw	0
  6166  2897  00CB               	movwf	(vsnprintf@f^(0+128)+5)
  6167  2898  3001               	movlw	1
  6168  2899  00C8               	movwf	(vsnprintf@f^(0+128)+2)
  6169  289A  3000               	movlw	0
  6170  289B  00C9               	movwf	(vsnprintf@f^(0+128)+3)
  6171  289C                     l7255:	
  6172  289C  30C6               	movlw	low vsnprintf@f
  6173  289D  0020               	movlb	0	; select bank0
  6174  289E  00E1               	movwf	vfprintf@fp
  6175  289F  3000               	movlw	high vsnprintf@f
  6176  28A0  00E2               	movwf	vfprintf@fp+1
  6177  28A1  0021               	movlb	1	; select bank1
  6178  28A2  0840               	movf	(vsnprintf@fmt+1)^(0+128),w
  6179  28A3  0020               	movlb	0	; select bank0
  6180  28A4  00E4               	movwf	vfprintf@fmt+1
  6181  28A5  0021               	movlb	1	; select bank1
  6182  28A6  083F               	movf	vsnprintf@fmt^(0+128),w
  6183  28A7  0020               	movlb	0	; select bank0
  6184  28A8  00E3               	movwf	vfprintf@fmt
  6185  28A9  0021               	movlb	1	; select bank1
  6186  28AA  0841               	movf	vsnprintf@ap^(0+128),w
  6187  28AB  0020               	movlb	0	; select bank0
  6188  28AC  00EA               	movwf	??_vsnprintf
  6189  28AD  086A               	movf	??_vsnprintf,w
  6190  28AE  00E5               	movwf	vfprintf@ap
  6191  28AF  31B3  23D5  31A8   	fcall	_vfprintf
  6192  28B2  0020               	movlb	0	; select bank0
  6193  28B3  0862               	movf	?_vfprintf+1,w
  6194  28B4  0021               	movlb	1	; select bank1
  6195  28B5  00C5               	movwf	(vsnprintf@cnt+1)^(0+128)
  6196  28B6  0020               	movlb	0	; select bank0
  6197  28B7  0861               	movf	?_vfprintf,w
  6198  28B8  0021               	movlb	1	; select bank1
  6199  28B9  00C4               	movwf	vsnprintf@cnt^(0+128)
  6200  28BA  083D               	movf	vsnprintf@n^(0+128),w
  6201  28BB  043E               	iorwf	(vsnprintf@n+1)^(0+128),w
  6202  28BC  1D03               	btfss	3,2
  6203  28BD  1BC5               	btfsc	(vsnprintf@cnt+1)^(0+128),7
  6204  28BE  28E5               	goto	l7269
  6205  28BF  083D               	movf	vsnprintf@n^(0+128),w
  6206  28C0  3EFF               	addlw	255
  6207  28C1  0020               	movlb	0	; select bank0
  6208  28C2  00EA               	movwf	??_vsnprintf
  6209  28C3  30FF               	movlw	255
  6210  28C4  0021               	movlb	1	; select bank1
  6211  28C5  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  6212  28C6  0020               	movlb	0	; select bank0
  6213  28C7  00EB               	movwf	??_vsnprintf+1
  6214  28C8  086B               	movf	??_vsnprintf+1,w
  6215  28C9  0021               	movlb	1	; select bank1
  6216  28CA  0245               	subwf	(vsnprintf@cnt+1)^(0+128),w
  6217  28CB  1D03               	skipz
  6218  28CC  28D1               	goto	u9175
  6219  28CD  0020               	movlb	0	; select bank0
  6220  28CE  086A               	movf	??_vsnprintf,w
  6221  28CF  0021               	movlb	1	; select bank1
  6222  28D0  0244               	subwf	vsnprintf@cnt^(0+128),w
  6223  28D1                     u9175:	
  6224  28D1  1C03               	skipc
  6225  28D2  28DA               	goto	l7265
  6226  28D3  083D               	movf	vsnprintf@n^(0+128),w
  6227  28D4  3EFF               	addlw	255
  6228  28D5  00C2               	movwf	_vsnprintf$1885^(0+128)
  6229  28D6  30FF               	movlw	255
  6230  28D7  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  6231  28D8  00C3               	movwf	(_vsnprintf$1885+1)^(0+128)
  6232  28D9  28DE               	goto	l7267
  6233  28DA                     l7265:	
  6234  28DA  0845               	movf	(vsnprintf@cnt+1)^(0+128),w
  6235  28DB  00C3               	movwf	(_vsnprintf$1885+1)^(0+128)
  6236  28DC  0844               	movf	vsnprintf@cnt^(0+128),w
  6237  28DD  00C2               	movwf	_vsnprintf$1885^(0+128)
  6238  28DE                     l7267:	
  6239  28DE  0842               	movf	_vsnprintf$1885^(0+128),w
  6240  28DF  073B               	addwf	vsnprintf@s^(0+128),w
  6241  28E0  0086               	movwf	6
  6242  28E1  0843               	movf	(_vsnprintf$1885+1)^(0+128),w
  6243  28E2  3D3C               	addwfc	(vsnprintf@s+1)^(0+128),w
  6244  28E3  0087               	movwf	7
  6245  28E4  0181               	clrf	1
  6246  28E5                     l7269:	
  6247  28E5  0845               	movf	(vsnprintf@cnt+1)^(0+128),w
  6248  28E6  00BC               	movwf	(?_vsnprintf+1)^(0+128)
  6249  28E7  0844               	movf	vsnprintf@cnt^(0+128),w
  6250  28E8  00BB               	movwf	?_vsnprintf^(0+128)
  6251  28E9  0008               	return
  6252  28EA                     __end_of_vsnprintf:	
  6253                           
  6254                           	psect	text6
  6255  33D5                     __ptext6:	
  6256 ;; *************** function _vfprintf *****************
  6257 ;; Defined at:
  6258 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6259 ;; Parameters:    Size  Location     Type
  6260 ;;  fp              2   65[BANK0 ] PTR struct _IO_FILE
  6261 ;;		 -> vsnprintf@f(6), 
  6262 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
  6263 ;;		 -> STR_24(18), STR_23(18), STR_22(19), STR_21(20), 
  6264 ;;		 -> STR_20(20), STR_19(21), STR_18(21), STR_17(21), 
  6265 ;;		 -> STR_16(22), STR_15(22), STR_14(21), STR_13(21), 
  6266 ;;		 -> STR_10(15), STR_9(40), STR_8(37), STR_7(15), 
  6267 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_3(22), 
  6268 ;;		 -> STR_2(71), STR_1(40), 
  6269 ;;  ap              1   69[BANK0 ] PTR PTR void 
  6270 ;;		 -> snprintf@ap(1), 
  6271 ;; Auto vars:     Size  Location     Type
  6272 ;;  cfmt            2   72[BANK0 ] PTR unsigned char 
  6273 ;;		 -> STR_24(18), STR_23(18), STR_22(19), STR_21(20), 
  6274 ;;		 -> STR_20(20), STR_19(21), STR_18(21), STR_17(21), 
  6275 ;;		 -> STR_16(22), STR_15(22), STR_14(21), STR_13(21), 
  6276 ;;		 -> STR_10(15), STR_9(40), STR_8(37), STR_7(15), 
  6277 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_3(22), 
  6278 ;;		 -> STR_2(71), STR_1(40), 
  6279 ;; Return value:  Size  Location     Type
  6280 ;;                  2   65[BANK0 ] int 
  6281 ;; Registers used:
  6282 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6283 ;; Tracked objects:
  6284 ;;		On entry : 0/0
  6285 ;;		On exit  : 0/0
  6286 ;;		Unchanged: 0/0
  6287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6288 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6289 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6290 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6291 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6292 ;;Total ram usage:        9 bytes
  6293 ;; Hardware stack levels used:    1
  6294 ;; Hardware stack levels required when called:    7
  6295 ;; This function calls:
  6296 ;;		_vfpfcnvrt
  6297 ;; This function is called by:
  6298 ;;		_vsnprintf
  6299 ;; This function uses a non-reentrant model
  6300 ;;
  6301                           
  6302                           
  6303                           ;psect for function _vfprintf
  6304  33D5                     _vfprintf:	
  6305                           
  6306                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6307                           
  6308                           ;incstack = 0
  6309                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6310  33D5  0020               	movlb	0	; select bank0
  6311  33D6  0864               	movf	vfprintf@fmt+1,w
  6312  33D7  00E9               	movwf	vfprintf@cfmt+1
  6313  33D8  0863               	movf	vfprintf@fmt,w
  6314  33D9  00E8               	movwf	vfprintf@cfmt
  6315                           
  6316                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  6317  33DA  0023               	movlb	3	; select bank3
  6318  33DB  01D4               	clrf	_nout^(0+384)
  6319  33DC  01D5               	clrf	(_nout+1)^(0+384)
  6320  33DD                     l7153:	
  6321                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6322                           
  6323                           
  6324                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6325  33DD  0020               	movlb	0	; select bank0
  6326  33DE  0868               	movf	vfprintf@cfmt,w
  6327  33DF  0084               	movwf	4
  6328  33E0  0869               	movf	vfprintf@cfmt+1,w
  6329  33E1  0085               	movwf	5
  6330  33E2  0012               	moviw fsr0++
  6331  33E3  1903               	btfsc	3,2
  6332  33E4  2BFD               	goto	l7155
  6333                           
  6334                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  6335  33E5  0862               	movf	vfprintf@fp+1,w
  6336  33E6  00D8               	movwf	vfpfcnvrt@fp+1
  6337  33E7  0861               	movf	vfprintf@fp,w
  6338  33E8  00D7               	movwf	vfpfcnvrt@fp
  6339  33E9  3068               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  6340  33EA  00E6               	movwf	??_vfprintf
  6341  33EB  0866               	movf	??_vfprintf,w
  6342  33EC  00D9               	movwf	vfpfcnvrt@fmt
  6343  33ED  0865               	movf	vfprintf@ap,w
  6344  33EE  00E7               	movwf	??_vfprintf+1
  6345  33EF  0867               	movf	??_vfprintf+1,w
  6346  33F0  00DA               	movwf	vfpfcnvrt@ap
  6347  33F1  319C  247A  31B3   	fcall	_vfpfcnvrt
  6348  33F4  0020               	movlb	0	; select bank0
  6349  33F5  0857               	movf	?_vfpfcnvrt,w
  6350  33F6  0023               	movlb	3	; select bank3
  6351  33F7  07D4               	addwf	_nout^(0+384),f
  6352  33F8  0020               	movlb	0	; select bank0
  6353  33F9  0858               	movf	?_vfpfcnvrt+1,w
  6354  33FA  0023               	movlb	3	; select bank3
  6355  33FB  3DD5               	addwfc	(_nout+1)^(0+384),f
  6356  33FC  2BDD               	goto	l7153
  6357  33FD                     l7155:	
  6358                           
  6359                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  6360  33FD  0023               	movlb	3	; select bank3
  6361  33FE  0855               	movf	(_nout+1)^(0+384),w
  6362  33FF  0020               	movlb	0	; select bank0
  6363  3400  00E2               	movwf	?_vfprintf+1
  6364  3401  0023               	movlb	3	; select bank3
  6365  3402  0854               	movf	_nout^(0+384),w
  6366  3403  0020               	movlb	0	; select bank0
  6367  3404  00E1               	movwf	?_vfprintf
  6368  3405  0008               	return
  6369  3406                     __end_of_vfprintf:	
  6370                           
  6371                           	psect	text7
  6372  1C7A                     __ptext7:	
  6373 ;; *************** function _vfpfcnvrt *****************
  6374 ;; Defined at:
  6375 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6376 ;; Parameters:    Size  Location     Type
  6377 ;;  fp              2   55[BANK0 ] PTR struct _IO_FILE
  6378 ;;		 -> vsnprintf@f(6), 
  6379 ;;  fmt             1   57[BANK0 ] PTR PTR unsigned char 
  6380 ;;		 -> vfprintf@cfmt(2), 
  6381 ;;  ap              1   58[BANK0 ] PTR PTR void 
  6382 ;;		 -> snprintf@ap(1), 
  6383 ;; Auto vars:     Size  Location     Type
  6384 ;;  llu             8   19[BANK1 ] unsigned long long 
  6385 ;;  ll              8    8[BANK1 ] long long 
  6386 ;;  f               4    0        long long 
  6387 ;;  ct              3    0        unsigned char [3]
  6388 ;;  vp              2   16[BANK1 ] PTR void 
  6389 ;;		 -> ?_snprintf(2), sp__logf(4), adcGain(2), 
  6390 ;;  done            2    2[BANK1 ] int 
  6391 ;;  cp              2    0[BANK1 ] PTR unsigned char 
  6392 ;;		 -> ?_snprintf(2), sp__logf(4), adcGain(2), 
  6393 ;;  i               2    0        int 
  6394 ;;  c               1   18[BANK1 ] unsigned char 
  6395 ;; Return value:  Size  Location     Type
  6396 ;;                  2   55[BANK0 ] int 
  6397 ;; Registers used:
  6398 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6399 ;; Tracked objects:
  6400 ;;		On entry : 0/0
  6401 ;;		On exit  : 0/0
  6402 ;;		Unchanged: 0/0
  6403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6404 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6405 ;;      Locals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6406 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6407 ;;      Totals:         0      10      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6408 ;;Total ram usage:       37 bytes
  6409 ;; Hardware stack levels used:    1
  6410 ;; Hardware stack levels required when called:    6
  6411 ;; This function calls:
  6412 ;;		_atoi
  6413 ;;		_ctoa
  6414 ;;		_dtoa
  6415 ;;		_fputc
  6416 ;;		_isdigit
  6417 ;;		_otoa
  6418 ;;		_stoa
  6419 ;;		_strncmp
  6420 ;;		_utoa
  6421 ;;		_xtoa
  6422 ;; This function is called by:
  6423 ;;		_vfprintf
  6424 ;; This function uses a non-reentrant model
  6425 ;;
  6426                           
  6427                           
  6428                           ;psect for function _vfpfcnvrt
  6429  1C7A                     _vfpfcnvrt:	
  6430                           
  6431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  6432                           
  6433                           ;incstack = 0
  6434                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6435  1C7A  0020               	movlb	0	; select bank0
  6436  1C7B  0859               	movf	vfpfcnvrt@fmt,w
  6437  1C7C  0086               	movwf	6
  6438  1C7D  0187               	clrf	7
  6439  1C7E  3F40               	moviw [0]fsr1
  6440  1C7F  00DB               	movwf	??_vfpfcnvrt
  6441  1C80  3F41               	moviw [1]fsr1
  6442  1C81  00DC               	movwf	??_vfpfcnvrt+1
  6443  1C82  085B               	movf	??_vfpfcnvrt,w
  6444  1C83  0084               	movwf	4
  6445  1C84  085C               	movf	??_vfpfcnvrt+1,w
  6446  1C85  0085               	movwf	5
  6447  1C86  0012               	moviw fsr0++
  6448  1C87  3A25               	xorlw	37
  6449  1C88  1D03               	btfss	3,2
  6450  1C89  2E1C               	goto	L7
  6451                           
  6452                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  6453  1C8A  0859               	movf	vfpfcnvrt@fmt,w
  6454  1C8B  0086               	movwf	6
  6455  1C8C  0187               	clrf	7
  6456  1C8D  3001               	movlw	1
  6457  1C8E  0781               	addwf	1,f
  6458  1C8F  3141               	addfsr 1,1
  6459  1C90  1803               	skipnc
  6460  1C91  0A81               	incf	1,f
  6461                           
  6462                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  6463  1C92  0022               	movlb	2	; select bank2
  6464  1C93  01E6               	clrf	_width^(0+256)
  6465  1C94  01E7               	clrf	(_width+1)^(0+256)
  6466  1C95  01EA               	clrf	_flags^(0+256)
  6467  1C96  01EB               	clrf	(_flags+1)^(0+256)
  6468                           
  6469                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  6470  1C97  30FF               	movlw	255
  6471  1C98  00E8               	movwf	_prec^(0+256)
  6472  1C99  30FF               	movlw	255
  6473  1C9A  00E9               	movwf	(_prec^(0+256)+1)
  6474                           
  6475                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  6476  1C9B  0021               	movlb	1	; select bank1
  6477  1C9C  01A2               	clrf	vfpfcnvrt@done^(0+128)
  6478  1C9D  01A3               	clrf	(vfpfcnvrt@done+1)^(0+128)
  6479                           
  6480                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6481  1C9E  2CBC               	goto	l6789
  6482  1C9F                     l867:	
  6483                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 691:       
      +                                    case '-' :
  6484                           
  6485                           
  6486                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  6487  1C9F  0022               	movlb	2	; select bank2
  6488  1CA0  146A               	bsf	_flags^(0+256),0
  6489  1CA1                     l6773:	
  6490                           
  6491                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  6492  1CA1  0020               	movlb	0	; select bank0
  6493  1CA2  0859               	movf	vfpfcnvrt@fmt,w
  6494  1CA3  0086               	movwf	6
  6495  1CA4  0187               	clrf	7
  6496  1CA5  3001               	movlw	1
  6497  1CA6  0781               	addwf	1,f
  6498  1CA7  3141               	addfsr 1,1
  6499  1CA8  1803               	skipnc
  6500  1CA9  0A81               	incf	1,f
  6501                           
  6502                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  6503  1CAA  2CBC               	goto	l6789
  6504  1CAB                     l869:	
  6505                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 695:       
      +                                    case '0' :
  6506                           
  6507                           
  6508                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  6509  1CAB  0022               	movlb	2	; select bank2
  6510  1CAC  14EA               	bsf	_flags^(0+256),1
  6511  1CAD  2CA1               	goto	l6773
  6512  1CAE                     l870:	
  6513                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 699:       
      +                                    case '+' :
  6514                           
  6515                           
  6516                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  6517  1CAE  0022               	movlb	2	; select bank2
  6518  1CAF  156A               	bsf	_flags^(0+256),2
  6519  1CB0  2CA1               	goto	l6773
  6520  1CB1                     l871:	
  6521                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 703:       
      +                                    case ' ' :
  6522                           
  6523                           
  6524                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  6525  1CB1  0022               	movlb	2	; select bank2
  6526  1CB2  15EA               	bsf	_flags^(0+256),3
  6527  1CB3  2CA1               	goto	l6773
  6528  1CB4                     l872:	
  6529                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 707:       
      +                                    case '#' :
  6530                           
  6531                           
  6532                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  6533  1CB4  0022               	movlb	2	; select bank2
  6534  1CB5  166A               	bsf	_flags^(0+256),4
  6535  1CB6  2CA1               	goto	l6773
  6536  1CB7                     l6783:	
  6537                           
  6538                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  6539  1CB7  3001               	movlw	1
  6540  1CB8  0021               	movlb	1	; select bank1
  6541  1CB9  00A2               	movwf	vfpfcnvrt@done^(0+128)
  6542  1CBA  3000               	movlw	0
  6543  1CBB  00A3               	movwf	(vfpfcnvrt@done^(0+128)+1)
  6544  1CBC                     l6789:	
  6545                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  6546                           
  6547                           
  6548                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6549  1CBC  0021               	movlb	1	; select bank1
  6550  1CBD  0822               	movf	vfpfcnvrt@done^(0+128),w
  6551  1CBE  0423               	iorwf	(vfpfcnvrt@done+1)^(0+128),w
  6552  1CBF  1D03               	btfss	3,2
  6553  1CC0  2CE7               	goto	l874
  6554  1CC1  0020               	movlb	0	; select bank0
  6555  1CC2  0859               	movf	vfpfcnvrt@fmt,w
  6556  1CC3  0086               	movwf	6
  6557  1CC4  0187               	clrf	7
  6558  1CC5  3F40               	moviw [0]fsr1
  6559  1CC6  00DB               	movwf	??_vfpfcnvrt
  6560  1CC7  3F41               	moviw [1]fsr1
  6561  1CC8  00DC               	movwf	??_vfpfcnvrt+1
  6562  1CC9  085B               	movf	??_vfpfcnvrt,w
  6563  1CCA  0084               	movwf	4
  6564  1CCB  085C               	movf	??_vfpfcnvrt+1,w
  6565  1CCC  0085               	movwf	5
  6566  1CCD  0800               	movf	0,w	;code access
  6567  1CCE  00DD               	movwf	??_vfpfcnvrt+2
  6568  1CCF  01DE               	clrf	??_vfpfcnvrt+3
  6569                           
  6570                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6571                           ; Switch size 1, requested type "simple"
  6572                           ; Number of cases is 1, Range of values is 0 to 0
  6573                           ; switch strategies available:
  6574                           ; Name         Instructions Cycles
  6575                           ; simple_byte            4     3 (average)
  6576                           ; direct_byte            8     6 (fixed)
  6577                           ; jumptable            260     6 (fixed)
  6578                           ;	Chosen strategy is simple_byte
  6579  1CD0  085E               	movf	??_vfpfcnvrt+3,w
  6580  1CD1  3A00               	xorlw	0	; case 0
  6581  1CD2  1903               	skipnz
  6582  1CD3  2CD5               	goto	l7833
  6583  1CD4  2CB7               	goto	l6783
  6584  1CD5                     l7833:	
  6585                           
  6586                           ; Switch size 1, requested type "simple"
  6587                           ; Number of cases is 5, Range of values is 32 to 48
  6588                           ; switch strategies available:
  6589                           ; Name         Instructions Cycles
  6590                           ; simple_byte           16     9 (average)
  6591                           ; direct_byte           43     9 (fixed)
  6592                           ; jumptable            263     9 (fixed)
  6593                           ;	Chosen strategy is simple_byte
  6594  1CD5  085D               	movf	??_vfpfcnvrt+2,w
  6595  1CD6  3A20               	xorlw	32	; case 32
  6596  1CD7  1903               	skipnz
  6597  1CD8  2CB1               	goto	l871
  6598  1CD9  3A03               	xorlw	3	; case 35
  6599  1CDA  1903               	skipnz
  6600  1CDB  2CB4               	goto	l872
  6601  1CDC  3A08               	xorlw	8	; case 43
  6602  1CDD  1903               	skipnz
  6603  1CDE  2CAE               	goto	l870
  6604  1CDF  3A06               	xorlw	6	; case 45
  6605  1CE0  1903               	skipnz
  6606  1CE1  2C9F               	goto	l867
  6607  1CE2  3A1D               	xorlw	29	; case 48
  6608  1CE3  1903               	skipnz
  6609  1CE4  2CAB               	goto	l869
  6610  1CE5  2CB7               	goto	l6783
  6611  1CE6  2CBC               	goto	l6789
  6612  1CE7                     l874:	
  6613                           
  6614                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  6615  1CE7  0022               	movlb	2	; select bank2
  6616  1CE8  1C6A               	btfss	_flags^(0+256),0
  6617  1CE9  2CEE               	goto	l6793
  6618                           
  6619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  6620  1CEA  30FD               	movlw	253
  6621  1CEB  05EA               	andwf	_flags^(0+256),f
  6622  1CEC  30FF               	movlw	255
  6623  1CED  05EB               	andwf	(_flags+1)^(0+256),f
  6624  1CEE                     l6793:	
  6625                           
  6626                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  6627  1CEE  0020               	movlb	0	; select bank0
  6628  1CEF  0859               	movf	vfpfcnvrt@fmt,w
  6629  1CF0  0086               	movwf	6
  6630  1CF1  0187               	clrf	7
  6631  1CF2  3F40               	moviw [0]fsr1
  6632  1CF3  00DB               	movwf	??_vfpfcnvrt
  6633  1CF4  3F41               	moviw [1]fsr1
  6634  1CF5  00DC               	movwf	??_vfpfcnvrt+1
  6635  1CF6  085B               	movf	??_vfpfcnvrt,w
  6636  1CF7  0084               	movwf	4
  6637  1CF8  085C               	movf	??_vfpfcnvrt+1,w
  6638  1CF9  0085               	movwf	5
  6639  1CFA  0012               	moviw fsr0++
  6640  1CFB  3A2A               	xorlw	42
  6641  1CFC  1D03               	btfss	3,2
  6642  1CFD  2D1C               	goto	l6805
  6643                           
  6644                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  6645  1CFE  0859               	movf	vfpfcnvrt@fmt,w
  6646  1CFF  0086               	movwf	6
  6647  1D00  0187               	clrf	7
  6648  1D01  3001               	movlw	1
  6649  1D02  0781               	addwf	1,f
  6650  1D03  3141               	addfsr 1,1
  6651  1D04  1803               	skipnc
  6652  1D05  0A81               	incf	1,f
  6653                           
  6654                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6655  1D06  085A               	movf	vfpfcnvrt@ap,w
  6656  1D07  0086               	movwf	6
  6657  1D08  0187               	clrf	7
  6658  1D09  0801               	movf	1,w
  6659  1D0A  0084               	movwf	4
  6660  1D0B  0185               	clrf	5
  6661  1D0C  3002               	movlw	2
  6662  1D0D  0781               	addwf	1,f
  6663  1D0E  3F00               	moviw [0]fsr0
  6664  1D0F  0022               	movlb	2	; select bank2
  6665  1D10  00E6               	movwf	_width^(0+256)
  6666  1D11  3F01               	moviw [1]fsr0
  6667  1D12  00E7               	movwf	(_width+1)^(0+256)
  6668                           
  6669                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  6670  1D13  1FE7               	btfss	(_width+1)^(0+256),7
  6671  1D14  2D5F               	goto	l6815
  6672                           
  6673                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  6674  1D15  146A               	bsf	_flags^(0+256),0
  6675                           
  6676                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  6677  1D16  09E6               	comf	_width^(0+256),f
  6678  1D17  09E7               	comf	(_width+1)^(0+256),f
  6679  1D18  0AE6               	incf	_width^(0+256),f
  6680  1D19  1903               	skipnz
  6681  1D1A  0AE7               	incf	(_width+1)^(0+256),f
  6682  1D1B  2D5F               	goto	l6815
  6683  1D1C                     l6805:	
  6684                           
  6685                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  6686  1D1C  0859               	movf	vfpfcnvrt@fmt,w
  6687  1D1D  0086               	movwf	6
  6688  1D1E  0187               	clrf	7
  6689  1D1F  3F40               	moviw [0]fsr1
  6690  1D20  00F7               	movwf	atoi@s
  6691  1D21  3F41               	moviw [1]fsr1
  6692  1D22  00F8               	movwf	atoi@s+1
  6693  1D23  31AA  2202  319C   	fcall	_atoi
  6694  1D26  0878               	movf	?_atoi+1,w
  6695  1D27  0022               	movlb	2	; select bank2
  6696  1D28  00E7               	movwf	(_width+1)^(0+256)
  6697  1D29  0877               	movf	?_atoi,w
  6698  1D2A  00E6               	movwf	_width^(0+256)
  6699                           
  6700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6701  1D2B  2D35               	goto	l6809
  6702  1D2C                     l6807:	
  6703                           
  6704                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  6705  1D2C  0020               	movlb	0	; select bank0
  6706  1D2D  0859               	movf	vfpfcnvrt@fmt,w
  6707  1D2E  0086               	movwf	6
  6708  1D2F  0187               	clrf	7
  6709  1D30  3001               	movlw	1
  6710  1D31  0781               	addwf	1,f
  6711  1D32  3141               	addfsr 1,1
  6712  1D33  1803               	skipnc
  6713  1D34  0A81               	incf	1,f
  6714  1D35                     l6809:	
  6715  1D35  0020               	movlb	0	; select bank0
  6716  1D36  0859               	movf	vfpfcnvrt@fmt,w
  6717  1D37  0086               	movwf	6
  6718  1D38  0187               	clrf	7
  6719  1D39  3F40               	moviw [0]fsr1
  6720  1D3A  00DB               	movwf	??_vfpfcnvrt
  6721  1D3B  3F41               	moviw [1]fsr1
  6722  1D3C  00DC               	movwf	??_vfpfcnvrt+1
  6723  1D3D  085B               	movf	??_vfpfcnvrt,w
  6724  1D3E  0084               	movwf	4
  6725  1D3F  085C               	movf	??_vfpfcnvrt+1,w
  6726  1D40  0085               	movwf	5
  6727  1D41  0800               	movf	0,w	;code access
  6728  1D42  3ED0               	addlw	208
  6729  1D43  00DD               	movwf	??_vfpfcnvrt+2
  6730  1D44  30FF               	movlw	255
  6731  1D45  1803               	skipnc
  6732  1D46  3000               	movlw	0
  6733  1D47  00DE               	movwf	??_vfpfcnvrt+3
  6734  1D48  3000               	movlw	0
  6735  1D49  025E               	subwf	??_vfpfcnvrt+3,w
  6736  1D4A  300A               	movlw	10
  6737  1D4B  1903               	skipnz
  6738  1D4C  025D               	subwf	??_vfpfcnvrt+2,w
  6739  1D4D  1803               	btfsc	3,0
  6740  1D4E  2D51               	goto	u8520
  6741  1D4F  3001               	movlw	1
  6742  1D50  2D52               	goto	u8530
  6743  1D51                     u8520:	
  6744  1D51  3000               	movlw	0
  6745  1D52                     u8530:	
  6746  1D52  00DF               	movwf	??_vfpfcnvrt+4
  6747  1D53  01E0               	clrf	??_vfpfcnvrt+5
  6748  1D54  085F               	movf	??_vfpfcnvrt+4,w
  6749  1D55  0021               	movlb	1	; select bank1
  6750  1D56  00A4               	movwf	_vfpfcnvrt$1313^(0+128)
  6751  1D57  0020               	movlb	0	; select bank0
  6752  1D58  0860               	movf	??_vfpfcnvrt+5,w
  6753  1D59  0021               	movlb	1	; select bank1
  6754  1D5A  00A5               	movwf	(_vfpfcnvrt$1313+1)^(0+128)
  6755  1D5B  0824               	movf	_vfpfcnvrt$1313^(0+128),w
  6756  1D5C  0425               	iorwf	(_vfpfcnvrt$1313+1)^(0+128),w
  6757  1D5D  1D03               	btfss	3,2
  6758  1D5E  2D2C               	goto	l6807
  6759  1D5F                     l6815:	
  6760                           
  6761                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  6762  1D5F  0020               	movlb	0	; select bank0
  6763  1D60  0859               	movf	vfpfcnvrt@fmt,w
  6764  1D61  0086               	movwf	6
  6765  1D62  0187               	clrf	7
  6766  1D63  3F40               	moviw [0]fsr1
  6767  1D64  00DB               	movwf	??_vfpfcnvrt
  6768  1D65  3F41               	moviw [1]fsr1
  6769  1D66  00DC               	movwf	??_vfpfcnvrt+1
  6770  1D67  085B               	movf	??_vfpfcnvrt,w
  6771  1D68  0084               	movwf	4
  6772  1D69  085C               	movf	??_vfpfcnvrt+1,w
  6773  1D6A  0085               	movwf	5
  6774  1D6B  0012               	moviw fsr0++
  6775  1D6C  3A2E               	xorlw	46
  6776  1D6D  1D03               	btfss	3,2
  6777  1D6E  2DE3               	goto	l6837
  6778                           
  6779                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  6780  1D6F  0022               	movlb	2	; select bank2
  6781  1D70  01E8               	clrf	_prec^(0+256)
  6782  1D71  01E9               	clrf	(_prec+1)^(0+256)
  6783                           
  6784                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  6785  1D72  0020               	movlb	0	; select bank0
  6786  1D73  0859               	movf	vfpfcnvrt@fmt,w
  6787  1D74  0086               	movwf	6
  6788  1D75  0187               	clrf	7
  6789  1D76  3001               	movlw	1
  6790  1D77  0781               	addwf	1,f
  6791  1D78  3141               	addfsr 1,1
  6792  1D79  1803               	skipnc
  6793  1D7A  0A81               	incf	1,f
  6794                           
  6795                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  6796  1D7B  0859               	movf	vfpfcnvrt@fmt,w
  6797  1D7C  0086               	movwf	6
  6798  1D7D  0187               	clrf	7
  6799  1D7E  3F40               	moviw [0]fsr1
  6800  1D7F  00DB               	movwf	??_vfpfcnvrt
  6801  1D80  3F41               	moviw [1]fsr1
  6802  1D81  00DC               	movwf	??_vfpfcnvrt+1
  6803  1D82  085B               	movf	??_vfpfcnvrt,w
  6804  1D83  0084               	movwf	4
  6805  1D84  085C               	movf	??_vfpfcnvrt+1,w
  6806  1D85  0085               	movwf	5
  6807  1D86  0012               	moviw fsr0++
  6808  1D87  3A2A               	xorlw	42
  6809  1D88  1D03               	btfss	3,2
  6810  1D89  2DA0               	goto	l6827
  6811                           
  6812                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  6813  1D8A  0859               	movf	vfpfcnvrt@fmt,w
  6814  1D8B  0086               	movwf	6
  6815  1D8C  0187               	clrf	7
  6816  1D8D  3001               	movlw	1
  6817  1D8E  0781               	addwf	1,f
  6818  1D8F  3141               	addfsr 1,1
  6819  1D90  1803               	skipnc
  6820  1D91  0A81               	incf	1,f
  6821                           
  6822                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  6823  1D92  085A               	movf	vfpfcnvrt@ap,w
  6824  1D93  0086               	movwf	6
  6825  1D94  0187               	clrf	7
  6826  1D95  0801               	movf	1,w
  6827  1D96  0084               	movwf	4
  6828  1D97  0185               	clrf	5
  6829  1D98  3002               	movlw	2
  6830  1D99  0781               	addwf	1,f
  6831  1D9A  3F00               	moviw [0]fsr0
  6832  1D9B  0022               	movlb	2	; select bank2
  6833  1D9C  00E8               	movwf	_prec^(0+256)
  6834  1D9D  3F01               	moviw [1]fsr0
  6835  1D9E  00E9               	movwf	(_prec+1)^(0+256)
  6836                           
  6837                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  6838  1D9F  2DE3               	goto	l6837
  6839  1DA0                     l6827:	
  6840                           
  6841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  6842  1DA0  0859               	movf	vfpfcnvrt@fmt,w
  6843  1DA1  0086               	movwf	6
  6844  1DA2  0187               	clrf	7
  6845  1DA3  3F40               	moviw [0]fsr1
  6846  1DA4  00F7               	movwf	atoi@s
  6847  1DA5  3F41               	moviw [1]fsr1
  6848  1DA6  00F8               	movwf	atoi@s+1
  6849  1DA7  31AA  2202  319C   	fcall	_atoi
  6850  1DAA  0878               	movf	?_atoi+1,w
  6851  1DAB  0022               	movlb	2	; select bank2
  6852  1DAC  00E9               	movwf	(_prec+1)^(0+256)
  6853  1DAD  0877               	movf	?_atoi,w
  6854  1DAE  00E8               	movwf	_prec^(0+256)
  6855                           
  6856                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6857  1DAF  2DB9               	goto	l6831
  6858  1DB0                     l6829:	
  6859                           
  6860                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  6861  1DB0  0020               	movlb	0	; select bank0
  6862  1DB1  0859               	movf	vfpfcnvrt@fmt,w
  6863  1DB2  0086               	movwf	6
  6864  1DB3  0187               	clrf	7
  6865  1DB4  3001               	movlw	1
  6866  1DB5  0781               	addwf	1,f
  6867  1DB6  3141               	addfsr 1,1
  6868  1DB7  1803               	skipnc
  6869  1DB8  0A81               	incf	1,f
  6870  1DB9                     l6831:	
  6871  1DB9  0020               	movlb	0	; select bank0
  6872  1DBA  0859               	movf	vfpfcnvrt@fmt,w
  6873  1DBB  0086               	movwf	6
  6874  1DBC  0187               	clrf	7
  6875  1DBD  3F40               	moviw [0]fsr1
  6876  1DBE  00DB               	movwf	??_vfpfcnvrt
  6877  1DBF  3F41               	moviw [1]fsr1
  6878  1DC0  00DC               	movwf	??_vfpfcnvrt+1
  6879  1DC1  085B               	movf	??_vfpfcnvrt,w
  6880  1DC2  0084               	movwf	4
  6881  1DC3  085C               	movf	??_vfpfcnvrt+1,w
  6882  1DC4  0085               	movwf	5
  6883  1DC5  0800               	movf	0,w	;code access
  6884  1DC6  3ED0               	addlw	208
  6885  1DC7  00DD               	movwf	??_vfpfcnvrt+2
  6886  1DC8  30FF               	movlw	255
  6887  1DC9  1803               	skipnc
  6888  1DCA  3000               	movlw	0
  6889  1DCB  00DE               	movwf	??_vfpfcnvrt+3
  6890  1DCC  3000               	movlw	0
  6891  1DCD  025E               	subwf	??_vfpfcnvrt+3,w
  6892  1DCE  300A               	movlw	10
  6893  1DCF  1903               	skipnz
  6894  1DD0  025D               	subwf	??_vfpfcnvrt+2,w
  6895  1DD1  1803               	btfsc	3,0
  6896  1DD2  2DD5               	goto	u8570
  6897  1DD3  3001               	movlw	1
  6898  1DD4  2DD6               	goto	u8580
  6899  1DD5                     u8570:	
  6900  1DD5  3000               	movlw	0
  6901  1DD6                     u8580:	
  6902  1DD6  00DF               	movwf	??_vfpfcnvrt+4
  6903  1DD7  01E0               	clrf	??_vfpfcnvrt+5
  6904  1DD8  085F               	movf	??_vfpfcnvrt+4,w
  6905  1DD9  0021               	movlb	1	; select bank1
  6906  1DDA  00A6               	movwf	_vfpfcnvrt$1314^(0+128)
  6907  1DDB  0020               	movlb	0	; select bank0
  6908  1DDC  0860               	movf	??_vfpfcnvrt+5,w
  6909  1DDD  0021               	movlb	1	; select bank1
  6910  1DDE  00A7               	movwf	(_vfpfcnvrt$1314+1)^(0+128)
  6911  1DDF  0826               	movf	_vfpfcnvrt$1314^(0+128),w
  6912  1DE0  0427               	iorwf	(_vfpfcnvrt$1314+1)^(0+128),w
  6913  1DE1  1D03               	btfss	3,2
  6914  1DE2  2DB0               	goto	l6829
  6915  1DE3                     l6837:	
  6916                           
  6917                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  6918  1DE3  0020               	movlb	0	; select bank0
  6919  1DE4  0859               	movf	vfpfcnvrt@fmt,w
  6920  1DE5  0086               	movwf	6
  6921  1DE6  0187               	clrf	7
  6922  1DE7  3F40               	moviw [0]fsr1
  6923  1DE8  00DB               	movwf	??_vfpfcnvrt
  6924  1DE9  3F41               	moviw [1]fsr1
  6925  1DEA  00DC               	movwf	??_vfpfcnvrt+1
  6926  1DEB  085B               	movf	??_vfpfcnvrt,w
  6927  1DEC  0084               	movwf	4
  6928  1DED  085C               	movf	??_vfpfcnvrt+1,w
  6929  1DEE  0085               	movwf	5
  6930  1DEF  0012               	moviw fsr0++
  6931  1DF0  3A63               	xorlw	99
  6932  1DF1  31A4  1D03         	btfss	3,2
  6933  1DF3  2CD9               	goto	l6847
  6934                           
  6935                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  6936  1DF4  0859               	movf	vfpfcnvrt@fmt,w
  6937  1DF5  0086               	movwf	6
  6938  1DF6  0187               	clrf	7
  6939  1DF7  3001               	movlw	1
  6940  1DF8  0781               	addwf	1,f
  6941  1DF9  3141               	addfsr 1,1
  6942  1DFA  1803               	skipnc
  6943  1DFB  0A81               	incf	1,f
  6944                           
  6945                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6946  1DFC  085A               	movf	vfpfcnvrt@ap,w
  6947  1DFD  0086               	movwf	6
  6948  1DFE  0187               	clrf	7
  6949  1DFF  0801               	movf	1,w
  6950  1E00  0084               	movwf	4
  6951  1E01  0185               	clrf	5
  6952  1E02  3002               	movlw	2
  6953  1E03  0781               	addwf	1,f
  6954  1E04  0800               	movf	0,w
  6955  1E05  00DB               	movwf	??_vfpfcnvrt
  6956  1E06  085B               	movf	??_vfpfcnvrt,w
  6957  1E07  0021               	movlb	1	; select bank1
  6958  1E08  00B2               	movwf	vfpfcnvrt@c^(0+128)
  6959                           
  6960                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  6961  1E09  0020               	movlb	0	; select bank0
  6962  1E0A  0858               	movf	vfpfcnvrt@fp+1,w
  6963  1E0B  00B1               	movwf	ctoa@fp+1
  6964  1E0C  0857               	movf	vfpfcnvrt@fp,w
  6965  1E0D  00B0               	movwf	ctoa@fp
  6966  1E0E  0021               	movlb	1	; select bank1
  6967  1E0F  0832               	movf	vfpfcnvrt@c^(0+128),w
  6968  1E10  0020               	movlb	0	; select bank0
  6969  1E11  00DB               	movwf	??_vfpfcnvrt
  6970  1E12  085B               	movf	??_vfpfcnvrt,w
  6971  1E13  00B2               	movwf	ctoa@c
  6972  1E14  31B3  23A4         	fcall	_ctoa
  6973  1E16  0020               	movlb	0	; select bank0
  6974  1E17  0831               	movf	?_ctoa+1,w
  6975  1E18  00D8               	movwf	?_vfpfcnvrt+1
  6976  1E19  0830               	movf	?_ctoa,w
  6977  1E1A  00D7               	movwf	?_vfpfcnvrt
  6978  1E1B  0008               	return
  6979  1E1C                     L7:	
  6980  1E1C                     L6:	
  6981  1E1C  318F  2FDD         	ljmp	l7115
  6982                           
  6983                           	psect	text8
  6984  19A7                     __ptext8:	
  6985 ;; *************** function _xtoa *****************
  6986 ;; Defined at:
  6987 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6988 ;; Parameters:    Size  Location     Type
  6989 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  6990 ;;		 -> vsnprintf@f(6), 
  6991 ;;  d               8   18[BANK0 ] unsigned long long 
  6992 ;;  x               1   26[BANK0 ] unsigned char 
  6993 ;; Auto vars:     Size  Location     Type
  6994 ;;  n               8   43[BANK0 ] unsigned long long 
  6995 ;;  c               2   53[BANK0 ] int 
  6996 ;;  i               2   51[BANK0 ] int 
  6997 ;;  w               2   41[BANK0 ] int 
  6998 ;;  p               2   39[BANK0 ] int 
  6999 ;; Return value:  Size  Location     Type
  7000 ;;                  2   16[BANK0 ] int 
  7001 ;; Registers used:
  7002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7003 ;; Tracked objects:
  7004 ;;		On entry : 0/0
  7005 ;;		On exit  : 0/0
  7006 ;;		Unchanged: 0/0
  7007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7008 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7009 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7010 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7011 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7012 ;;Total ram usage:       39 bytes
  7013 ;; Hardware stack levels used:    1
  7014 ;; Hardware stack levels required when called:    5
  7015 ;; This function calls:
  7016 ;;		_isalpha
  7017 ;;		_isupper
  7018 ;;		_pad
  7019 ;;		_toupper
  7020 ;; This function is called by:
  7021 ;;		_vfpfcnvrt
  7022 ;; This function uses a non-reentrant model
  7023 ;;
  7024                           
  7025                           
  7026                           ;psect for function _xtoa
  7027  19A7                     _xtoa:	
  7028                           
  7029                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  7030                           
  7031                           ;incstack = 0
  7032                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7033  19A7  0022               	movlb	2	; select bank2
  7034  19A8  1BE9               	btfsc	(_prec+1)^(0+256),7
  7035  19A9  29AE               	goto	l833
  7036                           
  7037                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  7038  19AA  30FD               	movlw	253
  7039  19AB  05EA               	andwf	_flags^(0+256),f
  7040  19AC  30FF               	movlw	255
  7041  19AD  05EB               	andwf	(_flags+1)^(0+256),f
  7042  19AE                     l833:	
  7043                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 631:     }
  7044                           
  7045                           
  7046                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  7047  19AE  0869               	movf	(_prec+1)^(0+256),w
  7048  19AF  3A80               	xorlw	128
  7049  19B0  0020               	movlb	0	; select bank0
  7050  19B1  00BB               	movwf	??_xtoa
  7051  19B2  3080               	movlw	128
  7052  19B3  023B               	subwf	??_xtoa,w
  7053  19B4  1D03               	skipz
  7054  19B5  29B9               	goto	u8245
  7055  19B6  3001               	movlw	1
  7056  19B7  0022               	movlb	2	; select bank2
  7057  19B8  0268               	subwf	_prec^(0+256),w
  7058  19B9                     u8245:	
  7059  19B9  1803               	skipnc
  7060  19BA  29C1               	goto	l6659
  7061  19BB  3001               	movlw	1
  7062  19BC  0020               	movlb	0	; select bank0
  7063  19BD  00C7               	movwf	xtoa@p
  7064  19BE  3000               	movlw	0
  7065  19BF  00C8               	movwf	xtoa@p+1
  7066  19C0  29C9               	goto	l837
  7067  19C1                     l6659:	
  7068  19C1  0022               	movlb	2	; select bank2
  7069  19C2  0869               	movf	(_prec+1)^(0+256),w
  7070  19C3  0020               	movlb	0	; select bank0
  7071  19C4  00C8               	movwf	xtoa@p+1
  7072  19C5  0022               	movlb	2	; select bank2
  7073  19C6  0868               	movf	_prec^(0+256),w
  7074  19C7  0020               	movlb	0	; select bank0
  7075  19C8  00C7               	movwf	xtoa@p
  7076  19C9                     l837:	
  7077                           
  7078                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  7079  19C9  0022               	movlb	2	; select bank2
  7080  19CA  0867               	movf	(_width+1)^(0+256),w
  7081  19CB  0020               	movlb	0	; select bank0
  7082  19CC  00CA               	movwf	xtoa@w+1
  7083  19CD  0022               	movlb	2	; select bank2
  7084  19CE  0866               	movf	_width^(0+256),w
  7085  19CF  0020               	movlb	0	; select bank0
  7086  19D0  00C9               	movwf	xtoa@w
  7087                           
  7088                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  7089  19D1  0022               	movlb	2	; select bank2
  7090  19D2  1E6A               	btfss	_flags^(0+256),4
  7091  19D3  29D9               	goto	l6665
  7092                           
  7093                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  7094  19D4  30FE               	movlw	254
  7095  19D5  0020               	movlb	0	; select bank0
  7096  19D6  07C9               	addwf	xtoa@w,f
  7097  19D7  30FF               	movlw	255
  7098  19D8  3DCA               	addwfc	xtoa@w+1,f
  7099  19D9                     l6665:	
  7100                           
  7101                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  7102  19D9  0020               	movlb	0	; select bank0
  7103  19DA  0832               	movf	xtoa@d,w
  7104  19DB  00CB               	movwf	xtoa@n
  7105  19DC  0833               	movf	xtoa@d+1,w
  7106  19DD  00CC               	movwf	xtoa@n+1
  7107  19DE  0834               	movf	xtoa@d+2,w
  7108  19DF  00CD               	movwf	xtoa@n+2
  7109  19E0  0835               	movf	xtoa@d+3,w
  7110  19E1  00CE               	movwf	xtoa@n+3
  7111  19E2  0836               	movf	xtoa@d+4,w
  7112  19E3  00CF               	movwf	xtoa@n+4
  7113  19E4  0837               	movf	xtoa@d+5,w
  7114  19E5  00D0               	movwf	xtoa@n+5
  7115  19E6  0838               	movf	xtoa@d+6,w
  7116  19E7  00D1               	movwf	xtoa@n+6
  7117  19E8  0839               	movf	xtoa@d+7,w
  7118  19E9  00D2               	movwf	xtoa@n+7
  7119                           
  7120                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  7121  19EA  301F               	movlw	31
  7122  19EB  00D3               	movwf	xtoa@i
  7123  19EC  3000               	movlw	0
  7124  19ED  00D4               	movwf	xtoa@i+1
  7125                           
  7126                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  7127  19EE  0024               	movlb	4	; select bank4
  7128  19EF  01BF               	clrf	(_dbuf^(0+512)+31)
  7129                           
  7130                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7131  19F0  2A9B               	goto	l6697
  7132  19F1                     l6669:	
  7133                           
  7134                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  7135  19F1  30FF               	movlw	255
  7136  19F2  0020               	movlb	0	; select bank0
  7137  19F3  07D3               	addwf	xtoa@i,f
  7138  19F4  30FF               	movlw	255
  7139  19F5  3DD4               	addwfc	xtoa@i+1,f
  7140                           
  7141                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  7142  19F6  300F               	movlw	15
  7143  19F7  054B               	andwf	xtoa@n,w
  7144  19F8  00D5               	movwf	xtoa@c
  7145  19F9  3000               	movlw	0
  7146  19FA  054C               	andwf	xtoa@n+1,w
  7147  19FB  00D6               	movwf	xtoa@c+1
  7148                           
  7149                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  7150  19FC  0856               	movf	xtoa@c+1,w
  7151  19FD  3A80               	xorlw	128
  7152  19FE  00BB               	movwf	??_xtoa
  7153  19FF  3080               	movlw	128
  7154  1A00  023B               	subwf	??_xtoa,w
  7155  1A01  1D03               	skipz
  7156  1A02  2A05               	goto	u8265
  7157  1A03  300A               	movlw	10
  7158  1A04  0255               	subwf	xtoa@c,w
  7159  1A05                     u8265:	
  7160  1A05  1C03               	skipc
  7161  1A06  2A0B               	goto	l6673
  7162  1A07  0020               	movlb	0	; select bank0
  7163  1A08  0855               	movf	xtoa@c,w
  7164  1A09  3E57               	addlw	87
  7165  1A0A  2A0E               	goto	L1
  7166  1A0B                     l6673:	
  7167  1A0B  0020               	movlb	0	; select bank0
  7168  1A0C  0855               	movf	xtoa@c,w
  7169  1A0D  3E30               	addlw	48
  7170  1A0E                     L1:	
  7171  1A0E  00D5               	movwf	xtoa@c
  7172  1A0F  3000               	movlw	0
  7173  1A10  3D56               	addwfc	xtoa@c+1,w
  7174  1A11  00D6               	movwf	xtoa@c+1
  7175  1A12  083A               	movf	xtoa@x,w
  7176  1A13  3EBF               	addlw	191
  7177  1A14  00BB               	movwf	??_xtoa
  7178  1A15  30FF               	movlw	255
  7179  1A16  1803               	skipnc
  7180  1A17  3000               	movlw	0
  7181  1A18  00BC               	movwf	??_xtoa+1
  7182  1A19  3000               	movlw	0
  7183  1A1A  023C               	subwf	??_xtoa+1,w
  7184  1A1B  301A               	movlw	26
  7185  1A1C  1903               	skipnz
  7186  1A1D  023B               	subwf	??_xtoa,w
  7187  1A1E  1803               	btfsc	3,0
  7188  1A1F  2A22               	goto	u8270
  7189  1A20  3001               	movlw	1
  7190  1A21  2A23               	goto	u8280
  7191  1A22                     u8270:	
  7192  1A22  3000               	movlw	0
  7193  1A23                     u8280:	
  7194  1A23  00BD               	movwf	??_xtoa+2
  7195  1A24  01BE               	clrf	??_xtoa+3
  7196  1A25  083D               	movf	??_xtoa+2,w
  7197  1A26  00C3               	movwf	_xtoa$1298
  7198  1A27  083E               	movf	??_xtoa+3,w
  7199  1A28  00C4               	movwf	_xtoa$1298+1
  7200  1A29  0843               	movf	_xtoa$1298,w
  7201  1A2A  0444               	iorwf	_xtoa$1298+1,w
  7202  1A2B  1903               	btfsc	3,2
  7203  1A2C  2A59               	goto	l6689
  7204  1A2D  3020               	movlw	32
  7205  1A2E  0455               	iorwf	xtoa@c,w
  7206  1A2F  00BB               	movwf	??_xtoa
  7207  1A30  3000               	movlw	0
  7208  1A31  0456               	iorwf	xtoa@c+1,w
  7209  1A32  00BC               	movwf	??_xtoa+1
  7210  1A33  083B               	movf	??_xtoa,w
  7211  1A34  3E9F               	addlw	159
  7212  1A35  00BD               	movwf	??_xtoa+2
  7213  1A36  30FF               	movlw	255
  7214  1A37  3D3C               	addwfc	??_xtoa+1,w
  7215  1A38  00BE               	movwf	??_xtoa+3
  7216  1A39  3000               	movlw	0
  7217  1A3A  023E               	subwf	??_xtoa+3,w
  7218  1A3B  301A               	movlw	26
  7219  1A3C  1903               	skipnz
  7220  1A3D  023D               	subwf	??_xtoa+2,w
  7221  1A3E  1803               	btfsc	3,0
  7222  1A3F  2A42               	goto	u8300
  7223  1A40  3001               	movlw	1
  7224  1A41  2A43               	goto	u8310
  7225  1A42                     u8300:	
  7226  1A42  3000               	movlw	0
  7227  1A43                     u8310:	
  7228  1A43  00BF               	movwf	??_xtoa+4
  7229  1A44  01C0               	clrf	??_xtoa+5
  7230  1A45  083F               	movf	??_xtoa+4,w
  7231  1A46  00C5               	movwf	_xtoa$1299
  7232  1A47  0840               	movf	??_xtoa+5,w
  7233  1A48  00C6               	movwf	_xtoa$1299+1
  7234  1A49  0845               	movf	_xtoa$1299,w
  7235  1A4A  0446               	iorwf	_xtoa$1299+1,w
  7236  1A4B  1903               	btfsc	3,2
  7237  1A4C  2A59               	goto	l6689
  7238                           
  7239                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  7240  1A4D  0856               	movf	xtoa@c+1,w
  7241  1A4E  00F8               	movwf	toupper@c+1
  7242  1A4F  0855               	movf	xtoa@c,w
  7243  1A50  00F7               	movwf	toupper@c
  7244  1A51  3190  2001  3199   	fcall	_toupper
  7245  1A54  0878               	movf	?_toupper+1,w
  7246  1A55  0020               	movlb	0	; select bank0
  7247  1A56  00D6               	movwf	xtoa@c+1
  7248  1A57  0877               	movf	?_toupper,w
  7249  1A58  00D5               	movwf	xtoa@c
  7250  1A59                     l6689:	
  7251                           
  7252                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  7253  1A59  0855               	movf	xtoa@c,w
  7254  1A5A  00BB               	movwf	??_xtoa
  7255  1A5B  0853               	movf	xtoa@i,w
  7256  1A5C  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7257  1A5D  0086               	movwf	6
  7258  1A5E  3002               	movlw	2	; select bank4/5
  7259  1A5F  0087               	movwf	7
  7260  1A60  083B               	movf	??_xtoa,w
  7261  1A61  0081               	movwf	1
  7262                           
  7263                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  7264  1A62  30FF               	movlw	255
  7265  1A63  07C7               	addwf	xtoa@p,f
  7266  1A64  30FF               	movlw	255
  7267  1A65  3DC8               	addwfc	xtoa@p+1,f
  7268                           
  7269                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  7270  1A66  30FF               	movlw	255
  7271  1A67  07C9               	addwf	xtoa@w,f
  7272  1A68  30FF               	movlw	255
  7273  1A69  3DCA               	addwfc	xtoa@w+1,f
  7274                           
  7275                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  7276  1A6A  304B               	movlw	low xtoa@n
  7277  1A6B  0086               	movwf	6
  7278  1A6C  3000               	movlw	high xtoa@n
  7279  1A6D  0087               	movwf	7
  7280  1A6E  3F40               	moviw [0]fsr1
  7281  1A6F  00BB               	movwf	??_xtoa
  7282  1A70  3F41               	moviw [1]fsr1
  7283  1A71  00BC               	movwf	??_xtoa+1
  7284  1A72  3F42               	moviw [2]fsr1
  7285  1A73  00BD               	movwf	??_xtoa+2
  7286  1A74  3F43               	moviw [3]fsr1
  7287  1A75  00BE               	movwf	??_xtoa+3
  7288  1A76  3F44               	moviw [4]fsr1
  7289  1A77  00BF               	movwf	??_xtoa+4
  7290  1A78  3F45               	moviw [5]fsr1
  7291  1A79  00C0               	movwf	??_xtoa+5
  7292  1A7A  3F46               	moviw [6]fsr1
  7293  1A7B  00C1               	movwf	??_xtoa+6
  7294  1A7C  3F47               	moviw [7]fsr1
  7295  1A7D  00C2               	movwf	??_xtoa+7
  7296  1A7E  3004               	movlw	4
  7297  1A7F                     u8335:	
  7298  1A7F  0020               	movlb	0	; select bank0
  7299  1A80  36C2               	lsrf	??_xtoa+7,f
  7300  1A81  0CC1               	rrf	??_xtoa+6,f
  7301  1A82  0CC0               	rrf	??_xtoa+5,f
  7302  1A83  0CBF               	rrf	??_xtoa+4,f
  7303  1A84  0CBE               	rrf	??_xtoa+3,f
  7304  1A85  0CBD               	rrf	??_xtoa+2,f
  7305  1A86  0CBC               	rrf	??_xtoa+1,f
  7306  1A87  0CBB               	rrf	??_xtoa,f
  7307  1A88  0B89               	decfsz	9,f
  7308  1A89  2A7F               	goto	u8335
  7309  1A8A  0020               	movlb	0	; select bank0
  7310  1A8B  0842               	movf	??_xtoa+7,w
  7311  1A8C  00D2               	movwf	xtoa@n+7
  7312  1A8D  0841               	movf	??_xtoa+6,w
  7313  1A8E  00D1               	movwf	xtoa@n+6
  7314  1A8F  0840               	movf	??_xtoa+5,w
  7315  1A90  00D0               	movwf	xtoa@n+5
  7316  1A91  083F               	movf	??_xtoa+4,w
  7317  1A92  00CF               	movwf	xtoa@n+4
  7318  1A93  083E               	movf	??_xtoa+3,w
  7319  1A94  00CE               	movwf	xtoa@n+3
  7320  1A95  083D               	movf	??_xtoa+2,w
  7321  1A96  00CD               	movwf	xtoa@n+2
  7322  1A97  083C               	movf	??_xtoa+1,w
  7323  1A98  00CC               	movwf	xtoa@n+1
  7324  1A99  083B               	movf	??_xtoa,w
  7325  1A9A  00CB               	movwf	xtoa@n
  7326  1A9B                     l6697:	
  7327                           
  7328                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7329  1A9B  0020               	movlb	0	; select bank0
  7330  1A9C  0854               	movf	xtoa@i+1,w
  7331  1A9D  3A80               	xorlw	128
  7332  1A9E  00BB               	movwf	??_xtoa
  7333  1A9F  3080               	movlw	128
  7334  1AA0  023B               	subwf	??_xtoa,w
  7335  1AA1  1D03               	skipz
  7336  1AA2  2AA5               	goto	u8345
  7337  1AA3  3002               	movlw	2
  7338  1AA4  0253               	subwf	xtoa@i,w
  7339  1AA5                     u8345:	
  7340  1AA5  1C03               	skipc
  7341  1AA6  2ACC               	goto	l858
  7342  1AA7  0020               	movlb	0	; select bank0
  7343  1AA8  084B               	movf	xtoa@n,w
  7344  1AA9  044C               	iorwf	xtoa@n+1,w
  7345  1AAA  044D               	iorwf	xtoa@n+2,w
  7346  1AAB  044E               	iorwf	xtoa@n+3,w
  7347  1AAC  044F               	iorwf	xtoa@n+4,w
  7348  1AAD  0450               	iorwf	xtoa@n+5,w
  7349  1AAE  0451               	iorwf	xtoa@n+6,w
  7350  1AAF  0452               	iorwf	xtoa@n+7,w
  7351  1AB0  1D03               	skipz
  7352  1AB1  29F1               	goto	l6669
  7353  1AB2  0848               	movf	xtoa@p+1,w
  7354  1AB3  3A80               	xorlw	128
  7355  1AB4  00BB               	movwf	??_xtoa
  7356  1AB5  3080               	movlw	128
  7357  1AB6  023B               	subwf	??_xtoa,w
  7358  1AB7  1D03               	skipz
  7359  1AB8  2ABB               	goto	u8365
  7360  1AB9  3001               	movlw	1
  7361  1ABA  0247               	subwf	xtoa@p,w
  7362  1ABB                     u8365:	
  7363  1ABB  1803               	skipnc
  7364  1ABC  29F1               	goto	l6669
  7365  1ABD  0020               	movlb	0	; select bank0
  7366  1ABE  084A               	movf	xtoa@w+1,w
  7367  1ABF  3A80               	xorlw	128
  7368  1AC0  00BB               	movwf	??_xtoa
  7369  1AC1  3080               	movlw	128
  7370  1AC2  023B               	subwf	??_xtoa,w
  7371  1AC3  1D03               	skipz
  7372  1AC4  2AC7               	goto	u8375
  7373  1AC5  3001               	movlw	1
  7374  1AC6  0249               	subwf	xtoa@w,w
  7375  1AC7                     u8375:	
  7376  1AC7  1C03               	skipc
  7377  1AC8  2ACC               	goto	l858
  7378  1AC9  0022               	movlb	2	; select bank2
  7379  1ACA  18EA               	btfsc	_flags^(0+256),1
  7380  1ACB  29F1               	goto	l6669
  7381  1ACC                     l858:	
  7382                           
  7383                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  7384  1ACC  0022               	movlb	2	; select bank2
  7385  1ACD  1E6A               	btfss	_flags^(0+256),4
  7386  1ACE  2AEA               	goto	l6713
  7387                           
  7388                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  7389  1ACF  30FF               	movlw	255
  7390  1AD0  0020               	movlb	0	; select bank0
  7391  1AD1  07D3               	addwf	xtoa@i,f
  7392  1AD2  30FF               	movlw	255
  7393  1AD3  3DD4               	addwfc	xtoa@i+1,f
  7394                           
  7395                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  7396  1AD4  083A               	movf	xtoa@x,w
  7397  1AD5  00BB               	movwf	??_xtoa
  7398  1AD6  0853               	movf	xtoa@i,w
  7399  1AD7  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7400  1AD8  0086               	movwf	6
  7401  1AD9  3002               	movlw	2	; select bank4/5
  7402  1ADA  0087               	movwf	7
  7403  1ADB  083B               	movf	??_xtoa,w
  7404  1ADC  0081               	movwf	1
  7405                           
  7406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  7407  1ADD  30FF               	movlw	255
  7408  1ADE  07D3               	addwf	xtoa@i,f
  7409  1ADF  30FF               	movlw	255
  7410  1AE0  3DD4               	addwfc	xtoa@i+1,f
  7411                           
  7412                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  7413  1AE1  3030               	movlw	48
  7414  1AE2  00BB               	movwf	??_xtoa
  7415  1AE3  0853               	movf	xtoa@i,w
  7416  1AE4  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7417  1AE5  0086               	movwf	6
  7418  1AE6  3002               	movlw	2	; select bank4/5
  7419  1AE7  0087               	movwf	7
  7420  1AE8  083B               	movf	??_xtoa,w
  7421  1AE9  0081               	movwf	1
  7422  1AEA                     l6713:	
  7423                           
  7424                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  7425  1AEA  0020               	movlb	0	; select bank0
  7426  1AEB  0831               	movf	xtoa@fp+1,w
  7427  1AEC  00A7               	movwf	pad@fp+1
  7428  1AED  0830               	movf	xtoa@fp,w
  7429  1AEE  00A6               	movwf	pad@fp
  7430  1AEF  0853               	movf	xtoa@i,w
  7431  1AF0  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7432  1AF1  00BB               	movwf	??_xtoa
  7433  1AF2  083B               	movf	??_xtoa,w
  7434  1AF3  00A8               	movwf	pad@buf
  7435  1AF4  084A               	movf	xtoa@w+1,w
  7436  1AF5  00AA               	movwf	pad@p+1
  7437  1AF6  0849               	movf	xtoa@w,w
  7438  1AF7  00A9               	movwf	pad@p
  7439  1AF8  31B5  2587         	fcall	_pad
  7440  1AFA  0020               	movlb	0	; select bank0
  7441  1AFB  0827               	movf	?_pad+1,w
  7442  1AFC  00B1               	movwf	?_xtoa+1
  7443  1AFD  0826               	movf	?_pad,w
  7444  1AFE  00B0               	movwf	?_xtoa
  7445  1AFF  0008               	return
  7446  1B00                     __end_of_xtoa:	
  7447                           
  7448                           	psect	text9
  7449  1001                     __ptext9:	
  7450 ;; *************** function _toupper *****************
  7451 ;; Defined at:
  7452 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  7453 ;; Parameters:    Size  Location     Type
  7454 ;;  c               2    7[COMMON] int 
  7455 ;; Auto vars:     Size  Location     Type
  7456 ;;		None
  7457 ;; Return value:  Size  Location     Type
  7458 ;;                  2    7[COMMON] int 
  7459 ;; Registers used:
  7460 ;;		wreg, status,2, status,0
  7461 ;; Tracked objects:
  7462 ;;		On entry : 0/0
  7463 ;;		On exit  : 0/0
  7464 ;;		Unchanged: 0/0
  7465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7466 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7467 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7468 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7469 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7470 ;;Total ram usage:        8 bytes
  7471 ;; Hardware stack levels used:    1
  7472 ;; Hardware stack levels required when called:    2
  7473 ;; This function calls:
  7474 ;;		_islower
  7475 ;; This function is called by:
  7476 ;;		_xtoa
  7477 ;; This function uses a non-reentrant model
  7478 ;;
  7479                           
  7480                           
  7481                           ;psect for function _toupper
  7482  1001                     _toupper:	
  7483                           
  7484                           ;incstack = 0
  7485                           ; Regs used in _toupper: [wreg+status,2+status,0]
  7486  1001  0877               	movf	toupper@c,w
  7487  1002  3E9F               	addlw	159
  7488  1003  0020               	movlb	0	; select bank0
  7489  1004  00A0               	movwf	??_toupper
  7490  1005  30FF               	movlw	255
  7491  1006  3D78               	addwfc	toupper@c+1,w
  7492  1007  00A1               	movwf	??_toupper+1
  7493  1008  3000               	movlw	0
  7494  1009  0221               	subwf	??_toupper+1,w
  7495  100A  301A               	movlw	26
  7496  100B  1903               	skipnz
  7497  100C  0220               	subwf	??_toupper,w
  7498  100D  1803               	btfsc	3,0
  7499  100E  2811               	goto	u7860
  7500  100F  3001               	movlw	1
  7501  1010  2812               	goto	u7870
  7502  1011                     u7860:	
  7503  1011  3000               	movlw	0
  7504  1012                     u7870:	
  7505  1012  00A2               	movwf	??_toupper+2
  7506  1013  01A3               	clrf	??_toupper+3
  7507  1014  0822               	movf	??_toupper+2,w
  7508  1015  00F9               	movwf	_toupper$1848
  7509  1016  0823               	movf	??_toupper+3,w
  7510  1017  00FA               	movwf	_toupper$1848+1
  7511  1018  0879               	movf	_toupper$1848,w
  7512  1019  047A               	iorwf	_toupper$1848+1,w
  7513  101A  1903               	btfsc	3,2
  7514  101B  0008               	return
  7515  101C  305F               	movlw	95
  7516  101D  0577               	andwf	toupper@c,w
  7517  101E  00F7               	movwf	?_toupper
  7518  101F  3000               	movlw	0
  7519  1020  0578               	andwf	toupper@c+1,w
  7520  1021  00F8               	movwf	?_toupper+1
  7521  1022  0008               	return
  7522  1023                     __end_of_toupper:	
  7523                           
  7524                           	psect	text10
  7525  322F                     __ptext10:	
  7526 ;; *************** function _islower *****************
  7527 ;; Defined at:
  7528 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  7529 ;; Parameters:    Size  Location     Type
  7530 ;;  c               2    1[COMMON] int 
  7531 ;; Auto vars:     Size  Location     Type
  7532 ;;		None
  7533 ;; Return value:  Size  Location     Type
  7534 ;;                  2    1[COMMON] int 
  7535 ;; Registers used:
  7536 ;;		wreg, status,2, status,0
  7537 ;; Tracked objects:
  7538 ;;		On entry : 0/0
  7539 ;;		On exit  : 0/0
  7540 ;;		Unchanged: 0/0
  7541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7542 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7544 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7545 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7546 ;;Total ram usage:        6 bytes
  7547 ;; Hardware stack levels used:    1
  7548 ;; Hardware stack levels required when called:    1
  7549 ;; This function calls:
  7550 ;;		Nothing
  7551 ;; This function is called by:
  7552 ;;		_toupper
  7553 ;; This function uses a non-reentrant model
  7554 ;;
  7555                           
  7556                           
  7557                           ;psect for function _islower
  7558  322F                     _islower:	
  7559                           
  7560                           ;incstack = 0
  7561                           ; Regs used in _islower: [wreg+status,2+status,0]
  7562  322F  0871               	movf	islower@c,w
  7563  3230  3E9F               	addlw	159
  7564  3231  00F3               	movwf	??_islower
  7565  3232  30FF               	movlw	255
  7566  3233  3D72               	addwfc	islower@c+1,w
  7567  3234  00F4               	movwf	??_islower+1
  7568  3235  3000               	movlw	0
  7569  3236  0274               	subwf	??_islower+1,w
  7570  3237  301A               	movlw	26
  7571  3238  1903               	skipnz
  7572  3239  0273               	subwf	??_islower,w
  7573  323A  1803               	btfsc	3,0
  7574  323B  2A3E               	goto	u7800
  7575  323C  3001               	movlw	1
  7576  323D  2A3F               	goto	u7810
  7577  323E                     u7800:	
  7578  323E  3000               	movlw	0
  7579  323F                     u7810:	
  7580  323F  00F5               	movwf	??_islower+2
  7581  3240  01F6               	clrf	??_islower+3
  7582  3241  0875               	movf	??_islower+2,w
  7583  3242  00F1               	movwf	?_islower
  7584  3243  0876               	movf	??_islower+3,w
  7585  3244  00F2               	movwf	?_islower+1
  7586  3245  0008               	return
  7587  3246                     __end_of_islower:	
  7588                           
  7589                           	psect	text11
  7590  3218                     __ptext11:	
  7591 ;; *************** function _isupper *****************
  7592 ;; Defined at:
  7593 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  7594 ;; Parameters:    Size  Location     Type
  7595 ;;  c               2    1[COMMON] int 
  7596 ;; Auto vars:     Size  Location     Type
  7597 ;;		None
  7598 ;; Return value:  Size  Location     Type
  7599 ;;                  2    1[COMMON] int 
  7600 ;; Registers used:
  7601 ;;		wreg, status,2, status,0
  7602 ;; Tracked objects:
  7603 ;;		On entry : 0/0
  7604 ;;		On exit  : 0/0
  7605 ;;		Unchanged: 0/0
  7606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7607 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7609 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7610 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7611 ;;Total ram usage:        6 bytes
  7612 ;; Hardware stack levels used:    1
  7613 ;; Hardware stack levels required when called:    1
  7614 ;; This function calls:
  7615 ;;		Nothing
  7616 ;; This function is called by:
  7617 ;;		_xtoa
  7618 ;; This function uses a non-reentrant model
  7619 ;;
  7620                           
  7621                           
  7622                           ;psect for function _isupper
  7623  3218                     _isupper:	
  7624                           
  7625                           ;incstack = 0
  7626                           ; Regs used in _isupper: [wreg+status,2+status,0]
  7627  3218  0871               	movf	isupper@c,w
  7628  3219  3EBF               	addlw	191
  7629  321A  00F3               	movwf	??_isupper
  7630  321B  30FF               	movlw	255
  7631  321C  3D72               	addwfc	isupper@c+1,w
  7632  321D  00F4               	movwf	??_isupper+1
  7633  321E  3000               	movlw	0
  7634  321F  0274               	subwf	??_isupper+1,w
  7635  3220  301A               	movlw	26
  7636  3221  1903               	skipnz
  7637  3222  0273               	subwf	??_isupper,w
  7638  3223  1803               	btfsc	3,0
  7639  3224  2A27               	goto	u4060
  7640  3225  3001               	movlw	1
  7641  3226  2A28               	goto	u4070
  7642  3227                     u4060:	
  7643  3227  3000               	movlw	0
  7644  3228                     u4070:	
  7645  3228  00F5               	movwf	??_isupper+2
  7646  3229  01F6               	clrf	??_isupper+3
  7647  322A  0875               	movf	??_isupper+2,w
  7648  322B  00F1               	movwf	?_isupper
  7649  322C  0876               	movf	??_isupper+3,w
  7650  322D  00F2               	movwf	?_isupper+1
  7651  322E  0008               	return
  7652  322F                     __end_of_isupper:	
  7653                           
  7654                           	psect	text12
  7655  32B1                     __ptext12:	
  7656 ;; *************** function _isalpha *****************
  7657 ;; Defined at:
  7658 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  7659 ;; Parameters:    Size  Location     Type
  7660 ;;  c               2    1[COMMON] int 
  7661 ;; Auto vars:     Size  Location     Type
  7662 ;;		None
  7663 ;; Return value:  Size  Location     Type
  7664 ;;                  2    1[COMMON] int 
  7665 ;; Registers used:
  7666 ;;		wreg, status,2, status,0
  7667 ;; Tracked objects:
  7668 ;;		On entry : 0/0
  7669 ;;		On exit  : 0/0
  7670 ;;		Unchanged: 0/0
  7671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7672 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7674 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7675 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7676 ;;Total ram usage:        8 bytes
  7677 ;; Hardware stack levels used:    1
  7678 ;; Hardware stack levels required when called:    1
  7679 ;; This function calls:
  7680 ;;		Nothing
  7681 ;; This function is called by:
  7682 ;;		_xtoa
  7683 ;; This function uses a non-reentrant model
  7684 ;;
  7685                           
  7686                           
  7687                           ;psect for function _isalpha
  7688  32B1                     _isalpha:	
  7689                           
  7690                           ;incstack = 0
  7691                           ; Regs used in _isalpha: [wreg+status,2+status,0]
  7692  32B1  3020               	movlw	32
  7693  32B2  0471               	iorwf	isalpha@c,w
  7694  32B3  00F3               	movwf	??_isalpha
  7695  32B4  3000               	movlw	0
  7696  32B5  0472               	iorwf	isalpha@c+1,w
  7697  32B6  00F4               	movwf	??_isalpha+1
  7698  32B7  0873               	movf	??_isalpha,w
  7699  32B8  3E9F               	addlw	159
  7700  32B9  00F5               	movwf	??_isalpha+2
  7701  32BA  30FF               	movlw	255
  7702  32BB  3D74               	addwfc	??_isalpha+1,w
  7703  32BC  00F6               	movwf	??_isalpha+3
  7704  32BD  3000               	movlw	0
  7705  32BE  0276               	subwf	??_isalpha+3,w
  7706  32BF  301A               	movlw	26
  7707  32C0  1903               	skipnz
  7708  32C1  0275               	subwf	??_isalpha+2,w
  7709  32C2  1803               	btfsc	3,0
  7710  32C3  2AC6               	goto	u4080
  7711  32C4  3001               	movlw	1
  7712  32C5  2AC7               	goto	u4090
  7713  32C6                     u4080:	
  7714  32C6  3000               	movlw	0
  7715  32C7                     u4090:	
  7716  32C7  00F7               	movwf	??_isalpha+4
  7717  32C8  01F8               	clrf	??_isalpha+5
  7718  32C9  0877               	movf	??_isalpha+4,w
  7719  32CA  00F1               	movwf	?_isalpha
  7720  32CB  0878               	movf	??_isalpha+5,w
  7721  32CC  00F2               	movwf	?_isalpha+1
  7722  32CD  0008               	return
  7723  32CE                     __end_of_isalpha:	
  7724                           
  7725                           	psect	text13
  7726  2214                     __ptext13:	
  7727 ;; *************** function _utoa *****************
  7728 ;; Defined at:
  7729 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7730 ;; Parameters:    Size  Location     Type
  7731 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  7732 ;;		 -> vsnprintf@f(6), 
  7733 ;;  d               8   18[BANK0 ] unsigned long long 
  7734 ;; Auto vars:     Size  Location     Type
  7735 ;;  n               8   31[BANK0 ] unsigned long long 
  7736 ;;  i               2   39[BANK0 ] int 
  7737 ;;  w               2   29[BANK0 ] int 
  7738 ;;  p               2   27[BANK0 ] int 
  7739 ;; Return value:  Size  Location     Type
  7740 ;;                  2   16[BANK0 ] int 
  7741 ;; Registers used:
  7742 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7743 ;; Tracked objects:
  7744 ;;		On entry : 0/0
  7745 ;;		On exit  : 0/0
  7746 ;;		Unchanged: 0/0
  7747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7748 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7749 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7750 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7751 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7752 ;;Total ram usage:       25 bytes
  7753 ;; Hardware stack levels used:    1
  7754 ;; Hardware stack levels required when called:    5
  7755 ;; This function calls:
  7756 ;;		___lodiv
  7757 ;;		___lomod
  7758 ;;		_pad
  7759 ;; This function is called by:
  7760 ;;		_vfpfcnvrt
  7761 ;; This function uses a non-reentrant model
  7762 ;;
  7763                           
  7764                           
  7765                           ;psect for function _utoa
  7766  2214                     _utoa:	
  7767                           
  7768                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  7769                           
  7770                           ;incstack = 0
  7771                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7772  2214  0022               	movlb	2	; select bank2
  7773  2215  1BE9               	btfsc	(_prec+1)^(0+256),7
  7774  2216  2A1B               	goto	l818
  7775                           
  7776                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  7777  2217  30FD               	movlw	253
  7778  2218  05EA               	andwf	_flags^(0+256),f
  7779  2219  30FF               	movlw	255
  7780  221A  05EB               	andwf	(_flags+1)^(0+256),f
  7781  221B                     l818:	
  7782                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 601:     }
  7783                           
  7784                           
  7785                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  7786  221B  0869               	movf	(_prec+1)^(0+256),w
  7787  221C  3A80               	xorlw	128
  7788  221D  0020               	movlb	0	; select bank0
  7789  221E  00BA               	movwf	??_utoa
  7790  221F  3080               	movlw	128
  7791  2220  023A               	subwf	??_utoa,w
  7792  2221  1D03               	skipz
  7793  2222  2A26               	goto	u8175
  7794  2223  3001               	movlw	1
  7795  2224  0022               	movlb	2	; select bank2
  7796  2225  0268               	subwf	_prec^(0+256),w
  7797  2226                     u8175:	
  7798  2226  1803               	skipnc
  7799  2227  2A2E               	goto	l6623
  7800  2228  3001               	movlw	1
  7801  2229  0020               	movlb	0	; select bank0
  7802  222A  00BB               	movwf	utoa@p
  7803  222B  3000               	movlw	0
  7804  222C  00BC               	movwf	utoa@p+1
  7805  222D  2A36               	goto	l822
  7806  222E                     l6623:	
  7807  222E  0022               	movlb	2	; select bank2
  7808  222F  0869               	movf	(_prec+1)^(0+256),w
  7809  2230  0020               	movlb	0	; select bank0
  7810  2231  00BC               	movwf	utoa@p+1
  7811  2232  0022               	movlb	2	; select bank2
  7812  2233  0868               	movf	_prec^(0+256),w
  7813  2234  0020               	movlb	0	; select bank0
  7814  2235  00BB               	movwf	utoa@p
  7815  2236                     l822:	
  7816                           
  7817                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  7818  2236  0022               	movlb	2	; select bank2
  7819  2237  0867               	movf	(_width+1)^(0+256),w
  7820  2238  0020               	movlb	0	; select bank0
  7821  2239  00BE               	movwf	utoa@w+1
  7822  223A  0022               	movlb	2	; select bank2
  7823  223B  0866               	movf	_width^(0+256),w
  7824  223C  0020               	movlb	0	; select bank0
  7825  223D  00BD               	movwf	utoa@w
  7826                           
  7827                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  7828  223E  0832               	movf	utoa@d,w
  7829  223F  00BF               	movwf	utoa@n
  7830  2240  0833               	movf	utoa@d+1,w
  7831  2241  00C0               	movwf	utoa@n+1
  7832  2242  0834               	movf	utoa@d+2,w
  7833  2243  00C1               	movwf	utoa@n+2
  7834  2244  0835               	movf	utoa@d+3,w
  7835  2245  00C2               	movwf	utoa@n+3
  7836  2246  0836               	movf	utoa@d+4,w
  7837  2247  00C3               	movwf	utoa@n+4
  7838  2248  0837               	movf	utoa@d+5,w
  7839  2249  00C4               	movwf	utoa@n+5
  7840  224A  0838               	movf	utoa@d+6,w
  7841  224B  00C5               	movwf	utoa@n+6
  7842  224C  0839               	movf	utoa@d+7,w
  7843  224D  00C6               	movwf	utoa@n+7
  7844                           
  7845                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  7846  224E  301F               	movlw	31
  7847  224F  00C7               	movwf	utoa@i
  7848  2250  3000               	movlw	0
  7849  2251  00C8               	movwf	utoa@i+1
  7850                           
  7851                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  7852  2252  0024               	movlb	4	; select bank4
  7853  2253  01BF               	clrf	(_dbuf^(0+512)+31)
  7854                           
  7855                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7856  2254  2ADA               	goto	l6639
  7857  2255                     l6641:	
  7858  2255  083F               	movf	utoa@n,w
  7859  2256  0440               	iorwf	utoa@n+1,w
  7860  2257  0441               	iorwf	utoa@n+2,w
  7861  2258  0442               	iorwf	utoa@n+3,w
  7862  2259  0443               	iorwf	utoa@n+4,w
  7863  225A  0444               	iorwf	utoa@n+5,w
  7864  225B  0445               	iorwf	utoa@n+6,w
  7865  225C  0446               	iorwf	utoa@n+7,w
  7866  225D  1D03               	skipz
  7867  225E  2A79               	goto	l6629
  7868  225F  083C               	movf	utoa@p+1,w
  7869  2260  3A80               	xorlw	128
  7870  2261  00BA               	movwf	??_utoa
  7871  2262  3080               	movlw	128
  7872  2263  023A               	subwf	??_utoa,w
  7873  2264  1D03               	skipz
  7874  2265  2A68               	goto	u8205
  7875  2266  3001               	movlw	1
  7876  2267  023B               	subwf	utoa@p,w
  7877  2268                     u8205:	
  7878  2268  1803               	skipnc
  7879  2269  2A79               	goto	l6629
  7880  226A  0020               	movlb	0	; select bank0
  7881  226B  083E               	movf	utoa@w+1,w
  7882  226C  3A80               	xorlw	128
  7883  226D  00BA               	movwf	??_utoa
  7884  226E  3080               	movlw	128
  7885  226F  023A               	subwf	??_utoa,w
  7886  2270  1D03               	skipz
  7887  2271  2A74               	goto	u8215
  7888  2272  3001               	movlw	1
  7889  2273  023D               	subwf	utoa@w,w
  7890  2274                     u8215:	
  7891  2274  1C03               	skipc
  7892  2275  2ADF               	goto	l6649
  7893  2276  0022               	movlb	2	; select bank2
  7894  2277  1CEA               	btfss	_flags^(0+256),1
  7895  2278  2ADF               	goto	l6649
  7896  2279                     l6629:	
  7897                           
  7898                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  7899  2279  30FF               	movlw	255
  7900  227A  0020               	movlb	0	; select bank0
  7901  227B  07C7               	addwf	utoa@i,f
  7902  227C  30FF               	movlw	255
  7903  227D  3DC8               	addwfc	utoa@i+1,f
  7904                           
  7905                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  7906  227E  300A               	movlw	10
  7907  227F  00A0               	movwf	___lomod@divisor
  7908  2280  01A1               	clrf	___lomod@divisor+1
  7909  2281  01A2               	clrf	___lomod@divisor+2
  7910  2282  01A3               	clrf	___lomod@divisor+3
  7911  2283  01A4               	clrf	___lomod@divisor+4
  7912  2284  01A5               	clrf	___lomod@divisor+5
  7913  2285  01A6               	clrf	___lomod@divisor+6
  7914  2286  01A7               	clrf	___lomod@divisor+7
  7915  2287  083F               	movf	utoa@n,w
  7916  2288  00A8               	movwf	___lomod@dividend
  7917  2289  0840               	movf	utoa@n+1,w
  7918  228A  00A9               	movwf	___lomod@dividend+1
  7919  228B  0841               	movf	utoa@n+2,w
  7920  228C  00AA               	movwf	___lomod@dividend+2
  7921  228D  0842               	movf	utoa@n+3,w
  7922  228E  00AB               	movwf	___lomod@dividend+3
  7923  228F  0843               	movf	utoa@n+4,w
  7924  2290  00AC               	movwf	___lomod@dividend+4
  7925  2291  0844               	movf	utoa@n+5,w
  7926  2292  00AD               	movwf	___lomod@dividend+5
  7927  2293  0845               	movf	utoa@n+6,w
  7928  2294  00AE               	movwf	___lomod@dividend+6
  7929  2295  0846               	movf	utoa@n+7,w
  7930  2296  00AF               	movwf	___lomod@dividend+7
  7931  2297  31A8  2004  31A2   	fcall	___lomod
  7932  229A  0020               	movlb	0	; select bank0
  7933  229B  0820               	movf	?___lomod,w
  7934  229C  3E30               	addlw	48
  7935  229D  00BA               	movwf	??_utoa
  7936  229E  0847               	movf	utoa@i,w
  7937  229F  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7938  22A0  0086               	movwf	6
  7939  22A1  3002               	movlw	2	; select bank4/5
  7940  22A2  0087               	movwf	7
  7941  22A3  083A               	movf	??_utoa,w
  7942  22A4  0081               	movwf	1
  7943                           
  7944                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  7945  22A5  30FF               	movlw	255
  7946  22A6  07BB               	addwf	utoa@p,f
  7947  22A7  30FF               	movlw	255
  7948  22A8  3DBC               	addwfc	utoa@p+1,f
  7949                           
  7950                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  7951  22A9  30FF               	movlw	255
  7952  22AA  07BD               	addwf	utoa@w,f
  7953  22AB  30FF               	movlw	255
  7954  22AC  3DBE               	addwfc	utoa@w+1,f
  7955                           
  7956                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  7957  22AD  300A               	movlw	10
  7958  22AE  00A0               	movwf	___lodiv@divisor
  7959  22AF  01A1               	clrf	___lodiv@divisor+1
  7960  22B0  01A2               	clrf	___lodiv@divisor+2
  7961  22B1  01A3               	clrf	___lodiv@divisor+3
  7962  22B2  01A4               	clrf	___lodiv@divisor+4
  7963  22B3  01A5               	clrf	___lodiv@divisor+5
  7964  22B4  01A6               	clrf	___lodiv@divisor+6
  7965  22B5  01A7               	clrf	___lodiv@divisor+7
  7966  22B6  083F               	movf	utoa@n,w
  7967  22B7  00A8               	movwf	___lodiv@dividend
  7968  22B8  0840               	movf	utoa@n+1,w
  7969  22B9  00A9               	movwf	___lodiv@dividend+1
  7970  22BA  0841               	movf	utoa@n+2,w
  7971  22BB  00AA               	movwf	___lodiv@dividend+2
  7972  22BC  0842               	movf	utoa@n+3,w
  7973  22BD  00AB               	movwf	___lodiv@dividend+3
  7974  22BE  0843               	movf	utoa@n+4,w
  7975  22BF  00AC               	movwf	___lodiv@dividend+4
  7976  22C0  0844               	movf	utoa@n+5,w
  7977  22C1  00AD               	movwf	___lodiv@dividend+5
  7978  22C2  0845               	movf	utoa@n+6,w
  7979  22C3  00AE               	movwf	___lodiv@dividend+6
  7980  22C4  0846               	movf	utoa@n+7,w
  7981  22C5  00AF               	movwf	___lodiv@dividend+7
  7982  22C6  31B7  2784  31A2   	fcall	___lodiv
  7983  22C9  0020               	movlb	0	; select bank0
  7984  22CA  0820               	movf	?___lodiv,w
  7985  22CB  00BF               	movwf	utoa@n
  7986  22CC  0821               	movf	?___lodiv+1,w
  7987  22CD  00C0               	movwf	utoa@n+1
  7988  22CE  0822               	movf	?___lodiv+2,w
  7989  22CF  00C1               	movwf	utoa@n+2
  7990  22D0  0823               	movf	?___lodiv+3,w
  7991  22D1  00C2               	movwf	utoa@n+3
  7992  22D2  0824               	movf	?___lodiv+4,w
  7993  22D3  00C3               	movwf	utoa@n+4
  7994  22D4  0825               	movf	?___lodiv+5,w
  7995  22D5  00C4               	movwf	utoa@n+5
  7996  22D6  0826               	movf	?___lodiv+6,w
  7997  22D7  00C5               	movwf	utoa@n+6
  7998  22D8  0827               	movf	?___lodiv+7,w
  7999  22D9  00C6               	movwf	utoa@n+7
  8000  22DA                     l6639:	
  8001                           
  8002                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8003  22DA  0020               	movlb	0	; select bank0
  8004  22DB  0847               	movf	utoa@i,w
  8005  22DC  0448               	iorwf	utoa@i+1,w
  8006  22DD  1D03               	btfss	3,2
  8007  22DE  2A55               	goto	l6641
  8008  22DF                     l6649:	
  8009                           
  8010                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  8011  22DF  0020               	movlb	0	; select bank0
  8012  22E0  0831               	movf	utoa@fp+1,w
  8013  22E1  00A7               	movwf	pad@fp+1
  8014  22E2  0830               	movf	utoa@fp,w
  8015  22E3  00A6               	movwf	pad@fp
  8016  22E4  0847               	movf	utoa@i,w
  8017  22E5  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8018  22E6  00BA               	movwf	??_utoa
  8019  22E7  083A               	movf	??_utoa,w
  8020  22E8  00A8               	movwf	pad@buf
  8021  22E9  083E               	movf	utoa@w+1,w
  8022  22EA  00AA               	movwf	pad@p+1
  8023  22EB  083D               	movf	utoa@w,w
  8024  22EC  00A9               	movwf	pad@p
  8025  22ED  31B5  2587         	fcall	_pad
  8026  22EF  0020               	movlb	0	; select bank0
  8027  22F0  0827               	movf	?_pad+1,w
  8028  22F1  00B1               	movwf	?_utoa+1
  8029  22F2  0826               	movf	?_pad,w
  8030  22F3  00B0               	movwf	?_utoa
  8031  22F4  0008               	return
  8032  22F5                     __end_of_utoa:	
  8033                           
  8034                           	psect	text14
  8035  2804                     __ptext14:	
  8036 ;; *************** function ___lomod *****************
  8037 ;; Defined at:
  8038 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  8039 ;; Parameters:    Size  Location     Type
  8040 ;;  divisor         8    0[BANK0 ] unsigned long long 
  8041 ;;  dividend        8    8[BANK0 ] unsigned long long 
  8042 ;; Auto vars:     Size  Location     Type
  8043 ;;  counter         1    2[COMMON] unsigned char 
  8044 ;; Return value:  Size  Location     Type
  8045 ;;                  8    0[BANK0 ] unsigned long long 
  8046 ;; Registers used:
  8047 ;;		wreg, status,2, status,0
  8048 ;; Tracked objects:
  8049 ;;		On entry : 0/0
  8050 ;;		On exit  : 0/0
  8051 ;;		Unchanged: 0/0
  8052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8053 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8054 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8055 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8056 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8057 ;;Total ram usage:       18 bytes
  8058 ;; Hardware stack levels used:    1
  8059 ;; Hardware stack levels required when called:    1
  8060 ;; This function calls:
  8061 ;;		Nothing
  8062 ;; This function is called by:
  8063 ;;		_utoa
  8064 ;; This function uses a non-reentrant model
  8065 ;;
  8066                           
  8067                           
  8068                           ;psect for function ___lomod
  8069  2804                     ___lomod:	
  8070                           
  8071                           ;incstack = 0
  8072                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  8073  2804  0020               	movlb	0	; select bank0
  8074  2805  0820               	movf	___lomod@divisor,w
  8075  2806  0421               	iorwf	___lomod@divisor+1,w
  8076  2807  0422               	iorwf	___lomod@divisor+2,w
  8077  2808  0423               	iorwf	___lomod@divisor+3,w
  8078  2809  0424               	iorwf	___lomod@divisor+4,w
  8079  280A  0425               	iorwf	___lomod@divisor+5,w
  8080  280B  0426               	iorwf	___lomod@divisor+6,w
  8081  280C  0427               	iorwf	___lomod@divisor+7,w
  8082  280D  1903               	skipnz
  8083  280E  285C               	goto	l1189
  8084  280F  01F2               	clrf	___lomod@counter
  8085  2810  0AF2               	incf	___lomod@counter,f
  8086  2811                     l4257:	
  8087  2811  1BA7               	btfsc	___lomod@divisor+7,7
  8088  2812  2820               	goto	l4259
  8089  2813  35A0               	lslf	___lomod@divisor,f
  8090  2814  0DA1               	rlf	___lomod@divisor+1,f
  8091  2815  0DA2               	rlf	___lomod@divisor+2,f
  8092  2816  0DA3               	rlf	___lomod@divisor+3,f
  8093  2817  0DA4               	rlf	___lomod@divisor+4,f
  8094  2818  0DA5               	rlf	___lomod@divisor+5,f
  8095  2819  0DA6               	rlf	___lomod@divisor+6,f
  8096  281A  0DA7               	rlf	___lomod@divisor+7,f
  8097  281B  3001               	movlw	1
  8098  281C  00F1               	movwf	??___lomod
  8099  281D  0871               	movf	??___lomod,w
  8100  281E  07F2               	addwf	___lomod@counter,f
  8101  281F  2811               	goto	l4257
  8102  2820                     l4259:	
  8103  2820  0827               	movf	___lomod@divisor+7,w
  8104  2821  022F               	subwf	___lomod@dividend+7,w
  8105  2822  1D03               	skipz
  8106  2823  283E               	goto	u4475
  8107  2824  0826               	movf	___lomod@divisor+6,w
  8108  2825  022E               	subwf	___lomod@dividend+6,w
  8109  2826  1D03               	skipz
  8110  2827  283E               	goto	u4475
  8111  2828  0825               	movf	___lomod@divisor+5,w
  8112  2829  022D               	subwf	___lomod@dividend+5,w
  8113  282A  1D03               	skipz
  8114  282B  283E               	goto	u4475
  8115  282C  0824               	movf	___lomod@divisor+4,w
  8116  282D  022C               	subwf	___lomod@dividend+4,w
  8117  282E  1D03               	skipz
  8118  282F  283E               	goto	u4475
  8119  2830  0823               	movf	___lomod@divisor+3,w
  8120  2831  022B               	subwf	___lomod@dividend+3,w
  8121  2832  1D03               	skipz
  8122  2833  283E               	goto	u4475
  8123  2834  0822               	movf	___lomod@divisor+2,w
  8124  2835  022A               	subwf	___lomod@dividend+2,w
  8125  2836  1D03               	skipz
  8126  2837  283E               	goto	u4475
  8127  2838  0821               	movf	___lomod@divisor+1,w
  8128  2839  0229               	subwf	___lomod@dividend+1,w
  8129  283A  1D03               	skipz
  8130  283B  283E               	goto	u4475
  8131  283C  0820               	movf	___lomod@divisor,w
  8132  283D  0228               	subwf	___lomod@dividend,w
  8133  283E                     u4475:	
  8134  283E  1C03               	skipc
  8135  283F  2850               	goto	l4263
  8136  2840  0820               	movf	___lomod@divisor,w
  8137  2841  02A8               	subwf	___lomod@dividend,f
  8138  2842  0821               	movf	___lomod@divisor+1,w
  8139  2843  3BA9               	subwfb	___lomod@dividend+1,f
  8140  2844  0822               	movf	___lomod@divisor+2,w
  8141  2845  3BAA               	subwfb	___lomod@dividend+2,f
  8142  2846  0823               	movf	___lomod@divisor+3,w
  8143  2847  3BAB               	subwfb	___lomod@dividend+3,f
  8144  2848  0824               	movf	___lomod@divisor+4,w
  8145  2849  3BAC               	subwfb	___lomod@dividend+4,f
  8146  284A  0825               	movf	___lomod@divisor+5,w
  8147  284B  3BAD               	subwfb	___lomod@dividend+5,f
  8148  284C  0826               	movf	___lomod@divisor+6,w
  8149  284D  3BAE               	subwfb	___lomod@dividend+6,f
  8150  284E  0827               	movf	___lomod@divisor+7,w
  8151  284F  3BAF               	subwfb	___lomod@dividend+7,f
  8152  2850                     l4263:	
  8153  2850  36A7               	lsrf	___lomod@divisor+7,f
  8154  2851  0CA6               	rrf	___lomod@divisor+6,f
  8155  2852  0CA5               	rrf	___lomod@divisor+5,f
  8156  2853  0CA4               	rrf	___lomod@divisor+4,f
  8157  2854  0CA3               	rrf	___lomod@divisor+3,f
  8158  2855  0CA2               	rrf	___lomod@divisor+2,f
  8159  2856  0CA1               	rrf	___lomod@divisor+1,f
  8160  2857  0CA0               	rrf	___lomod@divisor,f
  8161  2858  3001               	movlw	1
  8162  2859  02F2               	subwf	___lomod@counter,f
  8163  285A  1D03               	btfss	3,2
  8164  285B  2820               	goto	l4259
  8165  285C                     l1189:	
  8166  285C  0828               	movf	___lomod@dividend,w
  8167  285D  00A0               	movwf	?___lomod
  8168  285E  0829               	movf	___lomod@dividend+1,w
  8169  285F  00A1               	movwf	?___lomod+1
  8170  2860  082A               	movf	___lomod@dividend+2,w
  8171  2861  00A2               	movwf	?___lomod+2
  8172  2862  082B               	movf	___lomod@dividend+3,w
  8173  2863  00A3               	movwf	?___lomod+3
  8174  2864  082C               	movf	___lomod@dividend+4,w
  8175  2865  00A4               	movwf	?___lomod+4
  8176  2866  082D               	movf	___lomod@dividend+5,w
  8177  2867  00A5               	movwf	?___lomod+5
  8178  2868  082E               	movf	___lomod@dividend+6,w
  8179  2869  00A6               	movwf	?___lomod+6
  8180  286A  082F               	movf	___lomod@dividend+7,w
  8181  286B  00A7               	movwf	?___lomod+7
  8182  286C  0008               	return
  8183  286D                     __end_of___lomod:	
  8184                           
  8185                           	psect	text15
  8186  3784                     __ptext15:	
  8187 ;; *************** function ___lodiv *****************
  8188 ;; Defined at:
  8189 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  8190 ;; Parameters:    Size  Location     Type
  8191 ;;  divisor         8    0[BANK0 ] unsigned long long 
  8192 ;;  dividend        8    8[BANK0 ] unsigned long long 
  8193 ;; Auto vars:     Size  Location     Type
  8194 ;;  quotient        8    2[COMMON] unsigned long long 
  8195 ;;  counter         1   10[COMMON] unsigned char 
  8196 ;; Return value:  Size  Location     Type
  8197 ;;                  8    0[BANK0 ] unsigned long long 
  8198 ;; Registers used:
  8199 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8200 ;; Tracked objects:
  8201 ;;		On entry : 0/0
  8202 ;;		On exit  : 0/0
  8203 ;;		Unchanged: 0/0
  8204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8205 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8206 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8207 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8208 ;;      Totals:        10      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8209 ;;Total ram usage:       26 bytes
  8210 ;; Hardware stack levels used:    1
  8211 ;; Hardware stack levels required when called:    1
  8212 ;; This function calls:
  8213 ;;		Nothing
  8214 ;; This function is called by:
  8215 ;;		_utoa
  8216 ;; This function uses a non-reentrant model
  8217 ;;
  8218                           
  8219                           
  8220                           ;psect for function ___lodiv
  8221  3784                     ___lodiv:	
  8222                           
  8223                           ;incstack = 0
  8224                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  8225  3784  3072               	movlw	low ___lodiv@quotient
  8226  3785  0086               	movwf	6
  8227  3786  3000               	movlw	high ___lodiv@quotient
  8228  3787  0087               	movwf	7
  8229  3788  3008               	movlw	8
  8230  3789  00F1               	movwf	??___lodiv
  8231  378A  3000               	movlw	0
  8232  378B                     u4400:	
  8233  378B  001E               	movwi fsr1++
  8234  378C  0BF1               	decfsz	??___lodiv,f
  8235  378D  2F8B               	goto	u4400
  8236  378E  0020               	movlb	0	; select bank0
  8237  378F  0820               	movf	___lodiv@divisor,w
  8238  3790  0421               	iorwf	___lodiv@divisor+1,w
  8239  3791  0422               	iorwf	___lodiv@divisor+2,w
  8240  3792  0423               	iorwf	___lodiv@divisor+3,w
  8241  3793  0424               	iorwf	___lodiv@divisor+4,w
  8242  3794  0425               	iorwf	___lodiv@divisor+5,w
  8243  3795  0426               	iorwf	___lodiv@divisor+6,w
  8244  3796  0427               	iorwf	___lodiv@divisor+7,w
  8245  3797  1903               	skipnz
  8246  3798  2FEF               	goto	l1179
  8247  3799  01FA               	clrf	___lodiv@counter
  8248  379A  0AFA               	incf	___lodiv@counter,f
  8249  379B                     l4237:	
  8250  379B  1BA7               	btfsc	___lodiv@divisor+7,7
  8251  379C  2FAA               	goto	l4239
  8252  379D  35A0               	lslf	___lodiv@divisor,f
  8253  379E  0DA1               	rlf	___lodiv@divisor+1,f
  8254  379F  0DA2               	rlf	___lodiv@divisor+2,f
  8255  37A0  0DA3               	rlf	___lodiv@divisor+3,f
  8256  37A1  0DA4               	rlf	___lodiv@divisor+4,f
  8257  37A2  0DA5               	rlf	___lodiv@divisor+5,f
  8258  37A3  0DA6               	rlf	___lodiv@divisor+6,f
  8259  37A4  0DA7               	rlf	___lodiv@divisor+7,f
  8260  37A5  3001               	movlw	1
  8261  37A6  00F1               	movwf	??___lodiv
  8262  37A7  0871               	movf	??___lodiv,w
  8263  37A8  07FA               	addwf	___lodiv@counter,f
  8264  37A9  2F9B               	goto	l4237
  8265  37AA                     l4239:	
  8266  37AA  35F2               	lslf	___lodiv@quotient,f
  8267  37AB  0DF3               	rlf	___lodiv@quotient+1,f
  8268  37AC  0DF4               	rlf	___lodiv@quotient+2,f
  8269  37AD  0DF5               	rlf	___lodiv@quotient+3,f
  8270  37AE  0DF6               	rlf	___lodiv@quotient+4,f
  8271  37AF  0DF7               	rlf	___lodiv@quotient+5,f
  8272  37B0  0DF8               	rlf	___lodiv@quotient+6,f
  8273  37B1  0DF9               	rlf	___lodiv@quotient+7,f
  8274  37B2  0827               	movf	___lodiv@divisor+7,w
  8275  37B3  022F               	subwf	___lodiv@dividend+7,w
  8276  37B4  1D03               	skipz
  8277  37B5  2FD0               	goto	u4435
  8278  37B6  0826               	movf	___lodiv@divisor+6,w
  8279  37B7  022E               	subwf	___lodiv@dividend+6,w
  8280  37B8  1D03               	skipz
  8281  37B9  2FD0               	goto	u4435
  8282  37BA  0825               	movf	___lodiv@divisor+5,w
  8283  37BB  022D               	subwf	___lodiv@dividend+5,w
  8284  37BC  1D03               	skipz
  8285  37BD  2FD0               	goto	u4435
  8286  37BE  0824               	movf	___lodiv@divisor+4,w
  8287  37BF  022C               	subwf	___lodiv@dividend+4,w
  8288  37C0  1D03               	skipz
  8289  37C1  2FD0               	goto	u4435
  8290  37C2  0823               	movf	___lodiv@divisor+3,w
  8291  37C3  022B               	subwf	___lodiv@dividend+3,w
  8292  37C4  1D03               	skipz
  8293  37C5  2FD0               	goto	u4435
  8294  37C6  0822               	movf	___lodiv@divisor+2,w
  8295  37C7  022A               	subwf	___lodiv@dividend+2,w
  8296  37C8  1D03               	skipz
  8297  37C9  2FD0               	goto	u4435
  8298  37CA  0821               	movf	___lodiv@divisor+1,w
  8299  37CB  0229               	subwf	___lodiv@dividend+1,w
  8300  37CC  1D03               	skipz
  8301  37CD  2FD0               	goto	u4435
  8302  37CE  0820               	movf	___lodiv@divisor,w
  8303  37CF  0228               	subwf	___lodiv@dividend,w
  8304  37D0                     u4435:	
  8305  37D0  1C03               	skipc
  8306  37D1  2FE3               	goto	l4247
  8307  37D2  0820               	movf	___lodiv@divisor,w
  8308  37D3  02A8               	subwf	___lodiv@dividend,f
  8309  37D4  0821               	movf	___lodiv@divisor+1,w
  8310  37D5  3BA9               	subwfb	___lodiv@dividend+1,f
  8311  37D6  0822               	movf	___lodiv@divisor+2,w
  8312  37D7  3BAA               	subwfb	___lodiv@dividend+2,f
  8313  37D8  0823               	movf	___lodiv@divisor+3,w
  8314  37D9  3BAB               	subwfb	___lodiv@dividend+3,f
  8315  37DA  0824               	movf	___lodiv@divisor+4,w
  8316  37DB  3BAC               	subwfb	___lodiv@dividend+4,f
  8317  37DC  0825               	movf	___lodiv@divisor+5,w
  8318  37DD  3BAD               	subwfb	___lodiv@dividend+5,f
  8319  37DE  0826               	movf	___lodiv@divisor+6,w
  8320  37DF  3BAE               	subwfb	___lodiv@dividend+6,f
  8321  37E0  0827               	movf	___lodiv@divisor+7,w
  8322  37E1  3BAF               	subwfb	___lodiv@dividend+7,f
  8323  37E2  1472               	bsf	___lodiv@quotient,0
  8324  37E3                     l4247:	
  8325  37E3  36A7               	lsrf	___lodiv@divisor+7,f
  8326  37E4  0CA6               	rrf	___lodiv@divisor+6,f
  8327  37E5  0CA5               	rrf	___lodiv@divisor+5,f
  8328  37E6  0CA4               	rrf	___lodiv@divisor+4,f
  8329  37E7  0CA3               	rrf	___lodiv@divisor+3,f
  8330  37E8  0CA2               	rrf	___lodiv@divisor+2,f
  8331  37E9  0CA1               	rrf	___lodiv@divisor+1,f
  8332  37EA  0CA0               	rrf	___lodiv@divisor,f
  8333  37EB  3001               	movlw	1
  8334  37EC  02FA               	subwf	___lodiv@counter,f
  8335  37ED  1D03               	btfss	3,2
  8336  37EE  2FAA               	goto	l4239
  8337  37EF                     l1179:	
  8338  37EF  0872               	movf	___lodiv@quotient,w
  8339  37F0  00A0               	movwf	?___lodiv
  8340  37F1  0873               	movf	___lodiv@quotient+1,w
  8341  37F2  00A1               	movwf	?___lodiv+1
  8342  37F3  0874               	movf	___lodiv@quotient+2,w
  8343  37F4  00A2               	movwf	?___lodiv+2
  8344  37F5  0875               	movf	___lodiv@quotient+3,w
  8345  37F6  00A3               	movwf	?___lodiv+3
  8346  37F7  0876               	movf	___lodiv@quotient+4,w
  8347  37F8  00A4               	movwf	?___lodiv+4
  8348  37F9  0877               	movf	___lodiv@quotient+5,w
  8349  37FA  00A5               	movwf	?___lodiv+5
  8350  37FB  0878               	movf	___lodiv@quotient+6,w
  8351  37FC  00A6               	movwf	?___lodiv+6
  8352  37FD  0879               	movf	___lodiv@quotient+7,w
  8353  37FE  00A7               	movwf	?___lodiv+7
  8354  37FF  0008               	return
  8355  3800                     __end_of___lodiv:	
  8356                           
  8357                           	psect	text16
  8358  35D8                     __ptext16:	
  8359 ;; *************** function _strncmp *****************
  8360 ;; Defined at:
  8361 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  8362 ;; Parameters:    Size  Location     Type
  8363 ;;  _l              2    1[COMMON] PTR const unsigned char 
  8364 ;;		 -> STR_24(18), STR_23(18), STR_22(19), STR_21(20), 
  8365 ;;		 -> STR_20(20), STR_19(21), STR_18(21), STR_17(21), 
  8366 ;;		 -> STR_16(22), STR_15(22), STR_14(21), STR_13(21), 
  8367 ;;		 -> STR_10(15), STR_9(40), STR_8(37), STR_7(15), 
  8368 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_3(22), 
  8369 ;;		 -> STR_2(71), STR_1(40), 
  8370 ;;  _r              2    3[COMMON] PTR const unsigned char 
  8371 ;;		 -> STR_122(3), STR_118(3), STR_113(3), STR_109(3), 
  8372 ;;		 -> STR_104(4), STR_100(4), STR_95(3), STR_90(3), 
  8373 ;;		 -> STR_85(4), STR_80(3), STR_75(3), STR_70(4), 
  8374 ;;		 -> STR_65(3), STR_60(3), STR_55(4), STR_50(3), 
  8375 ;;		 -> STR_46(3), STR_41(3), STR_37(3), STR_32(4), 
  8376 ;;		 -> STR_28(4), 
  8377 ;;  n               2    5[COMMON] unsigned int 
  8378 ;; Auto vars:     Size  Location     Type
  8379 ;;  r               2   10[COMMON] PTR const unsigned char 
  8380 ;;		 -> STR_122(3), STR_118(3), STR_113(3), STR_109(3), 
  8381 ;;		 -> STR_104(4), STR_100(4), STR_95(3), STR_90(3), 
  8382 ;;		 -> STR_85(4), STR_80(3), STR_75(3), STR_70(4), 
  8383 ;;		 -> STR_65(3), STR_60(3), STR_55(4), STR_50(3), 
  8384 ;;		 -> STR_46(3), STR_41(3), STR_37(3), STR_32(4), 
  8385 ;;		 -> STR_28(4), 
  8386 ;;  l               2    8[COMMON] PTR const unsigned char 
  8387 ;;		 -> STR_24(18), STR_23(18), STR_22(19), STR_21(20), 
  8388 ;;		 -> STR_20(20), STR_19(21), STR_18(21), STR_17(21), 
  8389 ;;		 -> STR_16(22), STR_15(22), STR_14(21), STR_13(21), 
  8390 ;;		 -> STR_10(15), STR_9(40), STR_8(37), STR_7(15), 
  8391 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_3(22), 
  8392 ;;		 -> STR_2(71), STR_1(40), 
  8393 ;; Return value:  Size  Location     Type
  8394 ;;                  2    1[COMMON] int 
  8395 ;; Registers used:
  8396 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  8397 ;; Tracked objects:
  8398 ;;		On entry : 0/0
  8399 ;;		On exit  : 0/0
  8400 ;;		Unchanged: 0/0
  8401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8402 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8403 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8404 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8405 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8406 ;;Total ram usage:       11 bytes
  8407 ;; Hardware stack levels used:    1
  8408 ;; Hardware stack levels required when called:    1
  8409 ;; This function calls:
  8410 ;;		Nothing
  8411 ;; This function is called by:
  8412 ;;		_vfpfcnvrt
  8413 ;; This function uses a non-reentrant model
  8414 ;;
  8415                           
  8416                           
  8417                           ;psect for function _strncmp
  8418  35D8                     _strncmp:	
  8419                           
  8420                           ;incstack = 0
  8421                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  8422  35D8  0872               	movf	strncmp@_l+1,w
  8423  35D9  00F9               	movwf	strncmp@l+1
  8424  35DA  0871               	movf	strncmp@_l,w
  8425  35DB  00F8               	movwf	strncmp@l
  8426  35DC  0874               	movf	strncmp@_r+1,w
  8427  35DD  00FB               	movwf	strncmp@r+1
  8428  35DE  0873               	movf	strncmp@_r,w
  8429  35DF  00FA               	movwf	strncmp@r
  8430  35E0  3001               	movlw	1
  8431  35E1  02F5               	subwf	strncmp@n,f
  8432  35E2  3000               	movlw	0
  8433  35E3  3BF6               	subwfb	strncmp@n+1,f
  8434  35E4  0A75               	incf	strncmp@n,w
  8435  35E5  1D03               	skipz
  8436  35E6  2E12               	goto	l4599
  8437  35E7  0A76               	incf	strncmp@n+1,w
  8438  35E8  1D03               	btfss	3,2
  8439  35E9  2E12               	goto	l4599
  8440  35EA  01F1               	clrf	?_strncmp
  8441  35EB  01F2               	clrf	?_strncmp+1
  8442  35EC  0008               	return
  8443  35ED                     l4601:	
  8444  35ED  087A               	movf	strncmp@r,w
  8445  35EE  0084               	movwf	4
  8446  35EF  087B               	movf	strncmp@r+1,w
  8447  35F0  0085               	movwf	5
  8448  35F1  0012               	moviw fsr0++
  8449  35F2  1903               	btfsc	3,2
  8450  35F3  2E19               	goto	l4607
  8451  35F4  0875               	movf	strncmp@n,w
  8452  35F5  0476               	iorwf	strncmp@n+1,w
  8453  35F6  1903               	btfsc	3,2
  8454  35F7  2E19               	goto	l4607
  8455  35F8  087A               	movf	strncmp@r,w
  8456  35F9  0084               	movwf	4
  8457  35FA  087B               	movf	strncmp@r+1,w
  8458  35FB  0085               	movwf	5
  8459  35FC  0800               	movf	0,w	;code access
  8460  35FD  00F7               	movwf	??_strncmp
  8461  35FE  0878               	movf	strncmp@l,w
  8462  35FF  0084               	movwf	4
  8463  3600  0879               	movf	strncmp@l+1,w
  8464  3601  0085               	movwf	5
  8465  3602  0800               	movf	0,w	;code access
  8466  3603  0677               	xorwf	??_strncmp,w
  8467  3604  1D03               	btfss	3,2
  8468  3605  2E19               	goto	l4607
  8469  3606  3001               	movlw	1
  8470  3607  07F8               	addwf	strncmp@l,f
  8471  3608  3000               	movlw	0
  8472  3609  3DF9               	addwfc	strncmp@l+1,f
  8473  360A  3001               	movlw	1
  8474  360B  07FA               	addwf	strncmp@r,f
  8475  360C  3000               	movlw	0
  8476  360D  3DFB               	addwfc	strncmp@r+1,f
  8477  360E  3001               	movlw	1
  8478  360F  02F5               	subwf	strncmp@n,f
  8479  3610  3000               	movlw	0
  8480  3611  3BF6               	subwfb	strncmp@n+1,f
  8481  3612                     l4599:	
  8482  3612  0878               	movf	strncmp@l,w
  8483  3613  0084               	movwf	4
  8484  3614  0879               	movf	strncmp@l+1,w
  8485  3615  0085               	movwf	5
  8486  3616  0012               	moviw fsr0++
  8487  3617  1D03               	btfss	3,2
  8488  3618  2DED               	goto	l4601
  8489  3619                     l4607:	
  8490  3619  0878               	movf	strncmp@l,w
  8491  361A  0084               	movwf	4
  8492  361B  0879               	movf	strncmp@l+1,w
  8493  361C  0085               	movwf	5
  8494  361D  0800               	movf	0,w	;code access
  8495  361E  00F7               	movwf	??_strncmp
  8496  361F  087A               	movf	strncmp@r,w
  8497  3620  0084               	movwf	4
  8498  3621  087B               	movf	strncmp@r+1,w
  8499  3622  0085               	movwf	5
  8500  3623  0800               	movf	0,w	;code access
  8501  3624  0277               	subwf	??_strncmp,w
  8502  3625  00F1               	movwf	?_strncmp
  8503  3626  01F2               	clrf	?_strncmp+1
  8504  3627  1C03               	skipc
  8505  3628  03F2               	decf	?_strncmp+1,f
  8506  3629  0008               	return
  8507  362A                     __end_of_strncmp:	
  8508                           
  8509                           	psect	text17
  8510  2CC4                     __ptext17:	
  8511 ;; *************** function _stoa *****************
  8512 ;; Defined at:
  8513 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8514 ;; Parameters:    Size  Location     Type
  8515 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  8516 ;;		 -> vsnprintf@f(6), 
  8517 ;;  s               2    2[BANK0 ] PTR unsigned char 
  8518 ;;		 -> ?_snprintf(2), sp__logf(4), adcGain(2), 
  8519 ;; Auto vars:     Size  Location     Type
  8520 ;;  nuls            7    4[BANK0 ] unsigned char [7]
  8521 ;;  l               2   19[BANK0 ] int 
  8522 ;;  p               2   17[BANK0 ] int 
  8523 ;;  cp              2   15[BANK0 ] PTR unsigned char 
  8524 ;;		 -> ?_snprintf(2), stoa@nuls(7), sp__logf(4), adcGain(2), 
  8525 ;;  w               2   13[BANK0 ] int 
  8526 ;;  i               2   11[BANK0 ] int 
  8527 ;; Return value:  Size  Location     Type
  8528 ;;                  2    0[BANK0 ] int 
  8529 ;; Registers used:
  8530 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8531 ;; Tracked objects:
  8532 ;;		On entry : 0/0
  8533 ;;		On exit  : 0/0
  8534 ;;		Unchanged: 0/0
  8535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8536 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8537 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8538 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8539 ;;      Totals:         2      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8540 ;;Total ram usage:       23 bytes
  8541 ;; Hardware stack levels used:    1
  8542 ;; Hardware stack levels required when called:    3
  8543 ;; This function calls:
  8544 ;;		_fputc
  8545 ;;		_strlen
  8546 ;; This function is called by:
  8547 ;;		_vfpfcnvrt
  8548 ;; This function uses a non-reentrant model
  8549 ;;
  8550                           
  8551                           
  8552                           ;psect for function _stoa
  8553  2CC4                     _stoa:	
  8554                           
  8555                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8556                           
  8557                           ;incstack = 0
  8558                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8559  2CC4  3040               	movlw	low stoa@F1152
  8560  2CC5  0086               	movwf	6
  8561  2CC6  3002               	movlw	high stoa@F1152
  8562  2CC7  0087               	movwf	7
  8563  2CC8  3024               	movlw	low stoa@nuls
  8564  2CC9  0084               	movwf	4
  8565  2CCA  3000               	movlw	high stoa@nuls
  8566  2CCB  0085               	movwf	5
  8567  2CCC  3007               	movlw	7
  8568  2CCD  00FA               	movwf	??_stoa
  8569  2CCE                     u4780:	
  8570  2CCE  0016               	moviw fsr1++
  8571  2CCF  001A               	movwi fsr0++
  8572  2CD0  0BFA               	decfsz	??_stoa,f
  8573  2CD1  2CCE               	goto	u4780
  8574                           
  8575                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  8576  2CD2  0020               	movlb	0	; select bank0
  8577  2CD3  0823               	movf	stoa@s+1,w
  8578  2CD4  00B0               	movwf	stoa@cp+1
  8579  2CD5  0822               	movf	stoa@s,w
  8580  2CD6  00AF               	movwf	stoa@cp
  8581                           
  8582                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  8583  2CD7  082F               	movf	stoa@cp,w
  8584  2CD8  0430               	iorwf	stoa@cp+1,w
  8585  2CD9  1D03               	btfss	3,2
  8586  2CDA  2CDF               	goto	l4401
  8587                           
  8588                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  8589  2CDB  3024               	movlw	low stoa@nuls
  8590  2CDC  00AF               	movwf	stoa@cp
  8591  2CDD  3000               	movlw	high stoa@nuls
  8592  2CDE  00B0               	movwf	stoa@cp+1
  8593  2CDF                     l4401:	
  8594                           
  8595                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  8596  2CDF  0830               	movf	stoa@cp+1,w
  8597  2CE0  00F2               	movwf	strlen@s+1
  8598  2CE1  082F               	movf	stoa@cp,w
  8599  2CE2  00F1               	movwf	strlen@s
  8600  2CE3  31B1  21EA  31AC   	fcall	_strlen
  8601  2CE6  0872               	movf	?_strlen+1,w
  8602  2CE7  0020               	movlb	0	; select bank0
  8603  2CE8  00B4               	movwf	stoa@l+1
  8604  2CE9  0871               	movf	?_strlen,w
  8605  2CEA  00B3               	movwf	stoa@l
  8606                           
  8607                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  8608  2CEB  0022               	movlb	2	; select bank2
  8609  2CEC  0869               	movf	(_prec+1)^(0+256),w
  8610  2CED  0020               	movlb	0	; select bank0
  8611  2CEE  00B2               	movwf	stoa@p+1
  8612  2CEF  0022               	movlb	2	; select bank2
  8613  2CF0  0868               	movf	_prec^(0+256),w
  8614  2CF1  0020               	movlb	0	; select bank0
  8615  2CF2  00B1               	movwf	stoa@p
  8616                           
  8617                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  8618  2CF3  1BB2               	btfsc	stoa@p+1,7
  8619  2CF4  2D06               	goto	l801
  8620  2CF5  0832               	movf	stoa@p+1,w
  8621  2CF6  3A80               	xorlw	128
  8622  2CF7  00FA               	movwf	??_stoa
  8623  2CF8  0834               	movf	stoa@l+1,w
  8624  2CF9  3A80               	xorlw	128
  8625  2CFA  027A               	subwf	??_stoa,w
  8626  2CFB  1D03               	skipz
  8627  2CFC  2CFF               	goto	u4815
  8628  2CFD  0833               	movf	stoa@l,w
  8629  2CFE  0231               	subwf	stoa@p,w
  8630  2CFF                     u4815:	
  8631  2CFF  1803               	btfsc	3,0
  8632  2D00  2D06               	goto	l801
  8633  2D01  0020               	movlb	0	; select bank0
  8634  2D02  0832               	movf	stoa@p+1,w
  8635  2D03  00B4               	movwf	stoa@l+1
  8636  2D04  0831               	movf	stoa@p,w
  8637  2D05  00B3               	movwf	stoa@l
  8638  2D06                     l801:	
  8639                           
  8640                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  8641  2D06  0020               	movlb	0	; select bank0
  8642  2D07  0834               	movf	stoa@l+1,w
  8643  2D08  00B2               	movwf	stoa@p+1
  8644  2D09  0833               	movf	stoa@l,w
  8645  2D0A  00B1               	movwf	stoa@p
  8646                           
  8647                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  8648  2D0B  0022               	movlb	2	; select bank2
  8649  2D0C  0867               	movf	(_width+1)^(0+256),w
  8650  2D0D  0020               	movlb	0	; select bank0
  8651  2D0E  00AE               	movwf	stoa@w+1
  8652  2D0F  0022               	movlb	2	; select bank2
  8653  2D10  0866               	movf	_width^(0+256),w
  8654  2D11  0020               	movlb	0	; select bank0
  8655  2D12  00AD               	movwf	stoa@w
  8656                           
  8657                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  8658  2D13  0022               	movlb	2	; select bank2
  8659  2D14  1C6A               	btfss	_flags^(0+256),0
  8660  2D15  2D28               	goto	l4419
  8661  2D16  2D35               	goto	l4421
  8662  2D17                     l4415:	
  8663                           
  8664                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  8665  2D17  3020               	movlw	32
  8666  2D18  00F1               	movwf	fputc@c
  8667  2D19  3000               	movlw	0
  8668  2D1A  00F2               	movwf	fputc@c+1
  8669  2D1B  0020               	movlb	0	; select bank0
  8670  2D1C  0821               	movf	stoa@fp+1,w
  8671  2D1D  00F4               	movwf	fputc@fp+1
  8672  2D1E  0820               	movf	stoa@fp,w
  8673  2D1F  00F3               	movwf	fputc@fp
  8674  2D20  3198  2000  31AC   	fcall	_fputc
  8675                           
  8676                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  8677  2D23  3001               	movlw	1
  8678  2D24  0020               	movlb	0	; select bank0
  8679  2D25  07B3               	addwf	stoa@l,f
  8680  2D26  3000               	movlw	0
  8681  2D27  3DB4               	addwfc	stoa@l+1,f
  8682  2D28                     l4419:	
  8683                           
  8684                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  8685  2D28  0020               	movlb	0	; select bank0
  8686  2D29  0834               	movf	stoa@l+1,w
  8687  2D2A  3A80               	xorlw	128
  8688  2D2B  00FA               	movwf	??_stoa
  8689  2D2C  082E               	movf	stoa@w+1,w
  8690  2D2D  3A80               	xorlw	128
  8691  2D2E  027A               	subwf	??_stoa,w
  8692  2D2F  1D03               	skipz
  8693  2D30  2D33               	goto	u4835
  8694  2D31  082D               	movf	stoa@w,w
  8695  2D32  0233               	subwf	stoa@l,w
  8696  2D33                     u4835:	
  8697  2D33  1C03               	skipc
  8698  2D34  2D17               	goto	l4415
  8699  2D35                     l4421:	
  8700                           
  8701                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  8702  2D35  0020               	movlb	0	; select bank0
  8703  2D36  01AB               	clrf	stoa@i
  8704  2D37  01AC               	clrf	stoa@i+1
  8705  2D38                     l4429:	
  8706                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8707                           
  8708                           
  8709                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8710  2D38  082C               	movf	stoa@i+1,w
  8711  2D39  3A80               	xorlw	128
  8712  2D3A  00FA               	movwf	??_stoa
  8713  2D3B  0832               	movf	stoa@p+1,w
  8714  2D3C  3A80               	xorlw	128
  8715  2D3D  027A               	subwf	??_stoa,w
  8716  2D3E  1D03               	skipz
  8717  2D3F  2D42               	goto	u4845
  8718  2D40  0831               	movf	stoa@p,w
  8719  2D41  022B               	subwf	stoa@i,w
  8720  2D42                     u4845:	
  8721  2D42  1803               	btfsc	3,0
  8722  2D43  2D61               	goto	l810
  8723                           
  8724                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  8725  2D44  0020               	movlb	0	; select bank0
  8726  2D45  082F               	movf	stoa@cp,w
  8727  2D46  0086               	movwf	6
  8728  2D47  0830               	movf	stoa@cp+1,w
  8729  2D48  0087               	movwf	7
  8730  2D49  0801               	movf	1,w
  8731  2D4A  00FA               	movwf	??_stoa
  8732  2D4B  01FB               	clrf	??_stoa+1
  8733  2D4C  087A               	movf	??_stoa,w
  8734  2D4D  00F1               	movwf	fputc@c
  8735  2D4E  087B               	movf	??_stoa+1,w
  8736  2D4F  00F2               	movwf	fputc@c+1
  8737  2D50  0821               	movf	stoa@fp+1,w
  8738  2D51  00F4               	movwf	fputc@fp+1
  8739  2D52  0820               	movf	stoa@fp,w
  8740  2D53  00F3               	movwf	fputc@fp
  8741  2D54  3198  2000  31AC   	fcall	_fputc
  8742                           
  8743                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  8744  2D57  3001               	movlw	1
  8745  2D58  0020               	movlb	0	; select bank0
  8746  2D59  07AF               	addwf	stoa@cp,f
  8747  2D5A  3000               	movlw	0
  8748  2D5B  3DB0               	addwfc	stoa@cp+1,f
  8749                           
  8750                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  8751  2D5C  3001               	movlw	1
  8752  2D5D  07AB               	addwf	stoa@i,f
  8753  2D5E  3000               	movlw	0
  8754  2D5F  3DAC               	addwfc	stoa@i+1,f
  8755  2D60  2D38               	goto	l4429
  8756  2D61                     l810:	
  8757                           
  8758                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  8759  2D61  0022               	movlb	2	; select bank2
  8760  2D62  186A               	btfsc	_flags^(0+256),0
  8761  2D63  2D76               	goto	l4437
  8762  2D64  2D83               	goto	l4439
  8763  2D65                     l4433:	
  8764                           
  8765                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  8766  2D65  3020               	movlw	32
  8767  2D66  00F1               	movwf	fputc@c
  8768  2D67  3000               	movlw	0
  8769  2D68  00F2               	movwf	fputc@c+1
  8770  2D69  0020               	movlb	0	; select bank0
  8771  2D6A  0821               	movf	stoa@fp+1,w
  8772  2D6B  00F4               	movwf	fputc@fp+1
  8773  2D6C  0820               	movf	stoa@fp,w
  8774  2D6D  00F3               	movwf	fputc@fp
  8775  2D6E  3198  2000  31AC   	fcall	_fputc
  8776                           
  8777                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  8778  2D71  3001               	movlw	1
  8779  2D72  0020               	movlb	0	; select bank0
  8780  2D73  07B3               	addwf	stoa@l,f
  8781  2D74  3000               	movlw	0
  8782  2D75  3DB4               	addwfc	stoa@l+1,f
  8783  2D76                     l4437:	
  8784                           
  8785                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  8786  2D76  0020               	movlb	0	; select bank0
  8787  2D77  0834               	movf	stoa@l+1,w
  8788  2D78  3A80               	xorlw	128
  8789  2D79  00FA               	movwf	??_stoa
  8790  2D7A  082E               	movf	stoa@w+1,w
  8791  2D7B  3A80               	xorlw	128
  8792  2D7C  027A               	subwf	??_stoa,w
  8793  2D7D  1D03               	skipz
  8794  2D7E  2D81               	goto	u4865
  8795  2D7F  082D               	movf	stoa@w,w
  8796  2D80  0233               	subwf	stoa@l,w
  8797  2D81                     u4865:	
  8798  2D81  1C03               	skipc
  8799  2D82  2D65               	goto	l4433
  8800  2D83                     l4439:	
  8801                           
  8802                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  8803  2D83  0020               	movlb	0	; select bank0
  8804  2D84  0834               	movf	stoa@l+1,w
  8805  2D85  00A1               	movwf	?_stoa+1
  8806  2D86  0833               	movf	stoa@l,w
  8807  2D87  00A0               	movwf	?_stoa
  8808  2D88  0008               	return
  8809  2D89                     __end_of_stoa:	
  8810                           
  8811                           	psect	text18
  8812  22F5                     __ptext18:	
  8813 ;; *************** function _otoa *****************
  8814 ;; Defined at:
  8815 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8816 ;; Parameters:    Size  Location     Type
  8817 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  8818 ;;		 -> vsnprintf@f(6), 
  8819 ;;  d               8   18[BANK0 ] unsigned long long 
  8820 ;; Auto vars:     Size  Location     Type
  8821 ;;  n               8   40[BANK0 ] unsigned long long 
  8822 ;;  i               2   48[BANK0 ] int 
  8823 ;;  w               2   38[BANK0 ] int 
  8824 ;;  t               2   36[BANK0 ] int 
  8825 ;;  p               2   34[BANK0 ] int 
  8826 ;; Return value:  Size  Location     Type
  8827 ;;                  2   16[BANK0 ] int 
  8828 ;; Registers used:
  8829 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8830 ;; Tracked objects:
  8831 ;;		On entry : 0/0
  8832 ;;		On exit  : 0/0
  8833 ;;		Unchanged: 0/0
  8834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8835 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8836 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8837 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8838 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8839 ;;Total ram usage:       34 bytes
  8840 ;; Hardware stack levels used:    1
  8841 ;; Hardware stack levels required when called:    5
  8842 ;; This function calls:
  8843 ;;		_pad
  8844 ;; This function is called by:
  8845 ;;		_vfpfcnvrt
  8846 ;; This function uses a non-reentrant model
  8847 ;;
  8848                           
  8849                           
  8850                           ;psect for function _otoa
  8851  22F5                     _otoa:	
  8852                           
  8853                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  8854                           
  8855                           ;incstack = 0
  8856                           ; Regs used in _otoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8857  22F5  0022               	movlb	2	; select bank2
  8858  22F6  1BE9               	btfsc	(_prec+1)^(0+256),7
  8859  22F7  2AFC               	goto	l779
  8860                           
  8861                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  8862  22F8  30FD               	movlw	253
  8863  22F9  05EA               	andwf	_flags^(0+256),f
  8864  22FA  30FF               	movlw	255
  8865  22FB  05EB               	andwf	(_flags+1)^(0+256),f
  8866  22FC                     l779:	
  8867                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 515:     }
  8868                           
  8869                           
  8870                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  8871  22FC  0869               	movf	(_prec+1)^(0+256),w
  8872  22FD  3A80               	xorlw	128
  8873  22FE  0020               	movlb	0	; select bank0
  8874  22FF  00BA               	movwf	??_otoa
  8875  2300  3080               	movlw	128
  8876  2301  023A               	subwf	??_otoa,w
  8877  2302  1D03               	skipz
  8878  2303  2B07               	goto	u8075
  8879  2304  3001               	movlw	1
  8880  2305  0022               	movlb	2	; select bank2
  8881  2306  0268               	subwf	_prec^(0+256),w
  8882  2307                     u8075:	
  8883  2307  1803               	skipnc
  8884  2308  2B0F               	goto	l6579
  8885  2309  3001               	movlw	1
  8886  230A  0020               	movlb	0	; select bank0
  8887  230B  00C2               	movwf	otoa@p
  8888  230C  3000               	movlw	0
  8889  230D  00C3               	movwf	otoa@p+1
  8890  230E  2B17               	goto	l783
  8891  230F                     l6579:	
  8892  230F  0022               	movlb	2	; select bank2
  8893  2310  0869               	movf	(_prec+1)^(0+256),w
  8894  2311  0020               	movlb	0	; select bank0
  8895  2312  00C3               	movwf	otoa@p+1
  8896  2313  0022               	movlb	2	; select bank2
  8897  2314  0868               	movf	_prec^(0+256),w
  8898  2315  0020               	movlb	0	; select bank0
  8899  2316  00C2               	movwf	otoa@p
  8900  2317                     l783:	
  8901                           
  8902                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  8903  2317  0022               	movlb	2	; select bank2
  8904  2318  0867               	movf	(_width+1)^(0+256),w
  8905  2319  0020               	movlb	0	; select bank0
  8906  231A  00C7               	movwf	otoa@w+1
  8907  231B  0022               	movlb	2	; select bank2
  8908  231C  0866               	movf	_width^(0+256),w
  8909  231D  0020               	movlb	0	; select bank0
  8910  231E  00C6               	movwf	otoa@w
  8911                           
  8912                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  8913  231F  0832               	movf	otoa@d,w
  8914  2320  00C8               	movwf	otoa@n
  8915  2321  0833               	movf	otoa@d+1,w
  8916  2322  00C9               	movwf	otoa@n+1
  8917  2323  0834               	movf	otoa@d+2,w
  8918  2324  00CA               	movwf	otoa@n+2
  8919  2325  0835               	movf	otoa@d+3,w
  8920  2326  00CB               	movwf	otoa@n+3
  8921  2327  0836               	movf	otoa@d+4,w
  8922  2328  00CC               	movwf	otoa@n+4
  8923  2329  0837               	movf	otoa@d+5,w
  8924  232A  00CD               	movwf	otoa@n+5
  8925  232B  0838               	movf	otoa@d+6,w
  8926  232C  00CE               	movwf	otoa@n+6
  8927  232D  0839               	movf	otoa@d+7,w
  8928  232E  00CF               	movwf	otoa@n+7
  8929                           
  8930                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  8931  232F  301F               	movlw	31
  8932  2330  00D0               	movwf	otoa@i
  8933  2331  3000               	movlw	0
  8934  2332  00D1               	movwf	otoa@i+1
  8935                           
  8936                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  8937  2333  0024               	movlb	4	; select bank4
  8938  2334  01BF               	clrf	(_dbuf^(0+512)+31)
  8939                           
  8940                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  8941  2335  0020               	movlb	0	; select bank0
  8942  2336  01C4               	clrf	otoa@t
  8943  2337  01C5               	clrf	otoa@t+1
  8944                           
  8945                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8946  2338  2BAC               	goto	l784
  8947  2339                     l6597:	
  8948  2339  0020               	movlb	0	; select bank0
  8949  233A  0848               	movf	otoa@n,w
  8950  233B  0449               	iorwf	otoa@n+1,w
  8951  233C  044A               	iorwf	otoa@n+2,w
  8952  233D  044B               	iorwf	otoa@n+3,w
  8953  233E  044C               	iorwf	otoa@n+4,w
  8954  233F  044D               	iorwf	otoa@n+5,w
  8955  2340  044E               	iorwf	otoa@n+6,w
  8956  2341  044F               	iorwf	otoa@n+7,w
  8957  2342  1D03               	skipz
  8958  2343  2B5E               	goto	l6587
  8959  2344  0843               	movf	otoa@p+1,w
  8960  2345  3A80               	xorlw	128
  8961  2346  00BA               	movwf	??_otoa
  8962  2347  3080               	movlw	128
  8963  2348  023A               	subwf	??_otoa,w
  8964  2349  1D03               	skipz
  8965  234A  2B4D               	goto	u8115
  8966  234B  3001               	movlw	1
  8967  234C  0242               	subwf	otoa@p,w
  8968  234D                     u8115:	
  8969  234D  1803               	skipnc
  8970  234E  2B5E               	goto	l6587
  8971  234F  0020               	movlb	0	; select bank0
  8972  2350  0847               	movf	otoa@w+1,w
  8973  2351  3A80               	xorlw	128
  8974  2352  00BA               	movwf	??_otoa
  8975  2353  3080               	movlw	128
  8976  2354  023A               	subwf	??_otoa,w
  8977  2355  1D03               	skipz
  8978  2356  2B59               	goto	u8125
  8979  2357  3001               	movlw	1
  8980  2358  0246               	subwf	otoa@w,w
  8981  2359                     u8125:	
  8982  2359  1C03               	skipc
  8983  235A  2BB7               	goto	l790
  8984  235B  0022               	movlb	2	; select bank2
  8985  235C  1CEA               	btfss	_flags^(0+256),1
  8986  235D  2BB7               	goto	l790
  8987  235E                     l6587:	
  8988                           
  8989                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  8990  235E  30FF               	movlw	255
  8991  235F  0020               	movlb	0	; select bank0
  8992  2360  07D0               	addwf	otoa@i,f
  8993  2361  30FF               	movlw	255
  8994  2362  3DD1               	addwfc	otoa@i+1,f
  8995                           
  8996                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  8997  2363  3007               	movlw	7
  8998  2364  0548               	andwf	otoa@n,w
  8999  2365  00C4               	movwf	otoa@t
  9000  2366  3000               	movlw	0
  9001  2367  0549               	andwf	otoa@n+1,w
  9002  2368  00C5               	movwf	otoa@t+1
  9003                           
  9004                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  9005  2369  0844               	movf	otoa@t,w
  9006  236A  3E30               	addlw	48
  9007  236B  00BA               	movwf	??_otoa
  9008  236C  0850               	movf	otoa@i,w
  9009  236D  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9010  236E  0086               	movwf	6
  9011  236F  3002               	movlw	2	; select bank4/5
  9012  2370  0087               	movwf	7
  9013  2371  083A               	movf	??_otoa,w
  9014  2372  0081               	movwf	1
  9015                           
  9016                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  9017  2373  30FF               	movlw	255
  9018  2374  07C2               	addwf	otoa@p,f
  9019  2375  30FF               	movlw	255
  9020  2376  3DC3               	addwfc	otoa@p+1,f
  9021                           
  9022                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  9023  2377  30FF               	movlw	255
  9024  2378  07C6               	addwf	otoa@w,f
  9025  2379  30FF               	movlw	255
  9026  237A  3DC7               	addwfc	otoa@w+1,f
  9027                           
  9028                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  9029  237B  3048               	movlw	low otoa@n
  9030  237C  0086               	movwf	6
  9031  237D  3000               	movlw	high otoa@n
  9032  237E  0087               	movwf	7
  9033  237F  3F40               	moviw [0]fsr1
  9034  2380  00BA               	movwf	??_otoa
  9035  2381  3F41               	moviw [1]fsr1
  9036  2382  00BB               	movwf	??_otoa+1
  9037  2383  3F42               	moviw [2]fsr1
  9038  2384  00BC               	movwf	??_otoa+2
  9039  2385  3F43               	moviw [3]fsr1
  9040  2386  00BD               	movwf	??_otoa+3
  9041  2387  3F44               	moviw [4]fsr1
  9042  2388  00BE               	movwf	??_otoa+4
  9043  2389  3F45               	moviw [5]fsr1
  9044  238A  00BF               	movwf	??_otoa+5
  9045  238B  3F46               	moviw [6]fsr1
  9046  238C  00C0               	movwf	??_otoa+6
  9047  238D  3F47               	moviw [7]fsr1
  9048  238E  00C1               	movwf	??_otoa+7
  9049  238F  3003               	movlw	3
  9050  2390                     u8085:	
  9051  2390  0020               	movlb	0	; select bank0
  9052  2391  36C1               	lsrf	??_otoa+7,f
  9053  2392  0CC0               	rrf	??_otoa+6,f
  9054  2393  0CBF               	rrf	??_otoa+5,f
  9055  2394  0CBE               	rrf	??_otoa+4,f
  9056  2395  0CBD               	rrf	??_otoa+3,f
  9057  2396  0CBC               	rrf	??_otoa+2,f
  9058  2397  0CBB               	rrf	??_otoa+1,f
  9059  2398  0CBA               	rrf	??_otoa,f
  9060  2399  0B89               	decfsz	9,f
  9061  239A  2B90               	goto	u8085
  9062  239B  0020               	movlb	0	; select bank0
  9063  239C  0841               	movf	??_otoa+7,w
  9064  239D  00CF               	movwf	otoa@n+7
  9065  239E  0840               	movf	??_otoa+6,w
  9066  239F  00CE               	movwf	otoa@n+6
  9067  23A0  083F               	movf	??_otoa+5,w
  9068  23A1  00CD               	movwf	otoa@n+5
  9069  23A2  083E               	movf	??_otoa+4,w
  9070  23A3  00CC               	movwf	otoa@n+4
  9071  23A4  083D               	movf	??_otoa+3,w
  9072  23A5  00CB               	movwf	otoa@n+3
  9073  23A6  083C               	movf	??_otoa+2,w
  9074  23A7  00CA               	movwf	otoa@n+2
  9075  23A8  083B               	movf	??_otoa+1,w
  9076  23A9  00C9               	movwf	otoa@n+1
  9077  23AA  083A               	movf	??_otoa,w
  9078  23AB  00C8               	movwf	otoa@n
  9079  23AC                     l784:	
  9080                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 531:     }
  9081                           
  9082                           
  9083                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9084  23AC  0851               	movf	otoa@i+1,w
  9085  23AD  3A80               	xorlw	128
  9086  23AE  00BA               	movwf	??_otoa
  9087  23AF  3080               	movlw	128
  9088  23B0  023A               	subwf	??_otoa,w
  9089  23B1  1D03               	skipz
  9090  23B2  2BB5               	goto	u8095
  9091  23B3  3001               	movlw	1
  9092  23B4  0250               	subwf	otoa@i,w
  9093  23B5                     u8095:	
  9094  23B5  1803               	btfsc	3,0
  9095  23B6  2B39               	goto	l6597
  9096  23B7                     l790:	
  9097                           
  9098                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  9099  23B7  0022               	movlb	2	; select bank2
  9100  23B8  1E6A               	btfss	_flags^(0+256),4
  9101  23B9  2BD0               	goto	l6613
  9102  23BA  0020               	movlb	0	; select bank0
  9103  23BB  0844               	movf	otoa@t,w
  9104  23BC  0445               	iorwf	otoa@t+1,w
  9105  23BD  1903               	btfsc	3,2
  9106  23BE  2BD0               	goto	l6613
  9107                           
  9108                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  9109  23BF  30FF               	movlw	255
  9110  23C0  07D0               	addwf	otoa@i,f
  9111  23C1  30FF               	movlw	255
  9112  23C2  3DD1               	addwfc	otoa@i+1,f
  9113                           
  9114                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  9115  23C3  3030               	movlw	48
  9116  23C4  00BA               	movwf	??_otoa
  9117  23C5  0850               	movf	otoa@i,w
  9118  23C6  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9119  23C7  0086               	movwf	6
  9120  23C8  3002               	movlw	2	; select bank4/5
  9121  23C9  0087               	movwf	7
  9122  23CA  083A               	movf	??_otoa,w
  9123  23CB  0081               	movwf	1
  9124                           
  9125                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  9126  23CC  30FF               	movlw	255
  9127  23CD  07C6               	addwf	otoa@w,f
  9128  23CE  30FF               	movlw	255
  9129  23CF  3DC7               	addwfc	otoa@w+1,f
  9130  23D0                     l6613:	
  9131                           
  9132                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  9133  23D0  0020               	movlb	0	; select bank0
  9134  23D1  0831               	movf	otoa@fp+1,w
  9135  23D2  00A7               	movwf	pad@fp+1
  9136  23D3  0830               	movf	otoa@fp,w
  9137  23D4  00A6               	movwf	pad@fp
  9138  23D5  0850               	movf	otoa@i,w
  9139  23D6  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9140  23D7  00BA               	movwf	??_otoa
  9141  23D8  083A               	movf	??_otoa,w
  9142  23D9  00A8               	movwf	pad@buf
  9143  23DA  0847               	movf	otoa@w+1,w
  9144  23DB  00AA               	movwf	pad@p+1
  9145  23DC  0846               	movf	otoa@w,w
  9146  23DD  00A9               	movwf	pad@p
  9147  23DE  31B5  2587         	fcall	_pad
  9148  23E0  0020               	movlb	0	; select bank0
  9149  23E1  0827               	movf	?_pad+1,w
  9150  23E2  00B1               	movwf	?_otoa+1
  9151  23E3  0826               	movf	?_pad,w
  9152  23E4  00B0               	movwf	?_otoa
  9153  23E5  0008               	return
  9154  23E6                     __end_of_otoa:	
  9155                           
  9156                           	psect	text19
  9157  1854                     __ptext19:	
  9158 ;; *************** function _dtoa *****************
  9159 ;; Defined at:
  9160 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9161 ;; Parameters:    Size  Location     Type
  9162 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  9163 ;;		 -> vsnprintf@f(6), 
  9164 ;;  d               8   18[BANK0 ] long long 
  9165 ;; Auto vars:     Size  Location     Type
  9166 ;;  n               8   37[BANK0 ] long long 
  9167 ;;  i               2   45[BANK0 ] int 
  9168 ;;  s               2   35[BANK0 ] int 
  9169 ;;  w               2   33[BANK0 ] int 
  9170 ;;  p               2   31[BANK0 ] int 
  9171 ;; Return value:  Size  Location     Type
  9172 ;;                  2   16[BANK0 ] int 
  9173 ;; Registers used:
  9174 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9175 ;; Tracked objects:
  9176 ;;		On entry : 0/0
  9177 ;;		On exit  : 0/0
  9178 ;;		Unchanged: 0/0
  9179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9180 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9181 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9182 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9183 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9184 ;;Total ram usage:       31 bytes
  9185 ;; Hardware stack levels used:    1
  9186 ;; Hardware stack levels required when called:    5
  9187 ;; This function calls:
  9188 ;;		___aodiv
  9189 ;;		___aomod
  9190 ;;		_abs
  9191 ;;		_pad
  9192 ;; This function is called by:
  9193 ;;		_vfpfcnvrt
  9194 ;; This function uses a non-reentrant model
  9195 ;;
  9196                           
  9197                           
  9198                           ;psect for function _dtoa
  9199  1854                     _dtoa:	
  9200                           
  9201                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  9202                           
  9203                           ;incstack = 0
  9204                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9205  1854  0020               	movlb	0	; select bank0
  9206  1855  0832               	movf	dtoa@d,w
  9207  1856  00C5               	movwf	dtoa@n
  9208  1857  0833               	movf	dtoa@d+1,w
  9209  1858  00C6               	movwf	dtoa@n+1
  9210  1859  0834               	movf	dtoa@d+2,w
  9211  185A  00C7               	movwf	dtoa@n+2
  9212  185B  0835               	movf	dtoa@d+3,w
  9213  185C  00C8               	movwf	dtoa@n+3
  9214  185D  0836               	movf	dtoa@d+4,w
  9215  185E  00C9               	movwf	dtoa@n+4
  9216  185F  0837               	movf	dtoa@d+5,w
  9217  1860  00CA               	movwf	dtoa@n+5
  9218  1861  0838               	movf	dtoa@d+6,w
  9219  1862  00CB               	movwf	dtoa@n+6
  9220  1863  0839               	movf	dtoa@d+7,w
  9221  1864  00CC               	movwf	dtoa@n+7
  9222                           
  9223                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  9224  1865  3045               	movlw	low dtoa@n
  9225  1866  0086               	movwf	6
  9226  1867  3000               	movlw	high dtoa@n
  9227  1868  0087               	movwf	7
  9228  1869  3F47               	moviw [7]fsr1
  9229  186A  00BA               	movwf	??_dtoa
  9230  186B  1FBA               	btfss	??_dtoa,7
  9231  186C  286F               	goto	u7900
  9232  186D  3001               	movlw	1
  9233  186E  2870               	goto	u7910
  9234  186F                     u7900:	
  9235  186F  3000               	movlw	0
  9236  1870                     u7910:	
  9237  1870  0020               	movlb	0	; select bank0
  9238  1871  00BB               	movwf	??_dtoa+1
  9239  1872  01BC               	clrf	??_dtoa+2
  9240  1873  083B               	movf	??_dtoa+1,w
  9241  1874  00C3               	movwf	dtoa@s
  9242  1875  083C               	movf	??_dtoa+2,w
  9243  1876  00C4               	movwf	dtoa@s+1
  9244                           
  9245                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  9246  1877  0843               	movf	dtoa@s,w
  9247  1878  0444               	iorwf	dtoa@s+1,w
  9248  1879  1903               	btfsc	3,2
  9249  187A  2899               	goto	l753
  9250                           
  9251                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  9252  187B  09C5               	comf	dtoa@n,f
  9253  187C  09C6               	comf	dtoa@n+1,f
  9254  187D  09C7               	comf	dtoa@n+2,f
  9255  187E  09C8               	comf	dtoa@n+3,f
  9256  187F  09C9               	comf	dtoa@n+4,f
  9257  1880  09CA               	comf	dtoa@n+5,f
  9258  1881  09CB               	comf	dtoa@n+6,f
  9259  1882  09CC               	comf	dtoa@n+7,f
  9260  1883  0AC5               	incf	dtoa@n,f
  9261  1884  1D03               	skipz
  9262  1885  2899               	goto	l753
  9263  1886  0AC6               	incf	dtoa@n+1,f
  9264  1887  1D03               	skipz
  9265  1888  2899               	goto	l753
  9266  1889  0AC7               	incf	dtoa@n+2,f
  9267  188A  1D03               	skipz
  9268  188B  2899               	goto	l753
  9269  188C  0AC8               	incf	dtoa@n+3,f
  9270  188D  1D03               	skipz
  9271  188E  2899               	goto	l753
  9272  188F  0AC9               	incf	dtoa@n+4,f
  9273  1890  1D03               	skipz
  9274  1891  2899               	goto	l753
  9275  1892  0ACA               	incf	dtoa@n+5,f
  9276  1893  1D03               	skipz
  9277  1894  2899               	goto	l753
  9278  1895  0ACB               	incf	dtoa@n+6,f
  9279  1896  1D03               	skipz
  9280  1897  2899               	goto	l753
  9281  1898  0ACC               	incf	dtoa@n+7,f
  9282  1899                     l753:	
  9283                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
  9284                           
  9285                           
  9286                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  9287  1899  0022               	movlb	2	; select bank2
  9288  189A  1BE9               	btfsc	(_prec+1)^(0+256),7
  9289  189B  28A0               	goto	l754
  9290                           
  9291                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  9292  189C  30FD               	movlw	253
  9293  189D  05EA               	andwf	_flags^(0+256),f
  9294  189E  30FF               	movlw	255
  9295  189F  05EB               	andwf	(_flags+1)^(0+256),f
  9296  18A0                     l754:	
  9297                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
  9298                           
  9299                           
  9300                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  9301  18A0  0869               	movf	(_prec+1)^(0+256),w
  9302  18A1  3A80               	xorlw	128
  9303  18A2  0020               	movlb	0	; select bank0
  9304  18A3  00BA               	movwf	??_dtoa
  9305  18A4  3080               	movlw	128
  9306  18A5  023A               	subwf	??_dtoa,w
  9307  18A6  1D03               	skipz
  9308  18A7  28AB               	goto	u7955
  9309  18A8  3001               	movlw	1
  9310  18A9  0022               	movlb	2	; select bank2
  9311  18AA  0268               	subwf	_prec^(0+256),w
  9312  18AB                     u7955:	
  9313  18AB  1803               	skipnc
  9314  18AC  28B3               	goto	l6527
  9315  18AD  3001               	movlw	1
  9316  18AE  0020               	movlb	0	; select bank0
  9317  18AF  00BF               	movwf	dtoa@p
  9318  18B0  3000               	movlw	0
  9319  18B1  00C0               	movwf	dtoa@p+1
  9320  18B2  28BB               	goto	l758
  9321  18B3                     l6527:	
  9322  18B3  0022               	movlb	2	; select bank2
  9323  18B4  0869               	movf	(_prec+1)^(0+256),w
  9324  18B5  0020               	movlb	0	; select bank0
  9325  18B6  00C0               	movwf	dtoa@p+1
  9326  18B7  0022               	movlb	2	; select bank2
  9327  18B8  0868               	movf	_prec^(0+256),w
  9328  18B9  0020               	movlb	0	; select bank0
  9329  18BA  00BF               	movwf	dtoa@p
  9330  18BB                     l758:	
  9331                           
  9332                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  9333  18BB  0022               	movlb	2	; select bank2
  9334  18BC  0867               	movf	(_width+1)^(0+256),w
  9335  18BD  0020               	movlb	0	; select bank0
  9336  18BE  00C2               	movwf	dtoa@w+1
  9337  18BF  0022               	movlb	2	; select bank2
  9338  18C0  0866               	movf	_width^(0+256),w
  9339  18C1  0020               	movlb	0	; select bank0
  9340  18C2  00C1               	movwf	dtoa@w
  9341                           
  9342                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  9343  18C3  0843               	movf	dtoa@s,w
  9344  18C4  0444               	iorwf	dtoa@s+1,w
  9345  18C5  1D03               	btfss	3,2
  9346  18C6  28CA               	goto	l6533
  9347  18C7  0022               	movlb	2	; select bank2
  9348  18C8  1D6A               	btfss	_flags^(0+256),2
  9349  18C9  28CF               	goto	l759
  9350  18CA                     l6533:	
  9351                           
  9352                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  9353  18CA  30FF               	movlw	255
  9354  18CB  0020               	movlb	0	; select bank0
  9355  18CC  07C1               	addwf	dtoa@w,f
  9356  18CD  30FF               	movlw	255
  9357  18CE  3DC2               	addwfc	dtoa@w+1,f
  9358  18CF                     l759:	
  9359                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
  9360                           
  9361                           
  9362                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  9363  18CF  301F               	movlw	31
  9364  18D0  0020               	movlb	0	; select bank0
  9365  18D1  00CD               	movwf	dtoa@i
  9366  18D2  3000               	movlw	0
  9367  18D3  00CE               	movwf	dtoa@i+1
  9368                           
  9369                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  9370  18D4  0024               	movlb	4	; select bank4
  9371  18D5  01BF               	clrf	(_dbuf^(0+512)+31)
  9372                           
  9373                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9374  18D6  2965               	goto	l762
  9375  18D7                     l6547:	
  9376  18D7  0020               	movlb	0	; select bank0
  9377  18D8  0845               	movf	dtoa@n,w
  9378  18D9  0446               	iorwf	dtoa@n+1,w
  9379  18DA  0447               	iorwf	dtoa@n+2,w
  9380  18DB  0448               	iorwf	dtoa@n+3,w
  9381  18DC  0449               	iorwf	dtoa@n+4,w
  9382  18DD  044A               	iorwf	dtoa@n+5,w
  9383  18DE  044B               	iorwf	dtoa@n+6,w
  9384  18DF  044C               	iorwf	dtoa@n+7,w
  9385  18E0  1D03               	skipz
  9386  18E1  28FC               	goto	l6537
  9387  18E2  0840               	movf	dtoa@p+1,w
  9388  18E3  3A80               	xorlw	128
  9389  18E4  00BA               	movwf	??_dtoa
  9390  18E5  3080               	movlw	128
  9391  18E6  023A               	subwf	??_dtoa,w
  9392  18E7  1D03               	skipz
  9393  18E8  28EB               	goto	u8005
  9394  18E9  3001               	movlw	1
  9395  18EA  023F               	subwf	dtoa@p,w
  9396  18EB                     u8005:	
  9397  18EB  1803               	skipnc
  9398  18EC  28FC               	goto	l6537
  9399  18ED  0020               	movlb	0	; select bank0
  9400  18EE  0842               	movf	dtoa@w+1,w
  9401  18EF  3A80               	xorlw	128
  9402  18F0  00BA               	movwf	??_dtoa
  9403  18F1  3080               	movlw	128
  9404  18F2  023A               	subwf	??_dtoa,w
  9405  18F3  1D03               	skipz
  9406  18F4  28F7               	goto	u8015
  9407  18F5  3001               	movlw	1
  9408  18F6  0241               	subwf	dtoa@w,w
  9409  18F7                     u8015:	
  9410  18F7  1C03               	skipc
  9411  18F8  2971               	goto	l6555
  9412  18F9  0022               	movlb	2	; select bank2
  9413  18FA  1CEA               	btfss	_flags^(0+256),1
  9414  18FB  2971               	goto	l6555
  9415  18FC                     l6537:	
  9416                           
  9417                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  9418  18FC  30FF               	movlw	255
  9419  18FD  0020               	movlb	0	; select bank0
  9420  18FE  07CD               	addwf	dtoa@i,f
  9421  18FF  30FF               	movlw	255
  9422  1900  3DCE               	addwfc	dtoa@i+1,f
  9423                           
  9424                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  9425  1901  300A               	movlw	10
  9426  1902  00A0               	movwf	___aomod@divisor
  9427  1903  01A1               	clrf	___aomod@divisor+1
  9428  1904  01A2               	clrf	___aomod@divisor+2
  9429  1905  01A3               	clrf	___aomod@divisor+3
  9430  1906  01A4               	clrf	___aomod@divisor+4
  9431  1907  01A5               	clrf	___aomod@divisor+5
  9432  1908  01A6               	clrf	___aomod@divisor+6
  9433  1909  01A7               	clrf	___aomod@divisor+7
  9434  190A  0845               	movf	dtoa@n,w
  9435  190B  00A8               	movwf	___aomod@dividend
  9436  190C  0846               	movf	dtoa@n+1,w
  9437  190D  00A9               	movwf	___aomod@dividend+1
  9438  190E  0847               	movf	dtoa@n+2,w
  9439  190F  00AA               	movwf	___aomod@dividend+2
  9440  1910  0848               	movf	dtoa@n+3,w
  9441  1911  00AB               	movwf	___aomod@dividend+3
  9442  1912  0849               	movf	dtoa@n+4,w
  9443  1913  00AC               	movwf	___aomod@dividend+4
  9444  1914  084A               	movf	dtoa@n+5,w
  9445  1915  00AD               	movwf	___aomod@dividend+5
  9446  1916  084B               	movf	dtoa@n+6,w
  9447  1917  00AE               	movwf	___aomod@dividend+6
  9448  1918  084C               	movf	dtoa@n+7,w
  9449  1919  00AF               	movwf	___aomod@dividend+7
  9450  191A  31A1  2138  3198   	fcall	___aomod
  9451  191D  0020               	movlb	0	; select bank0
  9452  191E  0821               	movf	?___aomod+1,w
  9453  191F  00F5               	movwf	abs@a+1
  9454  1920  0820               	movf	?___aomod,w
  9455  1921  00F4               	movwf	abs@a
  9456  1922  31B2  2201  3198   	fcall	_abs
  9457  1925  0874               	movf	?_abs,w
  9458  1926  3E30               	addlw	48
  9459  1927  0020               	movlb	0	; select bank0
  9460  1928  00BA               	movwf	??_dtoa
  9461  1929  084D               	movf	dtoa@i,w
  9462  192A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9463  192B  0086               	movwf	6
  9464  192C  3002               	movlw	2	; select bank4/5
  9465  192D  0087               	movwf	7
  9466  192E  083A               	movf	??_dtoa,w
  9467  192F  0081               	movwf	1
  9468                           
  9469                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  9470  1930  30FF               	movlw	255
  9471  1931  07BF               	addwf	dtoa@p,f
  9472  1932  30FF               	movlw	255
  9473  1933  3DC0               	addwfc	dtoa@p+1,f
  9474                           
  9475                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  9476  1934  30FF               	movlw	255
  9477  1935  07C1               	addwf	dtoa@w,f
  9478  1936  30FF               	movlw	255
  9479  1937  3DC2               	addwfc	dtoa@w+1,f
  9480                           
  9481                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  9482  1938  300A               	movlw	10
  9483  1939  00A0               	movwf	___aodiv@divisor
  9484  193A  01A1               	clrf	___aodiv@divisor+1
  9485  193B  01A2               	clrf	___aodiv@divisor+2
  9486  193C  01A3               	clrf	___aodiv@divisor+3
  9487  193D  01A4               	clrf	___aodiv@divisor+4
  9488  193E  01A5               	clrf	___aodiv@divisor+5
  9489  193F  01A6               	clrf	___aodiv@divisor+6
  9490  1940  01A7               	clrf	___aodiv@divisor+7
  9491  1941  0845               	movf	dtoa@n,w
  9492  1942  00A8               	movwf	___aodiv@dividend
  9493  1943  0846               	movf	dtoa@n+1,w
  9494  1944  00A9               	movwf	___aodiv@dividend+1
  9495  1945  0847               	movf	dtoa@n+2,w
  9496  1946  00AA               	movwf	___aodiv@dividend+2
  9497  1947  0848               	movf	dtoa@n+3,w
  9498  1948  00AB               	movwf	___aodiv@dividend+3
  9499  1949  0849               	movf	dtoa@n+4,w
  9500  194A  00AC               	movwf	___aodiv@dividend+4
  9501  194B  084A               	movf	dtoa@n+5,w
  9502  194C  00AD               	movwf	___aodiv@dividend+5
  9503  194D  084B               	movf	dtoa@n+6,w
  9504  194E  00AE               	movwf	___aodiv@dividend+6
  9505  194F  084C               	movf	dtoa@n+7,w
  9506  1950  00AF               	movwf	___aodiv@dividend+7
  9507  1951  31A3  23E6  3198   	fcall	___aodiv
  9508  1954  0020               	movlb	0	; select bank0
  9509  1955  0820               	movf	?___aodiv,w
  9510  1956  00C5               	movwf	dtoa@n
  9511  1957  0821               	movf	?___aodiv+1,w
  9512  1958  00C6               	movwf	dtoa@n+1
  9513  1959  0822               	movf	?___aodiv+2,w
  9514  195A  00C7               	movwf	dtoa@n+2
  9515  195B  0823               	movf	?___aodiv+3,w
  9516  195C  00C8               	movwf	dtoa@n+3
  9517  195D  0824               	movf	?___aodiv+4,w
  9518  195E  00C9               	movwf	dtoa@n+4
  9519  195F  0825               	movf	?___aodiv+5,w
  9520  1960  00CA               	movwf	dtoa@n+5
  9521  1961  0826               	movf	?___aodiv+6,w
  9522  1962  00CB               	movwf	dtoa@n+6
  9523  1963  0827               	movf	?___aodiv+7,w
  9524  1964  00CC               	movwf	dtoa@n+7
  9525  1965                     l762:	
  9526                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
  9527                           
  9528                           
  9529                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9530  1965  0020               	movlb	0	; select bank0
  9531  1966  084E               	movf	dtoa@i+1,w
  9532  1967  3A80               	xorlw	128
  9533  1968  00BA               	movwf	??_dtoa
  9534  1969  3080               	movlw	128
  9535  196A  023A               	subwf	??_dtoa,w
  9536  196B  1D03               	skipz
  9537  196C  296F               	goto	u7985
  9538  196D  3001               	movlw	1
  9539  196E  024D               	subwf	dtoa@i,w
  9540  196F                     u7985:	
  9541  196F  1803               	btfsc	3,0
  9542  1970  28D7               	goto	l6547
  9543  1971                     l6555:	
  9544                           
  9545                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  9546  1971  0020               	movlb	0	; select bank0
  9547  1972  0843               	movf	dtoa@s,w
  9548  1973  0444               	iorwf	dtoa@s+1,w
  9549  1974  1D03               	btfss	3,2
  9550  1975  2979               	goto	l6559
  9551  1976  0022               	movlb	2	; select bank2
  9552  1977  1D6A               	btfss	_flags^(0+256),2
  9553  1978  2991               	goto	l6569
  9554  1979                     l6559:	
  9555                           
  9556                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  9557  1979  30FF               	movlw	255
  9558  197A  0020               	movlb	0	; select bank0
  9559  197B  07CD               	addwf	dtoa@i,f
  9560  197C  30FF               	movlw	255
  9561  197D  3DCE               	addwfc	dtoa@i+1,f
  9562                           
  9563                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  9564  197E  0843               	movf	dtoa@s,w
  9565  197F  0444               	iorwf	dtoa@s+1,w
  9566  1980  1D03               	btfss	3,2
  9567  1981  2984               	goto	l6565
  9568  1982  302B               	movlw	43
  9569  1983  2985               	goto	L2
  9570  1984                     l6565:	
  9571  1984  302D               	movlw	45
  9572  1985                     L2:	
  9573  1985  00BD               	movwf	_dtoa$1262
  9574  1986  3000               	movlw	0
  9575  1987  00BE               	movwf	_dtoa$1262+1
  9576  1988  083D               	movf	_dtoa$1262,w
  9577  1989  00BA               	movwf	??_dtoa
  9578  198A  084D               	movf	dtoa@i,w
  9579  198B  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9580  198C  0086               	movwf	6
  9581  198D  3002               	movlw	2	; select bank4/5
  9582  198E  0087               	movwf	7
  9583  198F  083A               	movf	??_dtoa,w
  9584  1990  0081               	movwf	1
  9585  1991                     l6569:	
  9586                           
  9587                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  9588  1991  0020               	movlb	0	; select bank0
  9589  1992  0831               	movf	dtoa@fp+1,w
  9590  1993  00A7               	movwf	pad@fp+1
  9591  1994  0830               	movf	dtoa@fp,w
  9592  1995  00A6               	movwf	pad@fp
  9593  1996  084D               	movf	dtoa@i,w
  9594  1997  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9595  1998  00BA               	movwf	??_dtoa
  9596  1999  083A               	movf	??_dtoa,w
  9597  199A  00A8               	movwf	pad@buf
  9598  199B  0842               	movf	dtoa@w+1,w
  9599  199C  00AA               	movwf	pad@p+1
  9600  199D  0841               	movf	dtoa@w,w
  9601  199E  00A9               	movwf	pad@p
  9602  199F  31B5  2587         	fcall	_pad
  9603  19A1  0020               	movlb	0	; select bank0
  9604  19A2  0827               	movf	?_pad+1,w
  9605  19A3  00B1               	movwf	?_dtoa+1
  9606  19A4  0826               	movf	?_pad,w
  9607  19A5  00B0               	movwf	?_dtoa
  9608  19A6  0008               	return
  9609  19A7                     __end_of_dtoa:	
  9610                           
  9611                           	psect	text20
  9612  3201                     __ptext20:	
  9613 ;; *************** function _abs *****************
  9614 ;; Defined at:
  9615 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  9616 ;; Parameters:    Size  Location     Type
  9617 ;;  a               2    4[COMMON] int 
  9618 ;; Auto vars:     Size  Location     Type
  9619 ;;		None
  9620 ;; Return value:  Size  Location     Type
  9621 ;;                  2    4[COMMON] int 
  9622 ;; Registers used:
  9623 ;;		wreg, status,2, status,0
  9624 ;; Tracked objects:
  9625 ;;		On entry : 0/0
  9626 ;;		On exit  : 0/0
  9627 ;;		Unchanged: 0/0
  9628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9629 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9631 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9632 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9633 ;;Total ram usage:        4 bytes
  9634 ;; Hardware stack levels used:    1
  9635 ;; Hardware stack levels required when called:    1
  9636 ;; This function calls:
  9637 ;;		Nothing
  9638 ;; This function is called by:
  9639 ;;		_dtoa
  9640 ;; This function uses a non-reentrant model
  9641 ;;
  9642                           
  9643                           
  9644                           ;psect for function _abs
  9645  3201                     _abs:	
  9646                           
  9647                           ;incstack = 0
  9648                           ; Regs used in _abs: [wreg+status,2+status,0]
  9649  3201  0875               	movf	abs@a+1,w
  9650  3202  3A80               	xorlw	128
  9651  3203  00F6               	movwf	??_abs
  9652  3204  3080               	movlw	128
  9653  3205  0276               	subwf	??_abs,w
  9654  3206  1D03               	skipz
  9655  3207  2A0A               	goto	u4055
  9656  3208  3001               	movlw	1
  9657  3209  0274               	subwf	abs@a,w
  9658  320A                     u4055:	
  9659  320A  1803               	skipnc
  9660  320B  0008               	return
  9661  320C  0974               	comf	abs@a,w
  9662  320D  00F6               	movwf	??_abs
  9663  320E  0975               	comf	abs@a+1,w
  9664  320F  00F7               	movwf	??_abs+1
  9665  3210  0AF6               	incf	??_abs,f
  9666  3211  1903               	skipnz
  9667  3212  0AF7               	incf	??_abs+1,f
  9668  3213  0876               	movf	??_abs,w
  9669  3214  00F4               	movwf	?_abs
  9670  3215  0877               	movf	??_abs+1,w
  9671  3216  00F5               	movwf	?_abs+1
  9672  3217  0008               	return
  9673  3218                     __end_of_abs:	
  9674                           
  9675                           	psect	text21
  9676  2138                     __ptext21:	
  9677 ;; *************** function ___aomod *****************
  9678 ;; Defined at:
  9679 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  9680 ;; Parameters:    Size  Location     Type
  9681 ;;  divisor         8    0[BANK0 ] long long 
  9682 ;;  dividend        8    8[BANK0 ] long long 
  9683 ;; Auto vars:     Size  Location     Type
  9684 ;;  sign            1    3[COMMON] unsigned char 
  9685 ;;  counter         1    2[COMMON] unsigned char 
  9686 ;; Return value:  Size  Location     Type
  9687 ;;                  8    0[BANK0 ] long long 
  9688 ;; Registers used:
  9689 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9690 ;; Tracked objects:
  9691 ;;		On entry : 0/0
  9692 ;;		On exit  : 0/0
  9693 ;;		Unchanged: 0/0
  9694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9695 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9696 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9697 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9698 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9699 ;;Total ram usage:       19 bytes
  9700 ;; Hardware stack levels used:    1
  9701 ;; Hardware stack levels required when called:    1
  9702 ;; This function calls:
  9703 ;;		Nothing
  9704 ;; This function is called by:
  9705 ;;		_dtoa
  9706 ;; This function uses a non-reentrant model
  9707 ;;
  9708                           
  9709                           
  9710                           ;psect for function ___aomod
  9711  2138                     ___aomod:	
  9712                           
  9713                           ;incstack = 0
  9714                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  9715  2138  01F3               	clrf	___aomod@sign
  9716  2139  3028               	movlw	low ___aomod@dividend
  9717  213A  0086               	movwf	6
  9718  213B  3000               	movlw	high ___aomod@dividend
  9719  213C  0087               	movwf	7
  9720  213D  3F47               	moviw [7]fsr1
  9721  213E  00F1               	movwf	??___aomod
  9722  213F  1FF1               	btfss	??___aomod,7
  9723  2140  2962               	goto	l4203
  9724  2141  0020               	movlb	0	; select bank0
  9725  2142  09A8               	comf	___aomod@dividend,f
  9726  2143  09A9               	comf	___aomod@dividend+1,f
  9727  2144  09AA               	comf	___aomod@dividend+2,f
  9728  2145  09AB               	comf	___aomod@dividend+3,f
  9729  2146  09AC               	comf	___aomod@dividend+4,f
  9730  2147  09AD               	comf	___aomod@dividend+5,f
  9731  2148  09AE               	comf	___aomod@dividend+6,f
  9732  2149  09AF               	comf	___aomod@dividend+7,f
  9733  214A  0AA8               	incf	___aomod@dividend,f
  9734  214B  1D03               	skipz
  9735  214C  2960               	goto	u431lld
  9736  214D  0AA9               	incf	___aomod@dividend+1,f
  9737  214E  1D03               	skipz
  9738  214F  2960               	goto	u431lld
  9739  2150  0AAA               	incf	___aomod@dividend+2,f
  9740  2151  1D03               	skipz
  9741  2152  2960               	goto	u431lld
  9742  2153  0AAB               	incf	___aomod@dividend+3,f
  9743  2154  1D03               	skipz
  9744  2155  2960               	goto	u431lld
  9745  2156  0AAC               	incf	___aomod@dividend+4,f
  9746  2157  1D03               	skipz
  9747  2158  2960               	goto	u431lld
  9748  2159  0AAD               	incf	___aomod@dividend+5,f
  9749  215A  1D03               	skipz
  9750  215B  2960               	goto	u431lld
  9751  215C  0AAE               	incf	___aomod@dividend+6,f
  9752  215D  1D03               	skipz
  9753  215E  2960               	goto	u431lld
  9754  215F  0AAF               	incf	___aomod@dividend+7,f
  9755  2160                     u431lld:	
  9756  2160  01F3               	clrf	___aomod@sign
  9757  2161  0AF3               	incf	___aomod@sign,f
  9758  2162                     l4203:	
  9759  2162  3020               	movlw	low ___aomod@divisor
  9760  2163  0086               	movwf	6
  9761  2164  3000               	movlw	high ___aomod@divisor
  9762  2165  0087               	movwf	7
  9763  2166  3F47               	moviw [7]fsr1
  9764  2167  00F1               	movwf	??___aomod
  9765  2168  1FF1               	btfss	??___aomod,7
  9766  2169  2989               	goto	l4207
  9767  216A  0020               	movlb	0	; select bank0
  9768  216B  09A0               	comf	___aomod@divisor,f
  9769  216C  09A1               	comf	___aomod@divisor+1,f
  9770  216D  09A2               	comf	___aomod@divisor+2,f
  9771  216E  09A3               	comf	___aomod@divisor+3,f
  9772  216F  09A4               	comf	___aomod@divisor+4,f
  9773  2170  09A5               	comf	___aomod@divisor+5,f
  9774  2171  09A6               	comf	___aomod@divisor+6,f
  9775  2172  09A7               	comf	___aomod@divisor+7,f
  9776  2173  0AA0               	incf	___aomod@divisor,f
  9777  2174  1D03               	skipz
  9778  2175  2989               	goto	l4207
  9779  2176  0AA1               	incf	___aomod@divisor+1,f
  9780  2177  1D03               	skipz
  9781  2178  2989               	goto	l4207
  9782  2179  0AA2               	incf	___aomod@divisor+2,f
  9783  217A  1D03               	skipz
  9784  217B  2989               	goto	l4207
  9785  217C  0AA3               	incf	___aomod@divisor+3,f
  9786  217D  1D03               	skipz
  9787  217E  2989               	goto	l4207
  9788  217F  0AA4               	incf	___aomod@divisor+4,f
  9789  2180  1D03               	skipz
  9790  2181  2989               	goto	l4207
  9791  2182  0AA5               	incf	___aomod@divisor+5,f
  9792  2183  1D03               	skipz
  9793  2184  2989               	goto	l4207
  9794  2185  0AA6               	incf	___aomod@divisor+6,f
  9795  2186  1D03               	skipz
  9796  2187  2989               	goto	l4207
  9797  2188  0AA7               	incf	___aomod@divisor+7,f
  9798  2189                     l4207:	
  9799  2189  0020               	movlb	0	; select bank0
  9800  218A  0820               	movf	___aomod@divisor,w
  9801  218B  0421               	iorwf	___aomod@divisor+1,w
  9802  218C  0422               	iorwf	___aomod@divisor+2,w
  9803  218D  0423               	iorwf	___aomod@divisor+3,w
  9804  218E  0424               	iorwf	___aomod@divisor+4,w
  9805  218F  0425               	iorwf	___aomod@divisor+5,w
  9806  2190  0426               	iorwf	___aomod@divisor+6,w
  9807  2191  0427               	iorwf	___aomod@divisor+7,w
  9808  2192  1903               	skipnz
  9809  2193  29E1               	goto	l4223
  9810  2194  01F2               	clrf	___aomod@counter
  9811  2195  0AF2               	incf	___aomod@counter,f
  9812  2196                     l4215:	
  9813  2196  1BA7               	btfsc	___aomod@divisor+7,7
  9814  2197  29A5               	goto	l4217
  9815  2198  35A0               	lslf	___aomod@divisor,f
  9816  2199  0DA1               	rlf	___aomod@divisor+1,f
  9817  219A  0DA2               	rlf	___aomod@divisor+2,f
  9818  219B  0DA3               	rlf	___aomod@divisor+3,f
  9819  219C  0DA4               	rlf	___aomod@divisor+4,f
  9820  219D  0DA5               	rlf	___aomod@divisor+5,f
  9821  219E  0DA6               	rlf	___aomod@divisor+6,f
  9822  219F  0DA7               	rlf	___aomod@divisor+7,f
  9823  21A0  3001               	movlw	1
  9824  21A1  00F1               	movwf	??___aomod
  9825  21A2  0871               	movf	??___aomod,w
  9826  21A3  07F2               	addwf	___aomod@counter,f
  9827  21A4  2996               	goto	l4215
  9828  21A5                     l4217:	
  9829  21A5  0827               	movf	___aomod@divisor+7,w
  9830  21A6  022F               	subwf	___aomod@dividend+7,w
  9831  21A7  1D03               	skipz
  9832  21A8  29C3               	goto	u4365
  9833  21A9  0826               	movf	___aomod@divisor+6,w
  9834  21AA  022E               	subwf	___aomod@dividend+6,w
  9835  21AB  1D03               	skipz
  9836  21AC  29C3               	goto	u4365
  9837  21AD  0825               	movf	___aomod@divisor+5,w
  9838  21AE  022D               	subwf	___aomod@dividend+5,w
  9839  21AF  1D03               	skipz
  9840  21B0  29C3               	goto	u4365
  9841  21B1  0824               	movf	___aomod@divisor+4,w
  9842  21B2  022C               	subwf	___aomod@dividend+4,w
  9843  21B3  1D03               	skipz
  9844  21B4  29C3               	goto	u4365
  9845  21B5  0823               	movf	___aomod@divisor+3,w
  9846  21B6  022B               	subwf	___aomod@dividend+3,w
  9847  21B7  1D03               	skipz
  9848  21B8  29C3               	goto	u4365
  9849  21B9  0822               	movf	___aomod@divisor+2,w
  9850  21BA  022A               	subwf	___aomod@dividend+2,w
  9851  21BB  1D03               	skipz
  9852  21BC  29C3               	goto	u4365
  9853  21BD  0821               	movf	___aomod@divisor+1,w
  9854  21BE  0229               	subwf	___aomod@dividend+1,w
  9855  21BF  1D03               	skipz
  9856  21C0  29C3               	goto	u4365
  9857  21C1  0820               	movf	___aomod@divisor,w
  9858  21C2  0228               	subwf	___aomod@dividend,w
  9859  21C3                     u4365:	
  9860  21C3  1C03               	skipc
  9861  21C4  29D5               	goto	l4221
  9862  21C5  0820               	movf	___aomod@divisor,w
  9863  21C6  02A8               	subwf	___aomod@dividend,f
  9864  21C7  0821               	movf	___aomod@divisor+1,w
  9865  21C8  3BA9               	subwfb	___aomod@dividend+1,f
  9866  21C9  0822               	movf	___aomod@divisor+2,w
  9867  21CA  3BAA               	subwfb	___aomod@dividend+2,f
  9868  21CB  0823               	movf	___aomod@divisor+3,w
  9869  21CC  3BAB               	subwfb	___aomod@dividend+3,f
  9870  21CD  0824               	movf	___aomod@divisor+4,w
  9871  21CE  3BAC               	subwfb	___aomod@dividend+4,f
  9872  21CF  0825               	movf	___aomod@divisor+5,w
  9873  21D0  3BAD               	subwfb	___aomod@dividend+5,f
  9874  21D1  0826               	movf	___aomod@divisor+6,w
  9875  21D2  3BAE               	subwfb	___aomod@dividend+6,f
  9876  21D3  0827               	movf	___aomod@divisor+7,w
  9877  21D4  3BAF               	subwfb	___aomod@dividend+7,f
  9878  21D5                     l4221:	
  9879  21D5  36A7               	lsrf	___aomod@divisor+7,f
  9880  21D6  0CA6               	rrf	___aomod@divisor+6,f
  9881  21D7  0CA5               	rrf	___aomod@divisor+5,f
  9882  21D8  0CA4               	rrf	___aomod@divisor+4,f
  9883  21D9  0CA3               	rrf	___aomod@divisor+3,f
  9884  21DA  0CA2               	rrf	___aomod@divisor+2,f
  9885  21DB  0CA1               	rrf	___aomod@divisor+1,f
  9886  21DC  0CA0               	rrf	___aomod@divisor,f
  9887  21DD  3001               	movlw	1
  9888  21DE  02F2               	subwf	___aomod@counter,f
  9889  21DF  1D03               	btfss	3,2
  9890  21E0  29A5               	goto	l4217
  9891  21E1                     l4223:	
  9892  21E1  0873               	movf	___aomod@sign,w
  9893  21E2  1903               	btfsc	3,2
  9894  21E3  2A02               	goto	l1059
  9895  21E4  09A8               	comf	___aomod@dividend,f
  9896  21E5  09A9               	comf	___aomod@dividend+1,f
  9897  21E6  09AA               	comf	___aomod@dividend+2,f
  9898  21E7  09AB               	comf	___aomod@dividend+3,f
  9899  21E8  09AC               	comf	___aomod@dividend+4,f
  9900  21E9  09AD               	comf	___aomod@dividend+5,f
  9901  21EA  09AE               	comf	___aomod@dividend+6,f
  9902  21EB  09AF               	comf	___aomod@dividend+7,f
  9903  21EC  0AA8               	incf	___aomod@dividend,f
  9904  21ED  1D03               	skipz
  9905  21EE  2A02               	goto	l1059
  9906  21EF  0AA9               	incf	___aomod@dividend+1,f
  9907  21F0  1D03               	skipz
  9908  21F1  2A02               	goto	l1059
  9909  21F2  0AAA               	incf	___aomod@dividend+2,f
  9910  21F3  1D03               	skipz
  9911  21F4  2A02               	goto	l1059
  9912  21F5  0AAB               	incf	___aomod@dividend+3,f
  9913  21F6  1D03               	skipz
  9914  21F7  2A02               	goto	l1059
  9915  21F8  0AAC               	incf	___aomod@dividend+4,f
  9916  21F9  1D03               	skipz
  9917  21FA  2A02               	goto	l1059
  9918  21FB  0AAD               	incf	___aomod@dividend+5,f
  9919  21FC  1D03               	skipz
  9920  21FD  2A02               	goto	l1059
  9921  21FE  0AAE               	incf	___aomod@dividend+6,f
  9922  21FF  1D03               	skipz
  9923  2200  2A02               	goto	l1059
  9924  2201  0AAF               	incf	___aomod@dividend+7,f
  9925  2202                     l1059:	
  9926  2202  0020               	movlb	0	; select bank0
  9927  2203  0828               	movf	___aomod@dividend,w
  9928  2204  00A0               	movwf	?___aomod
  9929  2205  0829               	movf	___aomod@dividend+1,w
  9930  2206  00A1               	movwf	?___aomod+1
  9931  2207  082A               	movf	___aomod@dividend+2,w
  9932  2208  00A2               	movwf	?___aomod+2
  9933  2209  082B               	movf	___aomod@dividend+3,w
  9934  220A  00A3               	movwf	?___aomod+3
  9935  220B  082C               	movf	___aomod@dividend+4,w
  9936  220C  00A4               	movwf	?___aomod+4
  9937  220D  082D               	movf	___aomod@dividend+5,w
  9938  220E  00A5               	movwf	?___aomod+5
  9939  220F  082E               	movf	___aomod@dividend+6,w
  9940  2210  00A6               	movwf	?___aomod+6
  9941  2211  082F               	movf	___aomod@dividend+7,w
  9942  2212  00A7               	movwf	?___aomod+7
  9943  2213  0008               	return
  9944  2214                     __end_of___aomod:	
  9945                           
  9946                           	psect	text22
  9947  23E6                     __ptext22:	
  9948 ;; *************** function ___aodiv *****************
  9949 ;; Defined at:
  9950 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  9951 ;; Parameters:    Size  Location     Type
  9952 ;;  divisor         8    0[BANK0 ] long long 
  9953 ;;  dividend        8    8[BANK0 ] long long 
  9954 ;; Auto vars:     Size  Location     Type
  9955 ;;  quotient        8    4[COMMON] long long 
  9956 ;;  sign            1    3[COMMON] unsigned char 
  9957 ;;  counter         1    2[COMMON] unsigned char 
  9958 ;; Return value:  Size  Location     Type
  9959 ;;                  8    0[BANK0 ] long long 
  9960 ;; Registers used:
  9961 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9962 ;; Tracked objects:
  9963 ;;		On entry : 0/0
  9964 ;;		On exit  : 0/0
  9965 ;;		Unchanged: 0/0
  9966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9967 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9968 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9969 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9970 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9971 ;;Total ram usage:       27 bytes
  9972 ;; Hardware stack levels used:    1
  9973 ;; Hardware stack levels required when called:    1
  9974 ;; This function calls:
  9975 ;;		Nothing
  9976 ;; This function is called by:
  9977 ;;		_dtoa
  9978 ;; This function uses a non-reentrant model
  9979 ;;
  9980                           
  9981                           
  9982                           ;psect for function ___aodiv
  9983  23E6                     ___aodiv:	
  9984                           
  9985                           ;incstack = 0
  9986                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  9987  23E6  01F3               	clrf	___aodiv@sign
  9988  23E7  3020               	movlw	low ___aodiv@divisor
  9989  23E8  0086               	movwf	6
  9990  23E9  3000               	movlw	high ___aodiv@divisor
  9991  23EA  0087               	movwf	7
  9992  23EB  3F47               	moviw [7]fsr1
  9993  23EC  00F1               	movwf	??___aodiv
  9994  23ED  1FF1               	btfss	??___aodiv,7
  9995  23EE  2C10               	goto	l4165
  9996  23EF  0020               	movlb	0	; select bank0
  9997  23F0  09A0               	comf	___aodiv@divisor,f
  9998  23F1  09A1               	comf	___aodiv@divisor+1,f
  9999  23F2  09A2               	comf	___aodiv@divisor+2,f
 10000  23F3  09A3               	comf	___aodiv@divisor+3,f
 10001  23F4  09A4               	comf	___aodiv@divisor+4,f
 10002  23F5  09A5               	comf	___aodiv@divisor+5,f
 10003  23F6  09A6               	comf	___aodiv@divisor+6,f
 10004  23F7  09A7               	comf	___aodiv@divisor+7,f
 10005  23F8  0AA0               	incf	___aodiv@divisor,f
 10006  23F9  1D03               	skipz
 10007  23FA  2C0E               	goto	u420lld
 10008  23FB  0AA1               	incf	___aodiv@divisor+1,f
 10009  23FC  1D03               	skipz
 10010  23FD  2C0E               	goto	u420lld
 10011  23FE  0AA2               	incf	___aodiv@divisor+2,f
 10012  23FF  1D03               	skipz
 10013  2400  2C0E               	goto	u420lld
 10014  2401  0AA3               	incf	___aodiv@divisor+3,f
 10015  2402  1D03               	skipz
 10016  2403  2C0E               	goto	u420lld
 10017  2404  0AA4               	incf	___aodiv@divisor+4,f
 10018  2405  1D03               	skipz
 10019  2406  2C0E               	goto	u420lld
 10020  2407  0AA5               	incf	___aodiv@divisor+5,f
 10021  2408  1D03               	skipz
 10022  2409  2C0E               	goto	u420lld
 10023  240A  0AA6               	incf	___aodiv@divisor+6,f
 10024  240B  1D03               	skipz
 10025  240C  2C0E               	goto	u420lld
 10026  240D  0AA7               	incf	___aodiv@divisor+7,f
 10027  240E                     u420lld:	
 10028  240E  01F3               	clrf	___aodiv@sign
 10029  240F  0AF3               	incf	___aodiv@sign,f
 10030  2410                     l4165:	
 10031  2410  3028               	movlw	low ___aodiv@dividend
 10032  2411  0086               	movwf	6
 10033  2412  3000               	movlw	high ___aodiv@dividend
 10034  2413  0087               	movwf	7
 10035  2414  3F47               	moviw [7]fsr1
 10036  2415  00F1               	movwf	??___aodiv
 10037  2416  1FF1               	btfss	??___aodiv,7
 10038  2417  2C3B               	goto	l4171
 10039  2418  0020               	movlb	0	; select bank0
 10040  2419  09A8               	comf	___aodiv@dividend,f
 10041  241A  09A9               	comf	___aodiv@dividend+1,f
 10042  241B  09AA               	comf	___aodiv@dividend+2,f
 10043  241C  09AB               	comf	___aodiv@dividend+3,f
 10044  241D  09AC               	comf	___aodiv@dividend+4,f
 10045  241E  09AD               	comf	___aodiv@dividend+5,f
 10046  241F  09AE               	comf	___aodiv@dividend+6,f
 10047  2420  09AF               	comf	___aodiv@dividend+7,f
 10048  2421  0AA8               	incf	___aodiv@dividend,f
 10049  2422  1D03               	skipz
 10050  2423  2C37               	goto	l4169
 10051  2424  0AA9               	incf	___aodiv@dividend+1,f
 10052  2425  1D03               	skipz
 10053  2426  2C37               	goto	l4169
 10054  2427  0AAA               	incf	___aodiv@dividend+2,f
 10055  2428  1D03               	skipz
 10056  2429  2C37               	goto	l4169
 10057  242A  0AAB               	incf	___aodiv@dividend+3,f
 10058  242B  1D03               	skipz
 10059  242C  2C37               	goto	l4169
 10060  242D  0AAC               	incf	___aodiv@dividend+4,f
 10061  242E  1D03               	skipz
 10062  242F  2C37               	goto	l4169
 10063  2430  0AAD               	incf	___aodiv@dividend+5,f
 10064  2431  1D03               	skipz
 10065  2432  2C37               	goto	l4169
 10066  2433  0AAE               	incf	___aodiv@dividend+6,f
 10067  2434  1D03               	skipz
 10068  2435  2C37               	goto	l4169
 10069  2436  0AAF               	incf	___aodiv@dividend+7,f
 10070  2437                     l4169:	
 10071  2437  3001               	movlw	1
 10072  2438  00F1               	movwf	??___aodiv
 10073  2439  0871               	movf	??___aodiv,w
 10074  243A  06F3               	xorwf	___aodiv@sign,f
 10075  243B                     l4171:	
 10076  243B  3074               	movlw	low ___aodiv@quotient
 10077  243C  0086               	movwf	6
 10078  243D  3000               	movlw	high ___aodiv@quotient
 10079  243E  0087               	movwf	7
 10080  243F  3008               	movlw	8
 10081  2440  00F1               	movwf	??___aodiv
 10082  2441  3000               	movlw	0
 10083  2442                     u4230:	
 10084  2442  001E               	movwi fsr1++
 10085  2443  0BF1               	decfsz	??___aodiv,f
 10086  2444  2C42               	goto	u4230
 10087  2445  0020               	movlb	0	; select bank0
 10088  2446  0820               	movf	___aodiv@divisor,w
 10089  2447  0421               	iorwf	___aodiv@divisor+1,w
 10090  2448  0422               	iorwf	___aodiv@divisor+2,w
 10091  2449  0423               	iorwf	___aodiv@divisor+3,w
 10092  244A  0424               	iorwf	___aodiv@divisor+4,w
 10093  244B  0425               	iorwf	___aodiv@divisor+5,w
 10094  244C  0426               	iorwf	___aodiv@divisor+6,w
 10095  244D  0427               	iorwf	___aodiv@divisor+7,w
 10096  244E  1903               	skipnz
 10097  244F  2CA6               	goto	l4193
 10098  2450  01F2               	clrf	___aodiv@counter
 10099  2451  0AF2               	incf	___aodiv@counter,f
 10100  2452                     l4181:	
 10101  2452  1BA7               	btfsc	___aodiv@divisor+7,7
 10102  2453  2C61               	goto	l4183
 10103  2454  35A0               	lslf	___aodiv@divisor,f
 10104  2455  0DA1               	rlf	___aodiv@divisor+1,f
 10105  2456  0DA2               	rlf	___aodiv@divisor+2,f
 10106  2457  0DA3               	rlf	___aodiv@divisor+3,f
 10107  2458  0DA4               	rlf	___aodiv@divisor+4,f
 10108  2459  0DA5               	rlf	___aodiv@divisor+5,f
 10109  245A  0DA6               	rlf	___aodiv@divisor+6,f
 10110  245B  0DA7               	rlf	___aodiv@divisor+7,f
 10111  245C  3001               	movlw	1
 10112  245D  00F1               	movwf	??___aodiv
 10113  245E  0871               	movf	??___aodiv,w
 10114  245F  07F2               	addwf	___aodiv@counter,f
 10115  2460  2C52               	goto	l4181
 10116  2461                     l4183:	
 10117  2461  35F4               	lslf	___aodiv@quotient,f
 10118  2462  0DF5               	rlf	___aodiv@quotient+1,f
 10119  2463  0DF6               	rlf	___aodiv@quotient+2,f
 10120  2464  0DF7               	rlf	___aodiv@quotient+3,f
 10121  2465  0DF8               	rlf	___aodiv@quotient+4,f
 10122  2466  0DF9               	rlf	___aodiv@quotient+5,f
 10123  2467  0DFA               	rlf	___aodiv@quotient+6,f
 10124  2468  0DFB               	rlf	___aodiv@quotient+7,f
 10125  2469  0827               	movf	___aodiv@divisor+7,w
 10126  246A  022F               	subwf	___aodiv@dividend+7,w
 10127  246B  1D03               	skipz
 10128  246C  2C87               	goto	u4265
 10129  246D  0826               	movf	___aodiv@divisor+6,w
 10130  246E  022E               	subwf	___aodiv@dividend+6,w
 10131  246F  1D03               	skipz
 10132  2470  2C87               	goto	u4265
 10133  2471  0825               	movf	___aodiv@divisor+5,w
 10134  2472  022D               	subwf	___aodiv@dividend+5,w
 10135  2473  1D03               	skipz
 10136  2474  2C87               	goto	u4265
 10137  2475  0824               	movf	___aodiv@divisor+4,w
 10138  2476  022C               	subwf	___aodiv@dividend+4,w
 10139  2477  1D03               	skipz
 10140  2478  2C87               	goto	u4265
 10141  2479  0823               	movf	___aodiv@divisor+3,w
 10142  247A  022B               	subwf	___aodiv@dividend+3,w
 10143  247B  1D03               	skipz
 10144  247C  2C87               	goto	u4265
 10145  247D  0822               	movf	___aodiv@divisor+2,w
 10146  247E  022A               	subwf	___aodiv@dividend+2,w
 10147  247F  1D03               	skipz
 10148  2480  2C87               	goto	u4265
 10149  2481  0821               	movf	___aodiv@divisor+1,w
 10150  2482  0229               	subwf	___aodiv@dividend+1,w
 10151  2483  1D03               	skipz
 10152  2484  2C87               	goto	u4265
 10153  2485  0820               	movf	___aodiv@divisor,w
 10154  2486  0228               	subwf	___aodiv@dividend,w
 10155  2487                     u4265:	
 10156  2487  1C03               	skipc
 10157  2488  2C9A               	goto	l4191
 10158  2489  0820               	movf	___aodiv@divisor,w
 10159  248A  02A8               	subwf	___aodiv@dividend,f
 10160  248B  0821               	movf	___aodiv@divisor+1,w
 10161  248C  3BA9               	subwfb	___aodiv@dividend+1,f
 10162  248D  0822               	movf	___aodiv@divisor+2,w
 10163  248E  3BAA               	subwfb	___aodiv@dividend+2,f
 10164  248F  0823               	movf	___aodiv@divisor+3,w
 10165  2490  3BAB               	subwfb	___aodiv@dividend+3,f
 10166  2491  0824               	movf	___aodiv@divisor+4,w
 10167  2492  3BAC               	subwfb	___aodiv@dividend+4,f
 10168  2493  0825               	movf	___aodiv@divisor+5,w
 10169  2494  3BAD               	subwfb	___aodiv@dividend+5,f
 10170  2495  0826               	movf	___aodiv@divisor+6,w
 10171  2496  3BAE               	subwfb	___aodiv@dividend+6,f
 10172  2497  0827               	movf	___aodiv@divisor+7,w
 10173  2498  3BAF               	subwfb	___aodiv@dividend+7,f
 10174  2499  1474               	bsf	___aodiv@quotient,0
 10175  249A                     l4191:	
 10176  249A  36A7               	lsrf	___aodiv@divisor+7,f
 10177  249B  0CA6               	rrf	___aodiv@divisor+6,f
 10178  249C  0CA5               	rrf	___aodiv@divisor+5,f
 10179  249D  0CA4               	rrf	___aodiv@divisor+4,f
 10180  249E  0CA3               	rrf	___aodiv@divisor+3,f
 10181  249F  0CA2               	rrf	___aodiv@divisor+2,f
 10182  24A0  0CA1               	rrf	___aodiv@divisor+1,f
 10183  24A1  0CA0               	rrf	___aodiv@divisor,f
 10184  24A2  3001               	movlw	1
 10185  24A3  02F2               	subwf	___aodiv@counter,f
 10186  24A4  1D03               	btfss	3,2
 10187  24A5  2C61               	goto	l4183
 10188  24A6                     l4193:	
 10189  24A6  0873               	movf	___aodiv@sign,w
 10190  24A7  1903               	btfsc	3,2
 10191  24A8  2CC7               	goto	l1046
 10192  24A9  09F4               	comf	___aodiv@quotient,f
 10193  24AA  09F5               	comf	___aodiv@quotient+1,f
 10194  24AB  09F6               	comf	___aodiv@quotient+2,f
 10195  24AC  09F7               	comf	___aodiv@quotient+3,f
 10196  24AD  09F8               	comf	___aodiv@quotient+4,f
 10197  24AE  09F9               	comf	___aodiv@quotient+5,f
 10198  24AF  09FA               	comf	___aodiv@quotient+6,f
 10199  24B0  09FB               	comf	___aodiv@quotient+7,f
 10200  24B1  0AF4               	incf	___aodiv@quotient,f
 10201  24B2  1D03               	skipz
 10202  24B3  2CC7               	goto	l1046
 10203  24B4  0AF5               	incf	___aodiv@quotient+1,f
 10204  24B5  1D03               	skipz
 10205  24B6  2CC7               	goto	l1046
 10206  24B7  0AF6               	incf	___aodiv@quotient+2,f
 10207  24B8  1D03               	skipz
 10208  24B9  2CC7               	goto	l1046
 10209  24BA  0AF7               	incf	___aodiv@quotient+3,f
 10210  24BB  1D03               	skipz
 10211  24BC  2CC7               	goto	l1046
 10212  24BD  0AF8               	incf	___aodiv@quotient+4,f
 10213  24BE  1D03               	skipz
 10214  24BF  2CC7               	goto	l1046
 10215  24C0  0AF9               	incf	___aodiv@quotient+5,f
 10216  24C1  1D03               	skipz
 10217  24C2  2CC7               	goto	l1046
 10218  24C3  0AFA               	incf	___aodiv@quotient+6,f
 10219  24C4  1D03               	skipz
 10220  24C5  2CC7               	goto	l1046
 10221  24C6  0AFB               	incf	___aodiv@quotient+7,f
 10222  24C7                     l1046:	
 10223  24C7  0874               	movf	___aodiv@quotient,w
 10224  24C8  0020               	movlb	0	; select bank0
 10225  24C9  00A0               	movwf	?___aodiv
 10226  24CA  0875               	movf	___aodiv@quotient+1,w
 10227  24CB  00A1               	movwf	?___aodiv+1
 10228  24CC  0876               	movf	___aodiv@quotient+2,w
 10229  24CD  00A2               	movwf	?___aodiv+2
 10230  24CE  0877               	movf	___aodiv@quotient+3,w
 10231  24CF  00A3               	movwf	?___aodiv+3
 10232  24D0  0878               	movf	___aodiv@quotient+4,w
 10233  24D1  00A4               	movwf	?___aodiv+4
 10234  24D2  0879               	movf	___aodiv@quotient+5,w
 10235  24D3  00A5               	movwf	?___aodiv+5
 10236  24D4  087A               	movf	___aodiv@quotient+6,w
 10237  24D5  00A6               	movwf	?___aodiv+6
 10238  24D6  087B               	movf	___aodiv@quotient+7,w
 10239  24D7  00A7               	movwf	?___aodiv+7
 10240  24D8  0008               	return
 10241  24D9                     __end_of___aodiv:	
 10242                           
 10243                           	psect	text23
 10244  33A4                     __ptext23:	
 10245 ;; *************** function _ctoa *****************
 10246 ;; Defined at:
 10247 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10248 ;; Parameters:    Size  Location     Type
 10249 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
 10250 ;;		 -> vsnprintf@f(6), 
 10251 ;;  c               1   18[BANK0 ] unsigned char 
 10252 ;; Auto vars:     Size  Location     Type
 10253 ;;  w               2   20[BANK0 ] int 
 10254 ;;  l               2    0        int 
 10255 ;; Return value:  Size  Location     Type
 10256 ;;                  2   16[BANK0 ] int 
 10257 ;; Registers used:
 10258 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10259 ;; Tracked objects:
 10260 ;;		On entry : 0/0
 10261 ;;		On exit  : 0/0
 10262 ;;		Unchanged: 0/0
 10263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10264 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10265 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10266 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10267 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10268 ;;Total ram usage:        6 bytes
 10269 ;; Hardware stack levels used:    1
 10270 ;; Hardware stack levels required when called:    5
 10271 ;; This function calls:
 10272 ;;		_pad
 10273 ;; This function is called by:
 10274 ;;		_vfpfcnvrt
 10275 ;; This function uses a non-reentrant model
 10276 ;;
 10277                           
 10278                           
 10279                           ;psect for function _ctoa
 10280  33A4                     _ctoa:	
 10281                           
 10282                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 10283                           
 10284                           ;incstack = 0
 10285                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10286  33A4  0022               	movlb	2	; select bank2
 10287  33A5  0866               	movf	_width^(0+256),w
 10288  33A6  0467               	iorwf	(_width+1)^(0+256),w
 10289  33A7  1D03               	btfss	3,2
 10290  33A8  2BB1               	goto	l6505
 10291  33A9  0867               	movf	(_width+1)^(0+256),w
 10292  33AA  0020               	movlb	0	; select bank0
 10293  33AB  00B5               	movwf	ctoa@w+1
 10294  33AC  0022               	movlb	2	; select bank2
 10295  33AD  0866               	movf	_width^(0+256),w
 10296  33AE  0020               	movlb	0	; select bank0
 10297  33AF  00B4               	movwf	ctoa@w
 10298  33B0  2BBA               	goto	l6507
 10299  33B1                     l6505:	
 10300  33B1  0866               	movf	_width^(0+256),w
 10301  33B2  3EFF               	addlw	255
 10302  33B3  0020               	movlb	0	; select bank0
 10303  33B4  00B4               	movwf	ctoa@w
 10304  33B5  30FF               	movlw	255
 10305  33B6  0022               	movlb	2	; select bank2
 10306  33B7  3D67               	addwfc	(_width+1)^(0+256),w
 10307  33B8  0020               	movlb	0	; select bank0
 10308  33B9  00B5               	movwf	ctoa@w+1
 10309  33BA                     l6507:	
 10310                           
 10311                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 10312  33BA  0832               	movf	ctoa@c,w
 10313  33BB  00B3               	movwf	??_ctoa
 10314  33BC  0833               	movf	??_ctoa,w
 10315  33BD  0024               	movlb	4	; select bank4
 10316  33BE  00A0               	movwf	_dbuf^(0+512)
 10317                           
 10318                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 10319  33BF  01A1               	clrf	(_dbuf^(0+512)+1)
 10320                           
 10321                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 10322  33C0  0020               	movlb	0	; select bank0
 10323  33C1  0831               	movf	ctoa@fp+1,w
 10324  33C2  00A7               	movwf	pad@fp+1
 10325  33C3  0830               	movf	ctoa@fp,w
 10326  33C4  00A6               	movwf	pad@fp
 10327  33C5  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
 10328  33C6  00B3               	movwf	??_ctoa
 10329  33C7  0833               	movf	??_ctoa,w
 10330  33C8  00A8               	movwf	pad@buf
 10331  33C9  0835               	movf	ctoa@w+1,w
 10332  33CA  00AA               	movwf	pad@p+1
 10333  33CB  0834               	movf	ctoa@w,w
 10334  33CC  00A9               	movwf	pad@p
 10335  33CD  31B5  2587         	fcall	_pad
 10336  33CF  0020               	movlb	0	; select bank0
 10337  33D0  0827               	movf	?_pad+1,w
 10338  33D1  00B1               	movwf	?_ctoa+1
 10339  33D2  0826               	movf	?_pad,w
 10340  33D3  00B0               	movwf	?_ctoa
 10341  33D4  0008               	return
 10342  33D5                     __end_of_ctoa:	
 10343                           
 10344                           	psect	text24
 10345  3587                     __ptext24:	
 10346 ;; *************** function _pad *****************
 10347 ;; Defined at:
 10348 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10349 ;; Parameters:    Size  Location     Type
 10350 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
 10351 ;;		 -> vsnprintf@f(6), 
 10352 ;;  buf             1    8[BANK0 ] PTR unsigned char 
 10353 ;;		 -> dbuf(32), 
 10354 ;;  p               2    9[BANK0 ] int 
 10355 ;; Auto vars:     Size  Location     Type
 10356 ;;  w               2   14[BANK0 ] int 
 10357 ;;  i               2   12[BANK0 ] int 
 10358 ;; Return value:  Size  Location     Type
 10359 ;;                  2    6[BANK0 ] int 
 10360 ;; Registers used:
 10361 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10362 ;; Tracked objects:
 10363 ;;		On entry : 0/0
 10364 ;;		On exit  : 0/0
 10365 ;;		Unchanged: 0/0
 10366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10367 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10368 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10369 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10370 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10371 ;;Total ram usage:       10 bytes
 10372 ;; Hardware stack levels used:    1
 10373 ;; Hardware stack levels required when called:    4
 10374 ;; This function calls:
 10375 ;;		_fputc
 10376 ;;		_fputs
 10377 ;;		_strlen
 10378 ;; This function is called by:
 10379 ;;		_ctoa
 10380 ;;		_dtoa
 10381 ;;		_otoa
 10382 ;;		_utoa
 10383 ;;		_xtoa
 10384 ;; This function uses a non-reentrant model
 10385 ;;
 10386                           
 10387                           
 10388                           ;psect for function _pad
 10389  3587                     _pad:	
 10390                           
 10391                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 10392                           
 10393                           ;incstack = 0
 10394                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10395  3587  0022               	movlb	2	; select bank2
 10396  3588  1C6A               	btfss	_flags^(0+256),0
 10397  3589  2D93               	goto	l6473
 10398                           
 10399                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 10400  358A  0020               	movlb	0	; select bank0
 10401  358B  0827               	movf	pad@fp+1,w
 10402  358C  00FB               	movwf	fputs@fp+1
 10403  358D  0826               	movf	pad@fp,w
 10404  358E  00FA               	movwf	fputs@fp
 10405  358F  0828               	movf	pad@buf,w
 10406  3590  31B3  234E  31B5   	fcall	_fputs
 10407  3593                     l6473:	
 10408                           
 10409                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 10410  3593  0020               	movlb	0	; select bank0
 10411  3594  1BAA               	btfsc	pad@p+1,7
 10412  3595  2D9B               	goto	l6477
 10413  3596  082A               	movf	pad@p+1,w
 10414  3597  00AF               	movwf	pad@w+1
 10415  3598  0829               	movf	pad@p,w
 10416  3599  00AE               	movwf	pad@w
 10417  359A  2D9D               	goto	l738
 10418  359B                     l6477:	
 10419  359B  01AE               	clrf	pad@w
 10420  359C  01AF               	clrf	pad@w+1
 10421  359D                     l738:	
 10422                           
 10423                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 10424  359D  01AC               	clrf	pad@i
 10425  359E  01AD               	clrf	pad@i+1
 10426  359F                     l6483:	
 10427                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10428                           
 10429                           
 10430                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10431  359F  082D               	movf	pad@i+1,w
 10432  35A0  3A80               	xorlw	128
 10433  35A1  00AB               	movwf	??_pad
 10434  35A2  082F               	movf	pad@w+1,w
 10435  35A3  3A80               	xorlw	128
 10436  35A4  022B               	subwf	??_pad,w
 10437  35A5  1D03               	skipz
 10438  35A6  2DA9               	goto	u7845
 10439  35A7  082E               	movf	pad@w,w
 10440  35A8  022C               	subwf	pad@i,w
 10441  35A9                     u7845:	
 10442  35A9  1803               	btfsc	3,0
 10443  35AA  2DBD               	goto	l741
 10444                           
 10445                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 10446  35AB  3020               	movlw	32
 10447  35AC  00F1               	movwf	fputc@c
 10448  35AD  3000               	movlw	0
 10449  35AE  00F2               	movwf	fputc@c+1
 10450  35AF  0020               	movlb	0	; select bank0
 10451  35B0  0827               	movf	pad@fp+1,w
 10452  35B1  00F4               	movwf	fputc@fp+1
 10453  35B2  0826               	movf	pad@fp,w
 10454  35B3  00F3               	movwf	fputc@fp
 10455  35B4  3198  2000  31B5   	fcall	_fputc
 10456                           
 10457                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 10458  35B7  3001               	movlw	1
 10459  35B8  0020               	movlb	0	; select bank0
 10460  35B9  07AC               	addwf	pad@i,f
 10461  35BA  3000               	movlw	0
 10462  35BB  3DAD               	addwfc	pad@i+1,f
 10463  35BC  2D9F               	goto	l6483
 10464  35BD                     l741:	
 10465                           
 10466                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 10467  35BD  0022               	movlb	2	; select bank2
 10468  35BE  186A               	btfsc	_flags^(0+256),0
 10469  35BF  2DC9               	goto	l6487
 10470                           
 10471                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 10472  35C0  0020               	movlb	0	; select bank0
 10473  35C1  0827               	movf	pad@fp+1,w
 10474  35C2  00FB               	movwf	fputs@fp+1
 10475  35C3  0826               	movf	pad@fp,w
 10476  35C4  00FA               	movwf	fputs@fp
 10477  35C5  0828               	movf	pad@buf,w
 10478  35C6  31B3  234E  31B5   	fcall	_fputs
 10479  35C9                     l6487:	
 10480                           
 10481                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 10482  35C9  0020               	movlb	0	; select bank0
 10483  35CA  0828               	movf	pad@buf,w
 10484  35CB  00F1               	movwf	strlen@s
 10485  35CC  3002               	movlw	2
 10486  35CD  00F2               	movwf	strlen@s+1
 10487  35CE  31B1  21EA         	fcall	_strlen
 10488  35D0  0020               	movlb	0	; select bank0
 10489  35D1  082E               	movf	pad@w,w
 10490  35D2  0771               	addwf	?_strlen,w
 10491  35D3  00A6               	movwf	?_pad
 10492  35D4  082F               	movf	pad@w+1,w
 10493  35D5  3D72               	addwfc	?_strlen+1,w
 10494  35D6  00A7               	movwf	?_pad+1
 10495  35D7  0008               	return
 10496  35D8                     __end_of_pad:	
 10497                           
 10498                           	psect	text25
 10499  31EA                     __ptext25:	
 10500 ;; *************** function _strlen *****************
 10501 ;; Defined at:
 10502 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 10503 ;; Parameters:    Size  Location     Type
 10504 ;;  s               2    1[COMMON] PTR const unsigned char 
 10505 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), sp__logf(4), 
 10506 ;;		 -> adcGain(2), 
 10507 ;; Auto vars:     Size  Location     Type
 10508 ;;  a               2    3[COMMON] PTR const unsigned char 
 10509 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), sp__logf(4), 
 10510 ;;		 -> adcGain(2), 
 10511 ;; Return value:  Size  Location     Type
 10512 ;;                  2    1[COMMON] unsigned int 
 10513 ;; Registers used:
 10514 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10515 ;; Tracked objects:
 10516 ;;		On entry : 0/0
 10517 ;;		On exit  : 0/0
 10518 ;;		Unchanged: 0/0
 10519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10520 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10521 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10523 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10524 ;;Total ram usage:        4 bytes
 10525 ;; Hardware stack levels used:    1
 10526 ;; Hardware stack levels required when called:    1
 10527 ;; This function calls:
 10528 ;;		Nothing
 10529 ;; This function is called by:
 10530 ;;		_pad
 10531 ;;		_stoa
 10532 ;; This function uses a non-reentrant model
 10533 ;;
 10534                           
 10535                           
 10536                           ;psect for function _strlen
 10537  31EA                     _strlen:	
 10538                           
 10539                           ;incstack = 0
 10540                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 10541  31EA  0872               	movf	strlen@s+1,w
 10542  31EB  00F4               	movwf	strlen@a+1
 10543  31EC  0871               	movf	strlen@s,w
 10544  31ED  00F3               	movwf	strlen@a
 10545  31EE                     l4087:	
 10546  31EE  0871               	movf	strlen@s,w
 10547  31EF  0086               	movwf	6
 10548  31F0  0872               	movf	strlen@s+1,w
 10549  31F1  0087               	movwf	7
 10550  31F2  0801               	movf	1,w
 10551  31F3  1903               	btfsc	3,2
 10552  31F4  29FA               	goto	l4089
 10553  31F5  3001               	movlw	1
 10554  31F6  07F1               	addwf	strlen@s,f
 10555  31F7  3000               	movlw	0
 10556  31F8  3DF2               	addwfc	strlen@s+1,f
 10557  31F9  29EE               	goto	l4087
 10558  31FA                     l4089:	
 10559  31FA  0873               	movf	strlen@a,w
 10560  31FB  0271               	subwf	strlen@s,w
 10561  31FC  00F1               	movwf	?_strlen
 10562  31FD  0874               	movf	strlen@a+1,w
 10563  31FE  3B72               	subwfb	strlen@s+1,w
 10564  31FF  00F2               	movwf	?_strlen+1
 10565  3200  0008               	return
 10566  3201                     __end_of_strlen:	
 10567                           
 10568                           	psect	text26
 10569  334E                     __ptext26:	
 10570 ;; *************** function _fputs *****************
 10571 ;; Defined at:
 10572 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 10573 ;; Parameters:    Size  Location     Type
 10574 ;;  s               1    wreg     PTR const unsigned char 
 10575 ;;		 -> dbuf(32), 
 10576 ;;  fp              2   10[COMMON] PTR struct _IO_FILE
 10577 ;;		 -> vsnprintf@f(6), 
 10578 ;; Auto vars:     Size  Location     Type
 10579 ;;  s               1    5[BANK0 ] PTR const unsigned char 
 10580 ;;		 -> dbuf(32), 
 10581 ;;  i               2    3[BANK0 ] int 
 10582 ;;  c               1    2[BANK0 ] unsigned char 
 10583 ;; Return value:  Size  Location     Type
 10584 ;;                  2   10[COMMON] int 
 10585 ;; Registers used:
 10586 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10587 ;; Tracked objects:
 10588 ;;		On entry : 0/0
 10589 ;;		On exit  : 0/0
 10590 ;;		Unchanged: 0/0
 10591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10592 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10593 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10594 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10595 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10596 ;;Total ram usage:        8 bytes
 10597 ;; Hardware stack levels used:    1
 10598 ;; Hardware stack levels required when called:    3
 10599 ;; This function calls:
 10600 ;;		_fputc
 10601 ;; This function is called by:
 10602 ;;		_pad
 10603 ;; This function uses a non-reentrant model
 10604 ;;
 10605                           
 10606                           
 10607                           ;psect for function _fputs
 10608  334E                     _fputs:	
 10609                           
 10610                           ;incstack = 0
 10611                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10612                           ;fputs@s stored from wreg
 10613  334E  0020               	movlb	0	; select bank0
 10614  334F  00A5               	movwf	fputs@s
 10615  3350  01A3               	clrf	fputs@i
 10616  3351  01A4               	clrf	fputs@i+1
 10617  3352                     l4081:	
 10618  3352  0823               	movf	fputs@i,w
 10619  3353  0725               	addwf	fputs@s,w
 10620  3354  00A0               	movwf	??_fputs
 10621  3355  0820               	movf	??_fputs,w
 10622  3356  0086               	movwf	6
 10623  3357  3002               	movlw	2	; select bank4/5
 10624  3358  0087               	movwf	7
 10625  3359  0801               	movf	1,w
 10626  335A  00A1               	movwf	??_fputs+1
 10627  335B  0821               	movf	??_fputs+1,w
 10628  335C  00A2               	movwf	fputs@c
 10629  335D  0822               	movf	fputs@c,w
 10630  335E  1903               	btfsc	3,2
 10631  335F  0008               	return
 10632  3360  0822               	movf	fputs@c,w
 10633  3361  00A0               	movwf	??_fputs
 10634  3362  01A1               	clrf	??_fputs+1
 10635  3363  0820               	movf	??_fputs,w
 10636  3364  00F1               	movwf	fputc@c
 10637  3365  0821               	movf	??_fputs+1,w
 10638  3366  00F2               	movwf	fputc@c+1
 10639  3367  087B               	movf	fputs@fp+1,w
 10640  3368  00F4               	movwf	fputc@fp+1
 10641  3369  087A               	movf	fputs@fp,w
 10642  336A  00F3               	movwf	fputc@fp
 10643  336B  3198  2000  31B3   	fcall	_fputc
 10644  336E  3001               	movlw	1
 10645  336F  0020               	movlb	0	; select bank0
 10646  3370  07A3               	addwf	fputs@i,f
 10647  3371  3000               	movlw	0
 10648  3372  3DA4               	addwfc	fputs@i+1,f
 10649  3373  2B52               	goto	l4081
 10650  3374                     __end_of_fputs:	
 10651                           
 10652                           	psect	text27
 10653  1800                     __ptext27:	
 10654 ;; *************** function _fputc *****************
 10655 ;; Defined at:
 10656 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 10657 ;; Parameters:    Size  Location     Type
 10658 ;;  c               2    1[COMMON] int 
 10659 ;;  fp              2    3[COMMON] PTR struct _IO_FILE
 10660 ;;		 -> vsnprintf@f(6), 
 10661 ;; Auto vars:     Size  Location     Type
 10662 ;;		None
 10663 ;; Return value:  Size  Location     Type
 10664 ;;                  2    1[COMMON] int 
 10665 ;; Registers used:
 10666 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10667 ;; Tracked objects:
 10668 ;;		On entry : 0/0
 10669 ;;		On exit  : 0/0
 10670 ;;		Unchanged: 0/0
 10671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10672 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10674 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10675 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10676 ;;Total ram usage:        9 bytes
 10677 ;; Hardware stack levels used:    1
 10678 ;; Hardware stack levels required when called:    2
 10679 ;; This function calls:
 10680 ;;		_putch
 10681 ;; This function is called by:
 10682 ;;		_pad
 10683 ;;		_stoa
 10684 ;;		_vfpfcnvrt
 10685 ;;		_fputs
 10686 ;; This function uses a non-reentrant model
 10687 ;;
 10688                           
 10689                           
 10690                           ;psect for function _fputc
 10691  1800                     _fputc:	
 10692                           
 10693                           ;incstack = 0
 10694                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10695  1800  0873               	movf	fputc@fp,w
 10696  1801  0474               	iorwf	fputc@fp+1,w
 10697  1802  1903               	btfsc	3,2
 10698  1803  2808               	goto	l4063
 10699  1804  0873               	movf	fputc@fp,w
 10700  1805  0474               	iorwf	fputc@fp+1,w
 10701  1806  1D03               	btfss	3,2
 10702  1807  280C               	goto	l4065
 10703  1808                     l4063:	
 10704  1808  0871               	movf	fputc@c,w
 10705  1809  3180  2003         	fcall	_putch
 10706  180B  0008               	return
 10707  180C                     l4065:	
 10708  180C  0873               	movf	fputc@fp,w
 10709  180D  0086               	movwf	6
 10710  180E  0874               	movf	fputc@fp+1,w
 10711  180F  0087               	movwf	7
 10712  1810  3144               	addfsr 1,4
 10713  1811  0016               	moviw fsr1++
 10714  1812  0401               	iorwf	1,w
 10715  1813  1903               	btfsc	3,2
 10716  1814  2833               	goto	l4069
 10717  1815  0873               	movf	fputc@fp,w
 10718  1816  0086               	movwf	6
 10719  1817  0874               	movf	fputc@fp+1,w
 10720  1818  0087               	movwf	7
 10721  1819  3144               	addfsr 1,4
 10722  181A  3F40               	moviw [0]fsr1
 10723  181B  00F5               	movwf	??_fputc
 10724  181C  3F41               	moviw [1]fsr1
 10725  181D  00F6               	movwf	??_fputc+1
 10726  181E  0873               	movf	fputc@fp,w
 10727  181F  0086               	movwf	6
 10728  1820  0874               	movf	fputc@fp+1,w
 10729  1821  0087               	movwf	7
 10730  1822  3142               	addfsr 1,2
 10731  1823  3F40               	moviw [0]fsr1
 10732  1824  00F7               	movwf	??_fputc+2
 10733  1825  3F41               	moviw [1]fsr1
 10734  1826  00F8               	movwf	??_fputc+3
 10735  1827  0878               	movf	??_fputc+3,w
 10736  1828  3A80               	xorlw	128
 10737  1829  00F9               	movwf	??_fputc+4
 10738  182A  0876               	movf	??_fputc+1,w
 10739  182B  3A80               	xorlw	128
 10740  182C  0279               	subwf	??_fputc+4,w
 10741  182D  1D03               	skipz
 10742  182E  2831               	goto	u3965
 10743  182F  0875               	movf	??_fputc,w
 10744  1830  0277               	subwf	??_fputc+2,w
 10745  1831                     u3965:	
 10746  1831  1803               	skipnc
 10747  1832  0008               	return
 10748  1833                     l4069:	
 10749  1833  0873               	movf	fputc@fp,w
 10750  1834  0086               	movwf	6
 10751  1835  0874               	movf	fputc@fp+1,w
 10752  1836  0087               	movwf	7
 10753  1837  3142               	addfsr 1,2
 10754  1838  0873               	movf	fputc@fp,w
 10755  1839  0084               	movwf	4
 10756  183A  0874               	movf	fputc@fp+1,w
 10757  183B  0085               	movwf	5
 10758  183C  3F40               	moviw [0]fsr1
 10759  183D  0700               	addwf	0,w
 10760  183E  00F5               	movwf	??_fputc
 10761  183F  3101               	addfsr 0,1
 10762  1840  3F41               	moviw [1]fsr1
 10763  1841  3D00               	addwfc	0,w
 10764  1842  00F6               	movwf	??_fputc+1
 10765  1843  0875               	movf	??_fputc,w
 10766  1844  0086               	movwf	6
 10767  1845  0876               	movf	??_fputc+1,w
 10768  1846  0087               	movwf	7
 10769  1847  0871               	movf	fputc@c,w
 10770  1848  0081               	movwf	1
 10771  1849  0873               	movf	fputc@fp,w
 10772  184A  0086               	movwf	6
 10773  184B  0874               	movf	fputc@fp+1,w
 10774  184C  0087               	movwf	7
 10775  184D  3142               	addfsr 1,2
 10776  184E  3001               	movlw	1
 10777  184F  0781               	addwf	1,f
 10778  1850  3141               	addfsr 1,1
 10779  1851  1803               	skipnc
 10780  1852  0A81               	incf	1,f
 10781  1853  0008               	return
 10782  1854                     __end_of_fputc:	
 10783                           
 10784                           	psect	text28
 10785  0003                     __ptext28:	
 10786 ;; *************** function _putch *****************
 10787 ;; Defined at:
 10788 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
 10789 ;; Parameters:    Size  Location     Type
 10790 ;;  c               1    wreg     unsigned char 
 10791 ;; Auto vars:     Size  Location     Type
 10792 ;;  c               1    0[COMMON] unsigned char 
 10793 ;; Return value:  Size  Location     Type
 10794 ;;                  1    wreg      void 
 10795 ;; Registers used:
 10796 ;;		wreg
 10797 ;; Tracked objects:
 10798 ;;		On entry : 0/0
 10799 ;;		On exit  : 0/0
 10800 ;;		Unchanged: 0/0
 10801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10806 ;;Total ram usage:        0 bytes
 10807 ;; Hardware stack levels used:    1
 10808 ;; Hardware stack levels required when called:    1
 10809 ;; This function calls:
 10810 ;;		Nothing
 10811 ;; This function is called by:
 10812 ;;		_fputc
 10813 ;; This function uses a non-reentrant model
 10814 ;;
 10815                           
 10816                           
 10817                           ;psect for function _putch
 10818  0003                     _putch:	
 10819                           
 10820                           ;incstack = 0
 10821                           ; Regs used in _putch: [wreg]
 10822  0003  0008               	return
 10823  0004                     __end_of_putch:	
 10824                           
 10825                           	psect	text29
 10826  2A02                     __ptext29:	
 10827 ;; *************** function _atoi *****************
 10828 ;; Defined at:
 10829 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 10830 ;; Parameters:    Size  Location     Type
 10831 ;;  s               2    7[COMMON] PTR const unsigned char 
 10832 ;;		 -> STR_24(18), STR_23(18), STR_22(19), STR_21(20), 
 10833 ;;		 -> STR_20(20), STR_19(21), STR_18(21), STR_17(21), 
 10834 ;;		 -> STR_16(22), STR_15(22), STR_14(21), STR_13(21), 
 10835 ;;		 -> STR_10(15), STR_9(40), STR_8(37), STR_7(15), 
 10836 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_3(22), 
 10837 ;;		 -> STR_2(71), STR_1(40), 
 10838 ;; Auto vars:     Size  Location     Type
 10839 ;;  n               2   11[BANK0 ] int 
 10840 ;;  neg             2    4[BANK0 ] int 
 10841 ;; Return value:  Size  Location     Type
 10842 ;;                  2    7[COMMON] int 
 10843 ;; Registers used:
 10844 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10845 ;; Tracked objects:
 10846 ;;		On entry : 0/0
 10847 ;;		On exit  : 0/0
 10848 ;;		Unchanged: 0/0
 10849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10850 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10851 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10852 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10853 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10854 ;;Total ram usage:       15 bytes
 10855 ;; Hardware stack levels used:    1
 10856 ;; Hardware stack levels required when called:    2
 10857 ;; This function calls:
 10858 ;;		___wmul
 10859 ;;		_isdigit
 10860 ;;		_isspace
 10861 ;; This function is called by:
 10862 ;;		_vfpfcnvrt
 10863 ;; This function uses a non-reentrant model
 10864 ;;
 10865                           
 10866                           
 10867                           ;psect for function _atoi
 10868  2A02                     _atoi:	
 10869                           
 10870                           ;incstack = 0
 10871                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10872  2A02  0020               	movlb	0	; select bank0
 10873  2A03  01AB               	clrf	atoi@n
 10874  2A04  01AC               	clrf	atoi@n+1
 10875  2A05  01A4               	clrf	atoi@neg
 10876  2A06  01A5               	clrf	atoi@neg+1
 10877  2A07                     l6721:	
 10878  2A07  01AA               	clrf	_atoi$1714
 10879  2A08  0AAA               	incf	_atoi$1714,f
 10880  2A09  0877               	movf	atoi@s,w
 10881  2A0A  0084               	movwf	4
 10882  2A0B  0878               	movf	atoi@s+1,w
 10883  2A0C  0085               	movwf	5
 10884  2A0D  0012               	moviw fsr0++
 10885  2A0E  3A20               	xorlw	32
 10886  2A0F  1903               	btfsc	3,2
 10887  2A10  2A23               	goto	l6729
 10888  2A11  0877               	movf	atoi@s,w
 10889  2A12  0084               	movwf	4
 10890  2A13  0878               	movf	atoi@s+1,w
 10891  2A14  0085               	movwf	5
 10892  2A15  0800               	movf	0,w	;code access
 10893  2A16  3EF7               	addlw	247
 10894  2A17  00A0               	movwf	??_atoi
 10895  2A18  30FF               	movlw	255
 10896  2A19  1803               	skipnc
 10897  2A1A  3000               	movlw	0
 10898  2A1B  00A1               	movwf	??_atoi+1
 10899  2A1C  3000               	movlw	0
 10900  2A1D  0221               	subwf	??_atoi+1,w
 10901  2A1E  3005               	movlw	5
 10902  2A1F  1903               	skipnz
 10903  2A20  0220               	subwf	??_atoi,w
 10904  2A21  1803               	btfsc	3,0
 10905  2A22  01AA               	clrf	_atoi$1714
 10906  2A23                     l6729:	
 10907  2A23  082A               	movf	_atoi$1714,w
 10908  2A24  00A0               	movwf	??_atoi
 10909  2A25  01A1               	clrf	??_atoi+1
 10910  2A26  0820               	movf	??_atoi,w
 10911  2A27  00A6               	movwf	_atoi$1713
 10912  2A28  0821               	movf	??_atoi+1,w
 10913  2A29  00A7               	movwf	_atoi$1713+1
 10914  2A2A  0826               	movf	_atoi$1713,w
 10915  2A2B  0427               	iorwf	_atoi$1713+1,w
 10916  2A2C  1903               	btfsc	3,2
 10917  2A2D  2A38               	goto	l6737
 10918  2A2E  3001               	movlw	1
 10919  2A2F  07F7               	addwf	atoi@s,f
 10920  2A30  3000               	movlw	0
 10921  2A31  3DF8               	addwfc	atoi@s+1,f
 10922  2A32  2A07               	goto	l6721
 10923  2A33                     l6735:	
 10924  2A33  3001               	movlw	1
 10925  2A34  00A4               	movwf	atoi@neg
 10926  2A35  3000               	movlw	0
 10927  2A36  00A5               	movwf	atoi@neg+1
 10928  2A37  2A6B               	goto	l1421
 10929  2A38                     l6737:	
 10930  2A38  0877               	movf	atoi@s,w
 10931  2A39  0084               	movwf	4
 10932  2A3A  0878               	movf	atoi@s+1,w
 10933  2A3B  0085               	movwf	5
 10934  2A3C  0800               	movf	0,w	;code access
 10935  2A3D  00A0               	movwf	??_atoi
 10936  2A3E  01A1               	clrf	??_atoi+1
 10937                           
 10938                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10939                           ; Switch size 1, requested type "simple"
 10940                           ; Number of cases is 1, Range of values is 0 to 0
 10941                           ; switch strategies available:
 10942                           ; Name         Instructions Cycles
 10943                           ; simple_byte            4     3 (average)
 10944                           ; direct_byte            8     6 (fixed)
 10945                           ; jumptable            260     6 (fixed)
 10946                           ;	Chosen strategy is simple_byte
 10947  2A3F  0821               	movf	??_atoi+1,w
 10948  2A40  3A00               	xorlw	0	; case 0
 10949  2A41  1903               	skipnz
 10950  2A42  2A44               	goto	l7835
 10951  2A43  2A6F               	goto	l6743
 10952  2A44                     l7835:	
 10953                           
 10954                           ; Switch size 1, requested type "simple"
 10955                           ; Number of cases is 2, Range of values is 43 to 45
 10956                           ; switch strategies available:
 10957                           ; Name         Instructions Cycles
 10958                           ; simple_byte            7     4 (average)
 10959                           ; direct_byte           15     9 (fixed)
 10960                           ; jumptable            263     9 (fixed)
 10961                           ;	Chosen strategy is simple_byte
 10962  2A44  0820               	movf	??_atoi,w
 10963  2A45  3A2B               	xorlw	43	; case 43
 10964  2A46  1903               	skipnz
 10965  2A47  2A6B               	goto	l1421
 10966  2A48  3A06               	xorlw	6	; case 45
 10967  2A49  1903               	skipnz
 10968  2A4A  2A33               	goto	l6735
 10969  2A4B  2A6F               	goto	l6743
 10970  2A4C                     l6739:	
 10971  2A4C  0877               	movf	atoi@s,w
 10972  2A4D  0084               	movwf	4
 10973  2A4E  0878               	movf	atoi@s+1,w
 10974  2A4F  0085               	movwf	5
 10975  2A50  0800               	movf	0,w	;code access
 10976  2A51  00A0               	movwf	??_atoi
 10977  2A52  082C               	movf	atoi@n+1,w
 10978  2A53  00F2               	movwf	___wmul@multiplier+1
 10979  2A54  082B               	movf	atoi@n,w
 10980  2A55  00F1               	movwf	___wmul@multiplier
 10981  2A56  300A               	movlw	10
 10982  2A57  00F3               	movwf	___wmul@multiplicand
 10983  2A58  3000               	movlw	0
 10984  2A59  00F4               	movwf	___wmul@multiplicand+1
 10985  2A5A  31B2  2260  31AA   	fcall	___wmul
 10986  2A5D  0872               	movf	?___wmul+1,w
 10987  2A5E  0020               	movlb	0	; select bank0
 10988  2A5F  00A2               	movwf	??_atoi+2
 10989  2A60  0820               	movf	??_atoi,w
 10990  2A61  0271               	subwf	?___wmul,w
 10991  2A62  00A1               	movwf	??_atoi+1
 10992  2A63  1C03               	skipc
 10993  2A64  03A2               	decf	??_atoi+2,f
 10994  2A65  0821               	movf	??_atoi+1,w
 10995  2A66  3E30               	addlw	48
 10996  2A67  00AB               	movwf	atoi@n
 10997  2A68  3000               	movlw	0
 10998  2A69  3D22               	addwfc	??_atoi+2,w
 10999  2A6A  00AC               	movwf	atoi@n+1
 11000  2A6B                     l1421:	
 11001  2A6B  3001               	movlw	1
 11002  2A6C  07F7               	addwf	atoi@s,f
 11003  2A6D  3000               	movlw	0
 11004  2A6E  3DF8               	addwfc	atoi@s+1,f
 11005  2A6F                     l6743:	
 11006  2A6F  0877               	movf	atoi@s,w
 11007  2A70  0084               	movwf	4
 11008  2A71  0878               	movf	atoi@s+1,w
 11009  2A72  0085               	movwf	5
 11010  2A73  0800               	movf	0,w	;code access
 11011  2A74  3ED0               	addlw	208
 11012  2A75  00A0               	movwf	??_atoi
 11013  2A76  30FF               	movlw	255
 11014  2A77  1803               	skipnc
 11015  2A78  3000               	movlw	0
 11016  2A79  00A1               	movwf	??_atoi+1
 11017  2A7A  3000               	movlw	0
 11018  2A7B  0221               	subwf	??_atoi+1,w
 11019  2A7C  300A               	movlw	10
 11020  2A7D  1903               	skipnz
 11021  2A7E  0220               	subwf	??_atoi,w
 11022  2A7F  1803               	btfsc	3,0
 11023  2A80  2A83               	goto	u8430
 11024  2A81  3001               	movlw	1
 11025  2A82  2A84               	goto	u8440
 11026  2A83                     u8430:	
 11027  2A83  3000               	movlw	0
 11028  2A84                     u8440:	
 11029  2A84  00A2               	movwf	??_atoi+2
 11030  2A85  01A3               	clrf	??_atoi+3
 11031  2A86  0822               	movf	??_atoi+2,w
 11032  2A87  00A8               	movwf	_atoi$1715
 11033  2A88  0823               	movf	??_atoi+3,w
 11034  2A89  00A9               	movwf	_atoi$1715+1
 11035  2A8A  0828               	movf	_atoi$1715,w
 11036  2A8B  0429               	iorwf	_atoi$1715+1,w
 11037  2A8C  1D03               	btfss	3,2
 11038  2A8D  2A4C               	goto	l6739
 11039  2A8E  0824               	movf	atoi@neg,w
 11040  2A8F  0425               	iorwf	atoi@neg+1,w
 11041  2A90  1D03               	btfss	3,2
 11042  2A91  2A9E               	goto	l6753
 11043  2A92  092B               	comf	atoi@n,w
 11044  2A93  00A0               	movwf	??_atoi
 11045  2A94  092C               	comf	atoi@n+1,w
 11046  2A95  00A1               	movwf	??_atoi+1
 11047  2A96  0AA0               	incf	??_atoi,f
 11048  2A97  1903               	skipnz
 11049  2A98  0AA1               	incf	??_atoi+1,f
 11050  2A99  0820               	movf	??_atoi,w
 11051  2A9A  00F7               	movwf	?_atoi
 11052  2A9B  0821               	movf	??_atoi+1,w
 11053  2A9C  00F8               	movwf	?_atoi+1
 11054  2A9D  0008               	return
 11055  2A9E                     l6753:	
 11056  2A9E  082C               	movf	atoi@n+1,w
 11057  2A9F  00F8               	movwf	?_atoi+1
 11058  2AA0  082B               	movf	atoi@n,w
 11059  2AA1  00F7               	movwf	?_atoi
 11060  2AA2  0008               	return
 11061  2AA3                     __end_of_atoi:	
 11062                           
 11063                           	psect	text30
 11064  07E4                     __ptext30:	
 11065 ;; *************** function _isspace *****************
 11066 ;; Defined at:
 11067 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 11068 ;; Parameters:    Size  Location     Type
 11069 ;;  c               2    1[COMMON] int 
 11070 ;; Auto vars:     Size  Location     Type
 11071 ;;		None
 11072 ;; Return value:  Size  Location     Type
 11073 ;;                  2    1[COMMON] int 
 11074 ;; Registers used:
 11075 ;;		wreg, status,2, status,0
 11076 ;; Tracked objects:
 11077 ;;		On entry : 0/0
 11078 ;;		On exit  : 0/0
 11079 ;;		Unchanged: 0/0
 11080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11081 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11082 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11083 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11084 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11085 ;;Total ram usage:        5 bytes
 11086 ;; Hardware stack levels used:    1
 11087 ;; Hardware stack levels required when called:    1
 11088 ;; This function calls:
 11089 ;;		Nothing
 11090 ;; This function is called by:
 11091 ;;		_atoi
 11092 ;; This function uses a non-reentrant model
 11093 ;;
 11094                           
 11095                           
 11096                           ;psect for function _isspace
 11097  07E4                     _isspace:	
 11098                           
 11099                           ;incstack = 0
 11100                           ; Regs used in _isspace: [wreg+status,2+status,0]
 11101  07E4  01F5               	clrf	_isspace$1740
 11102  07E5  0AF5               	incf	_isspace$1740,f
 11103  07E6  3020               	movlw	32
 11104  07E7  0671               	xorwf	isspace@c,w
 11105  07E8  0472               	iorwf	isspace@c+1,w
 11106  07E9  1903               	btfsc	3,2
 11107  07EA  2FF8               	goto	l4273
 11108  07EB  0871               	movf	isspace@c,w
 11109  07EC  3EF7               	addlw	247
 11110  07ED  00F3               	movwf	??_isspace
 11111  07EE  30FF               	movlw	255
 11112  07EF  3D72               	addwfc	isspace@c+1,w
 11113  07F0  00F4               	movwf	??_isspace+1
 11114  07F1  3000               	movlw	0
 11115  07F2  0274               	subwf	??_isspace+1,w
 11116  07F3  3005               	movlw	5
 11117  07F4  1903               	skipnz
 11118  07F5  0273               	subwf	??_isspace,w
 11119  07F6  1803               	btfsc	3,0
 11120  07F7  01F5               	clrf	_isspace$1740
 11121  07F8                     l4273:	
 11122  07F8  0875               	movf	_isspace$1740,w
 11123  07F9  00F3               	movwf	??_isspace
 11124  07FA  01F4               	clrf	??_isspace+1
 11125  07FB  0873               	movf	??_isspace,w
 11126  07FC  00F1               	movwf	?_isspace
 11127  07FD  0874               	movf	??_isspace+1,w
 11128  07FE  00F2               	movwf	?_isspace+1
 11129  07FF  0008               	return
 11130  0800                     __end_of_isspace:	
 11131                           
 11132                           	psect	text31
 11133  31D3                     __ptext31:	
 11134 ;; *************** function _isdigit *****************
 11135 ;; Defined at:
 11136 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 11137 ;; Parameters:    Size  Location     Type
 11138 ;;  c               2    1[COMMON] int 
 11139 ;; Auto vars:     Size  Location     Type
 11140 ;;		None
 11141 ;; Return value:  Size  Location     Type
 11142 ;;                  2    1[COMMON] int 
 11143 ;; Registers used:
 11144 ;;		wreg, status,2, status,0
 11145 ;; Tracked objects:
 11146 ;;		On entry : 0/0
 11147 ;;		On exit  : 0/0
 11148 ;;		Unchanged: 0/0
 11149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11150 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11152 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11153 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11154 ;;Total ram usage:        6 bytes
 11155 ;; Hardware stack levels used:    1
 11156 ;; Hardware stack levels required when called:    1
 11157 ;; This function calls:
 11158 ;;		Nothing
 11159 ;; This function is called by:
 11160 ;;		_vfpfcnvrt
 11161 ;;		_atoi
 11162 ;; This function uses a non-reentrant model
 11163 ;;
 11164                           
 11165                           
 11166                           ;psect for function _isdigit
 11167  31D3                     _isdigit:	
 11168                           
 11169                           ;incstack = 0
 11170                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 11171  31D3  0871               	movf	isdigit@c,w
 11172  31D4  3ED0               	addlw	208
 11173  31D5  00F3               	movwf	??_isdigit
 11174  31D6  30FF               	movlw	255
 11175  31D7  3D72               	addwfc	isdigit@c+1,w
 11176  31D8  00F4               	movwf	??_isdigit+1
 11177  31D9  3000               	movlw	0
 11178  31DA  0274               	subwf	??_isdigit+1,w
 11179  31DB  300A               	movlw	10
 11180  31DC  1903               	skipnz
 11181  31DD  0273               	subwf	??_isdigit,w
 11182  31DE  1803               	btfsc	3,0
 11183  31DF  29E2               	goto	u4130
 11184  31E0  3001               	movlw	1
 11185  31E1  29E3               	goto	u4140
 11186  31E2                     u4130:	
 11187  31E2  3000               	movlw	0
 11188  31E3                     u4140:	
 11189  31E3  00F5               	movwf	??_isdigit+2
 11190  31E4  01F6               	clrf	??_isdigit+3
 11191  31E5  0875               	movf	??_isdigit+2,w
 11192  31E6  00F1               	movwf	?_isdigit
 11193  31E7  0876               	movf	??_isdigit+3,w
 11194  31E8  00F2               	movwf	?_isdigit+1
 11195  31E9  0008               	return
 11196  31EA                     __end_of_isdigit:	
 11197                           
 11198                           	psect	text32
 11199  3246                     __ptext32:	
 11200 ;; *************** function _EUSART_Write_Text *****************
 11201 ;; Defined at:
 11202 ;;		line 75 in file "EUSART.c"
 11203 ;; Parameters:    Size  Location     Type
 11204 ;;  text            2    2[COMMON] PTR unsigned char 
 11205 ;;		 -> STR_25(3), STR_12(3), STR_11(38), messageBuffer(127), 
 11206 ;; Auto vars:     Size  Location     Type
 11207 ;;  i               2    5[COMMON] int 
 11208 ;; Return value:  Size  Location     Type
 11209 ;;                  1    wreg      void 
 11210 ;; Registers used:
 11211 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11212 ;; Tracked objects:
 11213 ;;		On entry : 0/0
 11214 ;;		On exit  : 0/0
 11215 ;;		Unchanged: 0/0
 11216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11217 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11218 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11219 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11220 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11221 ;;Total ram usage:        5 bytes
 11222 ;; Hardware stack levels used:    1
 11223 ;; Hardware stack levels required when called:    2
 11224 ;; This function calls:
 11225 ;;		_EUSART_Write
 11226 ;; This function is called by:
 11227 ;;		_statemachine
 11228 ;;		_printcellParameters
 11229 ;;		_printotAFERegisters
 11230 ;; This function uses a non-reentrant model
 11231 ;;
 11232                           
 11233                           
 11234                           ;psect for function _EUSART_Write_Text
 11235  3246                     _EUSART_Write_Text:	
 11236                           
 11237                           ;EUSART.c: 75: void EUSART_Write_Text(char *text);EUSART.c: 76: {;EUSART.c: 77:   int i;
      +                          ;EUSART.c: 78:   for(i=0;text[i]!='\0';i++)
 11238                           
 11239                           ;incstack = 0
 11240                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11241  3246  01F5               	clrf	EUSART_Write_Text@i
 11242  3247  01F6               	clrf	EUSART_Write_Text@i+1
 11243  3248                     l5835:	
 11244  3248  0872               	movf	EUSART_Write_Text@text,w
 11245  3249  0775               	addwf	EUSART_Write_Text@i,w
 11246  324A  0084               	movwf	4
 11247  324B  0873               	movf	EUSART_Write_Text@text+1,w
 11248  324C  3D76               	addwfc	EUSART_Write_Text@i+1,w
 11249  324D  0085               	movwf	5
 11250  324E  0012               	moviw fsr0++
 11251  324F  1903               	btfsc	3,2
 11252  3250  0008               	return
 11253                           
 11254                           ;EUSART.c: 79:    EUSART_Write(text[i]);
 11255  3251  0872               	movf	EUSART_Write_Text@text,w
 11256  3252  0775               	addwf	EUSART_Write_Text@i,w
 11257  3253  0084               	movwf	4
 11258  3254  0873               	movf	EUSART_Write_Text@text+1,w
 11259  3255  3D76               	addwfc	EUSART_Write_Text@i+1,w
 11260  3256  0085               	movwf	5
 11261  3257  0800               	movf	0,w	;code access
 11262  3258  3188  2000  31B2   	fcall	_EUSART_Write
 11263  325B  3001               	movlw	1
 11264  325C  07F5               	addwf	EUSART_Write_Text@i,f
 11265  325D  3000               	movlw	0
 11266  325E  3DF6               	addwfc	EUSART_Write_Text@i+1,f
 11267  325F  2A48               	goto	l5835
 11268  3260                     __end_of_EUSART_Write_Text:	
 11269                           
 11270                           	psect	text33
 11271  0800                     __ptext33:	
 11272 ;; *************** function _EUSART_Write *****************
 11273 ;; Defined at:
 11274 ;;		line 56 in file "EUSART.c"
 11275 ;; Parameters:    Size  Location     Type
 11276 ;;  txData          1    wreg     unsigned char 
 11277 ;; Auto vars:     Size  Location     Type
 11278 ;;  txData          1    1[COMMON] unsigned char 
 11279 ;; Return value:  Size  Location     Type
 11280 ;;                  1    wreg      void 
 11281 ;; Registers used:
 11282 ;;		wreg
 11283 ;; Tracked objects:
 11284 ;;		On entry : 0/0
 11285 ;;		On exit  : 0/0
 11286 ;;		Unchanged: 0/0
 11287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11289 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11291 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11292 ;;Total ram usage:        1 bytes
 11293 ;; Hardware stack levels used:    1
 11294 ;; Hardware stack levels required when called:    1
 11295 ;; This function calls:
 11296 ;;		Nothing
 11297 ;; This function is called by:
 11298 ;;		_EUSART_Write_Text
 11299 ;; This function uses a non-reentrant model
 11300 ;;
 11301                           
 11302                           
 11303                           ;psect for function _EUSART_Write
 11304  0800                     _EUSART_Write:	
 11305                           
 11306                           ;incstack = 0
 11307                           ; Regs used in _EUSART_Write: [wreg]
 11308                           ;EUSART_Write@txData stored from wreg
 11309  0800  00F1               	movwf	EUSART_Write@txData
 11310  0801                     l253:	
 11311                           ;EUSART.c: 59:     {;EUSART.c: 60:     }
 11312                           
 11313                           
 11314                           ;EUSART.c: 58:     while(0 == PIR1bits.TXIF)
 11315  0801  0020               	movlb	0	; select bank0
 11316  0802  1E11               	btfss	17,4	;volatile
 11317  0803  2801               	goto	l253
 11318                           
 11319                           ;EUSART.c: 62:     TX1REG = txData;
 11320  0804  0871               	movf	EUSART_Write@txData,w
 11321  0805  0023               	movlb	3	; select bank3
 11322  0806  009A               	movwf	26	;volatile
 11323  0807  0008               	return
 11324  0808                     __end_of_EUSART_Write:	
 11325                           
 11326                           	psect	text34
 11327  2006                     __ptext34:	
 11328 ;; *************** function _init_AFE *****************
 11329 ;; Defined at:
 11330 ;;		line 3 in file "BQ76920.c"
 11331 ;; Parameters:    Size  Location     Type
 11332 ;;		None
 11333 ;; Auto vars:     Size  Location     Type
 11334 ;;		None
 11335 ;; Return value:  Size  Location     Type
 11336 ;;                  1    wreg      void 
 11337 ;; Registers used:
 11338 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11339 ;; Tracked objects:
 11340 ;;		On entry : 0/0
 11341 ;;		On exit  : 0/0
 11342 ;;		Unchanged: 0/0
 11343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11348 ;;Total ram usage:        0 bytes
 11349 ;; Hardware stack levels used:    1
 11350 ;; Hardware stack levels required when called:    4
 11351 ;; This function calls:
 11352 ;;		_setCellOvervoltageProtection
 11353 ;;		_setCellUndervoltageProtection
 11354 ;;		_setOverCurrentDischargeProtection
 11355 ;;		_setShortCircuitProtection
 11356 ;;		_setShuntResistorValue
 11357 ;;		_setTemperatureLimitsint
 11358 ;; This function is called by:
 11359 ;;		_statemachine
 11360 ;; This function uses a non-reentrant model
 11361 ;;
 11362                           
 11363                           
 11364                           ;psect for function _init_AFE
 11365  2006                     _init_AFE:	
 11366                           
 11367                           ;BQ76920.c: 5:     setTemperatureLimitsint(-20, 45, 0, 45);
 11368                           
 11369                           ;incstack = 0
 11370                           ; Regs used in _init_AFE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11371  2006  30EC               	movlw	236
 11372  2007  0020               	movlb	0	; select bank0
 11373  2008  00A0               	movwf	setTemperatureLimitsint@minDischarge_degC
 11374  2009  30FF               	movlw	255
 11375  200A  00A1               	movwf	setTemperatureLimitsint@minDischarge_degC+1
 11376  200B  302D               	movlw	45
 11377  200C  00A2               	movwf	setTemperatureLimitsint@maxDischarge_degC
 11378  200D  3000               	movlw	0
 11379  200E  00A3               	movwf	setTemperatureLimitsint@maxDischarge_degC+1
 11380  200F  3000               	movlw	0
 11381  2010  00A4               	movwf	setTemperatureLimitsint@minCharge_degC
 11382  2011  00A5               	movwf	setTemperatureLimitsint@minCharge_degC+1
 11383  2012  302D               	movlw	45
 11384  2013  00A6               	movwf	setTemperatureLimitsint@maxCharge_degC
 11385  2014  3000               	movlw	0
 11386  2015  00A7               	movwf	setTemperatureLimitsint@maxCharge_degC+1
 11387  2016  31B5  2543  31A0   	fcall	_setTemperatureLimitsint
 11388                           
 11389                           ;BQ76920.c: 6:     setShuntResistorValue(0.02);
 11390  2019  303C               	movlw	60
 11391  201A  00F4               	movwf	setShuntResistorValue@res_mOhm+3
 11392  201B  30A3               	movlw	163
 11393  201C  00F3               	movwf	setShuntResistorValue@res_mOhm+2
 11394  201D  30D7               	movlw	215
 11395  201E  00F2               	movwf	setShuntResistorValue@res_mOhm+1
 11396  201F  300A               	movlw	10
 11397  2020  00F1               	movwf	setShuntResistorValue@res_mOhm
 11398  2021  31B1  2192  31A0   	fcall	_setShuntResistorValue
 11399                           
 11400                           ;BQ76920.c: 9:     setShortCircuitProtection(500, 200);
 11401  2024  3000               	movlw	0
 11402  2025  0020               	movlb	0	; select bank0
 11403  2026  00E9               	movwf	setShortCircuitProtection@current_mA+3
 11404  2027  3000               	movlw	0
 11405  2028  00E8               	movwf	setShortCircuitProtection@current_mA+2
 11406  2029  3001               	movlw	1
 11407  202A  00E7               	movwf	setShortCircuitProtection@current_mA+1
 11408  202B  30F4               	movlw	244
 11409  202C  00E6               	movwf	setShortCircuitProtection@current_mA
 11410  202D  30C8               	movlw	200
 11411  202E  00EA               	movwf	setShortCircuitProtection@delay_us
 11412  202F  3000               	movlw	0
 11413  2030  00EB               	movwf	setShortCircuitProtection@delay_us+1
 11414  2031  31A6  26E8  31A0   	fcall	_setShortCircuitProtection
 11415                           
 11416                           ;BQ76920.c: 14:     setOverCurrentDischargeProtection(10, 320);
 11417  2034  3000               	movlw	0
 11418  2035  0020               	movlb	0	; select bank0
 11419  2036  00E9               	movwf	setOverCurrentDischargeProtection@current_mA+3
 11420  2037  3000               	movlw	0
 11421  2038  00E8               	movwf	setOverCurrentDischargeProtection@current_mA+2
 11422  2039  3000               	movlw	0
 11423  203A  00E7               	movwf	setOverCurrentDischargeProtection@current_mA+1
 11424  203B  300A               	movlw	10
 11425  203C  00E6               	movwf	setOverCurrentDischargeProtection@current_mA
 11426  203D  3040               	movlw	64
 11427  203E  00EA               	movwf	setOverCurrentDischargeProtection@delay_ms
 11428  203F  3001               	movlw	1
 11429  2040  00EB               	movwf	setOverCurrentDischargeProtection@delay_ms+1
 11430  2041  31A5  25D3  31A0   	fcall	_setOverCurrentDischargeProtection
 11431                           
 11432                           ;BQ76920.c: 15:     setCellUndervoltageProtection(2900, 2);
 11433  2044  3054               	movlw	84
 11434  2045  0020               	movlb	0	; select bank0
 11435  2046  00B2               	movwf	setCellUndervoltageProtection@voltage_mV
 11436  2047  300B               	movlw	11
 11437  2048  00B3               	movwf	setCellUndervoltageProtection@voltage_mV+1
 11438  2049  3002               	movlw	2
 11439  204A  00B4               	movwf	setCellUndervoltageProtection@delay_s
 11440  204B  3000               	movlw	0
 11441  204C  00B5               	movwf	setCellUndervoltageProtection@delay_s+1
 11442  204D  31A0  205C  31A0   	fcall	_setCellUndervoltageProtection
 11443                           
 11444                           ;BQ76920.c: 16:     setCellOvervoltageProtection(4100,2);
 11445  2050  3004               	movlw	4
 11446  2051  0020               	movlb	0	; select bank0
 11447  2052  00B2               	movwf	setCellOvervoltageProtection@voltage_mV
 11448  2053  3010               	movlw	16
 11449  2054  00B3               	movwf	setCellOvervoltageProtection@voltage_mV+1
 11450  2055  3002               	movlw	2
 11451  2056  00B4               	movwf	setCellOvervoltageProtection@delay_s
 11452  2057  3000               	movlw	0
 11453  2058  00B5               	movwf	setCellOvervoltageProtection@delay_s+1
 11454  2059  31AE  264F         	fcall	_setCellOvervoltageProtection
 11455  205B  0008               	return
 11456  205C                     __end_of_init_AFE:	
 11457                           
 11458                           	psect	text35
 11459  3543                     __ptext35:	
 11460 ;; *************** function _setTemperatureLimitsint *****************
 11461 ;; Defined at:
 11462 ;;		line 61 in file "BQ76920.c"
 11463 ;; Parameters:    Size  Location     Type
 11464 ;;  minDischarge    2    0[BANK0 ] int 
 11465 ;;  maxDischarge    2    2[BANK0 ] int 
 11466 ;;  minCharge_de    2    4[BANK0 ] int 
 11467 ;;  maxCharge_de    2    6[BANK0 ] int 
 11468 ;; Auto vars:     Size  Location     Type
 11469 ;;		None
 11470 ;; Return value:  Size  Location     Type
 11471 ;;                  1    wreg      void 
 11472 ;; Registers used:
 11473 ;;		wreg, status,2, status,0, pclath, cstack
 11474 ;; Tracked objects:
 11475 ;;		On entry : 0/0
 11476 ;;		On exit  : 0/0
 11477 ;;		Unchanged: 0/0
 11478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11479 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11482 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11483 ;;Total ram usage:        8 bytes
 11484 ;; Hardware stack levels used:    1
 11485 ;; Hardware stack levels required when called:    2
 11486 ;; This function calls:
 11487 ;;		___wmul
 11488 ;; This function is called by:
 11489 ;;		_init_AFE
 11490 ;; This function uses a non-reentrant model
 11491 ;;
 11492                           
 11493                           
 11494                           ;psect for function _setTemperatureLimitsint
 11495  3543                     _setTemperatureLimitsint:	
 11496                           
 11497                           ;BQ76920.c: 63:     minCellTempDischarge = minDischarge_degC * 10;
 11498                           
 11499                           ;incstack = 0
 11500                           ; Regs used in _setTemperatureLimitsint: [wreg+status,2+status,0+pclath+cstack]
 11501  3543  0020               	movlb	0	; select bank0
 11502  3544  0821               	movf	setTemperatureLimitsint@minDischarge_degC+1,w
 11503  3545  00F2               	movwf	___wmul@multiplier+1
 11504  3546  0820               	movf	setTemperatureLimitsint@minDischarge_degC,w
 11505  3547  00F1               	movwf	___wmul@multiplier
 11506  3548  300A               	movlw	10
 11507  3549  00F3               	movwf	___wmul@multiplicand
 11508  354A  3000               	movlw	0
 11509  354B  00F4               	movwf	___wmul@multiplicand+1
 11510  354C  31B2  2260  31B5   	fcall	___wmul
 11511  354F  0872               	movf	?___wmul+1,w
 11512  3550  0023               	movlb	3	; select bank3
 11513  3551  00DF               	movwf	(_minCellTempDischarge+1)^(0+384)
 11514  3552  0871               	movf	?___wmul,w
 11515  3553  00DE               	movwf	_minCellTempDischarge^(0+384)
 11516                           
 11517                           ;BQ76920.c: 64:     maxCellTempDischarge = maxDischarge_degC * 10;
 11518  3554  0020               	movlb	0	; select bank0
 11519  3555  0823               	movf	setTemperatureLimitsint@maxDischarge_degC+1,w
 11520  3556  00F2               	movwf	___wmul@multiplier+1
 11521  3557  0822               	movf	setTemperatureLimitsint@maxDischarge_degC,w
 11522  3558  00F1               	movwf	___wmul@multiplier
 11523  3559  300A               	movlw	10
 11524  355A  00F3               	movwf	___wmul@multiplicand
 11525  355B  3000               	movlw	0
 11526  355C  00F4               	movwf	___wmul@multiplicand+1
 11527  355D  31B2  2260  31B5   	fcall	___wmul
 11528  3560  0872               	movf	?___wmul+1,w
 11529  3561  0023               	movlb	3	; select bank3
 11530  3562  00DB               	movwf	(_maxCellTempDischarge+1)^(0+384)
 11531  3563  0871               	movf	?___wmul,w
 11532  3564  00DA               	movwf	_maxCellTempDischarge^(0+384)
 11533                           
 11534                           ;BQ76920.c: 65:     minCellTempCharge = minCharge_degC * 10;
 11535  3565  0020               	movlb	0	; select bank0
 11536  3566  0825               	movf	setTemperatureLimitsint@minCharge_degC+1,w
 11537  3567  00F2               	movwf	___wmul@multiplier+1
 11538  3568  0824               	movf	setTemperatureLimitsint@minCharge_degC,w
 11539  3569  00F1               	movwf	___wmul@multiplier
 11540  356A  300A               	movlw	10
 11541  356B  00F3               	movwf	___wmul@multiplicand
 11542  356C  3000               	movlw	0
 11543  356D  00F4               	movwf	___wmul@multiplicand+1
 11544  356E  31B2  2260  31B5   	fcall	___wmul
 11545  3571  0872               	movf	?___wmul+1,w
 11546  3572  0023               	movlb	3	; select bank3
 11547  3573  00E1               	movwf	(_minCellTempCharge+1)^(0+384)
 11548  3574  0871               	movf	?___wmul,w
 11549  3575  00E0               	movwf	_minCellTempCharge^(0+384)
 11550                           
 11551                           ;BQ76920.c: 66:     maxCellTempCharge = maxCharge_degC * 10;
 11552  3576  0020               	movlb	0	; select bank0
 11553  3577  0827               	movf	setTemperatureLimitsint@maxCharge_degC+1,w
 11554  3578  00F2               	movwf	___wmul@multiplier+1
 11555  3579  0826               	movf	setTemperatureLimitsint@maxCharge_degC,w
 11556  357A  00F1               	movwf	___wmul@multiplier
 11557  357B  300A               	movlw	10
 11558  357C  00F3               	movwf	___wmul@multiplicand
 11559  357D  3000               	movlw	0
 11560  357E  00F4               	movwf	___wmul@multiplicand+1
 11561  357F  31B2  2260         	fcall	___wmul
 11562  3581  0872               	movf	?___wmul+1,w
 11563  3582  0023               	movlb	3	; select bank3
 11564  3583  00DD               	movwf	(_maxCellTempCharge+1)^(0+384)
 11565  3584  0871               	movf	?___wmul,w
 11566  3585  00DC               	movwf	_maxCellTempCharge^(0+384)
 11567  3586  0008               	return
 11568  3587                     __end_of_setTemperatureLimitsint:	
 11569                           
 11570                           	psect	text36
 11571  3260                     __ptext36:	
 11572 ;; *************** function ___wmul *****************
 11573 ;; Defined at:
 11574 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 11575 ;; Parameters:    Size  Location     Type
 11576 ;;  multiplier      2    1[COMMON] unsigned int 
 11577 ;;  multiplicand    2    3[COMMON] unsigned int 
 11578 ;; Auto vars:     Size  Location     Type
 11579 ;;  product         2    5[COMMON] unsigned int 
 11580 ;; Return value:  Size  Location     Type
 11581 ;;                  2    1[COMMON] unsigned int 
 11582 ;; Registers used:
 11583 ;;		wreg, status,2, status,0
 11584 ;; Tracked objects:
 11585 ;;		On entry : 0/0
 11586 ;;		On exit  : 0/0
 11587 ;;		Unchanged: 0/0
 11588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11589 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11590 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11592 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11593 ;;Total ram usage:        6 bytes
 11594 ;; Hardware stack levels used:    1
 11595 ;; Hardware stack levels required when called:    1
 11596 ;; This function calls:
 11597 ;;		Nothing
 11598 ;; This function is called by:
 11599 ;;		_setTemperatureLimitsint
 11600 ;;		_atoi
 11601 ;; This function uses a non-reentrant model
 11602 ;;
 11603                           
 11604                           
 11605                           ;psect for function ___wmul
 11606  3260                     ___wmul:	
 11607                           
 11608                           ;incstack = 0
 11609                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11610  3260  01F5               	clrf	___wmul@product
 11611  3261  01F6               	clrf	___wmul@product+1
 11612  3262                     l4147:	
 11613  3262  1C71               	btfss	___wmul@multiplier,0
 11614  3263  2A68               	goto	l946
 11615  3264  0873               	movf	___wmul@multiplicand,w
 11616  3265  07F5               	addwf	___wmul@product,f
 11617  3266  0874               	movf	___wmul@multiplicand+1,w
 11618  3267  3DF6               	addwfc	___wmul@product+1,f
 11619  3268                     l946:	
 11620  3268  3001               	movlw	1
 11621  3269                     u4165:	
 11622  3269  35F3               	lslf	___wmul@multiplicand,f
 11623  326A  0DF4               	rlf	___wmul@multiplicand+1,f
 11624  326B  0B89               	decfsz	9,f
 11625  326C  2A69               	goto	u4165
 11626  326D  3001               	movlw	1
 11627  326E                     u4175:	
 11628  326E  36F2               	lsrf	___wmul@multiplier+1,f
 11629  326F  0CF1               	rrf	___wmul@multiplier,f
 11630  3270  0B89               	decfsz	9,f
 11631  3271  2A6E               	goto	u4175
 11632  3272  0871               	movf	___wmul@multiplier,w
 11633  3273  0472               	iorwf	___wmul@multiplier+1,w
 11634  3274  1D03               	btfss	3,2
 11635  3275  2A62               	goto	l4147
 11636  3276  0876               	movf	___wmul@product+1,w
 11637  3277  00F2               	movwf	?___wmul+1
 11638  3278  0875               	movf	___wmul@product,w
 11639  3279  00F1               	movwf	?___wmul
 11640  327A  0008               	return
 11641  327B                     __end_of___wmul:	
 11642                           
 11643                           	psect	text37
 11644  3192                     __ptext37:	
 11645 ;; *************** function _setShuntResistorValue *****************
 11646 ;; Defined at:
 11647 ;;		line 73 in file "BQ76920.c"
 11648 ;; Parameters:    Size  Location     Type
 11649 ;;  res_mOhm        4    1[COMMON] float 
 11650 ;; Auto vars:     Size  Location     Type
 11651 ;;		None
 11652 ;; Return value:  Size  Location     Type
 11653 ;;                  1    wreg      void 
 11654 ;; Registers used:
 11655 ;;		wreg
 11656 ;; Tracked objects:
 11657 ;;		On entry : 0/0
 11658 ;;		On exit  : 0/0
 11659 ;;		Unchanged: 0/0
 11660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11661 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11664 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11665 ;;Total ram usage:        4 bytes
 11666 ;; Hardware stack levels used:    1
 11667 ;; Hardware stack levels required when called:    1
 11668 ;; This function calls:
 11669 ;;		Nothing
 11670 ;; This function is called by:
 11671 ;;		_init_AFE
 11672 ;; This function uses a non-reentrant model
 11673 ;;
 11674                           
 11675                           
 11676                           ;psect for function _setShuntResistorValue
 11677  3192                     _setShuntResistorValue:	
 11678                           
 11679                           ;BQ76920.c: 74:     shuntResistorValue_mOhm = res_mOhm;
 11680                           
 11681                           ;incstack = 0
 11682                           ; Regs used in _setShuntResistorValue: [wreg]
 11683  3192  0874               	movf	setShuntResistorValue@res_mOhm+3,w
 11684  3193  0023               	movlb	3	; select bank3
 11685  3194  00C5               	movwf	(_shuntResistorValue_mOhm+3)^(0+384)
 11686  3195  0873               	movf	setShuntResistorValue@res_mOhm+2,w
 11687  3196  00C4               	movwf	(_shuntResistorValue_mOhm+2)^(0+384)
 11688  3197  0872               	movf	setShuntResistorValue@res_mOhm+1,w
 11689  3198  00C3               	movwf	(_shuntResistorValue_mOhm+1)^(0+384)
 11690  3199  0871               	movf	setShuntResistorValue@res_mOhm,w
 11691  319A  00C2               	movwf	_shuntResistorValue_mOhm^(0+384)
 11692  319B  0008               	return
 11693  319C                     __end_of_setShuntResistorValue:	
 11694                           
 11695                           	psect	text38
 11696  26E8                     __ptext38:	
 11697 ;; *************** function _setShortCircuitProtection *****************
 11698 ;; Defined at:
 11699 ;;		line 81 in file "BQ76920.c"
 11700 ;; Parameters:    Size  Location     Type
 11701 ;;  current_mA      4   70[BANK0 ] long 
 11702 ;;  delay_us        2   74[BANK0 ] int 
 11703 ;; Auto vars:     Size  Location     Type
 11704 ;;  i               2   10[BANK1 ] int 
 11705 ;;  i               2    8[BANK1 ] int 
 11706 ;;  scaler          4    0[BANK1 ] float 
 11707 ;; Return value:  Size  Location     Type
 11708 ;;                  1    wreg      void 
 11709 ;; Registers used:
 11710 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11711 ;; Tracked objects:
 11712 ;;		On entry : 0/0
 11713 ;;		On exit  : 0/0
 11714 ;;		Unchanged: 0/0
 11715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11716 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11717 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11718 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11719 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11720 ;;Total ram usage:       21 bytes
 11721 ;; Hardware stack levels used:    1
 11722 ;; Hardware stack levels required when called:    3
 11723 ;; This function calls:
 11724 ;;		_I2C_writeRegister
 11725 ;;		___fldiv
 11726 ;;		___flge
 11727 ;;		___flmul
 11728 ;;		___xxtofl
 11729 ;; This function is called by:
 11730 ;;		_init_AFE
 11731 ;; This function uses a non-reentrant model
 11732 ;;
 11733                           
 11734                           
 11735                           ;psect for function _setShortCircuitProtection
 11736  26E8                     _setShortCircuitProtection:	
 11737                           
 11738                           ;BQ76920.c: 86:     float scaler = 1000.0;
 11739                           
 11740                           ;incstack = 0
 11741                           ; Regs used in _setShortCircuitProtection: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11742  26E8  3044               	movlw	68
 11743  26E9  0021               	movlb	1	; select bank1
 11744  26EA  00A3               	movwf	(setShortCircuitProtection@scaler+3)^(0+128)
 11745  26EB  307A               	movlw	122
 11746  26EC  00A2               	movwf	(setShortCircuitProtection@scaler+2)^(0+128)
 11747  26ED  3000               	movlw	0
 11748  26EE  00A1               	movwf	(setShortCircuitProtection@scaler+1)^(0+128)
 11749  26EF  3000               	movlw	0
 11750  26F0  00A0               	movwf	setShortCircuitProtection@scaler^(0+128)
 11751                           
 11752                           ;BQ76920.c: 87:     protect1.bits.SCD_THRESH = 0;
 11753  26F1  30F8               	movlw	-8
 11754  26F2  0023               	movlb	3	; select bank3
 11755  26F3  05E6               	andwf	_protect1^(0+384),f
 11756                           
 11757                           ;BQ76920.c: 88:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 11758  26F4  0021               	movlb	1	; select bank1
 11759  26F5  01A8               	clrf	setShortCircuitProtection@i^(0+128)
 11760  26F6  01A9               	clrf	(setShortCircuitProtection@i+1)^(0+128)
 11761  26F7                     l7289:	
 11762                           
 11763                           ;BQ76920.c: 89:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 11764  26F7  0023               	movlb	3	; select bank3
 11765  26F8  0845               	movf	(_shuntResistorValue_mOhm+3)^(0+384),w
 11766  26F9  0020               	movlb	0	; select bank0
 11767  26FA  00A9               	movwf	___flmul@b+3
 11768  26FB  0023               	movlb	3	; select bank3
 11769  26FC  0844               	movf	(_shuntResistorValue_mOhm+2)^(0+384),w
 11770  26FD  0020               	movlb	0	; select bank0
 11771  26FE  00A8               	movwf	___flmul@b+2
 11772  26FF  0023               	movlb	3	; select bank3
 11773  2700  0843               	movf	(_shuntResistorValue_mOhm+1)^(0+384),w
 11774  2701  0020               	movlb	0	; select bank0
 11775  2702  00A7               	movwf	___flmul@b+1
 11776  2703  0023               	movlb	3	; select bank3
 11777  2704  0842               	movf	_shuntResistorValue_mOhm^(0+384),w
 11778  2705  0020               	movlb	0	; select bank0
 11779  2706  00A6               	movwf	___flmul@b
 11780  2707  0869               	movf	setShortCircuitProtection@current_mA+3,w
 11781  2708  00F4               	movwf	___xxtofl@val+3
 11782  2709  0868               	movf	setShortCircuitProtection@current_mA+2,w
 11783  270A  00F3               	movwf	___xxtofl@val+2
 11784  270B  0867               	movf	setShortCircuitProtection@current_mA+1,w
 11785  270C  00F2               	movwf	___xxtofl@val+1
 11786  270D  0866               	movf	setShortCircuitProtection@current_mA,w
 11787  270E  00F1               	movwf	___xxtofl@val
 11788  270F  3001               	movlw	1
 11789  2710  31A9  216C  31A6   	fcall	___xxtofl
 11790  2713  0874               	movf	?___xxtofl+3,w
 11791  2714  0020               	movlb	0	; select bank0
 11792  2715  00AD               	movwf	___flmul@a+3
 11793  2716  0873               	movf	?___xxtofl+2,w
 11794  2717  00AC               	movwf	___flmul@a+2
 11795  2718  0872               	movf	?___xxtofl+1,w
 11796  2719  00AB               	movwf	___flmul@a+1
 11797  271A  0871               	movf	?___xxtofl,w
 11798  271B  00AA               	movwf	___flmul@a
 11799  271C  3190  2023  31A6   	fcall	___flmul
 11800  271F  0020               	movlb	0	; select bank0
 11801  2720  0829               	movf	?___flmul+3,w
 11802  2721  0021               	movlb	1	; select bank1
 11803  2722  00A7               	movwf	(_setShortCircuitProtection$2089+3)^(0+128)
 11804  2723  0020               	movlb	0	; select bank0
 11805  2724  0828               	movf	?___flmul+2,w
 11806  2725  0021               	movlb	1	; select bank1
 11807  2726  00A6               	movwf	(_setShortCircuitProtection$2089+2)^(0+128)
 11808  2727  0020               	movlb	0	; select bank0
 11809  2728  0827               	movf	?___flmul+1,w
 11810  2729  0021               	movlb	1	; select bank1
 11811  272A  00A5               	movwf	(_setShortCircuitProtection$2089+1)^(0+128)
 11812  272B  0020               	movlb	0	; select bank0
 11813  272C  0826               	movf	?___flmul,w
 11814  272D  0021               	movlb	1	; select bank1
 11815  272E  00A4               	movwf	_setShortCircuitProtection$2089^(0+128)
 11816                           
 11817                           ;BQ76920.c: 89:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 11818  272F  3044               	movlw	68
 11819  2730  0020               	movlb	0	; select bank0
 11820  2731  00C3               	movwf	___fldiv@a+3
 11821  2732  307A               	movlw	122
 11822  2733  00C2               	movwf	___fldiv@a+2
 11823  2734  3000               	movlw	0
 11824  2735  00C1               	movwf	___fldiv@a+1
 11825  2736  3000               	movlw	0
 11826  2737  00C0               	movwf	___fldiv@a
 11827  2738  0021               	movlb	1	; select bank1
 11828  2739  0823               	movf	(setShortCircuitProtection@scaler+3)^(0+128),w
 11829  273A  0020               	movlb	0	; select bank0
 11830  273B  00A9               	movwf	___flmul@b+3
 11831  273C  0021               	movlb	1	; select bank1
 11832  273D  0822               	movf	(setShortCircuitProtection@scaler+2)^(0+128),w
 11833  273E  0020               	movlb	0	; select bank0
 11834  273F  00A8               	movwf	___flmul@b+2
 11835  2740  0021               	movlb	1	; select bank1
 11836  2741  0821               	movf	(setShortCircuitProtection@scaler+1)^(0+128),w
 11837  2742  0020               	movlb	0	; select bank0
 11838  2743  00A7               	movwf	___flmul@b+1
 11839  2744  0021               	movlb	1	; select bank1
 11840  2745  0820               	movf	setShortCircuitProtection@scaler^(0+128),w
 11841  2746  0020               	movlb	0	; select bank0
 11842  2747  00A6               	movwf	___flmul@b
 11843  2748  0021               	movlb	1	; select bank1
 11844  2749  0827               	movf	(_setShortCircuitProtection$2089+3)^(0+128),w
 11845  274A  0020               	movlb	0	; select bank0
 11846  274B  00AD               	movwf	___flmul@a+3
 11847  274C  0021               	movlb	1	; select bank1
 11848  274D  0826               	movf	(_setShortCircuitProtection$2089+2)^(0+128),w
 11849  274E  0020               	movlb	0	; select bank0
 11850  274F  00AC               	movwf	___flmul@a+2
 11851  2750  0021               	movlb	1	; select bank1
 11852  2751  0825               	movf	(_setShortCircuitProtection$2089+1)^(0+128),w
 11853  2752  0020               	movlb	0	; select bank0
 11854  2753  00AB               	movwf	___flmul@a+1
 11855  2754  0021               	movlb	1	; select bank1
 11856  2755  0824               	movf	_setShortCircuitProtection$2089^(0+128),w
 11857  2756  0020               	movlb	0	; select bank0
 11858  2757  00AA               	movwf	___flmul@a
 11859  2758  3190  2023  31A6   	fcall	___flmul
 11860  275B  0020               	movlb	0	; select bank0
 11861  275C  0829               	movf	?___flmul+3,w
 11862  275D  00C7               	movwf	___fldiv@b+3
 11863  275E  0828               	movf	?___flmul+2,w
 11864  275F  00C6               	movwf	___fldiv@b+2
 11865  2760  0827               	movf	?___flmul+1,w
 11866  2761  00C5               	movwf	___fldiv@b+1
 11867  2762  0826               	movf	?___flmul,w
 11868  2763  00C4               	movwf	___fldiv@b
 11869  2764  319B  2300  31A6   	fcall	___fldiv
 11870  2767  0020               	movlb	0	; select bank0
 11871  2768  0843               	movf	?___fldiv+3,w
 11872  2769  00DD               	movwf	___flge@ff1+3
 11873  276A  0842               	movf	?___fldiv+2,w
 11874  276B  00DC               	movwf	___flge@ff1+2
 11875  276C  0841               	movf	?___fldiv+1,w
 11876  276D  00DB               	movwf	___flge@ff1+1
 11877  276E  0840               	movf	?___fldiv,w
 11878  276F  00DA               	movwf	___flge@ff1
 11879  2770  0021               	movlb	1	; select bank1
 11880  2771  0829               	movf	(setShortCircuitProtection@i+1)^(0+128),w
 11881  2772  0085               	movwf	5
 11882  2773  0828               	movf	setShortCircuitProtection@i^(0+128),w
 11883  2774  0084               	movwf	4
 11884  2775  3584               	lslf	4,f
 11885  2776  0D85               	rlf	5,f
 11886  2777  30C0               	movlw	low (_SCD_threshold_setting| (0+32768))
 11887  2778  0784               	addwf	4,f
 11888  2779  30BA               	movlw	high (_SCD_threshold_setting| (0+32768))
 11889  277A  3D85               	addwfc	5,f
 11890  277B  3F00               	moviw [0]fsr0
 11891  277C  0020               	movlb	0	; select bank0
 11892  277D  00EC               	movwf	??_setShortCircuitProtection
 11893  277E  3F01               	moviw [1]fsr0
 11894  277F  00ED               	movwf	??_setShortCircuitProtection+1
 11895  2780  086C               	movf	??_setShortCircuitProtection,w
 11896  2781  00F1               	movwf	___xxtofl@val
 11897  2782  086D               	movf	??_setShortCircuitProtection+1,w
 11898  2783  00F2               	movwf	___xxtofl@val+1
 11899  2784  0D89               	rlf	9,f
 11900  2785  3B89               	subwfb	9,f
 11901  2786  0989               	comf	9,f
 11902  2787  00F3               	movwf	___xxtofl@val+2
 11903  2788  00F4               	movwf	___xxtofl@val+3
 11904  2789  3001               	movlw	1
 11905  278A  31A9  216C  31A6   	fcall	___xxtofl
 11906  278D  0874               	movf	?___xxtofl+3,w
 11907  278E  0020               	movlb	0	; select bank0
 11908  278F  00E1               	movwf	___flge@ff2+3
 11909  2790  0873               	movf	?___xxtofl+2,w
 11910  2791  00E0               	movwf	___flge@ff2+2
 11911  2792  0872               	movf	?___xxtofl+1,w
 11912  2793  00DF               	movwf	___flge@ff2+1
 11913  2794  0871               	movf	?___xxtofl,w
 11914  2795  00DE               	movwf	___flge@ff2
 11915  2796  31B7  2708  31A6   	fcall	___flge
 11916  2799  1C03               	btfss	3,0
 11917  279A  2FA3               	goto	l7295
 11918                           
 11919                           ;BQ76920.c: 90:             protect1.bits.SCD_THRESH = i;
 11920  279B  0023               	movlb	3	; select bank3
 11921  279C  0866               	movf	_protect1^(0+384),w
 11922  279D  0021               	movlb	1	; select bank1
 11923  279E  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 11924  279F  39F8               	andlw	-8
 11925  27A0  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 11926  27A1  0023               	movlb	3	; select bank3
 11927  27A2  00E6               	movwf	_protect1^(0+384)
 11928  27A3                     l7295:	
 11929                           
 11930                           ;BQ76920.c: 92:     }
 11931  27A3  3001               	movlw	1
 11932  27A4  0021               	movlb	1	; select bank1
 11933  27A5  07A8               	addwf	setShortCircuitProtection@i^(0+128),f
 11934  27A6  3000               	movlw	0
 11935  27A7  3DA9               	addwfc	(setShortCircuitProtection@i+1)^(0+128),f
 11936  27A8  3000               	movlw	0
 11937  27A9  0229               	subwf	(setShortCircuitProtection@i+1)^(0+128),w
 11938  27AA  3007               	movlw	7
 11939  27AB  1903               	skipnz
 11940  27AC  0228               	subwf	setShortCircuitProtection@i^(0+128),w
 11941  27AD  1C03               	skipc
 11942  27AE  2EF7               	goto	l7289
 11943                           
 11944                           ;BQ76920.c: 94:     protect1.bits.SCD_DELAY = 0;
 11945  27AF  30E7               	movlw	-25
 11946  27B0  0023               	movlb	3	; select bank3
 11947  27B1  05E6               	andwf	_protect1^(0+384),f
 11948                           
 11949                           ;BQ76920.c: 95:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 11950  27B2  0021               	movlb	1	; select bank1
 11951  27B3  01AA               	clrf	setShortCircuitProtection@i_974^(0+128)
 11952  27B4  01AB               	clrf	(setShortCircuitProtection@i_974+1)^(0+128)
 11953  27B5                     l7307:	
 11954                           
 11955                           ;BQ76920.c: 96:         if (delay_us >= SCD_delay_setting[i]) {
 11956  27B5  082B               	movf	(setShortCircuitProtection@i_974+1)^(0+128),w
 11957  27B6  0085               	movwf	5
 11958  27B7  082A               	movf	setShortCircuitProtection@i_974^(0+128),w
 11959  27B8  0084               	movwf	4
 11960  27B9  3584               	lslf	4,f
 11961  27BA  0D85               	rlf	5,f
 11962  27BB  30FE               	movlw	low (_SCD_delay_setting| (0+32768))
 11963  27BC  0784               	addwf	4,f
 11964  27BD  30BA               	movlw	high (_SCD_delay_setting| (0+32768))
 11965  27BE  3D85               	addwfc	5,f
 11966  27BF  3F00               	moviw [0]fsr0
 11967  27C0  0020               	movlb	0	; select bank0
 11968  27C1  00EC               	movwf	??_setShortCircuitProtection
 11969  27C2  3F01               	moviw [1]fsr0
 11970  27C3  00ED               	movwf	??_setShortCircuitProtection+1
 11971  27C4  086B               	movf	setShortCircuitProtection@delay_us+1,w
 11972  27C5  3A80               	xorlw	128
 11973  27C6  00EE               	movwf	??_setShortCircuitProtection+2
 11974  27C7  086D               	movf	??_setShortCircuitProtection+1,w
 11975  27C8  3A80               	xorlw	128
 11976  27C9  026E               	subwf	??_setShortCircuitProtection+2,w
 11977  27CA  1D03               	skipz
 11978  27CB  2FCE               	goto	u9205
 11979  27CC  086C               	movf	??_setShortCircuitProtection,w
 11980  27CD  026A               	subwf	setShortCircuitProtection@delay_us,w
 11981  27CE                     u9205:	
 11982  27CE  1C03               	skipc
 11983  27CF  2FDF               	goto	l7311
 11984                           
 11985                           ;BQ76920.c: 97:             protect1.bits.SCD_DELAY = i;
 11986  27D0  0021               	movlb	1	; select bank1
 11987  27D1  082A               	movf	setShortCircuitProtection@i_974^(0+128),w
 11988  27D2  0020               	movlb	0	; select bank0
 11989  27D3  00EC               	movwf	??_setShortCircuitProtection
 11990  27D4  0DEC               	rlf	??_setShortCircuitProtection,f
 11991  27D5  0DEC               	rlf	??_setShortCircuitProtection,f
 11992  27D6  0DEC               	rlf	??_setShortCircuitProtection,f
 11993  27D7  0023               	movlb	3	; select bank3
 11994  27D8  0866               	movf	_protect1^(0+384),w
 11995  27D9  0020               	movlb	0	; select bank0
 11996  27DA  066C               	xorwf	??_setShortCircuitProtection,w
 11997  27DB  39E7               	andlw	-25
 11998  27DC  066C               	xorwf	??_setShortCircuitProtection,w
 11999  27DD  0023               	movlb	3	; select bank3
 12000  27DE  00E6               	movwf	_protect1^(0+384)
 12001  27DF                     l7311:	
 12002                           
 12003                           ;BQ76920.c: 99:     }
 12004  27DF  3001               	movlw	1
 12005  27E0  0021               	movlb	1	; select bank1
 12006  27E1  07AA               	addwf	setShortCircuitProtection@i_974^(0+128),f
 12007  27E2  3000               	movlw	0
 12008  27E3  3DAB               	addwfc	(setShortCircuitProtection@i_974+1)^(0+128),f
 12009  27E4  3000               	movlw	0
 12010  27E5  022B               	subwf	(setShortCircuitProtection@i_974+1)^(0+128),w
 12011  27E6  3007               	movlw	7
 12012  27E7  1903               	skipnz
 12013  27E8  022A               	subwf	setShortCircuitProtection@i_974^(0+128),w
 12014  27E9  1C03               	skipc
 12015  27EA  2FB5               	goto	l7307
 12016                           
 12017                           ;BQ76920.c: 100:     protect1.bits.RSNS = 0;
 12018  27EB  0023               	movlb	3	; select bank3
 12019  27EC  13E6               	bcf	_protect1^(0+384),7
 12020                           
 12021                           ;BQ76920.c: 102:     I2C_writeRegister(0x18, 0x06, protect1.regByte);
 12022  27ED  3018               	movlw	24
 12023  27EE  00F5               	movwf	I2C_writeRegister@slaveAddress
 12024  27EF  3000               	movlw	0
 12025  27F0  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12026  27F1  3006               	movlw	6
 12027  27F2  00F7               	movwf	I2C_writeRegister@regAddress
 12028  27F3  3000               	movlw	0
 12029  27F4  00F8               	movwf	I2C_writeRegister@regAddress+1
 12030  27F5  0866               	movf	_protect1^(0+384),w
 12031  27F6  0020               	movlb	0	; select bank0
 12032  27F7  00EC               	movwf	??_setShortCircuitProtection
 12033  27F8  01ED               	clrf	??_setShortCircuitProtection+1
 12034  27F9  086C               	movf	??_setShortCircuitProtection,w
 12035  27FA  00F9               	movwf	I2C_writeRegister@data
 12036  27FB  086D               	movf	??_setShortCircuitProtection+1,w
 12037  27FC  00FA               	movwf	I2C_writeRegister@data+1
 12038  27FD  31B2  22CE         	fcall	_I2C_writeRegister
 12039  27FF  0008               	return
 12040  2800                     __end_of_setShortCircuitProtection:	
 12041                           
 12042                           	psect	text39
 12043  25D3                     __ptext39:	
 12044 ;; *************** function _setOverCurrentDischargeProtection *****************
 12045 ;; Defined at:
 12046 ;;		line 109 in file "BQ76920.c"
 12047 ;; Parameters:    Size  Location     Type
 12048 ;;  current_mA      4   70[BANK0 ] long 
 12049 ;;  delay_ms        2   74[BANK0 ] int 
 12050 ;; Auto vars:     Size  Location     Type
 12051 ;;  i               2   10[BANK1 ] int 
 12052 ;;  i               2    8[BANK1 ] int 
 12053 ;;  scaler          4    0[BANK1 ] float 
 12054 ;; Return value:  Size  Location     Type
 12055 ;;                  1    wreg      void 
 12056 ;; Registers used:
 12057 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12058 ;; Tracked objects:
 12059 ;;		On entry : 0/0
 12060 ;;		On exit  : 0/0
 12061 ;;		Unchanged: 0/0
 12062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12063 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12064 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12065 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12066 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12067 ;;Total ram usage:       21 bytes
 12068 ;; Hardware stack levels used:    1
 12069 ;; Hardware stack levels required when called:    3
 12070 ;; This function calls:
 12071 ;;		_I2C_writeRegister
 12072 ;;		___fldiv
 12073 ;;		___flge
 12074 ;;		___flmul
 12075 ;;		___xxtofl
 12076 ;; This function is called by:
 12077 ;;		_init_AFE
 12078 ;; This function uses a non-reentrant model
 12079 ;;
 12080                           
 12081                           
 12082                           ;psect for function _setOverCurrentDischargeProtection
 12083  25D3                     _setOverCurrentDischargeProtection:	
 12084                           
 12085                           ;BQ76920.c: 112:     float scaler = 1000.0;
 12086                           
 12087                           ;incstack = 0
 12088                           ; Regs used in _setOverCurrentDischargeProtection: [wreg-fsr0h+status,2+status,0+pclath+
      +                          cstack]
 12089  25D3  3044               	movlw	68
 12090  25D4  0021               	movlb	1	; select bank1
 12091  25D5  00A3               	movwf	(setOverCurrentDischargeProtection@scaler+3)^(0+128)
 12092  25D6  307A               	movlw	122
 12093  25D7  00A2               	movwf	(setOverCurrentDischargeProtection@scaler+2)^(0+128)
 12094  25D8  3000               	movlw	0
 12095  25D9  00A1               	movwf	(setOverCurrentDischargeProtection@scaler+1)^(0+128)
 12096  25DA  3000               	movlw	0
 12097  25DB  00A0               	movwf	setOverCurrentDischargeProtection@scaler^(0+128)
 12098                           
 12099                           ;BQ76920.c: 113:     protect2.bits.OCD_THRESH = 0;
 12100  25DC  30F0               	movlw	-16
 12101  25DD  0023               	movlb	3	; select bank3
 12102  25DE  05E5               	andwf	_protect2^(0+384),f
 12103                           
 12104                           ;BQ76920.c: 114:     for (int i = 0; i < (sizeof(OCD_threshold_setting) / sizeof((OCD_th
      +                          reshold_setting)[0])) - 1; i++) {
 12105  25DF  0021               	movlb	1	; select bank1
 12106  25E0  01A8               	clrf	setOverCurrentDischargeProtection@i^(0+128)
 12107  25E1  01A9               	clrf	(setOverCurrentDischargeProtection@i+1)^(0+128)
 12108  25E2                     l7327:	
 12109                           
 12110                           ;BQ76920.c: 115:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 12111  25E2  0023               	movlb	3	; select bank3
 12112  25E3  0845               	movf	(_shuntResistorValue_mOhm+3)^(0+384),w
 12113  25E4  0020               	movlb	0	; select bank0
 12114  25E5  00A9               	movwf	___flmul@b+3
 12115  25E6  0023               	movlb	3	; select bank3
 12116  25E7  0844               	movf	(_shuntResistorValue_mOhm+2)^(0+384),w
 12117  25E8  0020               	movlb	0	; select bank0
 12118  25E9  00A8               	movwf	___flmul@b+2
 12119  25EA  0023               	movlb	3	; select bank3
 12120  25EB  0843               	movf	(_shuntResistorValue_mOhm+1)^(0+384),w
 12121  25EC  0020               	movlb	0	; select bank0
 12122  25ED  00A7               	movwf	___flmul@b+1
 12123  25EE  0023               	movlb	3	; select bank3
 12124  25EF  0842               	movf	_shuntResistorValue_mOhm^(0+384),w
 12125  25F0  0020               	movlb	0	; select bank0
 12126  25F1  00A6               	movwf	___flmul@b
 12127  25F2  0869               	movf	setOverCurrentDischargeProtection@current_mA+3,w
 12128  25F3  00F4               	movwf	___xxtofl@val+3
 12129  25F4  0868               	movf	setOverCurrentDischargeProtection@current_mA+2,w
 12130  25F5  00F3               	movwf	___xxtofl@val+2
 12131  25F6  0867               	movf	setOverCurrentDischargeProtection@current_mA+1,w
 12132  25F7  00F2               	movwf	___xxtofl@val+1
 12133  25F8  0866               	movf	setOverCurrentDischargeProtection@current_mA,w
 12134  25F9  00F1               	movwf	___xxtofl@val
 12135  25FA  3001               	movlw	1
 12136  25FB  31A9  216C  31A5   	fcall	___xxtofl
 12137  25FE  0874               	movf	?___xxtofl+3,w
 12138  25FF  0020               	movlb	0	; select bank0
 12139  2600  00AD               	movwf	___flmul@a+3
 12140  2601  0873               	movf	?___xxtofl+2,w
 12141  2602  00AC               	movwf	___flmul@a+2
 12142  2603  0872               	movf	?___xxtofl+1,w
 12143  2604  00AB               	movwf	___flmul@a+1
 12144  2605  0871               	movf	?___xxtofl,w
 12145  2606  00AA               	movwf	___flmul@a
 12146  2607  3190  2023  31A5   	fcall	___flmul
 12147  260A  0020               	movlb	0	; select bank0
 12148  260B  0829               	movf	?___flmul+3,w
 12149  260C  0021               	movlb	1	; select bank1
 12150  260D  00A7               	movwf	(_setOverCurrentDischargeProtection$2090+3)^(0+128)
 12151  260E  0020               	movlb	0	; select bank0
 12152  260F  0828               	movf	?___flmul+2,w
 12153  2610  0021               	movlb	1	; select bank1
 12154  2611  00A6               	movwf	(_setOverCurrentDischargeProtection$2090+2)^(0+128)
 12155  2612  0020               	movlb	0	; select bank0
 12156  2613  0827               	movf	?___flmul+1,w
 12157  2614  0021               	movlb	1	; select bank1
 12158  2615  00A5               	movwf	(_setOverCurrentDischargeProtection$2090+1)^(0+128)
 12159  2616  0020               	movlb	0	; select bank0
 12160  2617  0826               	movf	?___flmul,w
 12161  2618  0021               	movlb	1	; select bank1
 12162  2619  00A4               	movwf	_setOverCurrentDischargeProtection$2090^(0+128)
 12163                           
 12164                           ;BQ76920.c: 115:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 12165  261A  3044               	movlw	68
 12166  261B  0020               	movlb	0	; select bank0
 12167  261C  00C3               	movwf	___fldiv@a+3
 12168  261D  307A               	movlw	122
 12169  261E  00C2               	movwf	___fldiv@a+2
 12170  261F  3000               	movlw	0
 12171  2620  00C1               	movwf	___fldiv@a+1
 12172  2621  3000               	movlw	0
 12173  2622  00C0               	movwf	___fldiv@a
 12174  2623  0021               	movlb	1	; select bank1
 12175  2624  0823               	movf	(setOverCurrentDischargeProtection@scaler+3)^(0+128),w
 12176  2625  0020               	movlb	0	; select bank0
 12177  2626  00A9               	movwf	___flmul@b+3
 12178  2627  0021               	movlb	1	; select bank1
 12179  2628  0822               	movf	(setOverCurrentDischargeProtection@scaler+2)^(0+128),w
 12180  2629  0020               	movlb	0	; select bank0
 12181  262A  00A8               	movwf	___flmul@b+2
 12182  262B  0021               	movlb	1	; select bank1
 12183  262C  0821               	movf	(setOverCurrentDischargeProtection@scaler+1)^(0+128),w
 12184  262D  0020               	movlb	0	; select bank0
 12185  262E  00A7               	movwf	___flmul@b+1
 12186  262F  0021               	movlb	1	; select bank1
 12187  2630  0820               	movf	setOverCurrentDischargeProtection@scaler^(0+128),w
 12188  2631  0020               	movlb	0	; select bank0
 12189  2632  00A6               	movwf	___flmul@b
 12190  2633  0021               	movlb	1	; select bank1
 12191  2634  0827               	movf	(_setOverCurrentDischargeProtection$2090+3)^(0+128),w
 12192  2635  0020               	movlb	0	; select bank0
 12193  2636  00AD               	movwf	___flmul@a+3
 12194  2637  0021               	movlb	1	; select bank1
 12195  2638  0826               	movf	(_setOverCurrentDischargeProtection$2090+2)^(0+128),w
 12196  2639  0020               	movlb	0	; select bank0
 12197  263A  00AC               	movwf	___flmul@a+2
 12198  263B  0021               	movlb	1	; select bank1
 12199  263C  0825               	movf	(_setOverCurrentDischargeProtection$2090+1)^(0+128),w
 12200  263D  0020               	movlb	0	; select bank0
 12201  263E  00AB               	movwf	___flmul@a+1
 12202  263F  0021               	movlb	1	; select bank1
 12203  2640  0824               	movf	_setOverCurrentDischargeProtection$2090^(0+128),w
 12204  2641  0020               	movlb	0	; select bank0
 12205  2642  00AA               	movwf	___flmul@a
 12206  2643  3190  2023  31A5   	fcall	___flmul
 12207  2646  0020               	movlb	0	; select bank0
 12208  2647  0829               	movf	?___flmul+3,w
 12209  2648  00C7               	movwf	___fldiv@b+3
 12210  2649  0828               	movf	?___flmul+2,w
 12211  264A  00C6               	movwf	___fldiv@b+2
 12212  264B  0827               	movf	?___flmul+1,w
 12213  264C  00C5               	movwf	___fldiv@b+1
 12214  264D  0826               	movf	?___flmul,w
 12215  264E  00C4               	movwf	___fldiv@b
 12216  264F  319B  2300  31A5   	fcall	___fldiv
 12217  2652  0020               	movlb	0	; select bank0
 12218  2653  0843               	movf	?___fldiv+3,w
 12219  2654  00DD               	movwf	___flge@ff1+3
 12220  2655  0842               	movf	?___fldiv+2,w
 12221  2656  00DC               	movwf	___flge@ff1+2
 12222  2657  0841               	movf	?___fldiv+1,w
 12223  2658  00DB               	movwf	___flge@ff1+1
 12224  2659  0840               	movf	?___fldiv,w
 12225  265A  00DA               	movwf	___flge@ff1
 12226  265B  0021               	movlb	1	; select bank1
 12227  265C  0829               	movf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 12228  265D  0085               	movwf	5
 12229  265E  0828               	movf	setOverCurrentDischargeProtection@i^(0+128),w
 12230  265F  0084               	movwf	4
 12231  2660  3584               	lslf	4,f
 12232  2661  0D85               	rlf	5,f
 12233  2662  309C               	movlw	low (_OCD_threshold_setting| (0+32768))
 12234  2663  0784               	addwf	4,f
 12235  2664  30B9               	movlw	high (_OCD_threshold_setting| (0+32768))
 12236  2665  3D85               	addwfc	5,f
 12237  2666  3F00               	moviw [0]fsr0
 12238  2667  0020               	movlb	0	; select bank0
 12239  2668  00EC               	movwf	??_setOverCurrentDischargeProtection
 12240  2669  3F01               	moviw [1]fsr0
 12241  266A  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 12242  266B  086C               	movf	??_setOverCurrentDischargeProtection,w
 12243  266C  00F1               	movwf	___xxtofl@val
 12244  266D  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 12245  266E  00F2               	movwf	___xxtofl@val+1
 12246  266F  0D89               	rlf	9,f
 12247  2670  3B89               	subwfb	9,f
 12248  2671  0989               	comf	9,f
 12249  2672  00F3               	movwf	___xxtofl@val+2
 12250  2673  00F4               	movwf	___xxtofl@val+3
 12251  2674  3001               	movlw	1
 12252  2675  31A9  216C  31A5   	fcall	___xxtofl
 12253  2678  0874               	movf	?___xxtofl+3,w
 12254  2679  0020               	movlb	0	; select bank0
 12255  267A  00E1               	movwf	___flge@ff2+3
 12256  267B  0873               	movf	?___xxtofl+2,w
 12257  267C  00E0               	movwf	___flge@ff2+2
 12258  267D  0872               	movf	?___xxtofl+1,w
 12259  267E  00DF               	movwf	___flge@ff2+1
 12260  267F  0871               	movf	?___xxtofl,w
 12261  2680  00DE               	movwf	___flge@ff2
 12262  2681  31B7  2708  31A5   	fcall	___flge
 12263  2684  1C03               	btfss	3,0
 12264  2685  2E8E               	goto	l7333
 12265                           
 12266                           ;BQ76920.c: 116:             protect2.bits.OCD_THRESH = i;
 12267  2686  0023               	movlb	3	; select bank3
 12268  2687  0865               	movf	_protect2^(0+384),w
 12269  2688  0021               	movlb	1	; select bank1
 12270  2689  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 12271  268A  39F0               	andlw	-16
 12272  268B  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 12273  268C  0023               	movlb	3	; select bank3
 12274  268D  00E5               	movwf	_protect2^(0+384)
 12275  268E                     l7333:	
 12276                           
 12277                           ;BQ76920.c: 118:     }
 12278  268E  3001               	movlw	1
 12279  268F  0021               	movlb	1	; select bank1
 12280  2690  07A8               	addwf	setOverCurrentDischargeProtection@i^(0+128),f
 12281  2691  3000               	movlw	0
 12282  2692  3DA9               	addwfc	(setOverCurrentDischargeProtection@i+1)^(0+128),f
 12283  2693  3000               	movlw	0
 12284  2694  0229               	subwf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 12285  2695  300F               	movlw	15
 12286  2696  1903               	skipnz
 12287  2697  0228               	subwf	setOverCurrentDischargeProtection@i^(0+128),w
 12288  2698  1C03               	skipc
 12289  2699  2DE2               	goto	l7327
 12290                           
 12291                           ;BQ76920.c: 120:     protect2.bits.OCD_DELAY = 0;
 12292  269A  308F               	movlw	-113
 12293  269B  0023               	movlb	3	; select bank3
 12294  269C  05E5               	andwf	_protect2^(0+384),f
 12295                           
 12296                           ;BQ76920.c: 121:     for (int i = 0; i < (sizeof(OCD_delay_setting) / sizeof((OCD_delay_
      +                          setting)[0])) - 1; i++) {
 12297  269D  0021               	movlb	1	; select bank1
 12298  269E  01AA               	clrf	setOverCurrentDischargeProtection@i_983^(0+128)
 12299  269F  01AB               	clrf	(setOverCurrentDischargeProtection@i_983+1)^(0+128)
 12300  26A0                     l7345:	
 12301                           
 12302                           ;BQ76920.c: 122:         if (delay_ms >= OCD_delay_setting[i]) {
 12303  26A0  082B               	movf	(setOverCurrentDischargeProtection@i_983+1)^(0+128),w
 12304  26A1  0085               	movwf	5
 12305  26A2  082A               	movf	setOverCurrentDischargeProtection@i_983^(0+128),w
 12306  26A3  0084               	movwf	4
 12307  26A4  3584               	lslf	4,f
 12308  26A5  0D85               	rlf	5,f
 12309  26A6  30B0               	movlw	low (_OCD_delay_setting| (0+32768))
 12310  26A7  0784               	addwf	4,f
 12311  26A8  30BA               	movlw	high (_OCD_delay_setting| (0+32768))
 12312  26A9  3D85               	addwfc	5,f
 12313  26AA  3F00               	moviw [0]fsr0
 12314  26AB  0020               	movlb	0	; select bank0
 12315  26AC  00EC               	movwf	??_setOverCurrentDischargeProtection
 12316  26AD  3F01               	moviw [1]fsr0
 12317  26AE  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 12318  26AF  086B               	movf	setOverCurrentDischargeProtection@delay_ms+1,w
 12319  26B0  3A80               	xorlw	128
 12320  26B1  00EE               	movwf	??_setOverCurrentDischargeProtection+2
 12321  26B2  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 12322  26B3  3A80               	xorlw	128
 12323  26B4  026E               	subwf	??_setOverCurrentDischargeProtection+2,w
 12324  26B5  1D03               	skipz
 12325  26B6  2EB9               	goto	u9245
 12326  26B7  086C               	movf	??_setOverCurrentDischargeProtection,w
 12327  26B8  026A               	subwf	setOverCurrentDischargeProtection@delay_ms,w
 12328  26B9                     u9245:	
 12329  26B9  1C03               	skipc
 12330  26BA  2EC8               	goto	l7349
 12331                           
 12332                           ;BQ76920.c: 123:             protect2.bits.OCD_DELAY = i;
 12333  26BB  0021               	movlb	1	; select bank1
 12334  26BC  082A               	movf	setOverCurrentDischargeProtection@i_983^(0+128),w
 12335  26BD  0020               	movlb	0	; select bank0
 12336  26BE  00EC               	movwf	??_setOverCurrentDischargeProtection
 12337  26BF  0EEC               	swapf	??_setOverCurrentDischargeProtection,f
 12338  26C0  0023               	movlb	3	; select bank3
 12339  26C1  0865               	movf	_protect2^(0+384),w
 12340  26C2  0020               	movlb	0	; select bank0
 12341  26C3  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 12342  26C4  398F               	andlw	-113
 12343  26C5  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 12344  26C6  0023               	movlb	3	; select bank3
 12345  26C7  00E5               	movwf	_protect2^(0+384)
 12346  26C8                     l7349:	
 12347                           
 12348                           ;BQ76920.c: 125:     }
 12349  26C8  3001               	movlw	1
 12350  26C9  0021               	movlb	1	; select bank1
 12351  26CA  07AA               	addwf	setOverCurrentDischargeProtection@i_983^(0+128),f
 12352  26CB  3000               	movlw	0
 12353  26CC  3DAB               	addwfc	(setOverCurrentDischargeProtection@i_983+1)^(0+128),f
 12354  26CD  3000               	movlw	0
 12355  26CE  022B               	subwf	(setOverCurrentDischargeProtection@i_983+1)^(0+128),w
 12356  26CF  3007               	movlw	7
 12357  26D0  1903               	skipnz
 12358  26D1  022A               	subwf	setOverCurrentDischargeProtection@i_983^(0+128),w
 12359  26D2  1C03               	skipc
 12360  26D3  2EA0               	goto	l7345
 12361                           
 12362                           ;BQ76920.c: 127:     I2C_writeRegister(0x18, 0x07, protect2.regByte);
 12363  26D4  3018               	movlw	24
 12364  26D5  00F5               	movwf	I2C_writeRegister@slaveAddress
 12365  26D6  3000               	movlw	0
 12366  26D7  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12367  26D8  3007               	movlw	7
 12368  26D9  00F7               	movwf	I2C_writeRegister@regAddress
 12369  26DA  3000               	movlw	0
 12370  26DB  00F8               	movwf	I2C_writeRegister@regAddress+1
 12371  26DC  0023               	movlb	3	; select bank3
 12372  26DD  0865               	movf	_protect2^(0+384),w
 12373  26DE  0020               	movlb	0	; select bank0
 12374  26DF  00EC               	movwf	??_setOverCurrentDischargeProtection
 12375  26E0  01ED               	clrf	??_setOverCurrentDischargeProtection+1
 12376  26E1  086C               	movf	??_setOverCurrentDischargeProtection,w
 12377  26E2  00F9               	movwf	I2C_writeRegister@data
 12378  26E3  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 12379  26E4  00FA               	movwf	I2C_writeRegister@data+1
 12380  26E5  31B2  22CE         	fcall	_I2C_writeRegister
 12381  26E7  0008               	return
 12382  26E8                     __end_of_setOverCurrentDischargeProtection:	
 12383                           
 12384                           	psect	text40
 12385  3708                     __ptext40:	
 12386 ;; *************** function ___flge *****************
 12387 ;; Defined at:
 12388 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 12389 ;; Parameters:    Size  Location     Type
 12390 ;;  ff1             4   58[BANK0 ] void 
 12391 ;;  ff2             4   62[BANK0 ] void 
 12392 ;; Auto vars:     Size  Location     Type
 12393 ;;		None
 12394 ;; Return value:  Size  Location     Type
 12395 ;;		None               void
 12396 ;; Registers used:
 12397 ;;		wreg, status,2, status,0
 12398 ;; Tracked objects:
 12399 ;;		On entry : 0/0
 12400 ;;		On exit  : 0/0
 12401 ;;		Unchanged: 0/0
 12402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12403 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12405 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12406 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12407 ;;Total ram usage:       12 bytes
 12408 ;; Hardware stack levels used:    1
 12409 ;; Hardware stack levels required when called:    1
 12410 ;; This function calls:
 12411 ;;		Nothing
 12412 ;; This function is called by:
 12413 ;;		_setShortCircuitProtection
 12414 ;;		_setOverCurrentDischargeProtection
 12415 ;; This function uses a non-reentrant model
 12416 ;;
 12417                           
 12418                           
 12419                           ;psect for function ___flge
 12420  3708                     ___flge:	
 12421                           
 12422                           ;incstack = 0
 12423                           ; Regs used in ___flge: [wreg+status,2+status,0]
 12424  3708  3000               	movlw	0
 12425  3709  0020               	movlb	0	; select bank0
 12426  370A  055A               	andwf	___flge@ff1,w
 12427  370B  00E2               	movwf	??___flge
 12428  370C  3000               	movlw	0
 12429  370D  055B               	andwf	___flge@ff1+1,w
 12430  370E  00E3               	movwf	??___flge+1
 12431  370F  3080               	movlw	128
 12432  3710  055C               	andwf	___flge@ff1+2,w
 12433  3711  00E4               	movwf	??___flge+2
 12434  3712  307F               	movlw	127
 12435  3713  055D               	andwf	___flge@ff1+3,w
 12436  3714  00E5               	movwf	??___flge+3
 12437  3715  0865               	movf	??___flge+3,w
 12438  3716  0464               	iorwf	??___flge+2,w
 12439  3717  0463               	iorwf	??___flge+1,w
 12440  3718  0462               	iorwf	??___flge,w
 12441  3719  1D03               	skipz
 12442  371A  2F23               	goto	l1124
 12443  371B  3000               	movlw	0
 12444  371C  00DD               	movwf	___flge@ff1+3
 12445  371D  3000               	movlw	0
 12446  371E  00DC               	movwf	___flge@ff1+2
 12447  371F  3000               	movlw	0
 12448  3720  00DB               	movwf	___flge@ff1+1
 12449  3721  3000               	movlw	0
 12450  3722  00DA               	movwf	___flge@ff1
 12451  3723                     l1124:	
 12452  3723  3000               	movlw	0
 12453  3724  055E               	andwf	___flge@ff2,w
 12454  3725  00E2               	movwf	??___flge
 12455  3726  3000               	movlw	0
 12456  3727  055F               	andwf	___flge@ff2+1,w
 12457  3728  00E3               	movwf	??___flge+1
 12458  3729  3080               	movlw	128
 12459  372A  0560               	andwf	___flge@ff2+2,w
 12460  372B  00E4               	movwf	??___flge+2
 12461  372C  307F               	movlw	127
 12462  372D  0561               	andwf	___flge@ff2+3,w
 12463  372E  00E5               	movwf	??___flge+3
 12464  372F  0865               	movf	??___flge+3,w
 12465  3730  0464               	iorwf	??___flge+2,w
 12466  3731  0463               	iorwf	??___flge+1,w
 12467  3732  0462               	iorwf	??___flge,w
 12468  3733  1D03               	skipz
 12469  3734  2F3D               	goto	l5723
 12470  3735  3000               	movlw	0
 12471  3736  00E1               	movwf	___flge@ff2+3
 12472  3737  3000               	movlw	0
 12473  3738  00E0               	movwf	___flge@ff2+2
 12474  3739  3000               	movlw	0
 12475  373A  00DF               	movwf	___flge@ff2+1
 12476  373B  3000               	movlw	0
 12477  373C  00DE               	movwf	___flge@ff2
 12478  373D                     l5723:	
 12479  373D  1FDD               	btfss	___flge@ff1+3,7
 12480  373E  2F57               	goto	l5727
 12481  373F  3000               	movlw	0
 12482  3740  00E2               	movwf	??___flge
 12483  3741  3000               	movlw	0
 12484  3742  00E3               	movwf	??___flge+1
 12485  3743  3000               	movlw	0
 12486  3744  00E4               	movwf	??___flge+2
 12487  3745  3080               	movlw	128
 12488  3746  00E5               	movwf	??___flge+3
 12489  3747  085A               	movf	___flge@ff1,w
 12490  3748  02E2               	subwf	??___flge,f
 12491  3749  085B               	movf	___flge@ff1+1,w
 12492  374A  3BE3               	subwfb	??___flge+1,f
 12493  374B  085C               	movf	___flge@ff1+2,w
 12494  374C  3BE4               	subwfb	??___flge+2,f
 12495  374D  085D               	movf	___flge@ff1+3,w
 12496  374E  3BE5               	subwfb	??___flge+3,f
 12497  374F  0865               	movf	??___flge+3,w
 12498  3750  00DD               	movwf	___flge@ff1+3
 12499  3751  0864               	movf	??___flge+2,w
 12500  3752  00DC               	movwf	___flge@ff1+2
 12501  3753  0863               	movf	??___flge+1,w
 12502  3754  00DB               	movwf	___flge@ff1+1
 12503  3755  0862               	movf	??___flge,w
 12504  3756  00DA               	movwf	___flge@ff1
 12505  3757                     l5727:	
 12506  3757  1FE1               	btfss	___flge@ff2+3,7
 12507  3758  2F71               	goto	l1127
 12508  3759  3000               	movlw	0
 12509  375A  00E2               	movwf	??___flge
 12510  375B  3000               	movlw	0
 12511  375C  00E3               	movwf	??___flge+1
 12512  375D  3000               	movlw	0
 12513  375E  00E4               	movwf	??___flge+2
 12514  375F  3080               	movlw	128
 12515  3760  00E5               	movwf	??___flge+3
 12516  3761  085E               	movf	___flge@ff2,w
 12517  3762  02E2               	subwf	??___flge,f
 12518  3763  085F               	movf	___flge@ff2+1,w
 12519  3764  3BE3               	subwfb	??___flge+1,f
 12520  3765  0860               	movf	___flge@ff2+2,w
 12521  3766  3BE4               	subwfb	??___flge+2,f
 12522  3767  0861               	movf	___flge@ff2+3,w
 12523  3768  3BE5               	subwfb	??___flge+3,f
 12524  3769  0865               	movf	??___flge+3,w
 12525  376A  00E1               	movwf	___flge@ff2+3
 12526  376B  0864               	movf	??___flge+2,w
 12527  376C  00E0               	movwf	___flge@ff2+2
 12528  376D  0863               	movf	??___flge+1,w
 12529  376E  00DF               	movwf	___flge@ff2+1
 12530  376F  0862               	movf	??___flge,w
 12531  3770  00DE               	movwf	___flge@ff2
 12532  3771                     l1127:	
 12533  3771  3080               	movlw	128
 12534  3772  06DD               	xorwf	___flge@ff1+3,f
 12535  3773  3080               	movlw	128
 12536  3774  06E1               	xorwf	___flge@ff2+3,f
 12537  3775  0861               	movf	___flge@ff2+3,w
 12538  3776  025D               	subwf	___flge@ff1+3,w
 12539  3777  1D03               	skipz
 12540  3778  0008               	return
 12541  3779  0860               	movf	___flge@ff2+2,w
 12542  377A  025C               	subwf	___flge@ff1+2,w
 12543  377B  1D03               	skipz
 12544  377C  0008               	return
 12545  377D  085F               	movf	___flge@ff2+1,w
 12546  377E  025B               	subwf	___flge@ff1+1,w
 12547  377F  1D03               	skipz
 12548  3780  0008               	return
 12549  3781  085E               	movf	___flge@ff2,w
 12550  3782  025A               	subwf	___flge@ff1,w
 12551  3783  0008               	return
 12552  3784                     __end_of___flge:	
 12553                           
 12554                           	psect	text41
 12555  205C                     __ptext41:	
 12556 ;; *************** function _setCellUndervoltageProtection *****************
 12557 ;; Defined at:
 12558 ;;		line 133 in file "BQ76920.c"
 12559 ;; Parameters:    Size  Location     Type
 12560 ;;  voltage_mV      2   18[BANK0 ] int 
 12561 ;;  delay_s         2   20[BANK0 ] int 
 12562 ;; Auto vars:     Size  Location     Type
 12563 ;;  i               2   37[BANK0 ] int 
 12564 ;;  uv_trip         1   36[BANK0 ] unsigned char 
 12565 ;; Return value:  Size  Location     Type
 12566 ;;                  1    wreg      void 
 12567 ;; Registers used:
 12568 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12569 ;; Tracked objects:
 12570 ;;		On entry : 0/0
 12571 ;;		On exit  : 0/0
 12572 ;;		Unchanged: 0/0
 12573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12574 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12575 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12576 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12577 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12578 ;;Total ram usage:       21 bytes
 12579 ;; Hardware stack levels used:    1
 12580 ;; Hardware stack levels required when called:    3
 12581 ;; This function calls:
 12582 ;;		_I2C_writeRegister
 12583 ;;		___aldiv
 12584 ;;		___lmul
 12585 ;;		_readRegister
 12586 ;; This function is called by:
 12587 ;;		_init_AFE
 12588 ;; This function uses a non-reentrant model
 12589 ;;
 12590                           
 12591                           
 12592                           ;psect for function _setCellUndervoltageProtection
 12593  205C                     _setCellUndervoltageProtection:	
 12594                           
 12595                           ;BQ76920.c: 135:     minCellVoltage = voltage_mV;
 12596                           
 12597                           ;incstack = 0
 12598                           ; Regs used in _setCellUndervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+csta
      +                          ck]
 12599  205C  0020               	movlb	0	; select bank0
 12600  205D  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 12601  205E  0023               	movlb	3	; select bank3
 12602  205F  00D7               	movwf	(_minCellVoltage+1)^(0+384)
 12603  2060  0020               	movlb	0	; select bank0
 12604  2061  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 12605  2062  0023               	movlb	3	; select bank3
 12606  2063  00D6               	movwf	_minCellVoltage^(0+384)
 12607                           
 12608                           ;BQ76920.c: 137:     protect3.regByte = readRegister(0x18, 0x08);
 12609  2064  3018               	movlw	24
 12610  2065  00F5               	movwf	readRegister@slaveAddress
 12611  2066  3000               	movlw	0
 12612  2067  00F6               	movwf	readRegister@slaveAddress+1
 12613  2068  3008               	movlw	8
 12614  2069  00F7               	movwf	readRegister@regAddress
 12615  206A  3000               	movlw	0
 12616  206B  00F8               	movwf	readRegister@regAddress+1
 12617  206C  31B4  249F  31A0   	fcall	_readRegister
 12618  206F  0875               	movf	?_readRegister,w
 12619  2070  0020               	movlb	0	; select bank0
 12620  2071  00B6               	movwf	??_setCellUndervoltageProtection
 12621  2072  0836               	movf	??_setCellUndervoltageProtection,w
 12622  2073  0023               	movlb	3	; select bank3
 12623  2074  00E4               	movwf	_protect3^(0+384)
 12624                           
 12625                           ;BQ76920.c: 138:     uv_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 12626  2075  0022               	movlb	2	; select bank2
 12627  2076  086E               	movf	_adcGain^(0+256),w
 12628  2077  0020               	movlb	0	; select bank0
 12629  2078  00A4               	movwf	___aldiv@divisor
 12630  2079  0022               	movlb	2	; select bank2
 12631  207A  086F               	movf	(_adcGain+1)^(0+256),w
 12632  207B  0020               	movlb	0	; select bank0
 12633  207C  00A5               	movwf	___aldiv@divisor+1
 12634  207D  0D89               	rlf	9,f
 12635  207E  3B89               	subwfb	9,f
 12636  207F  0989               	comf	9,f
 12637  2080  00A6               	movwf	___aldiv@divisor+2
 12638  2081  00A7               	movwf	___aldiv@divisor+3
 12639  2082  0022               	movlb	2	; select bank2
 12640  2083  086C               	movf	_adcOffset^(0+256),w
 12641  2084  0020               	movlb	0	; select bank0
 12642  2085  00B6               	movwf	??_setCellUndervoltageProtection
 12643  2086  0022               	movlb	2	; select bank2
 12644  2087  086D               	movf	(_adcOffset+1)^(0+256),w
 12645  2088  0020               	movlb	0	; select bank0
 12646  2089  00B7               	movwf	??_setCellUndervoltageProtection+1
 12647  208A  3000               	movlw	0
 12648  208B  1BB7               	btfsc	??_setCellUndervoltageProtection+1,7
 12649  208C  30FF               	movlw	255
 12650  208D  00B8               	movwf	??_setCellUndervoltageProtection+2
 12651  208E  00B9               	movwf	??_setCellUndervoltageProtection+3
 12652  208F  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 12653  2090  00BA               	movwf	??_setCellUndervoltageProtection+4
 12654  2091  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 12655  2092  00BB               	movwf	??_setCellUndervoltageProtection+5
 12656  2093  3000               	movlw	0
 12657  2094  1BBB               	btfsc	??_setCellUndervoltageProtection+5,7
 12658  2095  30FF               	movlw	255
 12659  2096  00BC               	movwf	??_setCellUndervoltageProtection+6
 12660  2097  00BD               	movwf	??_setCellUndervoltageProtection+7
 12661  2098  0836               	movf	??_setCellUndervoltageProtection,w
 12662  2099  02BA               	subwf	??_setCellUndervoltageProtection+4,f
 12663  209A  0837               	movf	??_setCellUndervoltageProtection+1,w
 12664  209B  3BBB               	subwfb	??_setCellUndervoltageProtection+5,f
 12665  209C  0838               	movf	??_setCellUndervoltageProtection+2,w
 12666  209D  3BBC               	subwfb	??_setCellUndervoltageProtection+6,f
 12667  209E  0839               	movf	??_setCellUndervoltageProtection+3,w
 12668  209F  3BBD               	subwfb	??_setCellUndervoltageProtection+7,f
 12669  20A0  083D               	movf	??_setCellUndervoltageProtection+7,w
 12670  20A1  00F4               	movwf	___lmul@multiplier+3
 12671  20A2  083C               	movf	??_setCellUndervoltageProtection+6,w
 12672  20A3  00F3               	movwf	___lmul@multiplier+2
 12673  20A4  083B               	movf	??_setCellUndervoltageProtection+5,w
 12674  20A5  00F2               	movwf	___lmul@multiplier+1
 12675  20A6  083A               	movf	??_setCellUndervoltageProtection+4,w
 12676  20A7  00F1               	movwf	___lmul@multiplier
 12677  20A8  3000               	movlw	0
 12678  20A9  00F8               	movwf	___lmul@multiplicand+3
 12679  20AA  3000               	movlw	0
 12680  20AB  00F7               	movwf	___lmul@multiplicand+2
 12681  20AC  3003               	movlw	3
 12682  20AD  00F6               	movwf	___lmul@multiplicand+1
 12683  20AE  30E8               	movlw	232
 12684  20AF  00F5               	movwf	___lmul@multiplicand
 12685  20B0  31B4  2406  31A0   	fcall	___lmul
 12686  20B3  0874               	movf	?___lmul+3,w
 12687  20B4  0020               	movlb	0	; select bank0
 12688  20B5  00AB               	movwf	___aldiv@dividend+3
 12689  20B6  0873               	movf	?___lmul+2,w
 12690  20B7  00AA               	movwf	___aldiv@dividend+2
 12691  20B8  0872               	movf	?___lmul+1,w
 12692  20B9  00A9               	movwf	___aldiv@dividend+1
 12693  20BA  0871               	movf	?___lmul,w
 12694  20BB  00A8               	movwf	___aldiv@dividend
 12695  20BC  31A8  20EA  31A0   	fcall	___aldiv
 12696  20BF  0020               	movlb	0	; select bank0
 12697  20C0  0824               	movf	?___aldiv,w
 12698  20C1  00BE               	movwf	??_setCellUndervoltageProtection+8
 12699  20C2  0825               	movf	?___aldiv+1,w
 12700  20C3  00BF               	movwf	??_setCellUndervoltageProtection+9
 12701  20C4  0826               	movf	?___aldiv+2,w
 12702  20C5  00C0               	movwf	??_setCellUndervoltageProtection+10
 12703  20C6  0827               	movf	?___aldiv+3,w
 12704  20C7  00C1               	movwf	??_setCellUndervoltageProtection+11
 12705  20C8  3004               	movlw	4
 12706  20C9  00C2               	movwf	??_setCellUndervoltageProtection+12
 12707  20CA                     u9265:	
 12708  20CA  37C1               	asrf	??_setCellUndervoltageProtection+11,f
 12709  20CB  0CC0               	rrf	??_setCellUndervoltageProtection+10,f
 12710  20CC  0CBF               	rrf	??_setCellUndervoltageProtection+9,f
 12711  20CD  0CBE               	rrf	??_setCellUndervoltageProtection+8,f
 12712  20CE  0BC2               	decfsz	??_setCellUndervoltageProtection+12,f
 12713  20CF  28CA               	goto	u9265
 12714  20D0  083E               	movf	??_setCellUndervoltageProtection+8,w
 12715  20D1  00C3               	movwf	??_setCellUndervoltageProtection+13
 12716  20D2  0843               	movf	??_setCellUndervoltageProtection+13,w
 12717  20D3  00C4               	movwf	setCellUndervoltageProtection@uv_trip
 12718                           
 12719                           ;BQ76920.c: 139:     uv_trip += 1;
 12720  20D4  3001               	movlw	1
 12721  20D5  00B6               	movwf	??_setCellUndervoltageProtection
 12722  20D6  0836               	movf	??_setCellUndervoltageProtection,w
 12723  20D7  07C4               	addwf	setCellUndervoltageProtection@uv_trip,f
 12724                           
 12725                           ;BQ76920.c: 140:     I2C_writeRegister(0x18, 0x0A, uv_trip);
 12726  20D8  3018               	movlw	24
 12727  20D9  00F5               	movwf	I2C_writeRegister@slaveAddress
 12728  20DA  3000               	movlw	0
 12729  20DB  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12730  20DC  300A               	movlw	10
 12731  20DD  00F7               	movwf	I2C_writeRegister@regAddress
 12732  20DE  3000               	movlw	0
 12733  20DF  00F8               	movwf	I2C_writeRegister@regAddress+1
 12734  20E0  0844               	movf	setCellUndervoltageProtection@uv_trip,w
 12735  20E1  00B6               	movwf	??_setCellUndervoltageProtection
 12736  20E2  01B7               	clrf	??_setCellUndervoltageProtection+1
 12737  20E3  0836               	movf	??_setCellUndervoltageProtection,w
 12738  20E4  00F9               	movwf	I2C_writeRegister@data
 12739  20E5  0837               	movf	??_setCellUndervoltageProtection+1,w
 12740  20E6  00FA               	movwf	I2C_writeRegister@data+1
 12741  20E7  31B2  22CE  31A0   	fcall	_I2C_writeRegister
 12742                           
 12743                           ;BQ76920.c: 142:     protect3.bits.UV_DELAY = 0;
 12744  20EA  303F               	movlw	-193
 12745  20EB  0023               	movlb	3	; select bank3
 12746  20EC  05E4               	andwf	_protect3^(0+384),f
 12747                           
 12748                           ;BQ76920.c: 143:     for (int i = 0; i < (sizeof(UV_delay_setting) / sizeof((UV_delay_se
      +                          tting)[0])) - 1; i++) {
 12749  20ED  0020               	movlb	0	; select bank0
 12750  20EE  01C5               	clrf	setCellUndervoltageProtection@i
 12751  20EF  01C6               	clrf	setCellUndervoltageProtection@i+1
 12752  20F0                     l7375:	
 12753                           
 12754                           ;BQ76920.c: 144:         if (delay_s >= UV_delay_setting[i]) {
 12755  20F0  0846               	movf	setCellUndervoltageProtection@i+1,w
 12756  20F1  0085               	movwf	5
 12757  20F2  0845               	movf	setCellUndervoltageProtection@i,w
 12758  20F3  0084               	movwf	4
 12759  20F4  3584               	lslf	4,f
 12760  20F5  0D85               	rlf	5,f
 12761  20F6  30F6               	movlw	low (_UV_delay_setting| (0+32768))
 12762  20F7  0784               	addwf	4,f
 12763  20F8  30BA               	movlw	high (_UV_delay_setting| (0+32768))
 12764  20F9  3D85               	addwfc	5,f
 12765  20FA  3F00               	moviw [0]fsr0
 12766  20FB  00B6               	movwf	??_setCellUndervoltageProtection
 12767  20FC  3F01               	moviw [1]fsr0
 12768  20FD  00B7               	movwf	??_setCellUndervoltageProtection+1
 12769  20FE  0835               	movf	setCellUndervoltageProtection@delay_s+1,w
 12770  20FF  3A80               	xorlw	128
 12771  2100  00B8               	movwf	??_setCellUndervoltageProtection+2
 12772  2101  0837               	movf	??_setCellUndervoltageProtection+1,w
 12773  2102  3A80               	xorlw	128
 12774  2103  0238               	subwf	??_setCellUndervoltageProtection+2,w
 12775  2104  1D03               	skipz
 12776  2105  2908               	goto	u9275
 12777  2106  0836               	movf	??_setCellUndervoltageProtection,w
 12778  2107  0234               	subwf	setCellUndervoltageProtection@delay_s,w
 12779  2108                     u9275:	
 12780  2108  1C03               	skipc
 12781  2109  2918               	goto	l7379
 12782                           
 12783                           ;BQ76920.c: 145:             protect3.bits.UV_DELAY = i;
 12784  210A  0020               	movlb	0	; select bank0
 12785  210B  0845               	movf	setCellUndervoltageProtection@i,w
 12786  210C  00B6               	movwf	??_setCellUndervoltageProtection
 12787  210D  0EB6               	swapf	??_setCellUndervoltageProtection,f
 12788  210E  0DB6               	rlf	??_setCellUndervoltageProtection,f
 12789  210F  0DB6               	rlf	??_setCellUndervoltageProtection,f
 12790  2110  0023               	movlb	3	; select bank3
 12791  2111  0864               	movf	_protect3^(0+384),w
 12792  2112  0020               	movlb	0	; select bank0
 12793  2113  0636               	xorwf	??_setCellUndervoltageProtection,w
 12794  2114  393F               	andlw	-193
 12795  2115  0636               	xorwf	??_setCellUndervoltageProtection,w
 12796  2116  0023               	movlb	3	; select bank3
 12797  2117  00E4               	movwf	_protect3^(0+384)
 12798  2118                     l7379:	
 12799                           
 12800                           ;BQ76920.c: 147:     }
 12801  2118  3001               	movlw	1
 12802  2119  0020               	movlb	0	; select bank0
 12803  211A  07C5               	addwf	setCellUndervoltageProtection@i,f
 12804  211B  3000               	movlw	0
 12805  211C  3DC6               	addwfc	setCellUndervoltageProtection@i+1,f
 12806  211D  3000               	movlw	0
 12807  211E  0246               	subwf	setCellUndervoltageProtection@i+1,w
 12808  211F  3003               	movlw	3
 12809  2120  1903               	skipnz
 12810  2121  0245               	subwf	setCellUndervoltageProtection@i,w
 12811  2122  1C03               	skipc
 12812  2123  28F0               	goto	l7375
 12813                           
 12814                           ;BQ76920.c: 148:     I2C_writeRegister(0x18, 0x08, protect3.regByte);
 12815  2124  3018               	movlw	24
 12816  2125  00F5               	movwf	I2C_writeRegister@slaveAddress
 12817  2126  3000               	movlw	0
 12818  2127  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12819  2128  3008               	movlw	8
 12820  2129  00F7               	movwf	I2C_writeRegister@regAddress
 12821  212A  3000               	movlw	0
 12822  212B  00F8               	movwf	I2C_writeRegister@regAddress+1
 12823  212C  0023               	movlb	3	; select bank3
 12824  212D  0864               	movf	_protect3^(0+384),w
 12825  212E  0020               	movlb	0	; select bank0
 12826  212F  00B6               	movwf	??_setCellUndervoltageProtection
 12827  2130  01B7               	clrf	??_setCellUndervoltageProtection+1
 12828  2131  0836               	movf	??_setCellUndervoltageProtection,w
 12829  2132  00F9               	movwf	I2C_writeRegister@data
 12830  2133  0837               	movf	??_setCellUndervoltageProtection+1,w
 12831  2134  00FA               	movwf	I2C_writeRegister@data+1
 12832  2135  31B2  22CE         	fcall	_I2C_writeRegister
 12833  2137  0008               	return
 12834  2138                     __end_of_setCellUndervoltageProtection:	
 12835                           
 12836                           	psect	text42
 12837  2E4F                     __ptext42:	
 12838 ;; *************** function _setCellOvervoltageProtection *****************
 12839 ;; Defined at:
 12840 ;;		line 154 in file "BQ76920.c"
 12841 ;; Parameters:    Size  Location     Type
 12842 ;;  voltage_mV      2   18[BANK0 ] int 
 12843 ;;  delay_s         2   20[BANK0 ] int 
 12844 ;; Auto vars:     Size  Location     Type
 12845 ;;  i               2   37[BANK0 ] int 
 12846 ;;  ov_trip         1   36[BANK0 ] unsigned char 
 12847 ;; Return value:  Size  Location     Type
 12848 ;;                  1    wreg      void 
 12849 ;; Registers used:
 12850 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12851 ;; Tracked objects:
 12852 ;;		On entry : 0/0
 12853 ;;		On exit  : 0/0
 12854 ;;		Unchanged: 0/0
 12855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12856 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12857 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12858 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12859 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12860 ;;Total ram usage:       21 bytes
 12861 ;; Hardware stack levels used:    1
 12862 ;; Hardware stack levels required when called:    3
 12863 ;; This function calls:
 12864 ;;		_I2C_writeRegister
 12865 ;;		___aldiv
 12866 ;;		___lmul
 12867 ;;		_readRegister
 12868 ;; This function is called by:
 12869 ;;		_init_AFE
 12870 ;; This function uses a non-reentrant model
 12871 ;;
 12872                           
 12873                           
 12874                           ;psect for function _setCellOvervoltageProtection
 12875  2E4F                     _setCellOvervoltageProtection:	
 12876                           
 12877                           ;BQ76920.c: 156:     maxCellVoltage = voltage_mV;
 12878                           
 12879                           ;incstack = 0
 12880                           ; Regs used in _setCellOvervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+cstac
      +                          k]
 12881  2E4F  0020               	movlb	0	; select bank0
 12882  2E50  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 12883  2E51  0023               	movlb	3	; select bank3
 12884  2E52  00D9               	movwf	(_maxCellVoltage+1)^(0+384)
 12885  2E53  0020               	movlb	0	; select bank0
 12886  2E54  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 12887  2E55  0023               	movlb	3	; select bank3
 12888  2E56  00D8               	movwf	_maxCellVoltage^(0+384)
 12889                           
 12890                           ;BQ76920.c: 157:     protect3.regByte = readRegister(0x18, 0x08);
 12891  2E57  3018               	movlw	24
 12892  2E58  00F5               	movwf	readRegister@slaveAddress
 12893  2E59  3000               	movlw	0
 12894  2E5A  00F6               	movwf	readRegister@slaveAddress+1
 12895  2E5B  3008               	movlw	8
 12896  2E5C  00F7               	movwf	readRegister@regAddress
 12897  2E5D  3000               	movlw	0
 12898  2E5E  00F8               	movwf	readRegister@regAddress+1
 12899  2E5F  31B4  249F  31AE   	fcall	_readRegister
 12900  2E62  0875               	movf	?_readRegister,w
 12901  2E63  0020               	movlb	0	; select bank0
 12902  2E64  00B6               	movwf	??_setCellOvervoltageProtection
 12903  2E65  0836               	movf	??_setCellOvervoltageProtection,w
 12904  2E66  0023               	movlb	3	; select bank3
 12905  2E67  00E4               	movwf	_protect3^(0+384)
 12906                           
 12907                           ;BQ76920.c: 158:     ov_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 12908  2E68  0022               	movlb	2	; select bank2
 12909  2E69  086E               	movf	_adcGain^(0+256),w
 12910  2E6A  0020               	movlb	0	; select bank0
 12911  2E6B  00A4               	movwf	___aldiv@divisor
 12912  2E6C  0022               	movlb	2	; select bank2
 12913  2E6D  086F               	movf	(_adcGain+1)^(0+256),w
 12914  2E6E  0020               	movlb	0	; select bank0
 12915  2E6F  00A5               	movwf	___aldiv@divisor+1
 12916  2E70  0D89               	rlf	9,f
 12917  2E71  3B89               	subwfb	9,f
 12918  2E72  0989               	comf	9,f
 12919  2E73  00A6               	movwf	___aldiv@divisor+2
 12920  2E74  00A7               	movwf	___aldiv@divisor+3
 12921  2E75  0022               	movlb	2	; select bank2
 12922  2E76  086C               	movf	_adcOffset^(0+256),w
 12923  2E77  0020               	movlb	0	; select bank0
 12924  2E78  00B6               	movwf	??_setCellOvervoltageProtection
 12925  2E79  0022               	movlb	2	; select bank2
 12926  2E7A  086D               	movf	(_adcOffset+1)^(0+256),w
 12927  2E7B  0020               	movlb	0	; select bank0
 12928  2E7C  00B7               	movwf	??_setCellOvervoltageProtection+1
 12929  2E7D  3000               	movlw	0
 12930  2E7E  1BB7               	btfsc	??_setCellOvervoltageProtection+1,7
 12931  2E7F  30FF               	movlw	255
 12932  2E80  00B8               	movwf	??_setCellOvervoltageProtection+2
 12933  2E81  00B9               	movwf	??_setCellOvervoltageProtection+3
 12934  2E82  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 12935  2E83  00BA               	movwf	??_setCellOvervoltageProtection+4
 12936  2E84  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 12937  2E85  00BB               	movwf	??_setCellOvervoltageProtection+5
 12938  2E86  3000               	movlw	0
 12939  2E87  1BBB               	btfsc	??_setCellOvervoltageProtection+5,7
 12940  2E88  30FF               	movlw	255
 12941  2E89  00BC               	movwf	??_setCellOvervoltageProtection+6
 12942  2E8A  00BD               	movwf	??_setCellOvervoltageProtection+7
 12943  2E8B  0836               	movf	??_setCellOvervoltageProtection,w
 12944  2E8C  02BA               	subwf	??_setCellOvervoltageProtection+4,f
 12945  2E8D  0837               	movf	??_setCellOvervoltageProtection+1,w
 12946  2E8E  3BBB               	subwfb	??_setCellOvervoltageProtection+5,f
 12947  2E8F  0838               	movf	??_setCellOvervoltageProtection+2,w
 12948  2E90  3BBC               	subwfb	??_setCellOvervoltageProtection+6,f
 12949  2E91  0839               	movf	??_setCellOvervoltageProtection+3,w
 12950  2E92  3BBD               	subwfb	??_setCellOvervoltageProtection+7,f
 12951  2E93  083D               	movf	??_setCellOvervoltageProtection+7,w
 12952  2E94  00F4               	movwf	___lmul@multiplier+3
 12953  2E95  083C               	movf	??_setCellOvervoltageProtection+6,w
 12954  2E96  00F3               	movwf	___lmul@multiplier+2
 12955  2E97  083B               	movf	??_setCellOvervoltageProtection+5,w
 12956  2E98  00F2               	movwf	___lmul@multiplier+1
 12957  2E99  083A               	movf	??_setCellOvervoltageProtection+4,w
 12958  2E9A  00F1               	movwf	___lmul@multiplier
 12959  2E9B  3000               	movlw	0
 12960  2E9C  00F8               	movwf	___lmul@multiplicand+3
 12961  2E9D  3000               	movlw	0
 12962  2E9E  00F7               	movwf	___lmul@multiplicand+2
 12963  2E9F  3003               	movlw	3
 12964  2EA0  00F6               	movwf	___lmul@multiplicand+1
 12965  2EA1  30E8               	movlw	232
 12966  2EA2  00F5               	movwf	___lmul@multiplicand
 12967  2EA3  31B4  2406  31AE   	fcall	___lmul
 12968  2EA6  0874               	movf	?___lmul+3,w
 12969  2EA7  0020               	movlb	0	; select bank0
 12970  2EA8  00AB               	movwf	___aldiv@dividend+3
 12971  2EA9  0873               	movf	?___lmul+2,w
 12972  2EAA  00AA               	movwf	___aldiv@dividend+2
 12973  2EAB  0872               	movf	?___lmul+1,w
 12974  2EAC  00A9               	movwf	___aldiv@dividend+1
 12975  2EAD  0871               	movf	?___lmul,w
 12976  2EAE  00A8               	movwf	___aldiv@dividend
 12977  2EAF  31A8  20EA  31AE   	fcall	___aldiv
 12978  2EB2  0020               	movlb	0	; select bank0
 12979  2EB3  0824               	movf	?___aldiv,w
 12980  2EB4  00BE               	movwf	??_setCellOvervoltageProtection+8
 12981  2EB5  0825               	movf	?___aldiv+1,w
 12982  2EB6  00BF               	movwf	??_setCellOvervoltageProtection+9
 12983  2EB7  0826               	movf	?___aldiv+2,w
 12984  2EB8  00C0               	movwf	??_setCellOvervoltageProtection+10
 12985  2EB9  0827               	movf	?___aldiv+3,w
 12986  2EBA  00C1               	movwf	??_setCellOvervoltageProtection+11
 12987  2EBB  3004               	movlw	4
 12988  2EBC  00C2               	movwf	??_setCellOvervoltageProtection+12
 12989  2EBD                     u9295:	
 12990  2EBD  37C1               	asrf	??_setCellOvervoltageProtection+11,f
 12991  2EBE  0CC0               	rrf	??_setCellOvervoltageProtection+10,f
 12992  2EBF  0CBF               	rrf	??_setCellOvervoltageProtection+9,f
 12993  2EC0  0CBE               	rrf	??_setCellOvervoltageProtection+8,f
 12994  2EC1  0BC2               	decfsz	??_setCellOvervoltageProtection+12,f
 12995  2EC2  2EBD               	goto	u9295
 12996  2EC3  083E               	movf	??_setCellOvervoltageProtection+8,w
 12997  2EC4  00C3               	movwf	??_setCellOvervoltageProtection+13
 12998  2EC5  0843               	movf	??_setCellOvervoltageProtection+13,w
 12999  2EC6  00C4               	movwf	setCellOvervoltageProtection@ov_trip
 13000                           
 13001                           ;BQ76920.c: 159:     I2C_writeRegister(0x18, 0x09, ov_trip);
 13002  2EC7  3018               	movlw	24
 13003  2EC8  00F5               	movwf	I2C_writeRegister@slaveAddress
 13004  2EC9  3000               	movlw	0
 13005  2ECA  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 13006  2ECB  3009               	movlw	9
 13007  2ECC  00F7               	movwf	I2C_writeRegister@regAddress
 13008  2ECD  3000               	movlw	0
 13009  2ECE  00F8               	movwf	I2C_writeRegister@regAddress+1
 13010  2ECF  0844               	movf	setCellOvervoltageProtection@ov_trip,w
 13011  2ED0  00B6               	movwf	??_setCellOvervoltageProtection
 13012  2ED1  01B7               	clrf	??_setCellOvervoltageProtection+1
 13013  2ED2  0836               	movf	??_setCellOvervoltageProtection,w
 13014  2ED3  00F9               	movwf	I2C_writeRegister@data
 13015  2ED4  0837               	movf	??_setCellOvervoltageProtection+1,w
 13016  2ED5  00FA               	movwf	I2C_writeRegister@data+1
 13017  2ED6  31B2  22CE  31AE   	fcall	_I2C_writeRegister
 13018                           
 13019                           ;BQ76920.c: 161:     for (int i = 0; i < (sizeof(OV_delay_setting) / sizeof((OV_delay_se
      +                          tting)[0])) - 1; i++) {
 13020  2ED9  0020               	movlb	0	; select bank0
 13021  2EDA  01C5               	clrf	setCellOvervoltageProtection@i
 13022  2EDB  01C6               	clrf	setCellOvervoltageProtection@i+1
 13023  2EDC                     l7401:	
 13024                           
 13025                           ;BQ76920.c: 162:         if (delay_s >= OV_delay_setting[i]) {
 13026  2EDC  0846               	movf	setCellOvervoltageProtection@i+1,w
 13027  2EDD  0085               	movwf	5
 13028  2EDE  0845               	movf	setCellOvervoltageProtection@i,w
 13029  2EDF  0084               	movwf	4
 13030  2EE0  3584               	lslf	4,f
 13031  2EE1  0D85               	rlf	5,f
 13032  2EE2  30EE               	movlw	low (_OV_delay_setting| (0+32768))
 13033  2EE3  0784               	addwf	4,f
 13034  2EE4  30BA               	movlw	high (_OV_delay_setting| (0+32768))
 13035  2EE5  3D85               	addwfc	5,f
 13036  2EE6  3F00               	moviw [0]fsr0
 13037  2EE7  00B6               	movwf	??_setCellOvervoltageProtection
 13038  2EE8  3F01               	moviw [1]fsr0
 13039  2EE9  00B7               	movwf	??_setCellOvervoltageProtection+1
 13040  2EEA  0835               	movf	setCellOvervoltageProtection@delay_s+1,w
 13041  2EEB  3A80               	xorlw	128
 13042  2EEC  00B8               	movwf	??_setCellOvervoltageProtection+2
 13043  2EED  0837               	movf	??_setCellOvervoltageProtection+1,w
 13044  2EEE  3A80               	xorlw	128
 13045  2EEF  0238               	subwf	??_setCellOvervoltageProtection+2,w
 13046  2EF0  1D03               	skipz
 13047  2EF1  2EF4               	goto	u9305
 13048  2EF2  0836               	movf	??_setCellOvervoltageProtection,w
 13049  2EF3  0234               	subwf	setCellOvervoltageProtection@delay_s,w
 13050  2EF4                     u9305:	
 13051  2EF4  1C03               	skipc
 13052  2EF5  2F04               	goto	l7405
 13053                           
 13054                           ;BQ76920.c: 163:             protect3.bits.UV_DELAY = i;
 13055  2EF6  0020               	movlb	0	; select bank0
 13056  2EF7  0845               	movf	setCellOvervoltageProtection@i,w
 13057  2EF8  00B6               	movwf	??_setCellOvervoltageProtection
 13058  2EF9  0EB6               	swapf	??_setCellOvervoltageProtection,f
 13059  2EFA  0DB6               	rlf	??_setCellOvervoltageProtection,f
 13060  2EFB  0DB6               	rlf	??_setCellOvervoltageProtection,f
 13061  2EFC  0023               	movlb	3	; select bank3
 13062  2EFD  0864               	movf	_protect3^(0+384),w
 13063  2EFE  0020               	movlb	0	; select bank0
 13064  2EFF  0636               	xorwf	??_setCellOvervoltageProtection,w
 13065  2F00  393F               	andlw	-193
 13066  2F01  0636               	xorwf	??_setCellOvervoltageProtection,w
 13067  2F02  0023               	movlb	3	; select bank3
 13068  2F03  00E4               	movwf	_protect3^(0+384)
 13069  2F04                     l7405:	
 13070                           
 13071                           ;BQ76920.c: 165:     }
 13072  2F04  3001               	movlw	1
 13073  2F05  0020               	movlb	0	; select bank0
 13074  2F06  07C5               	addwf	setCellOvervoltageProtection@i,f
 13075  2F07  3000               	movlw	0
 13076  2F08  3DC6               	addwfc	setCellOvervoltageProtection@i+1,f
 13077  2F09  3000               	movlw	0
 13078  2F0A  0246               	subwf	setCellOvervoltageProtection@i+1,w
 13079  2F0B  3003               	movlw	3
 13080  2F0C  1903               	skipnz
 13081  2F0D  0245               	subwf	setCellOvervoltageProtection@i,w
 13082  2F0E  1C03               	skipc
 13083  2F0F  2EDC               	goto	l7401
 13084                           
 13085                           ;BQ76920.c: 166:     I2C_writeRegister(0x18,0x08, protect3.regByte);
 13086  2F10  3018               	movlw	24
 13087  2F11  00F5               	movwf	I2C_writeRegister@slaveAddress
 13088  2F12  3000               	movlw	0
 13089  2F13  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 13090  2F14  3008               	movlw	8
 13091  2F15  00F7               	movwf	I2C_writeRegister@regAddress
 13092  2F16  3000               	movlw	0
 13093  2F17  00F8               	movwf	I2C_writeRegister@regAddress+1
 13094  2F18  0023               	movlb	3	; select bank3
 13095  2F19  0864               	movf	_protect3^(0+384),w
 13096  2F1A  0020               	movlb	0	; select bank0
 13097  2F1B  00B6               	movwf	??_setCellOvervoltageProtection
 13098  2F1C  01B7               	clrf	??_setCellOvervoltageProtection+1
 13099  2F1D  0836               	movf	??_setCellOvervoltageProtection,w
 13100  2F1E  00F9               	movwf	I2C_writeRegister@data
 13101  2F1F  0837               	movf	??_setCellOvervoltageProtection+1,w
 13102  2F20  00FA               	movwf	I2C_writeRegister@data+1
 13103  2F21  31B2  22CE         	fcall	_I2C_writeRegister
 13104  2F23  0008               	return
 13105  2F24                     __end_of_setCellOvervoltageProtection:	
 13106                           
 13107                           	psect	text43
 13108  2B4C                     __ptext43:	
 13109 ;; *************** function _beginAFEcommunication *****************
 13110 ;; Defined at:
 13111 ;;		line 28 in file "BQ76920.c"
 13112 ;; Parameters:    Size  Location     Type
 13113 ;;		None
 13114 ;; Auto vars:     Size  Location     Type
 13115 ;;  i               2   13[BANK0 ] int 
 13116 ;;  commSuccess     2   11[BANK0 ] int 
 13117 ;; Return value:  Size  Location     Type
 13118 ;;                  2    0[BANK0 ] int 
 13119 ;; Registers used:
 13120 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13121 ;; Tracked objects:
 13122 ;;		On entry : 0/0
 13123 ;;		On exit  : 0/0
 13124 ;;		Unchanged: 0/0
 13125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13126 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13127 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13128 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13129 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13130 ;;Total ram usage:       15 bytes
 13131 ;; Hardware stack levels used:    1
 13132 ;; Hardware stack levels required when called:    3
 13133 ;; This function calls:
 13134 ;;		_I2C_writeRegister
 13135 ;;		_readRegister
 13136 ;; This function is called by:
 13137 ;;		_statemachine
 13138 ;; This function uses a non-reentrant model
 13139 ;;
 13140                           
 13141                           
 13142                           ;psect for function _beginAFEcommunication
 13143  2B4C                     _beginAFEcommunication:	
 13144                           
 13145                           ;BQ76920.c: 30:     int commSuccess = 0;
 13146                           
 13147                           ;incstack = 0
 13148                           ; Regs used in _beginAFEcommunication: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 13149  2B4C  0020               	movlb	0	; select bank0
 13150  2B4D  01AB               	clrf	beginAFEcommunication@commSuccess
 13151  2B4E  01AC               	clrf	beginAFEcommunication@commSuccess+1
 13152                           
 13153                           ;BQ76920.c: 33:     for (int i = 0; i < 4; i++) {
 13154  2B4F  01AD               	clrf	beginAFEcommunication@i
 13155  2B50  01AE               	clrf	beginAFEcommunication@i+1
 13156  2B51                     l7515:	
 13157                           
 13158                           ;BQ76920.c: 34:         cellVoltages[i] = 0;
 13159  2B51  0020               	movlb	0	; select bank0
 13160  2B52  352D               	lslf	beginAFEcommunication@i,w
 13161  2B53  3EB4               	addlw	(low (_cellVoltages| (0+256)))& (0+255)
 13162  2B54  0086               	movwf	6
 13163  2B55  3001               	movlw	1	; select bank3/4
 13164  2B56  0087               	movwf	7
 13165  2B57  3000               	movlw	0
 13166  2B58  3FC0               	movwi [0]fsr1
 13167  2B59  3FC1               	movwi [1]fsr1
 13168                           
 13169                           ;BQ76920.c: 35:     }
 13170  2B5A  3001               	movlw	1
 13171  2B5B  07AD               	addwf	beginAFEcommunication@i,f
 13172  2B5C  3000               	movlw	0
 13173  2B5D  3DAE               	addwfc	beginAFEcommunication@i+1,f
 13174  2B5E  082E               	movf	beginAFEcommunication@i+1,w
 13175  2B5F  3A80               	xorlw	128
 13176  2B60  00A2               	movwf	??_beginAFEcommunication
 13177  2B61  3080               	movlw	128
 13178  2B62  0222               	subwf	??_beginAFEcommunication,w
 13179  2B63  1D03               	skipz
 13180  2B64  2B67               	goto	u9365
 13181  2B65  3004               	movlw	4
 13182  2B66  022D               	subwf	beginAFEcommunication@i,w
 13183  2B67                     u9365:	
 13184  2B67  1C03               	skipc
 13185  2B68  2B51               	goto	l7515
 13186                           
 13187                           ;BQ76920.c: 38:     I2C_writeRegister(0x18, 0x0B, 0x19);
 13188  2B69  3018               	movlw	24
 13189  2B6A  00F5               	movwf	I2C_writeRegister@slaveAddress
 13190  2B6B  3000               	movlw	0
 13191  2B6C  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 13192  2B6D  300B               	movlw	11
 13193  2B6E  00F7               	movwf	I2C_writeRegister@regAddress
 13194  2B6F  3000               	movlw	0
 13195  2B70  00F8               	movwf	I2C_writeRegister@regAddress+1
 13196  2B71  3019               	movlw	25
 13197  2B72  00F9               	movwf	I2C_writeRegister@data
 13198  2B73  3000               	movlw	0
 13199  2B74  00FA               	movwf	I2C_writeRegister@data+1
 13200  2B75  31B2  22CE  31AB   	fcall	_I2C_writeRegister
 13201                           
 13202                           ;BQ76920.c: 40:     if (readRegister(0x18, 0x0B) == 0x19) {
 13203  2B78  3018               	movlw	24
 13204  2B79  00F5               	movwf	readRegister@slaveAddress
 13205  2B7A  3000               	movlw	0
 13206  2B7B  00F6               	movwf	readRegister@slaveAddress+1
 13207  2B7C  300B               	movlw	11
 13208  2B7D  00F7               	movwf	readRegister@regAddress
 13209  2B7E  3000               	movlw	0
 13210  2B7F  00F8               	movwf	readRegister@regAddress+1
 13211  2B80  31B4  249F  31AB   	fcall	_readRegister
 13212  2B83  3019               	movlw	25
 13213  2B84  0675               	xorwf	?_readRegister,w
 13214  2B85  0476               	iorwf	?_readRegister+1,w
 13215  2B86  1D03               	btfss	3,2
 13216  2B87  2BFA               	goto	l471
 13217                           
 13218                           ;BQ76920.c: 41:         commSuccess = 1;
 13219  2B88  3001               	movlw	1
 13220  2B89  0020               	movlb	0	; select bank0
 13221  2B8A  00AB               	movwf	beginAFEcommunication@commSuccess
 13222  2B8B  3000               	movlw	0
 13223  2B8C  00AC               	movwf	beginAFEcommunication@commSuccess+1
 13224                           
 13225                           ;BQ76920.c: 45:         I2C_writeRegister(0x18, 0x04, 0x18);
 13226  2B8D  3018               	movlw	24
 13227  2B8E  00F5               	movwf	I2C_writeRegister@slaveAddress
 13228  2B8F  3000               	movlw	0
 13229  2B90  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 13230  2B91  3004               	movlw	4
 13231  2B92  00F7               	movwf	I2C_writeRegister@regAddress
 13232  2B93  3000               	movlw	0
 13233  2B94  00F8               	movwf	I2C_writeRegister@regAddress+1
 13234  2B95  3018               	movlw	24
 13235  2B96  00F9               	movwf	I2C_writeRegister@data
 13236  2B97  3000               	movlw	0
 13237  2B98  00FA               	movwf	I2C_writeRegister@data+1
 13238  2B99  31B2  22CE  31AB   	fcall	_I2C_writeRegister
 13239                           
 13240                           ;BQ76920.c: 46:         I2C_writeRegister(0x18, 0x05, 0x40);
 13241  2B9C  3018               	movlw	24
 13242  2B9D  00F5               	movwf	I2C_writeRegister@slaveAddress
 13243  2B9E  3000               	movlw	0
 13244  2B9F  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 13245  2BA0  3005               	movlw	5
 13246  2BA1  00F7               	movwf	I2C_writeRegister@regAddress
 13247  2BA2  3000               	movlw	0
 13248  2BA3  00F8               	movwf	I2C_writeRegister@regAddress+1
 13249  2BA4  3040               	movlw	64
 13250  2BA5  00F9               	movwf	I2C_writeRegister@data
 13251  2BA6  3000               	movlw	0
 13252  2BA7  00FA               	movwf	I2C_writeRegister@data+1
 13253  2BA8  31B2  22CE  31AB   	fcall	_I2C_writeRegister
 13254                           
 13255                           ;BQ76920.c: 49:         adcOffset = (signed int) readRegister(0x18, 0x51);
 13256  2BAB  3018               	movlw	24
 13257  2BAC  00F5               	movwf	readRegister@slaveAddress
 13258  2BAD  3000               	movlw	0
 13259  2BAE  00F6               	movwf	readRegister@slaveAddress+1
 13260  2BAF  3051               	movlw	81
 13261  2BB0  00F7               	movwf	readRegister@regAddress
 13262  2BB1  3000               	movlw	0
 13263  2BB2  00F8               	movwf	readRegister@regAddress+1
 13264  2BB3  31B4  249F  31AB   	fcall	_readRegister
 13265  2BB6  0876               	movf	?_readRegister+1,w
 13266  2BB7  0022               	movlb	2	; select bank2
 13267  2BB8  00ED               	movwf	(_adcOffset+1)^(0+256)
 13268  2BB9  0875               	movf	?_readRegister,w
 13269  2BBA  00EC               	movwf	_adcOffset^(0+256)
 13270                           
 13271                           ;BQ76920.c: 50:         adcGain = 365 + (((readRegister(0x18, 0x50) & 0x0C) << 1) |
 13272  2BBB  3018               	movlw	24
 13273  2BBC  00F5               	movwf	readRegister@slaveAddress
 13274  2BBD  3000               	movlw	0
 13275  2BBE  00F6               	movwf	readRegister@slaveAddress+1
 13276  2BBF  3059               	movlw	89
 13277  2BC0  00F7               	movwf	readRegister@regAddress
 13278  2BC1  3000               	movlw	0
 13279  2BC2  00F8               	movwf	readRegister@regAddress+1
 13280  2BC3  31B4  249F  31AB   	fcall	_readRegister
 13281  2BC6  0875               	movf	?_readRegister,w
 13282  2BC7  0020               	movlb	0	; select bank0
 13283  2BC8  00A2               	movwf	??_beginAFEcommunication
 13284  2BC9  0876               	movf	?_readRegister+1,w
 13285  2BCA  00A3               	movwf	??_beginAFEcommunication+1
 13286  2BCB  3005               	movlw	5
 13287  2BCC  00A4               	movwf	??_beginAFEcommunication+2
 13288  2BCD                     u9385:	
 13289  2BCD  0D23               	rlf	??_beginAFEcommunication+1,w
 13290  2BCE  0CA3               	rrf	??_beginAFEcommunication+1,f
 13291  2BCF  0CA2               	rrf	??_beginAFEcommunication,f
 13292  2BD0  0BA4               	decfsz	??_beginAFEcommunication+2,f
 13293  2BD1  2BCD               	goto	u9385
 13294  2BD2  3007               	movlw	7
 13295  2BD3  0522               	andwf	??_beginAFEcommunication,w
 13296  2BD4  00A5               	movwf	??_beginAFEcommunication+3
 13297  2BD5  3000               	movlw	0
 13298  2BD6  0523               	andwf	??_beginAFEcommunication+1,w
 13299  2BD7  00A6               	movwf	??_beginAFEcommunication+4
 13300  2BD8  3018               	movlw	24
 13301  2BD9  00F5               	movwf	readRegister@slaveAddress
 13302  2BDA  3000               	movlw	0
 13303  2BDB  00F6               	movwf	readRegister@slaveAddress+1
 13304  2BDC  3050               	movlw	80
 13305  2BDD  00F7               	movwf	readRegister@regAddress
 13306  2BDE  3000               	movlw	0
 13307  2BDF  00F8               	movwf	readRegister@regAddress+1
 13308  2BE0  31B4  249F         	fcall	_readRegister
 13309  2BE2  300C               	movlw	12
 13310  2BE3  0575               	andwf	?_readRegister,w
 13311  2BE4  0020               	movlb	0	; select bank0
 13312  2BE5  00A7               	movwf	??_beginAFEcommunication+5
 13313  2BE6  3000               	movlw	0
 13314  2BE7  0576               	andwf	?_readRegister+1,w
 13315  2BE8  00A8               	movwf	??_beginAFEcommunication+6
 13316  2BE9  35A7               	lslf	??_beginAFEcommunication+5,f
 13317  2BEA  0DA8               	rlf	??_beginAFEcommunication+6,f
 13318  2BEB  0825               	movf	??_beginAFEcommunication+3,w
 13319  2BEC  0427               	iorwf	??_beginAFEcommunication+5,w
 13320  2BED  00A9               	movwf	??_beginAFEcommunication+7
 13321  2BEE  0826               	movf	??_beginAFEcommunication+4,w
 13322  2BEF  0428               	iorwf	??_beginAFEcommunication+6,w
 13323  2BF0  00AA               	movwf	??_beginAFEcommunication+8
 13324  2BF1  0829               	movf	??_beginAFEcommunication+7,w
 13325  2BF2  3E6D               	addlw	109
 13326  2BF3  0022               	movlb	2	; select bank2
 13327  2BF4  00EE               	movwf	_adcGain^(0+256)
 13328  2BF5  3001               	movlw	1
 13329  2BF6  0020               	movlb	0	; select bank0
 13330  2BF7  3D2A               	addwfc	??_beginAFEcommunication+8,w
 13331  2BF8  0022               	movlb	2	; select bank2
 13332  2BF9  00EF               	movwf	(_adcGain+1)^(0+256)
 13333  2BFA                     l471:	
 13334                           ;BQ76920.c: 53:     }
 13335                           
 13336                           
 13337                           ;BQ76920.c: 54:     return commSuccess;
 13338  2BFA  0020               	movlb	0	; select bank0
 13339  2BFB  082C               	movf	beginAFEcommunication@commSuccess+1,w
 13340  2BFC  00A1               	movwf	?_beginAFEcommunication+1
 13341  2BFD  082B               	movf	beginAFEcommunication@commSuccess,w
 13342  2BFE  00A0               	movwf	?_beginAFEcommunication
 13343  2BFF  0008               	return
 13344  2C00                     __end_of_beginAFEcommunication:	
 13345                           
 13346                           	psect	text44
 13347  332C                     __ptext44:	
 13348 ;; *************** function _RGB_AWAIT_AFE_CONN *****************
 13349 ;; Defined at:
 13350 ;;		line 43 in file "RGB.c"
 13351 ;; Parameters:    Size  Location     Type
 13352 ;;		None
 13353 ;; Auto vars:     Size  Location     Type
 13354 ;;		None
 13355 ;; Return value:  Size  Location     Type
 13356 ;;                  1    wreg      void 
 13357 ;; Registers used:
 13358 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13359 ;; Tracked objects:
 13360 ;;		On entry : 0/0
 13361 ;;		On exit  : 0/0
 13362 ;;		Unchanged: 0/0
 13363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13366 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13367 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13368 ;;Total ram usage:        1 bytes
 13369 ;; Hardware stack levels used:    1
 13370 ;; Hardware stack levels required when called:    2
 13371 ;; This function calls:
 13372 ;;		_RGB_color
 13373 ;; This function is called by:
 13374 ;;		_statemachine
 13375 ;; This function uses a non-reentrant model
 13376 ;;
 13377                           
 13378                           
 13379                           ;psect for function _RGB_AWAIT_AFE_CONN
 13380  332C                     _RGB_AWAIT_AFE_CONN:	
 13381                           
 13382                           ;RGB.c: 45:     if (toggleColor) {
 13383                           
 13384                           ;incstack = 0
 13385                           ; Regs used in _RGB_AWAIT_AFE_CONN: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13386  332C  087C               	movf	_toggleColor,w
 13387  332D  1903               	btfsc	3,2
 13388  332E  2B3E               	goto	l6111
 13389                           
 13390                           ;RGB.c: 46:         toggleColor = !toggleColor;
 13391  332F  087C               	movf	_toggleColor,w
 13392  3330  1D03               	btfss	3,2
 13393  3331  2B34               	goto	u7600
 13394  3332  3001               	movlw	1
 13395  3333  2B35               	goto	u7610
 13396  3334                     u7600:	
 13397  3334  3000               	movlw	0
 13398  3335                     u7610:	
 13399  3335  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 13400  3336  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 13401  3337  00FC               	movwf	_toggleColor
 13402                           
 13403                           ;RGB.c: 47:         RGB_color(0);
 13404  3338  3000               	movlw	0
 13405  3339  00F1               	movwf	RGB_color@color
 13406  333A  00F2               	movwf	RGB_color@color+1
 13407  333B  31B3  230B         	fcall	_RGB_color
 13408                           
 13409                           ;RGB.c: 48:     } else {
 13410  333D  0008               	return
 13411  333E                     l6111:	
 13412                           
 13413                           ;RGB.c: 49:         toggleColor = !toggleColor;
 13414  333E  087C               	movf	_toggleColor,w
 13415  333F  1D03               	btfss	3,2
 13416  3340  2B43               	goto	u7620
 13417  3341  3001               	movlw	1
 13418  3342  2B44               	goto	u7630
 13419  3343                     u7620:	
 13420  3343  3000               	movlw	0
 13421  3344                     u7630:	
 13422  3344  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 13423  3345  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 13424  3346  00FC               	movwf	_toggleColor
 13425                           
 13426                           ;RGB.c: 50:         RGB_color(1);
 13427  3347  3001               	movlw	1
 13428  3348  00F1               	movwf	RGB_color@color
 13429  3349  3000               	movlw	0
 13430  334A  00F2               	movwf	RGB_color@color+1
 13431  334B  31B3  230B         	fcall	_RGB_color
 13432  334D  0008               	return
 13433  334E                     __end_of_RGB_AWAIT_AFE_CONN:	
 13434                           
 13435                           	psect	text45
 13436  330B                     __ptext45:	
 13437 ;; *************** function _RGB_color *****************
 13438 ;; Defined at:
 13439 ;;		line 17 in file "RGB.c"
 13440 ;; Parameters:    Size  Location     Type
 13441 ;;  color           2    1[COMMON] int 
 13442 ;; Auto vars:     Size  Location     Type
 13443 ;;		None
 13444 ;; Return value:  Size  Location     Type
 13445 ;;                  1    wreg      void 
 13446 ;; Registers used:
 13447 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13448 ;; Tracked objects:
 13449 ;;		On entry : 0/0
 13450 ;;		On exit  : 0/0
 13451 ;;		Unchanged: 0/0
 13452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13453 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13456 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13457 ;;Total ram usage:        2 bytes
 13458 ;; Hardware stack levels used:    1
 13459 ;; Hardware stack levels required when called:    1
 13460 ;; This function calls:
 13461 ;;		Nothing
 13462 ;; This function is called by:
 13463 ;;		_statemachine
 13464 ;;		_RGB_AWAIT_AFE_CONN
 13465 ;;		_watchdog_timeout_shutdown
 13466 ;; This function uses a non-reentrant model
 13467 ;;
 13468                           
 13469                           
 13470                           ;psect for function _RGB_color
 13471  330B                     _RGB_color:	
 13472                           
 13473                           ;RGB.c: 19:     switch (color) {
 13474                           
 13475                           ;incstack = 0
 13476                           ; Regs used in _RGB_color: [wreg-fsr0h+status,2+status,0]
 13477  330B  2B1B               	goto	l5817
 13478  330C                     l352:	
 13479                           ;RGB.c: 20:         case 0:
 13480                           
 13481                           
 13482                           ;RGB.c: 21:             LATAbits.LATA4 = 0;
 13483  330C  0022               	movlb	2	; select bank2
 13484  330D  120C               	bcf	12,4	;volatile
 13485                           
 13486                           ;RGB.c: 22:             LATAbits.LATA5 = 1;
 13487  330E  168C               	bsf	12,5	;volatile
 13488                           
 13489                           ;RGB.c: 23:             LATEbits.LATE0 = 1;
 13490  330F  1410               	bsf	16,0	;volatile
 13491                           
 13492                           ;RGB.c: 24:             break;
 13493  3310  0008               	return
 13494  3311                     l354:	
 13495                           ;RGB.c: 25:         case 1:
 13496                           
 13497                           
 13498                           ;RGB.c: 26:             LATAbits.LATA4 = 1;
 13499  3311  0022               	movlb	2	; select bank2
 13500  3312  160C               	bsf	12,4	;volatile
 13501                           
 13502                           ;RGB.c: 27:             LATAbits.LATA5 = 0;
 13503  3313  128C               	bcf	12,5	;volatile
 13504                           
 13505                           ;RGB.c: 28:             LATEbits.LATE0 = 1;
 13506  3314  1410               	bsf	16,0	;volatile
 13507                           
 13508                           ;RGB.c: 29:             break;
 13509  3315  0008               	return
 13510  3316                     l355:	
 13511                           ;RGB.c: 30:         case 2:
 13512                           
 13513                           
 13514                           ;RGB.c: 31:             LATAbits.LATA4 = 1;
 13515  3316  0022               	movlb	2	; select bank2
 13516  3317  160C               	bsf	12,4	;volatile
 13517                           
 13518                           ;RGB.c: 32:             LATAbits.LATA5 = 1;
 13519  3318  168C               	bsf	12,5	;volatile
 13520                           
 13521                           ;RGB.c: 33:             LATEbits.LATE0 = 0;
 13522  3319  1010               	bcf	16,0	;volatile
 13523                           
 13524                           ;RGB.c: 34:             break;
 13525  331A  0008               	return
 13526  331B                     l5817:	
 13527                           
 13528                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13529                           ; Switch size 1, requested type "simple"
 13530                           ; Number of cases is 1, Range of values is 0 to 0
 13531                           ; switch strategies available:
 13532                           ; Name         Instructions Cycles
 13533                           ; simple_byte            4     3 (average)
 13534                           ; direct_byte            8     6 (fixed)
 13535                           ; jumptable            260     6 (fixed)
 13536                           ;	Chosen strategy is simple_byte
 13537  331B  0872               	movf	RGB_color@color+1,w
 13538  331C  3A00               	xorlw	0	; case 0
 13539  331D  1903               	skipnz
 13540  331E  2B20               	goto	l7837
 13541  331F  2B2B               	goto	l356
 13542  3320                     l7837:	
 13543                           
 13544                           ; Switch size 1, requested type "simple"
 13545                           ; Number of cases is 3, Range of values is 0 to 2
 13546                           ; switch strategies available:
 13547                           ; Name         Instructions Cycles
 13548                           ; simple_byte           10     6 (average)
 13549                           ; direct_byte           12     6 (fixed)
 13550                           ; jumptable            260     6 (fixed)
 13551                           ;	Chosen strategy is simple_byte
 13552  3320  0871               	movf	RGB_color@color,w
 13553  3321  3A00               	xorlw	0	; case 0
 13554  3322  1903               	skipnz
 13555  3323  2B0C               	goto	l352
 13556  3324  3A01               	xorlw	1	; case 1
 13557  3325  1903               	skipnz
 13558  3326  2B11               	goto	l354
 13559  3327  3A03               	xorlw	3	; case 2
 13560  3328  1903               	skipnz
 13561  3329  2B16               	goto	l355
 13562  332A  2B2B               	goto	l356
 13563  332B                     l356:	
 13564  332B  0008               	return
 13565  332C                     __end_of_RGB_color:	
 13566                           
 13567                           	psect	text46
 13568  3374                     __ptext46:	
 13569 ;; *************** function _AFE_UPDATE *****************
 13570 ;; Defined at:
 13571 ;;		line 172 in file "BQ76920.c"
 13572 ;; Parameters:    Size  Location     Type
 13573 ;;		None
 13574 ;; Auto vars:     Size  Location     Type
 13575 ;;		None
 13576 ;; Return value:  Size  Location     Type
 13577 ;;                  1    wreg      void 
 13578 ;; Registers used:
 13579 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13580 ;; Tracked objects:
 13581 ;;		On entry : 0/0
 13582 ;;		On exit  : 0/0
 13583 ;;		Unchanged: 0/0
 13584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13589 ;;Total ram usage:        0 bytes
 13590 ;; Hardware stack levels used:    1
 13591 ;; Hardware stack levels required when called:    5
 13592 ;; This function calls:
 13593 ;;		_calibrate_BATTSOC
 13594 ;;		_coulomb_counter
 13595 ;;		_enableCharging
 13596 ;;		_enableDischarging
 13597 ;;		_updateCurrent
 13598 ;;		_updateTemperatures
 13599 ;;		_updateVoltages
 13600 ;; This function is called by:
 13601 ;;		_statemachine
 13602 ;; This function uses a non-reentrant model
 13603 ;;
 13604                           
 13605                           
 13606                           ;psect for function _AFE_UPDATE
 13607  3374                     _AFE_UPDATE:	
 13608                           
 13609                           ;BQ76920.c: 174:     updateVoltages();
 13610                           
 13611                           ;incstack = 0
 13612                           ; Regs used in _AFE_UPDATE: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13613  3374  3192  224F  31B3   	fcall	_updateVoltages
 13614                           
 13615                           ;BQ76920.c: 176:     if(batCurrent<10){
 13616  3377  0023               	movlb	3	; select bank3
 13617  3378  1BCD               	btfsc	(_batCurrent+3)^(0+384),7
 13618  3379  2B87               	goto	l7549
 13619  337A  084D               	movf	(_batCurrent+3)^(0+384),w
 13620  337B  1D03               	btfss	3,2
 13621  337C  2B8B               	goto	l7551
 13622  337D  084C               	movf	(_batCurrent+2)^(0+384),w
 13623  337E  1D03               	btfss	3,2
 13624  337F  2B8B               	goto	l7551
 13625  3380  084B               	movf	(_batCurrent+1)^(0+384),w
 13626  3381  1D03               	btfss	3,2
 13627  3382  2B8B               	goto	l7551
 13628  3383  300A               	movlw	10
 13629  3384  024A               	subwf	_batCurrent^(0+384),w
 13630  3385  1803               	btfsc	3,0
 13631  3386  2B8B               	goto	l7551
 13632  3387                     l7549:	
 13633                           
 13634                           ;BQ76920.c: 178:         calibrate_BATTSOC();
 13635  3387  31AD  2589  31B3   	fcall	_calibrate_BATTSOC
 13636                           
 13637                           ;BQ76920.c: 179:     }else{
 13638  338A  2B8E               	goto	l7553
 13639  338B                     l7551:	
 13640                           
 13641                           ;BQ76920.c: 180:          coulomb_counter();
 13642  338B  31AF  2724  31B3   	fcall	_coulomb_counter
 13643  338E                     l7553:	
 13644                           
 13645                           ;BQ76920.c: 183:     updateCurrent();
 13646  338E  31AC  2400  31B3   	fcall	_updateCurrent
 13647                           
 13648                           ;BQ76920.c: 184:     updateTemperatures();
 13649  3391  3195  2527  31B3   	fcall	_updateTemperatures
 13650                           
 13651                           ;BQ76920.c: 187:     enableDischarging(1);
 13652  3394  3001               	movlw	1
 13653  3395  0020               	movlb	0	; select bank0
 13654  3396  00A0               	movwf	enableDischarging@enable
 13655  3397  3000               	movlw	0
 13656  3398  00A1               	movwf	enableDischarging@enable+1
 13657  3399  31B5  250C  31B3   	fcall	_enableDischarging
 13658                           
 13659                           ;BQ76920.c: 188:     enableCharging(1);
 13660  339C  3001               	movlw	1
 13661  339D  0020               	movlb	0	; select bank0
 13662  339E  00A0               	movwf	enableCharging@enable
 13663  339F  3000               	movlw	0
 13664  33A0  00A1               	movwf	enableCharging@enable+1
 13665  33A1  31B4  24D5         	fcall	_enableCharging
 13666  33A3  0008               	return
 13667  33A4                     __end_of_AFE_UPDATE:	
 13668                           
 13669                           	psect	text47
 13670  124F                     __ptext47:	
 13671 ;; *************** function _updateVoltages *****************
 13672 ;; Defined at:
 13673 ;;		line 218 in file "BQ76920.c"
 13674 ;; Parameters:    Size  Location     Type
 13675 ;;		None
 13676 ;; Auto vars:     Size  Location     Type
 13677 ;;  adcVal          4   24[BANK1 ] long 
 13678 ;; Return value:  Size  Location     Type
 13679 ;;                  1    wreg      void 
 13680 ;; Registers used:
 13681 ;;		wreg, status,2, status,0, pclath, cstack
 13682 ;; Tracked objects:
 13683 ;;		On entry : 0/0
 13684 ;;		On exit  : 0/0
 13685 ;;		Unchanged: 0/0
 13686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13688 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13689 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13690 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13691 ;;Total ram usage:       11 bytes
 13692 ;; Hardware stack levels used:    1
 13693 ;; Hardware stack levels required when called:    3
 13694 ;; This function calls:
 13695 ;;		___aldiv
 13696 ;;		___fladd
 13697 ;;		___fldiv
 13698 ;;		___flmul
 13699 ;;		___fltol
 13700 ;;		___lmul
 13701 ;;		___xxtofl
 13702 ;;		_readRegister
 13703 ;; This function is called by:
 13704 ;;		_AFE_UPDATE
 13705 ;; This function uses a non-reentrant model
 13706 ;;
 13707                           
 13708                           
 13709                           ;psect for function _updateVoltages
 13710  124F                     _updateVoltages:	
 13711                           
 13712                           ;BQ76920.c: 222:   adcVal = (readRegister(0x18, 0x2A) << 8) | readRegister(0x18, 0x2B);
 13713                           
 13714                           ;incstack = 0
 13715                           ; Regs used in _updateVoltages: [wreg+status,2+status,0+pclath+cstack]
 13716  124F  3018               	movlw	24
 13717  1250  00F5               	movwf	readRegister@slaveAddress
 13718  1251  3000               	movlw	0
 13719  1252  00F6               	movwf	readRegister@slaveAddress+1
 13720  1253  302A               	movlw	42
 13721  1254  00F7               	movwf	readRegister@regAddress
 13722  1255  3000               	movlw	0
 13723  1256  00F8               	movwf	readRegister@regAddress+1
 13724  1257  31B4  249F  3192   	fcall	_readRegister
 13725  125A  0875               	movf	?_readRegister,w
 13726  125B  0021               	movlb	1	; select bank1
 13727  125C  00B1               	movwf	??_updateVoltages^(0+128)
 13728  125D  0876               	movf	?_readRegister+1,w
 13729  125E  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13730  125F  0831               	movf	??_updateVoltages^(0+128),w
 13731  1260  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13732  1261  01B1               	clrf	??_updateVoltages^(0+128)
 13733  1262  3018               	movlw	24
 13734  1263  00F5               	movwf	readRegister@slaveAddress
 13735  1264  3000               	movlw	0
 13736  1265  00F6               	movwf	readRegister@slaveAddress+1
 13737  1266  302B               	movlw	43
 13738  1267  00F7               	movwf	readRegister@regAddress
 13739  1268  3000               	movlw	0
 13740  1269  00F8               	movwf	readRegister@regAddress+1
 13741  126A  31B4  249F  3192   	fcall	_readRegister
 13742  126D  0875               	movf	?_readRegister,w
 13743  126E  0021               	movlb	1	; select bank1
 13744  126F  0431               	iorwf	??_updateVoltages^(0+128),w
 13745  1270  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13746  1271  0876               	movf	?_readRegister+1,w
 13747  1272  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13748  1273  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13749  1274  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13750  1275  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13751  1276  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13752  1277  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13753  1278  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13754                           
 13755                           ;BQ76920.c: 223:   batVoltage = 4.0 * adcGain * adcVal / 1000.0 + 4 * adcOffset;
 13756  1279  0022               	movlb	2	; select bank2
 13757  127A  086E               	movf	_adcGain^(0+256),w
 13758  127B  00F1               	movwf	___xxtofl@val
 13759  127C  086F               	movf	(_adcGain+1)^(0+256),w
 13760  127D  00F2               	movwf	___xxtofl@val+1
 13761  127E  0D89               	rlf	9,f
 13762  127F  3B89               	subwfb	9,f
 13763  1280  0989               	comf	9,f
 13764  1281  00F3               	movwf	___xxtofl@val+2
 13765  1282  00F4               	movwf	___xxtofl@val+3
 13766  1283  3001               	movlw	1
 13767  1284  31A9  216C  3192   	fcall	___xxtofl
 13768  1287  0874               	movf	?___xxtofl+3,w
 13769  1288  0020               	movlb	0	; select bank0
 13770  1289  00AD               	movwf	___flmul@a+3
 13771  128A  0873               	movf	?___xxtofl+2,w
 13772  128B  00AC               	movwf	___flmul@a+2
 13773  128C  0872               	movf	?___xxtofl+1,w
 13774  128D  00AB               	movwf	___flmul@a+1
 13775  128E  0871               	movf	?___xxtofl,w
 13776  128F  00AA               	movwf	___flmul@a
 13777  1290  3040               	movlw	64
 13778  1291  00A9               	movwf	___flmul@b+3
 13779  1292  3080               	movlw	128
 13780  1293  00A8               	movwf	___flmul@b+2
 13781  1294  3000               	movlw	0
 13782  1295  00A7               	movwf	___flmul@b+1
 13783  1296  3000               	movlw	0
 13784  1297  00A6               	movwf	___flmul@b
 13785  1298  3190  2023  3192   	fcall	___flmul
 13786  129B  0020               	movlb	0	; select bank0
 13787  129C  0829               	movf	?___flmul+3,w
 13788  129D  0021               	movlb	1	; select bank1
 13789  129E  00B7               	movwf	(_updateVoltages$2091+3)^(0+128)
 13790  129F  0020               	movlb	0	; select bank0
 13791  12A0  0828               	movf	?___flmul+2,w
 13792  12A1  0021               	movlb	1	; select bank1
 13793  12A2  00B6               	movwf	(_updateVoltages$2091+2)^(0+128)
 13794  12A3  0020               	movlb	0	; select bank0
 13795  12A4  0827               	movf	?___flmul+1,w
 13796  12A5  0021               	movlb	1	; select bank1
 13797  12A6  00B5               	movwf	(_updateVoltages$2091+1)^(0+128)
 13798  12A7  0020               	movlb	0	; select bank0
 13799  12A8  0826               	movf	?___flmul,w
 13800  12A9  0021               	movlb	1	; select bank1
 13801  12AA  00B4               	movwf	_updateVoltages$2091^(0+128)
 13802                           
 13803                           ;BQ76920.c: 223:   batVoltage = 4.0 * adcGain * adcVal / 1000.0 + 4 * adcOffset;
 13804  12AB  0837               	movf	(_updateVoltages$2091+3)^(0+128),w
 13805  12AC  0020               	movlb	0	; select bank0
 13806  12AD  00AD               	movwf	___flmul@a+3
 13807  12AE  0021               	movlb	1	; select bank1
 13808  12AF  0836               	movf	(_updateVoltages$2091+2)^(0+128),w
 13809  12B0  0020               	movlb	0	; select bank0
 13810  12B1  00AC               	movwf	___flmul@a+2
 13811  12B2  0021               	movlb	1	; select bank1
 13812  12B3  0835               	movf	(_updateVoltages$2091+1)^(0+128),w
 13813  12B4  0020               	movlb	0	; select bank0
 13814  12B5  00AB               	movwf	___flmul@a+1
 13815  12B6  0021               	movlb	1	; select bank1
 13816  12B7  0834               	movf	_updateVoltages$2091^(0+128),w
 13817  12B8  0020               	movlb	0	; select bank0
 13818  12B9  00AA               	movwf	___flmul@a
 13819  12BA  0021               	movlb	1	; select bank1
 13820  12BB  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13821  12BC  00F4               	movwf	___xxtofl@val+3
 13822  12BD  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13823  12BE  00F3               	movwf	___xxtofl@val+2
 13824  12BF  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13825  12C0  00F2               	movwf	___xxtofl@val+1
 13826  12C1  0838               	movf	updateVoltages@adcVal^(0+128),w
 13827  12C2  00F1               	movwf	___xxtofl@val
 13828  12C3  3001               	movlw	1
 13829  12C4  31A9  216C  3192   	fcall	___xxtofl
 13830  12C7  0874               	movf	?___xxtofl+3,w
 13831  12C8  0020               	movlb	0	; select bank0
 13832  12C9  00A9               	movwf	___flmul@b+3
 13833  12CA  0873               	movf	?___xxtofl+2,w
 13834  12CB  00A8               	movwf	___flmul@b+2
 13835  12CC  0872               	movf	?___xxtofl+1,w
 13836  12CD  00A7               	movwf	___flmul@b+1
 13837  12CE  0871               	movf	?___xxtofl,w
 13838  12CF  00A6               	movwf	___flmul@b
 13839  12D0  3190  2023  3192   	fcall	___flmul
 13840  12D3  0020               	movlb	0	; select bank0
 13841  12D4  0829               	movf	?___flmul+3,w
 13842  12D5  00C7               	movwf	___fldiv@b+3
 13843  12D6  0828               	movf	?___flmul+2,w
 13844  12D7  00C6               	movwf	___fldiv@b+2
 13845  12D8  0827               	movf	?___flmul+1,w
 13846  12D9  00C5               	movwf	___fldiv@b+1
 13847  12DA  0826               	movf	?___flmul,w
 13848  12DB  00C4               	movwf	___fldiv@b
 13849  12DC  3044               	movlw	68
 13850  12DD  00C3               	movwf	___fldiv@a+3
 13851  12DE  307A               	movlw	122
 13852  12DF  00C2               	movwf	___fldiv@a+2
 13853  12E0  3000               	movlw	0
 13854  12E1  00C1               	movwf	___fldiv@a+1
 13855  12E2  3000               	movlw	0
 13856  12E3  00C0               	movwf	___fldiv@a
 13857  12E4  319B  2300  3192   	fcall	___fldiv
 13858  12E7  0020               	movlb	0	; select bank0
 13859  12E8  0843               	movf	?___fldiv+3,w
 13860  12E9  00E1               	movwf	___fladd@a+3
 13861  12EA  0842               	movf	?___fldiv+2,w
 13862  12EB  00E0               	movwf	___fladd@a+2
 13863  12EC  0841               	movf	?___fldiv+1,w
 13864  12ED  00DF               	movwf	___fladd@a+1
 13865  12EE  0840               	movf	?___fldiv,w
 13866  12EF  00DE               	movwf	___fladd@a
 13867  12F0  0022               	movlb	2	; select bank2
 13868  12F1  086D               	movf	(_adcOffset+1)^(0+256),w
 13869  12F2  0021               	movlb	1	; select bank1
 13870  12F3  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13871  12F4  0022               	movlb	2	; select bank2
 13872  12F5  086C               	movf	_adcOffset^(0+256),w
 13873  12F6  0021               	movlb	1	; select bank1
 13874  12F7  00B1               	movwf	??_updateVoltages^(0+128)
 13875  12F8  35B1               	lslf	??_updateVoltages^(0+128),f
 13876  12F9  0DB2               	rlf	(??_updateVoltages^(0+128)+1),f
 13877  12FA  35B1               	lslf	??_updateVoltages^(0+128),f
 13878  12FB  0DB2               	rlf	(??_updateVoltages^(0+128)+1),f
 13879  12FC  0831               	movf	??_updateVoltages^(0+128),w
 13880  12FD  00F1               	movwf	___xxtofl@val
 13881  12FE  0832               	movf	(??_updateVoltages+1)^(0+128),w
 13882  12FF  00F2               	movwf	___xxtofl@val+1
 13883  1300  0D89               	rlf	9,f
 13884  1301  3B89               	subwfb	9,f
 13885  1302  0989               	comf	9,f
 13886  1303  00F3               	movwf	___xxtofl@val+2
 13887  1304  00F4               	movwf	___xxtofl@val+3
 13888  1305  3001               	movlw	1
 13889  1306  31A9  216C  3192   	fcall	___xxtofl
 13890  1309  0874               	movf	?___xxtofl+3,w
 13891  130A  0020               	movlb	0	; select bank0
 13892  130B  00DD               	movwf	___fladd@b+3
 13893  130C  0873               	movf	?___xxtofl+2,w
 13894  130D  00DC               	movwf	___fladd@b+2
 13895  130E  0872               	movf	?___xxtofl+1,w
 13896  130F  00DB               	movwf	___fladd@b+1
 13897  1310  0871               	movf	?___xxtofl,w
 13898  1311  00DA               	movwf	___fladd@b
 13899  1312  319E  261E  3192   	fcall	___fladd
 13900  1315  0020               	movlb	0	; select bank0
 13901  1316  085D               	movf	?___fladd+3,w
 13902  1317  0021               	movlb	1	; select bank1
 13903  1318  00AB               	movwf	(___fltol@f1+3)^(0+128)
 13904  1319  0020               	movlb	0	; select bank0
 13905  131A  085C               	movf	?___fladd+2,w
 13906  131B  0021               	movlb	1	; select bank1
 13907  131C  00AA               	movwf	(___fltol@f1+2)^(0+128)
 13908  131D  0020               	movlb	0	; select bank0
 13909  131E  085B               	movf	?___fladd+1,w
 13910  131F  0021               	movlb	1	; select bank1
 13911  1320  00A9               	movwf	(___fltol@f1+1)^(0+128)
 13912  1321  0020               	movlb	0	; select bank0
 13913  1322  085A               	movf	?___fladd,w
 13914  1323  0021               	movlb	1	; select bank1
 13915  1324  00A8               	movwf	___fltol@f1^(0+128)
 13916  1325  31B6  262A  3192   	fcall	___fltol
 13917  1328  0021               	movlb	1	; select bank1
 13918  1329  082B               	movf	(?___fltol+3)^(0+128),w
 13919  132A  0023               	movlb	3	; select bank3
 13920  132B  00D1               	movwf	(_batVoltage+3)^(0+384)
 13921  132C  0021               	movlb	1	; select bank1
 13922  132D  082A               	movf	(?___fltol+2)^(0+128),w
 13923  132E  0023               	movlb	3	; select bank3
 13924  132F  00D0               	movwf	(_batVoltage+2)^(0+384)
 13925  1330  0021               	movlb	1	; select bank1
 13926  1331  0829               	movf	(?___fltol+1)^(0+128),w
 13927  1332  0023               	movlb	3	; select bank3
 13928  1333  00CF               	movwf	(_batVoltage+1)^(0+384)
 13929  1334  0021               	movlb	1	; select bank1
 13930  1335  0828               	movf	?___fltol^(0+128),w
 13931  1336  0023               	movlb	3	; select bank3
 13932  1337  00CE               	movwf	_batVoltage^(0+384)
 13933                           
 13934                           ;BQ76920.c: 246:     adcVal = ((readRegister(0x18, 0x0C) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x0D);
 13935  1338  3018               	movlw	24
 13936  1339  00F5               	movwf	readRegister@slaveAddress
 13937  133A  3000               	movlw	0
 13938  133B  00F6               	movwf	readRegister@slaveAddress+1
 13939  133C  300C               	movlw	12
 13940  133D  00F7               	movwf	readRegister@regAddress
 13941  133E  3000               	movlw	0
 13942  133F  00F8               	movwf	readRegister@regAddress+1
 13943  1340  31B4  249F  3192   	fcall	_readRegister
 13944  1343  303F               	movlw	63
 13945  1344  0575               	andwf	?_readRegister,w
 13946  1345  0021               	movlb	1	; select bank1
 13947  1346  00B1               	movwf	??_updateVoltages^(0+128)
 13948  1347  3000               	movlw	0
 13949  1348  0576               	andwf	?_readRegister+1,w
 13950  1349  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13951  134A  0831               	movf	??_updateVoltages^(0+128),w
 13952  134B  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13953  134C  01B1               	clrf	??_updateVoltages^(0+128)
 13954  134D  3018               	movlw	24
 13955  134E  00F5               	movwf	readRegister@slaveAddress
 13956  134F  3000               	movlw	0
 13957  1350  00F6               	movwf	readRegister@slaveAddress+1
 13958  1351  300D               	movlw	13
 13959  1352  00F7               	movwf	readRegister@regAddress
 13960  1353  3000               	movlw	0
 13961  1354  00F8               	movwf	readRegister@regAddress+1
 13962  1355  31B4  249F  3192   	fcall	_readRegister
 13963  1358  0875               	movf	?_readRegister,w
 13964  1359  0021               	movlb	1	; select bank1
 13965  135A  0431               	iorwf	??_updateVoltages^(0+128),w
 13966  135B  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13967  135C  0876               	movf	?_readRegister+1,w
 13968  135D  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13969  135E  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13970  135F  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13971  1360  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13972  1361  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13973  1362  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13974  1363  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13975                           
 13976                           ;BQ76920.c: 247:     cellVoltages[0] = (adcVal * adcGain / 1000) + adcOffset;
 13977  1364  3000               	movlw	0
 13978  1365  0020               	movlb	0	; select bank0
 13979  1366  00A7               	movwf	___aldiv@divisor+3
 13980  1367  3000               	movlw	0
 13981  1368  00A6               	movwf	___aldiv@divisor+2
 13982  1369  3003               	movlw	3
 13983  136A  00A5               	movwf	___aldiv@divisor+1
 13984  136B  30E8               	movlw	232
 13985  136C  00A4               	movwf	___aldiv@divisor
 13986  136D  0022               	movlb	2	; select bank2
 13987  136E  086E               	movf	_adcGain^(0+256),w
 13988  136F  00F1               	movwf	___lmul@multiplier
 13989  1370  086F               	movf	(_adcGain+1)^(0+256),w
 13990  1371  00F2               	movwf	___lmul@multiplier+1
 13991  1372  0D89               	rlf	9,f
 13992  1373  3B89               	subwfb	9,f
 13993  1374  0989               	comf	9,f
 13994  1375  00F3               	movwf	___lmul@multiplier+2
 13995  1376  00F4               	movwf	___lmul@multiplier+3
 13996  1377  0021               	movlb	1	; select bank1
 13997  1378  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13998  1379  00F8               	movwf	___lmul@multiplicand+3
 13999  137A  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 14000  137B  00F7               	movwf	___lmul@multiplicand+2
 14001  137C  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 14002  137D  00F6               	movwf	___lmul@multiplicand+1
 14003  137E  0838               	movf	updateVoltages@adcVal^(0+128),w
 14004  137F  00F5               	movwf	___lmul@multiplicand
 14005  1380  31B4  2406  3192   	fcall	___lmul
 14006  1383  0874               	movf	?___lmul+3,w
 14007  1384  0020               	movlb	0	; select bank0
 14008  1385  00AB               	movwf	___aldiv@dividend+3
 14009  1386  0873               	movf	?___lmul+2,w
 14010  1387  00AA               	movwf	___aldiv@dividend+2
 14011  1388  0872               	movf	?___lmul+1,w
 14012  1389  00A9               	movwf	___aldiv@dividend+1
 14013  138A  0871               	movf	?___lmul,w
 14014  138B  00A8               	movwf	___aldiv@dividend
 14015  138C  31A8  20EA  3192   	fcall	___aldiv
 14016  138F  0022               	movlb	2	; select bank2
 14017  1390  086C               	movf	_adcOffset^(0+256),w
 14018  1391  0020               	movlb	0	; select bank0
 14019  1392  0724               	addwf	?___aldiv,w
 14020  1393  0023               	movlb	3	; select bank3
 14021  1394  00B4               	movwf	_cellVoltages^(0+384)
 14022  1395  0022               	movlb	2	; select bank2
 14023  1396  086D               	movf	(_adcOffset+1)^(0+256),w
 14024  1397  0020               	movlb	0	; select bank0
 14025  1398  3D25               	addwfc	?___aldiv+1,w
 14026  1399  0023               	movlb	3	; select bank3
 14027  139A  00B5               	movwf	(_cellVoltages+1)^(0+384)
 14028                           
 14029                           ;BQ76920.c: 248:     adcVal = ((readRegister(0x18, 0x0E) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x0F);
 14030  139B  3018               	movlw	24
 14031  139C  00F5               	movwf	readRegister@slaveAddress
 14032  139D  3000               	movlw	0
 14033  139E  00F6               	movwf	readRegister@slaveAddress+1
 14034  139F  300E               	movlw	14
 14035  13A0  00F7               	movwf	readRegister@regAddress
 14036  13A1  3000               	movlw	0
 14037  13A2  00F8               	movwf	readRegister@regAddress+1
 14038  13A3  31B4  249F  3192   	fcall	_readRegister
 14039  13A6  303F               	movlw	63
 14040  13A7  0575               	andwf	?_readRegister,w
 14041  13A8  0021               	movlb	1	; select bank1
 14042  13A9  00B1               	movwf	??_updateVoltages^(0+128)
 14043  13AA  3000               	movlw	0
 14044  13AB  0576               	andwf	?_readRegister+1,w
 14045  13AC  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 14046  13AD  0831               	movf	??_updateVoltages^(0+128),w
 14047  13AE  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 14048  13AF  01B1               	clrf	??_updateVoltages^(0+128)
 14049  13B0  3018               	movlw	24
 14050  13B1  00F5               	movwf	readRegister@slaveAddress
 14051  13B2  3000               	movlw	0
 14052  13B3  00F6               	movwf	readRegister@slaveAddress+1
 14053  13B4  300F               	movlw	15
 14054  13B5  00F7               	movwf	readRegister@regAddress
 14055  13B6  3000               	movlw	0
 14056  13B7  00F8               	movwf	readRegister@regAddress+1
 14057  13B8  31B4  249F  3192   	fcall	_readRegister
 14058  13BB  0875               	movf	?_readRegister,w
 14059  13BC  0021               	movlb	1	; select bank1
 14060  13BD  0431               	iorwf	??_updateVoltages^(0+128),w
 14061  13BE  00B8               	movwf	updateVoltages@adcVal^(0+128)
 14062  13BF  0876               	movf	?_readRegister+1,w
 14063  13C0  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 14064  13C1  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 14065  13C2  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 14066  13C3  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 14067  13C4  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 14068  13C5  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 14069  13C6  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 14070                           
 14071                           ;BQ76920.c: 249:     cellVoltages[1] = (adcVal * adcGain / 1000) + adcOffset;
 14072  13C7  3000               	movlw	0
 14073  13C8  0020               	movlb	0	; select bank0
 14074  13C9  00A7               	movwf	___aldiv@divisor+3
 14075  13CA  3000               	movlw	0
 14076  13CB  00A6               	movwf	___aldiv@divisor+2
 14077  13CC  3003               	movlw	3
 14078  13CD  00A5               	movwf	___aldiv@divisor+1
 14079  13CE  30E8               	movlw	232
 14080  13CF  00A4               	movwf	___aldiv@divisor
 14081  13D0  0022               	movlb	2	; select bank2
 14082  13D1  086E               	movf	_adcGain^(0+256),w
 14083  13D2  00F1               	movwf	___lmul@multiplier
 14084  13D3  086F               	movf	(_adcGain+1)^(0+256),w
 14085  13D4  00F2               	movwf	___lmul@multiplier+1
 14086  13D5  0D89               	rlf	9,f
 14087  13D6  3B89               	subwfb	9,f
 14088  13D7  0989               	comf	9,f
 14089  13D8  00F3               	movwf	___lmul@multiplier+2
 14090  13D9  00F4               	movwf	___lmul@multiplier+3
 14091  13DA  0021               	movlb	1	; select bank1
 14092  13DB  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 14093  13DC  00F8               	movwf	___lmul@multiplicand+3
 14094  13DD  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 14095  13DE  00F7               	movwf	___lmul@multiplicand+2
 14096  13DF  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 14097  13E0  00F6               	movwf	___lmul@multiplicand+1
 14098  13E1  0838               	movf	updateVoltages@adcVal^(0+128),w
 14099  13E2  00F5               	movwf	___lmul@multiplicand
 14100  13E3  31B4  2406  3192   	fcall	___lmul
 14101  13E6  0874               	movf	?___lmul+3,w
 14102  13E7  0020               	movlb	0	; select bank0
 14103  13E8  00AB               	movwf	___aldiv@dividend+3
 14104  13E9  0873               	movf	?___lmul+2,w
 14105  13EA  00AA               	movwf	___aldiv@dividend+2
 14106  13EB  0872               	movf	?___lmul+1,w
 14107  13EC  00A9               	movwf	___aldiv@dividend+1
 14108  13ED  0871               	movf	?___lmul,w
 14109  13EE  00A8               	movwf	___aldiv@dividend
 14110  13EF  31A8  20EA  3192   	fcall	___aldiv
 14111  13F2  0022               	movlb	2	; select bank2
 14112  13F3  086C               	movf	_adcOffset^(0+256),w
 14113  13F4  0020               	movlb	0	; select bank0
 14114  13F5  0724               	addwf	?___aldiv,w
 14115  13F6  0023               	movlb	3	; select bank3
 14116  13F7  00B6               	movwf	(_cellVoltages^(0+384)+2)
 14117  13F8  0022               	movlb	2	; select bank2
 14118  13F9  086D               	movf	(_adcOffset+1)^(0+256),w
 14119  13FA  0020               	movlb	0	; select bank0
 14120  13FB  3D25               	addwfc	?___aldiv+1,w
 14121  13FC  0023               	movlb	3	; select bank3
 14122  13FD  00B7               	movwf	((_cellVoltages+1)^(0+384)+2)
 14123                           
 14124                           ;BQ76920.c: 250:     adcVal = ((readRegister(0x18, 0x10) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x11);
 14125  13FE  3018               	movlw	24
 14126  13FF  00F5               	movwf	readRegister@slaveAddress
 14127  1400  3000               	movlw	0
 14128  1401  00F6               	movwf	readRegister@slaveAddress+1
 14129  1402  3010               	movlw	16
 14130  1403  00F7               	movwf	readRegister@regAddress
 14131  1404  3000               	movlw	0
 14132  1405  00F8               	movwf	readRegister@regAddress+1
 14133  1406  31B4  249F  3192   	fcall	_readRegister
 14134  1409  303F               	movlw	63
 14135  140A  0575               	andwf	?_readRegister,w
 14136  140B  0021               	movlb	1	; select bank1
 14137  140C  00B1               	movwf	??_updateVoltages^(0+128)
 14138  140D  3000               	movlw	0
 14139  140E  0576               	andwf	?_readRegister+1,w
 14140  140F  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 14141  1410  0831               	movf	??_updateVoltages^(0+128),w
 14142  1411  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 14143  1412  01B1               	clrf	??_updateVoltages^(0+128)
 14144  1413  3018               	movlw	24
 14145  1414  00F5               	movwf	readRegister@slaveAddress
 14146  1415  3000               	movlw	0
 14147  1416  00F6               	movwf	readRegister@slaveAddress+1
 14148  1417  3011               	movlw	17
 14149  1418  00F7               	movwf	readRegister@regAddress
 14150  1419  3000               	movlw	0
 14151  141A  00F8               	movwf	readRegister@regAddress+1
 14152  141B  31B4  249F  3192   	fcall	_readRegister
 14153  141E  0875               	movf	?_readRegister,w
 14154  141F  0021               	movlb	1	; select bank1
 14155  1420  0431               	iorwf	??_updateVoltages^(0+128),w
 14156  1421  00B8               	movwf	updateVoltages@adcVal^(0+128)
 14157  1422  0876               	movf	?_readRegister+1,w
 14158  1423  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 14159  1424  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 14160  1425  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 14161  1426  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 14162  1427  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 14163  1428  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 14164  1429  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 14165                           
 14166                           ;BQ76920.c: 251:     cellVoltages[2] = (adcVal * adcGain / 1000) + adcOffset;
 14167  142A  3000               	movlw	0
 14168  142B  0020               	movlb	0	; select bank0
 14169  142C  00A7               	movwf	___aldiv@divisor+3
 14170  142D  3000               	movlw	0
 14171  142E  00A6               	movwf	___aldiv@divisor+2
 14172  142F  3003               	movlw	3
 14173  1430  00A5               	movwf	___aldiv@divisor+1
 14174  1431  30E8               	movlw	232
 14175  1432  00A4               	movwf	___aldiv@divisor
 14176  1433  0022               	movlb	2	; select bank2
 14177  1434  086E               	movf	_adcGain^(0+256),w
 14178  1435  00F1               	movwf	___lmul@multiplier
 14179  1436  086F               	movf	(_adcGain+1)^(0+256),w
 14180  1437  00F2               	movwf	___lmul@multiplier+1
 14181  1438  0D89               	rlf	9,f
 14182  1439  3B89               	subwfb	9,f
 14183  143A  0989               	comf	9,f
 14184  143B  00F3               	movwf	___lmul@multiplier+2
 14185  143C  00F4               	movwf	___lmul@multiplier+3
 14186  143D  0021               	movlb	1	; select bank1
 14187  143E  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 14188  143F  00F8               	movwf	___lmul@multiplicand+3
 14189  1440  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 14190  1441  00F7               	movwf	___lmul@multiplicand+2
 14191  1442  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 14192  1443  00F6               	movwf	___lmul@multiplicand+1
 14193  1444  0838               	movf	updateVoltages@adcVal^(0+128),w
 14194  1445  00F5               	movwf	___lmul@multiplicand
 14195  1446  31B4  2406  3192   	fcall	___lmul
 14196  1449  0874               	movf	?___lmul+3,w
 14197  144A  0020               	movlb	0	; select bank0
 14198  144B  00AB               	movwf	___aldiv@dividend+3
 14199  144C  0873               	movf	?___lmul+2,w
 14200  144D  00AA               	movwf	___aldiv@dividend+2
 14201  144E  0872               	movf	?___lmul+1,w
 14202  144F  00A9               	movwf	___aldiv@dividend+1
 14203  1450  0871               	movf	?___lmul,w
 14204  1451  00A8               	movwf	___aldiv@dividend
 14205  1452  31A8  20EA  3192   	fcall	___aldiv
 14206  1455  0022               	movlb	2	; select bank2
 14207  1456  086C               	movf	_adcOffset^(0+256),w
 14208  1457  0020               	movlb	0	; select bank0
 14209  1458  0724               	addwf	?___aldiv,w
 14210  1459  0023               	movlb	3	; select bank3
 14211  145A  00B8               	movwf	(_cellVoltages^(0+384)+4)
 14212  145B  0022               	movlb	2	; select bank2
 14213  145C  086D               	movf	(_adcOffset+1)^(0+256),w
 14214  145D  0020               	movlb	0	; select bank0
 14215  145E  3D25               	addwfc	?___aldiv+1,w
 14216  145F  0023               	movlb	3	; select bank3
 14217  1460  00B9               	movwf	((_cellVoltages+1)^(0+384)+4)
 14218                           
 14219                           ;BQ76920.c: 252:     adcVal = ((readRegister(0x18, 0x12) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x13);
 14220  1461  3018               	movlw	24
 14221  1462  00F5               	movwf	readRegister@slaveAddress
 14222  1463  3000               	movlw	0
 14223  1464  00F6               	movwf	readRegister@slaveAddress+1
 14224  1465  3012               	movlw	18
 14225  1466  00F7               	movwf	readRegister@regAddress
 14226  1467  3000               	movlw	0
 14227  1468  00F8               	movwf	readRegister@regAddress+1
 14228  1469  31B4  249F  3192   	fcall	_readRegister
 14229  146C  303F               	movlw	63
 14230  146D  0575               	andwf	?_readRegister,w
 14231  146E  0021               	movlb	1	; select bank1
 14232  146F  00B1               	movwf	??_updateVoltages^(0+128)
 14233  1470  3000               	movlw	0
 14234  1471  0576               	andwf	?_readRegister+1,w
 14235  1472  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 14236  1473  0831               	movf	??_updateVoltages^(0+128),w
 14237  1474  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 14238  1475  01B1               	clrf	??_updateVoltages^(0+128)
 14239  1476  3018               	movlw	24
 14240  1477  00F5               	movwf	readRegister@slaveAddress
 14241  1478  3000               	movlw	0
 14242  1479  00F6               	movwf	readRegister@slaveAddress+1
 14243  147A  3013               	movlw	19
 14244  147B  00F7               	movwf	readRegister@regAddress
 14245  147C  3000               	movlw	0
 14246  147D  00F8               	movwf	readRegister@regAddress+1
 14247  147E  31B4  249F  3192   	fcall	_readRegister
 14248  1481  0875               	movf	?_readRegister,w
 14249  1482  0021               	movlb	1	; select bank1
 14250  1483  0431               	iorwf	??_updateVoltages^(0+128),w
 14251  1484  00B8               	movwf	updateVoltages@adcVal^(0+128)
 14252  1485  0876               	movf	?_readRegister+1,w
 14253  1486  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 14254  1487  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 14255  1488  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 14256  1489  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 14257  148A  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 14258  148B  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 14259  148C  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 14260                           
 14261                           ;BQ76920.c: 253:     cellVoltages[3] = (adcVal * adcGain / 1000) + adcOffset;
 14262  148D  3000               	movlw	0
 14263  148E  0020               	movlb	0	; select bank0
 14264  148F  00A7               	movwf	___aldiv@divisor+3
 14265  1490  3000               	movlw	0
 14266  1491  00A6               	movwf	___aldiv@divisor+2
 14267  1492  3003               	movlw	3
 14268  1493  00A5               	movwf	___aldiv@divisor+1
 14269  1494  30E8               	movlw	232
 14270  1495  00A4               	movwf	___aldiv@divisor
 14271  1496  0022               	movlb	2	; select bank2
 14272  1497  086E               	movf	_adcGain^(0+256),w
 14273  1498  00F1               	movwf	___lmul@multiplier
 14274  1499  086F               	movf	(_adcGain+1)^(0+256),w
 14275  149A  00F2               	movwf	___lmul@multiplier+1
 14276  149B  0D89               	rlf	9,f
 14277  149C  3B89               	subwfb	9,f
 14278  149D  0989               	comf	9,f
 14279  149E  00F3               	movwf	___lmul@multiplier+2
 14280  149F  00F4               	movwf	___lmul@multiplier+3
 14281  14A0  0021               	movlb	1	; select bank1
 14282  14A1  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 14283  14A2  00F8               	movwf	___lmul@multiplicand+3
 14284  14A3  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 14285  14A4  00F7               	movwf	___lmul@multiplicand+2
 14286  14A5  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 14287  14A6  00F6               	movwf	___lmul@multiplicand+1
 14288  14A7  0838               	movf	updateVoltages@adcVal^(0+128),w
 14289  14A8  00F5               	movwf	___lmul@multiplicand
 14290  14A9  31B4  2406  3192   	fcall	___lmul
 14291  14AC  0874               	movf	?___lmul+3,w
 14292  14AD  0020               	movlb	0	; select bank0
 14293  14AE  00AB               	movwf	___aldiv@dividend+3
 14294  14AF  0873               	movf	?___lmul+2,w
 14295  14B0  00AA               	movwf	___aldiv@dividend+2
 14296  14B1  0872               	movf	?___lmul+1,w
 14297  14B2  00A9               	movwf	___aldiv@dividend+1
 14298  14B3  0871               	movf	?___lmul,w
 14299  14B4  00A8               	movwf	___aldiv@dividend
 14300  14B5  31A8  20EA  3192   	fcall	___aldiv
 14301  14B8  0022               	movlb	2	; select bank2
 14302  14B9  086C               	movf	_adcOffset^(0+256),w
 14303  14BA  0020               	movlb	0	; select bank0
 14304  14BB  0724               	addwf	?___aldiv,w
 14305  14BC  0023               	movlb	3	; select bank3
 14306  14BD  00BA               	movwf	(_cellVoltages^(0+384)+6)
 14307  14BE  0022               	movlb	2	; select bank2
 14308  14BF  086D               	movf	(_adcOffset+1)^(0+256),w
 14309  14C0  0020               	movlb	0	; select bank0
 14310  14C1  3D25               	addwfc	?___aldiv+1,w
 14311  14C2  0023               	movlb	3	; select bank3
 14312  14C3  00BB               	movwf	((_cellVoltages+1)^(0+384)+6)
 14313                           
 14314                           ;BQ76920.c: 254:     adcVal = ((readRegister(0x18, 0x14) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x15);
 14315  14C4  3018               	movlw	24
 14316  14C5  00F5               	movwf	readRegister@slaveAddress
 14317  14C6  3000               	movlw	0
 14318  14C7  00F6               	movwf	readRegister@slaveAddress+1
 14319  14C8  3014               	movlw	20
 14320  14C9  00F7               	movwf	readRegister@regAddress
 14321  14CA  3000               	movlw	0
 14322  14CB  00F8               	movwf	readRegister@regAddress+1
 14323  14CC  31B4  249F  3192   	fcall	_readRegister
 14324  14CF  303F               	movlw	63
 14325  14D0  0575               	andwf	?_readRegister,w
 14326  14D1  0021               	movlb	1	; select bank1
 14327  14D2  00B1               	movwf	??_updateVoltages^(0+128)
 14328  14D3  3000               	movlw	0
 14329  14D4  0576               	andwf	?_readRegister+1,w
 14330  14D5  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 14331  14D6  0831               	movf	??_updateVoltages^(0+128),w
 14332  14D7  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 14333  14D8  01B1               	clrf	??_updateVoltages^(0+128)
 14334  14D9  3018               	movlw	24
 14335  14DA  00F5               	movwf	readRegister@slaveAddress
 14336  14DB  3000               	movlw	0
 14337  14DC  00F6               	movwf	readRegister@slaveAddress+1
 14338  14DD  3015               	movlw	21
 14339  14DE  00F7               	movwf	readRegister@regAddress
 14340  14DF  3000               	movlw	0
 14341  14E0  00F8               	movwf	readRegister@regAddress+1
 14342  14E1  31B4  249F  3192   	fcall	_readRegister
 14343  14E4  0875               	movf	?_readRegister,w
 14344  14E5  0021               	movlb	1	; select bank1
 14345  14E6  0431               	iorwf	??_updateVoltages^(0+128),w
 14346  14E7  00B8               	movwf	updateVoltages@adcVal^(0+128)
 14347  14E8  0876               	movf	?_readRegister+1,w
 14348  14E9  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 14349  14EA  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 14350  14EB  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 14351  14EC  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 14352  14ED  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 14353  14EE  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 14354  14EF  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 14355                           
 14356                           ;BQ76920.c: 255:     cellVoltages[4] = (adcVal * adcGain / 1000) + adcOffset;
 14357  14F0  3000               	movlw	0
 14358  14F1  0020               	movlb	0	; select bank0
 14359  14F2  00A7               	movwf	___aldiv@divisor+3
 14360  14F3  3000               	movlw	0
 14361  14F4  00A6               	movwf	___aldiv@divisor+2
 14362  14F5  3003               	movlw	3
 14363  14F6  00A5               	movwf	___aldiv@divisor+1
 14364  14F7  30E8               	movlw	232
 14365  14F8  00A4               	movwf	___aldiv@divisor
 14366  14F9  0022               	movlb	2	; select bank2
 14367  14FA  086E               	movf	_adcGain^(0+256),w
 14368  14FB  00F1               	movwf	___lmul@multiplier
 14369  14FC  086F               	movf	(_adcGain+1)^(0+256),w
 14370  14FD  00F2               	movwf	___lmul@multiplier+1
 14371  14FE  0D89               	rlf	9,f
 14372  14FF  3B89               	subwfb	9,f
 14373  1500  0989               	comf	9,f
 14374  1501  00F3               	movwf	___lmul@multiplier+2
 14375  1502  00F4               	movwf	___lmul@multiplier+3
 14376  1503  0021               	movlb	1	; select bank1
 14377  1504  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 14378  1505  00F8               	movwf	___lmul@multiplicand+3
 14379  1506  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 14380  1507  00F7               	movwf	___lmul@multiplicand+2
 14381  1508  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 14382  1509  00F6               	movwf	___lmul@multiplicand+1
 14383  150A  0838               	movf	updateVoltages@adcVal^(0+128),w
 14384  150B  00F5               	movwf	___lmul@multiplicand
 14385  150C  31B4  2406  3192   	fcall	___lmul
 14386  150F  0874               	movf	?___lmul+3,w
 14387  1510  0020               	movlb	0	; select bank0
 14388  1511  00AB               	movwf	___aldiv@dividend+3
 14389  1512  0873               	movf	?___lmul+2,w
 14390  1513  00AA               	movwf	___aldiv@dividend+2
 14391  1514  0872               	movf	?___lmul+1,w
 14392  1515  00A9               	movwf	___aldiv@dividend+1
 14393  1516  0871               	movf	?___lmul,w
 14394  1517  00A8               	movwf	___aldiv@dividend
 14395  1518  31A8  20EA         	fcall	___aldiv
 14396  151A  0022               	movlb	2	; select bank2
 14397  151B  086C               	movf	_adcOffset^(0+256),w
 14398  151C  0020               	movlb	0	; select bank0
 14399  151D  0724               	addwf	?___aldiv,w
 14400  151E  0023               	movlb	3	; select bank3
 14401  151F  00BC               	movwf	(_cellVoltages^(0+384)+8)
 14402  1520  0022               	movlb	2	; select bank2
 14403  1521  086D               	movf	(_adcOffset+1)^(0+256),w
 14404  1522  0020               	movlb	0	; select bank0
 14405  1523  3D25               	addwfc	?___aldiv+1,w
 14406  1524  0023               	movlb	3	; select bank3
 14407  1525  00BD               	movwf	((_cellVoltages+1)^(0+384)+8)
 14408  1526  0008               	return
 14409  1527                     __end_of_updateVoltages:	
 14410                           
 14411                           	psect	text48
 14412  3406                     __ptext48:	
 14413 ;; *************** function ___lmul *****************
 14414 ;; Defined at:
 14415 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
 14416 ;; Parameters:    Size  Location     Type
 14417 ;;  multiplier      4    1[COMMON] unsigned long 
 14418 ;;  multiplicand    4    5[COMMON] unsigned long 
 14419 ;; Auto vars:     Size  Location     Type
 14420 ;;  product         4    0[BANK0 ] unsigned long 
 14421 ;; Return value:  Size  Location     Type
 14422 ;;                  4    1[COMMON] unsigned long 
 14423 ;; Registers used:
 14424 ;;		wreg, status,2, status,0
 14425 ;; Tracked objects:
 14426 ;;		On entry : 0/0
 14427 ;;		On exit  : 0/0
 14428 ;;		Unchanged: 0/0
 14429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14430 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14431 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14433 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14434 ;;Total ram usage:       12 bytes
 14435 ;; Hardware stack levels used:    1
 14436 ;; Hardware stack levels required when called:    1
 14437 ;; This function calls:
 14438 ;;		Nothing
 14439 ;; This function is called by:
 14440 ;;		_setCellUndervoltageProtection
 14441 ;;		_setCellOvervoltageProtection
 14442 ;;		_updateVoltages
 14443 ;; This function uses a non-reentrant model
 14444 ;;
 14445                           
 14446                           
 14447                           ;psect for function ___lmul
 14448  3406                     ___lmul:	
 14449                           
 14450                           ;incstack = 0
 14451                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 14452  3406  3000               	movlw	0
 14453  3407  0020               	movlb	0	; select bank0
 14454  3408  00A3               	movwf	___lmul@product+3
 14455  3409  3000               	movlw	0
 14456  340A  00A2               	movwf	___lmul@product+2
 14457  340B  3000               	movlw	0
 14458  340C  00A1               	movwf	___lmul@product+1
 14459  340D  3000               	movlw	0
 14460  340E  00A0               	movwf	___lmul@product
 14461  340F                     l7189:	
 14462  340F  1C71               	btfss	___lmul@multiplier,0
 14463  3410  2C1A               	goto	l7193
 14464  3411  0875               	movf	___lmul@multiplicand,w
 14465  3412  0020               	movlb	0	; select bank0
 14466  3413  07A0               	addwf	___lmul@product,f
 14467  3414  0876               	movf	___lmul@multiplicand+1,w
 14468  3415  3DA1               	addwfc	___lmul@product+1,f
 14469  3416  0877               	movf	___lmul@multiplicand+2,w
 14470  3417  3DA2               	addwfc	___lmul@product+2,f
 14471  3418  0878               	movf	___lmul@multiplicand+3,w
 14472  3419  3DA3               	addwfc	___lmul@product+3,f
 14473  341A                     l7193:	
 14474  341A  3001               	movlw	1
 14475  341B                     u9005:	
 14476  341B  35F5               	lslf	___lmul@multiplicand,f
 14477  341C  0DF6               	rlf	___lmul@multiplicand+1,f
 14478  341D  0DF7               	rlf	___lmul@multiplicand+2,f
 14479  341E  0DF8               	rlf	___lmul@multiplicand+3,f
 14480  341F  0B89               	decfsz	9,f
 14481  3420  2C1B               	goto	u9005
 14482  3421  3001               	movlw	1
 14483  3422                     u9015:	
 14484  3422  36F4               	lsrf	___lmul@multiplier+3,f
 14485  3423  0CF3               	rrf	___lmul@multiplier+2,f
 14486  3424  0CF2               	rrf	___lmul@multiplier+1,f
 14487  3425  0CF1               	rrf	___lmul@multiplier,f
 14488  3426  0B89               	decfsz	9,f
 14489  3427  2C22               	goto	u9015
 14490  3428  0874               	movf	___lmul@multiplier+3,w
 14491  3429  0473               	iorwf	___lmul@multiplier+2,w
 14492  342A  0472               	iorwf	___lmul@multiplier+1,w
 14493  342B  0471               	iorwf	___lmul@multiplier,w
 14494  342C  1D03               	skipz
 14495  342D  2C0F               	goto	l7189
 14496  342E  0020               	movlb	0	; select bank0
 14497  342F  0823               	movf	___lmul@product+3,w
 14498  3430  00F4               	movwf	?___lmul+3
 14499  3431  0822               	movf	___lmul@product+2,w
 14500  3432  00F3               	movwf	?___lmul+2
 14501  3433  0821               	movf	___lmul@product+1,w
 14502  3434  00F2               	movwf	?___lmul+1
 14503  3435  0820               	movf	___lmul@product,w
 14504  3436  00F1               	movwf	?___lmul
 14505  3437  0008               	return
 14506  3438                     __end_of___lmul:	
 14507                           
 14508                           	psect	text49
 14509  1527                     __ptext49:	
 14510 ;; *************** function _updateTemperatures *****************
 14511 ;; Defined at:
 14512 ;;		line 262 in file "BQ76920.c"
 14513 ;; Parameters:    Size  Location     Type
 14514 ;;		None
 14515 ;; Auto vars:     Size  Location     Type
 14516 ;;  rts             4   75[BANK1 ] unsigned long 
 14517 ;;  tmp             4   67[BANK1 ] float 
 14518 ;;  vtsx            2   73[BANK1 ] int 
 14519 ;;  adcVal          2   71[BANK1 ] int 
 14520 ;; Return value:  Size  Location     Type
 14521 ;;                  1    wreg      void 
 14522 ;; Registers used:
 14523 ;;		wreg, status,2, status,0, pclath, cstack
 14524 ;; Tracked objects:
 14525 ;;		On entry : 0/0
 14526 ;;		On exit  : 0/0
 14527 ;;		Unchanged: 0/0
 14528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14530 ;;      Locals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14531 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14532 ;;      Totals:         0       0      59       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14533 ;;Total ram usage:       59 bytes
 14534 ;; Hardware stack levels used:    1
 14535 ;; Hardware stack levels required when called:    4
 14536 ;; This function calls:
 14537 ;;		___fladd
 14538 ;;		___fldiv
 14539 ;;		___flmul
 14540 ;;		___flsub
 14541 ;;		___fltol
 14542 ;;		___xxtofl
 14543 ;;		_logf
 14544 ;;		_readRegister
 14545 ;; This function is called by:
 14546 ;;		_AFE_UPDATE
 14547 ;; This function uses a non-reentrant model
 14548 ;;
 14549                           
 14550                           
 14551                           ;psect for function _updateTemperatures
 14552  1527                     _updateTemperatures:	
 14553                           
 14554                           ;BQ76920.c: 266:      unsigned long rts = 0;
 14555                           
 14556                           ;incstack = 0
 14557                           ; Regs used in _updateTemperatures: [wreg+status,2+status,0+pclath+cstack]
 14558  1527  3000               	movlw	0
 14559  1528  0021               	movlb	1	; select bank1
 14560  1529  00EE               	movwf	(updateTemperatures@rts+3)^(0+128)
 14561  152A  3000               	movlw	0
 14562  152B  00ED               	movwf	(updateTemperatures@rts+2)^(0+128)
 14563  152C  3000               	movlw	0
 14564  152D  00EC               	movwf	(updateTemperatures@rts+1)^(0+128)
 14565  152E  3000               	movlw	0
 14566  152F  00EB               	movwf	updateTemperatures@rts^(0+128)
 14567                           
 14568                           ;BQ76920.c: 268:      adcVal = ((readRegister(0x18, 0x2C) & 0x3F) << 8) | readRegister(0
      +                          x18, 0x2D);
 14569  1530  3018               	movlw	24
 14570  1531  00F5               	movwf	readRegister@slaveAddress
 14571  1532  3000               	movlw	0
 14572  1533  00F6               	movwf	readRegister@slaveAddress+1
 14573  1534  302C               	movlw	44
 14574  1535  00F7               	movwf	readRegister@regAddress
 14575  1536  3000               	movlw	0
 14576  1537  00F8               	movwf	readRegister@regAddress+1
 14577  1538  31B4  249F  3195   	fcall	_readRegister
 14578  153B  303F               	movlw	63
 14579  153C  0575               	andwf	?_readRegister,w
 14580  153D  0021               	movlb	1	; select bank1
 14581  153E  00B4               	movwf	??_updateTemperatures^(0+128)
 14582  153F  3000               	movlw	0
 14583  1540  0576               	andwf	?_readRegister+1,w
 14584  1541  00B5               	movwf	(??_updateTemperatures+1)^(0+128)
 14585  1542  0834               	movf	??_updateTemperatures^(0+128),w
 14586  1543  00B5               	movwf	(??_updateTemperatures^(0+128)+1)
 14587  1544  01B4               	clrf	??_updateTemperatures^(0+128)
 14588  1545  3018               	movlw	24
 14589  1546  00F5               	movwf	readRegister@slaveAddress
 14590  1547  3000               	movlw	0
 14591  1548  00F6               	movwf	readRegister@slaveAddress+1
 14592  1549  302D               	movlw	45
 14593  154A  00F7               	movwf	readRegister@regAddress
 14594  154B  3000               	movlw	0
 14595  154C  00F8               	movwf	readRegister@regAddress+1
 14596  154D  31B4  249F  3195   	fcall	_readRegister
 14597  1550  0875               	movf	?_readRegister,w
 14598  1551  0021               	movlb	1	; select bank1
 14599  1552  0434               	iorwf	??_updateTemperatures^(0+128),w
 14600  1553  00E7               	movwf	updateTemperatures@adcVal^(0+128)
 14601  1554  0876               	movf	?_readRegister+1,w
 14602  1555  0435               	iorwf	(??_updateTemperatures+1)^(0+128),w
 14603  1556  00E8               	movwf	(updateTemperatures@adcVal+1)^(0+128)
 14604                           
 14605                           ;BQ76920.c: 269:      vtsx = adcVal * 0.382;
 14606  1557  0867               	movf	updateTemperatures@adcVal^(0+128),w
 14607  1558  00F1               	movwf	___xxtofl@val
 14608  1559  0868               	movf	(updateTemperatures@adcVal+1)^(0+128),w
 14609  155A  00F2               	movwf	___xxtofl@val+1
 14610  155B  0D89               	rlf	9,f
 14611  155C  3B89               	subwfb	9,f
 14612  155D  0989               	comf	9,f
 14613  155E  00F3               	movwf	___xxtofl@val+2
 14614  155F  00F4               	movwf	___xxtofl@val+3
 14615  1560  3001               	movlw	1
 14616  1561  31A9  216C  3195   	fcall	___xxtofl
 14617  1564  0874               	movf	?___xxtofl+3,w
 14618  1565  0020               	movlb	0	; select bank0
 14619  1566  00AD               	movwf	___flmul@a+3
 14620  1567  0873               	movf	?___xxtofl+2,w
 14621  1568  00AC               	movwf	___flmul@a+2
 14622  1569  0872               	movf	?___xxtofl+1,w
 14623  156A  00AB               	movwf	___flmul@a+1
 14624  156B  0871               	movf	?___xxtofl,w
 14625  156C  00AA               	movwf	___flmul@a
 14626  156D  303E               	movlw	62
 14627  156E  00A9               	movwf	___flmul@b+3
 14628  156F  30C3               	movlw	195
 14629  1570  00A8               	movwf	___flmul@b+2
 14630  1571  3095               	movlw	149
 14631  1572  00A7               	movwf	___flmul@b+1
 14632  1573  3081               	movlw	129
 14633  1574  00A6               	movwf	___flmul@b
 14634  1575  3190  2023  3195   	fcall	___flmul
 14635  1578  0020               	movlb	0	; select bank0
 14636  1579  0829               	movf	?___flmul+3,w
 14637  157A  0021               	movlb	1	; select bank1
 14638  157B  00AB               	movwf	(___fltol@f1+3)^(0+128)
 14639  157C  0020               	movlb	0	; select bank0
 14640  157D  0828               	movf	?___flmul+2,w
 14641  157E  0021               	movlb	1	; select bank1
 14642  157F  00AA               	movwf	(___fltol@f1+2)^(0+128)
 14643  1580  0020               	movlb	0	; select bank0
 14644  1581  0827               	movf	?___flmul+1,w
 14645  1582  0021               	movlb	1	; select bank1
 14646  1583  00A9               	movwf	(___fltol@f1+1)^(0+128)
 14647  1584  0020               	movlb	0	; select bank0
 14648  1585  0826               	movf	?___flmul,w
 14649  1586  0021               	movlb	1	; select bank1
 14650  1587  00A8               	movwf	___fltol@f1^(0+128)
 14651  1588  31B6  262A  3195   	fcall	___fltol
 14652  158B  0021               	movlb	1	; select bank1
 14653  158C  0829               	movf	(?___fltol+1)^(0+128),w
 14654  158D  00EA               	movwf	(updateTemperatures@vtsx+1)^(0+128)
 14655  158E  0828               	movf	?___fltol^(0+128),w
 14656  158F  00E9               	movwf	updateTemperatures@vtsx^(0+128)
 14657                           
 14658                           ;BQ76920.c: 270:      rts = 10000.0 * vtsx / (3300.0 - vtsx);
 14659  1590  0869               	movf	updateTemperatures@vtsx^(0+128),w
 14660  1591  00F1               	movwf	___xxtofl@val
 14661  1592  086A               	movf	(updateTemperatures@vtsx+1)^(0+128),w
 14662  1593  00F2               	movwf	___xxtofl@val+1
 14663  1594  0D89               	rlf	9,f
 14664  1595  3B89               	subwfb	9,f
 14665  1596  0989               	comf	9,f
 14666  1597  00F3               	movwf	___xxtofl@val+2
 14667  1598  00F4               	movwf	___xxtofl@val+3
 14668  1599  3001               	movlw	1
 14669  159A  31A9  216C  3195   	fcall	___xxtofl
 14670  159D  0874               	movf	?___xxtofl+3,w
 14671  159E  0020               	movlb	0	; select bank0
 14672  159F  00AD               	movwf	___flmul@a+3
 14673  15A0  0873               	movf	?___xxtofl+2,w
 14674  15A1  00AC               	movwf	___flmul@a+2
 14675  15A2  0872               	movf	?___xxtofl+1,w
 14676  15A3  00AB               	movwf	___flmul@a+1
 14677  15A4  0871               	movf	?___xxtofl,w
 14678  15A5  00AA               	movwf	___flmul@a
 14679  15A6  3046               	movlw	70
 14680  15A7  00A9               	movwf	___flmul@b+3
 14681  15A8  301C               	movlw	28
 14682  15A9  00A8               	movwf	___flmul@b+2
 14683  15AA  3040               	movlw	64
 14684  15AB  00A7               	movwf	___flmul@b+1
 14685  15AC  3000               	movlw	0
 14686  15AD  00A6               	movwf	___flmul@b
 14687  15AE  3190  2023  3195   	fcall	___flmul
 14688  15B1  0020               	movlb	0	; select bank0
 14689  15B2  0829               	movf	?___flmul+3,w
 14690  15B3  00C7               	movwf	___fldiv@b+3
 14691  15B4  0828               	movf	?___flmul+2,w
 14692  15B5  00C6               	movwf	___fldiv@b+2
 14693  15B6  0827               	movf	?___flmul+1,w
 14694  15B7  00C5               	movwf	___fldiv@b+1
 14695  15B8  0826               	movf	?___flmul,w
 14696  15B9  00C4               	movwf	___fldiv@b
 14697  15BA  3045               	movlw	69
 14698  15BB  0021               	movlb	1	; select bank1
 14699  15BC  00A7               	movwf	(___flsub@b+3)^(0+128)
 14700  15BD  304E               	movlw	78
 14701  15BE  00A6               	movwf	(___flsub@b+2)^(0+128)
 14702  15BF  3040               	movlw	64
 14703  15C0  00A5               	movwf	(___flsub@b+1)^(0+128)
 14704  15C1  3000               	movlw	0
 14705  15C2  00A4               	movwf	___flsub@b^(0+128)
 14706  15C3  0869               	movf	updateTemperatures@vtsx^(0+128),w
 14707  15C4  00F1               	movwf	___xxtofl@val
 14708  15C5  086A               	movf	(updateTemperatures@vtsx+1)^(0+128),w
 14709  15C6  00F2               	movwf	___xxtofl@val+1
 14710  15C7  0D89               	rlf	9,f
 14711  15C8  3B89               	subwfb	9,f
 14712  15C9  0989               	comf	9,f
 14713  15CA  00F3               	movwf	___xxtofl@val+2
 14714  15CB  00F4               	movwf	___xxtofl@val+3
 14715  15CC  3001               	movlw	1
 14716  15CD  31A9  216C  3195   	fcall	___xxtofl
 14717  15D0  0874               	movf	?___xxtofl+3,w
 14718  15D1  0021               	movlb	1	; select bank1
 14719  15D2  00A3               	movwf	(___flsub@a+3)^(0+128)
 14720  15D3  0873               	movf	?___xxtofl+2,w
 14721  15D4  00A2               	movwf	(___flsub@a+2)^(0+128)
 14722  15D5  0872               	movf	?___xxtofl+1,w
 14723  15D6  00A1               	movwf	(___flsub@a+1)^(0+128)
 14724  15D7  0871               	movf	?___xxtofl,w
 14725  15D8  00A0               	movwf	___flsub@a^(0+128)
 14726  15D9  31B4  246A  3195   	fcall	___flsub
 14727  15DC  0021               	movlb	1	; select bank1
 14728  15DD  0823               	movf	(?___flsub+3)^(0+128),w
 14729  15DE  0020               	movlb	0	; select bank0
 14730  15DF  00C3               	movwf	___fldiv@a+3
 14731  15E0  0021               	movlb	1	; select bank1
 14732  15E1  0822               	movf	(?___flsub+2)^(0+128),w
 14733  15E2  0020               	movlb	0	; select bank0
 14734  15E3  00C2               	movwf	___fldiv@a+2
 14735  15E4  0021               	movlb	1	; select bank1
 14736  15E5  0821               	movf	(?___flsub+1)^(0+128),w
 14737  15E6  0020               	movlb	0	; select bank0
 14738  15E7  00C1               	movwf	___fldiv@a+1
 14739  15E8  0021               	movlb	1	; select bank1
 14740  15E9  0820               	movf	?___flsub^(0+128),w
 14741  15EA  0020               	movlb	0	; select bank0
 14742  15EB  00C0               	movwf	___fldiv@a
 14743  15EC  319B  2300  3195   	fcall	___fldiv
 14744  15EF  0020               	movlb	0	; select bank0
 14745  15F0  0843               	movf	?___fldiv+3,w
 14746  15F1  0021               	movlb	1	; select bank1
 14747  15F2  00AB               	movwf	(___fltol@f1+3)^(0+128)
 14748  15F3  0020               	movlb	0	; select bank0
 14749  15F4  0842               	movf	?___fldiv+2,w
 14750  15F5  0021               	movlb	1	; select bank1
 14751  15F6  00AA               	movwf	(___fltol@f1+2)^(0+128)
 14752  15F7  0020               	movlb	0	; select bank0
 14753  15F8  0841               	movf	?___fldiv+1,w
 14754  15F9  0021               	movlb	1	; select bank1
 14755  15FA  00A9               	movwf	(___fltol@f1+1)^(0+128)
 14756  15FB  0020               	movlb	0	; select bank0
 14757  15FC  0840               	movf	?___fldiv,w
 14758  15FD  0021               	movlb	1	; select bank1
 14759  15FE  00A8               	movwf	___fltol@f1^(0+128)
 14760  15FF  31B6  262A  3195   	fcall	___fltol
 14761  1602  0021               	movlb	1	; select bank1
 14762  1603  082B               	movf	(?___fltol+3)^(0+128),w
 14763  1604  00EE               	movwf	(updateTemperatures@rts+3)^(0+128)
 14764  1605  082A               	movf	(?___fltol+2)^(0+128),w
 14765  1606  00ED               	movwf	(updateTemperatures@rts+2)^(0+128)
 14766  1607  0829               	movf	(?___fltol+1)^(0+128),w
 14767  1608  00EC               	movwf	(updateTemperatures@rts+1)^(0+128)
 14768  1609  0828               	movf	?___fltol^(0+128),w
 14769  160A  00EB               	movwf	updateTemperatures@rts^(0+128)
 14770                           
 14771                           ;BQ76920.c: 277:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14772  160B  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14773  160C  00F4               	movwf	___xxtofl@val+3
 14774  160D  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14775  160E  00F3               	movwf	___xxtofl@val+2
 14776  160F  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14777  1610  00F2               	movwf	___xxtofl@val+1
 14778  1611  086B               	movf	updateTemperatures@rts^(0+128),w
 14779  1612  00F1               	movwf	___xxtofl@val
 14780  1613  3000               	movlw	0
 14781  1614  31A9  216C  3195   	fcall	___xxtofl
 14782  1617  0874               	movf	?___xxtofl+3,w
 14783  1618  0021               	movlb	1	; select bank1
 14784  1619  00BA               	movwf	(_updateTemperatures$2092+3)^(0+128)
 14785  161A  0873               	movf	?___xxtofl+2,w
 14786  161B  00B9               	movwf	(_updateTemperatures$2092+2)^(0+128)
 14787  161C  0872               	movf	?___xxtofl+1,w
 14788  161D  00B8               	movwf	(_updateTemperatures$2092+1)^(0+128)
 14789  161E  0871               	movf	?___xxtofl,w
 14790  161F  00B7               	movwf	_updateTemperatures$2092^(0+128)
 14791                           
 14792                           ;BQ76920.c: 277:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14793  1620  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14794  1621  00F4               	movwf	___xxtofl@val+3
 14795  1622  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14796  1623  00F3               	movwf	___xxtofl@val+2
 14797  1624  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14798  1625  00F2               	movwf	___xxtofl@val+1
 14799  1626  086B               	movf	updateTemperatures@rts^(0+128),w
 14800  1627  00F1               	movwf	___xxtofl@val
 14801  1628  3000               	movlw	0
 14802  1629  31A9  216C  3195   	fcall	___xxtofl
 14803  162C  0874               	movf	?___xxtofl+3,w
 14804  162D  0021               	movlb	1	; select bank1
 14805  162E  00BE               	movwf	(_updateTemperatures$2093+3)^(0+128)
 14806  162F  0873               	movf	?___xxtofl+2,w
 14807  1630  00BD               	movwf	(_updateTemperatures$2093+2)^(0+128)
 14808  1631  0872               	movf	?___xxtofl+1,w
 14809  1632  00BC               	movwf	(_updateTemperatures$2093+1)^(0+128)
 14810  1633  0871               	movf	?___xxtofl,w
 14811  1634  00BB               	movwf	_updateTemperatures$2093^(0+128)
 14812                           
 14813                           ;BQ76920.c: 277:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14814  1635  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14815  1636  00F4               	movwf	___xxtofl@val+3
 14816  1637  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14817  1638  00F3               	movwf	___xxtofl@val+2
 14818  1639  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14819  163A  00F2               	movwf	___xxtofl@val+1
 14820  163B  086B               	movf	updateTemperatures@rts^(0+128),w
 14821  163C  00F1               	movwf	___xxtofl@val
 14822  163D  3000               	movlw	0
 14823  163E  31A9  216C  3195   	fcall	___xxtofl
 14824  1641  0874               	movf	?___xxtofl+3,w
 14825  1642  0021               	movlb	1	; select bank1
 14826  1643  00C2               	movwf	(_updateTemperatures$2094+3)^(0+128)
 14827  1644  0873               	movf	?___xxtofl+2,w
 14828  1645  00C1               	movwf	(_updateTemperatures$2094+2)^(0+128)
 14829  1646  0872               	movf	?___xxtofl+1,w
 14830  1647  00C0               	movwf	(_updateTemperatures$2094+1)^(0+128)
 14831  1648  0871               	movf	?___xxtofl,w
 14832  1649  00BF               	movwf	_updateTemperatures$2094^(0+128)
 14833                           
 14834                           ;BQ76920.c: 277:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14835  164A  083E               	movf	(_updateTemperatures$2093+3)^(0+128),w
 14836  164B  00AB               	movwf	(logf@x+3)^(0+128)
 14837  164C  083D               	movf	(_updateTemperatures$2093+2)^(0+128),w
 14838  164D  00AA               	movwf	(logf@x+2)^(0+128)
 14839  164E  083C               	movf	(_updateTemperatures$2093+1)^(0+128),w
 14840  164F  00A9               	movwf	(logf@x+1)^(0+128)
 14841  1650  083B               	movf	_updateTemperatures$2093^(0+128),w
 14842  1651  00A8               	movwf	logf@x^(0+128)
 14843  1652  3180  2074  3195   	fcall	_logf
 14844  1655  0021               	movlb	1	; select bank1
 14845  1656  082B               	movf	(?_logf+3)^(0+128),w
 14846  1657  00C6               	movwf	(_updateTemperatures$2095+3)^(0+128)
 14847  1658  082A               	movf	(?_logf+2)^(0+128),w
 14848  1659  00C5               	movwf	(_updateTemperatures$2095+2)^(0+128)
 14849  165A  0829               	movf	(?_logf+1)^(0+128),w
 14850  165B  00C4               	movwf	(_updateTemperatures$2095+1)^(0+128)
 14851  165C  0828               	movf	?_logf^(0+128),w
 14852  165D  00C3               	movwf	_updateTemperatures$2095^(0+128)
 14853                           
 14854                           ;BQ76920.c: 277:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14855  165E  0842               	movf	(_updateTemperatures$2094+3)^(0+128),w
 14856  165F  00AB               	movwf	(logf@x+3)^(0+128)
 14857  1660  0841               	movf	(_updateTemperatures$2094+2)^(0+128),w
 14858  1661  00AA               	movwf	(logf@x+2)^(0+128)
 14859  1662  0840               	movf	(_updateTemperatures$2094+1)^(0+128),w
 14860  1663  00A9               	movwf	(logf@x+1)^(0+128)
 14861  1664  083F               	movf	_updateTemperatures$2094^(0+128),w
 14862  1665  00A8               	movwf	logf@x^(0+128)
 14863  1666  3180  2074  3195   	fcall	_logf
 14864  1669  0021               	movlb	1	; select bank1
 14865  166A  082B               	movf	(?_logf+3)^(0+128),w
 14866  166B  00CA               	movwf	(_updateTemperatures$2096+3)^(0+128)
 14867  166C  082A               	movf	(?_logf+2)^(0+128),w
 14868  166D  00C9               	movwf	(_updateTemperatures$2096+2)^(0+128)
 14869  166E  0829               	movf	(?_logf+1)^(0+128),w
 14870  166F  00C8               	movwf	(_updateTemperatures$2096+1)^(0+128)
 14871  1670  0828               	movf	?_logf^(0+128),w
 14872  1671  00C7               	movwf	_updateTemperatures$2096^(0+128)
 14873                           
 14874                           ;BQ76920.c: 277:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14875  1672  083A               	movf	(_updateTemperatures$2092+3)^(0+128),w
 14876  1673  00AB               	movwf	(logf@x+3)^(0+128)
 14877  1674  0839               	movf	(_updateTemperatures$2092+2)^(0+128),w
 14878  1675  00AA               	movwf	(logf@x+2)^(0+128)
 14879  1676  0838               	movf	(_updateTemperatures$2092+1)^(0+128),w
 14880  1677  00A9               	movwf	(logf@x+1)^(0+128)
 14881  1678  0837               	movf	_updateTemperatures$2092^(0+128),w
 14882  1679  00A8               	movwf	logf@x^(0+128)
 14883  167A  3180  2074  3195   	fcall	_logf
 14884  167D  0021               	movlb	1	; select bank1
 14885  167E  082B               	movf	(?_logf+3)^(0+128),w
 14886  167F  00CE               	movwf	(_updateTemperatures$2097+3)^(0+128)
 14887  1680  082A               	movf	(?_logf+2)^(0+128),w
 14888  1681  00CD               	movwf	(_updateTemperatures$2097+2)^(0+128)
 14889  1682  0829               	movf	(?_logf+1)^(0+128),w
 14890  1683  00CC               	movwf	(_updateTemperatures$2097+1)^(0+128)
 14891  1684  0828               	movf	?_logf^(0+128),w
 14892  1685  00CB               	movwf	_updateTemperatures$2097^(0+128)
 14893                           
 14894                           ;BQ76920.c: 277:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14895  1686  0846               	movf	(_updateTemperatures$2095+3)^(0+128),w
 14896  1687  0020               	movlb	0	; select bank0
 14897  1688  00A9               	movwf	___flmul@b+3
 14898  1689  0021               	movlb	1	; select bank1
 14899  168A  0845               	movf	(_updateTemperatures$2095+2)^(0+128),w
 14900  168B  0020               	movlb	0	; select bank0
 14901  168C  00A8               	movwf	___flmul@b+2
 14902  168D  0021               	movlb	1	; select bank1
 14903  168E  0844               	movf	(_updateTemperatures$2095+1)^(0+128),w
 14904  168F  0020               	movlb	0	; select bank0
 14905  1690  00A7               	movwf	___flmul@b+1
 14906  1691  0021               	movlb	1	; select bank1
 14907  1692  0843               	movf	_updateTemperatures$2095^(0+128),w
 14908  1693  0020               	movlb	0	; select bank0
 14909  1694  00A6               	movwf	___flmul@b
 14910  1695  0021               	movlb	1	; select bank1
 14911  1696  084A               	movf	(_updateTemperatures$2096+3)^(0+128),w
 14912  1697  0020               	movlb	0	; select bank0
 14913  1698  00AD               	movwf	___flmul@a+3
 14914  1699  0021               	movlb	1	; select bank1
 14915  169A  0849               	movf	(_updateTemperatures$2096+2)^(0+128),w
 14916  169B  0020               	movlb	0	; select bank0
 14917  169C  00AC               	movwf	___flmul@a+2
 14918  169D  0021               	movlb	1	; select bank1
 14919  169E  0848               	movf	(_updateTemperatures$2096+1)^(0+128),w
 14920  169F  0020               	movlb	0	; select bank0
 14921  16A0  00AB               	movwf	___flmul@a+1
 14922  16A1  0021               	movlb	1	; select bank1
 14923  16A2  0847               	movf	_updateTemperatures$2096^(0+128),w
 14924  16A3  0020               	movlb	0	; select bank0
 14925  16A4  00AA               	movwf	___flmul@a
 14926  16A5  3190  2023  3195   	fcall	___flmul
 14927  16A8  0020               	movlb	0	; select bank0
 14928  16A9  0829               	movf	?___flmul+3,w
 14929  16AA  0021               	movlb	1	; select bank1
 14930  16AB  00D2               	movwf	(_updateTemperatures$2098+3)^(0+128)
 14931  16AC  0020               	movlb	0	; select bank0
 14932  16AD  0828               	movf	?___flmul+2,w
 14933  16AE  0021               	movlb	1	; select bank1
 14934  16AF  00D1               	movwf	(_updateTemperatures$2098+2)^(0+128)
 14935  16B0  0020               	movlb	0	; select bank0
 14936  16B1  0827               	movf	?___flmul+1,w
 14937  16B2  0021               	movlb	1	; select bank1
 14938  16B3  00D0               	movwf	(_updateTemperatures$2098+1)^(0+128)
 14939  16B4  0020               	movlb	0	; select bank0
 14940  16B5  0826               	movf	?___flmul,w
 14941  16B6  0021               	movlb	1	; select bank1
 14942  16B7  00CF               	movwf	_updateTemperatures$2098^(0+128)
 14943                           
 14944                           ;BQ76920.c: 277:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14945  16B8  084E               	movf	(_updateTemperatures$2097+3)^(0+128),w
 14946  16B9  0020               	movlb	0	; select bank0
 14947  16BA  00A9               	movwf	___flmul@b+3
 14948  16BB  0021               	movlb	1	; select bank1
 14949  16BC  084D               	movf	(_updateTemperatures$2097+2)^(0+128),w
 14950  16BD  0020               	movlb	0	; select bank0
 14951  16BE  00A8               	movwf	___flmul@b+2
 14952  16BF  0021               	movlb	1	; select bank1
 14953  16C0  084C               	movf	(_updateTemperatures$2097+1)^(0+128),w
 14954  16C1  0020               	movlb	0	; select bank0
 14955  16C2  00A7               	movwf	___flmul@b+1
 14956  16C3  0021               	movlb	1	; select bank1
 14957  16C4  084B               	movf	_updateTemperatures$2097^(0+128),w
 14958  16C5  0020               	movlb	0	; select bank0
 14959  16C6  00A6               	movwf	___flmul@b
 14960  16C7  0021               	movlb	1	; select bank1
 14961  16C8  0852               	movf	(_updateTemperatures$2098+3)^(0+128),w
 14962  16C9  0020               	movlb	0	; select bank0
 14963  16CA  00AD               	movwf	___flmul@a+3
 14964  16CB  0021               	movlb	1	; select bank1
 14965  16CC  0851               	movf	(_updateTemperatures$2098+2)^(0+128),w
 14966  16CD  0020               	movlb	0	; select bank0
 14967  16CE  00AC               	movwf	___flmul@a+2
 14968  16CF  0021               	movlb	1	; select bank1
 14969  16D0  0850               	movf	(_updateTemperatures$2098+1)^(0+128),w
 14970  16D1  0020               	movlb	0	; select bank0
 14971  16D2  00AB               	movwf	___flmul@a+1
 14972  16D3  0021               	movlb	1	; select bank1
 14973  16D4  084F               	movf	_updateTemperatures$2098^(0+128),w
 14974  16D5  0020               	movlb	0	; select bank0
 14975  16D6  00AA               	movwf	___flmul@a
 14976  16D7  3190  2023  3195   	fcall	___flmul
 14977  16DA  0020               	movlb	0	; select bank0
 14978  16DB  0829               	movf	?___flmul+3,w
 14979  16DC  0021               	movlb	1	; select bank1
 14980  16DD  00D6               	movwf	(_updateTemperatures$2099+3)^(0+128)
 14981  16DE  0020               	movlb	0	; select bank0
 14982  16DF  0828               	movf	?___flmul+2,w
 14983  16E0  0021               	movlb	1	; select bank1
 14984  16E1  00D5               	movwf	(_updateTemperatures$2099+2)^(0+128)
 14985  16E2  0020               	movlb	0	; select bank0
 14986  16E3  0827               	movf	?___flmul+1,w
 14987  16E4  0021               	movlb	1	; select bank1
 14988  16E5  00D4               	movwf	(_updateTemperatures$2099+1)^(0+128)
 14989  16E6  0020               	movlb	0	; select bank0
 14990  16E7  0826               	movf	?___flmul,w
 14991  16E8  0021               	movlb	1	; select bank1
 14992  16E9  00D3               	movwf	_updateTemperatures$2099^(0+128)
 14993                           
 14994                           ;BQ76920.c: 277:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14995  16EA  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14996  16EB  00F4               	movwf	___xxtofl@val+3
 14997  16EC  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14998  16ED  00F3               	movwf	___xxtofl@val+2
 14999  16EE  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 15000  16EF  00F2               	movwf	___xxtofl@val+1
 15001  16F0  086B               	movf	updateTemperatures@rts^(0+128),w
 15002  16F1  00F1               	movwf	___xxtofl@val
 15003  16F2  3000               	movlw	0
 15004  16F3  31A9  216C  3195   	fcall	___xxtofl
 15005  16F6  0874               	movf	?___xxtofl+3,w
 15006  16F7  0021               	movlb	1	; select bank1
 15007  16F8  00DA               	movwf	(_updateTemperatures$2100+3)^(0+128)
 15008  16F9  0873               	movf	?___xxtofl+2,w
 15009  16FA  00D9               	movwf	(_updateTemperatures$2100+2)^(0+128)
 15010  16FB  0872               	movf	?___xxtofl+1,w
 15011  16FC  00D8               	movwf	(_updateTemperatures$2100+1)^(0+128)
 15012  16FD  0871               	movf	?___xxtofl,w
 15013  16FE  00D7               	movwf	_updateTemperatures$2100^(0+128)
 15014                           
 15015                           ;BQ76920.c: 277:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 15016  16FF  085A               	movf	(_updateTemperatures$2100+3)^(0+128),w
 15017  1700  00AB               	movwf	(logf@x+3)^(0+128)
 15018  1701  0859               	movf	(_updateTemperatures$2100+2)^(0+128),w
 15019  1702  00AA               	movwf	(logf@x+2)^(0+128)
 15020  1703  0858               	movf	(_updateTemperatures$2100+1)^(0+128),w
 15021  1704  00A9               	movwf	(logf@x+1)^(0+128)
 15022  1705  0857               	movf	_updateTemperatures$2100^(0+128),w
 15023  1706  00A8               	movwf	logf@x^(0+128)
 15024  1707  3180  2074  3195   	fcall	_logf
 15025  170A  0021               	movlb	1	; select bank1
 15026  170B  082B               	movf	(?_logf+3)^(0+128),w
 15027  170C  00DE               	movwf	(_updateTemperatures$2101+3)^(0+128)
 15028  170D  082A               	movf	(?_logf+2)^(0+128),w
 15029  170E  00DD               	movwf	(_updateTemperatures$2101+2)^(0+128)
 15030  170F  0829               	movf	(?_logf+1)^(0+128),w
 15031  1710  00DC               	movwf	(_updateTemperatures$2101+1)^(0+128)
 15032  1711  0828               	movf	?_logf^(0+128),w
 15033  1712  00DB               	movwf	_updateTemperatures$2101^(0+128)
 15034                           
 15035                           ;BQ76920.c: 277:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 15036  1713  30BC               	movlw	188
 15037  1714  0020               	movlb	0	; select bank0
 15038  1715  00DD               	movwf	___fladd@b+3
 15039  1716  308E               	movlw	142
 15040  1717  00DC               	movwf	___fladd@b+2
 15041  1718  30C5               	movlw	197
 15042  1719  00DB               	movwf	___fladd@b+1
 15043  171A  3072               	movlw	114
 15044  171B  00DA               	movwf	___fladd@b
 15045  171C  303B               	movlw	59
 15046  171D  00A9               	movwf	___flmul@b+3
 15047  171E  304D               	movlw	77
 15048  171F  00A8               	movwf	___flmul@b+2
 15049  1720  3098               	movlw	152
 15050  1721  00A7               	movwf	___flmul@b+1
 15051  1722  3025               	movlw	37
 15052  1723  00A6               	movwf	___flmul@b
 15053  1724  0021               	movlb	1	; select bank1
 15054  1725  085E               	movf	(_updateTemperatures$2101+3)^(0+128),w
 15055  1726  0020               	movlb	0	; select bank0
 15056  1727  00AD               	movwf	___flmul@a+3
 15057  1728  0021               	movlb	1	; select bank1
 15058  1729  085D               	movf	(_updateTemperatures$2101+2)^(0+128),w
 15059  172A  0020               	movlb	0	; select bank0
 15060  172B  00AC               	movwf	___flmul@a+2
 15061  172C  0021               	movlb	1	; select bank1
 15062  172D  085C               	movf	(_updateTemperatures$2101+1)^(0+128),w
 15063  172E  0020               	movlb	0	; select bank0
 15064  172F  00AB               	movwf	___flmul@a+1
 15065  1730  0021               	movlb	1	; select bank1
 15066  1731  085B               	movf	_updateTemperatures$2101^(0+128),w
 15067  1732  0020               	movlb	0	; select bank0
 15068  1733  00AA               	movwf	___flmul@a
 15069  1734  3190  2023  3195   	fcall	___flmul
 15070  1737  0020               	movlb	0	; select bank0
 15071  1738  0829               	movf	?___flmul+3,w
 15072  1739  00E1               	movwf	___fladd@a+3
 15073  173A  0828               	movf	?___flmul+2,w
 15074  173B  00E0               	movwf	___fladd@a+2
 15075  173C  0827               	movf	?___flmul+1,w
 15076  173D  00DF               	movwf	___fladd@a+1
 15077  173E  0826               	movf	?___flmul,w
 15078  173F  00DE               	movwf	___fladd@a
 15079  1740  319E  261E  3195   	fcall	___fladd
 15080  1743  0020               	movlb	0	; select bank0
 15081  1744  085D               	movf	?___fladd+3,w
 15082  1745  0021               	movlb	1	; select bank1
 15083  1746  00E2               	movwf	(_updateTemperatures$2102+3)^(0+128)
 15084  1747  0020               	movlb	0	; select bank0
 15085  1748  085C               	movf	?___fladd+2,w
 15086  1749  0021               	movlb	1	; select bank1
 15087  174A  00E1               	movwf	(_updateTemperatures$2102+2)^(0+128)
 15088  174B  0020               	movlb	0	; select bank0
 15089  174C  085B               	movf	?___fladd+1,w
 15090  174D  0021               	movlb	1	; select bank1
 15091  174E  00E0               	movwf	(_updateTemperatures$2102+1)^(0+128)
 15092  174F  0020               	movlb	0	; select bank0
 15093  1750  085A               	movf	?___fladd,w
 15094  1751  0021               	movlb	1	; select bank1
 15095  1752  00DF               	movwf	_updateTemperatures$2102^(0+128)
 15096                           
 15097                           ;BQ76920.c: 277:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 15098  1753  30B7               	movlw	183
 15099  1754  0020               	movlb	0	; select bank0
 15100  1755  00A9               	movwf	___flmul@b+3
 15101  1756  302E               	movlw	46
 15102  1757  00A8               	movwf	___flmul@b+2
 15103  1758  302F               	movlw	47
 15104  1759  00A7               	movwf	___flmul@b+1
 15105  175A  3045               	movlw	69
 15106  175B  00A6               	movwf	___flmul@b
 15107  175C  0021               	movlb	1	; select bank1
 15108  175D  0856               	movf	(_updateTemperatures$2099+3)^(0+128),w
 15109  175E  0020               	movlb	0	; select bank0
 15110  175F  00AD               	movwf	___flmul@a+3
 15111  1760  0021               	movlb	1	; select bank1
 15112  1761  0855               	movf	(_updateTemperatures$2099+2)^(0+128),w
 15113  1762  0020               	movlb	0	; select bank0
 15114  1763  00AC               	movwf	___flmul@a+2
 15115  1764  0021               	movlb	1	; select bank1
 15116  1765  0854               	movf	(_updateTemperatures$2099+1)^(0+128),w
 15117  1766  0020               	movlb	0	; select bank0
 15118  1767  00AB               	movwf	___flmul@a+1
 15119  1768  0021               	movlb	1	; select bank1
 15120  1769  0853               	movf	_updateTemperatures$2099^(0+128),w
 15121  176A  0020               	movlb	0	; select bank0
 15122  176B  00AA               	movwf	___flmul@a
 15123  176C  3190  2023  3195   	fcall	___flmul
 15124  176F  0020               	movlb	0	; select bank0
 15125  1770  0829               	movf	?___flmul+3,w
 15126  1771  00DD               	movwf	___fladd@b+3
 15127  1772  0828               	movf	?___flmul+2,w
 15128  1773  00DC               	movwf	___fladd@b+2
 15129  1774  0827               	movf	?___flmul+1,w
 15130  1775  00DB               	movwf	___fladd@b+1
 15131  1776  0826               	movf	?___flmul,w
 15132  1777  00DA               	movwf	___fladd@b
 15133  1778  0021               	movlb	1	; select bank1
 15134  1779  0862               	movf	(_updateTemperatures$2102+3)^(0+128),w
 15135  177A  0020               	movlb	0	; select bank0
 15136  177B  00E1               	movwf	___fladd@a+3
 15137  177C  0021               	movlb	1	; select bank1
 15138  177D  0861               	movf	(_updateTemperatures$2102+2)^(0+128),w
 15139  177E  0020               	movlb	0	; select bank0
 15140  177F  00E0               	movwf	___fladd@a+2
 15141  1780  0021               	movlb	1	; select bank1
 15142  1781  0860               	movf	(_updateTemperatures$2102+1)^(0+128),w
 15143  1782  0020               	movlb	0	; select bank0
 15144  1783  00DF               	movwf	___fladd@a+1
 15145  1784  0021               	movlb	1	; select bank1
 15146  1785  085F               	movf	_updateTemperatures$2102^(0+128),w
 15147  1786  0020               	movlb	0	; select bank0
 15148  1787  00DE               	movwf	___fladd@a
 15149  1788  319E  261E  3195   	fcall	___fladd
 15150  178B  0020               	movlb	0	; select bank0
 15151  178C  085D               	movf	?___fladd+3,w
 15152  178D  00C3               	movwf	___fldiv@a+3
 15153  178E  085C               	movf	?___fladd+2,w
 15154  178F  00C2               	movwf	___fldiv@a+2
 15155  1790  085B               	movf	?___fladd+1,w
 15156  1791  00C1               	movwf	___fldiv@a+1
 15157  1792  085A               	movf	?___fladd,w
 15158  1793  00C0               	movwf	___fldiv@a
 15159  1794  303F               	movlw	63
 15160  1795  00C7               	movwf	___fldiv@b+3
 15161  1796  3080               	movlw	128
 15162  1797  00C6               	movwf	___fldiv@b+2
 15163  1798  3000               	movlw	0
 15164  1799  00C5               	movwf	___fldiv@b+1
 15165  179A  3000               	movlw	0
 15166  179B  00C4               	movwf	___fldiv@b
 15167  179C  319B  2300  3195   	fcall	___fldiv
 15168  179F  0020               	movlb	0	; select bank0
 15169  17A0  0843               	movf	?___fldiv+3,w
 15170  17A1  0021               	movlb	1	; select bank1
 15171  17A2  00E6               	movwf	(updateTemperatures@tmp+3)^(0+128)
 15172  17A3  0020               	movlb	0	; select bank0
 15173  17A4  0842               	movf	?___fldiv+2,w
 15174  17A5  0021               	movlb	1	; select bank1
 15175  17A6  00E5               	movwf	(updateTemperatures@tmp+2)^(0+128)
 15176  17A7  0020               	movlb	0	; select bank0
 15177  17A8  0841               	movf	?___fldiv+1,w
 15178  17A9  0021               	movlb	1	; select bank1
 15179  17AA  00E4               	movwf	(updateTemperatures@tmp+1)^(0+128)
 15180  17AB  0020               	movlb	0	; select bank0
 15181  17AC  0840               	movf	?___fldiv,w
 15182  17AD  0021               	movlb	1	; select bank1
 15183  17AE  00E3               	movwf	updateTemperatures@tmp^(0+128)
 15184                           
 15185                           ;BQ76920.c: 279:      temperatureThermistor = (tmp - 273.15)*100;
 15186  17AF  0866               	movf	(updateTemperatures@tmp+3)^(0+128),w
 15187  17B0  0020               	movlb	0	; select bank0
 15188  17B1  00E1               	movwf	___fladd@a+3
 15189  17B2  0021               	movlb	1	; select bank1
 15190  17B3  0865               	movf	(updateTemperatures@tmp+2)^(0+128),w
 15191  17B4  0020               	movlb	0	; select bank0
 15192  17B5  00E0               	movwf	___fladd@a+2
 15193  17B6  0021               	movlb	1	; select bank1
 15194  17B7  0864               	movf	(updateTemperatures@tmp+1)^(0+128),w
 15195  17B8  0020               	movlb	0	; select bank0
 15196  17B9  00DF               	movwf	___fladd@a+1
 15197  17BA  0021               	movlb	1	; select bank1
 15198  17BB  0863               	movf	updateTemperatures@tmp^(0+128),w
 15199  17BC  0020               	movlb	0	; select bank0
 15200  17BD  00DE               	movwf	___fladd@a
 15201  17BE  30C3               	movlw	195
 15202  17BF  00DD               	movwf	___fladd@b+3
 15203  17C0  3088               	movlw	136
 15204  17C1  00DC               	movwf	___fladd@b+2
 15205  17C2  3093               	movlw	147
 15206  17C3  00DB               	movwf	___fladd@b+1
 15207  17C4  3033               	movlw	51
 15208  17C5  00DA               	movwf	___fladd@b
 15209  17C6  319E  261E  3195   	fcall	___fladd
 15210  17C9  0020               	movlb	0	; select bank0
 15211  17CA  085D               	movf	?___fladd+3,w
 15212  17CB  00AD               	movwf	___flmul@a+3
 15213  17CC  085C               	movf	?___fladd+2,w
 15214  17CD  00AC               	movwf	___flmul@a+2
 15215  17CE  085B               	movf	?___fladd+1,w
 15216  17CF  00AB               	movwf	___flmul@a+1
 15217  17D0  085A               	movf	?___fladd,w
 15218  17D1  00AA               	movwf	___flmul@a
 15219  17D2  3042               	movlw	66
 15220  17D3  00A9               	movwf	___flmul@b+3
 15221  17D4  30C8               	movlw	200
 15222  17D5  00A8               	movwf	___flmul@b+2
 15223  17D6  3000               	movlw	0
 15224  17D7  00A7               	movwf	___flmul@b+1
 15225  17D8  3000               	movlw	0
 15226  17D9  00A6               	movwf	___flmul@b
 15227  17DA  3190  2023  3195   	fcall	___flmul
 15228  17DD  0020               	movlb	0	; select bank0
 15229  17DE  0829               	movf	?___flmul+3,w
 15230  17DF  0021               	movlb	1	; select bank1
 15231  17E0  00AB               	movwf	(___fltol@f1+3)^(0+128)
 15232  17E1  0020               	movlb	0	; select bank0
 15233  17E2  0828               	movf	?___flmul+2,w
 15234  17E3  0021               	movlb	1	; select bank1
 15235  17E4  00AA               	movwf	(___fltol@f1+2)^(0+128)
 15236  17E5  0020               	movlb	0	; select bank0
 15237  17E6  0827               	movf	?___flmul+1,w
 15238  17E7  0021               	movlb	1	; select bank1
 15239  17E8  00A9               	movwf	(___fltol@f1+1)^(0+128)
 15240  17E9  0020               	movlb	0	; select bank0
 15241  17EA  0826               	movf	?___flmul,w
 15242  17EB  0021               	movlb	1	; select bank1
 15243  17EC  00A8               	movwf	___fltol@f1^(0+128)
 15244  17ED  31B6  262A         	fcall	___fltol
 15245  17EF  0021               	movlb	1	; select bank1
 15246  17F0  082B               	movf	(?___fltol+3)^(0+128),w
 15247  17F1  0023               	movlb	3	; select bank3
 15248  17F2  00C9               	movwf	(_temperatureThermistor+3)^(0+384)
 15249  17F3  0021               	movlb	1	; select bank1
 15250  17F4  082A               	movf	(?___fltol+2)^(0+128),w
 15251  17F5  0023               	movlb	3	; select bank3
 15252  17F6  00C8               	movwf	(_temperatureThermistor+2)^(0+384)
 15253  17F7  0021               	movlb	1	; select bank1
 15254  17F8  0829               	movf	(?___fltol+1)^(0+128),w
 15255  17F9  0023               	movlb	3	; select bank3
 15256  17FA  00C7               	movwf	(_temperatureThermistor+1)^(0+384)
 15257  17FB  0021               	movlb	1	; select bank1
 15258  17FC  0828               	movf	?___fltol^(0+128),w
 15259  17FD  0023               	movlb	3	; select bank3
 15260  17FE  00C6               	movwf	_temperatureThermistor^(0+384)
 15261  17FF  0008               	return
 15262  1800                     __end_of_updateTemperatures:	
 15263                           
 15264                           	psect	text50
 15265  0074                     __ptext50:	
 15266 ;; *************** function _logf *****************
 15267 ;; Defined at:
 15268 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\logf.c"
 15269 ;; Parameters:    Size  Location     Type
 15270 ;;  x               4    8[BANK1 ] float 
 15271 ;; Auto vars:     Size  Location     Type
 15272 ;;  ix              4   62[BANK2 ] unsigned long 
 15273 ;;  f               4   58[BANK2 ] float 
 15274 ;;  u               4   54[BANK2 ] struct .
 15275 ;;  w               4   46[BANK2 ] float 
 15276 ;;  z               4   42[BANK2 ] float 
 15277 ;;  s               4   38[BANK2 ] float 
 15278 ;;  dk              4   34[BANK2 ] float 
 15279 ;;  hfsq            4   30[BANK2 ] float 
 15280 ;;  t2              4    8[BANK2 ] float 
 15281 ;;  t1              4    4[BANK2 ] float 
 15282 ;;  R               4    0[BANK2 ] float 
 15283 ;;  k               2   28[BANK2 ] int 
 15284 ;; Return value:  Size  Location     Type
 15285 ;;                  4    8[BANK1 ] float 
 15286 ;; Registers used:
 15287 ;;		wreg, status,2, status,0, pclath, cstack
 15288 ;; Tracked objects:
 15289 ;;		On entry : 0/0
 15290 ;;		On exit  : 0/0
 15291 ;;		Unchanged: 0/0
 15292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15293 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15294 ;;      Locals:         0       0       0      66       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15295 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15296 ;;      Totals:         0       0      12      66       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15297 ;;Total ram usage:       78 bytes
 15298 ;; Hardware stack levels used:    1
 15299 ;; Hardware stack levels required when called:    3
 15300 ;; This function calls:
 15301 ;;		___fladd
 15302 ;;		___fldiv
 15303 ;;		___flmul
 15304 ;;		___flsub
 15305 ;;		___xxtofl
 15306 ;; This function is called by:
 15307 ;;		_updateTemperatures
 15308 ;; This function uses a non-reentrant model
 15309 ;;
 15310                           
 15311                           
 15312                           ;psect for function _logf
 15313  0074                     _logf:	
 15314                           
 15315                           ;incstack = 0
 15316                           ; Regs used in _logf: [wreg+status,2+status,0+pclath+cstack]
 15317  0074  0023               	movlb	3	; select bank3
 15318  0075  0841               	movf	(logf@F469+3)^(0+384),w
 15319  0076  0022               	movlb	2	; select bank2
 15320  0077  00D9               	movwf	(logf@u+3)^(0+256)
 15321  0078  0023               	movlb	3	; select bank3
 15322  0079  0840               	movf	(logf@F469+2)^(0+384),w
 15323  007A  0022               	movlb	2	; select bank2
 15324  007B  00D8               	movwf	(logf@u+2)^(0+256)
 15325  007C  0023               	movlb	3	; select bank3
 15326  007D  083F               	movf	(logf@F469+1)^(0+384),w
 15327  007E  0022               	movlb	2	; select bank2
 15328  007F  00D7               	movwf	(logf@u+1)^(0+256)
 15329  0080  0023               	movlb	3	; select bank3
 15330  0081  083E               	movf	logf@F469^(0+384),w
 15331  0082  0022               	movlb	2	; select bank2
 15332  0083  00D6               	movwf	logf@u^(0+256)
 15333  0084  0021               	movlb	1	; select bank1
 15334  0085  082B               	movf	(logf@x+3)^(0+128),w
 15335  0086  0022               	movlb	2	; select bank2
 15336  0087  00D9               	movwf	(logf@u+3)^(0+256)
 15337  0088  0021               	movlb	1	; select bank1
 15338  0089  082A               	movf	(logf@x+2)^(0+128),w
 15339  008A  0022               	movlb	2	; select bank2
 15340  008B  00D8               	movwf	(logf@u+2)^(0+256)
 15341  008C  0021               	movlb	1	; select bank1
 15342  008D  0829               	movf	(logf@x+1)^(0+128),w
 15343  008E  0022               	movlb	2	; select bank2
 15344  008F  00D7               	movwf	(logf@u+1)^(0+256)
 15345  0090  0021               	movlb	1	; select bank1
 15346  0091  0828               	movf	logf@x^(0+128),w
 15347  0092  0022               	movlb	2	; select bank2
 15348  0093  00D6               	movwf	logf@u^(0+256)
 15349  0094  0859               	movf	(logf@u+3)^(0+256),w
 15350  0095  00E1               	movwf	(logf@ix+3)^(0+256)
 15351  0096  0858               	movf	(logf@u+2)^(0+256),w
 15352  0097  00E0               	movwf	(logf@ix+2)^(0+256)
 15353  0098  0857               	movf	(logf@u+1)^(0+256),w
 15354  0099  00DF               	movwf	(logf@ix+1)^(0+256)
 15355  009A  0856               	movf	logf@u^(0+256),w
 15356  009B  00DE               	movwf	logf@ix^(0+256)
 15357  009C  01BC               	clrf	logf@k^(0+256)
 15358  009D  01BD               	clrf	(logf@k+1)^(0+256)
 15359  009E  0861               	movf	(logf@ix+3)^(0+256),w
 15360  009F  1D03               	btfss	3,2
 15361  00A0  28A5               	goto	l5583
 15362  00A1  3080               	movlw	128
 15363  00A2  0260               	subwf	(logf@ix+2)^(0+256),w
 15364  00A3  1C03               	btfss	3,0
 15365  00A4  28C1               	goto	l5585
 15366  00A5                     l5583:	
 15367  00A5  085E               	movf	logf@ix^(0+256),w
 15368  00A6  0021               	movlb	1	; select bank1
 15369  00A7  00AC               	movwf	??_logf^(0+128)
 15370  00A8  0022               	movlb	2	; select bank2
 15371  00A9  085F               	movf	(logf@ix+1)^(0+256),w
 15372  00AA  0021               	movlb	1	; select bank1
 15373  00AB  00AD               	movwf	(??_logf^(0+128)+1)
 15374  00AC  0022               	movlb	2	; select bank2
 15375  00AD  0860               	movf	(logf@ix+2)^(0+256),w
 15376  00AE  0021               	movlb	1	; select bank1
 15377  00AF  00AE               	movwf	(??_logf^(0+128)+2)
 15378  00B0  0022               	movlb	2	; select bank2
 15379  00B1  0861               	movf	(logf@ix+3)^(0+256),w
 15380  00B2  0021               	movlb	1	; select bank1
 15381  00B3  00AF               	movwf	(??_logf^(0+128)+3)
 15382  00B4  301F               	movlw	31
 15383  00B5                     u6925:	
 15384  00B5  36AF               	lsrf	(??_logf^(0+128)+3),f
 15385  00B6  0CAE               	rrf	(??_logf^(0+128)+2),f
 15386  00B7  0CAD               	rrf	(??_logf^(0+128)+1),f
 15387  00B8  0CAC               	rrf	??_logf^(0+128),f
 15388  00B9  0B89               	decfsz	9,f
 15389  00BA  28B5               	goto	u6925
 15390  00BB  082F               	movf	(??_logf+3)^(0+128),w
 15391  00BC  042E               	iorwf	(??_logf+2)^(0+128),w
 15392  00BD  042D               	iorwf	(??_logf+1)^(0+128),w
 15393  00BE  042C               	iorwf	??_logf^(0+128),w
 15394  00BF  1903               	skipnz
 15395  00C0  29CA               	goto	l5605
 15396  00C1                     l5585:	
 15397  00C1  0022               	movlb	2	; select bank2
 15398  00C2  085E               	movf	logf@ix^(0+256),w
 15399  00C3  0021               	movlb	1	; select bank1
 15400  00C4  00AC               	movwf	??_logf^(0+128)
 15401  00C5  0022               	movlb	2	; select bank2
 15402  00C6  085F               	movf	(logf@ix+1)^(0+256),w
 15403  00C7  0021               	movlb	1	; select bank1
 15404  00C8  00AD               	movwf	(??_logf^(0+128)+1)
 15405  00C9  0022               	movlb	2	; select bank2
 15406  00CA  0860               	movf	(logf@ix+2)^(0+256),w
 15407  00CB  0021               	movlb	1	; select bank1
 15408  00CC  00AE               	movwf	(??_logf^(0+128)+2)
 15409  00CD  0022               	movlb	2	; select bank2
 15410  00CE  0861               	movf	(logf@ix+3)^(0+256),w
 15411  00CF  0021               	movlb	1	; select bank1
 15412  00D0  00AF               	movwf	(??_logf^(0+128)+3)
 15413  00D1  3001               	movlw	1
 15414  00D2                     u6945:	
 15415  00D2  35AC               	lslf	??_logf^(0+128),f
 15416  00D3  0DAD               	rlf	(??_logf^(0+128)+1),f
 15417  00D4  0DAE               	rlf	(??_logf^(0+128)+2),f
 15418  00D5  0DAF               	rlf	(??_logf^(0+128)+3),f
 15419  00D6  0B89               	decfsz	9,f
 15420  00D7  28D2               	goto	u6945
 15421  00D8  082F               	movf	(??_logf+3)^(0+128),w
 15422  00D9  042E               	iorwf	(??_logf+2)^(0+128),w
 15423  00DA  042D               	iorwf	(??_logf+1)^(0+128),w
 15424  00DB  042C               	iorwf	??_logf^(0+128),w
 15425  00DC  1D03               	skipz
 15426  00DD  2924               	goto	l5591
 15427  00DE  082B               	movf	(logf@x+3)^(0+128),w
 15428  00DF  0020               	movlb	0	; select bank0
 15429  00E0  00A9               	movwf	___flmul@b+3
 15430  00E1  0021               	movlb	1	; select bank1
 15431  00E2  082A               	movf	(logf@x+2)^(0+128),w
 15432  00E3  0020               	movlb	0	; select bank0
 15433  00E4  00A8               	movwf	___flmul@b+2
 15434  00E5  0021               	movlb	1	; select bank1
 15435  00E6  0829               	movf	(logf@x+1)^(0+128),w
 15436  00E7  0020               	movlb	0	; select bank0
 15437  00E8  00A7               	movwf	___flmul@b+1
 15438  00E9  0021               	movlb	1	; select bank1
 15439  00EA  0828               	movf	logf@x^(0+128),w
 15440  00EB  0020               	movlb	0	; select bank0
 15441  00EC  00A6               	movwf	___flmul@b
 15442  00ED  0021               	movlb	1	; select bank1
 15443  00EE  082B               	movf	(logf@x+3)^(0+128),w
 15444  00EF  0020               	movlb	0	; select bank0
 15445  00F0  00AD               	movwf	___flmul@a+3
 15446  00F1  0021               	movlb	1	; select bank1
 15447  00F2  082A               	movf	(logf@x+2)^(0+128),w
 15448  00F3  0020               	movlb	0	; select bank0
 15449  00F4  00AC               	movwf	___flmul@a+2
 15450  00F5  0021               	movlb	1	; select bank1
 15451  00F6  0829               	movf	(logf@x+1)^(0+128),w
 15452  00F7  0020               	movlb	0	; select bank0
 15453  00F8  00AB               	movwf	___flmul@a+1
 15454  00F9  0021               	movlb	1	; select bank1
 15455  00FA  0828               	movf	logf@x^(0+128),w
 15456  00FB  0020               	movlb	0	; select bank0
 15457  00FC  00AA               	movwf	___flmul@a
 15458  00FD  3190  2023  3180   	fcall	___flmul
 15459  0100  0020               	movlb	0	; select bank0
 15460  0101  0829               	movf	?___flmul+3,w
 15461  0102  00C3               	movwf	___fldiv@a+3
 15462  0103  0828               	movf	?___flmul+2,w
 15463  0104  00C2               	movwf	___fldiv@a+2
 15464  0105  0827               	movf	?___flmul+1,w
 15465  0106  00C1               	movwf	___fldiv@a+1
 15466  0107  0826               	movf	?___flmul,w
 15467  0108  00C0               	movwf	___fldiv@a
 15468  0109  30BF               	movlw	191
 15469  010A  00C7               	movwf	___fldiv@b+3
 15470  010B  3080               	movlw	128
 15471  010C  00C6               	movwf	___fldiv@b+2
 15472  010D  3000               	movlw	0
 15473  010E  00C5               	movwf	___fldiv@b+1
 15474  010F  3000               	movlw	0
 15475  0110  00C4               	movwf	___fldiv@b
 15476  0111  319B  2300         	fcall	___fldiv
 15477  0113  0020               	movlb	0	; select bank0
 15478  0114  0843               	movf	?___fldiv+3,w
 15479  0115  0021               	movlb	1	; select bank1
 15480  0116  00AB               	movwf	(?_logf+3)^(0+128)
 15481  0117  0020               	movlb	0	; select bank0
 15482  0118  0842               	movf	?___fldiv+2,w
 15483  0119  0021               	movlb	1	; select bank1
 15484  011A  00AA               	movwf	(?_logf+2)^(0+128)
 15485  011B  0020               	movlb	0	; select bank0
 15486  011C  0841               	movf	?___fldiv+1,w
 15487  011D  0021               	movlb	1	; select bank1
 15488  011E  00A9               	movwf	(?_logf+1)^(0+128)
 15489  011F  0020               	movlb	0	; select bank0
 15490  0120  0840               	movf	?___fldiv,w
 15491  0121  0021               	movlb	1	; select bank1
 15492  0122  00A8               	movwf	?_logf^(0+128)
 15493  0123  0008               	return
 15494  0124                     l5591:	
 15495  0124  0022               	movlb	2	; select bank2
 15496  0125  085E               	movf	logf@ix^(0+256),w
 15497  0126  0021               	movlb	1	; select bank1
 15498  0127  00AC               	movwf	??_logf^(0+128)
 15499  0128  0022               	movlb	2	; select bank2
 15500  0129  085F               	movf	(logf@ix+1)^(0+256),w
 15501  012A  0021               	movlb	1	; select bank1
 15502  012B  00AD               	movwf	(??_logf^(0+128)+1)
 15503  012C  0022               	movlb	2	; select bank2
 15504  012D  0860               	movf	(logf@ix+2)^(0+256),w
 15505  012E  0021               	movlb	1	; select bank1
 15506  012F  00AE               	movwf	(??_logf^(0+128)+2)
 15507  0130  0022               	movlb	2	; select bank2
 15508  0131  0861               	movf	(logf@ix+3)^(0+256),w
 15509  0132  0021               	movlb	1	; select bank1
 15510  0133  00AF               	movwf	(??_logf^(0+128)+3)
 15511  0134  301F               	movlw	31
 15512  0135                     u6965:	
 15513  0135  36AF               	lsrf	(??_logf^(0+128)+3),f
 15514  0136  0CAE               	rrf	(??_logf^(0+128)+2),f
 15515  0137  0CAD               	rrf	(??_logf^(0+128)+1),f
 15516  0138  0CAC               	rrf	??_logf^(0+128),f
 15517  0139  0B89               	decfsz	9,f
 15518  013A  2935               	goto	u6965
 15519  013B  082F               	movf	(??_logf+3)^(0+128),w
 15520  013C  042E               	iorwf	(??_logf+2)^(0+128),w
 15521  013D  042D               	iorwf	(??_logf+1)^(0+128),w
 15522  013E  042C               	iorwf	??_logf^(0+128),w
 15523  013F  1903               	skipnz
 15524  0140  2981               	goto	l5597
 15525  0141  3000               	movlw	0
 15526  0142  0020               	movlb	0	; select bank0
 15527  0143  00C3               	movwf	___fldiv@a+3
 15528  0144  3000               	movlw	0
 15529  0145  00C2               	movwf	___fldiv@a+2
 15530  0146  3000               	movlw	0
 15531  0147  00C1               	movwf	___fldiv@a+1
 15532  0148  3000               	movlw	0
 15533  0149  00C0               	movwf	___fldiv@a
 15534  014A  0021               	movlb	1	; select bank1
 15535  014B  082B               	movf	(logf@x+3)^(0+128),w
 15536  014C  00A3               	movwf	(___flsub@a+3)^(0+128)
 15537  014D  082A               	movf	(logf@x+2)^(0+128),w
 15538  014E  00A2               	movwf	(___flsub@a+2)^(0+128)
 15539  014F  0829               	movf	(logf@x+1)^(0+128),w
 15540  0150  00A1               	movwf	(___flsub@a+1)^(0+128)
 15541  0151  0828               	movf	logf@x^(0+128),w
 15542  0152  00A0               	movwf	___flsub@a^(0+128)
 15543  0153  082B               	movf	(logf@x+3)^(0+128),w
 15544  0154  00A7               	movwf	(___flsub@b+3)^(0+128)
 15545  0155  082A               	movf	(logf@x+2)^(0+128),w
 15546  0156  00A6               	movwf	(___flsub@b+2)^(0+128)
 15547  0157  0829               	movf	(logf@x+1)^(0+128),w
 15548  0158  00A5               	movwf	(___flsub@b+1)^(0+128)
 15549  0159  0828               	movf	logf@x^(0+128),w
 15550  015A  00A4               	movwf	___flsub@b^(0+128)
 15551  015B  31B4  246A  3180   	fcall	___flsub
 15552  015E  0021               	movlb	1	; select bank1
 15553  015F  0823               	movf	(?___flsub+3)^(0+128),w
 15554  0160  0020               	movlb	0	; select bank0
 15555  0161  00C7               	movwf	___fldiv@b+3
 15556  0162  0021               	movlb	1	; select bank1
 15557  0163  0822               	movf	(?___flsub+2)^(0+128),w
 15558  0164  0020               	movlb	0	; select bank0
 15559  0165  00C6               	movwf	___fldiv@b+2
 15560  0166  0021               	movlb	1	; select bank1
 15561  0167  0821               	movf	(?___flsub+1)^(0+128),w
 15562  0168  0020               	movlb	0	; select bank0
 15563  0169  00C5               	movwf	___fldiv@b+1
 15564  016A  0021               	movlb	1	; select bank1
 15565  016B  0820               	movf	?___flsub^(0+128),w
 15566  016C  0020               	movlb	0	; select bank0
 15567  016D  00C4               	movwf	___fldiv@b
 15568  016E  319B  2300         	fcall	___fldiv
 15569  0170  0020               	movlb	0	; select bank0
 15570  0171  0843               	movf	?___fldiv+3,w
 15571  0172  0021               	movlb	1	; select bank1
 15572  0173  00AB               	movwf	(?_logf+3)^(0+128)
 15573  0174  0020               	movlb	0	; select bank0
 15574  0175  0842               	movf	?___fldiv+2,w
 15575  0176  0021               	movlb	1	; select bank1
 15576  0177  00AA               	movwf	(?_logf+2)^(0+128)
 15577  0178  0020               	movlb	0	; select bank0
 15578  0179  0841               	movf	?___fldiv+1,w
 15579  017A  0021               	movlb	1	; select bank1
 15580  017B  00A9               	movwf	(?_logf+1)^(0+128)
 15581  017C  0020               	movlb	0	; select bank0
 15582  017D  0840               	movf	?___fldiv,w
 15583  017E  0021               	movlb	1	; select bank1
 15584  017F  00A8               	movwf	?_logf^(0+128)
 15585  0180  0008               	return
 15586  0181                     l5597:	
 15587  0181  30E7               	movlw	231
 15588  0182  0022               	movlb	2	; select bank2
 15589  0183  07BC               	addwf	logf@k^(0+256),f
 15590  0184  30FF               	movlw	255
 15591  0185  3DBD               	addwfc	(logf@k+1)^(0+256),f
 15592  0186  304C               	movlw	76
 15593  0187  0020               	movlb	0	; select bank0
 15594  0188  00A9               	movwf	___flmul@b+3
 15595  0189  3000               	movlw	0
 15596  018A  00A8               	movwf	___flmul@b+2
 15597  018B  3000               	movlw	0
 15598  018C  00A7               	movwf	___flmul@b+1
 15599  018D  3000               	movlw	0
 15600  018E  00A6               	movwf	___flmul@b
 15601  018F  0021               	movlb	1	; select bank1
 15602  0190  082B               	movf	(logf@x+3)^(0+128),w
 15603  0191  0020               	movlb	0	; select bank0
 15604  0192  00AD               	movwf	___flmul@a+3
 15605  0193  0021               	movlb	1	; select bank1
 15606  0194  082A               	movf	(logf@x+2)^(0+128),w
 15607  0195  0020               	movlb	0	; select bank0
 15608  0196  00AC               	movwf	___flmul@a+2
 15609  0197  0021               	movlb	1	; select bank1
 15610  0198  0829               	movf	(logf@x+1)^(0+128),w
 15611  0199  0020               	movlb	0	; select bank0
 15612  019A  00AB               	movwf	___flmul@a+1
 15613  019B  0021               	movlb	1	; select bank1
 15614  019C  0828               	movf	logf@x^(0+128),w
 15615  019D  0020               	movlb	0	; select bank0
 15616  019E  00AA               	movwf	___flmul@a
 15617  019F  3190  2023  3180   	fcall	___flmul
 15618  01A2  0020               	movlb	0	; select bank0
 15619  01A3  0829               	movf	?___flmul+3,w
 15620  01A4  0021               	movlb	1	; select bank1
 15621  01A5  00AB               	movwf	(logf@x+3)^(0+128)
 15622  01A6  0020               	movlb	0	; select bank0
 15623  01A7  0828               	movf	?___flmul+2,w
 15624  01A8  0021               	movlb	1	; select bank1
 15625  01A9  00AA               	movwf	(logf@x+2)^(0+128)
 15626  01AA  0020               	movlb	0	; select bank0
 15627  01AB  0827               	movf	?___flmul+1,w
 15628  01AC  0021               	movlb	1	; select bank1
 15629  01AD  00A9               	movwf	(logf@x+1)^(0+128)
 15630  01AE  0020               	movlb	0	; select bank0
 15631  01AF  0826               	movf	?___flmul,w
 15632  01B0  0021               	movlb	1	; select bank1
 15633  01B1  00A8               	movwf	logf@x^(0+128)
 15634  01B2  082B               	movf	(logf@x+3)^(0+128),w
 15635  01B3  0022               	movlb	2	; select bank2
 15636  01B4  00D9               	movwf	(logf@u+3)^(0+256)
 15637  01B5  0021               	movlb	1	; select bank1
 15638  01B6  082A               	movf	(logf@x+2)^(0+128),w
 15639  01B7  0022               	movlb	2	; select bank2
 15640  01B8  00D8               	movwf	(logf@u+2)^(0+256)
 15641  01B9  0021               	movlb	1	; select bank1
 15642  01BA  0829               	movf	(logf@x+1)^(0+128),w
 15643  01BB  0022               	movlb	2	; select bank2
 15644  01BC  00D7               	movwf	(logf@u+1)^(0+256)
 15645  01BD  0021               	movlb	1	; select bank1
 15646  01BE  0828               	movf	logf@x^(0+128),w
 15647  01BF  0022               	movlb	2	; select bank2
 15648  01C0  00D6               	movwf	logf@u^(0+256)
 15649  01C1  0859               	movf	(logf@u+3)^(0+256),w
 15650  01C2  00E1               	movwf	(logf@ix+3)^(0+256)
 15651  01C3  0858               	movf	(logf@u+2)^(0+256),w
 15652  01C4  00E0               	movwf	(logf@ix+2)^(0+256)
 15653  01C5  0857               	movf	(logf@u+1)^(0+256),w
 15654  01C6  00DF               	movwf	(logf@ix+1)^(0+256)
 15655  01C7  0856               	movf	logf@u^(0+256),w
 15656  01C8  00DE               	movwf	logf@ix^(0+256)
 15657  01C9  29E4               	goto	l5617
 15658  01CA                     l5605:	
 15659  01CA  3080               	movlw	128
 15660  01CB  0022               	movlb	2	; select bank2
 15661  01CC  0260               	subwf	(logf@ix+2)^(0+256),w
 15662  01CD  307F               	movlw	127
 15663  01CE  3B61               	subwfb	(logf@ix+3)^(0+256),w
 15664  01CF  1803               	btfsc	3,0
 15665  01D0  0008               	return
 15666  01D1  3080               	movlw	128
 15667  01D2  0660               	xorwf	(logf@ix+2)^(0+256),w
 15668  01D3  303F               	movlw	63
 15669  01D4  1903               	skipnz
 15670  01D5  0661               	xorwf	(logf@ix+3)^(0+256),w
 15671  01D6  045E               	iorwf	logf@ix^(0+256),w
 15672  01D7  045F               	iorwf	(logf@ix+1)^(0+256),w
 15673  01D8  1D03               	btfss	3,2
 15674  01D9  29E4               	goto	l5617
 15675  01DA  3000               	movlw	0
 15676  01DB  0021               	movlb	1	; select bank1
 15677  01DC  00AB               	movwf	(?_logf+3)^(0+128)
 15678  01DD  3000               	movlw	0
 15679  01DE  00AA               	movwf	(?_logf+2)^(0+128)
 15680  01DF  3000               	movlw	0
 15681  01E0  00A9               	movwf	(?_logf+1)^(0+128)
 15682  01E1  3000               	movlw	0
 15683  01E2  00A8               	movwf	?_logf^(0+128)
 15684  01E3  0008               	return
 15685  01E4                     l5617:	
 15686  01E4  300D               	movlw	13
 15687  01E5  07DE               	addwf	logf@ix^(0+256),f
 15688  01E6  30FB               	movlw	251
 15689  01E7  3DDF               	addwfc	(logf@ix+1)^(0+256),f
 15690  01E8  304A               	movlw	74
 15691  01E9  3DE0               	addwfc	(logf@ix+2)^(0+256),f
 15692  01EA  3000               	movlw	0
 15693  01EB  3DE1               	addwfc	(logf@ix+3)^(0+256),f
 15694  01EC  085E               	movf	logf@ix^(0+256),w
 15695  01ED  0021               	movlb	1	; select bank1
 15696  01EE  00AC               	movwf	??_logf^(0+128)
 15697  01EF  0022               	movlb	2	; select bank2
 15698  01F0  085F               	movf	(logf@ix+1)^(0+256),w
 15699  01F1  0021               	movlb	1	; select bank1
 15700  01F2  00AD               	movwf	(??_logf^(0+128)+1)
 15701  01F3  0022               	movlb	2	; select bank2
 15702  01F4  0860               	movf	(logf@ix+2)^(0+256),w
 15703  01F5  0021               	movlb	1	; select bank1
 15704  01F6  00AE               	movwf	(??_logf^(0+128)+2)
 15705  01F7  0022               	movlb	2	; select bank2
 15706  01F8  0861               	movf	(logf@ix+3)^(0+256),w
 15707  01F9  0021               	movlb	1	; select bank1
 15708  01FA  00AF               	movwf	(??_logf^(0+128)+3)
 15709  01FB  3017               	movlw	23
 15710  01FC                     u7005:	
 15711  01FC  36AF               	lsrf	(??_logf^(0+128)+3),f
 15712  01FD  0CAE               	rrf	(??_logf^(0+128)+2),f
 15713  01FE  0CAD               	rrf	(??_logf^(0+128)+1),f
 15714  01FF  0CAC               	rrf	??_logf^(0+128),f
 15715  0200  0B89               	decfsz	9,f
 15716  0201  29FC               	goto	u7005
 15717  0202  082C               	movf	??_logf^(0+128),w
 15718  0203  3E81               	addlw	129
 15719  0204  00B0               	movwf	(??_logf+4)^(0+128)
 15720  0205  30FF               	movlw	255
 15721  0206  3D2D               	addwfc	(??_logf+1)^(0+128),w
 15722  0207  00B1               	movwf	(??_logf+5)^(0+128)
 15723  0208  0830               	movf	(??_logf+4)^(0+128),w
 15724  0209  0022               	movlb	2	; select bank2
 15725  020A  07BC               	addwf	logf@k^(0+256),f
 15726  020B  0021               	movlb	1	; select bank1
 15727  020C  0831               	movf	(??_logf+5)^(0+128),w
 15728  020D  0022               	movlb	2	; select bank2
 15729  020E  3DBD               	addwfc	(logf@k+1)^(0+256),f
 15730  020F  30F3               	movlw	243
 15731  0210  0021               	movlb	1	; select bank1
 15732  0211  00AC               	movwf	??_logf^(0+128)
 15733  0212  3004               	movlw	4
 15734  0213  00AD               	movwf	(??_logf^(0+128)+1)
 15735  0214  3035               	movlw	53
 15736  0215  00AE               	movwf	(??_logf^(0+128)+2)
 15737  0216  303F               	movlw	63
 15738  0217  00AF               	movwf	(??_logf^(0+128)+3)
 15739  0218  30FF               	movlw	255
 15740  0219  0022               	movlb	2	; select bank2
 15741  021A  055E               	andwf	logf@ix^(0+256),w
 15742  021B  0021               	movlb	1	; select bank1
 15743  021C  00B0               	movwf	(??_logf+4)^(0+128)
 15744  021D  30FF               	movlw	255
 15745  021E  0022               	movlb	2	; select bank2
 15746  021F  055F               	andwf	(logf@ix+1)^(0+256),w
 15747  0220  0021               	movlb	1	; select bank1
 15748  0221  00B1               	movwf	((??_logf+4)^(0+128)+1)
 15749  0222  307F               	movlw	127
 15750  0223  0022               	movlb	2	; select bank2
 15751  0224  0560               	andwf	(logf@ix+2)^(0+256),w
 15752  0225  0021               	movlb	1	; select bank1
 15753  0226  00B2               	movwf	((??_logf+4)^(0+128)+2)
 15754  0227  3000               	movlw	0
 15755  0228  0022               	movlb	2	; select bank2
 15756  0229  0561               	andwf	(logf@ix+3)^(0+256),w
 15757  022A  0021               	movlb	1	; select bank1
 15758  022B  00B3               	movwf	((??_logf+4)^(0+128)+3)
 15759  022C  0830               	movf	(??_logf+4)^(0+128),w
 15760  022D  07AC               	addwf	??_logf^(0+128),f
 15761  022E  0831               	movf	(??_logf+5)^(0+128),w
 15762  022F  3DAD               	addwfc	(??_logf^(0+128)+1),f
 15763  0230  0832               	movf	(??_logf+6)^(0+128),w
 15764  0231  3DAE               	addwfc	(??_logf^(0+128)+2),f
 15765  0232  0833               	movf	(??_logf+7)^(0+128),w
 15766  0233  3DAF               	addwfc	(??_logf^(0+128)+3),f
 15767  0234  082F               	movf	(??_logf+3)^(0+128),w
 15768  0235  0022               	movlb	2	; select bank2
 15769  0236  00E1               	movwf	(logf@ix+3)^(0+256)
 15770  0237  0021               	movlb	1	; select bank1
 15771  0238  082E               	movf	(??_logf+2)^(0+128),w
 15772  0239  0022               	movlb	2	; select bank2
 15773  023A  00E0               	movwf	(logf@ix+2)^(0+256)
 15774  023B  0021               	movlb	1	; select bank1
 15775  023C  082D               	movf	(??_logf+1)^(0+128),w
 15776  023D  0022               	movlb	2	; select bank2
 15777  023E  00DF               	movwf	(logf@ix+1)^(0+256)
 15778  023F  0021               	movlb	1	; select bank1
 15779  0240  082C               	movf	??_logf^(0+128),w
 15780  0241  0022               	movlb	2	; select bank2
 15781  0242  00DE               	movwf	logf@ix^(0+256)
 15782  0243  0861               	movf	(logf@ix+3)^(0+256),w
 15783  0244  00D9               	movwf	(logf@u+3)^(0+256)
 15784  0245  0860               	movf	(logf@ix+2)^(0+256),w
 15785  0246  00D8               	movwf	(logf@u+2)^(0+256)
 15786  0247  085F               	movf	(logf@ix+1)^(0+256),w
 15787  0248  00D7               	movwf	(logf@u+1)^(0+256)
 15788  0249  085E               	movf	logf@ix^(0+256),w
 15789  024A  00D6               	movwf	logf@u^(0+256)
 15790  024B  0859               	movf	(logf@u+3)^(0+256),w
 15791  024C  0021               	movlb	1	; select bank1
 15792  024D  00AB               	movwf	(logf@x+3)^(0+128)
 15793  024E  0022               	movlb	2	; select bank2
 15794  024F  0858               	movf	(logf@u+2)^(0+256),w
 15795  0250  0021               	movlb	1	; select bank1
 15796  0251  00AA               	movwf	(logf@x+2)^(0+128)
 15797  0252  0022               	movlb	2	; select bank2
 15798  0253  0857               	movf	(logf@u+1)^(0+256),w
 15799  0254  0021               	movlb	1	; select bank1
 15800  0255  00A9               	movwf	(logf@x+1)^(0+128)
 15801  0256  0022               	movlb	2	; select bank2
 15802  0257  0856               	movf	logf@u^(0+256),w
 15803  0258  0021               	movlb	1	; select bank1
 15804  0259  00A8               	movwf	logf@x^(0+128)
 15805  025A  30BF               	movlw	191
 15806  025B  0020               	movlb	0	; select bank0
 15807  025C  00DD               	movwf	___fladd@b+3
 15808  025D  3080               	movlw	128
 15809  025E  00DC               	movwf	___fladd@b+2
 15810  025F  3000               	movlw	0
 15811  0260  00DB               	movwf	___fladd@b+1
 15812  0261  3000               	movlw	0
 15813  0262  00DA               	movwf	___fladd@b
 15814  0263  0021               	movlb	1	; select bank1
 15815  0264  082B               	movf	(logf@x+3)^(0+128),w
 15816  0265  0020               	movlb	0	; select bank0
 15817  0266  00E1               	movwf	___fladd@a+3
 15818  0267  0021               	movlb	1	; select bank1
 15819  0268  082A               	movf	(logf@x+2)^(0+128),w
 15820  0269  0020               	movlb	0	; select bank0
 15821  026A  00E0               	movwf	___fladd@a+2
 15822  026B  0021               	movlb	1	; select bank1
 15823  026C  0829               	movf	(logf@x+1)^(0+128),w
 15824  026D  0020               	movlb	0	; select bank0
 15825  026E  00DF               	movwf	___fladd@a+1
 15826  026F  0021               	movlb	1	; select bank1
 15827  0270  0828               	movf	logf@x^(0+128),w
 15828  0271  0020               	movlb	0	; select bank0
 15829  0272  00DE               	movwf	___fladd@a
 15830  0273  319E  261E  3180   	fcall	___fladd
 15831  0276  0020               	movlb	0	; select bank0
 15832  0277  085D               	movf	?___fladd+3,w
 15833  0278  0022               	movlb	2	; select bank2
 15834  0279  00DD               	movwf	(logf@f+3)^(0+256)
 15835  027A  0020               	movlb	0	; select bank0
 15836  027B  085C               	movf	?___fladd+2,w
 15837  027C  0022               	movlb	2	; select bank2
 15838  027D  00DC               	movwf	(logf@f+2)^(0+256)
 15839  027E  0020               	movlb	0	; select bank0
 15840  027F  085B               	movf	?___fladd+1,w
 15841  0280  0022               	movlb	2	; select bank2
 15842  0281  00DB               	movwf	(logf@f+1)^(0+256)
 15843  0282  0020               	movlb	0	; select bank0
 15844  0283  085A               	movf	?___fladd,w
 15845  0284  0022               	movlb	2	; select bank2
 15846  0285  00DA               	movwf	logf@f^(0+256)
 15847  0286  3040               	movlw	64
 15848  0287  0020               	movlb	0	; select bank0
 15849  0288  00DD               	movwf	___fladd@b+3
 15850  0289  3000               	movlw	0
 15851  028A  00DC               	movwf	___fladd@b+2
 15852  028B  3000               	movlw	0
 15853  028C  00DB               	movwf	___fladd@b+1
 15854  028D  3000               	movlw	0
 15855  028E  00DA               	movwf	___fladd@b
 15856  028F  0022               	movlb	2	; select bank2
 15857  0290  085D               	movf	(logf@f+3)^(0+256),w
 15858  0291  0020               	movlb	0	; select bank0
 15859  0292  00E1               	movwf	___fladd@a+3
 15860  0293  0022               	movlb	2	; select bank2
 15861  0294  085C               	movf	(logf@f+2)^(0+256),w
 15862  0295  0020               	movlb	0	; select bank0
 15863  0296  00E0               	movwf	___fladd@a+2
 15864  0297  0022               	movlb	2	; select bank2
 15865  0298  085B               	movf	(logf@f+1)^(0+256),w
 15866  0299  0020               	movlb	0	; select bank0
 15867  029A  00DF               	movwf	___fladd@a+1
 15868  029B  0022               	movlb	2	; select bank2
 15869  029C  085A               	movf	logf@f^(0+256),w
 15870  029D  0020               	movlb	0	; select bank0
 15871  029E  00DE               	movwf	___fladd@a
 15872  029F  319E  261E  3180   	fcall	___fladd
 15873  02A2  0020               	movlb	0	; select bank0
 15874  02A3  085D               	movf	?___fladd+3,w
 15875  02A4  00C3               	movwf	___fldiv@a+3
 15876  02A5  085C               	movf	?___fladd+2,w
 15877  02A6  00C2               	movwf	___fldiv@a+2
 15878  02A7  085B               	movf	?___fladd+1,w
 15879  02A8  00C1               	movwf	___fldiv@a+1
 15880  02A9  085A               	movf	?___fladd,w
 15881  02AA  00C0               	movwf	___fldiv@a
 15882  02AB  0022               	movlb	2	; select bank2
 15883  02AC  085D               	movf	(logf@f+3)^(0+256),w
 15884  02AD  0020               	movlb	0	; select bank0
 15885  02AE  00C7               	movwf	___fldiv@b+3
 15886  02AF  0022               	movlb	2	; select bank2
 15887  02B0  085C               	movf	(logf@f+2)^(0+256),w
 15888  02B1  0020               	movlb	0	; select bank0
 15889  02B2  00C6               	movwf	___fldiv@b+2
 15890  02B3  0022               	movlb	2	; select bank2
 15891  02B4  085B               	movf	(logf@f+1)^(0+256),w
 15892  02B5  0020               	movlb	0	; select bank0
 15893  02B6  00C5               	movwf	___fldiv@b+1
 15894  02B7  0022               	movlb	2	; select bank2
 15895  02B8  085A               	movf	logf@f^(0+256),w
 15896  02B9  0020               	movlb	0	; select bank0
 15897  02BA  00C4               	movwf	___fldiv@b
 15898  02BB  319B  2300  3180   	fcall	___fldiv
 15899  02BE  0020               	movlb	0	; select bank0
 15900  02BF  0843               	movf	?___fldiv+3,w
 15901  02C0  0022               	movlb	2	; select bank2
 15902  02C1  00C9               	movwf	(logf@s+3)^(0+256)
 15903  02C2  0020               	movlb	0	; select bank0
 15904  02C3  0842               	movf	?___fldiv+2,w
 15905  02C4  0022               	movlb	2	; select bank2
 15906  02C5  00C8               	movwf	(logf@s+2)^(0+256)
 15907  02C6  0020               	movlb	0	; select bank0
 15908  02C7  0841               	movf	?___fldiv+1,w
 15909  02C8  0022               	movlb	2	; select bank2
 15910  02C9  00C7               	movwf	(logf@s+1)^(0+256)
 15911  02CA  0020               	movlb	0	; select bank0
 15912  02CB  0840               	movf	?___fldiv,w
 15913  02CC  0022               	movlb	2	; select bank2
 15914  02CD  00C6               	movwf	logf@s^(0+256)
 15915  02CE  0849               	movf	(logf@s+3)^(0+256),w
 15916  02CF  0020               	movlb	0	; select bank0
 15917  02D0  00A9               	movwf	___flmul@b+3
 15918  02D1  0022               	movlb	2	; select bank2
 15919  02D2  0848               	movf	(logf@s+2)^(0+256),w
 15920  02D3  0020               	movlb	0	; select bank0
 15921  02D4  00A8               	movwf	___flmul@b+2
 15922  02D5  0022               	movlb	2	; select bank2
 15923  02D6  0847               	movf	(logf@s+1)^(0+256),w
 15924  02D7  0020               	movlb	0	; select bank0
 15925  02D8  00A7               	movwf	___flmul@b+1
 15926  02D9  0022               	movlb	2	; select bank2
 15927  02DA  0846               	movf	logf@s^(0+256),w
 15928  02DB  0020               	movlb	0	; select bank0
 15929  02DC  00A6               	movwf	___flmul@b
 15930  02DD  0022               	movlb	2	; select bank2
 15931  02DE  0849               	movf	(logf@s+3)^(0+256),w
 15932  02DF  0020               	movlb	0	; select bank0
 15933  02E0  00AD               	movwf	___flmul@a+3
 15934  02E1  0022               	movlb	2	; select bank2
 15935  02E2  0848               	movf	(logf@s+2)^(0+256),w
 15936  02E3  0020               	movlb	0	; select bank0
 15937  02E4  00AC               	movwf	___flmul@a+2
 15938  02E5  0022               	movlb	2	; select bank2
 15939  02E6  0847               	movf	(logf@s+1)^(0+256),w
 15940  02E7  0020               	movlb	0	; select bank0
 15941  02E8  00AB               	movwf	___flmul@a+1
 15942  02E9  0022               	movlb	2	; select bank2
 15943  02EA  0846               	movf	logf@s^(0+256),w
 15944  02EB  0020               	movlb	0	; select bank0
 15945  02EC  00AA               	movwf	___flmul@a
 15946  02ED  3190  2023  3180   	fcall	___flmul
 15947  02F0  0020               	movlb	0	; select bank0
 15948  02F1  0829               	movf	?___flmul+3,w
 15949  02F2  0022               	movlb	2	; select bank2
 15950  02F3  00CD               	movwf	(logf@z+3)^(0+256)
 15951  02F4  0020               	movlb	0	; select bank0
 15952  02F5  0828               	movf	?___flmul+2,w
 15953  02F6  0022               	movlb	2	; select bank2
 15954  02F7  00CC               	movwf	(logf@z+2)^(0+256)
 15955  02F8  0020               	movlb	0	; select bank0
 15956  02F9  0827               	movf	?___flmul+1,w
 15957  02FA  0022               	movlb	2	; select bank2
 15958  02FB  00CB               	movwf	(logf@z+1)^(0+256)
 15959  02FC  0020               	movlb	0	; select bank0
 15960  02FD  0826               	movf	?___flmul,w
 15961  02FE  0022               	movlb	2	; select bank2
 15962  02FF  00CA               	movwf	logf@z^(0+256)
 15963  0300  084D               	movf	(logf@z+3)^(0+256),w
 15964  0301  0020               	movlb	0	; select bank0
 15965  0302  00A9               	movwf	___flmul@b+3
 15966  0303  0022               	movlb	2	; select bank2
 15967  0304  084C               	movf	(logf@z+2)^(0+256),w
 15968  0305  0020               	movlb	0	; select bank0
 15969  0306  00A8               	movwf	___flmul@b+2
 15970  0307  0022               	movlb	2	; select bank2
 15971  0308  084B               	movf	(logf@z+1)^(0+256),w
 15972  0309  0020               	movlb	0	; select bank0
 15973  030A  00A7               	movwf	___flmul@b+1
 15974  030B  0022               	movlb	2	; select bank2
 15975  030C  084A               	movf	logf@z^(0+256),w
 15976  030D  0020               	movlb	0	; select bank0
 15977  030E  00A6               	movwf	___flmul@b
 15978  030F  0022               	movlb	2	; select bank2
 15979  0310  084D               	movf	(logf@z+3)^(0+256),w
 15980  0311  0020               	movlb	0	; select bank0
 15981  0312  00AD               	movwf	___flmul@a+3
 15982  0313  0022               	movlb	2	; select bank2
 15983  0314  084C               	movf	(logf@z+2)^(0+256),w
 15984  0315  0020               	movlb	0	; select bank0
 15985  0316  00AC               	movwf	___flmul@a+2
 15986  0317  0022               	movlb	2	; select bank2
 15987  0318  084B               	movf	(logf@z+1)^(0+256),w
 15988  0319  0020               	movlb	0	; select bank0
 15989  031A  00AB               	movwf	___flmul@a+1
 15990  031B  0022               	movlb	2	; select bank2
 15991  031C  084A               	movf	logf@z^(0+256),w
 15992  031D  0020               	movlb	0	; select bank0
 15993  031E  00AA               	movwf	___flmul@a
 15994  031F  3190  2023  3180   	fcall	___flmul
 15995  0322  0020               	movlb	0	; select bank0
 15996  0323  0829               	movf	?___flmul+3,w
 15997  0324  0022               	movlb	2	; select bank2
 15998  0325  00D1               	movwf	(logf@w+3)^(0+256)
 15999  0326  0020               	movlb	0	; select bank0
 16000  0327  0828               	movf	?___flmul+2,w
 16001  0328  0022               	movlb	2	; select bank2
 16002  0329  00D0               	movwf	(logf@w+2)^(0+256)
 16003  032A  0020               	movlb	0	; select bank0
 16004  032B  0827               	movf	?___flmul+1,w
 16005  032C  0022               	movlb	2	; select bank2
 16006  032D  00CF               	movwf	(logf@w+1)^(0+256)
 16007  032E  0020               	movlb	0	; select bank0
 16008  032F  0826               	movf	?___flmul,w
 16009  0330  0022               	movlb	2	; select bank2
 16010  0331  00CE               	movwf	logf@w^(0+256)
 16011  0332  303E               	movlw	62
 16012  0333  0020               	movlb	0	; select bank0
 16013  0334  00DD               	movwf	___fladd@b+3
 16014  0335  30CC               	movlw	204
 16015  0336  00DC               	movwf	___fladd@b+2
 16016  0337  30CE               	movlw	206
 16017  0338  00DB               	movwf	___fladd@b+1
 16018  0339  3013               	movlw	19
 16019  033A  00DA               	movwf	___fladd@b
 16020  033B  303E               	movlw	62
 16021  033C  00A9               	movwf	___flmul@b+3
 16022  033D  3078               	movlw	120
 16023  033E  00A8               	movwf	___flmul@b+2
 16024  033F  309E               	movlw	158
 16025  0340  00A7               	movwf	___flmul@b+1
 16026  0341  3026               	movlw	38
 16027  0342  00A6               	movwf	___flmul@b
 16028  0343  0022               	movlb	2	; select bank2
 16029  0344  0851               	movf	(logf@w+3)^(0+256),w
 16030  0345  0020               	movlb	0	; select bank0
 16031  0346  00AD               	movwf	___flmul@a+3
 16032  0347  0022               	movlb	2	; select bank2
 16033  0348  0850               	movf	(logf@w+2)^(0+256),w
 16034  0349  0020               	movlb	0	; select bank0
 16035  034A  00AC               	movwf	___flmul@a+2
 16036  034B  0022               	movlb	2	; select bank2
 16037  034C  084F               	movf	(logf@w+1)^(0+256),w
 16038  034D  0020               	movlb	0	; select bank0
 16039  034E  00AB               	movwf	___flmul@a+1
 16040  034F  0022               	movlb	2	; select bank2
 16041  0350  084E               	movf	logf@w^(0+256),w
 16042  0351  0020               	movlb	0	; select bank0
 16043  0352  00AA               	movwf	___flmul@a
 16044  0353  3190  2023  3180   	fcall	___flmul
 16045  0356  0020               	movlb	0	; select bank0
 16046  0357  0829               	movf	?___flmul+3,w
 16047  0358  00E1               	movwf	___fladd@a+3
 16048  0359  0828               	movf	?___flmul+2,w
 16049  035A  00E0               	movwf	___fladd@a+2
 16050  035B  0827               	movf	?___flmul+1,w
 16051  035C  00DF               	movwf	___fladd@a+1
 16052  035D  0826               	movf	?___flmul,w
 16053  035E  00DE               	movwf	___fladd@a
 16054  035F  319E  261E  3180   	fcall	___fladd
 16055  0362  0020               	movlb	0	; select bank0
 16056  0363  085D               	movf	?___fladd+3,w
 16057  0364  0022               	movlb	2	; select bank2
 16058  0365  00D5               	movwf	(_logf$2103+3)^(0+256)
 16059  0366  0020               	movlb	0	; select bank0
 16060  0367  085C               	movf	?___fladd+2,w
 16061  0368  0022               	movlb	2	; select bank2
 16062  0369  00D4               	movwf	(_logf$2103+2)^(0+256)
 16063  036A  0020               	movlb	0	; select bank0
 16064  036B  085B               	movf	?___fladd+1,w
 16065  036C  0022               	movlb	2	; select bank2
 16066  036D  00D3               	movwf	(_logf$2103+1)^(0+256)
 16067  036E  0020               	movlb	0	; select bank0
 16068  036F  085A               	movf	?___fladd,w
 16069  0370  0022               	movlb	2	; select bank2
 16070  0371  00D2               	movwf	_logf$2103^(0+256)
 16071  0372  0851               	movf	(logf@w+3)^(0+256),w
 16072  0373  0020               	movlb	0	; select bank0
 16073  0374  00A9               	movwf	___flmul@b+3
 16074  0375  0022               	movlb	2	; select bank2
 16075  0376  0850               	movf	(logf@w+2)^(0+256),w
 16076  0377  0020               	movlb	0	; select bank0
 16077  0378  00A8               	movwf	___flmul@b+2
 16078  0379  0022               	movlb	2	; select bank2
 16079  037A  084F               	movf	(logf@w+1)^(0+256),w
 16080  037B  0020               	movlb	0	; select bank0
 16081  037C  00A7               	movwf	___flmul@b+1
 16082  037D  0022               	movlb	2	; select bank2
 16083  037E  084E               	movf	logf@w^(0+256),w
 16084  037F  0020               	movlb	0	; select bank0
 16085  0380  00A6               	movwf	___flmul@b
 16086  0381  0022               	movlb	2	; select bank2
 16087  0382  0855               	movf	(_logf$2103+3)^(0+256),w
 16088  0383  0020               	movlb	0	; select bank0
 16089  0384  00AD               	movwf	___flmul@a+3
 16090  0385  0022               	movlb	2	; select bank2
 16091  0386  0854               	movf	(_logf$2103+2)^(0+256),w
 16092  0387  0020               	movlb	0	; select bank0
 16093  0388  00AC               	movwf	___flmul@a+2
 16094  0389  0022               	movlb	2	; select bank2
 16095  038A  0853               	movf	(_logf$2103+1)^(0+256),w
 16096  038B  0020               	movlb	0	; select bank0
 16097  038C  00AB               	movwf	___flmul@a+1
 16098  038D  0022               	movlb	2	; select bank2
 16099  038E  0852               	movf	_logf$2103^(0+256),w
 16100  038F  0020               	movlb	0	; select bank0
 16101  0390  00AA               	movwf	___flmul@a
 16102  0391  3190  2023  3180   	fcall	___flmul
 16103  0394  0020               	movlb	0	; select bank0
 16104  0395  0829               	movf	?___flmul+3,w
 16105  0396  0022               	movlb	2	; select bank2
 16106  0397  00A7               	movwf	(logf@t1+3)^(0+256)
 16107  0398  0020               	movlb	0	; select bank0
 16108  0399  0828               	movf	?___flmul+2,w
 16109  039A  0022               	movlb	2	; select bank2
 16110  039B  00A6               	movwf	(logf@t1+2)^(0+256)
 16111  039C  0020               	movlb	0	; select bank0
 16112  039D  0827               	movf	?___flmul+1,w
 16113  039E  0022               	movlb	2	; select bank2
 16114  039F  00A5               	movwf	(logf@t1+1)^(0+256)
 16115  03A0  0020               	movlb	0	; select bank0
 16116  03A1  0826               	movf	?___flmul,w
 16117  03A2  0022               	movlb	2	; select bank2
 16118  03A3  00A4               	movwf	logf@t1^(0+256)
 16119  03A4  303F               	movlw	63
 16120  03A5  0020               	movlb	0	; select bank0
 16121  03A6  00DD               	movwf	___fladd@b+3
 16122  03A7  302A               	movlw	42
 16123  03A8  00DC               	movwf	___fladd@b+2
 16124  03A9  30AA               	movlw	170
 16125  03AA  00DB               	movwf	___fladd@b+1
 16126  03AB  30AA               	movlw	170
 16127  03AC  00DA               	movwf	___fladd@b
 16128  03AD  303E               	movlw	62
 16129  03AE  00A9               	movwf	___flmul@b+3
 16130  03AF  3091               	movlw	145
 16131  03B0  00A8               	movwf	___flmul@b+2
 16132  03B1  30E9               	movlw	233
 16133  03B2  00A7               	movwf	___flmul@b+1
 16134  03B3  30EE               	movlw	238
 16135  03B4  00A6               	movwf	___flmul@b
 16136  03B5  0022               	movlb	2	; select bank2
 16137  03B6  0851               	movf	(logf@w+3)^(0+256),w
 16138  03B7  0020               	movlb	0	; select bank0
 16139  03B8  00AD               	movwf	___flmul@a+3
 16140  03B9  0022               	movlb	2	; select bank2
 16141  03BA  0850               	movf	(logf@w+2)^(0+256),w
 16142  03BB  0020               	movlb	0	; select bank0
 16143  03BC  00AC               	movwf	___flmul@a+2
 16144  03BD  0022               	movlb	2	; select bank2
 16145  03BE  084F               	movf	(logf@w+1)^(0+256),w
 16146  03BF  0020               	movlb	0	; select bank0
 16147  03C0  00AB               	movwf	___flmul@a+1
 16148  03C1  0022               	movlb	2	; select bank2
 16149  03C2  084E               	movf	logf@w^(0+256),w
 16150  03C3  0020               	movlb	0	; select bank0
 16151  03C4  00AA               	movwf	___flmul@a
 16152  03C5  3190  2023  3180   	fcall	___flmul
 16153  03C8  0020               	movlb	0	; select bank0
 16154  03C9  0829               	movf	?___flmul+3,w
 16155  03CA  00E1               	movwf	___fladd@a+3
 16156  03CB  0828               	movf	?___flmul+2,w
 16157  03CC  00E0               	movwf	___fladd@a+2
 16158  03CD  0827               	movf	?___flmul+1,w
 16159  03CE  00DF               	movwf	___fladd@a+1
 16160  03CF  0826               	movf	?___flmul,w
 16161  03D0  00DE               	movwf	___fladd@a
 16162  03D1  319E  261E  3180   	fcall	___fladd
 16163  03D4  0020               	movlb	0	; select bank0
 16164  03D5  085D               	movf	?___fladd+3,w
 16165  03D6  0022               	movlb	2	; select bank2
 16166  03D7  00D5               	movwf	(_logf$2103+3)^(0+256)
 16167  03D8  0020               	movlb	0	; select bank0
 16168  03D9  085C               	movf	?___fladd+2,w
 16169  03DA  0022               	movlb	2	; select bank2
 16170  03DB  00D4               	movwf	(_logf$2103+2)^(0+256)
 16171  03DC  0020               	movlb	0	; select bank0
 16172  03DD  085B               	movf	?___fladd+1,w
 16173  03DE  0022               	movlb	2	; select bank2
 16174  03DF  00D3               	movwf	(_logf$2103+1)^(0+256)
 16175  03E0  0020               	movlb	0	; select bank0
 16176  03E1  085A               	movf	?___fladd,w
 16177  03E2  0022               	movlb	2	; select bank2
 16178  03E3  00D2               	movwf	_logf$2103^(0+256)
 16179  03E4  084D               	movf	(logf@z+3)^(0+256),w
 16180  03E5  0020               	movlb	0	; select bank0
 16181  03E6  00A9               	movwf	___flmul@b+3
 16182  03E7  0022               	movlb	2	; select bank2
 16183  03E8  084C               	movf	(logf@z+2)^(0+256),w
 16184  03E9  0020               	movlb	0	; select bank0
 16185  03EA  00A8               	movwf	___flmul@b+2
 16186  03EB  0022               	movlb	2	; select bank2
 16187  03EC  084B               	movf	(logf@z+1)^(0+256),w
 16188  03ED  0020               	movlb	0	; select bank0
 16189  03EE  00A7               	movwf	___flmul@b+1
 16190  03EF  0022               	movlb	2	; select bank2
 16191  03F0  084A               	movf	logf@z^(0+256),w
 16192  03F1  0020               	movlb	0	; select bank0
 16193  03F2  00A6               	movwf	___flmul@b
 16194  03F3  0022               	movlb	2	; select bank2
 16195  03F4  0855               	movf	(_logf$2103+3)^(0+256),w
 16196  03F5  0020               	movlb	0	; select bank0
 16197  03F6  00AD               	movwf	___flmul@a+3
 16198  03F7  0022               	movlb	2	; select bank2
 16199  03F8  0854               	movf	(_logf$2103+2)^(0+256),w
 16200  03F9  0020               	movlb	0	; select bank0
 16201  03FA  00AC               	movwf	___flmul@a+2
 16202  03FB  0022               	movlb	2	; select bank2
 16203  03FC  0853               	movf	(_logf$2103+1)^(0+256),w
 16204  03FD  0020               	movlb	0	; select bank0
 16205  03FE  00AB               	movwf	___flmul@a+1
 16206  03FF  0022               	movlb	2	; select bank2
 16207  0400  0852               	movf	_logf$2103^(0+256),w
 16208  0401  0020               	movlb	0	; select bank0
 16209  0402  00AA               	movwf	___flmul@a
 16210  0403  3190  2023  3180   	fcall	___flmul
 16211  0406  0020               	movlb	0	; select bank0
 16212  0407  0829               	movf	?___flmul+3,w
 16213  0408  0022               	movlb	2	; select bank2
 16214  0409  00AB               	movwf	(logf@t2+3)^(0+256)
 16215  040A  0020               	movlb	0	; select bank0
 16216  040B  0828               	movf	?___flmul+2,w
 16217  040C  0022               	movlb	2	; select bank2
 16218  040D  00AA               	movwf	(logf@t2+2)^(0+256)
 16219  040E  0020               	movlb	0	; select bank0
 16220  040F  0827               	movf	?___flmul+1,w
 16221  0410  0022               	movlb	2	; select bank2
 16222  0411  00A9               	movwf	(logf@t2+1)^(0+256)
 16223  0412  0020               	movlb	0	; select bank0
 16224  0413  0826               	movf	?___flmul,w
 16225  0414  0022               	movlb	2	; select bank2
 16226  0415  00A8               	movwf	logf@t2^(0+256)
 16227  0416  0827               	movf	(logf@t1+3)^(0+256),w
 16228  0417  0020               	movlb	0	; select bank0
 16229  0418  00DD               	movwf	___fladd@b+3
 16230  0419  0022               	movlb	2	; select bank2
 16231  041A  0826               	movf	(logf@t1+2)^(0+256),w
 16232  041B  0020               	movlb	0	; select bank0
 16233  041C  00DC               	movwf	___fladd@b+2
 16234  041D  0022               	movlb	2	; select bank2
 16235  041E  0825               	movf	(logf@t1+1)^(0+256),w
 16236  041F  0020               	movlb	0	; select bank0
 16237  0420  00DB               	movwf	___fladd@b+1
 16238  0421  0022               	movlb	2	; select bank2
 16239  0422  0824               	movf	logf@t1^(0+256),w
 16240  0423  0020               	movlb	0	; select bank0
 16241  0424  00DA               	movwf	___fladd@b
 16242  0425  0022               	movlb	2	; select bank2
 16243  0426  082B               	movf	(logf@t2+3)^(0+256),w
 16244  0427  0020               	movlb	0	; select bank0
 16245  0428  00E1               	movwf	___fladd@a+3
 16246  0429  0022               	movlb	2	; select bank2
 16247  042A  082A               	movf	(logf@t2+2)^(0+256),w
 16248  042B  0020               	movlb	0	; select bank0
 16249  042C  00E0               	movwf	___fladd@a+2
 16250  042D  0022               	movlb	2	; select bank2
 16251  042E  0829               	movf	(logf@t2+1)^(0+256),w
 16252  042F  0020               	movlb	0	; select bank0
 16253  0430  00DF               	movwf	___fladd@a+1
 16254  0431  0022               	movlb	2	; select bank2
 16255  0432  0828               	movf	logf@t2^(0+256),w
 16256  0433  0020               	movlb	0	; select bank0
 16257  0434  00DE               	movwf	___fladd@a
 16258  0435  319E  261E  3180   	fcall	___fladd
 16259  0438  0020               	movlb	0	; select bank0
 16260  0439  085D               	movf	?___fladd+3,w
 16261  043A  0022               	movlb	2	; select bank2
 16262  043B  00A3               	movwf	(logf@R+3)^(0+256)
 16263  043C  0020               	movlb	0	; select bank0
 16264  043D  085C               	movf	?___fladd+2,w
 16265  043E  0022               	movlb	2	; select bank2
 16266  043F  00A2               	movwf	(logf@R+2)^(0+256)
 16267  0440  0020               	movlb	0	; select bank0
 16268  0441  085B               	movf	?___fladd+1,w
 16269  0442  0022               	movlb	2	; select bank2
 16270  0443  00A1               	movwf	(logf@R+1)^(0+256)
 16271  0444  0020               	movlb	0	; select bank0
 16272  0445  085A               	movf	?___fladd,w
 16273  0446  0022               	movlb	2	; select bank2
 16274  0447  00A0               	movwf	logf@R^(0+256)
 16275  0448  303F               	movlw	63
 16276  0449  0020               	movlb	0	; select bank0
 16277  044A  00A9               	movwf	___flmul@b+3
 16278  044B  3000               	movlw	0
 16279  044C  00A8               	movwf	___flmul@b+2
 16280  044D  3000               	movlw	0
 16281  044E  00A7               	movwf	___flmul@b+1
 16282  044F  3000               	movlw	0
 16283  0450  00A6               	movwf	___flmul@b
 16284  0451  0022               	movlb	2	; select bank2
 16285  0452  085D               	movf	(logf@f+3)^(0+256),w
 16286  0453  0020               	movlb	0	; select bank0
 16287  0454  00AD               	movwf	___flmul@a+3
 16288  0455  0022               	movlb	2	; select bank2
 16289  0456  085C               	movf	(logf@f+2)^(0+256),w
 16290  0457  0020               	movlb	0	; select bank0
 16291  0458  00AC               	movwf	___flmul@a+2
 16292  0459  0022               	movlb	2	; select bank2
 16293  045A  085B               	movf	(logf@f+1)^(0+256),w
 16294  045B  0020               	movlb	0	; select bank0
 16295  045C  00AB               	movwf	___flmul@a+1
 16296  045D  0022               	movlb	2	; select bank2
 16297  045E  085A               	movf	logf@f^(0+256),w
 16298  045F  0020               	movlb	0	; select bank0
 16299  0460  00AA               	movwf	___flmul@a
 16300  0461  3190  2023  3180   	fcall	___flmul
 16301  0464  0020               	movlb	0	; select bank0
 16302  0465  0829               	movf	?___flmul+3,w
 16303  0466  0022               	movlb	2	; select bank2
 16304  0467  00D5               	movwf	(_logf$2103+3)^(0+256)
 16305  0468  0020               	movlb	0	; select bank0
 16306  0469  0828               	movf	?___flmul+2,w
 16307  046A  0022               	movlb	2	; select bank2
 16308  046B  00D4               	movwf	(_logf$2103+2)^(0+256)
 16309  046C  0020               	movlb	0	; select bank0
 16310  046D  0827               	movf	?___flmul+1,w
 16311  046E  0022               	movlb	2	; select bank2
 16312  046F  00D3               	movwf	(_logf$2103+1)^(0+256)
 16313  0470  0020               	movlb	0	; select bank0
 16314  0471  0826               	movf	?___flmul,w
 16315  0472  0022               	movlb	2	; select bank2
 16316  0473  00D2               	movwf	_logf$2103^(0+256)
 16317  0474  085D               	movf	(logf@f+3)^(0+256),w
 16318  0475  0020               	movlb	0	; select bank0
 16319  0476  00A9               	movwf	___flmul@b+3
 16320  0477  0022               	movlb	2	; select bank2
 16321  0478  085C               	movf	(logf@f+2)^(0+256),w
 16322  0479  0020               	movlb	0	; select bank0
 16323  047A  00A8               	movwf	___flmul@b+2
 16324  047B  0022               	movlb	2	; select bank2
 16325  047C  085B               	movf	(logf@f+1)^(0+256),w
 16326  047D  0020               	movlb	0	; select bank0
 16327  047E  00A7               	movwf	___flmul@b+1
 16328  047F  0022               	movlb	2	; select bank2
 16329  0480  085A               	movf	logf@f^(0+256),w
 16330  0481  0020               	movlb	0	; select bank0
 16331  0482  00A6               	movwf	___flmul@b
 16332  0483  0022               	movlb	2	; select bank2
 16333  0484  0855               	movf	(_logf$2103+3)^(0+256),w
 16334  0485  0020               	movlb	0	; select bank0
 16335  0486  00AD               	movwf	___flmul@a+3
 16336  0487  0022               	movlb	2	; select bank2
 16337  0488  0854               	movf	(_logf$2103+2)^(0+256),w
 16338  0489  0020               	movlb	0	; select bank0
 16339  048A  00AC               	movwf	___flmul@a+2
 16340  048B  0022               	movlb	2	; select bank2
 16341  048C  0853               	movf	(_logf$2103+1)^(0+256),w
 16342  048D  0020               	movlb	0	; select bank0
 16343  048E  00AB               	movwf	___flmul@a+1
 16344  048F  0022               	movlb	2	; select bank2
 16345  0490  0852               	movf	_logf$2103^(0+256),w
 16346  0491  0020               	movlb	0	; select bank0
 16347  0492  00AA               	movwf	___flmul@a
 16348  0493  3190  2023  3180   	fcall	___flmul
 16349  0496  0020               	movlb	0	; select bank0
 16350  0497  0829               	movf	?___flmul+3,w
 16351  0498  0022               	movlb	2	; select bank2
 16352  0499  00C1               	movwf	(logf@hfsq+3)^(0+256)
 16353  049A  0020               	movlb	0	; select bank0
 16354  049B  0828               	movf	?___flmul+2,w
 16355  049C  0022               	movlb	2	; select bank2
 16356  049D  00C0               	movwf	(logf@hfsq+2)^(0+256)
 16357  049E  0020               	movlb	0	; select bank0
 16358  049F  0827               	movf	?___flmul+1,w
 16359  04A0  0022               	movlb	2	; select bank2
 16360  04A1  00BF               	movwf	(logf@hfsq+1)^(0+256)
 16361  04A2  0020               	movlb	0	; select bank0
 16362  04A3  0826               	movf	?___flmul,w
 16363  04A4  0022               	movlb	2	; select bank2
 16364  04A5  00BE               	movwf	logf@hfsq^(0+256)
 16365  04A6  083C               	movf	logf@k^(0+256),w
 16366  04A7  00F1               	movwf	___xxtofl@val
 16367  04A8  083D               	movf	(logf@k+1)^(0+256),w
 16368  04A9  00F2               	movwf	___xxtofl@val+1
 16369  04AA  0D89               	rlf	9,f
 16370  04AB  3B89               	subwfb	9,f
 16371  04AC  0989               	comf	9,f
 16372  04AD  00F3               	movwf	___xxtofl@val+2
 16373  04AE  00F4               	movwf	___xxtofl@val+3
 16374  04AF  3001               	movlw	1
 16375  04B0  31A9  216C  3180   	fcall	___xxtofl
 16376  04B3  0874               	movf	?___xxtofl+3,w
 16377  04B4  0022               	movlb	2	; select bank2
 16378  04B5  00C5               	movwf	(logf@dk+3)^(0+256)
 16379  04B6  0873               	movf	?___xxtofl+2,w
 16380  04B7  00C4               	movwf	(logf@dk+2)^(0+256)
 16381  04B8  0872               	movf	?___xxtofl+1,w
 16382  04B9  00C3               	movwf	(logf@dk+1)^(0+256)
 16383  04BA  0871               	movf	?___xxtofl,w
 16384  04BB  00C2               	movwf	logf@dk^(0+256)
 16385  04BC  0849               	movf	(logf@s+3)^(0+256),w
 16386  04BD  0020               	movlb	0	; select bank0
 16387  04BE  00A9               	movwf	___flmul@b+3
 16388  04BF  0022               	movlb	2	; select bank2
 16389  04C0  0848               	movf	(logf@s+2)^(0+256),w
 16390  04C1  0020               	movlb	0	; select bank0
 16391  04C2  00A8               	movwf	___flmul@b+2
 16392  04C3  0022               	movlb	2	; select bank2
 16393  04C4  0847               	movf	(logf@s+1)^(0+256),w
 16394  04C5  0020               	movlb	0	; select bank0
 16395  04C6  00A7               	movwf	___flmul@b+1
 16396  04C7  0022               	movlb	2	; select bank2
 16397  04C8  0846               	movf	logf@s^(0+256),w
 16398  04C9  0020               	movlb	0	; select bank0
 16399  04CA  00A6               	movwf	___flmul@b
 16400  04CB  0022               	movlb	2	; select bank2
 16401  04CC  0823               	movf	(logf@R+3)^(0+256),w
 16402  04CD  0020               	movlb	0	; select bank0
 16403  04CE  00DD               	movwf	___fladd@b+3
 16404  04CF  0022               	movlb	2	; select bank2
 16405  04D0  0822               	movf	(logf@R+2)^(0+256),w
 16406  04D1  0020               	movlb	0	; select bank0
 16407  04D2  00DC               	movwf	___fladd@b+2
 16408  04D3  0022               	movlb	2	; select bank2
 16409  04D4  0821               	movf	(logf@R+1)^(0+256),w
 16410  04D5  0020               	movlb	0	; select bank0
 16411  04D6  00DB               	movwf	___fladd@b+1
 16412  04D7  0022               	movlb	2	; select bank2
 16413  04D8  0820               	movf	logf@R^(0+256),w
 16414  04D9  0020               	movlb	0	; select bank0
 16415  04DA  00DA               	movwf	___fladd@b
 16416  04DB  0022               	movlb	2	; select bank2
 16417  04DC  0841               	movf	(logf@hfsq+3)^(0+256),w
 16418  04DD  0020               	movlb	0	; select bank0
 16419  04DE  00E1               	movwf	___fladd@a+3
 16420  04DF  0022               	movlb	2	; select bank2
 16421  04E0  0840               	movf	(logf@hfsq+2)^(0+256),w
 16422  04E1  0020               	movlb	0	; select bank0
 16423  04E2  00E0               	movwf	___fladd@a+2
 16424  04E3  0022               	movlb	2	; select bank2
 16425  04E4  083F               	movf	(logf@hfsq+1)^(0+256),w
 16426  04E5  0020               	movlb	0	; select bank0
 16427  04E6  00DF               	movwf	___fladd@a+1
 16428  04E7  0022               	movlb	2	; select bank2
 16429  04E8  083E               	movf	logf@hfsq^(0+256),w
 16430  04E9  0020               	movlb	0	; select bank0
 16431  04EA  00DE               	movwf	___fladd@a
 16432  04EB  319E  261E  3180   	fcall	___fladd
 16433  04EE  0020               	movlb	0	; select bank0
 16434  04EF  085D               	movf	?___fladd+3,w
 16435  04F0  00AD               	movwf	___flmul@a+3
 16436  04F1  085C               	movf	?___fladd+2,w
 16437  04F2  00AC               	movwf	___flmul@a+2
 16438  04F3  085B               	movf	?___fladd+1,w
 16439  04F4  00AB               	movwf	___flmul@a+1
 16440  04F5  085A               	movf	?___fladd,w
 16441  04F6  00AA               	movwf	___flmul@a
 16442  04F7  3190  2023  3180   	fcall	___flmul
 16443  04FA  0020               	movlb	0	; select bank0
 16444  04FB  0829               	movf	?___flmul+3,w
 16445  04FC  0022               	movlb	2	; select bank2
 16446  04FD  00AF               	movwf	(_logf$2104+3)^(0+256)
 16447  04FE  0020               	movlb	0	; select bank0
 16448  04FF  0828               	movf	?___flmul+2,w
 16449  0500  0022               	movlb	2	; select bank2
 16450  0501  00AE               	movwf	(_logf$2104+2)^(0+256)
 16451  0502  0020               	movlb	0	; select bank0
 16452  0503  0827               	movf	?___flmul+1,w
 16453  0504  0022               	movlb	2	; select bank2
 16454  0505  00AD               	movwf	(_logf$2104+1)^(0+256)
 16455  0506  0020               	movlb	0	; select bank0
 16456  0507  0826               	movf	?___flmul,w
 16457  0508  0022               	movlb	2	; select bank2
 16458  0509  00AC               	movwf	_logf$2104^(0+256)
 16459  050A  3037               	movlw	55
 16460  050B  0020               	movlb	0	; select bank0
 16461  050C  00A9               	movwf	___flmul@b+3
 16462  050D  3017               	movlw	23
 16463  050E  00A8               	movwf	___flmul@b+2
 16464  050F  30F7               	movlw	247
 16465  0510  00A7               	movwf	___flmul@b+1
 16466  0511  30D1               	movlw	209
 16467  0512  00A6               	movwf	___flmul@b
 16468  0513  0022               	movlb	2	; select bank2
 16469  0514  0845               	movf	(logf@dk+3)^(0+256),w
 16470  0515  0020               	movlb	0	; select bank0
 16471  0516  00AD               	movwf	___flmul@a+3
 16472  0517  0022               	movlb	2	; select bank2
 16473  0518  0844               	movf	(logf@dk+2)^(0+256),w
 16474  0519  0020               	movlb	0	; select bank0
 16475  051A  00AC               	movwf	___flmul@a+2
 16476  051B  0022               	movlb	2	; select bank2
 16477  051C  0843               	movf	(logf@dk+1)^(0+256),w
 16478  051D  0020               	movlb	0	; select bank0
 16479  051E  00AB               	movwf	___flmul@a+1
 16480  051F  0022               	movlb	2	; select bank2
 16481  0520  0842               	movf	logf@dk^(0+256),w
 16482  0521  0020               	movlb	0	; select bank0
 16483  0522  00AA               	movwf	___flmul@a
 16484  0523  3190  2023  3180   	fcall	___flmul
 16485  0526  0020               	movlb	0	; select bank0
 16486  0527  0829               	movf	?___flmul+3,w
 16487  0528  00DD               	movwf	___fladd@b+3
 16488  0529  0828               	movf	?___flmul+2,w
 16489  052A  00DC               	movwf	___fladd@b+2
 16490  052B  0827               	movf	?___flmul+1,w
 16491  052C  00DB               	movwf	___fladd@b+1
 16492  052D  0826               	movf	?___flmul,w
 16493  052E  00DA               	movwf	___fladd@b
 16494  052F  0022               	movlb	2	; select bank2
 16495  0530  082F               	movf	(_logf$2104+3)^(0+256),w
 16496  0531  0020               	movlb	0	; select bank0
 16497  0532  00E1               	movwf	___fladd@a+3
 16498  0533  0022               	movlb	2	; select bank2
 16499  0534  082E               	movf	(_logf$2104+2)^(0+256),w
 16500  0535  0020               	movlb	0	; select bank0
 16501  0536  00E0               	movwf	___fladd@a+2
 16502  0537  0022               	movlb	2	; select bank2
 16503  0538  082D               	movf	(_logf$2104+1)^(0+256),w
 16504  0539  0020               	movlb	0	; select bank0
 16505  053A  00DF               	movwf	___fladd@a+1
 16506  053B  0022               	movlb	2	; select bank2
 16507  053C  082C               	movf	_logf$2104^(0+256),w
 16508  053D  0020               	movlb	0	; select bank0
 16509  053E  00DE               	movwf	___fladd@a
 16510  053F  319E  261E  3180   	fcall	___fladd
 16511  0542  0020               	movlb	0	; select bank0
 16512  0543  085D               	movf	?___fladd+3,w
 16513  0544  0022               	movlb	2	; select bank2
 16514  0545  00B3               	movwf	(_logf$2105+3)^(0+256)
 16515  0546  0020               	movlb	0	; select bank0
 16516  0547  085C               	movf	?___fladd+2,w
 16517  0548  0022               	movlb	2	; select bank2
 16518  0549  00B2               	movwf	(_logf$2105+2)^(0+256)
 16519  054A  0020               	movlb	0	; select bank0
 16520  054B  085B               	movf	?___fladd+1,w
 16521  054C  0022               	movlb	2	; select bank2
 16522  054D  00B1               	movwf	(_logf$2105+1)^(0+256)
 16523  054E  0020               	movlb	0	; select bank0
 16524  054F  085A               	movf	?___fladd,w
 16525  0550  0022               	movlb	2	; select bank2
 16526  0551  00B0               	movwf	_logf$2105^(0+256)
 16527  0552  0841               	movf	(logf@hfsq+3)^(0+256),w
 16528  0553  0021               	movlb	1	; select bank1
 16529  0554  00A3               	movwf	(___flsub@a+3)^(0+128)
 16530  0555  0022               	movlb	2	; select bank2
 16531  0556  0840               	movf	(logf@hfsq+2)^(0+256),w
 16532  0557  0021               	movlb	1	; select bank1
 16533  0558  00A2               	movwf	(___flsub@a+2)^(0+128)
 16534  0559  0022               	movlb	2	; select bank2
 16535  055A  083F               	movf	(logf@hfsq+1)^(0+256),w
 16536  055B  0021               	movlb	1	; select bank1
 16537  055C  00A1               	movwf	(___flsub@a+1)^(0+128)
 16538  055D  0022               	movlb	2	; select bank2
 16539  055E  083E               	movf	logf@hfsq^(0+256),w
 16540  055F  0021               	movlb	1	; select bank1
 16541  0560  00A0               	movwf	___flsub@a^(0+128)
 16542  0561  0022               	movlb	2	; select bank2
 16543  0562  0833               	movf	(_logf$2105+3)^(0+256),w
 16544  0563  0021               	movlb	1	; select bank1
 16545  0564  00A7               	movwf	(___flsub@b+3)^(0+128)
 16546  0565  0022               	movlb	2	; select bank2
 16547  0566  0832               	movf	(_logf$2105+2)^(0+256),w
 16548  0567  0021               	movlb	1	; select bank1
 16549  0568  00A6               	movwf	(___flsub@b+2)^(0+128)
 16550  0569  0022               	movlb	2	; select bank2
 16551  056A  0831               	movf	(_logf$2105+1)^(0+256),w
 16552  056B  0021               	movlb	1	; select bank1
 16553  056C  00A5               	movwf	(___flsub@b+1)^(0+128)
 16554  056D  0022               	movlb	2	; select bank2
 16555  056E  0830               	movf	_logf$2105^(0+256),w
 16556  056F  0021               	movlb	1	; select bank1
 16557  0570  00A4               	movwf	___flsub@b^(0+128)
 16558  0571  31B4  246A  3180   	fcall	___flsub
 16559  0574  0021               	movlb	1	; select bank1
 16560  0575  0823               	movf	(?___flsub+3)^(0+128),w
 16561  0576  0022               	movlb	2	; select bank2
 16562  0577  00B7               	movwf	(_logf$2106+3)^(0+256)
 16563  0578  0021               	movlb	1	; select bank1
 16564  0579  0822               	movf	(?___flsub+2)^(0+128),w
 16565  057A  0022               	movlb	2	; select bank2
 16566  057B  00B6               	movwf	(_logf$2106+2)^(0+256)
 16567  057C  0021               	movlb	1	; select bank1
 16568  057D  0821               	movf	(?___flsub+1)^(0+128),w
 16569  057E  0022               	movlb	2	; select bank2
 16570  057F  00B5               	movwf	(_logf$2106+1)^(0+256)
 16571  0580  0021               	movlb	1	; select bank1
 16572  0581  0820               	movf	?___flsub^(0+128),w
 16573  0582  0022               	movlb	2	; select bank2
 16574  0583  00B4               	movwf	_logf$2106^(0+256)
 16575  0584  085D               	movf	(logf@f+3)^(0+256),w
 16576  0585  0020               	movlb	0	; select bank0
 16577  0586  00DD               	movwf	___fladd@b+3
 16578  0587  0022               	movlb	2	; select bank2
 16579  0588  085C               	movf	(logf@f+2)^(0+256),w
 16580  0589  0020               	movlb	0	; select bank0
 16581  058A  00DC               	movwf	___fladd@b+2
 16582  058B  0022               	movlb	2	; select bank2
 16583  058C  085B               	movf	(logf@f+1)^(0+256),w
 16584  058D  0020               	movlb	0	; select bank0
 16585  058E  00DB               	movwf	___fladd@b+1
 16586  058F  0022               	movlb	2	; select bank2
 16587  0590  085A               	movf	logf@f^(0+256),w
 16588  0591  0020               	movlb	0	; select bank0
 16589  0592  00DA               	movwf	___fladd@b
 16590  0593  0022               	movlb	2	; select bank2
 16591  0594  0837               	movf	(_logf$2106+3)^(0+256),w
 16592  0595  0020               	movlb	0	; select bank0
 16593  0596  00E1               	movwf	___fladd@a+3
 16594  0597  0022               	movlb	2	; select bank2
 16595  0598  0836               	movf	(_logf$2106+2)^(0+256),w
 16596  0599  0020               	movlb	0	; select bank0
 16597  059A  00E0               	movwf	___fladd@a+2
 16598  059B  0022               	movlb	2	; select bank2
 16599  059C  0835               	movf	(_logf$2106+1)^(0+256),w
 16600  059D  0020               	movlb	0	; select bank0
 16601  059E  00DF               	movwf	___fladd@a+1
 16602  059F  0022               	movlb	2	; select bank2
 16603  05A0  0834               	movf	_logf$2106^(0+256),w
 16604  05A1  0020               	movlb	0	; select bank0
 16605  05A2  00DE               	movwf	___fladd@a
 16606  05A3  319E  261E  3180   	fcall	___fladd
 16607  05A6  0020               	movlb	0	; select bank0
 16608  05A7  085D               	movf	?___fladd+3,w
 16609  05A8  0022               	movlb	2	; select bank2
 16610  05A9  00BB               	movwf	(_logf$2107+3)^(0+256)
 16611  05AA  0020               	movlb	0	; select bank0
 16612  05AB  085C               	movf	?___fladd+2,w
 16613  05AC  0022               	movlb	2	; select bank2
 16614  05AD  00BA               	movwf	(_logf$2107+2)^(0+256)
 16615  05AE  0020               	movlb	0	; select bank0
 16616  05AF  085B               	movf	?___fladd+1,w
 16617  05B0  0022               	movlb	2	; select bank2
 16618  05B1  00B9               	movwf	(_logf$2107+1)^(0+256)
 16619  05B2  0020               	movlb	0	; select bank0
 16620  05B3  085A               	movf	?___fladd,w
 16621  05B4  0022               	movlb	2	; select bank2
 16622  05B5  00B8               	movwf	_logf$2107^(0+256)
 16623  05B6  303F               	movlw	63
 16624  05B7  0020               	movlb	0	; select bank0
 16625  05B8  00A9               	movwf	___flmul@b+3
 16626  05B9  3031               	movlw	49
 16627  05BA  00A8               	movwf	___flmul@b+2
 16628  05BB  3071               	movlw	113
 16629  05BC  00A7               	movwf	___flmul@b+1
 16630  05BD  3080               	movlw	128
 16631  05BE  00A6               	movwf	___flmul@b
 16632  05BF  0022               	movlb	2	; select bank2
 16633  05C0  0845               	movf	(logf@dk+3)^(0+256),w
 16634  05C1  0020               	movlb	0	; select bank0
 16635  05C2  00AD               	movwf	___flmul@a+3
 16636  05C3  0022               	movlb	2	; select bank2
 16637  05C4  0844               	movf	(logf@dk+2)^(0+256),w
 16638  05C5  0020               	movlb	0	; select bank0
 16639  05C6  00AC               	movwf	___flmul@a+2
 16640  05C7  0022               	movlb	2	; select bank2
 16641  05C8  0843               	movf	(logf@dk+1)^(0+256),w
 16642  05C9  0020               	movlb	0	; select bank0
 16643  05CA  00AB               	movwf	___flmul@a+1
 16644  05CB  0022               	movlb	2	; select bank2
 16645  05CC  0842               	movf	logf@dk^(0+256),w
 16646  05CD  0020               	movlb	0	; select bank0
 16647  05CE  00AA               	movwf	___flmul@a
 16648  05CF  3190  2023  3180   	fcall	___flmul
 16649  05D2  0020               	movlb	0	; select bank0
 16650  05D3  0829               	movf	?___flmul+3,w
 16651  05D4  00DD               	movwf	___fladd@b+3
 16652  05D5  0828               	movf	?___flmul+2,w
 16653  05D6  00DC               	movwf	___fladd@b+2
 16654  05D7  0827               	movf	?___flmul+1,w
 16655  05D8  00DB               	movwf	___fladd@b+1
 16656  05D9  0826               	movf	?___flmul,w
 16657  05DA  00DA               	movwf	___fladd@b
 16658  05DB  0022               	movlb	2	; select bank2
 16659  05DC  083B               	movf	(_logf$2107+3)^(0+256),w
 16660  05DD  0020               	movlb	0	; select bank0
 16661  05DE  00E1               	movwf	___fladd@a+3
 16662  05DF  0022               	movlb	2	; select bank2
 16663  05E0  083A               	movf	(_logf$2107+2)^(0+256),w
 16664  05E1  0020               	movlb	0	; select bank0
 16665  05E2  00E0               	movwf	___fladd@a+2
 16666  05E3  0022               	movlb	2	; select bank2
 16667  05E4  0839               	movf	(_logf$2107+1)^(0+256),w
 16668  05E5  0020               	movlb	0	; select bank0
 16669  05E6  00DF               	movwf	___fladd@a+1
 16670  05E7  0022               	movlb	2	; select bank2
 16671  05E8  0838               	movf	_logf$2107^(0+256),w
 16672  05E9  0020               	movlb	0	; select bank0
 16673  05EA  00DE               	movwf	___fladd@a
 16674  05EB  319E  261E         	fcall	___fladd
 16675  05ED  0020               	movlb	0	; select bank0
 16676  05EE  085D               	movf	?___fladd+3,w
 16677  05EF  0021               	movlb	1	; select bank1
 16678  05F0  00AB               	movwf	(?_logf+3)^(0+128)
 16679  05F1  0020               	movlb	0	; select bank0
 16680  05F2  085C               	movf	?___fladd+2,w
 16681  05F3  0021               	movlb	1	; select bank1
 16682  05F4  00AA               	movwf	(?_logf+2)^(0+128)
 16683  05F5  0020               	movlb	0	; select bank0
 16684  05F6  085B               	movf	?___fladd+1,w
 16685  05F7  0021               	movlb	1	; select bank1
 16686  05F8  00A9               	movwf	(?_logf+1)^(0+128)
 16687  05F9  0020               	movlb	0	; select bank0
 16688  05FA  085A               	movf	?___fladd,w
 16689  05FB  0021               	movlb	1	; select bank1
 16690  05FC  00A8               	movwf	?_logf^(0+128)
 16691  05FD  0008               	return
 16692  05FE                     __end_of_logf:	
 16693                           
 16694                           	psect	text51
 16695  2C00                     __ptext51:	
 16696 ;; *************** function _updateCurrent *****************
 16697 ;; Defined at:
 16698 ;;		line 195 in file "BQ76920.c"
 16699 ;; Parameters:    Size  Location     Type
 16700 ;;		None
 16701 ;; Auto vars:     Size  Location     Type
 16702 ;;  adcVal          2   21[BANK1 ] int 
 16703 ;;  sys_stat        1    0        struct regSYS_STAT
 16704 ;; Return value:  Size  Location     Type
 16705 ;;                  1    wreg      void 
 16706 ;; Registers used:
 16707 ;;		wreg, status,2, status,0, pclath, cstack
 16708 ;; Tracked objects:
 16709 ;;		On entry : 0/0
 16710 ;;		On exit  : 0/0
 16711 ;;		Unchanged: 0/0
 16712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16714 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16715 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16716 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16717 ;;Total ram usage:        6 bytes
 16718 ;; Hardware stack levels used:    1
 16719 ;; Hardware stack levels required when called:    3
 16720 ;; This function calls:
 16721 ;;		_I2C_writeRegister
 16722 ;;		___fldiv
 16723 ;;		___flmul
 16724 ;;		___flneg
 16725 ;;		___fltol
 16726 ;;		___xxtofl
 16727 ;;		_readRegister
 16728 ;; This function is called by:
 16729 ;;		_AFE_UPDATE
 16730 ;; This function uses a non-reentrant model
 16731 ;;
 16732                           
 16733                           
 16734                           ;psect for function _updateCurrent
 16735  2C00                     _updateCurrent:	
 16736                           
 16737                           ;incstack = 0
 16738                           ; Regs used in _updateCurrent: [wreg+status,2+status,0+pclath+cstack]
 16739  2C00  3018               	movlw	24
 16740  2C01  00F5               	movwf	readRegister@slaveAddress
 16741  2C02  3000               	movlw	0
 16742  2C03  00F6               	movwf	readRegister@slaveAddress+1
 16743  2C04  3000               	movlw	0
 16744  2C05  00F7               	movwf	readRegister@regAddress
 16745  2C06  00F8               	movwf	readRegister@regAddress+1
 16746  2C07  31B4  249F  31AC   	fcall	_readRegister
 16747                           
 16748                           ;BQ76920.c: 202:     adcVal = (readRegister(0x18, 0x32) << 8)| readRegister(0x18, 0x33);
 16749  2C0A  3018               	movlw	24
 16750  2C0B  00F5               	movwf	readRegister@slaveAddress
 16751  2C0C  3000               	movlw	0
 16752  2C0D  00F6               	movwf	readRegister@slaveAddress+1
 16753  2C0E  3032               	movlw	50
 16754  2C0F  00F7               	movwf	readRegister@regAddress
 16755  2C10  3000               	movlw	0
 16756  2C11  00F8               	movwf	readRegister@regAddress+1
 16757  2C12  31B4  249F  31AC   	fcall	_readRegister
 16758  2C15  0875               	movf	?_readRegister,w
 16759  2C16  0021               	movlb	1	; select bank1
 16760  2C17  00B1               	movwf	??_updateCurrent^(0+128)
 16761  2C18  0876               	movf	?_readRegister+1,w
 16762  2C19  00B2               	movwf	(??_updateCurrent^(0+128)+1)
 16763  2C1A  0831               	movf	??_updateCurrent^(0+128),w
 16764  2C1B  00B2               	movwf	(??_updateCurrent^(0+128)+1)
 16765  2C1C  01B1               	clrf	??_updateCurrent^(0+128)
 16766  2C1D  3018               	movlw	24
 16767  2C1E  00F5               	movwf	readRegister@slaveAddress
 16768  2C1F  3000               	movlw	0
 16769  2C20  00F6               	movwf	readRegister@slaveAddress+1
 16770  2C21  3033               	movlw	51
 16771  2C22  00F7               	movwf	readRegister@regAddress
 16772  2C23  3000               	movlw	0
 16773  2C24  00F8               	movwf	readRegister@regAddress+1
 16774  2C25  31B4  249F  31AC   	fcall	_readRegister
 16775  2C28  0875               	movf	?_readRegister,w
 16776  2C29  0021               	movlb	1	; select bank1
 16777  2C2A  0431               	iorwf	??_updateCurrent^(0+128),w
 16778  2C2B  00B5               	movwf	updateCurrent@adcVal^(0+128)
 16779  2C2C  0876               	movf	?_readRegister+1,w
 16780  2C2D  0432               	iorwf	(??_updateCurrent+1)^(0+128),w
 16781  2C2E  00B6               	movwf	(updateCurrent@adcVal+1)^(0+128)
 16782                           
 16783                           ;BQ76920.c: 203:     batCurrent = -(adcVal * 8.44 / 19.6);
 16784  2C2F  0835               	movf	updateCurrent@adcVal^(0+128),w
 16785  2C30  00F1               	movwf	___xxtofl@val
 16786  2C31  0836               	movf	(updateCurrent@adcVal+1)^(0+128),w
 16787  2C32  00F2               	movwf	___xxtofl@val+1
 16788  2C33  0D89               	rlf	9,f
 16789  2C34  3B89               	subwfb	9,f
 16790  2C35  0989               	comf	9,f
 16791  2C36  00F3               	movwf	___xxtofl@val+2
 16792  2C37  00F4               	movwf	___xxtofl@val+3
 16793  2C38  3001               	movlw	1
 16794  2C39  31A9  216C  31AC   	fcall	___xxtofl
 16795  2C3C  0874               	movf	?___xxtofl+3,w
 16796  2C3D  0020               	movlb	0	; select bank0
 16797  2C3E  00AD               	movwf	___flmul@a+3
 16798  2C3F  0873               	movf	?___xxtofl+2,w
 16799  2C40  00AC               	movwf	___flmul@a+2
 16800  2C41  0872               	movf	?___xxtofl+1,w
 16801  2C42  00AB               	movwf	___flmul@a+1
 16802  2C43  0871               	movf	?___xxtofl,w
 16803  2C44  00AA               	movwf	___flmul@a
 16804  2C45  3041               	movlw	65
 16805  2C46  00A9               	movwf	___flmul@b+3
 16806  2C47  3007               	movlw	7
 16807  2C48  00A8               	movwf	___flmul@b+2
 16808  2C49  300A               	movlw	10
 16809  2C4A  00A7               	movwf	___flmul@b+1
 16810  2C4B  303D               	movlw	61
 16811  2C4C  00A6               	movwf	___flmul@b
 16812  2C4D  3190  2023  31AC   	fcall	___flmul
 16813  2C50  0020               	movlb	0	; select bank0
 16814  2C51  0829               	movf	?___flmul+3,w
 16815  2C52  00C7               	movwf	___fldiv@b+3
 16816  2C53  0828               	movf	?___flmul+2,w
 16817  2C54  00C6               	movwf	___fldiv@b+2
 16818  2C55  0827               	movf	?___flmul+1,w
 16819  2C56  00C5               	movwf	___fldiv@b+1
 16820  2C57  0826               	movf	?___flmul,w
 16821  2C58  00C4               	movwf	___fldiv@b
 16822  2C59  3041               	movlw	65
 16823  2C5A  00C3               	movwf	___fldiv@a+3
 16824  2C5B  309C               	movlw	156
 16825  2C5C  00C2               	movwf	___fldiv@a+2
 16826  2C5D  30CC               	movlw	204
 16827  2C5E  00C1               	movwf	___fldiv@a+1
 16828  2C5F  30CD               	movlw	205
 16829  2C60  00C0               	movwf	___fldiv@a
 16830  2C61  319B  2300  31AC   	fcall	___fldiv
 16831  2C64  0020               	movlb	0	; select bank0
 16832  2C65  0843               	movf	?___fldiv+3,w
 16833  2C66  00DD               	movwf	___flneg@f1+3
 16834  2C67  0842               	movf	?___fldiv+2,w
 16835  2C68  00DC               	movwf	___flneg@f1+2
 16836  2C69  0841               	movf	?___fldiv+1,w
 16837  2C6A  00DB               	movwf	___flneg@f1+1
 16838  2C6B  0840               	movf	?___fldiv,w
 16839  2C6C  00DA               	movwf	___flneg@f1
 16840  2C6D  31B1  2188  31AC   	fcall	___flneg
 16841  2C70  0020               	movlb	0	; select bank0
 16842  2C71  085D               	movf	?___flneg+3,w
 16843  2C72  0021               	movlb	1	; select bank1
 16844  2C73  00AB               	movwf	(___fltol@f1+3)^(0+128)
 16845  2C74  0020               	movlb	0	; select bank0
 16846  2C75  085C               	movf	?___flneg+2,w
 16847  2C76  0021               	movlb	1	; select bank1
 16848  2C77  00AA               	movwf	(___fltol@f1+2)^(0+128)
 16849  2C78  0020               	movlb	0	; select bank0
 16850  2C79  085B               	movf	?___flneg+1,w
 16851  2C7A  0021               	movlb	1	; select bank1
 16852  2C7B  00A9               	movwf	(___fltol@f1+1)^(0+128)
 16853  2C7C  0020               	movlb	0	; select bank0
 16854  2C7D  085A               	movf	?___flneg,w
 16855  2C7E  0021               	movlb	1	; select bank1
 16856  2C7F  00A8               	movwf	___fltol@f1^(0+128)
 16857  2C80  31B6  262A  31AC   	fcall	___fltol
 16858  2C83  0021               	movlb	1	; select bank1
 16859  2C84  082B               	movf	(?___fltol+3)^(0+128),w
 16860  2C85  0023               	movlb	3	; select bank3
 16861  2C86  00CD               	movwf	(_batCurrent+3)^(0+384)
 16862  2C87  0021               	movlb	1	; select bank1
 16863  2C88  082A               	movf	(?___fltol+2)^(0+128),w
 16864  2C89  0023               	movlb	3	; select bank3
 16865  2C8A  00CC               	movwf	(_batCurrent+2)^(0+384)
 16866  2C8B  0021               	movlb	1	; select bank1
 16867  2C8C  0829               	movf	(?___fltol+1)^(0+128),w
 16868  2C8D  0023               	movlb	3	; select bank3
 16869  2C8E  00CB               	movwf	(_batCurrent+1)^(0+384)
 16870  2C8F  0021               	movlb	1	; select bank1
 16871  2C90  0828               	movf	?___fltol^(0+128),w
 16872  2C91  0023               	movlb	3	; select bank3
 16873  2C92  00CA               	movwf	_batCurrent^(0+384)
 16874                           
 16875                           ;BQ76920.c: 205:     if (batCurrent > -10 && batCurrent < 10)
 16876  2C93  1FCD               	btfss	(_batCurrent+3)^(0+384),7
 16877  2C94  2C9F               	goto	l7449
 16878  2C95  30F7               	movlw	247
 16879  2C96  024A               	subwf	_batCurrent^(0+384),w
 16880  2C97  30FF               	movlw	255
 16881  2C98  3B4B               	subwfb	(_batCurrent+1)^(0+384),w
 16882  2C99  30FF               	movlw	255
 16883  2C9A  3B4C               	subwfb	(_batCurrent+2)^(0+384),w
 16884  2C9B  30FF               	movlw	255
 16885  2C9C  3B4D               	subwfb	(_batCurrent+3)^(0+384),w
 16886  2C9D  1C03               	btfss	3,0
 16887  2C9E  2CB6               	goto	l7453
 16888  2C9F                     l7449:	
 16889  2C9F  1BCD               	btfsc	(_batCurrent+3)^(0+384),7
 16890  2CA0  2CAE               	goto	l7451
 16891  2CA1  084D               	movf	(_batCurrent+3)^(0+384),w
 16892  2CA2  1D03               	btfss	3,2
 16893  2CA3  2CB6               	goto	l7453
 16894  2CA4  084C               	movf	(_batCurrent+2)^(0+384),w
 16895  2CA5  1D03               	btfss	3,2
 16896  2CA6  2CB6               	goto	l7453
 16897  2CA7  084B               	movf	(_batCurrent+1)^(0+384),w
 16898  2CA8  1D03               	btfss	3,2
 16899  2CA9  2CB6               	goto	l7453
 16900  2CAA  300A               	movlw	10
 16901  2CAB  024A               	subwf	_batCurrent^(0+384),w
 16902  2CAC  1803               	btfsc	3,0
 16903  2CAD  2CB6               	goto	l7453
 16904  2CAE                     l7451:	
 16905                           
 16906                           ;BQ76920.c: 206:     {;BQ76920.c: 207:       batCurrent = 0;
 16907  2CAE  3000               	movlw	0
 16908  2CAF  00CD               	movwf	(_batCurrent+3)^(0+384)
 16909  2CB0  3000               	movlw	0
 16910  2CB1  00CC               	movwf	(_batCurrent+2)^(0+384)
 16911  2CB2  3000               	movlw	0
 16912  2CB3  00CB               	movwf	(_batCurrent+1)^(0+384)
 16913  2CB4  3000               	movlw	0
 16914  2CB5  00CA               	movwf	_batCurrent^(0+384)
 16915  2CB6                     l7453:	
 16916                           
 16917                           ;BQ76920.c: 210:     I2C_writeRegister(0x18, 0x00, 0x80);
 16918  2CB6  3018               	movlw	24
 16919  2CB7  00F5               	movwf	I2C_writeRegister@slaveAddress
 16920  2CB8  3000               	movlw	0
 16921  2CB9  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16922  2CBA  3000               	movlw	0
 16923  2CBB  00F7               	movwf	I2C_writeRegister@regAddress
 16924  2CBC  00F8               	movwf	I2C_writeRegister@regAddress+1
 16925  2CBD  3080               	movlw	128
 16926  2CBE  00F9               	movwf	I2C_writeRegister@data
 16927  2CBF  3000               	movlw	0
 16928  2CC0  00FA               	movwf	I2C_writeRegister@data+1
 16929  2CC1  31B2  22CE         	fcall	_I2C_writeRegister
 16930  2CC3  0008               	return
 16931  2CC4                     __end_of_updateCurrent:	
 16932                           
 16933                           	psect	text52
 16934  3188                     __ptext52:	
 16935 ;; *************** function ___flneg *****************
 16936 ;; Defined at:
 16937 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
 16938 ;; Parameters:    Size  Location     Type
 16939 ;;  f1              4   58[BANK0 ] void 
 16940 ;; Auto vars:     Size  Location     Type
 16941 ;;		None
 16942 ;; Return value:  Size  Location     Type
 16943 ;;                  4   58[BANK0 ] void 
 16944 ;; Registers used:
 16945 ;;		wreg
 16946 ;; Tracked objects:
 16947 ;;		On entry : 0/0
 16948 ;;		On exit  : 0/0
 16949 ;;		Unchanged: 0/0
 16950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16951 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16954 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16955 ;;Total ram usage:        4 bytes
 16956 ;; Hardware stack levels used:    1
 16957 ;; Hardware stack levels required when called:    1
 16958 ;; This function calls:
 16959 ;;		Nothing
 16960 ;; This function is called by:
 16961 ;;		_updateCurrent
 16962 ;; This function uses a non-reentrant model
 16963 ;;
 16964                           
 16965                           
 16966                           ;psect for function ___flneg
 16967  3188                     ___flneg:	
 16968                           
 16969                           ;incstack = 0
 16970                           ; Regs used in ___flneg: [wreg]
 16971  3188  0020               	movlb	0	; select bank0
 16972  3189  085D               	movf	___flneg@f1+3,w
 16973  318A  045C               	iorwf	___flneg@f1+2,w
 16974  318B  045B               	iorwf	___flneg@f1+1,w
 16975  318C  045A               	iorwf	___flneg@f1,w
 16976  318D  1903               	skipnz
 16977  318E  0008               	return
 16978  318F  3080               	movlw	128
 16979  3190  06DD               	xorwf	___flneg@f1+3,f
 16980  3191  0008               	return
 16981  3192                     __end_of___flneg:	
 16982                           
 16983                           	psect	text53
 16984  350C                     __ptext53:	
 16985 ;; *************** function _enableDischarging *****************
 16986 ;; Defined at:
 16987 ;;		line 286 in file "BQ76920.c"
 16988 ;; Parameters:    Size  Location     Type
 16989 ;;  enable          2    0[BANK0 ] unsigned int 
 16990 ;; Auto vars:     Size  Location     Type
 16991 ;;  sys_ctrl2       1   11[COMMON] unsigned char 
 16992 ;; Return value:  Size  Location     Type
 16993 ;;                  1    wreg      void 
 16994 ;; Registers used:
 16995 ;;		wreg, status,2, status,0, pclath, cstack
 16996 ;; Tracked objects:
 16997 ;;		On entry : 0/0
 16998 ;;		On exit  : 0/0
 16999 ;;		Unchanged: 0/0
 17000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17001 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17002 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17003 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17004 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17005 ;;Total ram usage:        5 bytes
 17006 ;; Hardware stack levels used:    1
 17007 ;; Hardware stack levels required when called:    3
 17008 ;; This function calls:
 17009 ;;		_I2C_writeRegister
 17010 ;;		_readRegister
 17011 ;; This function is called by:
 17012 ;;		_AFE_UPDATE
 17013 ;; This function uses a non-reentrant model
 17014 ;;
 17015                           
 17016                           
 17017                           ;psect for function _enableDischarging
 17018  350C                     _enableDischarging:	
 17019                           
 17020                           ;BQ76920.c: 287:     uint8_t sys_ctrl2;;BQ76920.c: 288:     sys_ctrl2 = readRegister(0x1
      +                          8, 0x05);
 17021                           
 17022                           ;incstack = 0
 17023                           ; Regs used in _enableDischarging: [wreg+status,2+status,0+pclath+cstack]
 17024  350C  3018               	movlw	24
 17025  350D  00F5               	movwf	readRegister@slaveAddress
 17026  350E  3000               	movlw	0
 17027  350F  00F6               	movwf	readRegister@slaveAddress+1
 17028  3510  3005               	movlw	5
 17029  3511  00F7               	movwf	readRegister@regAddress
 17030  3512  3000               	movlw	0
 17031  3513  00F8               	movwf	readRegister@regAddress+1
 17032  3514  31B4  249F  31B5   	fcall	_readRegister
 17033  3517  0875               	movf	?_readRegister,w
 17034  3518  0020               	movlb	0	; select bank0
 17035  3519  00A2               	movwf	??_enableDischarging
 17036  351A  0822               	movf	??_enableDischarging,w
 17037  351B  00FB               	movwf	enableDischarging@sys_ctrl2
 17038                           
 17039                           ;BQ76920.c: 289:     if(enable){
 17040  351C  0820               	movf	enableDischarging@enable,w
 17041  351D  0421               	iorwf	enableDischarging@enable+1,w
 17042  351E  1903               	btfsc	3,2
 17043  351F  2D30               	goto	l7499
 17044                           
 17045                           ;BQ76920.c: 290:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 | 0x02);
 17046  3520  3018               	movlw	24
 17047  3521  00F5               	movwf	I2C_writeRegister@slaveAddress
 17048  3522  3000               	movlw	0
 17049  3523  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 17050  3524  3005               	movlw	5
 17051  3525  00F7               	movwf	I2C_writeRegister@regAddress
 17052  3526  3000               	movlw	0
 17053  3527  00F8               	movwf	I2C_writeRegister@regAddress+1
 17054  3528  3002               	movlw	2
 17055  3529  047B               	iorwf	enableDischarging@sys_ctrl2,w
 17056  352A  00F9               	movwf	I2C_writeRegister@data
 17057  352B  3000               	movlw	0
 17058  352C  00FA               	movwf	I2C_writeRegister@data+1
 17059  352D  31B2  22CE         	fcall	_I2C_writeRegister
 17060                           
 17061                           ;BQ76920.c: 291:     }else{
 17062  352F  0008               	return
 17063  3530                     l7499:	
 17064                           
 17065                           ;BQ76920.c: 292:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 & ~(0x02));
 17066  3530  3018               	movlw	24
 17067  3531  00F5               	movwf	I2C_writeRegister@slaveAddress
 17068  3532  3000               	movlw	0
 17069  3533  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 17070  3534  3005               	movlw	5
 17071  3535  00F7               	movwf	I2C_writeRegister@regAddress
 17072  3536  3000               	movlw	0
 17073  3537  00F8               	movwf	I2C_writeRegister@regAddress+1
 17074  3538  087B               	movf	enableDischarging@sys_ctrl2,w
 17075  3539  39FD               	andlw	253
 17076  353A  00A2               	movwf	??_enableDischarging
 17077  353B  01A3               	clrf	??_enableDischarging+1
 17078  353C  0822               	movf	??_enableDischarging,w
 17079  353D  00F9               	movwf	I2C_writeRegister@data
 17080  353E  0823               	movf	??_enableDischarging+1,w
 17081  353F  00FA               	movwf	I2C_writeRegister@data+1
 17082  3540  31B2  22CE         	fcall	_I2C_writeRegister
 17083  3542  0008               	return
 17084  3543                     __end_of_enableDischarging:	
 17085                           
 17086                           	psect	text54
 17087  34D5                     __ptext54:	
 17088 ;; *************** function _enableCharging *****************
 17089 ;; Defined at:
 17090 ;;		line 296 in file "BQ76920.c"
 17091 ;; Parameters:    Size  Location     Type
 17092 ;;  enable          2    0[BANK0 ] unsigned int 
 17093 ;; Auto vars:     Size  Location     Type
 17094 ;;  sys_ctrl2       1   11[COMMON] unsigned char 
 17095 ;; Return value:  Size  Location     Type
 17096 ;;                  1    wreg      void 
 17097 ;; Registers used:
 17098 ;;		wreg, status,2, status,0, pclath, cstack
 17099 ;; Tracked objects:
 17100 ;;		On entry : 0/0
 17101 ;;		On exit  : 0/0
 17102 ;;		Unchanged: 0/0
 17103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17104 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17105 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17106 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17107 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17108 ;;Total ram usage:        5 bytes
 17109 ;; Hardware stack levels used:    1
 17110 ;; Hardware stack levels required when called:    3
 17111 ;; This function calls:
 17112 ;;		_I2C_writeRegister
 17113 ;;		_readRegister
 17114 ;; This function is called by:
 17115 ;;		_AFE_UPDATE
 17116 ;; This function uses a non-reentrant model
 17117 ;;
 17118                           
 17119                           
 17120                           ;psect for function _enableCharging
 17121  34D5                     _enableCharging:	
 17122                           
 17123                           ;BQ76920.c: 297:     uint8_t sys_ctrl2;;BQ76920.c: 298:     sys_ctrl2 = readRegister(0x1
      +                          8, 0x05);
 17124                           
 17125                           ;incstack = 0
 17126                           ; Regs used in _enableCharging: [wreg+status,2+status,0+pclath+cstack]
 17127  34D5  3018               	movlw	24
 17128  34D6  00F5               	movwf	readRegister@slaveAddress
 17129  34D7  3000               	movlw	0
 17130  34D8  00F6               	movwf	readRegister@slaveAddress+1
 17131  34D9  3005               	movlw	5
 17132  34DA  00F7               	movwf	readRegister@regAddress
 17133  34DB  3000               	movlw	0
 17134  34DC  00F8               	movwf	readRegister@regAddress+1
 17135  34DD  31B4  249F  31B4   	fcall	_readRegister
 17136  34E0  0875               	movf	?_readRegister,w
 17137  34E1  0020               	movlb	0	; select bank0
 17138  34E2  00A2               	movwf	??_enableCharging
 17139  34E3  0822               	movf	??_enableCharging,w
 17140  34E4  00FB               	movwf	enableCharging@sys_ctrl2
 17141                           
 17142                           ;BQ76920.c: 299:     if(enable){
 17143  34E5  0820               	movf	enableCharging@enable,w
 17144  34E6  0421               	iorwf	enableCharging@enable+1,w
 17145  34E7  1903               	btfsc	3,2
 17146  34E8  2CF9               	goto	l7507
 17147                           
 17148                           ;BQ76920.c: 300:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 | 0x01);
 17149  34E9  3018               	movlw	24
 17150  34EA  00F5               	movwf	I2C_writeRegister@slaveAddress
 17151  34EB  3000               	movlw	0
 17152  34EC  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 17153  34ED  3005               	movlw	5
 17154  34EE  00F7               	movwf	I2C_writeRegister@regAddress
 17155  34EF  3000               	movlw	0
 17156  34F0  00F8               	movwf	I2C_writeRegister@regAddress+1
 17157  34F1  3001               	movlw	1
 17158  34F2  047B               	iorwf	enableCharging@sys_ctrl2,w
 17159  34F3  00F9               	movwf	I2C_writeRegister@data
 17160  34F4  3000               	movlw	0
 17161  34F5  00FA               	movwf	I2C_writeRegister@data+1
 17162  34F6  31B2  22CE         	fcall	_I2C_writeRegister
 17163                           
 17164                           ;BQ76920.c: 301:     }else{
 17165  34F8  0008               	return
 17166  34F9                     l7507:	
 17167                           
 17168                           ;BQ76920.c: 302:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 & ~(0x01));
 17169  34F9  3018               	movlw	24
 17170  34FA  00F5               	movwf	I2C_writeRegister@slaveAddress
 17171  34FB  3000               	movlw	0
 17172  34FC  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 17173  34FD  3005               	movlw	5
 17174  34FE  00F7               	movwf	I2C_writeRegister@regAddress
 17175  34FF  3000               	movlw	0
 17176  3500  00F8               	movwf	I2C_writeRegister@regAddress+1
 17177  3501  087B               	movf	enableCharging@sys_ctrl2,w
 17178  3502  39FE               	andlw	254
 17179  3503  00A2               	movwf	??_enableCharging
 17180  3504  01A3               	clrf	??_enableCharging+1
 17181  3505  0822               	movf	??_enableCharging,w
 17182  3506  00F9               	movwf	I2C_writeRegister@data
 17183  3507  0823               	movf	??_enableCharging+1,w
 17184  3508  00FA               	movwf	I2C_writeRegister@data+1
 17185  3509  31B2  22CE         	fcall	_I2C_writeRegister
 17186  350B  0008               	return
 17187  350C                     __end_of_enableCharging:	
 17188                           
 17189                           	psect	text55
 17190  349F                     __ptext55:	
 17191 ;; *************** function _readRegister *****************
 17192 ;; Defined at:
 17193 ;;		line 115 in file "I2C.c"
 17194 ;; Parameters:    Size  Location     Type
 17195 ;;  slaveAddress    2    5[COMMON] int 
 17196 ;;  regAddress      2    7[COMMON] int 
 17197 ;; Auto vars:     Size  Location     Type
 17198 ;;  recievedData    2    9[COMMON] int 
 17199 ;; Return value:  Size  Location     Type
 17200 ;;                  2    5[COMMON] int 
 17201 ;; Registers used:
 17202 ;;		wreg, status,2, status,0, pclath, cstack
 17203 ;; Tracked objects:
 17204 ;;		On entry : 0/0
 17205 ;;		On exit  : 0/0
 17206 ;;		Unchanged: 0/0
 17207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17208 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17209 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17211 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17212 ;;Total ram usage:        6 bytes
 17213 ;; Hardware stack levels used:    1
 17214 ;; Hardware stack levels required when called:    2
 17215 ;; This function calls:
 17216 ;;		_read_I2C_data
 17217 ;;		_send_I2C_NACK
 17218 ;;		_send_I2C_controlByte
 17219 ;;		_send_I2C_data
 17220 ;;		_send_I2C_startBit
 17221 ;;		_send_I2C_stopBit
 17222 ;; This function is called by:
 17223 ;;		_beginAFEcommunication
 17224 ;;		_setCellUndervoltageProtection
 17225 ;;		_setCellOvervoltageProtection
 17226 ;;		_updateCurrent
 17227 ;;		_updateVoltages
 17228 ;;		_updateTemperatures
 17229 ;;		_enableDischarging
 17230 ;;		_enableCharging
 17231 ;;		_printcellParameters
 17232 ;;		_printotAFERegisters
 17233 ;; This function uses a non-reentrant model
 17234 ;;
 17235                           
 17236                           
 17237                           ;psect for function _readRegister
 17238  349F                     _readRegister:	
 17239                           
 17240                           ;I2C.c: 116:     int recievedData;;I2C.c: 117:     send_I2C_startBit();
 17241                           
 17242                           ;incstack = 0
 17243                           ; Regs used in _readRegister: [wreg+status,2+status,0+pclath+cstack]
 17244  349F  31B1  2153  31B4   	fcall	_send_I2C_startBit
 17245                           
 17246                           ;I2C.c: 118:     send_I2C_controlByte(slaveAddress, 0);
 17247  34A2  0876               	movf	readRegister@slaveAddress+1,w
 17248  34A3  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 17249  34A4  0875               	movf	readRegister@slaveAddress,w
 17250  34A5  00F1               	movwf	send_I2C_controlByte@BlockAddress
 17251  34A6  3000               	movlw	0
 17252  34A7  00F3               	movwf	send_I2C_controlByte@RW_bit
 17253  34A8  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 17254  34A9  31B1  217E  31B4   	fcall	_send_I2C_controlByte
 17255                           
 17256                           ;I2C.c: 119:     send_I2C_data(regAddress);
 17257  34AC  0878               	movf	readRegister@regAddress+1,w
 17258  34AD  00F2               	movwf	send_I2C_data@databyte+1
 17259  34AE  0877               	movf	readRegister@regAddress,w
 17260  34AF  00F1               	movwf	send_I2C_data@databyte
 17261  34B0  31B1  216C  31B4   	fcall	_send_I2C_data
 17262                           
 17263                           ;I2C.c: 120:     send_I2C_stopBit();
 17264  34B3  31B1  215B  31B4   	fcall	_send_I2C_stopBit
 17265                           
 17266                           ;I2C.c: 121:     send_I2C_startBit();
 17267  34B6  31B1  2153  31B4   	fcall	_send_I2C_startBit
 17268                           
 17269                           ;I2C.c: 122:     send_I2C_controlByte(slaveAddress, 1);
 17270  34B9  0876               	movf	readRegister@slaveAddress+1,w
 17271  34BA  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 17272  34BB  0875               	movf	readRegister@slaveAddress,w
 17273  34BC  00F1               	movwf	send_I2C_controlByte@BlockAddress
 17274  34BD  3001               	movlw	1
 17275  34BE  00F3               	movwf	send_I2C_controlByte@RW_bit
 17276  34BF  3000               	movlw	0
 17277  34C0  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 17278  34C1  31B1  217E  31B4   	fcall	_send_I2C_controlByte
 17279                           
 17280                           ;I2C.c: 123:     recievedData = read_I2C_data();
 17281  34C4  31B1  21C3  31B4   	fcall	_read_I2C_data
 17282  34C7  0872               	movf	?_read_I2C_data+1,w
 17283  34C8  00FA               	movwf	readRegister@recievedData+1
 17284  34C9  0871               	movf	?_read_I2C_data,w
 17285  34CA  00F9               	movwf	readRegister@recievedData
 17286                           
 17287                           ;I2C.c: 124:     send_I2C_NACK();
 17288  34CB  31B1  2175  31B4   	fcall	_send_I2C_NACK
 17289                           
 17290                           ;I2C.c: 125:     send_I2C_stopBit();
 17291  34CE  31B1  215B         	fcall	_send_I2C_stopBit
 17292                           
 17293                           ;I2C.c: 126:     return recievedData;
 17294  34D0  087A               	movf	readRegister@recievedData+1,w
 17295  34D1  00F6               	movwf	?_readRegister+1
 17296  34D2  0879               	movf	readRegister@recievedData,w
 17297  34D3  00F5               	movwf	?_readRegister
 17298  34D4  0008               	return
 17299  34D5                     __end_of_readRegister:	
 17300                           
 17301                           	psect	text56
 17302  3175                     __ptext56:	
 17303 ;; *************** function _send_I2C_NACK *****************
 17304 ;; Defined at:
 17305 ;;		line 91 in file "I2C.c"
 17306 ;; Parameters:    Size  Location     Type
 17307 ;;		None
 17308 ;; Auto vars:     Size  Location     Type
 17309 ;;		None
 17310 ;; Return value:  Size  Location     Type
 17311 ;;                  1    wreg      void 
 17312 ;; Registers used:
 17313 ;;		None
 17314 ;; Tracked objects:
 17315 ;;		On entry : 0/0
 17316 ;;		On exit  : 0/0
 17317 ;;		Unchanged: 0/0
 17318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17323 ;;Total ram usage:        0 bytes
 17324 ;; Hardware stack levels used:    1
 17325 ;; Hardware stack levels required when called:    1
 17326 ;; This function calls:
 17327 ;;		Nothing
 17328 ;; This function is called by:
 17329 ;;		_readRegister
 17330 ;; This function uses a non-reentrant model
 17331 ;;
 17332                           
 17333                           
 17334                           ;psect for function _send_I2C_NACK
 17335  3175                     _send_I2C_NACK:	
 17336                           
 17337                           ;I2C.c: 92:     PIR1bits.SSP1IF = 0;
 17338                           
 17339                           ;incstack = 0
 17340                           ; Regs used in _send_I2C_NACK: []
 17341  3175  0020               	movlb	0	; select bank0
 17342  3176  1191               	bcf	17,3	;volatile
 17343                           
 17344                           ;I2C.c: 93:     SSPCON2bits.ACKDT = 1;
 17345  3177  0024               	movlb	4	; select bank4
 17346  3178  1696               	bsf	22,5	;volatile
 17347                           
 17348                           ;I2C.c: 94:     SSPCON2bits.ACKEN = 1;
 17349  3179  1616               	bsf	22,4	;volatile
 17350  317A                     l330:	
 17351                           ;I2C.c: 95:     while (!PIR1bits.SSP1IF);
 17352                           
 17353  317A  0020               	movlb	0	; select bank0
 17354  317B  1991               	btfsc	17,3	;volatile
 17355  317C  0008               	return
 17356  317D  297A               	goto	l330
 17357  317E                     __end_of_send_I2C_NACK:	
 17358                           
 17359                           	psect	text57
 17360  31C3                     __ptext57:	
 17361 ;; *************** function _read_I2C_data *****************
 17362 ;; Defined at:
 17363 ;;		line 43 in file "I2C.c"
 17364 ;; Parameters:    Size  Location     Type
 17365 ;;		None
 17366 ;; Auto vars:     Size  Location     Type
 17367 ;;		None
 17368 ;; Return value:  Size  Location     Type
 17369 ;;                  2    1[COMMON] unsigned int 
 17370 ;; Registers used:
 17371 ;;		wreg
 17372 ;; Tracked objects:
 17373 ;;		On entry : 0/0
 17374 ;;		On exit  : 0/0
 17375 ;;		Unchanged: 0/0
 17376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17377 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17379 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17380 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17381 ;;Total ram usage:        4 bytes
 17382 ;; Hardware stack levels used:    1
 17383 ;; Hardware stack levels required when called:    1
 17384 ;; This function calls:
 17385 ;;		Nothing
 17386 ;; This function is called by:
 17387 ;;		_readRegister
 17388 ;; This function uses a non-reentrant model
 17389 ;;
 17390                           
 17391                           
 17392                           ;psect for function _read_I2C_data
 17393  31C3                     _read_I2C_data:	
 17394                           
 17395                           ;I2C.c: 44:     PIR1bits.SSP1IF = 0;
 17396                           
 17397                           ;incstack = 0
 17398                           ; Regs used in _read_I2C_data: [wreg]
 17399  31C3  0020               	movlb	0	; select bank0
 17400  31C4  1191               	bcf	17,3	;volatile
 17401                           
 17402                           ;I2C.c: 45:     SSPCON2bits.RCEN = 1;
 17403  31C5  0024               	movlb	4	; select bank4
 17404  31C6  1596               	bsf	22,3	;volatile
 17405  31C7                     l294:	
 17406                           ;I2C.c: 46:     while (!PIR1bits.SSP1IF);
 17407                           
 17408  31C7  0020               	movlb	0	; select bank0
 17409  31C8  1D91               	btfss	17,3	;volatile
 17410  31C9  29C7               	goto	l294
 17411                           
 17412                           ;I2C.c: 47:     return (SSPBUF);
 17413  31CA  0024               	movlb	4	; select bank4
 17414  31CB  0811               	movf	17,w	;volatile
 17415  31CC  00F3               	movwf	??_read_I2C_data
 17416  31CD  01F4               	clrf	??_read_I2C_data+1
 17417  31CE  0873               	movf	??_read_I2C_data,w
 17418  31CF  00F1               	movwf	?_read_I2C_data
 17419  31D0  0874               	movf	??_read_I2C_data+1,w
 17420  31D1  00F2               	movwf	?_read_I2C_data+1
 17421  31D2  0008               	return
 17422  31D3                     __end_of_read_I2C_data:	
 17423                           
 17424                           	psect	text58
 17425  32CE                     __ptext58:	
 17426 ;; *************** function _I2C_writeRegister *****************
 17427 ;; Defined at:
 17428 ;;		line 104 in file "I2C.c"
 17429 ;; Parameters:    Size  Location     Type
 17430 ;;  slaveAddress    2    5[COMMON] int 
 17431 ;;  regAddress      2    7[COMMON] int 
 17432 ;;  data            2    9[COMMON] int 
 17433 ;; Auto vars:     Size  Location     Type
 17434 ;;		None
 17435 ;; Return value:  Size  Location     Type
 17436 ;;                  1    wreg      void 
 17437 ;; Registers used:
 17438 ;;		wreg, status,2, status,0, pclath, cstack
 17439 ;; Tracked objects:
 17440 ;;		On entry : 0/0
 17441 ;;		On exit  : 0/0
 17442 ;;		Unchanged: 0/0
 17443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17444 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17447 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17448 ;;Total ram usage:        6 bytes
 17449 ;; Hardware stack levels used:    1
 17450 ;; Hardware stack levels required when called:    2
 17451 ;; This function calls:
 17452 ;;		_send_I2C_controlByte
 17453 ;;		_send_I2C_data
 17454 ;;		_send_I2C_startBit
 17455 ;;		_send_I2C_stopBit
 17456 ;; This function is called by:
 17457 ;;		_beginAFEcommunication
 17458 ;;		_setShortCircuitProtection
 17459 ;;		_setOverCurrentDischargeProtection
 17460 ;;		_setCellUndervoltageProtection
 17461 ;;		_setCellOvervoltageProtection
 17462 ;;		_updateCurrent
 17463 ;;		_enableDischarging
 17464 ;;		_enableCharging
 17465 ;; This function uses a non-reentrant model
 17466 ;;
 17467                           
 17468                           
 17469                           ;psect for function _I2C_writeRegister
 17470  32CE                     _I2C_writeRegister:	
 17471                           
 17472                           ;I2C.c: 105:     send_I2C_startBit();
 17473                           
 17474                           ;incstack = 0
 17475                           ; Regs used in _I2C_writeRegister: [wreg+status,2+status,0+pclath+cstack]
 17476  32CE  31B1  2153  31B2   	fcall	_send_I2C_startBit
 17477                           
 17478                           ;I2C.c: 106:     send_I2C_controlByte(slaveAddress, 0);
 17479  32D1  0876               	movf	I2C_writeRegister@slaveAddress+1,w
 17480  32D2  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 17481  32D3  0875               	movf	I2C_writeRegister@slaveAddress,w
 17482  32D4  00F1               	movwf	send_I2C_controlByte@BlockAddress
 17483  32D5  3000               	movlw	0
 17484  32D6  00F3               	movwf	send_I2C_controlByte@RW_bit
 17485  32D7  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 17486  32D8  31B1  217E  31B2   	fcall	_send_I2C_controlByte
 17487                           
 17488                           ;I2C.c: 107:     send_I2C_data(regAddress);
 17489  32DB  0878               	movf	I2C_writeRegister@regAddress+1,w
 17490  32DC  00F2               	movwf	send_I2C_data@databyte+1
 17491  32DD  0877               	movf	I2C_writeRegister@regAddress,w
 17492  32DE  00F1               	movwf	send_I2C_data@databyte
 17493  32DF  31B1  216C  31B2   	fcall	_send_I2C_data
 17494                           
 17495                           ;I2C.c: 108:     send_I2C_data(data);
 17496  32E2  087A               	movf	I2C_writeRegister@data+1,w
 17497  32E3  00F2               	movwf	send_I2C_data@databyte+1
 17498  32E4  0879               	movf	I2C_writeRegister@data,w
 17499  32E5  00F1               	movwf	send_I2C_data@databyte
 17500  32E6  31B1  216C  31B2   	fcall	_send_I2C_data
 17501                           
 17502                           ;I2C.c: 109:     send_I2C_stopBit();
 17503  32E9  31B1  215B         	fcall	_send_I2C_stopBit
 17504  32EB  0008               	return
 17505  32EC                     __end_of_I2C_writeRegister:	
 17506                           
 17507                           	psect	text59
 17508  315B                     __ptext59:	
 17509 ;; *************** function _send_I2C_stopBit *****************
 17510 ;; Defined at:
 17511 ;;		line 78 in file "I2C.c"
 17512 ;; Parameters:    Size  Location     Type
 17513 ;;		None
 17514 ;; Auto vars:     Size  Location     Type
 17515 ;;		None
 17516 ;; Return value:  Size  Location     Type
 17517 ;;                  1    wreg      void 
 17518 ;; Registers used:
 17519 ;;		None
 17520 ;; Tracked objects:
 17521 ;;		On entry : 0/0
 17522 ;;		On exit  : 0/0
 17523 ;;		Unchanged: 0/0
 17524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17529 ;;Total ram usage:        0 bytes
 17530 ;; Hardware stack levels used:    1
 17531 ;; Hardware stack levels required when called:    1
 17532 ;; This function calls:
 17533 ;;		Nothing
 17534 ;; This function is called by:
 17535 ;;		_I2C_writeRegister
 17536 ;;		_readRegister
 17537 ;; This function uses a non-reentrant model
 17538 ;;
 17539                           
 17540                           
 17541                           ;psect for function _send_I2C_stopBit
 17542  315B                     _send_I2C_stopBit:	
 17543                           
 17544                           ;I2C.c: 79:     PIR1bits.SSP1IF = 0;
 17545                           
 17546                           ;incstack = 0
 17547                           ; Regs used in _send_I2C_stopBit: []
 17548  315B  0020               	movlb	0	; select bank0
 17549  315C  1191               	bcf	17,3	;volatile
 17550                           
 17551                           ;I2C.c: 80:     SSPCON2bits.PEN = 1;
 17552  315D  0024               	movlb	4	; select bank4
 17553  315E  1516               	bsf	22,2	;volatile
 17554  315F                     l318:	
 17555                           ;I2C.c: 81:     while (!PIR1bits.SSP1IF);
 17556                           
 17557  315F  0020               	movlb	0	; select bank0
 17558  3160  1991               	btfsc	17,3	;volatile
 17559  3161  0008               	return
 17560  3162  295F               	goto	l318
 17561  3163                     __end_of_send_I2C_stopBit:	
 17562                           
 17563                           	psect	text60
 17564  3153                     __ptext60:	
 17565 ;; *************** function _send_I2C_startBit *****************
 17566 ;; Defined at:
 17567 ;;		line 65 in file "I2C.c"
 17568 ;; Parameters:    Size  Location     Type
 17569 ;;		None
 17570 ;; Auto vars:     Size  Location     Type
 17571 ;;		None
 17572 ;; Return value:  Size  Location     Type
 17573 ;;                  1    wreg      void 
 17574 ;; Registers used:
 17575 ;;		None
 17576 ;; Tracked objects:
 17577 ;;		On entry : 0/0
 17578 ;;		On exit  : 0/0
 17579 ;;		Unchanged: 0/0
 17580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17585 ;;Total ram usage:        0 bytes
 17586 ;; Hardware stack levels used:    1
 17587 ;; Hardware stack levels required when called:    1
 17588 ;; This function calls:
 17589 ;;		Nothing
 17590 ;; This function is called by:
 17591 ;;		_I2C_writeRegister
 17592 ;;		_readRegister
 17593 ;; This function uses a non-reentrant model
 17594 ;;
 17595                           
 17596                           
 17597                           ;psect for function _send_I2C_startBit
 17598  3153                     _send_I2C_startBit:	
 17599                           
 17600                           ;I2C.c: 66:     PIR1bits.SSP1IF = 0;
 17601                           
 17602                           ;incstack = 0
 17603                           ; Regs used in _send_I2C_startBit: []
 17604  3153  0020               	movlb	0	; select bank0
 17605  3154  1191               	bcf	17,3	;volatile
 17606                           
 17607                           ;I2C.c: 67:     SSPCON2bits.SEN = 1;
 17608  3155  0024               	movlb	4	; select bank4
 17609  3156  1416               	bsf	22,0	;volatile
 17610  3157                     l306:	
 17611                           ;I2C.c: 68:     while (!PIR1bits.SSP1IF);
 17612                           
 17613  3157  0020               	movlb	0	; select bank0
 17614  3158  1991               	btfsc	17,3	;volatile
 17615  3159  0008               	return
 17616  315A  2957               	goto	l306
 17617  315B                     __end_of_send_I2C_startBit:	
 17618                           
 17619                           	psect	text61
 17620  316C                     __ptext61:	
 17621 ;; *************** function _send_I2C_data *****************
 17622 ;; Defined at:
 17623 ;;		line 33 in file "I2C.c"
 17624 ;; Parameters:    Size  Location     Type
 17625 ;;  databyte        2    1[COMMON] unsigned int 
 17626 ;; Auto vars:     Size  Location     Type
 17627 ;;		None
 17628 ;; Return value:  Size  Location     Type
 17629 ;;                  1    wreg      void 
 17630 ;; Registers used:
 17631 ;;		wreg
 17632 ;; Tracked objects:
 17633 ;;		On entry : 0/0
 17634 ;;		On exit  : 0/0
 17635 ;;		Unchanged: 0/0
 17636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17637 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17640 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17641 ;;Total ram usage:        2 bytes
 17642 ;; Hardware stack levels used:    1
 17643 ;; Hardware stack levels required when called:    1
 17644 ;; This function calls:
 17645 ;;		Nothing
 17646 ;; This function is called by:
 17647 ;;		_I2C_writeRegister
 17648 ;;		_readRegister
 17649 ;; This function uses a non-reentrant model
 17650 ;;
 17651                           
 17652                           
 17653                           ;psect for function _send_I2C_data
 17654  316C                     _send_I2C_data:	
 17655                           
 17656                           ;I2C.c: 34:     PIR1bits.SSP1IF = 0;
 17657                           
 17658                           ;incstack = 0
 17659                           ; Regs used in _send_I2C_data: [wreg]
 17660  316C  0020               	movlb	0	; select bank0
 17661  316D  1191               	bcf	17,3	;volatile
 17662                           
 17663                           ;I2C.c: 35:     SSPBUF = databyte;
 17664  316E  0871               	movf	send_I2C_data@databyte,w
 17665  316F  0024               	movlb	4	; select bank4
 17666  3170  0091               	movwf	17	;volatile
 17667  3171                     l288:	
 17668                           ;I2C.c: 37:     while (!PIR1bits.SSP1IF);
 17669                           
 17670  3171  0020               	movlb	0	; select bank0
 17671  3172  1991               	btfsc	17,3	;volatile
 17672  3173  0008               	return
 17673  3174  2971               	goto	l288
 17674  3175                     __end_of_send_I2C_data:	
 17675                           
 17676                           	psect	text62
 17677  317E                     __ptext62:	
 17678 ;; *************** function _send_I2C_controlByte *****************
 17679 ;; Defined at:
 17680 ;;		line 53 in file "I2C.c"
 17681 ;; Parameters:    Size  Location     Type
 17682 ;;  BlockAddress    2    1[COMMON] unsigned int 
 17683 ;;  RW_bit          2    3[COMMON] unsigned int 
 17684 ;; Auto vars:     Size  Location     Type
 17685 ;;		None
 17686 ;; Return value:  Size  Location     Type
 17687 ;;                  1    wreg      void 
 17688 ;; Registers used:
 17689 ;;		wreg, status,2, status,0
 17690 ;; Tracked objects:
 17691 ;;		On entry : 0/0
 17692 ;;		On exit  : 0/0
 17693 ;;		Unchanged: 0/0
 17694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17695 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17698 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17699 ;;Total ram usage:        4 bytes
 17700 ;; Hardware stack levels used:    1
 17701 ;; Hardware stack levels required when called:    1
 17702 ;; This function calls:
 17703 ;;		Nothing
 17704 ;; This function is called by:
 17705 ;;		_I2C_writeRegister
 17706 ;;		_readRegister
 17707 ;; This function uses a non-reentrant model
 17708 ;;
 17709                           
 17710                           
 17711                           ;psect for function _send_I2C_controlByte
 17712  317E                     _send_I2C_controlByte:	
 17713                           
 17714                           ;I2C.c: 54:     PIR1bits.SSP1IF = 0;
 17715                           
 17716                           ;incstack = 0
 17717                           ; Regs used in _send_I2C_controlByte: [wreg+status,2+status,0]
 17718  317E  0020               	movlb	0	; select bank0
 17719  317F  1191               	bcf	17,3	;volatile
 17720                           
 17721                           ;I2C.c: 60:     SSPBUF = (((0b0000 << 4) | (BlockAddress << 1)) + RW_bit);
 17722  3180  3571               	lslf	send_I2C_controlByte@BlockAddress,w
 17723  3181  0773               	addwf	send_I2C_controlByte@RW_bit,w
 17724  3182  0024               	movlb	4	; select bank4
 17725  3183  0091               	movwf	17	;volatile
 17726  3184                     l300:	
 17727                           ;I2C.c: 62:     while (!PIR1bits.SSP1IF);
 17728                           
 17729  3184  0020               	movlb	0	; select bank0
 17730  3185  1991               	btfsc	17,3	;volatile
 17731  3186  0008               	return
 17732  3187  2984               	goto	l300
 17733  3188                     __end_of_send_I2C_controlByte:	
 17734                           
 17735                           	psect	text63
 17736  2F24                     __ptext63:	
 17737 ;; *************** function _coulomb_counter *****************
 17738 ;; Defined at:
 17739 ;;		line 38 in file "algorithms.c"
 17740 ;; Parameters:    Size  Location     Type
 17741 ;;		None
 17742 ;; Auto vars:     Size  Location     Type
 17743 ;;  i               2   17[BANK1 ] int 
 17744 ;; Return value:  Size  Location     Type
 17745 ;;                  1    wreg      void 
 17746 ;; Registers used:
 17747 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17748 ;; Tracked objects:
 17749 ;;		On entry : 0/0
 17750 ;;		On exit  : 0/0
 17751 ;;		Unchanged: 0/0
 17752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17754 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17755 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17756 ;;      Totals:         0       2       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17757 ;;Total ram usage:        4 bytes
 17758 ;; Hardware stack levels used:    1
 17759 ;; Hardware stack levels required when called:    3
 17760 ;; This function calls:
 17761 ;;		___fldiv
 17762 ;;		___flmul
 17763 ;;		___flsub
 17764 ;;		___fltol
 17765 ;;		___xxtofl
 17766 ;; This function is called by:
 17767 ;;		_AFE_UPDATE
 17768 ;; This function uses a non-reentrant model
 17769 ;;
 17770                           
 17771                           
 17772                           ;psect for function _coulomb_counter
 17773  2F24                     _coulomb_counter:	
 17774                           
 17775                           ;algorithms.c: 39:     for(int i = 0; i<5;i++){
 17776                           
 17777                           ;incstack = 0
 17778                           ; Regs used in _coulomb_counter: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17779  2F24  0021               	movlb	1	; select bank1
 17780  2F25  01B1               	clrf	coulomb_counter@i^(0+128)
 17781  2F26  01B2               	clrf	(coulomb_counter@i+1)^(0+128)
 17782  2F27                     l6029:	
 17783                           
 17784                           ;algorithms.c: 40:        cellCharge[i] = cellCharge[i] - (batCurrent * (5000/ 3600000.0
      +                          ));
 17785  2F27  0021               	movlb	1	; select bank1
 17786  2F28  3531               	lslf	coulomb_counter@i^(0+128),w
 17787  2F29  3EA0               	addlw	(low (_cellCharge| (0+256)))& (0+255)
 17788  2F2A  0086               	movwf	6
 17789  2F2B  3001               	movlw	1	; select bank3/4
 17790  2F2C  0087               	movwf	7
 17791  2F2D  3F40               	moviw [0]fsr1
 17792  2F2E  0020               	movlb	0	; select bank0
 17793  2F2F  00EE               	movwf	??_coulomb_counter
 17794  2F30  3F41               	moviw [1]fsr1
 17795  2F31  00EF               	movwf	??_coulomb_counter+1
 17796  2F32  086E               	movf	??_coulomb_counter,w
 17797  2F33  00F1               	movwf	___xxtofl@val
 17798  2F34  086F               	movf	??_coulomb_counter+1,w
 17799  2F35  00F2               	movwf	___xxtofl@val+1
 17800  2F36  0D89               	rlf	9,f
 17801  2F37  3B89               	subwfb	9,f
 17802  2F38  0989               	comf	9,f
 17803  2F39  00F3               	movwf	___xxtofl@val+2
 17804  2F3A  00F4               	movwf	___xxtofl@val+3
 17805  2F3B  3001               	movlw	1
 17806  2F3C  31A9  216C  31AF   	fcall	___xxtofl
 17807  2F3F  0874               	movf	?___xxtofl+3,w
 17808  2F40  0021               	movlb	1	; select bank1
 17809  2F41  00A7               	movwf	(___flsub@b+3)^(0+128)
 17810  2F42  0873               	movf	?___xxtofl+2,w
 17811  2F43  00A6               	movwf	(___flsub@b+2)^(0+128)
 17812  2F44  0872               	movf	?___xxtofl+1,w
 17813  2F45  00A5               	movwf	(___flsub@b+1)^(0+128)
 17814  2F46  0871               	movf	?___xxtofl,w
 17815  2F47  00A4               	movwf	___flsub@b^(0+128)
 17816  2F48  0023               	movlb	3	; select bank3
 17817  2F49  084D               	movf	(_batCurrent+3)^(0+384),w
 17818  2F4A  00F4               	movwf	___xxtofl@val+3
 17819  2F4B  084C               	movf	(_batCurrent+2)^(0+384),w
 17820  2F4C  00F3               	movwf	___xxtofl@val+2
 17821  2F4D  084B               	movf	(_batCurrent+1)^(0+384),w
 17822  2F4E  00F2               	movwf	___xxtofl@val+1
 17823  2F4F  084A               	movf	_batCurrent^(0+384),w
 17824  2F50  00F1               	movwf	___xxtofl@val
 17825  2F51  3001               	movlw	1
 17826  2F52  31A9  216C  31AF   	fcall	___xxtofl
 17827  2F55  0874               	movf	?___xxtofl+3,w
 17828  2F56  0020               	movlb	0	; select bank0
 17829  2F57  00AD               	movwf	___flmul@a+3
 17830  2F58  0873               	movf	?___xxtofl+2,w
 17831  2F59  00AC               	movwf	___flmul@a+2
 17832  2F5A  0872               	movf	?___xxtofl+1,w
 17833  2F5B  00AB               	movwf	___flmul@a+1
 17834  2F5C  0871               	movf	?___xxtofl,w
 17835  2F5D  00AA               	movwf	___flmul@a
 17836  2F5E  303A               	movlw	58
 17837  2F5F  00A9               	movwf	___flmul@b+3
 17838  2F60  30B6               	movlw	182
 17839  2F61  00A8               	movwf	___flmul@b+2
 17840  2F62  300B               	movlw	11
 17841  2F63  00A7               	movwf	___flmul@b+1
 17842  2F64  3061               	movlw	97
 17843  2F65  00A6               	movwf	___flmul@b
 17844  2F66  3190  2023  31AF   	fcall	___flmul
 17845  2F69  0020               	movlb	0	; select bank0
 17846  2F6A  0829               	movf	?___flmul+3,w
 17847  2F6B  0021               	movlb	1	; select bank1
 17848  2F6C  00A3               	movwf	(___flsub@a+3)^(0+128)
 17849  2F6D  0020               	movlb	0	; select bank0
 17850  2F6E  0828               	movf	?___flmul+2,w
 17851  2F6F  0021               	movlb	1	; select bank1
 17852  2F70  00A2               	movwf	(___flsub@a+2)^(0+128)
 17853  2F71  0020               	movlb	0	; select bank0
 17854  2F72  0827               	movf	?___flmul+1,w
 17855  2F73  0021               	movlb	1	; select bank1
 17856  2F74  00A1               	movwf	(___flsub@a+1)^(0+128)
 17857  2F75  0020               	movlb	0	; select bank0
 17858  2F76  0826               	movf	?___flmul,w
 17859  2F77  0021               	movlb	1	; select bank1
 17860  2F78  00A0               	movwf	___flsub@a^(0+128)
 17861  2F79  31B4  246A  31AF   	fcall	___flsub
 17862  2F7C  0021               	movlb	1	; select bank1
 17863  2F7D  0823               	movf	(?___flsub+3)^(0+128),w
 17864  2F7E  00AB               	movwf	(___fltol@f1+3)^(0+128)
 17865  2F7F  0822               	movf	(?___flsub+2)^(0+128),w
 17866  2F80  00AA               	movwf	(___fltol@f1+2)^(0+128)
 17867  2F81  0821               	movf	(?___flsub+1)^(0+128),w
 17868  2F82  00A9               	movwf	(___fltol@f1+1)^(0+128)
 17869  2F83  0820               	movf	?___flsub^(0+128),w
 17870  2F84  00A8               	movwf	___fltol@f1^(0+128)
 17871  2F85  31B6  262A  31AF   	fcall	___fltol
 17872  2F88  0021               	movlb	1	; select bank1
 17873  2F89  3531               	lslf	coulomb_counter@i^(0+128),w
 17874  2F8A  3EA0               	addlw	(low (_cellCharge| (0+256)))& (0+255)
 17875  2F8B  0086               	movwf	6
 17876  2F8C  3001               	movlw	1	; select bank3/4
 17877  2F8D  0087               	movwf	7
 17878  2F8E  0828               	movf	?___fltol^(0+128),w
 17879  2F8F  3FC0               	movwi [0]fsr1
 17880  2F90  0829               	movf	(?___fltol+1)^(0+128),w
 17881  2F91  3FC1               	movwi [1]fsr1
 17882                           
 17883                           ;algorithms.c: 41:        cellSOC[i] = ((cellCharge[i] * 100.0 )/samsung_cell_max_charge
      +                          );
 17884  2F92  3531               	lslf	coulomb_counter@i^(0+128),w
 17885  2F93  3EA0               	addlw	(low (_cellCharge| (0+256)))& (0+255)
 17886  2F94  0086               	movwf	6
 17887  2F95  3001               	movlw	1	; select bank3/4
 17888  2F96  0087               	movwf	7
 17889  2F97  3F40               	moviw [0]fsr1
 17890  2F98  0020               	movlb	0	; select bank0
 17891  2F99  00EE               	movwf	??_coulomb_counter
 17892  2F9A  3F41               	moviw [1]fsr1
 17893  2F9B  00EF               	movwf	??_coulomb_counter+1
 17894  2F9C  086E               	movf	??_coulomb_counter,w
 17895  2F9D  00F1               	movwf	___xxtofl@val
 17896  2F9E  086F               	movf	??_coulomb_counter+1,w
 17897  2F9F  00F2               	movwf	___xxtofl@val+1
 17898  2FA0  0D89               	rlf	9,f
 17899  2FA1  3B89               	subwfb	9,f
 17900  2FA2  0989               	comf	9,f
 17901  2FA3  00F3               	movwf	___xxtofl@val+2
 17902  2FA4  00F4               	movwf	___xxtofl@val+3
 17903  2FA5  3001               	movlw	1
 17904  2FA6  31A9  216C  31AF   	fcall	___xxtofl
 17905  2FA9  0874               	movf	?___xxtofl+3,w
 17906  2FAA  0020               	movlb	0	; select bank0
 17907  2FAB  00AD               	movwf	___flmul@a+3
 17908  2FAC  0873               	movf	?___xxtofl+2,w
 17909  2FAD  00AC               	movwf	___flmul@a+2
 17910  2FAE  0872               	movf	?___xxtofl+1,w
 17911  2FAF  00AB               	movwf	___flmul@a+1
 17912  2FB0  0871               	movf	?___xxtofl,w
 17913  2FB1  00AA               	movwf	___flmul@a
 17914  2FB2  3042               	movlw	66
 17915  2FB3  00A9               	movwf	___flmul@b+3
 17916  2FB4  30C8               	movlw	200
 17917  2FB5  00A8               	movwf	___flmul@b+2
 17918  2FB6  3000               	movlw	0
 17919  2FB7  00A7               	movwf	___flmul@b+1
 17920  2FB8  3000               	movlw	0
 17921  2FB9  00A6               	movwf	___flmul@b
 17922  2FBA  3190  2023  31AF   	fcall	___flmul
 17923  2FBD  0020               	movlb	0	; select bank0
 17924  2FBE  0829               	movf	?___flmul+3,w
 17925  2FBF  00C7               	movwf	___fldiv@b+3
 17926  2FC0  0828               	movf	?___flmul+2,w
 17927  2FC1  00C6               	movwf	___fldiv@b+2
 17928  2FC2  0827               	movf	?___flmul+1,w
 17929  2FC3  00C5               	movwf	___fldiv@b+1
 17930  2FC4  0826               	movf	?___flmul,w
 17931  2FC5  00C4               	movwf	___fldiv@b
 17932  2FC6  3045               	movlw	69
 17933  2FC7  00C3               	movwf	___fldiv@a+3
 17934  2FC8  301C               	movlw	28
 17935  2FC9  00C2               	movwf	___fldiv@a+2
 17936  2FCA  3040               	movlw	64
 17937  2FCB  00C1               	movwf	___fldiv@a+1
 17938  2FCC  3000               	movlw	0
 17939  2FCD  00C0               	movwf	___fldiv@a
 17940  2FCE  319B  2300  31AF   	fcall	___fldiv
 17941  2FD1  0020               	movlb	0	; select bank0
 17942  2FD2  0843               	movf	?___fldiv+3,w
 17943  2FD3  0021               	movlb	1	; select bank1
 17944  2FD4  00AB               	movwf	(___fltol@f1+3)^(0+128)
 17945  2FD5  0020               	movlb	0	; select bank0
 17946  2FD6  0842               	movf	?___fldiv+2,w
 17947  2FD7  0021               	movlb	1	; select bank1
 17948  2FD8  00AA               	movwf	(___fltol@f1+2)^(0+128)
 17949  2FD9  0020               	movlb	0	; select bank0
 17950  2FDA  0841               	movf	?___fldiv+1,w
 17951  2FDB  0021               	movlb	1	; select bank1
 17952  2FDC  00A9               	movwf	(___fltol@f1+1)^(0+128)
 17953  2FDD  0020               	movlb	0	; select bank0
 17954  2FDE  0840               	movf	?___fldiv,w
 17955  2FDF  0021               	movlb	1	; select bank1
 17956  2FE0  00A8               	movwf	___fltol@f1^(0+128)
 17957  2FE1  31B6  262A  31AF   	fcall	___fltol
 17958  2FE4  0021               	movlb	1	; select bank1
 17959  2FE5  3531               	lslf	coulomb_counter@i^(0+128),w
 17960  2FE6  3EAA               	addlw	(low (_cellSOC| (0+256)))& (0+255)
 17961  2FE7  0086               	movwf	6
 17962  2FE8  3001               	movlw	1	; select bank3/4
 17963  2FE9  0087               	movwf	7
 17964  2FEA  0828               	movf	?___fltol^(0+128),w
 17965  2FEB  3FC0               	movwi [0]fsr1
 17966  2FEC  0829               	movf	(?___fltol+1)^(0+128),w
 17967  2FED  3FC1               	movwi [1]fsr1
 17968                           
 17969                           ;algorithms.c: 42:      }
 17970  2FEE  3001               	movlw	1
 17971  2FEF  07B1               	addwf	coulomb_counter@i^(0+128),f
 17972  2FF0  3000               	movlw	0
 17973  2FF1  3DB2               	addwfc	(coulomb_counter@i+1)^(0+128),f
 17974  2FF2  0832               	movf	(coulomb_counter@i+1)^(0+128),w
 17975  2FF3  3A80               	xorlw	128
 17976  2FF4  0020               	movlb	0	; select bank0
 17977  2FF5  00EE               	movwf	??_coulomb_counter
 17978  2FF6  3080               	movlw	128
 17979  2FF7  026E               	subwf	??_coulomb_counter,w
 17980  2FF8  1D03               	skipz
 17981  2FF9  2FFD               	goto	u7545
 17982  2FFA  3005               	movlw	5
 17983  2FFB  0021               	movlb	1	; select bank1
 17984  2FFC  0231               	subwf	coulomb_counter@i^(0+128),w
 17985  2FFD                     u7545:	
 17986  2FFD  1803               	btfsc	3,0
 17987  2FFE  0008               	return
 17988  2FFF  2F27               	goto	l6029
 17989  3000                     __end_of_coulomb_counter:	
 17990                           
 17991                           	psect	text64
 17992  346A                     __ptext64:	
 17993 ;; *************** function ___flsub *****************
 17994 ;; Defined at:
 17995 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 17996 ;; Parameters:    Size  Location     Type
 17997 ;;  a               4    0[BANK1 ] void 
 17998 ;;  b               4    4[BANK1 ] void 
 17999 ;; Auto vars:     Size  Location     Type
 18000 ;;		None
 18001 ;; Return value:  Size  Location     Type
 18002 ;;                  4    0[BANK1 ] void 
 18003 ;; Registers used:
 18004 ;;		wreg, status,2, status,0, pclath, cstack
 18005 ;; Tracked objects:
 18006 ;;		On entry : 0/0
 18007 ;;		On exit  : 0/0
 18008 ;;		Unchanged: 0/0
 18009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18010 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18013 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18014 ;;Total ram usage:        8 bytes
 18015 ;; Hardware stack levels used:    1
 18016 ;; Hardware stack levels required when called:    2
 18017 ;; This function calls:
 18018 ;;		___fladd
 18019 ;; This function is called by:
 18020 ;;		_updateTemperatures
 18021 ;;		_coulomb_counter
 18022 ;;		_logf
 18023 ;; This function uses a non-reentrant model
 18024 ;;
 18025                           
 18026                           
 18027                           ;psect for function ___flsub
 18028  346A                     ___flsub:	
 18029                           
 18030                           ;incstack = 0
 18031                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 18032  346A  3080               	movlw	128
 18033  346B  0021               	movlb	1	; select bank1
 18034  346C  06A3               	xorwf	(___flsub@a+3)^(0+128),f
 18035  346D  0827               	movf	(___flsub@b+3)^(0+128),w
 18036  346E  0020               	movlb	0	; select bank0
 18037  346F  00DD               	movwf	___fladd@b+3
 18038  3470  0021               	movlb	1	; select bank1
 18039  3471  0826               	movf	(___flsub@b+2)^(0+128),w
 18040  3472  0020               	movlb	0	; select bank0
 18041  3473  00DC               	movwf	___fladd@b+2
 18042  3474  0021               	movlb	1	; select bank1
 18043  3475  0825               	movf	(___flsub@b+1)^(0+128),w
 18044  3476  0020               	movlb	0	; select bank0
 18045  3477  00DB               	movwf	___fladd@b+1
 18046  3478  0021               	movlb	1	; select bank1
 18047  3479  0824               	movf	___flsub@b^(0+128),w
 18048  347A  0020               	movlb	0	; select bank0
 18049  347B  00DA               	movwf	___fladd@b
 18050  347C  0021               	movlb	1	; select bank1
 18051  347D  0823               	movf	(___flsub@a+3)^(0+128),w
 18052  347E  0020               	movlb	0	; select bank0
 18053  347F  00E1               	movwf	___fladd@a+3
 18054  3480  0021               	movlb	1	; select bank1
 18055  3481  0822               	movf	(___flsub@a+2)^(0+128),w
 18056  3482  0020               	movlb	0	; select bank0
 18057  3483  00E0               	movwf	___fladd@a+2
 18058  3484  0021               	movlb	1	; select bank1
 18059  3485  0821               	movf	(___flsub@a+1)^(0+128),w
 18060  3486  0020               	movlb	0	; select bank0
 18061  3487  00DF               	movwf	___fladd@a+1
 18062  3488  0021               	movlb	1	; select bank1
 18063  3489  0820               	movf	___flsub@a^(0+128),w
 18064  348A  0020               	movlb	0	; select bank0
 18065  348B  00DE               	movwf	___fladd@a
 18066  348C  319E  261E         	fcall	___fladd
 18067  348E  0020               	movlb	0	; select bank0
 18068  348F  085D               	movf	?___fladd+3,w
 18069  3490  0021               	movlb	1	; select bank1
 18070  3491  00A3               	movwf	(?___flsub+3)^(0+128)
 18071  3492  0020               	movlb	0	; select bank0
 18072  3493  085C               	movf	?___fladd+2,w
 18073  3494  0021               	movlb	1	; select bank1
 18074  3495  00A2               	movwf	(?___flsub+2)^(0+128)
 18075  3496  0020               	movlb	0	; select bank0
 18076  3497  085B               	movf	?___fladd+1,w
 18077  3498  0021               	movlb	1	; select bank1
 18078  3499  00A1               	movwf	(?___flsub+1)^(0+128)
 18079  349A  0020               	movlb	0	; select bank0
 18080  349B  085A               	movf	?___fladd,w
 18081  349C  0021               	movlb	1	; select bank1
 18082  349D  00A0               	movwf	?___flsub^(0+128)
 18083  349E  0008               	return
 18084  349F                     __end_of___flsub:	
 18085                           
 18086                           	psect	text65
 18087  1E1E                     __ptext65:	
 18088 ;; *************** function ___fladd *****************
 18089 ;; Defined at:
 18090 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 18091 ;; Parameters:    Size  Location     Type
 18092 ;;  b               4   58[BANK0 ] void 
 18093 ;;  a               4   62[BANK0 ] void 
 18094 ;; Auto vars:     Size  Location     Type
 18095 ;;  grs             1   77[BANK0 ] unsigned char 
 18096 ;;  bexp            1   76[BANK0 ] unsigned char 
 18097 ;;  aexp            1   75[BANK0 ] unsigned char 
 18098 ;;  signs           1   74[BANK0 ] unsigned char 
 18099 ;; Return value:  Size  Location     Type
 18100 ;;                  4   58[BANK0 ] unsigned char 
 18101 ;; Registers used:
 18102 ;;		wreg, status,2, status,0
 18103 ;; Tracked objects:
 18104 ;;		On entry : 0/0
 18105 ;;		On exit  : 0/0
 18106 ;;		Unchanged: 0/0
 18107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18108 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18109 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18110 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18111 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18112 ;;Total ram usage:       20 bytes
 18113 ;; Hardware stack levels used:    1
 18114 ;; Hardware stack levels required when called:    1
 18115 ;; This function calls:
 18116 ;;		Nothing
 18117 ;; This function is called by:
 18118 ;;		_updateVoltages
 18119 ;;		_updateTemperatures
 18120 ;;		___flsub
 18121 ;;		_logf
 18122 ;; This function uses a non-reentrant model
 18123 ;;
 18124                           
 18125                           
 18126                           ;psect for function ___fladd
 18127  1E1E                     ___fladd:	
 18128                           
 18129                           ;incstack = 0
 18130                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 18131  1E1E  0020               	movlb	0	; select bank0
 18132  1E1F  085D               	movf	___fladd@b+3,w
 18133  1E20  3980               	andlw	128
 18134  1E21  00E2               	movwf	??___fladd
 18135  1E22  0862               	movf	??___fladd,w
 18136  1E23  00EA               	movwf	___fladd@signs
 18137  1E24  355D               	lslf	___fladd@b+3,w
 18138  1E25  00E2               	movwf	??___fladd
 18139  1E26  0862               	movf	??___fladd,w
 18140  1E27  00EC               	movwf	___fladd@bexp
 18141  1E28  1BDC               	btfsc	___fladd@b+2,7
 18142  1E29  146C               	bsf	___fladd@bexp,0
 18143  1E2A  086C               	movf	___fladd@bexp,w
 18144  1E2B  1903               	btfsc	3,2
 18145  1E2C  2E3B               	goto	l4993
 18146  1E2D  0A6C               	incf	___fladd@bexp,w
 18147  1E2E  1D03               	btfss	3,2
 18148  1E2F  2E38               	goto	l4989
 18149  1E30  3000               	movlw	0
 18150  1E31  00DD               	movwf	___fladd@b+3
 18151  1E32  3000               	movlw	0
 18152  1E33  00DC               	movwf	___fladd@b+2
 18153  1E34  3000               	movlw	0
 18154  1E35  00DB               	movwf	___fladd@b+1
 18155  1E36  3000               	movlw	0
 18156  1E37  00DA               	movwf	___fladd@b
 18157  1E38                     l4989:	
 18158  1E38  17DC               	bsf	___fladd@b+2,7
 18159  1E39  01DD               	clrf	___fladd@b+3
 18160  1E3A  2E43               	goto	l4995
 18161  1E3B                     l4993:	
 18162  1E3B  3000               	movlw	0
 18163  1E3C  00DD               	movwf	___fladd@b+3
 18164  1E3D  3000               	movlw	0
 18165  1E3E  00DC               	movwf	___fladd@b+2
 18166  1E3F  3000               	movlw	0
 18167  1E40  00DB               	movwf	___fladd@b+1
 18168  1E41  3000               	movlw	0
 18169  1E42  00DA               	movwf	___fladd@b
 18170  1E43                     l4995:	
 18171  1E43  0861               	movf	___fladd@a+3,w
 18172  1E44  3980               	andlw	128
 18173  1E45  00E2               	movwf	??___fladd
 18174  1E46  0862               	movf	??___fladd,w
 18175  1E47  00EB               	movwf	___fladd@aexp
 18176  1E48  086B               	movf	___fladd@aexp,w
 18177  1E49  066A               	xorwf	___fladd@signs,w
 18178  1E4A  1D03               	btfss	3,2
 18179  1E4B  176A               	bsf	___fladd@signs,6
 18180  1E4C  3561               	lslf	___fladd@a+3,w
 18181  1E4D  00E2               	movwf	??___fladd
 18182  1E4E  0862               	movf	??___fladd,w
 18183  1E4F  00EB               	movwf	___fladd@aexp
 18184  1E50  1BE0               	btfsc	___fladd@a+2,7
 18185  1E51  146B               	bsf	___fladd@aexp,0
 18186  1E52  086B               	movf	___fladd@aexp,w
 18187  1E53  1903               	btfsc	3,2
 18188  1E54  2E63               	goto	l5017
 18189  1E55  0A6B               	incf	___fladd@aexp,w
 18190  1E56  1D03               	btfss	3,2
 18191  1E57  2E60               	goto	l5013
 18192  1E58  3000               	movlw	0
 18193  1E59  00E1               	movwf	___fladd@a+3
 18194  1E5A  3000               	movlw	0
 18195  1E5B  00E0               	movwf	___fladd@a+2
 18196  1E5C  3000               	movlw	0
 18197  1E5D  00DF               	movwf	___fladd@a+1
 18198  1E5E  3000               	movlw	0
 18199  1E5F  00DE               	movwf	___fladd@a
 18200  1E60                     l5013:	
 18201  1E60  17E0               	bsf	___fladd@a+2,7
 18202  1E61  01E1               	clrf	___fladd@a+3
 18203  1E62  2E6B               	goto	l1247
 18204  1E63                     l5017:	
 18205  1E63  3000               	movlw	0
 18206  1E64  00E1               	movwf	___fladd@a+3
 18207  1E65  3000               	movlw	0
 18208  1E66  00E0               	movwf	___fladd@a+2
 18209  1E67  3000               	movlw	0
 18210  1E68  00DF               	movwf	___fladd@a+1
 18211  1E69  3000               	movlw	0
 18212  1E6A  00DE               	movwf	___fladd@a
 18213  1E6B                     l1247:	
 18214  1E6B  086C               	movf	___fladd@bexp,w
 18215  1E6C  026B               	subwf	___fladd@aexp,w
 18216  1E6D  1803               	skipnc
 18217  1E6E  2EB1               	goto	l5053
 18218  1E6F  1F6A               	btfss	___fladd@signs,6
 18219  1E70  2E75               	goto	l5023
 18220  1E71  3080               	movlw	128
 18221  1E72  00E2               	movwf	??___fladd
 18222  1E73  0862               	movf	??___fladd,w
 18223  1E74  06EA               	xorwf	___fladd@signs,f
 18224  1E75                     l5023:	
 18225  1E75  086C               	movf	___fladd@bexp,w
 18226  1E76  00E2               	movwf	??___fladd
 18227  1E77  0862               	movf	??___fladd,w
 18228  1E78  00ED               	movwf	___fladd@grs
 18229  1E79  086B               	movf	___fladd@aexp,w
 18230  1E7A  00E2               	movwf	??___fladd
 18231  1E7B  0862               	movf	??___fladd,w
 18232  1E7C  00EC               	movwf	___fladd@bexp
 18233  1E7D  086D               	movf	___fladd@grs,w
 18234  1E7E  00E2               	movwf	??___fladd
 18235  1E7F  0862               	movf	??___fladd,w
 18236  1E80  00EB               	movwf	___fladd@aexp
 18237  1E81  085A               	movf	___fladd@b,w
 18238  1E82  00E2               	movwf	??___fladd
 18239  1E83  0862               	movf	??___fladd,w
 18240  1E84  00ED               	movwf	___fladd@grs
 18241  1E85  085E               	movf	___fladd@a,w
 18242  1E86  00E2               	movwf	??___fladd
 18243  1E87  0862               	movf	??___fladd,w
 18244  1E88  00DA               	movwf	___fladd@b
 18245  1E89  086D               	movf	___fladd@grs,w
 18246  1E8A  00E2               	movwf	??___fladd
 18247  1E8B  0862               	movf	??___fladd,w
 18248  1E8C  00DE               	movwf	___fladd@a
 18249  1E8D  085B               	movf	___fladd@b+1,w
 18250  1E8E  00E2               	movwf	??___fladd
 18251  1E8F  0862               	movf	??___fladd,w
 18252  1E90  00ED               	movwf	___fladd@grs
 18253  1E91  085F               	movf	___fladd@a+1,w
 18254  1E92  00E2               	movwf	??___fladd
 18255  1E93  0862               	movf	??___fladd,w
 18256  1E94  00DB               	movwf	___fladd@b+1
 18257  1E95  086D               	movf	___fladd@grs,w
 18258  1E96  00E2               	movwf	??___fladd
 18259  1E97  0862               	movf	??___fladd,w
 18260  1E98  00DF               	movwf	___fladd@a+1
 18261  1E99  085C               	movf	___fladd@b+2,w
 18262  1E9A  00E2               	movwf	??___fladd
 18263  1E9B  0862               	movf	??___fladd,w
 18264  1E9C  00ED               	movwf	___fladd@grs
 18265  1E9D  0860               	movf	___fladd@a+2,w
 18266  1E9E  00E2               	movwf	??___fladd
 18267  1E9F  0862               	movf	??___fladd,w
 18268  1EA0  00DC               	movwf	___fladd@b+2
 18269  1EA1  086D               	movf	___fladd@grs,w
 18270  1EA2  00E2               	movwf	??___fladd
 18271  1EA3  0862               	movf	??___fladd,w
 18272  1EA4  00E0               	movwf	___fladd@a+2
 18273  1EA5  085D               	movf	___fladd@b+3,w
 18274  1EA6  00E2               	movwf	??___fladd
 18275  1EA7  0862               	movf	??___fladd,w
 18276  1EA8  00ED               	movwf	___fladd@grs
 18277  1EA9  0861               	movf	___fladd@a+3,w
 18278  1EAA  00E2               	movwf	??___fladd
 18279  1EAB  0862               	movf	??___fladd,w
 18280  1EAC  00DD               	movwf	___fladd@b+3
 18281  1EAD  086D               	movf	___fladd@grs,w
 18282  1EAE  00E2               	movwf	??___fladd
 18283  1EAF  0862               	movf	??___fladd,w
 18284  1EB0  00E1               	movwf	___fladd@a+3
 18285  1EB1                     l5053:	
 18286  1EB1  01ED               	clrf	___fladd@grs
 18287  1EB2  086B               	movf	___fladd@aexp,w
 18288  1EB3  00E2               	movwf	??___fladd
 18289  1EB4  01E3               	clrf	??___fladd+1
 18290  1EB5  0863               	movf	??___fladd+1,w
 18291  1EB6  00E5               	movwf	??___fladd+3
 18292  1EB7  086C               	movf	___fladd@bexp,w
 18293  1EB8  0262               	subwf	??___fladd,w
 18294  1EB9  00E4               	movwf	??___fladd+2
 18295  1EBA  1C03               	skipc
 18296  1EBB  03E5               	decf	??___fladd+3,f
 18297  1EBC  0865               	movf	??___fladd+3,w
 18298  1EBD  3A80               	xorlw	128
 18299  1EBE  00E6               	movwf	??___fladd+4
 18300  1EBF  3080               	movlw	128
 18301  1EC0  0266               	subwf	??___fladd+4,w
 18302  1EC1  1D03               	skipz
 18303  1EC2  2EC5               	goto	u5775
 18304  1EC3  301A               	movlw	26
 18305  1EC4  0264               	subwf	??___fladd+2,w
 18306  1EC5                     u5775:	
 18307  1EC5  1C03               	skipc
 18308  1EC6  2EF9               	goto	l5071
 18309  1EC7  0020               	movlb	0	; select bank0
 18310  1EC8  085D               	movf	___fladd@b+3,w
 18311  1EC9  045C               	iorwf	___fladd@b+2,w
 18312  1ECA  045B               	iorwf	___fladd@b+1,w
 18313  1ECB  045A               	iorwf	___fladd@b,w
 18314  1ECC  1903               	btfsc	3,2
 18315  1ECD  2ED0               	goto	u5780
 18316  1ECE  3001               	movlw	1
 18317  1ECF  2ED1               	goto	u5790
 18318  1ED0                     u5780:	
 18319  1ED0  3000               	movlw	0
 18320  1ED1                     u5790:	
 18321  1ED1  00E2               	movwf	??___fladd
 18322  1ED2  0862               	movf	??___fladd,w
 18323  1ED3  00ED               	movwf	___fladd@grs
 18324  1ED4  3000               	movlw	0
 18325  1ED5  00DD               	movwf	___fladd@b+3
 18326  1ED6  3000               	movlw	0
 18327  1ED7  00DC               	movwf	___fladd@b+2
 18328  1ED8  3000               	movlw	0
 18329  1ED9  00DB               	movwf	___fladd@b+1
 18330  1EDA  3000               	movlw	0
 18331  1EDB  00DA               	movwf	___fladd@b
 18332  1EDC  086B               	movf	___fladd@aexp,w
 18333  1EDD  00E2               	movwf	??___fladd
 18334  1EDE  0862               	movf	??___fladd,w
 18335  1EDF  00EC               	movwf	___fladd@bexp
 18336  1EE0  2EFE               	goto	l1251
 18337  1EE1                     l1253:	
 18338  1EE1  1C6D               	btfss	___fladd@grs,0
 18339  1EE2  2EE9               	goto	l5061
 18340  1EE3  366D               	lsrf	___fladd@grs,w
 18341  1EE4  3801               	iorlw	1
 18342  1EE5  00E2               	movwf	??___fladd
 18343  1EE6  0862               	movf	??___fladd,w
 18344  1EE7  00ED               	movwf	___fladd@grs
 18345  1EE8  2EEB               	goto	l5063
 18346  1EE9                     l5061:	
 18347  1EE9  1003               	clrc
 18348  1EEA  0CED               	rrf	___fladd@grs,f
 18349  1EEB                     l5063:	
 18350  1EEB  185A               	btfsc	___fladd@b,0
 18351  1EEC  17ED               	bsf	___fladd@grs,7
 18352  1EED  3001               	movlw	1
 18353  1EEE  00E2               	movwf	??___fladd
 18354  1EEF                     u5825:	
 18355  1EEF  37DD               	asrf	___fladd@b+3,f
 18356  1EF0  0CDC               	rrf	___fladd@b+2,f
 18357  1EF1  0CDB               	rrf	___fladd@b+1,f
 18358  1EF2  0CDA               	rrf	___fladd@b,f
 18359  1EF3  0BE2               	decfsz	??___fladd& (0+127),f
 18360  1EF4  2EEF               	goto	u5825
 18361  1EF5  3001               	movlw	1
 18362  1EF6  00E2               	movwf	??___fladd
 18363  1EF7  0862               	movf	??___fladd,w
 18364  1EF8  07EC               	addwf	___fladd@bexp,f
 18365  1EF9                     l5071:	
 18366  1EF9  0020               	movlb	0	; select bank0
 18367  1EFA  086B               	movf	___fladd@aexp,w
 18368  1EFB  026C               	subwf	___fladd@bexp,w
 18369  1EFC  1C03               	skipc
 18370  1EFD  2EE1               	goto	l1253
 18371  1EFE                     l1251:	
 18372  1EFE  1B6A               	btfsc	___fladd@signs,6
 18373  1EFF  2F2F               	goto	l5097
 18374  1F00  086C               	movf	___fladd@bexp,w
 18375  1F01  1D03               	btfss	3,2
 18376  1F02  2F0C               	goto	l5079
 18377  1F03  3000               	movlw	0
 18378  1F04  00DD               	movwf	?___fladd+3
 18379  1F05  3000               	movlw	0
 18380  1F06  00DC               	movwf	?___fladd+2
 18381  1F07  3000               	movlw	0
 18382  1F08  00DB               	movwf	?___fladd+1
 18383  1F09  3000               	movlw	0
 18384  1F0A  00DA               	movwf	?___fladd
 18385  1F0B  0008               	return
 18386  1F0C                     l5079:	
 18387  1F0C  085E               	movf	___fladd@a,w
 18388  1F0D  07DA               	addwf	___fladd@b,f
 18389  1F0E  085F               	movf	___fladd@a+1,w
 18390  1F0F  3DDB               	addwfc	___fladd@b+1,f
 18391  1F10  0860               	movf	___fladd@a+2,w
 18392  1F11  3DDC               	addwfc	___fladd@b+2,f
 18393  1F12  0861               	movf	___fladd@a+3,w
 18394  1F13  3DDD               	addwfc	___fladd@b+3,f
 18395  1F14  1C5D               	btfss	___fladd@b+3,0
 18396  1F15  2FA9               	goto	l5131
 18397  1F16  1C6D               	btfss	___fladd@grs,0
 18398  1F17  2F1E               	goto	l5087
 18399  1F18  366D               	lsrf	___fladd@grs,w
 18400  1F19  3801               	iorlw	1
 18401  1F1A  00E2               	movwf	??___fladd
 18402  1F1B  0862               	movf	??___fladd,w
 18403  1F1C  00ED               	movwf	___fladd@grs
 18404  1F1D  2F20               	goto	l5089
 18405  1F1E                     l5087:	
 18406  1F1E  1003               	clrc
 18407  1F1F  0CED               	rrf	___fladd@grs,f
 18408  1F20                     l5089:	
 18409  1F20  185A               	btfsc	___fladd@b,0
 18410  1F21  17ED               	bsf	___fladd@grs,7
 18411  1F22  3001               	movlw	1
 18412  1F23  00E2               	movwf	??___fladd
 18413  1F24                     u5895:	
 18414  1F24  37DD               	asrf	___fladd@b+3,f
 18415  1F25  0CDC               	rrf	___fladd@b+2,f
 18416  1F26  0CDB               	rrf	___fladd@b+1,f
 18417  1F27  0CDA               	rrf	___fladd@b,f
 18418  1F28  0BE2               	decfsz	??___fladd& (0+127),f
 18419  1F29  2F24               	goto	u5895
 18420  1F2A  3001               	movlw	1
 18421  1F2B  00E2               	movwf	??___fladd
 18422  1F2C  0862               	movf	??___fladd,w
 18423  1F2D  07EC               	addwf	___fladd@bexp,f
 18424  1F2E  2FA9               	goto	l5131
 18425  1F2F                     l5097:	
 18426  1F2F  085D               	movf	___fladd@b+3,w
 18427  1F30  3A80               	xorlw	128
 18428  1F31  00E2               	movwf	??___fladd
 18429  1F32  0861               	movf	___fladd@a+3,w
 18430  1F33  3A80               	xorlw	128
 18431  1F34  0262               	subwf	??___fladd,w
 18432  1F35  1D03               	skipz
 18433  1F36  2F41               	goto	u5903
 18434  1F37  0860               	movf	___fladd@a+2,w
 18435  1F38  025C               	subwf	___fladd@b+2,w
 18436  1F39  1D03               	skipz
 18437  1F3A  2F41               	goto	u5903
 18438  1F3B  085F               	movf	___fladd@a+1,w
 18439  1F3C  025B               	subwf	___fladd@b+1,w
 18440  1F3D  1D03               	skipz
 18441  1F3E  2F41               	goto	u5903
 18442  1F3F  085E               	movf	___fladd@a,w
 18443  1F40  025A               	subwf	___fladd@b,w
 18444  1F41                     u5903:	
 18445  1F41  1803               	skipnc
 18446  1F42  2F79               	goto	l5107
 18447  1F43  30FF               	movlw	255
 18448  1F44  00E2               	movwf	??___fladd
 18449  1F45  30FF               	movlw	255
 18450  1F46  00E3               	movwf	??___fladd+1
 18451  1F47  30FF               	movlw	255
 18452  1F48  00E4               	movwf	??___fladd+2
 18453  1F49  30FF               	movlw	255
 18454  1F4A  00E5               	movwf	??___fladd+3
 18455  1F4B  085A               	movf	___fladd@b,w
 18456  1F4C  025E               	subwf	___fladd@a,w
 18457  1F4D  00E6               	movwf	??___fladd+4
 18458  1F4E  085B               	movf	___fladd@b+1,w
 18459  1F4F  3B5F               	subwfb	___fladd@a+1,w
 18460  1F50  00E7               	movwf	??___fladd+5
 18461  1F51  085C               	movf	___fladd@b+2,w
 18462  1F52  3B60               	subwfb	___fladd@a+2,w
 18463  1F53  00E8               	movwf	??___fladd+6
 18464  1F54  085D               	movf	___fladd@b+3,w
 18465  1F55  3B61               	subwfb	___fladd@a+3,w
 18466  1F56  00E9               	movwf	??___fladd+7
 18467  1F57  0866               	movf	??___fladd+4,w
 18468  1F58  07E2               	addwf	??___fladd,f
 18469  1F59  0867               	movf	??___fladd+5,w
 18470  1F5A  3DE3               	addwfc	??___fladd+1,f
 18471  1F5B  0868               	movf	??___fladd+6,w
 18472  1F5C  3DE4               	addwfc	??___fladd+2,f
 18473  1F5D  0869               	movf	??___fladd+7,w
 18474  1F5E  3DE5               	addwfc	??___fladd+3,f
 18475  1F5F  0865               	movf	??___fladd+3,w
 18476  1F60  00DD               	movwf	___fladd@b+3
 18477  1F61  0864               	movf	??___fladd+2,w
 18478  1F62  00DC               	movwf	___fladd@b+2
 18479  1F63  0863               	movf	??___fladd+1,w
 18480  1F64  00DB               	movwf	___fladd@b+1
 18481  1F65  0862               	movf	??___fladd,w
 18482  1F66  00DA               	movwf	___fladd@b
 18483  1F67  3080               	movlw	128
 18484  1F68  00E2               	movwf	??___fladd
 18485  1F69  0862               	movf	??___fladd,w
 18486  1F6A  06EA               	xorwf	___fladd@signs,f
 18487  1F6B  09ED               	comf	___fladd@grs,f
 18488  1F6C  0AED               	incf	___fladd@grs,f
 18489  1F6D  086D               	movf	___fladd@grs,w
 18490  1F6E  1D03               	btfss	3,2
 18491  1F6F  2F81               	goto	l1268
 18492  1F70  3001               	movlw	1
 18493  1F71  07DA               	addwf	___fladd@b,f
 18494  1F72  3000               	movlw	0
 18495  1F73  3DDB               	addwfc	___fladd@b+1,f
 18496  1F74  3000               	movlw	0
 18497  1F75  3DDC               	addwfc	___fladd@b+2,f
 18498  1F76  3000               	movlw	0
 18499  1F77  3DDD               	addwfc	___fladd@b+3,f
 18500  1F78  2F81               	goto	l1268
 18501  1F79                     l5107:	
 18502  1F79  085E               	movf	___fladd@a,w
 18503  1F7A  02DA               	subwf	___fladd@b,f
 18504  1F7B  085F               	movf	___fladd@a+1,w
 18505  1F7C  3BDB               	subwfb	___fladd@b+1,f
 18506  1F7D  0860               	movf	___fladd@a+2,w
 18507  1F7E  3BDC               	subwfb	___fladd@b+2,f
 18508  1F7F  0861               	movf	___fladd@a+3,w
 18509  1F80  3BDD               	subwfb	___fladd@b+3,f
 18510  1F81                     l1268:	
 18511  1F81  085D               	movf	___fladd@b+3,w
 18512  1F82  045C               	iorwf	___fladd@b+2,w
 18513  1F83  045B               	iorwf	___fladd@b+1,w
 18514  1F84  045A               	iorwf	___fladd@b,w
 18515  1F85  1D03               	skipz
 18516  1F86  2FA7               	goto	l5129
 18517  1F87  086D               	movf	___fladd@grs,w
 18518  1F88  1D03               	btfss	3,2
 18519  1F89  2FA7               	goto	l5129
 18520  1F8A  3000               	movlw	0
 18521  1F8B  00DD               	movwf	?___fladd+3
 18522  1F8C  3000               	movlw	0
 18523  1F8D  00DC               	movwf	?___fladd+2
 18524  1F8E  3000               	movlw	0
 18525  1F8F  00DB               	movwf	?___fladd+1
 18526  1F90  3000               	movlw	0
 18527  1F91  00DA               	movwf	?___fladd
 18528  1F92  0008               	return
 18529  1F93                     l5115:	
 18530  1F93  3001               	movlw	1
 18531  1F94                     u5945:	
 18532  1F94  35DA               	lslf	___fladd@b,f
 18533  1F95  0DDB               	rlf	___fladd@b+1,f
 18534  1F96  0DDC               	rlf	___fladd@b+2,f
 18535  1F97  0DDD               	rlf	___fladd@b+3,f
 18536  1F98  0B89               	decfsz	9,f
 18537  1F99  2F94               	goto	u5945
 18538  1F9A  1BED               	btfsc	___fladd@grs,7
 18539  1F9B  145A               	bsf	___fladd@b,0
 18540  1F9C  1C6D               	btfss	___fladd@grs,0
 18541  1F9D  2FA0               	goto	l5123
 18542  1F9E  1403               	setc
 18543  1F9F  2FA1               	goto	L4
 18544  1FA0                     l5123:	
 18545  1FA0  1003               	clrc
 18546  1FA1                     L4:	
 18547  1FA1  0DED               	rlf	___fladd@grs,f
 18548  1FA2  086C               	movf	___fladd@bexp,w
 18549  1FA3  1903               	btfsc	3,2
 18550  1FA4  2FA7               	goto	l5129
 18551  1FA5  3001               	movlw	1
 18552  1FA6  02EC               	subwf	___fladd@bexp,f
 18553  1FA7                     l5129:	
 18554  1FA7  1FDC               	btfss	___fladd@b+2,7
 18555  1FA8  2F93               	goto	l5115
 18556  1FA9                     l5131:	
 18557  1FA9  01EB               	clrf	___fladd@aexp
 18558  1FAA  1FED               	btfss	___fladd@grs,7
 18559  1FAB  2FB4               	goto	l5141
 18560  1FAC  086D               	movf	___fladd@grs,w
 18561  1FAD  397F               	andlw	127
 18562  1FAE  1903               	btfsc	3,2
 18563  1FAF  185A               	btfsc	___fladd@b,0
 18564  1FB0  2FB2               	goto	l5137
 18565  1FB1  2FB4               	goto	l5141
 18566  1FB2                     l5137:	
 18567  1FB2  01EB               	clrf	___fladd@aexp
 18568  1FB3  0AEB               	incf	___fladd@aexp,f
 18569  1FB4                     l5141:	
 18570  1FB4  086B               	movf	___fladd@aexp,w
 18571  1FB5  1903               	btfsc	3,2
 18572  1FB6  2FE0               	goto	l1281
 18573  1FB7  3001               	movlw	1
 18574  1FB8  07DA               	addwf	___fladd@b,f
 18575  1FB9  3000               	movlw	0
 18576  1FBA  3DDB               	addwfc	___fladd@b+1,f
 18577  1FBB  3000               	movlw	0
 18578  1FBC  3DDC               	addwfc	___fladd@b+2,f
 18579  1FBD  3000               	movlw	0
 18580  1FBE  3DDD               	addwfc	___fladd@b+3,f
 18581  1FBF  1C5D               	btfss	___fladd@b+3,0
 18582  1FC0  2FE0               	goto	l1281
 18583  1FC1  085A               	movf	___fladd@b,w
 18584  1FC2  00E2               	movwf	??___fladd
 18585  1FC3  085B               	movf	___fladd@b+1,w
 18586  1FC4  00E3               	movwf	??___fladd+1
 18587  1FC5  085C               	movf	___fladd@b+2,w
 18588  1FC6  00E4               	movwf	??___fladd+2
 18589  1FC7  085D               	movf	___fladd@b+3,w
 18590  1FC8  00E5               	movwf	??___fladd+3
 18591  1FC9  3001               	movlw	1
 18592  1FCA  00E6               	movwf	??___fladd+4
 18593  1FCB                     u6045:	
 18594  1FCB  37E5               	asrf	??___fladd+3,f
 18595  1FCC  0CE4               	rrf	??___fladd+2,f
 18596  1FCD  0CE3               	rrf	??___fladd+1,f
 18597  1FCE  0CE2               	rrf	??___fladd,f
 18598  1FCF  0BE6               	decfsz	??___fladd+4,f
 18599  1FD0  2FCB               	goto	u6045
 18600  1FD1  0865               	movf	??___fladd+3,w
 18601  1FD2  00DD               	movwf	___fladd@b+3
 18602  1FD3  0864               	movf	??___fladd+2,w
 18603  1FD4  00DC               	movwf	___fladd@b+2
 18604  1FD5  0863               	movf	??___fladd+1,w
 18605  1FD6  00DB               	movwf	___fladd@b+1
 18606  1FD7  0862               	movf	??___fladd,w
 18607  1FD8  00DA               	movwf	___fladd@b
 18608  1FD9  0A6C               	incf	___fladd@bexp,w
 18609  1FDA  1903               	btfsc	3,2
 18610  1FDB  2FE0               	goto	l1281
 18611  1FDC  3001               	movlw	1
 18612  1FDD  00E2               	movwf	??___fladd
 18613  1FDE  0862               	movf	??___fladd,w
 18614  1FDF  07EC               	addwf	___fladd@bexp,f
 18615  1FE0                     l1281:	
 18616  1FE0  0A6C               	incf	___fladd@bexp,w
 18617  1FE1  1D03               	btfss	3,2
 18618  1FE2  086C               	movf	___fladd@bexp,w
 18619  1FE3  1D03               	btfss	3,2
 18620  1FE4  2FF0               	goto	l5159
 18621  1FE5  3000               	movlw	0
 18622  1FE6  00DD               	movwf	___fladd@b+3
 18623  1FE7  3000               	movlw	0
 18624  1FE8  00DC               	movwf	___fladd@b+2
 18625  1FE9  3000               	movlw	0
 18626  1FEA  00DB               	movwf	___fladd@b+1
 18627  1FEB  3000               	movlw	0
 18628  1FEC  00DA               	movwf	___fladd@b
 18629  1FED  086C               	movf	___fladd@bexp,w
 18630  1FEE  1903               	btfsc	3,2
 18631  1FEF  01EA               	clrf	___fladd@signs
 18632  1FF0                     l5159:	
 18633  1FF0  1C6C               	btfss	___fladd@bexp,0
 18634  1FF1  2FF4               	goto	l5163
 18635  1FF2  17DC               	bsf	___fladd@b+2,7
 18636  1FF3  2FF8               	goto	l1289
 18637  1FF4                     l5163:	
 18638  1FF4  307F               	movlw	127
 18639  1FF5  00E2               	movwf	??___fladd
 18640  1FF6  0862               	movf	??___fladd,w
 18641  1FF7  05DC               	andwf	___fladd@b+2,f
 18642  1FF8                     l1289:	
 18643  1FF8  366C               	lsrf	___fladd@bexp,w
 18644  1FF9  00E2               	movwf	??___fladd
 18645  1FFA  0862               	movf	??___fladd,w
 18646  1FFB  00DD               	movwf	___fladd@b+3
 18647  1FFC  1FEA               	btfss	___fladd@signs,7
 18648  1FFD  0008               	return
 18649  1FFE  17DD               	bsf	___fladd@b+3,7
 18650  1FFF  0008               	return
 18651  2000                     __end_of___fladd:	
 18652                           
 18653                           	psect	text66
 18654  2D89                     __ptext66:	
 18655 ;; *************** function _calibrate_BATTSOC *****************
 18656 ;; Defined at:
 18657 ;;		line 23 in file "algorithms.c"
 18658 ;; Parameters:    Size  Location     Type
 18659 ;;		None
 18660 ;; Auto vars:     Size  Location     Type
 18661 ;;  j               2   24[BANK1 ] int 
 18662 ;;  i               2   22[BANK1 ] int 
 18663 ;; Return value:  Size  Location     Type
 18664 ;;                  1    wreg      void 
 18665 ;; Registers used:
 18666 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18667 ;; Tracked objects:
 18668 ;;		On entry : 0/0
 18669 ;;		On exit  : 0/0
 18670 ;;		Unchanged: 0/0
 18671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18673 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18674 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18675 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18676 ;;Total ram usage:        9 bytes
 18677 ;; Hardware stack levels used:    1
 18678 ;; Hardware stack levels required when called:    3
 18679 ;; This function calls:
 18680 ;;		___fldiv
 18681 ;;		___flmul
 18682 ;;		___fltol
 18683 ;;		___xxtofl
 18684 ;; This function is called by:
 18685 ;;		_AFE_UPDATE
 18686 ;; This function uses a non-reentrant model
 18687 ;;
 18688                           
 18689                           
 18690                           ;psect for function _calibrate_BATTSOC
 18691  2D89                     _calibrate_BATTSOC:	
 18692                           
 18693                           ;algorithms.c: 26:     for(int i = 0; i<5;i++){
 18694                           
 18695                           ;incstack = 0
 18696                           ; Regs used in _calibrate_BATTSOC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18697  2D89  0021               	movlb	1	; select bank1
 18698  2D8A  01B6               	clrf	calibrate_BATTSOC@i^(0+128)
 18699  2D8B  01B7               	clrf	(calibrate_BATTSOC@i+1)^(0+128)
 18700  2D8C                     l6007:	
 18701                           
 18702                           ;algorithms.c: 27:         for(int j = 0; j < 46; j++ ){
 18703  2D8C  0021               	movlb	1	; select bank1
 18704  2D8D  01B8               	clrf	calibrate_BATTSOC@j^(0+128)
 18705  2D8E  01B9               	clrf	(calibrate_BATTSOC@j+1)^(0+128)
 18706  2D8F                     l6013:	
 18707                           
 18708                           ;algorithms.c: 28:             if(cellVoltages[i]>=lookupTableSamsung_voltage[j]){
 18709  2D8F  0021               	movlb	1	; select bank1
 18710  2D90  0839               	movf	(calibrate_BATTSOC@j+1)^(0+128),w
 18711  2D91  0085               	movwf	5
 18712  2D92  0838               	movf	calibrate_BATTSOC@j^(0+128),w
 18713  2D93  0084               	movwf	4
 18714  2D94  3584               	lslf	4,f
 18715  2D95  0D85               	rlf	5,f
 18716  2D96  305C               	movlw	low (_lookupTableSamsung_voltage| (0+32768))
 18717  2D97  0784               	addwf	4,f
 18718  2D98  30B8               	movlw	high (_lookupTableSamsung_voltage| (0+32768))
 18719  2D99  3D85               	addwfc	5,f
 18720  2D9A  3F00               	moviw [0]fsr0
 18721  2D9B  00B1               	movwf	??_calibrate_BATTSOC^(0+128)
 18722  2D9C  3F01               	moviw [1]fsr0
 18723  2D9D  00B2               	movwf	(??_calibrate_BATTSOC^(0+128)+1)
 18724  2D9E  3536               	lslf	calibrate_BATTSOC@i^(0+128),w
 18725  2D9F  3EB4               	addlw	(low (_cellVoltages| (0+256)))& (0+255)
 18726  2DA0  0086               	movwf	6
 18727  2DA1  3001               	movlw	1	; select bank3/4
 18728  2DA2  0087               	movwf	7
 18729  2DA3  3F40               	moviw [0]fsr1
 18730  2DA4  00B3               	movwf	(??_calibrate_BATTSOC+2)^(0+128)
 18731  2DA5  3F41               	moviw [1]fsr1
 18732  2DA6  00B4               	movwf	((??_calibrate_BATTSOC+2)^(0+128)+1)
 18733  2DA7  0834               	movf	(??_calibrate_BATTSOC+3)^(0+128),w
 18734  2DA8  3A80               	xorlw	128
 18735  2DA9  00B5               	movwf	(??_calibrate_BATTSOC+4)^(0+128)
 18736  2DAA  0832               	movf	(??_calibrate_BATTSOC+1)^(0+128),w
 18737  2DAB  3A80               	xorlw	128
 18738  2DAC  0235               	subwf	(??_calibrate_BATTSOC+4)^(0+128),w
 18739  2DAD  1D03               	skipz
 18740  2DAE  2DB1               	goto	u7515
 18741  2DAF  0831               	movf	??_calibrate_BATTSOC^(0+128),w
 18742  2DB0  0233               	subwf	(??_calibrate_BATTSOC+2)^(0+128),w
 18743  2DB1                     u7515:	
 18744  2DB1  1C03               	skipc
 18745  2DB2  2E2E               	goto	l6019
 18746                           
 18747                           ;algorithms.c: 29:                 cellSOC[i] = lookupTableSamsung_SOC[j];
 18748  2DB3  0021               	movlb	1	; select bank1
 18749  2DB4  0839               	movf	(calibrate_BATTSOC@j+1)^(0+128),w
 18750  2DB5  00B2               	movwf	(??_calibrate_BATTSOC^(0+128)+1)
 18751  2DB6  0838               	movf	calibrate_BATTSOC@j^(0+128),w
 18752  2DB7  00B1               	movwf	??_calibrate_BATTSOC^(0+128)
 18753  2DB8  35B1               	lslf	??_calibrate_BATTSOC^(0+128),f
 18754  2DB9  0DB2               	rlf	(??_calibrate_BATTSOC^(0+128)+1),f
 18755  2DBA  3000               	movlw	low (_lookupTableSamsung_SOC| (0+32768))
 18756  2DBB  00B3               	movwf	(??_calibrate_BATTSOC+2)^(0+128)
 18757  2DBC  30B8               	movlw	high (_lookupTableSamsung_SOC| (0+32768))
 18758  2DBD  00B4               	movwf	((??_calibrate_BATTSOC+2)^(0+128)+1)
 18759  2DBE  0831               	movf	??_calibrate_BATTSOC^(0+128),w
 18760  2DBF  0733               	addwf	(??_calibrate_BATTSOC+2)^(0+128),w
 18761  2DC0  0086               	movwf	6
 18762  2DC1  0832               	movf	(??_calibrate_BATTSOC+1)^(0+128),w
 18763  2DC2  3D34               	addwfc	(??_calibrate_BATTSOC+3)^(0+128),w
 18764  2DC3  0087               	movwf	7
 18765  2DC4  3536               	lslf	calibrate_BATTSOC@i^(0+128),w
 18766  2DC5  3EAA               	addlw	(low (_cellSOC| (0+256)))& (0+255)
 18767  2DC6  0084               	movwf	4
 18768  2DC7  3001               	movlw	1	; select bank3/4
 18769  2DC8  0085               	movwf	5
 18770  2DC9  3F40               	moviw [0]fsr1
 18771  2DCA  3F80               	movwi [0]fsr0
 18772  2DCB  3F41               	moviw [1]fsr1
 18773  2DCC  3F81               	movwi [1]fsr0
 18774                           
 18775                           ;algorithms.c: 30:                 cellCharge[i] = (lookupTableSamsung_SOC[j]/100.0) * s
      +                          amsung_cell_max_charge;
 18776  2DCD  0839               	movf	(calibrate_BATTSOC@j+1)^(0+128),w
 18777  2DCE  0085               	movwf	5
 18778  2DCF  0838               	movf	calibrate_BATTSOC@j^(0+128),w
 18779  2DD0  0084               	movwf	4
 18780  2DD1  3584               	lslf	4,f
 18781  2DD2  0D85               	rlf	5,f
 18782  2DD3  3000               	movlw	low (_lookupTableSamsung_SOC| (0+32768))
 18783  2DD4  0784               	addwf	4,f
 18784  2DD5  30B8               	movlw	high (_lookupTableSamsung_SOC| (0+32768))
 18785  2DD6  3D85               	addwfc	5,f
 18786  2DD7  3F00               	moviw [0]fsr0
 18787  2DD8  00B1               	movwf	??_calibrate_BATTSOC^(0+128)
 18788  2DD9  3F01               	moviw [1]fsr0
 18789  2DDA  00B2               	movwf	(??_calibrate_BATTSOC^(0+128)+1)
 18790  2DDB  0831               	movf	??_calibrate_BATTSOC^(0+128),w
 18791  2DDC  00F1               	movwf	___xxtofl@val
 18792  2DDD  0832               	movf	(??_calibrate_BATTSOC+1)^(0+128),w
 18793  2DDE  00F2               	movwf	___xxtofl@val+1
 18794  2DDF  0D89               	rlf	9,f
 18795  2DE0  3B89               	subwfb	9,f
 18796  2DE1  0989               	comf	9,f
 18797  2DE2  00F3               	movwf	___xxtofl@val+2
 18798  2DE3  00F4               	movwf	___xxtofl@val+3
 18799  2DE4  3001               	movlw	1
 18800  2DE5  31A9  216C  31AD   	fcall	___xxtofl
 18801  2DE8  0874               	movf	?___xxtofl+3,w
 18802  2DE9  0020               	movlb	0	; select bank0
 18803  2DEA  00C7               	movwf	___fldiv@b+3
 18804  2DEB  0873               	movf	?___xxtofl+2,w
 18805  2DEC  00C6               	movwf	___fldiv@b+2
 18806  2DED  0872               	movf	?___xxtofl+1,w
 18807  2DEE  00C5               	movwf	___fldiv@b+1
 18808  2DEF  0871               	movf	?___xxtofl,w
 18809  2DF0  00C4               	movwf	___fldiv@b
 18810  2DF1  3042               	movlw	66
 18811  2DF2  00C3               	movwf	___fldiv@a+3
 18812  2DF3  30C8               	movlw	200
 18813  2DF4  00C2               	movwf	___fldiv@a+2
 18814  2DF5  3000               	movlw	0
 18815  2DF6  00C1               	movwf	___fldiv@a+1
 18816  2DF7  3000               	movlw	0
 18817  2DF8  00C0               	movwf	___fldiv@a
 18818  2DF9  319B  2300  31AD   	fcall	___fldiv
 18819  2DFC  0020               	movlb	0	; select bank0
 18820  2DFD  0843               	movf	?___fldiv+3,w
 18821  2DFE  00AD               	movwf	___flmul@a+3
 18822  2DFF  0842               	movf	?___fldiv+2,w
 18823  2E00  00AC               	movwf	___flmul@a+2
 18824  2E01  0841               	movf	?___fldiv+1,w
 18825  2E02  00AB               	movwf	___flmul@a+1
 18826  2E03  0840               	movf	?___fldiv,w
 18827  2E04  00AA               	movwf	___flmul@a
 18828  2E05  3045               	movlw	69
 18829  2E06  00A9               	movwf	___flmul@b+3
 18830  2E07  301C               	movlw	28
 18831  2E08  00A8               	movwf	___flmul@b+2
 18832  2E09  3040               	movlw	64
 18833  2E0A  00A7               	movwf	___flmul@b+1
 18834  2E0B  3000               	movlw	0
 18835  2E0C  00A6               	movwf	___flmul@b
 18836  2E0D  3190  2023  31AD   	fcall	___flmul
 18837  2E10  0020               	movlb	0	; select bank0
 18838  2E11  0829               	movf	?___flmul+3,w
 18839  2E12  0021               	movlb	1	; select bank1
 18840  2E13  00AB               	movwf	(___fltol@f1+3)^(0+128)
 18841  2E14  0020               	movlb	0	; select bank0
 18842  2E15  0828               	movf	?___flmul+2,w
 18843  2E16  0021               	movlb	1	; select bank1
 18844  2E17  00AA               	movwf	(___fltol@f1+2)^(0+128)
 18845  2E18  0020               	movlb	0	; select bank0
 18846  2E19  0827               	movf	?___flmul+1,w
 18847  2E1A  0021               	movlb	1	; select bank1
 18848  2E1B  00A9               	movwf	(___fltol@f1+1)^(0+128)
 18849  2E1C  0020               	movlb	0	; select bank0
 18850  2E1D  0826               	movf	?___flmul,w
 18851  2E1E  0021               	movlb	1	; select bank1
 18852  2E1F  00A8               	movwf	___fltol@f1^(0+128)
 18853  2E20  31B6  262A  31AD   	fcall	___fltol
 18854  2E23  0021               	movlb	1	; select bank1
 18855  2E24  3536               	lslf	calibrate_BATTSOC@i^(0+128),w
 18856  2E25  3EA0               	addlw	(low (_cellCharge| (0+256)))& (0+255)
 18857  2E26  0086               	movwf	6
 18858  2E27  3001               	movlw	1	; select bank3/4
 18859  2E28  0087               	movwf	7
 18860  2E29  0828               	movf	?___fltol^(0+128),w
 18861  2E2A  3FC0               	movwi [0]fsr1
 18862  2E2B  0829               	movf	(?___fltol+1)^(0+128),w
 18863  2E2C  3FC1               	movwi [1]fsr1
 18864                           
 18865                           ;algorithms.c: 31:                 break;
 18866  2E2D  2E3E               	goto	l6021
 18867  2E2E                     l6019:	
 18868                           
 18869                           ;algorithms.c: 33:         }
 18870  2E2E  3001               	movlw	1
 18871  2E2F  0021               	movlb	1	; select bank1
 18872  2E30  07B8               	addwf	calibrate_BATTSOC@j^(0+128),f
 18873  2E31  3000               	movlw	0
 18874  2E32  3DB9               	addwfc	(calibrate_BATTSOC@j+1)^(0+128),f
 18875  2E33  0839               	movf	(calibrate_BATTSOC@j+1)^(0+128),w
 18876  2E34  3A80               	xorlw	128
 18877  2E35  00B1               	movwf	??_calibrate_BATTSOC^(0+128)
 18878  2E36  3080               	movlw	128
 18879  2E37  0231               	subwf	??_calibrate_BATTSOC^(0+128),w
 18880  2E38  1D03               	skipz
 18881  2E39  2E3C               	goto	u7525
 18882  2E3A  302E               	movlw	46
 18883  2E3B  0238               	subwf	calibrate_BATTSOC@j^(0+128),w
 18884  2E3C                     u7525:	
 18885  2E3C  1C03               	skipc
 18886  2E3D  2D8F               	goto	l6013
 18887  2E3E                     l6021:	
 18888                           
 18889                           ;algorithms.c: 34:     }
 18890  2E3E  3001               	movlw	1
 18891  2E3F  0021               	movlb	1	; select bank1
 18892  2E40  07B6               	addwf	calibrate_BATTSOC@i^(0+128),f
 18893  2E41  3000               	movlw	0
 18894  2E42  3DB7               	addwfc	(calibrate_BATTSOC@i+1)^(0+128),f
 18895  2E43  0837               	movf	(calibrate_BATTSOC@i+1)^(0+128),w
 18896  2E44  3A80               	xorlw	128
 18897  2E45  00B1               	movwf	??_calibrate_BATTSOC^(0+128)
 18898  2E46  3080               	movlw	128
 18899  2E47  0231               	subwf	??_calibrate_BATTSOC^(0+128),w
 18900  2E48  1D03               	skipz
 18901  2E49  2E4C               	goto	u7535
 18902  2E4A  3005               	movlw	5
 18903  2E4B  0236               	subwf	calibrate_BATTSOC@i^(0+128),w
 18904  2E4C                     u7535:	
 18905  2E4C  1803               	btfsc	3,0
 18906  2E4D  0008               	return
 18907  2E4E  2D8C               	goto	l6007
 18908  2E4F                     __end_of_calibrate_BATTSOC:	
 18909                           
 18910                           	psect	text67
 18911  296C                     __ptext67:	
 18912 ;; *************** function ___xxtofl *****************
 18913 ;; Defined at:
 18914 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 18915 ;; Parameters:    Size  Location     Type
 18916 ;;  sign            1    wreg     unsigned char 
 18917 ;;  val             4    1[COMMON] long 
 18918 ;; Auto vars:     Size  Location     Type
 18919 ;;  sign            1    0[BANK0 ] unsigned char 
 18920 ;;  arg             4    2[BANK0 ] unsigned long 
 18921 ;;  exp             1    1[BANK0 ] unsigned char 
 18922 ;; Return value:  Size  Location     Type
 18923 ;;                  4    1[COMMON] unsigned char 
 18924 ;; Registers used:
 18925 ;;		wreg, status,2, status,0
 18926 ;; Tracked objects:
 18927 ;;		On entry : 0/0
 18928 ;;		On exit  : 0/0
 18929 ;;		Unchanged: 0/0
 18930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18931 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18932 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18933 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18934 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18935 ;;Total ram usage:       14 bytes
 18936 ;; Hardware stack levels used:    1
 18937 ;; Hardware stack levels required when called:    1
 18938 ;; This function calls:
 18939 ;;		Nothing
 18940 ;; This function is called by:
 18941 ;;		_setShortCircuitProtection
 18942 ;;		_setOverCurrentDischargeProtection
 18943 ;;		_updateCurrent
 18944 ;;		_updateVoltages
 18945 ;;		_updateTemperatures
 18946 ;;		_calibrate_BATTSOC
 18947 ;;		_coulomb_counter
 18948 ;;		_logf
 18949 ;;		_AFE_getSetShortCircuitCurrent
 18950 ;;		_AFE_getOverCurrentDischargeCurrent
 18951 ;; This function uses a non-reentrant model
 18952 ;;
 18953                           
 18954                           
 18955                           ;psect for function ___xxtofl
 18956  296C                     ___xxtofl:	
 18957                           
 18958                           ;incstack = 0
 18959                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 18960                           ;___xxtofl@sign stored from wreg
 18961  296C  0020               	movlb	0	; select bank0
 18962  296D  00A0               	movwf	___xxtofl@sign
 18963  296E  0820               	movf	___xxtofl@sign,w
 18964  296F  1D03               	btfss	3,2
 18965  2970  1FF4               	btfss	___xxtofl@val+3,7
 18966  2971  2982               	goto	l5507
 18967  2972  0971               	comf	___xxtofl@val,w
 18968  2973  00A2               	movwf	___xxtofl@arg
 18969  2974  0972               	comf	___xxtofl@val+1,w
 18970  2975  00A3               	movwf	___xxtofl@arg+1
 18971  2976  0973               	comf	___xxtofl@val+2,w
 18972  2977  00A4               	movwf	___xxtofl@arg+2
 18973  2978  0974               	comf	___xxtofl@val+3,w
 18974  2979  00A5               	movwf	___xxtofl@arg+3
 18975  297A  0AA2               	incf	___xxtofl@arg,f
 18976  297B  1903               	skipnz
 18977  297C  0AA3               	incf	___xxtofl@arg+1,f
 18978  297D  1903               	skipnz
 18979  297E  0AA4               	incf	___xxtofl@arg+2,f
 18980  297F  1903               	skipnz
 18981  2980  0AA5               	incf	___xxtofl@arg+3,f
 18982  2981  298A               	goto	l1381
 18983  2982                     l5507:	
 18984  2982  0874               	movf	___xxtofl@val+3,w
 18985  2983  00A5               	movwf	___xxtofl@arg+3
 18986  2984  0873               	movf	___xxtofl@val+2,w
 18987  2985  00A4               	movwf	___xxtofl@arg+2
 18988  2986  0872               	movf	___xxtofl@val+1,w
 18989  2987  00A3               	movwf	___xxtofl@arg+1
 18990  2988  0871               	movf	___xxtofl@val,w
 18991  2989  00A2               	movwf	___xxtofl@arg
 18992  298A                     l1381:	
 18993  298A  0874               	movf	___xxtofl@val+3,w
 18994  298B  0473               	iorwf	___xxtofl@val+2,w
 18995  298C  0472               	iorwf	___xxtofl@val+1,w
 18996  298D  0471               	iorwf	___xxtofl@val,w
 18997  298E  1D03               	skipz
 18998  298F  2999               	goto	l5513
 18999  2990  3000               	movlw	0
 19000  2991  00F4               	movwf	?___xxtofl+3
 19001  2992  3000               	movlw	0
 19002  2993  00F3               	movwf	?___xxtofl+2
 19003  2994  3000               	movlw	0
 19004  2995  00F2               	movwf	?___xxtofl+1
 19005  2996  3000               	movlw	0
 19006  2997  00F1               	movwf	?___xxtofl
 19007  2998  0008               	return
 19008  2999                     l5513:	
 19009  2999  3096               	movlw	150
 19010  299A  00F5               	movwf	??___xxtofl
 19011  299B  0875               	movf	??___xxtofl,w
 19012  299C  00A1               	movwf	___xxtofl@exp
 19013  299D                     l5517:	
 19014  299D  30FE               	movlw	254
 19015  299E  0525               	andwf	___xxtofl@arg+3,w
 19016  299F  1903               	btfsc	3,2
 19017  29A0  29C0               	goto	l1387
 19018  29A1  3001               	movlw	1
 19019  29A2  00F5               	movwf	??___xxtofl
 19020  29A3  0875               	movf	??___xxtofl,w
 19021  29A4  07A1               	addwf	___xxtofl@exp,f
 19022  29A5  3001               	movlw	1
 19023  29A6                     u6795:	
 19024  29A6  36A5               	lsrf	___xxtofl@arg+3,f
 19025  29A7  0CA4               	rrf	___xxtofl@arg+2,f
 19026  29A8  0CA3               	rrf	___xxtofl@arg+1,f
 19027  29A9  0CA2               	rrf	___xxtofl@arg,f
 19028  29AA  0B89               	decfsz	9,f
 19029  29AB  29A6               	goto	u6795
 19030  29AC  299D               	goto	l5517
 19031  29AD                     l5519:	
 19032  29AD  3001               	movlw	1
 19033  29AE  00F5               	movwf	??___xxtofl
 19034  29AF  0875               	movf	??___xxtofl,w
 19035  29B0  07A1               	addwf	___xxtofl@exp,f
 19036  29B1  3001               	movlw	1
 19037  29B2  07A2               	addwf	___xxtofl@arg,f
 19038  29B3  3000               	movlw	0
 19039  29B4  3DA3               	addwfc	___xxtofl@arg+1,f
 19040  29B5  3000               	movlw	0
 19041  29B6  3DA4               	addwfc	___xxtofl@arg+2,f
 19042  29B7  3000               	movlw	0
 19043  29B8  3DA5               	addwfc	___xxtofl@arg+3,f
 19044  29B9  3001               	movlw	1
 19045  29BA                     u6815:	
 19046  29BA  36A5               	lsrf	___xxtofl@arg+3,f
 19047  29BB  0CA4               	rrf	___xxtofl@arg+2,f
 19048  29BC  0CA3               	rrf	___xxtofl@arg+1,f
 19049  29BD  0CA2               	rrf	___xxtofl@arg,f
 19050  29BE  0B89               	decfsz	9,f
 19051  29BF  29BA               	goto	u6815
 19052  29C0                     l1387:	
 19053  29C0  30FF               	movlw	255
 19054  29C1  0525               	andwf	___xxtofl@arg+3,w
 19055  29C2  1903               	btfsc	3,2
 19056  29C3  29D2               	goto	l5527
 19057  29C4  29AD               	goto	l5519
 19058  29C5                     l5529:	
 19059  29C5  3002               	movlw	2
 19060  29C6  0221               	subwf	___xxtofl@exp,w
 19061  29C7  1C03               	btfss	3,0
 19062  29C8  29D4               	goto	l1394
 19063  29C9  3001               	movlw	1
 19064  29CA  02A1               	subwf	___xxtofl@exp,f
 19065  29CB  3001               	movlw	1
 19066  29CC                     u6835:	
 19067  29CC  35A2               	lslf	___xxtofl@arg,f
 19068  29CD  0DA3               	rlf	___xxtofl@arg+1,f
 19069  29CE  0DA4               	rlf	___xxtofl@arg+2,f
 19070  29CF  0DA5               	rlf	___xxtofl@arg+3,f
 19071  29D0  0B89               	decfsz	9,f
 19072  29D1  29CC               	goto	u6835
 19073  29D2                     l5527:	
 19074  29D2  1FA4               	btfss	___xxtofl@arg+2,7
 19075  29D3  29C5               	goto	l5529
 19076  29D4                     l1394:	
 19077  29D4  1821               	btfsc	___xxtofl@exp,0
 19078  29D5  29DE               	goto	l1395
 19079  29D6  30FF               	movlw	255
 19080  29D7  05A2               	andwf	___xxtofl@arg,f
 19081  29D8  30FF               	movlw	255
 19082  29D9  05A3               	andwf	___xxtofl@arg+1,f
 19083  29DA  307F               	movlw	127
 19084  29DB  05A4               	andwf	___xxtofl@arg+2,f
 19085  29DC  30FF               	movlw	255
 19086  29DD  05A5               	andwf	___xxtofl@arg+3,f
 19087  29DE                     l1395:	
 19088  29DE  1003               	clrc
 19089  29DF  0CA1               	rrf	___xxtofl@exp,f
 19090  29E0  0821               	movf	___xxtofl@exp,w
 19091  29E1  00F5               	movwf	??___xxtofl
 19092  29E2  01F6               	clrf	??___xxtofl+1
 19093  29E3  01F7               	clrf	??___xxtofl+2
 19094  29E4  01F8               	clrf	??___xxtofl+3
 19095  29E5  3018               	movlw	24
 19096  29E6                     u6875:	
 19097  29E6  35F5               	lslf	??___xxtofl,f
 19098  29E7  0DF6               	rlf	??___xxtofl+1,f
 19099  29E8  0DF7               	rlf	??___xxtofl+2,f
 19100  29E9  0DF8               	rlf	??___xxtofl+3,f
 19101  29EA  0B89               	decfsz	9,f
 19102  29EB  29E6               	goto	u6875
 19103  29EC  0875               	movf	??___xxtofl,w
 19104  29ED  04A2               	iorwf	___xxtofl@arg,f
 19105  29EE  0876               	movf	??___xxtofl+1,w
 19106  29EF  04A3               	iorwf	___xxtofl@arg+1,f
 19107  29F0  0877               	movf	??___xxtofl+2,w
 19108  29F1  04A4               	iorwf	___xxtofl@arg+2,f
 19109  29F2  0878               	movf	??___xxtofl+3,w
 19110  29F3  04A5               	iorwf	___xxtofl@arg+3,f
 19111  29F4  0820               	movf	___xxtofl@sign,w
 19112  29F5  1D03               	btfss	3,2
 19113  29F6  1FF4               	btfss	___xxtofl@val+3,7
 19114  29F7  29F9               	goto	l5541
 19115  29F8  17A5               	bsf	___xxtofl@arg+3,7
 19116  29F9                     l5541:	
 19117  29F9  0825               	movf	___xxtofl@arg+3,w
 19118  29FA  00F4               	movwf	?___xxtofl+3
 19119  29FB  0824               	movf	___xxtofl@arg+2,w
 19120  29FC  00F3               	movwf	?___xxtofl+2
 19121  29FD  0823               	movf	___xxtofl@arg+1,w
 19122  29FE  00F2               	movwf	?___xxtofl+1
 19123  29FF  0822               	movf	___xxtofl@arg,w
 19124  2A00  00F1               	movwf	?___xxtofl
 19125  2A01  0008               	return
 19126  2A02                     __end_of___xxtofl:	
 19127                           
 19128                           	psect	text68
 19129  362A                     __ptext68:	
 19130 ;; *************** function ___fltol *****************
 19131 ;; Defined at:
 19132 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 19133 ;; Parameters:    Size  Location     Type
 19134 ;;  f1              4    8[BANK1 ] unsigned char 
 19135 ;; Auto vars:     Size  Location     Type
 19136 ;;  exp1            1   11[COMMON] unsigned char 
 19137 ;;  sign1           1   10[COMMON] unsigned char 
 19138 ;; Return value:  Size  Location     Type
 19139 ;;                  4    8[BANK1 ] long 
 19140 ;; Registers used:
 19141 ;;		wreg, status,2, status,0
 19142 ;; Tracked objects:
 19143 ;;		On entry : 0/0
 19144 ;;		On exit  : 0/0
 19145 ;;		Unchanged: 0/0
 19146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19147 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19148 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19149 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19150 ;;      Totals:         2       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19151 ;;Total ram usage:       11 bytes
 19152 ;; Hardware stack levels used:    1
 19153 ;; Hardware stack levels required when called:    1
 19154 ;; This function calls:
 19155 ;;		Nothing
 19156 ;; This function is called by:
 19157 ;;		_updateCurrent
 19158 ;;		_updateVoltages
 19159 ;;		_updateTemperatures
 19160 ;;		_calibrate_BATTSOC
 19161 ;;		_coulomb_counter
 19162 ;;		_AFE_getSetShortCircuitCurrent
 19163 ;;		_AFE_getOverCurrentDischargeCurrent
 19164 ;; This function uses a non-reentrant model
 19165 ;;
 19166                           
 19167                           
 19168                           ;psect for function ___fltol
 19169  362A                     ___fltol:	
 19170                           
 19171                           ;incstack = 0
 19172                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 19173  362A  1003               	clrc
 19174  362B  0021               	movlb	1	; select bank1
 19175  362C  0D2A               	rlf	(___fltol@f1+2)^(0+128),w
 19176  362D  0D2B               	rlf	(___fltol@f1+3)^(0+128),w
 19177  362E  00AC               	movwf	??___fltol^(0+128)
 19178  362F  082C               	movf	??___fltol^(0+128),w
 19179  3630  00FB               	movwf	___fltol@exp1
 19180  3631  087B               	movf	___fltol@exp1,w
 19181  3632  1D03               	btfss	3,2
 19182  3633  2E3D               	goto	l5751
 19183  3634                     l5747:	
 19184  3634  3000               	movlw	0
 19185  3635  00AB               	movwf	(?___fltol+3)^(0+128)
 19186  3636  3000               	movlw	0
 19187  3637  00AA               	movwf	(?___fltol+2)^(0+128)
 19188  3638  3000               	movlw	0
 19189  3639  00A9               	movwf	(?___fltol+1)^(0+128)
 19190  363A  3000               	movlw	0
 19191  363B  00A8               	movwf	?___fltol^(0+128)
 19192  363C  0008               	return
 19193  363D                     l5751:	
 19194  363D  0828               	movf	___fltol@f1^(0+128),w
 19195  363E  00AC               	movwf	??___fltol^(0+128)
 19196  363F  0829               	movf	(___fltol@f1+1)^(0+128),w
 19197  3640  00AD               	movwf	(??___fltol^(0+128)+1)
 19198  3641  082A               	movf	(___fltol@f1+2)^(0+128),w
 19199  3642  00AE               	movwf	(??___fltol^(0+128)+2)
 19200  3643  082B               	movf	(___fltol@f1+3)^(0+128),w
 19201  3644  00AF               	movwf	(??___fltol^(0+128)+3)
 19202  3645  301F               	movlw	31
 19203  3646                     u7225:	
 19204  3646  36AF               	lsrf	(??___fltol^(0+128)+3),f
 19205  3647  0CAE               	rrf	(??___fltol^(0+128)+2),f
 19206  3648  0CAD               	rrf	(??___fltol^(0+128)+1),f
 19207  3649  0CAC               	rrf	??___fltol^(0+128),f
 19208  364A  0B89               	decfsz	9,f
 19209  364B  2E46               	goto	u7225
 19210  364C  082C               	movf	??___fltol^(0+128),w
 19211  364D  00B0               	movwf	(??___fltol+4)^(0+128)
 19212  364E  0830               	movf	(??___fltol+4)^(0+128),w
 19213  364F  00FA               	movwf	___fltol@sign1
 19214  3650  17AA               	bsf	(___fltol@f1^(0+128)+2),7
 19215  3651  30FF               	movlw	255
 19216  3652  05A8               	andwf	___fltol@f1^(0+128),f
 19217  3653  30FF               	movlw	255
 19218  3654  05A9               	andwf	(___fltol@f1+1)^(0+128),f
 19219  3655  30FF               	movlw	255
 19220  3656  05AA               	andwf	(___fltol@f1+2)^(0+128),f
 19221  3657  3000               	movlw	0
 19222  3658  05AB               	andwf	(___fltol@f1+3)^(0+128),f
 19223  3659  3096               	movlw	150
 19224  365A  02FB               	subwf	___fltol@exp1,f
 19225  365B  1FFB               	btfss	___fltol@exp1,7
 19226  365C  2E70               	goto	l5769
 19227  365D  087B               	movf	___fltol@exp1,w
 19228  365E  3A80               	xorlw	128
 19229  365F  3E97               	addlw	151
 19230  3660  1C03               	btfss	3,0
 19231  3661  2E34               	goto	l5747
 19232  3662                     l5767:	
 19233  3662  3001               	movlw	1
 19234  3663                     u7255:	
 19235  3663  36AB               	lsrf	(___fltol@f1+3)^(0+128),f
 19236  3664  0CAA               	rrf	(___fltol@f1+2)^(0+128),f
 19237  3665  0CA9               	rrf	(___fltol@f1+1)^(0+128),f
 19238  3666  0CA8               	rrf	___fltol@f1^(0+128),f
 19239  3667  0B89               	decfsz	9,f
 19240  3668  2E63               	goto	u7255
 19241  3669  3001               	movlw	1
 19242  366A  00AC               	movwf	??___fltol^(0+128)
 19243  366B  082C               	movf	??___fltol^(0+128),w
 19244  366C  07FB               	addwf	___fltol@exp1,f
 19245  366D  1903               	btfsc	3,2
 19246  366E  2E81               	goto	l5777
 19247  366F  2E62               	goto	l5767
 19248  3670                     l5769:	
 19249  3670  3020               	movlw	32
 19250  3671  027B               	subwf	___fltol@exp1,w
 19251  3672  1803               	btfsc	3,0
 19252  3673  2E34               	goto	l5747
 19253  3674                     l1147:	
 19254  3674  087B               	movf	___fltol@exp1,w
 19255  3675  1903               	btfsc	3,2
 19256  3676  2E81               	goto	l5777
 19257  3677  3001               	movlw	1
 19258  3678                     u7285:	
 19259  3678  35A8               	lslf	___fltol@f1^(0+128),f
 19260  3679  0DA9               	rlf	(___fltol@f1+1)^(0+128),f
 19261  367A  0DAA               	rlf	(___fltol@f1+2)^(0+128),f
 19262  367B  0DAB               	rlf	(___fltol@f1+3)^(0+128),f
 19263  367C  0B89               	decfsz	9,f
 19264  367D  2E78               	goto	u7285
 19265  367E  3001               	movlw	1
 19266  367F  02FB               	subwf	___fltol@exp1,f
 19267  3680  2E74               	goto	l1147
 19268  3681                     l5777:	
 19269  3681  087A               	movf	___fltol@sign1,w
 19270  3682  1903               	btfsc	3,2
 19271  3683  0008               	return
 19272  3684  09A8               	comf	___fltol@f1^(0+128),f
 19273  3685  09A9               	comf	(___fltol@f1+1)^(0+128),f
 19274  3686  09AA               	comf	(___fltol@f1+2)^(0+128),f
 19275  3687  09AB               	comf	(___fltol@f1+3)^(0+128),f
 19276  3688  0AA8               	incf	___fltol@f1^(0+128),f
 19277  3689  1903               	skipnz
 19278  368A  0AA9               	incf	(___fltol@f1+1)^(0+128),f
 19279  368B  1903               	skipnz
 19280  368C  0AAA               	incf	(___fltol@f1+2)^(0+128),f
 19281  368D  1903               	skipnz
 19282  368E  0AAB               	incf	(___fltol@f1+3)^(0+128),f
 19283  368F  0008               	return
 19284  3690                     __end_of___fltol:	
 19285                           
 19286                           	psect	text69
 19287  1023                     __ptext69:	
 19288 ;; *************** function ___flmul *****************
 19289 ;; Defined at:
 19290 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 19291 ;; Parameters:    Size  Location     Type
 19292 ;;  b               4    6[BANK0 ] long 
 19293 ;;  a               4   10[BANK0 ] long 
 19294 ;; Auto vars:     Size  Location     Type
 19295 ;;  prod            4   26[BANK0 ] struct .
 19296 ;;  grs             4   20[BANK0 ] unsigned long 
 19297 ;;  temp            2   30[BANK0 ] struct .
 19298 ;;  bexp            1   25[BANK0 ] unsigned char 
 19299 ;;  aexp            1   24[BANK0 ] unsigned char 
 19300 ;;  sign            1   19[BANK0 ] unsigned char 
 19301 ;; Return value:  Size  Location     Type
 19302 ;;                  4    6[BANK0 ] unsigned char 
 19303 ;; Registers used:
 19304 ;;		wreg, status,2, status,0, pclath, cstack
 19305 ;; Tracked objects:
 19306 ;;		On entry : 0/0
 19307 ;;		On exit  : 0/0
 19308 ;;		Unchanged: 0/0
 19309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19310 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19311 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19312 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19313 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19314 ;;Total ram usage:       26 bytes
 19315 ;; Hardware stack levels used:    1
 19316 ;; Hardware stack levels required when called:    2
 19317 ;; This function calls:
 19318 ;;		__Umul8_16
 19319 ;; This function is called by:
 19320 ;;		_setShortCircuitProtection
 19321 ;;		_setOverCurrentDischargeProtection
 19322 ;;		_updateCurrent
 19323 ;;		_updateVoltages
 19324 ;;		_updateTemperatures
 19325 ;;		_calibrate_BATTSOC
 19326 ;;		_coulomb_counter
 19327 ;;		_logf
 19328 ;; This function uses a non-reentrant model
 19329 ;;
 19330                           
 19331                           
 19332                           ;psect for function ___flmul
 19333  1023                     ___flmul:	
 19334                           
 19335                           ;incstack = 0
 19336                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 19337  1023  0020               	movlb	0	; select bank0
 19338  1024  0829               	movf	___flmul@b+3,w
 19339  1025  3980               	andlw	128
 19340  1026  00AE               	movwf	??___flmul
 19341  1027  082E               	movf	??___flmul,w
 19342  1028  00B3               	movwf	___flmul@sign
 19343  1029  3529               	lslf	___flmul@b+3,w
 19344  102A  00AE               	movwf	??___flmul
 19345  102B  082E               	movf	??___flmul,w
 19346  102C  00B9               	movwf	___flmul@bexp
 19347  102D  1BA8               	btfsc	___flmul@b+2,7
 19348  102E  1439               	bsf	___flmul@bexp,0
 19349  102F  0839               	movf	___flmul@bexp,w
 19350  1030  1903               	btfsc	3,2
 19351  1031  283F               	goto	l5377
 19352  1032  0A39               	incf	___flmul@bexp,w
 19353  1033  1D03               	btfss	3,2
 19354  1034  283D               	goto	l5375
 19355  1035  3000               	movlw	0
 19356  1036  00A9               	movwf	___flmul@b+3
 19357  1037  3000               	movlw	0
 19358  1038  00A8               	movwf	___flmul@b+2
 19359  1039  3000               	movlw	0
 19360  103A  00A7               	movwf	___flmul@b+1
 19361  103B  3000               	movlw	0
 19362  103C  00A6               	movwf	___flmul@b
 19363  103D                     l5375:	
 19364  103D  17A8               	bsf	___flmul@b+2,7
 19365  103E  2847               	goto	l5379
 19366  103F                     l5377:	
 19367  103F  3000               	movlw	0
 19368  1040  00A9               	movwf	___flmul@b+3
 19369  1041  3000               	movlw	0
 19370  1042  00A8               	movwf	___flmul@b+2
 19371  1043  3000               	movlw	0
 19372  1044  00A7               	movwf	___flmul@b+1
 19373  1045  3000               	movlw	0
 19374  1046  00A6               	movwf	___flmul@b
 19375  1047                     l5379:	
 19376  1047  082D               	movf	___flmul@a+3,w
 19377  1048  3980               	andlw	128
 19378  1049  00AE               	movwf	??___flmul
 19379  104A  082E               	movf	??___flmul,w
 19380  104B  06B3               	xorwf	___flmul@sign,f
 19381  104C  352D               	lslf	___flmul@a+3,w
 19382  104D  00AE               	movwf	??___flmul
 19383  104E  082E               	movf	??___flmul,w
 19384  104F  00B8               	movwf	___flmul@aexp
 19385  1050  1BAC               	btfsc	___flmul@a+2,7
 19386  1051  1438               	bsf	___flmul@aexp,0
 19387  1052  0838               	movf	___flmul@aexp,w
 19388  1053  1903               	btfsc	3,2
 19389  1054  2862               	goto	l5395
 19390  1055  0A38               	incf	___flmul@aexp,w
 19391  1056  1D03               	btfss	3,2
 19392  1057  2860               	goto	l5393
 19393  1058  3000               	movlw	0
 19394  1059  00AD               	movwf	___flmul@a+3
 19395  105A  3000               	movlw	0
 19396  105B  00AC               	movwf	___flmul@a+2
 19397  105C  3000               	movlw	0
 19398  105D  00AB               	movwf	___flmul@a+1
 19399  105E  3000               	movlw	0
 19400  105F  00AA               	movwf	___flmul@a
 19401  1060                     l5393:	
 19402  1060  17AC               	bsf	___flmul@a+2,7
 19403  1061  286A               	goto	l5397
 19404  1062                     l5395:	
 19405  1062  3000               	movlw	0
 19406  1063  00AD               	movwf	___flmul@a+3
 19407  1064  3000               	movlw	0
 19408  1065  00AC               	movwf	___flmul@a+2
 19409  1066  3000               	movlw	0
 19410  1067  00AB               	movwf	___flmul@a+1
 19411  1068  3000               	movlw	0
 19412  1069  00AA               	movwf	___flmul@a
 19413  106A                     l5397:	
 19414  106A  0838               	movf	___flmul@aexp,w
 19415  106B  1D03               	btfss	3,2
 19416  106C  0839               	movf	___flmul@bexp,w
 19417  106D  1D03               	btfss	3,2
 19418  106E  2878               	goto	l5405
 19419  106F  3000               	movlw	0
 19420  1070  00A9               	movwf	?___flmul+3
 19421  1071  3000               	movlw	0
 19422  1072  00A8               	movwf	?___flmul+2
 19423  1073  3000               	movlw	0
 19424  1074  00A7               	movwf	?___flmul+1
 19425  1075  3000               	movlw	0
 19426  1076  00A6               	movwf	?___flmul
 19427  1077  0008               	return
 19428  1078                     l5405:	
 19429  1078  0826               	movf	___flmul@b,w
 19430  1079  00AE               	movwf	??___flmul
 19431  107A  082E               	movf	??___flmul,w
 19432  107B  00F1               	movwf	__Umul8_16@multiplicand
 19433  107C  082C               	movf	___flmul@a+2,w
 19434  107D  31B2  22EC  3190   	fcall	__Umul8_16
 19435  1080  0872               	movf	?__Umul8_16+1,w
 19436  1081  0020               	movlb	0	; select bank0
 19437  1082  00BF               	movwf	___flmul@temp+1
 19438  1083  0871               	movf	?__Umul8_16,w
 19439  1084  00BE               	movwf	___flmul@temp
 19440  1085  083E               	movf	___flmul@temp,w
 19441  1086  00AE               	movwf	??___flmul
 19442  1087  01AF               	clrf	??___flmul+1
 19443  1088  01B0               	clrf	??___flmul+2
 19444  1089  01B1               	clrf	??___flmul+3
 19445  108A  0831               	movf	??___flmul+3,w
 19446  108B  00B7               	movwf	___flmul@grs+3
 19447  108C  0830               	movf	??___flmul+2,w
 19448  108D  00B6               	movwf	___flmul@grs+2
 19449  108E  082F               	movf	??___flmul+1,w
 19450  108F  00B5               	movwf	___flmul@grs+1
 19451  1090  082E               	movf	??___flmul,w
 19452  1091  00B4               	movwf	___flmul@grs
 19453  1092  083F               	movf	___flmul@temp+1,w
 19454  1093  00AE               	movwf	??___flmul
 19455  1094  01AF               	clrf	??___flmul+1
 19456  1095  01B0               	clrf	??___flmul+2
 19457  1096  01B1               	clrf	??___flmul+3
 19458  1097  0831               	movf	??___flmul+3,w
 19459  1098  00BD               	movwf	___flmul@prod+3
 19460  1099  0830               	movf	??___flmul+2,w
 19461  109A  00BC               	movwf	___flmul@prod+2
 19462  109B  082F               	movf	??___flmul+1,w
 19463  109C  00BB               	movwf	___flmul@prod+1
 19464  109D  082E               	movf	??___flmul,w
 19465  109E  00BA               	movwf	___flmul@prod
 19466  109F  0827               	movf	___flmul@b+1,w
 19467  10A0  00AE               	movwf	??___flmul
 19468  10A1  082E               	movf	??___flmul,w
 19469  10A2  00F1               	movwf	__Umul8_16@multiplicand
 19470  10A3  082B               	movf	___flmul@a+1,w
 19471  10A4  31B2  22EC  3190   	fcall	__Umul8_16
 19472  10A7  0872               	movf	?__Umul8_16+1,w
 19473  10A8  0020               	movlb	0	; select bank0
 19474  10A9  00BF               	movwf	___flmul@temp+1
 19475  10AA  0871               	movf	?__Umul8_16,w
 19476  10AB  00BE               	movwf	___flmul@temp
 19477  10AC  083E               	movf	___flmul@temp,w
 19478  10AD  00AE               	movwf	??___flmul
 19479  10AE  01AF               	clrf	??___flmul+1
 19480  10AF  01B0               	clrf	??___flmul+2
 19481  10B0  01B1               	clrf	??___flmul+3
 19482  10B1  082E               	movf	??___flmul,w
 19483  10B2  07B4               	addwf	___flmul@grs,f
 19484  10B3  082F               	movf	??___flmul+1,w
 19485  10B4  3DB5               	addwfc	___flmul@grs+1,f
 19486  10B5  0830               	movf	??___flmul+2,w
 19487  10B6  3DB6               	addwfc	___flmul@grs+2,f
 19488  10B7  0831               	movf	??___flmul+3,w
 19489  10B8  3DB7               	addwfc	___flmul@grs+3,f
 19490  10B9  083F               	movf	___flmul@temp+1,w
 19491  10BA  00AE               	movwf	??___flmul
 19492  10BB  01AF               	clrf	??___flmul+1
 19493  10BC  01B0               	clrf	??___flmul+2
 19494  10BD  01B1               	clrf	??___flmul+3
 19495  10BE  082E               	movf	??___flmul,w
 19496  10BF  07BA               	addwf	___flmul@prod,f
 19497  10C0  082F               	movf	??___flmul+1,w
 19498  10C1  3DBB               	addwfc	___flmul@prod+1,f
 19499  10C2  0830               	movf	??___flmul+2,w
 19500  10C3  3DBC               	addwfc	___flmul@prod+2,f
 19501  10C4  0831               	movf	??___flmul+3,w
 19502  10C5  3DBD               	addwfc	___flmul@prod+3,f
 19503  10C6  0828               	movf	___flmul@b+2,w
 19504  10C7  00AE               	movwf	??___flmul
 19505  10C8  082E               	movf	??___flmul,w
 19506  10C9  00F1               	movwf	__Umul8_16@multiplicand
 19507  10CA  082A               	movf	___flmul@a,w
 19508  10CB  31B2  22EC  3190   	fcall	__Umul8_16
 19509  10CE  0872               	movf	?__Umul8_16+1,w
 19510  10CF  0020               	movlb	0	; select bank0
 19511  10D0  00BF               	movwf	___flmul@temp+1
 19512  10D1  0871               	movf	?__Umul8_16,w
 19513  10D2  00BE               	movwf	___flmul@temp
 19514  10D3  083E               	movf	___flmul@temp,w
 19515  10D4  00AE               	movwf	??___flmul
 19516  10D5  01AF               	clrf	??___flmul+1
 19517  10D6  01B0               	clrf	??___flmul+2
 19518  10D7  01B1               	clrf	??___flmul+3
 19519  10D8  082E               	movf	??___flmul,w
 19520  10D9  07B4               	addwf	___flmul@grs,f
 19521  10DA  082F               	movf	??___flmul+1,w
 19522  10DB  3DB5               	addwfc	___flmul@grs+1,f
 19523  10DC  0830               	movf	??___flmul+2,w
 19524  10DD  3DB6               	addwfc	___flmul@grs+2,f
 19525  10DE  0831               	movf	??___flmul+3,w
 19526  10DF  3DB7               	addwfc	___flmul@grs+3,f
 19527  10E0  083F               	movf	___flmul@temp+1,w
 19528  10E1  00AE               	movwf	??___flmul
 19529  10E2  01AF               	clrf	??___flmul+1
 19530  10E3  01B0               	clrf	??___flmul+2
 19531  10E4  01B1               	clrf	??___flmul+3
 19532  10E5  082E               	movf	??___flmul,w
 19533  10E6  07BA               	addwf	___flmul@prod,f
 19534  10E7  082F               	movf	??___flmul+1,w
 19535  10E8  3DBB               	addwfc	___flmul@prod+1,f
 19536  10E9  0830               	movf	??___flmul+2,w
 19537  10EA  3DBC               	addwfc	___flmul@prod+2,f
 19538  10EB  0831               	movf	??___flmul+3,w
 19539  10EC  3DBD               	addwfc	___flmul@prod+3,f
 19540  10ED  3008               	movlw	8
 19541  10EE                     u6585:	
 19542  10EE  35B4               	lslf	___flmul@grs,f
 19543  10EF  0DB5               	rlf	___flmul@grs+1,f
 19544  10F0  0DB6               	rlf	___flmul@grs+2,f
 19545  10F1  0DB7               	rlf	___flmul@grs+3,f
 19546  10F2  0B89               	decfsz	9,f
 19547  10F3  28EE               	goto	u6585
 19548  10F4  0827               	movf	___flmul@b+1,w
 19549  10F5  00AE               	movwf	??___flmul
 19550  10F6  082E               	movf	??___flmul,w
 19551  10F7  00F1               	movwf	__Umul8_16@multiplicand
 19552  10F8  082A               	movf	___flmul@a,w
 19553  10F9  31B2  22EC  3190   	fcall	__Umul8_16
 19554  10FC  0872               	movf	?__Umul8_16+1,w
 19555  10FD  0020               	movlb	0	; select bank0
 19556  10FE  00BF               	movwf	___flmul@temp+1
 19557  10FF  0871               	movf	?__Umul8_16,w
 19558  1100  00BE               	movwf	___flmul@temp
 19559  1101  083E               	movf	___flmul@temp,w
 19560  1102  07B4               	addwf	___flmul@grs,f
 19561  1103  083F               	movf	___flmul@temp+1,w
 19562  1104  3DB5               	addwfc	___flmul@grs+1,f
 19563  1105  3000               	movlw	0
 19564  1106  3DB6               	addwfc	___flmul@grs+2,f
 19565  1107  3DB7               	addwfc	___flmul@grs+3,f
 19566  1108  0826               	movf	___flmul@b,w
 19567  1109  00AE               	movwf	??___flmul
 19568  110A  082E               	movf	??___flmul,w
 19569  110B  00F1               	movwf	__Umul8_16@multiplicand
 19570  110C  082B               	movf	___flmul@a+1,w
 19571  110D  31B2  22EC  3190   	fcall	__Umul8_16
 19572  1110  0872               	movf	?__Umul8_16+1,w
 19573  1111  0020               	movlb	0	; select bank0
 19574  1112  00BF               	movwf	___flmul@temp+1
 19575  1113  0871               	movf	?__Umul8_16,w
 19576  1114  00BE               	movwf	___flmul@temp
 19577  1115  083E               	movf	___flmul@temp,w
 19578  1116  07B4               	addwf	___flmul@grs,f
 19579  1117  083F               	movf	___flmul@temp+1,w
 19580  1118  3DB5               	addwfc	___flmul@grs+1,f
 19581  1119  3000               	movlw	0
 19582  111A  3DB6               	addwfc	___flmul@grs+2,f
 19583  111B  3DB7               	addwfc	___flmul@grs+3,f
 19584  111C  3008               	movlw	8
 19585  111D                     u6595:	
 19586  111D  35B4               	lslf	___flmul@grs,f
 19587  111E  0DB5               	rlf	___flmul@grs+1,f
 19588  111F  0DB6               	rlf	___flmul@grs+2,f
 19589  1120  0DB7               	rlf	___flmul@grs+3,f
 19590  1121  0B89               	decfsz	9,f
 19591  1122  291D               	goto	u6595
 19592  1123  0826               	movf	___flmul@b,w
 19593  1124  00AE               	movwf	??___flmul
 19594  1125  082E               	movf	??___flmul,w
 19595  1126  00F1               	movwf	__Umul8_16@multiplicand
 19596  1127  082A               	movf	___flmul@a,w
 19597  1128  31B2  22EC  3190   	fcall	__Umul8_16
 19598  112B  0872               	movf	?__Umul8_16+1,w
 19599  112C  0020               	movlb	0	; select bank0
 19600  112D  00BF               	movwf	___flmul@temp+1
 19601  112E  0871               	movf	?__Umul8_16,w
 19602  112F  00BE               	movwf	___flmul@temp
 19603  1130  083E               	movf	___flmul@temp,w
 19604  1131  07B4               	addwf	___flmul@grs,f
 19605  1132  083F               	movf	___flmul@temp+1,w
 19606  1133  3DB5               	addwfc	___flmul@grs+1,f
 19607  1134  3000               	movlw	0
 19608  1135  3DB6               	addwfc	___flmul@grs+2,f
 19609  1136  3DB7               	addwfc	___flmul@grs+3,f
 19610  1137  0827               	movf	___flmul@b+1,w
 19611  1138  00AE               	movwf	??___flmul
 19612  1139  082E               	movf	??___flmul,w
 19613  113A  00F1               	movwf	__Umul8_16@multiplicand
 19614  113B  082C               	movf	___flmul@a+2,w
 19615  113C  31B2  22EC  3190   	fcall	__Umul8_16
 19616  113F  0872               	movf	?__Umul8_16+1,w
 19617  1140  0020               	movlb	0	; select bank0
 19618  1141  00BF               	movwf	___flmul@temp+1
 19619  1142  0871               	movf	?__Umul8_16,w
 19620  1143  00BE               	movwf	___flmul@temp
 19621  1144  083E               	movf	___flmul@temp,w
 19622  1145  07BA               	addwf	___flmul@prod,f
 19623  1146  083F               	movf	___flmul@temp+1,w
 19624  1147  3DBB               	addwfc	___flmul@prod+1,f
 19625  1148  3000               	movlw	0
 19626  1149  3DBC               	addwfc	___flmul@prod+2,f
 19627  114A  3DBD               	addwfc	___flmul@prod+3,f
 19628  114B  0828               	movf	___flmul@b+2,w
 19629  114C  00AE               	movwf	??___flmul
 19630  114D  082E               	movf	??___flmul,w
 19631  114E  00F1               	movwf	__Umul8_16@multiplicand
 19632  114F  082B               	movf	___flmul@a+1,w
 19633  1150  31B2  22EC  3190   	fcall	__Umul8_16
 19634  1153  0872               	movf	?__Umul8_16+1,w
 19635  1154  0020               	movlb	0	; select bank0
 19636  1155  00BF               	movwf	___flmul@temp+1
 19637  1156  0871               	movf	?__Umul8_16,w
 19638  1157  00BE               	movwf	___flmul@temp
 19639  1158  083E               	movf	___flmul@temp,w
 19640  1159  07BA               	addwf	___flmul@prod,f
 19641  115A  083F               	movf	___flmul@temp+1,w
 19642  115B  3DBB               	addwfc	___flmul@prod+1,f
 19643  115C  3000               	movlw	0
 19644  115D  3DBC               	addwfc	___flmul@prod+2,f
 19645  115E  3DBD               	addwfc	___flmul@prod+3,f
 19646  115F  0828               	movf	___flmul@b+2,w
 19647  1160  00AE               	movwf	??___flmul
 19648  1161  082E               	movf	??___flmul,w
 19649  1162  00F1               	movwf	__Umul8_16@multiplicand
 19650  1163  082C               	movf	___flmul@a+2,w
 19651  1164  31B2  22EC  3190   	fcall	__Umul8_16
 19652  1167  0872               	movf	?__Umul8_16+1,w
 19653  1168  0020               	movlb	0	; select bank0
 19654  1169  00BF               	movwf	___flmul@temp+1
 19655  116A  0871               	movf	?__Umul8_16,w
 19656  116B  00BE               	movwf	___flmul@temp
 19657  116C  083E               	movf	___flmul@temp,w
 19658  116D  00AE               	movwf	??___flmul
 19659  116E  083F               	movf	___flmul@temp+1,w
 19660  116F  00AF               	movwf	??___flmul+1
 19661  1170  01B0               	clrf	??___flmul+2
 19662  1171  01B1               	clrf	??___flmul+3
 19663  1172  3008               	movlw	8
 19664  1173                     u6605:	
 19665  1173  35AE               	lslf	??___flmul,f
 19666  1174  0DAF               	rlf	??___flmul+1,f
 19667  1175  0DB0               	rlf	??___flmul+2,f
 19668  1176  0DB1               	rlf	??___flmul+3,f
 19669  1177  0B89               	decfsz	9,f
 19670  1178  2973               	goto	u6605
 19671  1179  082E               	movf	??___flmul,w
 19672  117A  07BA               	addwf	___flmul@prod,f
 19673  117B  082F               	movf	??___flmul+1,w
 19674  117C  3DBB               	addwfc	___flmul@prod+1,f
 19675  117D  0830               	movf	??___flmul+2,w
 19676  117E  3DBC               	addwfc	___flmul@prod+2,f
 19677  117F  0831               	movf	??___flmul+3,w
 19678  1180  3DBD               	addwfc	___flmul@prod+3,f
 19679  1181  0834               	movf	___flmul@grs,w
 19680  1182  00AE               	movwf	??___flmul
 19681  1183  0835               	movf	___flmul@grs+1,w
 19682  1184  00AF               	movwf	??___flmul+1
 19683  1185  0836               	movf	___flmul@grs+2,w
 19684  1186  00B0               	movwf	??___flmul+2
 19685  1187  0837               	movf	___flmul@grs+3,w
 19686  1188  00B1               	movwf	??___flmul+3
 19687  1189  3018               	movlw	24
 19688  118A                     u6615:	
 19689  118A  36B1               	lsrf	??___flmul+3,f
 19690  118B  0CB0               	rrf	??___flmul+2,f
 19691  118C  0CAF               	rrf	??___flmul+1,f
 19692  118D  0CAE               	rrf	??___flmul,f
 19693  118E  0B89               	decfsz	9,f
 19694  118F  298A               	goto	u6615
 19695  1190  082E               	movf	??___flmul,w
 19696  1191  07BA               	addwf	___flmul@prod,f
 19697  1192  082F               	movf	??___flmul+1,w
 19698  1193  3DBB               	addwfc	___flmul@prod+1,f
 19699  1194  0830               	movf	??___flmul+2,w
 19700  1195  3DBC               	addwfc	___flmul@prod+2,f
 19701  1196  0831               	movf	??___flmul+3,w
 19702  1197  3DBD               	addwfc	___flmul@prod+3,f
 19703  1198  3008               	movlw	8
 19704  1199                     u6625:	
 19705  1199  35B4               	lslf	___flmul@grs,f
 19706  119A  0DB5               	rlf	___flmul@grs+1,f
 19707  119B  0DB6               	rlf	___flmul@grs+2,f
 19708  119C  0DB7               	rlf	___flmul@grs+3,f
 19709  119D  0B89               	decfsz	9,f
 19710  119E  2999               	goto	u6625
 19711  119F  0839               	movf	___flmul@bexp,w
 19712  11A0  0738               	addwf	___flmul@aexp,w
 19713  11A1  00AE               	movwf	??___flmul
 19714  11A2  01AF               	clrf	??___flmul+1
 19715  11A3  0DAF               	rlf	??___flmul+1,f
 19716  11A4  082E               	movf	??___flmul,w
 19717  11A5  3E82               	addlw	130
 19718  11A6  00BE               	movwf	___flmul@temp
 19719  11A7  30FF               	movlw	255
 19720  11A8  3D2F               	addwfc	??___flmul+1,w
 19721  11A9  00BF               	movwf	___flmul@temp+1
 19722  11AA                     l5457:	
 19723  11AA  1BBC               	btfsc	___flmul@prod+2,7
 19724  11AB  29C1               	goto	l5459
 19725  11AC  3001               	movlw	1
 19726  11AD                     u6635:	
 19727  11AD  35BA               	lslf	___flmul@prod,f
 19728  11AE  0DBB               	rlf	___flmul@prod+1,f
 19729  11AF  0DBC               	rlf	___flmul@prod+2,f
 19730  11B0  0DBD               	rlf	___flmul@prod+3,f
 19731  11B1  0B89               	decfsz	9,f
 19732  11B2  29AD               	goto	u6635
 19733  11B3  1BB7               	btfsc	___flmul@grs+3,7
 19734  11B4  143A               	bsf	___flmul@prod,0
 19735  11B5  3001               	movlw	1
 19736  11B6                     u6655:	
 19737  11B6  35B4               	lslf	___flmul@grs,f
 19738  11B7  0DB5               	rlf	___flmul@grs+1,f
 19739  11B8  0DB6               	rlf	___flmul@grs+2,f
 19740  11B9  0DB7               	rlf	___flmul@grs+3,f
 19741  11BA  0B89               	decfsz	9,f
 19742  11BB  29B6               	goto	u6655
 19743  11BC  30FF               	movlw	255
 19744  11BD  07BE               	addwf	___flmul@temp,f
 19745  11BE  30FF               	movlw	255
 19746  11BF  3DBF               	addwfc	___flmul@temp+1,f
 19747  11C0  29AA               	goto	l5457
 19748  11C1                     l5459:	
 19749  11C1  01B8               	clrf	___flmul@aexp
 19750  11C2  1FB7               	btfss	___flmul@grs+3,7
 19751  11C3  29DA               	goto	l5469
 19752  11C4  30FF               	movlw	255
 19753  11C5  0534               	andwf	___flmul@grs,w
 19754  11C6  00AE               	movwf	??___flmul
 19755  11C7  30FF               	movlw	255
 19756  11C8  0535               	andwf	___flmul@grs+1,w
 19757  11C9  00AF               	movwf	??___flmul+1
 19758  11CA  30FF               	movlw	255
 19759  11CB  0536               	andwf	___flmul@grs+2,w
 19760  11CC  00B0               	movwf	??___flmul+2
 19761  11CD  307F               	movlw	127
 19762  11CE  0537               	andwf	___flmul@grs+3,w
 19763  11CF  00B1               	movwf	??___flmul+3
 19764  11D0  0831               	movf	??___flmul+3,w
 19765  11D1  0430               	iorwf	??___flmul+2,w
 19766  11D2  042F               	iorwf	??___flmul+1,w
 19767  11D3  042E               	iorwf	??___flmul,w
 19768  11D4  1903               	skipnz
 19769  11D5  183A               	btfsc	___flmul@prod,0
 19770  11D6  29D8               	goto	l5465
 19771  11D7  29DA               	goto	l5469
 19772  11D8                     l5465:	
 19773  11D8  01B8               	clrf	___flmul@aexp
 19774  11D9  0AB8               	incf	___flmul@aexp,f
 19775  11DA                     l5469:	
 19776  11DA  0838               	movf	___flmul@aexp,w
 19777  11DB  1903               	btfsc	3,2
 19778  11DC  2A03               	goto	l5479
 19779  11DD  3001               	movlw	1
 19780  11DE  07BA               	addwf	___flmul@prod,f
 19781  11DF  3000               	movlw	0
 19782  11E0  3DBB               	addwfc	___flmul@prod+1,f
 19783  11E1  3000               	movlw	0
 19784  11E2  3DBC               	addwfc	___flmul@prod+2,f
 19785  11E3  3000               	movlw	0
 19786  11E4  3DBD               	addwfc	___flmul@prod+3,f
 19787  11E5  1C3D               	btfss	___flmul@prod+3,0
 19788  11E6  2A03               	goto	l5479
 19789  11E7  083A               	movf	___flmul@prod,w
 19790  11E8  00AE               	movwf	??___flmul
 19791  11E9  083B               	movf	___flmul@prod+1,w
 19792  11EA  00AF               	movwf	??___flmul+1
 19793  11EB  083C               	movf	___flmul@prod+2,w
 19794  11EC  00B0               	movwf	??___flmul+2
 19795  11ED  083D               	movf	___flmul@prod+3,w
 19796  11EE  00B1               	movwf	??___flmul+3
 19797  11EF  3001               	movlw	1
 19798  11F0  00B2               	movwf	??___flmul+4
 19799  11F1                     u6725:	
 19800  11F1  37B1               	asrf	??___flmul+3,f
 19801  11F2  0CB0               	rrf	??___flmul+2,f
 19802  11F3  0CAF               	rrf	??___flmul+1,f
 19803  11F4  0CAE               	rrf	??___flmul,f
 19804  11F5  0BB2               	decfsz	??___flmul+4,f
 19805  11F6  29F1               	goto	u6725
 19806  11F7  0831               	movf	??___flmul+3,w
 19807  11F8  00BD               	movwf	___flmul@prod+3
 19808  11F9  0830               	movf	??___flmul+2,w
 19809  11FA  00BC               	movwf	___flmul@prod+2
 19810  11FB  082F               	movf	??___flmul+1,w
 19811  11FC  00BB               	movwf	___flmul@prod+1
 19812  11FD  082E               	movf	??___flmul,w
 19813  11FE  00BA               	movwf	___flmul@prod
 19814  11FF  3001               	movlw	1
 19815  1200  07BE               	addwf	___flmul@temp,f
 19816  1201  3000               	movlw	0
 19817  1202  3DBF               	addwfc	___flmul@temp+1,f
 19818  1203                     l5479:	
 19819  1203  083F               	movf	___flmul@temp+1,w
 19820  1204  3A80               	xorlw	128
 19821  1205  00AE               	movwf	??___flmul
 19822  1206  3080               	movlw	128
 19823  1207  022E               	subwf	??___flmul,w
 19824  1208  1D03               	skipz
 19825  1209  2A0C               	goto	u6735
 19826  120A  30FF               	movlw	255
 19827  120B  023E               	subwf	___flmul@temp,w
 19828  120C                     u6735:	
 19829  120C  1C03               	skipc
 19830  120D  2A18               	goto	l5483
 19831  120E  307F               	movlw	127
 19832  120F  0020               	movlb	0	; select bank0
 19833  1210  00BD               	movwf	___flmul@prod+3
 19834  1211  3080               	movlw	128
 19835  1212  00BC               	movwf	___flmul@prod+2
 19836  1213  3000               	movlw	0
 19837  1214  00BB               	movwf	___flmul@prod+1
 19838  1215  3000               	movlw	0
 19839  1216  00BA               	movwf	___flmul@prod
 19840  1217  2A42               	goto	l1355
 19841  1218                     l5483:	
 19842  1218  0020               	movlb	0	; select bank0
 19843  1219  083F               	movf	___flmul@temp+1,w
 19844  121A  3A80               	xorlw	128
 19845  121B  00AE               	movwf	??___flmul
 19846  121C  3080               	movlw	128
 19847  121D  022E               	subwf	??___flmul,w
 19848  121E  1D03               	skipz
 19849  121F  2A22               	goto	u6745
 19850  1220  3001               	movlw	1
 19851  1221  023E               	subwf	___flmul@temp,w
 19852  1222                     u6745:	
 19853  1222  1803               	skipnc
 19854  1223  2A2F               	goto	l5489
 19855  1224  3000               	movlw	0
 19856  1225  0020               	movlb	0	; select bank0
 19857  1226  00BD               	movwf	___flmul@prod+3
 19858  1227  3000               	movlw	0
 19859  1228  00BC               	movwf	___flmul@prod+2
 19860  1229  3000               	movlw	0
 19861  122A  00BB               	movwf	___flmul@prod+1
 19862  122B  3000               	movlw	0
 19863  122C  00BA               	movwf	___flmul@prod
 19864  122D  01B3               	clrf	___flmul@sign
 19865  122E  2A42               	goto	l1355
 19866  122F                     l5489:	
 19867  122F  0020               	movlb	0	; select bank0
 19868  1230  083E               	movf	___flmul@temp,w
 19869  1231  00AE               	movwf	??___flmul
 19870  1232  082E               	movf	??___flmul,w
 19871  1233  00B9               	movwf	___flmul@bexp
 19872  1234  30FF               	movlw	255
 19873  1235  05BA               	andwf	___flmul@prod,f
 19874  1236  30FF               	movlw	255
 19875  1237  05BB               	andwf	___flmul@prod+1,f
 19876  1238  307F               	movlw	127
 19877  1239  05BC               	andwf	___flmul@prod+2,f
 19878  123A  3000               	movlw	0
 19879  123B  05BD               	andwf	___flmul@prod+3,f
 19880  123C  1839               	btfsc	___flmul@bexp,0
 19881  123D  17BC               	bsf	___flmul@prod+2,7
 19882  123E  3639               	lsrf	___flmul@bexp,w
 19883  123F  00AE               	movwf	??___flmul
 19884  1240  082E               	movf	??___flmul,w
 19885  1241  00BD               	movwf	___flmul@prod+3
 19886  1242                     l1355:	
 19887  1242  0833               	movf	___flmul@sign,w
 19888  1243  00AE               	movwf	??___flmul
 19889  1244  082E               	movf	??___flmul,w
 19890  1245  04BD               	iorwf	___flmul@prod+3,f
 19891  1246  083D               	movf	___flmul@prod+3,w
 19892  1247  00A9               	movwf	?___flmul+3
 19893  1248  083C               	movf	___flmul@prod+2,w
 19894  1249  00A8               	movwf	?___flmul+2
 19895  124A  083B               	movf	___flmul@prod+1,w
 19896  124B  00A7               	movwf	?___flmul+1
 19897  124C  083A               	movf	___flmul@prod,w
 19898  124D  00A6               	movwf	?___flmul
 19899  124E  0008               	return
 19900  124F                     __end_of___flmul:	
 19901                           
 19902                           	psect	text70
 19903  32EC                     __ptext70:	
 19904 ;; *************** function __Umul8_16 *****************
 19905 ;; Defined at:
 19906 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 19907 ;; Parameters:    Size  Location     Type
 19908 ;;  multiplier      1    wreg     unsigned char 
 19909 ;;  multiplicand    1    1[COMMON] unsigned char 
 19910 ;; Auto vars:     Size  Location     Type
 19911 ;;  multiplier      1    9[COMMON] unsigned char 
 19912 ;;  word_mpld       2    7[COMMON] unsigned int 
 19913 ;;  product         2    5[COMMON] unsigned int 
 19914 ;; Return value:  Size  Location     Type
 19915 ;;                  2    1[COMMON] unsigned int 
 19916 ;; Registers used:
 19917 ;;		wreg, status,2, status,0
 19918 ;; Tracked objects:
 19919 ;;		On entry : 0/0
 19920 ;;		On exit  : 0/0
 19921 ;;		Unchanged: 0/0
 19922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19923 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19924 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19925 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19926 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19927 ;;Total ram usage:        9 bytes
 19928 ;; Hardware stack levels used:    1
 19929 ;; Hardware stack levels required when called:    1
 19930 ;; This function calls:
 19931 ;;		Nothing
 19932 ;; This function is called by:
 19933 ;;		___flmul
 19934 ;; This function uses a non-reentrant model
 19935 ;;
 19936                           
 19937                           
 19938                           ;psect for function __Umul8_16
 19939  32EC                     __Umul8_16:	
 19940                           
 19941                           ;incstack = 0
 19942                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 19943                           ;__Umul8_16@multiplier stored from wreg
 19944  32EC  00F9               	movwf	__Umul8_16@multiplier
 19945  32ED  01F5               	clrf	__Umul8_16@product
 19946  32EE  01F6               	clrf	__Umul8_16@product+1
 19947  32EF  0871               	movf	__Umul8_16@multiplicand,w
 19948  32F0  00F3               	movwf	??__Umul8_16
 19949  32F1  01F4               	clrf	??__Umul8_16+1
 19950  32F2  0873               	movf	??__Umul8_16,w
 19951  32F3  00F7               	movwf	__Umul8_16@word_mpld
 19952  32F4  0874               	movf	??__Umul8_16+1,w
 19953  32F5  00F8               	movwf	__Umul8_16@word_mpld+1
 19954  32F6                     l5173:	
 19955  32F6  1C79               	btfss	__Umul8_16@multiplier,0
 19956  32F7  2AFC               	goto	l1548
 19957  32F8  0877               	movf	__Umul8_16@word_mpld,w
 19958  32F9  07F5               	addwf	__Umul8_16@product,f
 19959  32FA  0878               	movf	__Umul8_16@word_mpld+1,w
 19960  32FB  3DF6               	addwfc	__Umul8_16@product+1,f
 19961  32FC                     l1548:	
 19962  32FC  3001               	movlw	1
 19963  32FD                     u6125:	
 19964  32FD  35F7               	lslf	__Umul8_16@word_mpld,f
 19965  32FE  0DF8               	rlf	__Umul8_16@word_mpld+1,f
 19966  32FF  0B89               	decfsz	9,f
 19967  3300  2AFD               	goto	u6125
 19968  3301  1003               	clrc
 19969  3302  0CF9               	rrf	__Umul8_16@multiplier,f
 19970  3303  0879               	movf	__Umul8_16@multiplier,w
 19971  3304  1D03               	btfss	3,2
 19972  3305  2AF6               	goto	l5173
 19973  3306  0876               	movf	__Umul8_16@product+1,w
 19974  3307  00F2               	movwf	?__Umul8_16+1
 19975  3308  0875               	movf	__Umul8_16@product,w
 19976  3309  00F1               	movwf	?__Umul8_16
 19977  330A  0008               	return
 19978  330B                     __end_of__Umul8_16:	
 19979                           
 19980                           	psect	text71
 19981  1B00                     __ptext71:	
 19982 ;; *************** function ___fldiv *****************
 19983 ;; Defined at:
 19984 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 19985 ;; Parameters:    Size  Location     Type
 19986 ;;  a               4   32[BANK0 ] unsigned int 
 19987 ;;  b               4   36[BANK0 ] unsigned int 
 19988 ;; Auto vars:     Size  Location     Type
 19989 ;;  grs             4   52[BANK0 ] unsigned long 
 19990 ;;  rem             4   45[BANK0 ] unsigned long 
 19991 ;;  new_exp         2   50[BANK0 ] int 
 19992 ;;  aexp            1   57[BANK0 ] unsigned char 
 19993 ;;  bexp            1   56[BANK0 ] unsigned char 
 19994 ;;  sign            1   49[BANK0 ] unsigned char 
 19995 ;; Return value:  Size  Location     Type
 19996 ;;                  4   32[BANK0 ] unsigned char 
 19997 ;; Registers used:
 19998 ;;		wreg, status,2, status,0
 19999 ;; Tracked objects:
 20000 ;;		On entry : 0/0
 20001 ;;		On exit  : 0/0
 20002 ;;		Unchanged: 0/0
 20003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20004 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20005 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20006 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20007 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20008 ;;Total ram usage:       26 bytes
 20009 ;; Hardware stack levels used:    1
 20010 ;; Hardware stack levels required when called:    1
 20011 ;; This function calls:
 20012 ;;		Nothing
 20013 ;; This function is called by:
 20014 ;;		_setShortCircuitProtection
 20015 ;;		_setOverCurrentDischargeProtection
 20016 ;;		_updateCurrent
 20017 ;;		_updateVoltages
 20018 ;;		_updateTemperatures
 20019 ;;		_calibrate_BATTSOC
 20020 ;;		_coulomb_counter
 20021 ;;		_logf
 20022 ;;		_AFE_getSetShortCircuitCurrent
 20023 ;;		_AFE_getOverCurrentDischargeCurrent
 20024 ;; This function uses a non-reentrant model
 20025 ;;
 20026                           
 20027                           
 20028                           ;psect for function ___fldiv
 20029  1B00                     ___fldiv:	
 20030                           
 20031                           ;incstack = 0
 20032                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 20033  1B00  0020               	movlb	0	; select bank0
 20034  1B01  0847               	movf	___fldiv@b+3,w
 20035  1B02  3980               	andlw	128
 20036  1B03  00C8               	movwf	??___fldiv
 20037  1B04  0848               	movf	??___fldiv,w
 20038  1B05  00D1               	movwf	___fldiv@sign
 20039  1B06  3547               	lslf	___fldiv@b+3,w
 20040  1B07  00C8               	movwf	??___fldiv
 20041  1B08  0848               	movf	??___fldiv,w
 20042  1B09  00D8               	movwf	___fldiv@bexp
 20043  1B0A  1BC6               	btfsc	___fldiv@b+2,7
 20044  1B0B  1458               	bsf	___fldiv@bexp,0
 20045  1B0C  0858               	movf	___fldiv@bexp,w
 20046  1B0D  1903               	btfsc	3,2
 20047  1B0E  2B1D               	goto	l5239
 20048  1B0F  0A58               	incf	___fldiv@bexp,w
 20049  1B10  1D03               	btfss	3,2
 20050  1B11  2B1A               	goto	l5235
 20051  1B12  3000               	movlw	0
 20052  1B13  00C7               	movwf	___fldiv@b+3
 20053  1B14  3000               	movlw	0
 20054  1B15  00C6               	movwf	___fldiv@b+2
 20055  1B16  3000               	movlw	0
 20056  1B17  00C5               	movwf	___fldiv@b+1
 20057  1B18  3000               	movlw	0
 20058  1B19  00C4               	movwf	___fldiv@b
 20059  1B1A                     l5235:	
 20060  1B1A  17C6               	bsf	___fldiv@b+2,7
 20061  1B1B  01C7               	clrf	___fldiv@b+3
 20062  1B1C  2B25               	goto	l5241
 20063  1B1D                     l5239:	
 20064  1B1D  3000               	movlw	0
 20065  1B1E  00C7               	movwf	___fldiv@b+3
 20066  1B1F  3000               	movlw	0
 20067  1B20  00C6               	movwf	___fldiv@b+2
 20068  1B21  3000               	movlw	0
 20069  1B22  00C5               	movwf	___fldiv@b+1
 20070  1B23  3000               	movlw	0
 20071  1B24  00C4               	movwf	___fldiv@b
 20072  1B25                     l5241:	
 20073  1B25  0843               	movf	___fldiv@a+3,w
 20074  1B26  3980               	andlw	128
 20075  1B27  00C8               	movwf	??___fldiv
 20076  1B28  0848               	movf	??___fldiv,w
 20077  1B29  06D1               	xorwf	___fldiv@sign,f
 20078  1B2A  3543               	lslf	___fldiv@a+3,w
 20079  1B2B  00C8               	movwf	??___fldiv
 20080  1B2C  0848               	movf	??___fldiv,w
 20081  1B2D  00D9               	movwf	___fldiv@aexp
 20082  1B2E  1BC2               	btfsc	___fldiv@a+2,7
 20083  1B2F  1459               	bsf	___fldiv@aexp,0
 20084  1B30  0859               	movf	___fldiv@aexp,w
 20085  1B31  1903               	btfsc	3,2
 20086  1B32  2B41               	goto	l5259
 20087  1B33  0A59               	incf	___fldiv@aexp,w
 20088  1B34  1D03               	btfss	3,2
 20089  1B35  2B3E               	goto	l5255
 20090  1B36  3000               	movlw	0
 20091  1B37  00C3               	movwf	___fldiv@a+3
 20092  1B38  3000               	movlw	0
 20093  1B39  00C2               	movwf	___fldiv@a+2
 20094  1B3A  3000               	movlw	0
 20095  1B3B  00C1               	movwf	___fldiv@a+1
 20096  1B3C  3000               	movlw	0
 20097  1B3D  00C0               	movwf	___fldiv@a
 20098  1B3E                     l5255:	
 20099  1B3E  17C2               	bsf	___fldiv@a+2,7
 20100  1B3F  01C3               	clrf	___fldiv@a+3
 20101  1B40  2B49               	goto	l1303
 20102  1B41                     l5259:	
 20103  1B41  3000               	movlw	0
 20104  1B42  00C3               	movwf	___fldiv@a+3
 20105  1B43  3000               	movlw	0
 20106  1B44  00C2               	movwf	___fldiv@a+2
 20107  1B45  3000               	movlw	0
 20108  1B46  00C1               	movwf	___fldiv@a+1
 20109  1B47  3000               	movlw	0
 20110  1B48  00C0               	movwf	___fldiv@a
 20111  1B49                     l1303:	
 20112  1B49  0843               	movf	___fldiv@a+3,w
 20113  1B4A  0442               	iorwf	___fldiv@a+2,w
 20114  1B4B  0441               	iorwf	___fldiv@a+1,w
 20115  1B4C  0440               	iorwf	___fldiv@a,w
 20116  1B4D  1D03               	skipz
 20117  1B4E  2B68               	goto	l5269
 20118  1B4F  3000               	movlw	0
 20119  1B50  00C7               	movwf	___fldiv@b+3
 20120  1B51  3000               	movlw	0
 20121  1B52  00C6               	movwf	___fldiv@b+2
 20122  1B53  3000               	movlw	0
 20123  1B54  00C5               	movwf	___fldiv@b+1
 20124  1B55  3000               	movlw	0
 20125  1B56  00C4               	movwf	___fldiv@b
 20126  1B57  3080               	movlw	128
 20127  1B58  04C6               	iorwf	___fldiv@b+2,f
 20128  1B59  307F               	movlw	127
 20129  1B5A  04C7               	iorwf	___fldiv@b+3,f
 20130  1B5B                     L5:	
 20131  1B5B  0851               	movf	___fldiv@sign,w
 20132  1B5C  00C8               	movwf	??___fldiv
 20133  1B5D  0848               	movf	??___fldiv,w
 20134  1B5E  04C7               	iorwf	___fldiv@b+3,f
 20135  1B5F  0847               	movf	___fldiv@b+3,w
 20136  1B60  00C3               	movwf	?___fldiv+3
 20137  1B61  0846               	movf	___fldiv@b+2,w
 20138  1B62  00C2               	movwf	?___fldiv+2
 20139  1B63  0845               	movf	___fldiv@b+1,w
 20140  1B64  00C1               	movwf	?___fldiv+1
 20141  1B65  0844               	movf	___fldiv@b,w
 20142  1B66  00C0               	movwf	?___fldiv
 20143  1B67  0008               	return
 20144  1B68                     l5269:	
 20145  1B68  0858               	movf	___fldiv@bexp,w
 20146  1B69  1D03               	btfss	3,2
 20147  1B6A  2B74               	goto	l5275
 20148  1B6B  3000               	movlw	0
 20149  1B6C  00C3               	movwf	?___fldiv+3
 20150  1B6D  3000               	movlw	0
 20151  1B6E  00C2               	movwf	?___fldiv+2
 20152  1B6F  3000               	movlw	0
 20153  1B70  00C1               	movwf	?___fldiv+1
 20154  1B71  3000               	movlw	0
 20155  1B72  00C0               	movwf	?___fldiv
 20156  1B73  0008               	return
 20157  1B74                     l5275:	
 20158  1B74  0858               	movf	___fldiv@bexp,w
 20159  1B75  00C8               	movwf	??___fldiv
 20160  1B76  01C9               	clrf	??___fldiv+1
 20161  1B77  0849               	movf	??___fldiv+1,w
 20162  1B78  00CB               	movwf	??___fldiv+3
 20163  1B79  0859               	movf	___fldiv@aexp,w
 20164  1B7A  0248               	subwf	??___fldiv,w
 20165  1B7B  00CA               	movwf	??___fldiv+2
 20166  1B7C  1C03               	skipc
 20167  1B7D  03CB               	decf	??___fldiv+3,f
 20168  1B7E  084A               	movf	??___fldiv+2,w
 20169  1B7F  3E7F               	addlw	127
 20170  1B80  00D2               	movwf	___fldiv@new_exp
 20171  1B81  3000               	movlw	0
 20172  1B82  3D4B               	addwfc	??___fldiv+3,w
 20173  1B83  00D3               	movwf	___fldiv@new_exp+1
 20174  1B84  0847               	movf	___fldiv@b+3,w
 20175  1B85  00D0               	movwf	___fldiv@rem+3
 20176  1B86  0846               	movf	___fldiv@b+2,w
 20177  1B87  00CF               	movwf	___fldiv@rem+2
 20178  1B88  0845               	movf	___fldiv@b+1,w
 20179  1B89  00CE               	movwf	___fldiv@rem+1
 20180  1B8A  0844               	movf	___fldiv@b,w
 20181  1B8B  00CD               	movwf	___fldiv@rem
 20182  1B8C  3000               	movlw	0
 20183  1B8D  00C7               	movwf	___fldiv@b+3
 20184  1B8E  3000               	movlw	0
 20185  1B8F  00C6               	movwf	___fldiv@b+2
 20186  1B90  3000               	movlw	0
 20187  1B91  00C5               	movwf	___fldiv@b+1
 20188  1B92  3000               	movlw	0
 20189  1B93  00C4               	movwf	___fldiv@b
 20190  1B94  3000               	movlw	0
 20191  1B95  00D7               	movwf	___fldiv@grs+3
 20192  1B96  3000               	movlw	0
 20193  1B97  00D6               	movwf	___fldiv@grs+2
 20194  1B98  3000               	movlw	0
 20195  1B99  00D5               	movwf	___fldiv@grs+1
 20196  1B9A  3000               	movlw	0
 20197  1B9B  00D4               	movwf	___fldiv@grs
 20198  1B9C  01D9               	clrf	___fldiv@aexp
 20199  1B9D                     l5303:	
 20200  1B9D  301A               	movlw	26
 20201  1B9E  0259               	subwf	___fldiv@aexp,w
 20202  1B9F  1803               	btfsc	3,0
 20203  1BA0  2BD9               	goto	l5305
 20204  1BA1  0859               	movf	___fldiv@aexp,w
 20205  1BA2  1903               	btfsc	3,2
 20206  1BA3  2BBB               	goto	l5295
 20207  1BA4  3001               	movlw	1
 20208  1BA5                     u6305:	
 20209  1BA5  35CD               	lslf	___fldiv@rem,f
 20210  1BA6  0DCE               	rlf	___fldiv@rem+1,f
 20211  1BA7  0DCF               	rlf	___fldiv@rem+2,f
 20212  1BA8  0DD0               	rlf	___fldiv@rem+3,f
 20213  1BA9  0B89               	decfsz	9,f
 20214  1BAA  2BA5               	goto	u6305
 20215  1BAB  3001               	movlw	1
 20216  1BAC                     u6315:	
 20217  1BAC  35C4               	lslf	___fldiv@b,f
 20218  1BAD  0DC5               	rlf	___fldiv@b+1,f
 20219  1BAE  0DC6               	rlf	___fldiv@b+2,f
 20220  1BAF  0DC7               	rlf	___fldiv@b+3,f
 20221  1BB0  0B89               	decfsz	9,f
 20222  1BB1  2BAC               	goto	u6315
 20223  1BB2  1BD7               	btfsc	___fldiv@grs+3,7
 20224  1BB3  1444               	bsf	___fldiv@b,0
 20225  1BB4  3001               	movlw	1
 20226  1BB5                     u6335:	
 20227  1BB5  35D4               	lslf	___fldiv@grs,f
 20228  1BB6  0DD5               	rlf	___fldiv@grs+1,f
 20229  1BB7  0DD6               	rlf	___fldiv@grs+2,f
 20230  1BB8  0DD7               	rlf	___fldiv@grs+3,f
 20231  1BB9  0B89               	decfsz	9,f
 20232  1BBA  2BB5               	goto	u6335
 20233  1BBB                     l5295:	
 20234  1BBB  0843               	movf	___fldiv@a+3,w
 20235  1BBC  0250               	subwf	___fldiv@rem+3,w
 20236  1BBD  1D03               	skipz
 20237  1BBE  2BC9               	goto	u6345
 20238  1BBF  0842               	movf	___fldiv@a+2,w
 20239  1BC0  024F               	subwf	___fldiv@rem+2,w
 20240  1BC1  1D03               	skipz
 20241  1BC2  2BC9               	goto	u6345
 20242  1BC3  0841               	movf	___fldiv@a+1,w
 20243  1BC4  024E               	subwf	___fldiv@rem+1,w
 20244  1BC5  1D03               	skipz
 20245  1BC6  2BC9               	goto	u6345
 20246  1BC7  0840               	movf	___fldiv@a,w
 20247  1BC8  024D               	subwf	___fldiv@rem,w
 20248  1BC9                     u6345:	
 20249  1BC9  1C03               	skipc
 20250  1BCA  2BD4               	goto	l5301
 20251  1BCB  1757               	bsf	___fldiv@grs+3,6
 20252  1BCC  0840               	movf	___fldiv@a,w
 20253  1BCD  02CD               	subwf	___fldiv@rem,f
 20254  1BCE  0841               	movf	___fldiv@a+1,w
 20255  1BCF  3BCE               	subwfb	___fldiv@rem+1,f
 20256  1BD0  0842               	movf	___fldiv@a+2,w
 20257  1BD1  3BCF               	subwfb	___fldiv@rem+2,f
 20258  1BD2  0843               	movf	___fldiv@a+3,w
 20259  1BD3  3BD0               	subwfb	___fldiv@rem+3,f
 20260  1BD4                     l5301:	
 20261  1BD4  3001               	movlw	1
 20262  1BD5  00C8               	movwf	??___fldiv
 20263  1BD6  0848               	movf	??___fldiv,w
 20264  1BD7  07D9               	addwf	___fldiv@aexp,f
 20265  1BD8  2B9D               	goto	l5303
 20266  1BD9                     l5305:	
 20267  1BD9  0850               	movf	___fldiv@rem+3,w
 20268  1BDA  044F               	iorwf	___fldiv@rem+2,w
 20269  1BDB  044E               	iorwf	___fldiv@rem+1,w
 20270  1BDC  044D               	iorwf	___fldiv@rem,w
 20271  1BDD  1D03               	btfss	3,2
 20272  1BDE  1454               	bsf	___fldiv@grs,0
 20273  1BDF                     l5319:	
 20274  1BDF  1BC6               	btfsc	___fldiv@b+2,7
 20275  1BE0  2BF6               	goto	l5321
 20276  1BE1  3001               	movlw	1
 20277  1BE2                     u6375:	
 20278  1BE2  35C4               	lslf	___fldiv@b,f
 20279  1BE3  0DC5               	rlf	___fldiv@b+1,f
 20280  1BE4  0DC6               	rlf	___fldiv@b+2,f
 20281  1BE5  0DC7               	rlf	___fldiv@b+3,f
 20282  1BE6  0B89               	decfsz	9,f
 20283  1BE7  2BE2               	goto	u6375
 20284  1BE8  1BD7               	btfsc	___fldiv@grs+3,7
 20285  1BE9  1444               	bsf	___fldiv@b,0
 20286  1BEA  3001               	movlw	1
 20287  1BEB                     u6395:	
 20288  1BEB  35D4               	lslf	___fldiv@grs,f
 20289  1BEC  0DD5               	rlf	___fldiv@grs+1,f
 20290  1BED  0DD6               	rlf	___fldiv@grs+2,f
 20291  1BEE  0DD7               	rlf	___fldiv@grs+3,f
 20292  1BEF  0B89               	decfsz	9,f
 20293  1BF0  2BEB               	goto	u6395
 20294  1BF1  30FF               	movlw	255
 20295  1BF2  07D2               	addwf	___fldiv@new_exp,f
 20296  1BF3  30FF               	movlw	255
 20297  1BF4  3DD3               	addwfc	___fldiv@new_exp+1,f
 20298  1BF5  2BDF               	goto	l5319
 20299  1BF6                     l5321:	
 20300  1BF6  01D9               	clrf	___fldiv@aexp
 20301  1BF7  1FD7               	btfss	___fldiv@grs+3,7
 20302  1BF8  2C0F               	goto	l5331
 20303  1BF9  30FF               	movlw	255
 20304  1BFA  0554               	andwf	___fldiv@grs,w
 20305  1BFB  00C8               	movwf	??___fldiv
 20306  1BFC  30FF               	movlw	255
 20307  1BFD  0555               	andwf	___fldiv@grs+1,w
 20308  1BFE  00C9               	movwf	??___fldiv+1
 20309  1BFF  30FF               	movlw	255
 20310  1C00  0556               	andwf	___fldiv@grs+2,w
 20311  1C01  00CA               	movwf	??___fldiv+2
 20312  1C02  307F               	movlw	127
 20313  1C03  0557               	andwf	___fldiv@grs+3,w
 20314  1C04  00CB               	movwf	??___fldiv+3
 20315  1C05  084B               	movf	??___fldiv+3,w
 20316  1C06  044A               	iorwf	??___fldiv+2,w
 20317  1C07  0449               	iorwf	??___fldiv+1,w
 20318  1C08  0448               	iorwf	??___fldiv,w
 20319  1C09  1903               	skipnz
 20320  1C0A  1844               	btfsc	___fldiv@b,0
 20321  1C0B  2C0D               	goto	l5327
 20322  1C0C  2C0F               	goto	l5331
 20323  1C0D                     l5327:	
 20324  1C0D  01D9               	clrf	___fldiv@aexp
 20325  1C0E  0AD9               	incf	___fldiv@aexp,f
 20326  1C0F                     l5331:	
 20327  1C0F  0859               	movf	___fldiv@aexp,w
 20328  1C10  1903               	btfsc	3,2
 20329  1C11  2C38               	goto	l5341
 20330  1C12  3001               	movlw	1
 20331  1C13  07C4               	addwf	___fldiv@b,f
 20332  1C14  3000               	movlw	0
 20333  1C15  3DC5               	addwfc	___fldiv@b+1,f
 20334  1C16  3000               	movlw	0
 20335  1C17  3DC6               	addwfc	___fldiv@b+2,f
 20336  1C18  3000               	movlw	0
 20337  1C19  3DC7               	addwfc	___fldiv@b+3,f
 20338  1C1A  1C47               	btfss	___fldiv@b+3,0
 20339  1C1B  2C38               	goto	l5341
 20340  1C1C  0844               	movf	___fldiv@b,w
 20341  1C1D  00C8               	movwf	??___fldiv
 20342  1C1E  0845               	movf	___fldiv@b+1,w
 20343  1C1F  00C9               	movwf	??___fldiv+1
 20344  1C20  0846               	movf	___fldiv@b+2,w
 20345  1C21  00CA               	movwf	??___fldiv+2
 20346  1C22  0847               	movf	___fldiv@b+3,w
 20347  1C23  00CB               	movwf	??___fldiv+3
 20348  1C24  3001               	movlw	1
 20349  1C25  00CC               	movwf	??___fldiv+4
 20350  1C26                     u6465:	
 20351  1C26  37CB               	asrf	??___fldiv+3,f
 20352  1C27  0CCA               	rrf	??___fldiv+2,f
 20353  1C28  0CC9               	rrf	??___fldiv+1,f
 20354  1C29  0CC8               	rrf	??___fldiv,f
 20355  1C2A  0BCC               	decfsz	??___fldiv+4,f
 20356  1C2B  2C26               	goto	u6465
 20357  1C2C  084B               	movf	??___fldiv+3,w
 20358  1C2D  00C7               	movwf	___fldiv@b+3
 20359  1C2E  084A               	movf	??___fldiv+2,w
 20360  1C2F  00C6               	movwf	___fldiv@b+2
 20361  1C30  0849               	movf	??___fldiv+1,w
 20362  1C31  00C5               	movwf	___fldiv@b+1
 20363  1C32  0848               	movf	??___fldiv,w
 20364  1C33  00C4               	movwf	___fldiv@b
 20365  1C34  3001               	movlw	1
 20366  1C35  07D2               	addwf	___fldiv@new_exp,f
 20367  1C36  3000               	movlw	0
 20368  1C37  3DD3               	addwfc	___fldiv@new_exp+1,f
 20369  1C38                     l5341:	
 20370  1C38  0853               	movf	___fldiv@new_exp+1,w
 20371  1C39  3A80               	xorlw	128
 20372  1C3A  00C8               	movwf	??___fldiv
 20373  1C3B  3080               	movlw	128
 20374  1C3C  0248               	subwf	??___fldiv,w
 20375  1C3D  1D03               	skipz
 20376  1C3E  2C41               	goto	u6475
 20377  1C3F  30FF               	movlw	255
 20378  1C40  0252               	subwf	___fldiv@new_exp,w
 20379  1C41                     u6475:	
 20380  1C41  1C03               	skipc
 20381  1C42  2C50               	goto	l1324
 20382  1C43  30FF               	movlw	255
 20383  1C44  0020               	movlb	0	; select bank0
 20384  1C45  00D2               	movwf	___fldiv@new_exp
 20385  1C46  3000               	movlw	0
 20386  1C47  00D3               	movwf	___fldiv@new_exp+1
 20387  1C48  3000               	movlw	0
 20388  1C49  00C7               	movwf	___fldiv@b+3
 20389  1C4A  3000               	movlw	0
 20390  1C4B  00C6               	movwf	___fldiv@b+2
 20391  1C4C  3000               	movlw	0
 20392  1C4D  00C5               	movwf	___fldiv@b+1
 20393  1C4E  3000               	movlw	0
 20394  1C4F  00C4               	movwf	___fldiv@b
 20395  1C50                     l1324:	
 20396  1C50  0020               	movlb	0	; select bank0
 20397  1C51  0853               	movf	___fldiv@new_exp+1,w
 20398  1C52  3A80               	xorlw	128
 20399  1C53  00C8               	movwf	??___fldiv
 20400  1C54  3080               	movlw	128
 20401  1C55  0248               	subwf	??___fldiv,w
 20402  1C56  1D03               	skipz
 20403  1C57  2C5A               	goto	u6485
 20404  1C58  3001               	movlw	1
 20405  1C59  0252               	subwf	___fldiv@new_exp,w
 20406  1C5A                     u6485:	
 20407  1C5A  1803               	skipnc
 20408  1C5B  2C68               	goto	l1325
 20409  1C5C  0020               	movlb	0	; select bank0
 20410  1C5D  01D2               	clrf	___fldiv@new_exp
 20411  1C5E  01D3               	clrf	___fldiv@new_exp+1
 20412  1C5F  3000               	movlw	0
 20413  1C60  00C7               	movwf	___fldiv@b+3
 20414  1C61  3000               	movlw	0
 20415  1C62  00C6               	movwf	___fldiv@b+2
 20416  1C63  3000               	movlw	0
 20417  1C64  00C5               	movwf	___fldiv@b+1
 20418  1C65  3000               	movlw	0
 20419  1C66  00C4               	movwf	___fldiv@b
 20420  1C67  01D1               	clrf	___fldiv@sign
 20421  1C68                     l1325:	
 20422  1C68  0020               	movlb	0	; select bank0
 20423  1C69  0852               	movf	___fldiv@new_exp,w
 20424  1C6A  00C8               	movwf	??___fldiv
 20425  1C6B  0848               	movf	??___fldiv,w
 20426  1C6C  00D8               	movwf	___fldiv@bexp
 20427  1C6D  1C58               	btfss	___fldiv@bexp,0
 20428  1C6E  2C71               	goto	l5355
 20429  1C6F  17C6               	bsf	___fldiv@b+2,7
 20430  1C70  2C75               	goto	l1327
 20431  1C71                     l5355:	
 20432  1C71  307F               	movlw	127
 20433  1C72  00C8               	movwf	??___fldiv
 20434  1C73  0848               	movf	??___fldiv,w
 20435  1C74  05C6               	andwf	___fldiv@b+2,f
 20436  1C75                     l1327:	
 20437  1C75  3658               	lsrf	___fldiv@bexp,w
 20438  1C76  00C8               	movwf	??___fldiv
 20439  1C77  0848               	movf	??___fldiv,w
 20440  1C78  00C7               	movwf	___fldiv@b+3
 20441  1C79  2B5B               	goto	L5
 20442  1C7A                     __end_of___fldiv:	
 20443                           
 20444                           	psect	text72
 20445  319C                     __ptext72:	
 20446 ;; *************** function _init_TMR1 *****************
 20447 ;; Defined at:
 20448 ;;		line 189 in file "main.c"
 20449 ;; Parameters:    Size  Location     Type
 20450 ;;		None
 20451 ;; Auto vars:     Size  Location     Type
 20452 ;;		None
 20453 ;; Return value:  Size  Location     Type
 20454 ;;                  1    wreg      void 
 20455 ;; Registers used:
 20456 ;;		wreg, status,2, status,0
 20457 ;; Tracked objects:
 20458 ;;		On entry : 0/0
 20459 ;;		On exit  : 0/0
 20460 ;;		Unchanged: 0/0
 20461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20466 ;;Total ram usage:        0 bytes
 20467 ;; Hardware stack levels used:    1
 20468 ;; Hardware stack levels required when called:    1
 20469 ;; This function calls:
 20470 ;;		Nothing
 20471 ;; This function is called by:
 20472 ;;		_main
 20473 ;; This function uses a non-reentrant model
 20474 ;;
 20475                           
 20476                           
 20477                           ;psect for function _init_TMR1
 20478  319C                     _init_TMR1:	
 20479                           
 20480                           ;main.c: 192:     T1CONbits.T1CKPS = 0b00;
 20481                           
 20482                           ;incstack = 0
 20483                           ; Regs used in _init_TMR1: [wreg+status,2+status,0]
 20484  319C  30CF               	movlw	-49
 20485  319D  0020               	movlb	0	; select bank0
 20486  319E  0598               	andwf	24,f	;volatile
 20487                           
 20488                           ;main.c: 194:     TMR1 = 0;
 20489  319F  0196               	clrf	22	;volatile
 20490  31A0  0197               	clrf	23	;volatile
 20491                           
 20492                           ;main.c: 196:     T1CONbits.TMR1ON = 1;
 20493  31A1  1418               	bsf	24,0	;volatile
 20494                           
 20495                           ;main.c: 198:     PIE1bits.TMR1IE = 1;
 20496  31A2  0021               	movlb	1	; select bank1
 20497  31A3  1411               	bsf	17,0	;volatile
 20498                           
 20499                           ;main.c: 200:     INTCONbits.PEIE = 1;
 20500  31A4  170B               	bsf	11,6	;volatile
 20501                           
 20502                           ;main.c: 202:     (INTCONbits.GIE = 1);
 20503  31A5  178B               	bsf	11,7	;volatile
 20504  31A6  0008               	return
 20505  31A7                     __end_of_init_TMR1:	
 20506                           
 20507                           	psect	text73
 20508  3147                     __ptext73:	
 20509 ;; *************** function _init_RGB *****************
 20510 ;; Defined at:
 20511 ;;		line 6 in file "RGB.c"
 20512 ;; Parameters:    Size  Location     Type
 20513 ;;		None
 20514 ;; Auto vars:     Size  Location     Type
 20515 ;;		None
 20516 ;; Return value:  Size  Location     Type
 20517 ;;                  1    wreg      void 
 20518 ;; Registers used:
 20519 ;;		None
 20520 ;; Tracked objects:
 20521 ;;		On entry : 0/0
 20522 ;;		On exit  : 0/0
 20523 ;;		Unchanged: 0/0
 20524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20529 ;;Total ram usage:        0 bytes
 20530 ;; Hardware stack levels used:    1
 20531 ;; Hardware stack levels required when called:    1
 20532 ;; This function calls:
 20533 ;;		Nothing
 20534 ;; This function is called by:
 20535 ;;		_main
 20536 ;; This function uses a non-reentrant model
 20537 ;;
 20538                           
 20539                           
 20540                           ;psect for function _init_RGB
 20541  3147                     _init_RGB:	
 20542                           
 20543                           ;RGB.c: 8:     LATAbits.LATA4 = 1;
 20544                           
 20545                           ;incstack = 0
 20546                           ; Regs used in _init_RGB: []
 20547  3147  0022               	movlb	2	; select bank2
 20548  3148  160C               	bsf	12,4	;volatile
 20549                           
 20550                           ;RGB.c: 9:     LATAbits.LATA5 = 1;
 20551  3149  168C               	bsf	12,5	;volatile
 20552                           
 20553                           ;RGB.c: 10:     LATEbits.LATE0 = 1;
 20554  314A  1410               	bsf	16,0	;volatile
 20555  314B  0008               	return
 20556  314C                     __end_of_init_RGB:	
 20557                           
 20558                           	psect	text74
 20559  31B3                     __ptext74:	
 20560 ;; *************** function _init_I2C *****************
 20561 ;; Defined at:
 20562 ;;		line 10 in file "I2C.c"
 20563 ;; Parameters:    Size  Location     Type
 20564 ;;		None
 20565 ;; Auto vars:     Size  Location     Type
 20566 ;;		None
 20567 ;; Return value:  Size  Location     Type
 20568 ;;                  1    wreg      void 
 20569 ;; Registers used:
 20570 ;;		wreg, status,2, status,0
 20571 ;; Tracked objects:
 20572 ;;		On entry : 0/0
 20573 ;;		On exit  : 0/0
 20574 ;;		Unchanged: 0/0
 20575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20578 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20579 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20580 ;;Total ram usage:        1 bytes
 20581 ;; Hardware stack levels used:    1
 20582 ;; Hardware stack levels required when called:    1
 20583 ;; This function calls:
 20584 ;;		Nothing
 20585 ;; This function is called by:
 20586 ;;		_main
 20587 ;; This function uses a non-reentrant model
 20588 ;;
 20589                           
 20590                           
 20591                           ;psect for function _init_I2C
 20592  31B3                     _init_I2C:	
 20593                           
 20594                           ;I2C.c: 14:     SSPCONbits.SSPM = 0x08;
 20595                           
 20596                           ;incstack = 0
 20597                           ; Regs used in _init_I2C: [wreg+status,2+status,0]
 20598  31B3  0024               	movlb	4	; select bank4
 20599  31B4  0815               	movf	21,w	;volatile
 20600  31B5  39F0               	andlw	-16
 20601  31B6  3808               	iorlw	8
 20602  31B7  0095               	movwf	21	;volatile
 20603                           
 20604                           ;I2C.c: 15:     SSPCONbits.SSPEN = 1;
 20605  31B8  1695               	bsf	21,5	;volatile
 20606                           
 20607                           ;I2C.c: 24:     SSPADD = 39;
 20608  31B9  3027               	movlw	39
 20609  31BA  0092               	movwf	18	;volatile
 20610                           
 20611                           ;I2C.c: 27:     _delay((unsigned long)((10)*(16000000/4000.0)));
 20612  31BB  3034               	movlw	52
 20613  31BC  00F1               	movwf	??_init_I2C
 20614  31BD  30F2               	movlw	242
 20615  31BE                     u9517:	
 20616  31BE  0B89               	decfsz	9,f
 20617  31BF  29BE               	goto	u9517
 20618  31C0  0BF1               	decfsz	??_init_I2C,f
 20619  31C1  29BE               	goto	u9517
 20620  31C2  0008               	return
 20621  31C3                     __end_of_init_I2C:	
 20622                           
 20623                           	psect	text75
 20624  0808                     __ptext75:	
 20625 ;; *************** function _init_GPIO *****************
 20626 ;; Defined at:
 20627 ;;		line 206 in file "main.c"
 20628 ;; Parameters:    Size  Location     Type
 20629 ;;		None
 20630 ;; Auto vars:     Size  Location     Type
 20631 ;;		None
 20632 ;; Return value:  Size  Location     Type
 20633 ;;                  1    wreg      void 
 20634 ;; Registers used:
 20635 ;;		wreg, status,2, status,0
 20636 ;; Tracked objects:
 20637 ;;		On entry : 0/0
 20638 ;;		On exit  : 0/0
 20639 ;;		Unchanged: 0/0
 20640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20645 ;;Total ram usage:        0 bytes
 20646 ;; Hardware stack levels used:    1
 20647 ;; Hardware stack levels required when called:    1
 20648 ;; This function calls:
 20649 ;;		Nothing
 20650 ;; This function is called by:
 20651 ;;		_main
 20652 ;; This function uses a non-reentrant model
 20653 ;;
 20654                           
 20655                           
 20656                           ;psect for function _init_GPIO
 20657  0808                     _init_GPIO:	
 20658                           
 20659                           ;main.c: 212:     TRISBbits.TRISB2 = 0;
 20660                           
 20661                           ;incstack = 0
 20662                           ; Regs used in _init_GPIO: [wreg+status,2+status,0]
 20663  0808  0021               	movlb	1	; select bank1
 20664  0809  110D               	bcf	13,2	;volatile
 20665                           
 20666                           ;main.c: 213:     ANSELBbits.ANSB2 = 0;
 20667  080A  0023               	movlb	3	; select bank3
 20668  080B  110D               	bcf	13,2	;volatile
 20669                           
 20670                           ;main.c: 214:     TRISBbits.TRISB3 = 1;
 20671  080C  0021               	movlb	1	; select bank1
 20672  080D  158D               	bsf	13,3	;volatile
 20673                           
 20674                           ;main.c: 215:     ANSELBbits.ANSB3 = 0;
 20675  080E  0023               	movlb	3	; select bank3
 20676  080F  118D               	bcf	13,3	;volatile
 20677                           
 20678                           ;main.c: 220:     ANSELCbits.ANSC4 = 0;
 20679  0810  120E               	bcf	14,4	;volatile
 20680                           
 20681                           ;main.c: 221:     ANSELCbits.ANSC5 = 0;
 20682  0811  128E               	bcf	14,5	;volatile
 20683                           
 20684                           ;main.c: 222:     TRISCbits.TRISC4 = 1;
 20685  0812  0021               	movlb	1	; select bank1
 20686  0813  160E               	bsf	14,4	;volatile
 20687                           
 20688                           ;main.c: 223:     TRISCbits.TRISC5 = 1;
 20689  0814  168E               	bsf	14,5	;volatile
 20690                           
 20691                           ;main.c: 232:     TRISAbits.TRISA4 = 0;
 20692  0815  120C               	bcf	12,4	;volatile
 20693                           
 20694                           ;main.c: 233:     TRISAbits.TRISA5 = 0;
 20695  0816  128C               	bcf	12,5	;volatile
 20696                           
 20697                           ;main.c: 234:     TRISEbits.TRISE0 = 0;
 20698  0817  1010               	bcf	16,0	;volatile
 20699                           
 20700                           ;main.c: 239:     TRISAbits.TRISA3 = 0;
 20701  0818  118C               	bcf	12,3	;volatile
 20702                           
 20703                           ;main.c: 240:     LATAbits.LATA3 = 0;
 20704  0819  0022               	movlb	2	; select bank2
 20705  081A  118C               	bcf	12,3	;volatile
 20706                           
 20707                           ;main.c: 246:     PPSLOCK = 0x55;
 20708  081B  3055               	movlw	85
 20709  081C  003C               	movlb	28	; select bank28
 20710  081D  008F               	movwf	15	;volsfr
 20711                           
 20712                           ;main.c: 247:     PPSLOCK = 0xAA;
 20713  081E  30AA               	movlw	170
 20714  081F  008F               	movwf	15	;volsfr
 20715                           
 20716                           ;main.c: 248:     PPSLOCKbits.PPSLOCKED = 0x00;
 20717  0820  100F               	bcf	15,0	;volsfr
 20718                           
 20719                           ;main.c: 252:     RC4PPSbits.RC4PPS = 0x0011;
 20720  0821  003D               	movlb	29	; select bank29
 20721  0822  0824               	movf	36,w	;volatile
 20722  0823  39E0               	andlw	-32
 20723  0824  3811               	iorlw	17
 20724  0825  00A4               	movwf	36	;volatile
 20725                           
 20726                           ;main.c: 253:     SSPDATPPSbits.SSPDATPPS = 0x0014;
 20727  0826  003C               	movlb	28	; select bank28
 20728  0827  0821               	movf	33,w	;volatile
 20729  0828  39E0               	andlw	-32
 20730  0829  3814               	iorlw	20
 20731  082A  00A1               	movwf	33	;volatile
 20732                           
 20733                           ;main.c: 254:     SSPCLKPPSbits.SSPCLKPPS = 0x0015;
 20734  082B  0820               	movf	32,w	;volatile
 20735  082C  39E0               	andlw	-32
 20736  082D  3815               	iorlw	21
 20737  082E  00A0               	movwf	32	;volatile
 20738                           
 20739                           ;main.c: 255:     RC5PPSbits.RC5PPS = 0x0010;
 20740  082F  003D               	movlb	29	; select bank29
 20741  0830  0825               	movf	37,w	;volatile
 20742  0831  39E0               	andlw	-32
 20743  0832  3810               	iorlw	16
 20744  0833  00A5               	movwf	37	;volatile
 20745                           
 20746                           ;main.c: 258:     RB2PPSbits.RB2PPS = 0x14;
 20747  0834  081A               	movf	26,w	;volatile
 20748  0835  39E0               	andlw	-32
 20749  0836  3814               	iorlw	20
 20750  0837  009A               	movwf	26	;volatile
 20751                           
 20752                           ;main.c: 259:     RXPPSbits.RXPPS = 0x0B;
 20753  0838  003C               	movlb	28	; select bank28
 20754  0839  0824               	movf	36,w	;volatile
 20755  083A  39E0               	andlw	-32
 20756  083B  380B               	iorlw	11
 20757  083C  00A4               	movwf	36	;volatile
 20758                           
 20759                           ;main.c: 261:     PPSLOCK = 0x55;
 20760  083D  3055               	movlw	85
 20761  083E  008F               	movwf	15	;volsfr
 20762                           
 20763                           ;main.c: 262:     PPSLOCK = 0xAA;
 20764  083F  30AA               	movlw	170
 20765  0840  008F               	movwf	15	;volsfr
 20766                           
 20767                           ;main.c: 263:     PPSLOCKbits.PPSLOCKED = 0x01;
 20768  0841  140F               	bsf	15,0	;volsfr
 20769  0842  0008               	return
 20770  0843                     __end_of_init_GPIO:	
 20771                           
 20772                           	psect	text76
 20773  2000                     __ptext76:	
 20774 ;; *************** function _initWDT *****************
 20775 ;; Defined at:
 20776 ;;		line 267 in file "main.c"
 20777 ;; Parameters:    Size  Location     Type
 20778 ;;		None
 20779 ;; Auto vars:     Size  Location     Type
 20780 ;;		None
 20781 ;; Return value:  Size  Location     Type
 20782 ;;                  1    wreg      void 
 20783 ;; Registers used:
 20784 ;;		wreg, status,2, status,0
 20785 ;; Tracked objects:
 20786 ;;		On entry : 0/0
 20787 ;;		On exit  : 0/0
 20788 ;;		Unchanged: 0/0
 20789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20794 ;;Total ram usage:        0 bytes
 20795 ;; Hardware stack levels used:    1
 20796 ;; Hardware stack levels required when called:    1
 20797 ;; This function calls:
 20798 ;;		Nothing
 20799 ;; This function is called by:
 20800 ;;		_main
 20801 ;; This function uses a non-reentrant model
 20802 ;;
 20803                           
 20804                           
 20805                           ;psect for function _initWDT
 20806  2000                     _initWDT:	
 20807                           
 20808                           ;main.c: 269:     WDTCONbits.WDTPS = 0b01101;
 20809                           
 20810                           ;incstack = 0
 20811                           ; Regs used in _initWDT: [wreg+status,2+status,0]
 20812  2000  0021               	movlb	1	; select bank1
 20813  2001  0817               	movf	23,w	;volatile
 20814  2002  39C1               	andlw	-63
 20815  2003  381A               	iorlw	26
 20816  2004  0097               	movwf	23	;volatile
 20817  2005  0008               	return
 20818  2006                     __end_of_initWDT:	
 20819                           
 20820                           	psect	text77
 20821  3144                     __ptext77:	
 20822 ;; *************** function _initClock *****************
 20823 ;; Defined at:
 20824 ;;		line 180 in file "main.c"
 20825 ;; Parameters:    Size  Location     Type
 20826 ;;		None
 20827 ;; Auto vars:     Size  Location     Type
 20828 ;;		None
 20829 ;; Return value:  Size  Location     Type
 20830 ;;                  1    wreg      void 
 20831 ;; Registers used:
 20832 ;;		status,2, status,0, pclath, cstack
 20833 ;; Tracked objects:
 20834 ;;		On entry : 0/0
 20835 ;;		On exit  : 0/0
 20836 ;;		Unchanged: 0/0
 20837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20842 ;;Total ram usage:        0 bytes
 20843 ;; Hardware stack levels used:    1
 20844 ;; Hardware stack levels required when called:    2
 20845 ;; This function calls:
 20846 ;;		_internal_16
 20847 ;; This function is called by:
 20848 ;;		_main
 20849 ;; This function uses a non-reentrant model
 20850 ;;
 20851                           
 20852                           
 20853                           ;psect for function _initClock
 20854  3144                     _initClock:	
 20855                           
 20856                           ;main.c: 182:     internal_16();
 20857                           
 20858                           ;incstack = 0
 20859                           ; Regs used in _initClock: [status,2+status,0+pclath+cstack]
 20860  3144  31B1  2163         	fcall	_internal_16
 20861  3146  0008               	return
 20862  3147                     __end_of_initClock:	
 20863                           
 20864                           	psect	text78
 20865  3163                     __ptext78:	
 20866 ;; *************** function _internal_16 *****************
 20867 ;; Defined at:
 20868 ;;		line 26 in file "pic16f1719_internals.c"
 20869 ;; Parameters:    Size  Location     Type
 20870 ;;		None
 20871 ;; Auto vars:     Size  Location     Type
 20872 ;;		None
 20873 ;; Return value:  Size  Location     Type
 20874 ;;                  1    wreg      void 
 20875 ;; Registers used:
 20876 ;;		None
 20877 ;; Tracked objects:
 20878 ;;		On entry : 0/0
 20879 ;;		On exit  : 0/0
 20880 ;;		Unchanged: 0/0
 20881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20886 ;;Total ram usage:        0 bytes
 20887 ;; Hardware stack levels used:    1
 20888 ;; Hardware stack levels required when called:    1
 20889 ;; This function calls:
 20890 ;;		Nothing
 20891 ;; This function is called by:
 20892 ;;		_initClock
 20893 ;; This function uses a non-reentrant model
 20894 ;;
 20895                           
 20896                           
 20897                           ;psect for function _internal_16
 20898  3163                     _internal_16:	
 20899                           
 20900                           ;pic16f1719_internals.c: 28: SCS0 = 0;
 20901                           
 20902                           ;incstack = 0
 20903                           ; Regs used in _internal_16: []
 20904  3163  0021               	movlb	1	; select bank1
 20905  3164  1019               	bcf	25,0	;volatile
 20906                           
 20907                           ;pic16f1719_internals.c: 29: SCS1 = 0;
 20908  3165  1099               	bcf	25,1	;volatile
 20909                           
 20910                           ;pic16f1719_internals.c: 31: IRCF0 = 1;
 20911  3166  1599               	bsf	25,3	;volatile
 20912                           
 20913                           ;pic16f1719_internals.c: 32: IRCF1 = 1;
 20914  3167  1619               	bsf	25,4	;volatile
 20915                           
 20916                           ;pic16f1719_internals.c: 33: IRCF2 = 1;
 20917  3168  1699               	bsf	25,5	;volatile
 20918                           
 20919                           ;pic16f1719_internals.c: 34: IRCF3 = 1;
 20920  3169  1719               	bsf	25,6	;volatile
 20921                           
 20922                           ;pic16f1719_internals.c: 36: SPLLEN = 0;
 20923  316A  1399               	bcf	25,7	;volatile
 20924  316B  0008               	return
 20925  316C                     __end_of_internal_16:	
 20926                           
 20927                           	psect	text79
 20928  2AA3                     __ptext79:	
 20929 ;; *************** function _EUSART_Initialize *****************
 20930 ;; Defined at:
 20931 ;;		line 6 in file "EUSART.c"
 20932 ;; Parameters:    Size  Location     Type
 20933 ;;  baudrate        4   18[BANK0 ] const long 
 20934 ;; Auto vars:     Size  Location     Type
 20935 ;;  x               2   10[COMMON] unsigned int 
 20936 ;; Return value:  Size  Location     Type
 20937 ;;                  1    wreg      unsigned char 
 20938 ;; Registers used:
 20939 ;;		wreg, status,2, status,0, pclath, cstack
 20940 ;; Tracked objects:
 20941 ;;		On entry : 0/0
 20942 ;;		On exit  : 0/0
 20943 ;;		Unchanged: 0/0
 20944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20945 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20946 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20947 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20948 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20949 ;;Total ram usage:       18 bytes
 20950 ;; Hardware stack levels used:    1
 20951 ;; Hardware stack levels required when called:    2
 20952 ;; This function calls:
 20953 ;;		___aldiv
 20954 ;; This function is called by:
 20955 ;;		_main
 20956 ;; This function uses a non-reentrant model
 20957 ;;
 20958                           
 20959                           
 20960                           ;psect for function _EUSART_Initialize
 20961  2AA3                     _EUSART_Initialize:	
 20962                           
 20963                           ;EUSART.c: 6: char EUSART_Initialize(const long int baudrate);EUSART.c: 7: {;EUSART.c: 8
      +                          :  unsigned int x;;EUSART.c: 9:  x = (16000000 - baudrate*64)/(baudrate*64);
 20964                           
 20965                           ;incstack = 0
 20966                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 20967  2AA3  0020               	movlb	0	; select bank0
 20968  2AA4  0832               	movf	EUSART_Initialize@baudrate,w
 20969  2AA5  00B6               	movwf	??_EUSART_Initialize
 20970  2AA6  0833               	movf	EUSART_Initialize@baudrate+1,w
 20971  2AA7  00B7               	movwf	??_EUSART_Initialize+1
 20972  2AA8  0834               	movf	EUSART_Initialize@baudrate+2,w
 20973  2AA9  00B8               	movwf	??_EUSART_Initialize+2
 20974  2AAA  0835               	movf	EUSART_Initialize@baudrate+3,w
 20975  2AAB  00B9               	movwf	??_EUSART_Initialize+3
 20976  2AAC  3006               	movlw	6
 20977  2AAD                     u9405:	
 20978  2AAD  35B6               	lslf	??_EUSART_Initialize,f
 20979  2AAE  0DB7               	rlf	??_EUSART_Initialize+1,f
 20980  2AAF  0DB8               	rlf	??_EUSART_Initialize+2,f
 20981  2AB0  0DB9               	rlf	??_EUSART_Initialize+3,f
 20982  2AB1  0B89               	decfsz	9,f
 20983  2AB2  2AAD               	goto	u9405
 20984  2AB3  0839               	movf	??_EUSART_Initialize+3,w
 20985  2AB4  00A7               	movwf	___aldiv@divisor+3
 20986  2AB5  0838               	movf	??_EUSART_Initialize+2,w
 20987  2AB6  00A6               	movwf	___aldiv@divisor+2
 20988  2AB7  0837               	movf	??_EUSART_Initialize+1,w
 20989  2AB8  00A5               	movwf	___aldiv@divisor+1
 20990  2AB9  0836               	movf	??_EUSART_Initialize,w
 20991  2ABA  00A4               	movwf	___aldiv@divisor
 20992  2ABB  0832               	movf	EUSART_Initialize@baudrate,w
 20993  2ABC  00BA               	movwf	??_EUSART_Initialize+4
 20994  2ABD  0833               	movf	EUSART_Initialize@baudrate+1,w
 20995  2ABE  00BB               	movwf	??_EUSART_Initialize+5
 20996  2ABF  0834               	movf	EUSART_Initialize@baudrate+2,w
 20997  2AC0  00BC               	movwf	??_EUSART_Initialize+6
 20998  2AC1  0835               	movf	EUSART_Initialize@baudrate+3,w
 20999  2AC2  00BD               	movwf	??_EUSART_Initialize+7
 21000  2AC3  3006               	movlw	6
 21001  2AC4                     u9415:	
 21002  2AC4  35BA               	lslf	??_EUSART_Initialize+4,f
 21003  2AC5  0DBB               	rlf	??_EUSART_Initialize+5,f
 21004  2AC6  0DBC               	rlf	??_EUSART_Initialize+6,f
 21005  2AC7  0DBD               	rlf	??_EUSART_Initialize+7,f
 21006  2AC8  0B89               	decfsz	9,f
 21007  2AC9  2AC4               	goto	u9415
 21008  2ACA  3000               	movlw	0
 21009  2ACB  00BE               	movwf	??_EUSART_Initialize+8
 21010  2ACC  3024               	movlw	36
 21011  2ACD  00BF               	movwf	??_EUSART_Initialize+9
 21012  2ACE  30F4               	movlw	244
 21013  2ACF  00C0               	movwf	??_EUSART_Initialize+10
 21014  2AD0  3000               	movlw	0
 21015  2AD1  00C1               	movwf	??_EUSART_Initialize+11
 21016  2AD2  083A               	movf	??_EUSART_Initialize+4,w
 21017  2AD3  02BE               	subwf	??_EUSART_Initialize+8,f
 21018  2AD4  083B               	movf	??_EUSART_Initialize+5,w
 21019  2AD5  3BBF               	subwfb	??_EUSART_Initialize+9,f
 21020  2AD6  083C               	movf	??_EUSART_Initialize+6,w
 21021  2AD7  3BC0               	subwfb	??_EUSART_Initialize+10,f
 21022  2AD8  083D               	movf	??_EUSART_Initialize+7,w
 21023  2AD9  3BC1               	subwfb	??_EUSART_Initialize+11,f
 21024  2ADA  0841               	movf	??_EUSART_Initialize+11,w
 21025  2ADB  00AB               	movwf	___aldiv@dividend+3
 21026  2ADC  0840               	movf	??_EUSART_Initialize+10,w
 21027  2ADD  00AA               	movwf	___aldiv@dividend+2
 21028  2ADE  083F               	movf	??_EUSART_Initialize+9,w
 21029  2ADF  00A9               	movwf	___aldiv@dividend+1
 21030  2AE0  083E               	movf	??_EUSART_Initialize+8,w
 21031  2AE1  00A8               	movwf	___aldiv@dividend
 21032  2AE2  31A8  20EA  31AA   	fcall	___aldiv
 21033  2AE5  0020               	movlb	0	; select bank0
 21034  2AE6  0825               	movf	?___aldiv+1,w
 21035  2AE7  00FB               	movwf	EUSART_Initialize@x+1
 21036  2AE8  0824               	movf	?___aldiv,w
 21037  2AE9  00FA               	movwf	EUSART_Initialize@x
 21038                           
 21039                           ;EUSART.c: 10:  if(x>255)
 21040  2AEA  3001               	movlw	1
 21041  2AEB  027B               	subwf	EUSART_Initialize@x+1,w
 21042  2AEC  3000               	movlw	0
 21043  2AED  1903               	skipnz
 21044  2AEE  027A               	subwf	EUSART_Initialize@x,w
 21045  2AEF  1C03               	skipc
 21046  2AF0  2B39               	goto	l7595
 21047                           
 21048                           ;EUSART.c: 11:  {;EUSART.c: 12:   x = (16000000 - baudrate*16)/(baudrate*16);
 21049  2AF1  0832               	movf	EUSART_Initialize@baudrate,w
 21050  2AF2  00B6               	movwf	??_EUSART_Initialize
 21051  2AF3  0833               	movf	EUSART_Initialize@baudrate+1,w
 21052  2AF4  00B7               	movwf	??_EUSART_Initialize+1
 21053  2AF5  0834               	movf	EUSART_Initialize@baudrate+2,w
 21054  2AF6  00B8               	movwf	??_EUSART_Initialize+2
 21055  2AF7  0835               	movf	EUSART_Initialize@baudrate+3,w
 21056  2AF8  00B9               	movwf	??_EUSART_Initialize+3
 21057  2AF9  3004               	movlw	4
 21058  2AFA                     u9435:	
 21059  2AFA  35B6               	lslf	??_EUSART_Initialize,f
 21060  2AFB  0DB7               	rlf	??_EUSART_Initialize+1,f
 21061  2AFC  0DB8               	rlf	??_EUSART_Initialize+2,f
 21062  2AFD  0DB9               	rlf	??_EUSART_Initialize+3,f
 21063  2AFE  0B89               	decfsz	9,f
 21064  2AFF  2AFA               	goto	u9435
 21065  2B00  0839               	movf	??_EUSART_Initialize+3,w
 21066  2B01  00A7               	movwf	___aldiv@divisor+3
 21067  2B02  0838               	movf	??_EUSART_Initialize+2,w
 21068  2B03  00A6               	movwf	___aldiv@divisor+2
 21069  2B04  0837               	movf	??_EUSART_Initialize+1,w
 21070  2B05  00A5               	movwf	___aldiv@divisor+1
 21071  2B06  0836               	movf	??_EUSART_Initialize,w
 21072  2B07  00A4               	movwf	___aldiv@divisor
 21073  2B08  0832               	movf	EUSART_Initialize@baudrate,w
 21074  2B09  00BA               	movwf	??_EUSART_Initialize+4
 21075  2B0A  0833               	movf	EUSART_Initialize@baudrate+1,w
 21076  2B0B  00BB               	movwf	??_EUSART_Initialize+5
 21077  2B0C  0834               	movf	EUSART_Initialize@baudrate+2,w
 21078  2B0D  00BC               	movwf	??_EUSART_Initialize+6
 21079  2B0E  0835               	movf	EUSART_Initialize@baudrate+3,w
 21080  2B0F  00BD               	movwf	??_EUSART_Initialize+7
 21081  2B10  3004               	movlw	4
 21082  2B11                     u9445:	
 21083  2B11  35BA               	lslf	??_EUSART_Initialize+4,f
 21084  2B12  0DBB               	rlf	??_EUSART_Initialize+5,f
 21085  2B13  0DBC               	rlf	??_EUSART_Initialize+6,f
 21086  2B14  0DBD               	rlf	??_EUSART_Initialize+7,f
 21087  2B15  0B89               	decfsz	9,f
 21088  2B16  2B11               	goto	u9445
 21089  2B17  3000               	movlw	0
 21090  2B18  00BE               	movwf	??_EUSART_Initialize+8
 21091  2B19  3024               	movlw	36
 21092  2B1A  00BF               	movwf	??_EUSART_Initialize+9
 21093  2B1B  30F4               	movlw	244
 21094  2B1C  00C0               	movwf	??_EUSART_Initialize+10
 21095  2B1D  3000               	movlw	0
 21096  2B1E  00C1               	movwf	??_EUSART_Initialize+11
 21097  2B1F  083A               	movf	??_EUSART_Initialize+4,w
 21098  2B20  02BE               	subwf	??_EUSART_Initialize+8,f
 21099  2B21  083B               	movf	??_EUSART_Initialize+5,w
 21100  2B22  3BBF               	subwfb	??_EUSART_Initialize+9,f
 21101  2B23  083C               	movf	??_EUSART_Initialize+6,w
 21102  2B24  3BC0               	subwfb	??_EUSART_Initialize+10,f
 21103  2B25  083D               	movf	??_EUSART_Initialize+7,w
 21104  2B26  3BC1               	subwfb	??_EUSART_Initialize+11,f
 21105  2B27  0841               	movf	??_EUSART_Initialize+11,w
 21106  2B28  00AB               	movwf	___aldiv@dividend+3
 21107  2B29  0840               	movf	??_EUSART_Initialize+10,w
 21108  2B2A  00AA               	movwf	___aldiv@dividend+2
 21109  2B2B  083F               	movf	??_EUSART_Initialize+9,w
 21110  2B2C  00A9               	movwf	___aldiv@dividend+1
 21111  2B2D  083E               	movf	??_EUSART_Initialize+8,w
 21112  2B2E  00A8               	movwf	___aldiv@dividend
 21113  2B2F  31A8  20EA  31AA   	fcall	___aldiv
 21114  2B32  0020               	movlb	0	; select bank0
 21115  2B33  0825               	movf	?___aldiv+1,w
 21116  2B34  00FB               	movwf	EUSART_Initialize@x+1
 21117  2B35  0824               	movf	?___aldiv,w
 21118  2B36  00FA               	movwf	EUSART_Initialize@x
 21119                           
 21120                           ;EUSART.c: 13:   BRGH = 1;
 21121  2B37  0023               	movlb	3	; select bank3
 21122  2B38  151E               	bsf	30,2	;volatile
 21123  2B39                     l7595:	
 21124                           
 21125                           ;EUSART.c: 15:  if(x<256)
 21126  2B39  3001               	movlw	1
 21127  2B3A  027B               	subwf	EUSART_Initialize@x+1,w
 21128  2B3B  3000               	movlw	0
 21129  2B3C  1903               	skipnz
 21130  2B3D  027A               	subwf	EUSART_Initialize@x,w
 21131  2B3E  1803               	skipnc
 21132  2B3F  0008               	return
 21133                           
 21134                           ;EUSART.c: 16:  {;EUSART.c: 17:    SPBRG = x;
 21135  2B40  087A               	movf	EUSART_Initialize@x,w
 21136  2B41  0023               	movlb	3	; select bank3
 21137  2B42  009B               	movwf	27	;volatile
 21138                           
 21139                           ;EUSART.c: 18:    SYNC = 0;
 21140  2B43  121E               	bcf	30,4	;volatile
 21141                           
 21142                           ;EUSART.c: 19:    SPEN = 1;
 21143  2B44  179D               	bsf	29,7	;volatile
 21144                           
 21145                           ;EUSART.c: 20:           TRISC7 = 1;
 21146  2B45  0021               	movlb	1	; select bank1
 21147  2B46  178E               	bsf	14,7	;volatile
 21148                           
 21149                           ;EUSART.c: 21:           TRISC6 = 1;
 21150  2B47  170E               	bsf	14,6	;volatile
 21151                           
 21152                           ;EUSART.c: 22:           CREN = 1;
 21153  2B48  0023               	movlb	3	; select bank3
 21154  2B49  161D               	bsf	29,4	;volatile
 21155                           
 21156                           ;EUSART.c: 23:           TXEN = 1;
 21157  2B4A  169E               	bsf	30,5	;volatile
 21158  2B4B  0008               	return
 21159  2B4C                     __end_of_EUSART_Initialize:	
 21160                           
 21161                           	psect	text80
 21162  28EA                     __ptext80:	
 21163 ;; *************** function ___aldiv *****************
 21164 ;; Defined at:
 21165 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
 21166 ;; Parameters:    Size  Location     Type
 21167 ;;  divisor         4    4[BANK0 ] long 
 21168 ;;  dividend        4    8[BANK0 ] long 
 21169 ;; Auto vars:     Size  Location     Type
 21170 ;;  quotient        4   14[BANK0 ] long 
 21171 ;;  sign            1   13[BANK0 ] unsigned char 
 21172 ;;  counter         1   12[BANK0 ] unsigned char 
 21173 ;; Return value:  Size  Location     Type
 21174 ;;                  4    4[BANK0 ] long 
 21175 ;; Registers used:
 21176 ;;		wreg, status,2, status,0
 21177 ;; Tracked objects:
 21178 ;;		On entry : 0/0
 21179 ;;		On exit  : 0/0
 21180 ;;		Unchanged: 0/0
 21181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21182 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21183 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21184 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21185 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21186 ;;Total ram usage:       15 bytes
 21187 ;; Hardware stack levels used:    1
 21188 ;; Hardware stack levels required when called:    1
 21189 ;; This function calls:
 21190 ;;		Nothing
 21191 ;; This function is called by:
 21192 ;;		_EUSART_Initialize
 21193 ;;		_setCellUndervoltageProtection
 21194 ;;		_setCellOvervoltageProtection
 21195 ;;		_updateVoltages
 21196 ;; This function uses a non-reentrant model
 21197 ;;
 21198                           
 21199                           
 21200                           ;psect for function ___aldiv
 21201  28EA                     ___aldiv:	
 21202                           
 21203                           ;incstack = 0
 21204                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 21205  28EA  0020               	movlb	0	; select bank0
 21206  28EB  01AD               	clrf	___aldiv@sign
 21207  28EC  1FA7               	btfss	___aldiv@divisor+3,7
 21208  28ED  28FB               	goto	l1011
 21209  28EE  09A4               	comf	___aldiv@divisor,f
 21210  28EF  09A5               	comf	___aldiv@divisor+1,f
 21211  28F0  09A6               	comf	___aldiv@divisor+2,f
 21212  28F1  09A7               	comf	___aldiv@divisor+3,f
 21213  28F2  0AA4               	incf	___aldiv@divisor,f
 21214  28F3  1903               	skipnz
 21215  28F4  0AA5               	incf	___aldiv@divisor+1,f
 21216  28F5  1903               	skipnz
 21217  28F6  0AA6               	incf	___aldiv@divisor+2,f
 21218  28F7  1903               	skipnz
 21219  28F8  0AA7               	incf	___aldiv@divisor+3,f
 21220  28F9  01AD               	clrf	___aldiv@sign
 21221  28FA  0AAD               	incf	___aldiv@sign,f
 21222  28FB                     l1011:	
 21223  28FB  1FAB               	btfss	___aldiv@dividend+3,7
 21224  28FC  290C               	goto	l7211
 21225  28FD  09A8               	comf	___aldiv@dividend,f
 21226  28FE  09A9               	comf	___aldiv@dividend+1,f
 21227  28FF  09AA               	comf	___aldiv@dividend+2,f
 21228  2900  09AB               	comf	___aldiv@dividend+3,f
 21229  2901  0AA8               	incf	___aldiv@dividend,f
 21230  2902  1903               	skipnz
 21231  2903  0AA9               	incf	___aldiv@dividend+1,f
 21232  2904  1903               	skipnz
 21233  2905  0AAA               	incf	___aldiv@dividend+2,f
 21234  2906  1903               	skipnz
 21235  2907  0AAB               	incf	___aldiv@dividend+3,f
 21236  2908  3001               	movlw	1
 21237  2909  00F9               	movwf	??___aldiv
 21238  290A  0879               	movf	??___aldiv,w
 21239  290B  06AD               	xorwf	___aldiv@sign,f
 21240  290C                     l7211:	
 21241  290C  3000               	movlw	0
 21242  290D  00B1               	movwf	___aldiv@quotient+3
 21243  290E  3000               	movlw	0
 21244  290F  00B0               	movwf	___aldiv@quotient+2
 21245  2910  3000               	movlw	0
 21246  2911  00AF               	movwf	___aldiv@quotient+1
 21247  2912  3000               	movlw	0
 21248  2913  00AE               	movwf	___aldiv@quotient
 21249  2914  0827               	movf	___aldiv@divisor+3,w
 21250  2915  0426               	iorwf	___aldiv@divisor+2,w
 21251  2916  0425               	iorwf	___aldiv@divisor+1,w
 21252  2917  0424               	iorwf	___aldiv@divisor,w
 21253  2918  1903               	skipnz
 21254  2919  2955               	goto	l7233
 21255  291A  01AC               	clrf	___aldiv@counter
 21256  291B  0AAC               	incf	___aldiv@counter,f
 21257  291C                     l7219:	
 21258  291C  1BA7               	btfsc	___aldiv@divisor+3,7
 21259  291D  292A               	goto	l7221
 21260  291E  3001               	movlw	1
 21261  291F                     u9065:	
 21262  291F  35A4               	lslf	___aldiv@divisor,f
 21263  2920  0DA5               	rlf	___aldiv@divisor+1,f
 21264  2921  0DA6               	rlf	___aldiv@divisor+2,f
 21265  2922  0DA7               	rlf	___aldiv@divisor+3,f
 21266  2923  0B89               	decfsz	9,f
 21267  2924  291F               	goto	u9065
 21268  2925  3001               	movlw	1
 21269  2926  00F9               	movwf	??___aldiv
 21270  2927  0879               	movf	??___aldiv,w
 21271  2928  07AC               	addwf	___aldiv@counter,f
 21272  2929  291C               	goto	l7219
 21273  292A                     l7221:	
 21274  292A  3001               	movlw	1
 21275  292B                     u9085:	
 21276  292B  35AE               	lslf	___aldiv@quotient,f
 21277  292C  0DAF               	rlf	___aldiv@quotient+1,f
 21278  292D  0DB0               	rlf	___aldiv@quotient+2,f
 21279  292E  0DB1               	rlf	___aldiv@quotient+3,f
 21280  292F  0B89               	decfsz	9,f
 21281  2930  292B               	goto	u9085
 21282  2931  0827               	movf	___aldiv@divisor+3,w
 21283  2932  022B               	subwf	___aldiv@dividend+3,w
 21284  2933  1D03               	skipz
 21285  2934  293F               	goto	u9095
 21286  2935  0826               	movf	___aldiv@divisor+2,w
 21287  2936  022A               	subwf	___aldiv@dividend+2,w
 21288  2937  1D03               	skipz
 21289  2938  293F               	goto	u9095
 21290  2939  0825               	movf	___aldiv@divisor+1,w
 21291  293A  0229               	subwf	___aldiv@dividend+1,w
 21292  293B  1D03               	skipz
 21293  293C  293F               	goto	u9095
 21294  293D  0824               	movf	___aldiv@divisor,w
 21295  293E  0228               	subwf	___aldiv@dividend,w
 21296  293F                     u9095:	
 21297  293F  1C03               	skipc
 21298  2940  294A               	goto	l7229
 21299  2941  0824               	movf	___aldiv@divisor,w
 21300  2942  02A8               	subwf	___aldiv@dividend,f
 21301  2943  0825               	movf	___aldiv@divisor+1,w
 21302  2944  3BA9               	subwfb	___aldiv@dividend+1,f
 21303  2945  0826               	movf	___aldiv@divisor+2,w
 21304  2946  3BAA               	subwfb	___aldiv@dividend+2,f
 21305  2947  0827               	movf	___aldiv@divisor+3,w
 21306  2948  3BAB               	subwfb	___aldiv@dividend+3,f
 21307  2949  142E               	bsf	___aldiv@quotient,0
 21308  294A                     l7229:	
 21309  294A  3001               	movlw	1
 21310  294B                     u9105:	
 21311  294B  36A7               	lsrf	___aldiv@divisor+3,f
 21312  294C  0CA6               	rrf	___aldiv@divisor+2,f
 21313  294D  0CA5               	rrf	___aldiv@divisor+1,f
 21314  294E  0CA4               	rrf	___aldiv@divisor,f
 21315  294F  0B89               	decfsz	9,f
 21316  2950  294B               	goto	u9105
 21317  2951  3001               	movlw	1
 21318  2952  02AC               	subwf	___aldiv@counter,f
 21319  2953  1D03               	btfss	3,2
 21320  2954  292A               	goto	l7221
 21321  2955                     l7233:	
 21322  2955  082D               	movf	___aldiv@sign,w
 21323  2956  1903               	btfsc	3,2
 21324  2957  2963               	goto	l7237
 21325  2958  09AE               	comf	___aldiv@quotient,f
 21326  2959  09AF               	comf	___aldiv@quotient+1,f
 21327  295A  09B0               	comf	___aldiv@quotient+2,f
 21328  295B  09B1               	comf	___aldiv@quotient+3,f
 21329  295C  0AAE               	incf	___aldiv@quotient,f
 21330  295D  1903               	skipnz
 21331  295E  0AAF               	incf	___aldiv@quotient+1,f
 21332  295F  1903               	skipnz
 21333  2960  0AB0               	incf	___aldiv@quotient+2,f
 21334  2961  1903               	skipnz
 21335  2962  0AB1               	incf	___aldiv@quotient+3,f
 21336  2963                     l7237:	
 21337  2963  0831               	movf	___aldiv@quotient+3,w
 21338  2964  00A7               	movwf	?___aldiv+3
 21339  2965  0830               	movf	___aldiv@quotient+2,w
 21340  2966  00A6               	movwf	?___aldiv+2
 21341  2967  082F               	movf	___aldiv@quotient+1,w
 21342  2968  00A5               	movwf	?___aldiv+1
 21343  2969  082E               	movf	___aldiv@quotient,w
 21344  296A  00A4               	movwf	?___aldiv
 21345  296B  0008               	return
 21346  296C                     __end_of___aldiv:	
 21347                           
 21348                           	psect	intentry
 21349  0004                     __pintentry:	
 21350 ;; *************** function _myIsr *****************
 21351 ;; Defined at:
 21352 ;;		line 54 in file "main.c"
 21353 ;; Parameters:    Size  Location     Type
 21354 ;;		None
 21355 ;; Auto vars:     Size  Location     Type
 21356 ;;		None
 21357 ;; Return value:  Size  Location     Type
 21358 ;;                  1    wreg      void 
 21359 ;; Registers used:
 21360 ;;		wreg, status,2, status,0
 21361 ;; Tracked objects:
 21362 ;;		On entry : 0/0
 21363 ;;		On exit  : 0/0
 21364 ;;		Unchanged: 0/0
 21365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21368 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21369 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21370 ;;Total ram usage:        1 bytes
 21371 ;; Hardware stack levels used:    1
 21372 ;; This function calls:
 21373 ;;		Nothing
 21374 ;; This function is called by:
 21375 ;;		Interrupt level 1
 21376 ;; This function uses a non-reentrant model
 21377 ;;
 21378                           
 21379  0004                     _myIsr:	
 21380                           
 21381                           ;incstack = 0
 21382  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 21383                           
 21384                           ; Regs used in _myIsr: [wreg+status,2+status,0]
 21385  0005  3180               	pagesel	$
 21386                           
 21387                           ;main.c: 56:     static uint8_t count = 0;;main.c: 58:     if (PIR1bits.TMR1IF && PIE1bi
      +                          ts.TMR1IE) {
 21388  0006  0020               	movlb	0	; select bank0
 21389  0007  1C11               	btfss	17,0	;volatile
 21390  0008  281C               	goto	i1l155
 21391  0009  0021               	movlb	1	; select bank1
 21392  000A  1C11               	btfss	17,0	;volatile
 21393  000B  281C               	goto	i1l155
 21394                           
 21395                           ;main.c: 59:         PIR1bits.TMR1IF = 0;
 21396  000C  0020               	movlb	0	; select bank0
 21397  000D  1011               	bcf	17,0	;volatile
 21398                           
 21399                           ;main.c: 60:         count++;
 21400  000E  3001               	movlw	1
 21401  000F  00F0               	movwf	??_myIsr
 21402  0010  0870               	movf	??_myIsr,w
 21403  0011  0023               	movlb	3	; select bank3
 21404  0012  07E2               	addwf	myIsr@count^(0+384),f
 21405                           
 21406                           ;main.c: 63:         if (count == 61) {
 21407  0013  303D               	movlw	61
 21408  0014  0662               	xorwf	myIsr@count^(0+384),w
 21409  0015  1D03               	btfss	3,2
 21410  0016  281C               	goto	i1l155
 21411                           
 21412                           ;main.c: 64:             tmr1_flag = 1;
 21413  0017  3001               	movlw	1
 21414  0018  00F0               	movwf	??_myIsr
 21415  0019  0870               	movf	??_myIsr,w
 21416  001A  00E3               	movwf	_tmr1_flag^(0+384)	;volatile
 21417                           
 21418                           ;main.c: 65:             count = 0;
 21419  001B  01E2               	clrf	myIsr@count^(0+384)
 21420  001C                     i1l155:	
 21421  001C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 21422  001D  0009               	retfie
 21423  001E                     __end_of_myIsr:	
 21424  007E                     btemp	set	126	;btemp
 21425  007E                     int$flags	set	126
 21426  007E                     wtemp0	set	126
 21427  2771                     
 21428                           	psect	text7_split_1
 21429  24D9                     l6847:	
 21430                           
 21431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
 21432  24D9  0859               	movf	vfpfcnvrt@fmt,w
 21433  24DA  0086               	movwf	6
 21434  24DB  0187               	clrf	7
 21435  24DC  3F40               	moviw [0]fsr1
 21436  24DD  00F1               	movwf	strncmp@_l
 21437  24DE  3F41               	moviw [1]fsr1
 21438  24DF  00F2               	movwf	strncmp@_l+1
 21439  24E0  3022               	movlw	low (STR_26| (0+32768))
 21440  24E1  00F3               	movwf	strncmp@_r
 21441  24E2  30BB               	movlw	high (STR_26| (0+32768))
 21442  24E3  00F4               	movwf	strncmp@_r+1
 21443  24E4  3003               	movlw	3
 21444  24E5  00F5               	movwf	strncmp@n
 21445  24E6  3000               	movlw	0
 21446  24E7  00F6               	movwf	strncmp@n+1
 21447  24E8  31B5  25D8  31A4   	fcall	_strncmp
 21448  24EB  0871               	movf	?_strncmp,w
 21449  24EC  0472               	iorwf	?_strncmp+1,w
 21450  24ED  1903               	btfsc	3,2
 21451  24EE  2D06               	goto	l6851
 21452  24EF  0020               	movlb	0	; select bank0
 21453  24F0  0859               	movf	vfpfcnvrt@fmt,w
 21454  24F1  0086               	movwf	6
 21455  24F2  0187               	clrf	7
 21456  24F3  3F40               	moviw [0]fsr1
 21457  24F4  00F1               	movwf	strncmp@_l
 21458  24F5  3F41               	moviw [1]fsr1
 21459  24F6  00F2               	movwf	strncmp@_l+1
 21460  24F7  3026               	movlw	low (STR_30| (0+32768))
 21461  24F8  00F3               	movwf	strncmp@_r
 21462  24F9  30BB               	movlw	high (STR_30| (0+32768))
 21463  24FA  00F4               	movwf	strncmp@_r+1
 21464  24FB  3003               	movlw	3
 21465  24FC  00F5               	movwf	strncmp@n
 21466  24FD  3000               	movlw	0
 21467  24FE  00F6               	movwf	strncmp@n+1
 21468  24FF  31B5  25D8  31A4   	fcall	_strncmp
 21469  2502  0871               	movf	?_strncmp,w
 21470  2503  0472               	iorwf	?_strncmp+1,w
 21471  2504  1D03               	btfss	3,2
 21472  2505  2D51               	goto	l6859
 21473  2506                     l6851:	
 21474                           
 21475                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
 21476  2506  0020               	movlb	0	; select bank0
 21477  2507  0859               	movf	vfpfcnvrt@fmt,w
 21478  2508  0086               	movwf	6
 21479  2509  0187               	clrf	7
 21480  250A  3003               	movlw	3
 21481  250B  0781               	addwf	1,f
 21482  250C  3141               	addfsr 1,1
 21483  250D  1803               	skipnc
 21484  250E  0A81               	incf	1,f
 21485                           
 21486                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 21487  250F  085A               	movf	vfpfcnvrt@ap,w
 21488  2510  0086               	movwf	6
 21489  2511  0187               	clrf	7
 21490  2512  0801               	movf	1,w
 21491  2513  0084               	movwf	4
 21492  2514  0185               	clrf	5
 21493  2515  3002               	movlw	2
 21494  2516  0781               	addwf	1,f
 21495  2517  0800               	movf	0,w
 21496  2518  0021               	movlb	1	; select bank1
 21497  2519  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 21498  251A  3980               	andlw	128
 21499  251B  1D03               	skipz
 21500  251C  30FF               	movlw	255
 21501  251D  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 21502  251E  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 21503  251F  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 21504  2520  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 21505  2521  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 21506  2522  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 21507  2523  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 21508                           
 21509                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
 21510  2524  0020               	movlb	0	; select bank0
 21511  2525  0858               	movf	vfpfcnvrt@fp+1,w
 21512  2526  00B1               	movwf	dtoa@fp+1
 21513  2527  0857               	movf	vfpfcnvrt@fp,w
 21514  2528  00B0               	movwf	dtoa@fp
 21515  2529  0021               	movlb	1	; select bank1
 21516  252A  0828               	movf	vfpfcnvrt@ll^(0+128),w
 21517  252B  0020               	movlb	0	; select bank0
 21518  252C  00B2               	movwf	dtoa@d
 21519  252D  0021               	movlb	1	; select bank1
 21520  252E  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 21521  252F  0020               	movlb	0	; select bank0
 21522  2530  00B3               	movwf	dtoa@d+1
 21523  2531  0021               	movlb	1	; select bank1
 21524  2532  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 21525  2533  0020               	movlb	0	; select bank0
 21526  2534  00B4               	movwf	dtoa@d+2
 21527  2535  0021               	movlb	1	; select bank1
 21528  2536  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 21529  2537  0020               	movlb	0	; select bank0
 21530  2538  00B5               	movwf	dtoa@d+3
 21531  2539  0021               	movlb	1	; select bank1
 21532  253A  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 21533  253B  0020               	movlb	0	; select bank0
 21534  253C  00B6               	movwf	dtoa@d+4
 21535  253D  0021               	movlb	1	; select bank1
 21536  253E  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 21537  253F  0020               	movlb	0	; select bank0
 21538  2540  00B7               	movwf	dtoa@d+5
 21539  2541  0021               	movlb	1	; select bank1
 21540  2542  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 21541  2543  0020               	movlb	0	; select bank0
 21542  2544  00B8               	movwf	dtoa@d+6
 21543  2545  0021               	movlb	1	; select bank1
 21544  2546  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 21545  2547  0020               	movlb	0	; select bank0
 21546  2548  00B9               	movwf	dtoa@d+7
 21547  2549  3198  2054         	fcall	_dtoa
 21548  254B  0020               	movlb	0	; select bank0
 21549  254C  0831               	movf	?_dtoa+1,w
 21550  254D  00D8               	movwf	?_vfpfcnvrt+1
 21551  254E  0830               	movf	?_dtoa,w
 21552  254F  00D7               	movwf	?_vfpfcnvrt
 21553  2550  0008               	return
 21554  2551                     l6859:	
 21555                           
 21556                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
 21557  2551  0020               	movlb	0	; select bank0
 21558  2552  0859               	movf	vfpfcnvrt@fmt,w
 21559  2553  0086               	movwf	6
 21560  2554  0187               	clrf	7
 21561  2555  3F40               	moviw [0]fsr1
 21562  2556  00F1               	movwf	strncmp@_l
 21563  2557  3F41               	moviw [1]fsr1
 21564  2558  00F2               	movwf	strncmp@_l+1
 21565  2559  3023               	movlw	low ((STR_26+1)| (0+32768))
 21566  255A  00F3               	movwf	strncmp@_r
 21567  255B  30BB               	movlw	high ((STR_26+1)| (0+32768))
 21568  255C  00F4               	movwf	strncmp@_r+1
 21569  255D  3002               	movlw	2
 21570  255E  00F5               	movwf	strncmp@n
 21571  255F  3000               	movlw	0
 21572  2560  00F6               	movwf	strncmp@n+1
 21573  2561  31B5  25D8  31A4   	fcall	_strncmp
 21574  2564  0871               	movf	?_strncmp,w
 21575  2565  0472               	iorwf	?_strncmp+1,w
 21576  2566  1903               	btfsc	3,2
 21577  2567  2D7F               	goto	l6863
 21578  2568  0020               	movlb	0	; select bank0
 21579  2569  0859               	movf	vfpfcnvrt@fmt,w
 21580  256A  0086               	movwf	6
 21581  256B  0187               	clrf	7
 21582  256C  3F40               	moviw [0]fsr1
 21583  256D  00F1               	movwf	strncmp@_l
 21584  256E  3F41               	moviw [1]fsr1
 21585  256F  00F2               	movwf	strncmp@_l+1
 21586  2570  3027               	movlw	low ((STR_30+1)| (0+32768))
 21587  2571  00F3               	movwf	strncmp@_r
 21588  2572  30BB               	movlw	high ((STR_30+1)| (0+32768))
 21589  2573  00F4               	movwf	strncmp@_r+1
 21590  2574  3002               	movlw	2
 21591  2575  00F5               	movwf	strncmp@n
 21592  2576  3000               	movlw	0
 21593  2577  00F6               	movwf	strncmp@n+1
 21594  2578  31B5  25D8  31A4   	fcall	_strncmp
 21595  257B  0871               	movf	?_strncmp,w
 21596  257C  0472               	iorwf	?_strncmp+1,w
 21597  257D  1D03               	btfss	3,2
 21598  257E  2DD1               	goto	L9
 21599  257F                     l6863:	
 21600                           
 21601                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
 21602  257F  0020               	movlb	0	; select bank0
 21603  2580  0859               	movf	vfpfcnvrt@fmt,w
 21604  2581  0086               	movwf	6
 21605  2582  0187               	clrf	7
 21606  2583  3002               	movlw	2
 21607  2584  0781               	addwf	1,f
 21608  2585  3141               	addfsr 1,1
 21609  2586  1803               	skipnc
 21610  2587  0A81               	incf	1,f
 21611                           
 21612                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
 21613  2588  085A               	movf	vfpfcnvrt@ap,w
 21614  2589  0086               	movwf	6
 21615  258A  0187               	clrf	7
 21616  258B  0801               	movf	1,w
 21617  258C  0084               	movwf	4
 21618  258D  0185               	clrf	5
 21619  258E  3002               	movlw	2
 21620  258F  0781               	addwf	1,f
 21621  2590  3F00               	moviw [0]fsr0
 21622  2591  00DB               	movwf	??_vfpfcnvrt
 21623  2592  3F01               	moviw [1]fsr0
 21624  2593  00DC               	movwf	??_vfpfcnvrt+1
 21625  2594  085B               	movf	??_vfpfcnvrt,w
 21626  2595  0021               	movlb	1	; select bank1
 21627  2596  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 21628  2597  0020               	movlb	0	; select bank0
 21629  2598  085C               	movf	??_vfpfcnvrt+1,w
 21630  2599  0021               	movlb	1	; select bank1
 21631  259A  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 21632  259B  0D89               	rlf	9,f
 21633  259C  3B89               	subwfb	9,f
 21634  259D  0989               	comf	9,f
 21635  259E  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 21636  259F  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 21637  25A0  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 21638  25A1  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 21639  25A2  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 21640  25A3  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 21641                           
 21642                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 820:       
      +                                return dtoa(fp, ll);
 21643  25A4  0020               	movlb	0	; select bank0
 21644  25A5  0858               	movf	vfpfcnvrt@fp+1,w
 21645  25A6  00B1               	movwf	dtoa@fp+1
 21646  25A7  0857               	movf	vfpfcnvrt@fp,w
 21647  25A8  00B0               	movwf	dtoa@fp
 21648  25A9  0021               	movlb	1	; select bank1
 21649  25AA  0828               	movf	vfpfcnvrt@ll^(0+128),w
 21650  25AB  0020               	movlb	0	; select bank0
 21651  25AC  00B2               	movwf	dtoa@d
 21652  25AD  0021               	movlb	1	; select bank1
 21653  25AE  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 21654  25AF  0020               	movlb	0	; select bank0
 21655  25B0  00B3               	movwf	dtoa@d+1
 21656  25B1  0021               	movlb	1	; select bank1
 21657  25B2  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 21658  25B3  0020               	movlb	0	; select bank0
 21659  25B4  00B4               	movwf	dtoa@d+2
 21660  25B5  0021               	movlb	1	; select bank1
 21661  25B6  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 21662  25B7  0020               	movlb	0	; select bank0
 21663  25B8  00B5               	movwf	dtoa@d+3
 21664  25B9  0021               	movlb	1	; select bank1
 21665  25BA  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 21666  25BB  0020               	movlb	0	; select bank0
 21667  25BC  00B6               	movwf	dtoa@d+4
 21668  25BD  0021               	movlb	1	; select bank1
 21669  25BE  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 21670  25BF  0020               	movlb	0	; select bank0
 21671  25C0  00B7               	movwf	dtoa@d+5
 21672  25C1  0021               	movlb	1	; select bank1
 21673  25C2  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 21674  25C3  0020               	movlb	0	; select bank0
 21675  25C4  00B8               	movwf	dtoa@d+6
 21676  25C5  0021               	movlb	1	; select bank1
 21677  25C6  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 21678  25C7  0020               	movlb	0	; select bank0
 21679  25C8  00B9               	movwf	dtoa@d+7
 21680  25C9  3198  2054         	fcall	_dtoa
 21681  25CB  0020               	movlb	0	; select bank0
 21682  25CC  0831               	movf	?_dtoa+1,w
 21683  25CD  00D8               	movwf	?_vfpfcnvrt+1
 21684  25CE  0830               	movf	?_dtoa,w
 21685  25CF  00D7               	movwf	?_vfpfcnvrt
 21686  25D0  0008               	return
 21687  25D1                     L9:	
 21688  25D1                     L8:	
 21689  25D1  3188  2843         	ljmp	l6871
 21690                           
 21691                           	psect	text7_split_2
 21692  0843                     l6871:	
 21693                           
 21694                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 21695  0843  0020               	movlb	0	; select bank0
 21696  0844  0859               	movf	vfpfcnvrt@fmt,w
 21697  0845  0086               	movwf	6
 21698  0846  0187               	clrf	7
 21699  0847  3F40               	moviw [0]fsr1
 21700  0848  00DB               	movwf	??_vfpfcnvrt
 21701  0849  3F41               	moviw [1]fsr1
 21702  084A  00DC               	movwf	??_vfpfcnvrt+1
 21703  084B  085B               	movf	??_vfpfcnvrt,w
 21704  084C  0084               	movwf	4
 21705  084D  085C               	movf	??_vfpfcnvrt+1,w
 21706  084E  0085               	movwf	5
 21707  084F  0012               	moviw fsr0++
 21708  0850  3A64               	xorlw	100
 21709  0851  1903               	btfsc	3,2
 21710  0852  2862               	goto	l6875
 21711  0853  0859               	movf	vfpfcnvrt@fmt,w
 21712  0854  0086               	movwf	6
 21713  0855  0187               	clrf	7
 21714  0856  3F40               	moviw [0]fsr1
 21715  0857  00DB               	movwf	??_vfpfcnvrt
 21716  0858  3F41               	moviw [1]fsr1
 21717  0859  00DC               	movwf	??_vfpfcnvrt+1
 21718  085A  085B               	movf	??_vfpfcnvrt,w
 21719  085B  0084               	movwf	4
 21720  085C  085C               	movf	??_vfpfcnvrt+1,w
 21721  085D  0085               	movwf	5
 21722  085E  0012               	moviw fsr0++
 21723  085F  3A69               	xorlw	105
 21724  0860  1D03               	btfss	3,2
 21725  0861  28B3               	goto	l6883
 21726  0862                     l6875:	
 21727                           
 21728                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 21729  0862  0859               	movf	vfpfcnvrt@fmt,w
 21730  0863  0086               	movwf	6
 21731  0864  0187               	clrf	7
 21732  0865  3001               	movlw	1
 21733  0866  0781               	addwf	1,f
 21734  0867  3141               	addfsr 1,1
 21735  0868  1803               	skipnc
 21736  0869  0A81               	incf	1,f
 21737                           
 21738                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 21739  086A  085A               	movf	vfpfcnvrt@ap,w
 21740  086B  0086               	movwf	6
 21741  086C  0187               	clrf	7
 21742  086D  0801               	movf	1,w
 21743  086E  0084               	movwf	4
 21744  086F  0185               	clrf	5
 21745  0870  3002               	movlw	2
 21746  0871  0781               	addwf	1,f
 21747  0872  3F00               	moviw [0]fsr0
 21748  0873  00DB               	movwf	??_vfpfcnvrt
 21749  0874  3F01               	moviw [1]fsr0
 21750  0875  00DC               	movwf	??_vfpfcnvrt+1
 21751  0876  085B               	movf	??_vfpfcnvrt,w
 21752  0877  0021               	movlb	1	; select bank1
 21753  0878  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 21754  0879  0020               	movlb	0	; select bank0
 21755  087A  085C               	movf	??_vfpfcnvrt+1,w
 21756  087B  0021               	movlb	1	; select bank1
 21757  087C  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 21758  087D  0D89               	rlf	9,f
 21759  087E  3B89               	subwfb	9,f
 21760  087F  0989               	comf	9,f
 21761  0880  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 21762  0881  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 21763  0882  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 21764  0883  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 21765  0884  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 21766  0885  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 21767                           
 21768                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 21769  0886  0020               	movlb	0	; select bank0
 21770  0887  0858               	movf	vfpfcnvrt@fp+1,w
 21771  0888  00B1               	movwf	dtoa@fp+1
 21772  0889  0857               	movf	vfpfcnvrt@fp,w
 21773  088A  00B0               	movwf	dtoa@fp
 21774  088B  0021               	movlb	1	; select bank1
 21775  088C  0828               	movf	vfpfcnvrt@ll^(0+128),w
 21776  088D  0020               	movlb	0	; select bank0
 21777  088E  00B2               	movwf	dtoa@d
 21778  088F  0021               	movlb	1	; select bank1
 21779  0890  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 21780  0891  0020               	movlb	0	; select bank0
 21781  0892  00B3               	movwf	dtoa@d+1
 21782  0893  0021               	movlb	1	; select bank1
 21783  0894  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 21784  0895  0020               	movlb	0	; select bank0
 21785  0896  00B4               	movwf	dtoa@d+2
 21786  0897  0021               	movlb	1	; select bank1
 21787  0898  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 21788  0899  0020               	movlb	0	; select bank0
 21789  089A  00B5               	movwf	dtoa@d+3
 21790  089B  0021               	movlb	1	; select bank1
 21791  089C  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 21792  089D  0020               	movlb	0	; select bank0
 21793  089E  00B6               	movwf	dtoa@d+4
 21794  089F  0021               	movlb	1	; select bank1
 21795  08A0  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 21796  08A1  0020               	movlb	0	; select bank0
 21797  08A2  00B7               	movwf	dtoa@d+5
 21798  08A3  0021               	movlb	1	; select bank1
 21799  08A4  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 21800  08A5  0020               	movlb	0	; select bank0
 21801  08A6  00B8               	movwf	dtoa@d+6
 21802  08A7  0021               	movlb	1	; select bank1
 21803  08A8  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 21804  08A9  0020               	movlb	0	; select bank0
 21805  08AA  00B9               	movwf	dtoa@d+7
 21806  08AB  3198  2054         	fcall	_dtoa
 21807  08AD  0020               	movlb	0	; select bank0
 21808  08AE  0831               	movf	?_dtoa+1,w
 21809  08AF  00D8               	movwf	?_vfpfcnvrt+1
 21810  08B0  0830               	movf	?_dtoa,w
 21811  08B1  00D7               	movwf	?_vfpfcnvrt
 21812  08B2  0008               	return
 21813  08B3                     l6883:	
 21814                           
 21815                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
 21816  08B3  0859               	movf	vfpfcnvrt@fmt,w
 21817  08B4  0086               	movwf	6
 21818  08B5  0187               	clrf	7
 21819  08B6  3F40               	moviw [0]fsr1
 21820  08B7  00F1               	movwf	strncmp@_l
 21821  08B8  3F41               	moviw [1]fsr1
 21822  08B9  00F2               	movwf	strncmp@_l+1
 21823  08BA  303D               	movlw	low (STR_44| (0+32768))
 21824  08BB  00F3               	movwf	strncmp@_r
 21825  08BC  30BB               	movlw	high (STR_44| (0+32768))
 21826  08BD  00F4               	movwf	strncmp@_r+1
 21827  08BE  3002               	movlw	2
 21828  08BF  00F5               	movwf	strncmp@n
 21829  08C0  3000               	movlw	0
 21830  08C1  00F6               	movwf	strncmp@n+1
 21831  08C2  31B5  25D8  3188   	fcall	_strncmp
 21832  08C5  0871               	movf	?_strncmp,w
 21833  08C6  0472               	iorwf	?_strncmp+1,w
 21834  08C7  1903               	btfsc	3,2
 21835  08C8  28E0               	goto	l6887
 21836  08C9  0020               	movlb	0	; select bank0
 21837  08CA  0859               	movf	vfpfcnvrt@fmt,w
 21838  08CB  0086               	movwf	6
 21839  08CC  0187               	clrf	7
 21840  08CD  3F40               	moviw [0]fsr1
 21841  08CE  00F1               	movwf	strncmp@_l
 21842  08CF  3F41               	moviw [1]fsr1
 21843  08D0  00F2               	movwf	strncmp@_l+1
 21844  08D1  3040               	movlw	low (STR_48| (0+32768))
 21845  08D2  00F3               	movwf	strncmp@_r
 21846  08D3  30BB               	movlw	high (STR_48| (0+32768))
 21847  08D4  00F4               	movwf	strncmp@_r+1
 21848  08D5  3002               	movlw	2
 21849  08D6  00F5               	movwf	strncmp@n
 21850  08D7  3000               	movlw	0
 21851  08D8  00F6               	movwf	strncmp@n+1
 21852  08D9  31B5  25D8  3188   	fcall	_strncmp
 21853  08DC  0871               	movf	?_strncmp,w
 21854  08DD  0472               	iorwf	?_strncmp+1,w
 21855  08DE  1D03               	btfss	3,2
 21856  08DF  2929               	goto	l6895
 21857  08E0                     l6887:	
 21858                           
 21859                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
 21860  08E0  0020               	movlb	0	; select bank0
 21861  08E1  0859               	movf	vfpfcnvrt@fmt,w
 21862  08E2  0086               	movwf	6
 21863  08E3  0187               	clrf	7
 21864  08E4  3002               	movlw	2
 21865  08E5  0781               	addwf	1,f
 21866  08E6  3141               	addfsr 1,1
 21867  08E7  1803               	skipnc
 21868  08E8  0A81               	incf	1,f
 21869                           
 21870                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 21871  08E9  085A               	movf	vfpfcnvrt@ap,w
 21872  08EA  0086               	movwf	6
 21873  08EB  0187               	clrf	7
 21874  08EC  0801               	movf	1,w
 21875  08ED  0084               	movwf	4
 21876  08EE  0185               	clrf	5
 21877  08EF  3002               	movlw	2
 21878  08F0  0781               	addwf	1,f
 21879  08F1  3F00               	moviw [0]fsr0
 21880  08F2  0021               	movlb	1	; select bank1
 21881  08F3  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 21882  08F4  3F01               	moviw [1]fsr0
 21883  08F5  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 21884  08F6  01AA               	clrf	(vfpfcnvrt@ll+2)^(0+128)
 21885  08F7  01AB               	clrf	(vfpfcnvrt@ll+3)^(0+128)
 21886  08F8  01AC               	clrf	(vfpfcnvrt@ll+4)^(0+128)
 21887  08F9  01AD               	clrf	(vfpfcnvrt@ll+5)^(0+128)
 21888  08FA  01AE               	clrf	(vfpfcnvrt@ll+6)^(0+128)
 21889  08FB  01AF               	clrf	(vfpfcnvrt@ll+7)^(0+128)
 21890                           
 21891                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 889:       
      +                                return dtoa(fp, ll);
 21892  08FC  0020               	movlb	0	; select bank0
 21893  08FD  0858               	movf	vfpfcnvrt@fp+1,w
 21894  08FE  00B1               	movwf	dtoa@fp+1
 21895  08FF  0857               	movf	vfpfcnvrt@fp,w
 21896  0900  00B0               	movwf	dtoa@fp
 21897  0901  0021               	movlb	1	; select bank1
 21898  0902  0828               	movf	vfpfcnvrt@ll^(0+128),w
 21899  0903  0020               	movlb	0	; select bank0
 21900  0904  00B2               	movwf	dtoa@d
 21901  0905  0021               	movlb	1	; select bank1
 21902  0906  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 21903  0907  0020               	movlb	0	; select bank0
 21904  0908  00B3               	movwf	dtoa@d+1
 21905  0909  0021               	movlb	1	; select bank1
 21906  090A  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 21907  090B  0020               	movlb	0	; select bank0
 21908  090C  00B4               	movwf	dtoa@d+2
 21909  090D  0021               	movlb	1	; select bank1
 21910  090E  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 21911  090F  0020               	movlb	0	; select bank0
 21912  0910  00B5               	movwf	dtoa@d+3
 21913  0911  0021               	movlb	1	; select bank1
 21914  0912  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 21915  0913  0020               	movlb	0	; select bank0
 21916  0914  00B6               	movwf	dtoa@d+4
 21917  0915  0021               	movlb	1	; select bank1
 21918  0916  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 21919  0917  0020               	movlb	0	; select bank0
 21920  0918  00B7               	movwf	dtoa@d+5
 21921  0919  0021               	movlb	1	; select bank1
 21922  091A  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 21923  091B  0020               	movlb	0	; select bank0
 21924  091C  00B8               	movwf	dtoa@d+6
 21925  091D  0021               	movlb	1	; select bank1
 21926  091E  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 21927  091F  0020               	movlb	0	; select bank0
 21928  0920  00B9               	movwf	dtoa@d+7
 21929  0921  3198  2054         	fcall	_dtoa
 21930  0923  0020               	movlb	0	; select bank0
 21931  0924  0831               	movf	?_dtoa+1,w
 21932  0925  00D8               	movwf	?_vfpfcnvrt+1
 21933  0926  0830               	movf	?_dtoa,w
 21934  0927  00D7               	movwf	?_vfpfcnvrt
 21935  0928  0008               	return
 21936  0929                     l6895:	
 21937                           
 21938                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
 21939  0929  0020               	movlb	0	; select bank0
 21940  092A  0859               	movf	vfpfcnvrt@fmt,w
 21941  092B  0086               	movwf	6
 21942  092C  0187               	clrf	7
 21943  092D  3F40               	moviw [0]fsr1
 21944  092E  00F1               	movwf	strncmp@_l
 21945  092F  3F41               	moviw [1]fsr1
 21946  0930  00F2               	movwf	strncmp@_l+1
 21947  0931  302E               	movlw	low (STR_53| (0+32768))
 21948  0932  00F3               	movwf	strncmp@_r
 21949  0933  30BB               	movlw	high (STR_53| (0+32768))
 21950  0934  00F4               	movwf	strncmp@_r+1
 21951  0935  3003               	movlw	3
 21952  0936  00F5               	movwf	strncmp@n
 21953  0937  3000               	movlw	0
 21954  0938  00F6               	movwf	strncmp@n+1
 21955  0939  31B5  25D8  3188   	fcall	_strncmp
 21956  093C  0871               	movf	?_strncmp,w
 21957  093D  0472               	iorwf	?_strncmp+1,w
 21958  093E  1D03               	btfss	3,2
 21959  093F  2988               	goto	l6905
 21960                           
 21961                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
 21962  0940  0020               	movlb	0	; select bank0
 21963  0941  0859               	movf	vfpfcnvrt@fmt,w
 21964  0942  0086               	movwf	6
 21965  0943  0187               	clrf	7
 21966  0944  3003               	movlw	3
 21967  0945  0781               	addwf	1,f
 21968  0946  3141               	addfsr 1,1
 21969  0947  1803               	skipnc
 21970  0948  0A81               	incf	1,f
 21971                           
 21972                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 21973  0949  085A               	movf	vfpfcnvrt@ap,w
 21974  094A  0086               	movwf	6
 21975  094B  0187               	clrf	7
 21976  094C  0801               	movf	1,w
 21977  094D  0084               	movwf	4
 21978  094E  0185               	clrf	5
 21979  094F  3002               	movlw	2
 21980  0950  0781               	addwf	1,f
 21981  0951  0800               	movf	0,w
 21982  0952  0021               	movlb	1	; select bank1
 21983  0953  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21984  0954  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 21985  0955  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21986  0956  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21987  0957  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21988  0958  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21989  0959  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21990  095A  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21991                           
 21992                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
 21993  095B  0020               	movlb	0	; select bank0
 21994  095C  0858               	movf	vfpfcnvrt@fp+1,w
 21995  095D  00B1               	movwf	otoa@fp+1
 21996  095E  0857               	movf	vfpfcnvrt@fp,w
 21997  095F  00B0               	movwf	otoa@fp
 21998  0960  0021               	movlb	1	; select bank1
 21999  0961  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22000  0962  0020               	movlb	0	; select bank0
 22001  0963  00B2               	movwf	otoa@d
 22002  0964  0021               	movlb	1	; select bank1
 22003  0965  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22004  0966  0020               	movlb	0	; select bank0
 22005  0967  00B3               	movwf	otoa@d+1
 22006  0968  0021               	movlb	1	; select bank1
 22007  0969  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22008  096A  0020               	movlb	0	; select bank0
 22009  096B  00B4               	movwf	otoa@d+2
 22010  096C  0021               	movlb	1	; select bank1
 22011  096D  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22012  096E  0020               	movlb	0	; select bank0
 22013  096F  00B5               	movwf	otoa@d+3
 22014  0970  0021               	movlb	1	; select bank1
 22015  0971  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22016  0972  0020               	movlb	0	; select bank0
 22017  0973  00B6               	movwf	otoa@d+4
 22018  0974  0021               	movlb	1	; select bank1
 22019  0975  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22020  0976  0020               	movlb	0	; select bank0
 22021  0977  00B7               	movwf	otoa@d+5
 22022  0978  0021               	movlb	1	; select bank1
 22023  0979  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22024  097A  0020               	movlb	0	; select bank0
 22025  097B  00B8               	movwf	otoa@d+6
 22026  097C  0021               	movlb	1	; select bank1
 22027  097D  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22028  097E  0020               	movlb	0	; select bank0
 22029  097F  00B9               	movwf	otoa@d+7
 22030  0980  31A2  22F5         	fcall	_otoa
 22031  0982  0020               	movlb	0	; select bank0
 22032  0983  0831               	movf	?_otoa+1,w
 22033  0984  00D8               	movwf	?_vfpfcnvrt+1
 22034  0985  0830               	movf	?_otoa,w
 22035  0986  00D7               	movwf	?_vfpfcnvrt
 22036  0987  0008               	return
 22037  0988                     l6905:	
 22038                           
 22039                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
 22040  0988  0020               	movlb	0	; select bank0
 22041  0989  0859               	movf	vfpfcnvrt@fmt,w
 22042  098A  0086               	movwf	6
 22043  098B  0187               	clrf	7
 22044  098C  3F40               	moviw [0]fsr1
 22045  098D  00F1               	movwf	strncmp@_l
 22046  098E  3F41               	moviw [1]fsr1
 22047  098F  00F2               	movwf	strncmp@_l+1
 22048  0990  302F               	movlw	low ((STR_53+1)| (0+32768))
 22049  0991  00F3               	movwf	strncmp@_r
 22050  0992  30BB               	movlw	high ((STR_53+1)| (0+32768))
 22051  0993  00F4               	movwf	strncmp@_r+1
 22052  0994  3002               	movlw	2
 22053  0995  00F5               	movwf	strncmp@n
 22054  0996  3000               	movlw	0
 22055  0997  00F6               	movwf	strncmp@n+1
 22056  0998  31B5  25D8  3188   	fcall	_strncmp
 22057  099B  0871               	movf	?_strncmp,w
 22058  099C  0472               	iorwf	?_strncmp+1,w
 22059  099D  1D03               	btfss	3,2
 22060  099E  29E8               	goto	l6915
 22061                           
 22062                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
 22063  099F  0020               	movlb	0	; select bank0
 22064  09A0  0859               	movf	vfpfcnvrt@fmt,w
 22065  09A1  0086               	movwf	6
 22066  09A2  0187               	clrf	7
 22067  09A3  3002               	movlw	2
 22068  09A4  0781               	addwf	1,f
 22069  09A5  3141               	addfsr 1,1
 22070  09A6  1803               	skipnc
 22071  09A7  0A81               	incf	1,f
 22072                           
 22073                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
 22074  09A8  085A               	movf	vfpfcnvrt@ap,w
 22075  09A9  0086               	movwf	6
 22076  09AA  0187               	clrf	7
 22077  09AB  0801               	movf	1,w
 22078  09AC  0084               	movwf	4
 22079  09AD  0185               	clrf	5
 22080  09AE  3002               	movlw	2
 22081  09AF  0781               	addwf	1,f
 22082  09B0  3F00               	moviw [0]fsr0
 22083  09B1  0021               	movlb	1	; select bank1
 22084  09B2  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22085  09B3  3F01               	moviw [1]fsr0
 22086  09B4  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22087  09B5  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22088  09B6  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22089  09B7  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22090  09B8  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22091  09B9  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22092  09BA  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22093                           
 22094                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 985:       
      +                                return otoa(fp, llu);
 22095  09BB  0020               	movlb	0	; select bank0
 22096  09BC  0858               	movf	vfpfcnvrt@fp+1,w
 22097  09BD  00B1               	movwf	otoa@fp+1
 22098  09BE  0857               	movf	vfpfcnvrt@fp,w
 22099  09BF  00B0               	movwf	otoa@fp
 22100  09C0  0021               	movlb	1	; select bank1
 22101  09C1  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22102  09C2  0020               	movlb	0	; select bank0
 22103  09C3  00B2               	movwf	otoa@d
 22104  09C4  0021               	movlb	1	; select bank1
 22105  09C5  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22106  09C6  0020               	movlb	0	; select bank0
 22107  09C7  00B3               	movwf	otoa@d+1
 22108  09C8  0021               	movlb	1	; select bank1
 22109  09C9  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22110  09CA  0020               	movlb	0	; select bank0
 22111  09CB  00B4               	movwf	otoa@d+2
 22112  09CC  0021               	movlb	1	; select bank1
 22113  09CD  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22114  09CE  0020               	movlb	0	; select bank0
 22115  09CF  00B5               	movwf	otoa@d+3
 22116  09D0  0021               	movlb	1	; select bank1
 22117  09D1  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22118  09D2  0020               	movlb	0	; select bank0
 22119  09D3  00B6               	movwf	otoa@d+4
 22120  09D4  0021               	movlb	1	; select bank1
 22121  09D5  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22122  09D6  0020               	movlb	0	; select bank0
 22123  09D7  00B7               	movwf	otoa@d+5
 22124  09D8  0021               	movlb	1	; select bank1
 22125  09D9  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22126  09DA  0020               	movlb	0	; select bank0
 22127  09DB  00B8               	movwf	otoa@d+6
 22128  09DC  0021               	movlb	1	; select bank1
 22129  09DD  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22130  09DE  0020               	movlb	0	; select bank0
 22131  09DF  00B9               	movwf	otoa@d+7
 22132  09E0  31A2  22F5         	fcall	_otoa
 22133  09E2  0020               	movlb	0	; select bank0
 22134  09E3  0831               	movf	?_otoa+1,w
 22135  09E4  00D8               	movwf	?_vfpfcnvrt+1
 22136  09E5  0830               	movf	?_otoa,w
 22137  09E6  00D7               	movwf	?_vfpfcnvrt
 22138  09E7  0008               	return
 22139  09E8                     l6915:	
 22140                           
 22141                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
 22142  09E8  0020               	movlb	0	; select bank0
 22143  09E9  0859               	movf	vfpfcnvrt@fmt,w
 22144  09EA  0086               	movwf	6
 22145  09EB  0187               	clrf	7
 22146  09EC  3F40               	moviw [0]fsr1
 22147  09ED  00DB               	movwf	??_vfpfcnvrt
 22148  09EE  3F41               	moviw [1]fsr1
 22149  09EF  00DC               	movwf	??_vfpfcnvrt+1
 22150  09F0  085B               	movf	??_vfpfcnvrt,w
 22151  09F1  0084               	movwf	4
 22152  09F2  085C               	movf	??_vfpfcnvrt+1,w
 22153  09F3  0085               	movwf	5
 22154  09F4  0012               	moviw fsr0++
 22155  09F5  3A6F               	xorlw	111
 22156  09F6  1D03               	btfss	3,2
 22157  09F7  2A40               	goto	l6925
 22158                           
 22159                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
 22160  09F8  0859               	movf	vfpfcnvrt@fmt,w
 22161  09F9  0086               	movwf	6
 22162  09FA  0187               	clrf	7
 22163  09FB  3001               	movlw	1
 22164  09FC  0781               	addwf	1,f
 22165  09FD  3141               	addfsr 1,1
 22166  09FE  1803               	skipnc
 22167  09FF  0A81               	incf	1,f
 22168                           
 22169                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
 22170  0A00  085A               	movf	vfpfcnvrt@ap,w
 22171  0A01  0086               	movwf	6
 22172  0A02  0187               	clrf	7
 22173  0A03  0801               	movf	1,w
 22174  0A04  0084               	movwf	4
 22175  0A05  0185               	clrf	5
 22176  0A06  3002               	movlw	2
 22177  0A07  0781               	addwf	1,f
 22178  0A08  3F00               	moviw [0]fsr0
 22179  0A09  0021               	movlb	1	; select bank1
 22180  0A0A  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22181  0A0B  3F01               	moviw [1]fsr0
 22182  0A0C  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22183  0A0D  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22184  0A0E  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22185  0A0F  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22186  0A10  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22187  0A11  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22188  0A12  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22189                           
 22190                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 995:       
      +                                return otoa(fp, llu);
 22191  0A13  0020               	movlb	0	; select bank0
 22192  0A14  0858               	movf	vfpfcnvrt@fp+1,w
 22193  0A15  00B1               	movwf	otoa@fp+1
 22194  0A16  0857               	movf	vfpfcnvrt@fp,w
 22195  0A17  00B0               	movwf	otoa@fp
 22196  0A18  0021               	movlb	1	; select bank1
 22197  0A19  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22198  0A1A  0020               	movlb	0	; select bank0
 22199  0A1B  00B2               	movwf	otoa@d
 22200  0A1C  0021               	movlb	1	; select bank1
 22201  0A1D  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22202  0A1E  0020               	movlb	0	; select bank0
 22203  0A1F  00B3               	movwf	otoa@d+1
 22204  0A20  0021               	movlb	1	; select bank1
 22205  0A21  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22206  0A22  0020               	movlb	0	; select bank0
 22207  0A23  00B4               	movwf	otoa@d+2
 22208  0A24  0021               	movlb	1	; select bank1
 22209  0A25  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22210  0A26  0020               	movlb	0	; select bank0
 22211  0A27  00B5               	movwf	otoa@d+3
 22212  0A28  0021               	movlb	1	; select bank1
 22213  0A29  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22214  0A2A  0020               	movlb	0	; select bank0
 22215  0A2B  00B6               	movwf	otoa@d+4
 22216  0A2C  0021               	movlb	1	; select bank1
 22217  0A2D  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22218  0A2E  0020               	movlb	0	; select bank0
 22219  0A2F  00B7               	movwf	otoa@d+5
 22220  0A30  0021               	movlb	1	; select bank1
 22221  0A31  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22222  0A32  0020               	movlb	0	; select bank0
 22223  0A33  00B8               	movwf	otoa@d+6
 22224  0A34  0021               	movlb	1	; select bank1
 22225  0A35  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22226  0A36  0020               	movlb	0	; select bank0
 22227  0A37  00B9               	movwf	otoa@d+7
 22228  0A38  31A2  22F5         	fcall	_otoa
 22229  0A3A  0020               	movlb	0	; select bank0
 22230  0A3B  0831               	movf	?_otoa+1,w
 22231  0A3C  00D8               	movwf	?_vfpfcnvrt+1
 22232  0A3D  0830               	movf	?_otoa,w
 22233  0A3E  00D7               	movwf	?_vfpfcnvrt
 22234  0A3F  0008               	return
 22235  0A40                     l6925:	
 22236                           
 22237                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
 22238  0A40  0859               	movf	vfpfcnvrt@fmt,w
 22239  0A41  0086               	movwf	6
 22240  0A42  0187               	clrf	7
 22241  0A43  3F40               	moviw [0]fsr1
 22242  0A44  00F1               	movwf	strncmp@_l
 22243  0A45  3F41               	moviw [1]fsr1
 22244  0A46  00F2               	movwf	strncmp@_l+1
 22245  0A47  3046               	movlw	low (STR_63| (0+32768))
 22246  0A48  00F3               	movwf	strncmp@_r
 22247  0A49  30BB               	movlw	high (STR_63| (0+32768))
 22248  0A4A  00F4               	movwf	strncmp@_r+1
 22249  0A4B  3002               	movlw	2
 22250  0A4C  00F5               	movwf	strncmp@n
 22251  0A4D  3000               	movlw	0
 22252  0A4E  00F6               	movwf	strncmp@n+1
 22253  0A4F  31B5  25D8  3188   	fcall	_strncmp
 22254  0A52  0871               	movf	?_strncmp,w
 22255  0A53  0472               	iorwf	?_strncmp+1,w
 22256  0A54  1D03               	btfss	3,2
 22257  0A55  2A9F               	goto	l6935
 22258                           
 22259                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
 22260  0A56  0020               	movlb	0	; select bank0
 22261  0A57  0859               	movf	vfpfcnvrt@fmt,w
 22262  0A58  0086               	movwf	6
 22263  0A59  0187               	clrf	7
 22264  0A5A  3002               	movlw	2
 22265  0A5B  0781               	addwf	1,f
 22266  0A5C  3141               	addfsr 1,1
 22267  0A5D  1803               	skipnc
 22268  0A5E  0A81               	incf	1,f
 22269                           
 22270                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 22271  0A5F  085A               	movf	vfpfcnvrt@ap,w
 22272  0A60  0086               	movwf	6
 22273  0A61  0187               	clrf	7
 22274  0A62  0801               	movf	1,w
 22275  0A63  0084               	movwf	4
 22276  0A64  0185               	clrf	5
 22277  0A65  3002               	movlw	2
 22278  0A66  0781               	addwf	1,f
 22279  0A67  3F00               	moviw [0]fsr0
 22280  0A68  0021               	movlb	1	; select bank1
 22281  0A69  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22282  0A6A  3F01               	moviw [1]fsr0
 22283  0A6B  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22284  0A6C  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22285  0A6D  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22286  0A6E  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22287  0A6F  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22288  0A70  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22289  0A71  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22290                           
 22291                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1049:      
      +                                 return otoa(fp, llu);
 22292  0A72  0020               	movlb	0	; select bank0
 22293  0A73  0858               	movf	vfpfcnvrt@fp+1,w
 22294  0A74  00B1               	movwf	otoa@fp+1
 22295  0A75  0857               	movf	vfpfcnvrt@fp,w
 22296  0A76  00B0               	movwf	otoa@fp
 22297  0A77  0021               	movlb	1	; select bank1
 22298  0A78  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22299  0A79  0020               	movlb	0	; select bank0
 22300  0A7A  00B2               	movwf	otoa@d
 22301  0A7B  0021               	movlb	1	; select bank1
 22302  0A7C  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22303  0A7D  0020               	movlb	0	; select bank0
 22304  0A7E  00B3               	movwf	otoa@d+1
 22305  0A7F  0021               	movlb	1	; select bank1
 22306  0A80  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22307  0A81  0020               	movlb	0	; select bank0
 22308  0A82  00B4               	movwf	otoa@d+2
 22309  0A83  0021               	movlb	1	; select bank1
 22310  0A84  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22311  0A85  0020               	movlb	0	; select bank0
 22312  0A86  00B5               	movwf	otoa@d+3
 22313  0A87  0021               	movlb	1	; select bank1
 22314  0A88  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22315  0A89  0020               	movlb	0	; select bank0
 22316  0A8A  00B6               	movwf	otoa@d+4
 22317  0A8B  0021               	movlb	1	; select bank1
 22318  0A8C  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22319  0A8D  0020               	movlb	0	; select bank0
 22320  0A8E  00B7               	movwf	otoa@d+5
 22321  0A8F  0021               	movlb	1	; select bank1
 22322  0A90  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22323  0A91  0020               	movlb	0	; select bank0
 22324  0A92  00B8               	movwf	otoa@d+6
 22325  0A93  0021               	movlb	1	; select bank1
 22326  0A94  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22327  0A95  0020               	movlb	0	; select bank0
 22328  0A96  00B9               	movwf	otoa@d+7
 22329  0A97  31A2  22F5         	fcall	_otoa
 22330  0A99  0020               	movlb	0	; select bank0
 22331  0A9A  0831               	movf	?_otoa+1,w
 22332  0A9B  00D8               	movwf	?_vfpfcnvrt+1
 22333  0A9C  0830               	movf	?_otoa,w
 22334  0A9D  00D7               	movwf	?_vfpfcnvrt
 22335  0A9E  0008               	return
 22336  0A9F                     l6935:	
 22337                           
 22338                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
 22339  0A9F  0020               	movlb	0	; select bank0
 22340  0AA0  0859               	movf	vfpfcnvrt@fmt,w
 22341  0AA1  0086               	movwf	6
 22342  0AA2  0187               	clrf	7
 22343  0AA3  3F40               	moviw [0]fsr1
 22344  0AA4  00F1               	movwf	strncmp@_l
 22345  0AA5  3F41               	moviw [1]fsr1
 22346  0AA6  00F2               	movwf	strncmp@_l+1
 22347  0AA7  302A               	movlw	low (STR_68| (0+32768))
 22348  0AA8  00F3               	movwf	strncmp@_r
 22349  0AA9  30BB               	movlw	high (STR_68| (0+32768))
 22350  0AAA  00F4               	movwf	strncmp@_r+1
 22351  0AAB  3003               	movlw	3
 22352  0AAC  00F5               	movwf	strncmp@n
 22353  0AAD  3000               	movlw	0
 22354  0AAE  00F6               	movwf	strncmp@n+1
 22355  0AAF  31B5  25D8  3188   	fcall	_strncmp
 22356  0AB2  0871               	movf	?_strncmp,w
 22357  0AB3  0472               	iorwf	?_strncmp+1,w
 22358  0AB4  1D03               	btfss	3,2
 22359  0AB5  2B36               	goto	l6947
 22360                           
 22361                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
 22362  0AB6  0020               	movlb	0	; select bank0
 22363  0AB7  0859               	movf	vfpfcnvrt@fmt,w
 22364  0AB8  0086               	movwf	6
 22365  0AB9  0187               	clrf	7
 22366  0ABA  3003               	movlw	3
 22367  0ABB  0781               	addwf	1,f
 22368  0ABC  3141               	addfsr 1,1
 22369  0ABD  1803               	skipnc
 22370  0ABE  0A81               	incf	1,f
 22371                           
 22372                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
 22373  0ABF  085A               	movf	vfpfcnvrt@ap,w
 22374  0AC0  0086               	movwf	6
 22375  0AC1  0187               	clrf	7
 22376  0AC2  0801               	movf	1,w
 22377  0AC3  0084               	movwf	4
 22378  0AC4  0185               	clrf	5
 22379  0AC5  3002               	movlw	2
 22380  0AC6  0781               	addwf	1,f
 22381  0AC7  3F00               	moviw [0]fsr0
 22382  0AC8  0021               	movlb	1	; select bank1
 22383  0AC9  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 22384  0ACA  3F01               	moviw [1]fsr0
 22385  0ACB  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 22386                           
 22387                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
 22388  0ACC  0830               	movf	vfpfcnvrt@vp^(0+128),w
 22389  0ACD  0086               	movwf	6
 22390  0ACE  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 22391  0ACF  0087               	movwf	7
 22392  0AD0  0023               	movlb	3	; select bank3
 22393  0AD1  0854               	movf	_nout^(0+384),w
 22394  0AD2  0081               	movwf	1
 22395  0AD3  2B32               	goto	l6943
 22396  0AD4                     l6949:	
 22397                           
 22398                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
 22399  0AD4  0020               	movlb	0	; select bank0
 22400  0AD5  0859               	movf	vfpfcnvrt@fmt,w
 22401  0AD6  0086               	movwf	6
 22402  0AD7  0187               	clrf	7
 22403  0AD8  3002               	movlw	2
 22404  0AD9  0781               	addwf	1,f
 22405  0ADA  3141               	addfsr 1,1
 22406  0ADB  1803               	skipnc
 22407  0ADC  0A81               	incf	1,f
 22408                           
 22409                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
 22410  0ADD  085A               	movf	vfpfcnvrt@ap,w
 22411  0ADE  0086               	movwf	6
 22412  0ADF  0187               	clrf	7
 22413  0AE0  0801               	movf	1,w
 22414  0AE1  0084               	movwf	4
 22415  0AE2  0185               	clrf	5
 22416  0AE3  3002               	movlw	2
 22417  0AE4  0781               	addwf	1,f
 22418  0AE5  3F00               	moviw [0]fsr0
 22419  0AE6  0021               	movlb	1	; select bank1
 22420  0AE7  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 22421  0AE8  3F01               	moviw [1]fsr0
 22422  0AE9  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 22423                           
 22424                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
 22425  0AEA  0830               	movf	vfpfcnvrt@vp^(0+128),w
 22426  0AEB  0086               	movwf	6
 22427  0AEC  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 22428  0AED  0087               	movwf	7
 22429  0AEE  0023               	movlb	3	; select bank3
 22430  0AEF  0854               	movf	_nout^(0+384),w
 22431  0AF0  3FC0               	movwi [0]fsr1
 22432  0AF1  0855               	movf	(_nout+1)^(0+384),w
 22433  0AF2  3FC1               	movwi [1]fsr1
 22434  0AF3  2B32               	goto	l6943
 22435  0AF4                     l6961:	
 22436                           
 22437                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
 22438  0AF4  0859               	movf	vfpfcnvrt@fmt,w
 22439  0AF5  0086               	movwf	6
 22440  0AF6  0187               	clrf	7
 22441  0AF7  3001               	movlw	1
 22442  0AF8  0781               	addwf	1,f
 22443  0AF9  3141               	addfsr 1,1
 22444  0AFA  1803               	skipnc
 22445  0AFB  0A81               	incf	1,f
 22446                           
 22447                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
 22448  0AFC  085A               	movf	vfpfcnvrt@ap,w
 22449  0AFD  0086               	movwf	6
 22450  0AFE  0187               	clrf	7
 22451  0AFF  0801               	movf	1,w
 22452  0B00  0084               	movwf	4
 22453  0B01  0185               	clrf	5
 22454  0B02  3002               	movlw	2
 22455  0B03  0781               	addwf	1,f
 22456  0B04  3F00               	moviw [0]fsr0
 22457  0B05  0021               	movlb	1	; select bank1
 22458  0B06  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 22459  0B07  3F01               	moviw [1]fsr0
 22460  0B08  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 22461                           
 22462                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
 22463  0B09  0830               	movf	vfpfcnvrt@vp^(0+128),w
 22464  0B0A  0086               	movwf	6
 22465  0B0B  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 22466  0B0C  0087               	movwf	7
 22467  0B0D  0023               	movlb	3	; select bank3
 22468  0B0E  0854               	movf	_nout^(0+384),w
 22469  0B0F  3FC0               	movwi [0]fsr1
 22470  0B10  0855               	movf	(_nout+1)^(0+384),w
 22471  0B11  3FC1               	movwi [1]fsr1
 22472  0B12  2B32               	goto	l6943
 22473  0B13                     l6973:	
 22474                           
 22475                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
 22476  0B13  0020               	movlb	0	; select bank0
 22477  0B14  0859               	movf	vfpfcnvrt@fmt,w
 22478  0B15  0086               	movwf	6
 22479  0B16  0187               	clrf	7
 22480  0B17  3002               	movlw	2
 22481  0B18  0781               	addwf	1,f
 22482  0B19  3141               	addfsr 1,1
 22483  0B1A  1803               	skipnc
 22484  0B1B  0A81               	incf	1,f
 22485                           
 22486                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
 22487  0B1C  085A               	movf	vfpfcnvrt@ap,w
 22488  0B1D  0086               	movwf	6
 22489  0B1E  0187               	clrf	7
 22490  0B1F  0801               	movf	1,w
 22491  0B20  0084               	movwf	4
 22492  0B21  0185               	clrf	5
 22493  0B22  3002               	movlw	2
 22494  0B23  0781               	addwf	1,f
 22495  0B24  3F00               	moviw [0]fsr0
 22496  0B25  0021               	movlb	1	; select bank1
 22497  0B26  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 22498  0B27  3F01               	moviw [1]fsr0
 22499  0B28  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 22500                           
 22501                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
 22502  0B29  0830               	movf	vfpfcnvrt@vp^(0+128),w
 22503  0B2A  0086               	movwf	6
 22504  0B2B  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 22505  0B2C  0087               	movwf	7
 22506  0B2D  0023               	movlb	3	; select bank3
 22507  0B2E  0854               	movf	_nout^(0+384),w
 22508  0B2F  3FC0               	movwi [0]fsr1
 22509  0B30  0855               	movf	(_nout+1)^(0+384),w
 22510  0B31  3FC1               	movwi [1]fsr1
 22511  0B32                     l6943:	
 22512                           
 22513                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
 22514  0B32  0020               	movlb	0	; select bank0
 22515  0B33  01D7               	clrf	?_vfpfcnvrt
 22516  0B34  01D8               	clrf	?_vfpfcnvrt+1
 22517  0B35  0008               	return
 22518  0B36                     l6947:	
 22519                           
 22520                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
 22521  0B36  0020               	movlb	0	; select bank0
 22522  0B37  0859               	movf	vfpfcnvrt@fmt,w
 22523  0B38  0086               	movwf	6
 22524  0B39  0187               	clrf	7
 22525  0B3A  3F40               	moviw [0]fsr1
 22526  0B3B  00F1               	movwf	strncmp@_l
 22527  0B3C  3F41               	moviw [1]fsr1
 22528  0B3D  00F2               	movwf	strncmp@_l+1
 22529  0B3E  302B               	movlw	low ((STR_68+1)| (0+32768))
 22530  0B3F  00F3               	movwf	strncmp@_r
 22531  0B40  30BB               	movlw	high ((STR_68+1)| (0+32768))
 22532  0B41  00F4               	movwf	strncmp@_r+1
 22533  0B42  3002               	movlw	2
 22534  0B43  00F5               	movwf	strncmp@n
 22535  0B44  3000               	movlw	0
 22536  0B45  00F6               	movwf	strncmp@n+1
 22537  0B46  31B5  25D8  3188   	fcall	_strncmp
 22538  0B49  0871               	movf	?_strncmp,w
 22539  0B4A  0472               	iorwf	?_strncmp+1,w
 22540  0B4B  1903               	btfsc	3,2
 22541  0B4C  2AD4               	goto	l6949
 22542                           
 22543                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
 22544  0B4D  0020               	movlb	0	; select bank0
 22545  0B4E  0859               	movf	vfpfcnvrt@fmt,w
 22546  0B4F  0086               	movwf	6
 22547  0B50  0187               	clrf	7
 22548  0B51  3F40               	moviw [0]fsr1
 22549  0B52  00DB               	movwf	??_vfpfcnvrt
 22550  0B53  3F41               	moviw [1]fsr1
 22551  0B54  00DC               	movwf	??_vfpfcnvrt+1
 22552  0B55  085B               	movf	??_vfpfcnvrt,w
 22553  0B56  0084               	movwf	4
 22554  0B57  085C               	movf	??_vfpfcnvrt+1,w
 22555  0B58  0085               	movwf	5
 22556  0B59  0012               	moviw fsr0++
 22557  0B5A  3A6E               	xorlw	110
 22558  0B5B  1903               	btfsc	3,2
 22559  0B5C  2AF4               	goto	l6961
 22560                           
 22561                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
 22562  0B5D  0859               	movf	vfpfcnvrt@fmt,w
 22563  0B5E  0086               	movwf	6
 22564  0B5F  0187               	clrf	7
 22565  0B60  3F40               	moviw [0]fsr1
 22566  0B61  00F1               	movwf	strncmp@_l
 22567  0B62  3F41               	moviw [1]fsr1
 22568  0B63  00F2               	movwf	strncmp@_l+1
 22569  0B64  3043               	movlw	low (STR_78| (0+32768))
 22570  0B65  00F3               	movwf	strncmp@_r
 22571  0B66  30BB               	movlw	high (STR_78| (0+32768))
 22572  0B67  00F4               	movwf	strncmp@_r+1
 22573  0B68  3002               	movlw	2
 22574  0B69  00F5               	movwf	strncmp@n
 22575  0B6A  3000               	movlw	0
 22576  0B6B  00F6               	movwf	strncmp@n+1
 22577  0B6C  31B5  25D8  3188   	fcall	_strncmp
 22578  0B6F  0871               	movf	?_strncmp,w
 22579  0B70  0472               	iorwf	?_strncmp+1,w
 22580  0B71  1903               	btfsc	3,2
 22581  0B72  2B13               	goto	l6973
 22582                           
 22583                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
 22584  0B73  0020               	movlb	0	; select bank0
 22585  0B74  0859               	movf	vfpfcnvrt@fmt,w
 22586  0B75  0086               	movwf	6
 22587  0B76  0187               	clrf	7
 22588  0B77  3F40               	moviw [0]fsr1
 22589  0B78  00DB               	movwf	??_vfpfcnvrt
 22590  0B79  3F41               	moviw [1]fsr1
 22591  0B7A  00DC               	movwf	??_vfpfcnvrt+1
 22592  0B7B  085B               	movf	??_vfpfcnvrt,w
 22593  0B7C  0084               	movwf	4
 22594  0B7D  085C               	movf	??_vfpfcnvrt+1,w
 22595  0B7E  0085               	movwf	5
 22596  0B7F  0012               	moviw fsr0++
 22597  0B80  3A70               	xorlw	112
 22598  0B81  1D03               	btfss	3,2
 22599  0B82  2BCF               	goto	l6993
 22600                           
 22601                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
 22602  0B83  0859               	movf	vfpfcnvrt@fmt,w
 22603  0B84  0086               	movwf	6
 22604  0B85  0187               	clrf	7
 22605  0B86  3001               	movlw	1
 22606  0B87  0781               	addwf	1,f
 22607  0B88  3141               	addfsr 1,1
 22608  0B89  1803               	skipnc
 22609  0B8A  0A81               	incf	1,f
 22610                           
 22611                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
 22612  0B8B  085A               	movf	vfpfcnvrt@ap,w
 22613  0B8C  0086               	movwf	6
 22614  0B8D  0187               	clrf	7
 22615  0B8E  0801               	movf	1,w
 22616  0B8F  0084               	movwf	4
 22617  0B90  0185               	clrf	5
 22618  0B91  3002               	movlw	2
 22619  0B92  0781               	addwf	1,f
 22620  0B93  3F00               	moviw [0]fsr0
 22621  0B94  0021               	movlb	1	; select bank1
 22622  0B95  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22623  0B96  3F01               	moviw [1]fsr0
 22624  0B97  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22625  0B98  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22626  0B99  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22627  0B9A  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22628  0B9B  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22629  0B9C  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22630  0B9D  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22631                           
 22632                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
 22633  0B9E  0020               	movlb	0	; select bank0
 22634  0B9F  0858               	movf	vfpfcnvrt@fp+1,w
 22635  0BA0  00B1               	movwf	xtoa@fp+1
 22636  0BA1  0857               	movf	vfpfcnvrt@fp,w
 22637  0BA2  00B0               	movwf	xtoa@fp
 22638  0BA3  0021               	movlb	1	; select bank1
 22639  0BA4  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22640  0BA5  0020               	movlb	0	; select bank0
 22641  0BA6  00B2               	movwf	xtoa@d
 22642  0BA7  0021               	movlb	1	; select bank1
 22643  0BA8  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22644  0BA9  0020               	movlb	0	; select bank0
 22645  0BAA  00B3               	movwf	xtoa@d+1
 22646  0BAB  0021               	movlb	1	; select bank1
 22647  0BAC  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22648  0BAD  0020               	movlb	0	; select bank0
 22649  0BAE  00B4               	movwf	xtoa@d+2
 22650  0BAF  0021               	movlb	1	; select bank1
 22651  0BB0  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22652  0BB1  0020               	movlb	0	; select bank0
 22653  0BB2  00B5               	movwf	xtoa@d+3
 22654  0BB3  0021               	movlb	1	; select bank1
 22655  0BB4  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22656  0BB5  0020               	movlb	0	; select bank0
 22657  0BB6  00B6               	movwf	xtoa@d+4
 22658  0BB7  0021               	movlb	1	; select bank1
 22659  0BB8  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22660  0BB9  0020               	movlb	0	; select bank0
 22661  0BBA  00B7               	movwf	xtoa@d+5
 22662  0BBB  0021               	movlb	1	; select bank1
 22663  0BBC  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22664  0BBD  0020               	movlb	0	; select bank0
 22665  0BBE  00B8               	movwf	xtoa@d+6
 22666  0BBF  0021               	movlb	1	; select bank1
 22667  0BC0  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22668  0BC1  0020               	movlb	0	; select bank0
 22669  0BC2  00B9               	movwf	xtoa@d+7
 22670  0BC3  3078               	movlw	120
 22671  0BC4  00DB               	movwf	??_vfpfcnvrt
 22672  0BC5  085B               	movf	??_vfpfcnvrt,w
 22673  0BC6  00BA               	movwf	xtoa@x
 22674  0BC7  3199  21A7         	fcall	_xtoa
 22675  0BC9  0020               	movlb	0	; select bank0
 22676  0BCA  0831               	movf	?_xtoa+1,w
 22677  0BCB  00D8               	movwf	?_vfpfcnvrt+1
 22678  0BCC  0830               	movf	?_xtoa,w
 22679  0BCD  00D7               	movwf	?_vfpfcnvrt
 22680  0BCE  0008               	return
 22681  0BCF                     l6993:	
 22682                           
 22683                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 22684  0BCF  0859               	movf	vfpfcnvrt@fmt,w
 22685  0BD0  0086               	movwf	6
 22686  0BD1  0187               	clrf	7
 22687  0BD2  3F40               	moviw [0]fsr1
 22688  0BD3  00DB               	movwf	??_vfpfcnvrt
 22689  0BD4  3F41               	moviw [1]fsr1
 22690  0BD5  00DC               	movwf	??_vfpfcnvrt+1
 22691  0BD6  085B               	movf	??_vfpfcnvrt,w
 22692  0BD7  0084               	movwf	4
 22693  0BD8  085C               	movf	??_vfpfcnvrt+1,w
 22694  0BD9  0085               	movwf	5
 22695  0BDA  0012               	moviw fsr0++
 22696  0BDB  3A73               	xorlw	115
 22697  0BDC  1D03               	btfss	3,2
 22698  0BDD  2C08               	goto	l7003
 22699                           
 22700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 22701  0BDE  0859               	movf	vfpfcnvrt@fmt,w
 22702  0BDF  0086               	movwf	6
 22703  0BE0  0187               	clrf	7
 22704  0BE1  3001               	movlw	1
 22705  0BE2  0781               	addwf	1,f
 22706  0BE3  3141               	addfsr 1,1
 22707  0BE4  1803               	skipnc
 22708  0BE5  0A81               	incf	1,f
 22709                           
 22710                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 22711  0BE6  085A               	movf	vfpfcnvrt@ap,w
 22712  0BE7  0086               	movwf	6
 22713  0BE8  0187               	clrf	7
 22714  0BE9  0801               	movf	1,w
 22715  0BEA  0084               	movwf	4
 22716  0BEB  0185               	clrf	5
 22717  0BEC  3002               	movlw	2
 22718  0BED  0781               	addwf	1,f
 22719  0BEE  3F00               	moviw [0]fsr0
 22720  0BEF  0021               	movlb	1	; select bank1
 22721  0BF0  00A0               	movwf	vfpfcnvrt@cp^(0+128)
 22722  0BF1  3F01               	moviw [1]fsr0
 22723  0BF2  00A1               	movwf	(vfpfcnvrt@cp+1)^(0+128)
 22724                           
 22725                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 22726  0BF3  0020               	movlb	0	; select bank0
 22727  0BF4  0858               	movf	vfpfcnvrt@fp+1,w
 22728  0BF5  00A1               	movwf	stoa@fp+1
 22729  0BF6  0857               	movf	vfpfcnvrt@fp,w
 22730  0BF7  00A0               	movwf	stoa@fp
 22731  0BF8  0021               	movlb	1	; select bank1
 22732  0BF9  0821               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 22733  0BFA  0020               	movlb	0	; select bank0
 22734  0BFB  00A3               	movwf	stoa@s+1
 22735  0BFC  0021               	movlb	1	; select bank1
 22736  0BFD  0820               	movf	vfpfcnvrt@cp^(0+128),w
 22737  0BFE  0020               	movlb	0	; select bank0
 22738  0BFF  00A2               	movwf	stoa@s
 22739  0C00  31AC  24C4         	fcall	_stoa
 22740  0C02  0020               	movlb	0	; select bank0
 22741  0C03  0821               	movf	?_stoa+1,w
 22742  0C04  00D8               	movwf	?_vfpfcnvrt+1
 22743  0C05  0820               	movf	?_stoa,w
 22744  0C06  00D7               	movwf	?_vfpfcnvrt
 22745  0C07  0008               	return
 22746  0C08                     l7003:	
 22747                           
 22748                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
 22749  0C08  0859               	movf	vfpfcnvrt@fmt,w
 22750  0C09  0086               	movwf	6
 22751  0C0A  0187               	clrf	7
 22752  0C0B  3F40               	moviw [0]fsr1
 22753  0C0C  00F1               	movwf	strncmp@_l
 22754  0C0D  3F41               	moviw [1]fsr1
 22755  0C0E  00F2               	movwf	strncmp@_l+1
 22756  0C0F  3032               	movlw	low (STR_83| (0+32768))
 22757  0C10  00F3               	movwf	strncmp@_r
 22758  0C11  30BB               	movlw	high (STR_83| (0+32768))
 22759  0C12  00F4               	movwf	strncmp@_r+1
 22760  0C13  3003               	movlw	3
 22761  0C14  00F5               	movwf	strncmp@n
 22762  0C15  3000               	movlw	0
 22763  0C16  00F6               	movwf	strncmp@n+1
 22764  0C17  31B5  25D8  3188   	fcall	_strncmp
 22765  0C1A  0871               	movf	?_strncmp,w
 22766  0C1B  0472               	iorwf	?_strncmp+1,w
 22767  0C1C  1D03               	btfss	3,2
 22768  0C1D  2C66               	goto	l7013
 22769                           
 22770                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
 22771  0C1E  0020               	movlb	0	; select bank0
 22772  0C1F  0859               	movf	vfpfcnvrt@fmt,w
 22773  0C20  0086               	movwf	6
 22774  0C21  0187               	clrf	7
 22775  0C22  3003               	movlw	3
 22776  0C23  0781               	addwf	1,f
 22777  0C24  3141               	addfsr 1,1
 22778  0C25  1803               	skipnc
 22779  0C26  0A81               	incf	1,f
 22780                           
 22781                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 22782  0C27  085A               	movf	vfpfcnvrt@ap,w
 22783  0C28  0086               	movwf	6
 22784  0C29  0187               	clrf	7
 22785  0C2A  0801               	movf	1,w
 22786  0C2B  0084               	movwf	4
 22787  0C2C  0185               	clrf	5
 22788  0C2D  3002               	movlw	2
 22789  0C2E  0781               	addwf	1,f
 22790  0C2F  0800               	movf	0,w
 22791  0C30  0021               	movlb	1	; select bank1
 22792  0C31  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22793  0C32  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 22794  0C33  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22795  0C34  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22796  0C35  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22797  0C36  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22798  0C37  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22799  0C38  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22800                           
 22801                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
 22802  0C39  0020               	movlb	0	; select bank0
 22803  0C3A  0858               	movf	vfpfcnvrt@fp+1,w
 22804  0C3B  00B1               	movwf	utoa@fp+1
 22805  0C3C  0857               	movf	vfpfcnvrt@fp,w
 22806  0C3D  00B0               	movwf	utoa@fp
 22807  0C3E  0021               	movlb	1	; select bank1
 22808  0C3F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22809  0C40  0020               	movlb	0	; select bank0
 22810  0C41  00B2               	movwf	utoa@d
 22811  0C42  0021               	movlb	1	; select bank1
 22812  0C43  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22813  0C44  0020               	movlb	0	; select bank0
 22814  0C45  00B3               	movwf	utoa@d+1
 22815  0C46  0021               	movlb	1	; select bank1
 22816  0C47  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22817  0C48  0020               	movlb	0	; select bank0
 22818  0C49  00B4               	movwf	utoa@d+2
 22819  0C4A  0021               	movlb	1	; select bank1
 22820  0C4B  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22821  0C4C  0020               	movlb	0	; select bank0
 22822  0C4D  00B5               	movwf	utoa@d+3
 22823  0C4E  0021               	movlb	1	; select bank1
 22824  0C4F  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22825  0C50  0020               	movlb	0	; select bank0
 22826  0C51  00B6               	movwf	utoa@d+4
 22827  0C52  0021               	movlb	1	; select bank1
 22828  0C53  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22829  0C54  0020               	movlb	0	; select bank0
 22830  0C55  00B7               	movwf	utoa@d+5
 22831  0C56  0021               	movlb	1	; select bank1
 22832  0C57  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22833  0C58  0020               	movlb	0	; select bank0
 22834  0C59  00B8               	movwf	utoa@d+6
 22835  0C5A  0021               	movlb	1	; select bank1
 22836  0C5B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22837  0C5C  0020               	movlb	0	; select bank0
 22838  0C5D  00B9               	movwf	utoa@d+7
 22839  0C5E  31A2  2214         	fcall	_utoa
 22840  0C60  0020               	movlb	0	; select bank0
 22841  0C61  0831               	movf	?_utoa+1,w
 22842  0C62  00D8               	movwf	?_vfpfcnvrt+1
 22843  0C63  0830               	movf	?_utoa,w
 22844  0C64  00D7               	movwf	?_vfpfcnvrt
 22845  0C65  0008               	return
 22846  0C66                     l7013:	
 22847                           
 22848                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
 22849  0C66  0020               	movlb	0	; select bank0
 22850  0C67  0859               	movf	vfpfcnvrt@fmt,w
 22851  0C68  0086               	movwf	6
 22852  0C69  0187               	clrf	7
 22853  0C6A  3F40               	moviw [0]fsr1
 22854  0C6B  00F1               	movwf	strncmp@_l
 22855  0C6C  3F41               	moviw [1]fsr1
 22856  0C6D  00F2               	movwf	strncmp@_l+1
 22857  0C6E  3033               	movlw	low ((STR_83+1)| (0+32768))
 22858  0C6F  00F3               	movwf	strncmp@_r
 22859  0C70  30BB               	movlw	high ((STR_83+1)| (0+32768))
 22860  0C71  00F4               	movwf	strncmp@_r+1
 22861  0C72  3002               	movlw	2
 22862  0C73  00F5               	movwf	strncmp@n
 22863  0C74  3000               	movlw	0
 22864  0C75  00F6               	movwf	strncmp@n+1
 22865  0C76  31B5  25D8  3188   	fcall	_strncmp
 22866  0C79  0871               	movf	?_strncmp,w
 22867  0C7A  0472               	iorwf	?_strncmp+1,w
 22868  0C7B  1D03               	btfss	3,2
 22869  0C7C  2CC6               	goto	l7023
 22870                           
 22871                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
 22872  0C7D  0020               	movlb	0	; select bank0
 22873  0C7E  0859               	movf	vfpfcnvrt@fmt,w
 22874  0C7F  0086               	movwf	6
 22875  0C80  0187               	clrf	7
 22876  0C81  3002               	movlw	2
 22877  0C82  0781               	addwf	1,f
 22878  0C83  3141               	addfsr 1,1
 22879  0C84  1803               	skipnc
 22880  0C85  0A81               	incf	1,f
 22881                           
 22882                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 22883  0C86  085A               	movf	vfpfcnvrt@ap,w
 22884  0C87  0086               	movwf	6
 22885  0C88  0187               	clrf	7
 22886  0C89  0801               	movf	1,w
 22887  0C8A  0084               	movwf	4
 22888  0C8B  0185               	clrf	5
 22889  0C8C  3002               	movlw	2
 22890  0C8D  0781               	addwf	1,f
 22891  0C8E  3F00               	moviw [0]fsr0
 22892  0C8F  0021               	movlb	1	; select bank1
 22893  0C90  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22894  0C91  3F01               	moviw [1]fsr0
 22895  0C92  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22896  0C93  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22897  0C94  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22898  0C95  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22899  0C96  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22900  0C97  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22901  0C98  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22902                           
 22903                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1177:      
      +                                 return utoa(fp, llu);
 22904  0C99  0020               	movlb	0	; select bank0
 22905  0C9A  0858               	movf	vfpfcnvrt@fp+1,w
 22906  0C9B  00B1               	movwf	utoa@fp+1
 22907  0C9C  0857               	movf	vfpfcnvrt@fp,w
 22908  0C9D  00B0               	movwf	utoa@fp
 22909  0C9E  0021               	movlb	1	; select bank1
 22910  0C9F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22911  0CA0  0020               	movlb	0	; select bank0
 22912  0CA1  00B2               	movwf	utoa@d
 22913  0CA2  0021               	movlb	1	; select bank1
 22914  0CA3  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22915  0CA4  0020               	movlb	0	; select bank0
 22916  0CA5  00B3               	movwf	utoa@d+1
 22917  0CA6  0021               	movlb	1	; select bank1
 22918  0CA7  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22919  0CA8  0020               	movlb	0	; select bank0
 22920  0CA9  00B4               	movwf	utoa@d+2
 22921  0CAA  0021               	movlb	1	; select bank1
 22922  0CAB  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22923  0CAC  0020               	movlb	0	; select bank0
 22924  0CAD  00B5               	movwf	utoa@d+3
 22925  0CAE  0021               	movlb	1	; select bank1
 22926  0CAF  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22927  0CB0  0020               	movlb	0	; select bank0
 22928  0CB1  00B6               	movwf	utoa@d+4
 22929  0CB2  0021               	movlb	1	; select bank1
 22930  0CB3  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22931  0CB4  0020               	movlb	0	; select bank0
 22932  0CB5  00B7               	movwf	utoa@d+5
 22933  0CB6  0021               	movlb	1	; select bank1
 22934  0CB7  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22935  0CB8  0020               	movlb	0	; select bank0
 22936  0CB9  00B8               	movwf	utoa@d+6
 22937  0CBA  0021               	movlb	1	; select bank1
 22938  0CBB  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22939  0CBC  0020               	movlb	0	; select bank0
 22940  0CBD  00B9               	movwf	utoa@d+7
 22941  0CBE  31A2  2214         	fcall	_utoa
 22942  0CC0  0020               	movlb	0	; select bank0
 22943  0CC1  0831               	movf	?_utoa+1,w
 22944  0CC2  00D8               	movwf	?_vfpfcnvrt+1
 22945  0CC3  0830               	movf	?_utoa,w
 22946  0CC4  00D7               	movwf	?_vfpfcnvrt
 22947  0CC5  0008               	return
 22948  0CC6                     l7023:	
 22949                           
 22950                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 22951  0CC6  0020               	movlb	0	; select bank0
 22952  0CC7  0859               	movf	vfpfcnvrt@fmt,w
 22953  0CC8  0086               	movwf	6
 22954  0CC9  0187               	clrf	7
 22955  0CCA  3F40               	moviw [0]fsr1
 22956  0CCB  00DB               	movwf	??_vfpfcnvrt
 22957  0CCC  3F41               	moviw [1]fsr1
 22958  0CCD  00DC               	movwf	??_vfpfcnvrt+1
 22959  0CCE  085B               	movf	??_vfpfcnvrt,w
 22960  0CCF  0084               	movwf	4
 22961  0CD0  085C               	movf	??_vfpfcnvrt+1,w
 22962  0CD1  0085               	movwf	5
 22963  0CD2  0012               	moviw fsr0++
 22964  0CD3  3A75               	xorlw	117
 22965  0CD4  1D03               	btfss	3,2
 22966  0CD5  2D1E               	goto	l7033
 22967                           
 22968                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 22969  0CD6  0859               	movf	vfpfcnvrt@fmt,w
 22970  0CD7  0086               	movwf	6
 22971  0CD8  0187               	clrf	7
 22972  0CD9  3001               	movlw	1
 22973  0CDA  0781               	addwf	1,f
 22974  0CDB  3141               	addfsr 1,1
 22975  0CDC  1803               	skipnc
 22976  0CDD  0A81               	incf	1,f
 22977                           
 22978                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 22979  0CDE  085A               	movf	vfpfcnvrt@ap,w
 22980  0CDF  0086               	movwf	6
 22981  0CE0  0187               	clrf	7
 22982  0CE1  0801               	movf	1,w
 22983  0CE2  0084               	movwf	4
 22984  0CE3  0185               	clrf	5
 22985  0CE4  3002               	movlw	2
 22986  0CE5  0781               	addwf	1,f
 22987  0CE6  3F00               	moviw [0]fsr0
 22988  0CE7  0021               	movlb	1	; select bank1
 22989  0CE8  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22990  0CE9  3F01               	moviw [1]fsr0
 22991  0CEA  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22992  0CEB  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22993  0CEC  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22994  0CED  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22995  0CEE  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22996  0CEF  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22997  0CF0  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22998                           
 22999                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 23000  0CF1  0020               	movlb	0	; select bank0
 23001  0CF2  0858               	movf	vfpfcnvrt@fp+1,w
 23002  0CF3  00B1               	movwf	utoa@fp+1
 23003  0CF4  0857               	movf	vfpfcnvrt@fp,w
 23004  0CF5  00B0               	movwf	utoa@fp
 23005  0CF6  0021               	movlb	1	; select bank1
 23006  0CF7  0833               	movf	vfpfcnvrt@llu^(0+128),w
 23007  0CF8  0020               	movlb	0	; select bank0
 23008  0CF9  00B2               	movwf	utoa@d
 23009  0CFA  0021               	movlb	1	; select bank1
 23010  0CFB  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 23011  0CFC  0020               	movlb	0	; select bank0
 23012  0CFD  00B3               	movwf	utoa@d+1
 23013  0CFE  0021               	movlb	1	; select bank1
 23014  0CFF  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 23015  0D00  0020               	movlb	0	; select bank0
 23016  0D01  00B4               	movwf	utoa@d+2
 23017  0D02  0021               	movlb	1	; select bank1
 23018  0D03  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 23019  0D04  0020               	movlb	0	; select bank0
 23020  0D05  00B5               	movwf	utoa@d+3
 23021  0D06  0021               	movlb	1	; select bank1
 23022  0D07  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 23023  0D08  0020               	movlb	0	; select bank0
 23024  0D09  00B6               	movwf	utoa@d+4
 23025  0D0A  0021               	movlb	1	; select bank1
 23026  0D0B  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 23027  0D0C  0020               	movlb	0	; select bank0
 23028  0D0D  00B7               	movwf	utoa@d+5
 23029  0D0E  0021               	movlb	1	; select bank1
 23030  0D0F  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 23031  0D10  0020               	movlb	0	; select bank0
 23032  0D11  00B8               	movwf	utoa@d+6
 23033  0D12  0021               	movlb	1	; select bank1
 23034  0D13  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 23035  0D14  0020               	movlb	0	; select bank0
 23036  0D15  00B9               	movwf	utoa@d+7
 23037  0D16  31A2  2214         	fcall	_utoa
 23038  0D18  0020               	movlb	0	; select bank0
 23039  0D19  0831               	movf	?_utoa+1,w
 23040  0D1A  00D8               	movwf	?_vfpfcnvrt+1
 23041  0D1B  0830               	movf	?_utoa,w
 23042  0D1C  00D7               	movwf	?_vfpfcnvrt
 23043  0D1D  0008               	return
 23044  0D1E                     l7033:	
 23045                           
 23046                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
 23047  0D1E  0859               	movf	vfpfcnvrt@fmt,w
 23048  0D1F  0086               	movwf	6
 23049  0D20  0187               	clrf	7
 23050  0D21  3F40               	moviw [0]fsr1
 23051  0D22  00F1               	movwf	strncmp@_l
 23052  0D23  3F41               	moviw [1]fsr1
 23053  0D24  00F2               	movwf	strncmp@_l+1
 23054  0D25  3049               	movlw	low (STR_93| (0+32768))
 23055  0D26  00F3               	movwf	strncmp@_r
 23056  0D27  30BB               	movlw	high (STR_93| (0+32768))
 23057  0D28  00F4               	movwf	strncmp@_r+1
 23058  0D29  3002               	movlw	2
 23059  0D2A  00F5               	movwf	strncmp@n
 23060  0D2B  3000               	movlw	0
 23061  0D2C  00F6               	movwf	strncmp@n+1
 23062  0D2D  31B5  25D8  3188   	fcall	_strncmp
 23063  0D30  0871               	movf	?_strncmp,w
 23064  0D31  0472               	iorwf	?_strncmp+1,w
 23065  0D32  1D03               	btfss	3,2
 23066  0D33  2D7D               	goto	l7043
 23067                           
 23068                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
 23069  0D34  0020               	movlb	0	; select bank0
 23070  0D35  0859               	movf	vfpfcnvrt@fmt,w
 23071  0D36  0086               	movwf	6
 23072  0D37  0187               	clrf	7
 23073  0D38  3002               	movlw	2
 23074  0D39  0781               	addwf	1,f
 23075  0D3A  3141               	addfsr 1,1
 23076  0D3B  1803               	skipnc
 23077  0D3C  0A81               	incf	1,f
 23078                           
 23079                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 23080  0D3D  085A               	movf	vfpfcnvrt@ap,w
 23081  0D3E  0086               	movwf	6
 23082  0D3F  0187               	clrf	7
 23083  0D40  0801               	movf	1,w
 23084  0D41  0084               	movwf	4
 23085  0D42  0185               	clrf	5
 23086  0D43  3002               	movlw	2
 23087  0D44  0781               	addwf	1,f
 23088  0D45  3F00               	moviw [0]fsr0
 23089  0D46  0021               	movlb	1	; select bank1
 23090  0D47  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 23091  0D48  3F01               	moviw [1]fsr0
 23092  0D49  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 23093  0D4A  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 23094  0D4B  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 23095  0D4C  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 23096  0D4D  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 23097  0D4E  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 23098  0D4F  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 23099                           
 23100                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1241:      
      +                                 return utoa(fp, llu);
 23101  0D50  0020               	movlb	0	; select bank0
 23102  0D51  0858               	movf	vfpfcnvrt@fp+1,w
 23103  0D52  00B1               	movwf	utoa@fp+1
 23104  0D53  0857               	movf	vfpfcnvrt@fp,w
 23105  0D54  00B0               	movwf	utoa@fp
 23106  0D55  0021               	movlb	1	; select bank1
 23107  0D56  0833               	movf	vfpfcnvrt@llu^(0+128),w
 23108  0D57  0020               	movlb	0	; select bank0
 23109  0D58  00B2               	movwf	utoa@d
 23110  0D59  0021               	movlb	1	; select bank1
 23111  0D5A  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 23112  0D5B  0020               	movlb	0	; select bank0
 23113  0D5C  00B3               	movwf	utoa@d+1
 23114  0D5D  0021               	movlb	1	; select bank1
 23115  0D5E  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 23116  0D5F  0020               	movlb	0	; select bank0
 23117  0D60  00B4               	movwf	utoa@d+2
 23118  0D61  0021               	movlb	1	; select bank1
 23119  0D62  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 23120  0D63  0020               	movlb	0	; select bank0
 23121  0D64  00B5               	movwf	utoa@d+3
 23122  0D65  0021               	movlb	1	; select bank1
 23123  0D66  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 23124  0D67  0020               	movlb	0	; select bank0
 23125  0D68  00B6               	movwf	utoa@d+4
 23126  0D69  0021               	movlb	1	; select bank1
 23127  0D6A  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 23128  0D6B  0020               	movlb	0	; select bank0
 23129  0D6C  00B7               	movwf	utoa@d+5
 23130  0D6D  0021               	movlb	1	; select bank1
 23131  0D6E  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 23132  0D6F  0020               	movlb	0	; select bank0
 23133  0D70  00B8               	movwf	utoa@d+6
 23134  0D71  0021               	movlb	1	; select bank1
 23135  0D72  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 23136  0D73  0020               	movlb	0	; select bank0
 23137  0D74  00B9               	movwf	utoa@d+7
 23138  0D75  31A2  2214         	fcall	_utoa
 23139  0D77  0020               	movlb	0	; select bank0
 23140  0D78  0831               	movf	?_utoa+1,w
 23141  0D79  00D8               	movwf	?_vfpfcnvrt+1
 23142  0D7A  0830               	movf	?_utoa,w
 23143  0D7B  00D7               	movwf	?_vfpfcnvrt
 23144  0D7C  0008               	return
 23145  0D7D                     l7043:	
 23146                           
 23147                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
 23148  0D7D  0020               	movlb	0	; select bank0
 23149  0D7E  0859               	movf	vfpfcnvrt@fmt,w
 23150  0D7F  0086               	movwf	6
 23151  0D80  0187               	clrf	7
 23152  0D81  3F40               	moviw [0]fsr1
 23153  0D82  00F1               	movwf	strncmp@_l
 23154  0D83  3F41               	moviw [1]fsr1
 23155  0D84  00F2               	movwf	strncmp@_l+1
 23156  0D85  3036               	movlw	low (STR_98| (0+32768))
 23157  0D86  00F3               	movwf	strncmp@_r
 23158  0D87  30BB               	movlw	high (STR_98| (0+32768))
 23159  0D88  00F4               	movwf	strncmp@_r+1
 23160  0D89  3003               	movlw	3
 23161  0D8A  00F5               	movwf	strncmp@n
 23162  0D8B  3000               	movlw	0
 23163  0D8C  00F6               	movwf	strncmp@n+1
 23164  0D8D  31B5  25D8  3188   	fcall	_strncmp
 23165  0D90  0871               	movf	?_strncmp,w
 23166  0D91  0472               	iorwf	?_strncmp+1,w
 23167  0D92  1903               	btfsc	3,2
 23168  0D93  2DAB               	goto	l7047
 23169  0D94  0020               	movlb	0	; select bank0
 23170  0D95  0859               	movf	vfpfcnvrt@fmt,w
 23171  0D96  0086               	movwf	6
 23172  0D97  0187               	clrf	7
 23173  0D98  3F40               	moviw [0]fsr1
 23174  0D99  00F1               	movwf	strncmp@_l
 23175  0D9A  3F41               	moviw [1]fsr1
 23176  0D9B  00F2               	movwf	strncmp@_l+1
 23177  0D9C  301E               	movlw	low (STR_102| (0+32768))
 23178  0D9D  00F3               	movwf	strncmp@_r
 23179  0D9E  30BB               	movlw	high (STR_102| (0+32768))
 23180  0D9F  00F4               	movwf	strncmp@_r+1
 23181  0DA0  3003               	movlw	3
 23182  0DA1  00F5               	movwf	strncmp@n
 23183  0DA2  3000               	movlw	0
 23184  0DA3  00F6               	movwf	strncmp@n+1
 23185  0DA4  31B5  25D8  3188   	fcall	_strncmp
 23186  0DA7  0871               	movf	?_strncmp,w
 23187  0DA8  0472               	iorwf	?_strncmp+1,w
 23188  0DA9  1D03               	btfss	3,2
 23189  0DAA  2E0D               	goto	l7057
 23190  0DAB                     l7047:	
 23191                           
 23192                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
 23193  0DAB  0020               	movlb	0	; select bank0
 23194  0DAC  0859               	movf	vfpfcnvrt@fmt,w
 23195  0DAD  0086               	movwf	6
 23196  0DAE  0187               	clrf	7
 23197  0DAF  3F40               	moviw [0]fsr1
 23198  0DB0  00DB               	movwf	??_vfpfcnvrt
 23199  0DB1  3F41               	moviw [1]fsr1
 23200  0DB2  00DC               	movwf	??_vfpfcnvrt+1
 23201  0DB3  3002               	movlw	2
 23202  0DB4  075B               	addwf	??_vfpfcnvrt,w
 23203  0DB5  0084               	movwf	4
 23204  0DB6  085C               	movf	??_vfpfcnvrt+1,w
 23205  0DB7  1803               	skipnc
 23206  0DB8  0A5C               	incf	??_vfpfcnvrt+1,w
 23207  0DB9  0085               	movwf	5
 23208  0DBA  0800               	movf	0,w	;code access
 23209  0DBB  00DD               	movwf	??_vfpfcnvrt+2
 23210  0DBC  085D               	movf	??_vfpfcnvrt+2,w
 23211  0DBD  0021               	movlb	1	; select bank1
 23212  0DBE  00B2               	movwf	vfpfcnvrt@c^(0+128)
 23213                           
 23214                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
 23215  0DBF  0020               	movlb	0	; select bank0
 23216  0DC0  0859               	movf	vfpfcnvrt@fmt,w
 23217  0DC1  0086               	movwf	6
 23218  0DC2  0187               	clrf	7
 23219  0DC3  3003               	movlw	3
 23220  0DC4  0781               	addwf	1,f
 23221  0DC5  3141               	addfsr 1,1
 23222  0DC6  1803               	skipnc
 23223  0DC7  0A81               	incf	1,f
 23224                           
 23225                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 23226  0DC8  085A               	movf	vfpfcnvrt@ap,w
 23227  0DC9  0086               	movwf	6
 23228  0DCA  0187               	clrf	7
 23229  0DCB  0801               	movf	1,w
 23230  0DCC  0084               	movwf	4
 23231  0DCD  0185               	clrf	5
 23232  0DCE  3002               	movlw	2
 23233  0DCF  0781               	addwf	1,f
 23234  0DD0  0800               	movf	0,w
 23235  0DD1  0021               	movlb	1	; select bank1
 23236  0DD2  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 23237  0DD3  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 23238  0DD4  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 23239  0DD5  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 23240  0DD6  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 23241  0DD7  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 23242  0DD8  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 23243  0DD9  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 23244                           
 23245                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
 23246  0DDA  0020               	movlb	0	; select bank0
 23247  0DDB  0858               	movf	vfpfcnvrt@fp+1,w
 23248  0DDC  00B1               	movwf	xtoa@fp+1
 23249  0DDD  0857               	movf	vfpfcnvrt@fp,w
 23250  0DDE  00B0               	movwf	xtoa@fp
 23251  0DDF  0021               	movlb	1	; select bank1
 23252  0DE0  0833               	movf	vfpfcnvrt@llu^(0+128),w
 23253  0DE1  0020               	movlb	0	; select bank0
 23254  0DE2  00B2               	movwf	xtoa@d
 23255  0DE3  0021               	movlb	1	; select bank1
 23256  0DE4  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 23257  0DE5  0020               	movlb	0	; select bank0
 23258  0DE6  00B3               	movwf	xtoa@d+1
 23259  0DE7  0021               	movlb	1	; select bank1
 23260  0DE8  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 23261  0DE9  0020               	movlb	0	; select bank0
 23262  0DEA  00B4               	movwf	xtoa@d+2
 23263  0DEB  0021               	movlb	1	; select bank1
 23264  0DEC  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 23265  0DED  0020               	movlb	0	; select bank0
 23266  0DEE  00B5               	movwf	xtoa@d+3
 23267  0DEF  0021               	movlb	1	; select bank1
 23268  0DF0  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 23269  0DF1  0020               	movlb	0	; select bank0
 23270  0DF2  00B6               	movwf	xtoa@d+4
 23271  0DF3  0021               	movlb	1	; select bank1
 23272  0DF4  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 23273  0DF5  0020               	movlb	0	; select bank0
 23274  0DF6  00B7               	movwf	xtoa@d+5
 23275  0DF7  0021               	movlb	1	; select bank1
 23276  0DF8  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 23277  0DF9  0020               	movlb	0	; select bank0
 23278  0DFA  00B8               	movwf	xtoa@d+6
 23279  0DFB  0021               	movlb	1	; select bank1
 23280  0DFC  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 23281  0DFD  0020               	movlb	0	; select bank0
 23282  0DFE  00B9               	movwf	xtoa@d+7
 23283  0DFF  0021               	movlb	1	; select bank1
 23284  0E00  0832               	movf	vfpfcnvrt@c^(0+128),w
 23285  0E01  0020               	movlb	0	; select bank0
 23286  0E02  00DB               	movwf	??_vfpfcnvrt
 23287  0E03  085B               	movf	??_vfpfcnvrt,w
 23288  0E04  00BA               	movwf	xtoa@x
 23289  0E05  3199  21A7         	fcall	_xtoa
 23290  0E07  0020               	movlb	0	; select bank0
 23291  0E08  0831               	movf	?_xtoa+1,w
 23292  0E09  00D8               	movwf	?_vfpfcnvrt+1
 23293  0E0A  0830               	movf	?_xtoa,w
 23294  0E0B  00D7               	movwf	?_vfpfcnvrt
 23295  0E0C  0008               	return
 23296  0E0D                     l7057:	
 23297                           
 23298                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
 23299  0E0D  0020               	movlb	0	; select bank0
 23300  0E0E  0859               	movf	vfpfcnvrt@fmt,w
 23301  0E0F  0086               	movwf	6
 23302  0E10  0187               	clrf	7
 23303  0E11  3F40               	moviw [0]fsr1
 23304  0E12  00F1               	movwf	strncmp@_l
 23305  0E13  3F41               	moviw [1]fsr1
 23306  0E14  00F2               	movwf	strncmp@_l+1
 23307  0E15  3037               	movlw	low ((STR_98+1)| (0+32768))
 23308  0E16  00F3               	movwf	strncmp@_r
 23309  0E17  30BB               	movlw	high ((STR_98+1)| (0+32768))
 23310  0E18  00F4               	movwf	strncmp@_r+1
 23311  0E19  3002               	movlw	2
 23312  0E1A  00F5               	movwf	strncmp@n
 23313  0E1B  3000               	movlw	0
 23314  0E1C  00F6               	movwf	strncmp@n+1
 23315  0E1D  31B5  25D8  3188   	fcall	_strncmp
 23316  0E20  0871               	movf	?_strncmp,w
 23317  0E21  0472               	iorwf	?_strncmp+1,w
 23318  0E22  1903               	btfsc	3,2
 23319  0E23  2E3B               	goto	l7061
 23320  0E24  0020               	movlb	0	; select bank0
 23321  0E25  0859               	movf	vfpfcnvrt@fmt,w
 23322  0E26  0086               	movwf	6
 23323  0E27  0187               	clrf	7
 23324  0E28  3F40               	moviw [0]fsr1
 23325  0E29  00F1               	movwf	strncmp@_l
 23326  0E2A  3F41               	moviw [1]fsr1
 23327  0E2B  00F2               	movwf	strncmp@_l+1
 23328  0E2C  301F               	movlw	low ((STR_102+1)| (0+32768))
 23329  0E2D  00F3               	movwf	strncmp@_r
 23330  0E2E  30BB               	movlw	high ((STR_102+1)| (0+32768))
 23331  0E2F  00F4               	movwf	strncmp@_r+1
 23332  0E30  3002               	movlw	2
 23333  0E31  00F5               	movwf	strncmp@n
 23334  0E32  3000               	movlw	0
 23335  0E33  00F6               	movwf	strncmp@n+1
 23336  0E34  31B5  25D8  3188   	fcall	_strncmp
 23337  0E37  0871               	movf	?_strncmp,w
 23338  0E38  0472               	iorwf	?_strncmp+1,w
 23339  0E39  1D03               	btfss	3,2
 23340  0E3A  2E9E               	goto	l7071
 23341  0E3B                     l7061:	
 23342                           
 23343                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
 23344  0E3B  0020               	movlb	0	; select bank0
 23345  0E3C  0859               	movf	vfpfcnvrt@fmt,w
 23346  0E3D  0086               	movwf	6
 23347  0E3E  0187               	clrf	7
 23348  0E3F  3F40               	moviw [0]fsr1
 23349  0E40  00DB               	movwf	??_vfpfcnvrt
 23350  0E41  3F41               	moviw [1]fsr1
 23351  0E42  00DC               	movwf	??_vfpfcnvrt+1
 23352  0E43  3001               	movlw	1
 23353  0E44  075B               	addwf	??_vfpfcnvrt,w
 23354  0E45  0084               	movwf	4
 23355  0E46  085C               	movf	??_vfpfcnvrt+1,w
 23356  0E47  1803               	skipnc
 23357  0E48  0A5C               	incf	??_vfpfcnvrt+1,w
 23358  0E49  0085               	movwf	5
 23359  0E4A  0800               	movf	0,w	;code access
 23360  0E4B  00DD               	movwf	??_vfpfcnvrt+2
 23361  0E4C  085D               	movf	??_vfpfcnvrt+2,w
 23362  0E4D  0021               	movlb	1	; select bank1
 23363  0E4E  00B2               	movwf	vfpfcnvrt@c^(0+128)
 23364                           
 23365                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
 23366  0E4F  0020               	movlb	0	; select bank0
 23367  0E50  0859               	movf	vfpfcnvrt@fmt,w
 23368  0E51  0086               	movwf	6
 23369  0E52  0187               	clrf	7
 23370  0E53  3002               	movlw	2
 23371  0E54  0781               	addwf	1,f
 23372  0E55  3141               	addfsr 1,1
 23373  0E56  1803               	skipnc
 23374  0E57  0A81               	incf	1,f
 23375                           
 23376                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 23377  0E58  085A               	movf	vfpfcnvrt@ap,w
 23378  0E59  0086               	movwf	6
 23379  0E5A  0187               	clrf	7
 23380  0E5B  0801               	movf	1,w
 23381  0E5C  0084               	movwf	4
 23382  0E5D  0185               	clrf	5
 23383  0E5E  3002               	movlw	2
 23384  0E5F  0781               	addwf	1,f
 23385  0E60  3F00               	moviw [0]fsr0
 23386  0E61  0021               	movlb	1	; select bank1
 23387  0E62  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 23388  0E63  3F01               	moviw [1]fsr0
 23389  0E64  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 23390  0E65  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 23391  0E66  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 23392  0E67  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 23393  0E68  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 23394  0E69  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 23395  0E6A  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 23396                           
 23397                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1269:      
      +                                 return xtoa(fp, llu, c);
 23398  0E6B  0020               	movlb	0	; select bank0
 23399  0E6C  0858               	movf	vfpfcnvrt@fp+1,w
 23400  0E6D  00B1               	movwf	xtoa@fp+1
 23401  0E6E  0857               	movf	vfpfcnvrt@fp,w
 23402  0E6F  00B0               	movwf	xtoa@fp
 23403  0E70  0021               	movlb	1	; select bank1
 23404  0E71  0833               	movf	vfpfcnvrt@llu^(0+128),w
 23405  0E72  0020               	movlb	0	; select bank0
 23406  0E73  00B2               	movwf	xtoa@d
 23407  0E74  0021               	movlb	1	; select bank1
 23408  0E75  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 23409  0E76  0020               	movlb	0	; select bank0
 23410  0E77  00B3               	movwf	xtoa@d+1
 23411  0E78  0021               	movlb	1	; select bank1
 23412  0E79  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 23413  0E7A  0020               	movlb	0	; select bank0
 23414  0E7B  00B4               	movwf	xtoa@d+2
 23415  0E7C  0021               	movlb	1	; select bank1
 23416  0E7D  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 23417  0E7E  0020               	movlb	0	; select bank0
 23418  0E7F  00B5               	movwf	xtoa@d+3
 23419  0E80  0021               	movlb	1	; select bank1
 23420  0E81  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 23421  0E82  0020               	movlb	0	; select bank0
 23422  0E83  00B6               	movwf	xtoa@d+4
 23423  0E84  0021               	movlb	1	; select bank1
 23424  0E85  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 23425  0E86  0020               	movlb	0	; select bank0
 23426  0E87  00B7               	movwf	xtoa@d+5
 23427  0E88  0021               	movlb	1	; select bank1
 23428  0E89  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 23429  0E8A  0020               	movlb	0	; select bank0
 23430  0E8B  00B8               	movwf	xtoa@d+6
 23431  0E8C  0021               	movlb	1	; select bank1
 23432  0E8D  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 23433  0E8E  0020               	movlb	0	; select bank0
 23434  0E8F  00B9               	movwf	xtoa@d+7
 23435  0E90  0021               	movlb	1	; select bank1
 23436  0E91  0832               	movf	vfpfcnvrt@c^(0+128),w
 23437  0E92  0020               	movlb	0	; select bank0
 23438  0E93  00DB               	movwf	??_vfpfcnvrt
 23439  0E94  085B               	movf	??_vfpfcnvrt,w
 23440  0E95  00BA               	movwf	xtoa@x
 23441  0E96  3199  21A7         	fcall	_xtoa
 23442  0E98  0020               	movlb	0	; select bank0
 23443  0E99  0831               	movf	?_xtoa+1,w
 23444  0E9A  00D8               	movwf	?_vfpfcnvrt+1
 23445  0E9B  0830               	movf	?_xtoa,w
 23446  0E9C  00D7               	movwf	?_vfpfcnvrt
 23447  0E9D  0008               	return
 23448  0E9E                     l7071:	
 23449                           
 23450                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 23451  0E9E  0020               	movlb	0	; select bank0
 23452  0E9F  0859               	movf	vfpfcnvrt@fmt,w
 23453  0EA0  0086               	movwf	6
 23454  0EA1  0187               	clrf	7
 23455  0EA2  3F40               	moviw [0]fsr1
 23456  0EA3  00DB               	movwf	??_vfpfcnvrt
 23457  0EA4  3F41               	moviw [1]fsr1
 23458  0EA5  00DC               	movwf	??_vfpfcnvrt+1
 23459  0EA6  085B               	movf	??_vfpfcnvrt,w
 23460  0EA7  0084               	movwf	4
 23461  0EA8  085C               	movf	??_vfpfcnvrt+1,w
 23462  0EA9  0085               	movwf	5
 23463  0EAA  0012               	moviw fsr0++
 23464  0EAB  3A78               	xorlw	120
 23465  0EAC  1903               	btfsc	3,2
 23466  0EAD  2EBD               	goto	l7075
 23467  0EAE  0859               	movf	vfpfcnvrt@fmt,w
 23468  0EAF  0086               	movwf	6
 23469  0EB0  0187               	clrf	7
 23470  0EB1  3F40               	moviw [0]fsr1
 23471  0EB2  00DB               	movwf	??_vfpfcnvrt
 23472  0EB3  3F41               	moviw [1]fsr1
 23473  0EB4  00DC               	movwf	??_vfpfcnvrt+1
 23474  0EB5  085B               	movf	??_vfpfcnvrt,w
 23475  0EB6  0084               	movwf	4
 23476  0EB7  085C               	movf	??_vfpfcnvrt+1,w
 23477  0EB8  0085               	movwf	5
 23478  0EB9  0012               	moviw fsr0++
 23479  0EBA  3A58               	xorlw	88
 23480  0EBB  1D03               	btfss	3,2
 23481  0EBC  2F1C               	goto	l7085
 23482  0EBD                     l7075:	
 23483                           
 23484                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 23485  0EBD  0859               	movf	vfpfcnvrt@fmt,w
 23486  0EBE  0086               	movwf	6
 23487  0EBF  0187               	clrf	7
 23488  0EC0  3F40               	moviw [0]fsr1
 23489  0EC1  00DB               	movwf	??_vfpfcnvrt
 23490  0EC2  3F41               	moviw [1]fsr1
 23491  0EC3  00DC               	movwf	??_vfpfcnvrt+1
 23492  0EC4  085B               	movf	??_vfpfcnvrt,w
 23493  0EC5  0084               	movwf	4
 23494  0EC6  085C               	movf	??_vfpfcnvrt+1,w
 23495  0EC7  0085               	movwf	5
 23496  0EC8  0800               	movf	0,w	;code access
 23497  0EC9  00DD               	movwf	??_vfpfcnvrt+2
 23498  0ECA  085D               	movf	??_vfpfcnvrt+2,w
 23499  0ECB  0021               	movlb	1	; select bank1
 23500  0ECC  00B2               	movwf	vfpfcnvrt@c^(0+128)
 23501                           
 23502                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 23503  0ECD  0020               	movlb	0	; select bank0
 23504  0ECE  0859               	movf	vfpfcnvrt@fmt,w
 23505  0ECF  0086               	movwf	6
 23506  0ED0  0187               	clrf	7
 23507  0ED1  3001               	movlw	1
 23508  0ED2  0781               	addwf	1,f
 23509  0ED3  3141               	addfsr 1,1
 23510  0ED4  1803               	skipnc
 23511  0ED5  0A81               	incf	1,f
 23512                           
 23513                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 23514  0ED6  085A               	movf	vfpfcnvrt@ap,w
 23515  0ED7  0086               	movwf	6
 23516  0ED8  0187               	clrf	7
 23517  0ED9  0801               	movf	1,w
 23518  0EDA  0084               	movwf	4
 23519  0EDB  0185               	clrf	5
 23520  0EDC  3002               	movlw	2
 23521  0EDD  0781               	addwf	1,f
 23522  0EDE  3F00               	moviw [0]fsr0
 23523  0EDF  0021               	movlb	1	; select bank1
 23524  0EE0  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 23525  0EE1  3F01               	moviw [1]fsr0
 23526  0EE2  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 23527  0EE3  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 23528  0EE4  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 23529  0EE5  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 23530  0EE6  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 23531  0EE7  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 23532  0EE8  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 23533                           
 23534                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 23535  0EE9  0020               	movlb	0	; select bank0
 23536  0EEA  0858               	movf	vfpfcnvrt@fp+1,w
 23537  0EEB  00B1               	movwf	xtoa@fp+1
 23538  0EEC  0857               	movf	vfpfcnvrt@fp,w
 23539  0EED  00B0               	movwf	xtoa@fp
 23540  0EEE  0021               	movlb	1	; select bank1
 23541  0EEF  0833               	movf	vfpfcnvrt@llu^(0+128),w
 23542  0EF0  0020               	movlb	0	; select bank0
 23543  0EF1  00B2               	movwf	xtoa@d
 23544  0EF2  0021               	movlb	1	; select bank1
 23545  0EF3  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 23546  0EF4  0020               	movlb	0	; select bank0
 23547  0EF5  00B3               	movwf	xtoa@d+1
 23548  0EF6  0021               	movlb	1	; select bank1
 23549  0EF7  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 23550  0EF8  0020               	movlb	0	; select bank0
 23551  0EF9  00B4               	movwf	xtoa@d+2
 23552  0EFA  0021               	movlb	1	; select bank1
 23553  0EFB  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 23554  0EFC  0020               	movlb	0	; select bank0
 23555  0EFD  00B5               	movwf	xtoa@d+3
 23556  0EFE  0021               	movlb	1	; select bank1
 23557  0EFF  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 23558  0F00  0020               	movlb	0	; select bank0
 23559  0F01  00B6               	movwf	xtoa@d+4
 23560  0F02  0021               	movlb	1	; select bank1
 23561  0F03  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 23562  0F04  0020               	movlb	0	; select bank0
 23563  0F05  00B7               	movwf	xtoa@d+5
 23564  0F06  0021               	movlb	1	; select bank1
 23565  0F07  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 23566  0F08  0020               	movlb	0	; select bank0
 23567  0F09  00B8               	movwf	xtoa@d+6
 23568  0F0A  0021               	movlb	1	; select bank1
 23569  0F0B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 23570  0F0C  0020               	movlb	0	; select bank0
 23571  0F0D  00B9               	movwf	xtoa@d+7
 23572  0F0E  0021               	movlb	1	; select bank1
 23573  0F0F  0832               	movf	vfpfcnvrt@c^(0+128),w
 23574  0F10  0020               	movlb	0	; select bank0
 23575  0F11  00DB               	movwf	??_vfpfcnvrt
 23576  0F12  085B               	movf	??_vfpfcnvrt,w
 23577  0F13  00BA               	movwf	xtoa@x
 23578  0F14  3199  21A7         	fcall	_xtoa
 23579  0F16  0020               	movlb	0	; select bank0
 23580  0F17  0831               	movf	?_xtoa+1,w
 23581  0F18  00D8               	movwf	?_vfpfcnvrt+1
 23582  0F19  0830               	movf	?_xtoa,w
 23583  0F1A  00D7               	movwf	?_vfpfcnvrt
 23584  0F1B  0008               	return
 23585  0F1C                     l7085:	
 23586                           
 23587                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
 23588  0F1C  0859               	movf	vfpfcnvrt@fmt,w
 23589  0F1D  0086               	movwf	6
 23590  0F1E  0187               	clrf	7
 23591  0F1F  3F40               	moviw [0]fsr1
 23592  0F20  00F1               	movwf	strncmp@_l
 23593  0F21  3F41               	moviw [1]fsr1
 23594  0F22  00F2               	movwf	strncmp@_l+1
 23595  0F23  304C               	movlw	low (STR_116| (0+32768))
 23596  0F24  00F3               	movwf	strncmp@_r
 23597  0F25  30BB               	movlw	high (STR_116| (0+32768))
 23598  0F26  00F4               	movwf	strncmp@_r+1
 23599  0F27  3002               	movlw	2
 23600  0F28  00F5               	movwf	strncmp@n
 23601  0F29  3000               	movlw	0
 23602  0F2A  00F6               	movwf	strncmp@n+1
 23603  0F2B  31B5  25D8  3188   	fcall	_strncmp
 23604  0F2E  0871               	movf	?_strncmp,w
 23605  0F2F  0472               	iorwf	?_strncmp+1,w
 23606  0F30  1903               	btfsc	3,2
 23607  0F31  2F49               	goto	l7089
 23608  0F32  0020               	movlb	0	; select bank0
 23609  0F33  0859               	movf	vfpfcnvrt@fmt,w
 23610  0F34  0086               	movwf	6
 23611  0F35  0187               	clrf	7
 23612  0F36  3F40               	moviw [0]fsr1
 23613  0F37  00F1               	movwf	strncmp@_l
 23614  0F38  3F41               	moviw [1]fsr1
 23615  0F39  00F2               	movwf	strncmp@_l+1
 23616  0F3A  303A               	movlw	low (STR_120| (0+32768))
 23617  0F3B  00F3               	movwf	strncmp@_r
 23618  0F3C  30BB               	movlw	high (STR_120| (0+32768))
 23619  0F3D  00F4               	movwf	strncmp@_r+1
 23620  0F3E  3002               	movlw	2
 23621  0F3F  00F5               	movwf	strncmp@n
 23622  0F40  3000               	movlw	0
 23623  0F41  00F6               	movwf	strncmp@n+1
 23624  0F42  31B5  25D8  3188   	fcall	_strncmp
 23625  0F45  0871               	movf	?_strncmp,w
 23626  0F46  0472               	iorwf	?_strncmp+1,w
 23627  0F47  1D03               	btfss	3,2
 23628  0F48  2FAC               	goto	l7099
 23629  0F49                     l7089:	
 23630                           
 23631                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
 23632  0F49  0020               	movlb	0	; select bank0
 23633  0F4A  0859               	movf	vfpfcnvrt@fmt,w
 23634  0F4B  0086               	movwf	6
 23635  0F4C  0187               	clrf	7
 23636  0F4D  3F40               	moviw [0]fsr1
 23637  0F4E  00DB               	movwf	??_vfpfcnvrt
 23638  0F4F  3F41               	moviw [1]fsr1
 23639  0F50  00DC               	movwf	??_vfpfcnvrt+1
 23640  0F51  3001               	movlw	1
 23641  0F52  075B               	addwf	??_vfpfcnvrt,w
 23642  0F53  0084               	movwf	4
 23643  0F54  085C               	movf	??_vfpfcnvrt+1,w
 23644  0F55  1803               	skipnc
 23645  0F56  0A5C               	incf	??_vfpfcnvrt+1,w
 23646  0F57  0085               	movwf	5
 23647  0F58  0800               	movf	0,w	;code access
 23648  0F59  00DD               	movwf	??_vfpfcnvrt+2
 23649  0F5A  085D               	movf	??_vfpfcnvrt+2,w
 23650  0F5B  0021               	movlb	1	; select bank1
 23651  0F5C  00B2               	movwf	vfpfcnvrt@c^(0+128)
 23652                           
 23653                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
 23654  0F5D  0020               	movlb	0	; select bank0
 23655  0F5E  0859               	movf	vfpfcnvrt@fmt,w
 23656  0F5F  0086               	movwf	6
 23657  0F60  0187               	clrf	7
 23658  0F61  3002               	movlw	2
 23659  0F62  0781               	addwf	1,f
 23660  0F63  3141               	addfsr 1,1
 23661  0F64  1803               	skipnc
 23662  0F65  0A81               	incf	1,f
 23663                           
 23664                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 23665  0F66  085A               	movf	vfpfcnvrt@ap,w
 23666  0F67  0086               	movwf	6
 23667  0F68  0187               	clrf	7
 23668  0F69  0801               	movf	1,w
 23669  0F6A  0084               	movwf	4
 23670  0F6B  0185               	clrf	5
 23671  0F6C  3002               	movlw	2
 23672  0F6D  0781               	addwf	1,f
 23673  0F6E  3F00               	moviw [0]fsr0
 23674  0F6F  0021               	movlb	1	; select bank1
 23675  0F70  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 23676  0F71  3F01               	moviw [1]fsr0
 23677  0F72  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 23678  0F73  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 23679  0F74  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 23680  0F75  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 23681  0F76  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 23682  0F77  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 23683  0F78  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 23684                           
 23685                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1344:      
      +                                 return xtoa(fp, llu, c);
 23686  0F79  0020               	movlb	0	; select bank0
 23687  0F7A  0858               	movf	vfpfcnvrt@fp+1,w
 23688  0F7B  00B1               	movwf	xtoa@fp+1
 23689  0F7C  0857               	movf	vfpfcnvrt@fp,w
 23690  0F7D  00B0               	movwf	xtoa@fp
 23691  0F7E  0021               	movlb	1	; select bank1
 23692  0F7F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 23693  0F80  0020               	movlb	0	; select bank0
 23694  0F81  00B2               	movwf	xtoa@d
 23695  0F82  0021               	movlb	1	; select bank1
 23696  0F83  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 23697  0F84  0020               	movlb	0	; select bank0
 23698  0F85  00B3               	movwf	xtoa@d+1
 23699  0F86  0021               	movlb	1	; select bank1
 23700  0F87  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 23701  0F88  0020               	movlb	0	; select bank0
 23702  0F89  00B4               	movwf	xtoa@d+2
 23703  0F8A  0021               	movlb	1	; select bank1
 23704  0F8B  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 23705  0F8C  0020               	movlb	0	; select bank0
 23706  0F8D  00B5               	movwf	xtoa@d+3
 23707  0F8E  0021               	movlb	1	; select bank1
 23708  0F8F  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 23709  0F90  0020               	movlb	0	; select bank0
 23710  0F91  00B6               	movwf	xtoa@d+4
 23711  0F92  0021               	movlb	1	; select bank1
 23712  0F93  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 23713  0F94  0020               	movlb	0	; select bank0
 23714  0F95  00B7               	movwf	xtoa@d+5
 23715  0F96  0021               	movlb	1	; select bank1
 23716  0F97  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 23717  0F98  0020               	movlb	0	; select bank0
 23718  0F99  00B8               	movwf	xtoa@d+6
 23719  0F9A  0021               	movlb	1	; select bank1
 23720  0F9B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 23721  0F9C  0020               	movlb	0	; select bank0
 23722  0F9D  00B9               	movwf	xtoa@d+7
 23723  0F9E  0021               	movlb	1	; select bank1
 23724  0F9F  0832               	movf	vfpfcnvrt@c^(0+128),w
 23725  0FA0  0020               	movlb	0	; select bank0
 23726  0FA1  00DB               	movwf	??_vfpfcnvrt
 23727  0FA2  085B               	movf	??_vfpfcnvrt,w
 23728  0FA3  00BA               	movwf	xtoa@x
 23729  0FA4  3199  21A7         	fcall	_xtoa
 23730  0FA6  0020               	movlb	0	; select bank0
 23731  0FA7  0831               	movf	?_xtoa+1,w
 23732  0FA8  00D8               	movwf	?_vfpfcnvrt+1
 23733  0FA9  0830               	movf	?_xtoa,w
 23734  0FAA  00D7               	movwf	?_vfpfcnvrt
 23735  0FAB  0008               	return
 23736  0FAC                     l7099:	
 23737                           
 23738                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 23739  0FAC  0020               	movlb	0	; select bank0
 23740  0FAD  0859               	movf	vfpfcnvrt@fmt,w
 23741  0FAE  0086               	movwf	6
 23742  0FAF  0187               	clrf	7
 23743  0FB0  3F40               	moviw [0]fsr1
 23744  0FB1  00DB               	movwf	??_vfpfcnvrt
 23745  0FB2  3F41               	moviw [1]fsr1
 23746  0FB3  00DC               	movwf	??_vfpfcnvrt+1
 23747  0FB4  085B               	movf	??_vfpfcnvrt,w
 23748  0FB5  0084               	movwf	4
 23749  0FB6  085C               	movf	??_vfpfcnvrt+1,w
 23750  0FB7  0085               	movwf	5
 23751  0FB8  0012               	moviw fsr0++
 23752  0FB9  3A25               	xorlw	37
 23753  0FBA  1D03               	btfss	3,2
 23754  0FBB  2FD4               	goto	l7109
 23755                           
 23756                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 23757  0FBC  0859               	movf	vfpfcnvrt@fmt,w
 23758  0FBD  0086               	movwf	6
 23759  0FBE  0187               	clrf	7
 23760  0FBF  3001               	movlw	1
 23761  0FC0  0781               	addwf	1,f
 23762  0FC1  3141               	addfsr 1,1
 23763  0FC2  1803               	skipnc
 23764  0FC3  0A81               	incf	1,f
 23765                           
 23766                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 23767  0FC4  3025               	movlw	37
 23768  0FC5  00F1               	movwf	fputc@c
 23769  0FC6  3000               	movlw	0
 23770  0FC7  00F2               	movwf	fputc@c+1
 23771  0FC8  0858               	movf	vfpfcnvrt@fp+1,w
 23772  0FC9  00F4               	movwf	fputc@fp+1
 23773  0FCA  0857               	movf	vfpfcnvrt@fp,w
 23774  0FCB  00F3               	movwf	fputc@fp
 23775  0FCC  3198  2000         	fcall	_fputc
 23776  0FCE                     l7105:	
 23777                           
 23778                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 23779  0FCE  3001               	movlw	1
 23780  0FCF  0020               	movlb	0	; select bank0
 23781  0FD0  00D7               	movwf	?_vfpfcnvrt
 23782  0FD1  3000               	movlw	0
 23783  0FD2  00D8               	movwf	?_vfpfcnvrt+1
 23784  0FD3  0008               	return
 23785  0FD4                     l7109:	
 23786                           
 23787                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 23788  0FD4  0859               	movf	vfpfcnvrt@fmt,w
 23789  0FD5  0086               	movwf	6
 23790  0FD6  0187               	clrf	7
 23791  0FD7  3001               	movlw	1
 23792  0FD8  0781               	addwf	1,f
 23793  0FD9  3141               	addfsr 1,1
 23794  0FDA  1803               	skipnc
 23795  0FDB  0A81               	incf	1,f
 23796  0FDC  2B32               	goto	l6943
 23797  0FDD                     l7115:	
 23798                           
 23799                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 23800  0FDD  0859               	movf	vfpfcnvrt@fmt,w
 23801  0FDE  0086               	movwf	6
 23802  0FDF  0187               	clrf	7
 23803  0FE0  3F40               	moviw [0]fsr1
 23804  0FE1  00DB               	movwf	??_vfpfcnvrt
 23805  0FE2  3F41               	moviw [1]fsr1
 23806  0FE3  00DC               	movwf	??_vfpfcnvrt+1
 23807  0FE4  085B               	movf	??_vfpfcnvrt,w
 23808  0FE5  0084               	movwf	4
 23809  0FE6  085C               	movf	??_vfpfcnvrt+1,w
 23810  0FE7  0085               	movwf	5
 23811  0FE8  0800               	movf	0,w	;code access
 23812  0FE9  00DD               	movwf	??_vfpfcnvrt+2
 23813  0FEA  01DE               	clrf	??_vfpfcnvrt+3
 23814  0FEB  085D               	movf	??_vfpfcnvrt+2,w
 23815  0FEC  00F1               	movwf	fputc@c
 23816  0FED  085E               	movf	??_vfpfcnvrt+3,w
 23817  0FEE  00F2               	movwf	fputc@c+1
 23818  0FEF  0858               	movf	vfpfcnvrt@fp+1,w
 23819  0FF0  00F4               	movwf	fputc@fp+1
 23820  0FF1  0857               	movf	vfpfcnvrt@fp,w
 23821  0FF2  00F3               	movwf	fputc@fp
 23822  0FF3  3198  2000  3188   	fcall	_fputc
 23823                           
 23824                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 23825  0FF6  0020               	movlb	0	; select bank0
 23826  0FF7  0859               	movf	vfpfcnvrt@fmt,w
 23827  0FF8  0086               	movwf	6
 23828  0FF9  0187               	clrf	7
 23829  0FFA  3001               	movlw	1
 23830  0FFB  0781               	addwf	1,f
 23831  0FFC  3141               	addfsr 1,1
 23832  0FFD  1803               	skipnc
 23833  0FFE  0A81               	incf	1,f
 23834  0FFF  2FCE               	goto	l7105
 23835  1000                     __end_of_vfpfcnvrt:	


Data Sizes:
    Strings     549
    Constant    298
    Data        11
    BSS         115
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     70      80
    BANK3            80      0      76
    BANK4            80      0      39
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           65      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    vsnprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[19]), STR_21(CODE[20]), 
		 -> STR_20(CODE[20]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_10(CODE[15]), STR_9(CODE[40]), STR_8(CODE[37]), STR_7(CODE[15]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_3(CODE[22]), 
		 -> STR_2(CODE[71]), STR_1(CODE[40]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_122(CODE[3]), STR_118(CODE[3]), STR_113(CODE[3]), STR_109(CODE[3]), 
		 -> STR_104(CODE[4]), STR_100(CODE[4]), STR_95(CODE[3]), STR_90(CODE[3]), 
		 -> STR_85(CODE[4]), STR_80(CODE[3]), STR_75(CODE[3]), STR_70(CODE[4]), 
		 -> STR_65(CODE[3]), STR_60(CODE[3]), STR_55(CODE[4]), STR_50(CODE[3]), 
		 -> STR_46(CODE[3]), STR_41(CODE[3]), STR_37(CODE[3]), STR_32(CODE[4]), 
		 -> STR_28(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_122(CODE[3]), STR_118(CODE[3]), STR_113(CODE[3]), STR_109(CODE[3]), 
		 -> STR_104(CODE[4]), STR_100(CODE[4]), STR_95(CODE[3]), STR_90(CODE[3]), 
		 -> STR_85(CODE[4]), STR_80(CODE[3]), STR_75(CODE[3]), STR_70(CODE[4]), 
		 -> STR_65(CODE[3]), STR_60(CODE[3]), STR_55(CODE[4]), STR_50(CODE[3]), 
		 -> STR_46(CODE[3]), STR_41(CODE[3]), STR_37(CODE[3]), STR_32(CODE[4]), 
		 -> STR_28(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[19]), STR_21(CODE[20]), 
		 -> STR_20(CODE[20]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_10(CODE[15]), STR_9(CODE[40]), STR_8(CODE[37]), STR_7(CODE[15]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_3(CODE[22]), 
		 -> STR_2(CODE[71]), STR_1(CODE[40]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[19]), STR_21(CODE[20]), 
		 -> STR_20(CODE[20]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_10(CODE[15]), STR_9(CODE[40]), STR_8(CODE[37]), STR_7(CODE[15]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_3(CODE[22]), 
		 -> STR_2(CODE[71]), STR_1(CODE[40]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[32]), sp__logf(UNKNOWN), 
		 -> adcGain(BANK2[2]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[32]), sp__logf(UNKNOWN), 
		 -> adcGain(BANK2[2]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[19]), STR_21(CODE[20]), 
		 -> STR_20(CODE[20]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_10(CODE[15]), STR_9(CODE[40]), STR_8(CODE[37]), STR_7(CODE[15]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_3(CODE[22]), 
		 -> STR_2(CODE[71]), STR_1(CODE[40]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    snprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_snprintf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    S1781_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[19]), STR_21(CODE[20]), 
		 -> STR_20(CODE[20]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_10(CODE[15]), STR_9(CODE[40]), STR_8(CODE[37]), STR_7(CODE[15]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_3(CODE[22]), 
		 -> STR_2(CODE[71]), STR_1(CODE[40]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[19]), STR_21(CODE[20]), 
		 -> STR_20(CODE[20]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_10(CODE[15]), STR_9(CODE[40]), STR_8(CODE[37]), STR_7(CODE[15]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_3(CODE[22]), 
		 -> STR_2(CODE[71]), STR_1(CODE[40]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 71
		 -> STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[19]), STR_21(CODE[20]), 
		 -> STR_20(CODE[20]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_10(CODE[15]), STR_9(CODE[40]), STR_8(CODE[37]), STR_7(CODE[15]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_3(CODE[22]), 
		 -> STR_2(CODE[71]), STR_1(CODE[40]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 4
		 -> ?_snprintf(BANK1[2]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 4
		 -> ?_snprintf(BANK1[2]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 4
		 -> ?_snprintf(BANK1[2]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 127
		 -> STR_25(CODE[3]), STR_12(CODE[3]), STR_11(CODE[38]), messageBuffer(BIGRAM[127]), 


Critical Paths under _main in COMMON

    _main->_EUSART_Initialize
    _watchdog_timeout_shutdown->_RGB_color
    _vfpfcnvrt->_stoa
    _vfpfcnvrt->_strncmp
    _toupper->_islower
    _stoa->_fputc
    _dtoa->___aodiv
    _abs->___aomod
    _pad->_fputs
    _fputs->_fputc
    _atoi->___wmul
    _atoi->_isdigit
    _EUSART_Write_Text->_EUSART_Write
    _setTemperatureLimitsint->___wmul
    _setShortCircuitProtection->_I2C_writeRegister
    _setOverCurrentDischargeProtection->_I2C_writeRegister
    _setCellUndervoltageProtection->_I2C_writeRegister
    _setCellUndervoltageProtection->_readRegister
    _setCellOvervoltageProtection->_I2C_writeRegister
    _setCellOvervoltageProtection->_readRegister
    _beginAFEcommunication->_I2C_writeRegister
    _beginAFEcommunication->_readRegister
    _RGB_AWAIT_AFE_CONN->_RGB_color
    _AFE_UPDATE->_enableCharging
    _AFE_UPDATE->_enableDischarging
    _updateVoltages->___fltol
    _updateTemperatures->___fltol
    _updateCurrent->___fltol
    _enableDischarging->_I2C_writeRegister
    _enableDischarging->_readRegister
    _enableCharging->_I2C_writeRegister
    _enableCharging->_readRegister
    _readRegister->_read_I2C_data
    _readRegister->_send_I2C_controlByte
    _I2C_writeRegister->_send_I2C_controlByte
    _coulomb_counter->___fltol
    _calibrate_BATTSOC->___fltol
    ___flmul->__Umul8_16
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _statemachine->_snprintf
    _printcellParameters->_snprintf
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _utoa->___lodiv
    _utoa->___lomod
    _utoa->_pad
    _otoa->_pad
    _dtoa->___aodiv
    _dtoa->___aomod
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _setShortCircuitProtection->___flge
    _setOverCurrentDischargeProtection->___flge
    ___flge->___fldiv
    _setCellUndervoltageProtection->___aldiv
    _setCellOvervoltageProtection->___aldiv
    _AFE_UPDATE->_coulomb_counter
    _updateVoltages->___fladd
    _updateTemperatures->___fladd
    _logf->___fladd
    ___flneg->___fldiv
    ___flsub->___fladd
    ___fladd->___fldiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_statemachine
    _printcellParameters->_snprintf
    _snprintf->_vsnprintf
    _vfprintf->_vfpfcnvrt
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _AFE_UPDATE->_updateTemperatures
    _updateVoltages->___fltol
    _updateTemperatures->_logf
    _logf->___flsub
    _updateCurrent->___fltol
    _coulomb_counter->___fltol
    _calibrate_BATTSOC->___fltol
    ___fltol->___flsub

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_statemachine
    _updateTemperatures->_logf

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _myIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _myIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _myIsr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _myIsr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _myIsr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _myIsr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _myIsr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _myIsr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _myIsr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _myIsr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _myIsr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _myIsr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _myIsr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  381011
                                             68 BANK2      2     2      0
                  _EUSART_Initialize
                          _initClock
                            _initWDT
                          _init_GPIO
                           _init_I2C
                           _init_RGB
                          _init_TMR1
                       _statemachine
          _watchdog_timeout_shutdown
 ---------------------------------------------------------------------------------
 (1) _watchdog_timeout_shutdown                            2     2      0     402
                                              3 COMMON     2     2      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (1) _statemachine                                         3     3      0  378231
                                             79 BANK1      1     1      0
                                             66 BANK2      2     2      0
                         _AFE_UPDATE
                  _EUSART_Write_Text
                 _RGB_AWAIT_AFE_CONN
                          _RGB_color
              _beginAFEcommunication
                           _init_AFE
                _printcellParameters
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _printcellParameters                                  0     0      0   66498
                  _EUSART_Write_Text
                       _readRegister
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _snprintf                                            34     4     30   55896
                                             76 BANK0      4     4      0
                                             44 BANK1     30     0     30
                       _readRegister (ARG)
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (3) _vsnprintf                                           19    12      7   49669
                                             74 BANK0      2     2      0
                                             27 BANK1     17    10      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             9     4      5   48632
                                             65 BANK0      9     4      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    42      4   47857
                                             55 BANK0     10     6      4
                                              0 BANK1     27    27      0
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    7640
                                             16 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     512
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     161
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              8     6      2     161
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _utoa                                                25    15     10    6353
                                             16 BANK0     25    15     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             18     2     16     311
                                              1 COMMON     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             26    10     16     314
                                              1 COMMON    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6    5013
                                              1 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                23    19      4    2068
                                             10 COMMON     2     2      0
                                              0 BANK0     21    17      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _otoa                                                34    24     10    5833
                                             16 BANK0     34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                31    21     10    7036
                                             16 BANK0     31    21     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                              4 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             19     3     16     448
                                              1 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             27    11     16     452
                                              1 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 8     5      3    4945
                                             16 BANK0      6     3      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 10     5      5    4685
                                              6 BANK0     10     5      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     182
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     6      2    1605
                                             10 COMMON     2     0      2
                                              0 BANK0      6     6      0
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1290
                                              1 COMMON     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    2025
                                              7 COMMON     2     0      2
                                              0 BANK0     13    13      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              5     3      2     207
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write_Text                                    5     3      2    2012
                                              2 COMMON     5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_AFE                                             0     0      0   71647
       _setCellOvervoltageProtection
      _setCellUndervoltageProtection
  _setOverCurrentDischargeProtection
          _setShortCircuitProtection
              _setShuntResistorValue
            _setTemperatureLimitsint
 ---------------------------------------------------------------------------------
 (3) _setTemperatureLimitsint                              8     0      8    1244
                                              0 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     852
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _setShuntResistorValue                                4     0      4      98
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) _setShortCircuitProtection                           21    15      6   17884
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _setOverCurrentDischargeProtection                   21    15      6   17884
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     486
                                             58 BANK0     12     4      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _setCellUndervoltageProtection                       21    17      4   17270
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _setCellOvervoltageProtection                        21    17      4   17267
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _beginAFEcommunication                               15    13      2   13502
                                              0 BANK0     15    13      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _RGB_AWAIT_AFE_CONN                                   1     1      0     402
                                              3 COMMON     1     1      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (2) _RGB_color                                            2     0      2     402
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _AFE_UPDATE                                           0     0      0  167838
                  _calibrate_BATTSOC
                    _coulomb_counter
                     _enableCharging
                  _enableDischarging
                      _updateCurrent
                 _updateTemperatures
                     _updateVoltages
 ---------------------------------------------------------------------------------
 (3) _updateVoltages                                      11    11      0   29445
                                             17 BANK1     11    11      0
                            ___aldiv
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                             ___lmul
                           ___xxtofl
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8    1396
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _updateTemperatures                                  59    59      0   53516
                                             20 BANK1     59    59      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                               _logf
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) _logf                                                78    74      4   22362
                                              8 BANK1     12     8      4
                                              0 BANK2     66    66      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _updateCurrent                                        6     6      0   26568
                                             17 BANK1      6     6      0
                  _I2C_writeRegister
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     121
                                             58 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _enableDischarging                                    5     3      2   13552
                                             11 COMMON     1     1      0
                                              0 BANK0      4     2      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _enableCharging                                       5     3      2   13552
                                             11 COMMON     1     1      0
                                              0 BANK0      4     2      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _readRegister                                         6     2      4    8590
                                              5 COMMON     6     2      4
                      _read_I2C_data
                      _send_I2C_NACK
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _read_I2C_data                                        4     2      2       0
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) _I2C_writeRegister                                    6     0      6    4776
                                              5 COMMON     6     0      6
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_stopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_startBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_data                                        2     0      2     301
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _send_I2C_controlByte                                 4     0      4     602
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) _coulomb_counter                                      4     4      0   17940
                                             78 BANK0      2     2      0
                                             17 BANK1      2     2      0
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4765
                                              0 BANK1      8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    4112
                                             58 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _calibrate_BATTSOC                                    9     9      0   13265
                                             17 BANK1      9     9      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    2130
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     989
                                             10 COMMON     2     2      0
                                              8 BANK1      9     5      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    6825
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    3097
                                             32 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_RGB                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_GPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initWDT                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initClock                                            0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   18    14      4    2378
                                             10 COMMON     2     2      0
                                             18 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8    2065
                                              9 COMMON     1     1      0
                                              4 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _myIsr                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     ___aldiv
       ___lmul (ARG)
   _initClock
     _internal_16
   _initWDT
   _init_GPIO
   _init_I2C
   _init_RGB
   _init_TMR1
   _statemachine
     _AFE_UPDATE
       _calibrate_BATTSOC
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _coulomb_counter
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _enableCharging
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _enableDischarging
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateCurrent
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___flneg
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateTemperatures
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _logf
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateVoltages
         ___aldiv
           ___lmul (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___lmul
         ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
     _EUSART_Write_Text
       _EUSART_Write
     _RGB_AWAIT_AFE_CONN
       _RGB_color
     _RGB_color
     _beginAFEcommunication
       _I2C_writeRegister
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
     _init_AFE
       _setCellOvervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setCellUndervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setOverCurrentDischargeProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShortCircuitProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShuntResistorValue
       _setTemperatureLimitsint
         ___wmul
     _printcellParameters
       _EUSART_Write_Text
         _EUSART_Write
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _snprintf
         _readRegister (ARG)
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _vsnprintf (ARG)
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
     _snprintf
       _readRegister (ARG)
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _vsnprintf (ARG)
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
   _watchdog_timeout_shutdown
     _RGB_color

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     46      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4C      11       95.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      27      13       48.8%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     170      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     170      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              41      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Mar 15 14:48:55 2020

          __end_of_setShortCircuitProtection 2800                               _maxCellVoltage 01D8  
                      __end_of_send_I2C_data 3175                                 ___fldiv@aexp 0059  
                               ___fldiv@bexp 0058                               _updateVoltages 124F  
                               ___fldiv@sign 0051                           ?_calibrate_BATTSOC 0070  
                                __CFG_CP$OFF 0000                          ___wmul@multiplicand 0073  
                      _setShuntResistorValue 3192                          __Umul8_16@word_mpld 0077  
                                        l300 3184                                          l306 3157  
                                        l330 317A                                          l253 0801  
                                        l318 315F                                          l174 3707  
                    enableDischarging@enable 0020                                          l352 330C  
                                        l354 3311                                          l355 3316  
                                        l356 332B                                          l294 31C7  
                                        l471 2BFA                                          l288 3171  
                                        l801 2D06                                          l810 2D61  
                                        l741 35BD                                          l822 2236  
                                        l753 1899                                          l833 19AE  
                                        l738 359D                                          l762 1965  
                                        l754 18A0                                          l818 221B  
                                        l837 19C9                                          l758 18BB  
                                        l790 23B7                                          l870 1CAE  
                                        l759 18CF                                          l783 2317  
                                        l871 1CB1                                          l784 23AC  
                                        l872 1CB4                                          l946 3268  
                                        l858 1ACC                                          l874 1CE7  
                                        l779 22FC                                          l867 1C9F  
                                        l869 1CAB                                          _Lg1 3B12  
                                        _Lg2 3B0E                                          _Lg3 3B0A  
                                        _Lg4 3B06                          __size_of_AFE_UPDATE 0030  
                        ??_calibrate_BATTSOC 00B1                                          _abs 3201  
                             RGB_color@color 0071                                          _pad 3587  
                               __CFG_BORV$LO 0000                                          wreg 0009  
                               __CFG_IESO$ON 0000                                 ___flmul@aexp 0038  
                               ___flmul@bexp 0039       setCellOvervoltageProtection@voltage_mV 0032  
    setCellUndervoltageProtection@voltage_mV 0032                                 ___flmul@sign 0033  
                               ___flmul@temp 003E                                 ___flmul@prod 003A  
                               _statemachine 3690                                 __CFG_LVP$OFF 0000  
                               ___fltol@exp1 007B                                         l1011 28FB  
                                       ?_abs 0074                                         l1124 3723  
                                       l1046 24C7                                         l1303 1B49  
                                       l1127 3771                                         l1147 3674  
                                       l1251 1EFE                                         l1059 2202  
                                       l1324 1C50                                         l1325 1C68  
                                       l1253 1EE1                                         l1421 2A6B  
                                       l1327 1C75                                         l1247 1E6B  
                                       l1281 1FE0                                         l1355 1242  
                                       l1179 37EF                                         l1268 1F81  
                                       l1381 298A                                         l1189 285C  
                                       l1289 1FF8                                         l1394 29D4  
                                       l1395 29DE                                         l1387 29C0  
                                       l4203 2162                                         l1548 32FC  
                                       l5013 1E60                                         l4221 21D5  
                                       l5023 1E75                                         l4063 1808  
                                       l4215 2196                                         l4223 21E1  
                                       l4207 2189                                         l5017 1E63  
                                       l4065 180C                                         l4081 3352  
                                       l4217 21A5                                         l4401 2CDF  
                                       l5123 1FA0                                         l5115 1F93  
                                       l5107 1F79                                         l5131 1FA9  
                                       l4147 3262                                         l4171 243B  
                                       l5301 1BD4                                         l6021 2E3E  
                                       l6013 2D8F                                         l5141 1FB4  
                                       l5061 1EE9                                         l5053 1EB1  
                                       l4069 1833                                         l4181 2452  
                                       l4165 2410                                         l4421 2D35  
                                       l4237 379B                                         l5303 1B9D  
                                       l6007 2D8C                                         l5063 1EEB  
                                       l5071 1EF9                                         l6111 333E  
                                       l4087 31EE                                         l4191 249A  
                                       l4183 2461                                         l4415 2D17  
                                       l4247 37E3                                         l4239 37AA  
                                       l4263 2850                                         l5321 1BF6  
                                       l5305 1BD9                                         l5241 1B25  
                                       l5137 1FB2                                         l5129 1FA7  
                                       l4273 07F8                                         l4089 31FA  
                                       l4193 24A6                                         l4169 2437  
                                       l4433 2D65                                         l4601 35ED  
                                       l4257 2811                                         l5331 1C0F  
                                       l5235 1B1A                                         l6019 2E2E  
                                       l5163 1FF4                                         l4419 2D28  
                                       l4259 2820                                         l7003 0C08  
                                       l5341 1C38                                         l5173 32F6  
                                       l5405 1078                                         l6029 2F27  
                                       l4437 2D76                                         l4429 2D38  
                                       l7013 0C66                                         ?_pad 0026  
                                       l5327 1C0D                                         l5319 1BDF  
                                       l5255 1B3E                                         l5239 1B1D  
                                       l5159 1FF0                                         l5087 1F1E  
                                       l5079 1F0C                                         l4439 2D83  
                                       l4607 3619                                         l7023 0CC6  
                                       l5513 2999                                         l5089 1F20  
                                       l5097 1F2F                                         l7105 0FCE  
                                       l7033 0D1E                                         l7211 290C  
                                       l5355 1C71                                         l5275 1B74  
                                       l5259 1B41                                         l5507 2982  
                                       l7043 0D7D                                         l7115 0FDD  
                                       l7221 292A                                         l5269 1B68  
                                       l5541 29F9                                         l5517 299D  
                                       l5605 01CA                                         l7109 0FD4  
                                       l7061 0E3B                                         l5295 1BBB  
                                       l5375 103D                                         l5527 29D2  
                                       l5519 29AD                                         l7311 27DF  
                                       l7071 0E9E                                         l7047 0DAB  
                                       l7233 2955                                         l5465 11D8  
                                       l5457 11AA                                         l5393 1060  
                                       l5377 103F                                         l5529 29C5  
                                       l5617 01E4                                         l7401 2EDC  
                                       l6505 33B1                                         l7057 0E0D  
                                       l7153 33DD                                         l7219 291C  
                                       l5483 1218                                         l5459 11C1  
                                       l5395 1062                                         l5379 1047  
                                       l5723 373D                                         l7307 27B5  
                                       l6507 33BA                                         l7075 0EBD  
                                       l7155 33FD                                         l7237 2963  
                                       l7229 294A                                         l5469 11DA  
                                       l5397 106A                                         l7405 2F04  
                                       l7333 268E                                         l6533 18CA  
                                       l6613 23D0                                         l7085 0F1C  
                                       l7253 2894                                         l5479 1203  
                                       l5751 363D                                         l5591 0124  
                                       l5583 00A5                                         l5727 3757  
                                       l7327 25E2                                         l6527 18B3  
                                       l4599 3612                                         l6623 222E  
                                       l7255 289C                                         l7247 2880  
                                       l5489 122F                                         l5585 00C1  
                                       l7193 341A                                         l5817 331B  
                                       l7345 26A0                                         l6721 2A07  
                                       l6473 3593                                         l6537 18FC  
                                       l6641 2255                                         l6713 1AEA  
                                       l7089 0F49                                         l7265 28DA  
                                       l5747 3634                                         l7507 34F9  
                                       l7451 2CAE                                         l7515 2B51  
                                       l5835 3248                                         l6483 359F  
                                       l6547 18D7                                         l6555 1971  
                                       l7099 0FAC                                         l7267 28DE  
                                       l7453 2CB6                                         l5597 0181  
                                       l7189 340F                                         l7349 26C8  
                                       l6477 359B                                         l6565 1984  
                                       l6629 2279                                         l6805 1D1C  
                                       l7269 28E5                                         l5767 3662  
                                       l7551 338B                                         l7375 20F0  
                                       l7295 27A3                                         l6743 2A6F  
                                       l6735 2A33                                         l6487 35C9  
                                       l6559 1979                                         l6639 22DA  
                                       l6831 1DB9                                         l6807 1D2C  
                                       l6815 1D5F                                         l7615 3691  
                                       l5777 3681                                         l5769 3670  
                                       l4993 1E3B                                         l7449 2C9F  
                                       l7553 338E                                         l7289 26F7  
                                       l6753 2A9E                                         l6737 2A38  
                                       l6729 2A23                                         l6569 1991  
                                       l6649 22DF                                         l6673 1A0B  
                                       l6665 19D9                                         l6905 0988  
                                       l6809 1D35                                         l7641 36D8  
                                       l7633 36B4                                         l4995 1E43  
                                       l7379 2118                                         l6739 2A4C  
                                       l6587 235E                                         l6579 230F  
                                       l6659 19C1                                         l6915 09E8  
                                       l6851 2506                                         l6827 1DA0  
                                       l4989 1E38                                         l7549 3387  
                                       l6597 2339                                         l6669 19F1  
                                       l6925 0A40                                         l6829 1DB0  
                                       l6837 1DE3                                         l6773 1CA1  
                                       l7637 36C4                                         l6943 0B32  
                                       l6935 0A9F                                         l6871 0843  
                                       l6863 257F                                         l6847 24D9  
                                       l6783 1CB7                                         l7831 36F9  
                                       l7647 36EF                                         l7671 3459  
                                       l6689 1A59                                         l6697 1A9B  
                                       l6961 0AF4                                         l6793 1CEE  
                                       l7833 1CD5                                         l7595 2B39  
                                       l7499 3530                                         l7835 2A44  
                                       l6947 0B36                                         l6883 08B3  
                                       l6875 0862                                         l6859 2551  
                                       l7837 3320                                         l6973 0B13  
                                       l6949 0AD4                                         l6789 1CBC  
                                       l6895 0929                                         l6887 08E0  
                                       l6993 0BCF                                         STR_1 3929  
                               __CFG_WDTE$ON 0000                                         STR_2 38BA  
                                       STR_3 39D2                                         STR_4 3A3C  
                                       STR_5 39FD                                         STR_6 3A12  
                                       STR_7 3AD0                                         STR_8 3977  
                                       STR_9 3901                                         _BRGH 0CF2  
                                       _CREN 0CEC                                         u4130 31E2  
                                       u4140 31E3                                         u4060 3227  
                                       u4230 2442                                         u4070 3228  
                                       u4055 320A                                         u4400 378B  
                                       u4080 32C6                                         u4090 32C7  
                                       u4165 3269                                         u4175 326E  
                                       u4265 2487                                         u4435 37D0  
                                       u6125 32FD                                         u6045 1FCB  
                                       u7005 01FC                                         u4365 21C3  
                 enableDischarging@sys_ctrl2 007B                                         u6305 1BA5  
                                       u6315 1BAC                                         u4475 283E  
                                       u8005 18EB                                         u6335 1BB5  
                                       u8015 18F7                                         u4815 2CFF  
                                       u6345 1BC9                                         u7225 3646  
                                       _SCS0 04C8                                         u8115 234D  
                                       u4835 2D33                                         _SCS1 04C9  
                                       u4780 2CCE                                         u8300 1A42  
                                       u6605 1173                                         u9005 341B  
                                       u3965 1831                                         u8125 2359  
                                       u4845 2D42                                         u8205 2268  
                                       u8310 1A43                                         u6375 1BE2  
                                       u6615 118A                                         u7255 3663  
                                       u5903 1F41                                         u9015 3422  
                                       u8215 2274                                         u7600 3334  
                                       u9105 294B                                         u6465 1C26  
                                       u6625 1199                                         u5825 1EEF  
                                       u4865 2D81                                         u7610 3335  
                                       u6475 1C41                                         u6395 1BEB  
                                       u6635 11AD                                         u7515 2DB1  
                                       u8075 2307                                         u5780 1ED0  
                                       u7620 3343                                         u6485 1C5A  
                                       u6725 11F1                                         u7285 3678  
                                       u7525 2E3C                                         u9205 27CE  
                                       u8085 2390                                         u8245 19B9  
                                       u5790 1ED1                                         u7630 3344  
                                       u8430 2A83                                         u8270 1A22  
                                       u6735 120C                                         u6655 11B6  
                                       u6815 29BA                                         u7535 2E4C  
                                       u5775 1EC5                                         u8095 23B5  
                                       u8175 2226                                         u8335 1A7F  
                                       u8440 2A84                                         u7800 323E  
                                       u8280 1A23                                         u8520 1D51  
                                       u9065 291F                                         u6745 1222  
                                       u6585 10EE                                         u5945 1F94  
                                       u7545 2FFD                                         u9305 2EF4  
                                       u8345 1AA5                                         u8265 1A05  
                                       u7810 323F                                         u8530 1D52  
                                       u6595 111D                                         u6835 29CC  
                                       u7900 186F                                         u9085 292B  
                                       u9405 2AAD                                         u6925 00B5  
                                       u9245 26B9                                         u8365 1ABB  
                                       u7910 1870                                         u9095 293F  
                                       u9415 2AC4                                         u5895 1F24  
                                       u8375 1AC7                                         u9175 28D1  
                                       u6945 00D2                                         u9265 20CA  
                                       u8570 1DD5                                         u9435 2AFA  
                                       u6875 29E6                                         u6795 29A6  
                                       u9275 2108                                         u9507 36D1  
                                       u7860 1011                                         u8580 1DD6  
                                       u9445 2B11                                         u9517 31BE  
                                       u6965 0135                                         u9365 2B67  
                                       u7845 35A9                                         u7870 1012  
                                       u9295 2EBD                                         u9385 2BCD  
                                       u7955 18AB                                         u9487 3462  
                                       u7985 196F                                         u9497 32A4  
                                       _TMR1 0016                                         _SPEN 0CEF  
                                       _TXEN 0CF5                                         _SYNC 0CF4  
                ??_watchdog_timeout_shutdown 0073                                 __CFG_WRT$OFF 0000  
                                       abs@a 0074                                         _dbuf 0220  
                             ?_updateCurrent 0070                                         _atoi 2A02  
                                       _ctoa 33A4                                         _main 3438  
                                       _dtoa 1854                                         _logf 0074  
                                       _prec 0168                                         _otoa 22F5  
                                       _nout 01D4                                         pad@i 002C  
                                       pad@p 0029                                         fsr0h 0005  
                                       fsr1h 0007                                         indf0 0000  
                                       fsr0l 0004                                         indf1 0001  
                                       fsr1l 0006                                         pad@w 002E  
                                       _stoa 2CC4                                         btemp 007E  
                                       _utoa 2214                                         _xtoa 19A7  
                                       start 001E                    __end_of_calibrate_BATTSOC 2E4F  
                            ___fldiv@new_exp 0052                       __end_of_updateVoltages 1527  
                   __end_of_send_I2C_stopBit 3163                            _enableDischarging 350C  
                                      ??_abs 0076                                        ??_pad 002B  
                       _send_I2C_controlByte 317E                                ?_EUSART_Write 0070  
                         ?_enableDischarging 0020                                ___fltol@sign1 007A  
                            __end_of___aldiv 296C                              __end_of___aodiv 24D9  
                                      ?_atoi 0077                                        ?_ctoa 0030  
                            __end_of___fladd 2000                                        ?_main 0070  
                                      ?_dtoa 0030                              __end_of___aomod 2214  
              I2C_writeRegister@slaveAddress 0075                                        ?_logf 00A8  
                            __end_of___fldiv 1C7A                              __end_of___flneg 3192  
                                      STR_10 3ADF                                        STR_11 3951  
                                      STR_20 3A51                                        STR_21 3A65  
                                      STR_30 3B26                                        STR_22 3A79  
                                      STR_14 39E8                                        STR_23 3A8C  
                                      STR_15 39BC                                        STR_32 3B26  
                                      STR_24 3A9E                                        STR_41 3B27  
                                      STR_50 3B40                                        STR_26 3B22  
                                      STR_19 3A27                                        STR_28 3B22  
                                      STR_60 3B2F                                        STR_44 3B3D  
                                      STR_37 3B23                                        STR_53 3B2E  
                                      STR_46 3B3D                                        STR_70 3B2A  
                                      STR_55 3B2E                                        STR_63 3B46  
                                      STR_80 3B43                                        STR_48 3B40  
                                      STR_65 3B46                                        STR_90 3B33  
                                      STR_75 3B2B                                        STR_83 3B32  
                                      STR_68 3B2A                                        STR_85 3B32  
                                      STR_93 3B49                                        STR_78 3B43  
                                      STR_95 3B49                              __end_of___flmul 124F  
                                      STR_98 3B36                                        ?_otoa 0030  
                            __end_of___flsub 349F                              __end_of___fltol 3690  
                                      ?_stoa 0020                                        ?_utoa 0030  
                            __end_of___lodiv 3800                                        ?_xtoa 0030  
                            __end_of___lomod 286D                                        _IRCF0 04CB  
                                      _IRCF1 04CC                                        _IRCF2 04CD  
                                      _IRCF3 04CE                       __size_of_read_I2C_data 0010  
                                      i1l155 001C                                 vfpfcnvrt@fmt 0059  
                               vfpfcnvrt@llu 00B3                                        _SPBRG 019B  
                         __size_of_RGB_color 0021                          ___lmul@multiplicand 0075  
                        ??_enableDischarging 0022                               __CFG_FCMEN$OFF 0000  
                            __end_of_initWDT 2006                                        _flags 016A  
                                      _errno 01D2                                        _fputc 1800  
                            __end_of_isalpha 32CE                                        _fputs 334E  
                                      _myIsr 0004                              __end_of_isdigit 31EA  
                                      atoi@n 002B                                        pad@fp 0026  
                                      atoi@s 0077                                        _width 0166  
                                      ctoa@c 0032                                        _putch 0003  
                                      ctoa@w 0034                                        dtoa@d 0032  
                                      dtoa@i 004D                                        dtoa@n 0045  
                                      dtoa@p 003F                                        dtoa@s 0043  
                                      dtoa@w 0041                              __end_of_islower 3246  
                            __end_of_isspace 0800                                        logf@R 0120  
                                      logf@f 015A                                        logf@k 013C  
                                      logf@s 0146                                        logf@u 0156  
                                      logf@w 014E                                        logf@x 00A8  
                                      logf@z 014A           __end_of_lookupTableSamsung_voltage 38B8  
                 _lookupTableSamsung_voltage 385C                               __CFG_BOREN$OFF 0000  
                            __end_of_isupper 322F                                        otoa@d 0032  
                                      otoa@i 0050                                        otoa@n 0048  
                                      otoa@p 0042                                        otoa@t 0044  
                                      otoa@w 0046                      enableCharging@sys_ctrl2 007B  
                                      stoa@i 002B                                        stoa@l 0033  
                                      stoa@p 0031                                        stoa@s 0022  
                                      stoa@w 002D                                        utoa@d 0032  
                                      utoa@i 0047                                        utoa@n 003F  
                                      utoa@p 003B                                        utoa@w 003D  
                                      status 0003                                        wtemp0 007E  
                                      xtoa@c 0055                                        xtoa@d 0032  
                                      xtoa@i 0053                                        xtoa@n 004B  
                                      xtoa@p 0047                                        xtoa@w 0049  
                                      xtoa@x 003A                            _SCD_delay_setting 3AFE  
                            __end_of_strncmp 362A                              __end_of_toupper 1023  
                           ___lodiv@dividend 0028                                 ?_internal_16 0070  
                   __size_of_coulomb_counter 00DC                                 _toupper$1848 0079  
                             __CFG_MCLRE$OFF 0000                    __end_of_enableDischarging 3543  
                            __initialization 0020                              ?_updateVoltages 0070  
                   updateTemperatures@adcVal 00E7        setTemperatureLimitsint@maxCharge_degC 0026  
                               __end_of_atoi 2AA3                                 __end_of_ctoa 33D5  
                               __end_of_main 346A                                 __end_of_dtoa 19A7  
                               __end_of_logf 05FE                                 __end_of_otoa 23E6  
                               __end_of_stoa 2D89                                 __end_of_utoa 22F5  
                               __end_of_xtoa 1B00                     __end_of_UV_delay_setting 3AFE  
                     ?_setShuntResistorValue 0071                       beginAFEcommunication@i 002D  
                      ?_send_I2C_controlByte 0071                               ??_EUSART_Write 0071  
                  _watchdog_timeout_shutdown 3296                               __CFG_LPBOR$OFF 0000  
                          _ATmega328_address 38B8                                       ??_atoi 0020  
                                     ??_ctoa 0033                                       ??_main 0164  
                                     ??_dtoa 003A                                       ??_logf 00AC  
                                     ??_otoa 003A                                       ??_stoa 007A  
                                     ??_utoa 003A                                       ??_xtoa 003B  
                __end_of_printcellParameters 07E4                               __CFG_PLLEN$OFF 0000  
                           ___lodiv@quotient 0072                                ?_readRegister 0075  
                                     ?_fputc 0071                                       STR_100 3B36  
                                     STR_102 3B1E                                       ?_fputs 007A  
                                     STR_104 3B1E                                       STR_120 3B3A  
                                     STR_113 3B1F                                       STR_122 3B3A  
                                     ?_myIsr 0070                                       STR_116 3B4C  
                                     STR_109 3B37                                       STR_118 3B4C  
                             __CFG_ZCDDIS$ON 0000                                       ?_putch 0070  
              __end_of_OCD_threshold_setting 39BC                              ??_updateCurrent 00B1  
                                     _RC1REG 0199                    __end_of_SCD_delay_setting 3B06  
                              vfpfcnvrt@done 00A2                                 ??_AFE_UPDATE 007C  
                                     u420lld 240E                                       _TX1REG 019A  
                                     u431lld 2160                                       _SPLLEN 04CF  
     setOverCurrentDischargeProtection@i_983 00AA                                       _SSPADD 0212  
                                     _TRISC6 0476                                       _TRISC7 0477  
                                     _SSPBUF 0211                                _read_I2C_data 31C3  
                           __end_of___xxtofl 2A02                   __size_of_calibrate_BATTSOC 00C6  
                             __CFG_PWRTE$OFF 0000                            __end_of_RGB_color 332C  
                               vfprintf@cfmt 0068                                       ___flge 3708  
                                     ___lmul 3406                                    ??___aldiv 0079  
                                  ??___aodiv 0071                               _minCellVoltage 01D6  
                                  ??___fladd 0062                                    ??___aomod 0071  
                                     ___wmul 3260                                       _ln2_hi 3B1A  
                                  ??___fldiv 0048                                       _ln2_lo 3B16  
                                  ??___flneg 007A                               __CFG_STVREN$ON 0000  
                                  ??___flmul 002E                                    ??___flsub 007A  
                                  ??___fltol 00AC                                    ??___lodiv 0071  
                           __end_of_init_I2C 31C3                                    ??___lomod 0071  
                           __end_of_init_AFE 205C                             __end_of_init_RGB 314C  
                  __end_of_ATmega328_address 38BA                        _beginAFEcommunication 2B4C  
                                     pad@buf 0028                                       ctoa@fp 0030  
                                     dtoa@fp 0030                                       _strlen 31EA  
                                     logf@t1 0124                                       logf@t2 0128  
                                  ??_initWDT 0071                                       logf@dk 0142  
                                     logf@ix 015E                                       fputc@c 0071  
                                     fputs@c 0022                                       fputs@i 0023  
                                     fputs@s 0025                                    ??_isalpha 0073  
                                  ??_isdigit 0073                           __end_of_AFE_UPDATE 33A4  
                         __size_of__Umul8_16 001F                                    ??_islower 0073  
                                  ??_isspace 0073                          _updateVoltages$2091 00B4  
                                     otoa@fp 0030                               ??_readRegister 0079  
                                  ??_isupper 0073                                       stoa@cp 002F  
                                     stoa@fp 0020                                       putch@c 0070  
                           __end_of_vfprintf 3406                                       utoa@fp 0030  
            ??_setCellUndervoltageProtection 0036                             __end_of_snprintf 3296  
                                     xtoa@fp 0030                                    ??_strncmp 0077  
                                  ??_toupper 0020                                   ___flge@ff1 005A  
                                 ___flge@ff2 005E                                 ___xxtofl@arg 0022  
                               ___xxtofl@exp 0021                                 ___xxtofl@val 0071  
                    __end_of__initialization 0070                               ?_read_I2C_data 0071  
                                 ___flneg@f1 005A                             coulomb_counter@i 00B1  
                                 ___fltol@f1 00A8                     ?_setTemperatureLimitsint 0020  
                 __size_of_enableDischarging 0037     setTemperatureLimitsint@minDischarge_degC 0020  
                             __pcstackCOMMON 0070                       ??_send_I2C_controlByte 0075  
                               __pidataBANK3 2800                                 __pidataBANK4 314C  
                              __end_of_fputc 1854                                __end_of_fputs 3374  
                              __end_of_myIsr 001E                                 _cellVoltages 01B4  
                              __end_of_putch 0004                            ??_coulomb_counter 006E  
                                 _batCurrent 01CA                           _RGB_AWAIT_AFE_CONN 332C  
                     updateTemperatures@vtsx 00E9                  __size_of_updateTemperatures 02D9  
                                 _batVoltage 01CE                          ?_RGB_AWAIT_AFE_CONN 0070  
                    __size_of_enableCharging 0037                                   _cellCharge 01A0  
                                    ??_fputc 0075                                      ??_fputs 0020  
                                    ??_myIsr 0070                                      ??_putch 0071  
          setShortCircuitProtection@delay_us 006A                                   __pbssBANK2 0166  
                                 __pbssBANK3 01A0                                   __pbssBANK4 0220  
                       __end_of_EUSART_Write 0808                           __size_of_init_GPIO 003B  
                         __size_of_initClock 0003                           __size_of_init_TMR1 000B  
                        statemachine@success 00EF                            __end_of__Umul8_16 330B  
                                 __pmaintext 3438                         ??_RGB_AWAIT_AFE_CONN 0073  
                       __size_of_internal_16 0009              setShortCircuitProtection@scaler 00A0  
                                    ?___flge 005A                            ?_send_I2C_stopBit 0070  
                                    ?___lmul 0071                                      ?___wmul 0071  
      setTemperatureLimitsint@minCharge_degC 0024                              __CFG_PPS1WAY$ON 0000  
                 ?_setShortCircuitProtection 0066                                   __pintentry 0004  
                     ?_beginAFEcommunication 0020                           ??_send_I2C_stopBit 0071  
                             ___lmul@product 0020                                      ?_strlen 0071  
                    _shuntResistorValue_mOhm 01C2                                    ?___xxtofl 0071  
             setShortCircuitProtection@i_974 00AA                           __size_of_vfpfcnvrt F386  
         __size_of_watchdog_timeout_shutdown 001B                                      _PPSLOCK 0E0F  
                     __size_of_send_I2C_NACK 0009                             ___lomod@dividend 0028  
                            ??_read_I2C_data 0073                       __size_of_send_I2C_data 0009  
                                  ?_init_I2C 0070                                    ?_init_AFE 0070  
                                  ?_init_RGB 0070         __end_of_setCellOvervoltageProtection 2F24  
      __size_of_setCellOvervoltageProtection 00D5                 _setCellOvervoltageProtection 2E4F  
                           ??_updateVoltages 00B1        __end_of_setCellUndervoltageProtection 2138  
     __size_of_setCellUndervoltageProtection 00DC                _setCellUndervoltageProtection 205C  
                   readRegister@recievedData 0079                      ??_setShuntResistorValue 0075  
                    _samsung_cell_max_charge 01E8                           __size_of_vsnprintf 007D  
                       __end_of_readRegister 34D5                                      ___aldiv 28EA  
                                    _adcGain 016E                              __size_of___flge 007C  
                                    ___aodiv 23E6                                      ___fladd 1E1E  
                                    ___aomod 2138                                      ___fldiv 1B00  
                                    ___flneg 3188                              __size_of___lmul 0032  
                                    ___flmul 1023                                      ___flsub 346A  
                                    ___fltol 362A                              __size_of___wmul 001B  
                                    ___lodiv 3784                                      ___lomod 2804  
                                  ?_vfprintf 0061                                    ?_snprintf 00CC  
                                    _cellSOC 01AA                                _messageBuffer 2771  
                                    __ptext1 3296                                      __ptext2 3690  
                                    __ptext3 05FE                                      __ptext4 327B  
                                    __ptext5 286D                                      __ptext6 33D5  
                                    __ptext7 1C7A                                      __ptext8 19A7  
                                    __ptext9 1001                            __end_of_init_GPIO 0843  
                          __end_of_initClock 3147                            __end_of_init_TMR1 31A7  
                            __size_of_strlen 0017                                    _T1CONbits 0018  
                                    _initWDT 2000                                 __size_of_abs 0017  
                               __size_of_pad 0051                                      _isalpha 32B1  
                                    _isdigit 31D3                                   ??___xxtofl 0075  
                           ___aldiv@dividend 0028                                      _islower 322F  
                                    _isspace 07E4    __end_of_setOverCurrentDischargeProtection 26E8  
 __size_of_setOverCurrentDischargeProtection 0115          ??_setOverCurrentDischargeProtection 006C  
         ?_setOverCurrentDischargeProtection 0066            _setOverCurrentDischargeProtection 25D3  
                                    _isupper 3218                                      atoi@neg 0024  
                                    clrloop0 31A8            __end_of_watchdog_timeout_shutdown 32B1  
                                    _strncmp 35D8                                      _toupper 1001  
                       end_of_initialization 0070                                   ??_init_I2C 0071  
                                 ??_init_AFE 007B                                   ??_init_RGB 0071  
                                    fputc@fp 0073                                      fputs@fp 007A  
              ?_setCellOvervoltageProtection 0032                            _EUSART_Initialize 2AA3  
                         ?_EUSART_Initialize 0032                            __end_of_vfpfcnvrt 1000  
                              _send_I2C_NACK 3175                             ___aldiv@quotient 002E  
                 send_I2C_controlByte@RW_bit 0073                                      psplit$0 470092  
                                    psplit$1 920093                                _send_I2C_data 316C  
                                  _RGB_color 330B                                   ??_vfprintf 0066  
                         EUSART_Initialize@x 007A                                   ??_snprintf 006C  
                                    strlen@a 0073                                      strlen@s 0071  
                        ??_EUSART_Initialize 0036                                  ___fladd@grs 006D  
                           __CFG_FOSC$INTOSC 0000                                ___xxtofl@sign 0020  
                                  _TRISAbits 008C                                    _TRISBbits 008D  
                                  _TRISCbits 008E                                    _TRISEbits 0090  
                      __size_of_EUSART_Write 0008                               _enableCharging 34D5  
                          __end_of_vsnprintf 28EA                                  ___fldiv@grs 0054  
                                ___fldiv@rem 004D                 __size_of_printcellParameters 01E6  
              __end_of_SCD_threshold_setting 3AD0                                    _RXPPSbits 0E24  
                          _I2C_writeRegister 32CE                                  ___flmul@grs 0034  
                     _lookupTableSamsung_SOC 3800                    __end_of_EUSART_Initialize 2B4C  
                      __end_of_updateCurrent 2CC4                        _OCD_threshold_setting 399C  
                            _coulomb_counter 2F24                           ?_I2C_writeRegister 0075  
           beginAFEcommunication@commSuccess 002B                               ?_send_I2C_NACK 0070  
                   readRegister@slaveAddress 0075               ?_setCellUndervoltageProtection 0032  
                             ?_send_I2C_data 0071                          ??_I2C_writeRegister 007B  
                                 ?_RGB_color 0071                               __end_of___flge 3784  
                             __end_of___lmul 3438                                  vfpfcnvrt@ap 005A  
                                vfpfcnvrt@cp 00A0                                  vfpfcnvrt@fp 0057  
                                vfpfcnvrt@ll 00A8                               __end_of___wmul 327B  
                                vfpfcnvrt@vp 00B0                               __end_of_ln2_hi 3B1E  
                             __end_of_ln2_lo 3B1A                                 _EUSART_Write 0800  
                I2C_writeRegister@regAddress 0077                setShuntResistorValue@res_mOhm 0071  
                     __end_of_enableCharging 350C             __size_of_setTemperatureLimitsint 0044  
                             __end_of_strlen 3201                          start_initialization 0020  
                            ___lodiv@divisor 0020                              ___lodiv@counter 007A  
                        _thermistorBetaValue 01EA                                  __end_of_Lg1 3B16  
                                __end_of_Lg2 3B12                                  __end_of_Lg3 3B0E  
                                __end_of_Lg4 3B0A                                ?_statemachine 0070  
                                __end_of_abs 3218                                  __end_of_pad 35D8  
                          _minCellTempCharge 01E0                setCellOvervoltageProtection@i 0045  
                       _maxCellTempDischarge 01DA                         updateVoltages@adcVal 00B8  
                       _minCellTempDischarge 01DE                            pnum$text7_split_1 0092  
                          pnum$text7_split_2 0093                    __end_of_I2C_writeRegister 32EC  
     _setOverCurrentDischargeProtection$2090 00A4          setCellOvervoltageProtection@delay_s 0034  
       setCellUndervoltageProtection@delay_s 0034                            _EUSART_Write_Text 3246  
                      __size_of_readRegister 0036                           ?_EUSART_Write_Text 0072  
                    ??_beginAFEcommunication 0022                                  vfprintf@fmt 0063  
                                   ??___flge 0062                                     ??___lmul 0079  
                                   ??___wmul 0075               ??_setCellOvervoltageProtection 0036  
        setCellOvervoltageProtection@ov_trip 0044                                    __Umul8_16 32EC  
                ??_setShortCircuitProtection 006C                                  __pdataBANK3 01E8  
                                __pdataBANK4 0240                          ??_EUSART_Write_Text 0074  
              __size_of_send_I2C_controlByte 000A         setCellUndervoltageProtection@uv_trip 0044  
                 __end_of_updateTemperatures 1800                                     ??_strlen 0073  
                                  ___fladd@a 005E                                    ___fladd@b 005A  
                               vsnprintf@cnt 00C4                                 vsnprintf@fmt 00BF  
                                  ___fldiv@a 0040                                    ___fldiv@b 0044  
                                __pbssBIGRAM 2771                              ?_enableCharging 0020  
                       enableCharging@enable 0020                                    _adcOffset 016C  
                                  ___flmul@a 002A                                    ___flmul@b 0026  
                                __pbssCOMMON 007C                                    ___flsub@a 00A0  
                                  ___flsub@b 00A4                               ??_statemachine 0162  
                                  ___latbits 0003             send_I2C_controlByte@BlockAddress 0071  
                                 myIsr@count 01E2                                __pcstackBANK0 0020  
                              __pcstackBANK1 00A0                                __pcstackBANK2 0120  
                           ___aodiv@dividend 0028                    __size_of_send_I2C_stopBit 0008  
                                snprintf@fmt 00D0                            __size_of___xxtofl 0096  
                               _readRegister 349F                      __end_of_coulomb_counter 3000  
   setTemperatureLimitsint@maxDischarge_degC 0022                        updateTemperatures@tmp 00E3  
                      updateTemperatures@rts 00EB                    __end_of_EUSART_Write_Text 3260  
                         calibrate_BATTSOC@i 00B6                           calibrate_BATTSOC@j 00B8  
                 __size_of_EUSART_Initialize 00A9                                ??_internal_16 0071  
                                  _atoi$1713 0026                                    _atoi$1714 002A  
                                  _atoi$1715 0028                             _OV_delay_setting 3AEE  
                          __size_of_init_I2C 0010                        I2C_writeRegister@data 0079  
                            ??_send_I2C_NACK 0071                            __size_of_init_AFE 0056  
                          __size_of_init_RGB 0005                            _send_I2C_startBit 3153  
                                  _dtoa$1262 003D                              ??_send_I2C_data 0073  
                __size_of_RGB_AWAIT_AFE_CONN 0022               __size_of_setShuntResistorValue 000A  
                                   ?___aldiv 0024                                     ?___aodiv 0020  
                         ?_send_I2C_startBit 0070                                     ?___fladd 005A  
              __end_of_setShuntResistorValue 319C                                     ?___aomod 0020  
                                   ?___fldiv 0040                                     ?___flneg 005A  
                           ___aodiv@quotient 0074                                     ?___flmul 0026  
                                   ?___flsub 00A0                                     ?___fltol 00A8  
                                   ?___lodiv 0020                                     ?___lomod 0020  
                                ??_RGB_color 0073                                   ?__Umul8_16 0071  
                  EUSART_Initialize@baudrate 0032                                    _logf$2103 0152  
                                  _logf$2104 012C                                    _logf$2105 0130  
                                  _logf$2106 0134                                    _logf$2107 0138  
                          __size_of_vfprintf 0031                          ??_send_I2C_startBit 0071  
                          __size_of_snprintf 001B                              ___lomod@divisor 0020  
                                   ?_initWDT 0070                              ___lomod@counter 0072  
                                   ?_isalpha 0071                                     ?_isdigit 0071  
                                   ?_islower 0071                                     ?_isspace 0071  
                                  _init_GPIO 0808                                     ?_isupper 0071  
                                  _initClock 3144                                    _init_TMR1 319C  
                                  _currState 01E7                    _setShortCircuitProtection 26E8  
                 __size_of_I2C_writeRegister 001E                               __size_of_fputc 0054  
                             __size_of_fputs 0026                               __size_of_myIsr 001A  
                                   ?_strncmp 0071                                     ?_toupper 0077  
                             __size_of_putch 0001                              ___aldiv@divisor 0024  
                      __end_of_read_I2C_data 31D3                              ___aldiv@counter 002C  
                             ___wmul@product 0075                                     _LATAbits 010C  
                                   _LATEbits 0110                    __end_of_send_I2C_startBit 315B  
                                  clear_ram0 31A7                                    _tmr1_flag 01E3  
                                   _PIE1bits 0091           setOverCurrentDischargeProtection@i 00A8  
                                   _PIR1bits 0011                   setShortCircuitProtection@i 00A8  
                        __end_of_internal_16 316C                          _printcellParameters 05FE  
                                  _vfpfcnvrt 1C7A                                    _xtoa$1298 0043  
                                  _xtoa$1299 0045                            ___wmul@multiplier 0071  
                    _setTemperatureLimitsint 3543                                   ?_init_GPIO 0070  
                                 ?_initClock 0070                                   ?_init_TMR1 0070  
                               _isspace$1740 0075                        send_I2C_data@databyte 0071  
                                 vfpfcnvrt@c 00B2                            ___lmul@multiplier 0071  
                       ?_printcellParameters 0070                             ?_coulomb_counter 0070  
                      _temperatureThermistor 01C6                   __size_of_EUSART_Write_Text 001A  
                 ?_watchdog_timeout_shutdown 0070                                    _vsnprintf 286D  
                                 _AFE_UPDATE 3374                            _OCD_delay_setting 3AB0  
                       __end_of_statemachine 3708                                   vfprintf@ap 0065  
                                 vfprintf@fp 0061                                  ??__Umul8_16 0073  
                           __size_of___aldiv 0082                             __size_of___aodiv 00F3  
                           __size_of___fladd 01E2                      __size_of_updateVoltages 02D8  
                           __size_of___aomod 00DC                             __size_of___fldiv 017A  
                           __size_of___flneg 000A               _setShortCircuitProtection$2089 00A4  
                                vsnprintf@ap 00C1                             __size_of___flmul 022C  
                           __size_of___flsub 0035                             __size_of___fltol 0066  
                     readRegister@regAddress 0077                             __size_of___lodiv 007C  
                           __size_of___lomod 0069                                   ?_vfpfcnvrt 0057  
                                 snprintf@ap 006F                              ___aodiv@divisor 0020  
                            ___aodiv@counter 0072                                   _ANSELBbits 018D  
                                 _ANSELCbits 018E                                     ___xxtofl 296C  
setOverCurrentDischargeProtection@current_mA 0066                             __size_of_initWDT 0006  
                           __size_of_isalpha 001D                             __size_of_isdigit 0017  
             __end_of_lookupTableSamsung_SOC 385C                             _send_I2C_stopBit 315B  
                           __size_of_islower 0017                             __size_of_isspace 001C  
                                   __ptext10 322F                                     __ptext11 3218  
                                   __ptext20 3201                                     __ptext12 32B1  
                                   __ptext21 2138                                     __ptext13 2214  
                                   __ptext30 07E4                                     __ptext22 23E6  
                                   __ptext14 2804                                     __ptext31 31D3  
                                   __ptext23 33A4                                     __ptext15 3784  
                                   __ptext40 3708                                     __ptext32 3246  
                                   __ptext24 3587                                     __ptext16 35D8  
                                   __ptext41 205C                                     __ptext33 0800  
                                   __ptext25 31EA                                     __ptext17 2CC4  
                                   __ptext50 0074                                     __ptext42 2E4F  
                                   __ptext34 2006                                     __ptext26 334E  
                                   __ptext18 22F5                                     __ptext51 2C00  
                                   __ptext43 2B4C                                     __ptext35 3543  
                                   __ptext27 1800                                     __ptext19 1854  
                                   __ptext60 3153                                     __ptext52 3188  
                                   __ptext44 332C                                     __ptext36 3260  
                                   __ptext28 0003                                     __ptext61 316C  
                                   __ptext53 350C                                     __ptext45 330B  
                                   __ptext37 3192                                     __ptext29 2A02  
                                   __ptext70 32EC                                     __ptext62 317E  
                                   __ptext54 34D5                                     __ptext46 3374  
                                   __ptext38 26E8                                     __ptext71 1B00  
                                   __ptext63 2F24                                     __ptext55 349F  
                                   __ptext47 124F                                     __ptext39 25D3  
                                   __ptext80 28EA                                     __ptext72 319C  
                                   __ptext64 346A                                     __ptext56 3175  
                                   __ptext48 3406                                     __ptext73 3147  
                                   __ptext65 1E1E                                     __ptext57 31C3  
                                   __ptext49 1527                                     __ptext74 31B3  
                                   __ptext66 2D89                                     __ptext58 32CE  
                                   __ptext75 0808                                     __ptext67 296C  
                                   __ptext59 315B                                     __ptext76 2000  
                                   __ptext68 362A                                     __ptext77 3144  
                                   __ptext69 1023                                     __ptext78 3163  
                                   __ptext79 2AA3                             __size_of_isupper 0017  
                      ??_printcellParameters 007C               setCellUndervoltageProtection@i 0045  
                  __end_of_OCD_delay_setting 3AC0                             __size_of_strncmp 0052  
                           __size_of_toupper 0022                                   ?_vsnprintf 00BB  
                        updateCurrent@adcVal 00B5                                     _init_I2C 31B3  
                                   _init_AFE 2006                                     _init_RGB 3147  
                              __size_of_atoi 00A1                                __size_of_ctoa 0031  
                              __size_of_main 0032                                __size_of_dtoa 0153  
                              _SSPDATPPSbits 0E21                                    pnum$text7 0047  
                              __size_of_logf 058A                                __size_of_otoa 00F1  
                      _SCD_threshold_setting 3AC0                                __size_of_stoa 00C5  
                              __size_of_utoa 00E1                   __size_of_send_I2C_startBit 0008  
                              __size_of_xtoa 0159                                  _internal_16 3163  
                                 _RB2PPSbits 0E9A                                   _RC1STAbits 019D  
                                  stoa@F1152 0240                                   _RC4PPSbits 0EA4  
             __size_of_beginAFEcommunication 00B4                                _SSPCLKPPSbits 0E20  
              __end_of_beginAFEcommunication 2C00                                     int$flags 007E  
                                 _RC5PPSbits 0EA5                                     _protect1 01E6  
                                   _protect2 01E5                                     _protect3 01E4  
                  ??_setTemperatureLimitsint 0077                                     _vfprintf 33D5  
                           ??_enableCharging 0022                                     _snprintf 327B  
                           ___aomod@dividend 0028                                     logf@F469 01BE  
                     __size_of_updateCurrent 00C4    setOverCurrentDischargeProtection@delay_ms 006A  
                   __end_of_OV_delay_setting 3AF6                               _vfpfcnvrt$1313 00A4  
                             _vfpfcnvrt$1314 00A6                                   _INTCONbits 000B  
                                ??_init_GPIO 0071                                  ??_initClock 0071  
                                ??_init_TMR1 0071                                     logf@hfsq 013E  
                             __pstringtext10 3B0A                               __pstringtext11 3B0E  
                             __pstringtext20 39BC                               __pstringtext12 3B12  
                             __pstringtext21 39D2                               __pstringtext13 3B16  
                             __pstringtext30 3A8C                               __pstringtext22 39E8  
                             __pstringtext14 3B1A                               __pstringtext31 3A9E  
                             __pstringtext23 39FD                               __pstringtext15 38B8  
                             __pstringtext40 3B36                               __pstringtext32 3AD0  
                             __pstringtext24 3A12                               __pstringtext16 3901  
                             __pstringtext41 3B3A                               __pstringtext33 3ADF  
                             __pstringtext25 3A27                               __pstringtext17 3929  
                             __pstringtext42 3B3D                               __pstringtext34 3B1E  
                             __pstringtext26 3A3C                               __pstringtext18 3951  
                             __pstringtext43 3B40                               __pstringtext35 3B22  
                             __pstringtext27 3A51                               __pstringtext19 3977  
                             __pstringtext44 3B43                               __pstringtext36 3B26  
                             __pstringtext28 3A65                               __pstringtext45 3B46  
                             __pstringtext37 3B2A                               __pstringtext29 3A79  
                             __pstringtext46 3B49                               __pstringtext38 3B2E  
                             __pstringtext47 3B4C                               __pstringtext39 3B32  
                             __pstringtext48 0000                                     isalpha@c 0071  
                                   isdigit@c 0071                                   vsnprintf@f 00C6  
                                 vsnprintf@n 00BD                                   vsnprintf@s 00BB  
                         _updateTemperatures 1527                             _UV_delay_setting 3AF6  
                                  snprintf@n 00CE                                    snprintf@s 00CC  
               __end_of_send_I2C_controlByte 3188                                     intlevel1 0000  
        setShortCircuitProtection@current_mA 0066                                     islower@c 0071  
                                ?_AFE_UPDATE 0070                                     isspace@c 0071  
                        ?_updateTemperatures 0070                            __CFG_CLKOUTEN$OFF 0000  
                                _PPSLOCKbits 0E0F                                     isupper@c 0071  
         __size_of_setShortCircuitProtection 0118                                    strncmp@_l 0071  
                                  strncmp@_r 0073                            _maxCellTempCharge 01DC  
                            ___aomod@divisor 0020                                  ??_vfpfcnvrt 005B  
                                   stoa@nuls 0024                              ___aomod@counter 0072  
                              __pstringtext1 3800                                __pstringtext2 385C  
                              __pstringtext3 399C                                __pstringtext4 3AB0  
                              __pstringtext5 3AC0                                __pstringtext6 3AEE  
                              __pstringtext7 3AF6                                __pstringtext8 3AFE  
                              __pstringtext9 3B06                         ??_updateTemperatures 00B4  
                     __Umul8_16@multiplicand 0071                               _vsnprintf$1885 00C2  
                                   strncmp@l 0078                                     strncmp@n 0075  
                                   strncmp@r 007A                                     toupper@c 0077  
                      EUSART_Write_Text@text 0072                                 ___aldiv@sign 002D  
                                _SSPCON2bits 0216                                   _WDTCONbits 0097  
                              ___fladd@signs 006A              __end_of_setTemperatureLimitsint 3587  
                         EUSART_Write@txData 0071                                 ___aodiv@sign 0073  
    setOverCurrentDischargeProtection@scaler 00A0                                  ??_vsnprintf 006A  
                    _updateTemperatures$2100 00D7                      _updateTemperatures$2101 00DB  
                    _updateTemperatures$2102 00DF                      _updateTemperatures$2092 00B7  
                    _updateTemperatures$2093 00BB                      _updateTemperatures$2094 00BF  
                    _updateTemperatures$2095 00C3                      _updateTemperatures$2096 00C7  
                    _updateTemperatures$2097 00CB                      _updateTemperatures$2098 00CF  
                    _updateTemperatures$2099 00D3                                 ___fladd@aexp 006B  
                               ___fladd@bexp 006C                        __size_of_statemachine 0078  
                                 _STATUSbits 0003                                  _toggleColor 007C  
                       __Umul8_16@multiplier 0079                                _updateCurrent 2C00  
                                 _SSPCONbits 0215                   __end_of_RGB_AWAIT_AFE_CONN 334E  
                               ___aomod@sign 0073                           EUSART_Write_Text@i 0075  
                      __end_of_send_I2C_NACK 317E                            __Umul8_16@product 0075  
                          _calibrate_BATTSOC 2D89  
